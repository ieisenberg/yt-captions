[
  {
    "start": "0",
    "end": "25000"
  },
  {
    "text": "thank you very much everyone for coming um this is the the second time this is i've delivered this it's a brand new",
    "start": "1040",
    "end": "6640"
  },
  {
    "text": "talk and it's a talk of two halves so the first half is about security technologies",
    "start": "6640",
    "end": "13599"
  },
  {
    "text": "built into modern web browsers and how i built a really like big problem with the sheer quantity of data",
    "start": "13599",
    "end": "19920"
  },
  {
    "text": "that we work with and the second half of the talk is how i solve that problem so",
    "start": "19920",
    "end": "25439"
  },
  {
    "start": "25000",
    "end": "110000"
  },
  {
    "text": "the problem came from one of my projects so i started this as a side project just a little bit of fun i started building",
    "start": "25439",
    "end": "31920"
  },
  {
    "text": "it in around 2013-14 and it ingests telemetry from web",
    "start": "31920",
    "end": "37440"
  },
  {
    "text": "browsers so report uri is the service and built into all modern web browsers now you can ask for the browser to send",
    "start": "37440",
    "end": "44640"
  },
  {
    "text": "you telemetry back to a nominated location you could send it to yourself to your own domain or we operate the service on your behalf",
    "start": "44640",
    "end": "51120"
  },
  {
    "text": "and this could be telemetry about security events or security related events this can be about performance",
    "start": "51120",
    "end": "56239"
  },
  {
    "text": "about availability there's all of these native mechanisms built into the browser and you can turn them on and say when",
    "start": "56239",
    "end": "62079"
  },
  {
    "text": "something happens please send the telemetry data here and that is what we do we ingest this",
    "start": "62079",
    "end": "67840"
  },
  {
    "text": "data we make like graphs and dashboards and things now one of the most common things that people use us for",
    "start": "67840",
    "end": "74560"
  },
  {
    "text": "is to mitigate a quite nasty attack called cross-site scripting so we heard jim in the keynote this morning talk",
    "start": "74560",
    "end": "81040"
  },
  {
    "text": "about cross-site scripting i was in phillips talking here earlier also talking about cross-site scripting and",
    "start": "81040",
    "end": "86560"
  },
  {
    "text": "of course like the number one protection that philip talked about output sanitization right like we should be taking care of",
    "start": "86560",
    "end": "93360"
  },
  {
    "text": "cross-site scripting by properly encoding all of our outputs but in security we should practice",
    "start": "93360",
    "end": "99600"
  },
  {
    "text": "something called defense in depth which is having more than one protection for a given problem if our primary line of",
    "start": "99600",
    "end": "105759"
  },
  {
    "text": "defense fails us we have a second line of defense that can save us now a cross-site scripting attack",
    "start": "105759",
    "end": "113200"
  },
  {
    "start": "110000",
    "end": "193000"
  },
  {
    "text": "might look something like this right it's a very simplified example but somebody finds a way to inject a script",
    "start": "113200",
    "end": "119200"
  },
  {
    "text": "tag into your application now if i look at this",
    "start": "119200",
    "end": "124560"
  },
  {
    "text": "right the domain evil.com probably don't want this the file name you know this is",
    "start": "124560",
    "end": "129679"
  },
  {
    "text": "going to do not good things when it gets into the page because i have like this extra context",
    "start": "129679",
    "end": "134800"
  },
  {
    "text": "right the browser doesn't have that the browser looks at this and if it makes it into the page it's like",
    "start": "134800",
    "end": "140319"
  },
  {
    "text": "yep you know that's syntactically valid i'm going to like pull in this asset i'm going to execute the javascript and now",
    "start": "140319",
    "end": "146480"
  },
  {
    "text": "all of the things that you type into the website are probably going to be like you know ajax stuff somewhere in the background and it's going to steal your",
    "start": "146480",
    "end": "152000"
  },
  {
    "text": "username your password credit card data whatever you type into the page will be gone",
    "start": "152000",
    "end": "158239"
  },
  {
    "text": "now cross-site scripting again as we saw with both jim and philip's talk has been an increasingly common problem",
    "start": "158239",
    "end": "165519"
  },
  {
    "text": "over the years and you know original kind of attacks might have been defacements we can do funny",
    "start": "165519",
    "end": "171599"
  },
  {
    "text": "things if we get javascript into your application but then cyber criminals come along and they",
    "start": "171599",
    "end": "176800"
  },
  {
    "text": "don't want to do funny things they don't want to you know just deface your application or do something annoying",
    "start": "176800",
    "end": "181840"
  },
  {
    "text": "they want to make money right cyber criminals like just your garden variety thief but in the cyber world online they",
    "start": "181840",
    "end": "188959"
  },
  {
    "text": "just want to make money just the same this is what motivates them and we've seen a selection of fairly prominent",
    "start": "188959",
    "end": "195599"
  },
  {
    "start": "193000",
    "end": "331000"
  },
  {
    "text": "groups and kind of collectives over the years now coinhive",
    "start": "195599",
    "end": "201280"
  },
  {
    "text": "fortunately coinhive no longer operates but coinhive was a group a collective of people no one really knows because these",
    "start": "201280",
    "end": "207599"
  },
  {
    "text": "people often don't get caught but what they would do is they would abuse this kind of",
    "start": "207599",
    "end": "213519"
  },
  {
    "text": "genuine product so coinhive was it was proposed as like a genuine thing",
    "start": "213519",
    "end": "220159"
  },
  {
    "text": "and what they would say was is like you know you've got your website you want to monetize your traffic people put paid advertisements on their website right",
    "start": "220159",
    "end": "226560"
  },
  {
    "text": "and they're really bad for performance there's all of the valid privacy concerns around loading third-party",
    "start": "226560",
    "end": "231760"
  },
  {
    "text": "advertisements and tracking and things like this so coinhive built this product and they were like hey what you could do",
    "start": "231760",
    "end": "238480"
  },
  {
    "text": "when you come to my website i'm just going to run this little this little place this little piece of javascript in the background and what it's going to do",
    "start": "238480",
    "end": "243680"
  },
  {
    "text": "is it's just going to mine a little bit of cryptocurrency monero right so you go to my website you load the page my",
    "start": "243680",
    "end": "249920"
  },
  {
    "text": "javascript goes into your browser and whilst you're reading my you know blog post news article whatever i'm just",
    "start": "249920",
    "end": "255760"
  },
  {
    "text": "borrowing some of your cpu right and you're going to pay me a few cents in monero then i don't have to subject you to",
    "start": "255760",
    "end": "261919"
  },
  {
    "text": "adverts and tracking and privacy invasive performance things and it was you know this was the idea",
    "start": "261919",
    "end": "268080"
  },
  {
    "text": "and how what the attackers realized was well hey like if we just grab this library",
    "start": "268080",
    "end": "273440"
  },
  {
    "text": "and i can stick it in like all of your websites then all of your visitors will be mining",
    "start": "273440",
    "end": "279120"
  },
  {
    "text": "the monero but sending it to me and this became known as cryptojacking right it's like if i can get my",
    "start": "279120",
    "end": "284400"
  },
  {
    "text": "javascript into enough people's websites and those websites have enough visitors",
    "start": "284400",
    "end": "289440"
  },
  {
    "text": "i can just like watch the monero roll in now cryptojacking",
    "start": "289440",
    "end": "294960"
  },
  {
    "text": "kind of came as a trend and it was like very very popular like especially like 2015 to 18 kind of time and then just",
    "start": "294960",
    "end": "302320"
  },
  {
    "text": "fell off because they were making so much money right like you can't make so much money",
    "start": "302320",
    "end": "307360"
  },
  {
    "text": "mining monero with a cpu which is terrible in javascript so it was like okay this works",
    "start": "307360",
    "end": "313919"
  },
  {
    "text": "but if you've got the ability to inject arbitrary javascript into someone's application and you want to make money you're going to look for like what thing",
    "start": "313919",
    "end": "320479"
  },
  {
    "text": "can i do that makes the most money and crypto jacking was great but it didn't make enough money and it",
    "start": "320479",
    "end": "326320"
  },
  {
    "text": "quickly fell out of favor and we saw something else fill the gap",
    "start": "326320",
    "end": "331520"
  },
  {
    "start": "331000",
    "end": "464000"
  },
  {
    "text": "and this was a still ongoing threat to this day and again we don't",
    "start": "331520",
    "end": "336560"
  },
  {
    "text": "really know who these people are we refer to them as mage carts and what they do",
    "start": "336560",
    "end": "341840"
  },
  {
    "text": "when they find the ability to somehow get that hostile javascript into your application they just have a tiny little key logger",
    "start": "341840",
    "end": "349520"
  },
  {
    "text": "and there's a couple of different variants that the different groups use but they all work in basically the same way they go onto the page and they're",
    "start": "349520",
    "end": "355520"
  },
  {
    "text": "either looking at key press events and ajaxing out the back or they look for a form submission and when they do they",
    "start": "355520",
    "end": "361280"
  },
  {
    "text": "grab all the text elements on the page and ajax the whole set out the back now the other thing that it has is a",
    "start": "361280",
    "end": "367280"
  },
  {
    "text": "little basic regex and they always run a regex against the url for the current page and as long as they can find a",
    "start": "367280",
    "end": "372639"
  },
  {
    "text": "substring match for cart checkout payment something like that",
    "start": "372639",
    "end": "377840"
  },
  {
    "text": "they're like oh our javascript's running on a payment page what types of information do people type into payment pages",
    "start": "377840",
    "end": "384240"
  },
  {
    "text": "name address 16 digit card number three digit security code expiry date",
    "start": "384240",
    "end": "389759"
  },
  {
    "text": "so now instead of making their you know two us dollars a day with uh monero they're",
    "start": "389759",
    "end": "395759"
  },
  {
    "text": "like hey if we can grab credit card details off a payment form and what they do they sit on it for like",
    "start": "395759",
    "end": "401199"
  },
  {
    "text": "one week two weeks nobody's noticed them they keep collecting them because the payment form still works right like i go",
    "start": "401199",
    "end": "406720"
  },
  {
    "text": "to the e-commerce site i buy the thing the thing comes in the post they just took a silent copy of my card data and",
    "start": "406720",
    "end": "412720"
  },
  {
    "text": "once they go for as long as they can without being noticed they're like okay we've got like 50 000 credit cards right now let's hit them all with a hundred",
    "start": "412720",
    "end": "419440"
  },
  {
    "text": "dollars you take 50 000 credit cards charge them a hundred dollars big money right we're not talking couple",
    "start": "419440",
    "end": "425680"
  },
  {
    "text": "dollars a day in monero we're talking real hard cash",
    "start": "425680",
    "end": "430880"
  },
  {
    "text": "now this is all falls under the category of cross-site scripting we've got some",
    "start": "430880",
    "end": "436560"
  },
  {
    "text": "hostile javascript in our application that shouldn't be there and if we're talking about traditional",
    "start": "436560",
    "end": "442160"
  },
  {
    "text": "like reflected or like what philip showed before persistent cross-site scripting",
    "start": "442160",
    "end": "447280"
  },
  {
    "text": "output encoding is the way to solve that but sometimes people get screwed by their third-party dependencies right if",
    "start": "447280",
    "end": "452720"
  },
  {
    "text": "your third-party dependency suddenly gets some like extra bits of javascript at the bottom that are a key logger they're still going to load",
    "start": "452720",
    "end": "459759"
  },
  {
    "text": "because it's not coming through your application it's coming through a dependency so we have this second line of defense",
    "start": "459759",
    "end": "466800"
  },
  {
    "text": "that we can use to try and protect ourselves now content security policy csp is a",
    "start": "466800",
    "end": "473840"
  },
  {
    "text": "hugely powerful mechanism and one of the most dangerous attacks that you can neutralize with csp is",
    "start": "473840",
    "end": "479440"
  },
  {
    "text": "cross-site scripting so if you ever hear about someone talking about csp and i do this too they're usually always talking",
    "start": "479440",
    "end": "486560"
  },
  {
    "text": "about cross-site scripting because it's the most dangerous thing that you can neutralize so csp kind of became known as like the anti-cross-site scripting",
    "start": "486560",
    "end": "493120"
  },
  {
    "text": "defense mechanism but it does so much more right if you look at it and think cross-site scripting",
    "start": "493120",
    "end": "498400"
  },
  {
    "text": "that's like one of 10 things it can do for you so if you do have a look at it go deeper there's more it can do",
    "start": "498400",
    "end": "503840"
  },
  {
    "text": "but the idea of content security policy is you have this basic http response",
    "start": "503840",
    "end": "508960"
  },
  {
    "text": "header right so just like your normal response headers that you've got in your application you can see we just add a new http",
    "start": "508960",
    "end": "515120"
  },
  {
    "text": "response header called content security policy and as you can kind of guess by the name this is going to be a security",
    "start": "515120",
    "end": "520399"
  },
  {
    "text": "policy around the content on our site so what csp allows you to do is control",
    "start": "520399",
    "end": "526080"
  },
  {
    "text": "what should my page do right like where do i load assets from where do i send data to like what's supposed to happen",
    "start": "526080",
    "end": "532800"
  },
  {
    "text": "and then when something happens that isn't supposed to the browser can be like oh hey like according to the security policy like this this shouldn't",
    "start": "532800",
    "end": "539360"
  },
  {
    "text": "be happening so the most powerful type of content that people like to control with csp is",
    "start": "539360",
    "end": "545519"
  },
  {
    "text": "javascript because it's the most type of it's the most dangerous type of content that we load so if you look at how we",
    "start": "545519",
    "end": "551200"
  },
  {
    "start": "549000",
    "end": "844000"
  },
  {
    "text": "control javascript with content security policy csp has a wide selection of",
    "start": "551200",
    "end": "556959"
  },
  {
    "text": "directives that we can use to to kind of assert our control over that",
    "start": "556959",
    "end": "563120"
  },
  {
    "text": "particular type of content so we have the script source directive here so i define the header and i say script",
    "start": "563120",
    "end": "569040"
  },
  {
    "text": "source and what i'm telling the browser is like where should i be loading javascript from now self means match the",
    "start": "569040",
    "end": "574399"
  },
  {
    "text": "current origin of the page so if i'm on my personal site like scotthelm.com it means you can also load javascript from",
    "start": "574399",
    "end": "581200"
  },
  {
    "text": "that origin and then i'm also let's say i pull jquery from the jquery cdn",
    "start": "581200",
    "end": "587200"
  },
  {
    "text": "now if the browser loads the page and we come across the script tag that we just looked at earlier that said evil.com the browser's gonna be like you",
    "start": "587200",
    "end": "594320"
  },
  {
    "text": "know going through pausing the page and it's like right we've got a script tag source attributeevil.com",
    "start": "594320",
    "end": "599360"
  },
  {
    "text": "it's not there it's not going to load so that script tag will get thrown out the window",
    "start": "599360",
    "end": "604480"
  },
  {
    "text": "it's not supposed to happen so it won't happen now this is a hugely powerful protection",
    "start": "604480",
    "end": "610079"
  },
  {
    "text": "when you tell the browser this is what should happen on my site as soon as something outside of what should happen",
    "start": "610079",
    "end": "616560"
  },
  {
    "text": "actually happens the browser will just stop it and like i say it's not just about loading javascript you can control",
    "start": "616560",
    "end": "624240"
  },
  {
    "text": "everything on the page with csp so we've got the default source here i generally say like it's you know as my",
    "start": "624240",
    "end": "630480"
  },
  {
    "text": "default position i can load stuff from myself right you should trust yourself if you don't there are things that i",
    "start": "630480",
    "end": "636240"
  },
  {
    "text": "can't help you with and then we take a look at things like the script source right so where am i going to load javascript from we've got the style",
    "start": "636240",
    "end": "642399"
  },
  {
    "text": "source style sheets image source for images so things like child source",
    "start": "642399",
    "end": "647600"
  },
  {
    "text": "is like iframes so this is a really powerful control for us at report your eye we do payment card processing for",
    "start": "647600",
    "end": "653920"
  },
  {
    "text": "subscriptions so on our payment page there's only one iframe we should load and it's our",
    "start": "653920",
    "end": "658959"
  },
  {
    "text": "actual payment iframe from stripe so if you go look at our payment page we are like there should only be one iframe",
    "start": "658959",
    "end": "664160"
  },
  {
    "text": "here and it's stripe.com and if it's someone else something has gone really badly wrong",
    "start": "664160",
    "end": "669680"
  },
  {
    "text": "but content security policy again is looked at and people think oh well we can control like where stuff loads from",
    "start": "669680",
    "end": "676800"
  },
  {
    "text": "but it's not just where stuff loads from you can also control where can stuff go",
    "start": "676800",
    "end": "682959"
  },
  {
    "text": "so we have things there are other directors like connect source so if that little piece of javascript somehow gets",
    "start": "682959",
    "end": "688399"
  },
  {
    "text": "onto my page and it's trying to ajax that data out the back or you've also got form action maybe they build the",
    "start": "688399",
    "end": "694240"
  },
  {
    "text": "form and try and submit it with a post to some third-party location the browser will check against this and",
    "start": "694240",
    "end": "699279"
  },
  {
    "text": "say okay well this javascript is running on the page it got here somehow but this page is only allowed to send",
    "start": "699279",
    "end": "706240"
  },
  {
    "text": "data to this location or that location so if this javascript suddenly starts trying to skim your visitors credit card",
    "start": "706240",
    "end": "713200"
  },
  {
    "text": "data it can read it it can access it it can grab it and then it goes to fire the post and csp is like no",
    "start": "713200",
    "end": "720160"
  },
  {
    "text": "that's not supposed to happen it's not supposed to go there so",
    "start": "720160",
    "end": "725200"
  },
  {
    "text": "this is such a powerful mechanism it can be a little bit tricky like the biggest",
    "start": "725200",
    "end": "730800"
  },
  {
    "text": "problem with csp usually is listing all of your third-party dependencies because most of the times i speak to people i'm like hey where do you learn javascript",
    "start": "730800",
    "end": "736959"
  },
  {
    "text": "from and they're like well i don't know look at all the script tags because there's no controls over this so",
    "start": "736959",
    "end": "742079"
  },
  {
    "text": "far so you define the policy you send this policy to the browser and let's say you",
    "start": "742079",
    "end": "748000"
  },
  {
    "text": "get hit with mage cart right so you you've somehow ended up with a piece of javascript on your site",
    "start": "748000",
    "end": "754000"
  },
  {
    "text": "that's not supposed to be there your user goes to the payment page they type in their card number",
    "start": "754000",
    "end": "760000"
  },
  {
    "text": "and something in this policy is going to stop it either the script source is going to catch the script coming in the",
    "start": "760000",
    "end": "766079"
  },
  {
    "text": "hostile script or something like connect source is going to stop the data going out so we've i mean in the case of magekart",
    "start": "766079",
    "end": "772560"
  },
  {
    "text": "we've just prevented like a pretty serious data breach some of the big companies that have been hit by mage cart recently ticketmaster british",
    "start": "772560",
    "end": "778959"
  },
  {
    "text": "airways are the most notable ones for me in the uk just the british regulator",
    "start": "778959",
    "end": "784160"
  },
  {
    "text": "has fined ticketmaster for losing all of people's names and addresses and credit card data millions of pounds the",
    "start": "784160",
    "end": "789519"
  },
  {
    "text": "american regulators are also finding them then the payment card industry who's like visa and mastercard",
    "start": "789519",
    "end": "795519"
  },
  {
    "text": "because they have to reissue all of those customers cards that's really expensive so then visa come along and",
    "start": "795519",
    "end": "800639"
  },
  {
    "text": "they're like hey we had to reissue all of these cards and that cost like 500 000 so you're gonna pay for this",
    "start": "800639",
    "end": "806160"
  },
  {
    "text": "right so just because they had like two lines of javascript on their payment page they're getting like millions and millions and millions of dollars in",
    "start": "806160",
    "end": "812320"
  },
  {
    "text": "fines and things coming in and it could have all been stopped with a single http response header",
    "start": "812320",
    "end": "819600"
  },
  {
    "text": "now the good thing about having the csp in place is that it will stop the attack but if i'm sat here on my website i",
    "start": "819600",
    "end": "825839"
  },
  {
    "text": "presume i don't know i have hostile javascript on the payment page right the page has gone to your browser and your",
    "start": "825839",
    "end": "831120"
  },
  {
    "text": "browser has just taken defensive measures it stopped the attack",
    "start": "831120",
    "end": "836240"
  },
  {
    "text": "but i don't know that do i right because that's just happening like your browser and your browser and your browser what i need is for you to tell me that",
    "start": "836240",
    "end": "843360"
  },
  {
    "text": "happened and this is where the reporting mechanism in content security policy comes in because one of the last",
    "start": "843360",
    "end": "849680"
  },
  {
    "start": "844000",
    "end": "1055000"
  },
  {
    "text": "directives that you should look at is the report uri directive this is where i shamelessly store the name of the",
    "start": "849680",
    "end": "854880"
  },
  {
    "text": "service from because i'm terrible at naming things so we just call the service report uri because that's what the thing in csp is called",
    "start": "854880",
    "end": "861199"
  },
  {
    "text": "so what you do with the report uri is you specify a url where you want the browser to send",
    "start": "861199",
    "end": "867199"
  },
  {
    "text": "information when something goes wrong so as you can see here you register with us you get a vanity",
    "start": "867199",
    "end": "872959"
  },
  {
    "text": "you get a vanity subdomain and what you're saying is look when there is a problem when you have to",
    "start": "872959",
    "end": "878560"
  },
  {
    "text": "take some kind of defensive measure i want you to send the information here so that somebody actually knows that",
    "start": "878560",
    "end": "884160"
  },
  {
    "text": "that's just happened now we call this violation reporting in",
    "start": "884160",
    "end": "889600"
  },
  {
    "text": "csp and what the browser does is it fires a http post out of the back when the violation",
    "start": "889600",
    "end": "896000"
  },
  {
    "text": "happens and the http post goes to the reporting point now the post has a json payload we've",
    "start": "896000",
    "end": "902240"
  },
  {
    "text": "got a bit of a snippet from the top of one here and you can kind of see you know exactly what's happening here right",
    "start": "902240",
    "end": "907519"
  },
  {
    "text": "as i said there's loads of different types of telemetry like this the browser can send so this one says hey this is a piece of telemetry it's a csp report",
    "start": "907519",
    "end": "914240"
  },
  {
    "text": "right there's loads of other things you can check them out later right now we're looking at csp so here's a csp report i",
    "start": "914240",
    "end": "920800"
  },
  {
    "text": "was on this page and something on the page violated the script source directive and the browser will also give",
    "start": "920800",
    "end": "926959"
  },
  {
    "text": "you a copy of the original policy to say look this is what i was working with and this is what happened",
    "start": "926959",
    "end": "932160"
  },
  {
    "text": "and then the final thing is what did i block like what's on the page that shouldn't be there",
    "start": "932160",
    "end": "938399"
  },
  {
    "text": "in this case it's the script tag that we were looking at earlier that we definitely don't want so now",
    "start": "938399",
    "end": "944240"
  },
  {
    "text": "just like before this piece of javascript was still blocked in the browser right like the attack didn't happen we've neutralized the attack but",
    "start": "944240",
    "end": "951040"
  },
  {
    "text": "i still need to know about it or in this case jacob still needs to know about it because they need to go fix the actual",
    "start": "951040",
    "end": "956480"
  },
  {
    "text": "problem right the javascript got there somehow they need to remove it and close the hole where they got the javascript",
    "start": "956480",
    "end": "961920"
  },
  {
    "text": "in so to me and i realize i'm massively biased as the operator of a reporting",
    "start": "961920",
    "end": "966959"
  },
  {
    "text": "service reporting is essential because if you have the policy and the browser is blocking stuff and you never",
    "start": "966959",
    "end": "973279"
  },
  {
    "text": "find out it will just stay there right and i'm like we're kind of missing some of the the solution here so to me",
    "start": "973279",
    "end": "980399"
  },
  {
    "text": "when you have reporting i send the policy the hostile javascript is blocked the report comes back to me and then i",
    "start": "980399",
    "end": "987360"
  },
  {
    "text": "remove the javascript that's the solution as i kind of see it right yes the csp has protected you and i've not",
    "start": "987360",
    "end": "993759"
  },
  {
    "text": "had that terrible data breach but i still need to go fix the original problem and with reporting i can find",
    "start": "993759",
    "end": "999519"
  },
  {
    "text": "out about it and i can go straight to the point and be like right this page this script how did it get there let's",
    "start": "999519",
    "end": "1004639"
  },
  {
    "text": "remove it so this is what we do and over the years report your eyes as a service we've",
    "start": "1004639",
    "end": "1010959"
  },
  {
    "text": "become more and more popular now i built this because god it's like 2013 or 14 or something",
    "start": "1010959",
    "end": "1016720"
  },
  {
    "text": "when i first looked at this capability in the browser i was like wow that's really cool i want that for my website",
    "start": "1016720",
    "end": "1023519"
  },
  {
    "text": "and i was like you know go on to google csp reporting services i spent like five minutes on google and i couldn't find",
    "start": "1023519",
    "end": "1028798"
  },
  {
    "text": "one if you spend five minutes on google and you can't find it it doesn't exist right so i was like okay i'll build one so i",
    "start": "1028799",
    "end": "1034480"
  },
  {
    "text": "i literally just built one i was like i can't find one i'll build it so i built it and i was like actually",
    "start": "1034480",
    "end": "1039918"
  },
  {
    "text": "this is really cool i'm getting some awesome data like the telemetry from all of the other mechanisms as well is",
    "start": "1039919",
    "end": "1045038"
  },
  {
    "text": "amazing i was like i'll i'll stick like a pretty website on it and i'll just open it up and be like hey everybody you know like",
    "start": "1045039",
    "end": "1050799"
  },
  {
    "text": "i built this thing thinking like me and you know nile and two other people would use it",
    "start": "1050799",
    "end": "1055919"
  },
  {
    "start": "1055000",
    "end": "1243000"
  },
  {
    "text": "and we did in the first month right who's basically like me niall and troy so in our first month of like actually",
    "start": "1055919",
    "end": "1062240"
  },
  {
    "text": "operating the service we only processed a million reports right so in the whole month all of our users sent us in total",
    "start": "1062240",
    "end": "1069200"
  },
  {
    "text": "one million of those json payloads but then people started to learn about csp and all of these other mechanisms",
    "start": "1069200",
    "end": "1075600"
  },
  {
    "text": "and like hey this crosstalk scripting thing is bad right cryptojacking is really not good",
    "start": "1075600",
    "end": "1080640"
  },
  {
    "text": "mage car is really not good and everybody everybody gets hit with like crypto jacking or mage car and then there's the news headlines and all of",
    "start": "1080640",
    "end": "1086960"
  },
  {
    "text": "the news articles are like oh well if they've been using csp like they would have been okay so the interest in csp starts to rise",
    "start": "1086960",
    "end": "1093919"
  },
  {
    "text": "and as time goes by we start to get more reports because when people enable csp they want reporting as well",
    "start": "1093919",
    "end": "1100559"
  },
  {
    "text": "so 2016 i looked at our data to get all of this we're doing a million reports in a day",
    "start": "1100559",
    "end": "1105840"
  },
  {
    "text": "it's like okay million you know million post requests it's not like a million get requests from cash you know it's",
    "start": "1105840",
    "end": "1111200"
  },
  {
    "text": "like a post payload we've got to do stuff there's database activity but a million a day still not so bad",
    "start": "1111200",
    "end": "1118240"
  },
  {
    "text": "time keeps going by right 2018 we're now doing that in an hour so we get one",
    "start": "1118559",
    "end": "1123840"
  },
  {
    "text": "million json payloads an hour coming in i'm like okay like you're still within like my view of the",
    "start": "1123840",
    "end": "1130880"
  },
  {
    "text": "realms of that being reasonable but then things like mage cart really take off and the adoption of csp is now",
    "start": "1130880",
    "end": "1137520"
  },
  {
    "text": "really taking off because of attacks like mage cart organizations get hit with like 20 million dollars worth of",
    "start": "1137520",
    "end": "1142720"
  },
  {
    "text": "fines and they're like csp we don't want that anymore so we get to 2021 and i was",
    "start": "1142720",
    "end": "1148559"
  },
  {
    "text": "like how long does it take us to process a million reports on average now i generated these numbers in december for",
    "start": "1148559",
    "end": "1153760"
  },
  {
    "text": "nbc oslo and it took us on an average over a 24-hour period because we have like",
    "start": "1153760",
    "end": "1159280"
  },
  {
    "text": "major peaks and troughs when countries are awakened asleep over over that 24-hour period i averaged it",
    "start": "1159280",
    "end": "1165679"
  },
  {
    "text": "out and i was like on average like how long does it take us to do a million reports 15.4 seconds we can do a million",
    "start": "1165679",
    "end": "1172640"
  },
  {
    "text": "json payloads on average in 15.4 seconds and then this morning when i was preparing like final preparation for",
    "start": "1172640",
    "end": "1178880"
  },
  {
    "text": "this talk i was like i'll just update this slide i'll just go get some more data like how long does it take us to do",
    "start": "1178880",
    "end": "1184000"
  },
  {
    "text": "a million json payloads now and we can do that on average over the last 24 hours from like 10 a.m this morning to",
    "start": "1184000",
    "end": "1190559"
  },
  {
    "text": "yesterday it will take us 11.2 seconds to receive 1 million http post requests with a big",
    "start": "1190559",
    "end": "1198080"
  },
  {
    "text": "json payload that we have to do something with now throughout this whole process like i",
    "start": "1198080",
    "end": "1204080"
  },
  {
    "text": "built this thing for like me and two of my friends and it was terrible right because it",
    "start": "1204080",
    "end": "1209440"
  },
  {
    "text": "didn't need to be good and every time we've hit one of these like major milestones i've had to do some significant re-architecting of things",
    "start": "1209440",
    "end": "1215520"
  },
  {
    "text": "because i was like i never expected it to get this large it was never meant to do this much stuff",
    "start": "1215520",
    "end": "1220960"
  },
  {
    "text": "and eventually handling the volume became a really big problem because like i say these are post",
    "start": "1220960",
    "end": "1227200"
  },
  {
    "text": "requests with json payloads like we have to do stuff with them there's database activity if these were get requests from",
    "start": "1227200",
    "end": "1232480"
  },
  {
    "text": "cache like i could just hook this up and my laptop could take care of this but post request with json payloads is a",
    "start": "1232480",
    "end": "1238640"
  },
  {
    "text": "really big thing for just me right so over time we've done various different",
    "start": "1238640",
    "end": "1245280"
  },
  {
    "start": "1243000",
    "end": "1404000"
  },
  {
    "text": "things to try and make this process more efficient things like normalizing the json payloads so what we realized was like",
    "start": "1245280",
    "end": "1252000"
  },
  {
    "text": "every browser and even different versions of the same browser have like slight nuances with how they will",
    "start": "1252000",
    "end": "1257200"
  },
  {
    "text": "construct the json so like right we're going to normalize these down and flatten them as much as possible to kind",
    "start": "1257200",
    "end": "1262559"
  },
  {
    "text": "of like de-duplicate them on the way in we use azure table storage as our back end so",
    "start": "1262559",
    "end": "1268400"
  },
  {
    "text": "we now store the reports and we use the partition key as like a one-hour time bucket because what we found in our ui",
    "start": "1268400",
    "end": "1275840"
  },
  {
    "text": "you could go like really granular on the search and be like show me this page from like 14 minutes past and 16. most",
    "start": "1275840",
    "end": "1281600"
  },
  {
    "text": "people just search by like the hour of the day so we're like we'll drop the granularity and you can only query by an",
    "start": "1281600",
    "end": "1286960"
  },
  {
    "text": "hour as a maximum resolution but it meant that we had significantly less work to do on the back end",
    "start": "1286960",
    "end": "1293039"
  },
  {
    "text": "deduping similar reports so this was like looking into the actual fields because some browsers for example if you",
    "start": "1293039",
    "end": "1299039"
  },
  {
    "text": "have like query string parameters on the url some browsers will send them and some won't so it makes the reports look",
    "start": "1299039",
    "end": "1304159"
  },
  {
    "text": "different even though potentially they're the same so we did some basic deduplication",
    "start": "1304159",
    "end": "1309520"
  },
  {
    "text": "trimmed a few things up spamming reports this is a really big one if you have a browser extension that",
    "start": "1309520",
    "end": "1315520"
  },
  {
    "text": "changes like the font on the page for readability reasons or something like that if it injects a font into the page",
    "start": "1315520",
    "end": "1321840"
  },
  {
    "text": "and the content security policy doesn't allow fonts from that location it's like whoa violation of the content security",
    "start": "1321840",
    "end": "1326880"
  },
  {
    "text": "policy there's a font happening here that shouldn't happen so we look for those kinds of things in",
    "start": "1326880",
    "end": "1332720"
  },
  {
    "text": "our inbound telemetry and we try and identify like these false positives these spam reports as we call them and",
    "start": "1332720",
    "end": "1338000"
  },
  {
    "text": "we're like hey look you know if the user's got a browser extension in their browser there's nothing i can do about",
    "start": "1338000",
    "end": "1343360"
  },
  {
    "text": "that and i also don't need to know about it so we just take those and we throw them away right we don't even let them touch the back end it's like just get",
    "start": "1343360",
    "end": "1349440"
  },
  {
    "text": "rid of as much stuff as we can because we've got too much stuff coming in now the final thing here was",
    "start": "1349440",
    "end": "1356320"
  },
  {
    "text": "we originally had unlimited data retention right because again it's like me and two other people using it and it",
    "start": "1356320",
    "end": "1361840"
  },
  {
    "text": "was fine and now we're getting like you know millions and millions of reports in every couple of minutes i was like we",
    "start": "1361840",
    "end": "1367600"
  },
  {
    "text": "need to have sensible data attention because we've now we only have 90 day data retention and i checked this",
    "start": "1367600",
    "end": "1372880"
  },
  {
    "text": "morning we've got 3.9 terabytes of json on disk right and we only have 90 day retention",
    "start": "1372880",
    "end": "1380159"
  },
  {
    "text": "so we were like yep 90 day retention chop the tail off and you know we can hopefully keep the the amount of data we",
    "start": "1380159",
    "end": "1385520"
  },
  {
    "text": "have as small as possible now in particular this 90-day retention",
    "start": "1385520",
    "end": "1390880"
  },
  {
    "text": "one will come back to haunt me in a minute because it makes particular things really tough to do because one of the",
    "start": "1390880",
    "end": "1397120"
  },
  {
    "text": "biggest things that we want to know with content security policy when we have a report coming in the number one thing",
    "start": "1397120",
    "end": "1402799"
  },
  {
    "text": "that people ask us is this have we seen this before",
    "start": "1402799",
    "end": "1408559"
  },
  {
    "start": "1404000",
    "end": "1515000"
  },
  {
    "text": "like if you've got a problem on your page and you get 1 000 visitors to the page all 1000 of them will tell you and",
    "start": "1408559",
    "end": "1414559"
  },
  {
    "text": "i'm like i only need one of you to tell me okay like once i know and i've been told that i have seen this before",
    "start": "1414559",
    "end": "1420240"
  },
  {
    "text": "all of the rest of them we can just like scoop them together and we don't need to know so have we seen this report before",
    "start": "1420240",
    "end": "1427360"
  },
  {
    "text": "so jacob's running the ndc security site and this report comes in and he wants to know from us as a service like hey have",
    "start": "1427360",
    "end": "1434400"
  },
  {
    "text": "we you know is this new or have we seen this before so what do we need to do as a service well we need to go back over",
    "start": "1434400",
    "end": "1440240"
  },
  {
    "text": "all of jacob's data and try and see if we can find like have we seen this report before",
    "start": "1440240",
    "end": "1445919"
  },
  {
    "text": "so first of all we've got vast quantities of data we took it down to the 90 day retention to try and make that amount of data smaller",
    "start": "1445919",
    "end": "1454320"
  },
  {
    "text": "but then the problem is we can't really answer the question the question that we can answer now is like have we seen this report before in",
    "start": "1454320",
    "end": "1459840"
  },
  {
    "text": "the last 90 days as well because we've like we've time capped it now so we don't know if you've seen this before",
    "start": "1459840",
    "end": "1465440"
  },
  {
    "text": "ever we only know like have we seen this before within the last 90 days for which we have data but that's still a huge",
    "start": "1465440",
    "end": "1471120"
  },
  {
    "text": "quantity of data to search over to look for a single json payload",
    "start": "1471120",
    "end": "1476559"
  },
  {
    "text": "so we decided to solve this with something called bloom filters which is what the kind of like the",
    "start": "1476559",
    "end": "1482240"
  },
  {
    "text": "second half of the talk is about because we want to be able to answer this question we don't want to answer this question with the last 90 days",
    "start": "1482240",
    "end": "1488880"
  },
  {
    "text": "caviar we want to answer this question have we seen this before and we want to answer this question fast because as",
    "start": "1488880",
    "end": "1494240"
  },
  {
    "text": "soon as this report hits our edge we want to know then have we ever seen this before we don't want to know you",
    "start": "1494240",
    "end": "1500480"
  },
  {
    "text": "know later or tomorrow we want to know now but running these queries in real time when we're getting tens of",
    "start": "1500480",
    "end": "1505840"
  },
  {
    "text": "thousands of reports a second doing those tens of thousands of queries against the back end was just not going to happen",
    "start": "1505840",
    "end": "1512400"
  },
  {
    "text": "so i set out to kind of investigate the options that i arrived at something called a bloom filter",
    "start": "1512400",
    "end": "1519120"
  },
  {
    "start": "1515000",
    "end": "1832000"
  },
  {
    "text": "so first of all we're going to explain the basic structure this is a very small bloom filter in production you would",
    "start": "1519120",
    "end": "1524400"
  },
  {
    "text": "make all of these numbers a lot larger but a balloon filter is basically just an array so you can see here we have an array of bits and all of the bits are",
    "start": "1524400",
    "end": "1531600"
  },
  {
    "text": "set to zero and there are 10 of them so the width of the array is 10.",
    "start": "1531600",
    "end": "1537039"
  },
  {
    "text": "now when an item comes in what you can do is you can say we've seen this item and we will add the item",
    "start": "1537039",
    "end": "1543760"
  },
  {
    "text": "into the filter so then when we query the filter later we'll know whether or not the item was",
    "start": "1543760",
    "end": "1549039"
  },
  {
    "text": "in there so to insert an item into the filter and say we've got this piece of data and we want to mark it as having",
    "start": "1549039",
    "end": "1554480"
  },
  {
    "text": "been present we have to insert two bits into the array two hash functions so k equals two means",
    "start": "1554480",
    "end": "1561440"
  },
  {
    "text": "when we insert this element into the array we're gonna set the bits at two locations using two different hash",
    "start": "1561440",
    "end": "1567039"
  },
  {
    "text": "functions now again in production we're using like eight on our main filter these numbers",
    "start": "1567039",
    "end": "1572320"
  },
  {
    "text": "are much smaller for simplicity so if k equals two we have two hash functions and the hash functions are going to give",
    "start": "1572320",
    "end": "1577520"
  },
  {
    "text": "us the index in the array to set the bit at so we've got h1 and h2 if you had you know k was a large number",
    "start": "1577520",
    "end": "1584320"
  },
  {
    "text": "you'd have all the way up to hk hash functions so we've got two hash functions the really important thing about these",
    "start": "1584320",
    "end": "1590400"
  },
  {
    "text": "hash functions is they have to be pairwise independent hash functions and i'll show you what that means on the",
    "start": "1590400",
    "end": "1596159"
  },
  {
    "text": "next slide here so we have our bloom filter it's just an array of bits all set to zero we've had a new report",
    "start": "1596159",
    "end": "1602480"
  },
  {
    "text": "come in item a could be any item it's a csp report for us and we want to mark the presence and",
    "start": "1602480",
    "end": "1608000"
  },
  {
    "text": "say we've seen this report we want to mark its presence in the bloom filter we want to add it to the filter so we take",
    "start": "1608000",
    "end": "1614000"
  },
  {
    "text": "our hash function our first hash function h1 we hash item a the inbound json payload",
    "start": "1614000",
    "end": "1620240"
  },
  {
    "text": "and then we modulus it with the width of the array to give us the index where we should set the bit so in this case we",
    "start": "1620240",
    "end": "1627039"
  },
  {
    "text": "come up with index two and then of course we've got two hash functions so we get the second hash function do exactly the same thing we hash the json",
    "start": "1627039",
    "end": "1633600"
  },
  {
    "text": "payload mod it with the width to make sure it gives us an index inbounds and it's number four",
    "start": "1633600",
    "end": "1639039"
  },
  {
    "text": "so now we know the two locations that we need to set a bit in the array so we set them there's the",
    "start": "1639039",
    "end": "1645440"
  },
  {
    "text": "first one and there's the second one this means that this piece of data item",
    "start": "1645440",
    "end": "1651440"
  },
  {
    "text": "a this csp report is now marked as having been seen and been observed right",
    "start": "1651440",
    "end": "1657200"
  },
  {
    "text": "so the next one comes in let's add one more item to the filter we've got item b so this is the next csp report that",
    "start": "1657200",
    "end": "1662480"
  },
  {
    "text": "comes in we want to add this to the filter exactly the same process right we take the first hash function we hash the",
    "start": "1662480",
    "end": "1669200"
  },
  {
    "text": "new report mod it with the widths it gives us the index of six we take the second hash function",
    "start": "1669200",
    "end": "1674559"
  },
  {
    "text": "mod it with the width it gives us the index at nine so we're going to set those two bits as well",
    "start": "1674559",
    "end": "1681200"
  },
  {
    "text": "so now we've added two csp reports to the filter and the filter looks like this we've got",
    "start": "1681200",
    "end": "1686799"
  },
  {
    "text": "the two indices set for the first report and the two set for the second so let's say the",
    "start": "1686799",
    "end": "1692080"
  },
  {
    "text": "next report comes in the next report is item c and we want to say",
    "start": "1692080",
    "end": "1697200"
  },
  {
    "text": "have we seen this before this is how we ask the question of the filter so this is the next report that comes in what we",
    "start": "1697200",
    "end": "1702720"
  },
  {
    "text": "need to do is we need to hash it with the first hash algorithm so we've got hash it with h1 mod it with the width look up index",
    "start": "1702720",
    "end": "1709679"
  },
  {
    "text": "four is the bit set yes right but then we still got the second hash function so we hash it with hash",
    "start": "1709679",
    "end": "1715440"
  },
  {
    "text": "function two mod it with the width check the bit at location seven is it set",
    "start": "1715440",
    "end": "1721039"
  },
  {
    "text": "no if we had seen this report before",
    "start": "1721039",
    "end": "1726080"
  },
  {
    "text": "this second bit would be set so now we can say we have not seen this report",
    "start": "1726080",
    "end": "1731279"
  },
  {
    "text": "before because if we had the bits would be set so now we can say for sure",
    "start": "1731279",
    "end": "1736720"
  },
  {
    "text": "we have never seen this thing before right 100 confidence we have not seen it",
    "start": "1736720",
    "end": "1742320"
  },
  {
    "text": "before but then let's say we get the next report right and it's a duplicate it's item a again right we've just had the",
    "start": "1742320",
    "end": "1747520"
  },
  {
    "text": "same thing reported to us we go through the process do we take the first hash function obviously we come back to",
    "start": "1747520",
    "end": "1752799"
  },
  {
    "text": "number two right the second index and then we take the second hash function same as before right because",
    "start": "1752799",
    "end": "1758000"
  },
  {
    "text": "it's exactly the same report and it says look up the bit location four",
    "start": "1758000",
    "end": "1763120"
  },
  {
    "text": "now both of these bits come back as a one because we've seen item a before and obviously when we saw them last time",
    "start": "1763120",
    "end": "1769039"
  },
  {
    "text": "we set the bits so now we can say we've seen this item before",
    "start": "1769039",
    "end": "1775120"
  },
  {
    "text": "or can we let's take a look at the next report that comes in right another new one",
    "start": "1775120",
    "end": "1781520"
  },
  {
    "text": "we've never seen this before it's item d i've not talked about it it's another new report that's just coming let's see if we've seen this particular report",
    "start": "1781520",
    "end": "1788880"
  },
  {
    "text": "right take the first hash function hash the item mod it index number four take the second hash function hash it mod it",
    "start": "1788880",
    "end": "1795840"
  },
  {
    "text": "with the width index number nine both of those bits are set",
    "start": "1795840",
    "end": "1801120"
  },
  {
    "text": "now the first bit from h1 is set when we set item a earlier and the second one index nine was set",
    "start": "1801120",
    "end": "1808799"
  },
  {
    "text": "from item b and we've had what we call a collision so we've now tried to look up item d and",
    "start": "1808799",
    "end": "1816159"
  },
  {
    "text": "the bloom filter is going to tell us that we've seen this thing before but we've not seen this thing before it",
    "start": "1816159",
    "end": "1822480"
  },
  {
    "text": "looks like we've seen it because the two bits were set by collisions with other items in the filter",
    "start": "1822480",
    "end": "1828720"
  },
  {
    "text": "now bloom filters to use their proper name are what we call a probabilistic data",
    "start": "1828720",
    "end": "1834159"
  },
  {
    "start": "1832000",
    "end": "2295000"
  },
  {
    "text": "structure and what that means is with a bloom filter you can ask it a question",
    "start": "1834159",
    "end": "1840080"
  },
  {
    "text": "is this item in the original data set have we seen this thing before and the bloom filter can only give you",
    "start": "1840080",
    "end": "1846399"
  },
  {
    "text": "two answers now the answer that we want and get a lot of the time is definitely no if one of those bits is not set you",
    "start": "1846399",
    "end": "1853360"
  },
  {
    "text": "have never seen that item before because if you had the bit would be set",
    "start": "1853360",
    "end": "1858559"
  },
  {
    "text": "but when we get collisions and this is where the probabilistic part comes in if the filter says yes",
    "start": "1858559",
    "end": "1865039"
  },
  {
    "text": "it's saying yes we've seen this before with a certain probability that this could be a false positive",
    "start": "1865039",
    "end": "1871600"
  },
  {
    "text": "because collisions can set the necessary bits to make it look like an item is present even though the item was not",
    "start": "1871600",
    "end": "1878399"
  },
  {
    "text": "present so the answer can only be definitely no or maybe yes",
    "start": "1878399",
    "end": "1884960"
  },
  {
    "text": "but we can control the probability of false positive this is one of the things that we can control",
    "start": "1884960",
    "end": "1890960"
  },
  {
    "text": "with the construction of the filter itself so if we take a look at setting up the filter there are a few different things",
    "start": "1890960",
    "end": "1897919"
  },
  {
    "text": "that fall under our control so we've got w which was the width of the array right",
    "start": "1897919",
    "end": "1903279"
  },
  {
    "text": "my array was only 10 bits wide if i made that array a lot wider those first two items and then item d would probably not",
    "start": "1903279",
    "end": "1909279"
  },
  {
    "text": "collide as you make the array wider you reduce the chance of collisions you need to know",
    "start": "1909279",
    "end": "1915919"
  },
  {
    "text": "within reason how many items you plan to put in the filter because if you think",
    "start": "1915919",
    "end": "1921039"
  },
  {
    "text": "about it as you add more and more items the chance of collision goes up so you need to make the filter wider to",
    "start": "1921039",
    "end": "1926399"
  },
  {
    "text": "compensate for that if you imagine a bloom filter where all of the bits were set so if i took my 10 item filter a",
    "start": "1926399",
    "end": "1932720"
  },
  {
    "text": "minute ago once all of those bits say one the bloom filter is just going to say yes to everything right so if you over populate bloom filters they're",
    "start": "1932720",
    "end": "1939200"
  },
  {
    "text": "completely useless so you need to have a rough idea of like how many things are",
    "start": "1939200",
    "end": "1944480"
  },
  {
    "text": "we going to put into this filter like how much data do we want to represent",
    "start": "1944480",
    "end": "1949760"
  },
  {
    "text": "with these numbers you can then determine how many hash functions do we need how many bits should we set per",
    "start": "1949760",
    "end": "1955519"
  },
  {
    "text": "item so this is determined this is not generally chosen and then the other",
    "start": "1955519",
    "end": "1960880"
  },
  {
    "text": "thing that you can have an impact on is that probability of false positive if the balloon filter says yes you have",
    "start": "1960880",
    "end": "1967039"
  },
  {
    "text": "seen this before what are the chances that that's a false positive and if you take that",
    "start": "1967039",
    "end": "1972159"
  },
  {
    "text": "probability and you want to drive that down you can but it will impact the other variables",
    "start": "1972159",
    "end": "1978080"
  },
  {
    "text": "so if we take a look at the current filter that i'm trialing right now then we have",
    "start": "1978080",
    "end": "1983279"
  },
  {
    "text": "we have chosen a couple of these values but we've chosen the width of the array",
    "start": "1983279",
    "end": "1988320"
  },
  {
    "text": "and the number of items that you can put in and you can derive the others from that so if you have the width",
    "start": "1988320",
    "end": "1994240"
  },
  {
    "text": "then you can just set that as a value but if you don't have the width you calculate that from the other values that you have chosen so there are bloom",
    "start": "1994240",
    "end": "2001279"
  },
  {
    "text": "filter calculators online you like just ignore all this stuff right like you can choose",
    "start": "2001279",
    "end": "2007120"
  },
  {
    "text": "like we did so we know n the number of items we're going to put in the filter and i know what my desired false",
    "start": "2007120",
    "end": "2012799"
  },
  {
    "text": "positive rate is so i also declare p and from n and p you can see you can then",
    "start": "2012799",
    "end": "2018320"
  },
  {
    "text": "calculate w and k and it kind of makes sense right if you know you're going to put n items in this",
    "start": "2018320",
    "end": "2024159"
  },
  {
    "text": "filter and you want a certain chance of false positive that's going to drive up the",
    "start": "2024159",
    "end": "2029440"
  },
  {
    "text": "width of the array right because you need more space to avoid those collisions so as you tweak these values",
    "start": "2029440",
    "end": "2035279"
  },
  {
    "text": "you can control the two that you want to control for us n and p and then it will dictate what the other two need to be in",
    "start": "2035279",
    "end": "2041360"
  },
  {
    "text": "order to hit those objectives there are there's loads of calculators online don't try and figure this out you don't",
    "start": "2041360",
    "end": "2046559"
  },
  {
    "text": "need to so if you want to calculate the width of the array i was like okay how many",
    "start": "2046559",
    "end": "2052480"
  },
  {
    "text": "like how many items are we going to put in this filter now i know how many reports we've",
    "start": "2052480",
    "end": "2058720"
  },
  {
    "text": "processed over time we just keep a running counter and i'm like okay but you know how many of them were like duplicates how many of",
    "start": "2058720",
    "end": "2065118"
  },
  {
    "text": "them were duplicates but they looked kind of similar but the json was slightly different and you know like we",
    "start": "2065119",
    "end": "2070800"
  },
  {
    "text": "didn't know the number and i still don't know the number so i was like okay i'm just going to take a guess like 7 billion reports so this is distinct",
    "start": "2070800",
    "end": "2077040"
  },
  {
    "text": "reports i know we're doing millions and millions a minute now but remember like by the time we normalize them and deduplicate them we",
    "start": "2077040",
    "end": "2083760"
  },
  {
    "text": "we're talking about seven billion distinct json payloads i was like i think this should be enough",
    "start": "2083760",
    "end": "2089839"
  },
  {
    "text": "right like hopefully this will be enough i still don't know right now i also know what i want my",
    "start": "2089839",
    "end": "2096000"
  },
  {
    "text": "probability of false positive to be i've got a reasonably low tolerance to this i don't be getting false positives all the",
    "start": "2096000",
    "end": "2101280"
  },
  {
    "text": "time so i set my probabilities between zero and one i go for zero point zero one",
    "start": "2101280",
    "end": "2107359"
  },
  {
    "text": "i only want a one in a hundred chance of a false positive probability so from having n and having p we can now",
    "start": "2107359",
    "end": "2114320"
  },
  {
    "text": "calculate the width how wide does the filter need to be how many bits do i need in order to",
    "start": "2114320",
    "end": "2119520"
  },
  {
    "text": "achieve the false positive probability and it will also tell me k",
    "start": "2119520",
    "end": "2125359"
  },
  {
    "text": "so when we calculate w and roll this out it comes to 8.4 gig of ram now in in the",
    "start": "2125359",
    "end": "2131839"
  },
  {
    "text": "first instance i was like holy crap that's a lot but then i was like well",
    "start": "2131839",
    "end": "2137440"
  },
  {
    "text": "actually like how big is the data set that this is representing",
    "start": "2137440",
    "end": "2142880"
  },
  {
    "text": "right if we've got seven billion json payloads and you know like some of these things",
    "start": "2142880",
    "end": "2148240"
  },
  {
    "text": "are pretty big right and we can have this filter in memory with only eight point four gig like the",
    "start": "2148240",
    "end": "2155119"
  },
  {
    "text": "data sound disk is terabytes and terabytes and terabytes we can keep this filter in memory okay",
    "start": "2155119",
    "end": "2160640"
  },
  {
    "text": "like we we spun up a separate redis server for this right and it's so easy to get a ready server with like 16",
    "start": "2160640",
    "end": "2165920"
  },
  {
    "text": "gigabytes of ram these days right and it's so cheap i was like okay actually my initial shock that's kind of okay",
    "start": "2165920",
    "end": "2172400"
  },
  {
    "text": "right we're looking at like a hundred dollars a month for a redis server that can handle this so i was like okay this is reasonable",
    "start": "2172400",
    "end": "2178400"
  },
  {
    "text": "and the only thing left then to kind of calculate is k so we now know what the width is because",
    "start": "2178400",
    "end": "2183520"
  },
  {
    "text": "we've calculated the width we know the number of items going in the filter we can now calculate k because those are",
    "start": "2183520",
    "end": "2188800"
  },
  {
    "text": "the only two requirements so we just run the math out and it says you need seven hash functions so for every csp report",
    "start": "2188800",
    "end": "2195359"
  },
  {
    "text": "that comes in we have seven hash functions that set seven bits in the array in the bloom",
    "start": "2195359",
    "end": "2201440"
  },
  {
    "text": "filter and this is it so now this is what we are currently",
    "start": "2201440",
    "end": "2206640"
  },
  {
    "text": "trialing at report uri this is what we're currently using for our inbound reports we're not using this as a",
    "start": "2206640",
    "end": "2212320"
  },
  {
    "text": "definitive answer yet because this is still like very much experimental i don't know if seven billion is going to",
    "start": "2212320",
    "end": "2218640"
  },
  {
    "text": "hold maybe it will be too way too much and i could have gone smaller maybe at some point we'll use up seven billion",
    "start": "2218640",
    "end": "2224560"
  },
  {
    "text": "seven billion items in the filter but right now we're actually using this as the first indicator",
    "start": "2224560",
    "end": "2231200"
  },
  {
    "text": "because that definitely no is a really useful answer that report comes in",
    "start": "2231200",
    "end": "2236720"
  },
  {
    "text": "and the bloom filter says you have definitely never seen this before we can jump to action straight away because we",
    "start": "2236720",
    "end": "2243440"
  },
  {
    "text": "know we've never seen it before seven hash functions takes like a fraction of a second we're querying against the reddish cache in memory we",
    "start": "2243440",
    "end": "2249760"
  },
  {
    "text": "don't have to go touch the back end with like the terabytes of data this is so fast and so efficient and we use it as",
    "start": "2249760",
    "end": "2255680"
  },
  {
    "text": "our first marker when it comes back and says probably yes you've probably seen this before right",
    "start": "2255680",
    "end": "2261920"
  },
  {
    "text": "now we still do the check because like we go to check the back end because we're trialing this",
    "start": "2261920",
    "end": "2268079"
  },
  {
    "text": "now for us this makes sense because the definitely no",
    "start": "2268079",
    "end": "2273359"
  },
  {
    "text": "is the thing that we're looking for if it says you've definitely never seen this before there's no questions this makes probabilistic data structures",
    "start": "2273359",
    "end": "2280160"
  },
  {
    "text": "like this makes them suitable for certain tasks and not suitable for others so i thought i'd give some other",
    "start": "2280160",
    "end": "2285920"
  },
  {
    "text": "real world examples rather than kind of like my specific use case on where we see bloom filters used successfully and",
    "start": "2285920",
    "end": "2291920"
  },
  {
    "text": "maybe they will kind of resonate with some of you so the first one was",
    "start": "2291920",
    "end": "2297760"
  },
  {
    "start": "2295000",
    "end": "2400000"
  },
  {
    "text": "with a company called akamai so they're a large cloud like content delivery network cdn provider and they",
    "start": "2297760",
    "end": "2303839"
  },
  {
    "text": "they use bloom filters to avoid something called a one-hit wonder now when you're a really large cdm",
    "start": "2303839",
    "end": "2309119"
  },
  {
    "text": "provider you reverse proxy your customers you're caching assets for them right so my page goes through the cdn",
    "start": "2309119",
    "end": "2315599"
  },
  {
    "text": "the cdn loads the page from the origin and puts it in the cache and then the idea is like if people keep going to",
    "start": "2315599",
    "end": "2320720"
  },
  {
    "text": "view the page then the assets are in cash so they want to keep as much stuff as they want like as they can in cash but they",
    "start": "2320720",
    "end": "2327760"
  },
  {
    "text": "don't want to keep unnecessary things in cash and a one-hit wonder is a phrase that's used to refer to something that",
    "start": "2327760",
    "end": "2333599"
  },
  {
    "text": "is requested once and never requested again so if you've got one hit wonders in cash like somebody requested the asset once",
    "start": "2333599",
    "end": "2340000"
  },
  {
    "text": "you put it in the cache and then it just stays there forever and nobody ever asks for it again it's a complete waste having it in the cache",
    "start": "2340000",
    "end": "2345680"
  },
  {
    "text": "so they use a bloom filter right when the request comes in they say has anyone requested this before",
    "start": "2345680",
    "end": "2351920"
  },
  {
    "text": "and if the bloom filter says no it means it's the first time this asset has ever been requested so they fetch it from the",
    "start": "2351920",
    "end": "2358160"
  },
  {
    "text": "origin and they serve it but they don't cache it because nobody's ever asked for it and then they set the item in the filter",
    "start": "2358160",
    "end": "2364800"
  },
  {
    "text": "the second time somebody asks for that same asset they say to the filter have we seen this before and the filter says",
    "start": "2364800",
    "end": "2371040"
  },
  {
    "text": "yes with probability of false positive so then they're like okay we'll get it we'll cash it and we'll serve it so",
    "start": "2371040",
    "end": "2376720"
  },
  {
    "text": "you're only ever cashing it the second time that asset gets requested and then that eliminates all one-hit",
    "start": "2376720",
    "end": "2382640"
  },
  {
    "text": "wonders and i'm going for memory on the white paper but i'm pretty sure they eliminated like 70 of the items in their",
    "start": "2382640",
    "end": "2388320"
  },
  {
    "text": "cache by removing one hit wonders with the balloon filter so this was like this is a really good",
    "start": "2388320",
    "end": "2394640"
  },
  {
    "text": "implementation now another really good implementation that i've seen whoa",
    "start": "2394640",
    "end": "2400240"
  },
  {
    "start": "2400000",
    "end": "2640000"
  },
  {
    "text": "is safe browsing right so google safe browsing is the ability for someone to like report",
    "start": "2400240",
    "end": "2406960"
  },
  {
    "text": "or flag a website as being harmful it's got like malware it's got some phishing on there whatever it is some bad thing",
    "start": "2406960",
    "end": "2412960"
  },
  {
    "text": "and then they will put it into the safe browsing data set and then your browser won't allow you to go to that page right",
    "start": "2412960",
    "end": "2418480"
  },
  {
    "text": "we've all seen probably something like this so you try to go to the site and the browser's like whoa",
    "start": "2418480",
    "end": "2423680"
  },
  {
    "text": "there's malware on the page this is a known phishing website whatever you should not go there",
    "start": "2423680",
    "end": "2429920"
  },
  {
    "text": "now they do this with a bloom filter you imagine the size of the google safe browsing data set",
    "start": "2429920",
    "end": "2435920"
  },
  {
    "text": "right they've probably got a list of like billions of of pages of urls your browser isn't downloading this like",
    "start": "2435920",
    "end": "2442560"
  },
  {
    "text": "honking big file with all of the domains in it downloads a tiny little bloom filter and every time you go",
    "start": "2442560",
    "end": "2449520"
  },
  {
    "text": "to a page every time you visit a url it checks it against the bloom filter and says is this in there",
    "start": "2449520",
    "end": "2456160"
  },
  {
    "text": "now if the bloom filter says no this url is not in there you can go to the website because it's not in the safe",
    "start": "2456160",
    "end": "2461599"
  },
  {
    "text": "browsing block list now we get to the yes",
    "start": "2461599",
    "end": "2467520"
  },
  {
    "text": "yes it's in there but there's a probability of false positive right google don't want to be like oh hey you can't go to this website because it's",
    "start": "2467520",
    "end": "2473440"
  },
  {
    "text": "filled with malware and it was a false positive and actually your website is fine so there's a separate api call on",
    "start": "2473440",
    "end": "2478720"
  },
  {
    "text": "the back end so then it will actually directly query the google safe browsing api and say is this url on the block",
    "start": "2478720",
    "end": "2485520"
  },
  {
    "text": "list but you only have to do that query if the filter says yes every single time",
    "start": "2485520",
    "end": "2492079"
  },
  {
    "text": "the filter says no i mean we don't see these very often right so like 99.9 of the time the filter's like no it's not",
    "start": "2492079",
    "end": "2498640"
  },
  {
    "text": "on the list no it's not on the left and i can just keep browsing and there's no queries reaching out to like the safe browsing api but the one time when you",
    "start": "2498640",
    "end": "2505280"
  },
  {
    "text": "go to it and the filters like yeah you know like this is on the list then it will query out so you're",
    "start": "2505280",
    "end": "2511760"
  },
  {
    "text": "preventing those queries like the vast majority of the time",
    "start": "2511760",
    "end": "2516960"
  },
  {
    "text": "no because the balloon filter is really small chrome uses lots of ram on your machine for other reasons the balloon filter is",
    "start": "2518319",
    "end": "2524079"
  },
  {
    "text": "tiny because you can represent significant quantities of data with a tiny bloom filter now this sounds",
    "start": "2524079",
    "end": "2530400"
  },
  {
    "text": "like immediately when i say this sometimes people are like wait google's sending the url to like their own api this sounds like tracking so first of",
    "start": "2530400",
    "end": "2537520"
  },
  {
    "text": "all the balloon filter prevents the the no answer you don't need to do the query when you do the yes answer",
    "start": "2537520",
    "end": "2544079"
  },
  {
    "text": "with probability of a false positive it uses something called k anonymity to query the google api so just you know",
    "start": "2544079",
    "end": "2550480"
  },
  {
    "text": "just to let you all know it's not actually sending the full url off to google and tracking you",
    "start": "2550480",
    "end": "2557319"
  },
  {
    "text": "that's a really good question so the question was if you have a filter and i'm like let me know if i misinterpret this if you have",
    "start": "2567440",
    "end": "2573599"
  },
  {
    "text": "a balloon filter and we end up over populating it can you like somehow recover and like increase the size and",
    "start": "2573599",
    "end": "2579359"
  },
  {
    "text": "fix it the answer is no once you've defined the width of the array you cannot later change it because",
    "start": "2579359",
    "end": "2585680"
  },
  {
    "text": "it shifts the index of every item in the array so this is like kind of a thing i address at the end but it's a really",
    "start": "2585680",
    "end": "2590800"
  },
  {
    "text": "good question so i'll address it now you have to know the two things that you set like so for",
    "start": "2590800",
    "end": "2596079"
  },
  {
    "text": "us that we've got the number of items and the probability that we control the number of items has to be",
    "start": "2596079",
    "end": "2601520"
  },
  {
    "text": "reasonably accurate there's like a there's a pretty good error tolerance in there right and you can overpopulate it",
    "start": "2601520",
    "end": "2607119"
  },
  {
    "text": "slightly but if you go to like you know if we have 7 billion items in our original plan and",
    "start": "2607119",
    "end": "2612400"
  },
  {
    "text": "go to 14 the filter is going to be trash so you cannot recover later if",
    "start": "2612400",
    "end": "2618160"
  },
  {
    "text": "the the dimensions are wrong and this is why right now it's kind of like a it's like a secondary piece of",
    "start": "2618160",
    "end": "2623440"
  },
  {
    "text": "information for us to query the filter but the definite no is still useful over populating the filter only affects the",
    "start": "2623440",
    "end": "2629200"
  },
  {
    "text": "probability of false positive so like if you're getting the definite no it's still a definite no and that's the",
    "start": "2629200",
    "end": "2635119"
  },
  {
    "text": "thing we need anyway now another one another kind of like useful example of a bloom filter",
    "start": "2635119",
    "end": "2641680"
  },
  {
    "start": "2640000",
    "end": "2684000"
  },
  {
    "text": "have i read this article before right you ever log into a news website and you go there and it's like hey you know like",
    "start": "2641680",
    "end": "2647200"
  },
  {
    "text": "you should read this article next the website wants to know have you read that article before so they have a per-user",
    "start": "2647200",
    "end": "2652800"
  },
  {
    "text": "bloom filter and when they take the url of the article and when you visit it they insert the url into the bloom",
    "start": "2652800",
    "end": "2658960"
  },
  {
    "text": "filter and then when you next load the home page and they're like hey these are the top three most common articles today they",
    "start": "2658960",
    "end": "2665040"
  },
  {
    "text": "check against the bloom filter to see if you've already been there and if you have they just drop it and go to the next one and say oh you should",
    "start": "2665040",
    "end": "2670560"
  },
  {
    "text": "read these three so this is implemented on medium this is really cool this is how they do their recommendations of something that you",
    "start": "2670560",
    "end": "2676240"
  },
  {
    "text": "should read without recommending something you've already read they use a tiny little bloom filter per user",
    "start": "2676240",
    "end": "2683760"
  },
  {
    "text": "now the kind of final example is something that i've implemented so i'm sure everybody's very familiar with",
    "start": "2683760",
    "end": "2689680"
  },
  {
    "start": "2684000",
    "end": "2825000"
  },
  {
    "text": "have i've been phoned run by troy hunt he also has the pwned passwords api so the idea with the poem passwords api",
    "start": "2689680",
    "end": "2696640"
  },
  {
    "text": "is that if a user is registering on your service you can take the password that they're trying to register with and you",
    "start": "2696640",
    "end": "2702960"
  },
  {
    "text": "can query it against this api and say like has this password been observed in data breaches before like is this a",
    "start": "2702960",
    "end": "2709200"
  },
  {
    "text": "common password is this a you know a terrible password that's been previously observed now the the have ibm api uses the same k",
    "start": "2709200",
    "end": "2716560"
  },
  {
    "text": "anonymity model that i just talked about so you're not actually sending the password you can look that up offline it",
    "start": "2716560",
    "end": "2722160"
  },
  {
    "text": "is a safe api query but it's still an api query right every time a user registers or logs in you want to",
    "start": "2722160",
    "end": "2728560"
  },
  {
    "text": "check the password has this password being seen in a data breach somewhere so this outbound calls you've got to go hit",
    "start": "2728560",
    "end": "2733839"
  },
  {
    "text": "the api we've got network activity availability perhaps the other thing that you can do is you",
    "start": "2733839",
    "end": "2739040"
  },
  {
    "text": "can download the data set you can download the whole corpus of all previously observed passwords in data",
    "start": "2739040",
    "end": "2744400"
  },
  {
    "text": "breaches and it's like 18 gig and i'm like okay that's pretty big can",
    "start": "2744400",
    "end": "2749599"
  },
  {
    "text": "we take 18 gig and can we make it like more acceptable with a bloom filter",
    "start": "2749599",
    "end": "2755920"
  },
  {
    "text": "so i downloaded the whole data set i crunched the numbers i and because i know that there are only like 712",
    "start": "2755920",
    "end": "2761920"
  },
  {
    "text": "million passwords i can smash the numbers accurately right so i can build the filter the data set doesn't change",
    "start": "2761920",
    "end": "2767359"
  },
  {
    "text": "and now we have a couple of gig filtering memory and when you give us a password to try and register",
    "start": "2767359",
    "end": "2773520"
  },
  {
    "text": "we check it against the poem passwords data and say have we seen this password before",
    "start": "2773520",
    "end": "2778720"
  },
  {
    "text": "now the false positive rate when we do this is 1 in 100 million right so we only get if we have 100",
    "start": "2778720",
    "end": "2784960"
  },
  {
    "text": "million users register please we will only tell one of them that their password has been previously seen by",
    "start": "2784960",
    "end": "2790720"
  },
  {
    "text": "accident and prevent them from using it now in that scenario you can then fall back to the api and say well the balloon",
    "start": "2790720",
    "end": "2796319"
  },
  {
    "text": "filter said we'd probably seen this now we'll do an api query so for those 100 million registrations",
    "start": "2796319",
    "end": "2803040"
  },
  {
    "text": "if there's only the one person using it we would only query the api once so this saves like a huge amount of",
    "start": "2803040",
    "end": "2809280"
  },
  {
    "text": "expense having an external dependency network activity availability everything else",
    "start": "2809280",
    "end": "2814400"
  },
  {
    "text": "so there's loads of cool things that you can do with bloom filters and bloom filters act as the base data",
    "start": "2814400",
    "end": "2821200"
  },
  {
    "text": "structure for several other data structures as well bloom filters are not the only thing",
    "start": "2821200",
    "end": "2826720"
  },
  {
    "text": "that we're now using i kind of like fell into the rabbit hole of probabilistic data structures and now we have them",
    "start": "2826720",
    "end": "2831760"
  },
  {
    "text": "everywhere so you know you look at a balloon filter bloom filter tells you one thing have we seen this before yes or no",
    "start": "2831760",
    "end": "2838560"
  },
  {
    "text": "yes with false positive probability which we now know so it's yes or no but maybe you want to know like how many",
    "start": "2838560",
    "end": "2844720"
  },
  {
    "text": "times have we seen this before right okay cool we have counting bloom filters for that right slightly different structure to",
    "start": "2844720",
    "end": "2850720"
  },
  {
    "start": "2846000",
    "end": "2934000"
  },
  {
    "text": "what i showed you but very similar it allows the counting of items same probabilistic nature",
    "start": "2850720",
    "end": "2856400"
  },
  {
    "text": "and what the filter can tell you is the item is greater or equal to the threshold that you set",
    "start": "2856400",
    "end": "2863040"
  },
  {
    "text": "or it's definitely under so basically like how far off do i want the count to be",
    "start": "2863040",
    "end": "2869119"
  },
  {
    "text": "right so then it's like oh well okay counting balloon filter is great what if i put something in the filter and i want to like unset that",
    "start": "2869119",
    "end": "2875680"
  },
  {
    "text": "in a bloom filter you can't do that because you're potentially unsetting the bits for other items as well so for that you have to use a cuckoo filter cookie",
    "start": "2875680",
    "end": "2882240"
  },
  {
    "text": "filters allow deletion of items from the set right and you can keep going with this we're",
    "start": "2882240",
    "end": "2888319"
  },
  {
    "text": "also using this a count min sketch now a sketch is just a two-dimensional bloom filter the balloon filter i showed you",
    "start": "2888319",
    "end": "2894640"
  },
  {
    "text": "earlier one-dimensional right sketch two-dimensional that's the only difference it allows frequency analysis on events",
    "start": "2894640",
    "end": "2901119"
  },
  {
    "text": "at high volume and of course we're processing like thousands and thousands of payloads a second frequency analysis",
    "start": "2901119",
    "end": "2906559"
  },
  {
    "text": "is really helpful for us now counting sketches can over count but",
    "start": "2906559",
    "end": "2912240"
  },
  {
    "text": "they can never undercount so if you query the sketch and say like what is the frequency of this report",
    "start": "2912240",
    "end": "2918319"
  },
  {
    "text": "it can tell you that you've seen it a few more times than you have but it will never tell you that you've",
    "start": "2918319",
    "end": "2924079"
  },
  {
    "text": "seen it less than you have so we use this you can again you can define the tolerance for over counting",
    "start": "2924079",
    "end": "2930160"
  },
  {
    "text": "and the probability of false positives and things like this but the final one and the one that we use right now like",
    "start": "2930160",
    "end": "2935280"
  },
  {
    "start": "2934000",
    "end": "3008000"
  },
  {
    "text": "the most frequently is something called top k so top k again is built on a sketch so",
    "start": "2935280",
    "end": "2940640"
  },
  {
    "text": "it's just a two-dimensional bloom filter it runs a binary min heap alongside the sketch so you can keep track of the most",
    "start": "2940640",
    "end": "2948319"
  },
  {
    "text": "popular items like the top k the top most popular items so we have like our top k's top 10 so it keeps track of the",
    "start": "2948319",
    "end": "2955520"
  },
  {
    "text": "10 most popular items that you've seen by volume so we take all of our inbound reports and",
    "start": "2955520",
    "end": "2962640"
  },
  {
    "text": "we run them through top k on the way in and the top k keeps track of the 10 most frequent reports in the data stream",
    "start": "2962640",
    "end": "2970480"
  },
  {
    "text": "so we can look at this at any point and we can say like right now like what is the top most frequent report that was",
    "start": "2970480",
    "end": "2977520"
  },
  {
    "text": "they're always csp because it's our most volumes report so it's like for us it's like what is the most popular csp report",
    "start": "2977520",
    "end": "2982880"
  },
  {
    "text": "right now right because if someone is at the top of the chart we'll take a look at that reach out to the customer be",
    "start": "2982880",
    "end": "2988240"
  },
  {
    "text": "like hey you're sending us loads of these reports like have you got some major issue maybe a misconfiguration like what's going on",
    "start": "2988240",
    "end": "2994319"
  },
  {
    "text": "but we can do frequency analysis on at peak we're doing like 18 90 000 json payloads a second",
    "start": "2994319",
    "end": "3000960"
  },
  {
    "text": "right this this top k is like four megabytes in redis that's literally all the data structure takes",
    "start": "3000960",
    "end": "3007520"
  },
  {
    "text": "and the final one which i'm currently looking at is a hyperlog log which is basically like how many so i'm",
    "start": "3007520",
    "end": "3013839"
  },
  {
    "start": "3008000",
    "end": "3095000"
  },
  {
    "text": "trying to use a hyperlog log to answer the question from earlier which is how many distinct reports do we see hyperlog logs will count distinct items in a",
    "start": "3013839",
    "end": "3020400"
  },
  {
    "text": "stream so you take all of the inbound report data you pipe it through the hyperlog log and it will tell you how",
    "start": "3020400",
    "end": "3025599"
  },
  {
    "text": "many distinct items have has it seen in that stream so far so if we can figure out over a",
    "start": "3025599",
    "end": "3030880"
  },
  {
    "text": "reasonable period of time how many distinct reports we can see i'm hoping we can extrapolate that forwards and",
    "start": "3030880",
    "end": "3035920"
  },
  {
    "text": "come up with an accurate number but these are all so fast and like the hyperlog log again megabytes tiny little",
    "start": "3035920",
    "end": "3042960"
  },
  {
    "text": "data structure super super fast to do it the processing overhead of top k and hyperloglog on the",
    "start": "3042960",
    "end": "3048640"
  },
  {
    "text": "way i'm right in for us is like nothing i don't care right it's so insignificant when you look at how valuable the data",
    "start": "3048640",
    "end": "3055119"
  },
  {
    "text": "is it doesn't matter so i fell down the rabbit hole of",
    "start": "3055119",
    "end": "3061119"
  },
  {
    "text": "probabilistic data structures hopefully there's something in here that you see and you're kind of like oh maybe maybe",
    "start": "3061119",
    "end": "3066880"
  },
  {
    "text": "we could use it for this thing or maybe it would be useful for that i acknowledge fully like they're not perfect and sometimes",
    "start": "3066880",
    "end": "3073440"
  },
  {
    "text": "especially with like the false positive probability on bloom filters that makes them not acceptable for a lot of use cases",
    "start": "3073440",
    "end": "3079440"
  },
  {
    "text": "but sometimes like all the examples i showed you you can work around those limitations and they can be good enough",
    "start": "3079440",
    "end": "3085920"
  },
  {
    "text": "to save you a seriously large amount of work so i want to wrap it up there because like last time i did this i got so many",
    "start": "3085920",
    "end": "3091760"
  },
  {
    "text": "questions we run out of time i want to make sure these last 10 minutes are good enough for us to ask questions",
    "start": "3091760",
    "end": "3096960"
  },
  {
    "start": "3095000",
    "end": "3599000"
  },
  {
    "text": "so so if you want to punch in a question like you don't want to ask it i'll put the slider link back up for you i'm",
    "start": "3096960",
    "end": "3102640"
  },
  {
    "text": "going to open slido now i'll take them from the audience and i'll take them from from in here",
    "start": "3102640",
    "end": "3108240"
  },
  {
    "text": "that was such a fast question hand i'm worried go on",
    "start": "3108240",
    "end": "3113280"
  },
  {
    "text": "what is the most common room by which your customers are getting the bad",
    "start": "3113280",
    "end": "3118880"
  },
  {
    "text": "jobs okay so what is the most common route",
    "start": "3118880",
    "end": "3125520"
  },
  {
    "text": "that our customers are ending up with cross-site scripting so",
    "start": "3125520",
    "end": "3130640"
  },
  {
    "text": "general like the most common one at the minute is being screwed by your third-party dependencies right by a very",
    "start": "3130640",
    "end": "3136000"
  },
  {
    "text": "very long shot right now we're really not seeing people like hey someone found like a cross-site",
    "start": "3136000",
    "end": "3141599"
  },
  {
    "text": "scripting floor like directing our application and i like i have to carry that because if a group like mage caught and they've",
    "start": "3141599",
    "end": "3147920"
  },
  {
    "text": "been really active recently if they go after a popular dependency they might compromise like a thousand sites",
    "start": "3147920",
    "end": "3154480"
  },
  {
    "text": "right and then but then if they go after one application directly and find crosstalk scripting in your app they get your site so",
    "start": "3154480",
    "end": "3162000"
  },
  {
    "text": "i don't think it's the the crossout scripting vulnerabilities aren't there i think it's just the attackers are going for like the more efficient ways of",
    "start": "3162000",
    "end": "3168000"
  },
  {
    "text": "winning so that's just the current trend that i see [Music]",
    "start": "3168000",
    "end": "3175539"
  },
  {
    "text": "so one of the most notable examples was when the ico which is our information commissioner's office in the uk they're",
    "start": "3176079",
    "end": "3181680"
  },
  {
    "text": "our data privacy watchdog they're the the government organization that find you for data breaches they were running",
    "start": "3181680",
    "end": "3186800"
  },
  {
    "text": "coin hive crypto jacking on their site because it's like data breach from the",
    "start": "3186800",
    "end": "3192319"
  },
  {
    "text": "data breach organized they find themselves i'm not kidding right they find themselves so they had as a government organization",
    "start": "3192319",
    "end": "3199280"
  },
  {
    "text": "they have like a really high requirement for accessibility and they were using a provider for like a text-to-speech",
    "start": "3199280",
    "end": "3204480"
  },
  {
    "text": "plug-in and the provider had their javascript in an s3 bucket with reuse credentials the attackers got in changed the script in",
    "start": "3204480",
    "end": "3210880"
  },
  {
    "text": "the bucket straight into the government site and that was like four and a half thousand sites that we found because",
    "start": "3210880",
    "end": "3217200"
  },
  {
    "text": "they compromised the the common dependency so yeah like it's",
    "start": "3217200",
    "end": "3222640"
  },
  {
    "text": "it's so it's just such an easy way for them to win with the volume of sites",
    "start": "3222640",
    "end": "3228720"
  },
  {
    "text": "a lot of the time the vendor won't tell us how they got screwed right we just know that they did any more in the audience yeah back there",
    "start": "3228720",
    "end": "3237720"
  },
  {
    "text": "so do you mean like the the script itself that they're using or like the location it's loaded from",
    "start": "3263200",
    "end": "3269599"
  },
  {
    "text": "yeah so and i'll reiterate the question again for the audience let me know if i got this wrong but basically like if we're",
    "start": "3270960",
    "end": "3276079"
  },
  {
    "text": "observing you know like a new location that hostile javascript is suddenly coming from is there like a you know some kind",
    "start": "3276079",
    "end": "3282079"
  },
  {
    "text": "of like feed of information that people can use so threat intelligence like that is really expensive because it's really",
    "start": "3282079",
    "end": "3287680"
  },
  {
    "text": "hard to get so we have our own internal threat intelligence fees that we use for exactly that if we've got you know we've",
    "start": "3287680",
    "end": "3293920"
  },
  {
    "text": "got we currently monitor like 47 000 sites and if like a thousand of them suddenly",
    "start": "3293920",
    "end": "3299839"
  },
  {
    "text": "get a new javascript dependency i'm like well either they all just deployed that at the same time or maybe like a common",
    "start": "3299839",
    "end": "3306000"
  },
  {
    "text": "third-party dependency has been compromised and we're seeing something like mage cart we're currently looking at like what to",
    "start": "3306000",
    "end": "3311200"
  },
  {
    "text": "do with that threat intelligence feed because data like that is like mega mega valuable and i'm like",
    "start": "3311200",
    "end": "3316319"
  },
  {
    "text": "what do we do with it and like how do we do it i don't know and we only kind of started seeing this recently by accident",
    "start": "3316319",
    "end": "3322559"
  },
  {
    "text": "and also because of the volume that we have right we can only spot trends like that at volume so right now this is super new for me",
    "start": "3322559",
    "end": "3328960"
  },
  {
    "text": "for us there's only four of us so we're kind of trying to answer that question i don't know is the current",
    "start": "3328960",
    "end": "3334240"
  },
  {
    "text": "answer yeah i mean like and there's plenty of",
    "start": "3334240",
    "end": "3339680"
  },
  {
    "text": "like platforms and things that will take this we want to see what we can do one of the questions here on the slido was what",
    "start": "3339680",
    "end": "3345680"
  },
  {
    "text": "kind of hash functions so it really depends we're using rebloom or redis bloom which is like a fully supported",
    "start": "3345680",
    "end": "3352000"
  },
  {
    "text": "redis module for bloom filters and all the other data structures and they use murmur so that's what we currently use i",
    "start": "3352000",
    "end": "3357920"
  },
  {
    "text": "don't know what other implementations use you'd have to check on you know if you're going to build your own or we",
    "start": "3357920",
    "end": "3363280"
  },
  {
    "text": "just use one of the one of the reddish modules to do this for us",
    "start": "3363280",
    "end": "3368640"
  },
  {
    "text": "any more questions in the crowd i'm fully aware we're like minutes away",
    "start": "3368640",
    "end": "3374640"
  },
  {
    "text": "from free beer which is like the biggest thing that's ever happened to me in norway i bought i went out and had two beers",
    "start": "3374640",
    "end": "3380720"
  },
  {
    "text": "last night and then i ran out of money go ahead",
    "start": "3380720",
    "end": "3386200"
  },
  {
    "text": "[Music]",
    "start": "3386200",
    "end": "3389270"
  },
  {
    "text": "yeah it's tiny because they've only got so the question sorry i'll repeat the question for the audience like we're",
    "start": "3397359",
    "end": "3403599"
  },
  {
    "text": "using like an eight gig filter in report uri and then i said the the filtering chrome was really really small so the",
    "start": "3403599",
    "end": "3408880"
  },
  {
    "text": "first of all the safe browsing data set is curated so once websites are no longer hostile they get chopped off the",
    "start": "3408880",
    "end": "3414960"
  },
  {
    "text": "list so they're keeping it just to like the current set of malicious urls and also like that list is only in the",
    "start": "3414960",
    "end": "3420640"
  },
  {
    "text": "millions and tens of millions and it's just a url we have like seven billion json payloads so when you like you know",
    "start": "3420640",
    "end": "3428319"
  },
  {
    "text": "it's a totally different kind of data set they're they're working in the millions we're working in the billions so when",
    "start": "3428319",
    "end": "3433920"
  },
  {
    "text": "you kind of curate it and make it that small the filter obviously goes down in size a lot",
    "start": "3433920",
    "end": "3439440"
  },
  {
    "text": "and yeah i mean",
    "start": "3440799",
    "end": "3445319"
  },
  {
    "text": "so the question was if we're doing the count can we like link the count of that",
    "start": "3454880",
    "end": "3461440"
  },
  {
    "text": "particular report back to the origin of it so with if i just go back to like this slide here i can potentially answer this",
    "start": "3461440",
    "end": "3468400"
  },
  {
    "text": "in the time i have left so the",
    "start": "3468400",
    "end": "3474160"
  },
  {
    "text": "the short answer to your question is yes and no so the problem so",
    "start": "3474160",
    "end": "3479599"
  },
  {
    "text": "very very very quick and oversimplified introduction to accounting filter instead of just setting the bit you put",
    "start": "3479599",
    "end": "3484799"
  },
  {
    "text": "the count there every time you reset the item in the filter you just increment the count and then if we're setting",
    "start": "3484799",
    "end": "3490640"
  },
  {
    "text": "seven different counts collisions will artificially increase the counts and that's why the count means sketch is called the count min sketch you pull the",
    "start": "3490640",
    "end": "3496960"
  },
  {
    "text": "seven counts and you look at the lowest one because collisions have artificially increased the others",
    "start": "3496960",
    "end": "3502799"
  },
  {
    "text": "with a bloom filter with the hyperlog blog with company sketch you never get the original data back you have to have",
    "start": "3502799",
    "end": "3507839"
  },
  {
    "text": "the report come in in order to query the filter you can never get the data back out but for us the csp report gives us",
    "start": "3507839",
    "end": "3514240"
  },
  {
    "text": "all of the information at the point that we query it so we can look at like where did it come from which of our customers based on their domain and things like",
    "start": "3514240",
    "end": "3519920"
  },
  {
    "text": "that so like yes you can but only because you always",
    "start": "3519920",
    "end": "3525040"
  },
  {
    "text": "have the data when you're doing the query not from the filter itself so that's why it's now",
    "start": "3525040",
    "end": "3531280"
  },
  {
    "text": "yeah 8.4 i think",
    "start": "3531520",
    "end": "3537200"
  },
  {
    "text": "no don't you need one customer so yeah so a really good question the",
    "start": "3537200",
    "end": "3543920"
  },
  {
    "text": "question there was i said my filter was 8.4 gigabytes and the question was is that per customer and the answer was no",
    "start": "3543920",
    "end": "3549760"
  },
  {
    "text": "because basically when the report comes in we just want to know like have we seen this individual report before globally right",
    "start": "3549760",
    "end": "3557040"
  },
  {
    "text": "and and generally speaking like no customer sends us the same report because all of their urls are different in the domain anyway so",
    "start": "3557040",
    "end": "3563599"
  },
  {
    "text": "right now we if we can say we've never seen this before we 100 need to take action on that report and then we'll do",
    "start": "3563599",
    "end": "3569520"
  },
  {
    "text": "a database query and see which customer and things like that so we don't we don't do like any currently per",
    "start": "3569520",
    "end": "3575359"
  },
  {
    "text": "customer filters we have global service filters so yeah like it's it's just one 8.4 gig",
    "start": "3575359",
    "end": "3581760"
  },
  {
    "text": "filter for everything things like",
    "start": "3581760",
    "end": "3586880"
  },
  {
    "text": "things like the medium example i showed you they have like tiny per user per customer filters but we don't",
    "start": "3586880",
    "end": "3593200"
  },
  {
    "text": "all right we've got like 30 seconds are there any questions",
    "start": "3593200",
    "end": "3597839"
  },
  {
    "text": "no i'm going gonna be at the party once i've had two beers we can talk more about balloon filters so thank you very",
    "start": "3598480",
    "end": "3603599"
  },
  {
    "text": "much for coming everybody and have a great night tonight",
    "start": "3603599",
    "end": "3608200"
  },
  {
    "text": "you",
    "start": "3619200",
    "end": "3621280"
  }
]