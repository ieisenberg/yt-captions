[
  {
    "start": "0",
    "end": "32000"
  },
  {
    "text": "all right hello everyone thanks for joining me",
    "start": "11139",
    "end": "16970"
  },
  {
    "text": "today I hope you are enjoying that conference so far my name is Hassan Barakat and I work as a lead consultant",
    "start": "16970",
    "end": "24560"
  },
  {
    "text": "with rediff I in Sydney Australia and today I'm gonna talk to you about SEO service mesh and micro services so my",
    "start": "24560",
    "end": "32780"
  },
  {
    "start": "32000",
    "end": "56000"
  },
  {
    "text": "agenda for today is to talk about what is service mesh and why we should care about it after that we'll go through the",
    "start": "32780",
    "end": "39290"
  },
  {
    "text": "sto building blocks and its architecture and then we'll spend the rest of the talk showing you how would we apply the",
    "start": "39290",
    "end": "45650"
  },
  {
    "text": "main features or leverage the main features from issue such as traffic routing reliability and observability",
    "start": "45650",
    "end": "51200"
  },
  {
    "text": "and applying them on a real-world ed microservices application so why we",
    "start": "51200",
    "end": "57200"
  },
  {
    "start": "56000",
    "end": "82000"
  },
  {
    "text": "should care about SEO a lot of development teams have started the journey in breaking their monolith",
    "start": "57200",
    "end": "62390"
  },
  {
    "text": "applications into set of micro services or building their new applications using micro service architecture micro service",
    "start": "62390",
    "end": "69680"
  },
  {
    "text": "architecture in general has a lot of benefits such as autonomy modularity flexibility and all those kind of things",
    "start": "69680",
    "end": "75229"
  },
  {
    "text": "so in a micro service environment each micro service should be deployed",
    "start": "75229",
    "end": "80479"
  },
  {
    "text": "independently and thanks to the container technology I can easily achieve that so I can containerize my",
    "start": "80479",
    "end": "86450"
  },
  {
    "start": "82000",
    "end": "117000"
  },
  {
    "text": "application put it on top of a docker engine and I'm done with having each service deployed independently but the",
    "start": "86450",
    "end": "93469"
  },
  {
    "text": "container technology itself brings more challenges such as how could I have fault tolerance so if one of the",
    "start": "93469",
    "end": "99170"
  },
  {
    "text": "containers died another one would be automatically spinned up to replace that faulty container or how could I have a",
    "start": "99170",
    "end": "105889"
  },
  {
    "text": "scaling of the number of containers that I have to address the demand coming to my application how could I have service",
    "start": "105889",
    "end": "111979"
  },
  {
    "text": "discovery or load balancing for the services running on my for my application and thanks to the container",
    "start": "111979",
    "end": "118759"
  },
  {
    "start": "117000",
    "end": "191000"
  },
  {
    "text": "orchestration platon research SQL needs a lot of the challenges have already been addressed but there are a few more",
    "start": "118759",
    "end": "125029"
  },
  {
    "text": "challenges that is still to be addressed because those services will need to communicate with each other at a certain",
    "start": "125029",
    "end": "131360"
  },
  {
    "text": "point and previously those services were living on the same host or even in the",
    "start": "131360",
    "end": "137840"
  },
  {
    "text": "same process but right now we have a split those services to be living on a totally different hosts and this means",
    "start": "137840",
    "end": "144409"
  },
  {
    "text": "that the communication between those two services is going to happen across the network and with those",
    "start": "144409",
    "end": "150200"
  },
  {
    "text": "communication happening across the network there are challenges such as how could we have reliable connection between those two services or how could",
    "start": "150200",
    "end": "156830"
  },
  {
    "text": "we have a secure connection so you can kind of encrypt the traffic between the service to service communication also",
    "start": "156830",
    "end": "162650"
  },
  {
    "text": "how could I have traffic routing capabilities to enable me to apply to advance a traffic routing patterns such",
    "start": "162650",
    "end": "168230"
  },
  {
    "text": "as canary based deployments so I can send the traffic or percentage of the traffic to the new version of the",
    "start": "168230",
    "end": "174200"
  },
  {
    "text": "service and as as a service have more trust in it I can incrementally increase",
    "start": "174200",
    "end": "179270"
  },
  {
    "text": "the traffic going to it and so on and so forth but how hard could it be to have",
    "start": "179270",
    "end": "184400"
  },
  {
    "text": "such reliable and secure connectivity patterns and traffic routing capabilities on network to network",
    "start": "184400",
    "end": "190580"
  },
  {
    "text": "communication if we take into consideration the fallacies of distributed computing which are bunch of",
    "start": "190580",
    "end": "197090"
  },
  {
    "text": "false assumptions that as a developers most of the time will make about the distributed systems and those fallacies",
    "start": "197090",
    "end": "203209"
  },
  {
    "text": "are the network is always reliable latencies zero bundles is infinite network is always secure the policy",
    "start": "203209",
    "end": "210590"
  },
  {
    "text": "doesn't change there is one administrative transport cost is zero and the network is homogeneous all of those assumptions are",
    "start": "210590",
    "end": "217330"
  },
  {
    "text": "false assumptions and it makes it really challenging to address the reliability",
    "start": "217330",
    "end": "223370"
  },
  {
    "text": "and the connectivity issues with the service to service communication and as developers our first attempt to address",
    "start": "223370",
    "end": "231739"
  },
  {
    "start": "228000",
    "end": "259000"
  },
  {
    "text": "these challenges is to start by building some libraries so we can go with if we are in a dotnet wallet we will have",
    "start": "231739",
    "end": "238130"
  },
  {
    "text": "something like bully to provide us with circuit breakers or retry patterns or",
    "start": "238130",
    "end": "244330"
  },
  {
    "text": "having self discovery and so on and so forth with different libraries so we end up with bunch of libraries that we",
    "start": "244330",
    "end": "250400"
  },
  {
    "text": "depend on to help us address those infrastructure concerns because it's really under French eiated heavy lifting",
    "start": "250400",
    "end": "255709"
  },
  {
    "text": "but at a certain point with a micro service environment someone will come to you and will tell you that all right it",
    "start": "255709",
    "end": "261680"
  },
  {
    "text": "makes more sense to write this new service in elixir because it of the actor model or it fits this problem",
    "start": "261680",
    "end": "267979"
  },
  {
    "text": "domain perfectly or for any other reason and it might be elixir or NGO or Haskell or whatever language that you would like",
    "start": "267979",
    "end": "273770"
  },
  {
    "text": "write to write your service in and that point you would realize that you have to solve the same problems that",
    "start": "273770",
    "end": "280610"
  },
  {
    "text": "have solve it in your existing language in that new language and again there might be other libraries available to",
    "start": "280610",
    "end": "286250"
  },
  {
    "text": "help you address the challenges but by nature the implementation between different language might be inconsistent",
    "start": "286250",
    "end": "292490"
  },
  {
    "text": "because not everything will have a standard that you will need or you can follow and the solution to that is to",
    "start": "292490",
    "end": "299150"
  },
  {
    "text": "start applying another level of abstraction and that level is exit writing those infrastructure concerns",
    "start": "299150",
    "end": "305180"
  },
  {
    "text": "from inside the application to be living outside the application so if you have a",
    "start": "305180",
    "end": "310580"
  },
  {
    "text": "service that service will be split into two components the first component contains your business domain and the",
    "start": "310580",
    "end": "316759"
  },
  {
    "text": "application logic that you are trying to solve and the second one is what's called a sidecar proxy and the",
    "start": "316759",
    "end": "322419"
  },
  {
    "text": "responsibility of the sidecar proxy is to include those infrastructure concerns and it should be application language",
    "start": "322419",
    "end": "328729"
  },
  {
    "text": "agnostic so the sidecar proxy doesn't have to be aware that your application is written in C sharp or Java or node or",
    "start": "328729",
    "end": "335810"
  },
  {
    "text": "NGO or whatever it doesn't care and this is the key concept that all of the service mesh plasmas have been built",
    "start": "335810",
    "end": "341930"
  },
  {
    "text": "based on it and the service mesh is basically a dedicated piece of infrastructure that is responsible for",
    "start": "341930",
    "end": "349180"
  },
  {
    "text": "connecting and controlling the service to service communication and it's typically implemented as an array of",
    "start": "349180",
    "end": "355580"
  },
  {
    "text": "sidecar proxies living alongside the application code and that sidecar proxy is a application language agnostic and",
    "start": "355580",
    "end": "362599"
  },
  {
    "text": "this is what's called the data plane the second key component of a service mesh is what's called a control plane the",
    "start": "362599",
    "end": "370099"
  },
  {
    "text": "responsibility of the control plane is to accept the traffic rules from the users or the general rules from the user",
    "start": "370099",
    "end": "375949"
  },
  {
    "text": "and send them to all of the services living inside the mesh and mainly the sidecar proxies living inside the mesh",
    "start": "375949",
    "end": "383259"
  },
  {
    "start": "383000",
    "end": "397000"
  },
  {
    "text": "there are multiple service mesh platforms available in the market but the one that I will focus on today is",
    "start": "383259",
    "end": "388370"
  },
  {
    "text": "going to be SEO so SEO is an open source service mesh that provides a uniform way",
    "start": "388370",
    "end": "393650"
  },
  {
    "text": "to connect control secure and observe services so let's assume there are two",
    "start": "393650",
    "end": "400009"
  },
  {
    "start": "397000",
    "end": "563000"
  },
  {
    "text": "services service a would like to communicate with service B this communication could be across different",
    "start": "400009",
    "end": "406490"
  },
  {
    "text": "protocols so it could be a HTTP 1.1 to G RPC or TCP or anything like that",
    "start": "406490",
    "end": "413060"
  },
  {
    "text": "generally without service mesh the communication will be direct between the two services but once we deploy the",
    "start": "413060",
    "end": "420180"
  },
  {
    "text": "services to the service mesh each service will have a proxy living alongside of it and that proxy will",
    "start": "420180",
    "end": "426210"
  },
  {
    "text": "automatically intercept the calls going in and out of my service so if service a would like to",
    "start": "426210",
    "end": "432840"
  },
  {
    "text": "communicate to service B the call go from service a to service a proxy which then will go to service B proxy and",
    "start": "432840",
    "end": "438420"
  },
  {
    "text": "after that it will go to service B and the response will go along the same path and those are the data playing",
    "start": "438420",
    "end": "444480"
  },
  {
    "text": "components of my service machine and in inste architecture there are also the",
    "start": "444480",
    "end": "450570"
  },
  {
    "text": "control playing components and the control playing components and it's you have three main components that you need",
    "start": "450570",
    "end": "456090"
  },
  {
    "text": "to be aware of the first one is the pilot and the responsibility of the pilot is to accept the traffic routing",
    "start": "456090",
    "end": "462270"
  },
  {
    "text": "rules from the user and push them to all of the proxies living alongside a viewer",
    "start": "462270",
    "end": "467370"
  },
  {
    "text": "application in the mesh second component is the mixer and the responsibility of the mixer is policy chicks and telemetry",
    "start": "467370",
    "end": "474450"
  },
  {
    "text": "so any service to service communication will happen inside the mesh will have two calls one pre call and one post call",
    "start": "474450",
    "end": "482220"
  },
  {
    "text": "so if service a would like to communicate to service B the sidecar proxy will go and ask the mixer am I",
    "start": "482220",
    "end": "487890"
  },
  {
    "text": "allowed to go and proceed with that call or not and if I'm if the proxy if the",
    "start": "487890",
    "end": "492990"
  },
  {
    "text": "mixer says yes then the call continues and after the call completes as synchronously the sidecut Brooks you",
    "start": "492990",
    "end": "499980"
  },
  {
    "text": "will be sending some telemetry information to the mixer and the mixer will be shaping those telemetry",
    "start": "499980",
    "end": "505650"
  },
  {
    "text": "information and sending them through adapter pattern to external systems like elasticsearch or application insights as",
    "start": "505650",
    "end": "512070"
  },
  {
    "text": "we will see later in more detail and this enables me to have some observability features around my",
    "start": "512070",
    "end": "518789"
  },
  {
    "text": "services how my services are behaving inside the mesh final final component",
    "start": "518790",
    "end": "524190"
  },
  {
    "text": "from the control plane is a citadel and see that their responsibility is a security aspect of the service mesh so",
    "start": "524190",
    "end": "530460"
  },
  {
    "text": "if we would like to have like an encrypted traffic between the services like living in in my mesh the Citadel",
    "start": "530460",
    "end": "536520"
  },
  {
    "text": "will be generating the certificates and will be pushing them to the sidecar",
    "start": "536520",
    "end": "541770"
  },
  {
    "text": "proxy so we can have like something like mutual TLS authentication between the services living in the mesh and this is",
    "start": "541770",
    "end": "548529"
  },
  {
    "text": "the architecture components of issue so we have the data plain sight card proxies living alongside the application",
    "start": "548529",
    "end": "553990"
  },
  {
    "text": "code and its application language agnostic and the other thing is the control playing components which is",
    "start": "553990",
    "end": "559209"
  },
  {
    "text": "mixer Citadel and pilot alright I would",
    "start": "559209",
    "end": "565329"
  },
  {
    "start": "563000",
    "end": "597000"
  },
  {
    "text": "like to show you the features of estion communities su itself could be deployed",
    "start": "565329",
    "end": "571120"
  },
  {
    "text": "on multiple platforms like cuban ets cloud foundry even virtual machines but",
    "start": "571120",
    "end": "577269"
  },
  {
    "text": "today I'll show you how would we use serve st service mesh on top of cabinets by the way how many of you have used",
    "start": "577269",
    "end": "583269"
  },
  {
    "text": "communities are nice that's half of the room that's cool so just I just want to",
    "start": "583269",
    "end": "591850"
  },
  {
    "text": "make sure that all of us have a shared understanding about two key concepts in cuban et's the first one is the pod and",
    "start": "591850",
    "end": "598389"
  },
  {
    "start": "597000",
    "end": "621000"
  },
  {
    "text": "pod is the atomic unit of scheduling in communities whenever you have a container that you would like to deploy",
    "start": "598389",
    "end": "604269"
  },
  {
    "text": "on top of communities your container is always gonna be living inside the pod the pot itself might have multiple",
    "start": "604269",
    "end": "610480"
  },
  {
    "text": "containers living inside of it and those two those containers will share the same",
    "start": "610480",
    "end": "615579"
  },
  {
    "text": "network name a space which makes the communication between those two containers is seamless and as you might",
    "start": "615579",
    "end": "621790"
  },
  {
    "text": "have guessed this is how would we have the sidecar proxies deployed on kubernetes so we will deploy our",
    "start": "621790",
    "end": "627490"
  },
  {
    "text": "application as a container inside the pot and the sto proxy will be another container inside the same pod the next",
    "start": "627490",
    "end": "634870"
  },
  {
    "start": "633000",
    "end": "681000"
  },
  {
    "text": "concept that you need to be aware of when we are working with st service mesh on top of cuban natives is the services",
    "start": "634870",
    "end": "640420"
  },
  {
    "text": "so service allows us to logically group a set of pack inputs and expose them",
    "start": "640420",
    "end": "646509"
  },
  {
    "text": "using a dns name to be consumed by the clients of that pod so in our example we",
    "start": "646509",
    "end": "651759"
  },
  {
    "text": "have two poles put p and Pudsey and those two poles are exposed through a service and and that service has a DNS",
    "start": "651759",
    "end": "659199"
  },
  {
    "text": "record so my pod a could use that DNS record to communicate with those two pots in addition to that the service",
    "start": "659199",
    "end": "666819"
  },
  {
    "text": "itself have a basic or a limited load",
    "start": "666819",
    "end": "671920"
  },
  {
    "text": "balancing capability so if requests were to go from put a to the service the service will be load balancing those",
    "start": "671920",
    "end": "677920"
  },
  {
    "text": "requests to the back-end pods alright I'll spend the rest of the talk",
    "start": "677920",
    "end": "684040"
  },
  {
    "text": "showing you the capabilities of su using a sample app micro-services application that I have built which is basically",
    "start": "684040",
    "end": "690250"
  },
  {
    "text": "showing a bunch of products and when you click on one of the products it will show us the product description as well",
    "start": "690250",
    "end": "695529"
  },
  {
    "text": "as the reviews and I have two versions of the reviews the reviews v1 which is the one that we have right now and",
    "start": "695529",
    "end": "701740"
  },
  {
    "text": "reviews v2 in the difference between v1 and v2 are those little stars so if we",
    "start": "701740",
    "end": "707290"
  },
  {
    "text": "see the stars this is the v2 of the reviews the application itself consists of three micro services the first one is",
    "start": "707290",
    "end": "714339"
  },
  {
    "text": "the web and this is the one exposing the front-end to the users and then I have a product catalog which includes all the",
    "start": "714339",
    "end": "720970"
  },
  {
    "text": "product information exposed as a set of restful api is consumed by the web and then i have the reviews which is another",
    "start": "720970",
    "end": "728440"
  },
  {
    "text": "micro service includes all of the reviews information for all of the products exposed as a restful api is all",
    "start": "728440",
    "end": "734680"
  },
  {
    "text": "of the data is in in memory there is no database here just to make the example",
    "start": "734680",
    "end": "740050"
  },
  {
    "text": "really focused on the service mesh capabilities so I'll show you how would we deploy those services on top of",
    "start": "740050",
    "end": "745839"
  },
  {
    "text": "kubernetes and then how would we have a proxy living alongside each service so we can intercept that traffic going",
    "start": "745839",
    "end": "752500"
  },
  {
    "text": "between the services using the proxy after that we'll see how would we have traffic routing capabilities so we can",
    "start": "752500",
    "end": "758800"
  },
  {
    "text": "apply a canary pace deployment so we send 80% of the traffic to v1 and 20% of",
    "start": "758800",
    "end": "766089"
  },
  {
    "text": "the traffic to v2 after that I'll show you how would we apply a roll pace traffic routing so if the logged in user",
    "start": "766089",
    "end": "772030"
  },
  {
    "text": "is an administrator I will send that traffic to v2 otherwise we'll send that traffic to v1 after that we will see how",
    "start": "772030",
    "end": "780670"
  },
  {
    "text": "could we leverage the reliability features of s2 to make sure that our system is resilient and we have testing",
    "start": "780670",
    "end": "788709"
  },
  {
    "text": "of how what will happen if the review service were to go down or how could I make sure that for any network",
    "start": "788709",
    "end": "794290"
  },
  {
    "text": "reliability issues I can immediately issue a retry we will see all of those",
    "start": "794290",
    "end": "799630"
  },
  {
    "text": "things finally we will see how could we have observability so we can have a",
    "start": "799630",
    "end": "805720"
  },
  {
    "text": "holistic view of how my services are behaving on top of the mesh so if something were to go wrong with one over",
    "start": "805720",
    "end": "811089"
  },
  {
    "text": "8 of the requests how can I go and find out what happened to that request and which service was contributing to the failure",
    "start": "811089",
    "end": "817480"
  },
  {
    "text": "of my request so let's start by deploying our three services on top of",
    "start": "817480",
    "end": "823540"
  },
  {
    "start": "819000",
    "end": "829000"
  },
  {
    "text": "communities all of the source code is available on github I will share the link at the end of the talk so the",
    "start": "823540",
    "end": "831160"
  },
  {
    "start": "829000",
    "end": "1115000"
  },
  {
    "text": "application is built with asp.net core and it doesn't really matter because as long as we have it in a container we",
    "start": "831160",
    "end": "837040"
  },
  {
    "text": "don't we don't care with SEO service mesh what was the code built with so in order to deploy the services for each",
    "start": "837040",
    "end": "843340"
  },
  {
    "text": "service I'll be deploying the pods as well as a service living in front of the pod and the way I will deploy the pod",
    "start": "843340",
    "end": "849730"
  },
  {
    "text": "will be using a communities deployment object to deploy anything to communities there are four key parameters that we",
    "start": "849730",
    "end": "856330"
  },
  {
    "text": "have to define and the first parameter is the kind of the object that we are deployed using and in this case is",
    "start": "856330",
    "end": "862540"
  },
  {
    "text": "deployment deployment enables me to have multiple replicas like multiple containers for the same service and it",
    "start": "862540",
    "end": "870310"
  },
  {
    "text": "also has other features like roll out and roll back and other advanced it capabilities that we will not get into",
    "start": "870310",
    "end": "876580"
  },
  {
    "text": "today then we define the API version that we are communicating with and the metadata and in this case we only have",
    "start": "876580",
    "end": "882940"
  },
  {
    "text": "the name of the deployment and the spec section this is a key section that we will focus on so first we define the",
    "start": "882940",
    "end": "889360"
  },
  {
    "text": "number of replicas for so we will have how many pods and this case will have one then we have the template section",
    "start": "889360",
    "end": "895720"
  },
  {
    "text": "I'll get to the selector in a second and the template section defines if we were to create a pod out of the deployments",
    "start": "895720",
    "end": "902440"
  },
  {
    "text": "how that pod looked like so my pod will have two labels and labels are a set of",
    "start": "902440",
    "end": "908620"
  },
  {
    "text": "key values that could be assigned to any kubernetes object so we have two labels here the app label and the version and",
    "start": "908620",
    "end": "916050"
  },
  {
    "text": "the split section here is the speckle of the pod so we have multiple containers",
    "start": "916050",
    "end": "921700"
  },
  {
    "text": "but in this case we have only one container and this is the image of that container so we have the image policy if",
    "start": "921700",
    "end": "928900"
  },
  {
    "text": "not present this to allow the QB needs not to go and try to download the image",
    "start": "928900",
    "end": "933910"
  },
  {
    "text": "from the Internet this just saved me a few seconds from the demos and then the name of the container the container will",
    "start": "933910",
    "end": "940120"
  },
  {
    "text": "be listening on port 80 and then we have a couple of environment variables and those environment variables are the URLs",
    "start": "940120",
    "end": "945670"
  },
  {
    "text": "of the product catalog and the reviews and the thing to notice here is the the DNS name that I'm using",
    "start": "945670",
    "end": "952930"
  },
  {
    "text": "for the product catalog and the reviews for and this is basically the name of the service that I will be that will be",
    "start": "952930",
    "end": "959710"
  },
  {
    "text": "living in front of both the product catalog and reviews and we will create them in a second so this is how would we",
    "start": "959710",
    "end": "966130"
  },
  {
    "text": "deploy our pods the last thing that I wanted to touch on with the deployment is a selector pattern and the selector",
    "start": "966130",
    "end": "972430"
  },
  {
    "text": "is how would we glow glue the deployment object with the pods created for that deployment so any pod will have the",
    "start": "972430",
    "end": "979090"
  },
  {
    "text": "labels app and the espresso shop web those are the pods that will be attached to that deployment sake breeze we keep",
    "start": "979090",
    "end": "985270"
  },
  {
    "text": "track how many polls I have with those labels and if the number of the pods dozen didn't match what's expected it",
    "start": "985270",
    "end": "991570"
  },
  {
    "text": "will automatically try to resolve that the next thing is the service object",
    "start": "991570",
    "end": "997600"
  },
  {
    "text": "that will be living in front of my espresso shop web and the service object",
    "start": "997600",
    "end": "1004170"
  },
  {
    "text": "enables me to have as we said a DNS as well as a load balancing capabilities and we define a service by defining a",
    "start": "1004170",
    "end": "1011010"
  },
  {
    "text": "selector and the selector is a label based selector so we say any pot that will have the label with the key app and",
    "start": "1011010",
    "end": "1018240"
  },
  {
    "text": "the value espresso chip web any requests will come to our service will always be going to those pots and the type of the",
    "start": "1018240",
    "end": "1025620"
  },
  {
    "text": "service in this case is a load balancer and the load balancer enables me to accept it traffic from outside the",
    "start": "1025620",
    "end": "1031199"
  },
  {
    "text": "cluster and then the service will be listening on port 80 90 and will be",
    "start": "1031199",
    "end": "1036990"
  },
  {
    "text": "forwarding all the traffic to port 80 there is no specific reason for using or 80 90 it's just an arbitrary number that",
    "start": "1036990",
    "end": "1043949"
  },
  {
    "text": "I picked up so this is how would we deploy the pods as well as the service",
    "start": "1043949",
    "end": "1048960"
  },
  {
    "text": "and similarly I have done the same thing for the product catalog so we have a deployments for the product catalog the",
    "start": "1048960",
    "end": "1055170"
  },
  {
    "text": "differences are just the name and the images that I'm using and then I have a service living in front of the product",
    "start": "1055170",
    "end": "1062100"
  },
  {
    "text": "catalog and as you can see here the name here that I have defined for the product catalog is the same DNS name that I have",
    "start": "1062100",
    "end": "1068430"
  },
  {
    "text": "used while I was defining the environment environment variable for the espresso shop web and the next thing",
    "start": "1068430",
    "end": "1075750"
  },
  {
    "text": "that I have is the reviews and for the reviews I have two deployments one for the",
    "start": "1075750",
    "end": "1081370"
  },
  {
    "text": "of the reviews and another one for the veto of the reviews and now front of the reviews I have a service and that",
    "start": "1081370",
    "end": "1088240"
  },
  {
    "text": "service will be forwarding the traffic to any pot with the espresso shop previews this means that the traffic",
    "start": "1088240",
    "end": "1093910"
  },
  {
    "text": "will keep load balancing between the different versions of the reviews and I",
    "start": "1093910",
    "end": "1098980"
  },
  {
    "text": "can specify which version the traffic will go to you by adding the level to the level selector the version of the",
    "start": "1098980",
    "end": "1105490"
  },
  {
    "text": "app but I would like to leverage sto to apply those traffic routing capabilities",
    "start": "1105490",
    "end": "1111120"
  },
  {
    "text": "so let's go and deploy the application in the first place so I'll use cube City",
    "start": "1111120",
    "end": "1119230"
  },
  {
    "text": "L and I can provide the file that includes all my ml objects and this will",
    "start": "1119230",
    "end": "1126580"
  },
  {
    "text": "go and immediately create the the pods as well as a services switching to the",
    "start": "1126580",
    "end": "1131950"
  },
  {
    "text": "Cuban ETS dashboard I can see that my pods have already been created and if I",
    "start": "1131950",
    "end": "1138670"
  },
  {
    "text": "open any of the pods I can see that inside the pod there is only one container and going to the services",
    "start": "1138670",
    "end": "1145540"
  },
  {
    "text": "sorry it looks like that tunnel is not working",
    "start": "1145540",
    "end": "1152340"
  },
  {
    "text": "so I'm using before the demos mini Q mini cube to run all all the demos on my",
    "start": "1155680",
    "end": "1161500"
  },
  {
    "text": "local machine and in order to be able to access the load balancer services while",
    "start": "1161500",
    "end": "1168220"
  },
  {
    "text": "you have mini cube you need to use mini cube tunnel and this will mean that all of the services will get IDs that I can",
    "start": "1168220",
    "end": "1175150"
  },
  {
    "text": "use while I'm working on my local machine so opening the espresso shop web will show us the application and then",
    "start": "1175150",
    "end": "1182280"
  },
  {
    "text": "opening any of the products will show us the product description as well as reviews and to see that the request will",
    "start": "1182280",
    "end": "1189970"
  },
  {
    "text": "be keep load balancing between the different versions of the reviews I have a little trailer script that will keep",
    "start": "1189970",
    "end": "1195840"
  },
  {
    "text": "querying the reviews and will show us which version of the reviews we are",
    "start": "1195840",
    "end": "1201820"
  },
  {
    "text": "getting as a in the response so if I run the script it will as you can see it",
    "start": "1201820",
    "end": "1209110"
  },
  {
    "text": "will keep hitting the reviews and it will show us which version is coming back and as you can see the requests",
    "start": "1209110",
    "end": "1214660"
  },
  {
    "text": "will be kind of ballasted it's not equally balanced because it's a small number of requests but the more requests",
    "start": "1214660",
    "end": "1220390"
  },
  {
    "text": "we have the more that the load balancing will be more visible in the responses",
    "start": "1220390",
    "end": "1227190"
  },
  {
    "start": "1227000",
    "end": "1237000"
  },
  {
    "text": "all right the next thing that I would like to show you after we deploy the services to communities is how could we",
    "start": "1227190",
    "end": "1233410"
  },
  {
    "text": "start having more advanced traffic routing capabilities and in is tilde",
    "start": "1233410",
    "end": "1239740"
  },
  {
    "start": "1237000",
    "end": "1290000"
  },
  {
    "text": "there are two key components that provides us or enable us to have a traffic routing capabilities the first",
    "start": "1239740",
    "end": "1245980"
  },
  {
    "text": "one is the invoice proxy and invoice proxy is an open source service proxy that have been built from scratch to",
    "start": "1245980",
    "end": "1251740"
  },
  {
    "text": "support the cloud native applications so it's built with c++ let's have a good performance and it's also have a low",
    "start": "1251740",
    "end": "1259060"
  },
  {
    "text": "memory footprint it supports multiple protocols like HTTP 11.1 2g RPC and tcp",
    "start": "1259060",
    "end": "1266500"
  },
  {
    "text": "it also enables it changing or it has a set of api's that enables the changing",
    "start": "1266500",
    "end": "1273130"
  },
  {
    "text": "the configurations or the routing configurations through those api's and it's also have",
    "start": "1273130",
    "end": "1278320"
  },
  {
    "text": "HTTP level 7 routing capability so it can expect like the headers of the requests and this will enable us to to",
    "start": "1278320",
    "end": "1285970"
  },
  {
    "text": "say if our requests have that particular header do this do that the second thing is the pilot",
    "start": "1285970",
    "end": "1291669"
  },
  {
    "start": "1290000",
    "end": "1339000"
  },
  {
    "text": "and the pilot accepts the traffic routing rules from the user push them to all of the sidecar proxies living inside",
    "start": "1291669",
    "end": "1298179"
  },
  {
    "text": "the mesh the pilot itself maintains like a canonical model of the services living on the mesh and it also applies the",
    "start": "1298179",
    "end": "1304870"
  },
  {
    "text": "adapter pattern and this means that the pilot itself could be deployed on multiple platforms such as given it is",
    "start": "1304870",
    "end": "1310870"
  },
  {
    "text": "misses or even virtual machine and those are the key enablers of the traffic",
    "start": "1310870",
    "end": "1316990"
  },
  {
    "text": "routing capabilities but how can I actually define the traffic routing rules the way is you have enabled us to",
    "start": "1316990",
    "end": "1323919"
  },
  {
    "text": "define the traffic routing rules by extending Kuban it is using custom resource definitions so similar to the",
    "start": "1323919",
    "end": "1329590"
  },
  {
    "text": "objects that we have used to create or the ML objects that you used to create a service or deployment it's just a set of",
    "start": "1329590",
    "end": "1336010"
  },
  {
    "text": "other objects that we can create and there are few objects that we need to be",
    "start": "1336010",
    "end": "1341230"
  },
  {
    "start": "1339000",
    "end": "1426000"
  },
  {
    "text": "aware of when we talk about the traffic routing capabilities in issue the first one is the gateway and the",
    "start": "1341230",
    "end": "1346659"
  },
  {
    "text": "responsibility of the Gateway is to if we would like to control the traffic coming from outside the cluster to to",
    "start": "1346659",
    "end": "1352390"
  },
  {
    "text": "inside the cluster we need to have a gateway object and if I'd like to control the traffic going outside the",
    "start": "1352390",
    "end": "1358000"
  },
  {
    "text": "cluster then I need to have a service entry object and to control the traffic",
    "start": "1358000",
    "end": "1363549"
  },
  {
    "text": "with for the service the service communication within the mesh we need to have a destination rule and the",
    "start": "1363549",
    "end": "1368919"
  },
  {
    "text": "destination rules enable us to partition a service into a subsets and we partition the service using a level",
    "start": "1368919",
    "end": "1375549"
  },
  {
    "text": "selector similar to the one that we use with the deployment as well as a service object then we use a destination rule to",
    "start": "1375549",
    "end": "1381789"
  },
  {
    "text": "pack a virtual service object and the virtual service object is the one where we actually define the traffic routing",
    "start": "1381789",
    "end": "1387820"
  },
  {
    "text": "rules and finally we have a sidecar object and the sidecar object enabled us to tune the performance of the service",
    "start": "1387820",
    "end": "1395260"
  },
  {
    "text": "mesh so let's say we have in communities we have to limit spaces and my services",
    "start": "1395260",
    "end": "1400360"
  },
  {
    "text": "will never communicate with name is living enemy space even never communicate would like to any service",
    "start": "1400360",
    "end": "1406990"
  },
  {
    "text": "enemy space piece so I can say don't ever care or send any traffic or apply",
    "start": "1406990",
    "end": "1413080"
  },
  {
    "text": "any traffic going to traffic name is space P and this means that the overall performance of the mesh would be",
    "start": "1413080",
    "end": "1418630"
  },
  {
    "text": "improved because it's less processing will be done by the sidecar proxy and obviously the lower memory footprint",
    "start": "1418630",
    "end": "1426340"
  },
  {
    "start": "1426000",
    "end": "1493000"
  },
  {
    "text": "as well so if I would like to say any traffic going from the web to the",
    "start": "1426340",
    "end": "1432730"
  },
  {
    "text": "reviews should always go to v1 the first thing that I will do is because it's service to service communication within",
    "start": "1432730",
    "end": "1438520"
  },
  {
    "text": "the mesh I will create a destination rule and that destination rule will say I have the any traffic going through the",
    "start": "1438520",
    "end": "1446440"
  },
  {
    "text": "reviews this is a service that will have two subsets v1 and v2 and we'll use the",
    "start": "1446440",
    "end": "1451720"
  },
  {
    "text": "label selector to define those two subsets and then we use a destination rule to create a virtual service and",
    "start": "1451720",
    "end": "1458410"
  },
  {
    "text": "that virtual service will say any traffic going to the reviews should go to v1 or go to v2 or split the traffic",
    "start": "1458410",
    "end": "1465370"
  },
  {
    "text": "or anything like that the destination rule as an object itself enable us to apply other capabilities such as circuit",
    "start": "1465370",
    "end": "1471220"
  },
  {
    "text": "breaker or TLS settings so let's see how would we start right now we have the",
    "start": "1471220",
    "end": "1476500"
  },
  {
    "text": "traffic going to both v1 and v2 let's see how could we have a sidecar proxy for each pod and also week how could we",
    "start": "1476500",
    "end": "1484360"
  },
  {
    "text": "create the destination rule virtual services so we can send the traffic to a particular version as opposed to having",
    "start": "1484360",
    "end": "1489700"
  },
  {
    "text": "the load balancing that we have right now in order to deploy the STI service",
    "start": "1489700",
    "end": "1496990"
  },
  {
    "text": "mesh proxies alongside the post are two ways the first one is we configure a particular namespace to say for any pot",
    "start": "1496990",
    "end": "1503500"
  },
  {
    "text": "that will be created in that namespace automatically inject the sidecar proxy",
    "start": "1503500",
    "end": "1509860"
  },
  {
    "text": "for each pot the other way is to manually do this and in order to do that many way we can use seu CTL and this su",
    "start": "1509860",
    "end": "1518410"
  },
  {
    "text": "CTL command have a cube inject and cube inject will accept the same y ml file",
    "start": "1518410",
    "end": "1523840"
  },
  {
    "text": "that we just used to create the curious object the deployments and the services and what happens is the outcome of that",
    "start": "1523840",
    "end": "1532900"
  },
  {
    "text": "command is let me to provide the file parameter is another UML file and that",
    "start": "1532900",
    "end": "1537910"
  },
  {
    "text": "g-man file will be augmented with all of the parameters required to inject the sidecar proxy to my deployments so you",
    "start": "1537910",
    "end": "1545710"
  },
  {
    "text": "can see here is a service object didn t change because it's not about it's just a service but the deployment of the",
    "start": "1545710",
    "end": "1552370"
  },
  {
    "text": "reviews pods as an example we'll have heaps of parameters have been added but the key thing is to notice here is",
    "start": "1552370",
    "end": "1558610"
  },
  {
    "text": "the container section so previously with the reviews we had one container but",
    "start": "1558610",
    "end": "1565030"
  },
  {
    "text": "right now we'll have two containers the first one is the one that we defined and the second container is going to be the",
    "start": "1565030",
    "end": "1573430"
  },
  {
    "text": "sto proxy and this is how s2 is actually",
    "start": "1573430",
    "end": "1579070"
  },
  {
    "text": "behind the scene injecting those containers to my pots so if I go and let",
    "start": "1579070",
    "end": "1585550"
  },
  {
    "text": "me just clear that and pipe the outcome of that command cube City L it will go",
    "start": "1585550",
    "end": "1591400"
  },
  {
    "text": "and create the pods with post the application container and the HT of",
    "start": "1591400",
    "end": "1596470"
  },
  {
    "text": "proxy and switching to that community",
    "start": "1596470",
    "end": "1601480"
  },
  {
    "text": "dashboard I'd like to show you blue spots we are still creating and they are",
    "start": "1601480",
    "end": "1608860"
  },
  {
    "text": "running so opening any of the newly created post we can see now that we have two containers the application container",
    "start": "1608860",
    "end": "1615670"
  },
  {
    "text": "as well as the SU proxy and if I get back to the application it should be",
    "start": "1615670",
    "end": "1620820"
  },
  {
    "text": "still the traffic keep balancing between the two versions of the services so I'll",
    "start": "1620820",
    "end": "1627430"
  },
  {
    "text": "keep getting v1 and v2 but now since we have the SU proxy in place I can start",
    "start": "1627430",
    "end": "1632980"
  },
  {
    "text": "creating the destination rules and virtual services that will enable me to define which service the traffic should",
    "start": "1632980",
    "end": "1638800"
  },
  {
    "text": "go to so let's start with the",
    "start": "1638800",
    "end": "1644860"
  },
  {
    "text": "destination rules and it's very easy to define a destination rule so the station rule is basically you",
    "start": "1644860",
    "end": "1650350"
  },
  {
    "text": "define the host and the host is the service the Cabarita service that we",
    "start": "1650350",
    "end": "1655420"
  },
  {
    "text": "created so we say for the hostess PrestaShop web SVC we have only one",
    "start": "1655420",
    "end": "1661870"
  },
  {
    "text": "subset in this case and this v1 and the way we define the subset is using a label selector and we are using the",
    "start": "1661870",
    "end": "1667690"
  },
  {
    "text": "version label to define the subset v1 and similarly with the product catalog",
    "start": "1667690",
    "end": "1673360"
  },
  {
    "text": "and finally for the reviews we have two subsets v1 and v2 and we define that",
    "start": "1673360",
    "end": "1679900"
  },
  {
    "text": "again using the label selector which is the version label so this is how we define the destination rule once we have",
    "start": "1679900",
    "end": "1686230"
  },
  {
    "text": "the destination rules in place we start creating the virtual services so for the virtual services I have a",
    "start": "1686230",
    "end": "1694300"
  },
  {
    "text": "virtual service for each micro service and again using the name of the or a DNS",
    "start": "1694300",
    "end": "1700480"
  },
  {
    "text": "name of the Community Service we say for that host espresso shop web SVC for any",
    "start": "1700480",
    "end": "1706480"
  },
  {
    "text": "HDB traffic now with that traffic to the destination and this case it's the same host and which subset that we are using",
    "start": "1706480",
    "end": "1713290"
  },
  {
    "text": "and this is why it's important to have the destination rules in place with the subsets created so we can use them to",
    "start": "1713290",
    "end": "1718630"
  },
  {
    "text": "define the traffic routing rules using the virtual service I have the same",
    "start": "1718630",
    "end": "1724240"
  },
  {
    "text": "another virtual service for the product catalog and finally for the reviews and this is the most important one because",
    "start": "1724240",
    "end": "1730660"
  },
  {
    "text": "in the reviews we have two versions v1 and v2 but once I deploy the virtual",
    "start": "1730660",
    "end": "1735790"
  },
  {
    "text": "service to Kuban it is it will be always routing the traffic to v1 or always",
    "start": "1735790",
    "end": "1741760"
  },
  {
    "text": "routing the traffic to v2 so if I want to go with v2 I'll just change this to v2 so let's go I deploy the destination",
    "start": "1741760",
    "end": "1749260"
  },
  {
    "text": "rules as well as the virtual services as you can see from the ml file they are just the same way we define the previous",
    "start": "1749260",
    "end": "1754840"
  },
  {
    "text": "communities objects so let's go since they are just yet another community object we can just use cube CTL to",
    "start": "1754840",
    "end": "1761380"
  },
  {
    "text": "deploy those objects so I'll deploy the",
    "start": "1761380",
    "end": "1769210"
  },
  {
    "text": "destination rules first and then we'll deploy the virtual services",
    "start": "1769210",
    "end": "1776190"
  },
  {
    "text": "so right now if I go to my application I should always get v2 and as you can see",
    "start": "1780890",
    "end": "1786360"
  },
  {
    "text": "as I keep refreshing it will always showing me the veto which is the one with the stars and if I would like to",
    "start": "1786360",
    "end": "1792110"
  },
  {
    "text": "send that traffic to v1 all I have to do is just it change that very first service to say any traffic going to the",
    "start": "1792110",
    "end": "1799169"
  },
  {
    "text": "review should always go to v1 and I deploy the virtual services again",
    "start": "1799169",
    "end": "1807080"
  },
  {
    "text": "refreshing and now we have v1 so this is how easy it is to start controlling that",
    "start": "1807140",
    "end": "1813120"
  },
  {
    "text": "traffic between the services using the service mission and the good thing with that is I don't have to change my",
    "start": "1813120",
    "end": "1818370"
  },
  {
    "text": "application code or deployment configurations or anything it's just from operation perspective I just to",
    "start": "1818370",
    "end": "1824220"
  },
  {
    "text": "change that Kunis object and it will go and immediately start applying those traffic routing rules and since they are",
    "start": "1824220",
    "end": "1830549"
  },
  {
    "text": "EML files you can have them in your source control and you have versioning and everything you as you do with your",
    "start": "1830549",
    "end": "1835620"
  },
  {
    "text": "normal source code the next thing that i would like to show you is how could we",
    "start": "1835620",
    "end": "1841289"
  },
  {
    "start": "1838000",
    "end": "1995000"
  },
  {
    "text": "start using that virtual service to apply a canary PEZ deployment so we would like instead of sending all the",
    "start": "1841289",
    "end": "1847500"
  },
  {
    "text": "traffic to v1 or or the traffic to v2 I would like to apply to send 80% of the",
    "start": "1847500",
    "end": "1852690"
  },
  {
    "text": "traffic to v1 and 20% of the traffic to v2 and the way you do this is by",
    "start": "1852690",
    "end": "1860690"
  },
  {
    "text": "updating the virtual service that we have just created to include two destinations so we say for the head GB",
    "start": "1860690",
    "end": "1867870"
  },
  {
    "text": "traffic route the traffic into two destinations the v1 which is espresso shop reviews and we define the subset",
    "start": "1867870",
    "end": "1874740"
  },
  {
    "text": "and the additional parameter that we have here is if the weight parameter and oh and here eighty means 80% and the",
    "start": "1874740",
    "end": "1881640"
  },
  {
    "text": "other destination is v2 and this means it's 20% of the traffic so once I deploy",
    "start": "1881640",
    "end": "1889230"
  },
  {
    "text": "this",
    "start": "1889230",
    "end": "1891440"
  },
  {
    "text": "if i refresh the browser i will see most of the requests going to view v1 and",
    "start": "1898450",
    "end": "1903610"
  },
  {
    "text": "then some requests will go to v2 it's hard from the browser to thesis so what I'm gonna do is just I will open like",
    "start": "1903610",
    "end": "1910630"
  },
  {
    "text": "the one of the pods and I will run a shell script that will go and hit the",
    "start": "1910630",
    "end": "1916840"
  },
  {
    "text": "reviews so we can see more so we can see",
    "start": "1916840",
    "end": "1926350"
  },
  {
    "text": "most of the requests are going to v1 and then some request goes to v2 apparently",
    "start": "1926350",
    "end": "1934809"
  },
  {
    "text": "it's all v1 now but again because the traffic routing it's also it's it's bit",
    "start": "1934809",
    "end": "1940389"
  },
  {
    "text": "hard to see that the exact pattern with a very small number of requests but as the number of requests increase it you",
    "start": "1940389",
    "end": "1946779"
  },
  {
    "text": "can see the exact percentages and you can use this to apply like if I like",
    "start": "1946779",
    "end": "1954850"
  },
  {
    "text": "rolling out a new version of my review service I can say all right I'll send only one percent of the traffic to that",
    "start": "1954850",
    "end": "1959889"
  },
  {
    "text": "service I have more confidence in the service I start increasing the percentage till all of the traffic goes to v2 and only small percentage of",
    "start": "1959889",
    "end": "1967330"
  },
  {
    "text": "traffic goes to v1 and all I have to do in order to do this is just changing",
    "start": "1967330",
    "end": "1972700"
  },
  {
    "text": "those numbers from 20 to 100 and this to be zero and those are just enable this",
    "start": "1972700",
    "end": "1981070"
  },
  {
    "text": "enabler it doesn't have to be exactly using those EML files you can have those incremental rollout more automated in a",
    "start": "1981070",
    "end": "1988389"
  },
  {
    "text": "more automated way so you don't have to fiddle around with the ml file all the time the next thing that I would like to",
    "start": "1988389",
    "end": "1996130"
  },
  {
    "start": "1995000",
    "end": "2046000"
  },
  {
    "text": "show you is the user role based routing so I have a little logging feature in my",
    "start": "1996130",
    "end": "2001230"
  },
  {
    "text": "application and I'd like to apply if the logged in user is an administrator or",
    "start": "2001230",
    "end": "2007019"
  },
  {
    "text": "the role of the logged in user is an administrator then send that traffic to v2 otherwise send the traffic to v1 and",
    "start": "2007019",
    "end": "2013110"
  },
  {
    "text": "this enables you to apply if I'd like to roll a new version and would like to test this version with internal users or",
    "start": "2013110",
    "end": "2019260"
  },
  {
    "text": "something like that I can easily apply it with SEO and SEO",
    "start": "2019260",
    "end": "2024270"
  },
  {
    "text": "enables us to do this because for service to service communication that I have my application I have the user role as a",
    "start": "2024270",
    "end": "2031260"
  },
  {
    "text": "header in all of the requests between the services and since is to have a",
    "start": "2031260",
    "end": "2036330"
  },
  {
    "text": "level seven capability I can go and then expect the header and say if the request",
    "start": "2036330",
    "end": "2041880"
  },
  {
    "text": "has a header with that value then do this or do that so and to do this with",
    "start": "2041880",
    "end": "2051990"
  },
  {
    "start": "2046000",
    "end": "2157000"
  },
  {
    "text": "the virtual service I can say for the HTTP traffic if the request has a header",
    "start": "2051990",
    "end": "2057240"
  },
  {
    "text": "and that heather has the key is with the key user role and the value of that",
    "start": "2057240",
    "end": "2062730"
  },
  {
    "text": "header has or contains the word administrator then route that traffic to v2 using the destination object",
    "start": "2062730",
    "end": "2069570"
  },
  {
    "text": "otherwise route the traffic to v1 and this is how easy it to apply the user",
    "start": "2069570",
    "end": "2075330"
  },
  {
    "text": "page routing the virtual service itself might have multiple rules applied within the same virtual service and there could",
    "start": "2075330",
    "end": "2082050"
  },
  {
    "text": "be president so we can say I would like to have 80/20 and in at the same time I",
    "start": "2082050",
    "end": "2087210"
  },
  {
    "text": "would like to have a HTTP level 7 capabilities or routing capabilities and",
    "start": "2087210",
    "end": "2092610"
  },
  {
    "text": "stuff like that so let's go and deploy that",
    "start": "2092610",
    "end": "2097700"
  },
  {
    "text": "so I'll look into my application using admin once I log in here since the",
    "start": "2104829",
    "end": "2117680"
  },
  {
    "text": "logged in user has the role administrator we will always see the reviews v2 which is the one with the",
    "start": "2117680",
    "end": "2123049"
  },
  {
    "text": "stars regardless how many times we refresh the page but if I copy the same URL and open another browser without a",
    "start": "2123049",
    "end": "2132380"
  },
  {
    "text": "logged in version I can see that I have v1 also if I looked into the application and used a none administrator user it",
    "start": "2132380",
    "end": "2144619"
  },
  {
    "text": "will show me the v1 and this is how easy it is to apply those traffic routing",
    "start": "2144619",
    "end": "2150290"
  },
  {
    "text": "capabilities to see and start controlling the rollout of the new version the next thing that I would like",
    "start": "2150290",
    "end": "2159559"
  },
  {
    "start": "2157000",
    "end": "2169000"
  },
  {
    "text": "to talk about is the reliability and in a micro service environment there there might be more than one micro service",
    "start": "2159559",
    "end": "2165559"
  },
  {
    "text": "collaborating with each other to return the response to the customer and in a micro service I would like to have a",
    "start": "2165559",
    "end": "2172089"
  },
  {
    "text": "more resilient system so if something were to go wrong with one of the services I don't want my whole system to",
    "start": "2172089",
    "end": "2177980"
  },
  {
    "text": "go down or there is anything like that and the way we do this is we would like to have something like a retry pattern",
    "start": "2177980",
    "end": "2184520"
  },
  {
    "text": "so if something were to go wrong with the network I can easily retrieve that request or could have faulty injections",
    "start": "2184520",
    "end": "2189799"
  },
  {
    "text": "so I would like to test that if the review service were to go down as an example my whole application doesn't go",
    "start": "2189799",
    "end": "2196910"
  },
  {
    "text": "down and previously I had like without my associate with me I had to fiddle around with the configurations or the",
    "start": "2196910",
    "end": "2202880"
  },
  {
    "text": "network firewalls to disable the communication to a particular service so I can verify such behavior but with s2 I",
    "start": "2202880",
    "end": "2209690"
  },
  {
    "text": "can easily apply that by using a fault injection features from issue finally",
    "start": "2209690",
    "end": "2215030"
  },
  {
    "text": "there's a circuit breaker and circuit breakers enables me if a service doesn't have enough capacity to process the",
    "start": "2215030",
    "end": "2221359"
  },
  {
    "text": "request is that it's accepting right now then we can give it a like to breathe and process whatever request it has and",
    "start": "2221359",
    "end": "2227329"
  },
  {
    "text": "then start sending more requests back to that service so what I will show you is the timeout pattern so in my application",
    "start": "2227329",
    "end": "2234829"
  },
  {
    "start": "2231000",
    "end": "2260000"
  },
  {
    "text": "I have apply the little delay in and so some products if we open them it will take",
    "start": "2234829",
    "end": "2240050"
  },
  {
    "text": "like six seconds but with the timeout I can say regardless how long does it take",
    "start": "2240050",
    "end": "2245540"
  },
  {
    "text": "to actually process that request from a particular service always timeout and 500 milliseconds and this means that if",
    "start": "2245540",
    "end": "2252140"
  },
  {
    "text": "one of the services is really really slow my end users are not impacted by that and we don't have to wait for a",
    "start": "2252140",
    "end": "2258560"
  },
  {
    "text": "very long time so the way you do this is",
    "start": "2258560",
    "end": "2263990"
  },
  {
    "start": "2260000",
    "end": "2357000"
  },
  {
    "text": "by using the virtual service it's really simple and say for any HCB traffic route",
    "start": "2263990",
    "end": "2269270"
  },
  {
    "text": "that traffic to v1 and always timeout in half a second and this means regardless",
    "start": "2269270",
    "end": "2275600"
  },
  {
    "text": "how long does it take the review service to come back to me it will always return",
    "start": "2275600",
    "end": "2280790"
  },
  {
    "text": "within 500 milliseconds so I'll show you before I deploy that that for the some",
    "start": "2280790",
    "end": "2287870"
  },
  {
    "text": "of the products if we open that product we will see that it hell it takes like six seconds to come back as shown here",
    "start": "2287870",
    "end": "2296090"
  },
  {
    "text": "so it takes like six seconds to return the response and we can see that the",
    "start": "2296090",
    "end": "2301940"
  },
  {
    "text": "response here is no reviews yet and once I apply the timeout I will see that it",
    "start": "2301940",
    "end": "2309590"
  },
  {
    "text": "takes like slightly more than 500 milliseconds so let's deploy let's",
    "start": "2309590",
    "end": "2320990"
  },
  {
    "text": "timeout and now getting back to the browser I will refresh the page again",
    "start": "2320990",
    "end": "2328280"
  },
  {
    "text": "and as you can see it took like five hundred and fifteen milliseconds but the",
    "start": "2328280",
    "end": "2334340"
  },
  {
    "text": "review section right now is showing fail to retrieve the product reviews and this might not be the same way that you will",
    "start": "2334340",
    "end": "2340940"
  },
  {
    "text": "approach it in your production environment you might obtain for just removing the whole reviews widget altogether but this is also enables us",
    "start": "2340940",
    "end": "2348080"
  },
  {
    "text": "to make sure that the system will not have a very slow response to the customers the other thing that I would",
    "start": "2348080",
    "end": "2354860"
  },
  {
    "text": "like to show you is the fault injection feature from issue so what is the review",
    "start": "2354860",
    "end": "2359870"
  },
  {
    "start": "2357000",
    "end": "2370000"
  },
  {
    "text": "service would to go down how would I verify that the application will not crash or we show like an exception page",
    "start": "2359870",
    "end": "2367250"
  },
  {
    "text": "or error page to the customer or anything like that and the way we do this is by using the",
    "start": "2367250",
    "end": "2372359"
  },
  {
    "start": "2370000",
    "end": "2444000"
  },
  {
    "text": "fault injection features from sq so if we go to fold we can go and say all",
    "start": "2372359",
    "end": "2379470"
  },
  {
    "text": "right I will update my virtual service and I would like to inject the fault of the type of port and I would like to",
    "start": "2379470",
    "end": "2386460"
  },
  {
    "text": "apply this fault to hundred percent of the traffic I can choose the percentage of the traffic and then as a status code",
    "start": "2386460",
    "end": "2393510"
  },
  {
    "text": "that will be coming with that fault response will be five hundred and this will enable me to test if the review",
    "start": "2393510",
    "end": "2400650"
  },
  {
    "text": "service is down how my application will behave so let's go and apply that fault",
    "start": "2400650",
    "end": "2411829"
  },
  {
    "text": "and now it was thinking five hundred milliseconds but once we refresh now it",
    "start": "2411859",
    "end": "2417000"
  },
  {
    "text": "took only 16 milliseconds because the request actually didn't go to the reviews and there is nothing has been",
    "start": "2417000",
    "end": "2422190"
  },
  {
    "text": "processed is the SEO service immediately sent the response to the web and again",
    "start": "2422190",
    "end": "2427410"
  },
  {
    "text": "since I have applied the logic to a handle that error my application didn't",
    "start": "2427410",
    "end": "2432780"
  },
  {
    "text": "crash but before I apply that logic my application was showing an error page that that the whole page went down",
    "start": "2432780",
    "end": "2438630"
  },
  {
    "text": "because it couldn't reach to the review service the last pattern about a a a is",
    "start": "2438630",
    "end": "2446099"
  },
  {
    "start": "2444000",
    "end": "2526000"
  },
  {
    "text": "a circuit breaker and circuit breaker and means some of the services might not be able to handle more requests at a",
    "start": "2446099",
    "end": "2454440"
  },
  {
    "text": "certain point and if that's the case happened what I can do with the issue is I would say for a particular number of",
    "start": "2454440",
    "end": "2460800"
  },
  {
    "text": "errors so let's say if I have five consecutive errors within 10 seconds",
    "start": "2460800",
    "end": "2466109"
  },
  {
    "text": "then eject 80% of that service so the",
    "start": "2466109",
    "end": "2471570"
  },
  {
    "text": "traffic will not go to that service and I will eject it for three minutes after three minutes I'll start sending",
    "start": "2471570",
    "end": "2477690"
  },
  {
    "text": "more traffic to that service and the service is healthy we'll keep sending the traffic if the services is still",
    "start": "2477690",
    "end": "2484020"
  },
  {
    "text": "unhealthy so we have more errors within in seconds we will eject again 80% for",
    "start": "2484020",
    "end": "2489810"
  },
  {
    "text": "three minutes and so on and so forth and this is how easy you could apply a circuit breaker it doesn't mean that you",
    "start": "2489810",
    "end": "2495810"
  },
  {
    "text": "will not have a circuit breaker logic in your application because the the differences is with the circuit breaker",
    "start": "2495810",
    "end": "2502290"
  },
  {
    "text": "that you have an issue the is doesn't have any fallback logic in place so if the service review service",
    "start": "2502290",
    "end": "2508109"
  },
  {
    "text": "is down for some application you might want to opt for a stale data that you have or a cache data or something like",
    "start": "2508109",
    "end": "2514230"
  },
  {
    "text": "that but this doesn't with issue it you will not get the same benefits but again it's it's one tool that you can use in",
    "start": "2514230",
    "end": "2521910"
  },
  {
    "text": "order to have a high level circuit-breaker features the last thing",
    "start": "2521910",
    "end": "2527880"
  },
  {
    "start": "2526000",
    "end": "2645000"
  },
  {
    "text": "that I would like to talk about is the observability features from issue in a micro service environment generally each",
    "start": "2527880",
    "end": "2533640"
  },
  {
    "text": "service will be generating its own logs and ideally you would be sending those logs to a centralized location and if",
    "start": "2533640",
    "end": "2540630"
  },
  {
    "text": "something were to go wrong with one service you would like to go to that centralized location it could be elasticsearch application in size for",
    "start": "2540630",
    "end": "2546329"
  },
  {
    "text": "anything and you would like to find any logs relevant to that request and we usually do this by having a correlation",
    "start": "2546329",
    "end": "2552839"
  },
  {
    "text": "ID so you have a request each request will have a correlation ID and you pass",
    "start": "2552839",
    "end": "2557880"
  },
  {
    "text": "that correlation idea to all of the services so each service writes its own logs will include that correlation ID",
    "start": "2557880",
    "end": "2563430"
  },
  {
    "text": "and this provides us with what's called the distributed tracing capability so if something were to go wrong",
    "start": "2563430",
    "end": "2569069"
  },
  {
    "text": "I can easily identify which service have the error and what was the context around that and I can easily",
    "start": "2569069",
    "end": "2574769"
  },
  {
    "text": "troubleshoot and diagnose what was going on the next thing with observability is how our micro services are behaving how",
    "start": "2574769",
    "end": "2582869"
  },
  {
    "text": "many errors did I have how many success what is the volume of the request coming to my application what is the latency",
    "start": "2582869",
    "end": "2588599"
  },
  {
    "text": "what is the average duration of the requests in my application and are there any different behaviors for my micro",
    "start": "2588599",
    "end": "2594450"
  },
  {
    "text": "services based on the clients or not and even better I could use all of those matrices to build alerting capabilities",
    "start": "2594450",
    "end": "2601019"
  },
  {
    "text": "on top of them so if something were to go wrong with any of the services I can notify the right people so we can",
    "start": "2601019",
    "end": "2606390"
  },
  {
    "text": "proactively log in and troubleshoot if something to be changed or something went wrong with my services and the good",
    "start": "2606390",
    "end": "2613559"
  },
  {
    "text": "thing was issue we can get all of those benefits using the mixer component so as",
    "start": "2613559",
    "end": "2618690"
  },
  {
    "text": "we said at the beginning any requests will happen between service to services as synchronously the sidecar proxy will",
    "start": "2618690",
    "end": "2625109"
  },
  {
    "text": "be sending telemetry information to the mixer and the mixer will be sending those will be using a platform adapter",
    "start": "2625109",
    "end": "2632160"
  },
  {
    "text": "pattern to send those telemetry information to external systems such as elasticsearch or any other system and",
    "start": "2632160",
    "end": "2639230"
  },
  {
    "text": "this enables us to have this holistic view of my microservices and the good",
    "start": "2639230",
    "end": "2645150"
  },
  {
    "start": "2645000",
    "end": "2683000"
  },
  {
    "text": "thing is this to yourself comes out of the box with a lot of adapters that we can use to plug to plug them into sto",
    "start": "2645150",
    "end": "2653460"
  },
  {
    "text": "and those adapters will will be automatically working without it changing any of the application codes",
    "start": "2653460",
    "end": "2658859"
  },
  {
    "text": "you don't have to install any library to your application that will be sending the logic it just happens out of the",
    "start": "2658859",
    "end": "2664440"
  },
  {
    "text": "books from su without it changing any of the application code and there are heaps of adapters such as AWS promises Jager",
    "start": "2664440",
    "end": "2672710"
  },
  {
    "text": "graph Anna and heaps of others and if you didn't find your system that you are",
    "start": "2672710",
    "end": "2678809"
  },
  {
    "text": "using in those adapters you can build your own adapter to extend issue I'll",
    "start": "2678809",
    "end": "2684480"
  },
  {
    "text": "show you two two demos I will not show you how would you actually like configure an adapter to connect it to st",
    "start": "2684480",
    "end": "2690359"
  },
  {
    "text": "because it's really well documented in sto documentation but i would like to show you after you configure those",
    "start": "2690359",
    "end": "2695789"
  },
  {
    "text": "adapters what are you going to get from a distributed tracing and matrices perspective the first thing is about",
    "start": "2695789",
    "end": "2702329"
  },
  {
    "text": "Yeager and Yeager is an open source this routed tracing platform that has been built by uber and the open sources so we",
    "start": "2702329",
    "end": "2709619"
  },
  {
    "text": "can use it and the second which will help us to identify for those cases that",
    "start": "2709619",
    "end": "2714930"
  },
  {
    "text": "we had a very slow response which service is contributing to that delay the second one is going to be about",
    "start": "2714930",
    "end": "2720630"
  },
  {
    "start": "2719000",
    "end": "2736000"
  },
  {
    "text": "graph Anna and graph Anna it will show us it's another open source platform that we can use to have matrices so we",
    "start": "2720630",
    "end": "2727410"
  },
  {
    "text": "can have dashboards and we can see how the services are behaving from a success rate failure rate latency and all those",
    "start": "2727410",
    "end": "2734339"
  },
  {
    "text": "kind of things so before I do that I",
    "start": "2734339",
    "end": "2739680"
  },
  {
    "start": "2736000",
    "end": "2978000"
  },
  {
    "text": "just want to make sure that we have healthy API so I'm just resetting all of",
    "start": "2739680",
    "end": "2745589"
  },
  {
    "text": "the services to send the traffic to v1 and then let's go and generate some",
    "start": "2745589",
    "end": "2754740"
  },
  {
    "text": "traffic here so what the first thing that I'll shoot is Yeager and I'll go to the slow",
    "start": "2754740",
    "end": "2761460"
  },
  {
    "text": "product that I have in my application and what I have done is for the correlation idea of any request I sent",
    "start": "2761460",
    "end": "2767460"
  },
  {
    "text": "that correlation ID as a response header so if something would to go wrong with with any of the requests I can go and grab that",
    "start": "2767460",
    "end": "2774240"
  },
  {
    "text": "correlation ID which is X request ID and then I will go to the Jager and Jager",
    "start": "2774240",
    "end": "2782760"
  },
  {
    "text": "itself automatically I can see all of the services living inside my mesh and I can go and for",
    "start": "2782760",
    "end": "2789480"
  },
  {
    "text": "example I can select reviews and find all of the traces relevant to the review",
    "start": "2789480",
    "end": "2794730"
  },
  {
    "text": "service but the good thing also I can go and search for a particular trace and this will show me all of the logging",
    "start": "2794730",
    "end": "2802290"
  },
  {
    "text": "information for that particular request so with Jager I can see that for that",
    "start": "2802290",
    "end": "2807359"
  },
  {
    "text": "particular request there was two calls from one from the espresso shop web to",
    "start": "2807359",
    "end": "2812760"
  },
  {
    "text": "the product catalog and that took four milliseconds so all good the other one is went from the pro",
    "start": "2812760",
    "end": "2820170"
  },
  {
    "text": "espresso shop web to the review service and this took six seconds and this means",
    "start": "2820170",
    "end": "2826020"
  },
  {
    "text": "the review service was the source of the delay in this particular case and as you",
    "start": "2826020",
    "end": "2831329"
  },
  {
    "text": "can see there is also it's very easy so you can see the spans and if you have multiple operations happening in place",
    "start": "2831329",
    "end": "2837810"
  },
  {
    "text": "so if the review service would call another service you will see all of the dependencies in there and to have that",
    "start": "2837810",
    "end": "2844440"
  },
  {
    "text": "kind of distributed tracing these pans and all all those kind of things I had to do one small change to my application",
    "start": "2844440",
    "end": "2850560"
  },
  {
    "text": "code which is including a bunch of headers for all of my service of service",
    "start": "2850560",
    "end": "2855839"
  },
  {
    "text": "communication which are like those six or seven headers and it wasn't a big change because in myself microservices",
    "start": "2855839",
    "end": "2863460"
  },
  {
    "text": "environment I already sent the request ID for the logs so I just changed them or added them like those headers so it",
    "start": "2863460",
    "end": "2870390"
  },
  {
    "text": "can give me this nice visualization if I didn't add them I always take it all of the telemetry information but it will",
    "start": "2870390",
    "end": "2877230"
  },
  {
    "text": "not be like nicely visualized as a hurricane view as we have seen with Jager with generous as well I can see",
    "start": "2877230",
    "end": "2885079"
  },
  {
    "text": "that dependencies between the services so I can see something like that which will show me that I have like three",
    "start": "2885079",
    "end": "2892170"
  },
  {
    "text": "services it's not the nicest graph and there are better presentations or representations of the penises but it",
    "start": "2892170",
    "end": "2898980"
  },
  {
    "text": "will show me that I have three services the web product catalog and reviews and all of them are",
    "start": "2898980",
    "end": "2904500"
  },
  {
    "text": "and the dependency that the whip depends on the reviews as well as brother Catholic and the three of them depends",
    "start": "2904500",
    "end": "2909990"
  },
  {
    "text": "on the mixer and this is also coming out with the book so the more services you have you can have a better understanding",
    "start": "2909990",
    "end": "2916200"
  },
  {
    "text": "for the dependencies between those two service between the services you have in your environment the last thing that I",
    "start": "2916200",
    "end": "2923460"
  },
  {
    "text": "would like to show you is graph Anna and because our environment just will",
    "start": "2923460",
    "end": "2928710"
  },
  {
    "text": "refresh few pages and graph Anna will show us some matrices so it will show us the success rate the failure rate so as",
    "start": "2928710",
    "end": "2935160"
  },
  {
    "text": "you can see it which was how many how many requests coming to my services and it's automatically discovering the",
    "start": "2935160",
    "end": "2941130"
  },
  {
    "text": "services living in the measure so I can give it the review service and I can see how many requests is coming to the",
    "start": "2941130",
    "end": "2946500"
  },
  {
    "text": "reviews and I can see it also by a client or by consumer I can see the",
    "start": "2946500",
    "end": "2954390"
  },
  {
    "text": "success and failure I can see the different versions of the reviews as we can see here so I can see v1 and v2 and",
    "start": "2954390",
    "end": "2960599"
  },
  {
    "text": "the good thing I can also use all those telemetry information and build alerting on top of that and I didn't have to",
    "start": "2960599",
    "end": "2967470"
  },
  {
    "text": "change any of the things in my application code to get those telemetry information or all those presentation or",
    "start": "2967470",
    "end": "2974250"
  },
  {
    "text": "graphs and dashboards so the the key",
    "start": "2974250",
    "end": "2980010"
  },
  {
    "start": "2978000",
    "end": "3037000"
  },
  {
    "text": "takeaways that I'd like to make sure that you guys get out of this talk are is to use a service which platforms that",
    "start": "2980010",
    "end": "2985589"
  },
  {
    "text": "provide us with traffic routing observability and security features sto",
    "start": "2985589",
    "end": "2990839"
  },
  {
    "text": "consists of a data plane and a control plane the data plane is the sidecar",
    "start": "2990839",
    "end": "2995940"
  },
  {
    "text": "proxy living alongside the application code and then is to you it's the invoice proxy the control plane consists of",
    "start": "2995940",
    "end": "3002660"
  },
  {
    "text": "three components pilot Pixar and Citadel the pilot provides us with traffic",
    "start": "3002660",
    "end": "3008119"
  },
  {
    "text": "management service discovery and mixer provides us with access control telemetry Citadel provides us with the",
    "start": "3008119",
    "end": "3014330"
  },
  {
    "text": "security aspects from traffic encryption authentication authorization we have seen a lot of the tools or demos about",
    "start": "3014330",
    "end": "3021619"
  },
  {
    "text": "the traffic management and we have seen the telemetry from the mixer we didn't get to see the access control and the",
    "start": "3021619",
    "end": "3027230"
  },
  {
    "text": "encryption but again you define those configurations using yeah Mel objects similar to what we have done and there",
    "start": "3027230",
    "end": "3034430"
  },
  {
    "text": "are heaps of documentation around it from resources respective all of the demos that I have",
    "start": "3034430",
    "end": "3039830"
  },
  {
    "start": "3037000",
    "end": "3104000"
  },
  {
    "text": "shown today are available in that github link if you would like to learn more about sto there is a very good platform",
    "start": "3039830",
    "end": "3047570"
  },
  {
    "text": "called catechu that's really awesome you can just try to have a bunch of",
    "start": "3047570",
    "end": "3052970"
  },
  {
    "text": "tutorials that you can try out is - inside the browser so you don't have to install anything in your local machine",
    "start": "3052970",
    "end": "3058580"
  },
  {
    "text": "or on a cloud environment or anything like that finally if you'd like to learn more about SU the SU documentation is really",
    "start": "3058580",
    "end": "3065000"
  },
  {
    "text": "well documented and it doesn't have like a reference documentation only we also have practical examples of how would you",
    "start": "3065000",
    "end": "3071750"
  },
  {
    "text": "apply sto features on microservices application the slides themselves are",
    "start": "3071750",
    "end": "3076850"
  },
  {
    "text": "available on that bitly link and it includes all of the resources and everything and that that would be it",
    "start": "3076850",
    "end": "3084080"
  },
  {
    "text": "are there any questions alright alright",
    "start": "3084080",
    "end": "3093500"
  },
  {
    "text": "that's it thanks a lot for attending a talk",
    "start": "3093500",
    "end": "3098290"
  },
  {
    "text": "[Applause]",
    "start": "3099210",
    "end": "3104578"
  }
]