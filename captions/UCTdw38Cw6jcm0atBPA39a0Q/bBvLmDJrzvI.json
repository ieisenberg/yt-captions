[
  {
    "text": "like right here and heckling too I suppose um",
    "start": "280",
    "end": "6040"
  },
  {
    "text": "yeah so I think we're going to go ahead and get started uh greetings everyone uh",
    "start": "6040",
    "end": "11280"
  },
  {
    "text": "my name is Chandler kruth really happy to be here uh actually really really happy to be here I haven't actually been",
    "start": "11280",
    "end": "16640"
  },
  {
    "text": "to Norway before I haven't been to this conference before it's so far amazing uh I'm really really excited about all of",
    "start": "16640",
    "end": "22680"
  },
  {
    "text": "it uh and I'm here to talk to you a little bit about the carbon language and kind of our road to one to .1 uh and I",
    "start": "22680",
    "end": "30199"
  },
  {
    "text": "just want to dive into stuff because we got a lot of material to get through so let's let's get started so first off what is the carbon line how many folks",
    "start": "30199",
    "end": "35280"
  },
  {
    "text": "here are are familiar with carbon they know exactly what I'm here to talk about um some not everyone so carbon language",
    "start": "35280",
    "end": "42000"
  },
  {
    "text": "is an attempt to build uh a successor language for a C++ now what do we mean",
    "start": "42000",
    "end": "48160"
  },
  {
    "text": "by a successor language well you're familiar with one of them if you've ever used C++ because actually C++ is a",
    "start": "48160",
    "end": "54600"
  },
  {
    "text": "successor language for C right that's that's actually how C++ got it start was",
    "start": "54600",
    "end": "59680"
  },
  {
    "text": "actually being a successor for C and it's not the only one that you've probably heard of you might have heard of typescript very",
    "start": "59680",
    "end": "64920"
  },
  {
    "text": "popular language right which is a successor language for JavaScript now both typescript and C++ took a very",
    "start": "64920",
    "end": "70960"
  },
  {
    "text": "specific approach to being a successor language they kind of are suers sets right if you write C code generally",
    "start": "70960",
    "end": "76920"
  },
  {
    "text": "speaking it is also going to work in C++ I know there's some committee members here please don't quibble with like the",
    "start": "76920",
    "end": "83560"
  },
  {
    "text": "details on this it's largely a super set and typescript is the same way if you have good and correct job JavaScript",
    "start": "83560",
    "end": "90320"
  },
  {
    "text": "code it just works as typescript code and it's a really effective approach to make a successory language but it does have some downsides it means you inherit",
    "start": "90320",
    "end": "97280"
  },
  {
    "text": "a lot of the technical debt of the original language right and something really exciting has happened in recent",
    "start": "97280",
    "end": "103720"
  },
  {
    "text": "years there have been a different kind of successor language to come out uh the first one for me that kind of opened my",
    "start": "103720",
    "end": "109399"
  },
  {
    "text": "eyes was Swift right and Swift is actually very much a successor to Objective C uh if you look at it but in",
    "start": "109399",
    "end": "115840"
  },
  {
    "text": "no way is Swift a super set of objective c how many folks here know objective syntax I'm sorry to all of you uh it's",
    "start": "115840",
    "end": "124360"
  },
  {
    "text": "just it's it's a really painful it's a really painful syntax in particular um but a great a bunch of great ideas and",
    "start": "124360",
    "end": "130200"
  },
  {
    "text": "Swift was able to basically build a really clean a really nice language but",
    "start": "130200",
    "end": "135480"
  },
  {
    "text": "very much built on the same fundamental ideas of objective c some of the same fundamental ideas of objective c it was",
    "start": "135480",
    "end": "141200"
  },
  {
    "text": "a really great successor language and it did this through interrup you could use all of your Objective C code in Swift",
    "start": "141200",
    "end": "148319"
  },
  {
    "text": "very easily very transparently and another language kind of is taking this further and that's cotlin I don't",
    "start": "148319",
    "end": "153640"
  },
  {
    "text": "know if folks here are familiar with cotlin but it's it's a a successor language for Java and cotlin I think is",
    "start": "153640",
    "end": "160040"
  },
  {
    "text": "just the the best example of this because you can use Java apis in cotlin you can even turn that around and you",
    "start": "160040",
    "end": "166120"
  },
  {
    "text": "can use your cotlin apis in Java the the two languages play very nicely together",
    "start": "166120",
    "end": "171599"
  },
  {
    "text": "they have beautiful interop but it is its own language right it it doesn't include every aspect of java it gets to",
    "start": "171599",
    "end": "177920"
  },
  {
    "text": "do its own thing it gets to kind of move past some of the technical debt and I think that's incredibly powerful and so",
    "start": "177920",
    "end": "184000"
  },
  {
    "text": "our idea is like can we build something like cotlin but for C++ right that's",
    "start": "184000",
    "end": "189440"
  },
  {
    "text": "kind of the the Crux of the idea of carbon and and what we want to achieve with this is a is being this kind of a",
    "start": "189440",
    "end": "196200"
  },
  {
    "text": "successor language and so where do we start with that well we start off with C++ we",
    "start": "196200",
    "end": "201640"
  },
  {
    "text": "actually start with our specific goals for C+ plus uh a bunch of folks wrote some of these goals down in a in a paper",
    "start": "201640",
    "end": "207360"
  },
  {
    "text": "several years ago want high performance software we want to take care of evolution we want code that's easy to",
    "start": "207360",
    "end": "213480"
  },
  {
    "text": "read and understand and to write we want safety and testing mechanisms right scalable and fast development tools",
    "start": "213480",
    "end": "219840"
  },
  {
    "text": "right of course you have to support all the modern platforms and hardware and environments but to be a successor",
    "start": "219840",
    "end": "226080"
  },
  {
    "text": "language we have to tweak these a little bit because these are goals for C++ itself as a successor language we have",
    "start": "226080",
    "end": "232360"
  },
  {
    "text": "to add one more which is around interoperability and migration okay from",
    "start": "232360",
    "end": "237400"
  },
  {
    "text": "existing C++ code and these two things are kind of the whole thing I want to talk to you today",
    "start": "237400",
    "end": "243560"
  },
  {
    "text": "about is like what do we mean by interoperability and migration because that forms the the core of kind of",
    "start": "243560",
    "end": "248680"
  },
  {
    "text": "carbon's most exciting promise that's really what we're focused on especially going into od. one is all about",
    "start": "248680",
    "end": "253879"
  },
  {
    "text": "interoperability and migration now since we announced this uh at C North A couple of years ago uh you can kind of see the",
    "start": "253879",
    "end": "260519"
  },
  {
    "text": "star uh history chart where we did the announcement uh two years ago uh we got",
    "start": "260519",
    "end": "265520"
  },
  {
    "text": "maybe a little too much attention from that announcement because carbon was an incredibly ear early stage project I",
    "start": "265520",
    "end": "270720"
  },
  {
    "text": "don't think people realized how serious we were when we were saying we're just getting started uh we we were very",
    "start": "270720",
    "end": "277080"
  },
  {
    "text": "serious about that um but it is now a really nice open source project we've been very active over the last few years",
    "start": "277080",
    "end": "283720"
  },
  {
    "text": "right uh over 1,800 PR's closed uh 120 uh new contributors got a very active",
    "start": "283720",
    "end": "290120"
  },
  {
    "text": "Discord server where all of the development uh kind of discussions are taking place all this is open it's all on GitHub we're actually kind of",
    "start": "290120",
    "end": "296400"
  },
  {
    "text": "obsessed with GitHub we use GitHub in every way that we can for of our development processes in fact one of our more",
    "start": "296400",
    "end": "303120"
  },
  {
    "text": "interesting uh processes is around governance and evolution this was probably the first challenge we really",
    "start": "303120",
    "end": "308199"
  },
  {
    "text": "set out to to overcome with carbon and we have a really I I think a really nice at least for us nice governance and",
    "start": "308199",
    "end": "314360"
  },
  {
    "text": "evolution process so we have three carbon leads uh Kate Gregory who who uh",
    "start": "314360",
    "end": "319600"
  },
  {
    "text": "just gave a talk and is giving another talk tomorrow um Richard Smith and myself uh we plan to kind of expand this",
    "start": "319600",
    "end": "325880"
  },
  {
    "text": "with teams uh and kind of have a nice sharding function as the project grows but right now it's just just the three",
    "start": "325880",
    "end": "331400"
  },
  {
    "text": "leads for kind of making decisions and as carbon evolves we evolve it through a proposal process but proposals aren't",
    "start": "331400",
    "end": "338520"
  },
  {
    "text": "like weird like PDF processes that come out in a mailing we we have a very very easy process it's just a poll request",
    "start": "338520",
    "end": "345039"
  },
  {
    "text": "it's just a get H request we attach a special document to it and that document really refects the purpose of proposals",
    "start": "345039",
    "end": "351840"
  },
  {
    "text": "right our Evolution process is really centered on documenting what's changing and why is it changing like what problem",
    "start": "351840",
    "end": "357720"
  },
  {
    "text": "are we trying to solve what alternatives didn't work out like what what's motivating us to do all of this and and",
    "start": "357720",
    "end": "363520"
  },
  {
    "text": "why do we think this is the right approach these PRS have kind of an RFC period or request for comment period",
    "start": "363520",
    "end": "370160"
  },
  {
    "text": "right that's open to feedback from everyone and eventually they have to be approved by uh at least one of the",
    "start": "370160",
    "end": "377160"
  },
  {
    "text": "leads one of the nice things is we also can roll these back uh some some folks have a lot of process to try and make",
    "start": "377199",
    "end": "383400"
  },
  {
    "text": "sure that they get all the feedback onto these proposals they don't miss anything that they get it right the first time",
    "start": "383400",
    "end": "390160"
  },
  {
    "text": "we basically don't think we will ever succeed at getting it right and so we're trying to just plan for some failures right we're going to make mistakes here",
    "start": "390160",
    "end": "396520"
  },
  {
    "text": "and that's okay we can roll things back we can actually reverse things and change our minds and change our opinion",
    "start": "396520",
    "end": "401919"
  },
  {
    "text": "uh that's kind of an inherent part of the process we want to use now this process though is anchored",
    "start": "401919",
    "end": "407560"
  },
  {
    "text": "around documenting the evolution it's not really a great way to make Point decisions so we have a separate process",
    "start": "407560",
    "end": "414520"
  },
  {
    "text": "for Point decision- making and these are called leads questions uh and and these are just special GitHub issues there's",
    "start": "414520",
    "end": "421039"
  },
  {
    "text": "not anything more formal to them than that you create a GitHub issue you mark that it's a lead's question to get the",
    "start": "421039",
    "end": "426560"
  },
  {
    "text": "lead's feedback on it and you like start talking about what decision we need to make these can range from super",
    "start": "426560",
    "end": "432160"
  },
  {
    "text": "lightweight process to get feedback like should we go in this direction should we look at this thing to really like",
    "start": "432160",
    "end": "437759"
  },
  {
    "text": "contentious difficult decisions we'll actually extract the entire discussion around those decisions out of a proposal",
    "start": "437759",
    "end": "444199"
  },
  {
    "text": "and into an issue excuse me",
    "start": "444199",
    "end": "449840"
  },
  {
    "text": "so another thing that we're trying to do with carbon is have a road map to give give you some idea of kind of where we're going it also helps Focus the",
    "start": "451360",
    "end": "458280"
  },
  {
    "text": "project keep us like keep us putting all of our energy into the things that are really our priority and it telegraphs to",
    "start": "458280",
    "end": "463919"
  },
  {
    "text": "people you know some things aren't our priority right now right now we're not going to be looking at these things if you want to contribute you'll have to",
    "start": "463919",
    "end": "469680"
  },
  {
    "text": "focus on something else so we publish these at the start of every year uh just through the normal",
    "start": "469680",
    "end": "475080"
  },
  {
    "text": "proposal process and it includes a many retrospective of the previous year",
    "start": "475080",
    "end": "481360"
  },
  {
    "text": "sorry I seem to be losing my voice a little bit hopefully we'll make it through this uh you can find our 2022",
    "start": "482159",
    "end": "487479"
  },
  {
    "text": "road map which really focused on kind of making carbon uh public getting the open source project off the ground you can",
    "start": "487479",
    "end": "493319"
  },
  {
    "text": "also find our 2023 road map uh which was really focused around defining U an MVP",
    "start": "493319",
    "end": "499159"
  },
  {
    "text": "or a o. one version of carbon and we'll get into more of these things as we go through the",
    "start": "499159",
    "end": "505759"
  },
  {
    "text": "talk so for 2024 our theme is really around building a working tool chain and",
    "start": "506759",
    "end": "512159"
  },
  {
    "text": "right and this is where we are today we we've we've got it we've got the project public we've got an active open source project we have a definition for kind of",
    "start": "512159",
    "end": "519039"
  },
  {
    "text": "the milestones we want to be hitting really focused on how do we make a tool chain and part of the reason for",
    "start": "519039",
    "end": "524760"
  },
  {
    "text": "focusing so hard so much on this uh during 2024 is we heard a lot of feedback from folks that they really",
    "start": "524760",
    "end": "530560"
  },
  {
    "text": "need a working tool chain to evaluate carbon to understand it right and even to contribute or participate it it felt",
    "start": "530560",
    "end": "536880"
  },
  {
    "text": "like it was really holding people back it made carbon feel a bit like vaporware and so this is where we're going to put a lot of our energy this year and the",
    "start": "536880",
    "end": "544360"
  },
  {
    "text": "nice thing is that this is also going to I think really unlock a lot of visibility into what it means to have",
    "start": "544360",
    "end": "550079"
  },
  {
    "text": "carbon and what we can do with it now to have a viable tool chain we need to support building meaningful carbon",
    "start": "550079",
    "end": "555959"
  },
  {
    "text": "programs and we need to get some amount of C++ interop and so this this is kind of I",
    "start": "555959",
    "end": "561600"
  },
  {
    "text": "think the interesting thing to talk about but just so you know we do have some telegraphs around 2025 if you click",
    "start": "561600",
    "end": "567800"
  },
  {
    "text": "uh we're going to try and finish our MVP 2025 get to actually .1 uh and that kind",
    "start": "567800",
    "end": "573640"
  },
  {
    "text": "of raises an important question we glossed over uh uh which is what are we talking about with this whole MVP thing",
    "start": "573640",
    "end": "579200"
  },
  {
    "text": "and what do we mean by o. one so sorry carbon has a set of",
    "start": "579200",
    "end": "586959"
  },
  {
    "text": "Milestones that we're using and these are Milestones not in terms of time but in terms of functionality right and",
    "start": "586959",
    "end": "593680"
  },
  {
    "text": "these these tend to be things that are like really clear inflection points that we can already anticipate first one of",
    "start": "593680",
    "end": "599079"
  },
  {
    "text": "these we're calling kind of version .1 which is the MVP or minimum viable product for people to start evaluating",
    "start": "599079",
    "end": "606160"
  },
  {
    "text": "carbon right not not to like ship anything not even necessarily to finish the evaluation but to start evaluating",
    "start": "606160",
    "end": "612560"
  },
  {
    "text": "it seriously uh and this is really going to be focused around complete functioning C++ introp that's the",
    "start": "612560",
    "end": "618399"
  },
  {
    "text": "driving thing behind everything in od. one in od. 2 we want to try and get to",
    "start": "618399",
    "end": "623880"
  },
  {
    "text": "something feature complete complete enough that people can actually finish evaluating they can actually wrap up",
    "start": "623880",
    "end": "629040"
  },
  {
    "text": "their ideas about whether this makes sense or not for them and and really make kind of clear decisions and there's at least there are a bunch of notable",
    "start": "629040",
    "end": "635079"
  },
  {
    "text": "features that we'll talk about here but one of them is definitely this is where we really see memory safety coming into the picture in a big way and the only",
    "start": "635079",
    "end": "642160"
  },
  {
    "text": "other thing that we can anticipate this early is that you know of course at some point if we're successful we we will like to have a 1.0 right this is is kind",
    "start": "642160",
    "end": "648839"
  },
  {
    "text": "of a production quality thing that is a long way away though that's that's that's kind of in the distant future and",
    "start": "648839",
    "end": "653959"
  },
  {
    "text": "that's something I just want to emphasize these Milestones are not short-term Milestones we're not going to do this in the next hundred days or some",
    "start": "653959",
    "end": "660240"
  },
  {
    "text": "something like that these These are multi-year kind of Milestones uh we're really building for sustainability and",
    "start": "660240",
    "end": "666040"
  },
  {
    "text": "for the long term we're not trying to do anything shortterm here as with that I want to zoom in a little bit on this MVP",
    "start": "666040",
    "end": "671639"
  },
  {
    "text": "and carbon .1 and talk talk a little bit more detail about it so first off what do we want to achieve with an .1 release",
    "start": "671639",
    "end": "677920"
  },
  {
    "text": "of carbon so our goal is to enable evaluation of carbon as a C++ successor",
    "start": "677920",
    "end": "684560"
  },
  {
    "text": "right and that tells us something right away our target audience isn't kind of random developers they're not new grad",
    "start": "684560",
    "end": "689920"
  },
  {
    "text": "developers it's not all of the developers it's specifically existing C++ developers existing C++ users people",
    "start": "689920",
    "end": "696839"
  },
  {
    "text": "who already have a C++ code base and might be considering uh uh moving to a different language we also need this",
    "start": "696839",
    "end": "703720"
  },
  {
    "text": "evaluation to be serious right to actually be a credible evaluation of whether carbon makes sense for them and",
    "start": "703720",
    "end": "709399"
  },
  {
    "text": "that means it has to integrate into a real C++ development environment it can't be kind of a toy project on the",
    "start": "709399",
    "end": "714720"
  },
  {
    "text": "side it means that they need to build work in code even if they're not going to ship it to production all that said",
    "start": "714720",
    "end": "720200"
  },
  {
    "text": "we want it to be as minimal as we can get away with because that's going to let us move more quickly like we don't want to put more things than we need to",
    "start": "720200",
    "end": "726440"
  },
  {
    "text": "in here and and the way we really think about the gaps here and keeping this minimal is that these gaps need to be",
    "start": "726440",
    "end": "732480"
  },
  {
    "text": "things that don't undermine the confidence of any evaluation people are doing it's okay if they can't finish",
    "start": "732480",
    "end": "738720"
  },
  {
    "text": "their evaluation but if we have something it's like well I I can't really trust anything that I'm I'm testing right now because it's all",
    "start": "738720",
    "end": "744240"
  },
  {
    "text": "standing on this house of cards that that doesn't make sense that kind of uh confidence Gap is one we do have to care",
    "start": "744240",
    "end": "750240"
  },
  {
    "text": "about and we have to really close and these aren't just like the dimensions around language features we",
    "start": "750240",
    "end": "756880"
  },
  {
    "text": "have a bunch of different evaluation Dimensions that we have to think about from the fundamental language constructs",
    "start": "756880",
    "end": "762120"
  },
  {
    "text": "right how do how do you handle uh generic code how do you handle control flow uh to things like the functional",
    "start": "762120",
    "end": "768000"
  },
  {
    "text": "C++ interrup how do you call across the language boundary uh we think people are going to care about build speed and",
    "start": "768000",
    "end": "773360"
  },
  {
    "text": "scalability like how does it actually impact a realistic you know production codebase and its build system",
    "start": "773360",
    "end": "779880"
  },
  {
    "text": "and we also think people are going to care about performance and and generated code quality people are going to build actual benchmarks with carbon as part of",
    "start": "779880",
    "end": "785519"
  },
  {
    "text": "their evaluation we need to make sure that the the performance is realistic and frankly very competitive so when we look just at the",
    "start": "785519",
    "end": "792839"
  },
  {
    "text": "the the .1 language it's I can't ofid enough that this this does need to be minimal but it's the all of the",
    "start": "792839",
    "end": "798560"
  },
  {
    "text": "necessary features to support evaluation and this is based on kind of our current you know design our current",
    "start": "798560",
    "end": "804279"
  },
  {
    "text": "understanding of the dependencies of all the different parts of the design we're going to try and and hold to that so if",
    "start": "804279",
    "end": "809639"
  },
  {
    "text": "there's something we discover you know we can get away without this and and still evaluate it we're going to try and remove that and pair down the .1 but we",
    "start": "809639",
    "end": "817000"
  },
  {
    "text": "will also add things if we discover they truly are necessary uh we have a long list of the current kind of expected",
    "start": "817000",
    "end": "822720"
  },
  {
    "text": "features on our Milestones documentation I I don't want to just like read a list of language features to you though but",
    "start": "822720",
    "end": "828120"
  },
  {
    "text": "these are the kinds of things we're thinking about for the language itself I think the more interesting",
    "start": "828120",
    "end": "833199"
  },
  {
    "text": "thing is the fact that there's a lot of stuff you're going to find that's missing and and that may be a little bit frustrating at voice at first when look",
    "start": "833199",
    "end": "839279"
  },
  {
    "text": "at o1 you're like but you don't even have X for your favorite language feature X and that's intentional uh the",
    "start": "839279",
    "end": "845360"
  },
  {
    "text": "smaller we can make it the sooner we can ship it and so at each point we're going to look critically and see if we can rip",
    "start": "845360",
    "end": "850800"
  },
  {
    "text": "something out if an evaluator can make progress without that then it doesn't belong no. one that's something we can",
    "start": "850800",
    "end": "856000"
  },
  {
    "text": "we can bring in later uh if it's going to undermine their ability or undermine their confidence that starts to be a",
    "start": "856000",
    "end": "861680"
  },
  {
    "text": "real problem um and and we are going to try and hold to this and that means that I want to kind of talk about some of",
    "start": "861680",
    "end": "868000"
  },
  {
    "text": "these things that are not going to make it and that we've even explicitly deferred to the o.2 Milestone because I",
    "start": "868000",
    "end": "873759"
  },
  {
    "text": "think they're a little bit surprising and three of them I want to call out are kurtines memory safety and metaprogramming uh there are a few more",
    "start": "873759",
    "end": "880160"
  },
  {
    "text": "that you can find in our docs but I think these three are interesting to really look at to understand why we're leaving them out why they're going to",
    "start": "880160",
    "end": "885800"
  },
  {
    "text": "come in uh second instead of first So Meta programming is is is maybe",
    "start": "885800",
    "end": "891399"
  },
  {
    "text": "the easier of these right it's not as relevant for introp as you would think you typically don't have a lot of meta programming on your API boundaries uh it",
    "start": "891399",
    "end": "899320"
  },
  {
    "text": "tends to be something that's more inside of your implementation and and so that that makes it a little bit easier for us",
    "start": "899320",
    "end": "904560"
  },
  {
    "text": "to not include it when we're looking at an interrupt Focus No.1 uh we're also pretty well vered at avoiding the",
    "start": "904560",
    "end": "910440"
  },
  {
    "text": "reflection side of of meta programming in C++ because most folks haven't had it uh it's only just coming into the",
    "start": "910440",
    "end": "916480"
  },
  {
    "text": "standard but the other reason why we really want to leave metaprogramming out is that metaprogramming is incredibly expensive to add to a language it's",
    "start": "916480",
    "end": "923000"
  },
  {
    "text": "incredibly difficult if we can leave this out this is a huge huge reduction in the amount of work to get .1 and so",
    "start": "923000",
    "end": "930079"
  },
  {
    "text": "it's really valuable if we can skip it uh the only thing we think we can't skip are some some really kind of small uh",
    "start": "930079",
    "end": "937079"
  },
  {
    "text": "tactical features we'll probably have to have conditional compilation to handle different platforms that kind of thing",
    "start": "937079",
    "end": "942800"
  },
  {
    "text": "but we want it to be as small and tactical as possible because otherwise we're kind of opening an enormous uh",
    "start": "942800",
    "end": "948519"
  },
  {
    "text": "enormous you know can of worms that that we don't need to for this for this version uh cortines is another example",
    "start": "948519",
    "end": "956120"
  },
  {
    "text": "that's I think tricky and a little frustrating this one's actually really frustrating to me cuz I I particularly like kurtines as a language feature I",
    "start": "956120",
    "end": "962279"
  },
  {
    "text": "think it's so powerful but it's also incredibly complex adding cotin store",
    "start": "962279",
    "end": "967680"
  },
  {
    "text": "scope would set us back an incredible amount of time and I think it's interesting to see that both rust and C++ are still actively learning about",
    "start": "967680",
    "end": "975880"
  },
  {
    "text": "how co- routines work in their language they're still kind of firming up their understanding we're seeing talks",
    "start": "975880",
    "end": "981319"
  },
  {
    "text": "throughout this year of people about like a I figured out a thing about kurtines and and that means that I think",
    "start": "981319",
    "end": "986920"
  },
  {
    "text": "we can we can actually very usefully wait here right we can actually you know help these folks learn they can we can",
    "start": "986920",
    "end": "993079"
  },
  {
    "text": "kind of learn more about how to use co- routines well and reflect on that and actually incorporate that into carbon when we get around to it we're also",
    "start": "993079",
    "end": "1000040"
  },
  {
    "text": "really confident that we can evaluate things without coroutines we've been using C++ without cortines for a long",
    "start": "1000040",
    "end": "1005440"
  },
  {
    "text": "time uh we're very familiar with it and a lot of code doesn't need co- routines and so there's lots of places you can",
    "start": "1005440",
    "end": "1011000"
  },
  {
    "text": "still evaluate here memory safety is maybe the toughest call uh I know not Everyone likes to",
    "start": "1011000",
    "end": "1017839"
  },
  {
    "text": "care about memory safety but do think it is incredibly important and maybe the most important thing for kind of",
    "start": "1017839",
    "end": "1023839"
  },
  {
    "text": "programming languages over the next uh uh uh decade or two and and it's really",
    "start": "1023839",
    "end": "1028918"
  },
  {
    "text": "frustrating to not have this here but I want to be very clear about why very fundamentally C++ is memory unsafe uh",
    "start": "1028919",
    "end": "1038160"
  },
  {
    "text": "like it is fundamentally a memory unsafe language there's no way around that and and it's not going to become memory safe",
    "start": "1038160",
    "end": "1043839"
  },
  {
    "text": "there is no credible realistic path to C++ becoming memory safe in the future",
    "start": "1043839",
    "end": "1049799"
  },
  {
    "text": "and so the the fundamental reality is that any carbon interupt with C++ is",
    "start": "1049799",
    "end": "1054840"
  },
  {
    "text": "going to be interoperating with an unsafe language and the carbon code on",
    "start": "1054840",
    "end": "1060080"
  },
  {
    "text": "on the carbon side of that interop is itself going to be unsafe you see that in every language that does interrupt",
    "start": "1060080",
    "end": "1066039"
  },
  {
    "text": "with C++ there is some amount of unsafe code you simply have to write and so that really needs to be our priority for",
    "start": "1066039",
    "end": "1072640"
  },
  {
    "text": "o1 if we're focused around interrupt we need to get the unsafe layer of carbon right because that's going to be the",
    "start": "1072640",
    "end": "1078960"
  },
  {
    "text": "foundation for the interent up into C++ uh that doesn't mean that memory safety isn't a goal or isn't important it is",
    "start": "1078960",
    "end": "1085919"
  },
  {
    "text": "incredibly incredibly important it is going to be one of the most important things we work on but it it needs to be",
    "start": "1085919",
    "end": "1092200"
  },
  {
    "text": "something we can layer on top of unsafe code because we need that unsafe uh layer in order to interoperate with C++",
    "start": "1092200",
    "end": "1099360"
  },
  {
    "text": "you know we have to meet C++ where it is there so with all of that I want to kind",
    "start": "1099360",
    "end": "1105440"
  },
  {
    "text": "of shift gears from talking about you know exactly how we Define o1 to more",
    "start": "1105440",
    "end": "1110640"
  },
  {
    "text": "like like where we're trying to get to like what what what are we trying to build towards with o1 what direction are we moving in and what's the instate",
    "start": "1110640",
    "end": "1117919"
  },
  {
    "text": "going to look like uh and what should we be kind of evaluating for in that",
    "start": "1117919",
    "end": "1124440"
  },
  {
    "text": "instate so that means I need to explain carbon's kind of incremental migration vision and this isn't something we've",
    "start": "1124440",
    "end": "1130960"
  },
  {
    "text": "really had a good set of chances to talk about but we we have a very specific idea for what it means to look like to",
    "start": "1130960",
    "end": "1137480"
  },
  {
    "text": "migrate from C++ into carbon I'm going to try and walk all the way through that with you today so first we have to meet",
    "start": "1137480",
    "end": "1144720"
  },
  {
    "text": "C++ users where they are and fundamentally they're C++ users they're using C++ so that's actually where we",
    "start": "1144720",
    "end": "1149880"
  },
  {
    "text": "start the first increment of carbon's migration isn't carbon at all the carbon",
    "start": "1149880",
    "end": "1156080"
  },
  {
    "text": "tool chain is actually going to provide a drop in C++ tool chain for your C++",
    "start": "1156080",
    "end": "1162640"
  },
  {
    "text": "code and that's actually the very first thing we want we want to package up clang and lib C++ and LM and all of the",
    "start": "1162640",
    "end": "1168960"
  },
  {
    "text": "different components into a complete really nice really well packaged C++",
    "start": "1168960",
    "end": "1174080"
  },
  {
    "text": "tool chain that you can just put into your existing build system right and Ed to build your existing C++ code right",
    "start": "1174080",
    "end": "1180720"
  },
  {
    "text": "and our goal is right really if you can build your C++ code with clang you should be able to build it with carbon's",
    "start": "1180720",
    "end": "1186320"
  },
  {
    "text": "tool chain because it's just a packaging of clang uh and the first incremental step of trying out carbon is actually to",
    "start": "1186320",
    "end": "1193240"
  },
  {
    "text": "switch your build to carbon's C++ toolchain right uh which should be",
    "start": "1193240",
    "end": "1198360"
  },
  {
    "text": "fairly straightforward you don't have to change any of your source code for that and we think it can even give some nice",
    "start": "1198360",
    "end": "1203400"
  },
  {
    "text": "benefits right currently today it's actually really annoying to get a stable but also really upto-date version of a",
    "start": "1203400",
    "end": "1209960"
  },
  {
    "text": "clang based tool chain um and and we can we can kind of solve that we can make it a lot more approachable we can also make",
    "start": "1209960",
    "end": "1216559"
  },
  {
    "text": "some of the more advanced features a lot easier uh things like getting all the run times like lib C++ but not in in the",
    "start": "1216559",
    "end": "1223520"
  },
  {
    "text": "shared form actually in the archive form so that you don't have to get your R paths right if someone has ever fought",
    "start": "1223520",
    "end": "1228640"
  },
  {
    "text": "with libc Plus+ our paths before I feel your pain um I don't know if folks even know about the lvm libc project which is",
    "start": "1228640",
    "end": "1236400"
  },
  {
    "text": "a lipy overlay being developed in lovm with some really really fantastic uh",
    "start": "1236400",
    "end": "1242400"
  },
  {
    "text": "optimizations and performance improvements in it but almost no one uses it because it's really hard to actually get it and install it and like",
    "start": "1242400",
    "end": "1248840"
  },
  {
    "text": "configure your whole build system to use this feature uh we can we can kind of automate that we can make it really",
    "start": "1248840",
    "end": "1254480"
  },
  {
    "text": "really easy for folks and so I think there's some some advantages we can bring here uh long term one thing I",
    "start": "1254480",
    "end": "1259679"
  },
  {
    "text": "really want us to do is to make sure we support not just one operating system but Linux Mac OS and windows clang is a",
    "start": "1259679",
    "end": "1265640"
  },
  {
    "text": "really unique tool chain because it actually has really uh strong native support for all of these operating",
    "start": "1265640",
    "end": "1271799"
  },
  {
    "text": "systems right you can actually build C++ code on all these operating systems with it and and that's something that we can enable by kind of packaging and making",
    "start": "1271799",
    "end": "1278240"
  },
  {
    "text": "it more readily available okay so once we have you using our build system our tool chain we can",
    "start": "1278240",
    "end": "1285360"
  },
  {
    "text": "take the second increment and the second increment is basically our health hello world this this for me is what what",
    "start": "1285360",
    "end": "1290760"
  },
  {
    "text": "hello world is for a successor language as opposed to kind of for for a language",
    "start": "1290760",
    "end": "1295799"
  },
  {
    "text": "that stands in isolation you want to take one typically very small C++",
    "start": "1295799",
    "end": "1300919"
  },
  {
    "text": "function in your code base and move just that one function over to carbon right",
    "start": "1300919",
    "end": "1306480"
  },
  {
    "text": "so you add you know one carbon file to your existing build system right you don't have to change any of your build",
    "start": "1306480",
    "end": "1311880"
  },
  {
    "text": "system just one one new file right you're already using carbon's tool chain to build all of your C++ code and carbon",
    "start": "1311880",
    "end": "1319400"
  },
  {
    "text": "itself will have the same fundamental build model as C++ and so whatever your build system does for C++ that'll work",
    "start": "1319400",
    "end": "1325600"
  },
  {
    "text": "for carbon right uh you need to use some existing C++ apis from from this",
    "start": "1325600",
    "end": "1331559"
  },
  {
    "text": "function that you're moving so you're going to have to call your C++ code and of course I hope you're not moving a",
    "start": "1331559",
    "end": "1337000"
  },
  {
    "text": "dead function uh into carbon you're moving one that actually has users and so you also need the function you move",
    "start": "1337000",
    "end": "1342240"
  },
  {
    "text": "into carbon to be available to to the rest of your C++ code right and so this",
    "start": "1342240",
    "end": "1347840"
  },
  {
    "text": "this is kind of the first real test of carbon from a migration stance so let's",
    "start": "1347840",
    "end": "1352880"
  },
  {
    "text": "kind of illustrate what this looks like so we have uh some lovely you know everyone's favorite C++ code here right",
    "start": "1352880",
    "end": "1359480"
  },
  {
    "text": "we have you know a function that provides the hello string we have a Hello World function that kind of takes",
    "start": "1359480",
    "end": "1365559"
  },
  {
    "text": "the hello string and puts the the world onto it um have our main function that",
    "start": "1365559",
    "end": "1371159"
  },
  {
    "text": "calls the hello world function and gets the string um so so so this is our C++ code and we want to take this first step",
    "start": "1371159",
    "end": "1377799"
  },
  {
    "text": "so we're going to take this hello world uh header file and source file and we're going to create a hello world. carbon",
    "start": "1377799",
    "end": "1384120"
  },
  {
    "text": "file right and move one function into it and we kind of know what things to put in this file right the hello world and",
    "start": "1384120",
    "end": "1390760"
  },
  {
    "text": "C++ was in a greeting namespace uh carbon files are all forcibly in some",
    "start": "1390760",
    "end": "1396080"
  },
  {
    "text": "top level name space we actually call it a package um and so we'll call that one greeting here and we know that there's a",
    "start": "1396080",
    "end": "1402480"
  },
  {
    "text": "function called hello world so we'll put the hello world function in carbon's uh file when returns a string in C++ so",
    "start": "1402480",
    "end": "1409760"
  },
  {
    "text": "only need to return whatever carbon string is I I don't think it'll actually be spelled core. string here for for",
    "start": "1409760",
    "end": "1415480"
  },
  {
    "text": "what it's worth but we don't have a decision on exactly what the spelling is so I use kind of a safe some some string",
    "start": "1415480",
    "end": "1422039"
  },
  {
    "text": "type in in our standard library right and it's going to do the code in the carbon side is going to look",
    "start": "1422039",
    "end": "1427760"
  },
  {
    "text": "fairly similar to C+ the C++ code it's going to get the G the start of the greeting string it's going to append the",
    "start": "1427760",
    "end": "1433080"
  },
  {
    "text": "world part of it right it's going to return it but there's some challenges here uh to to to to doing this right the",
    "start": "1433080",
    "end": "1439720"
  },
  {
    "text": "first one is we have to call hello somehow uh because hello is still in C++ we didn't move that one so so that",
    "start": "1439720",
    "end": "1446120"
  },
  {
    "text": "that's that still has to get done and we also need to somehow include a header file into this main into the code with",
    "start": "1446120",
    "end": "1453200"
  },
  {
    "text": "the main function right and access a function and call it and get a stood string back right um so so those are the",
    "start": "1453200",
    "end": "1461799"
  },
  {
    "text": "pieces that are really missing so let's let's just kind of continue down into the rabbit hole for a",
    "start": "1461799",
    "end": "1467760"
  },
  {
    "text": "bit and see how this how this actually ends up working all right so we want to first",
    "start": "1467760",
    "end": "1473640"
  },
  {
    "text": "off import this hello function in C+ plus uh uh and we're going to do that by",
    "start": "1473640",
    "end": "1479279"
  },
  {
    "text": "actually using clang right uh because we need to access this hello function so",
    "start": "1479279",
    "end": "1484399"
  },
  {
    "text": "we've got our carbon file we're going to add an import of a C++ library with a",
    "start": "1484399",
    "end": "1491559"
  },
  {
    "text": "header name of hello. H right so you can just directly import C++ headers into your carbon code",
    "start": "1491559",
    "end": "1500320"
  },
  {
    "text": "now what's that going to actually do right so I'm going to kind of illustrate what we're going to implement inside the compiler using source code this isn't",
    "start": "1500320",
    "end": "1507159"
  },
  {
    "text": "actual source code that anyone's ever going to write or see just just think of these as like whatever your internal",
    "start": "1507159",
    "end": "1512480"
  },
  {
    "text": "compiler data structures are uh uh this is this is a source code way of visualizing it so carbon is or so so the",
    "start": "1512480",
    "end": "1518760"
  },
  {
    "text": "so what we're going to do is we're going to ask clang to build a C++ module okay C++ 20 module that's going to represent",
    "start": "1518760",
    "end": "1526799"
  },
  {
    "text": "the apis available in this header file and the way it can do that is that there's this really cool feature inside",
    "start": "1526799",
    "end": "1533360"
  },
  {
    "text": "of C++ 20 uh modules called header units that I know a lot of people really don't like um I'm sympathetic but also it's",
    "start": "1533360",
    "end": "1541480"
  },
  {
    "text": "incredibly important because it lets you do this cool trick uh which is it lets you actually take some header file and",
    "start": "1541480",
    "end": "1548559"
  },
  {
    "text": "say go find everything in that header file and Export it from my module right",
    "start": "1548559",
    "end": "1554360"
  },
  {
    "text": "now when you're actually implementing s plus2 modules this means you have to be able to walk all all of the apis from",
    "start": "1554360",
    "end": "1559399"
  },
  {
    "text": "that header and actually serialize them into some kind of module that's not the use case we have for it what this is",
    "start": "1559399",
    "end": "1565320"
  },
  {
    "text": "going to let us do is have the carbon tool chain go through all of the apis",
    "start": "1565320",
    "end": "1570440"
  },
  {
    "text": "that show up as part of exporting hello. and build interupt for them and",
    "start": "1570440",
    "end": "1576240"
  },
  {
    "text": "so the carbon compiler is going to go and build again this is this is not real code it's going to go and build some",
    "start": "1576240",
    "end": "1581440"
  },
  {
    "text": "synthetic code to model interoperating with the apis that came from hello.",
    "start": "1581440",
    "end": "1588679"
  },
  {
    "text": "right and so we this is in the package CPP because uh we don't we want to try and have a layer of safety from C++",
    "start": "1588679",
    "end": "1595399"
  },
  {
    "text": "which has a global Nam space we don't have a global name space in carbon but we can go through and like",
    "start": "1595399",
    "end": "1601600"
  },
  {
    "text": "well this file has a name space called greeting so we know to put a namespace called greeting into the carbon API",
    "start": "1601600",
    "end": "1607159"
  },
  {
    "text": "right it has a function called hello so we can put a function called hello in the namespace greeting in in the carbon",
    "start": "1607159",
    "end": "1613559"
  },
  {
    "text": "API we know that that function returns a stood string and and carbon can kind of model whatever type mappings need to",
    "start": "1613559",
    "end": "1620840"
  },
  {
    "text": "happen it's like well okay when you're calling this function from carbon we should remap the standard string type of",
    "start": "1620840",
    "end": "1627840"
  },
  {
    "text": "C++ into carbon string type and so I'll I'll return carbon string type uh on the",
    "start": "1627840",
    "end": "1633120"
  },
  {
    "text": "carbon side of this API right so this this is basically the synthetic thing in the carbon compiler",
    "start": "1633120",
    "end": "1638679"
  },
  {
    "text": "that the API is going to expose from this import right so that you have kind of",
    "start": "1638679",
    "end": "1644480"
  },
  {
    "text": "all carbon based things to interact with in your carbon code",
    "start": "1644480",
    "end": "1650080"
  },
  {
    "text": "right so inside the carbon code you can now just call this CVP greeting hello",
    "start": "1650080",
    "end": "1655640"
  },
  {
    "text": "that's no problem at all right and we know what that is because we we kind of built it",
    "start": "1655640",
    "end": "1661000"
  },
  {
    "text": "right and when you do inside that implementation right it's going to have to somehow get back to the C++ side of",
    "start": "1661000",
    "end": "1667600"
  },
  {
    "text": "the world and it's going to call this implementation to tail uh implementation detail function call greeting hello",
    "start": "1667600",
    "end": "1675159"
  },
  {
    "text": "right that users never never touch never write never have to see right and then that's going to go and",
    "start": "1675159",
    "end": "1681000"
  },
  {
    "text": "call the C++ hello function right which is going to return us to string which is going to get returned through the kind",
    "start": "1681000",
    "end": "1686559"
  },
  {
    "text": "of internal magic one right it's going to show back up on the carbon side of the world still as a C++ stood string so",
    "start": "1686559",
    "end": "1693919"
  },
  {
    "text": "there's one other thing here we we had that type mapping we actually have to do something to the string to kind of get",
    "start": "1693919",
    "end": "1699559"
  },
  {
    "text": "it back into the right type right we need to get it back into the carbon string type and so we have to do a type",
    "start": "1699559",
    "end": "1705279"
  },
  {
    "text": "conversion we can imagine that you know Carbon string type is Hope hopefully built for a really nice convertible back",
    "start": "1705279",
    "end": "1710679"
  },
  {
    "text": "and forth between C++ is string type all right now there's some important details here that I just want",
    "start": "1710679",
    "end": "1716640"
  },
  {
    "text": "to emphasize and that's that when we had a call to the C++ function the C++ hello",
    "start": "1716640",
    "end": "1721919"
  },
  {
    "text": "function we didn't do that actual call in carbon right and that's important we actually did it in",
    "start": "1721919",
    "end": "1728320"
  },
  {
    "text": "C++ right because this means that we don't need to have all of the C++ rules",
    "start": "1728320",
    "end": "1733640"
  },
  {
    "text": "mirrored into carbon right this is just C+ a C++ function call it has ad L and",
    "start": "1733640",
    "end": "1738679"
  },
  {
    "text": "overloading and implicit conversions and you know uh uh array type Decay and",
    "start": "1738679",
    "end": "1744039"
  },
  {
    "text": "function type decay all kinds of fun things and really bizarre rules that we never need to think about or put into",
    "start": "1744039",
    "end": "1749960"
  },
  {
    "text": "carbon because we actually do the function call on the C++ side of the boundary right we connect these two with",
    "start": "1749960",
    "end": "1756399"
  },
  {
    "text": "this magic implementation to tail function this is all synthesized by the compiler and it controls both ends of",
    "start": "1756399",
    "end": "1762279"
  },
  {
    "text": "that and so it can arrange for that to be simple and boring and easy to move back and forth between the languages",
    "start": "1762279",
    "end": "1768640"
  },
  {
    "text": "right anything that's really carbon specific anything that's really C++ specific and especially anything that users are interacting with we keep",
    "start": "1768640",
    "end": "1775559"
  },
  {
    "text": "wholly on one side or the other We Don't Let It Bleed across right and that's kind of how we can manage the complexity",
    "start": "1775559",
    "end": "1782279"
  },
  {
    "text": "of both languages across an interop boundary making some sense no questions everybody's still",
    "start": "1782279",
    "end": "1789240"
  },
  {
    "text": "good all right so now we have to turn it around I'm sorry we are still here we're still",
    "start": "1789240",
    "end": "1794919"
  },
  {
    "text": "here excellent so now we have to turn that around and call C++ from carbon and it turns out this is in some ways easier",
    "start": "1794919",
    "end": "1801519"
  },
  {
    "text": "so again the bottom code it's all this this is not real code this is just synthesized code for you to like",
    "start": "1801519",
    "end": "1806679"
  },
  {
    "text": "understand what's happening here but now we have the main function in our C++ code and we have to do",
    "start": "1806679",
    "end": "1813440"
  },
  {
    "text": "something really weird we have to include a header file right and that's that's a little exciting but remember when I said that",
    "start": "1813440",
    "end": "1820360"
  },
  {
    "text": "we got all of your C++ code building with the carbon tool chain right that was important that wasn't just like an",
    "start": "1820360",
    "end": "1826640"
  },
  {
    "text": "incidental thing because that means this isn't just a C++ compiler building your C++ code it's a C++ compiler that knows",
    "start": "1826640",
    "end": "1833760"
  },
  {
    "text": "about carbon and so when it sees an include of this header it can know hey wait a minute wait a wait wait a you're",
    "start": "1833760",
    "end": "1840000"
  },
  {
    "text": "trying to access carbon code and it can synthesize the header file you would",
    "start": "1840000",
    "end": "1845240"
  },
  {
    "text": "want to have in order to access that carbon code right we can build up",
    "start": "1845240",
    "end": "1850399"
  },
  {
    "text": "whatever header file kind of formulation would allow your C++ code to reach into carbon right we know what to put in that",
    "start": "1850399",
    "end": "1858440"
  },
  {
    "text": "because we can go and walk through the carbon file and it has a greeting uh top level namespace uh we call a package in",
    "start": "1858440",
    "end": "1864720"
  },
  {
    "text": "carbon so we'll put a top level name space of greeting into the C++ code right it has a function called hello",
    "start": "1864720",
    "end": "1870080"
  },
  {
    "text": "world inside that and so we'll put a function inside it called Hello World um",
    "start": "1870080",
    "end": "1875240"
  },
  {
    "text": "right and that means that once you go back to C++ code like I just I got normal C++ things I got a greeting",
    "start": "1875240",
    "end": "1880880"
  },
  {
    "text": "namespace and a function called hello world so I can do a using Declaration of it no problem I can call it no problem",
    "start": "1880880",
    "end": "1886519"
  },
  {
    "text": "at all right but when I do call it in the implementation of that that header",
    "start": "1886519",
    "end": "1892240"
  },
  {
    "text": "it can reach into something magic right different kind of magic but again we're going to go to magic some C++ exporting",
    "start": "1892240",
    "end": "1899000"
  },
  {
    "text": "wrapper thing right which we put in our own special weird namespace or we want to",
    "start": "1899000",
    "end": "1904559"
  },
  {
    "text": "set it set it off from everything else right and it's magic this is again a compiler synthesized and controlled",
    "start": "1904559",
    "end": "1911159"
  },
  {
    "text": "boundary between the two languages and we can go over into the carbon side and",
    "start": "1911159",
    "end": "1916399"
  },
  {
    "text": "when we're implementing this p package we can synthesize some extra generated code to support the C++ use case right",
    "start": "1916399",
    "end": "1924559"
  },
  {
    "text": "we can generate our our magical function that Maps this carbon function into the C++ world and the nice thing here is",
    "start": "1924559",
    "end": "1932360"
  },
  {
    "text": "that in carbon we can still talk about the C++ types right we just covered how we import things into carbon from C++ so",
    "start": "1932360",
    "end": "1939320"
  },
  {
    "text": "we can talk about the C++ stood string and the fact that we we are going to have a type conversion we want to handle",
    "start": "1939320",
    "end": "1944919"
  },
  {
    "text": "that type conversion in carbon where we maybe have more cap ilities may have written some special type conversion",
    "start": "1944919",
    "end": "1949960"
  },
  {
    "text": "rules for it and so then we call can kind of call the carbon the pure carbon function here",
    "start": "1949960",
    "end": "1956279"
  },
  {
    "text": "in carbon right we get the carbon string and we can handle any type conversions",
    "start": "1956279",
    "end": "1961720"
  },
  {
    "text": "or mappings or whatever is necessary to make it kind of ready for the C++ world",
    "start": "1961720",
    "end": "1966880"
  },
  {
    "text": "before we hand it back and it shows up as a stood string right which gets returned from our little wrapper and",
    "start": "1966880",
    "end": "1972919"
  },
  {
    "text": "shows up into the C++ code making some",
    "start": "1972919",
    "end": "1979639"
  },
  {
    "text": "sense right and so this lets us you know print hello world uh with interop right",
    "start": "1979639",
    "end": "1984720"
  },
  {
    "text": "it's easy no problem right ship it not that easy uh so this is actually",
    "start": "1984720",
    "end": "1990639"
  },
  {
    "text": "really hard but like hopefully this helps you kind of understand what we have to do and the nice thing for me is",
    "start": "1990639",
    "end": "1995799"
  },
  {
    "text": "that this pattern generalizes really well we can extend this systematically for each and every feature in the",
    "start": "1995799",
    "end": "2001600"
  },
  {
    "text": "language that can show up on an API boundary and this is what forms the basis of our kind of fine grained",
    "start": "2001600",
    "end": "2007039"
  },
  {
    "text": "interrupt story every piece of C++ functionality we need to send across an API boundary we do something roughly",
    "start": "2007039",
    "end": "2012919"
  },
  {
    "text": "like this we build all of these little stages and we actually can move that across the language boundary right and",
    "start": "2012919",
    "end": "2019399"
  },
  {
    "text": "our goal is that you should be able to move one construct across the boundary at a time if needed right and if you",
    "start": "2019399",
    "end": "2024760"
  },
  {
    "text": "want to see some really complex examples that go all the way through like virtual functions and like templates I think in",
    "start": "2024760",
    "end": "2032200"
  },
  {
    "text": "in a talk I gave at C CP now uh last year uh lots of fun examples in there",
    "start": "2032200",
    "end": "2038320"
  },
  {
    "text": "but users probably aren't going to migrate one function at a time for very long I mean sure maybe that that's your",
    "start": "2038320",
    "end": "2043760"
  },
  {
    "text": "hello world you try it out make sure everything works but you probably are going to have a different unit of migration and we expect the typical unit",
    "start": "2043760",
    "end": "2051240"
  },
  {
    "text": "of migration for users to be basically one what we call Modular header files",
    "start": "2051240",
    "end": "2057240"
  },
  {
    "text": "okay and so a modular header is basically some entry point includable",
    "start": "2057240",
    "end": "2062358"
  },
  {
    "text": "header like a header that you actually tell people yeah you include this if you want to get at my my API right as well",
    "start": "2062359",
    "end": "2068158"
  },
  {
    "text": "as all of its implementation details any like implementation detail header files or sources what whatever whatever all",
    "start": "2068159",
    "end": "2073398"
  },
  {
    "text": "the constituent parts of it and carbon we tend to call this a library it's you know our minimal importable or or in C++",
    "start": "2073399",
    "end": "2081158"
  },
  {
    "text": "includable unit of API right and that's kind of the the granularity we expect",
    "start": "2081159",
    "end": "2087320"
  },
  {
    "text": "people to really want to migrate on because that that's going to be the one that fits naturally with how they've organized their code",
    "start": "2087320",
    "end": "2093358"
  },
  {
    "text": "already um and the other thing is you probably don't want to have you know some some library of code and its unit",
    "start": "2093359",
    "end": "2099440"
  },
  {
    "text": "tests split into two different languages I I don't know about you but that would that would not be that would not make me",
    "start": "2099440",
    "end": "2104680"
  },
  {
    "text": "happy um so it will probably also include all the unit tests for it but there's an interesting thing here while",
    "start": "2104680",
    "end": "2110320"
  },
  {
    "text": "while that's that's the granularity of migration you want to kind of maybe you know submit to your code base there are",
    "start": "2110320",
    "end": "2116359"
  },
  {
    "text": "some increments within that that I think provide really really interesting process right also just sorry a brief",
    "start": "2116359",
    "end": "2123160"
  },
  {
    "text": "tangent about C++ 20 modules I know I'm talking a lot about header files yes we know modules are out there they're",
    "start": "2123160",
    "end": "2128720"
  },
  {
    "text": "wonderful uh we're definitely going to support them the same way as header files uh they should really work very",
    "start": "2128720",
    "end": "2134880"
  },
  {
    "text": "similar to modular headers in terms of how we use them uh the only reason they're not our focus is because there's",
    "start": "2134880",
    "end": "2139960"
  },
  {
    "text": "just so many header files in the world we have to make sure we have a really good story for the header files uh we are designing all of this so that it",
    "start": "2139960",
    "end": "2146079"
  },
  {
    "text": "integrates the C++ modules however this brings up another tangent I'm sorry for kind of the the",
    "start": "2146079",
    "end": "2152800"
  },
  {
    "text": "the the repeated tangents here but also uh C++ modules kind of tempt people",
    "start": "2152800",
    "end": "2158160"
  },
  {
    "text": "towards these umbrella modules like uh import stood and things that's going to",
    "start": "2158160",
    "end": "2163720"
  },
  {
    "text": "present some real challenges uh they're going to work but I think they're going to be less efficient and this has",
    "start": "2163720",
    "end": "2168920"
  },
  {
    "text": "nothing to do with carbon or claying or anything else this is about build systems uh umbrella modules really limit",
    "start": "2168920",
    "end": "2175640"
  },
  {
    "text": "your build parallelism uh if you have a lot of them in your code base uh they can also be very expensive to serialize",
    "start": "2175640",
    "end": "2181760"
  },
  {
    "text": "I just want to say generally I advocate to have kind of the smallest unit of of",
    "start": "2181760",
    "end": "2186800"
  },
  {
    "text": "uh importable AP that makes sense not the largest just personal preference I think I think that's actually would be",
    "start": "2186800",
    "end": "2192160"
  },
  {
    "text": "really nice if we could move towards narrow units of import and fine grain dependencies because it really helps",
    "start": "2192160",
    "end": "2198160"
  },
  {
    "text": "kind of build systems kind of maximize their parallelism maximize incremental rebuilds anyways okay I'm sorry for the",
    "start": "2198160",
    "end": "2204359"
  },
  {
    "text": "tangent get back to to a topic here so incrementally migrating a library is",
    "start": "2204359",
    "end": "2209400"
  },
  {
    "text": "going to have some stages in it right it's not going to happen all at once the first stages are probably going to",
    "start": "2209400",
    "end": "2214520"
  },
  {
    "text": "migrate the header and its implementation files uh from C Plus+ to carbon right and and hopefully we have",
    "start": "2214520",
    "end": "2220359"
  },
  {
    "text": "really nice tooling that targets that that kind of even you can point it at a heter file it's like oh so that heter file has these implementation headers",
    "start": "2220359",
    "end": "2226839"
  },
  {
    "text": "these source files we'll migrate those together does that make sense right uh and we can try and produce something",
    "start": "2226839",
    "end": "2232160"
  },
  {
    "text": "that's really near complete nearly idiomatic carbon code from C++ code right carbon's designed to have good",
    "start": "2232160",
    "end": "2239960"
  },
  {
    "text": "matching with C++ idioms right that's that's one of its points and where we have kind of improvements or things we'd",
    "start": "2239960",
    "end": "2245920"
  },
  {
    "text": "like you to do better we can have heris to try and lift from C++ idioms into kind of nicer carbon",
    "start": "2245920",
    "end": "2251960"
  },
  {
    "text": "idioms but we're going to have reasonable fallbacks for almost everything right uh and and very rarely",
    "start": "2251960",
    "end": "2258880"
  },
  {
    "text": "we maybe we will leave like a fix me comment to be like this is super ugly I don't know what was going on in the C++",
    "start": "2258880",
    "end": "2265280"
  },
  {
    "text": "code we did the best we could but you should you should look at this code and make sure it's actually working the way you want and even when we do that we'll",
    "start": "2265280",
    "end": "2272359"
  },
  {
    "text": "try and actually come up with some some contrived sequence of carbon code that",
    "start": "2272359",
    "end": "2277520"
  },
  {
    "text": "precisely replicates the behavior of the C++ code if we can if we can do so uh uh",
    "start": "2277520",
    "end": "2283079"
  },
  {
    "text": "I mean maybe there are some cases where we can't but but generally speaking we expect to be able to just like like it's",
    "start": "2283079",
    "end": "2288400"
  },
  {
    "text": "more that this is going to need eyes and coder view not that it's going to completely fall apart that that's the kind of experience we want people to",
    "start": "2288400",
    "end": "2294520"
  },
  {
    "text": "have here now notably that's not going to move the unit tests at first and that's",
    "start": "2294520",
    "end": "2302040"
  },
  {
    "text": "a really exciting thing because with carbon we can reexport that C++ API that",
    "start": "2302040",
    "end": "2308560"
  },
  {
    "text": "we just migrated now from carbon and we can run the existing C++ unit test",
    "start": "2308560",
    "end": "2314280"
  },
  {
    "text": "against it and make sure that the migration didn't change anything didn't break anything that we actually got it",
    "start": "2314280",
    "end": "2319480"
  },
  {
    "text": "right and and if you if there were problems with it you can kind of iterate there with your unit test like unchanged",
    "start": "2319480",
    "end": "2325520"
  },
  {
    "text": "unit test you know that you didn't break the unit test you can iterate until you're really happy with the carbon code",
    "start": "2325520",
    "end": "2330640"
  },
  {
    "text": "that came out of that migration right and only once you're really happy with it then you can kind",
    "start": "2330640",
    "end": "2336359"
  },
  {
    "text": "of migrate the test and keep the library code the same and get the test to be what you want in carbon right and so we",
    "start": "2336359",
    "end": "2342880"
  },
  {
    "text": "actually want to support this kind of two-stage migration and and the the bidirectional interrupt is so powerful",
    "start": "2342880",
    "end": "2349319"
  },
  {
    "text": "when uh for this because it enables you to really reuse your existing tests to check that your migration is actually",
    "start": "2349319",
    "end": "2356920"
  },
  {
    "text": "working and so once you have this process you can kind of rinse and repeat right every time you have a library you'd like to move to carbon you go you",
    "start": "2356920",
    "end": "2363319"
  },
  {
    "text": "run some tooling it moves the library you you check any comments or fix that were left in it right once it's good you",
    "start": "2363319",
    "end": "2371200"
  },
  {
    "text": "you migrate the test over as well you land that and now you're in carbon right and you you're able to do that kind of",
    "start": "2371200",
    "end": "2376760"
  },
  {
    "text": "anywhere in your code base independently of how other parts of the code base are migrating this is kind of the the vision",
    "start": "2376760",
    "end": "2382960"
  },
  {
    "text": "for how we want carbon migration to work so I'm sure everybody is wondering when do we get to try this out",
    "start": "2382960",
    "end": "2389920"
  },
  {
    "text": "right sadly not yet we're not we're not quite to this yet in fact I want to",
    "start": "2389920",
    "end": "2395280"
  },
  {
    "text": "remind folks this is this is our vision for incremental migration we're not going to have all of that in o1 there's",
    "start": "2395280",
    "end": "2400800"
  },
  {
    "text": "no way it would there's just no way we can have all of this in o1 and our timeline for reaching .1",
    "start": "2400800",
    "end": "2406960"
  },
  {
    "text": "isn't tomorrow I'm afraid uh I wish we were here to announce o1 that would be really cool and all but we we're not",
    "start": "2406960",
    "end": "2412920"
  },
  {
    "text": "quite there so we have a stretch goal of finishing .1 next year uh we're really",
    "start": "2412920",
    "end": "2419079"
  },
  {
    "text": "we're really going to be closing in I think throughout next year uh the tool chain the language and the interrupt",
    "start": "2419079",
    "end": "2424160"
  },
  {
    "text": "support you're going to see in carbon are going to be very steadily expanded uh over the course of the next year uh I",
    "start": "2424160",
    "end": "2430480"
  },
  {
    "text": "think probably packaging up the C++ tool chain and kind of making that package C++ tool chain available is probably one",
    "start": "2430480",
    "end": "2435640"
  },
  {
    "text": "of the first things that's going to land uh relatively earlier uh in the year but getting all the way to .1 I think is a",
    "start": "2435640",
    "end": "2442200"
  },
  {
    "text": "bit unlikely uh it's a bit of a stretch goal um I think a lot there's just there's just a lot of interop and a lot",
    "start": "2442200",
    "end": "2448280"
  },
  {
    "text": "of dependencies uh of interop in the language that we're going to have to sort through in order to finish od. one",
    "start": "2448280",
    "end": "2454760"
  },
  {
    "text": "uh of course the thing that always helps as more contributors uh uh but but we're making pretty steady progress at this",
    "start": "2454760",
    "end": "2460200"
  },
  {
    "text": "point and and I think we're going to get there if not in next year very shortly after but OD one's not going to include",
    "start": "2460200",
    "end": "2466560"
  },
  {
    "text": "all of this lovely automation right the vision is really just a long-term Vision",
    "start": "2466560",
    "end": "2472000"
  },
  {
    "text": "um good tooling and good automation for this kind of migration is its whole own incredibly large project but we think we",
    "start": "2472000",
    "end": "2479359"
  },
  {
    "text": "can evaluate without that because we can just do some of those steps more manually um and we can provide at least",
    "start": "2479359",
    "end": "2485319"
  },
  {
    "text": "rudimentary tools to help with the most mechanical parts of this I I don't want anyone like updating keywords from one",
    "start": "2485319",
    "end": "2491680"
  },
  {
    "text": "spelling to another we have we have scripts and stuff for that um but to get to the really high quality tooling I",
    "start": "2491680",
    "end": "2497640"
  },
  {
    "text": "think is going to take a lot longer and I don't want people to be surprised the first few versions hopefully the interrup part of that migration story",
    "start": "2497640",
    "end": "2504160"
  },
  {
    "text": "works but maybe all of the other things are quite rough edges so why is it taking so long so",
    "start": "2504160",
    "end": "2512400"
  },
  {
    "text": "look things have not been purely smooth sailing on the carbon project I wish they had I wish I you know had no",
    "start": "2512400",
    "end": "2518200"
  },
  {
    "text": "problems on the horizon turns out designing a generic system that supports c++'s use cases is incredibly hard you",
    "start": "2518200",
    "end": "2524800"
  },
  {
    "text": "have to have basically all of the most difficult things to put in a generic type system from specialization to",
    "start": "2524800",
    "end": "2531319"
  },
  {
    "text": "templates to open extension points it's it's just it's incredible and we want to do that without kind of reintroducing",
    "start": "2531319",
    "end": "2538280"
  },
  {
    "text": "things like uh undiagnosed odr problems or or the sound issues that plague most",
    "start": "2538280",
    "end": "2545440"
  },
  {
    "text": "other uh uh type systems the other thing that was really hard is actually building a working governance",
    "start": "2545440",
    "end": "2550680"
  },
  {
    "text": "and evolution model it turned out that that took us a whole bunch of attempts to get right uh uh if you want some of",
    "start": "2550680",
    "end": "2555839"
  },
  {
    "text": "the fun stories ask me or Kate anytime we have we have many scars to talk about how it this was not obvious at first",
    "start": "2555839",
    "end": "2564280"
  },
  {
    "text": "also I just have to say briefly starting a new programming language right before",
    "start": "2564280",
    "end": "2569960"
  },
  {
    "text": "a global pandemic is not ideal uh that we that was not great in the way of",
    "start": "2569960",
    "end": "2576480"
  },
  {
    "text": "planning uh didn't really plan for it but that definitely was a wrinkle like",
    "start": "2576480",
    "end": "2582200"
  },
  {
    "text": "lots of stuff has gone wrong uh at a higher level though we're not trying to",
    "start": "2582200",
    "end": "2587800"
  },
  {
    "text": "race forward with carbon right we're trying to build carbon for the long term we're trying to really get the",
    "start": "2587800",
    "end": "2593400"
  },
  {
    "text": "foundations right we've seen deferring kind of foundational work cause problems",
    "start": "2593400",
    "end": "2599040"
  },
  {
    "text": "for C++ cause problems for cling over and over again we never end up going",
    "start": "2599040",
    "end": "2604839"
  },
  {
    "text": "back and actually refitting and fixing problem problems in the foundational work everything ends up building on top",
    "start": "2604839",
    "end": "2610240"
  },
  {
    "text": "of them there too many dependencies we give up and we live with the kind of messy foundations there right we're",
    "start": "2610240",
    "end": "2616160"
  },
  {
    "text": "really trying to prioritize these foundational improvements we're also trying to set ourselves up for for sustainability and for the long term",
    "start": "2616160",
    "end": "2622800"
  },
  {
    "text": "even at the expense of speed in some cases uh the thing we are trying to do is we're trying to recapture speed",
    "start": "2622800",
    "end": "2628319"
  },
  {
    "text": "through incrementality wherever we can right and so this is why we have uh uh the more minimal o. one because that",
    "start": "2628319",
    "end": "2634960"
  },
  {
    "text": "gives us incrementality for Speed we don't want to cut corners and and have kind of shaky foundations uh uh in in o.",
    "start": "2634960",
    "end": "2643079"
  },
  {
    "text": "one and the investment in the foundations is actually paying off uh uh there there's a lot of cool stuff we're starting to see where these Investments",
    "start": "2643079",
    "end": "2649760"
  },
  {
    "text": "are are actually bearing a lot of fruit and I think it'd be really nice to kind of look at one and make it a lot more",
    "start": "2649760",
    "end": "2656119"
  },
  {
    "text": "concrete specifically this tool chain that we've supposedly been working on all year um and I think rather than do",
    "start": "2656119",
    "end": "2662880"
  },
  {
    "text": "that on slides we should do that live uh live demo is perilous and so we'll see how this goes uh but we're going to try",
    "start": "2662880",
    "end": "2670520"
  },
  {
    "text": "and do a little bit of live demo so the first bit of live demo is uh this this is just the carbon GitHub uh uh there's",
    "start": "2670520",
    "end": "2677880"
  },
  {
    "text": "nothing special here like uh and if we go to the whole getting started",
    "start": "2677880",
    "end": "2683280"
  },
  {
    "text": "thing we have a new bit of text here that's really exciting if you haven't seen it because we are actually putting",
    "start": "2683280",
    "end": "2689920"
  },
  {
    "text": "out nightly builds of the the carbon tool chain that you can just download and play with um and we have a a bunch",
    "start": "2689920",
    "end": "2697400"
  },
  {
    "text": "of uh steps to do that but you know copying and pasting stuff is lame and not very much live demo so I'm going to",
    "start": "2697400",
    "end": "2703319"
  },
  {
    "text": "try and actually live demo this so I I don't use bash I use the fish shell so it doesn't",
    "start": "2703319",
    "end": "2709400"
  },
  {
    "text": "look exactly like the script but we're going to you know set a version to yesterday's date",
    "start": "2709400",
    "end": "2716480"
  },
  {
    "text": "uh and sorry if I'm a little bit awkward typing here because I have to do this on a Linux machine that's not up on the",
    "start": "2716480",
    "end": "2722000"
  },
  {
    "text": "podium so we have yesterday's date and now we can kind of go and",
    "start": "2722000",
    "end": "2727640"
  },
  {
    "text": "download a snapshot of the the tool chain from the kind of nightly builds that we put up on GitHub so we'll go in",
    "start": "2727640",
    "end": "2735079"
  },
  {
    "text": "hopefully down stuff very quickly goodness quick and we can uh extract",
    "start": "2735079",
    "end": "2743920"
  },
  {
    "text": "that and just go into it we've got a a lovely compiler here",
    "start": "2744359",
    "end": "2751000"
  },
  {
    "text": "and run it has has help it has it has lots of help but you'll notice that the line wrapping is really bad and they're",
    "start": "2751000",
    "end": "2756720"
  },
  {
    "text": "like to-dos uh I mentioned we are doing incrementality so there are plenty of to-dos if anyone wants to like work on",
    "start": "2756720",
    "end": "2763240"
  },
  {
    "text": "detecting the terminal width and line wrapping our help output please don't there's there's much more important",
    "start": "2763240",
    "end": "2768280"
  },
  {
    "text": "stuff to do um but we also need to write some uh lovely carbon codes let's let's",
    "start": "2768280",
    "end": "2775760"
  },
  {
    "text": "uh write a little bit of carbon code here uh some function that's going to run and we're going to uh call a print",
    "start": "2775760",
    "end": "2784119"
  },
  {
    "text": "function print 42",
    "start": "2784119",
    "end": "2788039"
  },
  {
    "text": "come on I love having lots of lag so it's a a delightful carbon",
    "start": "2789640",
    "end": "2797240"
  },
  {
    "text": "function and we can try and compile this function uh we can say where we want the",
    "start": "2797240",
    "end": "2804519"
  },
  {
    "text": "output but I can spell it correctly right it",
    "start": "2806079",
    "end": "2812839"
  },
  {
    "text": "compiles uh we can even link it",
    "start": "2812839",
    "end": "2818400"
  },
  {
    "text": "like so and maybe we can even run it and it prints 42 so we have an actual tool",
    "start": "2823359",
    "end": "2830440"
  },
  {
    "text": "chain working it's not bad but 42 is maybe the answer but also",
    "start": "2830440",
    "end": "2838000"
  },
  {
    "text": "not that exciting we can do better than this but I'm not going to keep doing this with lots of uh High latency I'm going to uh make things a little bit",
    "start": "2838000",
    "end": "2844319"
  },
  {
    "text": "more interesting so we also have uh a really cool example uh that you can look at and so",
    "start": "2844319",
    "end": "2849839"
  },
  {
    "text": "this is everyone's favorite programming language example it's a prim Civ right",
    "start": "2849839",
    "end": "2855200"
  },
  {
    "text": "uh primes cives if folks don't know are great programming language uh test cases because you have to have a che and",
    "start": "2855200",
    "end": "2860440"
  },
  {
    "text": "complete language to build a primes Civ uh um but you only have to have a turn complete language with integers to build",
    "start": "2860440",
    "end": "2866119"
  },
  {
    "text": "a prime Civ and that really helps because it means you don't need the rest of the standard library and to give you",
    "start": "2866119",
    "end": "2871800"
  },
  {
    "text": "an idea of why that's really important because again the tool chain is not at all finished yet I can scroll up in this",
    "start": "2871800",
    "end": "2878599"
  },
  {
    "text": "example and you will see that in fact our integer of support from the standard library is inlined into the example code",
    "start": "2878599",
    "end": "2886040"
  },
  {
    "text": "here because importing of the standard Library things doesn't quite work anyways this will eventually be uh in",
    "start": "2886040",
    "end": "2893480"
  },
  {
    "text": "the standard Library uh but we have a prim right it",
    "start": "2893480",
    "end": "2898720"
  },
  {
    "text": "it has a uh we have Factory functions in carbon instead of Constructors and so this is just a factory function that",
    "start": "2898720",
    "end": "2906040"
  },
  {
    "text": "returns uh a Civ object uh and we uh we have a to-do here because we don't have",
    "start": "2906040",
    "end": "2911920"
  },
  {
    "text": "for Loops yet we only have while loops and we have uh a loop that like sees if",
    "start": "2911920",
    "end": "2917160"
  },
  {
    "text": "it's Prime increments the counter returns it right has all the rest of the",
    "start": "2917160",
    "end": "2922200"
  },
  {
    "text": "code here right it's pretty nice and let's see if we can actually run that so",
    "start": "2922200",
    "end": "2927240"
  },
  {
    "text": "this is uh on my laptop and this is just a checkout of the carbon tool chain uh",
    "start": "2927240",
    "end": "2933480"
  },
  {
    "text": "uh like that if you just go and you like download it and you follow our instructions to install all the dependencies here um then you can just",
    "start": "2933480",
    "end": "2942720"
  },
  {
    "text": "run so we actually use Basel as our build system I know it's not our F favorite one that's just what we're",
    "start": "2943960",
    "end": "2949160"
  },
  {
    "text": "using we're going to support all the build systems of course U but it does let us do really cool stuff for example",
    "start": "2949160",
    "end": "2955160"
  },
  {
    "text": "we can actually build the tool chain in the uh host build of basil and then use the tool chain to build our example code",
    "start": "2955160",
    "end": "2963079"
  },
  {
    "text": "um and this is going to do that and this is going to do it live and so this may actually not be instantaneous",
    "start": "2963079",
    "end": "2968440"
  },
  {
    "text": "uh I don't know if I have like a cached version of everything here um",
    "start": "2968440",
    "end": "2974760"
  },
  {
    "text": "nope I have some inflight code that doesn't work let's try this",
    "start": "2974760",
    "end": "2981280"
  },
  {
    "text": "again there also more cache which is great so this actually builds the toolchain and it's going to use the",
    "start": "2982280",
    "end": "2987720"
  },
  {
    "text": "toolchain to build that carbon code and then it's going to run it which takes a little bit and finds a th the the first",
    "start": "2987720",
    "end": "2996520"
  },
  {
    "text": "uh uh all the Primes below a thousand right and like this is this is a a real",
    "start": "2996520",
    "end": "3005359"
  },
  {
    "text": "code so we can just uh if we run it ourselves it works just",
    "start": "3005359",
    "end": "3012359"
  },
  {
    "text": "fine but that's not too exciting we can do more exciting things than this so what I'm going to do is I'm going to",
    "start": "3012359",
    "end": "3017760"
  },
  {
    "text": "actually take ldb and try and run this under a",
    "start": "3017760",
    "end": "3022920"
  },
  {
    "text": "debugger",
    "start": "3022920",
    "end": "3025920"
  },
  {
    "text": "now I probably need to set a break point so",
    "start": "3030119",
    "end": "3035079"
  },
  {
    "text": "ah where' my code",
    "start": "3039079",
    "end": "3042799"
  },
  {
    "text": "go that's not the right one that's the right",
    "start": "3044760",
    "end": "3050559"
  },
  {
    "text": "one so we probably want to set a debugger somewhere let's set it on say line",
    "start": "3053799",
    "end": "3061280"
  },
  {
    "text": "91 and run this under the debugger it runs actually stops on that line in the",
    "start": "3064960",
    "end": "3070240"
  },
  {
    "text": "source code even prints little snippet and we can go to the next line go to the next line right it's almost like a real",
    "start": "3070240",
    "end": "3077520"
  },
  {
    "text": "thing but let's do something really interesting here we can step into this um I think we can step into this",
    "start": "3077520",
    "end": "3085960"
  },
  {
    "text": "come on there we go um and so this is going to step into some carbon code and this is one thing that I think is really",
    "start": "3085960",
    "end": "3092040"
  },
  {
    "text": "interesting about carbon's design uh a lot of the things that other programming languages have like built into the",
    "start": "3092040",
    "end": "3097440"
  },
  {
    "text": "language like integers and carbon are actually part of the standard Library uh we we have a principle in carbon that",
    "start": "3097440",
    "end": "3103720"
  },
  {
    "text": "all of the carbon apis are Library apis there's not some magic secret card the",
    "start": "3103720",
    "end": "3109839"
  },
  {
    "text": "carbon compiler gets to pull out and be like aha I have a special kind of API for this data type everything is a",
    "start": "3109839",
    "end": "3115640"
  },
  {
    "text": "library if you write a library integer type it can have the exact same API as the standard integer types can and we",
    "start": "3115640",
    "end": "3122040"
  },
  {
    "text": "make good on that by actually having the standard integer types implement the API",
    "start": "3122040",
    "end": "3127520"
  },
  {
    "text": "in library code and so this is an implementation for the i32 type of a",
    "start": "3127520",
    "end": "3135839"
  },
  {
    "text": "standard Library interface in carbon and in carbon interfaces are the same things",
    "start": "3135839",
    "end": "3141160"
  },
  {
    "text": "as traits and rust or as protocols and Swift or as concept maps in C++ X",
    "start": "3141160",
    "end": "3148839"
  },
  {
    "text": "they're basically an abstract description of the interface that you can then Implement right and so this is",
    "start": "3148839",
    "end": "3154119"
  },
  {
    "text": "the increment interface and we use that interface whenever we see uh Plus+ on an",
    "start": "3154119",
    "end": "3162680"
  },
  {
    "text": "i32 right this Plus+ i32 to an i32 object actually dispatches into this",
    "start": "3162680",
    "end": "3168119"
  },
  {
    "text": "generic interface implementation for that operation it's really important for generics in a language because you might",
    "start": "3168119",
    "end": "3173799"
  },
  {
    "text": "want to say hey I'm writing generic code and my type supports incrementing right",
    "start": "3173799",
    "end": "3178960"
  },
  {
    "text": "and there's actually a way to do that because increment is actually implemented here but we can also see",
    "start": "3178960",
    "end": "3184160"
  },
  {
    "text": "that we have the the implementation just right in line here uh which is probably unsurprising but well what what does",
    "start": "3184160",
    "end": "3191520"
  },
  {
    "text": "plus equal do we can we can step further we can see that add aign is also in the",
    "start": "3191520",
    "end": "3196920"
  },
  {
    "text": "standard library right and that's going to do uh plus we can step further I",
    "start": "3196920",
    "end": "3202799"
  },
  {
    "text": "think maybe no no that's as far as we get to step right now uh the source locations are a little bit wonky here",
    "start": "3202799",
    "end": "3209200"
  },
  {
    "text": "but you know we have like a working tool chain that actually builds a prime Civ uh we have some amount of like line",
    "start": "3209200",
    "end": "3214920"
  },
  {
    "text": "based debug information you can step through it interactively in the debugger uh this is actually like starting to be",
    "start": "3214920",
    "end": "3220160"
  },
  {
    "text": "a little bit more real uh the next things are to try and get the rest of the generics kind of core landed so that",
    "start": "3220160",
    "end": "3225280"
  },
  {
    "text": "we can write kind of a a correct version of standard Library types and to really start diving into C++ interop uh but the",
    "start": "3225280",
    "end": "3233319"
  },
  {
    "text": "the tool train is starting to get before I I I do anything else I I really just want to do one other thing",
    "start": "3233319",
    "end": "3240359"
  },
  {
    "text": "here uh we talked in some other talks about how fast the compiler should be in",
    "start": "3240359",
    "end": "3246280"
  },
  {
    "text": "carbon and I wanted to just give kind of a live demo of how fast it is we'll see if this finishes in",
    "start": "3246280",
    "end": "3254160"
  },
  {
    "text": "time we may have to come back to this as aoda uh my my my build did not have",
    "start": "3254359",
    "end": "3259839"
  },
  {
    "text": "enough cash wait",
    "start": "3259839",
    "end": "3267319"
  },
  {
    "text": "I think this one might be more cached maybe",
    "start": "3270119",
    "end": "3275240"
  },
  {
    "text": "maybe",
    "start": "3278359",
    "end": "3281359"
  },
  {
    "text": "no well I don't I don't want to make you all just sit here and watch watch me uh",
    "start": "3283599",
    "end": "3289280"
  },
  {
    "text": "uh uh wait for this build to finish um but I promise you the compile times",
    "start": "3289280",
    "end": "3296480"
  },
  {
    "text": "are are amazing uh that said this is still early days uh uh it is starting to get more real but we we are still in",
    "start": "3296480",
    "end": "3302599"
  },
  {
    "text": "early days uh and mostly we hope you all want to come and join us on the road to o. one uh uh I think it's going to be",
    "start": "3302599",
    "end": "3308480"
  },
  {
    "text": "really fun uh and and I think that you know we're starting to get something",
    "start": "3308480",
    "end": "3313520"
  },
  {
    "text": "that people can kind of sink their teeth into and be a little bit more exciting that said you know whenever it makes sense for you I understand this is still",
    "start": "3313520",
    "end": "3319720"
  },
  {
    "text": "very early days uh but we'd love we'd love to kind of have have more people participating so with that if folks have questions and and after questions maybe",
    "start": "3319720",
    "end": "3326839"
  },
  {
    "text": "maybe my build will have finished and I can I can switch back to some fun",
    "start": "3326839",
    "end": "3332119"
  },
  {
    "text": "benchmarks questions anything yes one of the main point of the car that",
    "start": "3332920",
    "end": "3338920"
  },
  {
    "text": "interoperability with C++ and migrating",
    "start": "3338920",
    "end": "3343640"
  },
  {
    "text": "from I'm sorry that last thing is carbon trying to position itself as a language",
    "start": "3349319",
    "end": "3354640"
  },
  {
    "text": "for the new prodject SC or is it mainly for existing so so the question is is",
    "start": "3354640",
    "end": "3361200"
  },
  {
    "text": "carbon positioning itself for new projects or is it really mainly for existing code bases I mean I hope that",
    "start": "3361200",
    "end": "3366440"
  },
  {
    "text": "carbon is useful for new projects I'm not sad if it if it works well and certainly eventually that's going to be",
    "start": "3366440",
    "end": "3371760"
  },
  {
    "text": "relevant but in terms of you know our priorities the first priority is getting it working for existing C++ folks right",
    "start": "3371760",
    "end": "3379000"
  },
  {
    "text": "and that that's really because that's that's who's going to be evaluating it um and that's cuz where a lot of the code already is um and and we think",
    "start": "3379000",
    "end": "3385400"
  },
  {
    "text": "that's that's important once that's in great shape I would love it if carbon is also really useful for",
    "start": "3385400",
    "end": "3390920"
  },
  {
    "text": "for for kind of brand new projects but we kind of have to start with with the inop side of",
    "start": "3390920",
    "end": "3396079"
  },
  {
    "text": "it other questions this is the the end of my talk unless my build",
    "start": "3396079",
    "end": "3402480"
  },
  {
    "text": "finishes we'll see how long it takes anyways yes yeah going more into specifics um you were talking about the",
    "start": "3402480",
    "end": "3411798"
  },
  {
    "text": "operator so this really through multiple layers basically um how is kind of the",
    "start": "3413039",
    "end": "3420720"
  },
  {
    "text": "story in your head about um making the still fast",
    "start": "3420720",
    "end": "3428240"
  },
  {
    "text": "yeah I really wish that this would finish faster speaking of slow build times because it's it's slow because",
    "start": "3430000",
    "end": "3435720"
  },
  {
    "text": "it's compiling C++ code um specifically lovm which is really slow um so so the",
    "start": "3435720",
    "end": "3442799"
  },
  {
    "text": "question here is like I I I had this this you know integer arithmetic is going going through multiple layers what is that going to do to build times to",
    "start": "3442799",
    "end": "3449079"
  },
  {
    "text": "compile times if that's part of the goal of carbon how are we going to cope with that uh we we think we can do a really",
    "start": "3449079",
    "end": "3454720"
  },
  {
    "text": "great job so we're modeling it right now very strictly and very formally uh where it's like going through all these",
    "start": "3454720",
    "end": "3461280"
  },
  {
    "text": "different layers we don't expect that to to Really last we expect to actually have uh the compiler kind of intercept",
    "start": "3461280",
    "end": "3467000"
  },
  {
    "text": "and be like yeah I've checked that you have all of those nice interfaces and you do did all of that dispatch and",
    "start": "3467000",
    "end": "3474160"
  },
  {
    "text": "here's a built-in implementation that's very fast um and and the validation we don't think",
    "start": "3474160",
    "end": "3479440"
  },
  {
    "text": "is going to be slow uh uh uh I don't know how to say this the compiler is",
    "start": "3479440",
    "end": "3485000"
  },
  {
    "text": "very fast if this finishes I'll show you how fast uh it does not this is not the thing that's going to hurt build times",
    "start": "3485000",
    "end": "3491440"
  },
  {
    "text": "not worried at all ah",
    "start": "3491440",
    "end": "3495680"
  },
  {
    "text": "yes is it possible to have in up with pre C++ 20 C++ yes absolutely almost all C++ is pre C++ 20 uh C++ basically if if",
    "start": "3498400",
    "end": "3506280"
  },
  {
    "text": "clang supports it we should have interop with it like that's that's really the long the the long-term goal uh what we",
    "start": "3506280",
    "end": "3512599"
  },
  {
    "text": "prioritize within that is just based on what is out in the world right and so if the world's code bases are mostly in s",
    "start": "3512599",
    "end": "3518920"
  },
  {
    "text": "plus 14 and 17 then that's what we've got to support rightous",
    "start": "3518920",
    "end": "3524078"
  },
  {
    "text": "simple to sh",
    "start": "3544599",
    "end": "3548559"
  },
  {
    "text": "somebody",
    "start": "3549880",
    "end": "3552880"
  },
  {
    "text": "and uh so so the real question here is right like uh can we synthesize so I had that synthesized header file in my in my",
    "start": "3557000",
    "end": "3563960"
  },
  {
    "text": "whole interrupt slides right um could we ever get to the point where we actually have one of those and we ship it",
    "start": "3563960",
    "end": "3570520"
  },
  {
    "text": "alongside maybe pre-compiled code in a binary uh uh to users um and and I I",
    "start": "3570520",
    "end": "3576640"
  },
  {
    "text": "assume part of this is because maybe the users don't even know that there's carbon internally uh uh absolutely I",
    "start": "3576640",
    "end": "3582200"
  },
  {
    "text": "think that's something we definitely want to support um there's some there's some tricky parts of that though uh when",
    "start": "3582200",
    "end": "3587240"
  },
  {
    "text": "we're synthesizing that header file if we want it to be something we can ship to other users we have to pick a very uh",
    "start": "3587240",
    "end": "3594440"
  },
  {
    "text": "uh very challeng alling level of of the magic for kind of connecting back to the",
    "start": "3594440",
    "end": "3600200"
  },
  {
    "text": "carbon code right because you have to be able to emit that into something that any C++ compiler it comes across that",
    "start": "3600200",
    "end": "3606200"
  },
  {
    "text": "header will lower correctly and and that might be inefficient and there might be a few",
    "start": "3606200",
    "end": "3612119"
  },
  {
    "text": "really extreme edge cases that we can't support in that model where there's just no way for us to express in a header",
    "start": "3612119",
    "end": "3618799"
  },
  {
    "text": "file what you actually need to do um I think those are going to be really rare though because we can do stuff like",
    "start": "3618799",
    "end": "3624760"
  },
  {
    "text": "generate templates in that head file we can we can do all kinds of special tricks in the generated header to try",
    "start": "3624760",
    "end": "3630319"
  },
  {
    "text": "and minimize that but there there there's going to be a limit there I I don't think we can promise quite as much",
    "start": "3630319",
    "end": "3635799"
  },
  {
    "text": "as when we control the actual C++ compiler as",
    "start": "3635799",
    "end": "3640640"
  },
  {
    "text": "well will you be able to do the non that you need to do to generate good DS on",
    "start": "3653880",
    "end": "3660000"
  },
  {
    "text": "Windows uh things like like controlling exported functions basically controlling exactly what the what that what",
    "start": "3660000",
    "end": "3665839"
  },
  {
    "text": "functions that dll actually exports and get imported into other DLS absolutely like we're going to have to have",
    "start": "3665839",
    "end": "3671039"
  },
  {
    "text": "platform specific extensions just like DL export and import to model those inherent platform properties and and",
    "start": "3671039",
    "end": "3676640"
  },
  {
    "text": "allow people to develop properly on Windows I mean that's a long way away um that's probably something that only is",
    "start": "3676640",
    "end": "3682000"
  },
  {
    "text": "going to manifest when we're really talking about getting into production um but I think that's something we can and should support right that's that goes to",
    "start": "3682000",
    "end": "3688559"
  },
  {
    "text": "supporting modern operating systems right we can't we can't leave those behind will carb be able to inter",
    "start": "3688559",
    "end": "3696000"
  },
  {
    "text": "directly with C or you have to go through C uh will carbon be able to interoperate directly with C or will you have to go through C++ uh uh I fully",
    "start": "3696000",
    "end": "3703839"
  },
  {
    "text": "expect we'll be able to interoperate with c um exactly how we implement it I'm not sure I mean cing doesn't care to",
    "start": "3703839",
    "end": "3709559"
  },
  {
    "text": "a certain extent and it's all going to go through C and so so the difference may be fairly minor but yeah it it",
    "start": "3709559",
    "end": "3715200"
  },
  {
    "text": "should work fine yes so similar",
    "start": "3715200",
    "end": "3720319"
  },
  {
    "text": "question integer arithmetic and everything go through multiple",
    "start": "3720319",
    "end": "3725480"
  },
  {
    "text": "layers performance debug question is does does the the",
    "start": "3725760",
    "end": "3732680"
  },
  {
    "text": "layers of integer arithmetic mean that debug build runtime is going to be uh terrible no no no no no the fact that I",
    "start": "3732680",
    "end": "3738039"
  },
  {
    "text": "could do that in the debugger was just coincidence and luck of the fact that we haven't done any kind of uh tweaking of",
    "start": "3738039",
    "end": "3744559"
  },
  {
    "text": "this I would never expect that to be what we actually want to have even in a debug build because it would just be in intractable uh uh no no no I it was just",
    "start": "3744559",
    "end": "3753000"
  },
  {
    "text": "a nice trick that I could happen to do with the Civ that we already have checked into our tool our code base or",
    "start": "3753000",
    "end": "3758480"
  },
  {
    "text": "we need like what like three more questions I don't know if we're allowed to go this far over but I I don't have anywhere to go so uh Kate in the",
    "start": "3758480",
    "end": "3767519"
  },
  {
    "text": "back yes thank you thank you for reminding me and so if you if you didn't like the way I downloaded the tool chain",
    "start": "3768119",
    "end": "3774160"
  },
  {
    "text": "and and installed it in like 2 seconds and didn't talk or explain anything in the process Kate Gregory actually has a",
    "start": "3774160",
    "end": "3780799"
  },
  {
    "text": "course on plural site where she actually walks you through all of this uh and it also does it on Windows using uh WSL uh",
    "start": "3780799",
    "end": "3788079"
  },
  {
    "text": "and you can you can actually see exactly how to do this for the record it works on basically any iunu is Debian is uh",
    "start": "3788079",
    "end": "3794400"
  },
  {
    "text": "Linux including Windows uh the WSL the latest WSL works great um you should you",
    "start": "3794400",
    "end": "3799559"
  },
  {
    "text": "should totally check that out if it's useful and we have another question someone someone's on my side to get",
    "start": "3799559",
    "end": "3805520"
  },
  {
    "text": "through I'm so so what happened for the record is that one of my delightful colleagues updated our snapshot of lvm",
    "start": "3805520",
    "end": "3812079"
  },
  {
    "text": "to a new version uh and I didn't notice that anyways yes",
    "start": "3812079",
    "end": "3820000"
  },
  {
    "text": "sure so so there are two sides to this question so one the question is like are we going to be able to work on different",
    "start": "3838240",
    "end": "3843599"
  },
  {
    "text": "operating systems Windows uh Mac OS Linux right they have different different environments all kinds of different constraints one of the really",
    "start": "3843599",
    "end": "3850160"
  },
  {
    "text": "nice things is that client works on all three of these um and increasingly lib C++ also works on all three of these",
    "start": "3850160",
    "end": "3855880"
  },
  {
    "text": "even on Windows li+ plus is slowly gaining a little bit of Windows support and and we we actually hope that that",
    "start": "3855880",
    "end": "3861359"
  },
  {
    "text": "kind of platform support is going to be uh a really useful horizontal a separate question is what",
    "start": "3861359",
    "end": "3867160"
  },
  {
    "text": "about when you don't want to use cling or you don't want to use lib C++ um that's a trickier thing because really",
    "start": "3867160",
    "end": "3873960"
  },
  {
    "text": "when we when we get you to kind of use the exact tool chain that we're shipping we get to do a lot of really nice cheats",
    "start": "3873960",
    "end": "3880440"
  },
  {
    "text": "to make things work better uh I think we we have to have a mixed tool chain model",
    "start": "3880440",
    "end": "3885920"
  },
  {
    "text": "right we're going to have to support other compilers and other standard libraries but I think that the level of support is going to drop for example we",
    "start": "3885920",
    "end": "3892039"
  },
  {
    "text": "might not get automatic type uh rewriting so stood strength in mvc's STL",
    "start": "3892039",
    "end": "3898160"
  },
  {
    "text": "and in the the GCC STL might not automatically become the carbon string",
    "start": "3898160",
    "end": "3903680"
  },
  {
    "text": "across interop it might stay in C++ land but now my compile time benchmarks are",
    "start": "3903680",
    "end": "3909160"
  },
  {
    "text": "done thank you uh uh for for helping this out there and I just want to point out so originally when we announced",
    "start": "3909160",
    "end": "3914799"
  },
  {
    "text": "carbon and and the tool chain in particular I set some very ambitious goals I wanted us to Lex and parse at 10",
    "start": "3914799",
    "end": "3921760"
  },
  {
    "text": "million lines of code a second and I want us to do semantic checking at a million lines of code a second all of",
    "start": "3921760",
    "end": "3927880"
  },
  {
    "text": "that on a single thread like not using any kind of parallelism and I just want to point out that we are currently",
    "start": "3927880",
    "end": "3935920"
  },
  {
    "text": "hitting my goal this is 1.28 million lines of code a second um I",
    "start": "3935920",
    "end": "3941200"
  },
  {
    "text": "actually have some improvements that'll push us over 1.3 and get us close to 1.4 but just to be clear this is this is uh",
    "start": "3941200",
    "end": "3948000"
  },
  {
    "text": "syntax checking so so uh I have I have I have a uh a version of this fourth th000",
    "start": "3948000",
    "end": "3956079"
  },
  {
    "text": "line file uh that's also generated for C++ and I can run clang over it and I",
    "start": "3956079",
    "end": "3962039"
  },
  {
    "text": "don't want to say that it's it's it's slow because it's not it's actually quite fast like 180",
    "start": "3962039",
    "end": "3967680"
  },
  {
    "text": "milliseconds uh but if I if I run",
    "start": "3967680",
    "end": "3972558"
  },
  {
    "text": "uh if I run I don't know if this will work it works but carbons is a little",
    "start": "3972760",
    "end": "3979000"
  },
  {
    "text": "bit faster uh so carbon is more than 10x faster than uh cling for something",
    "start": "3979000",
    "end": "3986799"
  },
  {
    "text": "similar and this is not like a trivial code just just just to be clear so what",
    "start": "3986799",
    "end": "3991920"
  },
  {
    "text": "we have here is uh a bunch of classes there's 4,000 lines of classes that is automatically generated with all kind",
    "start": "3991920",
    "end": "3999079"
  },
  {
    "text": "with all kinds of methods and types uh all kinds of fun things here um there is",
    "start": "3999079",
    "end": "4004760"
  },
  {
    "text": "there are pairs so we're doing a little bit of template instantiation but like only Pairs and the carbon code is",
    "start": "4004760",
    "end": "4011079"
  },
  {
    "text": "exactly the same right all of this is generated so it's exactly like Apple to Apples as close to Apples as apples as I",
    "start": "4011079",
    "end": "4017279"
  },
  {
    "text": "can get um right but the the comparison is really really Stark and it only gets",
    "start": "4017279",
    "end": "4023440"
  },
  {
    "text": "like if I make the files larger the the Gap widens here uh so we're doing really really really really well on compile",
    "start": "4023440",
    "end": "4029640"
  },
  {
    "text": "time so far super super excited about that so with that I think we're we're way way over thank thank you everyone uh",
    "start": "4029640",
    "end": "4037440"
  },
  {
    "text": "and you should go try out carbon [Applause]",
    "start": "4037440",
    "end": "4046890"
  }
]