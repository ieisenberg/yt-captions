[
  {
    "text": "all right so we'll get started so um i have something good uh to make your lunch uh",
    "start": "4000",
    "end": "11200"
  },
  {
    "text": "very uh pleasant i think so we are going to talk about building a microservices architecture",
    "start": "11200",
    "end": "18720"
  },
  {
    "text": "based on asp.net core so i'm going to make sure that i uh finish this presentation in time so we'll have about",
    "start": "18720",
    "end": "24800"
  },
  {
    "text": "60 minutes to talk about how to do a microservices setup based on network on",
    "start": "24800",
    "end": "30640"
  },
  {
    "text": "asp.net core my name is joe i'm from belgium i lead experience which is a",
    "start": "30640",
    "end": "35760"
  },
  {
    "text": "high level consultancy company so we do this stuff all the time on making sure that companies set up",
    "start": "35760",
    "end": "41920"
  },
  {
    "text": "architectures for their mooc for their mobile applications for their web applications uh in a correct way um i'm",
    "start": "41920",
    "end": "48559"
  },
  {
    "text": "also a pluralsight author i've been doing this for uh close to 10 years and this is actually a bit of a",
    "start": "48559",
    "end": "54879"
  },
  {
    "text": "synopsis really of a very large course that i have on microservices architecture on pluralsight so if this",
    "start": "54879",
    "end": "61760"
  },
  {
    "text": "is to your liking well then you can go out to pluralsight and uh listen to me for about five hours also maybe good for",
    "start": "61760",
    "end": "68000"
  },
  {
    "text": "lunch or to fall asleep i don't know um and then i will dive a lot deeper into setting up this microservices",
    "start": "68000",
    "end": "74400"
  },
  {
    "text": "communication based on asp.net core if you don't have access to pluralsight uh come up to me after the session i'll",
    "start": "74400",
    "end": "80400"
  },
  {
    "text": "write down your email and then i can give you a month of free access to to access whatever course you want",
    "start": "80400",
    "end": "86640"
  },
  {
    "text": "all right so since we don't have too much time let's dive straight in i'm going to",
    "start": "86640",
    "end": "91840"
  },
  {
    "text": "do this using a business case we're going to look at a company effective company called global ticket",
    "start": "91840",
    "end": "97759"
  },
  {
    "text": "which is in need maybe maybe of moving to a microservices setup so that's what we're going to be using um first i'm",
    "start": "97759",
    "end": "104720"
  },
  {
    "text": "going to show you a symbol single microservice which is actually just an api and then we're going to start",
    "start": "104720",
    "end": "110079"
  },
  {
    "text": "bringing in multiple microservices and how they are going to communicate how they're going to relate with one another",
    "start": "110079",
    "end": "116000"
  },
  {
    "text": "is is what we're going to look at next so the microservices architecture and the microsoft's communication part and",
    "start": "116000",
    "end": "121759"
  },
  {
    "text": "if we have time well we should have in fact also look at how we can connect with these microservices there are",
    "start": "121759",
    "end": "127280"
  },
  {
    "text": "multiple ways of having a front-end or multiple front-ends connect with that microservices setup so that's what i'm",
    "start": "127280",
    "end": "133440"
  },
  {
    "text": "going to be explaining to you in the next 60 minutes so as mentioned we're going to use a",
    "start": "133440",
    "end": "139520"
  },
  {
    "text": "effective company called global tickets and global ticket is maybe in need of a",
    "start": "139520",
    "end": "144720"
  },
  {
    "text": "micro services setup let's see what they are doing so as the name is already giving away so global ticket is a a",
    "start": "144720",
    "end": "151360"
  },
  {
    "text": "ticket seller or ticket vendor a reseller company so they sell tickets for all kinds of uh of concerts and",
    "start": "151360",
    "end": "158080"
  },
  {
    "text": "conferences like these and so they're really a market leader in the ticket selling business so they're very global",
    "start": "158080",
    "end": "163920"
  },
  {
    "text": "company and they have a system of selling tickets of course um and in there in this fictive",
    "start": "163920",
    "end": "170640"
  },
  {
    "text": "application that we're going to be using um the users of the application so it's really the end user application that",
    "start": "170640",
    "end": "176400"
  },
  {
    "text": "we'll be looking at people can do all kinds of well regular things that you can do with a ticket shop you can browse",
    "start": "176400",
    "end": "182000"
  },
  {
    "text": "the catalog you can put tickets in your shopping basket maybe you have a discount code so we",
    "start": "182000",
    "end": "187599"
  },
  {
    "text": "need to apply that one as well and then of course you can uh create the order and then you actually also have to make",
    "start": "187599",
    "end": "193599"
  },
  {
    "text": "a payment and maybe there's also some marketing information that we need to capture based on what tickets people",
    "start": "193599",
    "end": "200400"
  },
  {
    "text": "have in their baskets we may also want to give them recommendations on other related sorts of concerts or events in",
    "start": "200400",
    "end": "207519"
  },
  {
    "text": "general so these are the features of the application that we'll be looking at so instead of talking about it i'm going to",
    "start": "207519",
    "end": "212879"
  },
  {
    "text": "give you a quick demo so the actual application is not really what matters in this presentation it's of course more",
    "start": "212879",
    "end": "219360"
  },
  {
    "text": "the code and how to set up the architecture but it does give you a bit of a a better understanding of the",
    "start": "219360",
    "end": "224720"
  },
  {
    "text": "application that we are talking about i'm going to start it here you're going to see a lot of apis booting up hopefully",
    "start": "224720",
    "end": "230959"
  },
  {
    "text": "there we go just a second here i should have booted this up already but it actually",
    "start": "230959",
    "end": "237040"
  },
  {
    "text": "shouldn't take very long there we go",
    "start": "237040",
    "end": "241840"
  },
  {
    "text": "yeah i make it a bit larger even yeah i didn't have the time to actually test it is this readable for everyone",
    "start": "247040",
    "end": "255439"
  },
  {
    "text": "yeah i can't see you because of the light in my face yeah there we go i see some hands going up",
    "start": "255439",
    "end": "260720"
  },
  {
    "text": "all right so this is global tickets as mentioned it's a global it's a ticket selling website where i can",
    "start": "260720",
    "end": "267919"
  },
  {
    "text": "select this ticket see the details select the number of tickets i want to add to my basket",
    "start": "267919",
    "end": "274080"
  },
  {
    "text": "this is the shopping cart page or which i can update i can apply a discount code",
    "start": "274080",
    "end": "279440"
  },
  {
    "text": "and if i'm good then i click here on checkout now this will create oh this will take me to",
    "start": "279440",
    "end": "284800"
  },
  {
    "text": "the order page which i need to fill in quickly because there's some simple validation on there let's take this",
    "start": "284800",
    "end": "290479"
  },
  {
    "text": "effective email there we go and then we'll place the order",
    "start": "290479",
    "end": "297440"
  },
  {
    "text": "and this will send that off there's an asynchronous process we'll talk about that that is happening right",
    "start": "297440",
    "end": "302720"
  },
  {
    "text": "now which is hopefully uh accepting my payment and if we're good it can take a",
    "start": "302720",
    "end": "308000"
  },
  {
    "text": "while so i'm not sure if it's already going to be there then at some point the order will show up here has",
    "start": "308000",
    "end": "313759"
  },
  {
    "text": "maybe gone through with the payment or not so that's basically the application that will use for this uh presentation",
    "start": "313759",
    "end": "320240"
  },
  {
    "text": "nothing more nothing nothing very special it's just a front end sitting on top of the microservices that we'll take",
    "start": "320240",
    "end": "326560"
  },
  {
    "text": "a look at so now that you know what we're going to be building let's take a look at the current state at deliver tickets",
    "start": "326560",
    "end": "334479"
  },
  {
    "text": "the global ticket has been building this application for a long time and it's been built as a typical monolith",
    "start": "334479",
    "end": "341039"
  },
  {
    "text": "now to be to be clear there's nothing wrong with a monolithic application don't rush out here and and go tell your",
    "start": "341039",
    "end": "347680"
  },
  {
    "text": "boss or your cto whatever we need to change everything into a microservices setup that is not the case i'll talk",
    "start": "347680",
    "end": "353440"
  },
  {
    "text": "about why it can be useful but keep that in mind having a monolithic application there's really nothing wrong with this",
    "start": "353440",
    "end": "360240"
  },
  {
    "text": "because there's definitely some advantages to having a monolithic application it's easy to deploy it's easy to bring new members on the team",
    "start": "360240",
    "end": "366880"
  },
  {
    "text": "because its setup is probably easy to understand as well and it probably is also easy to test because that is one of",
    "start": "366880",
    "end": "373360"
  },
  {
    "text": "the downsides that we'll see when building or when going into microservices setup it might be more difficult to test so having a monolithic",
    "start": "373360",
    "end": "380560"
  },
  {
    "text": "application which is what global ticket has at this point absolutely fun so this could be a very simple setup in which",
    "start": "380560",
    "end": "387280"
  },
  {
    "text": "they have maybe an asp.net core razer pages or mvc application in which they have one overarching application",
    "start": "387280",
    "end": "394639"
  },
  {
    "text": "but that does pretty much everything it goes from the uh it does it handles the event catalog which has some controllers",
    "start": "394639",
    "end": "400639"
  },
  {
    "text": "some views maybe that's an area in an mvc application then they have the shopping basket and they have the",
    "start": "400639",
    "end": "405840"
  },
  {
    "text": "discount functionality that handles that that discount code that you could enter",
    "start": "405840",
    "end": "410880"
  },
  {
    "text": "in the shopping basket as well so really one application that does it all but",
    "start": "410880",
    "end": "416960"
  },
  {
    "text": "being a ticket selling website well they are facing a couple of problems and i have listed a few of them here well the",
    "start": "416960",
    "end": "422560"
  },
  {
    "text": "current application is a three-tier traditional setup nothing wrong with that we already mentioned that but it",
    "start": "422560",
    "end": "428319"
  },
  {
    "text": "does have being a ticket a ticket selling website some issues maybe here and there when",
    "start": "428319",
    "end": "434080"
  },
  {
    "text": "when a conference like this one goes online there's a very high peak in demand because of everyone willing to be",
    "start": "434080",
    "end": "440000"
  },
  {
    "text": "here and and that results in a slow response time and a slow website in general everyone",
    "start": "440000",
    "end": "445840"
  },
  {
    "text": "is on twitter these days so as soon as the site goes down these ctos on the ceo starts seeing it on the on twitter again",
    "start": "445840",
    "end": "451840"
  },
  {
    "text": "oh global ticket is slow again he doesn't want that anymore that's definitely one of the issues that we can",
    "start": "451840",
    "end": "458160"
  },
  {
    "text": "encounter with such such a setup another issue that",
    "start": "458160",
    "end": "463199"
  },
  {
    "text": "that based on the current setup might be difficult to address is also the fact that they cannot handle multiple",
    "start": "463199",
    "end": "469680"
  },
  {
    "text": "frontends because they've built everything as a monolithic application maybe with an asp.net core application",
    "start": "469680",
    "end": "475039"
  },
  {
    "text": "they don't have an easy way to allow for maybe a third-party api to come in or a",
    "start": "475039",
    "end": "480160"
  },
  {
    "text": "mobile application to connect those things can actually be pretty hard to put into an existing setup in which",
    "start": "480160",
    "end": "485919"
  },
  {
    "text": "everything was done in one go another thing is also that as the teams grow maybe multiple teams",
    "start": "485919",
    "end": "492400"
  },
  {
    "text": "will start building different parts of the application and maybe they are interested in using a different tech stack maybe the the departure that just",
    "start": "492400",
    "end": "500080"
  },
  {
    "text": "uh mentioned about the marketing part maybe they're building some ai in there and they want to use python to see based",
    "start": "500080",
    "end": "506479"
  },
  {
    "text": "on the consumer history of purchases what might be the",
    "start": "506479",
    "end": "511680"
  },
  {
    "text": "next thing they want to do and they might want to do that on a different stack and that might also be hard to fit",
    "start": "511680",
    "end": "516800"
  },
  {
    "text": "into a monolithic application and maybe those people also want to release more often than the general application",
    "start": "516800",
    "end": "522800"
  },
  {
    "text": "because if you have a monolithic application in general it will be uh released in one go it's all or nothing",
    "start": "522800",
    "end": "529040"
  },
  {
    "text": "really so those are maybe some issues that we might be facing when building a monolithic application and maybe just",
    "start": "529040",
    "end": "535600"
  },
  {
    "text": "maybe a microservices setup could introduce us to a solution here",
    "start": "535600",
    "end": "540720"
  },
  {
    "text": "when we are going to introduce microservices at global tickets we're basically going to be well splitting up",
    "start": "540720",
    "end": "546560"
  },
  {
    "text": "the application in multiple smaller applications smaller islands of functionality that's what i like to call",
    "start": "546560",
    "end": "552399"
  },
  {
    "text": "them smaller services which are really standalone functionality standalone applications they can do everything",
    "start": "552399",
    "end": "558959"
  },
  {
    "text": "themselves they can do they have their own database they have their own model we'll talk about that in just a second",
    "start": "558959",
    "end": "564480"
  },
  {
    "text": "they really are islands of functionality that do one thing one task maybe they do the discounts maybe the shopping basket",
    "start": "564480",
    "end": "571360"
  },
  {
    "text": "will talk about the different microservices that you need but that's what they'll do they'll do just one thing they have their own data",
    "start": "571360",
    "end": "578320"
  },
  {
    "text": "maybe they're owned by one team again think back of what i just said maybe that team that wants to build the market marketing service has that functionality",
    "start": "578320",
    "end": "585440"
  },
  {
    "text": "in hand they have the knowledge they want to release that well maybe that service that application is owned by one",
    "start": "585440",
    "end": "591519"
  },
  {
    "text": "team and it can also easily evolve over time not thinking about machine learning",
    "start": "591519",
    "end": "597279"
  },
  {
    "text": "stuff but maybe we're building with net core and we have a dependency on one typical one particular version of net",
    "start": "597279",
    "end": "604640"
  },
  {
    "text": "core which is blocking the entire application from moving to net six well if we split it up with multiple",
    "start": "604640",
    "end": "609920"
  },
  {
    "text": "microservices while we can maybe just have one single microservice that needs to stay on an older version but all the",
    "start": "609920",
    "end": "615920"
  },
  {
    "text": "other services can already evolve into the next version and that may arrive with something like this high level",
    "start": "615920",
    "end": "621680"
  },
  {
    "text": "we're going to have a front-end application we'll talk about those by the end of the presentation that talk with different",
    "start": "621680",
    "end": "628320"
  },
  {
    "text": "standalone applications and those will be the microservices and those will in fact just be apis as well",
    "start": "628320",
    "end": "636000"
  },
  {
    "text": "um why they can be a solution well there are different reasons and i already",
    "start": "636000",
    "end": "641120"
  },
  {
    "text": "mentioned quite a few but like i said they can be and notice the quotes around the can because that is",
    "start": "641120",
    "end": "647360"
  },
  {
    "text": "very important it's not the solution for every problem that you may encounter it can actually make",
    "start": "647360",
    "end": "654480"
  },
  {
    "text": "the creation of larger applications because microservices are typically used for larger systems it can make the",
    "start": "654480",
    "end": "660560"
  },
  {
    "text": "creation of those a bit simpler they'll also think back of what i said earlier one of",
    "start": "660560",
    "end": "666240"
  },
  {
    "text": "the problems that global ticket was facing was the availability maybe when the entire application is just a",
    "start": "666240",
    "end": "672959"
  },
  {
    "text": "monolithic application it can be hard to actually have it be available all the time since there are separate uh since",
    "start": "672959",
    "end": "679760"
  },
  {
    "text": "it's just one service that handles everything if you have micro services we can more easily tweak and find you then",
    "start": "679760",
    "end": "686399"
  },
  {
    "text": "we can improve the scalability because of the different microservices being in place and like i already mentioned",
    "start": "686399",
    "end": "692320"
  },
  {
    "text": "it is possible to have different services do or use different technologies one can use a machine",
    "start": "692320",
    "end": "697519"
  },
  {
    "text": "learning setup using python another one can use an old version of net and another one",
    "start": "697519",
    "end": "702720"
  },
  {
    "text": "can use dot net 6. so you can have different services use different technologies",
    "start": "702720",
    "end": "708560"
  },
  {
    "text": "now it is not all good in the length of microservices and now i'm maybe painting a picture that is",
    "start": "708560",
    "end": "715040"
  },
  {
    "text": "very positive but it's definitely not always going to be the solution as i already mentioned it",
    "start": "715040",
    "end": "720639"
  },
  {
    "text": "the first thing that is pretty hard to do is finding the different microservices it's not a very clear cut",
    "start": "720639",
    "end": "725839"
  },
  {
    "text": "all the time this is a damage setup and of course it's going to be easy to see well that's a microservice and that's a microservice",
    "start": "725839",
    "end": "732079"
  },
  {
    "text": "and that's another one that works in a in a demo but it might not always be the case with your own business domain so",
    "start": "732079",
    "end": "738720"
  },
  {
    "text": "finding what should be a microservice is sometimes hard to do i already mentioned",
    "start": "738720",
    "end": "744959"
  },
  {
    "text": "the fact that it's more difficult to test very often you're working by default in a distributed system and",
    "start": "744959",
    "end": "750720"
  },
  {
    "text": "distributed systems are hard to test they're definitely much that more difficult to test than having a simple",
    "start": "750720",
    "end": "756399"
  },
  {
    "text": "asp.net core application that has everything in one place i know it's going to be other technical",
    "start": "756399",
    "end": "762079"
  },
  {
    "text": "challenges that you encounter think of the fact that you have different services communicating with one another",
    "start": "762079",
    "end": "767279"
  },
  {
    "text": "if one goes down well what happens with the rest of the system you'll need to think of things like resiliency how am i",
    "start": "767279",
    "end": "773680"
  },
  {
    "text": "going to retry maybe communicating between a service that that is down or something and and how i'm going to retry",
    "start": "773680",
    "end": "780160"
  },
  {
    "text": "that communication and maybe also thinking already about the front end",
    "start": "780160",
    "end": "785519"
  },
  {
    "text": "maybe they need different bits of data so that's also an issue that we're going to try to solve in this presentation and",
    "start": "785519",
    "end": "791440"
  },
  {
    "text": "in general the communication between different services is hard instead of having just a few classes",
    "start": "791440",
    "end": "797839"
  },
  {
    "text": "that need to talk to one another now you are responsible for having multiple applications communicate with one",
    "start": "797839",
    "end": "803440"
  },
  {
    "text": "another so communication between these services is definitely one of the challenges that you come across",
    "start": "803440",
    "end": "809440"
  },
  {
    "text": "so now that we have set the groundwork i think for having possibly a solution with microservices at global ticket",
    "start": "809440",
    "end": "816560"
  },
  {
    "text": "let's see how we can actually build that and we'll start with the first one a simple single microservice and then we'll start",
    "start": "816560",
    "end": "823440"
  },
  {
    "text": "adding the other ones we'll have them communicate and we'll bring in front end so a first microservice",
    "start": "823440",
    "end": "829519"
  },
  {
    "text": "and now before i show you those microservices and and the in the first one that we'll start with uh let me",
    "start": "829519",
    "end": "835120"
  },
  {
    "text": "quickly recap what the application was supposed to do as these are the requirements to pick a list of requirements what are we going to be",
    "start": "835120",
    "end": "841279"
  },
  {
    "text": "have what are we going to do with the application we're going to browse the catalog we're going to be able to add items to",
    "start": "841279",
    "end": "847199"
  },
  {
    "text": "the shopping cart and we've seen that then we can create the order we can maybe while doing so apply a discount",
    "start": "847199",
    "end": "853440"
  },
  {
    "text": "code then we can process the payment that you didn't see because that happens in the background to talk about that and",
    "start": "853440",
    "end": "859120"
  },
  {
    "text": "um i missed one i think i can also recommend other events so if you get this list of requirements in in real",
    "start": "859120",
    "end": "865360"
  },
  {
    "text": "life it's not often that clear but i think it's pretty easy to see what are going to be my different microservices",
    "start": "865360",
    "end": "871680"
  },
  {
    "text": "i'm going to have a service that handles everything around the catalog um in this",
    "start": "871680",
    "end": "876959"
  },
  {
    "text": "particular case that is going to say feed the data that is uh that is that",
    "start": "876959",
    "end": "882399"
  },
  {
    "text": "allows me to browse through the different categories i haven't show you categories but they are available in categories those tickets um",
    "start": "882399",
    "end": "888959"
  },
  {
    "text": "but it could also be um this service let's say could also possibly handle the admin side of things",
    "start": "888959",
    "end": "895760"
  },
  {
    "text": "maybe creating new types of tickets or maybe uh doing a group booking or something so there could also be an",
    "start": "895760",
    "end": "901600"
  },
  {
    "text": "administration site so everything that evolves let's say around ticket uh event",
    "start": "901600",
    "end": "907120"
  },
  {
    "text": "sorry the catalog of tickets let's say that is definitely something that is a step the standalone functionality that",
    "start": "907120",
    "end": "913040"
  },
  {
    "text": "is a first microservice that we've identified the shopping basket definitely another one keeping track of",
    "start": "913040",
    "end": "919120"
  },
  {
    "text": "who has what in their basket is something that is a standalone functionality we'll see the code of the",
    "start": "919120",
    "end": "924399"
  },
  {
    "text": "microservice or the shopping basket microservice in a minute because it's a very important one it's a crucial one",
    "start": "924399",
    "end": "929839"
  },
  {
    "text": "the shopping basket will be the standalone application that keeps track of who has what type of tickets which",
    "start": "929839",
    "end": "936560"
  },
  {
    "text": "want it is and so on in the baskets it will also do stuff with the shop with a discount code and that is definitely",
    "start": "936560",
    "end": "942639"
  },
  {
    "text": "another microservice that we've identified there's going to be another service that is maybe checking the",
    "start": "942639",
    "end": "948560"
  },
  {
    "text": "discount code against the database is that code already used is it still valid and so on and so forth that is",
    "start": "948560",
    "end": "954240"
  },
  {
    "text": "definitely also a standalone functionality that you can wrap inside of a microservice",
    "start": "954240",
    "end": "960480"
  },
  {
    "text": "there's two more the order microservice will look at that one as well that's a very central one in",
    "start": "960480",
    "end": "965600"
  },
  {
    "text": "the setup of services that i'll have it'll handle ordering so it basically will go from uh the items in the",
    "start": "965600",
    "end": "972240"
  },
  {
    "text": "shopping basket and move those into the database of the orders because that is a different database it's a different data",
    "start": "972240",
    "end": "978480"
  },
  {
    "text": "store that it then handled and is fully controlled let's say by the order microservice",
    "start": "978480",
    "end": "983680"
  },
  {
    "text": "payment um we're going to use a third-party payment system like stripe or something but we're not using that",
    "start": "983680",
    "end": "990000"
  },
  {
    "text": "directly from within the application i'm going to add what i what i typically tend to refer to as a technical",
    "start": "990000",
    "end": "995759"
  },
  {
    "text": "microservice a service that sits in front of it let's say a layer that sits in front of your payment system your",
    "start": "995759",
    "end": "1001360"
  },
  {
    "text": "external payment system that handles all the technical details around talking with that external payment system that's",
    "start": "1001360",
    "end": "1008320"
  },
  {
    "text": "another microservice that we'll have and then marketing at another one that is one that is",
    "start": "1008320",
    "end": "1013440"
  },
  {
    "text": "responsible for looking at what people have in the basket and make recommendations as the ones that are referred to as maybe something that you",
    "start": "1013440",
    "end": "1019279"
  },
  {
    "text": "would do with the machine learning solution all right let's take a look at all these microservices let's start with",
    "start": "1019279",
    "end": "1024558"
  },
  {
    "text": "one let's create oh let's look at the first microservice i don't have time to do all this by hand and well these",
    "start": "1024559",
    "end": "1030400"
  },
  {
    "text": "services themselves you don't need to spend a lot of time at that because that is just an api a plain asp.net core api",
    "start": "1030400",
    "end": "1037438"
  },
  {
    "text": "which has and that's important its own database its own data model its own controls its standalone it's a",
    "start": "1037439",
    "end": "1043839"
  },
  {
    "text": "standalone application really so it's really something that is standing on its own",
    "start": "1043839",
    "end": "1049360"
  },
  {
    "text": "so let's take a look at the first microservice already here if my mouse wants to work along there we",
    "start": "1049360",
    "end": "1055200"
  },
  {
    "text": "go so without going in too much detail here",
    "start": "1055200",
    "end": "1060880"
  },
  {
    "text": "already let's collapse everything and then we'll zoom in so if you take a look here um we have",
    "start": "1060880",
    "end": "1067679"
  },
  {
    "text": "different services we have and in the solution you have different services each of these i've just explained",
    "start": "1067679",
    "end": "1073760"
  },
  {
    "text": "already briefly and let's take a look at the event catalog for example first",
    "start": "1073760",
    "end": "1079760"
  },
  {
    "text": "catalog is a plain api it's an asp.net api um and it has its own data structure",
    "start": "1079760",
    "end": "1086240"
  },
  {
    "text": "so it has defined its own model it has defined its own uh database context so",
    "start": "1086240",
    "end": "1091600"
  },
  {
    "text": "that means that it also has its own database it's a standalone application really it's an api that does everything",
    "start": "1091600",
    "end": "1097600"
  },
  {
    "text": "around the event catalog and it also has of course its own controllers let's take a look at the event controller for",
    "start": "1097600",
    "end": "1103840"
  },
  {
    "text": "example here so the event controller is a send an api that is accessible via api slash events",
    "start": "1103840",
    "end": "1110080"
  },
  {
    "text": "a plain event controller which uses some dependency injection and then has this uh method here to get all the events as",
    "start": "1110080",
    "end": "1117280"
  },
  {
    "text": "you can see here and also get an event by id really nothing special apart from the fact that i want to point your",
    "start": "1117280",
    "end": "1122880"
  },
  {
    "text": "attention to the fact that this is using its own repository which uses the database context of this system and also",
    "start": "1122880",
    "end": "1129200"
  },
  {
    "text": "has its own database and in fact all the other microservices from a high level perspective are doing",
    "start": "1129200",
    "end": "1135120"
  },
  {
    "text": "exactly the same we're not here to talk about these individual services because those you can build using something like clean",
    "start": "1135120",
    "end": "1141200"
  },
  {
    "text": "architecture for example that's not really the point here this is just a standalone application on its own",
    "start": "1141200",
    "end": "1148400"
  },
  {
    "text": "that's the first api that's the first microservice that we have identified now we start we need to start looking at how",
    "start": "1148400",
    "end": "1154480"
  },
  {
    "text": "these different services are actually going to work together because we're having a single api well that's not what we're here for i think we already know",
    "start": "1154480",
    "end": "1161039"
  },
  {
    "text": "how to build this so what is more important of course is how",
    "start": "1161039",
    "end": "1166880"
  },
  {
    "text": "to make these different services work together and that's where the architectural part comes in well this is",
    "start": "1166880",
    "end": "1173039"
  },
  {
    "text": "this this picture this slide here should give you a bit of an overview of how these different microservices will",
    "start": "1173039",
    "end": "1178160"
  },
  {
    "text": "interact with one another you have again these different services that i already mentioned so the event catalog shopping",
    "start": "1178160",
    "end": "1183520"
  },
  {
    "text": "basket discount marketing payment and order um and so how is the system of microservices going to interact with one",
    "start": "1183520",
    "end": "1190080"
  },
  {
    "text": "another and the thing in the middle is a mailbox a bus a message bus we'll talk about that in in just a bit but let's",
    "start": "1190080",
    "end": "1196240"
  },
  {
    "text": "first see how the different services can in fact communicate with one another",
    "start": "1196240",
    "end": "1201679"
  },
  {
    "text": "you see that i i draw i've drawn this first arrow here that goes from the event catalog to the shopping basket",
    "start": "1201679",
    "end": "1207120"
  },
  {
    "text": "well it's very important to understand what is happening here there is a front end we'll look at the front end by the",
    "start": "1207120",
    "end": "1212159"
  },
  {
    "text": "end of the presentation that actually is allowing the user to browse the event catalog that is using the event catalog",
    "start": "1212159",
    "end": "1218400"
  },
  {
    "text": "service and at some point i'm going to click on a certain ticket to put that or to add that to my basket and at that",
    "start": "1218400",
    "end": "1225039"
  },
  {
    "text": "point the front end is going to say well in the event in the shopping basket that user has now added this amount of this",
    "start": "1225039",
    "end": "1230720"
  },
  {
    "text": "ticket that's what is happening here so the arrow might be a bit confusing but that's in fact what is happening",
    "start": "1230720",
    "end": "1236720"
  },
  {
    "text": "and then the different other services will also start communicating within uh with one another the shopping basket",
    "start": "1236720",
    "end": "1242159"
  },
  {
    "text": "will make a call to the discount microservice when i add a discount and i haven't shown you",
    "start": "1242159",
    "end": "1247280"
  },
  {
    "text": "that i forgot that um when i click on add discount or buy discount it will talk with the discount microservice",
    "start": "1247280",
    "end": "1254720"
  },
  {
    "text": "very similarly there's going to be communication between the shopping basket and all the microservice when i click on",
    "start": "1254720",
    "end": "1262640"
  },
  {
    "text": "checkout at that point it's going to wrap all the information and throw it over the wall towards the the order",
    "start": "1262640",
    "end": "1269200"
  },
  {
    "text": "microservice the order microservices stores all the information about the order and that will then handle or that",
    "start": "1269200",
    "end": "1274960"
  },
  {
    "text": "will then communicate let's say with the payment microservice as you see here that's the error happening here and that",
    "start": "1274960",
    "end": "1280480"
  },
  {
    "text": "in turn is talking with an external payment provider and that returns then information about how that order went",
    "start": "1280480",
    "end": "1287120"
  },
  {
    "text": "through and does the error pointing in this way and then there's also some communication between uh the",
    "start": "1287120",
    "end": "1293679"
  },
  {
    "text": "event catalog sorry the shopping basket and the marketing services these are the different streams let's say of",
    "start": "1293679",
    "end": "1299600"
  },
  {
    "text": "information that i have happening between my different microservices now i talked about",
    "start": "1299600",
    "end": "1306400"
  },
  {
    "text": "errors these errors what are they well they're network calls normally when we would have classes and",
    "start": "1306400",
    "end": "1311919"
  },
  {
    "text": "services doing this we would have just method calls in this case the service costs their network calls the one",
    "start": "1311919",
    "end": "1318000"
  },
  {
    "text": "service the one api will talk with another api yeah um what you will see and that's the way i and that's also the",
    "start": "1318000",
    "end": "1325039"
  },
  {
    "text": "way that microservers are typically set up you have smart endpoints so apis know what to do and they will communicate",
    "start": "1325039",
    "end": "1331520"
  },
  {
    "text": "overall basic types of communication layers so a rest call or a message buzz and that so and",
    "start": "1331520",
    "end": "1337600"
  },
  {
    "text": "so on and so forth so we'll talk about that in just a minute that's the communication part but the logic will",
    "start": "1337600",
    "end": "1343200"
  },
  {
    "text": "live inside of the services those are application endpoints that will uh well we'll talk with network calls are normal",
    "start": "1343200",
    "end": "1350080"
  },
  {
    "text": "yeah we have different network calls going back and forth between those different systems that is of course",
    "start": "1350080",
    "end": "1355120"
  },
  {
    "text": "between microservices the way to do it now don't over don't go overboard with",
    "start": "1355120",
    "end": "1360159"
  },
  {
    "text": "that don't make chatty services because going between services is a network call and that has a delay right so you have to",
    "start": "1360159",
    "end": "1367440"
  },
  {
    "text": "keep you have to make your services as smart as possible but also don't give them too much information about out of",
    "start": "1367440",
    "end": "1372799"
  },
  {
    "text": "microservices and that's of course also sometimes difficult to do and that's also where you sometimes see that you",
    "start": "1372799",
    "end": "1378240"
  },
  {
    "text": "have made a decision that you have to come back to afterwards because you haven't made the cut between different microsources correctly but it is as a",
    "start": "1378240",
    "end": "1385120"
  },
  {
    "text": "normal thing that services will call other services so let's take a look at that i'm going",
    "start": "1385120",
    "end": "1391039"
  },
  {
    "text": "to show you at this point um",
    "start": "1391039",
    "end": "1395600"
  },
  {
    "text": "let's take a look at the shopping basket again the shopping basket if i zoom in",
    "start": "1396400",
    "end": "1401600"
  },
  {
    "text": "here you'll see that it's very similar as again a repository has models has a database context i'm not going to show",
    "start": "1401600",
    "end": "1407280"
  },
  {
    "text": "you that it's exactly the same structure at this point but if we if we look at the controllers let's take a look at the",
    "start": "1407280",
    "end": "1413280"
  },
  {
    "text": "shopping basket basket controller that's the main entry point for working with baskets",
    "start": "1413280",
    "end": "1420240"
  },
  {
    "text": "when i click on the checkout button in the ui the ui was actually going to",
    "start": "1420240",
    "end": "1425679"
  },
  {
    "text": "invoke this method this checkout basket async method that is getting in a basket",
    "start": "1425679",
    "end": "1431279"
  },
  {
    "text": "checkout entity i should say model because it's not really an entity and if you look at",
    "start": "1431279",
    "end": "1436559"
  },
  {
    "text": "that one what does it have well it has information about the basket the basket",
    "start": "1436559",
    "end": "1442960"
  },
  {
    "text": "id to be precise the basket id is the id of the basket inside of the database of",
    "start": "1442960",
    "end": "1449039"
  },
  {
    "text": "the basket service that is being kept around by the front end",
    "start": "1449039",
    "end": "1454240"
  },
  {
    "text": "and the front that is just saying okay this item goes in the basket this item goes in the basket it doesn't do that it",
    "start": "1454240",
    "end": "1460960"
  },
  {
    "text": "just asks the micro service to the the shopping market microservice to distort all that information in its database and",
    "start": "1460960",
    "end": "1467440"
  },
  {
    "text": "at this point when we click on checkout basket the service of the shopping basket knows hey",
    "start": "1467440",
    "end": "1473039"
  },
  {
    "text": "this shopping market is being checked out i have all that information in my database so i can handle that perfectly",
    "start": "1473039",
    "end": "1478799"
  },
  {
    "text": "what is coming in though is all the information about the user that the user has entered on the",
    "start": "1478799",
    "end": "1484960"
  },
  {
    "text": "order screen and at this point that information comes in as you can see here there is no information about which",
    "start": "1484960",
    "end": "1490799"
  },
  {
    "text": "products i'm checking out because i already have that inside of my shopping basket that is a very important thing to",
    "start": "1490799",
    "end": "1496720"
  },
  {
    "text": "remember here so what will happen based on that basket id on line 92 i will actually get uh the",
    "start": "1496720",
    "end": "1504080"
  },
  {
    "text": "information or get the products or the tickets which are currently inside of the basket um and then i will actually",
    "start": "1504080",
    "end": "1510880"
  },
  {
    "text": "start the checkout process right the the all the creation process i should say",
    "start": "1510880",
    "end": "1516880"
  },
  {
    "text": "and that's what i'm doing here i'm going to create a new type a bask checkout message and i'm going to start filling",
    "start": "1516880",
    "end": "1523120"
  },
  {
    "text": "that with all the information i have i have the information of that was entered by the user on one hand and i also need",
    "start": "1523120",
    "end": "1529440"
  },
  {
    "text": "information about the basket and that i get from a local database that was part of the shopping basket database that is",
    "start": "1529440",
    "end": "1536159"
  },
  {
    "text": "what we see here so i'm going to create then the shopping basket and then maybe the user has also",
    "start": "1536159",
    "end": "1543919"
  },
  {
    "text": "entered a coupon a coupon code right because that coupon code",
    "start": "1543919",
    "end": "1549120"
  },
  {
    "text": "if you look here it is also coming along with the basket with the basket that was entered",
    "start": "1549120",
    "end": "1556000"
  },
  {
    "text": "now the basket doesn't know about the coupon codes because that is we've already seen a different microservice",
    "start": "1556000",
    "end": "1562320"
  },
  {
    "text": "that handles that at this point we are already basically creating or preparing",
    "start": "1562320",
    "end": "1567520"
  },
  {
    "text": "the order but we need to do something with the coupon code so we need to go and invoke another service",
    "start": "1567520",
    "end": "1573600"
  },
  {
    "text": "that's what uh what we'll look at in the next part because now we'll need to have multiple microservices communicate with",
    "start": "1573600",
    "end": "1580400"
  },
  {
    "text": "one another communication between different microservices is one of the most crucial",
    "start": "1580400",
    "end": "1585840"
  },
  {
    "text": "parts in the setup not only do you need to understand where a microsoft ends and another one begins",
    "start": "1585840",
    "end": "1592400"
  },
  {
    "text": "you also need to understand what the technologies and the the ways of doing that communication are there are of",
    "start": "1592400",
    "end": "1598159"
  },
  {
    "text": "course different ways of doing that and the one is of course better than the other and i explain both of you um we can do synchronous communication",
    "start": "1598159",
    "end": "1605520"
  },
  {
    "text": "synchronous communication is based on a rest call a grpc call maybe a signal call",
    "start": "1605520",
    "end": "1611279"
  },
  {
    "text": "and it is called synchronous not because it's not using a weight async but it's synchronous because it's going to be",
    "start": "1611279",
    "end": "1617279"
  },
  {
    "text": "let's say blocking one microservice calls another one and the other one is just waiting to give back so the first",
    "start": "1617279",
    "end": "1623279"
  },
  {
    "text": "one is waiting for the second one to give a response so they are in fact blocking one another that's why i talk",
    "start": "1623279",
    "end": "1628640"
  },
  {
    "text": "about synchronous microservice communication i'll talk about that one first i will soon see that it's not the",
    "start": "1628640",
    "end": "1634080"
  },
  {
    "text": "ideal solution for many of the problems a better solution is probably asynchronous communication why will use",
    "start": "1634080",
    "end": "1640320"
  },
  {
    "text": "bus based communication or broker-based communication between the different uh microservices but let's first look at",
    "start": "1640320",
    "end": "1646720"
  },
  {
    "text": "synchronous communication between our different services i have drawn here the disk microservice that's the one that",
    "start": "1646720",
    "end": "1653279"
  },
  {
    "text": "will uh will useful for this part of the application um where in fact another service is going to come in and ask",
    "start": "1653279",
    "end": "1660159"
  },
  {
    "text": "discount microservice hey can i get information about this coupon because i need to handle that before i can handle",
    "start": "1660159",
    "end": "1666080"
  },
  {
    "text": "my shopping basket in other words one api is going to talk in a synchronous way with another api that's what we'll",
    "start": "1666080",
    "end": "1672640"
  },
  {
    "text": "have here so we'll have this different microservices directly invoking another api another microservice and as",
    "start": "1672640",
    "end": "1679440"
  },
  {
    "text": "mentioned that is what we have between the shopping basket and the discount microservice the discount microservice",
    "start": "1679440",
    "end": "1685600"
  },
  {
    "text": "keeps track of all the discount codes right it is still applicable we are still valid and so on and so forth and",
    "start": "1685600",
    "end": "1691520"
  },
  {
    "text": "it is invoked by another microservice and that is the shopping basket microservice and for their communication",
    "start": "1691520",
    "end": "1697840"
  },
  {
    "text": "they are using a plate http cost of arrest-based call rest call that is sitting between them",
    "start": "1697840",
    "end": "1703679"
  },
  {
    "text": "let's look at that um so i have here um the discount uh so this line here uh",
    "start": "1703679",
    "end": "1710880"
  },
  {
    "text": "so line 120. uh on this line i'm going to basically go out to another service",
    "start": "1710880",
    "end": "1716960"
  },
  {
    "text": "in the shopping basket service i need to invoke the discount microservice now i'm using here",
    "start": "1716960",
    "end": "1722000"
  },
  {
    "text": "this getcoupon method this getcoupon method uses itself a class that is still part of the",
    "start": "1722000",
    "end": "1729520"
  },
  {
    "text": "shopping basket microservice and that will invoke using http client the other",
    "start": "1729520",
    "end": "1734880"
  },
  {
    "text": "microservice the discount microservice as you can see here i'm invoking api slash discount and i'm passing in the",
    "start": "1734880",
    "end": "1741279"
  },
  {
    "text": "coupon code and that is a synchronous call in the sense that the other so the shopping basket service needs to wait",
    "start": "1741279",
    "end": "1747600"
  },
  {
    "text": "for this response to come back right that is synchronous communication and while that works if all is is happy and",
    "start": "1747600",
    "end": "1755039"
  },
  {
    "text": "and there is no interruptions in network and there's no delays and so on and so forth this will work fine right nothing",
    "start": "1755039",
    "end": "1762080"
  },
  {
    "text": "if nothing goes wrong well then this would work absolutely fine but like i already said",
    "start": "1762080",
    "end": "1767760"
  },
  {
    "text": "it could be that um there's a lot of people ordering tickets for a certain concert or a certain conference",
    "start": "1767760",
    "end": "1774000"
  },
  {
    "text": "and then what it could be that well we're not in an ideal situation here it could be that we",
    "start": "1774000",
    "end": "1780000"
  },
  {
    "text": "end up with an with a problem on one end it could be that",
    "start": "1780000",
    "end": "1786559"
  },
  {
    "text": "that we have heavy load that we are in fact hammering the discount microservice",
    "start": "1786559",
    "end": "1793520"
  },
  {
    "text": "and it could in fact cause the entire system to go down the drain",
    "start": "1793520",
    "end": "1799278"
  },
  {
    "text": "with synchronous communication i've listed out a few of the possible issues that we are that we could possibly",
    "start": "1799360",
    "end": "1805279"
  },
  {
    "text": "encounter here it could be that it becomes a bottleneck what i was just saying if that one microservice is being used",
    "start": "1805279",
    "end": "1812159"
  },
  {
    "text": "for multiple places in the system and that all those other places are really hammering that service it could in fact",
    "start": "1812159",
    "end": "1818000"
  },
  {
    "text": "bring down that that poor discount service and then",
    "start": "1818000",
    "end": "1823919"
  },
  {
    "text": "that could compromise the entire system not a situation you want to be because it is difficult to find those",
    "start": "1823919",
    "end": "1830320"
  },
  {
    "text": "types of errors it could be that there are intermittent errors with the",
    "start": "1830320",
    "end": "1835520"
  },
  {
    "text": "discount microservice it might go down for a certain time and the other services are timing out and maybe",
    "start": "1835520",
    "end": "1841360"
  },
  {
    "text": "they're trying again and at some point the discount microservice might be back up and then you don't see the address",
    "start": "1841360",
    "end": "1846480"
  },
  {
    "text": "anymore then you start you need to go into logs and that sort of thing could be harder to find what is actually wrong",
    "start": "1846480",
    "end": "1851840"
  },
  {
    "text": "another issue that i tend to see is the tight coupling between the different",
    "start": "1851840",
    "end": "1856880"
  },
  {
    "text": "microservices it might be so that i have my different services and they're really",
    "start": "1856880",
    "end": "1862960"
  },
  {
    "text": "they really know a lot about each other at this what we just saw at this point that the shopping basket service",
    "start": "1862960",
    "end": "1868799"
  },
  {
    "text": "actually knows quite a bit about the um about the discount service it needs to",
    "start": "1868799",
    "end": "1874480"
  },
  {
    "text": "know well i need to call it with this parameter and so on and so forth that may be not an ideal situation in what",
    "start": "1874480",
    "end": "1880399"
  },
  {
    "text": "we're after and that's actually a loosely coupled system between different services that communicate with one",
    "start": "1880399",
    "end": "1885679"
  },
  {
    "text": "another like i've already mentioned it is very easy to",
    "start": "1885679",
    "end": "1892000"
  },
  {
    "text": "compromise this sort of setup if you think about this you could easily have a chain of",
    "start": "1892000",
    "end": "1898720"
  },
  {
    "text": "different micro services calling one another because service a or service one could cause two could cause service",
    "start": "1898720",
    "end": "1904399"
  },
  {
    "text": "three and so on forth and not",
    "start": "1904399",
    "end": "1906559"
  },
  {
    "text": "available something goes wrong database goes out i don't know what well at some point the entire system can",
    "start": "1918840",
    "end": "1925360"
  },
  {
    "text": "actually be infected this way because other microservices are not reachable anymore and in fact because this",
    "start": "1925360",
    "end": "1930799"
  },
  {
    "text": "microservice 3 goes down the other one microservice one and two will actually also go down and this could cause really",
    "start": "1930799",
    "end": "1937440"
  },
  {
    "text": "a domino effect throughout your entire application your entire system of microservices can go uh can go down and",
    "start": "1937440",
    "end": "1944320"
  },
  {
    "text": "it can be harder to recover from these types of errors that is why in most cases",
    "start": "1944320",
    "end": "1950399"
  },
  {
    "text": "you will not use synchronous communication between different microsofts and you need to default and say to asynchronous communication",
    "start": "1950399",
    "end": "1957039"
  },
  {
    "text": "between them now like i said right there are places where you might want to",
    "start": "1957039",
    "end": "1962799"
  },
  {
    "text": "use it this is uh sort of direct communication synchronous communication but in general asynchronous",
    "start": "1962799",
    "end": "1968720"
  },
  {
    "text": "communication is preferred because if something goes wrong you will still have a way to more easily recover let's say",
    "start": "1968720",
    "end": "1975600"
  },
  {
    "text": "because you have some some some intermediate let's say that sits in between and that will help you go",
    "start": "1975600",
    "end": "1981760"
  },
  {
    "text": "through that difficult period um it's typically a broker-based system",
    "start": "1981760",
    "end": "1986799"
  },
  {
    "text": "that we'll need to go into we'll need to talk or we need to move into a broker-based system as some some",
    "start": "1986799",
    "end": "1992240"
  },
  {
    "text": "sort of message bus some sort of broker that all the different microservices know about and that will then uh",
    "start": "1992240",
    "end": "1999440"
  },
  {
    "text": "receive messages and it's a forward messages for all the other microservices to read from and then they can get the",
    "start": "1999440",
    "end": "2005360"
  },
  {
    "text": "information when they are ready to do so when you order something on amazon you all you typically don't get the email",
    "start": "2005360",
    "end": "2011360"
  },
  {
    "text": "like straight away it takes a couple of minutes uh often that is actually because that order is being processed",
    "start": "2011360",
    "end": "2017360"
  },
  {
    "text": "it's put up on some some bus and some other system some other service is picking it up from that bus and",
    "start": "2017360",
    "end": "2023679"
  },
  {
    "text": "depending on how busy it is well there will be a longer delay because we're waiting for that message to be handled",
    "start": "2023679",
    "end": "2029919"
  },
  {
    "text": "and that's exactly what we're going to try to do here as well and like i already mentioned asynchronous communication also uses the",
    "start": "2029919",
    "end": "2036480"
  },
  {
    "text": "system of smart end points and dump pipes that's what you want you want just plain communication going through the",
    "start": "2036480",
    "end": "2042880"
  },
  {
    "text": "pipes we typically don't add any logic on those messages inside of the",
    "start": "2042880",
    "end": "2048079"
  },
  {
    "text": "inside of the broker but you have the smart endpoints knowing what to do when a certain type of message comes in",
    "start": "2048079",
    "end": "2054158"
  },
  {
    "text": "um so this is what you'll get you have some broker that sits in between and you have different micro",
    "start": "2054159",
    "end": "2059760"
  },
  {
    "text": "services of sending messages from one uh into the broker and then the broker will then let's say forwards not really",
    "start": "2059760",
    "end": "2065839"
  },
  {
    "text": "forwarding because they're listening for messages uh to appear on on that broker on that bus and that's how the different",
    "start": "2065839",
    "end": "2072320"
  },
  {
    "text": "services can communicate in a very um well a very independent way of one",
    "start": "2072320",
    "end": "2078158"
  },
  {
    "text": "another because it's just the message that goes through and even if one microservice needs to change it doesn't",
    "start": "2078159",
    "end": "2083599"
  },
  {
    "text": "affect the other systems and that's where that tight coupling comes in again and that that's what i want to avoid",
    "start": "2083599",
    "end": "2089358"
  },
  {
    "text": "that is also much easier to avoid uh doing it this way now before i show you that um i'm not",
    "start": "2089359",
    "end": "2096158"
  },
  {
    "text": "going to go too much into this but there are different ways of doing this sort of communication between different services",
    "start": "2096159",
    "end": "2103520"
  },
  {
    "text": "between uh between different services in general you can do even though you're thinking well i'm i",
    "start": "2103520",
    "end": "2109440"
  },
  {
    "text": "should be doing async asynchronous communication calling service one uh sorry service one calling service two",
    "start": "2109440",
    "end": "2115440"
  },
  {
    "text": "you can still do point-to-point communication it's not because you have this broker sitting in between or this q sitting in between",
    "start": "2115440",
    "end": "2122480"
  },
  {
    "text": "that you cannot do that anymore absolutely not you can still do what is known as point-to-point communication so",
    "start": "2122480",
    "end": "2128079"
  },
  {
    "text": "is one the shopping basket service maybe directly only talks with the order microservice absolutely possible it will",
    "start": "2128079",
    "end": "2135200"
  },
  {
    "text": "send the message into the queue that queue keeps those messages around and when that order microservice is",
    "start": "2135200",
    "end": "2141760"
  },
  {
    "text": "ready it will pick up that message and it will handle it accordingly that gives us a much more reliable",
    "start": "2141760",
    "end": "2147599"
  },
  {
    "text": "system it's very well possible that we have multiple services that are interested in a certain message appearing in the",
    "start": "2147599",
    "end": "2153920"
  },
  {
    "text": "system it could be that we have the event catalog microservice event catalog",
    "start": "2153920",
    "end": "2159200"
  },
  {
    "text": "like i said thus allows us for browsing all the tickets in the system but it may also be",
    "start": "2159200",
    "end": "2165280"
  },
  {
    "text": "the one that handles a price change of the of a certain ticket maybe",
    "start": "2165280",
    "end": "2171280"
  },
  {
    "text": "other microservices need to be let's say alerted about that well then the event catalog of microsoft can send a message",
    "start": "2171280",
    "end": "2177280"
  },
  {
    "text": "into the system and there can be multiple other services which have registered for that and they can say",
    "start": "2177280",
    "end": "2182880"
  },
  {
    "text": "well i'm interested in when a price change uh happens i need to also know about that and they can uh",
    "start": "2182880",
    "end": "2189119"
  },
  {
    "text": "let's say subscribe to that and it's also possible this way to build a more extensible system if another",
    "start": "2189119",
    "end": "2195119"
  },
  {
    "text": "microservice pops into the system we're extending the system when it's also easy to subscribe that also to receiving that",
    "start": "2195119",
    "end": "2202480"
  },
  {
    "text": "message so where are we doing that well i'm going to show you the code for",
    "start": "2202480",
    "end": "2207880"
  },
  {
    "text": "communication between the shopping basket and the order so that's what we'll look at but this happens in",
    "start": "2207880",
    "end": "2213520"
  },
  {
    "text": "multiple places in fact everywhere in my system except from the discount service communicating with this with the",
    "start": "2213520",
    "end": "2220079"
  },
  {
    "text": "shopping basket i'm using that sort of communication and we have a service bus and message",
    "start": "2220079",
    "end": "2226079"
  },
  {
    "text": "bus sitting in between it will send a message to and that will then let's say be received by another system",
    "start": "2226079",
    "end": "2232640"
  },
  {
    "text": "i'm typically more a fan of using azure service bus you can use whatever type of",
    "start": "2232640",
    "end": "2237760"
  },
  {
    "text": "bus you want to use if you want to use another broker that's absolutely fine",
    "start": "2237760",
    "end": "2242880"
  },
  {
    "text": "i'm using azure service bus here as well uh the only uh the waste of the things i typically tend to use here um is um",
    "start": "2242880",
    "end": "2250560"
  },
  {
    "text": "yeah it's of course cloud-based it has a high reliability but it also has this this way of doing topics topics allows",
    "start": "2250560",
    "end": "2256640"
  },
  {
    "text": "me to have multiple subscribers on certain messages that's a very good",
    "start": "2256640",
    "end": "2261680"
  },
  {
    "text": "advantage of of this it also has this system of debt lettering even if a message cannot be handled or",
    "start": "2261680",
    "end": "2267839"
  },
  {
    "text": "never appears on another micro series it will be it will not be discarded entirely it will be placed on some",
    "start": "2267839",
    "end": "2273440"
  },
  {
    "text": "different queue and as a dead ladder that letter queue allows me to read through some management or a messaging",
    "start": "2273440",
    "end": "2280560"
  },
  {
    "text": "queue system that you want to look at failed messages you can look at the debt letter and it's of course also",
    "start": "2280560",
    "end": "2286960"
  },
  {
    "text": "highly scalable and that's why we use it in in our applications very very often as well",
    "start": "2286960",
    "end": "2292800"
  },
  {
    "text": "now let's see how we are doing that how are we doing that asynchronous communication between these different systems",
    "start": "2292800",
    "end": "2299599"
  },
  {
    "text": "now we'll need to look at we need to look again at the basket controller",
    "start": "2299599",
    "end": "2304640"
  },
  {
    "text": "so we had seen this to be synchronous communication now we're over here",
    "start": "2304640",
    "end": "2310000"
  },
  {
    "text": "as you can see here on this line here it's pretty hard to scroll here with the mouse on this uh on the steep desk here",
    "start": "2310000",
    "end": "2316720"
  },
  {
    "text": "uh over here i have created that balance checkout message that is the that's a type that's a class and that's what is",
    "start": "2316720",
    "end": "2323280"
  },
  {
    "text": "going to be sent over the wire of course i need to serialize that we'll do that in just a second but i have created this",
    "start": "2323280",
    "end": "2328720"
  },
  {
    "text": "this sort of helper publish publish message method here on a message bus now what is",
    "start": "2328720",
    "end": "2334560"
  },
  {
    "text": "message bus of course that is actually also a helper class that i wrapped my azure service bus functionality in i'm",
    "start": "2334560",
    "end": "2341839"
  },
  {
    "text": "not making all my services dependent on azure service bus i think that would be a bad idea to do it that way because",
    "start": "2341839",
    "end": "2347760"
  },
  {
    "text": "then if someone decides well we're not going to use azure service bus anymore we're going to use end service bus well",
    "start": "2347760",
    "end": "2353520"
  },
  {
    "text": "maybe then i have to change all my micro services i have basically abstracted that away in this one uh project here",
    "start": "2353520",
    "end": "2360160"
  },
  {
    "text": "with a separate project that i'm going to referencing and if i need to change message",
    "start": "2360160",
    "end": "2366000"
  },
  {
    "text": "or message systems let's say i can easily do that so this publish message here",
    "start": "2366000",
    "end": "2371520"
  },
  {
    "text": "is what is going to handle sending a message and i've created for all my messages a base class integration",
    "start": "2371520",
    "end": "2378000"
  },
  {
    "text": "base message and what i'm then doing is i'm going to create",
    "start": "2378000",
    "end": "2383520"
  },
  {
    "text": "a topic client topics in service bus what are basic are let's say separate",
    "start": "2383520",
    "end": "2390240"
  },
  {
    "text": "buses separate queues that are used to store certain types of messages and multiple other subscribers can",
    "start": "2390240",
    "end": "2397200"
  },
  {
    "text": "can listen to that in fact you're creating multiple types of topics and each of those can have multiple",
    "start": "2397200",
    "end": "2403119"
  },
  {
    "text": "subscribers listen to them you're basically creating smaller topics smaller queues within your queue",
    "start": "2403119",
    "end": "2408720"
  },
  {
    "text": "and what i'm doing here is i'm creating a client so i'm registering uh to work with this service business",
    "start": "2408720",
    "end": "2414880"
  },
  {
    "text": "that i've created here uh in azure service bus or in azure and what i'm going to do is i'm going to convert my",
    "start": "2414880",
    "end": "2420960"
  },
  {
    "text": "message into a string of json and i then simply sent that message off on the topic boom for the shopping basket the",
    "start": "2420960",
    "end": "2428960"
  },
  {
    "text": "the work is over the work is done the message is waiting on the bus",
    "start": "2428960",
    "end": "2434480"
  },
  {
    "text": "on the other receiving end so this message is now in the bus on the other receiving end we have the order service",
    "start": "2434480",
    "end": "2439520"
  },
  {
    "text": "and that order service is if we look at it here it is very well or it is very interested in receiving those",
    "start": "2439520",
    "end": "2446800"
  },
  {
    "text": "checkout messages because that's the time it needs to create an order how does it know that well maybe we have",
    "start": "2446800",
    "end": "2454480"
  },
  {
    "text": "maybe we have in here another controller there's the order controller let's see what that's what that is doing",
    "start": "2454480",
    "end": "2460800"
  },
  {
    "text": "no it's not doing anything and if you think about it well we're not doing api to api",
    "start": "2460800",
    "end": "2467119"
  },
  {
    "text": "communication we've put a message on the bus and this service the the order service needs to well be",
    "start": "2467119",
    "end": "2473920"
  },
  {
    "text": "notified about that message coming in so what i've done instead is i have created",
    "start": "2473920",
    "end": "2480880"
  },
  {
    "text": "let's go to the program sorry let's go to the startup class instead um over here i have created this azure",
    "start": "2480880",
    "end": "2487920"
  },
  {
    "text": "service bus consumer class and i've registered as a singleton within my application",
    "start": "2487920",
    "end": "2493599"
  },
  {
    "text": "and at azure service bus consumer what is that doing",
    "start": "2493599",
    "end": "2498880"
  },
  {
    "text": "that is going to over here subscribe to messages coming in on a certain topic",
    "start": "2498880",
    "end": "2505440"
  },
  {
    "text": "that's what you see here down here at the bottom i'm going to subscribe to a certain message coming in on a",
    "start": "2505440",
    "end": "2510480"
  },
  {
    "text": "certain topic and when that happens i'm actually going to invoke code",
    "start": "2510480",
    "end": "2515599"
  },
  {
    "text": "when a checkout message is received over here i'm going to register",
    "start": "2515599",
    "end": "2522640"
  },
  {
    "text": "so when this application starts in fact i should say i'm going to invoke this start method using uh",
    "start": "2522640",
    "end": "2528960"
  },
  {
    "text": "from the startup class i'm going to then register a message handler that says that when a checkout message is received",
    "start": "2528960",
    "end": "2535680"
  },
  {
    "text": "i want to invoke this particular method here that method is going to be notified",
    "start": "2535680",
    "end": "2540880"
  },
  {
    "text": "about the message coming in that was the basket checkout message placed on the services by the uh",
    "start": "2540880",
    "end": "2546720"
  },
  {
    "text": "by the basket service and this one this service is responsible for handling or creating",
    "start": "2546720",
    "end": "2553200"
  },
  {
    "text": "the orders and that's exactly what it's going to do next so in here in this let's say background process i'm going",
    "start": "2553200",
    "end": "2559359"
  },
  {
    "text": "to create an order store it in my database through the repository and we're done here in fact we're not done",
    "start": "2559359",
    "end": "2566400"
  },
  {
    "text": "if you think about the schema again well the order was actually then going to do the same thing it was again going to",
    "start": "2566400",
    "end": "2573839"
  },
  {
    "text": "create a message and it was going to put another message on the queue on the azure service bus that is then going to",
    "start": "2573839",
    "end": "2580400"
  },
  {
    "text": "be an order uh i think an order repayment request message the first message that goes into the service bus",
    "start": "2580400",
    "end": "2586160"
  },
  {
    "text": "again two words and the direction of the payment gateway and that is what is then handled here so we send in the",
    "start": "2586160",
    "end": "2593200"
  },
  {
    "text": "information about the order there we go that's what we create and then we do the same thing",
    "start": "2593200",
    "end": "2598280"
  },
  {
    "text": "messagebus.publishmessage passing in that order that the payment message order payment message",
    "start": "2598280",
    "end": "2604240"
  },
  {
    "text": "that we then have handled by another service that is also listening for incoming messages so that's how about",
    "start": "2604240",
    "end": "2609920"
  },
  {
    "text": "different microservices are going to communicate in a very asynchronous way and also in a",
    "start": "2609920",
    "end": "2615599"
  },
  {
    "text": "very loosely coupled way",
    "start": "2615599",
    "end": "2619800"
  },
  {
    "text": "if we go back here there's a couple more things i need to show you um",
    "start": "2621200",
    "end": "2626720"
  },
  {
    "text": "i hope it's clear that the different microservices are not connected to the same database",
    "start": "2626720",
    "end": "2633520"
  },
  {
    "text": "if you see someone doing microservices with the same database",
    "start": "2633520",
    "end": "2638640"
  },
  {
    "text": "they're not doing it right and i've seen this type of system maybe we do a microservice we have one database yeah you're not doing",
    "start": "2638640",
    "end": "2644160"
  },
  {
    "text": "microservices this is a very bad way of doing microservices because then you basically",
    "start": "2644160",
    "end": "2650319"
  },
  {
    "text": "you just split up your application and you've probably made it harder on yourself maybe that's what you want but",
    "start": "2650319",
    "end": "2655520"
  },
  {
    "text": "job creation that's called um but that's probably not what you want and you want to do it you want to do it right and you",
    "start": "2655520",
    "end": "2661040"
  },
  {
    "text": "probably want to have all of these microservices have their own database and they are also not touching each",
    "start": "2661040",
    "end": "2667520"
  },
  {
    "text": "other's database you're not going to have one microservice touching the database",
    "start": "2667520",
    "end": "2674000"
  },
  {
    "text": "there we go you're not going to have um one microservice directly doing something in the database of another",
    "start": "2674800",
    "end": "2680480"
  },
  {
    "text": "microservice well you could just add the connection string from one microservice into the next well again bad thing",
    "start": "2680480",
    "end": "2686720"
  },
  {
    "text": "bad way of doing things that's not what you want you want to different microservices to only communicate using",
    "start": "2686720",
    "end": "2692000"
  },
  {
    "text": "messages instead of directly changing something in one artist database so",
    "start": "2692000",
    "end": "2697119"
  },
  {
    "text": "that's also a way of basically splitting up and making sure that these applications",
    "start": "2697119",
    "end": "2702160"
  },
  {
    "text": "are really standalone and that's what you want to get to the final thing that i want to show you",
    "start": "2702160",
    "end": "2707839"
  },
  {
    "text": "here before we look at the frontends is something that is known as eventual consistency",
    "start": "2707839",
    "end": "2714560"
  },
  {
    "text": "i already mentioned the fact that maybe some ticket changes its price or the price is changed to the administration",
    "start": "2714560",
    "end": "2721359"
  },
  {
    "text": "um pages which i don't have in the sample but imagine that also being part of the event catalogue",
    "start": "2721359",
    "end": "2727599"
  },
  {
    "text": "it could be that um in a monolithic application when you",
    "start": "2727599",
    "end": "2733040"
  },
  {
    "text": "change it in the database it's it's changed for everyone everyone knows about it right now maybe i'm changing a",
    "start": "2733040",
    "end": "2738480"
  },
  {
    "text": "price of one of one ticket in one service and other services also need to know about that because the order",
    "start": "2738480",
    "end": "2744240"
  },
  {
    "text": "service keeps track of order sorry the shopping basket service keeps track of hey i have five tickets of this type",
    "start": "2744240",
    "end": "2750319"
  },
  {
    "text": "with this price in my shopping basket so it needs to know about the price of that",
    "start": "2750319",
    "end": "2755920"
  },
  {
    "text": "ticket again that is not oh again not again that is",
    "start": "2755920",
    "end": "2761680"
  },
  {
    "text": "something that we need to take into account and it is known as what is uh typically known as eventual consistency",
    "start": "2761680",
    "end": "2767760"
  },
  {
    "text": "it might take a while before all the microservices are aware",
    "start": "2767760",
    "end": "2773200"
  },
  {
    "text": "of a change and what we need in that case is typically some sort of different type of",
    "start": "2773200",
    "end": "2779839"
  },
  {
    "text": "message which is known as an integration event a fire and forget message typically",
    "start": "2779839",
    "end": "2786079"
  },
  {
    "text": "one service will say hey i have a change in the price",
    "start": "2786079",
    "end": "2791520"
  },
  {
    "text": "and i'm going to like like i said the event catalog service might say i have a price change i'm going to then publish that into the",
    "start": "2791520",
    "end": "2798240"
  },
  {
    "text": "system and everyone who is interested in knowing about that price change well they need to subscribe",
    "start": "2798240",
    "end": "2804800"
  },
  {
    "text": "and it is again something that is pretty easy to do i can very easily create",
    "start": "2804800",
    "end": "2809839"
  },
  {
    "text": "a service bus in azure and create multiple topics on that and on those topics i create multiple subscribers",
    "start": "2809839",
    "end": "2816880"
  },
  {
    "text": "in fact i can just do it with one topic excuse me i can do it with one topic and i have multiple subscribers",
    "start": "2816880",
    "end": "2822480"
  },
  {
    "text": "registering for what is typically known as an integration event i fire a message",
    "start": "2822480",
    "end": "2827680"
  },
  {
    "text": "uh price change into the system and all the microservices that need to be notified about that will have registered",
    "start": "2827680",
    "end": "2834560"
  },
  {
    "text": "for that price change message and they will automatically oops they will automatically be",
    "start": "2834560",
    "end": "2839839"
  },
  {
    "text": "made aware of a price change to the system and again that is something that happens through a service bus much more",
    "start": "2839839",
    "end": "2846240"
  },
  {
    "text": "easily than having direct service communication if you want to do this with an api call",
    "start": "2846240",
    "end": "2851680"
  },
  {
    "text": "imagine that a new service comes in what that would actually mean that you go back to all your other services that do",
    "start": "2851680",
    "end": "2857200"
  },
  {
    "text": "that that publishing of that message that price change that would make make it very hard to maintain your system",
    "start": "2857200",
    "end": "2863200"
  },
  {
    "text": "because you need to keep track of everything that has changed and all the new services coming in that would be really hard this type of communication",
    "start": "2863200",
    "end": "2870319"
  },
  {
    "text": "makes it a lot easier and the final thing i want to show you",
    "start": "2870319",
    "end": "2875359"
  },
  {
    "text": "and because we've now seen the different microservices how can we now work with those i've shown you the ui",
    "start": "2875359",
    "end": "2880640"
  },
  {
    "text": "yeah but how is that ui effect communicating with these different microservices well in fact this is what we've had so far i haven't shown you the",
    "start": "2880640",
    "end": "2887839"
  },
  {
    "text": "front end the front is a plain asp.net core nvc application so it has just uh",
    "start": "2887839",
    "end": "2893359"
  },
  {
    "text": "controllers and in effect has view services so classes that basically relieve the controllers from doing too",
    "start": "2893359",
    "end": "2899359"
  },
  {
    "text": "much but we moved it all into separate classes but what we that's not really important for what we're looking at here",
    "start": "2899359",
    "end": "2905040"
  },
  {
    "text": "what is important is that those or that mvc application is directly communicating with the different",
    "start": "2905040",
    "end": "2911440"
  },
  {
    "text": "microservices direct to microservice communication is what is being used here",
    "start": "2911440",
    "end": "2917280"
  },
  {
    "text": "now it works it works absolutely fine but it doesn't have uh it doesn't always make up for the",
    "start": "2917280",
    "end": "2924240"
  },
  {
    "text": "best way of doing your communication between your front end and your microservices because it could be that we have",
    "start": "2924240",
    "end": "2930720"
  },
  {
    "text": "different microservices communicate sorry different contents communicating with those microservices",
    "start": "2930720",
    "end": "2936160"
  },
  {
    "text": "you're always going to end up with um coming or information about how the",
    "start": "2936160",
    "end": "2941920"
  },
  {
    "text": "responses of the different microservices need to be combined and if an mvc if you have an mvc application and a",
    "start": "2941920",
    "end": "2948000"
  },
  {
    "text": "maui application and maybe a third party api what you're going to end up with is having to copy that information about",
    "start": "2948000",
    "end": "2954160"
  },
  {
    "text": "combining the responses multiple times into each of these frontends typically not what you want so you will have um",
    "start": "2954160",
    "end": "2961680"
  },
  {
    "text": "too much information let's say about your different microservices inside of the front end and that's not",
    "start": "2961680",
    "end": "2967680"
  },
  {
    "text": "what you want you always you're also going to have a tight coupling and a more",
    "start": "2967680",
    "end": "2973359"
  },
  {
    "text": "um hardest time let's say to make your bike services evolve because if you have your front end directly talking with your",
    "start": "2973359",
    "end": "2980240"
  },
  {
    "text": "microservices your microservices change the api while your front end also needs to change",
    "start": "2980240",
    "end": "2985440"
  },
  {
    "text": "we're looking for a a form of less tight coupling or loose coupling well then",
    "start": "2985440",
    "end": "2990559"
  },
  {
    "text": "this is often not a good idea what is often a better idea is well",
    "start": "2990559",
    "end": "2996480"
  },
  {
    "text": "putting a layer in between and that's typically known as a gateway the gateway is basically well let's say an entry",
    "start": "2996480",
    "end": "3002880"
  },
  {
    "text": "point to the microservices solution or microservices setup instead of having my front then directly talk with my",
    "start": "3002880",
    "end": "3008640"
  },
  {
    "text": "microservices i'm going to have a gateway an extra layer that sits in between and that can be shared between",
    "start": "3008640",
    "end": "3014720"
  },
  {
    "text": "multiple applications so the logic of combining the answers of microservices",
    "start": "3014720",
    "end": "3019839"
  },
  {
    "text": "can actually be moved in here it is typically something that is used for larger applications but it's",
    "start": "3019839",
    "end": "3025280"
  },
  {
    "text": "actually something that i tend to do most of the time and in this case we often talk about a back-end for",
    "start": "3025280",
    "end": "3031040"
  },
  {
    "text": "front-end and i'll talk about that in just a second before i do that one risk that you have",
    "start": "3031040",
    "end": "3036559"
  },
  {
    "text": "by creating a gateway is that that becomes a monolith because it might end",
    "start": "3036559",
    "end": "3041599"
  },
  {
    "text": "up having too much information about the different microscopes this is something to be aware of um and",
    "start": "3041599",
    "end": "3048000"
  },
  {
    "text": "the the place where you would typically end up with that is if you have",
    "start": "3048000",
    "end": "3053680"
  },
  {
    "text": "your gateway has or is the front end for multiple um",
    "start": "3055440",
    "end": "3060880"
  },
  {
    "text": "types of application maybe a mobile application and a web application and so on it might have too much information",
    "start": "3060880",
    "end": "3066400"
  },
  {
    "text": "and in that case it's often a better idea to move to multiple gateways that's what you see here so this is what",
    "start": "3066400",
    "end": "3072880"
  },
  {
    "text": "the gateway will do it will basically be a layer that sits between the front end and the microservices and it will",
    "start": "3072880",
    "end": "3078559"
  },
  {
    "text": "communicate with the different services and only the front-end knows about the gateway and it knows about it knows",
    "start": "3078559",
    "end": "3084800"
  },
  {
    "text": "nothing about the individual microservices it only knows about the gateway and the gateway will do the",
    "start": "3084800",
    "end": "3090319"
  },
  {
    "text": "communication uh for towards the different microservices now like i said that gateway is at risk of becoming too",
    "start": "3090319",
    "end": "3097440"
  },
  {
    "text": "large it might know too much about the different microservices and definitely",
    "start": "3097440",
    "end": "3103040"
  },
  {
    "text": "if you start using it from different front-ends it might become too heavy and it might turn into a monolith as well",
    "start": "3103040",
    "end": "3109359"
  },
  {
    "text": "not what you want in that case if you have different front-ends communicating with your microservices",
    "start": "3109359",
    "end": "3115440"
  },
  {
    "text": "that's when you start looking at the back-end for front-end mechanism and the back-end for front-ends sorry that's",
    "start": "3115440",
    "end": "3121359"
  },
  {
    "text": "what you see here so multiple com multiple uh front-ends communicating with the gateway",
    "start": "3121359",
    "end": "3126800"
  },
  {
    "text": "like i said not an ideal situation to be in so what we are typically proposing or typically doing",
    "start": "3126800",
    "end": "3132880"
  },
  {
    "text": "is having a specific gateway for a specific frontend then you have a specific backend for a front-end",
    "start": "3132880",
    "end": "3139920"
  },
  {
    "text": "that's what you see with the bff pattern of the back-end for front-end pattern where you have a front-end and a plain",
    "start": "3139920",
    "end": "3146079"
  },
  {
    "text": "mvc front-end that has a specific api then you have maybe a mobile application",
    "start": "3146079",
    "end": "3151520"
  },
  {
    "text": "or xamarin and it has a specific separate bff for communicating with the microservices",
    "start": "3151520",
    "end": "3157599"
  },
  {
    "text": "but giving back responses which are specific to your mobile application and that's what you",
    "start": "3157599",
    "end": "3164559"
  },
  {
    "text": "should actually strive for in this particular case let's see if i still have time dylan is",
    "start": "3164559",
    "end": "3170400"
  },
  {
    "text": "it okay if i do another small demo two minutes",
    "start": "3170400",
    "end": "3175920"
  },
  {
    "text": "yeah yeah that that's that's definitely doable all right let's quickly do that",
    "start": "3175920",
    "end": "3181599"
  },
  {
    "text": "so i have it already open here actually you need to still need to open it here this is a different solution",
    "start": "3181599",
    "end": "3188240"
  },
  {
    "text": "and then i can show you how that is set up so um the microservices haven't changed",
    "start": "3188240",
    "end": "3193839"
  },
  {
    "text": "nothing has changed there uh but we have different front panes so the actual front end so the regular one",
    "start": "3193839",
    "end": "3200880"
  },
  {
    "text": "was this one that is basically an mvc application if we look at its controllers let's look at the event",
    "start": "3200880",
    "end": "3206319"
  },
  {
    "text": "catalog controller if you look here that uses the event catalog service that's a",
    "start": "3206319",
    "end": "3213119"
  },
  {
    "text": "service a view service really that does the communication with the backend if you look at that you will see here down",
    "start": "3213119",
    "end": "3220240"
  },
  {
    "text": "here at the bottom for example here we do a get category by id call and that goes off to api slash events",
    "start": "3220240",
    "end": "3227599"
  },
  {
    "text": "that is a microservice so we're going from the front end directly into the microservices",
    "start": "3227599",
    "end": "3233119"
  },
  {
    "text": "typically not the ideal situation to be in a better solution is what is also",
    "start": "3233119",
    "end": "3238480"
  },
  {
    "text": "included here uh is using different bffs",
    "start": "3238480",
    "end": "3243920"
  },
  {
    "text": "as you can see you have gateway sitting in between and that gateway will now be the point of communication between my",
    "start": "3243920",
    "end": "3250400"
  },
  {
    "text": "front end and my microservices so if we look here at so as you can see we have a mobile bff and a",
    "start": "3250400",
    "end": "3257280"
  },
  {
    "text": "web bff the web bff has a controller for example for the catalog",
    "start": "3257280",
    "end": "3264400"
  },
  {
    "text": "and that does what we did what we did before in the front end that now contains the information to get all the",
    "start": "3264400",
    "end": "3270160"
  },
  {
    "text": "events and that will still do the call to um",
    "start": "3270160",
    "end": "3275760"
  },
  {
    "text": "the api call that's what you see over here that will actually go out to the microservice ins itself but the front",
    "start": "3275760",
    "end": "3282000"
  },
  {
    "text": "end will only know about this gateway so all the logic of combining the on the",
    "start": "3282000",
    "end": "3287920"
  },
  {
    "text": "the responses of the different microservices is now wrapped inside of this gateway in this bff yeah and the",
    "start": "3287920",
    "end": "3294079"
  },
  {
    "text": "front ends well that is this separate uh front end that's a canon",
    "start": "3294079",
    "end": "3300079"
  },
  {
    "text": "mvc application that now only knows if you look at its event catalog controller that now only knows",
    "start": "3300079",
    "end": "3308079"
  },
  {
    "text": "over here and it only knows about the api bff",
    "start": "3308079",
    "end": "3314240"
  },
  {
    "text": "so it will only communicate to the through the bff and it also increases of course your security because you can put",
    "start": "3314240",
    "end": "3320720"
  },
  {
    "text": "your microservices between uh after the firewall or the vpn and only this one will need to talk with the microservices",
    "start": "3320720",
    "end": "3328160"
  },
  {
    "text": "in turn right so that's of course a much easier way to secure the system as well",
    "start": "3328160",
    "end": "3333680"
  },
  {
    "text": "and with that we are almost done so let's wrap it up",
    "start": "3333680",
    "end": "3340480"
  },
  {
    "text": "i hope i've given you a bit of an overview of how you can do mic services it first of all",
    "start": "3342559",
    "end": "3348799"
  },
  {
    "text": "as a big reminder it might not be the solution for your particular problem it can be a solution for larger",
    "start": "3348799",
    "end": "3354400"
  },
  {
    "text": "applications it's typically something that tends to attempt to lend itself better for larger applications but it's",
    "start": "3354400",
    "end": "3361040"
  },
  {
    "text": "not always a solution even for those building it using asp.net core is of course very well possible it's just apis",
    "start": "3361040",
    "end": "3368400"
  },
  {
    "text": "and those apis we need to consider how we let them communicate and of course a good way of doing that is a broker",
    "start": "3368400",
    "end": "3374960"
  },
  {
    "text": "which uh which we've seen uh using azure service business image we have asynchronous communication to let the",
    "start": "3374960",
    "end": "3381280"
  },
  {
    "text": "services communicate all right i hope i've given you an overview that that helps you a little bit i said i",
    "start": "3381280",
    "end": "3387119"
  },
  {
    "text": "have a five-hour course that goes a lot deeper into setting up this sort of application hope it was useful for you",
    "start": "3387119",
    "end": "3394400"
  },
  {
    "text": "thank you for skipping lunch to come and listen to me i hope you enjoy the rest of your day and the conference thank you",
    "start": "3394400",
    "end": "3402280"
  },
  {
    "text": "you",
    "start": "3411119",
    "end": "3413200"
  }
]