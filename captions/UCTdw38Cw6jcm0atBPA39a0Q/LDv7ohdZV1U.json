[
  {
    "text": "okay so welcome everybody I'd like to point out this this",
    "start": "1399",
    "end": "10410"
  },
  {
    "text": "astronaut is painted on containers see it's deep okay say I had to point it out",
    "start": "10410",
    "end": "20340"
  },
  {
    "text": "it's it's my own pun so I need to point it out and so this talk is about Linux",
    "start": "20340",
    "end": "26550"
  },
  {
    "text": "security and the chromium sandbox um and it's basically if you've been around",
    "start": "26550",
    "end": "31830"
  },
  {
    "text": "Linux security API it's just nice to know a little bit about how they have are used in practice in an application",
    "start": "31830",
    "end": "37950"
  },
  {
    "text": "that is not docker my name is Patricia",
    "start": "37950",
    "end": "43350"
  },
  {
    "text": "oz I'm a consultant for the last three weeks so I work from my own companies",
    "start": "43350",
    "end": "50670"
  },
  {
    "text": "called turtle sec aiming to be a C++ programmer maybe doing some specialization in application security",
    "start": "50670",
    "end": "57770"
  },
  {
    "text": "up until a few weeks ago I worked on the Vivaldi browser before that I worked at",
    "start": "57770",
    "end": "63539"
  },
  {
    "text": "Cisco making telepresence systems with a bunch of people here and before that I",
    "start": "63539",
    "end": "70110"
  },
  {
    "text": "was a Java consultant for a little while and before that I worked on the Opera browser so I worked on two browsers so",
    "start": "70110",
    "end": "78119"
  },
  {
    "text": "far and to read browser as code bases",
    "start": "78119",
    "end": "83340"
  },
  {
    "text": "because currently the new Opera browser is also chromium based but the browser that I worked on was not I'm have a",
    "start": "83340",
    "end": "90930"
  },
  {
    "text": "master in computer science I was taught Java once upon a time but I've been working in C++ since I graduated so this",
    "start": "90930",
    "end": "101790"
  },
  {
    "text": "is this is a very important aspect to realize about browsers what browsers do is remote code execution we download",
    "start": "101790",
    "end": "108390"
  },
  {
    "text": "code from the Internet and we execute it on your machine that is what browsers do",
    "start": "108390",
    "end": "113570"
  },
  {
    "text": "so so that we can't have any illusions about what browsers do people kind of",
    "start": "113570",
    "end": "119070"
  },
  {
    "text": "forget this part and think it's you know it's the internet so sandboxing is a",
    "start": "119070",
    "end": "127770"
  },
  {
    "text": "concept that has grown more organically in both operating systems and in browsers",
    "start": "127770",
    "end": "133800"
  },
  {
    "text": "and basically you can think of it as having two types of threats so you have",
    "start": "133800",
    "end": "139440"
  },
  {
    "text": "the external threat where you are trying to protect the user's computer against",
    "start": "139440",
    "end": "146730"
  },
  {
    "text": "vulnerabilities in the browser which could expose them to this code that we downloaded over the internet so let's",
    "start": "146730",
    "end": "152940"
  },
  {
    "text": "say that you download some malicious code if it managed to escape the browser in some way it could do damage or",
    "start": "152940",
    "end": "159030"
  },
  {
    "text": "retrieve information or do something on the user's computer and that is the primary and purpose of sandboxing in",
    "start": "159030",
    "end": "164610"
  },
  {
    "text": "browsers but you can also have more of a lateral threat where you have in a",
    "start": "164610",
    "end": "170400"
  },
  {
    "text": "system internal threat so let's imagine that you have some malware on your system and your browser contains a lot",
    "start": "170400",
    "end": "178080"
  },
  {
    "text": "of your personal information in many different ways both when you're running but also on disk there's a lot of",
    "start": "178080",
    "end": "183750"
  },
  {
    "text": "personal information and it could be a way to find things out about you mind",
    "start": "183750",
    "end": "189330"
  },
  {
    "text": "you for personal information maybe inject something in your browser things",
    "start": "189330",
    "end": "194460"
  },
  {
    "text": "like that so you also have system threats but in this case basically you",
    "start": "194460",
    "end": "199650"
  },
  {
    "text": "have malware running on your machine and it it makes a whole a whole lot of",
    "start": "199650",
    "end": "205530"
  },
  {
    "text": "things difficult to do to fix we're going to focus mostly on the first part",
    "start": "205530",
    "end": "212010"
  },
  {
    "text": "but it's important to note so this is a",
    "start": "212010",
    "end": "218100"
  },
  {
    "text": "Linux based talk and this aspect of browsers is very platform specific they",
    "start": "218100",
    "end": "223920"
  },
  {
    "text": "use platform primitives for for buildings and boxes there are widely different from platform to platform and",
    "start": "223920",
    "end": "229680"
  },
  {
    "text": "so this is for Linux and it is built the",
    "start": "229680",
    "end": "235470"
  },
  {
    "text": "the browsers the browsers and boxes are built during startup as you make these",
    "start": "235470",
    "end": "242220"
  },
  {
    "text": "processes which which chrome in consists of so chromium will consist of many",
    "start": "242220",
    "end": "247650"
  },
  {
    "text": "processes and they will be sandbox differently so we need to look a little",
    "start": "247650",
    "end": "253019"
  },
  {
    "text": "bit at the process architecture and we're going to look at it as we've all",
    "start": "253019",
    "end": "259019"
  },
  {
    "text": "did because when I wrote to talk I was working at Vivaldi and it's also everybody is a regular chromium browser",
    "start": "259019",
    "end": "266030"
  },
  {
    "text": "pretty norm in most aspects the only difference is that we've Aldi has UI which is written",
    "start": "266030",
    "end": "272760"
  },
  {
    "text": "in in web itself so it's written in react but besides that it's a pretty run-of-the-mill chromium browser and",
    "start": "272760",
    "end": "280080"
  },
  {
    "text": "chrome is a chromium browser brave opera there are many chromium based browsers",
    "start": "280080",
    "end": "286970"
  },
  {
    "text": "so what you will see if you look on disk you will find three executable files one",
    "start": "286970",
    "end": "295980"
  },
  {
    "text": "that's called Vivaldi one is called Vivaldi bin and one is called with all these sandbox now I won't talk much",
    "start": "295980",
    "end": "301620"
  },
  {
    "text": "about the Vivaldi sandbox because for for a modern we want to for example at",
    "start": "301620",
    "end": "307680"
  },
  {
    "text": "the month the Vivaldi sandbox is not in use it is a set UID binary but today it",
    "start": "307680",
    "end": "314850"
  },
  {
    "text": "won't be used on your machine EP when an up-to-date Ubuntu and many other",
    "start": "314850",
    "end": "319890"
  },
  {
    "text": "distributions so you will serve a look at the other two the first one that's",
    "start": "319890",
    "end": "324960"
  },
  {
    "text": "called Vivaldi is just a bash script sets up some environment and things and then it will execute the actual binary",
    "start": "324960",
    "end": "330840"
  },
  {
    "text": "which is the Vivaldi bin now what you notice that when you run your browser you will have many different processes",
    "start": "330840",
    "end": "336570"
  },
  {
    "text": "on your machine but there is only actually one binary so when you start up",
    "start": "336570",
    "end": "345540"
  },
  {
    "text": "you will see something like this so this is starting up with one tab and you",
    "start": "345540",
    "end": "352230"
  },
  {
    "text": "already have six processes currently with the most recent chromium for some",
    "start": "352230",
    "end": "360660"
  },
  {
    "text": "reason the GPU broker has lost the GPU prefix so it's called dash broker I have",
    "start": "360660",
    "end": "366810"
  },
  {
    "text": "a feeling that's a bug it's a weird thing but but you will see something",
    "start": "366810",
    "end": "371820"
  },
  {
    "text": "that looks like this so you will have the name of the browser and then you have long command lines so if you look",
    "start": "371820",
    "end": "376950"
  },
  {
    "text": "in PS you will see this and what you notice here is that the browser doesn't have this dash dash type so the top one",
    "start": "376950",
    "end": "385260"
  },
  {
    "text": "doesn't have that but after that you will see a dash dash types I got two of them that have that and then a bunch",
    "start": "385260",
    "end": "392430"
  },
  {
    "text": "that are a dash dash type render then you will have one that is GPU process and one that is GPU broker or - broker",
    "start": "392430",
    "end": "400470"
  },
  {
    "text": "currently so the process relationships which you",
    "start": "400470",
    "end": "406890"
  },
  {
    "text": "can also see in PS is like this so the browser is the one that spawn stuff what I call Sai got in it and GPU process and",
    "start": "406890",
    "end": "415350"
  },
  {
    "text": "then these will make their own child processes and and at the bottom you will",
    "start": "415350",
    "end": "423150"
  },
  {
    "text": "see the renderer which is where the webview is and a renderer roughly is",
    "start": "423150",
    "end": "430130"
  },
  {
    "text": "equivalent to a tab but there are many many details around that so take it as a",
    "start": "430130",
    "end": "438030"
  },
  {
    "text": "rough mental model so we're going to",
    "start": "438030",
    "end": "445800"
  },
  {
    "text": "look a little bit about the Linux security api's by looking at what is",
    "start": "445800",
    "end": "453870"
  },
  {
    "text": "named so if you go into your browser and chrome that : /i sandbox or Vivaldi :",
    "start": "453870",
    "end": "459000"
  },
  {
    "text": "sandbox depending on your browser it will have a URL like that you will get basically a blank page but that was kind",
    "start": "459000",
    "end": "466080"
  },
  {
    "text": "of boring so I put the Dino there instead but you will get this box and it",
    "start": "466080",
    "end": "471210"
  },
  {
    "text": "will say sandbox status and then will give some information about the sandboxing of your browser on your",
    "start": "471210",
    "end": "476370"
  },
  {
    "text": "machine and here you will see some some names and those are the kinds of things",
    "start": "476370",
    "end": "482820"
  },
  {
    "text": "that we will look at in this presentation so like you see on top it says su ID so say UID binary the sandbox",
    "start": "482820",
    "end": "490890"
  },
  {
    "text": "that I said that we are not using and it says no and the reason why if we're not",
    "start": "490890",
    "end": "496770"
  },
  {
    "text": "using it is because we are able to use the other things and so you have a",
    "start": "496770",
    "end": "501780"
  },
  {
    "text": "namespace sandbox which is a user name space sandbox a PID namespace Network",
    "start": "501780",
    "end": "507570"
  },
  {
    "text": "namespace second and second with T sync and then Yama Alice and which I won't",
    "start": "507570",
    "end": "513210"
  },
  {
    "text": "talk about too much I have a slide like after my presentation if you're",
    "start": "513210",
    "end": "518729"
  },
  {
    "text": "interested in that I will put the slides up on the internet so you can find them",
    "start": "518729",
    "end": "524000"
  },
  {
    "text": "so the idea here is that you have the web right in the innermost circle that",
    "start": "524240",
    "end": "530250"
  },
  {
    "text": "is like internet that is your web view that is where you're going to have your page being all your JavaScript being rendered",
    "start": "530250",
    "end": "537420"
  },
  {
    "text": "all of your web engine being in there so what we are going to try to make is",
    "start": "537420",
    "end": "542790"
  },
  {
    "text": "we're going to make these different namespaces or NS is for namespace so you won't have a net namespace the net",
    "start": "542790",
    "end": "549480"
  },
  {
    "text": "namespace basically will disconnect this process from the network so when we",
    "start": "549480",
    "end": "554550"
  },
  {
    "text": "place it in the net namespace it will no longer have access to network you can",
    "start": "554550",
    "end": "559890"
  },
  {
    "text": "set up things around namespaces and networks to give special access to network inside of containers but how it",
    "start": "559890",
    "end": "568170"
  },
  {
    "text": "is used in chromium is basically to disconnect it from the network then you have an namespace which is called PID",
    "start": "568170",
    "end": "574710"
  },
  {
    "text": "which which basically makes it impossible for that we'll look a little bit about namespace it but it makes it",
    "start": "574710",
    "end": "580980"
  },
  {
    "text": "impossible for this process to see other processes on this machine so it will think you know I'm I'm in very small",
    "start": "580980",
    "end": "589140"
  },
  {
    "text": "world and then you have a user name space which does the same so basically",
    "start": "589140",
    "end": "594660"
  },
  {
    "text": "it's it's limiting what this process can see and then you have other types of",
    "start": "594660",
    "end": "600470"
  },
  {
    "text": "Linux api's that are in use like set our limit to route seccomp and cap set and",
    "start": "600470",
    "end": "606540"
  },
  {
    "text": "to limit or disconnected from other parts of your system so the ship will",
    "start": "606540",
    "end": "613140"
  },
  {
    "text": "look at the technique that they use to route to to disconnect you from the file system and then you have set our limit",
    "start": "613140",
    "end": "620490"
  },
  {
    "text": "to limit your access to certain resources and then sack up and cap set to limit your access to system calls so",
    "start": "620490",
    "end": "628680"
  },
  {
    "text": "that's the overview okay so let's start setting up the sandbox so this is the",
    "start": "628680",
    "end": "637980"
  },
  {
    "text": "high-level overview of some of the API that we're going to use I'm going to fill in more here as we go along but",
    "start": "637980",
    "end": "643980"
  },
  {
    "text": "like I said before there's only one binary so be to be able to make all these processes some forking and cloning",
    "start": "643980",
    "end": "650250"
  },
  {
    "text": "and things aren't necessary so initially when you start up your browser process",
    "start": "650250",
    "end": "657450"
  },
  {
    "text": "you will launch it and it will do it will make two child processes it will",
    "start": "657450",
    "end": "663030"
  },
  {
    "text": "make what I call so I got in it and it will make the GPU process the second tenet is the most interesting",
    "start": "663030",
    "end": "669250"
  },
  {
    "text": "because it uses instead of using fork it uses a system called called clone and",
    "start": "669250",
    "end": "675490"
  },
  {
    "text": "the good thing about clone is you can give a lot of flags to clone including these namespace Flags so basically",
    "start": "675490",
    "end": "682660"
  },
  {
    "text": "you're saying I want you to make a new process but I want you to make a new process in the user names versus in the",
    "start": "682660",
    "end": "688240"
  },
  {
    "text": "PID in namespace in a networking namespace so that is part of the sandbox setup that you can do on the other side",
    "start": "688240",
    "end": "695920"
  },
  {
    "text": "it uses only fork to create the GPU process because the GPU process sandbox is much smaller or more permissible than",
    "start": "695920",
    "end": "704020"
  },
  {
    "text": "then what we are trying to construct for the render the renderer is the most untrusted thing in the browser so the",
    "start": "704020",
    "end": "713380"
  },
  {
    "text": "initial sandbox this is just that first step making those two child processes",
    "start": "713380",
    "end": "720300"
  },
  {
    "text": "and just for a terminology often you",
    "start": "720300",
    "end": "725770"
  },
  {
    "text": "will say fork X X and basically means when you do a fork you make a new process when you do an x AK you replace",
    "start": "725770",
    "end": "732760"
  },
  {
    "text": "the program in that process with another program so kind of have to disconnect",
    "start": "732760",
    "end": "738100"
  },
  {
    "text": "the concept of a program and a process you load a program into a processor and",
    "start": "738100",
    "end": "745020"
  },
  {
    "text": "when you say forking you're basically making a new process clone is a type of",
    "start": "745020",
    "end": "751329"
  },
  {
    "text": "four core actually fork is implemented using clone but for a clone can do many different things and the clone is also",
    "start": "751329",
    "end": "758410"
  },
  {
    "text": "used to make threads for example so this is this is the Linux world and these",
    "start": "758410",
    "end": "763540"
  },
  {
    "text": "things are very the the idea of a thread being very different from a process is a",
    "start": "763540",
    "end": "769660"
  },
  {
    "text": "user space concept will look a little",
    "start": "769660",
    "end": "776200"
  },
  {
    "text": "bit more at some tricks you can do with clone later yeah and so X like you're executing a binary in this process",
    "start": "776200",
    "end": "783760"
  },
  {
    "text": "whatever this is so what you need is",
    "start": "783760",
    "end": "790079"
  },
  {
    "text": "some small windows of opportunity where you can limit the attack surface on this process and you have only certain places",
    "start": "790079",
    "end": "797560"
  },
  {
    "text": "where you can do that and so if you're only think forth do you have very few options",
    "start": "797560",
    "end": "803560"
  },
  {
    "text": "you have whatever you do before you fork your child and then you have whatever you do right after you force your child",
    "start": "803560",
    "end": "810340"
  },
  {
    "text": "the idea here is that that as long as we",
    "start": "810340",
    "end": "816010"
  },
  {
    "text": "haven't started running any untrusted code we are relatively safe we are running our own code right",
    "start": "816010",
    "end": "822580"
  },
  {
    "text": "the moment you start doing Internet T things we need to be in a place where",
    "start": "822580",
    "end": "827740"
  },
  {
    "text": "this thing is cut off but before we get there you have some leeway so here with",
    "start": "827740",
    "end": "834820"
  },
  {
    "text": "fork you only have before or after fork so not that that much when you do a fork",
    "start": "834820",
    "end": "843250"
  },
  {
    "text": "exit exit you have a little bit more so you have whatever you did before the",
    "start": "843250",
    "end": "849550"
  },
  {
    "text": "fork clone if you do clone you also have the opportunity to do something at clone",
    "start": "849550",
    "end": "854610"
  },
  {
    "text": "so you get another little window then after you've created that created your",
    "start": "854610",
    "end": "860770"
  },
  {
    "text": "child process before you do your execute in this child process to clean up and do",
    "start": "860770",
    "end": "867100"
  },
  {
    "text": "things that you would like to have fixed before you execute this other program in our case this other program is ourself",
    "start": "867100",
    "end": "874240"
  },
  {
    "text": "again right so because that's what we're executing all the time we're just executing ourself and you have certain",
    "start": "874240",
    "end": "882460"
  },
  {
    "text": "things that you can set up before your exit like setting up the the command",
    "start": "882460",
    "end": "890380"
  },
  {
    "text": "line setting up the environment and so and these again can be used as input to",
    "start": "890380",
    "end": "896080"
  },
  {
    "text": "this process which is yourself or the same program when you start up again to maybe make some choices at startup so",
    "start": "896080",
    "end": "904510"
  },
  {
    "text": "this is a it's a weird recursive thing because you keep on executing yourself right okay so first we're going to look",
    "start": "904510",
    "end": "911950"
  },
  {
    "text": "at namespaces so like I said before a namespace limits what you what a process",
    "start": "911950",
    "end": "918430"
  },
  {
    "text": "can see and there are many different kinds of namespaces and and they are",
    "start": "918430",
    "end": "923770"
  },
  {
    "text": "used in the side guts in the vendors and there are two api's to create namespaces",
    "start": "923770",
    "end": "930700"
  },
  {
    "text": "you and I will look mostly a clone but a little bit a peek at another I was just called unshare yeah so we",
    "start": "930700",
    "end": "942160"
  },
  {
    "text": "have the three namespaces that are in use in chromium to create the sandbox and it is that the user namespace and",
    "start": "942160",
    "end": "948690"
  },
  {
    "text": "this is a very is an important part of the sandbox thing because if you cannot",
    "start": "948690",
    "end": "956350"
  },
  {
    "text": "create a user name space unprivileged in on your distribution you have to use the",
    "start": "956350",
    "end": "963130"
  },
  {
    "text": "set UID say UID sandbox the other binary so but if you can create a user name",
    "start": "963130",
    "end": "970630"
  },
  {
    "text": "space as an unprivileged user then what happens is the moment you have created",
    "start": "970630",
    "end": "976660"
  },
  {
    "text": "an a user name space then the process inside of that user name space is owned",
    "start": "976660",
    "end": "984940"
  },
  {
    "text": "by root or root because it's not really root but inside of that name space it",
    "start": "984940",
    "end": "992590"
  },
  {
    "text": "seems like it is root and the moment you have done that transition where this",
    "start": "992590",
    "end": "998380"
  },
  {
    "text": "child process is living in this world where you know I'm on by root then suddenly you all sorts of possibilities",
    "start": "998380",
    "end": "1004800"
  },
  {
    "text": "open up for you and you can do things that you cannot do as an unprivileged",
    "start": "1004800",
    "end": "1009990"
  },
  {
    "text": "user things like creating a pig named spider because things like creating a network namespace so to do the bottom",
    "start": "1009990",
    "end": "1018210"
  },
  {
    "text": "two the first one has to go so a lot of code error you will find code inside chromium that tries to create an",
    "start": "1018210",
    "end": "1025140"
  },
  {
    "text": "unprivileged user namespace to try to see if it works again because because",
    "start": "1025140",
    "end": "1030600"
  },
  {
    "text": "chromium has to run on many different distributions you herman doesn't know",
    "start": "1030600",
    "end": "1035880"
  },
  {
    "text": "what works and what doesn't work so there are a lot of checks um but the",
    "start": "1035880",
    "end": "1041790"
  },
  {
    "text": "happy happy day scenario here is that you can't create a username space and then basically you just pass the flags",
    "start": "1041790",
    "end": "1046860"
  },
  {
    "text": "to clump and i'll show you the code so like I said before is is it will test",
    "start": "1046860",
    "end": "1053700"
  },
  {
    "text": "and it will also try to to make as many",
    "start": "1053700",
    "end": "1058770"
  },
  {
    "text": "of these namespaces as a can and if it's not sufficient it will fail yeah and",
    "start": "1058770",
    "end": "1065220"
  },
  {
    "text": "we're going to look at a very interesting way they they do the clone call because it has a little bit",
    "start": "1065220",
    "end": "1072150"
  },
  {
    "text": "of a cool trick using long jump and I think the reason why they chose this is",
    "start": "1072150",
    "end": "1079050"
  },
  {
    "text": "because people are used to using forth but most people are not used to using clone and clone is very different from",
    "start": "1079050",
    "end": "1085710"
  },
  {
    "text": "fork in one specific aspect and that is when you do a fork the both the child",
    "start": "1085710",
    "end": "1093210"
  },
  {
    "text": "the child process and the parent process both returned from fork so they're both",
    "start": "1093210",
    "end": "1099540"
  },
  {
    "text": "in the return statement from forth one day when you know when fork is over so",
    "start": "1099540",
    "end": "1105270"
  },
  {
    "text": "the child will return in fork and B and get as a return value zero and the",
    "start": "1105270",
    "end": "1110730"
  },
  {
    "text": "parent process will return from fork and get the the pin of the child and based on that you know if you are the child or",
    "start": "1110730",
    "end": "1117450"
  },
  {
    "text": "the parent and this is something that people are relatively used to but clone",
    "start": "1117450",
    "end": "1122940"
  },
  {
    "text": "doesn't work that way so to make clone work that way they made",
    "start": "1122940",
    "end": "1128790"
  },
  {
    "text": "a little bit of a wrapper around clone and it's kind of cool so all of the code",
    "start": "1128790",
    "end": "1134520"
  },
  {
    "text": "that I'm going to show you are things I think are cool okay so basically here",
    "start": "1134520",
    "end": "1141420"
  },
  {
    "text": "you have the the flag that we're going to pass as clone new user this code is like simplified a little bit imposed",
    "start": "1141420",
    "end": "1146940"
  },
  {
    "text": "from chromium and I basically remove all comments all error checking oh anything",
    "start": "1146940",
    "end": "1154620"
  },
  {
    "text": "that you all of the things to you should have in your code is gone anyway so so",
    "start": "1154620",
    "end": "1160890"
  },
  {
    "text": "you have the flags that we're going to pass the clone and then you set up this jump buffer and then you do set jump and",
    "start": "1160890",
    "end": "1169940"
  },
  {
    "text": "for those who are not used to long jump because you know we don't do that these",
    "start": "1169940",
    "end": "1174960"
  },
  {
    "text": "days this is this is kind of cool because when you do the set jump and he",
    "start": "1174960",
    "end": "1181110"
  },
  {
    "text": "uses this jump buffer it stores a lot of information about exactly what point you",
    "start": "1181110",
    "end": "1186600"
  },
  {
    "text": "are in the program when you later do the long jump to this jump buffer it will actually end up here again so it will",
    "start": "1186600",
    "end": "1196320"
  },
  {
    "text": "kind of be like you're not returning you're kind of jumping down the stack so this is you you",
    "start": "1196320",
    "end": "1202029"
  },
  {
    "text": "stand up like a little thing on the stack and then you do like things and at a certain point up there you're gonna do a long jump to this place it's like a",
    "start": "1202029",
    "end": "1209649"
  },
  {
    "text": "long distant go to okay this is kind of",
    "start": "1209649",
    "end": "1215979"
  },
  {
    "text": "cool so so the idea here is that the the function that does this can now return",
    "start": "1215979",
    "end": "1222779"
  },
  {
    "text": "you know you can return normally out so this is that jump you come back and then",
    "start": "1222779",
    "end": "1228969"
  },
  {
    "text": "you just return the pin and everything is good it's it's weird okay so this is the",
    "start": "1228969",
    "end": "1235719"
  },
  {
    "text": "function that is called in the previous life so this is the clone and long jump in child and seriously it's called this",
    "start": "1235719",
    "end": "1240940"
  },
  {
    "text": "they like like long names descriptive names sentences okay so we get our flags",
    "start": "1240940",
    "end": "1249159"
  },
  {
    "text": "and we get our point stupids and I jump over and one of the things that you see",
    "start": "1249159",
    "end": "1256210"
  },
  {
    "text": "with clone is some some strange things like okay we're passing all these things but but the two first parameters are",
    "start": "1256210",
    "end": "1262359"
  },
  {
    "text": "kind of interesting because instead like like with fork air fork returns with the",
    "start": "1262359",
    "end": "1269619"
  },
  {
    "text": "pig and and so on instead clone when it's finished in the child it will call this clone helper",
    "start": "1269619",
    "end": "1275320"
  },
  {
    "text": "function so whatever that is well look at what that is in this case but you",
    "start": "1275320",
    "end": "1280929"
  },
  {
    "text": "know that's what it will do the other thing is that you have to set up your own stack and you don't get a stack so",
    "start": "1280929",
    "end": "1287379"
  },
  {
    "text": "in this case yeah we have like instead of a stack here and you pass it in it's",
    "start": "1287379",
    "end": "1295239"
  },
  {
    "text": "it's a very powerful API there's not very user-friendly okay so in the",
    "start": "1295239",
    "end": "1302529"
  },
  {
    "text": "question so let's say it's like you've done this thing and and the child is now now cloned so you're in the child it",
    "start": "1302529",
    "end": "1309940"
  },
  {
    "text": "will call this clone helper function and then this clone a helper function you",
    "start": "1309940",
    "end": "1315129"
  },
  {
    "text": "will reinterpret cast your auric see this is good code and then and then you",
    "start": "1315129",
    "end": "1321999"
  },
  {
    "text": "will do a long jump to that jump buffer that you set up previously and then poof",
    "start": "1321999",
    "end": "1328059"
  },
  {
    "text": "and then the child will also return because the parent process will return from this call and all is good and this",
    "start": "1328059",
    "end": "1333970"
  },
  {
    "text": "this one will also return and all is good so it will emulate I",
    "start": "1333970",
    "end": "1340810"
  },
  {
    "text": "fork using a clock which i think is kind of cool okay so moving on you don't have",
    "start": "1340810",
    "end": "1347350"
  },
  {
    "text": "to do that way but it's a cool trick and I'm sure is a different way of creating a username space and and it's used one",
    "start": "1347350",
    "end": "1356230"
  },
  {
    "text": "place in the chromium code album that can talk so much about it but it's here in credentials can create process in new",
    "start": "1356230",
    "end": "1362080"
  },
  {
    "text": "user and name space but basically instead of creating in a username space using clone you are instead moving this",
    "start": "1362080",
    "end": "1370480"
  },
  {
    "text": "process into a new you so we looked at",
    "start": "1370480",
    "end": "1378400"
  },
  {
    "text": "this windows of opportunity so you have the things that you did before you're cloning your fork whatever you did to",
    "start": "1378400",
    "end": "1383800"
  },
  {
    "text": "set up your environment maybe you closed some file descriptors maybe you know things that you don't want to pollute",
    "start": "1383800",
    "end": "1390520"
  },
  {
    "text": "because the thing is when you do a clone or a forked the the child gets a copy of",
    "start": "1390520",
    "end": "1396550"
  },
  {
    "text": "your memory it gets everything right all of your resources and you might not want you might have had something you had",
    "start": "1396550",
    "end": "1403090"
  },
  {
    "text": "from earlier better you you kind of don't want to share with anyone no it's not interesting anymore and this is like",
    "start": "1403090",
    "end": "1409120"
  },
  {
    "text": "an opportunity to clean up a little bit before you share everything it's sort of like before you push your code you might",
    "start": "1409120",
    "end": "1415570"
  },
  {
    "text": "want to read it so so we've done our clone and now now you have created two",
    "start": "1415570",
    "end": "1422770"
  },
  {
    "text": "processes right but these processes are the same and they have now because of",
    "start": "1422770",
    "end": "1427780"
  },
  {
    "text": "our tricks before returned in the same place so you have a child and parent in the same place in the code but that's",
    "start": "1427780",
    "end": "1434440"
  },
  {
    "text": "not really what you're going for it in this case you want to do a neck SEC you want to to start from main again in the",
    "start": "1434440",
    "end": "1441730"
  },
  {
    "text": "child so you're going to execute your own binary again with different",
    "start": "1441730",
    "end": "1448110"
  },
  {
    "text": "command-line arguments and maybe a different environment and some things like that and it will start from the",
    "start": "1448110",
    "end": "1453610"
  },
  {
    "text": "beginning like it was fresh new child so what you can do now is you can try to",
    "start": "1453610",
    "end": "1459330"
  },
  {
    "text": "manipulate some of the the command-line arguments and like you saw they had different command lines the different",
    "start": "1459330",
    "end": "1466450"
  },
  {
    "text": "processes and you can also manipulate the environment but where you might remove or add or take away whatever you want change",
    "start": "1466450",
    "end": "1474820"
  },
  {
    "text": "things in the environment before you pass it on to your child or to your",
    "start": "1474820",
    "end": "1480480"
  },
  {
    "text": "executed program which you're going to execute in a little bit and there are",
    "start": "1480480",
    "end": "1485620"
  },
  {
    "text": "many things that are done inside of chromium things I fix in the environment fixing and file descriptors like like if",
    "start": "1485620",
    "end": "1492159"
  },
  {
    "text": "you have a pipe that you want to talk to your child process and you might make",
    "start": "1492159",
    "end": "1497500"
  },
  {
    "text": "the pipe with both ends open then you firk your child then you close the one",
    "start": "1497500",
    "end": "1503559"
  },
  {
    "text": "end and they close the other end and you know you kind of have to like fix up your IPC stuff so this is a good time to",
    "start": "1503559",
    "end": "1510370"
  },
  {
    "text": "do that to fix up to all of the IPC stuff and and set up maybe some resource",
    "start": "1510370",
    "end": "1517059"
  },
  {
    "text": "limits and stuff and just housekeeping before you do the actual exit call so",
    "start": "1517059",
    "end": "1526809"
  },
  {
    "text": "I'm going to skip the Exide call because it's not that fun so imagine we did that",
    "start": "1526809",
    "end": "1534210"
  },
  {
    "text": "so then we come to the second stage of a sandboxing so now we have we have we set",
    "start": "1534210",
    "end": "1541990"
  },
  {
    "text": "up our namespaces we for 3-xx both both paths and we now have two new",
    "start": "1541990",
    "end": "1548649"
  },
  {
    "text": "processes the GPU process and thus I got in it which who both went through main",
    "start": "1548649",
    "end": "1554889"
  },
  {
    "text": "again because they were exited right so they all started from the beginning but",
    "start": "1554889",
    "end": "1562330"
  },
  {
    "text": "they started this I got in it started from the beginning inside of a user pit and network namespace so it thinks",
    "start": "1562330",
    "end": "1571570"
  },
  {
    "text": "starting up that I am route I am pit one",
    "start": "1571570",
    "end": "1577570"
  },
  {
    "text": "and I have no internet that's kind of",
    "start": "1577570",
    "end": "1584620"
  },
  {
    "text": "weird just a few but there you go and that's that's that's where we are so the",
    "start": "1584620",
    "end": "1591009"
  },
  {
    "text": "site not in it is is pit one and that is kind of special in Linux and so so the",
    "start": "1591009",
    "end": "1598119"
  },
  {
    "text": "first thing or the first thing that the Sargon in it is going to do is it's going to fork a child",
    "start": "1598119",
    "end": "1603549"
  },
  {
    "text": "this child is the one that is going to be the the most important one that is",
    "start": "1603549",
    "end": "1609440"
  },
  {
    "text": "the one that is going to clone itself constantly to make all of these vendor processes it will get messages from",
    "start": "1609440",
    "end": "1617000"
  },
  {
    "text": "browsers saying I need a renderer and this spy got child will fork yourself to",
    "start": "1617000",
    "end": "1623210"
  },
  {
    "text": "make these renders the Saigon in it is just a singular process it will just sit",
    "start": "1623210",
    "end": "1628400"
  },
  {
    "text": "there and and act as a Reaper process and so it has a very small loop where it",
    "start": "1628400",
    "end": "1634309"
  },
  {
    "text": "just waits for kids but after and like you see even if you look at the Saigon",
    "start": "1634309",
    "end": "1640520"
  },
  {
    "text": "in it it says that it's in the user name space but it also has this cap set in in",
    "start": "1640520",
    "end": "1645950"
  },
  {
    "text": "pink I guess and that is done post fork so it does it it it Forks this child",
    "start": "1645950",
    "end": "1654169"
  },
  {
    "text": "process and then it as a cap set on itself to limit its own surface but it",
    "start": "1654169",
    "end": "1661429"
  },
  {
    "text": "has to do it post work because the child needs to Seidman as a as a capability",
    "start": "1661429",
    "end": "1667809"
  },
  {
    "text": "we're going to look at capabilities a little bit yeah and so yeah and then the renderer will",
    "start": "1667809",
    "end": "1675260"
  },
  {
    "text": "make there's a there's a clone that makes a pig new Pig namespace and then yeah so it's a there's stages to this on",
    "start": "1675260",
    "end": "1684200"
  },
  {
    "text": "the GPU side this is mostly an unsigned",
    "start": "1684200",
    "end": "1689360"
  },
  {
    "text": "boxed or at least namespace on sandbox thing but it will set up second so we'll",
    "start": "1689360",
    "end": "1694700"
  },
  {
    "text": "look at that a little bit one thing that is important to look at is I stayed down",
    "start": "1694700",
    "end": "1702110"
  },
  {
    "text": "there with the stars there's no new prints and and so both on the clone x ik",
    "start": "1702110",
    "end": "1708530"
  },
  {
    "text": "and the fork exact no new princess set that means that which is a necessary",
    "start": "1708530",
    "end": "1714169"
  },
  {
    "text": "component to be able to do second but it also limits how much capabilities you can get over an ex a call and that's the",
    "start": "1714169",
    "end": "1721549"
  },
  {
    "text": "whole other I'm not going to go into it but it's if you want to research as you can yeah so basically it's here so if no",
    "start": "1721549",
    "end": "1730850"
  },
  {
    "text": "new prints is set then operations that grant new privileges like ex actly e will either fail or not grant them this",
    "start": "1730850",
    "end": "1736880"
  },
  {
    "text": "facts that you ideas as such GID file capabilities and LSMs so it's it's",
    "start": "1736880",
    "end": "1744560"
  },
  {
    "text": "interesting but it's basically one line of code okay so then we're going to look",
    "start": "1744560",
    "end": "1751010"
  },
  {
    "text": "at second today",
    "start": "1751010",
    "end": "1756050"
  },
  {
    "text": "Michael did a talk on second how many here were at his top okay quite a few",
    "start": "1756050",
    "end": "1762080"
  },
  {
    "text": "but I'm going to do a little bit about it anyway okay so basically in limits what system calls the process can call",
    "start": "1762080",
    "end": "1769460"
  },
  {
    "text": "and how these calls are handled so you can fail in different ways and the API is second there's an older API as well",
    "start": "1769460",
    "end": "1775670"
  },
  {
    "text": "but this is the one that chromium will prefer to use no sorry there we go yeah",
    "start": "1775670",
    "end": "1784430"
  },
  {
    "text": "so basically the second BPF program is written in an assembler like language it",
    "start": "1784430",
    "end": "1789680"
  },
  {
    "text": "runs in a very simple VM which is in kernel space and all of the your system calls will be filtered through this",
    "start": "1789680",
    "end": "1795710"
  },
  {
    "text": "program you might have noticed in the beginning when I showed you the GPU",
    "start": "1795710",
    "end": "1801530"
  },
  {
    "text": "sandbox box that you can see a new machine it had two lines for second and a second but not a hats that come with T",
    "start": "1801530",
    "end": "1808280"
  },
  {
    "text": "sync if you have with t think it basically just means that the second program that is installed in this",
    "start": "1808280",
    "end": "1814880"
  },
  {
    "text": "process will apply to all the threads as well so it's so it has to check if this",
    "start": "1814880",
    "end": "1820340"
  },
  {
    "text": "is available on your kernel so that is that is why it's shown now this is a",
    "start": "1820340",
    "end": "1829280"
  },
  {
    "text": "repurposing of something that was there in the past to filter packets to limit",
    "start": "1829280",
    "end": "1835880"
  },
  {
    "text": "how much you had to cross the the kernel user space boundary if you want to inspect packets and so BPF is actually",
    "start": "1835880",
    "end": "1843410"
  },
  {
    "text": "Berkley packet filter and it has been repurposed for this for filtering system",
    "start": "1843410",
    "end": "1848720"
  },
  {
    "text": "calls but it has also been repurposed for many other things because you know it's there it works you know it's safe we've been doing it for a long time",
    "start": "1848720",
    "end": "1854780"
  },
  {
    "text": "we're conservative people so inside of",
    "start": "1854780",
    "end": "1861050"
  },
  {
    "text": "chromium how this is handled is much more high-level you have classes that",
    "start": "1861050",
    "end": "1866660"
  },
  {
    "text": "represent a policy and you inside of those class you basically have a function which",
    "start": "1866660",
    "end": "1873590"
  },
  {
    "text": "there's just virtual function which which has a switch with all of your function earlier all the it's just calls",
    "start": "1873590",
    "end": "1883100"
  },
  {
    "text": "IDs and then you can basically say you do want to fail or passing you can add a little bit of logic but most of it is",
    "start": "1883100",
    "end": "1889610"
  },
  {
    "text": "basically a switch where the default is Pham and that is that is also very",
    "start": "1889610",
    "end": "1895940"
  },
  {
    "text": "important because these like I say here it's like these things extend each other so you have the baseline policy and GPU",
    "start": "1895940",
    "end": "1902000"
  },
  {
    "text": "process policy extends the baseline policy which extends it like real like inheritance extents and it will only add",
    "start": "1902000",
    "end": "1911540"
  },
  {
    "text": "new Cisco's you allow so the child will be more permissive than the parent so",
    "start": "1911540",
    "end": "1918050"
  },
  {
    "text": "the further you go down it's just about adding things you allow so the baseline",
    "start": "1918050",
    "end": "1925490"
  },
  {
    "text": "policy is is restricted the GPU process policy is is more permissive and then",
    "start": "1925490",
    "end": "1932750"
  },
  {
    "text": "broken more permissive and then the render process policy is also more promising than the baseline so basically",
    "start": "1932750",
    "end": "1938540"
  },
  {
    "text": "based on it's just a minimum set of overlap between these two yeah so we're",
    "start": "1938540",
    "end": "1947480"
  },
  {
    "text": "gonna look at how that looks in code so basically again everything that you",
    "start": "1947480",
    "end": "1953240"
  },
  {
    "text": "should do is removed and everything so what you have left is just the logic right so you have this start sandbox",
    "start": "1953240",
    "end": "1959300"
  },
  {
    "text": "with it down at the bottom by the way you can find where this code is inside of chromium if you want to download it",
    "start": "1959300",
    "end": "1965180"
  },
  {
    "text": "and read the files and I will upload the slides anyway so yeah so you have the",
    "start": "1965180",
    "end": "1971840"
  },
  {
    "text": "start sandbox with policy which takes in a pointer to a policy and then it makes",
    "start": "1971840",
    "end": "1978710"
  },
  {
    "text": "the sandbox BPF object with this policy and then it calls start sandbox and then",
    "start": "1978710",
    "end": "1987200"
  },
  {
    "text": "you go to start sandbox and start sandbox calls install filter of course",
    "start": "1987200",
    "end": "1993590"
  },
  {
    "text": "there's like lots of error checking and comments and all sorts of things in the actual code okay so let's look at the",
    "start": "1993590",
    "end": "1999710"
  },
  {
    "text": "install filter now for the people who are here this morning this is going to be a little bit of a recap but this is how it looks so here you",
    "start": "1999710",
    "end": "2006559"
  },
  {
    "text": "have you have this high-level concept of a program so you will call this assemble",
    "start": "2006559",
    "end": "2013880"
  },
  {
    "text": "filter it will make this program object then you will make this actual sock",
    "start": "2013880",
    "end": "2019789"
  },
  {
    "text": "filter buffer and it is program size now because it is an assembly like language",
    "start": "2019789",
    "end": "2025309"
  },
  {
    "text": "but just bytes right it's just bytes written in memory it's very very low level very hard to inspect",
    "start": "2025309",
    "end": "2032090"
  },
  {
    "text": "so basically we're now going to make the buffer and now we're just going to put all the bytes there for this thing yeah",
    "start": "2032090",
    "end": "2041269"
  },
  {
    "text": "so so we are constructing our program then we're copying everything into it",
    "start": "2041269",
    "end": "2047720"
  },
  {
    "text": "and then we're calling and remember I said before that you know that it calls PR second no new prints it actually if",
    "start": "2047720",
    "end": "2056628"
  },
  {
    "text": "there is a call for it here but it has also been done before it's just I guess",
    "start": "2056629",
    "end": "2061878"
  },
  {
    "text": "just to be safe it doesn't hurt to do it twice or three times or many times but",
    "start": "2061879",
    "end": "2068358"
  },
  {
    "text": "you have but it is precondition for being able to call second so they just do it again um and then you install this",
    "start": "2068359",
    "end": "2076099"
  },
  {
    "text": "filter that's it that's what it looks like so basically instead of writing all",
    "start": "2076099",
    "end": "2082790"
  },
  {
    "text": "of this code in this this is just generated from C++ code yeah yeah yeah",
    "start": "2082790",
    "end": "2100339"
  },
  {
    "text": "they have they have the insert code within the program when they make it the",
    "start": "2100339",
    "end": "2105530"
  },
  {
    "text": "generator of the of it will generate all sorts of checks in the beginning for architecture",
    "start": "2105530",
    "end": "2112390"
  },
  {
    "text": "yeah so so generally you will like like you said is that you can have only so many programs or only so much programs",
    "start": "2115180",
    "end": "2122420"
  },
  {
    "text": "but it's a lot of checks and jumps but the the good thing is here is that you don't have to write it yourself there",
    "start": "2122420",
    "end": "2128989"
  },
  {
    "text": "they have made one common place and so that the usage of it is basically just a switch in C++ code so it's very high",
    "start": "2128989",
    "end": "2136220"
  },
  {
    "text": "level okay and this is another cool",
    "start": "2136220",
    "end": "2141289"
  },
  {
    "text": "thing because like I said before very early on that that the render process",
    "start": "2141289",
    "end": "2149630"
  },
  {
    "text": "has has has no contact with the file system and how they do that is kind of",
    "start": "2149630",
    "end": "2154730"
  },
  {
    "text": "cool so I call it a shoe root I don't think",
    "start": "2154730",
    "end": "2161989"
  },
  {
    "text": "other people call it a shirt what do you call it change RIT okay and it is it is",
    "start": "2161989",
    "end": "2171440"
  },
  {
    "text": "to limit what what a process can see of a file system is basically changing the",
    "start": "2171440",
    "end": "2177890"
  },
  {
    "text": "route of the file system to another file or another directory but we will see how",
    "start": "2177890",
    "end": "2184279"
  },
  {
    "text": "it is used in this case to actually remove all access to it with a little trick so in a really great function",
    "start": "2184279",
    "end": "2195470"
  },
  {
    "text": "called drop file system access okay so if you are if you are a process you can",
    "start": "2195470",
    "end": "2205400"
  },
  {
    "text": "look in proc self FD info and that is a directory that is specific to your",
    "start": "2205400",
    "end": "2213170"
  },
  {
    "text": "process because you're using the magic word itself it is specific to you so the",
    "start": "2213170",
    "end": "2220009"
  },
  {
    "text": "idea here is that you will clone FS a child process clone F s creates a child",
    "start": "2220009",
    "end": "2228289"
  },
  {
    "text": "process that shares your file system attributes it's a weird thing these like",
    "start": "2228289",
    "end": "2234980"
  },
  {
    "text": "you normally don't do this is normally a part of making a thread in this case",
    "start": "2234980",
    "end": "2241670"
  },
  {
    "text": "you're saying you're fine are you sharing all of my file system attributes this little child and this little child",
    "start": "2241670",
    "end": "2247039"
  },
  {
    "text": "is just going to last for a bit and two of the most important",
    "start": "2247039",
    "end": "2252079"
  },
  {
    "text": "things that that two processes that shared file system attributes have is that if one changes directory the other",
    "start": "2252079",
    "end": "2259339"
  },
  {
    "text": "one also changes directory if one sure it's the other one shirts so they move together and they use this by cloning",
    "start": "2259339",
    "end": "2269719"
  },
  {
    "text": "this child and then having the child she route to a process specific directory",
    "start": "2269719",
    "end": "2277189"
  },
  {
    "text": "for that child so now both the parent and the child have shared a to a",
    "start": "2277189",
    "end": "2283209"
  },
  {
    "text": "directory that is process specific to the child and then the child exits and",
    "start": "2283209",
    "end": "2289009"
  },
  {
    "text": "this directory disappears the parent is",
    "start": "2289009",
    "end": "2296299"
  },
  {
    "text": "left in a directory that no longer exists so this is a little trick and",
    "start": "2296299",
    "end": "2301819"
  },
  {
    "text": "we'll look at the code so we're going to",
    "start": "2301819",
    "end": "2307579"
  },
  {
    "text": "do the client and the clone and here you see that the clone slaves again in the middle of the slide you have to set up",
    "start": "2307579",
    "end": "2313160"
  },
  {
    "text": "the stack in all of those weird things that you have to do with clone a but you have the clone flags and then you have",
    "start": "2313160",
    "end": "2318859"
  },
  {
    "text": "the clone underscore FS and then we are going to say that the child should call",
    "start": "2318859",
    "end": "2326059"
  },
  {
    "text": "the function she route to South FT info very descriptive names when it is",
    "start": "2326059",
    "end": "2331279"
  },
  {
    "text": "created that is basically all this going to do that function is all it does and",
    "start": "2331279",
    "end": "2337599"
  },
  {
    "text": "we're done basically later on it tries to do things",
    "start": "2337599",
    "end": "2343219"
  },
  {
    "text": "to check again it's very it's very built-in lots of check so it will try to do something and see that it fails",
    "start": "2343219",
    "end": "2349309"
  },
  {
    "text": "properly instincts to make sure that it is now lost access to the air to the",
    "start": "2349309",
    "end": "2355969"
  },
  {
    "text": "file system this is the child that's all it is it does it just change it to this",
    "start": "2355969",
    "end": "2363679"
  },
  {
    "text": "process specific directory and then it changed to 2/4 itself so now it's here",
    "start": "2363679",
    "end": "2369199"
  },
  {
    "text": "and there are exits and because there",
    "start": "2369199",
    "end": "2374839"
  },
  {
    "text": "was clone FS it brought its parent with it",
    "start": "2374839",
    "end": "2380019"
  },
  {
    "text": "then we have capabilities capabilities has been around and Linux for a very",
    "start": "2383080",
    "end": "2388850"
  },
  {
    "text": "long time it's basically an idea of limiting what a process is privileged enough to do",
    "start": "2388850",
    "end": "2394930"
  },
  {
    "text": "unfortunately it is it's not a system that works really well because the lots of things have been put in a few",
    "start": "2394930",
    "end": "2402230"
  },
  {
    "text": "capabilities and so it's very hard to do fine-grained control of capabilities you",
    "start": "2402230",
    "end": "2408530"
  },
  {
    "text": "end up with saying like okay but if I have to do this little thing over here I have to have the capability called caps",
    "start": "2408530",
    "end": "2414110"
  },
  {
    "text": "Asst admin which basically gives me everything it's it's it's not a system",
    "start": "2414110",
    "end": "2420860"
  },
  {
    "text": "that works very well but it you know it and what you will see here and this is",
    "start": "2420860",
    "end": "2426650"
  },
  {
    "text": "true for all of the platforms is they basically use all the tools you know it doesn't hurt we can always make it a",
    "start": "2426650",
    "end": "2432680"
  },
  {
    "text": "little bit smaller the sandbox you know we made it small then we'll make it a little bit small we'll use everything",
    "start": "2432680",
    "end": "2438050"
  },
  {
    "text": "that we have at our disposal to make it smaller and so you will see both in the",
    "start": "2438050",
    "end": "2447230"
  },
  {
    "text": "side us in the render she will have these dropping of capability so you as you can see the function call drop all",
    "start": "2447230",
    "end": "2453500"
  },
  {
    "text": "capabilities cos you know they like sentences and so you can do a cap set oh",
    "start": "2453500",
    "end": "2460070"
  },
  {
    "text": "sorry area cap set R to drop all are some capabilities and the man page of",
    "start": "2460070",
    "end": "2468920"
  },
  {
    "text": "this those Linux divides the privileges traditionally associated with super user in two distinct units known as",
    "start": "2468920",
    "end": "2475550"
  },
  {
    "text": "capabilities which can be independently enabled or disabled but like I said it",
    "start": "2475550",
    "end": "2480710"
  },
  {
    "text": "doesn't really work because you end up very often having much more than you really need just because you need a",
    "start": "2480710",
    "end": "2487550"
  },
  {
    "text": "specific thing and then you have another older API there's also in use set our",
    "start": "2487550",
    "end": "2495050"
  },
  {
    "text": "limit and that can add a key restrict what kind of access you have to certain",
    "start": "2495050",
    "end": "2501980"
  },
  {
    "text": "resources and it's used for two things yeah in chromium for setting the maximum",
    "start": "2501980",
    "end": "2508130"
  },
  {
    "text": "size of the of the address space and setting the maximum size of the",
    "start": "2508130",
    "end": "2513530"
  },
  {
    "text": "data segment so basically just making sure that you can control all of these processes these processes are going to",
    "start": "2513530",
    "end": "2520400"
  },
  {
    "text": "be running running WebKit or or blink inside and they're going to be",
    "start": "2520400",
    "end": "2526910"
  },
  {
    "text": "allocating memory for all of the things that they need to do so this is in some way to limit how much each of them are",
    "start": "2526910",
    "end": "2533120"
  },
  {
    "text": "able to consume of resources now there is another API which is more modern and",
    "start": "2533120",
    "end": "2540080"
  },
  {
    "text": "is more useful for this called C groups but it's not used on desktop but it is",
    "start": "2540080",
    "end": "2547970"
  },
  {
    "text": "used in on Chromebook and if you have",
    "start": "2547970",
    "end": "2553880"
  },
  {
    "text": "seen Chromebooks and you might be surprised on how well like a browser will run on such bad Hardware because",
    "start": "2553880",
    "end": "2559550"
  },
  {
    "text": "it's basically a phone that looks like a PC and and the reason why it works so",
    "start": "2559550",
    "end": "2564980"
  },
  {
    "text": "well is they are using C groups to do some things that are really cool like I don't know if you guys have used",
    "start": "2564980",
    "end": "2570040"
  },
  {
    "text": "containers where you can freeze the container in one place move it to a different server and then you can thaw",
    "start": "2570040",
    "end": "2576440"
  },
  {
    "text": "it and it will just start where it was it so like it's really fancy anyway that's what they call it but basically",
    "start": "2576440",
    "end": "2581660"
  },
  {
    "text": "they use C burps for this so sagres is that low-level API I won't talk about it",
    "start": "2581660",
    "end": "2587360"
  },
  {
    "text": "much it's there's a little bit after my presentation for people who want to read that appendix and but basically that is",
    "start": "2587360",
    "end": "2595340"
  },
  {
    "text": "a better API now that has more fine-grained for controlling resource access but it's not used on desktop so",
    "start": "2595340",
    "end": "2602090"
  },
  {
    "text": "so I am NOT going to go through it here but basically you can limit the address space so if you go back to the the",
    "start": "2602090",
    "end": "2610520"
  },
  {
    "text": "previous drawing here you can see that and I say Trust is relative I mean you",
    "start": "2610520",
    "end": "2616910"
  },
  {
    "text": "are starting these are your own processes but you don't trust them and you trust them less and less and this",
    "start": "2616910",
    "end": "2622220"
  },
  {
    "text": "whole little box on the left has no access to the file system even so you",
    "start": "2622220",
    "end": "2627260"
  },
  {
    "text": "have a bunch of your own processes that you've started up that have no access to the file system have no access to to the",
    "start": "2627260",
    "end": "2632990"
  },
  {
    "text": "network and they can't see the other processes on your computer they can't see the other users on your computer and",
    "start": "2632990",
    "end": "2641740"
  },
  {
    "text": "and so they live in a very weird bubble",
    "start": "2641740",
    "end": "2646660"
  },
  {
    "text": "and so then we come back to the original one right and now we know like when they",
    "start": "2646810",
    "end": "2653270"
  },
  {
    "text": "say namespace sandbox actually mainly use your namespace sandbox right is just",
    "start": "2653270",
    "end": "2658390"
  },
  {
    "text": "somebody who came up with a string was didn't know and then it's checked and so",
    "start": "2658390",
    "end": "2664070"
  },
  {
    "text": "so if you have a user named sandbox it will make the pit namespace network namespace and then set company BPF and",
    "start": "2664070",
    "end": "2670490"
  },
  {
    "text": "then second BPF with tea sink which means it applies to the threads and the bottom one it says yama Ellison Ellison",
    "start": "2670490",
    "end": "2678100"
  },
  {
    "text": "enforcing and this is not really used much it has a check in the code that",
    "start": "2678100",
    "end": "2684890"
  },
  {
    "text": "checks because in Ellis Emma's Linux security and module right yeah and there",
    "start": "2684890",
    "end": "2691280"
  },
  {
    "text": "are many different ones and this is an area where there's a lot of work currently but in this case the yama",
    "start": "2691280",
    "end": "2697760"
  },
  {
    "text": "ilysm is to try to protect your process from being p traced by other processes and for people who are at michael's talk",
    "start": "2697760",
    "end": "2706630"
  },
  {
    "text": "yesterday on s trace and trace used as p trays underneath and this is a way of",
    "start": "2706630",
    "end": "2712640"
  },
  {
    "text": "trying to limit how much access other processes have to your process but it's",
    "start": "2712640",
    "end": "2717950"
  },
  {
    "text": "not really used it's just checked they just read the value and they don't really do anything about it if you and",
    "start": "2717950",
    "end": "2727790"
  },
  {
    "text": "the sources for this presentation is in chromium kernel source paste linux man pages but if you want to learn more about this then Michael Carey school was",
    "start": "2727790",
    "end": "2734600"
  },
  {
    "text": "here both days he does a really nice course called Linux security and isolation AP ice and they does training",
    "start": "2734600",
    "end": "2740750"
  },
  {
    "text": "of people's company so if you wanted it's there of course all of the errors on my own and I'm a consultant now so",
    "start": "2740750",
    "end": "2749060"
  },
  {
    "text": "hire me and even if you don't hire me and please go and see my talk",
    "start": "2749060",
    "end": "2755960"
  },
  {
    "text": "deconstructing privilege which is on YouTube it is it is also at my pin tweet",
    "start": "2755960",
    "end": "2762110"
  },
  {
    "text": "on Twitter so there's a link there and it is a talk that I did at at NDC also",
    "start": "2762110",
    "end": "2769580"
  },
  {
    "text": "it's a non-technical talk but I think it explains a lot of concepts that might make it easier for all of us in this",
    "start": "2769580",
    "end": "2776000"
  },
  {
    "text": "industry and now I am finished so thank you if you have any questions you",
    "start": "2776000",
    "end": "2786410"
  },
  {
    "text": "just come over but everybody can just go",
    "start": "2786410",
    "end": "2789970"
  }
]