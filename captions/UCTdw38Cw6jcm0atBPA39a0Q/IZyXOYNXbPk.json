[
  {
    "text": "okay hi welcome Hey as always the a cheering",
    "start": "7160",
    "end": "13480"
  },
  {
    "text": "Norwegian [Laughter] crowd um you know it's uh lunch is over",
    "start": "13480",
    "end": "20199"
  },
  {
    "text": "so welcome to another boring protocol talk excellent um it's kind of a",
    "start": "20199",
    "end": "27720"
  },
  {
    "text": "tradition now that every year I'm coming to this event and and present uh a spec you know like basically what's new in",
    "start": "27720",
    "end": "34000"
  },
  {
    "text": "ietf land so to speak yeah and um not a spec that it's in the making there are specs in the making but one that is",
    "start": "34000",
    "end": "40600"
  },
  {
    "text": "actually published um that companies are implementing um we implemented it for sure uh and that I think is very useful",
    "start": "40600",
    "end": "47960"
  },
  {
    "text": "this one is actually one of my favorite specs for a long time because it is simple to implement but gives us much",
    "start": "47960",
    "end": "54680"
  },
  {
    "text": "more security so the ratio is pretty good um so last year I talked about deop",
    "start": "54680",
    "end": "61079"
  },
  {
    "text": "does anyone know what depop is or or use it yeah it's a pro of possession mechanism okay um which is all about",
    "start": "61079",
    "end": "68040"
  },
  {
    "text": "securing the back Channel and um API calls and today I'm going to talk about P which is securing the front channel so",
    "start": "68040",
    "end": "76040"
  },
  {
    "text": "how many of you are working with o client libraries yeah I pretty much figured",
    "start": "76040",
    "end": "82439"
  },
  {
    "text": "that how many of you are actually implementing over authorization servers yeah bad",
    "start": "82439",
    "end": "88840"
  },
  {
    "text": "advice um that's good so the talk is for both of you yeah so it's both about giving",
    "start": "88840",
    "end": "95600"
  },
  {
    "text": "you an idea what p is and giving showing you how it works and how it looks like",
    "start": "95600",
    "end": "100759"
  },
  {
    "text": "and um also giving you some implementation advice as well okay so my",
    "start": "100759",
    "end": "106000"
  },
  {
    "text": "name is Dominic I've been implementing token servers for the last 20 years um",
    "start": "106000",
    "end": "113159"
  },
  {
    "text": "for the better half of my career at least um and it turns out",
    "start": "113159",
    "end": "119920"
  },
  {
    "text": "out the last one I built turned into a commercial product it's called dender identity server it's a a net based uh",
    "start": "119920",
    "end": "127000"
  },
  {
    "text": "open ID connect and oof implementation and that's what we're basically doing these days we are maintaining that",
    "start": "127000",
    "end": "133200"
  },
  {
    "text": "product and as it as it happens last week we released the the latest version",
    "start": "133200",
    "end": "138400"
  },
  {
    "text": "which has par support implemented so that's kind of like a a nice",
    "start": "138400",
    "end": "143800"
  },
  {
    "text": "coincidence um you can contact me on this email address and if you want to have the slide deck that already",
    "start": "143800",
    "end": "150160"
  },
  {
    "text": "uploaded here on speaker deck.com cool so we have to revisit the O of code",
    "start": "150160",
    "end": "159959"
  },
  {
    "text": "flow I'm not going to bore you with all the details in fact uh Philip my um",
    "start": "160319",
    "end": "165920"
  },
  {
    "text": "co-speaker once opened maybe the most specialized oof conference in the world",
    "start": "165920",
    "end": "170959"
  },
  {
    "text": "the oof security workshop with the words if you don't know how code flow works you won't have much fun in the next",
    "start": "170959",
    "end": "176280"
  },
  {
    "text": "coming days so I will not go over every single detail I will not bore you with a",
    "start": "176280",
    "end": "181640"
  },
  {
    "text": "sequence diagram and all of that but I have to we have to revisit it to appreciate what par is actually doing",
    "start": "181640",
    "end": "187640"
  },
  {
    "text": "yeah so the ooff code flow or the authorization code Grant um as they read",
    "start": "187640",
    "end": "194239"
  },
  {
    "text": "you know as they call it in in in the RFC is the you know 95% of the time if",
    "start": "194239",
    "end": "199920"
  },
  {
    "text": "you're doing oov you're going to use use this thing yeah it's built for interactive applications meaning you're",
    "start": "199920",
    "end": "206440"
  },
  {
    "text": "sitting in front of a browser you're sitting in front of a mobile application whatever anytime a human being is",
    "start": "206440",
    "end": "213080"
  },
  {
    "text": "interacting with the authorization server or I should say a client on behalf of a human being is interacting",
    "start": "213080",
    "end": "220319"
  },
  {
    "text": "with the authorization server that the so-called o of code flow is is being used yeah and the specific property of",
    "start": "220319",
    "end": "227720"
  },
  {
    "text": "that is that it it has two steps one is called the front Channel and that is always browser based right so that is",
    "start": "227720",
    "end": "235040"
  },
  {
    "text": "for bringing the human being into the O flow that that's what's showing maybe",
    "start": "235040",
    "end": "240799"
  },
  {
    "text": "the login page and the consent page and whatever other UI you have and the good",
    "start": "240799",
    "end": "246519"
  },
  {
    "text": "thing is it's um it's in a browser right so you can just give it a URL the browser will will follow it the bad",
    "start": "246519",
    "end": "251920"
  },
  {
    "text": "thing is it's in a browser and the browser will just take the URL and and just follow it yeah and um you know uh",
    "start": "251920",
    "end": "259079"
  },
  {
    "text": "the human is involved in in important security decisions very often yeah now",
    "start": "259079",
    "end": "267240"
  },
  {
    "text": "when the front channel is done so all of the UI I things are done then the",
    "start": "267240",
    "end": "272520"
  },
  {
    "text": "authorization will return what we call an authorization code and think of that as a ticket and then the client will",
    "start": "272520",
    "end": "278400"
  },
  {
    "text": "turn around open a back Channel communication hand in that ticket authenticate with the server and then",
    "start": "278400",
    "end": "284479"
  },
  {
    "text": "retrieve the actual artifacts which is access tokens refresh tokens identity",
    "start": "284479",
    "end": "289520"
  },
  {
    "text": "tokens right so that's how that works very in interesting uh detail here",
    "start": "289520",
    "end": "296560"
  },
  {
    "text": "is you see the client only gets authenticated on on the second step on the first step the client is completely",
    "start": "296560",
    "end": "302960"
  },
  {
    "text": "Anonymous right U which is a very important thing to keep in mind what car is actually trying to improve here yeah",
    "start": "302960",
    "end": "311000"
  },
  {
    "text": "so the front Channel basically there's an endpoint in O called the authorized",
    "start": "311000",
    "end": "316600"
  },
  {
    "text": "endpoint right and basically what the client application is doing it constructs a URL and puts all kinds of",
    "start": "316600",
    "end": "323560"
  },
  {
    "text": "parameters on on that URL like what is my client ID where should the authorization code be sent back to um",
    "start": "323560",
    "end": "331840"
  },
  {
    "text": "how should it be sent back to is it a form post or a redirect a query string",
    "start": "331840",
    "end": "337039"
  },
  {
    "text": "uh what does what data or resources does the client want to have access to in this case it's an you know an API for",
    "start": "337039",
    "end": "343520"
  },
  {
    "text": "example and there are all kinds of other parameters um that you're adding like",
    "start": "343520",
    "end": "349960"
  },
  {
    "text": "maybe you want to indicate to the authorization server in which language to show the login UI for example or you",
    "start": "349960",
    "end": "357720"
  },
  {
    "text": "know think of arbitrary other stuff actually the the whole protocol is designed that you can add arbitrary",
    "start": "357720",
    "end": "363319"
  },
  {
    "text": "other stuff here right the protocol specifically says you can add additional parameters that the authorization server",
    "start": "363319",
    "end": "369560"
  },
  {
    "text": "might understand so actually let me show you that um in action",
    "start": "369560",
    "end": "377199"
  },
  {
    "text": "um so here's an um an O for open my connect client right so I'm opening the",
    "start": "379039",
    "end": "385560"
  },
  {
    "text": "network Trace I'm clicking the login button so to speak yeah and what we'll see",
    "start": "385560",
    "end": "392440"
  },
  {
    "text": "is here's the so-called authorized request right so here are all of the",
    "start": "392440",
    "end": "399720"
  },
  {
    "text": "parameters I just mentioned the client ID and the redirect URI and the Scopes and the response mode and and everything",
    "start": "399720",
    "end": "407199"
  },
  {
    "text": "else right so so this endpoint is specified by oov and it must understand",
    "start": "407199",
    "end": "413440"
  },
  {
    "text": "all of these parameters and then after validating those parameters actually",
    "start": "413440",
    "end": "419720"
  },
  {
    "text": "only then the UI is shown so the the the the login page is only shown",
    "start": "419720",
    "end": "425919"
  },
  {
    "text": "after the authorized request has been validated right and all of the these parameters make sense and only after",
    "start": "425919",
    "end": "433080"
  },
  {
    "text": "that you know we're going to see a UI or you might see an error message yeah saying like invalid request or whatever",
    "start": "433080",
    "end": "439440"
  },
  {
    "text": "whatever it is yeah um now I can tell you that between this get",
    "start": "439440",
    "end": "447560"
  },
  {
    "text": "request and this read direct here to the login page there are multiple thousand lines of code in identity server",
    "start": "447560",
    "end": "454879"
  },
  {
    "text": "validating the parameters right so what do you think from a from a security point of view is",
    "start": "454879",
    "end": "461240"
  },
  {
    "text": "it clever that from the outside you can send all of these",
    "start": "461240",
    "end": "467440"
  },
  {
    "text": "parameters it gives aneka a lot of stuff to play with right so what happens if I",
    "start": "470000",
    "end": "476240"
  },
  {
    "text": "change the client ID parameter what happens if I change the scope what happens if I change the redirect URI what happens if I change this parameter",
    "start": "476240",
    "end": "482879"
  },
  {
    "text": "or that parameter what have how will the authorization server react if I'm trying",
    "start": "482879",
    "end": "487919"
  },
  {
    "text": "all kinds of permutations of parameters you know that there's actually a special technique in pen testing called parameter fussing right where they take",
    "start": "487919",
    "end": "495080"
  },
  {
    "text": "those parameters and they shuffle them around and add some random stuff and you know and just see how will the software",
    "start": "495080",
    "end": "501800"
  },
  {
    "text": "react and um I can tell you validating this URL here is not easy",
    "start": "501800",
    "end": "510720"
  },
  {
    "text": "yeah uh also keep in mind that from at this point of view by definition and by",
    "start": "510720",
    "end": "516959"
  },
  {
    "text": "Design the request is anonymous right all the authorization of a gets is is a get request an HTTP get",
    "start": "516959",
    "end": "526320"
  },
  {
    "text": "request with stuff on it yeah we don't know at this point if the client is",
    "start": "526320",
    "end": "532080"
  },
  {
    "text": "really called MVC code or client one or whatever right all we have to say is",
    "start": "532080",
    "end": "537320"
  },
  {
    "text": "okay we we take that data and by you know and and now okay he says he's",
    "start": "537320",
    "end": "542720"
  },
  {
    "text": "client one now we're going to pull the the configuration data from client one does all of the things that he wants is",
    "start": "542720",
    "end": "548160"
  },
  {
    "text": "allowed by policy for client one is the redirect URI allowed for client one does",
    "start": "548160",
    "end": "553440"
  },
  {
    "text": "client one have access to API 1 or not right all of that must happen so to",
    "start": "553440",
    "end": "559279"
  },
  {
    "text": "speak even before we authenticated the client and if we could authenticate the",
    "start": "559279",
    "end": "564600"
  },
  {
    "text": "client in the very first step that validation would be much simpler",
    "start": "564600",
    "end": "569760"
  },
  {
    "text": "right but we kind of have to trust that this is well the client right um so",
    "start": "569760",
    "end": "574800"
  },
  {
    "text": "that's kind of like um you know the problem space here that uh this um this",
    "start": "574800",
    "end": "580959"
  },
  {
    "text": "URL is is uh attackable brittle in a sense yeah um",
    "start": "580959",
    "end": "590560"
  },
  {
    "text": "so and if you're reading which I actually would highly recommend reading the so-called um o security best",
    "start": "591079",
    "end": "599680"
  },
  {
    "text": "practices document from the ietf they go long ways uh explaining how the",
    "start": "599680",
    "end": "606680"
  },
  {
    "text": "validation of that authorized URL is important right and you probably all",
    "start": "606680",
    "end": "612240"
  },
  {
    "text": "heard and that's probably the most common attack here uh um um attacks against manipulating the redirect URI",
    "start": "612240",
    "end": "619279"
  },
  {
    "text": "right so what wouldn't it be great if an attacker could just manipulate that parameter and suddenly the authorization",
    "start": "619279",
    "end": "625680"
  },
  {
    "text": "code gets sent to domain attacker and not to domain you user so to speak right if they could get that authorization",
    "start": "625680",
    "end": "631959"
  },
  {
    "text": "code which is the the Crown Jewel here right I mean that's the thing you don't want to lose yeah that would be great",
    "start": "631959",
    "end": "638120"
  },
  {
    "text": "and there have been historically dozens hundreds of attacks where they basically attacked um bucks",
    "start": "638120",
    "end": "646399"
  },
  {
    "text": "in the authorization server implementation right especially when people try to be clever things like H",
    "start": "646399",
    "end": "652720"
  },
  {
    "text": "introducing wild cards into redirect Uris like star. mydomain.com which",
    "start": "652720",
    "end": "658279"
  },
  {
    "text": "includes all the subdomains right and then there are subdomain takeover attacks and suddenly this thing ends up somewhere else or mydomain.com",
    "start": "658279",
    "end": "665680"
  },
  {
    "text": "sstar which means every every URL on my domain again hundreds of attacks uh",
    "start": "665680",
    "end": "672880"
  },
  {
    "text": "successful attacks have been carried out by manipulating redirect Uris and uh",
    "start": "672880",
    "end": "679720"
  },
  {
    "text": "exploiting uh bugs in the implementation of the authorization server yeah um or",
    "start": "679720",
    "end": "685639"
  },
  {
    "text": "maybe you know um maybe the authorization server has misconfiguration so um does anyone",
    "start": "685639",
    "end": "691639"
  },
  {
    "text": "remember this this thing with Pokémon go um on the iPhone where uh it turned out",
    "start": "691639",
    "end": "697600"
  },
  {
    "text": "that that they by accident they granted every single scope that they had to",
    "start": "697600",
    "end": "702959"
  },
  {
    "text": "offer to this client ID you know we are all developers right like yeah let's just give him all access to make sure it",
    "start": "702959",
    "end": "709160"
  },
  {
    "text": "works and then we'll and then we'll dial it back before production right uh well yeah that didn't happen so",
    "start": "709160",
    "end": "716600"
  },
  {
    "text": "they they figured out that basically by using the Pokemon assigned client ID they could just append arbitrary Scopes",
    "start": "716600",
    "end": "722639"
  },
  {
    "text": "and get access to arbitrary stuff on the authorization server because that was actually not a bug it was just a",
    "start": "722639",
    "end": "729519"
  },
  {
    "text": "misconfiguration of of the authorization server okay so you know that's basically",
    "start": "729519",
    "end": "737440"
  },
  {
    "text": "um the problem space here that historically this authorization",
    "start": "737440",
    "end": "742560"
  },
  {
    "text": "authorized request has been hard to to secure and you see basically besides all",
    "start": "742560",
    "end": "747839"
  },
  {
    "text": "of the open redirection problems there are other things like SE surf attacks for example which you must protect",
    "start": "747839",
    "end": "752880"
  },
  {
    "text": "against uh then there are things like pixie who has heard of Pixie that's good yeah because we at at",
    "start": "752880",
    "end": "759800"
  },
  {
    "text": "a security conference if you would ask the same question at a normal developer conference where they are all also using oof there would be less hands right it's",
    "start": "759800",
    "end": "767760"
  },
  {
    "text": "an advanced thing if if you like um the state parameter has uh has to be used to bind the user agent to the you know all",
    "start": "767760",
    "end": "774760"
  },
  {
    "text": "kinds of things have been added to the authorized request to to make it more resilient against manipulation or",
    "start": "774760",
    "end": "782120"
  },
  {
    "text": "attacks okay so that's kind of um the thing so and in addition to to summarize",
    "start": "782120",
    "end": "789320"
  },
  {
    "text": "that there is no Integrity on the authorized request right just as I said yeah you can arbitrarily change the data",
    "start": "789320",
    "end": "797240"
  },
  {
    "text": "the authorization wouldn't know yeah they wouldn't know that this actually this combination of parameters is coming",
    "start": "797240",
    "end": "803199"
  },
  {
    "text": "from a legitimate client or you just handcrafted a URL okay um",
    "start": "803199",
    "end": "810639"
  },
  {
    "text": "there is no confidentiality on these requests either right I mean even if it's going through",
    "start": "810639",
    "end": "816000"
  },
  {
    "text": "TLS it goes through browser extensions it goes through reverse proxies it goes",
    "start": "816000",
    "end": "821360"
  },
  {
    "text": "through loog files you know URL parameters are in loog files all of that and um you know there are standards",
    "start": "821360",
    "end": "828480"
  },
  {
    "text": "around there like open banking where you maybe pass like um account numbers or other things on the authorized request",
    "start": "828480",
    "end": "835440"
  },
  {
    "text": "so that they can populate the content screen um again",
    "start": "835440",
    "end": "840680"
  },
  {
    "text": "no no um solution to that problem",
    "start": "840680",
    "end": "845920"
  },
  {
    "text": "um also I said the spec explicitly allows adding more parameters as you go",
    "start": "845920",
    "end": "850959"
  },
  {
    "text": "right I mean you could add your own custom parameters you could you know like have you ever seen a scope string",
    "start": "850959",
    "end": "856000"
  },
  {
    "text": "which becomes really large because you have so many Scopes in your organization right they get bigger and bigger and bigger and bigger um there are many more",
    "start": "856000",
    "end": "863639"
  },
  {
    "text": "things you can add to the authorized request like um um ra the authorization",
    "start": "863639",
    "end": "869680"
  },
  {
    "text": "detail where you add like a Jason object that represents your scope for example",
    "start": "869680",
    "end": "874920"
  },
  {
    "text": "you know whatever um so you know they get big um that that is a problem as",
    "start": "874920",
    "end": "881079"
  },
  {
    "text": "well um for some some browsers don't support these URLs some uh uh Cloud",
    "start": "881079",
    "end": "886759"
  },
  {
    "text": "platforms have firewalls that cut off uh for example Asha did that I'm I'm not",
    "start": "886759",
    "end": "892440"
  },
  {
    "text": "sure if they still do it but they only allow 2 kilobytes in the URL for example uh which you can quickly Ed with this",
    "start": "892440",
    "end": "900240"
  },
  {
    "text": "mechanism and the last thing I guess which is also pretty nice from an attacka point of view is since this is a",
    "start": "900240",
    "end": "906320"
  },
  {
    "text": "selfcontained URL right you can just write your own authorized URL and put it",
    "start": "906320",
    "end": "911880"
  },
  {
    "text": "into an email and send it to you and say click here to win an Xbox right and said okay Xbox can't be",
    "start": "911880",
    "end": "919079"
  },
  {
    "text": "wrong um let's click this thing but what you're actually clicking on is an authorized request right and then this",
    "start": "919079",
    "end": "924680"
  },
  {
    "text": "kicks off to the authorization server and maybe on that authorized request a manipulated redirect URI and now you",
    "start": "924680",
    "end": "930880"
  },
  {
    "text": "loged into to and that actually happened right Office 365 or micros you know as adid by",
    "start": "930880",
    "end": "936800"
  },
  {
    "text": "the time um and then this triggered basically transmission of codes to a",
    "start": "936800",
    "end": "942680"
  },
  {
    "text": "different place or triggered consent yeah things like that so all kinds of you know like click click uh click uh",
    "start": "942680",
    "end": "950079"
  },
  {
    "text": "what call it click attacks fishing attacks you know is easily possible because it's just a get request right",
    "start": "950079",
    "end": "955920"
  },
  {
    "text": "you're sending it to the server job done so that's the problem now what would be solutions to",
    "start": "955920",
    "end": "964240"
  },
  {
    "text": "that well first of all probably the best would be if there would be no parameters",
    "start": "964240",
    "end": "969279"
  },
  {
    "text": "at all right if there would be no parameters there is no no opportunity",
    "start": "969279",
    "end": "974680"
  },
  {
    "text": "for manipulating them it's kind of hard because we need to tell the authorization about what to do right",
    "start": "974680",
    "end": "980240"
  },
  {
    "text": "what what what to do with that user agent um so the next best thing would be",
    "start": "980240",
    "end": "986040"
  },
  {
    "text": "can we make them temper proof so in a way that you only the legitimate client can generate the URL and if I would",
    "start": "986040",
    "end": "993040"
  },
  {
    "text": "manipulate it after after the fact it would fail a signature check for example",
    "start": "993040",
    "end": "998680"
  },
  {
    "text": "something like this right um or what would also help is if we could",
    "start": "998680",
    "end": "1003720"
  },
  {
    "text": "authenticate the client right at the authorized endpoint before even the the",
    "start": "1003720",
    "end": "1009440"
  },
  {
    "text": "whole thing starts right if we could do that then only legitimate clients in our",
    "start": "1009440",
    "end": "1015680"
  },
  {
    "text": "system can actually generate authorized URLs and you cannot handcraft them anymore because you are not the right",
    "start": "1015680",
    "end": "1022480"
  },
  {
    "text": "client right these would be potential solutions to the problem now what do we",
    "start": "1022480",
    "end": "1029918"
  },
  {
    "text": "have um as you can see there is a spec which is not new um it's actually quite",
    "start": "1029919",
    "end": "1035520"
  },
  {
    "text": "fascinating sometimes to look at these timelines so by the way who is actually reading",
    "start": "1035520",
    "end": "1041558"
  },
  {
    "text": "rfc's yeah I totally recommend that they're not as bad as it sounds they they even now use uh non-c career fonts",
    "start": "1041559",
    "end": "1048480"
  },
  {
    "text": "now they have HTML versions um of the spec so it's a little bit you know uh gentler to the eye um and they are they",
    "start": "1048480",
    "end": "1055760"
  },
  {
    "text": "are good reads I mean not all of them but i' you know apparently I think they're fascinating because I'm doing",
    "start": "1055760",
    "end": "1062039"
  },
  {
    "text": "talks about them yeah um but basically the idea was you know like when when the",
    "start": "1062039",
    "end": "1067720"
  },
  {
    "text": "whole o of open connect thing started yeah every problem in the world could somehow be solved with a",
    "start": "1067720",
    "end": "1072799"
  },
  {
    "text": "JWT right you just throw a JWT at it yeah and put a signature on it problem solved yeah and that that's exactly what",
    "start": "1072799",
    "end": "1079559"
  },
  {
    "text": "this uh spec is doing it says like why don't we just wrap this whole thing into a JWT put a signature on it and then if",
    "start": "1079559",
    "end": "1086440"
  },
  {
    "text": "somebody would manipulate the URL it would fail okay and as you can see that's not a novel idea so if you look",
    "start": "1086440",
    "end": "1092960"
  },
  {
    "text": "at the Timeline the work for that started in 2010 yeah um by a guy called net",
    "start": "1092960",
    "end": "1100080"
  },
  {
    "text": "sakamura and you see basically up till 2014 it was his own little spec document",
    "start": "1100080",
    "end": "1106440"
  },
  {
    "text": "and then it was adopted as they call it by the ITF in in 2014 and then it just took eight more",
    "start": "1106440",
    "end": "1114919"
  },
  {
    "text": "years to be to become a standard okay um",
    "start": "1114919",
    "end": "1120320"
  },
  {
    "text": "why is that we'll see in a second um but yeah but then it was finally published in August",
    "start": "1120320",
    "end": "1126039"
  },
  {
    "text": "21 so how does it work well basically you know as I said you take your authorized request and instead of",
    "start": "1126039",
    "end": "1133080"
  },
  {
    "text": "putting all the parameters uh in clear text onto the URL you just remove them",
    "start": "1133080",
    "end": "1140640"
  },
  {
    "text": "and replace them by a single par parameter called request okay and what is a request I",
    "start": "1140640",
    "end": "1146679"
  },
  {
    "text": "mean everybody knows there are three dots in the string it must be a JWT right and it is a JWT basically if",
    "start": "1146679",
    "end": "1154480"
  },
  {
    "text": "you if we would unpack this blob of data it would look like this so basically all",
    "start": "1154480",
    "end": "1160280"
  },
  {
    "text": "of the parameters that used to be on the URL are now inside the JWT there's a",
    "start": "1160280",
    "end": "1166799"
  },
  {
    "text": "signature attached to it and that makes them temper proof it also gives you",
    "start": "1166799",
    "end": "1172080"
  },
  {
    "text": "client authentication right because only the legitimate client with the right key could have created a signature so if the",
    "start": "1172080",
    "end": "1179360"
  },
  {
    "text": "validation succeeds you know it comes from a legitimate client",
    "start": "1179360",
    "end": "1184679"
  },
  {
    "text": "yeah do you see a problem with this approach does this make the URL",
    "start": "1184679",
    "end": "1191640"
  },
  {
    "text": "shorter yeah okay yeah Al but by the way if you",
    "start": "1191640",
    "end": "1197600"
  },
  {
    "text": "have any questions feel free to stop me at any point in time it's a short spec it's going to be a short talk we have",
    "start": "1197600",
    "end": "1203360"
  },
  {
    "text": "time to discuss or maybe not we'll see anyways um that that was the approach",
    "start": "1203360",
    "end": "1208559"
  },
  {
    "text": "okay so it's a spec it's out there um we have implemented it not many other",
    "start": "1208559",
    "end": "1214200"
  },
  {
    "text": "people have implemented it um why well because there were some issues with it right it's uh increased complexity at",
    "start": "1214200",
    "end": "1221600"
  },
  {
    "text": "the client so now the client Library needs to create those chots there is some Key Management obviously involved",
    "start": "1221600",
    "end": "1227600"
  },
  {
    "text": "right I mean you need to sign something that means you need to have a key yeah and uh uh that might uh imply that in",
    "start": "1227600",
    "end": "1235760"
  },
  {
    "text": "addition to the client secret you're already using you now need to deploy some cryptographic",
    "start": "1235760",
    "end": "1241480"
  },
  {
    "text": "keys you know maybe that was a good opportunity to get rid of your shared secret client Secrets yeah but most",
    "start": "1241480",
    "end": "1247760"
  },
  {
    "text": "people don't um so that there there is a key involved yeah um even after what 21",
    "start": "1247760",
    "end": "1255200"
  },
  {
    "text": "3 years after the release I don't know know any client library that is used",
    "start": "1255200",
    "end": "1260840"
  },
  {
    "text": "mainstream that implemented it yeah so and if if if you don't have a",
    "start": "1260840",
    "end": "1267559"
  },
  {
    "text": "client Library what's the point yeah and of course the the URLs get bigger there",
    "start": "1267559",
    "end": "1272679"
  },
  {
    "text": "are also performance concerns I guess if it's a low powered client device and",
    "start": "1272679",
    "end": "1278080"
  },
  {
    "text": "need to do crypto operations and you know there all kinds of um concerns with this while this is used in in banking",
    "start": "1278080",
    "end": "1285320"
  },
  {
    "text": "you know like in in systems in basically in closed systems right you control the server and the client and the client",
    "start": "1285320",
    "end": "1290480"
  },
  {
    "text": "libraries may they they have implemented this because also it is a requirement in certain places for what what is called",
    "start": "1290480",
    "end": "1296960"
  },
  {
    "text": "fappy the financial crate API standard for example where they say like clear text authorized requests are not allowed",
    "start": "1296960",
    "end": "1304240"
  },
  {
    "text": "yeah um so the spec discusses all of",
    "start": "1304240",
    "end": "1309360"
  },
  {
    "text": "these shortcomings and also they come up in the end with another way of",
    "start": "1309360",
    "end": "1314400"
  },
  {
    "text": "transmitting that chot to the authorization server which is called pass by reference okay so the idea is with that",
    "start": "1314400",
    "end": "1322360"
  },
  {
    "text": "is instead of putting the chot uh onto the authorized request itself the client creates the chot stores it somewhere and",
    "start": "1322360",
    "end": "1330039"
  },
  {
    "text": "then gives the server the URL to that stored chot so instead of putting the whole",
    "start": "1330039",
    "end": "1335960"
  },
  {
    "text": "thing on the authorized request it basically says okay and by the way my request object as they call it is here",
    "start": "1335960",
    "end": "1343080"
  },
  {
    "text": "just grab it from here now do you see a problem with that",
    "start": "1343080",
    "end": "1349679"
  },
  {
    "text": "who has heard of serers side request fory right so basically telling a server",
    "start": "1349679",
    "end": "1356760"
  },
  {
    "text": "to go to a URL of your choice to do something is probably not the best idea",
    "start": "1356760",
    "end": "1363480"
  },
  {
    "text": "yeah [Music] um yeah so when you look at the um",
    "start": "1363480",
    "end": "1370760"
  },
  {
    "text": "security considerations section of the RFC they specifically talk about this so",
    "start": "1370760",
    "end": "1376360"
  },
  {
    "text": "first of all you know that there are the Chanel enal risks associated with Uris okay so yeah Uris are hard to pass um",
    "start": "1376360",
    "end": "1383720"
  },
  {
    "text": "there were some things I you know didn't even think about but yeah they're totally right yeah it's it's it's a nice",
    "start": "1383720",
    "end": "1390320"
  },
  {
    "text": "denial of service a tech Vector so what for example you could handcraft is authorized request and put a request URI",
    "start": "1390320",
    "end": "1398400"
  },
  {
    "text": "on it and now that points to a server that you control which opens the socket",
    "start": "1398400",
    "end": "1404279"
  },
  {
    "text": "and then just does nothing and just leaves the socket open right and now you Hammer the server with these requests",
    "start": "1404279",
    "end": "1410440"
  },
  {
    "text": "and every time they consume a socket which can't get closed until the server is running out of",
    "start": "1410440",
    "end": "1416760"
  },
  {
    "text": "sockets okay so there are some issues here or just",
    "start": "1416760",
    "end": "1422120"
  },
  {
    "text": "very slow to respond um end points yeah um that's that's that's another one yeah",
    "start": "1422120",
    "end": "1429159"
  },
  {
    "text": "maybe your request URI points to an authorized object with a request U and now you're bringing the server into a",
    "start": "1429159",
    "end": "1434760"
  },
  {
    "text": "recursive lookup situation okay so not not not out of socket exception but out of you know",
    "start": "1434760",
    "end": "1440679"
  },
  {
    "text": "stack Overflow so to speak yeah um what else unexpected",
    "start": "1440679",
    "end": "1447000"
  },
  {
    "text": "locations implemented timeout uh there are all kinds of URI rewrite uh concerns here so basically",
    "start": "1447000",
    "end": "1455159"
  },
  {
    "text": "what what is all required was that up front the authorization server had basically um an allowed list of",
    "start": "1455159",
    "end": "1462400"
  },
  {
    "text": "locations where to read that request object from um and",
    "start": "1462400",
    "end": "1468520"
  },
  {
    "text": "that must be configured up front of course yeah and um what was the other",
    "start": "1468520",
    "end": "1474000"
  },
  {
    "text": "one um latency definitely",
    "start": "1474000",
    "end": "1480840"
  },
  {
    "text": "um I'm trying to think that there was another concern here um",
    "start": "1480840",
    "end": "1486240"
  },
  {
    "text": "pardon oh yeah firewalls who it's it's all zero trust these days we don't need",
    "start": "1486240",
    "end": "1491960"
  },
  {
    "text": "firewalls anymore yeah uh yeah and network connectivity just in general I guess is",
    "start": "1491960",
    "end": "1497919"
  },
  {
    "text": "is another uh um interesting uh problem here",
    "start": "1497919",
    "end": "1505360"
  },
  {
    "text": "um so at the end of the spec of the JWT spec they actually hinted at a possible",
    "start": "1505360",
    "end": "1511360"
  },
  {
    "text": "solution for the problem and that is you know what don't let the client just store that JWT in arbitrary locations",
    "start": "1511360",
    "end": "1518080"
  },
  {
    "text": "maybe the that maybe the authorization server itself should offer a JWT storage",
    "start": "1518080",
    "end": "1524840"
  },
  {
    "text": "mechanism right so that basically first the client pushes that JWT to the",
    "start": "1524840",
    "end": "1530720"
  },
  {
    "text": "authorization server yeah and then you get back an ID whatever right and then um when you do",
    "start": "1530720",
    "end": "1537799"
  },
  {
    "text": "the authorized request it it only will basically go to that internal storage and not do the arbitrary network access",
    "start": "1537799",
    "end": "1545120"
  },
  {
    "text": "right so it's basically a pushed authorization request",
    "start": "1545120",
    "end": "1550360"
  },
  {
    "text": "H look at that yeah so as you can see the the",
    "start": "1550360",
    "end": "1556720"
  },
  {
    "text": "power workor started basically around the time when they were uh when all of these concerns",
    "start": "1556720",
    "end": "1565120"
  },
  {
    "text": "with the JWT secured authorization request become became apparent and as you can see it only",
    "start": "1565120",
    "end": "1572840"
  },
  {
    "text": "took less than two years right because people realize huh maybe that's a much",
    "start": "1572840",
    "end": "1579520"
  },
  {
    "text": "simpler solution than than putting Chas and web tokens on URLs and and figuring",
    "start": "1579520",
    "end": "1585279"
  },
  {
    "text": "out firewalls and white lists and all kinds of other things okay so that's",
    "start": "1585279",
    "end": "1591480"
  },
  {
    "text": "this spec and um as I said it it it's been uh done in a much shorter time it's",
    "start": "1591480",
    "end": "1596520"
  },
  {
    "text": "a much shorter spec as well it's very easy to read I think 20 Pages or something with the typical you know",
    "start": "1596520",
    "end": "1602960"
  },
  {
    "text": "Preamble and whatever so it's um it's a good read and",
    "start": "1602960",
    "end": "1608600"
  },
  {
    "text": "um the idea is super simple actually it's strikingly simple uh namely that",
    "start": "1608600",
    "end": "1615919"
  },
  {
    "text": "the authorization server provides a special endpoint called in this in this case the par endpoint yeah where",
    "start": "1615919",
    "end": "1623640"
  },
  {
    "text": "it accepts posts of authorization",
    "start": "1623640",
    "end": "1629799"
  },
  {
    "text": "parameters okay so basically a client in this case a client called client um",
    "start": "1629799",
    "end": "1635840"
  },
  {
    "text": "opens a connection before even doing the browser business right before even starting the browser or or doing the",
    "start": "1635840",
    "end": "1642000"
  },
  {
    "text": "redirect it opens the back Channel communication it takes all the parameters it is about to send yeah and",
    "start": "1642000",
    "end": "1649360"
  },
  {
    "text": "it pushes that on this back Channel connection so what's the great thing about",
    "start": "1649360",
    "end": "1655679"
  },
  {
    "text": "this we can authenticate the client before the authorized",
    "start": "1656760",
    "end": "1662679"
  },
  {
    "text": "request right to be able to push those parameters to the server the client",
    "start": "1662679",
    "end": "1669039"
  },
  {
    "text": "needs to authenticate so we know who the client is we our validation logic",
    "start": "1669039",
    "end": "1674279"
  },
  {
    "text": "becomes much simpler because we now have an authentic icated client to check all",
    "start": "1674279",
    "end": "1679360"
  },
  {
    "text": "of this against right um and once we are happy with that what",
    "start": "1679360",
    "end": "1687440"
  },
  {
    "text": "we are returning back to the client application is basically uh a request URI so that's",
    "start": "1687440",
    "end": "1694519"
  },
  {
    "text": "basically just Ur the the spec recommends using Ur colon par colon",
    "start": "1694519",
    "end": "1701000"
  },
  {
    "text": "guid okay and that represents your pushed parameters and they will be valid",
    "start": "1701000",
    "end": "1706519"
  },
  {
    "text": "for 90 seconds okay so what does that give us a lot of",
    "start": "1706519",
    "end": "1712519"
  },
  {
    "text": "things a we control the location from where we can pull authorized parameters",
    "start": "1712519",
    "end": "1718320"
  },
  {
    "text": "at runtime it it will be always exclusively our own pushed authorized",
    "start": "1718320",
    "end": "1724480"
  },
  {
    "text": "request store and no other network location okay it controls reuse",
    "start": "1724480",
    "end": "1729760"
  },
  {
    "text": "semantics in the case in in the sense of that we are in control of the quality of",
    "start": "1729760",
    "end": "1734799"
  },
  {
    "text": "the request URI identifier which is a good in this case we can um Implement",
    "start": "1734799",
    "end": "1740399"
  },
  {
    "text": "things like one time only use of that guid for example yeah um we can ensure",
    "start": "1740399",
    "end": "1746240"
  },
  {
    "text": "the the entropy um make sure this is a good parameter and we ensure the lifetime for how long the authorization",
    "start": "1746240",
    "end": "1752559"
  },
  {
    "text": "server actually keeps a hold of that and after after 90 seconds this thing is",
    "start": "1752559",
    "end": "1759080"
  },
  {
    "text": "invalid we can clean up our database and it's gone okay let me show",
    "start": "1759080",
    "end": "1766159"
  },
  {
    "text": "you um um a demo of that so you see when you're",
    "start": "1766159",
    "end": "1774559"
  },
  {
    "text": "implementing par there will be a new entry in your Discovery document which is called the",
    "start": "1774559",
    "end": "1781720"
  },
  {
    "text": "pushed authorization request endpoint okay so that basically it tells the",
    "start": "1781720",
    "end": "1786799"
  },
  {
    "text": "client um when they do Discovery where where on the server is the endpoint where I can push my authorization",
    "start": "1786799",
    "end": "1793919"
  },
  {
    "text": "parameters and then they they have another thing that they want to to see per spec it's called require pushed",
    "start": "1793919",
    "end": "1800200"
  },
  {
    "text": "authorization requests and that is for situations where every client in your",
    "start": "1800200",
    "end": "1805519"
  },
  {
    "text": "authorization would would switch to pushed authorization requests only which is an unrealistic scenario because I",
    "start": "1805519",
    "end": "1811840"
  },
  {
    "text": "mean you're dealing probably with older clients and migration and so on so for a pretty good time you will have old style",
    "start": "1811840",
    "end": "1818799"
  },
  {
    "text": "clients with the authorized parameters and newer style clients that support",
    "start": "1818799",
    "end": "1824559"
  },
  {
    "text": "pushed authorization parameters yeah um",
    "start": "1824559",
    "end": "1831159"
  },
  {
    "text": "anyways um let's run this par MVC",
    "start": "1831159",
    "end": "1837000"
  },
  {
    "text": "par doing the same thing so we can't see the back Channel",
    "start": "1837240",
    "end": "1842799"
  },
  {
    "text": "communication obviously in um in the browser tools right but if I go to the the log files of our server you",
    "start": "1842799",
    "end": "1851039"
  },
  {
    "text": "see um here basically someone is invoking the par endpoint and now the",
    "start": "1851039",
    "end": "1857919"
  },
  {
    "text": "beauty of that is we can now authenticate the client right as I just said before they can even use the power",
    "start": "1857919",
    "end": "1863919"
  },
  {
    "text": "endpoint we can authenticate the client using any client authentication mechanism might be shared secret might",
    "start": "1863919",
    "end": "1869840"
  },
  {
    "text": "be you know um uh a public private key pair you know you name it uh basically",
    "start": "1869840",
    "end": "1875399"
  },
  {
    "text": "any authentication method that is already supported at the authorization server can be used also to authenticate",
    "start": "1875399",
    "end": "1880960"
  },
  {
    "text": "clients at the par end point yeah and then you know all of the usual stuff",
    "start": "1880960",
    "end": "1886120"
  },
  {
    "text": "happens and the login page has been shown as we can see here and if we go to",
    "start": "1886120",
    "end": "1891360"
  },
  {
    "text": "the browser tools you see basically now that's our new",
    "start": "1891360",
    "end": "1898279"
  },
  {
    "text": "authorized request it has a client ID on it and a request URI parameter which is",
    "start": "1898279",
    "end": "1903600"
  },
  {
    "text": "basically the value that came back from the par request okay",
    "start": "1903600",
    "end": "1910360"
  },
  {
    "text": "now internally you know basically we substitute the pushed ones with the the",
    "start": "1910360",
    "end": "1915639"
  },
  {
    "text": "you know the the ones that normally come in from our point of view this looks like a normal authorized request just",
    "start": "1915639",
    "end": "1921240"
  },
  {
    "text": "that now the parameters never went over the browser front channel so to speak",
    "start": "1921240",
    "end": "1929120"
  },
  {
    "text": "okay yes first of all the client ID is the only who was asking that oh yeah um so",
    "start": "1933039",
    "end": "1940880"
  },
  {
    "text": "the the the question was is there a reason we need a client ID uh yes first of all the client ID is the only",
    "start": "1940880",
    "end": "1948000"
  },
  {
    "text": "mandatory parameter in ooff they didn't want to break the oaf spe by removing",
    "start": "1948000",
    "end": "1954200"
  },
  {
    "text": "the client ID parameter okay but for a more practical reason um so the path",
    "start": "1954200",
    "end": "1962760"
  },
  {
    "text": "back does not only allow you to push the authorized parameters as key value pairs",
    "start": "1962760",
    "end": "1968519"
  },
  {
    "text": "in the form post they could be a Jason web token it could be an encrypted Jason",
    "start": "1968519",
    "end": "1974000"
  },
  {
    "text": "web token now how would you decrypt R the Json web token if you don't know to",
    "start": "1974000",
    "end": "1979840"
  },
  {
    "text": "which client it belongs right so that's the Practical reason why you need that",
    "start": "1979840",
    "end": "1986000"
  },
  {
    "text": "client uh Association to to maybe do a more advanced processing yeah and again",
    "start": "1986000",
    "end": "1991120"
  },
  {
    "text": "in banking for example where they push highly sensitive stuff that you know for",
    "start": "1991120",
    "end": "1996760"
  },
  {
    "text": "non-repudiation purposes they need signatures maybe they need encryption for for confidentiality reasons and",
    "start": "1996760",
    "end": "2003399"
  },
  {
    "text": "that's why the client ID is is there but also to not break RFC",
    "start": "2003399",
    "end": "2009360"
  },
  {
    "text": "6749 yeah",
    "start": "2009360",
    "end": "2014480"
  },
  {
    "text": "cool any other questions about",
    "start": "2014919",
    "end": "2018840"
  },
  {
    "text": "this yeah it's it's actually here code challenge right basically you know it is",
    "start": "2020519",
    "end": "2028639"
  },
  {
    "text": "just your normal authorized parameters just not on the front Channel but on the back channel it's besides that it's",
    "start": "2028639",
    "end": "2035320"
  },
  {
    "text": "exactly the same thing",
    "start": "2035320",
    "end": "2038960"
  },
  {
    "text": "okay and then yeah ultimately as you've just seen what the client is doing is going to the authorized request sending",
    "start": "2041760",
    "end": "2048240"
  },
  {
    "text": "client ID sending the request U they have 90 seconds to complete this which is you know all it's configurable I",
    "start": "2048240",
    "end": "2053560"
  },
  {
    "text": "guess um and then after usage this thing will be gone right and if no one's using",
    "start": "2053560",
    "end": "2060679"
  },
  {
    "text": "it um it it'll expire after 90 seconds which is the default value and it be",
    "start": "2060679",
    "end": "2067118"
  },
  {
    "text": "gone as well now what's the great thing about this is now can you use this for for for fishing",
    "start": "2067119",
    "end": "2073240"
  },
  {
    "text": "attacks well can can the attacker create a pushed authorized request without",
    "start": "2075960",
    "end": "2082520"
  },
  {
    "text": "knowing the credentials of the client no right so you can't just",
    "start": "2082520",
    "end": "2087960"
  },
  {
    "text": "package up everything now in this URL and give it to you and you click it they",
    "start": "2087960",
    "end": "2093919"
  },
  {
    "text": "can't create this yeah which is great yeah and um you know",
    "start": "2093919",
    "end": "2101480"
  },
  {
    "text": "there will be probably um a certain amount of time where author authorization of us will support both",
    "start": "2101480",
    "end": "2108320"
  },
  {
    "text": "yeah so um starting with our latest version we we support both styles for every client yeah but at some point once",
    "start": "2108320",
    "end": "2115560"
  },
  {
    "text": "your client libraries have caught up here you can just set in our case just set the the require push authorization",
    "start": "2115560",
    "end": "2122680"
  },
  {
    "text": "to true and that then that's the only way how the authorizations are accept authorized request from that",
    "start": "2122680",
    "end": "2130599"
  },
  {
    "text": "client okay so that's pretty cool I like",
    "start": "2132160",
    "end": "2138440"
  },
  {
    "text": "it there's an interesting catch here which where when I first read it I thought like that sounds like a huge",
    "start": "2139480",
    "end": "2147480"
  },
  {
    "text": "headache so you know uh so so we've been trained as oov professionals that in O",
    "start": "2147480",
    "end": "2155119"
  },
  {
    "text": "you can only you must just only ever use a pre-registered redirect URI for the",
    "start": "2155119",
    "end": "2161359"
  },
  {
    "text": "client right no V cards no regular Expressions magic going on right the the",
    "start": "2161359",
    "end": "2168240"
  },
  {
    "text": "the client must pre-register the redirect URI and only that pre-registered redirect URI can be",
    "start": "2168240",
    "end": "2175640"
  },
  {
    "text": "used yeah interesting and that came from again practical reasons um if you're",
    "start": "2175640",
    "end": "2183440"
  },
  {
    "text": "using pushed authorizations you basically authenticated the client",
    "start": "2183440",
    "end": "2189359"
  },
  {
    "text": "before the authorized request and in that case and only in that case you can",
    "start": "2189359",
    "end": "2194800"
  },
  {
    "text": "argue why can't the client choose the redirect URI",
    "start": "2194800",
    "end": "2200599"
  },
  {
    "text": "themselves let that SN in for a minute Yeah so basically they're making",
    "start": "2202280",
    "end": "2208440"
  },
  {
    "text": "the the argument since the client is already authenticated why don't we let them choose that the redirect URI",
    "start": "2208440",
    "end": "2215680"
  },
  {
    "text": "dynamically and uh while I always thought like yeah I don't know why why I",
    "start": "2215680",
    "end": "2220720"
  },
  {
    "text": "would ever do that it turns out there there are some practical use cases in banking again where you have to do that",
    "start": "2220720",
    "end": "2227839"
  },
  {
    "text": "uh also we turns out we have a customer that said um they're running this big um",
    "start": "2227839",
    "end": "2234119"
  },
  {
    "text": "uh signature portal yeah and by authenticating the client before the",
    "start": "2234119",
    "end": "2241319"
  },
  {
    "text": "authorized request they make their self-service story much simpler because now they don't have to basically go",
    "start": "2241319",
    "end": "2247720"
  },
  {
    "text": "somewhere and whenever they want to change their redirect URI they they don't have to go somewhere and register a new one H or maybe even talk to some",
    "start": "2247720",
    "end": "2256000"
  },
  {
    "text": "help desk thing or whatever you know once they are a registered client in the",
    "start": "2256000",
    "end": "2261200"
  },
  {
    "text": "system they can control some of their configuration dynamically and that's not a concern",
    "start": "2261200",
    "end": "2267560"
  },
  {
    "text": "because the client is authenticated of course this only works for confidential clients right so no JavaScript I mean",
    "start": "2267560",
    "end": "2275280"
  },
  {
    "text": "who does JavaScript these days you shouldn't yeah not for security at least um but you know you know for for",
    "start": "2275280",
    "end": "2283000"
  },
  {
    "text": "for classic for the classic confidential client scenario where the where where the client lives on the server why not",
    "start": "2283000",
    "end": "2288720"
  },
  {
    "text": "allow this yeah I still always crumble when I see that uh because I've been you",
    "start": "2288720",
    "end": "2295240"
  },
  {
    "text": "know but you know it's in the document so it must be official well it is it is",
    "start": "2295240",
    "end": "2301359"
  },
  {
    "text": "official okay so that's an implementers note for those who who are writing their own authorization server",
    "start": "2301359",
    "end": "2308520"
  },
  {
    "text": "um as it turns out completely changes your internal validation pipeline that's what what it did to us",
    "start": "2308520",
    "end": "2315440"
  },
  {
    "text": "at least yeah um another things there were some other security considerations here um of course uh these um redirect",
    "start": "2315440",
    "end": "2324319"
  },
  {
    "text": "Uris um they should be hard to guess of sorry the the request uis should be hard",
    "start": "2324319",
    "end": "2330000"
  },
  {
    "text": "to guess so yeah use guids not not incrementing numbers something like that yeah um there is of cause an open",
    "start": "2330000",
    "end": "2337079"
  },
  {
    "text": "redirection concern but with par what you do is you you don't follow HTTP URLs",
    "start": "2337079",
    "end": "2342880"
  },
  {
    "text": "anymore on the request URI you wouldn't you would you just wouldn't do that right you you would require it to be",
    "start": "2342880",
    "end": "2348599"
  },
  {
    "text": "like a a UR colon par colon number and then you would always go to your own",
    "start": "2348599",
    "end": "2354040"
  },
  {
    "text": "store don't even have some logic that would allow that yeah uh replay attacks",
    "start": "2354040",
    "end": "2360079"
  },
  {
    "text": "of course that's where the the timeout comes in and the onetime usage comes in",
    "start": "2360079",
    "end": "2365319"
  },
  {
    "text": "it's actually as it turns out pretty hard to implement onetime usage on the",
    "start": "2365319",
    "end": "2371160"
  },
  {
    "text": "internet right so the the the original specification in oov for example set the authorization code uh should be a",
    "start": "2371160",
    "end": "2378920"
  },
  {
    "text": "one-time usage as well yeah so basically when you're receiving an authorization code from the",
    "start": "2378920",
    "end": "2384079"
  },
  {
    "text": "server it should only be allowed to be used one single time yeah it turns out",
    "start": "2384079",
    "end": "2389520"
  },
  {
    "text": "on you know highly scalable clouds and and you know shed databases and whatever",
    "start": "2389520",
    "end": "2395680"
  },
  {
    "text": "it's pretty hard to to implement this and uh there was actually um when you when you're doing this the certification",
    "start": "2395680",
    "end": "2401359"
  },
  {
    "text": "for open my connect they had right in the beginning that there was a test case where they tested if you're allowing the",
    "start": "2401359",
    "end": "2407119"
  },
  {
    "text": "authorization code to be used twice and because the spec said so and most companies failed because it was hard you",
    "start": "2407119",
    "end": "2414240"
  },
  {
    "text": "know like imagine like requests coming in like almost like a race condition style requests coming in yeah the",
    "start": "2414240",
    "end": "2419880"
  },
  {
    "text": "browser is resending something or maybe you are driving into a tunnel uh and you",
    "start": "2419880",
    "end": "2424920"
  },
  {
    "text": "couldn't you know like you got your authorization code you tried to send it it didn't work you send it again or",
    "start": "2424920",
    "end": "2430359"
  },
  {
    "text": "whatever right there all kinds of situations where the real world networking systems get in the way but",
    "start": "2430359",
    "end": "2435760"
  },
  {
    "text": "you can do your best by giving it short timeouts and and and deleting them after usage",
    "start": "2435760",
    "end": "2442560"
  },
  {
    "text": "yeah and uh the last thing client policy change well you know it basically talks about the fact that um you should have",
    "start": "2442560",
    "end": "2449640"
  },
  {
    "text": "some sort of uh um uh string stringent client configuration system that says",
    "start": "2449640",
    "end": "2456359"
  },
  {
    "text": "like this client is allowed to use par this client must use PA that's the only",
    "start": "2456359",
    "end": "2461960"
  },
  {
    "text": "way how we interact with them um and historically many authorizers didn't do",
    "start": "2461960",
    "end": "2467200"
  },
  {
    "text": "that um but uh in our case we always had this uh you know this this C based",
    "start": "2467200",
    "end": "2474440"
  },
  {
    "text": "whatever you want to call it configuration thing where you can tie down exactly like which flow is the",
    "start": "2474440",
    "end": "2479640"
  },
  {
    "text": "client to you allowed to use what are the redirect uis uh do you allow an access token which Scopes are allowed",
    "start": "2479640",
    "end": "2486079"
  },
  {
    "text": "and and you we require pushed authorization requests or we we require",
    "start": "2486079",
    "end": "2491119"
  },
  {
    "text": "signed pushed authorization requests would be another interesting spin on that yeah",
    "start": "2491119",
    "end": "2498079"
  },
  {
    "text": "Okay cool so as I said it's a it's actually a pretty a simple spec which is",
    "start": "2498079",
    "end": "2504119"
  },
  {
    "text": "which is good right so it's not like a huge spec that um that that takes ages to implement it's pretty simple you",
    "start": "2504119",
    "end": "2510520"
  },
  {
    "text": "implement the endpoint you're accepting the parameters you're storing them temporarily you hand out an ID and you",
    "start": "2510520",
    "end": "2516800"
  },
  {
    "text": "accept the ID at the front jannel that's pretty much it and that's that's why I like it so much because the the ratio as",
    "start": "2516800",
    "end": "2523280"
  },
  {
    "text": "I said in the beginning the ratio between complexity to implement and gain in security is pretty good right whereas",
    "start": "2523280",
    "end": "2531160"
  },
  {
    "text": "there are other specs where it's immensely hard to implement it to get a little bit more security and then",
    "start": "2531160",
    "end": "2536240"
  },
  {
    "text": "because it's so hard to implement you're adding bugs into the implementation that the security goes down again right so",
    "start": "2536240",
    "end": "2542079"
  },
  {
    "text": "that's kind of the thing um my",
    "start": "2542079",
    "end": "2547280"
  },
  {
    "text": "personal opinion is now that we have that spec there is no point anymore in",
    "start": "2547280",
    "end": "2552800"
  },
  {
    "text": "using old school authorized requests why why would we I mean those that the pushed ones are much better yeah now the",
    "start": "2552800",
    "end": "2561119"
  },
  {
    "text": "problem is of course client libraries need to catch up here right so the spec is relatively new um and apparently as",
    "start": "2561119",
    "end": "2569160"
  },
  {
    "text": "you've seen uh in in my little uh asp.net example it worked",
    "start": "2569160",
    "end": "2575359"
  },
  {
    "text": "right so when I go to to web MVC P Microsoft and kudos to Microsoft",
    "start": "2575359",
    "end": "2583760"
  },
  {
    "text": "actually um even if that open openconnect Handler uh was",
    "start": "2583760",
    "end": "2590559"
  },
  {
    "text": "written I don't know six years ago it's it it it still it already had the",
    "start": "2590559",
    "end": "2595720"
  },
  {
    "text": "extensibility points that we needed to six years later Implement P which is",
    "start": "2595720",
    "end": "2602040"
  },
  {
    "text": "quite nice right it's not as clean as it could be but you basically you see the the thing we're doing here is we are",
    "start": "2602040",
    "end": "2608480"
  },
  {
    "text": "hooking the the events on the opad connect Handler and that there's an event called redirect to Identity",
    "start": "2608480",
    "end": "2614040"
  },
  {
    "text": "provider right that at that point we have all the parameters we we can now open the back Channel communication we",
    "start": "2614040",
    "end": "2619559"
  },
  {
    "text": "can substitute the original parameters with the thing coming back from the endpoint and off we go yeah it's a bit",
    "start": "2619559",
    "end": "2626119"
  },
  {
    "text": "more complicated than that because yeah anyways we spoke to Microsoft uh unfortunately it was very",
    "start": "2626119",
    "end": "2633119"
  },
  {
    "text": "bad timing because it was four weeks before they released net 8 so they didn't add this little feature for us um",
    "start": "2633119",
    "end": "2639880"
  },
  {
    "text": "but in net 9 Microsoft will add another event handler um that will make",
    "start": "2639880",
    "end": "2645119"
  },
  {
    "text": "implementing par basically like a couple of lines of code that's it okay so",
    "start": "2645119",
    "end": "2650280"
  },
  {
    "text": "that's that's that's good enough I guess um that code is is on our repo",
    "start": "2650280",
    "end": "2655480"
  },
  {
    "text": "github.com dender software you'll find the samples and it's all there okay cool um so that's",
    "start": "2655480",
    "end": "2664680"
  },
  {
    "text": "it any questions yes",
    "start": "2664680",
    "end": "2670400"
  },
  {
    "text": "oh thank you thank",
    "start": "2670400",
    "end": "2673960"
  },
  {
    "text": "you thank you who was first",
    "start": "2676359",
    "end": "2682079"
  },
  {
    "text": "yeah",
    "start": "2682079",
    "end": "2685079"
  },
  {
    "text": "yeah",
    "start": "2694960",
    "end": "2697960"
  },
  {
    "text": "so so so the question is was this a good idea to open up redirect URI validation yeah as I said",
    "start": "2715680",
    "end": "2722520"
  },
  {
    "text": "I I was very surprised to read this uh as I said I always crumble a little bit",
    "start": "2722520",
    "end": "2727800"
  },
  {
    "text": "in my stomach when I read it again I can see that from a frat model point of view",
    "start": "2727800",
    "end": "2733640"
  },
  {
    "text": "it's okay but I can also see that developers are now starting to you know",
    "start": "2733640",
    "end": "2739079"
  },
  {
    "text": "take cut some Corners again right um the the whole Wild Card thing was never",
    "start": "2739079",
    "end": "2744400"
  },
  {
    "text": "really necessary because the state parameter in O gives you a chance to do the re on the client side where we",
    "start": "2744400",
    "end": "2750359"
  },
  {
    "text": "should be right um but you know you're running a big cloud you have your",
    "start": "2750359",
    "end": "2756319"
  },
  {
    "text": "application running on en. myab and deyab and why do I have to create 26",
    "start": "2756319",
    "end": "2762000"
  },
  {
    "text": "client registrations just put a star in there and make my as smart enough right",
    "start": "2762000",
    "end": "2768119"
  },
  {
    "text": "yeah I I I agree with you and you know the spec says doesn't say You must implement it it's a May which is a very",
    "start": "2768119",
    "end": "2775640"
  },
  {
    "text": "important distinction here um we implemented it because we have customers asking for it which have legitimate use",
    "start": "2775640",
    "end": "2782079"
  },
  {
    "text": "cases but we only allow that as I said if the request came in why pushed",
    "start": "2782079",
    "end": "2787720"
  },
  {
    "text": "authorized request in the first place I don't I wouldn't you know",
    "start": "2787720",
    "end": "2793200"
  },
  {
    "text": "wouldn't um take it personally if you wouldn't do it like that next",
    "start": "2793200",
    "end": "2799359"
  },
  {
    "text": "question",
    "start": "2799359",
    "end": "2802359"
  },
  {
    "text": "yes because you're troubleshooting by so so so the question is will this make troubleshooting harder depends on what",
    "start": "2814800",
    "end": "2821760"
  },
  {
    "text": "You observe right if you only observe the the browser traffic yes of course it's uh it's not visible anymore um we",
    "start": "2821760",
    "end": "2830040"
  },
  {
    "text": "are in our case we are pretty good I think in logging output to see what's",
    "start": "2830040",
    "end": "2835440"
  },
  {
    "text": "going on um it gives you a chance to also send back error codes but yeah I",
    "start": "2835440",
    "end": "2841960"
  },
  {
    "text": "mean you're right if all you have as a troubleshooting tool is the network tools in the browser it will be not as",
    "start": "2841960",
    "end": "2848880"
  },
  {
    "text": "obvious anymore yeah Philip first yeah and then",
    "start": "2848880",
    "end": "2856359"
  },
  {
    "text": "you so the question is what is there a is there a benefit for mobile clients um",
    "start": "2862880",
    "end": "2869680"
  },
  {
    "text": "so first of all the par is specified for all the overflows so you can use it in",
    "start": "2869680",
    "end": "2875359"
  },
  {
    "text": "in Mobile mobile clients um I don't think it hurts to use it in",
    "start": "2875359",
    "end": "2880880"
  },
  {
    "text": "the mobile client I think the mobile client is a bit better off as usual because they're not running completely",
    "start": "2880880",
    "end": "2886760"
  },
  {
    "text": "in the browser they're only using a very special browser a very secured browser",
    "start": "2886760",
    "end": "2893040"
  },
  {
    "text": "typically like the the the operating system provided authentication browser to send those parameters but I mean the",
    "start": "2893040",
    "end": "2899839"
  },
  {
    "text": "same concerns apply right I mean they end up in Reverse proxy lock files they end up in server loog files uh and by",
    "start": "2899839",
    "end": "2905680"
  },
  {
    "text": "doing adding a par on top um you eliminate this and you're also getting",
    "start": "2905680",
    "end": "2911960"
  },
  {
    "text": "rid of the possibility that somebody can construct URLs for fishing attacks which is also quite nice I think yeah um and",
    "start": "2911960",
    "end": "2920079"
  },
  {
    "text": "the last one was oh yeah and just just to alleviate your concern par only allows to change the URI the return URI",
    "start": "2920079",
    "end": "2928079"
  },
  {
    "text": "if the par request was authenticated so a mobile client would not authenticate",
    "start": "2928079",
    "end": "2933760"
  },
  {
    "text": "at the par end point because they are public declines by definition so that URI manipulation thing wouldn't be",
    "start": "2933760",
    "end": "2939599"
  },
  {
    "text": "allowed for them so yeah I think the the the gain is lower than in browsers but",
    "start": "2939599",
    "end": "2946920"
  },
  {
    "text": "still present yep we do but then we don't",
    "start": "2946920",
    "end": "2954040"
  },
  {
    "text": "allow the the the dynamic redirect URI change",
    "start": "2954040",
    "end": "2960079"
  },
  {
    "text": "yes you any you want to change",
    "start": "2962559",
    "end": "2969640"
  },
  {
    "text": "anything no uh so the question is do I see shortcomings or problems with it no",
    "start": "2969640",
    "end": "2976359"
  },
  {
    "text": "I don't um I as I said it's it is pretty",
    "start": "2976359",
    "end": "2981760"
  },
  {
    "text": "trivial to implement for a good gain in your overall security um and I think",
    "start": "2981760",
    "end": "2987760"
  },
  {
    "text": "it's the best of both worlds so you know um they they started with just pushing key value Pairs and then the banking",
    "start": "2987760",
    "end": "2992960"
  },
  {
    "text": "people came in so they but we need non- repudiations so they added up allowing to push Jason lab tokens from the back",
    "start": "2992960",
    "end": "2999040"
  },
  {
    "text": "end um and I think that's pretty much",
    "start": "2999040",
    "end": "3004480"
  },
  {
    "text": "how it should be and if you look at the work that is post o the ganap protocol",
    "start": "3004480",
    "end": "3010280"
  },
  {
    "text": "that's how they do it from from day one basically any more",
    "start": "3010280",
    "end": "3017240"
  },
  {
    "text": "questions okay then thanks for uh staying with me for the boring protocol",
    "start": "3017240",
    "end": "3022359"
  },
  {
    "text": "talk thank you",
    "start": "3022359",
    "end": "3027440"
  }
]