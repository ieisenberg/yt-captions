[
  {
    "text": "okay let's start first off walk Elm beyond JavaScript frameworks and how",
    "start": "7040",
    "end": "13650"
  },
  {
    "text": "you write reliable web apps with Elm I like to start with a question so who of",
    "start": "13650",
    "end": "19169"
  },
  {
    "text": "you knows about Jonathan Ive who is Jonathan life okay maybe a fifth of the",
    "start": "19169",
    "end": "25320"
  },
  {
    "text": "audience Jonathan Ive is the chief design officer at Apple and maybe the",
    "start": "25320",
    "end": "31080"
  },
  {
    "text": "second most influential guy for all of their products after Steve Jobs and the",
    "start": "31080",
    "end": "37470"
  },
  {
    "text": "reason I would like to start this talk with talking about Jonathan Ive is that my colleague has this great quote about",
    "start": "37470",
    "end": "43199"
  },
  {
    "text": "Elm that I really really love and the quote it goes like this ellen is like Jonathan Ive would have",
    "start": "43199",
    "end": "49829"
  },
  {
    "text": "designed a programming language it is minimalistic it is juice user friendly and it just works and of course this is",
    "start": "49829",
    "end": "57629"
  },
  {
    "text": "a bit on the extreme side of things but still I think it captures the essence of Elm in a way and during the next hour or",
    "start": "57629",
    "end": "65309"
  },
  {
    "text": "so I will try to show you why I think this quote is so fitting so I have a few",
    "start": "65309",
    "end": "71280"
  },
  {
    "text": "more questions for you for you you don't have to raise your hand just think we think inside of you if this goes for you or not so first off",
    "start": "71280",
    "end": "78660"
  },
  {
    "text": "how many of you write JavaScript for work actually here I want some ants that's pretty much everyone so that's",
    "start": "78660",
    "end": "84630"
  },
  {
    "text": "good you're in the target audience for this talk for the following four questions just think for yourself so",
    "start": "84630",
    "end": "91709"
  },
  {
    "text": "maybe you ever shipped an app with confidence that it wouldn't crash in production like there's zero zero chance",
    "start": "91709",
    "end": "98910"
  },
  {
    "text": "that it would ever crash in production and if you did lots and lots of QA that",
    "start": "98910",
    "end": "104520"
  },
  {
    "text": "doesn't count for one of my previous projects we did like three hours of code three weeks of code freeze with no",
    "start": "104520",
    "end": "111270"
  },
  {
    "text": "changes to the code base just doing system testing before we can make the release and in 2018 you don't want to be",
    "start": "111270",
    "end": "117599"
  },
  {
    "text": "working like that and did you ever feel completely safe after a large refactor",
    "start": "117599",
    "end": "122610"
  },
  {
    "text": "of the JavaScript code like really really large testing all of the core domain logic I know I wouldn't did you",
    "start": "122610",
    "end": "131009"
  },
  {
    "text": "ever become overwhelmed by the amount of front-end technology that you need to know in 2017 or now 2018 I mean you have",
    "start": "131009",
    "end": "139920"
  },
  {
    "text": "react you have Redux you all of the other view parts of the the layering cake and you have the build tools webpack you",
    "start": "139920",
    "end": "146640"
  },
  {
    "text": "have the add-ons like immutable Jas and typescript flow etc etc because of all",
    "start": "146640",
    "end": "153330"
  },
  {
    "text": "of these new tools maybe you ever felt like not everyone on your team was comfortable with the front-end tasks I",
    "start": "153330",
    "end": "159300"
  },
  {
    "text": "know in my previous teams there's always been this partitioning into like the backend people and the front-end people",
    "start": "159300",
    "end": "165540"
  },
  {
    "text": "and the very few people are actually comfortable on both sides so for me as",
    "start": "165540",
    "end": "170640"
  },
  {
    "text": "working as a full-time large-scale JavaScript consultant for the past six years I can safely say that I felt all",
    "start": "170640",
    "end": "177900"
  },
  {
    "text": "of these paints personally I have felt that JavaScript fatigue there's even a word for that now there were some",
    "start": "177900",
    "end": "184560"
  },
  {
    "text": "refactorings where you really have to change the way your app works but you really really don't want to and you have",
    "start": "184560",
    "end": "191010"
  },
  {
    "text": "the dedicated front-end developers I know I am one I would like to do more back and stuff but it's just so much",
    "start": "191010",
    "end": "197670"
  },
  {
    "text": "things do - you need to know to be a professional JavaScript developers and also the nail-biting deploys I work at",
    "start": "197670",
    "end": "205920"
  },
  {
    "text": "the large banks um some years back and uh like those big deploys I hey I don't",
    "start": "205920",
    "end": "214050"
  },
  {
    "text": "want that for anyone so I will argue that elm addresses all of the issues and",
    "start": "214050",
    "end": "219360"
  },
  {
    "text": "that's why I think that Elm is so interesting as a piece of technology and while it also addresses these issues I",
    "start": "219360",
    "end": "226620"
  },
  {
    "text": "feel that it also provides a dedicated pair programmer because it's a compiled language you also have the compiler by",
    "start": "226620",
    "end": "233430"
  },
  {
    "text": "side all the time being your dedicated player programmer that's never sick never hangover never goes on vacation",
    "start": "233430",
    "end": "239640"
  },
  {
    "text": "it's just always there and it also provides error messages that actually help you know John Carmack the the lead",
    "start": "239640",
    "end": "247050"
  },
  {
    "text": "developer behind quake Doom lots of the great games for the 90s actually has this great tweet about Elm and its error",
    "start": "247050",
    "end": "253380"
  },
  {
    "text": "messages because Elm is one of the I don't remember the exact wording but Elm",
    "start": "253380",
    "end": "259890"
  },
  {
    "text": "is one of the has one of the best error messages in the world and lastly it has",
    "start": "259890",
    "end": "265170"
  },
  {
    "text": "a solid package system you won't be able to publish a package unless your public API is thoroughly documented and that's",
    "start": "265170",
    "end": "272340"
  },
  {
    "text": "that's enforced by the language itself and it enforces somatic versioning and",
    "start": "272340",
    "end": "277740"
  },
  {
    "text": "all it these other good things so before we delve deeper into Elm I guess I need to",
    "start": "277740",
    "end": "283949"
  },
  {
    "text": "present myself my name is Eric Wendel I live in Oslo and I work as a consultant I've been working mostly with JavaScript",
    "start": "283949",
    "end": "291359"
  },
  {
    "text": "and mobile technology now for the past six years focusing on the user interface part of things and really nailing that",
    "start": "291359",
    "end": "297869"
  },
  {
    "text": "part I worked with some large scale and reaching companies like the region railways NSB and SpiderMonkey M which is",
    "start": "297869",
    "end": "304349"
  },
  {
    "text": "the second largest bank in Norway at Becky consulting in Oslo and the web",
    "start": "304349",
    "end": "309599"
  },
  {
    "text": "development lead and I'm also a founder of Oslo L meet up and also Elm Day a one",
    "start": "309599",
    "end": "315749"
  },
  {
    "text": "day conference about Elm in Oslo at my current client the NSB we are going to",
    "start": "315749",
    "end": "321269"
  },
  {
    "text": "be using Elm and we're serving elm in production to over 1 million users buying train tickets every every day so",
    "start": "321269",
    "end": "329569"
  },
  {
    "text": "this is today's agenda first we start off with a little deep dive into elm how",
    "start": "329569",
    "end": "335369"
  },
  {
    "text": "it works and how it compares to the JavaScript solutions of today secondly I'm going to live code a very small app",
    "start": "335369",
    "end": "341879"
  },
  {
    "text": "for you to show how the development experience is and lastly I'm going to share a little bit about my findings",
    "start": "341879",
    "end": "347879"
  },
  {
    "text": "when I ask the question does anyone actually use Elm I mean it could be a really great technology and all but if",
    "start": "347879",
    "end": "354269"
  },
  {
    "text": "it's not ready for production if people aren't using it is it really that interesting right so this is what we're",
    "start": "354269",
    "end": "359759"
  },
  {
    "text": "gonna look at today so let's start with how album works first off you said that",
    "start": "359759",
    "end": "366209"
  },
  {
    "text": "nearly all of you use JavaScript at work so I guess you can all tell me what this is what will this code produce this is",
    "start": "366209",
    "end": "374459"
  },
  {
    "text": "actually running JavaScript code you could parse this into your console it will produce an output so this is",
    "start": "374459",
    "end": "381599"
  },
  {
    "text": "actually string I'm guessing you all so that immediately and this is a string hello and DC and well I guess many of",
    "start": "381599",
    "end": "391679"
  },
  {
    "text": "you have seen that this is actually valid JavaScript I would like to show you why and how it works as a small example of a wonky JavaScript",
    "start": "391679",
    "end": "399449"
  },
  {
    "text": "can be before we delve into Elm",
    "start": "399449",
    "end": "402949"
  },
  {
    "text": "so I'm going to give myself a little challenge I'd like to be able to produce",
    "start": "408780",
    "end": "414040"
  },
  {
    "text": "the letter e which is the first letter of my name Eric without using any more than these characters so and arrays are",
    "start": "414040",
    "end": "427000"
  },
  {
    "text": "a really fun thing in JavaScript they're not actually erase their objects special form of objects where all the keys are",
    "start": "427000",
    "end": "434340"
  },
  {
    "text": "numerical indices so we can do a lot of funny things with erase we can try to",
    "start": "434340",
    "end": "439780"
  },
  {
    "text": "use the unary addition operator the plus operator with an array and it would be",
    "start": "439780",
    "end": "445420"
  },
  {
    "text": "coerced into a number so that would be 0 plus array 0 okay and we could try to",
    "start": "445420",
    "end": "452220"
  },
  {
    "text": "let's say negate that so what's not plus array hmm that's true",
    "start": "452220",
    "end": "459700"
  },
  {
    "text": "because the 0 is try is coerced into a boolean value which is false and then it",
    "start": "459700",
    "end": "465430"
  },
  {
    "text": "would negate that which becomes true so now we have an e but the problem is it's not a string it's a boolean value as",
    "start": "465430",
    "end": "473140"
  },
  {
    "text": "always in JavaScript when you want to produce a string you would just plus it together with an array well ah there we",
    "start": "473140",
    "end": "481270"
  },
  {
    "text": "have the true so now we just need to get the number 3 and then we could access",
    "start": "481270",
    "end": "487360"
  },
  {
    "text": "the third character in this string so let's try to produce the number 1 let's",
    "start": "487360",
    "end": "493450"
  },
  {
    "text": "start an array again we could plus that but now we have 0 so no amounts of 0 is",
    "start": "493450",
    "end": "500290"
  },
  {
    "text": "going to get as a 3 but we could try to go the path we went with earlier and",
    "start": "500290",
    "end": "505420"
  },
  {
    "text": "negate that I'm sorry it's an illegal character for this task so if C 0 is",
    "start": "505420",
    "end": "515789"
  },
  {
    "text": "false then maybe 1 is true so let's try 2 plus the true aha",
    "start": "515790",
    "end": "522240"
  },
  {
    "text": "so if we just do this enough times we",
    "start": "522240",
    "end": "527320"
  },
  {
    "text": "could basically create any number using only those characters that means that if",
    "start": "527320",
    "end": "532510"
  },
  {
    "text": "we revisit our earlier true string and we would wrap that",
    "start": "532510",
    "end": "538420"
  },
  {
    "text": "some parents and then try to access the",
    "start": "538420",
    "end": "544470"
  },
  {
    "text": "oops",
    "start": "544470",
    "end": "547470"
  },
  {
    "text": "like that and then just do our little trick again",
    "start": "555060",
    "end": "562459"
  },
  {
    "text": "voila and the reason I'm doing this is to show you that JavaScript was made in",
    "start": "563240",
    "end": "570360"
  },
  {
    "text": "ten days I guess many of you know and while it's a great language I really enjoy working with JavaScript writing",
    "start": "570360",
    "end": "575940"
  },
  {
    "text": "new code in JavaScript is just a breeze but the problem is when I revisit my code three months earlier even if I",
    "start": "575940",
    "end": "581580"
  },
  {
    "text": "really really spend a lot of time trying to write good code and the problem escalates when I write a really big",
    "start": "581580",
    "end": "586830"
  },
  {
    "text": "application and when I write a big application together with ten people or maybe 20 people or maybe 50 people and",
    "start": "586830",
    "end": "593220"
  },
  {
    "text": "that's pretty much the background for my interest in elm and and really should is",
    "start": "593220",
    "end": "599430"
  },
  {
    "text": "the context for this talk so let's go back to the slides",
    "start": "599430",
    "end": "604490"
  },
  {
    "text": "so when I say the JavaScript attitude of today for me that's do react and redux",
    "start": "610570",
    "end": "616940"
  },
  {
    "text": "it's a great package deal for doing large-scale JavaScript development so I'd like to compared with that so Elm is",
    "start": "616940",
    "end": "623750"
  },
  {
    "text": "a language compiling to JavaScript it's not a framework and it's not the library so you can't directly compare it to",
    "start": "623750",
    "end": "629600"
  },
  {
    "text": "react or angular or vue.js or any one of those and being if a language another",
    "start": "629600",
    "end": "636200"
  },
  {
    "text": "framework you can go a bit further in the promises it delivers I mean we the",
    "start": "636200",
    "end": "641600"
  },
  {
    "text": "development experience it can give you and and just simply the entire package can be a bit more it can be more just",
    "start": "641600",
    "end": "648590"
  },
  {
    "text": "like Apple controls the entire ecosystem they make the hardware they make the software they control the distribution",
    "start": "648590",
    "end": "655580"
  },
  {
    "text": "to the App Store and they can go a bit further in their what they can offer you",
    "start": "655580",
    "end": "660710"
  },
  {
    "text": "and that's a bit of the the the the the thought behind Elm as well and thus Elm",
    "start": "660710",
    "end": "667580"
  },
  {
    "text": "and JavaScript are totally different they don't intend to be a tool that you can just add onto your existing text Act",
    "start": "667580",
    "end": "677630"
  },
  {
    "text": "it's a completely different way of solving the problem so it's different in terms of semantics but also of course in",
    "start": "677630",
    "end": "683750"
  },
  {
    "text": "terms of syntax but on the other side elm uses pure functions and a virtual",
    "start": "683750",
    "end": "689810"
  },
  {
    "text": "Dom similarly to what react started with now all of the other JavaScript frameworks are doing so you create this",
    "start": "689810",
    "end": "695990"
  },
  {
    "text": "tree of components and that's the way you create your front-end app but Elm",
    "start": "695990",
    "end": "701120"
  },
  {
    "text": "does not allow for component state or a local state you know all of your data at the top of your application just like",
    "start": "701120",
    "end": "707270"
  },
  {
    "text": "with redux so basically Elm uses the Redux architecture and but the thing is that",
    "start": "707270",
    "end": "714590"
  },
  {
    "text": "it's actually the other way around the creator of redux Dan Abramov this a guy",
    "start": "714590",
    "end": "719660"
  },
  {
    "text": "from st. Petersburg in Russia he actually tried up Elm and really liked the way of developing with Elm and the",
    "start": "719660",
    "end": "726710"
  },
  {
    "text": "architecture the architecture that you use in Elm so we thought let's try this in JavaScript and out came Redux which",
    "start": "726710",
    "end": "733640"
  },
  {
    "text": "is now maybe the most popular web framework out there so I would say that Elm is basically react reduction with",
    "start": "733640",
    "end": "740600"
  },
  {
    "text": "type safety I am a big fan of reactive ducks and my friends come up to me and say hey you",
    "start": "740600",
    "end": "746500"
  },
  {
    "text": "said I should use to reactivate ducks does that not apply anymore should I jump ship to Ellen and my thoughts is",
    "start": "746500",
    "end": "752230"
  },
  {
    "text": "that react with ducks is great but if you if you are willing to ditch JavaScript and go even further in search",
    "start": "752230",
    "end": "758260"
  },
  {
    "text": "of bigger promises and even better workflow yes I think Elm is better but it's the same way of working it's just",
    "start": "758260",
    "end": "764200"
  },
  {
    "text": "that elm gives you type safety and a more solid experience so let's see some",
    "start": "764200",
    "end": "769870"
  },
  {
    "text": "code just like with react you would compile your elm code down to a single",
    "start": "769870",
    "end": "775360"
  },
  {
    "text": "JavaScript bundle file and you would you would include it in your HTML with the script tag and then you would simply",
    "start": "775360",
    "end": "783480"
  },
  {
    "text": "tell your Elm app to render into a specific download like here we render it into the container node so it's easy to",
    "start": "783480",
    "end": "791860"
  },
  {
    "text": "use Elmen just a part of your application just like Facebook did with react they started using react only on",
    "start": "791860",
    "end": "797320"
  },
  {
    "text": "the chat part of their app because it was the most complex one and also one",
    "start": "797320",
    "end": "802690"
  },
  {
    "text": "with the thermals real-time data so it's simple to try out Elm on just a part of your app and let's have a quick overview",
    "start": "802690",
    "end": "810430"
  },
  {
    "text": "just like with other similar languages the the biggest focus is on correctness maintainability and developer",
    "start": "810430",
    "end": "817000"
  },
  {
    "text": "friendliness it should be your code should be almost mathematically provable",
    "start": "817000",
    "end": "822070"
  },
  {
    "text": "that a rule that will be it will run you'll be running without bugs so it's a functional language from the ML family",
    "start": "822070",
    "end": "828790"
  },
  {
    "text": "so it's similar to f-sharp Oh camel and Haskell and I guess just like a react",
    "start": "828790",
    "end": "835990"
  },
  {
    "text": "had the virtual Dom has the major selling point during the early days Elm has been no runtime errors argument so",
    "start": "835990",
    "end": "843040"
  },
  {
    "text": "it's possible to have runtime errors in elm but you almost have to try to get them the biggest Elm adopter in the",
    "start": "843040",
    "end": "851110"
  },
  {
    "text": "world has about two hundred and fifty thousand lines of code and they have never had a single runtime error in production with over a billion page",
    "start": "851110",
    "end": "857770"
  },
  {
    "text": "views and it's heavily opinionated where javascript is so flexible you can bend",
    "start": "857770",
    "end": "863200"
  },
  {
    "text": "it any way you want you can you can use in this way a functional way object-oriented way whatever Elm is really narrow box Elden provides",
    "start": "863200",
    "end": "871270"
  },
  {
    "text": "a single way to solve every problem and it's very opinionated this is the way you format your code this is the way you",
    "start": "871270",
    "end": "876520"
  },
  {
    "text": "are to take your applications but they are really thought through they they have an",
    "start": "876520",
    "end": "882550"
  },
  {
    "text": "extreme focus on this so for some people that's that buying is too hard they don't like to be controlling that way",
    "start": "882550",
    "end": "889510"
  },
  {
    "text": "they like the flexibility of JavaScript but that's just the way em works so",
    "start": "889510",
    "end": "895300"
  },
  {
    "text": "these are the key language features all data is immutable and there's no null and the big point of that is that",
    "start": "895300",
    "end": "902470"
  },
  {
    "text": "there's no null pointer exception and that's that's a big part of the no runtime errors thing it's all",
    "start": "902470",
    "end": "909279"
  },
  {
    "text": "expressions there's no statements so unlike f-sharp where you have both statements and expressions the in",
    "start": "909279",
    "end": "915550"
  },
  {
    "text": "analyst just expressions everything ever evaluates to a value the language is",
    "start": "915550",
    "end": "921880"
  },
  {
    "text": "pure so all the side effects are handled by the runtime so if you need do a",
    "start": "921880",
    "end": "926950"
  },
  {
    "text": "network call or access local storage whatever you tell the LM runtime to do that for you you don't do it yourself",
    "start": "926950",
    "end": "933279"
  },
  {
    "text": "meaning that all the functions in your code will be pure our architecture is a",
    "start": "933279",
    "end": "938650"
  },
  {
    "text": "built in feature there's no question should we use this way to structure our application should we use like Elm Redux",
    "start": "938650",
    "end": "944500"
  },
  {
    "text": "or Elm angler or Elm view that's it's not a question you just use the Elm architecture and that means for me as a",
    "start": "944500",
    "end": "952060"
  },
  {
    "text": "consultant and I enter a new Ellen project I always familiar with the way things are set up because it's set up in",
    "start": "952060",
    "end": "958000"
  },
  {
    "text": "the L way if there's no I don't have to learn in the framework and lastly it has",
    "start": "958000",
    "end": "963100"
  },
  {
    "text": "a very small with expressive feature set I don't know if any of you saw the talk",
    "start": "963100",
    "end": "968110"
  },
  {
    "text": "in this room before me by Scott clashing on the power of composition and you talked about composition it's like doing",
    "start": "968110",
    "end": "974470"
  },
  {
    "text": "Legos everything just clicks together and I think that that is really true for Elm as well it doesn't have that many",
    "start": "974470",
    "end": "982080"
  },
  {
    "text": "features but the features click really well to create bigger systems but it's",
    "start": "982080",
    "end": "988420"
  },
  {
    "text": "therefore pretty easy to learn Elm I've done another workshop for our workshops",
    "start": "988420",
    "end": "993550"
  },
  {
    "text": "full-day workshops and people everyone from seasoned developers to grad",
    "start": "993550",
    "end": "998980"
  },
  {
    "text": "students in the university pick it up really fast you can be productive in a day so let's see some code as ellen is a",
    "start": "998980",
    "end": "1008579"
  },
  {
    "text": "functional language function at the core of the language so here we have a function increment that axis",
    "start": "1008579",
    "end": "1014800"
  },
  {
    "text": "accepts one parameter X and we return that parameter X plus 1 5 is a constant",
    "start": "1014800",
    "end": "1022059"
  },
  {
    "text": "which is the result of calling increment with the value 4 so in JavaScript you'd use the parentheses but in Elm you just",
    "start": "1022059",
    "end": "1028870"
  },
  {
    "text": "use the space to call a function so whenever you see a space like that it means called function increment with the",
    "start": "1028870",
    "end": "1034538"
  },
  {
    "text": "number 4 there's no types here because Elm can infer all the types it else has",
    "start": "1034539",
    "end": "1040928"
  },
  {
    "text": "full type inference it sees that ok increment is a function except something",
    "start": "1040929",
    "end": "1046089"
  },
  {
    "text": "we call X AHA X is you use plus X plus 1",
    "start": "1046089",
    "end": "1052659"
  },
  {
    "text": "that means that X has to be a number because you don't use the plus operator to concatenate strings X is all plus is",
    "start": "1052659",
    "end": "1059320"
  },
  {
    "text": "only used for numbers so L can infer that the input value X is a number and",
    "start": "1059320",
    "end": "1065950"
  },
  {
    "text": "the return type X plus 1 also has to be a number but as good citizens of Elm you",
    "start": "1065950",
    "end": "1071529"
  },
  {
    "text": "would also always specify the types so the arrow means that it's a function",
    "start": "1071529",
    "end": "1076960"
  },
  {
    "text": "increment has type int to int and v has",
    "start": "1076960",
    "end": "1082390"
  },
  {
    "text": "type int the types service great documentation for other developers and",
    "start": "1082390",
    "end": "1088360"
  },
  {
    "text": "they're also a good they're basically you telling the compiler that this is what I expect from",
    "start": "1088360",
    "end": "1094630"
  },
  {
    "text": "the code that I am about to write so the compiler can help you out and give you heads up if you manage to get an error",
    "start": "1094630",
    "end": "1101710"
  },
  {
    "text": "in there somewhere and with trivial functions like this the point that isn't that big a point but when you write",
    "start": "1101710",
    "end": "1109029"
  },
  {
    "text": "real-world applications it becomes all of the world of difference so in addition to constants we have tuples we",
    "start": "1109029",
    "end": "1116590"
  },
  {
    "text": "just using the parents and also records which are basically objects in",
    "start": "1116590",
    "end": "1121690"
  },
  {
    "text": "JavaScript so it guest gets really",
    "start": "1121690",
    "end": "1128590"
  },
  {
    "text": "interesting when we start talking about types because types are really critical in functional programming so we have the",
    "start": "1128590",
    "end": "1134500"
  },
  {
    "text": "type alias notion like you're doing swift where you say that coordinates is basically a pair of intz so whenever we",
    "start": "1134500",
    "end": "1142030"
  },
  {
    "text": "have a pair of and you could basically just call it coordinates so you're kind of creating",
    "start": "1142030",
    "end": "1147260"
  },
  {
    "text": "an alias between those two you're not creating like a class or a constructor or anything you're just saying that",
    "start": "1147260",
    "end": "1152480"
  },
  {
    "text": "whenever we have this something of this shape we might as well call it coordinates you don't have to do it for",
    "start": "1152480",
    "end": "1159320"
  },
  {
    "text": "tuples you can also do it for four simple primitives to basically rename a type which makes it makes it clearer for",
    "start": "1159320",
    "end": "1166190"
  },
  {
    "text": "clearer for other people reading your code later I guess type aliases are they",
    "start": "1166190",
    "end": "1172940"
  },
  {
    "text": "work the best when you have records so let's say you have a customer type which is a record with field name of type",
    "start": "1172940",
    "end": "1179630"
  },
  {
    "text": "string and a field age of type int so here's me six years ago so moving on",
    "start": "1179630",
    "end": "1187880"
  },
  {
    "text": "there's this other great construction in elm that's the the thing I find myself reaching for whenever I do JavaScript",
    "start": "1187880",
    "end": "1193520"
  },
  {
    "text": "now these days and it's called Union types and to show you how it works I have this a bit larger example so let's",
    "start": "1193520",
    "end": "1201050"
  },
  {
    "text": "say every customer has a type you're either a student type you're a",
    "start": "1201050",
    "end": "1206180"
  },
  {
    "text": "corporate customer or you're a private customer and let's say in JavaScript you",
    "start": "1206180",
    "end": "1212150"
  },
  {
    "text": "would represent that as a string so every student customer has a student",
    "start": "1212150",
    "end": "1217940"
  },
  {
    "text": "discount so let's model that with an int which is a number between 0 and 100 representing",
    "start": "1217940",
    "end": "1223880"
  },
  {
    "text": "the percentage of discount so myself five years ago I would be a student customer and I",
    "start": "1223880",
    "end": "1229460"
  },
  {
    "text": "would have 50% student discount so that's in JavaScript this is pretty much the way you would do it and then",
    "start": "1229460",
    "end": "1235490"
  },
  {
    "text": "fast-forward a few years so I start working at BEC I'm now a corporate type",
    "start": "1235490",
    "end": "1240800"
  },
  {
    "text": "customer and I have a student discount of 0 which makes sense because I don't",
    "start": "1240800",
    "end": "1245960"
  },
  {
    "text": "have a I shouldn't get any discount but still it's a bit weird that I have a student discount field there right what",
    "start": "1245960",
    "end": "1252170"
  },
  {
    "text": "why is it there when I'm not a student now the developer reading this has to know that we never type a student then",
    "start": "1252170",
    "end": "1258890"
  },
  {
    "text": "that field becomes active if not you can just ignore it but it's still there that's a pretty bit weird also it's very",
    "start": "1258890",
    "end": "1266300"
  },
  {
    "text": "easy to miss type the value of the field type you could write corporate without e",
    "start": "1266300",
    "end": "1271760"
  },
  {
    "text": "on the end and then your code will work it would just blow up in production unless you have a lot of tests of course",
    "start": "1271760",
    "end": "1279260"
  },
  {
    "text": "so we have this Union type construction for this which is basically like if",
    "start": "1279260",
    "end": "1285350"
  },
  {
    "text": "fancy enum so you can say that type customer type has one of three possible values it's either a student a corporate",
    "start": "1285350",
    "end": "1292490"
  },
  {
    "text": "or a private value so so far it's just like an enum what we have achieved here",
    "start": "1292490",
    "end": "1299030"
  },
  {
    "text": "is that the compiler will be able to tell you if you forget to handle a case or if you mistype it it will say I don't",
    "start": "1299030",
    "end": "1304970"
  },
  {
    "text": "recognize the value student of type customer type I I don't know about that",
    "start": "1304970",
    "end": "1310970"
  },
  {
    "text": "value but now we've lost our student discount and we've also lost the company",
    "start": "1310970",
    "end": "1318050"
  },
  {
    "text": "name field so just like in F sharp you can add values to each of the different",
    "start": "1318050",
    "end": "1325190"
  },
  {
    "text": "branches of the Union type so whenever you have a student value you need to have an int you can't create a student",
    "start": "1325190",
    "end": "1331910"
  },
  {
    "text": "type without an int you can see it asked that's the student value wrapping or",
    "start": "1331910",
    "end": "1337430"
  },
  {
    "text": "containing an int and the compiler will enforce this in your code you simply can't create a student value without",
    "start": "1337430",
    "end": "1343880"
  },
  {
    "text": "passing it an int it's not possible similarly with the corporate value so",
    "start": "1343880",
    "end": "1349790"
  },
  {
    "text": "the way you unwrap this is through pattern matching here we have a function",
    "start": "1349790",
    "end": "1355250"
  },
  {
    "text": "called get discount accepting a customer type and returning a discount which is an nth so here you see we use the a case",
    "start": "1355250",
    "end": "1362720"
  },
  {
    "text": "expression case class of and then all of the different possible values of the",
    "start": "1362720",
    "end": "1368090"
  },
  {
    "text": "customer type so here Elm can actually notify us if we forget one of the",
    "start": "1368090",
    "end": "1373910"
  },
  {
    "text": "branches and it can detect spelling errors and it will also type safely and",
    "start": "1373910",
    "end": "1379520"
  },
  {
    "text": "wrap the wrapped values like a discount and the name so let's say you have a really big application and you let's say",
    "start": "1379520",
    "end": "1386960"
  },
  {
    "text": "myself as an example we sell train tickets and you would think there's just one type type of tickets but that's",
    "start": "1386960",
    "end": "1392210"
  },
  {
    "text": "wrong there's about 16 or 17 there's one way to get to a ticket only return",
    "start": "1392210",
    "end": "1397220"
  },
  {
    "text": "ticket there's a period ticket for 7 days 24 hours 30 days 365 days there's a",
    "start": "1397220",
    "end": "1403730"
  },
  {
    "text": "senior citizen tickets etc etc so that's modeled as a union type at our company so whenever we add a new type of",
    "start": "1403730",
    "end": "1411020"
  },
  {
    "text": "ticket or remove it then elm can immediately run through all of our code and see ah you forgot to add that branch",
    "start": "1411020",
    "end": "1416840"
  },
  {
    "text": "in the case expression here and here and here and here and elm will simply not allow us to compile the code so it it",
    "start": "1416840",
    "end": "1424520"
  },
  {
    "text": "won't let me deploy that code and possibly have a crash in production that's a pretty",
    "start": "1424520",
    "end": "1431179"
  },
  {
    "text": "major sell most of these language have this built in Union type called a maybe",
    "start": "1431179",
    "end": "1437720"
  },
  {
    "text": "or an optional in elm it's called maybe and that you would use that whenever you",
    "start": "1437720",
    "end": "1443630"
  },
  {
    "text": "would use a null in JavaScript sometimes you have a value that could be null or it could point to something so in elm",
    "start": "1443630",
    "end": "1451610"
  },
  {
    "text": "you will model us as a maybe the a here is just a placeholder it could be an int it could be a boolean it could be a",
    "start": "1451610",
    "end": "1457190"
  },
  {
    "text": "customer type it could be a conference class could be whatever so whenever you have a maybe something you either have",
    "start": "1457190",
    "end": "1463309"
  },
  {
    "text": "just that something or nothing and you explicitly state that so whenever you",
    "start": "1463309",
    "end": "1469549"
  },
  {
    "text": "want to unwrap that value and get the just like the just int you would also",
    "start": "1469549",
    "end": "1476419"
  },
  {
    "text": "have to specify in your pattern match what should I do when it's not there and if you don't do that",
    "start": "1476419",
    "end": "1482630"
  },
  {
    "text": "Elm will scream at you and refuse to compile your code and that's that's the",
    "start": "1482630",
    "end": "1487730"
  },
  {
    "text": "part of the recurring team for Elm it will try to help you avoid these mistakes all of you code and that's your",
    "start": "1487730",
    "end": "1493399"
  },
  {
    "text": "codebase gross that became becomes a really big thing so let me showing an example of fusing",
    "start": "1493399",
    "end": "1499970"
  },
  {
    "text": "and maybe let's say we're writing a game and in the first playthrough of that",
    "start": "1499970",
    "end": "1504980"
  },
  {
    "text": "game you don't have a high score because you haven't completed the game yet and after the first game playthrough you",
    "start": "1504980",
    "end": "1511070"
  },
  {
    "text": "could display the high score up in the corner of the screen or something so you'd have a maybe int the first time",
    "start": "1511070",
    "end": "1517549"
  },
  {
    "text": "around it'll be nothing but the other time around it would be maybe it would actually have no sorry it would be a",
    "start": "1517549",
    "end": "1524120"
  },
  {
    "text": "just int because the two branches are just or nothing right so let's see how",
    "start": "1524120",
    "end": "1529429"
  },
  {
    "text": "we would unwrap that we would of course use the pattern match again so you do case game that high score which is same",
    "start": "1529429",
    "end": "1536870"
  },
  {
    "text": "of type maybe int and then Elm would say that okay it's and maybe int so we have either de just",
    "start": "1536870",
    "end": "1542360"
  },
  {
    "text": "or to nothing and we would have to specify with what we would do in both of those cases this is similar to how we",
    "start": "1542360",
    "end": "1548690"
  },
  {
    "text": "would do a network call in Elm you would have to specify what should we do if the",
    "start": "1548690",
    "end": "1554330"
  },
  {
    "text": "network call fails and similarly for oral operations that can fail like accessing the first element in the list",
    "start": "1554330",
    "end": "1560420"
  },
  {
    "text": "what if the list is empty the Elm will force you to handle that so it in some",
    "start": "1560420",
    "end": "1566510"
  },
  {
    "text": "way it's a bit more cumbersome because you have to handle all of the cases up front but on the other side you can",
    "start": "1566510",
    "end": "1571520"
  },
  {
    "text": "sleep without worrying that your code will break because you know that L got you covered so that's it for the types",
    "start": "1571520",
    "end": "1579320"
  },
  {
    "text": "let's move on to HTML which is pretty important in a web application right so",
    "start": "1579320",
    "end": "1584990"
  },
  {
    "text": "here's a small snippet of HTML let's say we want to create this HTML in elm and",
    "start": "1584990",
    "end": "1590600"
  },
  {
    "text": "output it to the screen like everything else we use functions so for every HTML",
    "start": "1590600",
    "end": "1597110"
  },
  {
    "text": "tag like input div span for form etc",
    "start": "1597110",
    "end": "1602300"
  },
  {
    "text": "there is a corresponding elm function that you can call in order to create an element like that and they all have the",
    "start": "1602300",
    "end": "1608780"
  },
  {
    "text": "same function signature they accept two lists one list of all of the attributes",
    "start": "1608780",
    "end": "1615200"
  },
  {
    "text": "like class ID etc etc and the second list is all of the children so you see",
    "start": "1615200",
    "end": "1622460"
  },
  {
    "text": "we have a div function that and that dev has one attribute which is a class with valued ninja and the div has one",
    "start": "1622460",
    "end": "1629630"
  },
  {
    "text": "children which is a span which again has one children which is a text node with the string bonsai so it's a bit unusual",
    "start": "1629630",
    "end": "1638000"
  },
  {
    "text": "to read the first time you see this but you do it in a similar way in react so",
    "start": "1638000",
    "end": "1643460"
  },
  {
    "text": "if you if you are familiar with react it should be pretty familiar as well and the type of this is the special type",
    "start": "1643460",
    "end": "1650480"
  },
  {
    "text": "defined as HTML and just like in maybe you can just you can't just have a maybe",
    "start": "1650480",
    "end": "1656240"
  },
  {
    "text": "you need to have a maybe something maybe int maybe boolean just like with lists you have a list string list boolean you",
    "start": "1656240",
    "end": "1663410"
  },
  {
    "text": "can just have a list similarly you can't just have HTML you need to have HTML with something and",
    "start": "1663410",
    "end": "1668510"
  },
  {
    "text": "that something is what kind of value it will produce back into the system if you interact with the HTML so let's say you",
    "start": "1668510",
    "end": "1675380"
  },
  {
    "text": "have an on click listener or a scroll listener or whatever Elam would need to know what kind of event would that produce and",
    "start": "1675380",
    "end": "1681440"
  },
  {
    "text": "here we don't have an event so we don't have any type you can just put a but",
    "start": "1681440",
    "end": "1687409"
  },
  {
    "text": "let's say we add an on click to this band we would produce a do something cool value and ship that back into the",
    "start": "1687409",
    "end": "1693650"
  },
  {
    "text": "system and let's say do something cool is if type MS Jean just message now",
    "start": "1693650",
    "end": "1698780"
  },
  {
    "text": "that's a convention in Elm then the type signature would be HTML msg we will see",
    "start": "1698780",
    "end": "1704090"
  },
  {
    "text": "more on this later so this is the Elm architecture in its simplest form it has",
    "start": "1704090",
    "end": "1712220"
  },
  {
    "text": "three parts you have the model which is all of the state in your application if you are familiar with redux it's the",
    "start": "1712220",
    "end": "1718309"
  },
  {
    "text": "same thing as a store in redux you have all your data in this big blob secondly",
    "start": "1718309",
    "end": "1724100"
  },
  {
    "text": "you have the view because you need to represent that data in some way in HTML that's what you output to the screen so",
    "start": "1724100",
    "end": "1730700"
  },
  {
    "text": "that would be your react tree of components lastly you have the update function so whenever something happens",
    "start": "1730700",
    "end": "1737120"
  },
  {
    "text": "like the user times out the user clicks on the button the user Scrolls you get an answer from a network call you would",
    "start": "1737120",
    "end": "1743390"
  },
  {
    "text": "call the update function to see what's the next version of our data so that accepts the message which is what",
    "start": "1743390",
    "end": "1749539"
  },
  {
    "text": "happened the previous state which is the model and you have to return the new model so that's similar to the reducers",
    "start": "1749539",
    "end": "1756770"
  },
  {
    "text": "in redux so we've reached the last slide of the first first part and this is how",
    "start": "1756770",
    "end": "1763730"
  },
  {
    "text": "you interrupt the JavaScript you use something called ports to send strings",
    "start": "1763730",
    "end": "1768860"
  },
  {
    "text": "back and forth to JavaScript and if this looks a little bit cumbersome it's because it is and it's made that way",
    "start": "1768860",
    "end": "1775190"
  },
  {
    "text": "intentionally because you need to have a type safe way to interact with JavaScript because your JavaScript code",
    "start": "1775190",
    "end": "1780289"
  },
  {
    "text": "can and will fail at some point so elm needs to not to get too close with it so",
    "start": "1780289",
    "end": "1786679"
  },
  {
    "text": "you could define a safe token interface and in JavaScript say that whenever you pass something on that interface just",
    "start": "1786679",
    "end": "1793130"
  },
  {
    "text": "call this callback function let's say save it token to local storage and the other way around you can define an",
    "start": "1793130",
    "end": "1799460"
  },
  {
    "text": "interface that elm would listen to and in JavaScript you would just pass a string to that interface through sent so",
    "start": "1799460",
    "end": "1806330"
  },
  {
    "text": "let's say you're writing application with not not that much logic on your end but",
    "start": "1806330",
    "end": "1811790"
  },
  {
    "text": "you're just gluing together a lot of third-party libraries it you would have to do this pretty much for every library",
    "start": "1811790",
    "end": "1818180"
  },
  {
    "text": "so that's a bit cumbersome so that's the one of the drawbacks of elm again so let's see which JavaScript libraries you",
    "start": "1818180",
    "end": "1824750"
  },
  {
    "text": "would need to get all of these features out of the box today you will need react to the rendering to have a virtual Dom",
    "start": "1824750",
    "end": "1831740"
  },
  {
    "text": "create a tree of components and I guess it's the most popular way of creating",
    "start": "1831740",
    "end": "1836870"
  },
  {
    "text": "web apps these days you would need redux to how the organization of your application you could do it with just",
    "start": "1836870",
    "end": "1842690"
  },
  {
    "text": "react but that doesn't scale really well you would need immutable j/s or some",
    "start": "1842690",
    "end": "1848030"
  },
  {
    "text": "other library to get immutable data structures if you want types and you do",
    "start": "1848030",
    "end": "1854390"
  },
  {
    "text": "in a large application you would need typescript or flow and typescript is in itself a totally different language than",
    "start": "1854390",
    "end": "1861050"
  },
  {
    "text": "JavaScript so then you've already taken the step away from only using javascript and also all the type safety yet from",
    "start": "1861050",
    "end": "1869240"
  },
  {
    "text": "typescript or flow is great compared to vanilla JavaScript but it's pretty limiting compared to what you get from",
    "start": "1869240",
    "end": "1875840"
  },
  {
    "text": "Elm or F sharp and lastly you would want to have some way of auto format in your",
    "start": "1875840",
    "end": "1881600"
  },
  {
    "text": "code or making sure you don't enter any of the many pitfalls of JavaScript like writing your entire application using",
    "start": "1881600",
    "end": "1887930"
  },
  {
    "text": "only parents and square brackets so I'd",
    "start": "1887930",
    "end": "1894740"
  },
  {
    "text": "like to do a small app for you to show you how it actually works and what the development experience is like so I'm",
    "start": "1894740",
    "end": "1901400"
  },
  {
    "text": "going to do the example that's maybe the most commonly used in web tutorials and",
    "start": "1901400",
    "end": "1906680"
  },
  {
    "text": "that's of course any counter app where you have two buttons one incrementer and one decrement and a number so let's see",
    "start": "1906680",
    "end": "1915800"
  },
  {
    "text": "some code",
    "start": "1915800",
    "end": "1918160"
  },
  {
    "text": "here we go let's start with a clean slate so now you see that we start with",
    "start": "1931440",
    "end": "1936690"
  },
  {
    "text": "the compiler error because Elm doesn't know what to put on the screen because every elm program needs a main function",
    "start": "1936690",
    "end": "1944539"
  },
  {
    "text": "so let's try to just output hello and",
    "start": "1944539",
    "end": "1950009"
  },
  {
    "text": "the C we still get an error fail to compile should I get the bigger font for",
    "start": "1950009",
    "end": "1957840"
  },
  {
    "text": "you guys maybe can you read this in the back it's good",
    "start": "1957840",
    "end": "1963888"
  },
  {
    "text": "so Elm is clearly saying that the main value has an unsupported type I need HTML SVG or a program but you",
    "start": "1964789",
    "end": "1974039"
  },
  {
    "text": "gave me a string so Elm can't render a string and that's a bit of technicality with cost in HTML you always wrap texts",
    "start": "1974039",
    "end": "1981450"
  },
  {
    "text": "plain text in what's called a text node so we would need to call a function to convert our string to a text node like",
    "start": "1981450",
    "end": "1988470"
  },
  {
    "text": "this and then we have something on the screen so here you see that Elm is very explicit saying I expect this you did",
    "start": "1988470",
    "end": "1994710"
  },
  {
    "text": "this maybe you want to do this I think also Elm will know in it didn't do that",
    "start": "1994710",
    "end": "2002960"
  },
  {
    "text": "in this case but normally it's it gives you an a suggestion on what function you're looking for so at least a",
    "start": "2002960",
    "end": "2008509"
  },
  {
    "text": "signature of the function you're looking for so let's start writing our counter",
    "start": "2008509",
    "end": "2014659"
  },
  {
    "text": "application so you usually start with the model like what data do you need in your application and you would create",
    "start": "2014659",
    "end": "2020929"
  },
  {
    "text": "type alias for that so let's say our model in this case is just an int",
    "start": "2020929",
    "end": "2026269"
  },
  {
    "text": "because all we need to remember is that number right in a real application you had a large record structure with your",
    "start": "2026269",
    "end": "2032360"
  },
  {
    "text": "user data some data from the server etc etc so that's the type definition I was",
    "start": "2032360",
    "end": "2039769"
  },
  {
    "text": "just saying that the model type that's basically just an int so let's create a model so it's a mobile has type model",
    "start": "2039769",
    "end": "2046970"
  },
  {
    "text": "notice that the uppercase is referring to an actual type but the lowercase is",
    "start": "2046970",
    "end": "2052490"
  },
  {
    "text": "just a variable or a constant so model is let's just say start at 0 so you you",
    "start": "2052490",
    "end": "2059898"
  },
  {
    "text": "notice that once I save this file Elm will format it for me using something called",
    "start": "2059899",
    "end": "2066510"
  },
  {
    "text": "Elm format and Elm format is like prettier in JavaScript it has a certain",
    "start": "2066510",
    "end": "2072210"
  },
  {
    "text": "way of formatting every possible code snippet and it ensures that all Elm",
    "start": "2072210",
    "end": "2077730"
  },
  {
    "text": "programs look the same there's no sure I use semicolons should I not should I put this on a new line should not it's just",
    "start": "2077730",
    "end": "2083250"
  },
  {
    "text": "this is the way we do it in Elm it looks nice get used to it or use something else so it's a bit on the extreme side",
    "start": "2083250",
    "end": "2090240"
  },
  {
    "text": "and to me at first I didn't like the syntax but then I said to myself okay be an adult spend two weeks with it and see",
    "start": "2090240",
    "end": "2096658"
  },
  {
    "text": "if you don't like it or not and now it's totally fine it's just syntax right it's really nice to see that when I enter my",
    "start": "2096659",
    "end": "2103050"
  },
  {
    "text": "colleagues down project and they just want a code review or something I I'm immediately familiar with the code",
    "start": "2103050",
    "end": "2108900"
  },
  {
    "text": "because it's formatted in the same way and the architecture is the same right so to me that's a huge win so let's",
    "start": "2108900",
    "end": "2116160"
  },
  {
    "text": "create a view function to render this on screen so our your function would take the model and we would return some HTML",
    "start": "2116160",
    "end": "2122490"
  },
  {
    "text": "that never has a and event yet so now",
    "start": "2122490",
    "end": "2128460"
  },
  {
    "text": "you see that Elm is complaining that we have a type annotation but we don't have the definition that's right because we",
    "start": "2128460",
    "end": "2135450"
  },
  {
    "text": "haven't made it yet so now you see that Elm in first from our type a definition",
    "start": "2135450",
    "end": "2140520"
  },
  {
    "text": "what it's supposed to do so I can just enter like like his default implementation so here we would want a",
    "start": "2140520",
    "end": "2148140"
  },
  {
    "text": "div and inside a div we would want a button and a span and another button so",
    "start": "2148140",
    "end": "2160260"
  },
  {
    "text": "III don't I don't care to reformat it I just save and album fixes that for me so",
    "start": "2160260",
    "end": "2166490"
  },
  {
    "text": "inside of the buttons I would like some text so I'll use the text function again",
    "start": "2166490",
    "end": "2174830"
  },
  {
    "text": "like that let's render this thing as",
    "start": "2174980",
    "end": "2180480"
  },
  {
    "text": "well so called the view function with our model like that so we need to fill",
    "start": "2180480",
    "end": "2185940"
  },
  {
    "text": "the span with our our integer so we could try to just call a text function",
    "start": "2185940",
    "end": "2191790"
  },
  {
    "text": "with our model in JavaScript that would have worked because it would just court try to like force",
    "start": "2191790",
    "end": "2197140"
  },
  {
    "text": "do to match and do something with it like we see that we saw in my example but Elam is telling me that text accepts",
    "start": "2197140",
    "end": "2205120"
  },
  {
    "text": "the string but I gave it a model so I would need to convert that so so the",
    "start": "2205120",
    "end": "2212110"
  },
  {
    "text": "naive implementation here would do would be to call to string on the model like this and I should also type it correctly",
    "start": "2212110",
    "end": "2220990"
  },
  {
    "text": "so it works but it's a bit hard to read and you can imagine if I needed to call",
    "start": "2220990",
    "end": "2227170"
  },
  {
    "text": "another function maybe two more functions I would start to approach like the parentheses hell so here you would",
    "start": "2227170",
    "end": "2232870"
  },
  {
    "text": "use the pipe operator and basically turn the the order of the functions around so",
    "start": "2232870",
    "end": "2240340"
  },
  {
    "text": "I would pipe the model into the two string and the result from that into text works much better and I think",
    "start": "2240340",
    "end": "2251560"
  },
  {
    "text": "actually Elm got the syntax and the idea from F sharp so um let's start adding",
    "start": "2251560",
    "end": "2259120"
  },
  {
    "text": "some interactivity because the buttons aren't working so we would start by creating the list of possible",
    "start": "2259120",
    "end": "2266620"
  },
  {
    "text": "interactions in this application the the message type and this is not a type alias when we say that if something",
    "start": "2266620",
    "end": "2272710"
  },
  {
    "text": "looks like this you can call it this now we're saying that this type has this finite set of values whenever you have",
    "start": "2272710",
    "end": "2279670"
  },
  {
    "text": "this type you need to have either this this this this or that right so our message in this small app is just one of",
    "start": "2279670",
    "end": "2286750"
  },
  {
    "text": "these two possibilities because we don't handle any other events yet you could",
    "start": "2286750",
    "end": "2292060"
  },
  {
    "text": "add like user timeout or a network call or stuff like that but in this average just how these do and the nice thing",
    "start": "2292060",
    "end": "2298810"
  },
  {
    "text": "about that is whenever you open an application you just find a message type and then you see all of the possible",
    "start": "2298810",
    "end": "2304360"
  },
  {
    "text": "things that can happen in your application so if you're your boss comes and asks you do we support user timeouts",
    "start": "2304360",
    "end": "2311080"
  },
  {
    "text": "just check the message type does it have a user deed timeout message then we probably do if you don't then you don't",
    "start": "2311080",
    "end": "2318460"
  },
  {
    "text": "have that scenario you don't have to look through all of your code all of you possibly tens of thousands of JavaScript",
    "start": "2318460",
    "end": "2324280"
  },
  {
    "text": "files to see is it supported and when we're talking about that I will also",
    "start": "2324280",
    "end": "2330580"
  },
  {
    "text": "like point out that this main function is the only thing that could possibly be outputted on the screen as opposed to",
    "start": "2330580",
    "end": "2338240"
  },
  {
    "text": "JavaScript where every every line in your code could possibly have a selector that goes into the DOM and mutates",
    "start": "2338240",
    "end": "2344720"
  },
  {
    "text": "something and modify something right you never know you have to scan all of the code or have a tool to do that for you",
    "start": "2344720",
    "end": "2350480"
  },
  {
    "text": "but in elm the output of the main function is the only thing that's put on screen so it's very clear it's easier",
    "start": "2350480",
    "end": "2356300"
  },
  {
    "text": "for a developer entering the codebase to find out what's going on so on each of",
    "start": "2356300",
    "end": "2363170"
  },
  {
    "text": "the buttons we'd say that whenever you unclick these just fire this event so",
    "start": "2363170",
    "end": "2374150"
  },
  {
    "text": "that's increment for the top button and decrement further but lower button so now Elm is complaining because we said",
    "start": "2374150",
    "end": "2380720"
  },
  {
    "text": "that our HTML never has an event right but we do and elm can see that so we",
    "start": "2380720",
    "end": "2386570"
  },
  {
    "text": "actually need to update our type definition to make LM happy but we are",
    "start": "2386570",
    "end": "2392900"
  },
  {
    "text": "not handling them with just the thing we're outputting to the screen it's just the fire-and-forget call me once view",
    "start": "2392900",
    "end": "2399620"
  },
  {
    "text": "function we don't never update it and this is where the Elm architecture comes in so we need to actually use something",
    "start": "2399620",
    "end": "2405440"
  },
  {
    "text": "called beginner program which is like a bootstrap function to do to kick off the",
    "start": "2405440",
    "end": "2412820"
  },
  {
    "text": "Elm architecture and that's basically a function that accepts a a record with",
    "start": "2412820",
    "end": "2419570"
  },
  {
    "text": "three fields so we need to say what's our view function okay that's the view function what's our model or well that's",
    "start": "2419570",
    "end": "2425030"
  },
  {
    "text": "the model and what's the update function and that's the part we didn't create yet so we need to do that so the update",
    "start": "2425030",
    "end": "2432680"
  },
  {
    "text": "function takes a message like what happened and what was our state before",
    "start": "2432680",
    "end": "2437720"
  },
  {
    "text": "this thing happened and what's the new state",
    "start": "2437720",
    "end": "2441580"
  },
  {
    "text": "so we could just return the old model to to see if the compiles and it does so so",
    "start": "2452440",
    "end": "2457930"
  },
  {
    "text": "we hooked up the types correctly in elm accepts our code so most of the update functions in elm looks like this you do",
    "start": "2457930",
    "end": "2464440"
  },
  {
    "text": "a case expression and you match on what happened right which of the possible values of the message type is it that",
    "start": "2464440",
    "end": "2471850"
  },
  {
    "text": "just occurred is it you sir did timeout got accounts from server etc so here Elm",
    "start": "2471850",
    "end": "2478450"
  },
  {
    "text": "can infer that okay this message type it only has two branches do you want me to in certain for you yes please",
    "start": "2478450",
    "end": "2484720"
  },
  {
    "text": "so let's say you have sixteen different types of and region train tickets than",
    "start": "2484720",
    "end": "2489880"
  },
  {
    "text": "that although an insertion becomes pretty handy so you would say that Inc in the increment case you do Marvel plus",
    "start": "2489880",
    "end": "2496540"
  },
  {
    "text": "one in the decrement case you would do model minus one there we have a very",
    "start": "2496540",
    "end": "2503020"
  },
  {
    "text": "very simple elm application and you see that all elma applications that consists",
    "start": "2503020",
    "end": "2508390"
  },
  {
    "text": "of these three parts what our what's our data how do you represent our data as HTML and what we do to our data when",
    "start": "2508390",
    "end": "2514570"
  },
  {
    "text": "things happen and of course we have the network calls and all of the other stuff I don't have time to show you in 60 minutes but all Elm applications are",
    "start": "2514570",
    "end": "2521830"
  },
  {
    "text": "built this way and they look the same due to the Elm format tool and yeah to",
    "start": "2521830",
    "end": "2527620"
  },
  {
    "text": "me that's a really big win when you're doing large projects with a lot of team",
    "start": "2527620",
    "end": "2532780"
  },
  {
    "text": "members so let's return to our slides",
    "start": "2532780",
    "end": "2537930"
  },
  {
    "text": "so we've reached the last part this anyone actually use elm so my question",
    "start": "2545920",
    "end": "2553190"
  },
  {
    "text": "was this Elm has been around for quite a few years attracting attention and generating a lot of conference talks",
    "start": "2553190",
    "end": "2559160"
  },
  {
    "text": "like this one but is it really ready for production is anyone using it in their business critical user facing",
    "start": "2559160",
    "end": "2565520"
  },
  {
    "text": "applications and if so what's their stories and I realized that if I want to",
    "start": "2565520",
    "end": "2570800"
  },
  {
    "text": "actually learn the answers to these questions I just need to meet a lot of developers and preferably Elm developers",
    "start": "2570800",
    "end": "2576440"
  },
  {
    "text": "so the first thing I did was to start the meetup group in Norway to see is it just me or are people actually",
    "start": "2576440",
    "end": "2582230"
  },
  {
    "text": "interested in this and it turned out that after about a month with no marketing whatsoever just be the things",
    "start": "2582230",
    "end": "2588170"
  },
  {
    "text": "that meetup.com does for you automatically we had about 150 members among who also received quite a bit",
    "start": "2588170",
    "end": "2594110"
  },
  {
    "text": "smaller than London so that's actually quite big and we got almost 50 people",
    "start": "2594110",
    "end": "2599630"
  },
  {
    "text": "showing up at the first meetup which to me was a great success and now in January 2018 we have about three hundred",
    "start": "2599630",
    "end": "2607730"
  },
  {
    "text": "ninety eight millimeters it's the world is in a region which is members and we",
    "start": "2607730",
    "end": "2612980"
  },
  {
    "text": "do one meetup every month so I just tried to talk a lot of different people there find out who is actually using Elm",
    "start": "2612980",
    "end": "2618530"
  },
  {
    "text": "are they using it in production etc and we found out that one of the biggest",
    "start": "2618530",
    "end": "2624770"
  },
  {
    "text": "names in Elm was going to Paris for the Elm Europe conference and we asked them would you like to stop by an Oslo just",
    "start": "2624770",
    "end": "2630710"
  },
  {
    "text": "on your way home just to do a talk and he would love to you so weary booked his flight and then we had to decide should",
    "start": "2630710",
    "end": "2636109"
  },
  {
    "text": "we do like a larger meetup or do we want to do a conference so of course we",
    "start": "2636109",
    "end": "2641660"
  },
  {
    "text": "wanted to do the conference and that's where also Elm Day came to be so it was a one-day singletrack conference in June",
    "start": "2641660",
    "end": "2648260"
  },
  {
    "text": "last year we had no idea if we would get any people there but we actually did so",
    "start": "2648260",
    "end": "2654290"
  },
  {
    "text": "we were happy about that we've got about hundred people paying at in this and ten speakers from five countries actually",
    "start": "2654290",
    "end": "2659480"
  },
  {
    "text": "four people flew out from the US to talk for us all the talks are for free on YouTube if you want to see some more Elm",
    "start": "2659480",
    "end": "2665570"
  },
  {
    "text": "and we're planning an extradition this May so to try to answer my question as",
    "start": "2665570",
    "end": "2670760"
  },
  {
    "text": "simply as I can does anyone use elm in in short yes people are using elm actually for real",
    "start": "2670760",
    "end": "2677720"
  },
  {
    "text": "stuff also in Norway and it's hard to quantify that but I would like to show you two",
    "start": "2677720",
    "end": "2684319"
  },
  {
    "text": "examples of different teams and companies using elm and their results",
    "start": "2684319",
    "end": "2689710"
  },
  {
    "text": "and they were also written in elm different reasons so the first one is",
    "start": "2689710",
    "end": "2696579"
  },
  {
    "text": "another conference in Norway called Java sown really similar to end the see over there about three thousand attendees",
    "start": "2696579",
    "end": "2703250"
  },
  {
    "text": "like eight tracks not just about Java it's about everything basically so this",
    "start": "2703250",
    "end": "2710210"
  },
  {
    "text": "friend of mine was tasked with writing the information screen software it was a",
    "start": "2710210",
    "end": "2715819"
  },
  {
    "text": "really old JavaScript app it didn't work half of the time they wanted something new where they can just push new stuff",
    "start": "2715819",
    "end": "2721700"
  },
  {
    "text": "from the like control room of the conference just the tweets and videos and information pictures whatever and",
    "start": "2721700",
    "end": "2727190"
  },
  {
    "text": "then the Apple just load that on the fly and he was thinking that okay I need to",
    "start": "2727190",
    "end": "2733400"
  },
  {
    "text": "rewrite this application in my spare time because it's a nonprofit community driven conference and the screens there",
    "start": "2733400",
    "end": "2742640"
  },
  {
    "text": "are two two screens and they are both 7 by 10 meters which means that there will be about 140 square meters of my",
    "start": "2742640",
    "end": "2749540"
  },
  {
    "text": "application failing in front of all my friends my cloud clients my friends from school if I manage to screw something up",
    "start": "2749540",
    "end": "2756220"
  },
  {
    "text": "so he thought hmm let's try this own thing I read nice things about it and I heard that it doesn't fail in production",
    "start": "2756220",
    "end": "2762380"
  },
  {
    "text": "so he used it and actually had to learn a lot of stuff in a way because it wasn't that familiar with functional",
    "start": "2762380",
    "end": "2768500"
  },
  {
    "text": "programming but in short he really loved it and the most interesting thing is that also the other people among the",
    "start": "2768500",
    "end": "2774859"
  },
  {
    "text": "organizers liked using elm and most of those guys weren't that familiar with the front end that's why he was tasked",
    "start": "2774859",
    "end": "2780170"
  },
  {
    "text": "with writing this thing in the first place so they're mostly Java experts long time back-end developers really",
    "start": "2780170",
    "end": "2786500"
  },
  {
    "text": "skilled developers but haven't really found the time or interest in learning JavaScript or modern front-end but with",
    "start": "2786500",
    "end": "2794060"
  },
  {
    "text": "elm they felt more at home because they had a compiler so they had more of a similar development experience to what",
    "start": "2794060",
    "end": "2800420"
  },
  {
    "text": "they were used to from Java and some of them c-sharp and also you had the no runtime error guarantee and the types of",
    "start": "2800420",
    "end": "2806810"
  },
  {
    "text": "course which hello people really miss in JavaScript so now that I know they're using elm for the",
    "start": "2806810",
    "end": "2812260"
  },
  {
    "text": "like yeah I call for papers smithing application and all of the internal applications and also a lot more people",
    "start": "2812260",
    "end": "2819130"
  },
  {
    "text": "than just my friend are doing the front-end stuff and to me having a technology that can enable all of the",
    "start": "2819130",
    "end": "2824680"
  },
  {
    "text": "team to do both front-end and back-end it's immensely important so let's see if",
    "start": "2824680",
    "end": "2830859"
  },
  {
    "text": "you have some f-sharp on the back end then most of your developers will be familiar with this way of working from beforehand as well so that's one of the",
    "start": "2830859",
    "end": "2838300"
  },
  {
    "text": "examples and the other one is where I currently work so I was lobbying to get",
    "start": "2838300",
    "end": "2843640"
  },
  {
    "text": "us to use elm it was not just my decision I had to convince the client and the rest of the team and I said",
    "start": "2843640",
    "end": "2849400"
  },
  {
    "text": "let's try to do a summer intern project because we got summer interns from the University in Trondheim and they would",
    "start": "2849400",
    "end": "2855460"
  },
  {
    "text": "work for free for the client at least and I say let's rewrite this old thing",
    "start": "2855460",
    "end": "2860980"
  },
  {
    "text": "with where you reserve your seats and we'll try Elm if it doesn't work we could throw it away self safely you",
    "start": "2860980",
    "end": "2866320"
  },
  {
    "text": "won't spend any money on it and if these two grad students with three years of university experience and can write this",
    "start": "2866320",
    "end": "2873520"
  },
  {
    "text": "and produce good code and it works in six weeks then I guess Elm isn't that bad and in short the two students really",
    "start": "2873520",
    "end": "2881560"
  },
  {
    "text": "loved it they would like to spend more of that six weeks rewriting Elm because they had to spend like three weeks integrating it in the",
    "start": "2881560",
    "end": "2887290"
  },
  {
    "text": "olden mobile call basis and that it was a bit less fun and the code was good we",
    "start": "2887290",
    "end": "2892690"
  },
  {
    "text": "didn't really throw code review and in in short we decided to move forward with Elm and now we're using Elm for the the",
    "start": "2892690",
    "end": "2899980"
  },
  {
    "text": "web site part of things where we sell tickets so now we have a team of about six developers doing Elm almost",
    "start": "2899980",
    "end": "2906250"
  },
  {
    "text": "full-time so we're really happy with it",
    "start": "2906250",
    "end": "2911320"
  },
  {
    "text": "and for us we also felt that some of the back-end developers are not doing front-end stuff and that's really cool",
    "start": "2911320",
    "end": "2918150"
  },
  {
    "text": "so to summarize a lot of people are expanding experimenting with or using elm and interestingly 100 percent said",
    "start": "2918150",
    "end": "2926560"
  },
  {
    "text": "would use again and to me that's maybe the strongest feedback that I've learned",
    "start": "2926560",
    "end": "2932140"
  },
  {
    "text": "during these this one and a half year and the onboarding is relatively easily",
    "start": "2932140",
    "end": "2937270"
  },
  {
    "text": "if you haven't done much functional programming before I guess that will be the the biggest learning curve but if",
    "start": "2937270",
    "end": "2943060"
  },
  {
    "text": "you've done some Haskell or F sharp a camel or Scala it shouldn't be that",
    "start": "2943060",
    "end": "2948580"
  },
  {
    "text": "hard and also if you've done react and redux a lot of the architecture stuff and all the web related stuff will feel really",
    "start": "2948580",
    "end": "2955750"
  },
  {
    "text": "familiar the world's biggest adopter in San Francisco has about 250 lines of",
    "start": "2955750",
    "end": "2961360"
  },
  {
    "text": "code and they still haven't had a runtime error in production and that's a really big argument for Elm of course",
    "start": "2961360",
    "end": "2970480"
  },
  {
    "text": "there's some bad use cases from Ellen if you're using it making using some web technology to write a prototype it's",
    "start": "2970480",
    "end": "2977110"
  },
  {
    "text": "just like a fire fire and forget application the the argument for Elm isn't a strong also if you're making",
    "start": "2977110",
    "end": "2983470"
  },
  {
    "text": "something that's really small in size that's would be easy to to maintain",
    "start": "2983470",
    "end": "2988530"
  },
  {
    "text": "anyway in in JavaScript maybe your startup and your development speed Trump's quality you know that just want",
    "start": "2988530",
    "end": "2995320"
  },
  {
    "text": "to write the code you did out in production and and test the product market fit and you don't care if it if the code looks good or if you have to",
    "start": "2995320",
    "end": "3002550"
  },
  {
    "text": "rewrite the entire thing a year later or if you use a lot of third-party code because it's a bit more cumbersome to",
    "start": "3002550",
    "end": "3009330"
  },
  {
    "text": "integrate with than just using plain JavaScript I mean it works and all of the Elm projects do but if your app is",
    "start": "3009330",
    "end": "3016110"
  },
  {
    "text": "just integrating the map thing with the geo-positioning thing then maybe you know javascript is better and also if",
    "start": "3016110",
    "end": "3023040"
  },
  {
    "text": "the if your team is not familiar with functional programming at all and they're not really interested in learning perhaps could have a too steep",
    "start": "3023040",
    "end": "3030240"
  },
  {
    "text": "learning curve for you on the other hand side there's some great use cases for",
    "start": "3030240",
    "end": "3035310"
  },
  {
    "text": "elm sometimes you just know that all you know is that real are three factors are coming you know that you don't know it",
    "start": "3035310",
    "end": "3040950"
  },
  {
    "text": "all you know that your first take on the domain model won't work you'd have to iterate and iterate and iterate to get",
    "start": "3040950",
    "end": "3046380"
  },
  {
    "text": "things really well the complex domain logic it's really well modeled in",
    "start": "3046380",
    "end": "3052350"
  },
  {
    "text": "languages like Elm I mean in Haskell and that family of languages were instantly written to make compilers and call that",
    "start": "3052350",
    "end": "3058590"
  },
  {
    "text": "really needs to almost in a mathematically provable way produce the",
    "start": "3058590",
    "end": "3064320"
  },
  {
    "text": "correct output right so when code correctness is important elm spirit and also if your team isn't that",
    "start": "3064320",
    "end": "3071670"
  },
  {
    "text": "knowledgeable about JavaScript as was the case for my team and we had three four people who hated JavaScript they",
    "start": "3071670",
    "end": "3076980"
  },
  {
    "text": "didn't want to touch our script so we could either use JavaScript and just leave them for the back-end and cloud stuff or you could use ailment and have",
    "start": "3076980",
    "end": "3084210"
  },
  {
    "text": "a better chance of having the entire team do front it so I hope I've been",
    "start": "3084210",
    "end": "3089279"
  },
  {
    "text": "able to share my thoughts on why elm addresses these pain points and to",
    "start": "3089279",
    "end": "3096900"
  },
  {
    "text": "summarize I think that elm gives you a language without runtime errors the",
    "start": "3096900",
    "end": "3102059"
  },
  {
    "text": "refactoring support is great simply because it's statically typed and compiled you have front-end technology",
    "start": "3102059",
    "end": "3109109"
  },
  {
    "text": "for the entire team the delight is has a delightful development experience just",
    "start": "3109109",
    "end": "3116250"
  },
  {
    "text": "the reduced cognitive load when you don't have to keep everything in your head of how things click together you",
    "start": "3116250",
    "end": "3122460"
  },
  {
    "text": "just have a compiler whenever you do something wrong the compiler will tell you that ah you're supposed to return this type error not this type okay thank",
    "start": "3122460",
    "end": "3129119"
  },
  {
    "text": "you now you have Redux built in which is perhaps the most popular web solution",
    "start": "3129119",
    "end": "3134819"
  },
  {
    "text": "these days together with the react that's also built in and on the bad sides you have currently small ecosystem",
    "start": "3134819",
    "end": "3141000"
  },
  {
    "text": "so if you're really dependent on losing a lot of third-party packages Elm is",
    "start": "3141000",
    "end": "3146609"
  },
  {
    "text": "nowhere near the JavaScript community of course because javascript is just a weapon these days you have a language",
    "start": "3146609",
    "end": "3152880"
  },
  {
    "text": "without a huge backer I mean react has Facebook angular has Google Elm doesn't have any of those and",
    "start": "3152880",
    "end": "3161069"
  },
  {
    "text": "of course since you always need to specify what you would do if the network call fails or if you try to get the",
    "start": "3161069",
    "end": "3167640"
  },
  {
    "text": "first element of a list and it's empty and it fails or if he and maybe it doesn't have a value you have to write a",
    "start": "3167640",
    "end": "3174359"
  },
  {
    "text": "little bit more boilerplate so that's the price to pay to get all the the",
    "start": "3174359",
    "end": "3179519"
  },
  {
    "text": "safety guarantees so the I guess the question is is it a good deal I guess",
    "start": "3179519",
    "end": "3186509"
  },
  {
    "text": "it's no secret that I think so but what's most interesting is what you people think so I hope that I was able",
    "start": "3186509",
    "end": "3193470"
  },
  {
    "text": "to make you curious during these 55 minutes I have some recommendations for further reading if",
    "start": "3193470",
    "end": "3200039"
  },
  {
    "text": "you want to learn more first a shameless plug me and my colleague we made this free workshop where you implement the",
    "start": "3200039",
    "end": "3206640"
  },
  {
    "text": "memory in the game where you click two cards and they try to match the corresponding kittens called memory meow and that",
    "start": "3206640",
    "end": "3214440"
  },
  {
    "text": "workshop is free available on github I will provide the links on the last slide so check that out if you want to",
    "start": "3214440",
    "end": "3220320"
  },
  {
    "text": "have a step-by-step learning guide on how to write a small application in elm please join the Elm slack it's a really",
    "start": "3220320",
    "end": "3227550"
  },
  {
    "text": "friendly community they have a like policy of trying to answer every single",
    "start": "3227550",
    "end": "3232830"
  },
  {
    "text": "question in the beginner channel so if you have a question about Elm just go in there and type it out and lastly check",
    "start": "3232830",
    "end": "3240540"
  },
  {
    "text": "out your local Elm Meetup I know there's large meetup group area in London and I think they do meetups every other month",
    "start": "3240540",
    "end": "3245970"
  },
  {
    "text": "or so so please check that out please make sure to evaluate the session on",
    "start": "3245970",
    "end": "3251430"
  },
  {
    "text": "your way out using this small post-it notes and all the slides and the walk workshop link is available that is the",
    "start": "3251430",
    "end": "3257580"
  },
  {
    "text": "GED flash and the CL thanks for listening [Applause]",
    "start": "3257580",
    "end": "3269550"
  }
]