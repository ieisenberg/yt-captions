[
  {
    "start": "0",
    "end": "91000"
  },
  {
    "text": "okay yes so thank you for those of you who made it I guess most people already went home at the end of today so today",
    "start": "9700",
    "end": "16550"
  },
  {
    "text": "I'm gonna talk about testing Rothwell and how you can do that in a way that you're testing all the functions of your",
    "start": "16550",
    "end": "21710"
  },
  {
    "text": "Kafka well server or maybe your client so today it won't be about explaining",
    "start": "21710",
    "end": "28099"
  },
  {
    "text": "what golf course or how you can use it but most to be about testing so also if you are in the experience for testing",
    "start": "28099",
    "end": "33559"
  },
  {
    "text": "like you can figure it out during the slides so a lot of people actually don't",
    "start": "33559",
    "end": "39170"
  },
  {
    "text": "test their code so especially big companies are doing this they've got all the slow balancers they got like a",
    "start": "39170",
    "end": "44269"
  },
  {
    "text": "thousand servers or maybe working surplice they usually don't really test the code because as soon as something",
    "start": "44269",
    "end": "49699"
  },
  {
    "text": "breaks they will see it in the metrics and users won't do it but if you've got smaller applications or maybe you want to have an idea about your code",
    "start": "49699",
    "end": "56540"
  },
  {
    "text": "stability then testing is a good idea so when testing in production always make sure that you have load balancers",
    "start": "56540",
    "end": "62330"
  },
  {
    "text": "or if not just implement testing so a little bit about myself so my name is",
    "start": "62330",
    "end": "68119"
  },
  {
    "text": "Roy I mostly work on open source projects for the city of Amsterdam where every building sort of a data hub for",
    "start": "68119",
    "end": "73880"
  },
  {
    "text": "all the open data that we have in the city and we open source at using Python api's also a little bit of Kafka well",
    "start": "73880",
    "end": "80299"
  },
  {
    "text": "and mostly react on the front end I also teach graphic well at reacts Kafka Academy and I work with other companies",
    "start": "80299",
    "end": "87859"
  },
  {
    "text": "as an adviser so why write test so there are a lot of reasons to actually write",
    "start": "87859",
    "end": "93560"
  },
  {
    "start": "91000",
    "end": "91000"
  },
  {
    "text": "tests some are like big reasons some are smaller reasons so I highlighted some of the reads instead I used myself that I",
    "start": "93560",
    "end": "99619"
  },
  {
    "text": "used myself when I tried to get people to testing so one of these is check if",
    "start": "99619",
    "end": "104659"
  },
  {
    "text": "code behaves as expected so you're writing a function you want to know if it's function actually works the way you expect it if maybe an entire code block",
    "start": "104659",
    "end": "111200"
  },
  {
    "text": "works as expected so let's for me the main reason to actually test my code see if it works as I expected and in the end",
    "start": "111200",
    "end": "117439"
  },
  {
    "text": "it will save you a lot of trouble and it's trouble you will get saved when you're testing for errors and edge cases",
    "start": "117439",
    "end": "123200"
  },
  {
    "start": "119000",
    "end": "119000"
  },
  {
    "text": "so usually you make exceptions in your code and there are stuff in there that's only you know are only your team knows",
    "start": "123200",
    "end": "128690"
  },
  {
    "text": "about so if you have to hand over this project and it's really hard to actually see why these exceptions are there and",
    "start": "128690",
    "end": "134420"
  },
  {
    "text": "if you put testing applies for his exceptions it's really easy to understand them and why they're there and they're probably a lot of more",
    "start": "134420",
    "end": "141340"
  },
  {
    "text": "reasons on a high over level that are important when applying testing but for me these are like the high over stuff I",
    "start": "141340",
    "end": "147160"
  },
  {
    "text": "use when talking to product managers that actually have to pay for all the time that goes into testing so a bit",
    "start": "147160",
    "end": "153489"
  },
  {
    "text": "more practical reasons is it makes refactoring easier because a lot of time we do refract ring you're changing a lot",
    "start": "153489",
    "end": "159280"
  },
  {
    "text": "of your code and then in the end maybe your functionality is broken or maybe you've broken some of the functionality that you didn't know was there so if the",
    "start": "159280",
    "end": "166269"
  },
  {
    "text": "worst test case for edge cases then you probably would have found it but otherwise it makes refactoring easier",
    "start": "166269",
    "end": "171790"
  },
  {
    "text": "because if you assume this simple function so you actually take an average of two variables and you're dividing",
    "start": "171790",
    "end": "177670"
  },
  {
    "text": "them by 2 to find out the value so your test case you're just checking if the average of two and two is four it's one",
    "start": "177670",
    "end": "185440"
  },
  {
    "text": "sorry now to the end of the day so if",
    "start": "185440",
    "end": "191410"
  },
  {
    "text": "you were to affected this function and instead of dividing him you would do it times 0.5 it left the same result and so",
    "start": "191410",
    "end": "197799"
  },
  {
    "text": "a test won't break so you can refractor all this code and it's just a simple function suppose it was a really big function and the output should be the",
    "start": "197799",
    "end": "203739"
  },
  {
    "text": "same if you would have testing in place you can still see if your code works as expected and this is just for like a",
    "start": "203739",
    "end": "209200"
  },
  {
    "text": "simple pure function if you could bigger functions or more complicated educators I don't have any testing in there you",
    "start": "209200",
    "end": "214389"
  },
  {
    "text": "probably will break functionality without even knowing it so another thing",
    "start": "214389",
    "end": "219489"
  },
  {
    "start": "218000",
    "end": "218000"
  },
  {
    "text": "is improving your code quality so as you saw before like this is an easy test it already improves the code quality",
    "start": "219489",
    "end": "224829"
  },
  {
    "text": "because you can refactor without breaking stuff and also a lot of time",
    "start": "224829",
    "end": "230139"
  },
  {
    "text": "with our big debugging things because you don't know where things went wrong and something I experienced when testing",
    "start": "230139",
    "end": "235510"
  },
  {
    "text": "a lot like difficult complex codes that's complexity rated it's really hard",
    "start": "235510",
    "end": "241209"
  },
  {
    "text": "to test because tests are meant to be simple and easy and your functions actually should be as well so it's",
    "start": "241209",
    "end": "246459"
  },
  {
    "text": "better to break up functions and smaller functions in my opinion it proves the code quality and it also makes testing",
    "start": "246459",
    "end": "252340"
  },
  {
    "text": "easier and debugging so that's why testing is also important and the last one is something I really like when I",
    "start": "252340",
    "end": "259000"
  },
  {
    "text": "start on new projects so every time you start a new project you need to get a look of you need to get familiar with",
    "start": "259000",
    "end": "264280"
  },
  {
    "text": "the code base and if there isn't any documentation or the documentation is outdated then it can be really hard to get familiar with a code base so if you",
    "start": "264280",
    "end": "271270"
  },
  {
    "text": "have a lot of testing in place and you've written stuff things things down like this then it becomes",
    "start": "271270",
    "end": "276290"
  },
  {
    "text": "way easier because he can immediately see all the hidden futures in the code so actually you can use the test cases",
    "start": "276290",
    "end": "282080"
  },
  {
    "text": "and all the test scenarios as a documentation for your code so you get an in-depth knowledge about what should",
    "start": "282080",
    "end": "287660"
  },
  {
    "text": "be doing and especially if you apply stuff like test-driven development then you probably have set up all your other",
    "start": "287660",
    "end": "294800"
  },
  {
    "text": "user stories like this and you story should be stick test scenarios and then becomes way easier to actually get",
    "start": "294800",
    "end": "299990"
  },
  {
    "text": "familiar with new code bases so if you want to apply these things to graphic",
    "start": "299990",
    "end": "305480"
  },
  {
    "text": "well basically is it's all like high over you can apply all these apparence to graph coil but let's first look at",
    "start": "305480",
    "end": "312290"
  },
  {
    "text": "what we can actually test for a graph coil server appliance so we can test schemas right so if you ski mass and",
    "start": "312290",
    "end": "319070"
  },
  {
    "text": "your schemas of certain types and these are things that should be really easy to test or queries will they have to exact same outcomes you've expected these old",
    "start": "319070",
    "end": "325970"
  },
  {
    "text": "things you can test by testing the schemas and you can do the same thing for resolvers resolvers are actually",
    "start": "325970",
    "end": "331610"
  },
  {
    "text": "things that are getting the data for you you probably want to test doubts because you want to know if either your database",
    "start": "331610",
    "end": "337130"
  },
  {
    "text": "connection is set up straight there or maybe some logic you imply there is working as be expected",
    "start": "337130",
    "end": "342710"
  },
  {
    "text": "and probably you can also test more thing some server-side because we could ski mask because resolvers we also got",
    "start": "342710",
    "end": "349790"
  },
  {
    "text": "the actual server that is running and something that you could do with some packages actually load testing on a",
    "start": "349790",
    "end": "355340"
  },
  {
    "text": "graphic well server it is quite interesting something we will look at the very end if we still some time so",
    "start": "355340",
    "end": "361400"
  },
  {
    "text": "you would actually want to test the server as well so not only the schemas and resolvers but also how your server behaves and even how it behaves if you",
    "start": "361400",
    "end": "368030"
  },
  {
    "text": "put a lot of queries a lot of if you send a lot of queries to them because maybe your queries are too complex maybe",
    "start": "368030",
    "end": "374090"
  },
  {
    "text": "your setup but the database is too complex you want to know that the same we should test SQL queries in order",
    "start": "374090",
    "end": "379670"
  },
  {
    "text": "types of servers or you can also test it client-side and it's something we will",
    "start": "379670",
    "end": "386930"
  },
  {
    "start": "382000",
    "end": "382000"
  },
  {
    "text": "see later on with the demo as well and are multiple ways to actually test it so",
    "start": "386930",
    "end": "392600"
  },
  {
    "text": "as you can see you can do static type checking so I would really I would really prefer to use some sort of",
    "start": "392600",
    "end": "398480"
  },
  {
    "text": "language that has static type checking so either it's with typescript or JavaScript with some extensions or maybe",
    "start": "398480",
    "end": "405290"
  },
  {
    "text": "you working with more functional languages if you got static types in there and the amount of errors between you",
    "start": "405290",
    "end": "411380"
  },
  {
    "text": "actually schemas and your resolvers and how do we actually be output it'll be way smaller because you're already",
    "start": "411380",
    "end": "416539"
  },
  {
    "text": "checking the types multiple times not only in your schemas but also throughout your resolvers so that's something that's really useful",
    "start": "416539",
    "end": "422919"
  },
  {
    "text": "and unit tests ugh also we have a lot of unit tests in place so you can unit test maybe your",
    "start": "422919",
    "end": "428930"
  },
  {
    "text": "schemas you resolve a scan of units tests and integration tests so you want to know how your resolvers and schemas",
    "start": "428930",
    "end": "435680"
  },
  {
    "text": "work together or maybe how you resolve this work together which database that stuff you would test in integration tests and we might also have end-to-end",
    "start": "435680",
    "end": "443539"
  },
  {
    "text": "tests so maybe you want to test the entire lifecycle so from your ski mask",
    "start": "443539",
    "end": "448880"
  },
  {
    "text": "to your resolvers to your queries and actually how it would end up in your clients so nth winter so most have been",
    "start": "448880",
    "end": "456800"
  },
  {
    "start": "455000",
    "end": "455000"
  },
  {
    "text": "part in the client side and then we can lay it around make it a version between mocking stuff and actually testing against your life or your test databases",
    "start": "456800",
    "end": "465130"
  },
  {
    "text": "so there are multiple strategies you can apply when testing code so a lot of a",
    "start": "465130",
    "end": "470180"
  },
  {
    "text": "pattern are used to be really popular was this one select the testing pyramid you would have unit tests at the bottom",
    "start": "470180",
    "end": "475490"
  },
  {
    "text": "and you have integration tests in the middle and you probably have end-to-end tests on top and the reason behind this was because unit tests are relatively",
    "start": "475490",
    "end": "481849"
  },
  {
    "text": "easy to make that cost you less effort effort because they're really testing small units of code block of code they",
    "start": "481849",
    "end": "488810"
  },
  {
    "text": "can run quite fast integration tests are a bit slower because you're already testing multiple layers of code maybe",
    "start": "488810",
    "end": "494539"
  },
  {
    "text": "you're testing the integration with schemas and resolvers or maybe resolves through the database so this slows a",
    "start": "494539",
    "end": "500000"
  },
  {
    "text": "little bit up an end-to-end tests are especially slow because they involve like multiple products maybe so maybe",
    "start": "500000",
    "end": "506060"
  },
  {
    "text": "they involve your client the info few server they can full for database so throughout your entire code stick it",
    "start": "506060",
    "end": "511370"
  },
  {
    "text": "will involve basically everything so that's why they run really slow and usually they are harder to make the",
    "start": "511370",
    "end": "516680"
  },
  {
    "text": "dissipater not used to be really popular if you ask a lot of project managers is more like this because they don't really",
    "start": "516680",
    "end": "522140"
  },
  {
    "text": "care about unit tests they only want to see the actual outcome of your tests so they want to see maybe with something",
    "start": "522140",
    "end": "527720"
  },
  {
    "text": "like Cypress how actually users are going through your code is your login flow still working can people still pay",
    "start": "527720",
    "end": "533060"
  },
  {
    "text": "so a lot of product managers actually prefer this one because it's really visible for them what's actually",
    "start": "533060",
    "end": "538339"
  },
  {
    "text": "happening well at a developer you want to see if your code is working and then probably it becomes easier to debug things of",
    "start": "538339",
    "end": "544520"
  },
  {
    "text": "functionality later on so another pattern it's become really popular is the trophy one that's right here so what",
    "start": "544520",
    "end": "554000"
  },
  {
    "text": "you would have here at the button you would have static charge at static type check and so that's actually where you would start so by using something like typescript or",
    "start": "554000",
    "end": "561340"
  },
  {
    "text": "maybe a functional programming language they would have setec type checking so that's the first portion and then you",
    "start": "561340",
    "end": "567770"
  },
  {
    "text": "would have some unit test because if you apply static type chapping it's less it's less common to have a lot of unit",
    "start": "567770",
    "end": "574130"
  },
  {
    "text": "tests because you're already testing a lot of things that you would test in unit test so we'll my string be a string that stuff you already have covered",
    "start": "574130",
    "end": "579920"
  },
  {
    "text": "while you're checking your types and then in the middle you would have integration tests because there are a lot more interesting because they",
    "start": "579920",
    "end": "586070"
  },
  {
    "text": "actually involve multiple multiple products in your life cycle so that's",
    "start": "586070",
    "end": "592370"
  },
  {
    "text": "why they are interesting and then to top you have end-to-end tests so you can see the division between integration test",
    "start": "592370",
    "end": "597950"
  },
  {
    "text": "unit test static typing they're all like less obvious so this is a pattern I",
    "start": "597950",
    "end": "604550"
  },
  {
    "text": "prefer actually so first let's start at how we can actually test the schemas so",
    "start": "604550",
    "end": "611630"
  },
  {
    "start": "606000",
    "end": "606000"
  },
  {
    "text": "for this on the left you can see basic implementation of something some part of",
    "start": "611630",
    "end": "617750"
  },
  {
    "text": "my schema that constructed so this is a type 4 product you can see it's called type product it's got two fields you've",
    "start": "617750",
    "end": "623510"
  },
  {
    "text": "got a title their price and to test this you can look on the right side so to do there we're importing the types and I'm",
    "start": "623510",
    "end": "630350"
  },
  {
    "text": "actually really easy going to check if your type is your type as you expect it to be so this test isn't that you don't",
    "start": "630350",
    "end": "637580"
  },
  {
    "text": "really get a lot of wins by this test but it's good for your test coverage of the test coverage doesn't really say",
    "start": "637580",
    "end": "643010"
  },
  {
    "text": "anything but if you got more complex types maybe could ferry runs or fragments in there then comes more",
    "start": "643010",
    "end": "648020"
  },
  {
    "text": "interesting test stuff like this so schema testing can actually be quite easy so if you got more or bigger",
    "start": "648020",
    "end": "654830"
  },
  {
    "start": "654000",
    "end": "654000"
  },
  {
    "text": "schemas or maybe you've got remote schema stitching in place you would have different different types of tests so a",
    "start": "654830",
    "end": "662000"
  },
  {
    "text": "lot of packages you can use for this fellow good packages for this and something I really like is easy graphic well so you could install it from NPM",
    "start": "662000",
    "end": "669170"
  },
  {
    "text": "and you convert it on every JavaScript implementation of graphic well and stuff",
    "start": "669170",
    "end": "674660"
  },
  {
    "text": "you can do whatever smokings you amok results of queries and tests against them or you can actually test",
    "start": "674660",
    "end": "680220"
  },
  {
    "text": "assertions right away so here's like a basic implementation of how to actually",
    "start": "680220",
    "end": "686040"
  },
  {
    "text": "get your schema so with this but it's like lines of code you can actually import your schema maybe from a local",
    "start": "686040",
    "end": "692460"
  },
  {
    "text": "directory maybe from an external directory to actually have your schemas in there so you can mock smoke against",
    "start": "692460",
    "end": "697500"
  },
  {
    "text": "them and then a mock would look like this so you've got your query on the",
    "start": "697500",
    "end": "702630"
  },
  {
    "text": "right side you implement some variables and you mock it later on so first it's",
    "start": "702630",
    "end": "708540"
  },
  {
    "text": "the query run to test so we want to get the product and we've got one variable which is the product ID and we want to",
    "start": "708540",
    "end": "714180"
  },
  {
    "text": "return some fields and also some subfields and then you can define you",
    "start": "714180",
    "end": "721170"
  },
  {
    "text": "actually want to mock errors as well so maybe you want to handle how your graph queries will handle errors or maybe",
    "start": "721170",
    "end": "726840"
  },
  {
    "text": "while you serve for behind it you would do it like this you would just define you want to mock errors as well so you can test your error messages and in the",
    "start": "726840",
    "end": "735030"
  },
  {
    "text": "end you can make a searchings against these mock so basically you're just smoking educating the results and then",
    "start": "735030",
    "end": "741150"
  },
  {
    "text": "it will be a JSON object you can actually see if the jason objectives as expected just you can see on the right",
    "start": "741150",
    "end": "746550"
  },
  {
    "text": "side we've got three views and apparently reviews is supposed to be an array so everywhere in your code you're",
    "start": "746550",
    "end": "752160"
  },
  {
    "text": "gonna assume reviews is an array so you want to test those things in your surgeons so that's how you can basically",
    "start": "752160",
    "end": "757650"
  },
  {
    "text": "implement schema testing as well and",
    "start": "757650",
    "end": "762710"
  },
  {
    "text": "something else you could do with easy graphic world tester is making assertions directly so you can actually",
    "start": "762710",
    "end": "767910"
  },
  {
    "text": "test if queries or mutations will succeed so that's done like this so on",
    "start": "767910",
    "end": "773160"
  },
  {
    "text": "the right side you again you can see the same query as we just saw and instead of",
    "start": "773160",
    "end": "778350"
  },
  {
    "text": "mocking them we're gonna directly use the to test the searching to see whether",
    "start": "778350",
    "end": "783720"
  },
  {
    "text": "or not it's valid so you can send in product IDs you can do the same for mutations and in here it saves you a lot",
    "start": "783720",
    "end": "789690"
  },
  {
    "text": "of code but you could less knowledge about what actually will be the result of this so it really depends on how I",
    "start": "789690",
    "end": "794880"
  },
  {
    "text": "want to do this do you want the basic testing for your ski masks you can do it like this it's really easy it's like making snapshots you're done really",
    "start": "794880",
    "end": "801240"
  },
  {
    "text": "quick if we're not have more knowledge about what actually is returned by your queries you would mock them and just see",
    "start": "801240",
    "end": "807000"
  },
  {
    "text": "the results from there so that's something you can find on the",
    "start": "807000",
    "end": "812310"
  },
  {
    "text": "website from easy graphic well as well there's a really nice demo that links to Sandburg coats and books and in there",
    "start": "812310",
    "end": "818040"
  },
  {
    "text": "you can find all those smoking and a search in things as well and they go really far they've got queries with",
    "start": "818040",
    "end": "824340"
  },
  {
    "text": "variants so it's really interesting if you're working with bigger ski masks to actually test them with easy groove coil",
    "start": "824340",
    "end": "829380"
  },
  {
    "text": "tester so resolvers that's another thing",
    "start": "829380",
    "end": "836430"
  },
  {
    "start": "834000",
    "end": "834000"
  },
  {
    "text": "we can test so as we saw before we can test ski masks we can test resolvers and",
    "start": "836430",
    "end": "841470"
  },
  {
    "text": "we can test more things surface ID right so we can look at this overs now and something that's really important to",
    "start": "841470",
    "end": "847860"
  },
  {
    "text": "know is resolvers are pure functions if somewhere in your code base you have side effects really near resolvers you should get",
    "start": "847860",
    "end": "854190"
  },
  {
    "text": "them out because resolver should be pure functions that's how they actually were meant to so we did in mind it's you can",
    "start": "854190",
    "end": "861180"
  },
  {
    "text": "figure out how easy it will be to test them so suppose pure functions like a black box right you put something in and",
    "start": "861180",
    "end": "867330"
  },
  {
    "text": "based on that outputs something will come out and even though every time I put in a certain thing like maybe every",
    "start": "867330",
    "end": "872820"
  },
  {
    "text": "time I put in maybe some beer and friends you can expect the same outcome unless there are side effects so maybe",
    "start": "872820",
    "end": "878910"
  },
  {
    "text": "there's a pregnant girlfriend for some of your friends that is getting into problems they would have side effects",
    "start": "878910",
    "end": "883920"
  },
  {
    "text": "but assuming you don't have any side effects you probably would have a good time when you put these things in there so that's why resolver should be pure",
    "start": "883920",
    "end": "890550"
  },
  {
    "text": "functions and if you want to test them and they have side effects it's good really are because you need to define all those side effects need to find",
    "start": "890550",
    "end": "896670"
  },
  {
    "text": "Emma's edge cases how are you gonna handle them so that's why you really should try and make them pure functions and if they are they should be really",
    "start": "896670",
    "end": "903240"
  },
  {
    "text": "easy to test rights because you will know every time I put something in in this shape something in that shape will",
    "start": "903240",
    "end": "908400"
  },
  {
    "text": "come out if I put something in with these fields like that fields will come out it's something you should really have any resolvers because your",
    "start": "908400",
    "end": "915209"
  },
  {
    "text": "resolvers are very actually collect the information for your schemas so if there are side effects in there then it",
    "start": "915209",
    "end": "920610"
  },
  {
    "text": "becomes really hard to test them later around when you actually test your queries so in practice if you want to",
    "start": "920610",
    "end": "928680"
  },
  {
    "text": "test resolvers that's something you could do with packages as well but you don't really need Becca Jesus they are just your script functions or maybe",
    "start": "928680",
    "end": "934740"
  },
  {
    "text": "Python or whatever language you've written your graphic well server in so assume this resolver so it's really a",
    "start": "934740",
    "end": "940920"
  },
  {
    "text": "simple resolver it's thinking an object it just probably do have to parent object for product it says some context",
    "start": "940920",
    "end": "947250"
  },
  {
    "text": "so maybe it'll get something out of the database there and it also takes arguments so leave anything everything",
    "start": "947250",
    "end": "954570"
  },
  {
    "text": "besides you will always know if you put an object in with like a review object in there then it will return something",
    "start": "954570",
    "end": "960180"
  },
  {
    "text": "based on that review object and if there aren't any side effects you can probably really easy test if you put something in",
    "start": "960180",
    "end": "965610"
  },
  {
    "text": "that exact same app which is you expect it will come out so you would test it something like this it would just import",
    "start": "965610",
    "end": "971940"
  },
  {
    "text": "your resolver people said maybe an object that you want to have input and then you can just see if it still it's",
    "start": "971940",
    "end": "979950"
  },
  {
    "text": "the same result as you expect it so if you keep these Aspira function it's really easy to test them and also maybe",
    "start": "979950",
    "end": "985590"
  },
  {
    "text": "if you do some alterations to your reviews object then still those alterations should be testable so maybe",
    "start": "985590",
    "end": "992100"
  },
  {
    "text": "you should be strange if you maybe change like field types or something else and if you do then it should be",
    "start": "992100",
    "end": "997650"
  },
  {
    "text": "described somewhere so you can actually test it and so for integration test we",
    "start": "997650",
    "end": "1004610"
  },
  {
    "start": "1002000",
    "end": "1002000"
  },
  {
    "text": "can do a lot of stuff as well so usually integration tests that are most interesting for graphic well",
    "start": "1004610",
    "end": "1010310"
  },
  {
    "text": "servers are ones where you would actually mock your schema or may or maybe mom to juice the entire server and",
    "start": "1010310",
    "end": "1015890"
  },
  {
    "text": "test your resolvers you actually want to see if your queries function as expected",
    "start": "1015890",
    "end": "1021700"
  },
  {
    "text": "so for this you can actually mock servers which can be quite easy if you maybe set up your cough call server",
    "start": "1021700",
    "end": "1027530"
  },
  {
    "start": "1022000",
    "end": "1022000"
  },
  {
    "text": "Tupelo or maybe if you don't know something else it should be it should be that our two credits MOCA information",
    "start": "1027530",
    "end": "1033230"
  },
  {
    "text": "maybe you can create an entire mock server as well directly in postmen or something else so we can see with",
    "start": "1033230",
    "end": "1041060"
  },
  {
    "text": "integration tests the mocking api's it's usually something like this right so you mocked your api with actually there's nothing gods there's no database so you",
    "start": "1041060",
    "end": "1048230"
  },
  {
    "text": "don't have to worry about database connections when you're testing you're doing integration testing cough quell",
    "start": "1048230",
    "end": "1054290"
  },
  {
    "text": "server because you don't actually need the internet connection and you can just run in your CI so I've made a small",
    "start": "1054290",
    "end": "1062180"
  },
  {
    "text": "example with the pulao for this and we're Apollo it's really easy when you create your cough quell server to actually implement mocking as well so",
    "start": "1062180",
    "end": "1069560"
  },
  {
    "text": "it's basically dish done like this so you define your resolvers you define your schemas with your type devs and then you create your Apollo server",
    "start": "1069560",
    "end": "1076610"
  },
  {
    "text": "and you put in one extra field and that smokes is true and when you insert this your entire schema will be mocked and",
    "start": "1076610",
    "end": "1084190"
  },
  {
    "text": "also if you want have more advanced use cases you can also have your resolvers mocked so maybe you want to resolvers to",
    "start": "1084190",
    "end": "1091190"
  },
  {
    "text": "mutate your data in some way then you would define like custom mock resolvers to get the data there and you can",
    "start": "1091190",
    "end": "1098299"
  },
  {
    "start": "1097000",
    "end": "1097000"
  },
  {
    "text": "actually use it together with postman as well because the newest postman releases they've got the option to send in graph",
    "start": "1098299",
    "end": "1105650"
  },
  {
    "text": "QL query as a body request as a body of type so as you can see it's only in a",
    "start": "1105650",
    "end": "1110840"
  },
  {
    "text": "better fields which you can actually there's a small trick for it if you're using all the postman's postman versions",
    "start": "1110840",
    "end": "1116419"
  },
  {
    "text": "you can just change the content type to applications let's graph quell and then it should work as well let's try this",
    "start": "1116419",
    "end": "1124299"
  },
  {
    "text": "so yeah let's look at this first so I've got a server to find here let's refresh",
    "start": "1124299",
    "end": "1129530"
  },
  {
    "text": "it just to be sure yes this one's still running I've got a server defined here",
    "start": "1129530",
    "end": "1136100"
  },
  {
    "text": "and we want to mock this right so we can just add this one here should be",
    "start": "1136100",
    "end": "1142100"
  },
  {
    "text": "interesting to see how the mocking will work so can just do it like this yeah maybe we can test a little small",
    "start": "1142100",
    "end": "1147620"
  },
  {
    "text": "query here so this is actually products query Richard just saw so we're getting ID title thumbnail some other fields and",
    "start": "1147620",
    "end": "1154429"
  },
  {
    "text": "now this is actually Daddy you want to receive right so you're looking for products you get stuff like a blue t-shirts that's probably correct so if",
    "start": "1154429",
    "end": "1161630"
  },
  {
    "text": "you implement mocking for this",
    "start": "1161630",
    "end": "1164740"
  },
  {
    "text": "first here as well",
    "start": "1172620",
    "end": "1176580"
  },
  {
    "text": "as MOOCs sorry okay so if we add the MOOCs to there you can see we could like",
    "start": "1185880",
    "end": "1196210"
  },
  {
    "text": "hello world we've got strange digits so now you know your data is mocked so this is actually mocking based on your schema",
    "start": "1196210",
    "end": "1201970"
  },
  {
    "text": "so you can X you can also mark basing resolver so maybe for more complex situations you want to test but for now",
    "start": "1201970",
    "end": "1208389"
  },
  {
    "text": "just mucker our schema as you can see if we good stuff like hello world the digits will change all the time because",
    "start": "1208389",
    "end": "1214240"
  },
  {
    "text": "every time you send this query it will be mocked so you got like first data to test with so this is all done on this",
    "start": "1214240",
    "end": "1221500"
  },
  {
    "text": "server and you can find the type definitions here so these are all stuff we can test you in a request so if we",
    "start": "1221500",
    "end": "1229090"
  },
  {
    "text": "would go to postman so we've got this is actually codes and books I'm using to",
    "start": "1229090",
    "end": "1235330"
  },
  {
    "text": "test this one yes so as you can see I'm",
    "start": "1235330",
    "end": "1242769"
  },
  {
    "text": "not sending any params but I'm sending a body so in my body I can use this future your future from postman to actually",
    "start": "1242769",
    "end": "1249130"
  },
  {
    "text": "test my queries in here and something I can do is like actually sending this one and look at the results so this is old",
    "start": "1249130",
    "end": "1256210"
  },
  {
    "text": "one with the blue t-shirts and then we could send the new one and to actually get the same mock data as we saw in the",
    "start": "1256210",
    "end": "1262210"
  },
  {
    "text": "graphical playground so with the smoke data we can actually send up this scenario is in postman because you can",
    "start": "1262210",
    "end": "1268240"
  },
  {
    "text": "test over there as well and if you're working on larger API is that you also want to share with other team members or",
    "start": "1268240",
    "end": "1274029"
  },
  {
    "text": "maybe companies that are working with your API is the postman is really convenient because you make Khmer collections you can make MOOC servers",
    "start": "1274029",
    "end": "1280179"
  },
  {
    "text": "you can also monitor stuff so if you have other people using your API so you can monitor it all from there so if you",
    "start": "1280179",
    "end": "1286269"
  },
  {
    "text": "would want to test your graph coil servers in here you can just create some test scenarios for them so I already created some so what I already created",
    "start": "1286269",
    "end": "1294370"
  },
  {
    "text": "was seeing if my response time is less than two milliseconds so this one it's a bit you don't really know if the actual",
    "start": "1294370",
    "end": "1300940"
  },
  {
    "text": "response time to serve will be that when you mock it locally but maybe if you've got a server in place you can test this year and then we can see if products is",
    "start": "1300940",
    "end": "1308019"
  },
  {
    "text": "an array so when my products data is being sent is being received like here you can see it's an array so these all",
    "start": "1308019",
    "end": "1314740"
  },
  {
    "text": "things testa maybe you can see reviewers is an object you can go even further bruh maybe testing of the reviews countess",
    "start": "1314740",
    "end": "1323200"
  },
  {
    "text": "like like a float or a number so we",
    "start": "1323200",
    "end": "1331809"
  },
  {
    "text": "could do it like this or maybe we can just see if like the products title is a",
    "start": "1331809",
    "end": "1337270"
  },
  {
    "text": "string it's easier so you could just go",
    "start": "1337270",
    "end": "1344140"
  },
  {
    "text": "and look here maybe you would have title",
    "start": "1344140",
    "end": "1347909"
  },
  {
    "text": "and I can see if added like a test case and this one works as well you can immediately see if somehow someone",
    "start": "1350039",
    "end": "1356320"
  },
  {
    "text": "change to your API we didn't never know if there is any versioning of place or a lot of people working on your API if",
    "start": "1356320",
    "end": "1361630"
  },
  {
    "text": "somehow it is string ends up to be like maybe an array or an object or an integer you would know if you monitor if",
    "start": "1361630",
    "end": "1367780"
  },
  {
    "text": "you monitor your API is in here so this is really convenient to work with like before when I worked with REST API is a",
    "start": "1367780",
    "end": "1374230"
  },
  {
    "text": "lot I use postman on a daily basis then came graph quail and mostly used to playgrounds but now with this new future",
    "start": "1374230",
    "end": "1379780"
  },
  {
    "text": "I actually started using postman a lot again and it's got a lot of functions that you don't have in a regular graph",
    "start": "1379780",
    "end": "1385059"
  },
  {
    "text": "twelve playgrounds which is quite basic",
    "start": "1385059",
    "end": "1388500"
  },
  {
    "text": "yeah so if you would want to have this test this code for the server as well you can get at the error you will get the redirected to the coats and book so",
    "start": "1394109",
    "end": "1401409"
  },
  {
    "text": "you can find like all the sample code to set up the server and you can create your own testing or maybe you could use",
    "start": "1401409",
    "end": "1407320"
  },
  {
    "text": "it as a back-end for something else okay",
    "start": "1407320",
    "end": "1417999"
  },
  {
    "start": "1417000",
    "end": "1417000"
  },
  {
    "text": "so we can also test on the client side and testing on the client side can maybe be a bit more interesting because there",
    "start": "1417999",
    "end": "1424529"
  },
  {
    "text": "it's actually very user is using the app using graph guell server so maybe you run into new problems maybe there was",
    "start": "1424529",
    "end": "1431440"
  },
  {
    "text": "something you didn't over see when you create IP and you create the server so let's look at client side testing so",
    "start": "1431440",
    "end": "1437229"
  },
  {
    "text": "again I used Java Script to create this one and I'm making something weird to react to pull out so what I've done here",
    "start": "1437229",
    "end": "1443710"
  },
  {
    "text": "I want to test this component so if you aren't familiar with reactor polo let's go so it gives you some components that",
    "start": "1443710",
    "end": "1451210"
  },
  {
    "text": "can handle your data flow if we can look at this query component if you input a graph query in there it'll automatically",
    "start": "1451210",
    "end": "1457809"
  },
  {
    "text": "parse it for you I will do the fetch request and we will turn things like like loading error and data but you want",
    "start": "1457809",
    "end": "1466119"
  },
  {
    "text": "the test of this actually work right because you're using an external component that you didn't write yourself so it could be interesting to test these",
    "start": "1466119",
    "end": "1471789"
  },
  {
    "text": "components and as you can see this component should in the end fill my divs",
    "start": "1471789",
    "end": "1478239"
  },
  {
    "text": "and my H elements with data from that graph QL API API so we'd actually want",
    "start": "1478239",
    "end": "1484899"
  },
  {
    "text": "to see if titles displayed or not and whether or not your graph growth server returns this field so every three turns",
    "start": "1484899",
    "end": "1490599"
  },
  {
    "text": "this field is something you could already have test it on your Mac inside or with postman if you want to monitor tutor",
    "start": "1490599",
    "end": "1496239"
  },
  {
    "text": "externally perdu it from the client side you need to implement some other things as well so there are multiple ways to do",
    "start": "1496239",
    "end": "1503320"
  },
  {
    "text": "this so one thing to do this is by actually mocking the provider and actually mocking the entire clients so",
    "start": "1503320",
    "end": "1509979"
  },
  {
    "text": "this is quite easy a false to do but still it isn't that reliable but still",
    "start": "1509979",
    "end": "1516729"
  },
  {
    "text": "look at that we can do it as you can see you're actually mocking the entire result that comes back from your graph",
    "start": "1516729",
    "end": "1522609"
  },
  {
    "text": "güell server so this one it isn't really reliable because still if you changed MOOC data then maybe it will work your",
    "start": "1522609",
    "end": "1529030"
  },
  {
    "text": "test maybe doesn't work in your actual application but suppose it does you can see if we could a request and request as",
    "start": "1529030",
    "end": "1535240"
  },
  {
    "text": "a query and it's got a results any results you'd have some data structure that's similar to the one returned by a",
    "start": "1535240",
    "end": "1540250"
  },
  {
    "text": "server and you can just mock it and see if your component works as expected so this is sort of like a unit test for",
    "start": "1540250",
    "end": "1546520"
  },
  {
    "text": "your query components to see if this component to actually function as you would expect it once you give it mock",
    "start": "1546520",
    "end": "1551740"
  },
  {
    "text": "data as you can see we tested several things so we actually gonna find or H",
    "start": "1551740",
    "end": "1557890"
  },
  {
    "text": "element and we're going to see whether or not or text is rendered in there so",
    "start": "1557890",
    "end": "1562990"
  },
  {
    "text": "you can test it with this and your test is in the mock so it should immediate arts you're basically just testing the function of the ji6 component and also",
    "start": "1562990",
    "end": "1571659"
  },
  {
    "text": "this is something i've got some code for so if you were interesting this is using the same server as you saw before if you",
    "start": "1571659",
    "end": "1577330"
  },
  {
    "text": "were doing them above you would actually have a full stack graph quayle application it uses JavaScript on the",
    "start": "1577330",
    "end": "1582909"
  },
  {
    "text": "backend with Apollo and JavaScript on the fund and with react and also Apollo",
    "start": "1582909",
    "end": "1589320"
  },
  {
    "text": "so if you would look at this example so first check if we still have a server running because we would need that one",
    "start": "1592650",
    "end": "1600780"
  },
  {
    "text": "yeah so we still have a server running and then we can go and look at this from rad so I've basically set up a very",
    "start": "1600780",
    "end": "1608049"
  },
  {
    "text": "small application that's using a pillow and react Apollo as well as you can see",
    "start": "1608049",
    "end": "1614679"
  },
  {
    "text": "I'm using the graph coil server I just created also in code sandbox and I've got a provider here where I attach the",
    "start": "1614679",
    "end": "1621400"
  },
  {
    "text": "client to and then I'm rendering the products as you can see what this looks",
    "start": "1621400",
    "end": "1626440"
  },
  {
    "text": "like in the browser so this is nothing",
    "start": "1626440",
    "end": "1632500"
  },
  {
    "text": "fancy it's just like a list and some input fields so if I would type something in here first let's make sure",
    "start": "1632500",
    "end": "1641530"
  },
  {
    "text": "we turn off the mock here because real",
    "start": "1641530",
    "end": "1647679"
  },
  {
    "text": "data yes I would real data now and we could",
    "start": "1647679",
    "end": "1653880"
  },
  {
    "text": "just add some fields to it an annex --an fields to it as you can see it returns a success message as well so these are",
    "start": "1653880",
    "end": "1660240"
  },
  {
    "text": "things you would might want to test and also you want to see whether or not there are more items in this list so",
    "start": "1660240",
    "end": "1666560"
  },
  {
    "text": "again yeah we set up this basic application and its application has some test in there as well so the first test",
    "start": "1666560",
    "end": "1672960"
  },
  {
    "text": "we can look maybe it's for the product see with testing multiple things in here so we're going to test if it renders",
    "start": "1672960",
    "end": "1679650"
  },
  {
    "text": "without error we're going to test if it shows any loading indicator once the server is loading and we're gonna see if",
    "start": "1679650",
    "end": "1684990"
  },
  {
    "text": "to actually run us the products I should look at the product components it just takes a query which we already saw",
    "start": "1684990",
    "end": "1691230"
  },
  {
    "text": "before which we have also tested in postman and then we're gonna pass to the query components and we might do some",
    "start": "1691230",
    "end": "1698310"
  },
  {
    "text": "stuff for there so we're loading we have error and if there isn't any error we do things with it like mapping it's showing",
    "start": "1698310",
    "end": "1703980"
  },
  {
    "text": "a title so these are things you can test so you could use maybe snapshots like",
    "start": "1703980",
    "end": "1709500"
  },
  {
    "text": "code sandbox doesn't support snapshots so that's why I left them out for you but you could test for the snapshot just",
    "start": "1709500",
    "end": "1714990"
  },
  {
    "text": "look at lock you component looked like but still it's the easy test but not that reliable now you could see if it's",
    "start": "1714990",
    "end": "1721560"
  },
  {
    "text": "renders the loading states you can see here we're testing whether or not the loading States displayed so this should",
    "start": "1721560",
    "end": "1727590"
  },
  {
    "text": "be somewhere loading displayed in your component 3 and then you can check if the actually renders products and for",
    "start": "1727590",
    "end": "1734160"
  },
  {
    "text": "this we're using mock data so still it isn't that reliable but it's something to see if your UI works as expected",
    "start": "1734160",
    "end": "1739620"
  },
  {
    "text": "I can just see if you put those mocks in there whether or not the titles display it you can also do the same for error",
    "start": "1739620",
    "end": "1746850"
  },
  {
    "text": "messages so maybe you want to see whether or not an error message displayed whenever your server isn't available these are just test for",
    "start": "1746850",
    "end": "1754910"
  },
  {
    "text": "products and perform to basically they're quite the same so I want to see whether or not it renders without an",
    "start": "1754910",
    "end": "1760260"
  },
  {
    "text": "error whether or not the loading indicator is shown if you can edit over so if the Edit message is shown whether",
    "start": "1760260",
    "end": "1766740"
  },
  {
    "text": "or not extra fields or edits these are things you could test as well for your forum which you can see in here so we",
    "start": "1766740",
    "end": "1776490"
  },
  {
    "text": "create I created some mocks for the refs because reps are a bit tricky to the mock so if you want to create controlled",
    "start": "1776490",
    "end": "1781980"
  },
  {
    "text": "components don't use reps because they're really hard to mock so here we're just gonna see whether or not",
    "start": "1781980",
    "end": "1788039"
  },
  {
    "text": "your component loads we're gonna see if the loading state is somewhere in there and again we're using all mock data and",
    "start": "1788039",
    "end": "1796080"
  },
  {
    "text": "basically the same for adding offers I'm rendering to access messages so if we",
    "start": "1796080",
    "end": "1802470"
  },
  {
    "text": "want to get this code you can just use this QR code and find the goats and books and play around with it and so",
    "start": "1802470",
    "end": "1813960"
  },
  {
    "start": "1813000",
    "end": "1813000"
  },
  {
    "text": "yeah flow through end-to-end testing you would have for more complex one right because you also want to test out your",
    "start": "1813960",
    "end": "1819029"
  },
  {
    "text": "server babes so if you were not to do that you could just test using the real Apollo provider so you're just testing",
    "start": "1819029",
    "end": "1824279"
  },
  {
    "text": "against real life data or maybe real data from your test graph quayle server",
    "start": "1824279",
    "end": "1829380"
  },
  {
    "text": "that's using some test database so basically all the implementation would be the same except you can leave out the",
    "start": "1829380",
    "end": "1835320"
  },
  {
    "text": "mocks in a set of mocks using the actual data so that's very more reliable something else I would like to do there",
    "start": "1835320",
    "end": "1841230"
  },
  {
    "text": "are packages to help you do this is actually importing your ski masks or importing fields from your actual",
    "start": "1841230",
    "end": "1847500"
  },
  {
    "text": "database actual graph Guelph server and use them as mocks so then you would still have a reliable implementation so",
    "start": "1847500",
    "end": "1855330"
  },
  {
    "text": "as I said before you can also do load testing so there's a small extra demo I've included something to do load",
    "start": "1855330",
    "end": "1861779"
  },
  {
    "text": "testing with and basically what I've implied it's another package from easy",
    "start": "1861779",
    "end": "1868500"
  },
  {
    "text": "graphic well so this is called ease of quality and its load tester and with this one you can load test your",
    "start": "1868500",
    "end": "1873510"
  },
  {
    "text": "applications you could send a certain number of queries to it a certain number of permutations you can at your own",
    "start": "1873510",
    "end": "1879870"
  },
  {
    "text": "variables and then you could choose how many private users you want to test it on so this is actually really convenient",
    "start": "1879870",
    "end": "1886529"
  },
  {
    "text": "if you want to find out how your actual application would skill so you maybe you built a graph coil server everything",
    "start": "1886529",
    "end": "1892320"
  },
  {
    "text": "works real nice you've got queries that maybe have a nesting depth of like six different fields you could really interesting to",
    "start": "1892320",
    "end": "1899279"
  },
  {
    "text": "see how this would skill so it's stuff like this you can actually test out with skills so let's see looks like so",
    "start": "1899279",
    "end": "1907679"
  },
  {
    "text": "basically we're gonna test this graph guell server",
    "start": "1907679",
    "end": "1913279"
  },
  {
    "text": "so well loads okay so basically what you're doing here you can define certain",
    "start": "1921820",
    "end": "1927340"
  },
  {
    "text": "things you can see define whether or not you want queries whether or not you want citations the duration and arrival rate",
    "start": "1927340",
    "end": "1934440"
  },
  {
    "text": "whether or not you want to see the outputs on your right side as well and then you can define arguments so these",
    "start": "1934440",
    "end": "1942190"
  },
  {
    "text": "are the arguments for the query good student by ID and this is from get career so you can just define arguments and yeah this is something good to",
    "start": "1942190",
    "end": "1950109"
  },
  {
    "text": "define for yourself do you want the same argument so you want different arguments these are all things you can implement and then you can set input variables for",
    "start": "1950109",
    "end": "1957070"
  },
  {
    "text": "maybe mutations so let's see if we can run this one so now you can see it sir",
    "start": "1957070",
    "end": "1966759"
  },
  {
    "text": "first it's gonna set up the application so it's actually gonna mock a client that will just send all these queries to",
    "start": "1966759",
    "end": "1972759"
  },
  {
    "text": "your server so this might take some time",
    "start": "1972759",
    "end": "1977399"
  },
  {
    "text": "yeah so we're just seeing right now is just like getting no modules that you would need to actually run a graph guell",
    "start": "1987220",
    "end": "1992270"
  },
  {
    "text": "client and now it's gonna send all these",
    "start": "1992270",
    "end": "1999380"
  },
  {
    "text": "requests so this is a lot of requests being fired to graph guell server so maybe if you've got unstable database",
    "start": "1999380",
    "end": "2005590"
  },
  {
    "text": "you'll find out after running a test like this since you can see this one was quite fast because it put the duration",
    "start": "2005590",
    "end": "2011740"
  },
  {
    "text": "of just one and as you can see there are 50 scenarios launched we've also got 50",
    "start": "2011740",
    "end": "2017170"
  },
  {
    "text": "completed so it's good nothing crashed and also the were like thousand 50",
    "start": "2017170",
    "end": "2022570"
  },
  {
    "text": "requests being sent to your server so you can probably imagine like within 10 seconds or so being thousand 50 requests",
    "start": "2022570",
    "end": "2028480"
  },
  {
    "text": "sent to your server I don't know if you've ever looked at the github graph guell API they actually limited the",
    "start": "2028480",
    "end": "2034660"
  },
  {
    "text": "amount of requests you consent and that amount is way smaller than actual REST API because with all the nesting and you",
    "start": "2034660",
    "end": "2041560"
  },
  {
    "text": "don't know how the people will go and you've got a lot of relations then it's really it can be quite tricky to",
    "start": "2041560",
    "end": "2046690"
  },
  {
    "text": "implement that well so if you don't have any load testing for that you will probably find out sooner or later that your queries might be too big or maybe",
    "start": "2046690",
    "end": "2053740"
  },
  {
    "text": "you have to find too many relations that are queryable so as you can see here opens well you can also try running it",
    "start": "2053740",
    "end": "2060220"
  },
  {
    "text": "to baby like more or a different arrival rate to see how this will actually implement your your setup so that's a",
    "start": "2060220",
    "end": "2070840"
  },
  {
    "text": "package you can find right here and the only thing you need to configure it is just trying to run a batch script which",
    "start": "2070840",
    "end": "2076300"
  },
  {
    "text": "you can do locally and you would define a config file and they would put in all the variables and some configuration",
    "start": "2076300",
    "end": "2082780"
  },
  {
    "text": "amounts for like the number of requests you want to send so if we would want to",
    "start": "2082780",
    "end": "2088419"
  },
  {
    "text": "wrap this all up like look at everything we saw so for testing graph well there are a lot of things we can do so we can",
    "start": "2088419",
    "end": "2095378"
  },
  {
    "text": "do static type checking so that's where I step static type checking where I would actually have typescript or another functional programming language",
    "start": "2095379",
    "end": "2101890"
  },
  {
    "text": "using types so we didn't here you can already get a lot of your you can",
    "start": "2101890",
    "end": "2107530"
  },
  {
    "text": "already do a lot of debugging because maybe you will find out when you actually have compiled everything that they were errors in there so really to",
    "start": "2107530",
    "end": "2114250"
  },
  {
    "text": "get end-to-end type safety with gov quell you would need some safety checking and if you don't implement any",
    "start": "2114250",
    "end": "2120410"
  },
  {
    "text": "static type checking it's come really interesting to actually have a lot of unit test for your codes because you want to know if the of your strings will",
    "start": "2120410",
    "end": "2127130"
  },
  {
    "text": "remain strings because otherwise they will definitely break your code if your tribal factor graph coil is all verse or",
    "start": "2127130",
    "end": "2132770"
  },
  {
    "text": "maybe you make changes to your schemas a lot of things can break if you don't define your types well and maybe if",
    "start": "2132770",
    "end": "2138290"
  },
  {
    "text": "you've got side effects in your resolvers you're actually changing the form of types that could be tricky as well so that's why you would need unit",
    "start": "2138290",
    "end": "2144920"
  },
  {
    "text": "tests to make sure that these things are in place and together with static type checking they're sort of the basis for",
    "start": "2144920",
    "end": "2150770"
  },
  {
    "text": "your testing so if these things are in place you've got probably sort of a sable code base that can that can easily",
    "start": "2150770",
    "end": "2157610"
  },
  {
    "text": "be added new futures without breaking a lot of things and then the integration tests become a lot more tricky so as we",
    "start": "2157610",
    "end": "2164270"
  },
  {
    "text": "saw you could mock your server and then try testing if it postmen or maybe you",
    "start": "2164270",
    "end": "2169670"
  },
  {
    "text": "can mock your server and test it in your clients or maybe you can walk the clients and test your actual server so",
    "start": "2169670",
    "end": "2175490"
  },
  {
    "text": "for integration tests there a lot of options so whatever time options you choose it really depends on what you're",
    "start": "2175490",
    "end": "2180830"
  },
  {
    "text": "building and how complex it is so maybe your client is really important maybe your gov quail server not so then we'd",
    "start": "2180830",
    "end": "2186860"
  },
  {
    "text": "implement more integration tests over there and we can also do end-to-end tests where I just test the entire",
    "start": "2186860",
    "end": "2192140"
  },
  {
    "text": "lifecycle so you would have your schemas that are being tested by actually querying a various versions of your",
    "start": "2192140",
    "end": "2198980"
  },
  {
    "text": "server and you would have to client the next should be see how your data flows to your client and actually if titles",
    "start": "2198980",
    "end": "2204650"
  },
  {
    "text": "will be rendered when you ask for when you have a query where's a title in there so then you can actually apply",
    "start": "2204650",
    "end": "2210530"
  },
  {
    "text": "end-to-end testing and really see if your lifecycle from your graph quells server to your client is working as",
    "start": "2210530",
    "end": "2215870"
  },
  {
    "text": "expected and then we also have load testing so this one might be it's really",
    "start": "2215870",
    "end": "2221720"
  },
  {
    "text": "dependable on how many servers are using maybe your running surface and then you wouldn't really have to worry about this just for a large bill for Amazon maybe",
    "start": "2221720",
    "end": "2228530"
  },
  {
    "text": "at the end of the month so with load testing you can also it's not really just testing if you need more servers",
    "start": "2228530",
    "end": "2233780"
  },
  {
    "text": "but also if you haven't written to complex queries because see if you've got maybe you're working with a sequel",
    "start": "2233780",
    "end": "2241130"
  },
  {
    "text": "database on the backend then you can easily get like nest a lot of relationships from people put in quite",
    "start": "2241130",
    "end": "2247490"
  },
  {
    "text": "serious queries so that stuff to think about the new create your types as well",
    "start": "2247490",
    "end": "2253090"
  },
  {
    "text": "and then something that's important to mention is like on a person test coverage doesn't mean that you don't if",
    "start": "2253090",
    "end": "2258620"
  },
  {
    "start": "2254000",
    "end": "2254000"
  },
  {
    "text": "any bucks so books can arise everywhere or maybe their side effects you haven't tested maybe they were side effects you",
    "start": "2258620",
    "end": "2264890"
  },
  {
    "text": "have tested but actually something else is going on but this coverage is like a good metric if you've got some sort of",
    "start": "2264890",
    "end": "2270890"
  },
  {
    "text": "test coverage I don't know if you're using javascript we just you can generate these summaries of your code",
    "start": "2270890",
    "end": "2276380"
  },
  {
    "text": "you can actually see arm and most important things test it or not so something that Jess doesn't really see",
    "start": "2276380",
    "end": "2282650"
  },
  {
    "text": "is important so maybe whether or not a label like sold outs or maybe if you",
    "start": "2282650",
    "end": "2288290"
  },
  {
    "text": "could have equal store so that's a lot of things I work on our e-commerce stores or marketplaces when you try to",
    "start": "2288290",
    "end": "2293450"
  },
  {
    "text": "render label next to product that either says sold-out or hot item or maybe low",
    "start": "2293450",
    "end": "2298880"
  },
  {
    "text": "in shipments for Jesse's will be just a branch with a small percentage percentage so maybe I found a percent",
    "start": "2298880",
    "end": "2304940"
  },
  {
    "text": "and then there's this test that maybe if eighty and this isn't tested so eighty won't say anything so just to keep in",
    "start": "2304940",
    "end": "2310220"
  },
  {
    "text": "mind just look at those testimonies and really see if you test the important parts so then we're that for small",
    "start": "2310220",
    "end": "2317120"
  },
  {
    "text": "question like if you implement graph guell which you really preferred like to have a lot of unit test and static type",
    "start": "2317120",
    "end": "2322970"
  },
  {
    "text": "checking an integration test on top or end-to-end which you really prefer to have like more end-to-end testing and",
    "start": "2322970",
    "end": "2328610"
  },
  {
    "text": "integration test as well so we would prefer the left set up to test it some people do the people prefer",
    "start": "2328610",
    "end": "2337340"
  },
  {
    "text": "the right one as well we've got some are your product managers that's good now",
    "start": "2337340",
    "end": "2346490"
  },
  {
    "text": "something I like about the right one it's because of Kafka well you've got a little different layers it's also nice",
    "start": "2346490",
    "end": "2351860"
  },
  {
    "text": "to test your client with actual real data because graph QL servers the thing with them that you don't really need versioning because types can change all",
    "start": "2351860",
    "end": "2358910"
  },
  {
    "text": "the time and could be interesting to really have those Entenmann's test implies as well so if you want to learn",
    "start": "2358910",
    "end": "2365420"
  },
  {
    "text": "more you can also find me on social media and ask your questions there or you can just find me on youtube I've got",
    "start": "2365420",
    "end": "2371270"
  },
  {
    "text": "a lot of videos online and from other conferences and also from NDC in London if you want to know more well so those",
    "start": "2371270",
    "end": "2377390"
  },
  {
    "text": "are things I really explain the difference between using graph QL and rest and most of the times I write these",
    "start": "2377390",
    "end": "2383840"
  },
  {
    "text": "things in JavaScript's i also use reason monogamy lots of questions about those things you",
    "start": "2383840",
    "end": "2389299"
  },
  {
    "text": "can ask me later if you really want to get started with testing in graphic well easily with JavaScript then would really",
    "start": "2389299",
    "end": "2396730"
  },
  {
    "text": "advise you to go to a polo because they've got a lot of documentation both",
    "start": "2396730",
    "end": "2402049"
  },
  {
    "text": "for running integration tests also for sir for mocking for testing resolvers basically everything is in there and if",
    "start": "2402049",
    "end": "2408079"
  },
  {
    "text": "you've got more experience with testing you can also check out the easy graph QL tester and then never ever look at them",
    "start": "2408079",
    "end": "2414769"
  },
  {
    "text": "because you can also mock your schemas you can walk resolvers you can test resolve versus make test assertions",
    "start": "2414769",
    "end": "2421400"
  },
  {
    "text": "so basically everything is in there and also you've got the love tester which is important to dimension yeah so thank you",
    "start": "2421400",
    "end": "2430640"
  },
  {
    "text": "for your time and if you have any questions please let me know",
    "start": "2430640",
    "end": "2434890"
  }
]