[
  {
    "start": "0",
    "end": "48000"
  },
  {
    "text": "all right welcome nice to see a full room at the end of the conference I",
    "start": "1710",
    "end": "8040"
  },
  {
    "text": "promise I'll make it worth your time to stick around until the end we're going to talk about common API security",
    "start": "8040",
    "end": "13750"
  },
  {
    "text": "pitfalls API swell we kind of know why you're here everybody today is building API so",
    "start": "13750",
    "end": "19210"
  },
  {
    "text": "everybody's building single page applications backed by an API maybe a mobile application or a desktop application but it's gonna be backed by",
    "start": "19210",
    "end": "25449"
  },
  {
    "text": "an API that's the way we do things how you build that API I'm not gonna talk about that I'm gonna talk about security",
    "start": "25449",
    "end": "31179"
  },
  {
    "text": "I'm gonna talk about some of the things that might go wrong some of the things I've seen go wrong in real api's weather",
    "start": "31179",
    "end": "37030"
  },
  {
    "text": "I've seen it personally or somebody else has found it and published or talked about it online that's what we're gonna",
    "start": "37030",
    "end": "42130"
  },
  {
    "text": "talk about right here why this talk because API security is getting more and more important when they built the AUSA",
    "start": "42130",
    "end": "49000"
  },
  {
    "start": "48000",
    "end": "48000"
  },
  {
    "text": "top 10 like the list of the top 10 most dangerous web security vulnerabilities in 2017 they proposed to add an item",
    "start": "49000",
    "end": "56530"
  },
  {
    "text": "place number 10 under protected api's because it was on the rise in 2017 they",
    "start": "56530",
    "end": "62680"
  },
  {
    "text": "noticed like you know what there's a lot of API sand basically security is a very big problem in the API wrote turnout at",
    "start": "62680",
    "end": "68980"
  },
  {
    "text": "all stop then back then had like a big controversy and they built a new version from scratch which didn't include this",
    "start": "68980",
    "end": "74530"
  },
  {
    "text": "item but the seed was planted again back then and then a bit later actually um",
    "start": "74530",
    "end": "79870"
  },
  {
    "text": "last year a group of people at OS published API security top ten so",
    "start": "79870",
    "end": "85390"
  },
  {
    "text": "instead of having one item in the top 10 of that security from the build it so you know what api's are actually kind of different we've seen a lot more data",
    "start": "85390",
    "end": "91690"
  },
  {
    "text": "since then and they built a full top ten of security issues in API so you can find the project online it's open you",
    "start": "91690",
    "end": "97960"
  },
  {
    "text": "can contribute if you want to and you can definitely use that information in there there's ten items that occur a lot",
    "start": "97960",
    "end": "104200"
  },
  {
    "text": "in AP is how you can detect them how you can fix them and so on that's what I'm",
    "start": "104200",
    "end": "109390"
  },
  {
    "text": "gonna talk about more or less there's gonna be some issues that are in there some issues that are not in there we're gonna talk about API security just to",
    "start": "109390",
    "end": "116200"
  },
  {
    "text": "make sure we're on the same page let me show you what this actually means we have a browser and we have a server",
    "start": "116200",
    "end": "121600"
  },
  {
    "text": "somewhere and we're loading an application we're loading basically the application that we're gonna run in our browser an angular application react",
    "start": "121600",
    "end": "128649"
  },
  {
    "text": "view whatever you're building doesn't matter that application runs as an independent client and it needs some",
    "start": "128649",
    "end": "134890"
  },
  {
    "text": "thing useful needs data and it needs to perform operations and that's where the API comes into play you have a server",
    "start": "134890",
    "end": "140560"
  },
  {
    "text": "somewhere an API serving data performing operations and so on you kind of know what we are talking",
    "start": "140560",
    "end": "145930"
  },
  {
    "text": "about here I hope otherwise this talk is gonna be a very big eye-opener I'd say to the use of api's of course we have a",
    "start": "145930",
    "end": "153190"
  },
  {
    "text": "browser here which can be a web browser on your desktop laptop mobile iPad whatever but you also have native mobile",
    "start": "153190",
    "end": "160030"
  },
  {
    "text": "clients or web-based mobile clients so a lot of that applications today are just repackaged a lot of mobile apps sorry",
    "start": "160030",
    "end": "166450"
  },
  {
    "text": "are repackaged web applications it doesn't just doesn't just doesn't look like a web app but it definitely is",
    "start": "166450",
    "end": "171970"
  },
  {
    "text": "one all right that's what we're gonna talk about we're gonna talk about the top part of the slides the API part and",
    "start": "171970",
    "end": "178269"
  },
  {
    "text": "this slide is actually a very good illustration of some of the first problems you might encounter that's people thinking that the clients can",
    "start": "178269",
    "end": "184780"
  },
  {
    "text": "handle certain security responsibilities yes some things move to the client but never any authorization based security",
    "start": "184780",
    "end": "192580"
  },
  {
    "text": "decisions the client is lifts outside of your trust boundary you have no control over the clients and I take her to open",
    "start": "192580",
    "end": "198310"
  },
  {
    "text": "up the clients and make it to whatever they want you have to assume that the client is untrusted always a very good",
    "start": "198310",
    "end": "205630"
  },
  {
    "text": "illustration is when you use tinder this is purely anecdotal ad authorized my",
    "start": "205630",
    "end": "211570"
  },
  {
    "text": "wife would be very mad about me talking about this but if you use tinder you get these blurred pictures so you can see",
    "start": "211570",
    "end": "218170"
  },
  {
    "text": "who else liked you and of course if you aren't in you you might want to know that so of course they sell you a",
    "start": "218170",
    "end": "223269"
  },
  {
    "text": "subscription so you get unblurred pictures if you pay them of course if people if IT people security people see",
    "start": "223269",
    "end": "230799"
  },
  {
    "text": "this they're gonna be teased like mmm I actually want to know who likes me so they start digging deeper and they found",
    "start": "230799",
    "end": "236769"
  },
  {
    "text": "that tinder on mobile blurs the pictures on the client-side they fetched a picture from the API and they blur it",
    "start": "236769",
    "end": "244239"
  },
  {
    "text": "and then display it to you so they dug a bit deeper they opened up the web app they figured out how the API work and",
    "start": "244239",
    "end": "249790"
  },
  {
    "text": "then they started sending requests with postman pretending to be a mobile application and he got the pictures out",
    "start": "249790",
    "end": "254829"
  },
  {
    "text": "just like that that's one very good illustration of why I can now trust the client here it's kind of harmless maybe",
    "start": "254829",
    "end": "262360"
  },
  {
    "text": "they even know about knew about it like yeah that's probably not the most secure thing you know what that's good enough because honestly we don't care that much",
    "start": "262360",
    "end": "268660"
  },
  {
    "text": "about it either but you'll find this in other instances as well you'll find applications that serve a lot of data to",
    "start": "268660",
    "end": "275230"
  },
  {
    "text": "the client and then the client cherry-picks what are gonna display like oh we have a full JSON object we're only going to show these two fields so it's",
    "start": "275230",
    "end": "281290"
  },
  {
    "text": "good but of course somebody inspecting the data are so many inspecting the API will quickly figure out that the data is",
    "start": "281290",
    "end": "286690"
  },
  {
    "text": "leaking anyway I will extract an information one way or another and the same thing goes with admin data admin",
    "start": "286690",
    "end": "292510"
  },
  {
    "text": "functionality and so on and so on and that brings us to the very first pitfall never rely on the client for making",
    "start": "292510",
    "end": "300190"
  },
  {
    "start": "296000",
    "end": "296000"
  },
  {
    "text": "authorization decisions don't over expose data to the API because an act an attacker always has full access to all",
    "start": "300190",
    "end": "306580"
  },
  {
    "text": "their API endpoints you have to assume that authorization never leaves on the client that doesn't mean that you cannot",
    "start": "306580",
    "end": "313690"
  },
  {
    "text": "do client-side authorization where you cannot do it as an only defense every authorization decision on the client",
    "start": "313690",
    "end": "319120"
  },
  {
    "text": "which is good for usability and to detect people tampering with the application and things like that is useful but always make the real",
    "start": "319120",
    "end": "325840"
  },
  {
    "text": "authorization decisions on the backend in the API pitfall number one we're gonna cover quite a bunch",
    "start": "325840",
    "end": "331450"
  },
  {
    "text": "I only don't know how many you'll see where we end up in the end I'm not gonna keep count let's let's make it clear",
    "start": "331450",
    "end": "338680"
  },
  {
    "text": "there all right authorization let's talk about authorize it we're gonna talk about authorization law so many issues are authorization",
    "start": "338680",
    "end": "345880"
  },
  {
    "text": "issues let's talk about another case I like these examples not to make fun of",
    "start": "345880",
    "end": "351190"
  },
  {
    "text": "these people messing up but because they show real worlds from the abilities in real world systems built by people just",
    "start": "351190",
    "end": "357010"
  },
  {
    "text": "like you people that kinda know what they're doing but make mistakes anyway and I'm gonna try to point this out and",
    "start": "357010",
    "end": "363070"
  },
  {
    "text": "try to help you figure out if your application has these mistakes yes or no what happened here t-mobile phone",
    "start": "363070",
    "end": "369730"
  },
  {
    "text": "company they allowed you to access your account their phone company and you needed an ID to refer to your account so",
    "start": "369730",
    "end": "376180"
  },
  {
    "text": "if your phone company a phone numbers for numbers are kind of unique so that's a good identifier you might guess so",
    "start": "376180",
    "end": "381190"
  },
  {
    "text": "let's just use phone numbers so if I make a call to their API it's gonna say like the account number with my phone",
    "start": "381190",
    "end": "387160"
  },
  {
    "text": "number and it's gonna give me the account information for me if I do that with your phone number",
    "start": "387160",
    "end": "392290"
  },
  {
    "text": "I'm gonna get your account information and same for you and the same for you and of course phone numbers well they're",
    "start": "392290",
    "end": "397419"
  },
  {
    "text": "kind of innumerable so you can easily grab millions and millions of account information just from that API endpoint",
    "start": "397419",
    "end": "403630"
  },
  {
    "text": "and seems like a silly problem to have like come on who does that well",
    "start": "403630",
    "end": "408820"
  },
  {
    "text": "t-mobile did that but telefónica in Spain had the same problem and AT&T in the US had the same problem and Verizon",
    "start": "408820",
    "end": "414760"
  },
  {
    "text": "in the u.s. had the same problem pretty sure there's a few others that we don't know about that have the same problem this is actually really really common",
    "start": "414760",
    "end": "421930"
  },
  {
    "text": "it's known it's it has existed in web applications for a very long time it's known as an insecure direct object",
    "start": "421930",
    "end": "428410"
  },
  {
    "text": "reference because you have a direct object reference a phone number the ID or whatever and it's insecure because",
    "start": "428410",
    "end": "433990"
  },
  {
    "text": "there's missing authorization checks and phone numbers is one example documents",
    "start": "433990",
    "end": "440170"
  },
  {
    "text": "PDFs of insurance contracts is another example this is America first American a",
    "start": "440170",
    "end": "445510"
  },
  {
    "text": "financial financial insurance company in the US and they had a very long document identifier which was a number it could",
    "start": "445510",
    "end": "453010"
  },
  {
    "text": "go all the way back to I think number 79 and grab all of the documents like that from their server because there was no",
    "start": "453010",
    "end": "459400"
  },
  {
    "text": "decent authorization in place and this problem seemed stupid if I talked about",
    "start": "459400",
    "end": "466420"
  },
  {
    "text": "this in my training courses people are like come on nobody does that in practice I mean how hard is it to write proper code well",
    "start": "466420",
    "end": "473470"
  },
  {
    "text": "actually it's not that hard to write it but it's hard to think about it why because we build systems with tutorials",
    "start": "473470",
    "end": "480340"
  },
  {
    "text": "if you want to learn about REST API it's gonna find something built node.js restful api is in ten minutes I can tell",
    "start": "480340",
    "end": "486040"
  },
  {
    "text": "you in ten minutes there's not gonna be any security in there that's okay because the goal is not to learn about",
    "start": "486040",
    "end": "491830"
  },
  {
    "text": "security the goal is to learn about rest end of HTTP verbs and how to do that you'll find things like hey let's build",
    "start": "491830",
    "end": "498160"
  },
  {
    "text": "the to application kind of the trivial example let's read tasks from there and here you have a direct object reference",
    "start": "498160",
    "end": "505210"
  },
  {
    "text": "we're gonna get the task ID right here out of your request fetch the task and return it the leading",
    "start": "505210",
    "end": "512080"
  },
  {
    "text": "stuff same story delete the task well you have a task ID that comes in from the request and you can easily delete a",
    "start": "512080",
    "end": "518260"
  },
  {
    "text": "task and off you go that's how we build rest api s-- and of course if you build",
    "start": "518260",
    "end": "524380"
  },
  {
    "text": "a system like that your first REST API you're gonna do this and you're not gonna deploy that in practice of course not you know learn about authentication",
    "start": "524380",
    "end": "531010"
  },
  {
    "text": "after it's like oh yeah now we need users so how do we authenticate a user you read a few other tutorials and",
    "start": "531010",
    "end": "536380"
  },
  {
    "text": "implements hopefully a good authentication system depends what you read and essentially you'll have some",
    "start": "536380",
    "end": "541480"
  },
  {
    "text": "authentication in place and then you need the mindset to think about hey",
    "start": "541480",
    "end": "546490"
  },
  {
    "text": "authentication is one thing but what about access control and that's something that's often not covered and",
    "start": "546490",
    "end": "552880"
  },
  {
    "text": "if you forget about access control you're the same as t-mobile because they did check if you were authenticated but they forgot to check object level access",
    "start": "552880",
    "end": "560290"
  },
  {
    "text": "control and that's how these these problems come into existence and these are hard to see in an application",
    "start": "560290",
    "end": "566050"
  },
  {
    "text": "because it doesn't pop out it's not like a wrong line of code no it's something missing and unless you go in there",
    "start": "566050",
    "end": "572320"
  },
  {
    "text": "looking for this particular problem you're not gonna find it there's a lot of applications that suffer from this in",
    "start": "572320",
    "end": "578290"
  },
  {
    "text": "an API role we call that bola broken object level access control it's a different name for either but it's the",
    "start": "578290",
    "end": "585010"
  },
  {
    "text": "same vulnerability pitfall here lack of proper authorization there's a lot of",
    "start": "585010",
    "end": "590950"
  },
  {
    "start": "587000",
    "end": "587000"
  },
  {
    "text": "applications there have always been a lot of applications and there are still a lot of applications built today that",
    "start": "590950",
    "end": "595990"
  },
  {
    "text": "may check authentication but not authorization that's a very very common problem what can you do against that",
    "start": "595990",
    "end": "602410"
  },
  {
    "text": "concretely well take your application and audits your authorization policy look at it like hey what do we check do",
    "start": "602410",
    "end": "608350"
  },
  {
    "text": "we check these things everywhere every single like end point do we check that",
    "start": "608350",
    "end": "613960"
  },
  {
    "text": "yes or no chances are there are a few or you don't check it by the way if you",
    "start": "613960",
    "end": "619390"
  },
  {
    "text": "want to grab a copy of the slides they're available on my website so just go to my Twitter or my website and you'll find the link to the talk and a",
    "start": "619390",
    "end": "626020"
  },
  {
    "text": "PDF of the slides with a lot more information than what I'm going to talk about here in case you are interested in",
    "start": "626020",
    "end": "631810"
  },
  {
    "text": "that but authorization auditing policies I want you to go into your application and look at your policy are you gonna",
    "start": "631810",
    "end": "638620"
  },
  {
    "text": "find and it's not gonna be that easy typically what I see with a lot of customers is that authorization is there",
    "start": "638620",
    "end": "646050"
  },
  {
    "text": "somewhat but nobody really knows how or what there's maybe one guy if you're sitting together at four or five people",
    "start": "646050",
    "end": "652240"
  },
  {
    "text": "are at a table there's maybe one person is like oh yeah I know how our ization works and everybody's looking at him or",
    "start": "652240",
    "end": "658360"
  },
  {
    "text": "her and it's like yeah we get something from here so we get a request to our our",
    "start": "658360",
    "end": "664390"
  },
  {
    "text": "back-end and request is like a token maybe or it doesn't matter much and maybe a custom header for customers because we",
    "start": "664390",
    "end": "670730"
  },
  {
    "text": "have different tenants and based on that we're gonna make an authorization decision but it doesn't end there because they have different services",
    "start": "670730",
    "end": "677060"
  },
  {
    "text": "whether it's a micro service architecture or a monolids you're gonna have different components in your application responsible with different",
    "start": "677060",
    "end": "683000"
  },
  {
    "text": "things and each of these components is gonna make authorization decisions and that is your authorization policy you",
    "start": "683000",
    "end": "689480"
  },
  {
    "text": "may have an authentication check like it's user authenticated home no he isn't for it for a 1-ton oh the user is",
    "start": "689480",
    "end": "696050"
  },
  {
    "text": "authenticated go ahead go ahead but let's perform some operations maybe there is an object level check maybe there there's a",
    "start": "696050",
    "end": "701900"
  },
  {
    "text": "customer specific functionality so you have to differentiate between a tenant so there's a customer check and a user",
    "start": "701900",
    "end": "707240"
  },
  {
    "text": "check for accessing that particular piece of data and so on and that is what authorization policies often look like",
    "start": "707240",
    "end": "712790"
  },
  {
    "text": "and other thing this is a freaking nightmare because nobody really knows what is checked where you need to have a",
    "start": "712790",
    "end": "719990"
  },
  {
    "text": "very strong and deep mental model of what the application does rare every bit",
    "start": "719990",
    "end": "725150"
  },
  {
    "text": "of data comes from before we can decide whether this is is secure policy yes or no and honestly I don't like that",
    "start": "725150",
    "end": "731030"
  },
  {
    "text": "because that means if I come in to help them with security it takes a lot of",
    "start": "731030",
    "end": "736310"
  },
  {
    "text": "effort to understand what they're doing to figure out if they have full abilities yes or no and what would be",
    "start": "736310",
    "end": "742070"
  },
  {
    "text": "better here is if you would have a centralized policy I'm not saying to take away all of these",
    "start": "742070",
    "end": "747140"
  },
  {
    "text": "checks and put them in one place keep the checks because they're good it's good to have object level access control right here but also have a",
    "start": "747140",
    "end": "754790"
  },
  {
    "text": "central policy you can enforce where the requests enter your application because that central policy can be made",
    "start": "754790",
    "end": "761270"
  },
  {
    "start": "758000",
    "end": "758000"
  },
  {
    "text": "independent of the application code it's not going to be an annotation based thing you put in on methods and stuff",
    "start": "761270",
    "end": "766850"
  },
  {
    "text": "like that no it's gonna be either a centralized component or a policy language or whatever you're using but",
    "start": "766850",
    "end": "772490"
  },
  {
    "text": "it's something you can add it it's something you can look at like what is allowed in my application like oh yeah that's a clear overview we can look at",
    "start": "772490",
    "end": "779690"
  },
  {
    "text": "that we can test against that we can write tests against our authorization policy only without looking at a code to",
    "start": "779690",
    "end": "785780"
  },
  {
    "text": "make sure that what we think is expected behavior is actually enforced by our policy that's a very very important one",
    "start": "785780",
    "end": "792080"
  },
  {
    "text": "that a lot of people just implicitly assume from the code like oh yeah that's probably our policy but nobody really",
    "start": "792080",
    "end": "798470"
  },
  {
    "text": "knows and that's a problem sometimes all right my apologies for a bright",
    "start": "798470",
    "end": "804259"
  },
  {
    "text": "white light by the way I'm not used to LED screens projecting that on to you",
    "start": "804259",
    "end": "809769"
  },
  {
    "text": "keeps you awake though so that's good all right making authorisation decisions what do",
    "start": "809769",
    "end": "818149"
  },
  {
    "text": "we need to do that we need to know who's making a call we need some information",
    "start": "818149",
    "end": "823610"
  },
  {
    "text": "some kind of state session state authentication state it doesn't matter what you want to call it there's all",
    "start": "823610",
    "end": "829370"
  },
  {
    "text": "kinds of definitions and none of them is really right for every scenario so I don't care about names I care about what",
    "start": "829370",
    "end": "835490"
  },
  {
    "text": "it is and if you take a step back 15 years to the GS pH the pH pH asp.net you",
    "start": "835490",
    "end": "843139"
  },
  {
    "text": "had a server and you had a client like a web app once River couple browsers and",
    "start": "843139",
    "end": "848839"
  },
  {
    "text": "that's about it and then things started growing you had a more of a few more clients and a few more services in the",
    "start": "848839",
    "end": "853970"
  },
  {
    "text": "backend we kind of knew how to handle that yes load balancing is not really fun",
    "start": "853970",
    "end": "859160"
  },
  {
    "text": "with server-side sessions but it kind of works stateful sessions kind of work in that scenario I'm not talking about",
    "start": "859160",
    "end": "866240"
  },
  {
    "text": "stateful code I'm not talking about coated behaves differently based on a property set somewhere in this in a",
    "start": "866240",
    "end": "871250"
  },
  {
    "text": "weird object no I'm talking about keeping authorization state after the user is authenticated keeping track of",
    "start": "871250",
    "end": "876649"
  },
  {
    "text": "its authentication State or authorization State in a server-side session object I've already put at a",
    "start": "876649",
    "end": "881990"
  },
  {
    "text": "memory or in a Redis cache doesn't matter it's a server-side stateful object and if you build api's people are",
    "start": "881990",
    "end": "889639"
  },
  {
    "text": "like no they must be stateless because res says it amends is stateless and many customers go to the pain of making that",
    "start": "889639",
    "end": "897079"
  },
  {
    "text": "stateless learning about all of that figuring out how to do that often getting it wrong to realize like hey why",
    "start": "897079",
    "end": "903019"
  },
  {
    "text": "did we do that because we have one server running our API it's like that",
    "start": "903019",
    "end": "908480"
  },
  {
    "text": "makes no sense we only have hundred user speed we don't have more users because we're a very specialized application so",
    "start": "908480",
    "end": "913610"
  },
  {
    "text": "what's the point of doing that yes you can technically you cannot call it a REST API but in practice it still works",
    "start": "913610",
    "end": "919610"
  },
  {
    "text": "an API keeping track of State in a server-side session just works as well as another API of course if you're",
    "start": "919610",
    "end": "926750"
  },
  {
    "text": "building something like this you might want to go for stateless approach because otherwise load balancing is gonna be a pain in the ass to do that",
    "start": "926750",
    "end": "933139"
  },
  {
    "text": "for a lot of servers especially across different zones all over the world that's not gonna work very well and they're stateless",
    "start": "933139",
    "end": "939190"
  },
  {
    "text": "approaches do work but a stateless approach is fastly different from a stateful approach so make sure you do it",
    "start": "939190",
    "end": "945340"
  },
  {
    "text": "for the right reasons you wouldn't be the first one that goes through the pain of moving towards a fully stateless API",
    "start": "945340",
    "end": "951100"
  },
  {
    "text": "system only to realize that it didn't need that in the first place if your people know how to deal with cookies and",
    "start": "951100",
    "end": "957640"
  },
  {
    "text": "server-side session and session replication and session our sticky sessions why not stick to that if that",
    "start": "957640",
    "end": "964420"
  },
  {
    "text": "works for you again there's nothing wrong with both approaches just make sure you switch for your right reasons",
    "start": "964420",
    "end": "970420"
  },
  {
    "text": "make sure you switch for the reasons of scalability not because some people someone read somewhere that the rest api",
    "start": "970420",
    "end": "976810"
  },
  {
    "text": "is always stateless because honestly on the web it doesn't have to be all right",
    "start": "976810",
    "end": "982650"
  },
  {
    "text": "back to our image from here this is server-side sessions this is",
    "start": "982650",
    "end": "988240"
  },
  {
    "text": "what a lot of people hate like the old-school PHP sessions like no we don't want that that's ugly you know want to",
    "start": "988240",
    "end": "994660"
  },
  {
    "text": "keep it on our server you want to move that to the clients easy right on",
    "start": "994660",
    "end": "999760"
  },
  {
    "text": "PowerPoint it's just likely move a few circles down and you're done in practice it's gonna be a lot more difficult in",
    "start": "999760",
    "end": "1006330"
  },
  {
    "text": "practice this is a kind of a secure environment if you store something in memory on the server guess what nobody",
    "start": "1006330",
    "end": "1011850"
  },
  {
    "text": "can touch it well somebody can touch it you have bigger problems is somebody changing an object on the server but if it lives on",
    "start": "1011850",
    "end": "1019170"
  },
  {
    "text": "the client if you push it to a mobile app to a web app the attacker can be like mm that's interesting and they can",
    "start": "1019170",
    "end": "1024329"
  },
  {
    "text": "change whatever they want meaning that you've just changed the security of",
    "start": "1024330",
    "end": "1029339"
  },
  {
    "text": "security properties of that state and that is up to you to protect that state so you're gonna have to provide some",
    "start": "1029340",
    "end": "1035250"
  },
  {
    "text": "protection integrity ideally no integrity it's gonna be mandatory",
    "start": "1035250",
    "end": "1040400"
  },
  {
    "text": "confidentiality if you need it integrity will ensure that nobody can mess with it without you detecting those",
    "start": "1040400",
    "end": "1045930"
  },
  {
    "text": "changes confidentiality here that data is confidential if you put personal information healthcare information in",
    "start": "1045930",
    "end": "1052110"
  },
  {
    "text": "there nobody's gonna be able to extract that from memory from the server and again if they can you have bigger problems but here she puts health care",
    "start": "1052110",
    "end": "1059250"
  },
  {
    "text": "information here it's gonna live on clients on browsers and you need to protect that information you need to",
    "start": "1059250",
    "end": "1065070"
  },
  {
    "text": "ensure that it's protected against unauthorized access how do we do that in practice of course",
    "start": "1065070",
    "end": "1071610"
  },
  {
    "text": "with a Jason left okay Jason web tokens have become the defect of standard there's a few other mechanisms that",
    "start": "1071610",
    "end": "1076860"
  },
  {
    "text": "might do something similar but today it's gonna be a JSON web token whether you like it or not but everybody likes",
    "start": "1076860",
    "end": "1083130"
  },
  {
    "text": "them because they're very cool and colorful like the red purple and blue part pretty awesome can put whatever",
    "start": "1083130",
    "end": "1088890"
  },
  {
    "text": "crap you wants in a jot and it's just gonna work and they even have signatures well if you do it correctly but it's",
    "start": "1088890",
    "end": "1094380"
  },
  {
    "text": "gonna be hard to not have signatures in a chat and the blue part here is a signature and that signature offers you",
    "start": "1094380",
    "end": "1099930"
  },
  {
    "text": "integrity protection so how do you use that well you can create a job and sign",
    "start": "1099930",
    "end": "1105720"
  },
  {
    "text": "it and push it off somewhere else for the client for example and comes back and all of a sudden you have a JSON web",
    "start": "1105720",
    "end": "1111540"
  },
  {
    "text": "token and you can verify that signature you get the claims and you know that these have not been modified that this",
    "start": "1111540",
    "end": "1117240"
  },
  {
    "text": "integrity protection here's a code snippet of how to do that in Java my",
    "start": "1117240",
    "end": "1122520"
  },
  {
    "text": "apologies if you're not a java person I realize this is a probably a telnet conference but bear with me you can",
    "start": "1122520",
    "end": "1128490"
  },
  {
    "text": "probably understand what's happening so you have a trust here the token coming in it's of course not hard-coded is this",
    "start": "1128490",
    "end": "1133800"
  },
  {
    "text": "PowerPoint code not production code you get that from the request somewhere and you decode that to get the claims out",
    "start": "1133800",
    "end": "1140300"
  },
  {
    "text": "and if you do it like this you are absolutely screwed but if I show",
    "start": "1140300",
    "end": "1145740"
  },
  {
    "text": "this example in a training course I did at in the workshop two days ago and I asked like what's the problem here and",
    "start": "1145740",
    "end": "1151290"
  },
  {
    "text": "you have 20 people in the room looking at this example like hmm it takes them a",
    "start": "1151290",
    "end": "1156330"
  },
  {
    "text": "minute or two for basically one meaningful line of code like yeah what's good the problem me and after like two",
    "start": "1156330",
    "end": "1162870"
  },
  {
    "text": "minutes there's one person like yeah I don't think you're verifying the signature and it's like yeah you're correct this is the way to do that but",
    "start": "1162870",
    "end": "1170580"
  },
  {
    "text": "this one gives you the data out of the jot without complete complaining it's like oh yeah here's the chart I'm",
    "start": "1170580",
    "end": "1177030"
  },
  {
    "text": "dressing a throwaway the header and the signature take the data and give you those claims in an object-oriented manner awesome what you should do is",
    "start": "1177030",
    "end": "1184890"
  },
  {
    "text": "verify the signature this is decoding its basics for decoding that's all it does and the bottom example is actually",
    "start": "1184890",
    "end": "1190740"
  },
  {
    "text": "verifying the signature but unless you as a developer first of all reads the documentation",
    "start": "1190740",
    "end": "1196590"
  },
  {
    "text": "which let's be honest nobody ever does so that's not gonna happen and unless you think about I don't",
    "start": "1196590",
    "end": "1202150"
  },
  {
    "text": "anything with a secret here so that's probably not the right way you might not notice that I don't blame you for that",
    "start": "1202150",
    "end": "1209470"
  },
  {
    "text": "it means you need to know about these things I kind of blame the developers of this library because they shouldn't have",
    "start": "1209470",
    "end": "1215350"
  },
  {
    "text": "called a decode it's built by a technical person that knew that the code is actually insecure but they should",
    "start": "1215350",
    "end": "1221110"
  },
  {
    "text": "have called it insecure decode or decode without verifying signature because that tells everyone exactly what it does",
    "start": "1221110",
    "end": "1227500"
  },
  {
    "text": "decode without verifying signature and if you still write that without thinking about what it might mean that's on you",
    "start": "1227500",
    "end": "1233230"
  },
  {
    "text": "not on the library alright pitfall here is Miss handling client sighs session",
    "start": "1233230",
    "end": "1239170"
  },
  {
    "start": "1236000",
    "end": "1236000"
  },
  {
    "text": "data client-side session data seems like as a simple thing like just push it to the client when in reality it's not a",
    "start": "1239170",
    "end": "1245140"
  },
  {
    "text": "reality this means you will have to do a lot of work to make this secure and that is actually more tricky than you might",
    "start": "1245140",
    "end": "1251470"
  },
  {
    "text": "think I encounter a lot of problems with these things and we're gonna talk about jots for a while longer because there's",
    "start": "1251470",
    "end": "1257290"
  },
  {
    "text": "a lot of crazy things going on all right",
    "start": "1257290",
    "end": "1263100"
  },
  {
    "text": "back to Jones the purple part is the",
    "start": "1263370",
    "end": "1269200"
  },
  {
    "text": "interesting part what do you put in there whatever you want a job this spec",
    "start": "1269200",
    "end": "1275920"
  },
  {
    "text": "is nothing more than a way to represent claims securely they call it claims we",
    "start": "1275920",
    "end": "1281170"
  },
  {
    "text": "might call it key value pairs but this is a claim key value you can add arrays",
    "start": "1281170",
    "end": "1286240"
  },
  {
    "text": "and objects and whatever you want it's Jason so whatever Jason allows you can put into a job and it's to exchange them",
    "start": "1286240",
    "end": "1291850"
  },
  {
    "text": "securely because it's signed and can be encrypted and that's what the spec describes how to make that work what you",
    "start": "1291850",
    "end": "1297040"
  },
  {
    "text": "put in there that's up to you you can build anything you want with a job what",
    "start": "1297040",
    "end": "1302530"
  },
  {
    "text": "you'll find in practice is a lot of people doing something like this this is not a good way of doing things this is",
    "start": "1302530",
    "end": "1309190"
  },
  {
    "text": "what you'll find in a bunch of tutorials online to implement authentication in angular you have an API endpoint that",
    "start": "1309190",
    "end": "1316870"
  },
  {
    "text": "accepts user name and password and then it's fel it it's gonna generate a jot a token they call it and they push it to",
    "start": "1316870",
    "end": "1322960"
  },
  {
    "text": "the client and that is gonna be your state this is basically replicating a PHP session or a JSP session or whatever",
    "start": "1322960",
    "end": "1329680"
  },
  {
    "text": "in a job that's a very very bad idea this is",
    "start": "1329680",
    "end": "1335900"
  },
  {
    "text": "often called token-based authentication which makes even less sense because it's not about authentications but a",
    "start": "1335900",
    "end": "1341600"
  },
  {
    "text": "propagating authentication state but sure why is this a problem or why do",
    "start": "1341600",
    "end": "1346640"
  },
  {
    "text": "people do this because people have some experience with traditional server-side",
    "start": "1346640",
    "end": "1351860"
  },
  {
    "text": "sessions and they hate it every fiber in their body - like no we don't want that",
    "start": "1351860",
    "end": "1357110"
  },
  {
    "text": "because when you get a cookie it's gonna be a cookie with a PHP session ID or an airspeed of nuts I don't know what a",
    "start": "1357110",
    "end": "1363230"
  },
  {
    "text": "name for the cookies my apologies but essentially it's gonna result in a lookup somewhere in memory in a database",
    "start": "1363230",
    "end": "1369140"
  },
  {
    "text": "in a Redis cache in God knows where you have to look it up and translate this into what does this mean who is this",
    "start": "1369140",
    "end": "1374540"
  },
  {
    "text": "user like oh it's Philippe awesome yeah he's allowed to make that that's",
    "start": "1374540",
    "end": "1379820"
  },
  {
    "text": "that call so he can make an authorization decision here and give you the response but with angular",
    "start": "1379820",
    "end": "1385520"
  },
  {
    "text": "well angular doesn't really care about these things but with an API it should be stateless so you have no state so you",
    "start": "1385520",
    "end": "1391340"
  },
  {
    "text": "don't have this step so shots are really beautiful there because now you can do this you can send a shot to the API the",
    "start": "1391340",
    "end": "1397370"
  },
  {
    "text": "API can verify the signature take the data out like yeah it's I knew that then your response awesome and a lot of",
    "start": "1397370",
    "end": "1404450"
  },
  {
    "text": "people implement something like this and it's gonna work until you run in there",
    "start": "1404450",
    "end": "1409880"
  },
  {
    "text": "into a scenario where you need to revoke a token because what's gonna what's the",
    "start": "1409880",
    "end": "1415520"
  },
  {
    "text": "lifetime of this token gonna be well here it's 8 hours 12 hours whatever your session lifetime is many people just",
    "start": "1415520",
    "end": "1421640"
  },
  {
    "text": "replicate that for the job like yeah let's make it live for 8 hours probably good there use you can get to the",
    "start": "1421640",
    "end": "1427310"
  },
  {
    "text": "working day and then by the morning they'll be logged out and have to login again but that's totally acceptable and",
    "start": "1427310",
    "end": "1433070"
  },
  {
    "text": "if you have to revoke one of these tokens because if something goes wrong this token remains valid for 8 hours if",
    "start": "1433070",
    "end": "1438860"
  },
  {
    "text": "you get a token now your neighbor steals that two minutes later he's gonna have a",
    "start": "1438860",
    "end": "1444050"
  },
  {
    "text": "token a speller for 7 hours and 58 minutes that's a lot of crap he can post on Facebook in your name so you might",
    "start": "1444050",
    "end": "1451610"
  },
  {
    "text": "want to kill that token like if he knew he has that you can vote say to Facebook like hey please cancel this token in",
    "start": "1451610",
    "end": "1459020"
  },
  {
    "text": "this scenario if somebody comes to you and says like I want to cancel my token you mean like yeah that's a good",
    "start": "1459020",
    "end": "1465350"
  },
  {
    "text": "question grief occasion is virtually impossible here if you haven't and for these upfront because you have",
    "start": "1465350",
    "end": "1472220"
  },
  {
    "text": "no control over that yeah you can try to find workarounds and other people have found workarounds one of the workarounds",
    "start": "1472220",
    "end": "1479330"
  },
  {
    "text": "is you can create a list of blocked tokens revoke tokens because every token",
    "start": "1479330",
    "end": "1485390"
  },
  {
    "text": "can have a unique identifier and you can put that unique identifier on a list and then when the token comes in you can check that list and see like wow this",
    "start": "1485390",
    "end": "1491810"
  },
  {
    "text": "token no he said that this token is not valid anymore someone can accept it this",
    "start": "1491810",
    "end": "1497750"
  },
  {
    "text": "he comes to me and asked me to kill one of his tokens I'm gonna be like oh yeah what's the identifier of the token isn't",
    "start": "1497750",
    "end": "1504230"
  },
  {
    "text": "me like I don't know I don't have it anymore and somebody else has it but I don't know what it is",
    "start": "1504230",
    "end": "1509690"
  },
  {
    "text": "so that's gonna be a problem so I need to keep a list of every token ever issued to every user and maybe every",
    "start": "1509690",
    "end": "1516410"
  },
  {
    "text": "device so I can look up the identifier and put that identifier on a revocation list and then I'm gonna have to check",
    "start": "1516410",
    "end": "1521990"
  },
  {
    "text": "every time a token comes in I'm gonna have to go to that list to check whether this identifier the GTI claim is on that",
    "start": "1521990",
    "end": "1528710"
  },
  {
    "text": "list or not and if it's on that list I'm not gonna accept that token and I'm gonna get something that looks a lot",
    "start": "1528710",
    "end": "1534770"
  },
  {
    "text": "like this now we have this kind of a stateful list keeping track of a number",
    "start": "1534770",
    "end": "1539840"
  },
  {
    "text": "of identifiers and if you have 20,000 API it's gonna have to distribute that list to 20,000 api's or you can build a",
    "start": "1539840",
    "end": "1546140"
  },
  {
    "text": "single point that can verify that for you so now you're building a single point of failure in your stateless super",
    "start": "1546140",
    "end": "1551360"
  },
  {
    "text": "scalable API system and this doesn't really work and there's a few alternative proposals as well but in the",
    "start": "1551360",
    "end": "1557330"
  },
  {
    "text": "end it's gonna come down to a massive problem with this setup and a takeaway here they stopped using juts for",
    "start": "1557330",
    "end": "1565160"
  },
  {
    "text": "sessions because a child is not a session object somebody else wrote a blog post about this all the way in 2015",
    "start": "1565160",
    "end": "1571610"
  },
  {
    "text": "I think because that pattern was already happening back then and when he wrote a blog post it's a very sarcastic tone",
    "start": "1571610",
    "end": "1579470"
  },
  {
    "text": "it's absolutely amazing to read so I highly recommend it and a lot of people started giving him suggestions like yeah",
    "start": "1579470",
    "end": "1585080"
  },
  {
    "text": "but you can build reification like this or like this or it was like leave me alone people so he wrote a follow-up",
    "start": "1585080",
    "end": "1591620"
  },
  {
    "text": "blog post basically to tell people leave me alone and that blog post has a very sarcastic flowchart of why this will",
    "start": "1591620",
    "end": "1597200"
  },
  {
    "text": "never ever work because every flow ends up in usability problems or security",
    "start": "1597200",
    "end": "1602390"
  },
  {
    "text": "problems because this is not a session and if you start building things like refresh",
    "start": "1602390",
    "end": "1608299"
  },
  {
    "text": "tokens and so on you're seriously don't do that the reason it doesn't work is because",
    "start": "1608299",
    "end": "1614330"
  },
  {
    "start": "1613000",
    "end": "1613000"
  },
  {
    "text": "you need a support system to make this work go out this actually comes from the Oh art Road angle a few people's sod is",
    "start": "1614330",
    "end": "1620990"
  },
  {
    "text": "in a lot and Michael we're gonna extract this little bit I forget about everything else and that doesn't end well because in the word Road you have a",
    "start": "1620990",
    "end": "1627860"
  },
  {
    "text": "full supporting ecosystem to make these things work you have refresh tokens and you have a central authority that will",
    "start": "1627860",
    "end": "1633769"
  },
  {
    "text": "decide if it can issue new access tokens and so on and the lifetimes there are short ten minutes would be ideal for a",
    "start": "1633769",
    "end": "1641179"
  },
  {
    "text": "job and if you lose it that's only ten minutes of crap on your facebook wall instead of eight hours and that makes it",
    "start": "1641179",
    "end": "1647630"
  },
  {
    "text": "more manageable you can even reduce a lifetime but you need that supporting ecosystem if you want to make it work",
    "start": "1647630",
    "end": "1653690"
  },
  {
    "text": "like that it's a very very important takeaway here back to our chops shots",
    "start": "1653690",
    "end": "1667090"
  },
  {
    "text": "well there used to be a time when you could build an unsigned job today that's gonna be very very difficult they're",
    "start": "1667090",
    "end": "1673220"
  },
  {
    "text": "gonna be sign traditionally you'll find people explaining jobs with the hmx",
    "start": "1673220",
    "end": "1680059"
  },
  {
    "text": "signature that's the default load you'll find online explain everywhere it's like an H Mac and an H mech is",
    "start": "1680059",
    "end": "1685850"
  },
  {
    "text": "basically a keyed hash it's a hash that takes data as input along with the",
    "start": "1685850",
    "end": "1691730"
  },
  {
    "text": "secret your secret that you use there should not be super-secret H Maki that's",
    "start": "1691730",
    "end": "1697519"
  },
  {
    "text": "not a good secret it also should not be in a PowerPoint slide shown too few hundred people or",
    "start": "1697519",
    "end": "1703340"
  },
  {
    "text": "god knows how many are gonna watch the YouTube video so be careful with that how does an h mark work well let me show",
    "start": "1703340",
    "end": "1710210"
  },
  {
    "text": "you how it works you have the data in a job world the data for an HVAC H makes do all kinds of other things or have all",
    "start": "1710210",
    "end": "1716240"
  },
  {
    "text": "kinds of other use cases but in a jump rolled it's gonna be the header and a payload that's the input I'm gonna feed",
    "start": "1716240",
    "end": "1721669"
  },
  {
    "text": "that into an HVAC algorithm well a library a job library is gonna do that for you but and it's gonna take the data",
    "start": "1721669",
    "end": "1726799"
  },
  {
    "text": "as input along with your secret key which is not super secret a tricky and out comes an age mac like a checksum an",
    "start": "1726799",
    "end": "1735830"
  },
  {
    "text": "integrity check some of that data along I'm gonna share that with the clients in this case along with the data jot that's",
    "start": "1735830",
    "end": "1742600"
  },
  {
    "text": "the blue part being appended to the job and it's gonna be sent out to the other party and whenever a job comes back in",
    "start": "1742600",
    "end": "1747960"
  },
  {
    "text": "you get the data and a signature or the H Mac and you're gonna recalculate at H",
    "start": "1747960",
    "end": "1753009"
  },
  {
    "text": "Mac with the secret key in the data and if the result is the same as a signature",
    "start": "1753009",
    "end": "1758169"
  },
  {
    "text": "attached to the shot then you know that the data was the same as well if the result is different than you know that",
    "start": "1758169",
    "end": "1764710"
  },
  {
    "text": "something changed you know that the data is not the same anymore you don't know what change but we don't care kick it",
    "start": "1764710",
    "end": "1770649"
  },
  {
    "text": "out we don't want that token anymore that's how H max works very easy very straightforward easy to implement",
    "start": "1770649",
    "end": "1777039"
  },
  {
    "text": "because your key your secret is like a string you match your keyword a bit keyboard a bit and that's gonna be your",
    "start": "1777039",
    "end": "1782379"
  },
  {
    "text": "random string don't do it like that but in reality oh no in reality it's worse",
    "start": "1782379",
    "end": "1789659"
  },
  {
    "text": "security people have looked at real systems and they found that people use",
    "start": "1789659",
    "end": "1794850"
  },
  {
    "text": "secrets here that they copy pasted from lock posts if I write the blog post with",
    "start": "1794850",
    "end": "1800230"
  },
  {
    "text": "super secret H Mickey they found production systems using super secret H Mickey as the key for agile tokens",
    "start": "1800230",
    "end": "1806950"
  },
  {
    "text": "that's a very big problem because attackers have lists of blog post keys",
    "start": "1806950",
    "end": "1812320"
  },
  {
    "text": "that they try against chopped tokens and the problem here is that you have a shared secret vote for generating h max",
    "start": "1812320",
    "end": "1819340"
  },
  {
    "text": "and verifying h max and that means the moment somebody else has this secret",
    "start": "1819340",
    "end": "1824879"
  },
  {
    "text": "they can generate arbitrary jobs which will be valid and your application",
    "start": "1824879",
    "end": "1829899"
  },
  {
    "text": "accepts that this also means if your application wants to share a job with another application they're gonna be",
    "start": "1829899",
    "end": "1835960"
  },
  {
    "text": "like yeah give me your secret so I can verify that this is felid and you'll find people are like oh yeah right",
    "start": "1835960",
    "end": "1841330"
  },
  {
    "text": "here we go and now the other application has the ability to generate arbitrary John's that's not how this is supposed",
    "start": "1841330",
    "end": "1847419"
  },
  {
    "text": "to work but many developers don't know that there's something else besides H max there's a second signature algorithm",
    "start": "1847419",
    "end": "1853359"
  },
  {
    "text": "that is much better it's called asymmetric signatures but you need to know about that they need to go to the",
    "start": "1853359",
    "end": "1859210"
  },
  {
    "text": "pain of implementing that which is a lot less fun than H max which is why most tutorials or people don't talk about",
    "start": "1859210",
    "end": "1864940"
  },
  {
    "text": "that a somatic signatures work like this you have the data you push it through a signature algorithm with a private key",
    "start": "1864940",
    "end": "1871760"
  },
  {
    "text": "and out comes a signature and you share that you appended to the job and you send it out and if you want to verify",
    "start": "1871760",
    "end": "1877520"
  },
  {
    "text": "that signature and I push it through a signature verification function it's all in libraries because you don't have to",
    "start": "1877520",
    "end": "1883670"
  },
  {
    "text": "worry about that it depends on the algorithm being used but essentially it's gonna spit out a true or false or",
    "start": "1883670",
    "end": "1888740"
  },
  {
    "text": "whatever your language does and it takes this input the public key it's gonna spit out through or false and if it's",
    "start": "1888740",
    "end": "1895370"
  },
  {
    "text": "true you know that the message has not been changed you know that the signature is felid and the message is not changed",
    "start": "1895370",
    "end": "1900440"
  },
  {
    "text": "compared to when it was created awesome you even know that it was signed by the private key belong to this public",
    "start": "1900440",
    "end": "1907250"
  },
  {
    "text": "key and if it doesn't match either the key is wrong or the message has changed but we don't care in that case we don't",
    "start": "1907250",
    "end": "1913460"
  },
  {
    "text": "want it and this is a much better mechanism because this mechanism allows you to generate shots in one place with",
    "start": "1913460",
    "end": "1919370"
  },
  {
    "text": "a private key that nobody else has it's a private key and the public key",
    "start": "1919370",
    "end": "1926230"
  },
  {
    "text": "everyone can know that everyone should know that now it's probably key everyone that has @p can verify the integrity of a job if",
    "start": "1926230",
    "end": "1933490"
  },
  {
    "text": "you choose sign in with Google for example in the end Google is gonna give",
    "start": "1933490",
    "end": "1938840"
  },
  {
    "text": "you or if it's gonna give the application you're signing into a shot with your identity information it's",
    "start": "1938840",
    "end": "1943940"
  },
  {
    "text": "gonna say like hey this is free bag and this is this Google email address in his Google user ID and Google's gonna sign",
    "start": "1943940",
    "end": "1949340"
  },
  {
    "text": "it with their private key and everyone the Google's public he can verify that JSON web token that's how this is supposed to work you need to use this",
    "start": "1949340",
    "end": "1956360"
  },
  {
    "text": "mechanism in virtually every production use case even if you're building micro",
    "start": "1956360",
    "end": "1963440"
  },
  {
    "text": "services and you control all of them you need to use this every service issuing jobs needs have its own private key",
    "start": "1963440",
    "end": "1969380"
  },
  {
    "text": "because that is how you contain the risk because if one of them gets compromised",
    "start": "1969380",
    "end": "1974450"
  },
  {
    "text": "the other ones don't Imola over like dominos and that's very very important so H max can only be used in a single",
    "start": "1974450",
    "end": "1982460"
  },
  {
    "text": "isolated application what application issuing juts and consuming its own shots yes and H makers useful there every",
    "start": "1982460",
    "end": "1989570"
  },
  {
    "text": "other use case a somatic signatures no questions about it absolutely important",
    "start": "1989570",
    "end": "1996370"
  },
  {
    "text": "all right if you're doing crypto you're dealing",
    "start": "1996670",
    "end": "2002510"
  },
  {
    "text": "with keys you know everyone has ever done crypto know is that dealing with keys is actually the real problem the",
    "start": "2002510",
    "end": "2008270"
  },
  {
    "text": "Kryptos oh I wouldn't say easy but fairly straightforward in a jut rolled",
    "start": "2008270",
    "end": "2014420"
  },
  {
    "text": "it's not different but the spec has a lot of provisions a lot of ways to handle keys again something nobody ever",
    "start": "2014420",
    "end": "2021770"
  },
  {
    "text": "talks about most people handling jobs is like yeah hardcore the key push it in our kit repo",
    "start": "2021770",
    "end": "2026809"
  },
  {
    "text": "ever done that's like no that's not that we have no too intense keys need to be rotated keys need to be changed",
    "start": "2026809",
    "end": "2032299"
  },
  {
    "text": "frequently if you start using a key today they're still using the same key in 2025 you're gonna be in a world of",
    "start": "2032299",
    "end": "2039500"
  },
  {
    "text": "trouble because once enough data has passed or has been processed by a key it becomes possible to analyze or derive",
    "start": "2039500",
    "end": "2046460"
  },
  {
    "text": "information about it and so on and so on that's the dirty details of crypto so what this means is you need to weigh to",
    "start": "2046460",
    "end": "2053090"
  },
  {
    "text": "identify the key used to sign a job because today I might use key a and then we come I use key B and the verifier",
    "start": "2053090",
    "end": "2060470"
  },
  {
    "text": "needs to know what key that you use and a simple mechanism to do that is a que ID claim the key identifier the issuer",
    "start": "2060470",
    "end": "2067878"
  },
  {
    "text": "of the job can include an identifier of the key that should be used to verify the signature so if Google generates a",
    "start": "2067879",
    "end": "2074148"
  },
  {
    "text": "job they could include an identifier that says like oh yeah I use Google's Monday key to verify this or something",
    "start": "2074149",
    "end": "2079580"
  },
  {
    "text": "it's a string you can choose whatever you want for that string that's an identifier that's a simplest mechanism",
    "start": "2079580",
    "end": "2085730"
  },
  {
    "text": "available documented in the JSON web key specification you have other mechanisms",
    "start": "2085730",
    "end": "2090820"
  },
  {
    "text": "more flexible mechanisms because this implies that you know where to find that key another mechanism is a gku claim and",
    "start": "2090820",
    "end": "2098510"
  },
  {
    "text": "a G can you claim contains a URL pointing to a jason that key set adjacent structure containing a set of",
    "start": "2098510",
    "end": "2105980"
  },
  {
    "text": "public keys am i including that you can tell the receiver like hey by the way you should",
    "start": "2105980",
    "end": "2113359"
  },
  {
    "text": "go here to fetch my key files and then you should take the key with this very",
    "start": "2113359",
    "end": "2118490"
  },
  {
    "text": "long random identifier and use that want to verify the signature that's a more",
    "start": "2118490",
    "end": "2123740"
  },
  {
    "text": "flexible mechanism because if I'm issuing juts like this and I want to rotate my keys I can just create a new",
    "start": "2123740",
    "end": "2129590"
  },
  {
    "text": "key pair publish the public key on this location in that set and send out the tokens and everyone receiving them will know like oh you",
    "start": "2129590",
    "end": "2135620"
  },
  {
    "text": "have to go in here fetch the key verify oh this is valid awesome depends on what you're building with",
    "start": "2135620",
    "end": "2140750"
  },
  {
    "text": "that but that's how you exchange key material some people hate keys and Jason got",
    "start": "2140750",
    "end": "2146930"
  },
  {
    "text": "really blame them it's absolutely ugly to put in there and you might want to prefer certificate-based keys again the",
    "start": "2146930",
    "end": "2153650"
  },
  {
    "text": "spec has you covered you have an x5 you claim which you can use to publish x.509",
    "start": "2153650",
    "end": "2159290"
  },
  {
    "text": "certificates TLS certificates basically which also contain a public key so you can point that certificate file and the",
    "start": "2159290",
    "end": "2165740"
  },
  {
    "text": "receiver can fetch that file and use the key to verify that signature awesome",
    "start": "2165740",
    "end": "2172040"
  },
  {
    "text": "right this gives you the flexibility you need to manage keys you can easily rotate keys you can point to various",
    "start": "2172040",
    "end": "2178510"
  },
  {
    "text": "particular piece and you can make this work and if you implement it like this it's gonna take some effort and you're",
    "start": "2178510",
    "end": "2185960"
  },
  {
    "text": "gonna be happy once that's working it's like a key management bit just my boss is gonna be very happy because they",
    "start": "2185960",
    "end": "2192560"
  },
  {
    "text": "totally understand how keys and jots work inside no I'm just kidding however your boss it's not gonna be happy when",
    "start": "2192560",
    "end": "2198590"
  },
  {
    "text": "the attacker comes around because your application it's now kind of dangerous",
    "start": "2198590",
    "end": "2204580"
  },
  {
    "text": "unless you told your application if you find the G key you claim just go there fetch the keys take the scheme it is a",
    "start": "2204580",
    "end": "2210170"
  },
  {
    "text": "key identifier I verify the signature and accept the claims that are in there so the attacker if he figures that out",
    "start": "2210170",
    "end": "2215690"
  },
  {
    "text": "and now send you a token with the cheeki you claim point into evil on example come where you'll find the keys from the",
    "start": "2215690",
    "end": "2222530"
  },
  {
    "text": "attacker then you find the key with this key identifier which is gonna be in there you verify the signature which is",
    "start": "2222530",
    "end": "2228290"
  },
  {
    "text": "gonna verify because the attacker has crafted that token with that private and sign it with this private key and",
    "start": "2228290",
    "end": "2233540"
  },
  {
    "text": "published all that key material and you'll find applications that don't verify or don't restrict the location of",
    "start": "2233540",
    "end": "2239870"
  },
  {
    "text": "the G key you claim they don't restrict where they fetch information from and that creates a wide open hole that means",
    "start": "2239870",
    "end": "2246320"
  },
  {
    "text": "you went through a lot of effort to implement that but have created a massive vulnerability which is not a",
    "start": "2246320",
    "end": "2251450"
  },
  {
    "text": "good thing so this is really bad you shouldn't do that you can try to restrict hosts like oh I",
    "start": "2251450",
    "end": "2257840"
  },
  {
    "text": "only want to load it from here or from there it's gonna be really difficult to lock this down that's why real world",
    "start": "2257840",
    "end": "2264590"
  },
  {
    "text": "scenarios use different mechanisms for example open ID has a discovery phase where you loads basically a file",
    "start": "2264590",
    "end": "2271130"
  },
  {
    "text": "from a well specified fixed location from the identity provider so if you log in with Google you go to accounts of",
    "start": "2271130",
    "end": "2277640"
  },
  {
    "text": "google.com slash top-level slash operating configuration and gonna find a configuration file and such a",
    "start": "2277640",
    "end": "2283190"
  },
  {
    "text": "configuration file will contain a URI for the JSON web key set and will actually point you there and this is a",
    "start": "2283190",
    "end": "2289670"
  },
  {
    "text": "very fixed configuration mechanism that cannot be tampered with by an attacker",
    "start": "2289670",
    "end": "2295070"
  },
  {
    "text": "creating arbitrary charts it's very very important to be aware of these things and to prevent these",
    "start": "2295070",
    "end": "2300950"
  },
  {
    "start": "2297000",
    "end": "2297000"
  },
  {
    "text": "vulnerabilities you should prepare to handle key rotation don't use the same key over and over again rotate them",
    "start": "2300950",
    "end": "2307370"
  },
  {
    "text": "frequently and make sure you have a mechanism to deal with those things in practice alright let's keep you awake",
    "start": "2307370",
    "end": "2316820"
  },
  {
    "text": "here right light should add some stroboscope effect no all right enough",
    "start": "2316820",
    "end": "2324290"
  },
  {
    "text": "of our charts let's talk about cookies",
    "start": "2324290",
    "end": "2331060"
  },
  {
    "start": "2329000",
    "end": "2329000"
  },
  {
    "text": "you can answer that solely fine let's talk about cookies versus tokens the old",
    "start": "2331060",
    "end": "2338150"
  },
  {
    "text": "way of doing things cookie with an ID that's a PHP way the dirty way nobody likes and the cool and hip way is",
    "start": "2338150",
    "end": "2345140"
  },
  {
    "text": "authorization headers with bearer tokens that's what angular applications typically do what first is for traditional applications sitting they do",
    "start": "2345140",
    "end": "2352390"
  },
  {
    "text": "some people claim that this cannot work with an API and are absolutely wrong",
    "start": "2352390",
    "end": "2357830"
  },
  {
    "text": "there's no reason this does not work with an API I can know because I run systems that actually do that of course",
    "start": "2357830",
    "end": "2364640"
  },
  {
    "text": "they both have pros and cons but why stop there why not put a child in a",
    "start": "2364640",
    "end": "2369830"
  },
  {
    "text": "cookie or token in a cookie and an ID and authorization header we can do that right both headers contain a string",
    "start": "2369830",
    "end": "2379030"
  },
  {
    "text": "nobody tells you what that string should be nobody tells you what that value should be that is something you can",
    "start": "2379030",
    "end": "2384080"
  },
  {
    "text": "decide in your applications and this decision seems ridiculous like why should I",
    "start": "2384080",
    "end": "2389900"
  },
  {
    "text": "of course I'm gonna use the authorization error what are you talking about but it actually matters a lot by",
    "start": "2389900",
    "end": "2396620"
  },
  {
    "text": "the way an ID in an authorization header seems very strange but she use all out reference tokens these",
    "start": "2396620",
    "end": "2402260"
  },
  {
    "text": "are basically identifiers that translate into metadata on the server by the authorization server so it's basically",
    "start": "2402260",
    "end": "2408770"
  },
  {
    "text": "an identifier in an authorization header frequently seen in those scenarios but what I really want to talk about is that",
    "start": "2408770",
    "end": "2414559"
  },
  {
    "text": "cookies are the only thing that works really well on the web because the browser handles cookies automatically",
    "start": "2414559",
    "end": "2421039"
  },
  {
    "text": "the browser is very compatible with cookies and many applications don't care",
    "start": "2421039",
    "end": "2428089"
  },
  {
    "text": "about that it's like I'm saying I'm an angular app or I react up I send xhr",
    "start": "2428089",
    "end": "2433280"
  },
  {
    "text": "requests and I can add whatever header as I want so I don't need cookies and you might be right",
    "start": "2433280",
    "end": "2438579"
  },
  {
    "text": "maybe maybe it works for you and for you but maybe not for you because you're",
    "start": "2438579",
    "end": "2444109"
  },
  {
    "text": "building an application actually loads content from a server with HTML elements willing me the first one to load images",
    "start": "2444109",
    "end": "2450309"
  },
  {
    "text": "from a protected resource like hey these images are private to a user and I need to make some authorization decisions",
    "start": "2450309",
    "end": "2456650"
  },
  {
    "text": "when accessing that file and guess what's not there when you make a request with an image tag a custom motorisation",
    "start": "2456650",
    "end": "2463430"
  },
  {
    "text": "header there's no way to add a custom authorization hundred to load an image or a video or an audio file with the",
    "start": "2463430",
    "end": "2469279"
  },
  {
    "text": "HTML elements sure if you start fetching the data separately and loading them in there that might work but with HTML",
    "start": "2469279",
    "end": "2475490"
  },
  {
    "text": "elements there's nothing there but cookies are there and I see this often in real world applications where they",
    "start": "2475490",
    "end": "2483200"
  },
  {
    "text": "need to rely on this behavior authorization on these skulls and they need cookies for that and if you're",
    "start": "2483200",
    "end": "2488359"
  },
  {
    "text": "fully invested in the authorization header and you'll be like oh crap we need cookies so we're gonna add a",
    "start": "2488359",
    "end": "2493460"
  },
  {
    "text": "complementary mechanism next to this authorization header to also send a cookie and it's gonna be like why",
    "start": "2493460",
    "end": "2499579"
  },
  {
    "text": "and many people regret their decision to go with the authorization header so think about your use cases if you need this a cookie might be a better choice",
    "start": "2499579",
    "end": "2506539"
  },
  {
    "text": "you can still put in an access token or a jot or whatever in a cookie sure but",
    "start": "2506539",
    "end": "2511849"
  },
  {
    "text": "it's the brass you're sending this on every request that's the differentiator here and there's that second place where",
    "start": "2511849",
    "end": "2517609"
  },
  {
    "text": "this really happens a lot and that's WebSocket connections because when you open a web socket or service and defense",
    "start": "2517609",
    "end": "2523549"
  },
  {
    "text": "for that matter you're gonna type new WebSocket with the URL and the browser is gonna handle everything for you",
    "start": "2523549",
    "end": "2528829"
  },
  {
    "text": "the handshake and upgrade or the the protocol change and all of that is hand",
    "start": "2528829",
    "end": "2534020"
  },
  {
    "text": "by the browser and guess what the browser does not send an authorization header with your custom bear access",
    "start": "2534020",
    "end": "2540920"
  },
  {
    "text": "token what the browser does sent if they are available are cookies so again many",
    "start": "2540920",
    "end": "2547610"
  },
  {
    "text": "people needing web circuit connections use the authorization header and I have to start doing this ticket system like",
    "start": "2547610",
    "end": "2553190"
  },
  {
    "text": "I'm gonna make an API call to get a one-time ticket and at one time thinking I can put in the URL of my WebSocket",
    "start": "2553190",
    "end": "2558380"
  },
  {
    "text": "connection so I can authorize that call I'm not joking these things happen in practice so again that might be one of",
    "start": "2558380",
    "end": "2566390"
  },
  {
    "text": "the reasons to consider the use of cookies I'm not saying that cookies are perfect they have their own set of",
    "start": "2566390",
    "end": "2571910"
  },
  {
    "text": "problems but they also have a very valid use case in web applications just to put",
    "start": "2571910",
    "end": "2577640"
  },
  {
    "text": "this in next to each other goat headers your boat basically headers can contain anything you want",
    "start": "2577640",
    "end": "2584180"
  },
  {
    "text": "they're just strings cookies work really well within a single domain if you're",
    "start": "2584180",
    "end": "2590000"
  },
  {
    "text": "accessing ten API is on different domains cookies are gonna be your worst nightmare stay away from them absolutely",
    "start": "2590000",
    "end": "2595390"
  },
  {
    "text": "not rotation header you can send that anywhere you want cookies are handled",
    "start": "2595390",
    "end": "2600470"
  },
  {
    "text": "automatically which is a good thing the authorization header well it's a good and a bad thing because it also leads to",
    "start": "2600470",
    "end": "2605780"
  },
  {
    "text": "attacks that's for the record I need to be clear here but the other one requires custom code to get information out of",
    "start": "2605780",
    "end": "2612230"
  },
  {
    "text": "responses stored somewhere in the browser and reattach it to outdoor requests code that you need to make",
    "start": "2612230",
    "end": "2617660"
  },
  {
    "text": "decisions for and might contain vulnerabilities and finally cookies are always present and that's I think their",
    "start": "2617660",
    "end": "2624260"
  },
  {
    "text": "main benefit in web applications they're present on every request sent by the",
    "start": "2624260",
    "end": "2629630"
  },
  {
    "text": "browser while the authorization header is only present on requests you can control probably in your JavaScript",
    "start": "2629630",
    "end": "2635090"
  },
  {
    "text": "application all right so don't underestimate the impact of session",
    "start": "2635090",
    "end": "2641360"
  },
  {
    "start": "2638000",
    "end": "2638000"
  },
  {
    "text": "transport really really important I call it session transfer because you're transporting our authorization state or",
    "start": "2641360",
    "end": "2648230"
  },
  {
    "text": "authentication state back to the backend one way or another we need to do that whether you like it or not all right are",
    "start": "2648230",
    "end": "2656690"
  },
  {
    "text": "so good I have a few more not too many one really big one and then a few small",
    "start": "2656690",
    "end": "2662060"
  },
  {
    "text": "ones here's the big one the big one is about cross-site",
    "start": "2662060",
    "end": "2668960"
  },
  {
    "text": "scripting cross-site scripting is this really nasty attack in web applications",
    "start": "2668960",
    "end": "2673970"
  },
  {
    "text": "everyone has it it's like an opinion everyone has it well people don't like",
    "start": "2673970",
    "end": "2679520"
  },
  {
    "text": "it when they have it or sure anyway the problem here is that if you store your",
    "start": "2679520",
    "end": "2685940"
  },
  {
    "text": "custom their token thingy in local storage you'll find people arguing like hold on you're doing what now because if",
    "start": "2685940",
    "end": "2693560"
  },
  {
    "text": "I have a cross-site scripting vulnerability in your application I can break in I can do local storage that gets all the keys and then get all the",
    "start": "2693560",
    "end": "2699890"
  },
  {
    "text": "data out of local storage you ship it off somewhere else and now I have your access token that's a bad thing so a",
    "start": "2699890",
    "end": "2705140"
  },
  {
    "text": "fine advice like this like you know what why not put that token in an HTTP only cookie because then JavaScript cannot",
    "start": "2705140",
    "end": "2711710"
  },
  {
    "text": "read it and you're safe from cross-site scripting attacks awesome right HTTP only cookies seem",
    "start": "2711710",
    "end": "2718640"
  },
  {
    "text": "like a wonderful thing but they're really really really nuts they hide a",
    "start": "2718640",
    "end": "2724850"
  },
  {
    "text": "symptom they look secure from the outside sure until you push it and it's",
    "start": "2724850",
    "end": "2730160"
  },
  {
    "text": "like oh apparently it doesn't work very well because an age to be only cookie allows you to hide a value from",
    "start": "2730160",
    "end": "2736460"
  },
  {
    "text": "JavaScript sure good but the real problem is across at scripting attack",
    "start": "2736460",
    "end": "2742130"
  },
  {
    "text": "the fact that the attacker can inject code and execute that code in your application I like to compare the three",
    "start": "2742130",
    "end": "2748430"
  },
  {
    "text": "aha to a house let's say you have a nice house you have some jewelry or your wife",
    "start": "2748430",
    "end": "2753830"
  },
  {
    "text": "has some drawer what I'll leave it in the middle I'm not judging anyone here and if you put it on the kitchen table",
    "start": "2753830",
    "end": "2762350"
  },
  {
    "text": "let's call it local storage anyone that breaks in can easily snatch the jewelry and run away so you might want to get a",
    "start": "2762350",
    "end": "2767930"
  },
  {
    "text": "nice safe and put it in there and hide the safes and nobody can ever touch it awesome but Peugeot skins kids can still get in",
    "start": "2767930",
    "end": "2775430"
  },
  {
    "text": "they can still break in they can trash your house deface all of the walls they can hold parties they can do whatever",
    "start": "2775430",
    "end": "2781370"
  },
  {
    "text": "they want and that's a real problem here and taking away your jewelry doesn't fix the fact that you should probably get",
    "start": "2781370",
    "end": "2787250"
  },
  {
    "text": "better locks or put bars in front of the window or whatever and that's the same with cross-site scripting once the",
    "start": "2787250",
    "end": "2792890"
  },
  {
    "text": "attacker is in you're lost once the attacker is executing code they can do whatever they want using OAuth or",
    "start": "2792890",
    "end": "2799640"
  },
  {
    "text": "some token service or whatever they can just go there and get a new token and ship that off they can show a login form",
    "start": "2799640",
    "end": "2805640"
  },
  {
    "text": "today's like oh oh you're logged out enter credentials again in ruse it's like okay off they go password manager",
    "start": "2805640",
    "end": "2812690"
  },
  {
    "text": "will even autocomplete it because it's in the same domain of your application and it looks legitimate and that's a",
    "start": "2812690",
    "end": "2818990"
  },
  {
    "text": "real problem and I cannot stress this enough because this keeps coming up over and over again usually I don't point out",
    "start": "2818990",
    "end": "2825650"
  },
  {
    "text": "these things by myself but if people ask me like can you take a look at my blog post I'm not gonna say like yeah",
    "start": "2825650",
    "end": "2830660"
  },
  {
    "text": "everything is fine if they say things like this these patterns are often people often worry about that for",
    "start": "2830660",
    "end": "2837440"
  },
  {
    "text": "nothing if you're building something like this my advice is put your crap and local",
    "start": "2837440",
    "end": "2843050"
  },
  {
    "text": "storage you know why because in Scott it's gonna cost you two minutes to do that two minutes and you're done and the",
    "start": "2843050",
    "end": "2849170"
  },
  {
    "text": "time you save by having to read not having to research alternatives let's say a day or two you can get distracted",
    "start": "2849170",
    "end": "2856430"
  },
  {
    "text": "along the way I want you to spend those two days all learning how to prevent",
    "start": "2856430",
    "end": "2862220"
  },
  {
    "text": "cross-site scripting in your application and auditing your code because that is much effort much better spent on those",
    "start": "2862220",
    "end": "2870080"
  },
  {
    "text": "things that I'm trying to find a way to hide data in an HTTP only cookie one way or another it doesn't matter cross-site",
    "start": "2870080",
    "end": "2877250"
  },
  {
    "text": "scripting means you lost the attacker can do whatever they want as far as you're concerned the attacker is a legitimate application on that point on",
    "start": "2877250",
    "end": "2884080"
  },
  {
    "text": "so try to prevent cross-site scripting much more important all right what about",
    "start": "2884080",
    "end": "2892310"
  },
  {
    "text": "this should your API accept data like that what do you think No",
    "start": "2892310",
    "end": "2899570"
  },
  {
    "text": "why not it sure it looks like sequel",
    "start": "2899570",
    "end": "2905750"
  },
  {
    "text": "injection well in this case I kindly agreed because you probably expect a number so it doesn't make sense to accept something like this brings us",
    "start": "2905750",
    "end": "2912290"
  },
  {
    "text": "here something that a lot of people start with I like to end with that lack of input validation you need to have",
    "start": "2912290",
    "end": "2917690"
  },
  {
    "text": "input validation if you accept whatever crap somebody gives you it's gonna not gonna end very well input validation",
    "start": "2917690",
    "end": "2924050"
  },
  {
    "text": "should be as strict as possible without triggering false positives awesome what",
    "start": "2924050",
    "end": "2931640"
  },
  {
    "text": "about this Ruby API accept that piece of data yes",
    "start": "2931640",
    "end": "2937470"
  },
  {
    "text": "why let's see it sequel injection you",
    "start": "2937470",
    "end": "2944609"
  },
  {
    "text": "change your mind quite quickly it's like no no sequel injection in lo sequel yeah no except that one that's good sequel",
    "start": "2944609",
    "end": "2950970"
  },
  {
    "text": "injection the I'm messing with you I'm totally messing with you you're absolutely correct this is a valid email",
    "start": "2950970",
    "end": "2956910"
  },
  {
    "text": "address this is a valid email s if your API is implement like hey let's validate this email address and be like yeah",
    "start": "2956910",
    "end": "2963180"
  },
  {
    "text": "valid BAM sequel injection well if you have sequel injection because of this you have another problem I'm gonna talk",
    "start": "2963180",
    "end": "2970170"
  },
  {
    "text": "about that here but this is to show you that input validation will never save your but input validation cannot prevent",
    "start": "2970170",
    "end": "2976859"
  },
  {
    "text": "vulnerabilities input validation is in unison necessary first line of defense",
    "start": "2976859",
    "end": "2982800"
  },
  {
    "text": "what I like to call to keep the crazy out that's what it does it rejects known",
    "start": "2982800",
    "end": "2991170"
  },
  {
    "text": "bad data but in the end every vulnerability has better countermeasures",
    "start": "2991170",
    "end": "2996930"
  },
  {
    "text": "an input validation its parameterization for sequel queries and its ultimate encoding for cross-site scripting and",
    "start": "2996930",
    "end": "3002300"
  },
  {
    "text": "it's gotta know what knows what for other vulnerabilities input validation alone will never be their primary",
    "start": "3002300",
    "end": "3008810"
  },
  {
    "text": "defense but you need to have it anyway because you don't want five megabytes of password data to be acceptable data you",
    "start": "3008810",
    "end": "3014960"
  },
  {
    "text": "want to reject that and say like let's enforce a sensible length like maybe 100 characters but not God knows how many",
    "start": "3014960",
    "end": "3021349"
  },
  {
    "text": "and that is really really important to take away what happens when chocolate",
    "start": "3021349",
    "end": "3030260"
  },
  {
    "text": "ice cream goes wrong well even my kids know it's not ice creams okay seriously",
    "start": "3030260",
    "end": "3037250"
  },
  {
    "text": "what happens when things go wrong in a lot of cases a seemingly silly",
    "start": "3037250",
    "end": "3044089"
  },
  {
    "text": "vulnerability in an unimportant part of the application leads to a massive compromise like here he's a search",
    "start": "3044089",
    "end": "3049970"
  },
  {
    "text": "feature oh yeah crap that search feature had a cross-site scripting vulnerability and now our entire application is",
    "start": "3049970",
    "end": "3055730"
  },
  {
    "text": "compromised oopsie that's not a good thing and that happens and that brings me to the last bit for",
    "start": "3055730",
    "end": "3061990"
  },
  {
    "text": "compartmentalization or a lack of compartmentalization you need to compartmentalize",
    "start": "3061990",
    "end": "3067520"
  },
  {
    "start": "3062000",
    "end": "3062000"
  },
  {
    "text": "your applications we still think too much about full applications split it up in smaller parts if you have different",
    "start": "3067520",
    "end": "3074210"
  },
  {
    "text": "user levels think about building different applications if you have an admin part usually admin parts are very",
    "start": "3074210",
    "end": "3081290"
  },
  {
    "text": "separate they don't overlap much with other functionality so build a separate admin application and deploy that",
    "start": "3081290",
    "end": "3087650"
  },
  {
    "text": "application on a different host users raster grade comm admin dot R estimated",
    "start": "3087650",
    "end": "3094580"
  },
  {
    "text": "come why because the browser understands different hosts and domains and will isolate them from each other and if",
    "start": "3094580",
    "end": "3100790"
  },
  {
    "text": "something gets compromised in public that respirator come it will not affect the other parts of the application it will not trick an admin into logging in",
    "start": "3100790",
    "end": "3107900"
  },
  {
    "text": "in the public part because they are used to login to the admin part and my password manager understands that as",
    "start": "3107900",
    "end": "3113060"
  },
  {
    "text": "well I will not fill out my credentials in public only in admin and that's",
    "start": "3113060",
    "end": "3118070"
  },
  {
    "text": "really important that's something that today almost nobody does we still build large applications yes it's a micro",
    "start": "3118070",
    "end": "3124370"
  },
  {
    "text": "service but everything runs under the same domain and there's no isolation whatsoever the browser doesn't",
    "start": "3124370",
    "end": "3129380"
  },
  {
    "text": "understand parts browsers understand domains well actually scheme host and port but",
    "start": "3129380",
    "end": "3135950"
  },
  {
    "text": "the scheme is HTTPS and the port is 4 4 3 so it's about domains today so compartmentalize split things up and",
    "start": "3135950",
    "end": "3143000"
  },
  {
    "text": "question everything it's all about asking questions and if you don't know",
    "start": "3143000",
    "end": "3148070"
  },
  {
    "text": "the answer to the question ask someone with more security knowledge and if they don't know the answer in your company",
    "start": "3148070",
    "end": "3153920"
  },
  {
    "text": "tell them to go ask someone else because a lot of people are like yeah it's",
    "start": "3153920",
    "end": "3159800"
  },
  {
    "text": "probably ok we don't really know it's gonna be fine and three years later and the press releases like yeah apparently",
    "start": "3159800",
    "end": "3166370"
  },
  {
    "text": "we had a problem yeah you should have asked someone I know we don't like to",
    "start": "3166370",
    "end": "3171800"
  },
  {
    "text": "admit that we don't know things but you really that's the only way forward dare to ask questions and if you don't know",
    "start": "3171800",
    "end": "3177320"
  },
  {
    "text": "the answer go find someone who has all the answers that's basically my takeaway",
    "start": "3177320",
    "end": "3183020"
  },
  {
    "text": "message thank you very much for being here thank you for staying [Applause]",
    "start": "3183020",
    "end": "3193989"
  }
]