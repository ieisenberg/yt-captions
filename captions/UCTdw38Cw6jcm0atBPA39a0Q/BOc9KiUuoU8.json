[
  {
    "start": "0",
    "end": "57000"
  },
  {
    "text": "who's new to NDC London just curious first time quite a few that's good this",
    "start": "3420",
    "end": "9370"
  },
  {
    "text": "is one of my favourite conferences in DC so I'm glad to be back here lining up Scott Allen what I wanted to talk to you",
    "start": "9370",
    "end": "15190"
  },
  {
    "text": "about were the opinions that I have formed working with a couple different teams building asp.net core applications",
    "start": "15190",
    "end": "21910"
  },
  {
    "text": "over the last couple years so I think most of the opinions that I've formed that I put into this talk are broadly",
    "start": "21910",
    "end": "28989"
  },
  {
    "text": "applicable but of course you can take everything with a grain of salt and figure out what works best for your team",
    "start": "28989",
    "end": "34140"
  },
  {
    "text": "if I were to categorize all these different opinions I would put them in a few different categories like how to",
    "start": "34140",
    "end": "40600"
  },
  {
    "text": "organize your solutions and projects how to organize your startup code for asp.net core some simple rules for",
    "start": "40600",
    "end": "47859"
  },
  {
    "text": "controllers for client code for c-sharp code for managing views and for writing",
    "start": "47859",
    "end": "54070"
  },
  {
    "text": "the unit test so let's get started talking about solutions and projects basically when you start building an",
    "start": "54070",
    "end": "61390"
  },
  {
    "start": "57000",
    "end": "57000"
  },
  {
    "text": "application or a system with asp.net core how should you organize your",
    "start": "61390",
    "end": "67149"
  },
  {
    "text": "solution where should projects go what sort of file system structure should you have because one of the interesting",
    "start": "67149",
    "end": "72490"
  },
  {
    "text": "things about Microsoft open sourcing so many pieces of dotnet core and other",
    "start": "72490",
    "end": "77530"
  },
  {
    "text": "frameworks is not only that you get to see the source code for a particular framework weave but you know we've",
    "start": "77530",
    "end": "82990"
  },
  {
    "text": "always been able to do that with Addie compiler we've always been able to get to the source code well we haven't necessarily always been able to do is",
    "start": "82990",
    "end": "89500"
  },
  {
    "text": "look at the bigger picture look at the project structure look at how Microsoft lays things out on the file system how",
    "start": "89500",
    "end": "95170"
  },
  {
    "text": "they organize their projects what they actually check in to the source code repository as well as how they write",
    "start": "95170",
    "end": "100270"
  },
  {
    "text": "unit tasks and even the unit tests I found extremely valuable because then you can read through the happy day",
    "start": "100270",
    "end": "105609"
  },
  {
    "text": "scenarios for the framework and see how it's supposed to work and what's supposed to break but if you go into",
    "start": "105609",
    "end": "111100"
  },
  {
    "text": "every github repository for a dotnet core framework or a dotnet core",
    "start": "111100",
    "end": "116710"
  },
  {
    "text": "application you'll see a lot of consistency in how that repository is",
    "start": "116710",
    "end": "121960"
  },
  {
    "text": "structured at the top level you'll always find a source folder so yes all of the projects will go underneath that",
    "start": "121960",
    "end": "127570"
  },
  {
    "text": "source folder they'll always be a solution file by the way in the root of the repository that makes it really easy",
    "start": "127570",
    "end": "133570"
  },
  {
    "text": "for a new developer to walk up and get plone that repository and immediately find a solution file or",
    "start": "133570",
    "end": "140630"
  },
  {
    "text": "sometimes multiple solution files to click on and open that up and get it running in Visual Studio it'll typically",
    "start": "140630",
    "end": "147410"
  },
  {
    "text": "find a test folder for your unit test a build folder for build related scripts and build related tools there's usually",
    "start": "147410",
    "end": "154400"
  },
  {
    "text": "samples there's documentation sometimes there's also a folder for deployment",
    "start": "154400",
    "end": "160100"
  },
  {
    "text": "with deployment scripts and provisioning scripts to set up something in the cloud so I took that approach also on my",
    "start": "160100",
    "end": "167000"
  },
  {
    "text": "asp.net core projects and I found it very valuable because it just becomes familiar then when you're working in",
    "start": "167000",
    "end": "172940"
  },
  {
    "text": "this ecosystem if I walk up to something that's built in net core I expect to find a solution file in the root I",
    "start": "172940",
    "end": "179240"
  },
  {
    "text": "expect to see a source folder in a test folder and I know exactly where to start drilling in if I want to find this unit",
    "start": "179240",
    "end": "185390"
  },
  {
    "text": "test as well as typically a documentation folder the one caveat here",
    "start": "185390",
    "end": "190400"
  },
  {
    "text": "those of you that have used visual studio to work on asp.net core and a huge visual studio for a long time know",
    "start": "190400",
    "end": "197630"
  },
  {
    "text": "that that solution Explorer window that's currently on the slide is showing",
    "start": "197630",
    "end": "202660"
  },
  {
    "text": "it's a lie right it's not sure it's not providing a faithful representation of",
    "start": "202660",
    "end": "208160"
  },
  {
    "text": "the actual file system if I right click and solution Explorer and say create new folder it doesn't create a folder on the",
    "start": "208160",
    "end": "214430"
  },
  {
    "text": "physical disk it creates a virtual solution folder and stuff I put in there it can be anywhere in the repository but",
    "start": "214430",
    "end": "220820"
  },
  {
    "text": "Visual Studio 2017 there is this nice feature that not many people know about in the solution Explorer window there's",
    "start": "220820",
    "end": "228080"
  },
  {
    "text": "a little toolbar icon you can click on called solutions and folders which switches solution Explorer into a",
    "start": "228080",
    "end": "234709"
  },
  {
    "text": "physical view of the file system so now what you see is a faithful representation of how you structured",
    "start": "234709",
    "end": "240290"
  },
  {
    "text": "your directories and where your projects live and it's very easy now to",
    "start": "240290",
    "end": "245420"
  },
  {
    "text": "right-click and say add a folder and that folder actually gets created in the location that you thought it was created",
    "start": "245420",
    "end": "250790"
  },
  {
    "text": "so you use the folder view also include",
    "start": "250790",
    "end": "256040"
  },
  {
    "text": "samples so if you're building something that is a library that other people are using your new get package to consume",
    "start": "256040",
    "end": "262760"
  },
  {
    "text": "that library and they're trying to figure out how it worked how it works even its if it's for your internal company it's very useful",
    "start": "262760",
    "end": "269569"
  },
  {
    "text": "be able to go into a sample just to see some sample code on the expected usage of the framework that you've created and",
    "start": "269569",
    "end": "276039"
  },
  {
    "text": "if you look through most of the Microsoft repositories again if you're trying to understand some specific",
    "start": "276039",
    "end": "281479"
  },
  {
    "text": "pieces of asp.net core dotnet core you're trying to find out for example how does cookie authentication actually",
    "start": "281479",
    "end": "287629"
  },
  {
    "text": "work underneath the hood what are the different ways I can configure it if you go into the github asp.net core security",
    "start": "287629",
    "end": "294979"
  },
  {
    "text": "repo there's a ton of sample showing different scenarios for using cookies and using dot tokens and using Open ID",
    "start": "294979",
    "end": "301550"
  },
  {
    "text": "Connect and those are all very valuable to people that have to consume that nougat package or those packages and try",
    "start": "301550",
    "end": "308180"
  },
  {
    "text": "to put them to work questions so far since the content you expected when you",
    "start": "308180",
    "end": "313849"
  },
  {
    "text": "walked in this morning yes okay at least a few people in the affirmative there",
    "start": "313849",
    "end": "321039"
  },
  {
    "text": "I'm also a big believer in checking in any scripts that might help during",
    "start": "321039",
    "end": "327379"
  },
  {
    "text": "development so for example if you're using the entity framework or and you're a developer who asked to always check in",
    "start": "327379",
    "end": "334129"
  },
  {
    "text": "some new model code entity code and then create a migration and then add update the database and so forth it's nice just",
    "start": "334129",
    "end": "341209"
  },
  {
    "text": "to have scripts to do those sort of repetitive tasks that will take some of the guessing and work out of what",
    "start": "341209",
    "end": "348379"
  },
  {
    "text": "directory do I go to to run this because you know this particular solution you might not run the might think the dotnet",
    "start": "348379",
    "end": "355039"
  },
  {
    "text": "executable to create a migration from the web project you know someone might",
    "start": "355039",
    "end": "360169"
  },
  {
    "text": "have it set up for a different project that actually is referenced by the web project so you can check in scripts even",
    "start": "360169",
    "end": "367789"
  },
  {
    "text": "this simple that says okay I want to add a migration so we're gonna change over into the data project we're gonna run AF",
    "start": "367789",
    "end": "373999"
  },
  {
    "text": "migrations and add your migration you just pass in a name then we'll do the database update and then well thanks it",
    "start": "373999",
    "end": "380119"
  },
  {
    "text": "out of here and also there's another script here a developer sits down and just wants to start from scratch start",
    "start": "380119",
    "end": "385699"
  },
  {
    "text": "with an entirely new fresh DB so a script to just recreate the database from scratch and reseed it with some",
    "start": "385699",
    "end": "391399"
  },
  {
    "text": "initial data there's been very valuable in development and the reason this sorry",
    "start": "391399",
    "end": "396949"
  },
  {
    "text": "to go back for a second the reason this works so well is that the dotnet tooling so command-line oriented but it's",
    "start": "396949",
    "end": "403460"
  },
  {
    "text": "actually quite nice to be able to automate a lot of these processes a lot easier without figuring out how to",
    "start": "403460",
    "end": "409250"
  },
  {
    "text": "create a visual studio extension or something like that also I am a big",
    "start": "409250",
    "end": "415970"
  },
  {
    "text": "believer in including deployment scripts and templates so if I'm building an asp.net core application that gets",
    "start": "415970",
    "end": "421250"
  },
  {
    "text": "deployed in AWS or an azure app service then I went to have some script or some",
    "start": "421250",
    "end": "426620"
  },
  {
    "text": "template as a developer that is checked into source control that I can execute to provision my environment in the cloud",
    "start": "426620",
    "end": "433520"
  },
  {
    "text": "that helps me the first time when I'm trying to get set up and started with the project but it also includes and",
    "start": "433520",
    "end": "439340"
  },
  {
    "text": "this is just a screenshot of exporting and as a resource manager template out of Azure that describes all the",
    "start": "439340",
    "end": "445730"
  },
  {
    "text": "properties that have to get set on an app service if I'm a web developer who let's say is building a asp.net core web",
    "start": "445730",
    "end": "452720"
  },
  {
    "text": "application and the communicate server a service boss to some other application and I know that I'm adding a new feature",
    "start": "452720",
    "end": "458870"
  },
  {
    "text": "that's going to require a new service bus queue or it's going to retire require a new configuration entry for",
    "start": "458870",
    "end": "465230"
  },
  {
    "text": "that app service then I don't want to be logging into a portal or using a UI to make those changes in the cloud that",
    "start": "465230",
    "end": "471080"
  },
  {
    "text": "only worked for me and then remember to document that process for someone else puts them in you have to think of most",
    "start": "471080",
    "end": "478910"
  },
  {
    "text": "of your environments now is programmable data centers I want to be able to write a script that I check in under source",
    "start": "478910",
    "end": "483950"
  },
  {
    "text": "control that someone can diff to see what changes there are I'm going to have that in source control and be able to",
    "start": "483950",
    "end": "489290"
  },
  {
    "text": "run that to be able to create my environment in the cloud or to update my environment in the cloud and provide a",
    "start": "489290",
    "end": "494780"
  },
  {
    "text": "new setting and those are I want to say that they're great things to have sometimes are not the easiest things to",
    "start": "494780",
    "end": "501350"
  },
  {
    "text": "write sometimes it's difficult to encourage developers to stick with this and keep automating every step that they",
    "start": "501350",
    "end": "507950"
  },
  {
    "text": "do but if you have a let's say our script that goes out and randomly deletes app services that developers",
    "start": "507950",
    "end": "514490"
  },
  {
    "text": "have created a random delete deletes resources that encourages them to script",
    "start": "514490",
    "end": "519830"
  },
  {
    "text": "everything out so there's a number of",
    "start": "519830",
    "end": "525320"
  },
  {
    "text": "different build systems that people are using for asp.net core some of us have our own build server some of us use",
    "start": "525320",
    "end": "531020"
  },
  {
    "text": "services like a pair and visual studio comm and both of those environments I've",
    "start": "531020",
    "end": "536900"
  },
  {
    "text": "worked with out there and visual studio comm they're both great but the one thing I would suggest is both of those",
    "start": "536900",
    "end": "541970"
  },
  {
    "text": "services try to give you provide you a user interface where you can go in and",
    "start": "541970",
    "end": "547160"
  },
  {
    "text": "just click some configuration items and say here's how I want to do my build the problem I've had with those systems are",
    "start": "547160",
    "end": "554380"
  },
  {
    "text": "first of all if something goes wrong in the build it's impossible for me to replicate that locally so let's say I",
    "start": "554380",
    "end": "561050"
  },
  {
    "text": "have an app bayar build setup where I just went into a player and clicked a few things on their webpage and says here's that says here's my repository",
    "start": "561050",
    "end": "567459"
  },
  {
    "text": "here's the solution to build and I'll go build it and do these other steps when that fails the only way to debug that or",
    "start": "567459",
    "end": "574700"
  },
  {
    "text": "to get it fixed is to log back into that app the ER UI and fiddle with it until you get things right which is very",
    "start": "574700",
    "end": "580370"
  },
  {
    "text": "frustrating but both of these environments at Bayer and Visual Studio comm provide some alternate mechanism",
    "start": "580370",
    "end": "588350"
  },
  {
    "text": "for you to do a build so for example a player instead of going through their UI if you create a yamo file that you place",
    "start": "588350",
    "end": "595670"
  },
  {
    "text": "into the root of the repository for the project that you're building that yamo file what they provide anything that",
    "start": "595670",
    "end": "602240"
  },
  {
    "text": "someone put into the user interface and so now you have something at least in source control that you can dip so if",
    "start": "602240",
    "end": "608480"
  },
  {
    "text": "something changed you can kind of see what happened and what's wrong and you could use the schema file to",
    "start": "608480",
    "end": "615650"
  },
  {
    "text": "kick-start some sort of build script that you've written instead of relying on app and relying on a pair and",
    "start": "615650",
    "end": "623630"
  },
  {
    "text": "hopefully that's a script that you can also run locally for development so that would be an example of a simple",
    "start": "623630",
    "end": "629089"
  },
  {
    "text": "PowerShell script that goes out and does a dotnet restore dotnet build on that test and then dotnet packaged or dotnet",
    "start": "629089",
    "end": "636560"
  },
  {
    "text": "published or dotnet pack depending on what you're building same thing for Visual Studio com",
    "start": "636560",
    "end": "642350"
  },
  {
    "text": "they provide this nice drag-and-drop user interface where I can say let's go out and do a dotnet restore net build",
    "start": "642350",
    "end": "648950"
  },
  {
    "text": "build a solution dotnet tests all of this stuff well when that thing goes wrong or one of the paths relative past that",
    "start": "648950",
    "end": "656290"
  },
  {
    "text": "you have configured into there is incorrect then you have to go around and fiddle with visual studio comm to get",
    "start": "656290",
    "end": "662560"
  },
  {
    "text": "that working instead what I do with visual studio comm is they have sort of",
    "start": "662560",
    "end": "667810"
  },
  {
    "text": "a marketplace for these tasks that appear over here on the left hand side they have a marketplace where you can go",
    "start": "667810",
    "end": "673990"
  },
  {
    "text": "out and grab additional tasks and there's tasks there for nearly everything to run Gradle and grunt and",
    "start": "673990",
    "end": "680080"
  },
  {
    "text": "golf and so forth but one of the tasks or two of the tasks that are in there are cake and pee sake anyone use either",
    "start": "680080",
    "end": "687340"
  },
  {
    "text": "of those there's a session coming up on cake later today after lunch but cake is",
    "start": "687340",
    "end": "694720"
  },
  {
    "text": "basically a way to define a build for your dotnet core or dotnet framework project using c-sharp code and it's",
    "start": "694720",
    "end": "701920"
  },
  {
    "text": "something that you could run locally to do a build and something that you could check that into Visual Studio online",
    "start": "701920",
    "end": "708430"
  },
  {
    "text": "calm and use this cake task to do your build the same build online in the cloud",
    "start": "708430",
    "end": "713470"
  },
  {
    "text": "so that's very useful and again it's something you can diff and look at and",
    "start": "713470",
    "end": "718570"
  },
  {
    "text": "reason about when things change let's talk about startup code for",
    "start": "718570",
    "end": "728350"
  },
  {
    "text": "asp.net core the typical convention is to have a program dot CS that contains",
    "start": "728350",
    "end": "734260"
  },
  {
    "text": "the entry point for your application and then there's a start up top CS that to me only has three responsibilities or",
    "start": "734260",
    "end": "741190"
  },
  {
    "text": "really these days just two responsibilities and that's whatever code you put into the constructor the",
    "start": "741190",
    "end": "746410"
  },
  {
    "text": "code and configure services and the code and configure and the reason I say startup dot CF should only have three",
    "start": "746410",
    "end": "752050"
  },
  {
    "text": "responsibilities is because I've seen people put all sorts of odd bits of code inside of here so abstence ibly to me",
    "start": "752050",
    "end": "758380"
  },
  {
    "text": "these days configure service the the two important",
    "start": "758380",
    "end": "764080"
  },
  {
    "text": "pieces are configure services that's basically where you configure your ioc container so you say i have this service",
    "start": "764080",
    "end": "769420"
  },
  {
    "text": "with this lifetime or for this interface use this concrete type using this sort",
    "start": "769420",
    "end": "775780"
  },
  {
    "text": "of lifetime transient or scoped or singleton and that's all you put in to configure services for configure that's",
    "start": "775780",
    "end": "783130"
  },
  {
    "text": "abstence ibly where you plug in and create your HTTP processing pipeline by adding in middleware but sometimes",
    "start": "783130",
    "end": "789970"
  },
  {
    "text": "when I open up start up at CES I see people configuring their logger inside of configure I see people running",
    "start": "789970",
    "end": "797050"
  },
  {
    "text": "database migrations or seeding the database inside of configure and it just gets kind of messy I'll talk in a second",
    "start": "797050",
    "end": "803770"
  },
  {
    "text": "about where I prefer to see the sort of start up activities because yes you need to configure the log or somewhere where",
    "start": "803770",
    "end": "809590"
  },
  {
    "text": "do you do it to me not inside of startup",
    "start": "809590",
    "end": "814890"
  },
  {
    "text": "to me the logger would be configured before the configure method and the",
    "start": "814920",
    "end": "820960"
  },
  {
    "text": "reason I say this is because in the asp.net poor 1.0 templates if you did file new application in Visual Studio",
    "start": "820960",
    "end": "826810"
  },
  {
    "text": "and go and look in the configure method there was some logger configuration code that existed inside of the configure",
    "start": "826810",
    "end": "832690"
  },
  {
    "text": "method so a lot of people just ran with that and kept adding more logger configuration code inside of the configure method the asp.net core 2.0",
    "start": "832690",
    "end": "839830"
  },
  {
    "text": "template gets rid of some of that because that code was hoisted out and put into a default web host builder that",
    "start": "839830",
    "end": "847660"
  },
  {
    "text": "gets executed during program dot C s inside a program FCS inside of your main method so that's much better just make",
    "start": "847660",
    "end": "855700"
  },
  {
    "text": "sure you take your logging configuration and specifying the additional configuration sources do that if you",
    "start": "855700",
    "end": "862810"
  },
  {
    "text": "have to inside of the start up constructor but these days I would",
    "start": "862810",
    "end": "867880"
  },
  {
    "text": "rather see it in program about C s the configure services method there's some",
    "start": "867880",
    "end": "874300"
  },
  {
    "text": "projects where I've seen that method grow out of control because people were adding different types of services and",
    "start": "874300",
    "end": "879490"
  },
  {
    "text": "adding all sorts of configuration options and an asp.net port 2.0 you might know that they moved a lot of the",
    "start": "879490",
    "end": "886000"
  },
  {
    "text": "authorization and authentication configuration out of middleware and into",
    "start": "886000",
    "end": "892360"
  },
  {
    "text": "services so configure services continue to grow even bigger as people were specifying how to use cookie",
    "start": "892360",
    "end": "898150"
  },
  {
    "text": "authentication and how to use open ID connect when I go in to configure services I'd prefer to see something a",
    "start": "898150",
    "end": "904720"
  },
  {
    "text": "little bit cleaner like this just straight one-liners that say we're using",
    "start": "904720",
    "end": "910060"
  },
  {
    "text": "this thing and be see yes we're using security we must be secure reusing mediator or using some",
    "start": "910060",
    "end": "917310"
  },
  {
    "text": "data stores and then each of those methods if you need to do some additional work additional configuration",
    "start": "917310",
    "end": "924720"
  },
  {
    "text": "options just right extension methods like add custom add a customized version of MVC these are the things I need to do",
    "start": "924720",
    "end": "931020"
  },
  {
    "text": "I need to add to the conventions I need to add some raiser options but by keeping all that stuff out of configure",
    "start": "931020",
    "end": "937290"
  },
  {
    "text": "services it's much easier for me to go into that method and see exactly what the application is using or at least get",
    "start": "937290",
    "end": "942750"
  },
  {
    "text": "an idea of what method I need to drill into to see what specific options are being set otherwise like I say I've seen",
    "start": "942750",
    "end": "949530"
  },
  {
    "text": "configure services methods that are two to three hundred lines of code and just",
    "start": "949530",
    "end": "954570"
  },
  {
    "text": "very difficult to read through same same",
    "start": "954570",
    "end": "959790"
  },
  {
    "text": "would be go for the configure method where you are configuring your middleware although in here I believe it",
    "start": "959790",
    "end": "966150"
  },
  {
    "text": "is okay to allow some branching with an if-else statement to say okay if we're in the development environment use the",
    "start": "966150",
    "end": "973320"
  },
  {
    "text": "these three pieces of middleware we'll use the developer exception page the database error page and browser link I",
    "start": "973320",
    "end": "980130"
  },
  {
    "text": "should get that out of the slide I don't actually does anyone use browser link yeah otherwise use our production",
    "start": "980130",
    "end": "988890"
  },
  {
    "text": "exception handler slash home slash err so that's that would be inside of the configure method of startup at CS and",
    "start": "988890",
    "end": "995390"
  },
  {
    "text": "other than perhaps branching with if-else statements I don't want to see anything else since how to configure",
    "start": "995390",
    "end": "1000620"
  },
  {
    "text": "it's very important to be able to look at that particular part of the application and understand exactly what",
    "start": "1000620",
    "end": "1006950"
  },
  {
    "text": "little where is installed under what conditions and on what order it comes in because I want to be able to go in there",
    "start": "1006950",
    "end": "1013250"
  },
  {
    "text": "to see is this application configured to serve static files is this application",
    "start": "1013250",
    "end": "1018800"
  },
  {
    "text": "configured to use MVC with a default route or not the other thing I suggest",
    "start": "1018800",
    "end": "1026120"
  },
  {
    "text": "is what's interesting about that asp.net core is what we're what we are building is an application that I can execute",
    "start": "1026120",
    "end": "1033199"
  },
  {
    "text": "from the command line yes if I'm building an asp.net web application that thing will be fronted by some sort of",
    "start": "1033199",
    "end": "1039290"
  },
  {
    "text": "web server or it'll have you're running and receive HTTP connections directly but what I'm",
    "start": "1039290",
    "end": "1045470"
  },
  {
    "text": "building is something that I can execute from the command line and it's an application that knows everything about its environment you've already told the",
    "start": "1045470",
    "end": "1053000"
  },
  {
    "text": "dotnet core framework and asp.net core what are my configuration sources what services am I going to use so it's a",
    "start": "1053000",
    "end": "1060230"
  },
  {
    "text": "very useful application that can do more than just respond to HTTP and HTTPS",
    "start": "1060230",
    "end": "1065540"
  },
  {
    "text": "requests because if I run this application during the startup since it",
    "start": "1065540",
    "end": "1070700"
  },
  {
    "text": "knows everything about the environment that it's operating in that's where I might place some logic to start",
    "start": "1070700",
    "end": "1076610"
  },
  {
    "text": "processing some database commands so if I need to seed a database or run database migrations or do any of that",
    "start": "1076610",
    "end": "1083120"
  },
  {
    "text": "sort of work to set up my environment my development environment this would be a",
    "start": "1083120",
    "end": "1089420"
  },
  {
    "text": "nice place to execute those commands so you'll notice this is your typical asp.net core we're gonna use a web host",
    "start": "1089420",
    "end": "1095570"
  },
  {
    "text": "builder with Castro and a Content route and so forth and so forth but before ho stop run there's a process DB commands",
    "start": "1095570",
    "end": "1102530"
  },
  {
    "text": "that takes the command-line arguments that are passed in and the host so it knows how to get to things like a",
    "start": "1102530",
    "end": "1108170"
  },
  {
    "text": "service provider and what we can do with that would look something like this and",
    "start": "1108170",
    "end": "1115370"
  },
  {
    "text": "hopefully that's kind of visible and this is sort of just crude brute force code to show you what's happening so I'm",
    "start": "1115370",
    "end": "1122060"
  },
  {
    "text": "gonna look at the command line arguments and see if someone told me to drop the database because again this this",
    "start": "1122060",
    "end": "1127610"
  },
  {
    "text": "executable has all the configuration sources so it knows what database I'm using ok I'll go ahead and drop the",
    "start": "1127610",
    "end": "1132950"
  },
  {
    "text": "database or migrate the database or see the database and maybe you wanted to do one or more of these things and then",
    "start": "1132950",
    "end": "1141110"
  },
  {
    "text": "just stop in other words I wanted to not actually launch this application to start processing HTTP requests I wanted",
    "start": "1141110",
    "end": "1147950"
  },
  {
    "text": "to launch this application because it was properly configured to do all these things and then I can stop it and start",
    "start": "1147950",
    "end": "1155000"
  },
  {
    "text": "doing my development work that making some sense good",
    "start": "1155000",
    "end": "1160940"
  },
  {
    "text": "also another tip if you ever ever use services by going directly to the the",
    "start": "1160940",
    "end": "1170509"
  },
  {
    "text": "service provider particularly if you're doing it during startup make sure you get an instance of I service scope",
    "start": "1170509",
    "end": "1176899"
  },
  {
    "text": "factory to resolve the service that you're trying to get to so what I service coke factory will do when I",
    "start": "1176899",
    "end": "1183649"
  },
  {
    "text": "create a scope whilst accidentally clicked there I'm passing that scope",
    "start": "1183649",
    "end": "1190549"
  },
  {
    "text": "into some other methods and those methods can say dear service go please give me this dbcontext or give me this",
    "start": "1190549",
    "end": "1197119"
  },
  {
    "text": "ilogger implementation whatever it is and the service scope factory will make sure to clean things up afterwards I",
    "start": "1197119",
    "end": "1202929"
  },
  {
    "text": "could just go directly to host dot services and do a dot get service to try",
    "start": "1202929",
    "end": "1208159"
  },
  {
    "text": "to get to those same things the logger DB contacts whatever service you're trying to get to but you just have to be",
    "start": "1208159",
    "end": "1214609"
  },
  {
    "text": "very careful if you do that because it's very easy to accidentally create a singleton even if that service was",
    "start": "1214609",
    "end": "1220369"
  },
  {
    "text": "Richard registered to be have a transient lifetimes very easy to create a single time that's just gonna live for",
    "start": "1220369",
    "end": "1225830"
  },
  {
    "text": "the rest of the process unless you do this inside of a particular scope so you use that if you're going to try any of",
    "start": "1225830",
    "end": "1231619"
  },
  {
    "text": "these tips that I'm showing you during programmed up CS or inside a startup about CS but don't do it inside a",
    "start": "1231619",
    "end": "1237619"
  },
  {
    "text": "startup about CS and then all those parameters I can just feed them into a script to a developer so if they want to",
    "start": "1237619",
    "end": "1243259"
  },
  {
    "text": "do something like recreate the DB all they do is drop down main line switch in that scripts directory run recreate DB",
    "start": "1243259",
    "end": "1250009"
  },
  {
    "text": "it'll go to the website and start it off and tell it to drop the database migrate the database see the database and stop",
    "start": "1250009",
    "end": "1255590"
  },
  {
    "text": "and poof now they have a freshman database to work with",
    "start": "1255590",
    "end": "1260320"
  },
  {
    "start": "1263000",
    "end": "1263000"
  },
  {
    "text": "project structure let's talk about feature folders anyone use feature",
    "start": "1263140",
    "end": "1268870"
  },
  {
    "text": "folders oh good it is very difficult for me extremely difficult for me these days",
    "start": "1268870",
    "end": "1275260"
  },
  {
    "text": "to walk up to an asp.net MVC project and work with the typical convention of having controllers in this folder views",
    "start": "1275260",
    "end": "1282040"
  },
  {
    "text": "in this other folder and then models you know somewhere else I much prefer an organization where I'll",
    "start": "1282040",
    "end": "1290830"
  },
  {
    "text": "have some sort of top-level folder called features that represents the different pieces of my application as",
    "start": "1290830",
    "end": "1296980"
  },
  {
    "text": "viewed perhaps by a business user or someone who's actually navigating that application so for example this",
    "start": "1296980",
    "end": "1303520"
  },
  {
    "text": "application has an admin section inside of admin section there's a place to manage a seat a sporting season you know",
    "start": "1303520",
    "end": "1311380"
  },
  {
    "text": "and this sort of maps almost to the user interface that I would experience if I was using this application I go to the",
    "start": "1311380",
    "end": "1317320"
  },
  {
    "text": "admin menu and somewhere there's a pop out that says do you want to manage the season yes click on that and then inside",
    "start": "1317320",
    "end": "1322930"
  },
  {
    "text": "of the folder there are controllers so manage season controller dot CSS and",
    "start": "1322930",
    "end": "1328240"
  },
  {
    "text": "views and perhaps even models everything related to that feature in one location because typically as a developer when I",
    "start": "1328240",
    "end": "1334930"
  },
  {
    "text": "go to work on an application I'm going to work on a feature like someone wants me to fix a bug in manage season or",
    "start": "1334930",
    "end": "1341290"
  },
  {
    "text": "someone wants me to implement that and I don't want to go to three or four different places to open up all the files that I need to work on that",
    "start": "1341290",
    "end": "1347890"
  },
  {
    "text": "particular feature I would rather have this one location and I'm sure you can",
    "start": "1347890",
    "end": "1353230"
  },
  {
    "text": "look at past histories of NDC's I think other people have done talk specifically about feature folders in the past but",
    "start": "1353230",
    "end": "1359440"
  },
  {
    "text": "it's the way I like to organize things now but I have eaat that because I'm gonna give you a one other thing to",
    "start": "1359440",
    "end": "1366100"
  },
  {
    "text": "think about and this is just an example",
    "start": "1366100",
    "end": "1371590"
  },
  {
    "text": "of how you might take the account controller that gets generated if you do",
    "start": "1371590",
    "end": "1378430"
  },
  {
    "text": "file new project in Visual Studio and ask for the asp.net identity features anyone who has ever looked at that",
    "start": "1378430",
    "end": "1385300"
  },
  {
    "text": "account controller node knows it's a bit of a mess the last time I look what Visual Studio would do is generate two",
    "start": "1385300",
    "end": "1391600"
  },
  {
    "text": "controllers both with about a hundred lines of code inside and they were just very difficult and unwieldy to work with break that",
    "start": "1391600",
    "end": "1399470"
  },
  {
    "text": "breaking that out into features I might take just the log in log out feature and",
    "start": "1399470",
    "end": "1404539"
  },
  {
    "text": "move that into its own controller and inside of there the views and the models associated with that feature so very",
    "start": "1404539",
    "end": "1409549"
  },
  {
    "text": "easy to find and work with and I like it so much that I created a nougat package a couple years ago so you can just",
    "start": "1409549",
    "end": "1416210"
  },
  {
    "text": "install decode feature folders and inside of configure services when you're adding NBC can just do not add feature",
    "start": "1416210",
    "end": "1422149"
  },
  {
    "text": "folders and yes there's configuration options you could pass in there to",
    "start": "1422149",
    "end": "1427249"
  },
  {
    "text": "change the name of the features folder if you want to for example but it's just",
    "start": "1427249",
    "end": "1432409"
  },
  {
    "text": "that easy however that being said these days with asp.net core to the pillow at",
    "start": "1432409",
    "end": "1439399"
  },
  {
    "text": "2.0 you know they introduced razor pages anyone using razor pages heard of razor",
    "start": "1439399",
    "end": "1444529"
  },
  {
    "text": "pages yeah quite a few I've begun to form the opinion that if I'm building an",
    "start": "1444529",
    "end": "1450739"
  },
  {
    "text": "asp.net project that is intended to be a service so it's primarily there to provide endpoints to communicate over",
    "start": "1450739",
    "end": "1457279"
  },
  {
    "text": "HTTP or HTTPS and serve up JSON or XML so it's an API project that's where I",
    "start": "1457279",
    "end": "1463789"
  },
  {
    "text": "use asp.net MVC core controllers whoops we're all do advancing again that's",
    "start": "1463789",
    "end": "1469879"
  },
  {
    "text": "where I use controllers it's like the widget controller overcome the left and I've begun to like razor pages so much",
    "start": "1469879",
    "end": "1475549"
  },
  {
    "text": "that I think they are the best way to go if you're building something that is rendering HTML so for those of you that",
    "start": "1475549",
    "end": "1483889"
  },
  {
    "text": "haven't seen feature folders sorry razor pages I just want to do a quick",
    "start": "1483889",
    "end": "1491200"
  },
  {
    "text": "show-and-tell here I'm gonna create a new project and you might remember what",
    "start": "1491200",
    "end": "1499070"
  },
  {
    "text": "the again what asp.net identity looked like if you generated an MVC project and",
    "start": "1499070",
    "end": "1505330"
  },
  {
    "text": "you wanted individuals to be able to authenticate and you wanted to store their user names and password in your",
    "start": "1505330",
    "end": "1511100"
  },
  {
    "text": "database that's not what I wanted what about 55 and put it in the temp",
    "start": "1511100",
    "end": "1516830"
  },
  {
    "text": "directory and inside of this next dialogue I'm",
    "start": "1516830",
    "end": "1523309"
  },
  {
    "text": "going to pick not web application model view controller but web application and",
    "start": "1523309",
    "end": "1528529"
  },
  {
    "text": "change authentication to use individual user accounts store the user accounts in my application and what I want to show",
    "start": "1528529",
    "end": "1535339"
  },
  {
    "text": "you is just a little bit of how razor pages can be laid out and what their features are because I know a lot of",
    "start": "1535339",
    "end": "1541609"
  },
  {
    "text": "people when they first heard about razor pages the initial description was something along the lines of here's",
    "start": "1541609",
    "end": "1547969"
  },
  {
    "text": "something you use when you just need to build that about page and you you render HTML and you don't really need a model",
    "start": "1547969",
    "end": "1554570"
  },
  {
    "text": "or a database access you're just trying to you know basically write an HTML page so in that scenario you use razor pages",
    "start": "1554570",
    "end": "1560329"
  },
  {
    "text": "but it turns out when they came back and actually looked at them my selves they had a lot more features than just",
    "start": "1560329",
    "end": "1567169"
  },
  {
    "text": "rendering HTML and they worked a lot like the feature folder approach that I",
    "start": "1567169",
    "end": "1572299"
  },
  {
    "text": "always wanted with models and views and controllers so over here on the right-hand side instead of controller",
    "start": "1572299",
    "end": "1581440"
  },
  {
    "text": "multiple controllers to manage these users I have pages for users for a user",
    "start": "1581440",
    "end": "1588919"
  },
  {
    "text": "to manage their account to do things like change a password manage their",
    "start": "1588919",
    "end": "1594409"
  },
  {
    "text": "external logins set their password and all these things used to be",
    "start": "1594409",
    "end": "1601359"
  },
  {
    "text": "features that weren't implemented in those two controllers that Visual Studio would generate so the first thing I",
    "start": "1601359",
    "end": "1606709"
  },
  {
    "text": "liked about this is now I saw oh there must be easier to break things out with razor pages which you know they could",
    "start": "1606709",
    "end": "1613879"
  },
  {
    "text": "have broken them out with controllers too but what's nice about this let's pick change password so a user wants to",
    "start": "1613879",
    "end": "1623119"
  },
  {
    "text": "change their password first of all there's my view that's the razor page change password dot CSS HTML this is my",
    "start": "1623119",
    "end": "1629599"
  },
  {
    "text": "let's call it a code behind page for lack of a better term that's sitting right there beside it so everything I",
    "start": "1629599",
    "end": "1635690"
  },
  {
    "text": "need very close together when I went to work on the change password feature when I open up the CSS HTML I'll zoom out a",
    "start": "1635690",
    "end": "1643639"
  },
  {
    "text": "little bit you'll notice an app page directive at the top of the razor view",
    "start": "1643639",
    "end": "1648799"
  },
  {
    "text": "that tells asp.net core this is a razor page you'll notice I still have a strongly typed model I can still",
    "start": "1648799",
    "end": "1654680"
  },
  {
    "text": "view data render partials I can still use asp.net or tag helpers so all the features that you would expect from",
    "start": "1654680",
    "end": "1660320"
  },
  {
    "text": "Razer are still there and the code behind file for those of you for you",
    "start": "1660320",
    "end": "1667910"
  },
  {
    "text": "know a lot of people worried this was like the return of web forms it's not",
    "start": "1667910",
    "end": "1673310"
  },
  {
    "text": "there's no viewstate the B code behind or the page model is a class where I can",
    "start": "1673310",
    "end": "1681020"
  },
  {
    "text": "still use constructor injection and method and method level service injection so I don't have any hard",
    "start": "1681020",
    "end": "1687020"
  },
  {
    "text": "dependencies and using HTTP context up whatever I can inject everything I need I'm not doing anything up I have these",
    "start": "1687020",
    "end": "1694010"
  },
  {
    "text": "bindable properties so I know the user is going to enter in the new password I",
    "start": "1694010",
    "end": "1699350"
  },
  {
    "text": "can have that model binding feature apply that directly to a property that's",
    "start": "1699350",
    "end": "1704630"
  },
  {
    "text": "on my page model class and then I can implement methods like coming down here",
    "start": "1704630",
    "end": "1711800"
  },
  {
    "text": "a little bit on getting on post so I know when someone is requesting me to",
    "start": "1711800",
    "end": "1718280"
  },
  {
    "text": "render this form and I know when someone is posting back with an updated password",
    "start": "1718280",
    "end": "1723620"
  },
  {
    "text": "or new form values so easier just as easy as a controller to test and work",
    "start": "1723620",
    "end": "1729050"
  },
  {
    "text": "with but I think it's it is a lot nicer for managing HTML and working with forms",
    "start": "1729050",
    "end": "1736090"
  },
  {
    "text": "so that's my little plug for razor pages if you are working with controllers",
    "start": "1736090",
    "end": "1745120"
  },
  {
    "text": "there's a couple tips first of all when on the route attributes first came out I",
    "start": "1745120",
    "end": "1750530"
  },
  {
    "text": "wasn't a big fan I said wow people will just literally just a route attributes all throughout the code and that's just",
    "start": "1750530",
    "end": "1756980"
  },
  {
    "text": "kind of messy why can't we just stick with the one conventional route that says just send slash controller slash",
    "start": "1756980",
    "end": "1762620"
  },
  {
    "text": "action to some controller action well what I've discovered is that these",
    "start": "1762620",
    "end": "1769220"
  },
  {
    "text": "routes are particularly useful because it allows people to actually think about URLs instead of always trying to cram",
    "start": "1769220",
    "end": "1776210"
  },
  {
    "text": "everything into that default routing rule that NBC can provide so they can think about things like hey this piece",
    "start": "1776210",
    "end": "1783200"
  },
  {
    "text": "is really in the admin section in the UI maybe the URL should map to that and we",
    "start": "1783200",
    "end": "1788559"
  },
  {
    "text": "should have some sort of admin prefix in front of the URL the other big difference I've seen is you know look",
    "start": "1788559",
    "end": "1796240"
  },
  {
    "text": "through any NB C source code base and will be int ID on 500 different methods",
    "start": "1796240",
    "end": "1801970"
  },
  {
    "text": "inside of that project right you look at a method and you're not exactly sure well is that an invoice ID or the",
    "start": "1801970",
    "end": "1807430"
  },
  {
    "text": "employee ID sort of foreign key ID I don't know but if you encourage people to use these route attributes they can",
    "start": "1807430",
    "end": "1815500"
  },
  {
    "text": "also name parameters a little better so this route attribute I'll sorry about that I keep",
    "start": "1815500",
    "end": "1821110"
  },
  {
    "text": "accidentally clicking this route attribute since I don't have any leading",
    "start": "1821110",
    "end": "1826300"
  },
  {
    "text": "tilde or forward slash it's going to be relative to whatever route attribute is on the controller it's basically saying",
    "start": "1826300",
    "end": "1831309"
  },
  {
    "text": "I need to see an additional parameter in the URL which we will call season ID and",
    "start": "1831309",
    "end": "1836559"
  },
  {
    "text": "so now I have code that has a reasonable name for a variable that I used throughout that method weight and I",
    "start": "1836559",
    "end": "1843190"
  },
  {
    "text": "really like that better than just having into ID everywhere know what I mean yeah",
    "start": "1843190",
    "end": "1851140"
  },
  {
    "text": "okay some additional information I like mediator anyone using mediator",
    "start": "1851140",
    "end": "1857730"
  },
  {
    "text": "pretty sure Jimmy Bogart is given some talks at NDC and has some blog posts he's the creator of mediator I'm a big",
    "start": "1857730",
    "end": "1864160"
  },
  {
    "text": "fan of mediator because it decouples first of all it cleans up the controller if you tell developers on a project",
    "start": "1864160",
    "end": "1870670"
  },
  {
    "text": "we're gonna use mediator and we're not gonna cram logic into a controller action makes your controller action",
    "start": "1870670",
    "end": "1876580"
  },
  {
    "text": "smaller which is good and it also decouples the controller a bit from the end abstractions that are going to",
    "start": "1876580",
    "end": "1884830"
  },
  {
    "text": "handle a particular scenario so the user is gonna log in they'll post me some forum values that I encapsulate into a",
    "start": "1884830",
    "end": "1892179"
  },
  {
    "text": "login user command model and I'm gonna use mediator to send that off into some",
    "start": "1892179",
    "end": "1897760"
  },
  {
    "text": "other system that hangs off the mediator bus in memory that's listening for that",
    "start": "1897760",
    "end": "1903520"
  },
  {
    "text": "particular command to process it and the controller doesn't have to know who's processing the login user command it",
    "start": "1903520",
    "end": "1910690"
  },
  {
    "text": "just knows it has to send that message and wait for our result and the result will tell it that they're at that login was successful or not",
    "start": "1910690",
    "end": "1918080"
  },
  {
    "text": "makes things a little bit easier to test just a quick tip I still know people that are building projects asp.net core",
    "start": "1918080",
    "end": "1925580"
  },
  {
    "text": "projects where they include API endpoints inside of the same project where they're serving up HTML pages and",
    "start": "1925580",
    "end": "1931970"
  },
  {
    "text": "pages to users and people can be pretty good about using the anti forgery token",
    "start": "1931970",
    "end": "1938210"
  },
  {
    "text": "validate anti forgery token attribute on controllers that receive form inputs",
    "start": "1938210",
    "end": "1944750"
  },
  {
    "text": "because we're kind of programmed to do that but just remember if you're using cookie authentication that's where the",
    "start": "1944750",
    "end": "1949909"
  },
  {
    "text": "cross-site request forgery danger is so if you have API endpoints you also need",
    "start": "1949909",
    "end": "1955220"
  },
  {
    "text": "to protect those against cross-site forgery and one way to get a cross-site",
    "start": "1955220",
    "end": "1962570"
  },
  {
    "text": "the cross-site request forgery token into your JavaScript so when your JavaScript posts form values to you one",
    "start": "1962570",
    "end": "1970549"
  },
  {
    "text": "way to do that is to provide an API endpoint that inject the I anti for jury service and JavaScript can call this get",
    "start": "1970549",
    "end": "1978649"
  },
  {
    "text": "method on the xox s RF token controller and use that anti for treats service to",
    "start": "1978649",
    "end": "1985460"
  },
  {
    "text": "get in-store tokens so that will send a jayson result back that includes the",
    "start": "1985460",
    "end": "1990860"
  },
  {
    "text": "token and the token name the JavaScript should use now also if it's not already set set the C Cerf cookie that needs to",
    "start": "1990860",
    "end": "1999260"
  },
  {
    "text": "be present in the browser when a request comes in that validates the anti forgery token and breaks security policies so if",
    "start": "1999260",
    "end": "2008350"
  },
  {
    "text": "you haven't worked with asp.net core 2.0 security policies there are a really nice way to program authorization rules",
    "start": "2008350",
    "end": "2015909"
  },
  {
    "text": "into your application so this particular method right here is an example of",
    "start": "2015909",
    "end": "2022090"
  },
  {
    "text": "creating an authorization policy in asp.net core by saying I want a new policy builder so that just capsule",
    "start": "2022090",
    "end": "2029350"
  },
  {
    "text": "eights things like what some scheme name is being used and San Shi AIT's the new",
    "start": "2029350",
    "end": "2034630"
  },
  {
    "text": "authorization policy builder and then you can do dot require claims so I want",
    "start": "2034630",
    "end": "2039669"
  },
  {
    "text": "to make sure that this user has a claim that says is admin and the value is true or I want to require a claim that",
    "start": "2039669",
    "end": "2045880"
  },
  {
    "text": "they're from a specific department whatever claims you might get back from your identity provider you can basically write assertions against them",
    "start": "2045880",
    "end": "2051790"
  },
  {
    "text": "encapsulate them into a policy which is really nice because then you can write a custom authorization attribute user is",
    "start": "2051790",
    "end": "2060610"
  },
  {
    "text": "admin and use that to decorate your controllers instead of trying to place authorized attributes or doing",
    "start": "2060610",
    "end": "2067200"
  },
  {
    "text": "imperative validation of the users identity or the users claims it's really",
    "start": "2067200",
    "end": "2072790"
  },
  {
    "text": "nice just to be able sprinkle user is admin on controllers throughout the project and be able to change that",
    "start": "2072790",
    "end": "2078700"
  },
  {
    "text": "policy with if the claims are something like that ever change without having to",
    "start": "2078700",
    "end": "2083710"
  },
  {
    "text": "change this change what's in the authorized attribute or what's in your imperative code that gets sprinkled",
    "start": "2083710",
    "end": "2090159"
  },
  {
    "text": "throughout views avoid HTML helpers I",
    "start": "2090160",
    "end": "2097390"
  },
  {
    "text": "know some people still use asp.net core and are doing it the old way of using HTML helpers like HTML dot begin form an",
    "start": "2097390",
    "end": "2104110"
  },
  {
    "text": "HTML dot text box for honestly they're always the worst part of the asp.net MVC so replace all of that with the newer",
    "start": "2104110",
    "end": "2110410"
  },
  {
    "text": "tag helpers ASP - for a SP - validation summary so an example up here it's just",
    "start": "2110410",
    "end": "2119050"
  },
  {
    "text": "so much easier to read and also to author and you still get intellisense help and SATA ASP - bore for example if",
    "start": "2119050",
    "end": "2125980"
  },
  {
    "text": "you strongly type the model for that view and it's very easy to write custom tag helpers all you need to do is derive",
    "start": "2125980",
    "end": "2134830"
  },
  {
    "text": "from that tag helper base class override the process method so you can create",
    "start": "2134830",
    "end": "2141940"
  },
  {
    "text": "your own tag helpers for interesting scenarios that are specific to your application I like view components also so a view",
    "start": "2141940",
    "end": "2149710"
  },
  {
    "text": "component so where's the view view component fit in in previous versions of asp.net MVC we used to be able to render",
    "start": "2149710",
    "end": "2158200"
  },
  {
    "text": "partial actions as a way you could sort of set up a mini request inside of",
    "start": "2158200",
    "end": "2163780"
  },
  {
    "text": "asp.net core and and do what it was at HTML dot not partial but HTML dot action",
    "start": "2163780",
    "end": "2170680"
  },
  {
    "text": "HTML dot action until the Razr view engine hey go out and call this go to",
    "start": "2170680",
    "end": "2175750"
  },
  {
    "text": "this controller invoke this action and whatever it returns whatever whatever HTML produces take that and place it",
    "start": "2175750",
    "end": "2181660"
  },
  {
    "text": "into my view so there's a way to sort of build a sub component but it was always a little bit those child actions had some",
    "start": "2181660",
    "end": "2188890"
  },
  {
    "text": "difficulties there were conditions where you could get into infinite loops it was very easy to do that view components",
    "start": "2188890",
    "end": "2194650"
  },
  {
    "text": "fixed most of those problems so I can create a view component derived from the view component based class I implement",
    "start": "2194650",
    "end": "2199960"
  },
  {
    "text": "the implement a method called invoke or invoke async if you have to go async and",
    "start": "2199960",
    "end": "2204990"
  },
  {
    "text": "then that mute component gets associated with a view with a CS HTML file so this",
    "start": "2204990",
    "end": "2210520"
  },
  {
    "text": "is just returning a view but you could also build up a model return a model it's all encapsulated and I might build",
    "start": "2210520",
    "end": "2217329"
  },
  {
    "text": "a component for example to encapsulate this bit of markup which is my main menu",
    "start": "2217329",
    "end": "2223230"
  },
  {
    "text": "and then it's so easy to use that basically what I can do with Visual",
    "start": "2223230",
    "end": "2229180"
  },
  {
    "text": "Studio 2017 and asp.net core to point out is just say VC colon and then the",
    "start": "2229180",
    "end": "2234220"
  },
  {
    "text": "name of my view component and he uses that kabob style where mmm the name of",
    "start": "2234220",
    "end": "2241599"
  },
  {
    "text": "the class might be main menu view component with to uppercase M's but everything here will be lowercase and",
    "start": "2241599",
    "end": "2247060"
  },
  {
    "text": "there will be a dash in front of capital letters that appear later in the name",
    "start": "2247060",
    "end": "2253680"
  },
  {
    "text": "what about client side code managing things like angular and react I've",
    "start": "2253829",
    "end": "2258880"
  },
  {
    "start": "2254000",
    "end": "2254000"
  },
  {
    "text": "become a big fan of web pack myself I try to use webpack to do everything that web pack can to try to jettison any",
    "start": "2258880",
    "end": "2265720"
  },
  {
    "text": "other tools I've certainly gotten rid of tools like Bower and some of the other",
    "start": "2265720",
    "end": "2271810"
  },
  {
    "text": "package managers I just use web pack in a couple different ways this would be an",
    "start": "2271810",
    "end": "2280480"
  },
  {
    "text": "example of a web pack configuration file in a project that's building my vendor Jas file so it's taking all the react",
    "start": "2280480",
    "end": "2287290"
  },
  {
    "text": "modules react on reacts trap Axios and es6 promise polyfill taking all that",
    "start": "2287290",
    "end": "2292780"
  },
  {
    "text": "stuff and outputting it bundled up into a file called vendor Jas that would be",
    "start": "2292780",
    "end": "2299589"
  },
  {
    "text": "an example of a simple web pack config file but what I have found useful with",
    "start": "2299589",
    "end": "2306849"
  },
  {
    "text": "web pack is using multiple configuration files and using them for different scenarios and the one thing to recognize",
    "start": "2306849",
    "end": "2313839"
  },
  {
    "text": "about web pack is it's not a JSON file that just has configuration information in it",
    "start": "2313839",
    "end": "2319069"
  },
  {
    "text": "it is a program that gets loaded into node and gets executed so if you wanted to do some fancy your programming inside",
    "start": "2319069",
    "end": "2325459"
  },
  {
    "text": "of this web pack configuration file you can do things like build a list of files by globbing stuff using expressions like",
    "start": "2325459",
    "end": "2333289"
  },
  {
    "text": "this so I want to go through my features folder and I'm gonna glob up all of the typescript files that have dot specs in",
    "start": "2333289",
    "end": "2340309"
  },
  {
    "text": "the name because I'm trying to build a bundle that contains all my unit tests transpile and bundle all that ups so I",
    "start": "2340309",
    "end": "2346819"
  },
  {
    "text": "can throw it into my unit test runner but I need to also I have I have these scripts that support that in teacher",
    "start": "2346819",
    "end": "2352849"
  },
  {
    "text": "from places under the features folder and also under a client folder which is more of like a shared border so that",
    "start": "2352849",
    "end": "2361430"
  },
  {
    "text": "would be an example of some of the programming you could do in a web pack config file that makes life easier sometimes instead of trying to figure",
    "start": "2361430",
    "end": "2367219"
  },
  {
    "text": "out things like regular expressions or something down here in module dot exports anyone use Steve Sanderson's",
    "start": "2367219",
    "end": "2375259"
  },
  {
    "text": "JavaScript services it's a nice way to encapsulate web pack operations behind",
    "start": "2375259",
    "end": "2382219"
  },
  {
    "text": "the scenes so if you I'll let you try this on your own go into visual studio do file new project and pick one of",
    "start": "2382219",
    "end": "2388400"
  },
  {
    "text": "those templates that says I'm going to create an angular or a react application",
    "start": "2388400",
    "end": "2396759"
  },
  {
    "text": "so one of those last three options and what you'll have is a project that is set up with web pack and the framework",
    "start": "2397089",
    "end": "2405559"
  },
  {
    "text": "that you selected and does a lot of this magic with like configuration files behind the scenes so typically all the",
    "start": "2405559",
    "end": "2414739"
  },
  {
    "text": "projects I've worked on where we've used angular or react we've had to have another command line window open running",
    "start": "2414739",
    "end": "2421069"
  },
  {
    "text": "web pack so that every time someone say is a typescript file a new bundle gets everything is transpiled a new bundle",
    "start": "2421069",
    "end": "2427400"
  },
  {
    "text": "gets bill to get spit out on the disk somewhere and it's just the pain of setting those things up sometimes",
    "start": "2427400",
    "end": "2433009"
  },
  {
    "text": "javascript services tries to do all of that for you and tries to do it magically behind the scenes so that i",
    "start": "2433009",
    "end": "2438680"
  },
  {
    "text": "just launched the project from visual studio or run it from the command line like i normally would and in debug mode",
    "start": "2438680",
    "end": "2445069"
  },
  {
    "text": "one of the things javascript services will do is monitor your typescript files or your",
    "start": "2445069",
    "end": "2450859"
  },
  {
    "text": "JavaScript files so if a developer sees one it will coordinate with webpack to",
    "start": "2450859",
    "end": "2456849"
  },
  {
    "text": "recompile andrey bundle all those things and then just patch them into the",
    "start": "2456849",
    "end": "2462109"
  },
  {
    "text": "browser to refresh what you see on the screen which is really quite nice it looks kind of like this JavaScript",
    "start": "2462109",
    "end": "2469490"
  },
  {
    "text": "services will use webpack dev middleware when you're in development and you can turn hot module replacement and rope",
    "start": "2469490",
    "end": "2476059"
  },
  {
    "text": "owner off so it's a really nice way to integrate some of these advanced newer modern JavaScript frameworks with what's",
    "start": "2476059",
    "end": "2482660"
  },
  {
    "text": "happening inside an ESP down there core and visual studio and speaking of command-line the built in Windows",
    "start": "2482660",
    "end": "2490970"
  },
  {
    "text": "command prompt isn't that great I'm sure many of you already know about con mu or Commander those are just free",
    "start": "2490970",
    "end": "2499339"
  },
  {
    "text": "applications you can download to use instead of using the windows command window the nice I use Connie mu the nice",
    "start": "2499339",
    "end": "2505010"
  },
  {
    "text": "thing about it notice it's get aware so when I move into a directory it automatically can detect hey this is a",
    "start": "2505010",
    "end": "2511490"
  },
  {
    "text": "git repository and this is the branch that you're on Oh IDC integration and it's in red that tells me that I'm in",
    "start": "2511490",
    "end": "2516980"
  },
  {
    "text": "this folder and I haven't I have uncommitted files so I may need to do a git commit and get pushed to get things",
    "start": "2516980",
    "end": "2522710"
  },
  {
    "text": "working the other thing I like you'll notice down here it has a you can open multiple tabs so I could have one thing",
    "start": "2522710",
    "end": "2528980"
  },
  {
    "text": "open here with command X E and other one with PowerShell another one with a different path so I can run maybe a",
    "start": "2528980",
    "end": "2535309"
  },
  {
    "text": "Python program something like that or open another tab with as administrator if I need to do something to",
    "start": "2535309",
    "end": "2542240"
  },
  {
    "text": "administrative leave I'm gonna I'm the next thing I like about Connie mu is to split windows so if I need to run let's",
    "start": "2542240",
    "end": "2548900"
  },
  {
    "text": "say on the left hand side here I need to run web pack to watch files and read trains pile them when someone changes",
    "start": "2548900",
    "end": "2555259"
  },
  {
    "text": "things I want to be able to see that but I also want to be able to see when my specs change I want to make sure that",
    "start": "2555259",
    "end": "2561950"
  },
  {
    "text": "the compilation of my expect files is successful and I also want to be able to",
    "start": "2561950",
    "end": "2568039"
  },
  {
    "text": "see once everything has been compiled and the unit tests execute I want to see if that has been successful and I don't",
    "start": "2568039",
    "end": "2573980"
  },
  {
    "text": "necessarily want to do that by docking three windows somewhere on my monitor I just want one window where if I see",
    "start": "2573980",
    "end": "2580200"
  },
  {
    "text": "red in any of those three things I know something has gone wrong and the syntax you would use with con mu to start those",
    "start": "2580200",
    "end": "2588119"
  },
  {
    "text": "three windows automatically there's a little bit quirky but it would look like this basically start Connie mu and in",
    "start": "2588119",
    "end": "2595230"
  },
  {
    "text": "one window do an NPM run watch in another window that has been split",
    "start": "2595230",
    "end": "2600359"
  },
  {
    "text": "horizontally that's the SH over here run my test watcher and then in another console that",
    "start": "2600359",
    "end": "2606300"
  },
  {
    "text": "split vertically run my karma test runner and if I remember you would not",
    "start": "2606300",
    "end": "2612510"
  },
  {
    "text": "actually be able to put line breaks in that command has to be across a single line for Connie Mew to respect that but",
    "start": "2612510",
    "end": "2620190"
  },
  {
    "text": "that wouldn't fit on a slide if I didn't put line breaks in client code layout",
    "start": "2620190",
    "end": "2626099"
  },
  {
    "text": "I've become a fan of having a client folder that becomes a location or all of",
    "start": "2626099",
    "end": "2632790"
  },
  {
    "text": "the code that's going to be used perhaps throughout the application so things like models and services that I rely on",
    "start": "2632790",
    "end": "2638839"
  },
  {
    "text": "CSS that are specific to that particular framework like angular the CSS files",
    "start": "2638839",
    "end": "2644820"
  },
  {
    "text": "that I might have to know about can go in that client folder but then some specific things that are specific to a",
    "start": "2644820",
    "end": "2651359"
  },
  {
    "text": "feature you'll notice over here on the right hand side there's a TSX file so",
    "start": "2651359",
    "end": "2656640"
  },
  {
    "text": "it's a react view written in typescript it's actually inside of the future folder right along saw aside a",
    "start": "2656640",
    "end": "2663510"
  },
  {
    "text": "controller and the view that is associated with that feature and I've again found that's a nice way to say hey",
    "start": "2663510",
    "end": "2670349"
  },
  {
    "text": "I need to work on this manage invoices screen wherever that is or whatever that",
    "start": "2670349",
    "end": "2675810"
  },
  {
    "text": "is let me just find that folder I know it's in the admin section here's the manage invoices manage golfers whatever",
    "start": "2675810",
    "end": "2681660"
  },
  {
    "text": "you need to manage and inside of there's pretty much all the primary abstractions that I might need to work with yes I",
    "start": "2681660",
    "end": "2687210"
  },
  {
    "text": "might need to change a service over here but I can deal with that all of all of my entry points of where I start looking",
    "start": "2687210",
    "end": "2693450"
  },
  {
    "text": "at that code are here inside of one folder",
    "start": "2693450",
    "end": "2697430"
  },
  {
    "text": "I'm a big fan of using just nougat and NPM package managers so I know Visual Studio over the years has kind of",
    "start": "2701290",
    "end": "2707260"
  },
  {
    "text": "encouraged net developers to use Bower but these days NPM is quite good with",
    "start": "2707260",
    "end": "2713380"
  },
  {
    "text": "front-end frameworks so it doesn't matter what I'm doing on the server side with nodejs",
    "start": "2713380",
    "end": "2718720"
  },
  {
    "text": "if I'm using it to run web pack or what have you and I don't care what I'm doing on the client side if it's just even",
    "start": "2718720",
    "end": "2725560"
  },
  {
    "text": "jQuery is my only dependency I tend to rely on NPM for all my JavaScript stuff",
    "start": "2725560",
    "end": "2731380"
  },
  {
    "text": "so I can npm install jQuery NPM install angular NPM install web pack I don't",
    "start": "2731380",
    "end": "2738190"
  },
  {
    "text": "have to worry about Bower or other package managers yes you might select yarn but my suggestion is just use one",
    "start": "2738190",
    "end": "2744250"
  },
  {
    "text": "package manager for all of your JavaScript don't make a difference don't differentiate between front-end",
    "start": "2744250",
    "end": "2750430"
  },
  {
    "text": "and back-end JavaScript I'm a big fan of",
    "start": "2750430",
    "end": "2755620"
  },
  {
    "text": "typescript these days well I'd say a big fan and to be honest I haven't done a lot of client-side development over the last 12 months kind of been on a break",
    "start": "2755620",
    "end": "2761980"
  },
  {
    "text": "from it but there was a period where typescript first came out where I was hoping it would succeed but I just",
    "start": "2761980",
    "end": "2768430"
  },
  {
    "text": "didn't feel like it would ever work in the JavaScript environment because typescript was being developed and yes they're trying to be compatible to",
    "start": "2768430",
    "end": "2774430"
  },
  {
    "text": "JavaScript and yes every legal JavaScript program was a legal typescript program but it just didn't",
    "start": "2774430",
    "end": "2780250"
  },
  {
    "text": "fit in the ecosystem that felt like every time I tried to use typescript even with say like jQuery there's all",
    "start": "2780250",
    "end": "2785770"
  },
  {
    "text": "these weird hoops I had to jump through and install these typing files and so forth but over the last and 2016 it",
    "start": "2785770",
    "end": "2791920"
  },
  {
    "text": "really became remarkable I thought the way the typescript team started working with the angular team and actually just",
    "start": "2791920",
    "end": "2797110"
  },
  {
    "text": "became so integrated with the Java speak JavaScript ecosystem that it became so",
    "start": "2797110",
    "end": "2802120"
  },
  {
    "text": "much easier to use and some of the features that they added to typescript made it so much easier to use and I'm",
    "start": "2802120",
    "end": "2807790"
  },
  {
    "text": "not I'm not talking about runtime or syntax features I'm talking about features like the module resolution",
    "start": "2807790",
    "end": "2814060"
  },
  {
    "text": "feature so I want typescript to work just like no does if I have a nude",
    "start": "2814060",
    "end": "2819160"
  },
  {
    "text": "modules folder and I tell typescript to import something it should go off and use the same module resolution algorithm",
    "start": "2819160",
    "end": "2825610"
  },
  {
    "text": "as no js' and go searching through the directories inside of new modules to find that the ability to tell about Talib",
    "start": "2825610",
    "end": "2831720"
  },
  {
    "text": "described to it the the libraries and the features that i have by default so don't warn me if I'm using promises I",
    "start": "2831720",
    "end": "2838410"
  },
  {
    "text": "guarantee you I've a library that will polyfill or shim es2015 promises if need",
    "start": "2838410",
    "end": "2843540"
  },
  {
    "text": "be and the ability to subscribe paths or where to find modules one of my biggest",
    "start": "2843540",
    "end": "2849750"
  },
  {
    "text": "frustrations developing JavaScript like in 2015 trying to use all these different tools was just trying to tell the tools where",
    "start": "2849750",
    "end": "2855840"
  },
  {
    "text": "things belong like what folders to look in so don't look just inside of my nude",
    "start": "2855840",
    "end": "2861030"
  },
  {
    "text": "modules folders if I import some service into a type script file that might be a",
    "start": "2861030",
    "end": "2866760"
  },
  {
    "text": "service that I wrote custom so where should you look for that look inside my client slash script folder and start using your node modules module",
    "start": "2866760",
    "end": "2875100"
  },
  {
    "text": "resolution algorithm on my folders also to find the files and things that I'm using so type scripts come a long way",
    "start": "2875100",
    "end": "2882900"
  },
  {
    "text": "and works pretty well I still prefer using Visual Studio code so the one team",
    "start": "2882900",
    "end": "2890190"
  },
  {
    "text": "I work with we always have the solution open two ways it's open in Visual Studio that's where we do all our c-sharp work",
    "start": "2890190",
    "end": "2896730"
  },
  {
    "text": "and we have Visual Studio code pointed to the same root folder and that's where we do all of our typescript or",
    "start": "2896730",
    "end": "2902460"
  },
  {
    "text": "JavaScript or echo script work just just because the the editor seems to be a little bit faster and the intellisense",
    "start": "2902460",
    "end": "2908910"
  },
  {
    "text": "is a little bit better and you don't get as many false positives for errors inside of Visual Studio code and I think",
    "start": "2908910",
    "end": "2918930"
  },
  {
    "text": "of www root is my bin folder for the JavaScript application so that's where web pack will bundle everything and",
    "start": "2918930",
    "end": "2925890"
  },
  {
    "text": "place it there's nothing really that I own inside of www now many people know this but you could",
    "start": "2925890",
    "end": "2932640"
  },
  {
    "text": "install the asp.net core static files middleware multiple times pointing in two different locations so my thought is",
    "start": "2932640",
    "end": "2939450"
  },
  {
    "text": "pick a folder that's going to be served by static files little we're an asp.net",
    "start": "2939450",
    "end": "2944940"
  },
  {
    "text": "core that's going to be your flying side bin folder that's reproduce all your",
    "start": "2944940",
    "end": "2949950"
  },
  {
    "text": "compiled or transpiled output from tools like web pack and then if you also have additional static",
    "start": "2949950",
    "end": "2955170"
  },
  {
    "text": "content that images that you need to serve and so forth you could place them in a different location a different",
    "start": "2955170",
    "end": "2960530"
  },
  {
    "text": "and also create another instance of static files middleware to pull assets from that folder some thoughts on",
    "start": "2960530",
    "end": "2968840"
  },
  {
    "text": "testing I have no problem using a single test project across multiple projects",
    "start": "2968840",
    "end": "2975290"
  },
  {
    "text": "I've worked with teams where every project that you create every CS proj and head of a corresponding dot test CS",
    "start": "2975290",
    "end": "2983810"
  },
  {
    "text": "proj file and that was okay but sometimes it became hard to find things and just felt a little bit I don't know",
    "start": "2983810",
    "end": "2989300"
  },
  {
    "text": "unnecessary to me what is a project when do I create a new project I'm creating a new project because I have some",
    "start": "2989300",
    "end": "2995720"
  },
  {
    "text": "deployment requirement you know that piece of code has to be deployed differently than this piece of code over",
    "start": "2995720",
    "end": "3001060"
  },
  {
    "text": "here in a different project when it comes to test code all I care about is that it all gets compiled and it all gets executed by a test Runner I don't",
    "start": "3001060",
    "end": "3007750"
  },
  {
    "text": "have to deploy them in different places I don't have to share them differently so just placing all the test code inside",
    "start": "3007750",
    "end": "3012820"
  },
  {
    "text": "of a single project seems to be a little less overhead inside of tools like Visual Studio and then everyone's using",
    "start": "3012820",
    "end": "3018760"
  },
  {
    "text": "X unit these days so I don't really that's not a very opinion that gets a",
    "start": "3018760",
    "end": "3025120"
  },
  {
    "text": "lot of pushback but I know some teams are still trying to use MS tasks but X units the way to go I try I personally",
    "start": "3025120",
    "end": "3034990"
  },
  {
    "text": "try to avoid mocks and my actual take wanna right now this bottom piece right",
    "start": "3034990",
    "end": "3040930"
  },
  {
    "text": "here to be a successful Marcus you must dislike mocks so do I use mocks yes I",
    "start": "3040930",
    "end": "3047590"
  },
  {
    "text": "use mocks but I try not to I dislike them I just so I've been trying test-driven development since 2004 and",
    "start": "3047590",
    "end": "3054250"
  },
  {
    "text": "I've tried mocking and I've tried to avoid mocking and just the problem with mocking that I see a lot of people fall into the troubles are that they do too",
    "start": "3054250",
    "end": "3061240"
  },
  {
    "text": "much interaction-based testing and it's still possible to ship an application into QA or into production that fails",
    "start": "3061240",
    "end": "3067390"
  },
  {
    "text": "because with all the unit test paths because people were testing interactions",
    "start": "3067390",
    "end": "3073690"
  },
  {
    "text": "not trying to do state pest state-based testing not trying to think about the",
    "start": "3073690",
    "end": "3078760"
  },
  {
    "text": "test in a way that would actually faithfully test is the system meeting the expected requirements so kind of",
    "start": "3078760",
    "end": "3087070"
  },
  {
    "text": "along those lines I'm a big fan of the asp.net core test host so there's a nougat package out there and Microsoft",
    "start": "3087070",
    "end": "3092980"
  },
  {
    "text": "that yes peanut we're not test hosts if you look through the asp.net core repositories you'll see",
    "start": "3092980",
    "end": "3099650"
  },
  {
    "text": "this as use and a number of their test projects and this is just a little example of what you can do with it so",
    "start": "3099650",
    "end": "3105110"
  },
  {
    "text": "what is it you know it's you can think of it like an in-memory server I'm gonna create a server so this this method",
    "start": "3105110",
    "end": "3110360"
  },
  {
    "text": "wraps the creation of Microsoft that is peanut cordon test toes but what it has",
    "start": "3110360",
    "end": "3116090"
  },
  {
    "text": "the ability to do is create a host that I can talk to that host uses the",
    "start": "3116090",
    "end": "3121490"
  },
  {
    "text": "middleware that I've configured and try to start up at CS and use it as my configuration and it knows it's gonna",
    "start": "3121490",
    "end": "3126650"
  },
  {
    "text": "work just like my application does when I send it an easy to be message so I'm going to create an instance of that server and I'm going to send off a get",
    "start": "3126650",
    "end": "3134510"
  },
  {
    "text": "request that would look like it's going to example.com slash protected query",
    "start": "3134510",
    "end": "3139790"
  },
  {
    "text": "string X requested with blah blah blah blah and I'm going to start writing asserts about what that server returns",
    "start": "3139790",
    "end": "3146540"
  },
  {
    "text": "to me because I'm hoping that the cookie authentication options were configured properly for me",
    "start": "3146540",
    "end": "3151580"
  },
  {
    "text": "so that it sends me a redirect response to go to example.com slash login so and",
    "start": "3151580",
    "end": "3160970"
  },
  {
    "text": "here would be another example test a little bit simpler maybe I'm going to create a server send off a get request",
    "start": "3160970",
    "end": "3166640"
  },
  {
    "text": "to example about column slash normal and make sure I didn't get blocked make sure I got back a status code of okay so it's",
    "start": "3166640",
    "end": "3175220"
  },
  {
    "text": "a really nice way to do integration testing and see if your applications working end to end and to me these days",
    "start": "3175220",
    "end": "3181520"
  },
  {
    "text": "I'm a big believer in getting the most bang for the buck out of test code so",
    "start": "3181520",
    "end": "3186800"
  },
  {
    "text": "the less test code I can write the better because things are gonna change and it's always troubles me when I have",
    "start": "3186800",
    "end": "3193340"
  },
  {
    "text": "to refactor test code but if you think about this asp.net core test host",
    "start": "3193340",
    "end": "3200020"
  },
  {
    "text": "running your application which you know you're probably using something like the Edit II framework maybe to talk to the",
    "start": "3200020",
    "end": "3205730"
  },
  {
    "text": "database well there's also an entity framework for in-memory provider that I can get instantiated when I'm running",
    "start": "3205730",
    "end": "3211520"
  },
  {
    "text": "this test toast and now all of my operations can flow through my system from the very beginning through the",
    "start": "3211520",
    "end": "3217010"
  },
  {
    "text": "middleware into a controller into the database and everything just stays in memory nothing goes over the network",
    "start": "3217010",
    "end": "3223040"
  },
  {
    "text": "it's rendered X disk so EF court in memory provider I can use it just like",
    "start": "3223040",
    "end": "3228370"
  },
  {
    "text": "entity framework for talking to sequel server with a caveat that the EF court",
    "start": "3228370",
    "end": "3233960"
  },
  {
    "text": "and memory provider doesn't apply all of the constraints that a the real sequel server provider would provide so I don't",
    "start": "3233960",
    "end": "3242660"
  },
  {
    "text": "remember all the scenarios but you know if you try to insert a record or insert an object that references of another",
    "start": "3242660",
    "end": "3249830"
  },
  {
    "text": "object we're in sequel server it might throw a foreign key violation the in-memory provider won't do that so yes",
    "start": "3249830",
    "end": "3256340"
  },
  {
    "text": "you'll be able to get away with some things your test might miss some things but if you can run a request through the",
    "start": "3256340",
    "end": "3263770"
  },
  {
    "text": "asp net core test host that goes all the way down and interacts with the in-memory database that gives me with",
    "start": "3263770",
    "end": "3271100"
  },
  {
    "text": "just a little bit of code somehow a high level of confidence that this would actually work when it gets shipped into",
    "start": "3271100",
    "end": "3277730"
  },
  {
    "text": "production and I'll make these slides available this is just an example of configuring that in-memory instance and",
    "start": "3277730",
    "end": "3283160"
  },
  {
    "text": "the important part is this line that my mouse is over use in memory database but",
    "start": "3283160",
    "end": "3290240"
  },
  {
    "text": "the combination of those two things I have found that I've been writing more integration tasks where people call",
    "start": "3290240",
    "end": "3295730"
  },
  {
    "text": "integration tests and maybe fewer unit tests and trying to mock things out because if I want to test that my",
    "start": "3295730",
    "end": "3301460"
  },
  {
    "text": "application let's say fails if I in try to insert duplicates Seasonings where",
    "start": "3301460",
    "end": "3308600"
  },
  {
    "text": "season is of you know some sort of sporting season this one's not using the ESP dynacord test oath but i can",
    "start": "3308600",
    "end": "3314990"
  },
  {
    "text": "instantiate a controller and check my mediator create the command the mediator command that's gonna go into that",
    "start": "3314990",
    "end": "3320930"
  },
  {
    "text": "controller go to my in-memory EF context",
    "start": "3320930",
    "end": "3328610"
  },
  {
    "text": "tell it to go ahead and insert an existing season and now tell my controller to create this thing you know",
    "start": "3328610",
    "end": "3334580"
  },
  {
    "text": "user just made a request to create something with the same name I should get an error back out and model state so",
    "start": "3334580",
    "end": "3340520"
  },
  {
    "text": "did i I salute the controller from the services it uses no so is it a true unit test",
    "start": "3340520",
    "end": "3345830"
  },
  {
    "text": "no is it a decent integration test I think so I get a lot of value out of",
    "start": "3345830",
    "end": "3351200"
  },
  {
    "text": "those what ten lines code for c-sharp code so the biggest thing",
    "start": "3351200",
    "end": "3359579"
  },
  {
    "text": "about c-sharp paired with asp.net core I know a lot of people find the ability to run asp.net core on Linux very",
    "start": "3359579",
    "end": "3365369"
  },
  {
    "text": "compelling because Linux is obviously a generally cheaper environment in the cloud so I see people trying to write",
    "start": "3365369",
    "end": "3371940"
  },
  {
    "text": "and develop asp.net core projects inside of Visual Studio on Windows and then trying to deploy it on Linux and a",
    "start": "3371940",
    "end": "3378059"
  },
  {
    "text": "couple things that always come up are things like hey I used backslash n instead of using environment newline so",
    "start": "3378059",
    "end": "3385970"
  },
  {
    "text": "one a work environment if you use environment newline instead of trying to",
    "start": "3385970",
    "end": "3391079"
  },
  {
    "text": "hard code characters into strings you will get the proper new line string defined for the environment that you're",
    "start": "3391079",
    "end": "3397529"
  },
  {
    "text": "operating in same thing with like combining path paths together",
    "start": "3397529",
    "end": "3402539"
  },
  {
    "text": "is it a forward slash or a back slash if I just use the paths that combine method that'll combine two strings into a path",
    "start": "3402539",
    "end": "3409230"
  },
  {
    "text": "in a way that works on whatever operating system I'm targeting the other",
    "start": "3409230",
    "end": "3414359"
  },
  {
    "text": "suggestion would be really if we're going to create asp.net core projects on Windows and just deploy them on Linux I",
    "start": "3414359",
    "end": "3420630"
  },
  {
    "text": "consider running docker because that's one of the things that's really good at I know I'm gonna work on Windows and",
    "start": "3420630",
    "end": "3425670"
  },
  {
    "text": "Visual Studio is gonna be running in Windows but my aunt's peed on a core application will really be running in a container on a Linux VM and I'll find",
    "start": "3425670",
    "end": "3432420"
  },
  {
    "text": "out about these issues a lot quicker environmental issues same thing for like",
    "start": "3432420",
    "end": "3437910"
  },
  {
    "text": "environment variables environment variables can have different names on different systems so what is home on one",
    "start": "3437910",
    "end": "3445680"
  },
  {
    "text": "type of system might be either profile on another and just a personal thing I'm",
    "start": "3445680",
    "end": "3453299"
  },
  {
    "text": "not a big fan of the async suffix so I tend to not write something as with the",
    "start": "3453299",
    "end": "3458970"
  },
  {
    "text": "async suffix on methods even though it's an async method and it comes from a yarn",
    "start": "3458970",
    "end": "3464910"
  },
  {
    "text": "strip who said when one day in a lecture or an article when there's new features",
    "start": "3464910",
    "end": "3469980"
  },
  {
    "text": "in a language people insist on loud explicit syntax so when async/await first came out I think we wanted this",
    "start": "3469980",
    "end": "3477089"
  },
  {
    "text": "loud explicit syntax in our c-sharp code so that we really were sure that this was an async method it would have the",
    "start": "3477089",
    "end": "3483720"
  },
  {
    "text": "async keyword and then the async in the name but these days when everything's going",
    "start": "3483720",
    "end": "3489920"
  },
  {
    "text": "acing for an established feature I just want the terse notation I don't want to type a sync at the end of every method",
    "start": "3489920",
    "end": "3495830"
  },
  {
    "text": "so to me sign out tenant user that might fail some code reviews in certain places might get picked up with certain tools",
    "start": "3495830",
    "end": "3502550"
  },
  {
    "text": "and with a warning that says hey you have an async method without an async suffix I say that's okay and that",
    "start": "3502550",
    "end": "3510410"
  },
  {
    "text": "concludes this part of the presentation so I do want to thank you for coming out any questions I'll take that as a no",
    "start": "3510410",
    "end": "3518960"
  },
  {
    "text": "I'll be up here because I'm in this room for the next session so thank you for coming out [Applause]",
    "start": "3518960",
    "end": "3528900"
  }
]