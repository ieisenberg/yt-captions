[
  {
    "text": "uh i'm don wibbie i'm from holland i'm actually a technical evangelist with devexpress and uh yeah devexpress",
    "start": "3120",
    "end": "11280"
  },
  {
    "text": "obviously does some stuff with blazer as well um yeah and i thought i'll give you an",
    "start": "11280",
    "end": "17760"
  },
  {
    "text": "introduction on a specific topic on front end development which is state",
    "start": "17760",
    "end": "22960"
  },
  {
    "text": "management i don't have a lot of slides because we're going to do a bit of coding and checking out a couple of",
    "start": "22960",
    "end": "30000"
  },
  {
    "text": "things by example that makes more sense i guess um yeah so obviously the first uh",
    "start": "30000",
    "end": "36960"
  },
  {
    "text": "the first thing is why would we use state management well obviously we're working with a single page application",
    "start": "36960",
    "end": "44320"
  },
  {
    "text": "and if you compare that with the traditional web development like uh mvc",
    "start": "44320",
    "end": "49520"
  },
  {
    "text": "or razer pages that kind of stuff yeah there is like a different way of",
    "start": "49520",
    "end": "55840"
  },
  {
    "text": "keeping your ui in sync and with blazer we can do some really cool stuff obviously",
    "start": "55840",
    "end": "62000"
  },
  {
    "text": "so just to get an impression who of you is already doing blazer developments",
    "start": "62000",
    "end": "68479"
  },
  {
    "text": "and the rest is looking into it or like yeah okay cool",
    "start": "68640",
    "end": "74799"
  },
  {
    "text": "all right so this will actually be my first blazer session without going over the introduction of blazer so that i can",
    "start": "74799",
    "end": "81840"
  },
  {
    "text": "finally skip that and the examples that i will be showing will be both applied for blazer server",
    "start": "81840",
    "end": "88640"
  },
  {
    "text": "as well as blazer web assembly yeah so as i mentioned we're building a",
    "start": "88640",
    "end": "93680"
  },
  {
    "text": "single place application so basically everything runs in that same page and",
    "start": "93680",
    "end": "98799"
  },
  {
    "text": "it is a component-based ui so you want to make other components maybe yeah",
    "start": "98799",
    "end": "104560"
  },
  {
    "text": "depend on data which is uh all across the application so how can we manage",
    "start": "104560",
    "end": "109759"
  },
  {
    "text": "that and the other way the other thing which is very important with single page",
    "start": "109759",
    "end": "115520"
  },
  {
    "text": "application development is how much state do you want to have on the client",
    "start": "115520",
    "end": "120799"
  },
  {
    "text": "okay so i mean a typical use case would be like okay i've got this shopping application",
    "start": "120799",
    "end": "126799"
  },
  {
    "text": "and i want to keep track of the shopping basket that might be state but at the other end",
    "start": "126799",
    "end": "133040"
  },
  {
    "text": "you might want to have that shopping basket on the server as well so you can do some analysis later on on people that",
    "start": "133040",
    "end": "140080"
  },
  {
    "text": "did put something in the basket but didn't check it out so you have to be",
    "start": "140080",
    "end": "145840"
  },
  {
    "text": "thinking about it very thoroughly like what do i want to keep on the client and what do i still want to post back on the",
    "start": "145840",
    "end": "152080"
  },
  {
    "text": "server or maybe you can do something in between and there are various ways",
    "start": "152080",
    "end": "159280"
  },
  {
    "text": "yeah to maintain state and to let other components know",
    "start": "159280",
    "end": "164319"
  },
  {
    "text": "that some state has changed and for this i will at least discuss",
    "start": "164319",
    "end": "171599"
  },
  {
    "text": "three techniques on how to do state management if time permits i have another one but i",
    "start": "171599",
    "end": "178319"
  },
  {
    "text": "will guide you through that because it's a bit more complicated and i will not be doing the live coding stuff because you",
    "start": "178319",
    "end": "184159"
  },
  {
    "text": "will get lost anyway it's a bit more work but the idea itself is quite nice",
    "start": "184159",
    "end": "189920"
  },
  {
    "text": "okay so the first one that we're going to talk about is well let me first",
    "start": "189920",
    "end": "194959"
  },
  {
    "text": "i put together a small demo application and to give you",
    "start": "194959",
    "end": "200800"
  },
  {
    "text": "a bit of another application i obviously use the",
    "start": "200800",
    "end": "207519"
  },
  {
    "text": "starter project that we have at devexpress so you've got another thing as the default microsoft",
    "start": "207519",
    "end": "214959"
  },
  {
    "text": "look and feel yeah but typically yeah it's the same",
    "start": "214959",
    "end": "220000"
  },
  {
    "text": "well the first thing i'm going to show you so what can you do with state management",
    "start": "220000",
    "end": "225360"
  },
  {
    "text": "well for instance if i go to the grid i have adjusted this slightly so i have",
    "start": "225360",
    "end": "232480"
  },
  {
    "text": "this data which is shown in a grid and the temperature is shown in",
    "start": "232480",
    "end": "237599"
  },
  {
    "text": "fahrenheit can anybody can all of you see this or should i zoom in it's a bit small but",
    "start": "237599",
    "end": "243760"
  },
  {
    "text": "what i also did i put on a couple of time stamps which we will see a bit later to see when something is rendered",
    "start": "243760",
    "end": "250159"
  },
  {
    "text": "and when it's not i had to have yeah so you can actually see the impact on certain decisions on state management",
    "start": "250159",
    "end": "257519"
  },
  {
    "text": "so what i did put on a button if i hit the button it will toggle",
    "start": "257519",
    "end": "262720"
  },
  {
    "text": "and it will show the temperature in celsius the celsius was also in the data feed but it's more like okay",
    "start": "262720",
    "end": "269120"
  },
  {
    "text": "the button is green now so we can actually see that we have done something if yeah",
    "start": "269120",
    "end": "274880"
  },
  {
    "text": "state management is all about if i go back to another page and i go back to this one",
    "start": "274880",
    "end": "281600"
  },
  {
    "text": "state is lost of that fahrenheit first celsius thing right",
    "start": "281600",
    "end": "287680"
  },
  {
    "text": "so how can we maintain that throughout the life cycle of the application that's that's the",
    "start": "287680",
    "end": "293919"
  },
  {
    "text": "whole idea well [Music] if i switch over to visual studio",
    "start": "293919",
    "end": "301600"
  },
  {
    "text": "i have set up a couple of uh of things here and i've put in a bit of",
    "start": "301600",
    "end": "307280"
  },
  {
    "text": "code i mean this is typically standard standard stuff i'm injecting the forecast surface",
    "start": "307280",
    "end": "314000"
  },
  {
    "text": "and uh i put in that button i put in a couple of properties",
    "start": "314000",
    "end": "321520"
  },
  {
    "text": "to make sure that i can toggle the button so this is not really rocket science but what we",
    "start": "321520",
    "end": "328080"
  },
  {
    "text": "basically want to do is in this case the show celsius property we want to keep track of that",
    "start": "328080",
    "end": "334880"
  },
  {
    "text": "state and so the first thing i'll try to keep in sync with my slide deck",
    "start": "334880",
    "end": "341600"
  },
  {
    "text": "is",
    "start": "341600",
    "end": "343919"
  },
  {
    "text": "we're gonna use the cascading state parameter this is this is typically a",
    "start": "347199",
    "end": "352400"
  },
  {
    "text": "thing which is yeah really easy and very nice implemented in",
    "start": "352400",
    "end": "358880"
  },
  {
    "text": "the blazer framework and it is also quite yeah easy to use",
    "start": "358880",
    "end": "364800"
  },
  {
    "text": "so how does this work well let's let's start by uh creating",
    "start": "364800",
    "end": "372400"
  },
  {
    "text": "i've already created it but let's let's start with a new in this case my cascading state control",
    "start": "372400",
    "end": "380880"
  },
  {
    "text": "this is just a razor component basically and i",
    "start": "380880",
    "end": "386000"
  },
  {
    "text": "i will put in a number of things here which is at first",
    "start": "386000",
    "end": "392160"
  },
  {
    "text": "the cascading element here",
    "start": "392160",
    "end": "397600"
  },
  {
    "text": "the cascading value this is a very important thing and what this actually means that we will create a component",
    "start": "397600",
    "end": "404479"
  },
  {
    "text": "which doesn't have anything visible it is a component it will be rendered",
    "start": "404479",
    "end": "409520"
  },
  {
    "text": "out by blazer but it doesn't well it basically shows one thing and that's the component",
    "start": "409520",
    "end": "415599"
  },
  {
    "text": "which is inside this render fragment yeah so typically it's like a non-visible container",
    "start": "415599",
    "end": "423680"
  },
  {
    "text": "if i want to use this i can go to for instance my app razer",
    "start": "423680",
    "end": "429599"
  },
  {
    "text": "file and this the abrasive file is the main",
    "start": "429599",
    "end": "434880"
  },
  {
    "text": "component hosting your entire application and i can now embed",
    "start": "434880",
    "end": "440479"
  },
  {
    "text": "this component the router component it's also a component i can embed that one",
    "start": "440479",
    "end": "447680"
  },
  {
    "text": "in the my cascading state and as i said the cascading state",
    "start": "447680",
    "end": "453840"
  },
  {
    "text": "doesn't have any properties yet but it's just there and if you would take a look on how your",
    "start": "453840",
    "end": "460880"
  },
  {
    "text": "application would render it will instantiate the my cascading state component",
    "start": "460880",
    "end": "466479"
  },
  {
    "text": "inside the cascading state component there will be the router with all the bells and whistles and your application",
    "start": "466479",
    "end": "471840"
  },
  {
    "text": "basically runs inside that my cascading state so if you switch fuse or whatsoever",
    "start": "471840",
    "end": "478560"
  },
  {
    "text": "that my cascading state component will be the same one it will not be re-rendered because everything is",
    "start": "478560",
    "end": "484560"
  },
  {
    "text": "happening inside that thing so what we can do now is",
    "start": "484560",
    "end": "489759"
  },
  {
    "text": "if i switch back to this control i can now add properties",
    "start": "489759",
    "end": "495520"
  },
  {
    "text": "to this component and in this case i have put in a boolean show celsius which will",
    "start": "495520",
    "end": "504720"
  },
  {
    "text": "maintain my state whether i was looking at it at celsius or fahrenheit",
    "start": "504720",
    "end": "510080"
  },
  {
    "text": "and more important what i did i the setter of this property i have",
    "start": "510080",
    "end": "517120"
  },
  {
    "text": "checked whether that value is changing and if it is changing i will also set",
    "start": "517120",
    "end": "522159"
  },
  {
    "text": "the new value but more important i have triggered a state has changed which will",
    "start": "522159",
    "end": "529120"
  },
  {
    "text": "make your blazer application re-render basically",
    "start": "529120",
    "end": "534480"
  },
  {
    "text": "so you might think like hey it's going to re-render like the whole thing that might not be very cool because this is",
    "start": "534480",
    "end": "540320"
  },
  {
    "text": "like the root component but we'll see in a minute why i written down those timestamps under the portions of the",
    "start": "540320",
    "end": "546880"
  },
  {
    "text": "application right so now this is actually maintaining my state for my show celsius",
    "start": "546880",
    "end": "555120"
  },
  {
    "text": "if i now go to one of my second pages here",
    "start": "555120",
    "end": "563519"
  },
  {
    "text": "this is typically a copy of the the other one but i made a couple of changes here",
    "start": "563519",
    "end": "571040"
  },
  {
    "text": "uh and i'm gonna add a couple of more things here as well so one of the things that i need to do",
    "start": "571040",
    "end": "578480"
  },
  {
    "text": "here is instead of using",
    "start": "578480",
    "end": "583600"
  },
  {
    "text": "the components and the properties inside this control let me comment these ones out so",
    "start": "583600",
    "end": "589279"
  },
  {
    "text": "i won't get into trouble here [Music]",
    "start": "589279",
    "end": "595279"
  },
  {
    "text": "this is typically the magic",
    "start": "595279",
    "end": "600320"
  },
  {
    "text": "on how this cascading state will work so as soon",
    "start": "600320",
    "end": "605600"
  },
  {
    "text": "as i declare a property inside my control which i decorate with the cascading parameter and because it is of",
    "start": "605600",
    "end": "612480"
  },
  {
    "text": "the type my cascading state blazer will make sure that i i need a",
    "start": "612480",
    "end": "617839"
  },
  {
    "text": "reference to that cascading state component which was my root component so blazer will will make sure that it gets",
    "start": "617839",
    "end": "624480"
  },
  {
    "text": "like available here it's like a bit like injected but",
    "start": "624480",
    "end": "629600"
  },
  {
    "text": "different you know the reference of my state is available now i don't need to do anything for it",
    "start": "629600",
    "end": "636320"
  },
  {
    "text": "and what i for the rest what i changed here instead of using that local property on",
    "start": "636320",
    "end": "643360"
  },
  {
    "text": "the other page i am now using the mystate.show celsius",
    "start": "643360",
    "end": "648560"
  },
  {
    "text": "okay so i blazer will take care that that state thing is available here and",
    "start": "648560",
    "end": "653600"
  },
  {
    "text": "now i can just read and write those properties so i have passed in that reference to that component which is",
    "start": "653600",
    "end": "660800"
  },
  {
    "text": "really simple to do and it works really well there is one thing that i do need to",
    "start": "660800",
    "end": "667360"
  },
  {
    "text": "change in this little demo and that is the columns that needs to be toggled",
    "start": "667360",
    "end": "674399"
  },
  {
    "text": "and so obviously i hard-coded this so what i now can do is uh this is the",
    "start": "674399",
    "end": "680800"
  },
  {
    "text": "fahrenheit so i can now just bind this i need to do it like this not my state",
    "start": "680800",
    "end": "690240"
  },
  {
    "text": "dot show celsius and the visibility of this column",
    "start": "690240",
    "end": "695519"
  },
  {
    "text": "and i can make this one my state dot show",
    "start": "695519",
    "end": "700720"
  },
  {
    "text": "celsius so now i'll be able to toggle those",
    "start": "700720",
    "end": "706560"
  },
  {
    "text": "columns which is what i did in the in the initial demo as well one of the other things that i need to",
    "start": "706560",
    "end": "712480"
  },
  {
    "text": "do is i will obviously need to code this event as well i commented out so the demo",
    "start": "712480",
    "end": "719120"
  },
  {
    "text": "would build the toggle temp click will just change",
    "start": "719120",
    "end": "724240"
  },
  {
    "text": "the value here so but now on the my state component so",
    "start": "724240",
    "end": "729360"
  },
  {
    "text": "typically there is a couple of things that have been changed and",
    "start": "729360",
    "end": "734800"
  },
  {
    "text": "if the hot reload works let's just give that a",
    "start": "735600",
    "end": "741120"
  },
  {
    "text": "go there is visual not really a lot of changes but",
    "start": "741120",
    "end": "748639"
  },
  {
    "text": "there is one one important change obviously that we want to see and that is uh if i will go to the grid",
    "start": "748639",
    "end": "756079"
  },
  {
    "text": "two and i hit the show celsius",
    "start": "756079",
    "end": "762639"
  },
  {
    "text": "we'll see that everything toggles nicely still but if i go to one of the other",
    "start": "762639",
    "end": "767839"
  },
  {
    "text": "pages and i go back to this one you'll see that the state has been",
    "start": "767839",
    "end": "773519"
  },
  {
    "text": "maintained so one of the other things that we could",
    "start": "773519",
    "end": "779440"
  },
  {
    "text": "do is okay so once we have this component i mean the state is being",
    "start": "779440",
    "end": "784480"
  },
  {
    "text": "tracked now but how can i make other components be aware of that as well",
    "start": "784480",
    "end": "789839"
  },
  {
    "text": "well with this approach that's extremely simple so let's",
    "start": "789839",
    "end": "795120"
  },
  {
    "text": "let's put up on the on the right top i'm going to put in a control that has like this little slider button",
    "start": "795120",
    "end": "801279"
  },
  {
    "text": "which allows me to change the state as well right so for that i have already",
    "start": "801279",
    "end": "808160"
  },
  {
    "text": "prepped some stuff as well and let's see if i would go to",
    "start": "808160",
    "end": "815200"
  },
  {
    "text": "that was yeah this one",
    "start": "815200",
    "end": "820079"
  },
  {
    "text": "what i'll do obviously i'm using the dev express checkbox",
    "start": "820880",
    "end": "826160"
  },
  {
    "text": "and i am also using the same approach so i am",
    "start": "826160",
    "end": "831360"
  },
  {
    "text": "declaring this cascading parameter and blazer will make sure that same",
    "start": "831360",
    "end": "836720"
  },
  {
    "text": "component will be available here and now on the check changed i can just",
    "start": "836720",
    "end": "843120"
  },
  {
    "text": "yeah change that thing inside that root component and if we want to have this available",
    "start": "843120",
    "end": "850720"
  },
  {
    "text": "i'll need to put that in here let me first save that one and go to the",
    "start": "850720",
    "end": "858000"
  },
  {
    "text": "header i put it in here and this was the menu",
    "start": "858000",
    "end": "864560"
  },
  {
    "text": "toggler control like this",
    "start": "865199",
    "end": "872639"
  },
  {
    "text": "so basically this control that i just built doesn't have any direct relationship with the control containing",
    "start": "874240",
    "end": "881040"
  },
  {
    "text": "the data grid and the button to toggle the visible the the temperature scale",
    "start": "881040",
    "end": "887040"
  },
  {
    "text": "yeah but if i would now go to my page what we'll see on the top is we have the slider",
    "start": "887040",
    "end": "893680"
  },
  {
    "text": "and i can still i can toggle that and what you'll see is",
    "start": "893680",
    "end": "900000"
  },
  {
    "text": "still the button toggles correctly as well as the temperature and i can",
    "start": "900000",
    "end": "905600"
  },
  {
    "text": "also do it like here yeah so you'll you saw the slider go the other way as well the cool",
    "start": "905600",
    "end": "912880"
  },
  {
    "text": "the cool thing is even that if i go to this page and i toggle that button",
    "start": "912880",
    "end": "918959"
  },
  {
    "text": "and i go back to the grid it's still up to date",
    "start": "918959",
    "end": "925120"
  },
  {
    "text": "and now it makes sense why i rented out those timestamps because i did like a full",
    "start": "925120",
    "end": "931199"
  },
  {
    "text": "state change to remember in that root component but what you'll notice is that if you check out the navigation menu",
    "start": "931199",
    "end": "937600"
  },
  {
    "text": "it's got like 22 seconds and that one is on nine and the other one is on six so",
    "start": "937600",
    "end": "943360"
  },
  {
    "text": "if i would change that state there is like going to be a new invoke",
    "start": "943360",
    "end": "949600"
  },
  {
    "text": "state changed but what you'll see is that that one didn't re-render",
    "start": "949600",
    "end": "956000"
  },
  {
    "text": "that one did and obviously that one did as well so this is obviously one of the very cool things with blazer that",
    "start": "956000",
    "end": "961600"
  },
  {
    "text": "synchronization or what needs to be re-rendered is quite cool and so you don't need to worry too much",
    "start": "961600",
    "end": "967440"
  },
  {
    "text": "about that if there are components on your page which do not involve that particular state it will just not be",
    "start": "967440",
    "end": "973759"
  },
  {
    "text": "re-rendered so this is this is a very simple and",
    "start": "973759",
    "end": "979519"
  },
  {
    "text": "effective thing to maintain state for for certain things",
    "start": "979519",
    "end": "985440"
  },
  {
    "text": "all right so there is there is another approach which uh which is a bit more you you could",
    "start": "987199",
    "end": "993600"
  },
  {
    "text": "actually do a bit more fine-grained control on what",
    "start": "993600",
    "end": "998720"
  },
  {
    "text": "needs to be notified or update with it and that is yeah it's typically like by",
    "start": "998720",
    "end": "1004720"
  },
  {
    "text": "using a state machine what is the state machine well that is basically",
    "start": "1004720",
    "end": "1010560"
  },
  {
    "text": "some object which lives in your application and",
    "start": "1010560",
    "end": "1015759"
  },
  {
    "text": "that keeps track of the state well and because dot-net core and blazer they have an",
    "start": "1015759",
    "end": "1021360"
  },
  {
    "text": "excellent dependency injection mechanism we can actually use dependency injection to register a singleton or scoped",
    "start": "1021360",
    "end": "1029918"
  },
  {
    "text": "instance and inject it everywhere so that's the second approach i'm going",
    "start": "1029919",
    "end": "1035038"
  },
  {
    "text": "to show you and how does that work well i just told you but let's let's go into",
    "start": "1035039",
    "end": "1042480"
  },
  {
    "text": "that anyway i have created a class here",
    "start": "1042480",
    "end": "1047839"
  },
  {
    "text": "and this class is just a class basically um",
    "start": "1047839",
    "end": "1054160"
  },
  {
    "text": "i am declaring this this show celsius property what is important or more or",
    "start": "1055200",
    "end": "1061039"
  },
  {
    "text": "less like a convention and not to make it like too complicated to find bugs and",
    "start": "1061039",
    "end": "1066080"
  },
  {
    "text": "stuff it is yeah the idea to have the show celsius",
    "start": "1066080",
    "end": "1071679"
  },
  {
    "text": "property to be like a read only property yeah so that's why i put in the private",
    "start": "1071679",
    "end": "1077679"
  },
  {
    "text": "set i don't want this component to like directly change that property because that might cause",
    "start": "1077679",
    "end": "1084000"
  },
  {
    "text": "any side effects on all the controls that i'm not aware of and that could cause like issues",
    "start": "1084000",
    "end": "1090559"
  },
  {
    "text": "and so the idea with like a state machine is we have this read-only property that we can read so we can actually bind the value of this property",
    "start": "1090559",
    "end": "1097520"
  },
  {
    "text": "to like certain elements on your components and",
    "start": "1097520",
    "end": "1103840"
  },
  {
    "text": "what i also do i have declared a an event",
    "start": "1103840",
    "end": "1109200"
  },
  {
    "text": "and in case that show celsius changed i'll fire that event",
    "start": "1109200",
    "end": "1115520"
  },
  {
    "text": "i'll have a private method which will notify this which will actually fire up that event in case it's necessary",
    "start": "1116000",
    "end": "1123360"
  },
  {
    "text": "and the next thing i'll do is a",
    "start": "1123360",
    "end": "1128640"
  },
  {
    "text": "method which will actually change the value so i need to call this method",
    "start": "1128640",
    "end": "1134000"
  },
  {
    "text": "to change the value and this is more like a guideline and and typically with with these kind of approaches you'll",
    "start": "1134000",
    "end": "1140799"
  },
  {
    "text": "return the old value okay so if the property was false that's going to be the return value of this",
    "start": "1140799",
    "end": "1147280"
  },
  {
    "text": "method and you pass in true so the state will change and you'll get the old value back",
    "start": "1147280",
    "end": "1152559"
  },
  {
    "text": "if you want to do something with it or not but it's more like a convention but what i also do is that you see that",
    "start": "1152559",
    "end": "1158720"
  },
  {
    "text": "i will check whether that value has changed and if it has changed and i'll notify the show sales is changed i'll",
    "start": "1158720",
    "end": "1165679"
  },
  {
    "text": "fire that event so and instead of doing like a component",
    "start": "1165679",
    "end": "1173360"
  },
  {
    "text": "i'll put in a component somewhere what i'll do now is i need to register",
    "start": "1173360",
    "end": "1178559"
  },
  {
    "text": "this this object uh in the dependency injection and uh yeah that is that is quite",
    "start": "1178559",
    "end": "1185440"
  },
  {
    "text": "straightforward obviously so i can now just say",
    "start": "1185440",
    "end": "1190160"
  },
  {
    "text": "dot builder.services.add here is obviously one thing that you should be aware of",
    "start": "1190960",
    "end": "1196799"
  },
  {
    "text": "if you're doing blazer server or you do the lifetimes",
    "start": "1196799",
    "end": "1202320"
  },
  {
    "text": "with blazer server are slightly different as with blazer web assembly so if you would register this on blazer",
    "start": "1202320",
    "end": "1209280"
  },
  {
    "text": "server as being a singleton if i hit that button",
    "start": "1209280",
    "end": "1214960"
  },
  {
    "text": "eventually you will see it in the same thing as well because that state lives",
    "start": "1214960",
    "end": "1220240"
  },
  {
    "text": "on the server and it's a singleton on the server so the safest way with this approach is",
    "start": "1220240",
    "end": "1225840"
  },
  {
    "text": "to go for the scoped a scoped surface is",
    "start": "1225840",
    "end": "1231440"
  },
  {
    "text": "for the lifetime of one use or so that is basically a singleton on the user",
    "start": "1231440",
    "end": "1236799"
  },
  {
    "text": "webassembly doesn't have the concept of scoped so on webassembly it will be a singleton and that will be correct",
    "start": "1236799",
    "end": "1242720"
  },
  {
    "text": "because you're the only one on your webassembly thing right so that's an important thing and",
    "start": "1242720",
    "end": "1249600"
  },
  {
    "text": "the safest way to to get started is to use the the scoped one",
    "start": "1249600",
    "end": "1255520"
  },
  {
    "text": "well normally you would",
    "start": "1255520",
    "end": "1260240"
  },
  {
    "text": "do like an interface and declare it like officially but in this case this is going to be my state and it's all",
    "start": "1260720",
    "end": "1267520"
  },
  {
    "text": "fine with me i do have another session on dependency injection but",
    "start": "1267520",
    "end": "1273440"
  },
  {
    "text": "so i'll save you those details right now all right so i have now done that i can",
    "start": "1273440",
    "end": "1279120"
  },
  {
    "text": "now go to my",
    "start": "1279120",
    "end": "1283120"
  },
  {
    "text": "third second example and which is basically a copy from that first page",
    "start": "1284799",
    "end": "1293760"
  },
  {
    "text": "yeah but there is one interesting thing here so i am injecting this state",
    "start": "1293760",
    "end": "1302320"
  },
  {
    "text": "and the state is again not a component but it is just some data structure and there is an important thing because i",
    "start": "1302720",
    "end": "1309039"
  },
  {
    "text": "want to to bind that event the notify changed you need to",
    "start": "1309039",
    "end": "1315679"
  },
  {
    "text": "implement the idisposable",
    "start": "1315679",
    "end": "1319399"
  },
  {
    "text": "then i will copy in the same kind of stuff that you've seen before but now i will insert some",
    "start": "1320960",
    "end": "1328400"
  },
  {
    "text": "slightly different code i'll go over that here",
    "start": "1328400",
    "end": "1334799"
  },
  {
    "text": "so the first thing that i have done well this is basically the same but now that",
    "start": "1334880",
    "end": "1340080"
  },
  {
    "text": "my state is obviously being injected so it's not the cascading thing anymore but now it's that object so those references",
    "start": "1340080",
    "end": "1347520"
  },
  {
    "text": "are pretty much the same but what i did do is that i am actually",
    "start": "1347520",
    "end": "1352720"
  },
  {
    "text": "calling this my state dot sets show celsius and i'll change the state like",
    "start": "1352720",
    "end": "1358240"
  },
  {
    "text": "this and the other thing that i do is i have",
    "start": "1358240",
    "end": "1364240"
  },
  {
    "text": "coded that event so in case the show celsius changed i do a state has changed",
    "start": "1364240",
    "end": "1372240"
  },
  {
    "text": "right and then on the un initialized you can just do this on the on initialize the",
    "start": "1372240",
    "end": "1378080"
  },
  {
    "text": "async one won't be necessary because it is uh just a declaration here",
    "start": "1378080",
    "end": "1384080"
  },
  {
    "text": "i am binding the event and i need to unbind that event as well that's why i was implementing the eye disposable so",
    "start": "1384080",
    "end": "1390799"
  },
  {
    "text": "if the control has been rendered it's done it needs to like remove the event handler otherwise",
    "start": "1390799",
    "end": "1396400"
  },
  {
    "text": "you'll get like memory issues and so on yeah so i with this in place we have",
    "start": "1396400",
    "end": "1402480"
  },
  {
    "text": "typically done the same we have the same behavior but on a different approach",
    "start": "1402480",
    "end": "1408080"
  },
  {
    "text": "yeah so if we also want to update the slider i've created uh",
    "start": "1408080",
    "end": "1414159"
  },
  {
    "text": "a copy of that control as well so let me also implement the i disposable for this",
    "start": "1414159",
    "end": "1420240"
  },
  {
    "text": "as well because we're going to buy that event and with this in place",
    "start": "1420240",
    "end": "1426880"
  },
  {
    "text": "we pretty much have the same declarations you saw before and on the code i will",
    "start": "1426880",
    "end": "1434000"
  },
  {
    "text": "code in that show celsius changed and i bind it on the on initialize and i",
    "start": "1434000",
    "end": "1440080"
  },
  {
    "text": "unbind it on the disposed so it's a bit more code but you can actually yeah fine-grain the updates because if",
    "start": "1440080",
    "end": "1447440"
  },
  {
    "text": "you have more properties in that state object you could decide to create events for",
    "start": "1447440",
    "end": "1454799"
  },
  {
    "text": "certain elements if certain data changes you can fire one of those events or you",
    "start": "1454799",
    "end": "1460559"
  },
  {
    "text": "can do it for for everything but with this approach you have a bit more control over",
    "start": "1460559",
    "end": "1466799"
  },
  {
    "text": "which updates needs to be done somewhere",
    "start": "1466799",
    "end": "1472840"
  },
  {
    "text": "if i have done it all correctly i can now show you the third way",
    "start": "1473120",
    "end": "1480000"
  },
  {
    "text": "or the second way where is it again yeah so again we have",
    "start": "1480000",
    "end": "1485200"
  },
  {
    "text": "a show celsius this time i have changed it into a red button",
    "start": "1485200",
    "end": "1491760"
  },
  {
    "text": "to make sure that we're on like another page and again",
    "start": "1491760",
    "end": "1497279"
  },
  {
    "text": "it changes but the other one didn't change",
    "start": "1497279",
    "end": "1502400"
  },
  {
    "text": "the slider on top and that's obviously because i forgot to change that well i didn't forget it but i was just showing",
    "start": "1502400",
    "end": "1509039"
  },
  {
    "text": "you like so yeah the only thing we need to change",
    "start": "1509039",
    "end": "1514480"
  },
  {
    "text": "in the application is that we need to change the reference to the header",
    "start": "1514480",
    "end": "1519840"
  },
  {
    "text": "in the header as well so we need to to pick that other control which was the",
    "start": "1519840",
    "end": "1526840"
  },
  {
    "text": "srv i think and now",
    "start": "1526840",
    "end": "1532480"
  },
  {
    "text": "we have the same behavior you see so still the components are not aware of",
    "start": "1536400",
    "end": "1542159"
  },
  {
    "text": "each other but they're still able to be synchronized throughout this mechanism",
    "start": "1542159",
    "end": "1548799"
  },
  {
    "text": "as a result we can take this one a bit further down the road i mean this state machine kind of approach we could also",
    "start": "1549520",
    "end": "1556799"
  },
  {
    "text": "go for like another approach which is the",
    "start": "1556799",
    "end": "1561679"
  },
  {
    "text": "good old mvvm pattern which lands itself excellent with blazer",
    "start": "1562159",
    "end": "1568960"
  },
  {
    "text": "it does depend a bit on the amount of of complexity that you want to put in your",
    "start": "1568960",
    "end": "1574080"
  },
  {
    "text": "application and but i mean yeah with the mvvm pattern we will actually separate",
    "start": "1574080",
    "end": "1580640"
  },
  {
    "text": "the logic in the ui completely from the razor file and put it like in a",
    "start": "1580640",
    "end": "1585919"
  },
  {
    "text": "a class and we can use dependency injection and use that same fuel model",
    "start": "1585919",
    "end": "1592640"
  },
  {
    "text": "to store the state that's that's one of the other things that we can do and i mean for certain",
    "start": "1592640",
    "end": "1599600"
  },
  {
    "text": "scenarios it might be nice to use the mvvm pattern but you have to decide that from the start of your application",
    "start": "1599600",
    "end": "1606000"
  },
  {
    "text": "because it's like you have to go all the way basically",
    "start": "1606000",
    "end": "1611440"
  },
  {
    "text": "so how does that work well again i have prepped some stuff here and uh for that",
    "start": "1611440",
    "end": "1618799"
  },
  {
    "text": "we are going um into the i've set up a folder here which is few models",
    "start": "1618799",
    "end": "1625840"
  },
  {
    "text": "the view model is basically the class that contains everything state as well as logic",
    "start": "1625840",
    "end": "1632720"
  },
  {
    "text": "business logic if i click a button it will happen inside this this model",
    "start": "1632720",
    "end": "1639360"
  },
  {
    "text": "and to do it correctly i've already implemented a and i've declared an interface for it as",
    "start": "1639440",
    "end": "1645679"
  },
  {
    "text": "well and i have the fuel model",
    "start": "1645679",
    "end": "1651200"
  },
  {
    "text": "i have taken this a step further because i also decided that i would use dependency injection to just inject that",
    "start": "1651200",
    "end": "1659440"
  },
  {
    "text": "weather forecast surface completely into this fuel model as well why not",
    "start": "1659440",
    "end": "1665360"
  },
  {
    "text": "and i could actually store a copy of that weather",
    "start": "1665360",
    "end": "1671679"
  },
  {
    "text": "collection as well maybe that's something you want as well so this is this is a step further",
    "start": "1671679",
    "end": "1679440"
  },
  {
    "text": "i furthermore more put in a couple of things like does it have any data",
    "start": "1679520",
    "end": "1686159"
  },
  {
    "text": "i have put in some logic this is typically something you you will need in",
    "start": "1686159",
    "end": "1691600"
  },
  {
    "text": "a few model which is like some sort of an initialize so if",
    "start": "1691600",
    "end": "1697120"
  },
  {
    "text": "if you go to this particular page for the first time that model will be",
    "start": "1697120",
    "end": "1702399"
  },
  {
    "text": "instantiated it will do certain things but if you go again you go away from",
    "start": "1702399",
    "end": "1708320"
  },
  {
    "text": "that page you go to another one and you go back you might want to re-initialize certain",
    "start": "1708320",
    "end": "1714159"
  },
  {
    "text": "things so it is always a good way to have like some sort of an initialized method which in this case will re-fetch",
    "start": "1714159",
    "end": "1720799"
  },
  {
    "text": "the data if the data is empty",
    "start": "1720799",
    "end": "1726080"
  },
  {
    "text": "and one of the other things which is important is that you this this view model",
    "start": "1726080",
    "end": "1733039"
  },
  {
    "text": "can't directly trigger a state change like the ui has been updated",
    "start": "1733039",
    "end": "1738480"
  },
  {
    "text": "so for that you would typically need something like a trigger state change which is",
    "start": "1738480",
    "end": "1744080"
  },
  {
    "text": "more or less in the same direction as i used with the state machine",
    "start": "1744080",
    "end": "1749520"
  },
  {
    "text": "and so like the notify state changed",
    "start": "1749520",
    "end": "1753840"
  },
  {
    "text": "for the rest i also put all the logic concerning the button text",
    "start": "1754799",
    "end": "1760320"
  },
  {
    "text": "the button style show fahrenheit is this and i put all the logic and all the data",
    "start": "1760320",
    "end": "1767440"
  },
  {
    "text": "that is related to that particular page i put it in here",
    "start": "1767440",
    "end": "1772480"
  },
  {
    "text": "i also put in that event that state changed",
    "start": "1772480",
    "end": "1777760"
  },
  {
    "text": "and the trigger state change method okay so typically everything codewise is",
    "start": "1777760",
    "end": "1784000"
  },
  {
    "text": "in there if i now uh i now need to register this with the di",
    "start": "1784000",
    "end": "1791120"
  },
  {
    "text": "as well so for this i will actually go the same approach so i will do a builder dot",
    "start": "1791120",
    "end": "1797520"
  },
  {
    "text": "services dot add scoped",
    "start": "1797520",
    "end": "1802720"
  },
  {
    "text": "and now i can do that officially like i uh what was that thing again great view",
    "start": "1802720",
    "end": "1811520"
  },
  {
    "text": "model grit fuel model",
    "start": "1811840",
    "end": "1820360"
  },
  {
    "text": "okay i'll stop that so how does this work in the uh",
    "start": "1825520",
    "end": "1832559"
  },
  {
    "text": "in the actual components well that's quite straightforward it will also because we need to bind that",
    "start": "1832559",
    "end": "1839200"
  },
  {
    "text": "event to handle the state changed um we can now uh implement the dispose",
    "start": "1839200",
    "end": "1846000"
  },
  {
    "text": "of the eye disposable as well because we need to bind it and we need to unbind it once that control is done",
    "start": "1846000",
    "end": "1853200"
  },
  {
    "text": "and for this what i'll do is i will use the",
    "start": "1853200",
    "end": "1858559"
  },
  {
    "text": "inject direct directive to inject a fuel model instance into this component",
    "start": "1858559",
    "end": "1865440"
  },
  {
    "text": "well the rest is pretty much what you already saw and so instead of now using that that other state",
    "start": "1865440",
    "end": "1872640"
  },
  {
    "text": "mechanisms i am now directly using that fuel model and i'm using the forecast as well this",
    "start": "1872640",
    "end": "1879760"
  },
  {
    "text": "is a bit different from the other ones but for the rest we have",
    "start": "1879760",
    "end": "1885120"
  },
  {
    "text": "still the same things going on so i have now the few models show fahrenheit fuel",
    "start": "1885120",
    "end": "1890159"
  },
  {
    "text": "models show celsius so basically bind as much stuff as possible to the",
    "start": "1890159",
    "end": "1895279"
  },
  {
    "text": "view model that's the whole idea about that",
    "start": "1895279",
    "end": "1899600"
  },
  {
    "text": "now there is only a slightly bit of code involved",
    "start": "1902080",
    "end": "1907919"
  },
  {
    "text": "and that is typically i've even compacted the methods to make it even look less",
    "start": "1907919",
    "end": "1914960"
  },
  {
    "text": "the state change triggered is going to do the state changed the initialize will",
    "start": "1914960",
    "end": "1920640"
  },
  {
    "text": "bind the event and it will call the initialize well you could imagine that you can actually create like a base",
    "start": "1920640",
    "end": "1925840"
  },
  {
    "text": "component like a generic one where you pass in the view model type and you don't even have this code in",
    "start": "1925840",
    "end": "1931840"
  },
  {
    "text": "your your own classes you can make that very easily and then on the dispose we'll unbind",
    "start": "1931840",
    "end": "1938480"
  },
  {
    "text": "that that state change event well if we want to apply this on this",
    "start": "1938480",
    "end": "1944559"
  },
  {
    "text": "slider button as well which was that different control well i put it in here as well and",
    "start": "1944559",
    "end": "1950960"
  },
  {
    "text": "what i basically do is i inject i still do the same thing so i will",
    "start": "1950960",
    "end": "1956559"
  },
  {
    "text": "implement the eye disposable i'll inject the fuel model that will be the same instance",
    "start": "1956559",
    "end": "1963120"
  },
  {
    "text": "and i do the same except that i'm now using",
    "start": "1963120",
    "end": "1968399"
  },
  {
    "text": "the viewmodel method here as well and one thing that you should try not to do if you have",
    "start": "1968399",
    "end": "1974320"
  },
  {
    "text": "like an event handler with a button or whatever it normally comes with event arguments",
    "start": "1974320",
    "end": "1980000"
  },
  {
    "text": "stuff like that you typically don't want to have that in the view model method so it's",
    "start": "1980000",
    "end": "1985519"
  },
  {
    "text": "shouldn't be necessary there and then we'll bind the event",
    "start": "1985519",
    "end": "1992240"
  },
  {
    "text": "and uh we trigger the state has changed well and in this case the state has changed",
    "start": "1992240",
    "end": "1997840"
  },
  {
    "text": "will only apply on that control now and the other status change from the grid will apply on that one okay so that's",
    "start": "1997840",
    "end": "2005840"
  },
  {
    "text": "that's basically how that how that works so if i would now run it it will give me",
    "start": "2005840",
    "end": "2012159"
  },
  {
    "text": "a small error let me see what did i miss here i would",
    "start": "2012159",
    "end": "2020000"
  },
  {
    "text": "miss out on this yeah i was just checking how you were doing",
    "start": "2020000",
    "end": "2026000"
  },
  {
    "text": "all right so this will this will result obviously in the same",
    "start": "2026720",
    "end": "2035360"
  },
  {
    "text": "in the same effect as we used to have but we do have",
    "start": "2036640",
    "end": "2041679"
  },
  {
    "text": "less code in the eraser file which i personally like a lot",
    "start": "2041679",
    "end": "2047440"
  },
  {
    "text": "yeah i mean we all know the the the winform stories with like",
    "start": "2047440",
    "end": "2052638"
  },
  {
    "text": "event handlers and like gazillion lines of code while the application was expanding and here you will keep that",
    "start": "2052639",
    "end": "2059919"
  },
  {
    "text": "separation really really nice and with this in place i did not change",
    "start": "2059919",
    "end": "2066240"
  },
  {
    "text": "that thing on top and now i actually did forget it but let me quickly",
    "start": "2066240",
    "end": "2072158"
  },
  {
    "text": "put this one in m v v m",
    "start": "2072159",
    "end": "2079280"
  },
  {
    "text": "like this all right so now i have changed the buttons again and what you'll see is",
    "start": "2079520",
    "end": "2086398"
  },
  {
    "text": "that this will actually work the exact same way yeah so this is a third approach of",
    "start": "2086399",
    "end": "2094000"
  },
  {
    "text": "maintaining that state and you can imagine that you can have stayed now with the mvvm approach you can have",
    "start": "2094000",
    "end": "2099440"
  },
  {
    "text": "different view models which will maintain different sorts of states because it depends on the functionality",
    "start": "2099440",
    "end": "2104560"
  },
  {
    "text": "of your ui you can also use a combination of of all of them yeah i mean you can have like",
    "start": "2104560",
    "end": "2111200"
  },
  {
    "text": "this state machine being injected in one of the few models and still have access to",
    "start": "2111200",
    "end": "2116480"
  },
  {
    "text": "globally available data so you can combine that",
    "start": "2116480",
    "end": "2121838"
  },
  {
    "text": "all right so yeah we have time for another one and",
    "start": "2122400",
    "end": "2128000"
  },
  {
    "text": "is there any of you because this is a bit of a complex one and i mean",
    "start": "2128000",
    "end": "2133040"
  },
  {
    "text": "i just love the way it works but you should be very aware of",
    "start": "2133040",
    "end": "2138400"
  },
  {
    "text": "if you really need it i mean it's quite a bit of work but it's it's a nice idea but let's let",
    "start": "2138400",
    "end": "2145520"
  },
  {
    "text": "me ask you guys who of you is also doing react development or angular",
    "start": "2145520",
    "end": "2152960"
  },
  {
    "text": "okay yeah okay so the last thing i'm going to explain",
    "start": "2152960",
    "end": "2158000"
  },
  {
    "text": "to you is then probably something that you are already aware of which is the flux",
    "start": "2158000",
    "end": "2164880"
  },
  {
    "text": "pattern i mean particularly with react it pretty much comes out of the box",
    "start": "2164880",
    "end": "2171200"
  },
  {
    "text": "so for all of you i have taken this from an article which is found on the link",
    "start": "2171200",
    "end": "2176400"
  },
  {
    "text": "below and if you want to go this approach i would definitely advise you to get into this because if you're not",
    "start": "2176400",
    "end": "2183280"
  },
  {
    "text": "familiar with the flux pattern it takes a bit of time to like grasp the whole idea behind it it's very powerful",
    "start": "2183280",
    "end": "2190800"
  },
  {
    "text": "but it's a lot of work and the question is do you really need this in your front",
    "start": "2190800",
    "end": "2195920"
  },
  {
    "text": "end if you want to have like the state management kept to a minimum",
    "start": "2195920",
    "end": "2202560"
  },
  {
    "text": "you might not want to do this but again i do like the approach so the idea of the flux pattern is that you are",
    "start": "2202560",
    "end": "2210240"
  },
  {
    "text": "dealing with immutable state you basically use an",
    "start": "2210240",
    "end": "2216720"
  },
  {
    "text": "action to pass in a change of state",
    "start": "2216720",
    "end": "2224160"
  },
  {
    "text": "once that state has changed there can be certain elements certain components that",
    "start": "2224320",
    "end": "2229920"
  },
  {
    "text": "can register to those changes on certain states",
    "start": "2229920",
    "end": "2235599"
  },
  {
    "text": "so the dispatcher will actually make sure that everybody is notified",
    "start": "2235599",
    "end": "2241280"
  },
  {
    "text": "that something has changed and you saw me using",
    "start": "2241280",
    "end": "2246640"
  },
  {
    "text": "some sort of immutable thing with the state machine by making their property read only so the idea is you can only",
    "start": "2246640",
    "end": "2254480"
  },
  {
    "text": "change state by calling that dispatcher",
    "start": "2254480",
    "end": "2259839"
  },
  {
    "text": "passing in the state change that you want and it will make sure that nobody else",
    "start": "2259839",
    "end": "2266480"
  },
  {
    "text": "in your application illegally can change that state and it",
    "start": "2266480",
    "end": "2271599"
  },
  {
    "text": "makes you yeah come up with all kinds of things that you were not anticipating basically",
    "start": "2271599",
    "end": "2278400"
  },
  {
    "text": "so i'm gonna show you i'm not gonna do the whole live coding thing because it's",
    "start": "2278400",
    "end": "2284400"
  },
  {
    "text": "it's a bit much anyway but i will point you out to how this typically works",
    "start": "2284400",
    "end": "2291680"
  },
  {
    "text": "and for that i put up another application and this application is",
    "start": "2291680",
    "end": "2299760"
  },
  {
    "text": "in case you forgot how it looked it's based on the original microsoft template",
    "start": "2299760",
    "end": "2305280"
  },
  {
    "text": "and let me see where it will pop up eventually",
    "start": "2305280",
    "end": "2312760"
  },
  {
    "text": "was that the right one no this was the wrong one",
    "start": "2312960",
    "end": "2318400"
  },
  {
    "text": "i need this one yeah this is actually the the product",
    "start": "2319119",
    "end": "2324480"
  },
  {
    "text": "that i have been using was a blazer server project this is actually a blazer web assembly one",
    "start": "2324480",
    "end": "2330000"
  },
  {
    "text": "all right so how does this work well i have this counter demo",
    "start": "2330000",
    "end": "2335359"
  },
  {
    "text": "and if i go to the counter and i click what you'll see is that",
    "start": "2335359",
    "end": "2340640"
  },
  {
    "text": "there are two elements being updated the counter over there and the counter over there",
    "start": "2340640",
    "end": "2346560"
  },
  {
    "text": "and this is the very basic introduction on how to apply the flux pattern on your",
    "start": "2346560",
    "end": "2352160"
  },
  {
    "text": "application so how how do we approach this well",
    "start": "2352160",
    "end": "2358880"
  },
  {
    "text": "if we take a look what i first did i added the the fluxr packages to my",
    "start": "2358880",
    "end": "2365839"
  },
  {
    "text": "application which are available on nuget it's free and you can just use it and there is some good documentation with it",
    "start": "2365839",
    "end": "2373119"
  },
  {
    "text": "as well but to give you an idea of the concept of flux",
    "start": "2373119",
    "end": "2379760"
  },
  {
    "text": "it works with features and what i've done is i have created a folder which is",
    "start": "2379760",
    "end": "2385920"
  },
  {
    "text": "called feature and in this case i am dealing with the most simple one which is the counter",
    "start": "2385920",
    "end": "2392960"
  },
  {
    "text": "the counter feature has one or more pages so this also",
    "start": "2392960",
    "end": "2398880"
  },
  {
    "text": "requires a slightly different setup of the project because you are dealing with those features and you want to make sure",
    "start": "2398880",
    "end": "2405119"
  },
  {
    "text": "that you can find that stuff back again as well in this case i have this one page",
    "start": "2405119",
    "end": "2412319"
  },
  {
    "text": "which is the counter and then there is the counter store",
    "start": "2412319",
    "end": "2419920"
  },
  {
    "text": "and the counter store well obviously there are debates on whether to put everything in separate files or not but",
    "start": "2419920",
    "end": "2427040"
  },
  {
    "text": "for this demo i put it all in one file to give you an idea what is involved here",
    "start": "2427040",
    "end": "2432880"
  },
  {
    "text": "the counter has a state now what you see here is that i have a",
    "start": "2432880",
    "end": "2439839"
  },
  {
    "text": "counter state and it has a property called current count",
    "start": "2439839",
    "end": "2445359"
  },
  {
    "text": "i did not make this a class but i made this a record and why did i do that well a record is",
    "start": "2445359",
    "end": "2451440"
  },
  {
    "text": "obviously a bit more lightweight but more important i can create a copy of a record",
    "start": "2451440",
    "end": "2460240"
  },
  {
    "text": "instead of a same reference so if i have object a and i've got a var b and i say object a b",
    "start": "2460240",
    "end": "2469119"
  },
  {
    "text": "equals a i'll get a reference to that same object while with a record it's going to be a",
    "start": "2469119",
    "end": "2475280"
  },
  {
    "text": "copy which is excellent for state and it's way easier as cloning like this",
    "start": "2475280",
    "end": "2481839"
  },
  {
    "text": "entire object so this is why a record comes in quite nice",
    "start": "2481839",
    "end": "2487040"
  },
  {
    "text": "and i have decorated this current count with a get and i'm in",
    "start": "2487040",
    "end": "2492839"
  },
  {
    "text": "it and the init means that i can only",
    "start": "2492839",
    "end": "2498160"
  },
  {
    "text": "set this current count once i create a new",
    "start": "2498160",
    "end": "2504160"
  },
  {
    "text": "entity of this counter state and the way that that works is",
    "start": "2504319",
    "end": "2510319"
  },
  {
    "text": "if we check out we we go down a bit because the feature is going to be coded in as well",
    "start": "2510319",
    "end": "2518319"
  },
  {
    "text": "and this is the feature that this state is providing",
    "start": "2518319",
    "end": "2523680"
  },
  {
    "text": "basically this feature is derived from one of the base classes of the flexor package and",
    "start": "2523680",
    "end": "2531680"
  },
  {
    "text": "the feature is a generic type so i pass in that counter state type that's what",
    "start": "2531680",
    "end": "2536720"
  },
  {
    "text": "we're dealing with for development purposes i would certainly give that a i would override",
    "start": "2536720",
    "end": "2543680"
  },
  {
    "text": "the get name and use the counter and i will show you in a minute why",
    "start": "2543680",
    "end": "2549359"
  },
  {
    "text": "and then we have to override the get initial state so once this thing gets",
    "start": "2549359",
    "end": "2554800"
  },
  {
    "text": "started it needs to have an initial state and this is with the init that i was mentioning on",
    "start": "2554800",
    "end": "2561040"
  },
  {
    "text": "the record you uh can pass that initial value like",
    "start": "2561040",
    "end": "2566079"
  },
  {
    "text": "this i can't change this anymore and this is exactly what is important with fluxor we",
    "start": "2566079",
    "end": "2571599"
  },
  {
    "text": "want immutable state and this is how you can do that",
    "start": "2571599",
    "end": "2577680"
  },
  {
    "text": "so the next thing what we need is we need to define a class",
    "start": "2577680",
    "end": "2584240"
  },
  {
    "text": "which defines the action that we want to apply",
    "start": "2584240",
    "end": "2589680"
  },
  {
    "text": "on this state and that action in this case would be the",
    "start": "2589680",
    "end": "2594720"
  },
  {
    "text": "increment action okay so typically what happens if i hit that button",
    "start": "2594720",
    "end": "2600720"
  },
  {
    "text": "it just needs to be a class because this type is going to be used at runtime to identify what needs to go so this this",
    "start": "2601119",
    "end": "2608560"
  },
  {
    "text": "increment action is just like a type declaration that we need and we can use that later on",
    "start": "2608560",
    "end": "2614480"
  },
  {
    "text": "and where do we use that well that's in this reducer this reducer class is a static",
    "start": "2614480",
    "end": "2622640"
  },
  {
    "text": "class it doesn't maintain any state at all this is very important this is just",
    "start": "2622640",
    "end": "2627760"
  },
  {
    "text": "a dumb class with a static method inside which is",
    "start": "2627760",
    "end": "2634160"
  },
  {
    "text": "decorated with the reducer method and it receives a counter increment action",
    "start": "2634160",
    "end": "2641040"
  },
  {
    "text": "and so this is pretty much all the boilerplate this is what i mentioned when i started on this you need to",
    "start": "2641040",
    "end": "2647040"
  },
  {
    "text": "decide whether you need this it's kind of cool but it's a lot of stuff that you need to",
    "start": "2647040",
    "end": "2652079"
  },
  {
    "text": "take care of but once it runs it's like yeah technically it's like really cool",
    "start": "2652079",
    "end": "2659520"
  },
  {
    "text": "so this on increment what happens here if that that button is clicked and that",
    "start": "2659520",
    "end": "2666000"
  },
  {
    "text": "state needs to be incremented what i'll do i'll take the current state in that's on",
    "start": "2666000",
    "end": "2672560"
  },
  {
    "text": "increment i'll create a copy of it",
    "start": "2672560",
    "end": "2678640"
  },
  {
    "text": "but i'll increment the copy i was mentioning earlier with the state",
    "start": "2678800",
    "end": "2685119"
  },
  {
    "text": "machine i'll return the old value this is typically the same but this takes it a step further because what this",
    "start": "2685119",
    "end": "2691839"
  },
  {
    "text": "actually does it keeps track of all the state changes",
    "start": "2691839",
    "end": "2698000"
  },
  {
    "text": "in the in the flux pattern so if i click it",
    "start": "2698000",
    "end": "2705359"
  },
  {
    "text": "the the old state will also be kept somewhere that's all part of this package and that makes it quite nice",
    "start": "2705359",
    "end": "2712880"
  },
  {
    "text": "specifically if you run into issues with syncing issues and so on you can actually track that back you can roll",
    "start": "2712880",
    "end": "2719040"
  },
  {
    "text": "back the state which is quite cool and this is also why we were using that",
    "start": "2719040",
    "end": "2725599"
  },
  {
    "text": "record in the beginning because i can use this return state width and because i set the init i can",
    "start": "2725599",
    "end": "2732400"
  },
  {
    "text": "exactly change it here and nowhere else right that's the whole idea",
    "start": "2732400",
    "end": "2737839"
  },
  {
    "text": "all right so this is like the basic setup for it and then if we go back to the page",
    "start": "2737839",
    "end": "2745119"
  },
  {
    "text": "you can do this on a couple of separate several ways the first one is",
    "start": "2745119",
    "end": "2750319"
  },
  {
    "text": "the most easy one i'll derive my component from the flexor component",
    "start": "2750319",
    "end": "2756480"
  },
  {
    "text": "you can also have your own base class and implement an interface and do a couple of methods and you can do it",
    "start": "2756480",
    "end": "2762480"
  },
  {
    "text": "yourself as well but for this we'll just use the flexor component it will take care of updating etc etc",
    "start": "2762480",
    "end": "2770160"
  },
  {
    "text": "i will inject the state and it's going to be that counter state",
    "start": "2770160",
    "end": "2776480"
  },
  {
    "text": "and fluxer takes care of getting the right thing out of the box",
    "start": "2776480",
    "end": "2781839"
  },
  {
    "text": "but because i need to do something with that state by clicking that button i will also need",
    "start": "2781839",
    "end": "2788720"
  },
  {
    "text": "that dispatcher so this is a generic dispatcher",
    "start": "2788720",
    "end": "2795520"
  },
  {
    "text": "in this case i will get the state out of this counter state by using this one so",
    "start": "2796000",
    "end": "2802319"
  },
  {
    "text": "this projects the current count the state of this counter and the button will execute the",
    "start": "2802319",
    "end": "2809040"
  },
  {
    "text": "increment count here and this will do the following i will",
    "start": "2809040",
    "end": "2815359"
  },
  {
    "text": "execute the dispatch message on the dispatcher by passing in the action that i want to",
    "start": "2815359",
    "end": "2821920"
  },
  {
    "text": "apply which is the new counter increment action",
    "start": "2821920",
    "end": "2827040"
  },
  {
    "text": "and so now the dispatcher will actually check the all the code that we have been doing it",
    "start": "2827040",
    "end": "2832560"
  },
  {
    "text": "will check those reducer methods it will check the attributes on that et cetera et cetera and it will find the correct",
    "start": "2832560",
    "end": "2838960"
  },
  {
    "text": "method in that static class and it will execute it and this you didn't see me do any state change",
    "start": "2838960",
    "end": "2846240"
  },
  {
    "text": "whatsoever that's all been taken care of by by fluxer",
    "start": "2846240",
    "end": "2851520"
  },
  {
    "text": "i obviously also did something in the navigation menu and the navigation menu i needed to",
    "start": "2851520",
    "end": "2858240"
  },
  {
    "text": "update that state as well so what i've hear is i'm injecting that same state but i",
    "start": "2858240",
    "end": "2864720"
  },
  {
    "text": "don't need to like change anything so i don't need a dispatcher i just want to have that state",
    "start": "2864720",
    "end": "2870319"
  },
  {
    "text": "and with this particular case i will update that state just by by doing this",
    "start": "2870319",
    "end": "2877200"
  },
  {
    "text": "and also i derive the left menu from the from the flexor component so i don't need to do a state has changed or",
    "start": "2877200",
    "end": "2884319"
  },
  {
    "text": "whatsoever that's all been taken care of by that that base component",
    "start": "2884319",
    "end": "2889520"
  },
  {
    "text": "and now yeah what you already saw me do is if i would actually execute it again",
    "start": "2889520",
    "end": "2897359"
  },
  {
    "text": "oh before i execute it again i do want to show you a couple of things that i have",
    "start": "2897680",
    "end": "2903200"
  },
  {
    "text": "been setting up and this is actually one of the cool things that come with this whole",
    "start": "2903200",
    "end": "2909520"
  },
  {
    "text": "pattern you obviously need to tell your",
    "start": "2909520",
    "end": "2915839"
  },
  {
    "text": "application to use this stuff so what i have done is um",
    "start": "2915839",
    "end": "2921280"
  },
  {
    "text": "i have add the fluxer i'm calling the addfluxer",
    "start": "2921280",
    "end": "2926640"
  },
  {
    "text": "and i installed the redux dev tools as well",
    "start": "2926640",
    "end": "2932079"
  },
  {
    "text": "and i'm configuring it here as well and so this is how you would set up the",
    "start": "2932160",
    "end": "2939040"
  },
  {
    "text": "fluxer state storage and the only thing you need to do is you",
    "start": "2939040",
    "end": "2944960"
  },
  {
    "text": "need to pass in the libraries it needs to scan for your reducer methods and all",
    "start": "2944960",
    "end": "2950160"
  },
  {
    "text": "the code that is involved all the boilerplate code basically",
    "start": "2950160",
    "end": "2954960"
  },
  {
    "text": "and with this in place and particularly the use redux dev tools i can show you a",
    "start": "2955520",
    "end": "2960559"
  },
  {
    "text": "really cool trick for with that and for i'm not sure if i have that installed on",
    "start": "2960559",
    "end": "2967200"
  },
  {
    "text": "edge so let me open up chrome to make sure that i have that there",
    "start": "2967200",
    "end": "2973280"
  },
  {
    "text": "let me pass in the url",
    "start": "2974160",
    "end": "2978558"
  },
  {
    "text": "and paste this in all right so here we see the application",
    "start": "2981760",
    "end": "2987760"
  },
  {
    "text": "and now i'm going to click that all works and obviously if i go away it will still be there because that counter is",
    "start": "2987760",
    "end": "2994319"
  },
  {
    "text": "still five you see so the state will be available throughout the life cycle of your application",
    "start": "2994319",
    "end": "2999520"
  },
  {
    "text": "but now the cool thing is if i open up the developer tools",
    "start": "2999520",
    "end": "3004720"
  },
  {
    "text": "and i will go to my uh what was that again i go to this redux",
    "start": "3004720",
    "end": "3012960"
  },
  {
    "text": "thing here this is actually which is",
    "start": "3012960",
    "end": "3018559"
  },
  {
    "text": "extremely cool because you can actually see what is happening here",
    "start": "3018559",
    "end": "3025599"
  },
  {
    "text": "you can see what actions have been executed you can see",
    "start": "3025599",
    "end": "3031440"
  },
  {
    "text": "what the initial state was it changed from uh one to two",
    "start": "3031440",
    "end": "3038160"
  },
  {
    "text": "you can you can check that state any anywhere in time which is obviously",
    "start": "3038160",
    "end": "3043359"
  },
  {
    "text": "for development purposes extremely cool i've also set up another one uh which is",
    "start": "3043359",
    "end": "3050559"
  },
  {
    "text": "the fetch data i've done that on the fluxr as well i'll go over that code",
    "start": "3050559",
    "end": "3056400"
  },
  {
    "text": "in a bit because it obviously has a bit more involved i didn't do the show celsius versus",
    "start": "3056400",
    "end": "3062880"
  },
  {
    "text": "fahrenheit because there are a couple of other things that needs to be taken care of on this way",
    "start": "3062880",
    "end": "3070558"
  },
  {
    "text": "can i make this apparently not what you will now see is that the",
    "start": "3070720",
    "end": "3076880"
  },
  {
    "text": "weather forecast action has done something as well and the weather forecast data is there",
    "start": "3076880",
    "end": "3083280"
  },
  {
    "text": "as well you see so you've got some incredible powerful developer tools to",
    "start": "3083280",
    "end": "3088880"
  },
  {
    "text": "see where your state has changed why it changed and and obviously at run time you want",
    "start": "3088880",
    "end": "3094800"
  },
  {
    "text": "to disable that but i mean for debugging this is extremely",
    "start": "3094800",
    "end": "3099920"
  },
  {
    "text": "nice to have but again it's it's a bit more work because if we would take a look at the",
    "start": "3099920",
    "end": "3105839"
  },
  {
    "text": "weather thing um that is",
    "start": "3105839",
    "end": "3111839"
  },
  {
    "text": "done slightly different i mean there is obviously a couple of things involved here i've got the page",
    "start": "3111839",
    "end": "3117760"
  },
  {
    "text": "which is not the exciting part anymore but the weather store has something else",
    "start": "3117760",
    "end": "3123839"
  },
  {
    "text": "involved there so here we see that record again with the data which holds the state",
    "start": "3123839",
    "end": "3130000"
  },
  {
    "text": "we have the feature described and now we have like an initialize then",
    "start": "3130000",
    "end": "3136079"
  },
  {
    "text": "we have a loading property whether that data is there we have an action",
    "start": "3136079",
    "end": "3142160"
  },
  {
    "text": "and we have the reducer which is a bit in the same line but what we have also",
    "start": "3142160",
    "end": "3147359"
  },
  {
    "text": "now is we have an effect on this particular",
    "start": "3147359",
    "end": "3154720"
  },
  {
    "text": "action or a state and this effect one of the effects of this is that the",
    "start": "3155440",
    "end": "3162640"
  },
  {
    "text": "backup needs to be called to get the data this is not done in the front and",
    "start": "3162640",
    "end": "3168000"
  },
  {
    "text": "anymore this is all been taken care of by the fluxer package i mean by defining",
    "start": "3168000",
    "end": "3173440"
  },
  {
    "text": "this effect to fetch data on the month is obviously",
    "start": "3173440",
    "end": "3178960"
  },
  {
    "text": "yeah all gone away from the ui you don't have that in there anymore this can be done",
    "start": "3178960",
    "end": "3185040"
  },
  {
    "text": "asynchronously at any moment in time and your your ui will still be updated i mean this is obviously quite",
    "start": "3185040",
    "end": "3191760"
  },
  {
    "text": "quite nice yeah but it requires you to think slightly different",
    "start": "3191760",
    "end": "3197680"
  },
  {
    "text": "and so we have here the load forecast on increment and this this thing can just just used",
    "start": "3197680",
    "end": "3204079"
  },
  {
    "text": "constructor injection to pass in the http client it can have the counter state in there as well",
    "start": "3204079",
    "end": "3210720"
  },
  {
    "text": "and and and yeah this is how the effect will like",
    "start": "3210720",
    "end": "3215839"
  },
  {
    "text": "load in that data here you see and well if i would actually",
    "start": "3215839",
    "end": "3222640"
  },
  {
    "text": "go to the application i on purpose put in a delay of a second and then i'll dispatch a message here",
    "start": "3222640",
    "end": "3230640"
  },
  {
    "text": "that the data has been changed here so what basically happens if i do that",
    "start": "3230640",
    "end": "3236000"
  },
  {
    "text": "and i go to the refresh forecast",
    "start": "3236000",
    "end": "3241760"
  },
  {
    "text": "this is a separate toaster which was defined somewhere else but it has been registered to that to that particular",
    "start": "3243920",
    "end": "3250960"
  },
  {
    "text": "action and that will make make it appear as well so it's the idea is very good",
    "start": "3250960",
    "end": "3258640"
  },
  {
    "text": "it's it's quite complicated and you should certainly ask yourself",
    "start": "3258640",
    "end": "3264480"
  },
  {
    "text": "do i need this uh that's that's the bottom line if you if you're dealing with like local data storage like you've",
    "start": "3264480",
    "end": "3270240"
  },
  {
    "text": "got a web assembly which might be offline for some time you know when you still need to deal with",
    "start": "3270240",
    "end": "3275520"
  },
  {
    "text": "data this might be an excellent choice for you but if you're dealing with like smaller state stuff",
    "start": "3275520",
    "end": "3282480"
  },
  {
    "text": "i mean it might be a bit overkill but it is definitely worth checking this out i mean",
    "start": "3282480",
    "end": "3288880"
  },
  {
    "text": "for sure and then the development tools the redux tools that come with with chrome is",
    "start": "3288880",
    "end": "3294160"
  },
  {
    "text": "it's awesome so yeah with this i",
    "start": "3294160",
    "end": "3299200"
  },
  {
    "text": "think that we uh let me see where did my slide go actually oh",
    "start": "3299200",
    "end": "3305359"
  },
  {
    "text": "yeah that was it yeah yeah so with this i think i've given you a couple of options so remember the",
    "start": "3305359",
    "end": "3311920"
  },
  {
    "text": "cascading state is the most easy one i guess for a lot of solutions",
    "start": "3311920",
    "end": "3317119"
  },
  {
    "text": "it's just right now you don't need to worry too much about this state change then i mean the elements that actually",
    "start": "3317119",
    "end": "3323520"
  },
  {
    "text": "changed are being refreshed only you saw that on the demo and the second one is the state machine",
    "start": "3323520",
    "end": "3330240"
  },
  {
    "text": "which is a bit more invisible and it's a bit more under the hood and you have a bit more control on",
    "start": "3330240",
    "end": "3336880"
  },
  {
    "text": "when stuff needs to be updated or notified or whatsoever then you have the mvvm pattern and then",
    "start": "3336880",
    "end": "3343920"
  },
  {
    "text": "obviously you have the flux pattern and you could have like a combination you could also apply the mvv and pattern",
    "start": "3343920",
    "end": "3350720"
  },
  {
    "text": "together with the flux pattern or you could have the cascading state together with like a state machine or",
    "start": "3350720",
    "end": "3357200"
  },
  {
    "text": "whatsoever or you can combine several things but the last two ones you have to",
    "start": "3357200",
    "end": "3362400"
  },
  {
    "text": "make up your mind like yeah this is what we're gonna do from start from from the start basically",
    "start": "3362400",
    "end": "3368559"
  },
  {
    "text": "so yeah with this i am pretty much done",
    "start": "3368559",
    "end": "3374559"
  },
  {
    "text": "i hope that i have given you some ideas if there are any questions yeah",
    "start": "3374559",
    "end": "3380640"
  },
  {
    "text": "yeah",
    "start": "3380640",
    "end": "3382880"
  },
  {
    "text": "that's all being dealt with by by uh by the flexor package basically you saw me",
    "start": "3387839",
    "end": "3393359"
  },
  {
    "text": "use the add fluxer method in the startup huh",
    "start": "3393359",
    "end": "3398799"
  },
  {
    "text": "and that's obviously like an extension method which is uh let me see that was right here",
    "start": "3398799",
    "end": "3407839"
  },
  {
    "text": "yeah so this this at fluxer method it will actually you'll need to",
    "start": "3408000",
    "end": "3414160"
  },
  {
    "text": "define the assemblies it needs to scan at startup and it will find everything automatically for you",
    "start": "3414160",
    "end": "3419359"
  },
  {
    "text": "and you don't need to deal with scoped or whatsoever that's all be taken care of by flexor",
    "start": "3419359",
    "end": "3425280"
  },
  {
    "text": "no nothing to be done there",
    "start": "3425280",
    "end": "3429040"
  },
  {
    "text": "yeah you can customize quite a bit of things yeah but i mean the whole idea about this is that that fluxr takes care of",
    "start": "3431440",
    "end": "3439040"
  },
  {
    "text": "the life cycles of your states etc etc",
    "start": "3439040",
    "end": "3444079"
  },
  {
    "text": "that's that's the whole idea so on one end you need to do a bit of plumbing and a bit of code to set it all up",
    "start": "3444079",
    "end": "3450799"
  },
  {
    "text": "but then at runtime fluxr there's like uh quite a bunch of things for you",
    "start": "3450799",
    "end": "3456079"
  },
  {
    "text": "um so yeah that's that's that's a bit uh how that works basically",
    "start": "3456079",
    "end": "3462400"
  },
  {
    "text": "so any more questions yeah",
    "start": "3464559",
    "end": "3470200"
  },
  {
    "text": "that is yeah that is something you can use as well but that is obviously something which is coming from the wpf",
    "start": "3491440",
    "end": "3499040"
  },
  {
    "text": "world yeah so the i observable collection eye observable techniques basically for that you could",
    "start": "3499040",
    "end": "3506400"
  },
  {
    "text": "you can use that approach as well of course yeah that's that's another approach yeah but",
    "start": "3506400",
    "end": "3511599"
  },
  {
    "text": "in case yeah that is certainly possible",
    "start": "3511599",
    "end": "3516440"
  },
  {
    "text": "yeah it depends a bit on the on the requirements of the application i mean right now i'm i'm i'm working on an",
    "start": "3519599",
    "end": "3525359"
  },
  {
    "text": "application and i'm you definitely using the mvvm pattern but there are like certain data services that i am",
    "start": "3525359",
    "end": "3531599"
  },
  {
    "text": "implementing the i observable collection because i need to get notified somehow",
    "start": "3531599",
    "end": "3537359"
  },
  {
    "text": "if something on that collection changes so yeah i mean you can have like a few model where a data service gets injected",
    "start": "3537359",
    "end": "3545200"
  },
  {
    "text": "and if that data service holds like some eye observable collection or something you could actually code something inside",
    "start": "3545200",
    "end": "3550799"
  },
  {
    "text": "if you model to do something with that you know it's a bit like yeah what what the requirements of your",
    "start": "3550799",
    "end": "3557359"
  },
  {
    "text": "application are i don't have like a particular thing like don't use it or use it i mean",
    "start": "3557359",
    "end": "3563359"
  },
  {
    "text": "use it whenever it saves you time basically yeah",
    "start": "3563359",
    "end": "3569040"
  },
  {
    "text": "yes",
    "start": "3569440",
    "end": "3572440"
  },
  {
    "text": "yep",
    "start": "3578000",
    "end": "3580240"
  },
  {
    "text": "yeah it's it's gonna get big yeah yeah yeah and i do have to say i have asked a bit",
    "start": "3583200",
    "end": "3590240"
  },
  {
    "text": "around as well because i was kind of intrigued by the whole way that this stuff works actually but the first thing",
    "start": "3590240",
    "end": "3596720"
  },
  {
    "text": "that i i thought was this is quite a bit of work to get it's all together and it's all you have to be",
    "start": "3596720",
    "end": "3603680"
  },
  {
    "text": "very abstract about you have to see it in front of you like how am i going to do that with the actions and stuff it's",
    "start": "3603680",
    "end": "3609040"
  },
  {
    "text": "a bit of work but the second thing i ask myself yeah this is going to take up quite a bit of",
    "start": "3609040",
    "end": "3614799"
  },
  {
    "text": "memory i guess if you can have like those states and the history of states and",
    "start": "3614799",
    "end": "3621040"
  },
  {
    "text": "i've asked around apparently people really don't care about the memory consumption of the",
    "start": "3621040",
    "end": "3627119"
  },
  {
    "text": "browser or anything i mean i was like i'm a bit like old school i mean i",
    "start": "3627119",
    "end": "3632240"
  },
  {
    "text": "started with like a little z80 computer with machine coding and you know and i thought like",
    "start": "3632240",
    "end": "3638799"
  },
  {
    "text": "apparently it doesn't matter so much these days on the browser",
    "start": "3638799",
    "end": "3644319"
  },
  {
    "text": "so i don't know but i mean all the javascript guys are using this stuff as well the same",
    "start": "3644319",
    "end": "3650960"
  },
  {
    "text": "techniques i mean they are pumping your browser full with like all this stuff so",
    "start": "3650960",
    "end": "3656720"
  },
  {
    "text": "yeah apparently it works",
    "start": "3656720",
    "end": "3659838"
  },
  {
    "text": "this will obviously yeah yeah yeah well",
    "start": "3666160",
    "end": "3672000"
  },
  {
    "text": "yeah i mean i don't want to i mean i have the impression that obviously",
    "start": "3672000",
    "end": "3677440"
  },
  {
    "text": "the more the younger generation of developers i mean i don't want to kick anybody",
    "start": "3677440",
    "end": "3683200"
  },
  {
    "text": "on the on the legs or whatever but they don't really have an idea on what's",
    "start": "3683200",
    "end": "3689280"
  },
  {
    "text": "what it takes to do certain things with the hardware you know but apparently it works i mean",
    "start": "3689280",
    "end": "3695440"
  },
  {
    "text": "they dump everything in the browser and apparently the browser will",
    "start": "3695440",
    "end": "3700799"
  },
  {
    "text": "not die for that reason or something but yeah on the server it will take a load yeah",
    "start": "3700799",
    "end": "3705920"
  },
  {
    "text": "but you could actually i mean it's quite customizable so you could also be like using",
    "start": "3705920",
    "end": "3711680"
  },
  {
    "text": "yeah yeah yeah yeah yeah maybe you could have like uh uh what's it called like the the caching",
    "start": "3711680",
    "end": "3718720"
  },
  {
    "text": "uh service what's it called again i forgot the name the",
    "start": "3718720",
    "end": "3723839"
  },
  {
    "text": "the shared caching service which runs on amazon and on redis",
    "start": "3723839",
    "end": "3730559"
  },
  {
    "text": "you could probably load it off there yeah",
    "start": "3730559",
    "end": "3736319"
  },
  {
    "text": "all right yeah that was it",
    "start": "3736720",
    "end": "3741839"
  },
  {
    "text": "well thank you very much",
    "start": "3741839",
    "end": "3745200"
  },
  {
    "text": "if you have any questions afterwards so whatsoever you can always reach me by my email address or you can tweet you send",
    "start": "3748000",
    "end": "3754160"
  },
  {
    "text": "me a tweet or check out the the first demo the reducer",
    "start": "3754160",
    "end": "3760760"
  }
]