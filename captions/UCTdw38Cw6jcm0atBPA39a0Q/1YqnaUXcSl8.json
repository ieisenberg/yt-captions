[
  {
    "text": "okay welcome to clojurescript it's not just a language my name is",
    "start": "3220",
    "end": "9170"
  },
  {
    "text": "castelnou Olsen I work for called marker which is a consultancy here in town and",
    "start": "9170",
    "end": "15110"
  },
  {
    "text": "I'm going to be talking to you today about closure script and as the title indicates this talk will primarily be",
    "start": "15110",
    "end": "22400"
  },
  {
    "text": "about - not the main language so much but more the tooling around the language",
    "start": "22400",
    "end": "28910"
  },
  {
    "text": "so I've been working with web development for 15 years I worked",
    "start": "28910",
    "end": "34850"
  },
  {
    "text": "extensively with JavaScript and the various libraries and frameworks that popped up along the way and a few years",
    "start": "34850",
    "end": "41390"
  },
  {
    "text": "ago I started working with closure script and as of now I'm not jumped",
    "start": "41390",
    "end": "46970"
  },
  {
    "text": "yet so this is so far in my career been the definitely the most fun and productive",
    "start": "46970",
    "end": "52339"
  },
  {
    "text": "way I've found to develop web applications and while the language is obviously a part of that it really is a",
    "start": "52339",
    "end": "58850"
  },
  {
    "text": "tooling that's been built up around by the community that seals the deal and the idea of this talk is to try to sell",
    "start": "58850",
    "end": "65330"
  },
  {
    "text": "you some of my enthusiasm for that tooling by showing you how it works",
    "start": "65330",
    "end": "70539"
  },
  {
    "text": "so but before we get to the demos we have to talk a little bit about language",
    "start": "70539",
    "end": "75560"
  },
  {
    "text": "- you guys know what it's about so clojurescript is a functional language that compiles to JavaScript and",
    "start": "75560",
    "end": "82280"
  },
  {
    "text": "runs in the browser it is also a lisp and Lisp is a family of languages like",
    "start": "82280",
    "end": "88549"
  },
  {
    "text": "they first emerged in the 1950s and lisps have a certain some prejudice",
    "start": "88549",
    "end": "95990"
  },
  {
    "text": "against them with parentheses and so on and I'll get back to that in a moment but the main characteristics of the",
    "start": "95990",
    "end": "103490"
  },
  {
    "text": "closure script language is like I said it's a functional language and it has a suite of immutable data structures and",
    "start": "103490",
    "end": "111429"
  },
  {
    "text": "it has a huge standard library for working with immutable data structures and most of that affords you lacy",
    "start": "111429",
    "end": "119810"
  },
  {
    "text": "evaluation as well so I'll just I'm going to show you just a few examples to get you started so let's say you have a",
    "start": "119810",
    "end": "126740"
  },
  {
    "text": "list of numbers so that list being immutable means that whenever I perform",
    "start": "126740",
    "end": "131930"
  },
  {
    "text": "an operation like adding something to the list or splitting it into or whatever that operation will always create a new",
    "start": "131930",
    "end": "138770"
  },
  {
    "text": "collection so if we can see here can you read the text oh it's too far to the",
    "start": "138770",
    "end": "145160"
  },
  {
    "text": "left tell me okay is that good even better",
    "start": "145160",
    "end": "155349"
  },
  {
    "text": "okay so why thank you can see I have a collection called numbers and then I added the number four and I have a new",
    "start": "155349",
    "end": "162410"
  },
  {
    "text": "collection and hopefully my existing collection should still be the same and",
    "start": "162410",
    "end": "168519"
  },
  {
    "text": "it is because it's immutable so you can never really change in line values you",
    "start": "168519",
    "end": "174950"
  },
  {
    "text": "don't have mutable state or you do have a mutable state but you have specific constructs to work with mutable state",
    "start": "174950",
    "end": "180500"
  },
  {
    "text": "including scripts so this is this feature is to prime enabler of many of",
    "start": "180500",
    "end": "186590"
  },
  {
    "text": "the other cool things that I'll show you eventually another example would be to",
    "start": "186590",
    "end": "191690"
  },
  {
    "text": "create a sequence of a lot of numbers like a million numbers like that and",
    "start": "191690",
    "end": "198489"
  },
  {
    "text": "then I'll create a function that can square a number and just for demo",
    "start": "198489",
    "end": "205820"
  },
  {
    "text": "purposes we're going to print which number is being squared and then we're squaring that number this is my function",
    "start": "205820",
    "end": "213590"
  },
  {
    "text": "and now I'm going to create some squared numbers by mapping over my 1 million",
    "start": "213590",
    "end": "220220"
  },
  {
    "text": "numbers with this square function and here's the trick this is now being calculated blatantly so if I ask for the",
    "start": "220220",
    "end": "228590"
  },
  {
    "text": "first first four numbers of this collection we will see that a squared",
    "start": "228590",
    "end": "236810"
  },
  {
    "text": "map squared numbers ah sorry we'll try",
    "start": "236810",
    "end": "241819"
  },
  {
    "text": "it once more now if I ask for the first four numbers I'll get back 0 1 4 9 and then it prints",
    "start": "241819",
    "end": "248510"
  },
  {
    "text": "out square 1 0 2 3 so it's actually just performing the map on the items that we",
    "start": "248510",
    "end": "254209"
  },
  {
    "text": "do actually need it's not doing it a million times and if I do that once more we'll see that it's not going to",
    "start": "254209",
    "end": "261229"
  },
  {
    "text": "recompute the values at all because they're immutable so there's no point in reevaluating the function so that's",
    "start": "261229",
    "end": "269389"
  },
  {
    "text": "the core features that I'll focus on for now we're also have to talk a little bit",
    "start": "269389",
    "end": "275270"
  },
  {
    "text": "about parentheses because there's this myth that lisps have just huge amounts",
    "start": "275270",
    "end": "281240"
  },
  {
    "text": "of parentheses and for a clue to scripts sake it's partly true but it's also",
    "start": "281240",
    "end": "287139"
  },
  {
    "text": "partly myth and in the cases where it is true it's actually an advantage and I'll",
    "start": "287139",
    "end": "292520"
  },
  {
    "text": "show you some examples so the first thing that people notice is that when you have JavaScript code looks like this",
    "start": "292520",
    "end": "298490"
  },
  {
    "text": "you call a function if you do the same function call in closure script it's going to look like this so the",
    "start": "298490",
    "end": "303620"
  },
  {
    "text": "parentheses is all wacky placed on on the left side and this confuses people",
    "start": "303620",
    "end": "308659"
  },
  {
    "text": "but this doesn't really add parentheses right it just puts it in a weird place",
    "start": "308659",
    "end": "313810"
  },
  {
    "text": "another case where closure script usually does have more parentheses is in the case of arithmetic expressions so in",
    "start": "313810",
    "end": "321110"
  },
  {
    "text": "order for you to understand this expression the way that it's going to be evaluated you have to know more than",
    "start": "321110",
    "end": "327110"
  },
  {
    "text": "what it says on the paper because there are proceedings rules for operators right so you have to know which",
    "start": "327110",
    "end": "333020"
  },
  {
    "text": "operators being applied first so this could turn out as 11 or 15 depends on",
    "start": "333020",
    "end": "338150"
  },
  {
    "text": "how the engine understands your expression enclosure script you would just add parentheses to avoid this",
    "start": "338150",
    "end": "344479"
  },
  {
    "text": "problem at all so in this case there are more parentheses but it's an advantage because it's become more explicit and",
    "start": "344479",
    "end": "351819"
  },
  {
    "text": "closer Script doesn't have operator proceedings rules at all so it's just less stuff for you to know about which",
    "start": "351819",
    "end": "359810"
  },
  {
    "text": "in my book is a good thing okay here's a JavaScript function and I'll show you",
    "start": "359810",
    "end": "365960"
  },
  {
    "text": "the closure script equivalent and we'll compare them side-by-side so which has",
    "start": "365960",
    "end": "372259"
  },
  {
    "text": "the most parentheses it turns out that they both have the same amount of parentheses it's just that closure",
    "start": "372259",
    "end": "377689"
  },
  {
    "text": "script has more of the wrong kind and JavaScript has more of the squiggly kind but the more interesting aspect of this",
    "start": "377689",
    "end": "385430"
  },
  {
    "text": "comparison is that the closure script version does not really have a lot of syntax so in JavaScript you have syntax",
    "start": "385430",
    "end": "392300"
  },
  {
    "text": "to create a function you have syntax to do flow control there's syntax to return values in",
    "start": "392300",
    "end": "397759"
  },
  {
    "text": "closure script you have basically none of that so",
    "start": "397759",
    "end": "402889"
  },
  {
    "text": "we're gonna investigate the data types including script to understand why that is okay so this is going to be a really",
    "start": "402889",
    "end": "410780"
  },
  {
    "text": "quick race through a bunch of data structures including script I'm not intending for you guys to understand the",
    "start": "410780",
    "end": "416270"
  },
  {
    "text": "language very deeply at this point it's just trying to make a point about the syntax of the language so cluttered has",
    "start": "416270",
    "end": "422779"
  },
  {
    "text": "strengths strings are JavaScript strengths you can call JavaScript methods on them there's there's no layer",
    "start": "422779",
    "end": "428479"
  },
  {
    "text": "in between Clojure script also has keywords which are kind of like strengths you would use",
    "start": "428479",
    "end": "435560"
  },
  {
    "text": "them in cases where you want to address things so as keys and maps or objects",
    "start": "435560",
    "end": "441259"
  },
  {
    "text": "stuff like that they can also have namespaces as you see in the example",
    "start": "441259",
    "end": "447080"
  },
  {
    "text": "here we have numbers they are JavaScript numbers and then we have symbols which",
    "start": "447080",
    "end": "453439"
  },
  {
    "text": "in JavaScript you probably know them as just variable names or function names and that's also the role that they",
    "start": "453439",
    "end": "459500"
  },
  {
    "text": "usually play enclosure script but you can also process them as data which is important and then you have lists so",
    "start": "459500",
    "end": "469370"
  },
  {
    "text": "because lists are immutable like any other piece of data including script they also have value semantics so in",
    "start": "469370",
    "end": "477560"
  },
  {
    "text": "JavaScript you can compare string to another string and they will be the same if they have the same content but if you",
    "start": "477560",
    "end": "483349"
  },
  {
    "text": "take two arrays that are the different object instances they would not compare the same enclosure script they will they",
    "start": "483349",
    "end": "490399"
  },
  {
    "text": "have value semantics because of immutability and this applies to all of",
    "start": "490399",
    "end": "495560"
  },
  {
    "text": "the data structures including scripts so vectors are just a slightly different kind of list which would be the one that",
    "start": "495560",
    "end": "501289"
  },
  {
    "text": "you would use the most also has value semantics and then we have maps maps are",
    "start": "501289",
    "end": "507110"
  },
  {
    "text": "you'll use maps including script just like you use an object in JavaScript and",
    "start": "507110",
    "end": "512659"
  },
  {
    "text": "if you're the kind of developer that likes to discuss where to put the commas at the beginning or at the end you will",
    "start": "512659",
    "end": "518390"
  },
  {
    "text": "love closure script because you can have as many comments as you want closure script treats commas is whitespace so",
    "start": "518390",
    "end": "524570"
  },
  {
    "text": "you can leave them out or you can include them in if that helps you in",
    "start": "524570",
    "end": "529910"
  },
  {
    "text": "most cases maps and closure script will use keywords as keys so the structure will look like this",
    "start": "529910",
    "end": "535850"
  },
  {
    "text": "again you have value semantics so if you have two different maps with the same content they will compare true then we",
    "start": "535850",
    "end": "546990"
  },
  {
    "text": "have assets which are lists of unique things okay cool let's get back to our",
    "start": "546990",
    "end": "554490"
  },
  {
    "text": "function here so again we're looking at a function and now that we've quickly seen all the data that clutter Script",
    "start": "554490",
    "end": "560670"
  },
  {
    "text": "supports we can understand this piece of code and the different framing because the parentheses those are the syntax",
    "start": "560670",
    "end": "567209"
  },
  {
    "text": "literal for lists the square bracket here is the syntax literal for vectors",
    "start": "567209",
    "end": "572329"
  },
  {
    "text": "this here is a map so in fact closure script data is closure script code and",
    "start": "572329",
    "end": "579839"
  },
  {
    "text": "floater script code is closure script data so there's no particular syntax to the language other than that of its data",
    "start": "579839",
    "end": "585720"
  },
  {
    "text": "structures and this is a really elegant simplicity to it which means that you're",
    "start": "585720",
    "end": "591060"
  },
  {
    "text": "always working with data and when you evaluate data is code then the list form",
    "start": "591060",
    "end": "598560"
  },
  {
    "text": "will be a function call so in this case defin defines a function included script",
    "start": "598560",
    "end": "604020"
  },
  {
    "text": "but it's really just a special kind of function call the same with if if this",
    "start": "604020",
    "end": "609450"
  },
  {
    "text": "really just a function call and this is a gives Lisp it's peculiar look and",
    "start": "609450",
    "end": "617040"
  },
  {
    "text": "gives the rise to the parentheses myth but really it looks this way because",
    "start": "617040",
    "end": "622740"
  },
  {
    "text": "it's uniquely simple and elegant at its core so that's cool I'm gonna talk more",
    "start": "622740",
    "end": "629730"
  },
  {
    "text": "about why it's good for the code to be data a little bit later in the presentation okay",
    "start": "629730",
    "end": "636470"
  },
  {
    "text": "now I'm gonna show you the first tool which is fig wheel which is a tool",
    "start": "636470",
    "end": "641970"
  },
  {
    "text": "that's developed for instant feedback as you develop code and to do this I have",
    "start": "641970",
    "end": "647899"
  },
  {
    "text": "created a stupid little app to show you how it works so let me just resize my",
    "start": "647899",
    "end": "653910"
  },
  {
    "text": "and we know okay so it's just the app that it shows animal faces and there's a",
    "start": "653910",
    "end": "660149"
  },
  {
    "text": "small icon that you can click and you can choose to remove it or not okay so I",
    "start": "660149",
    "end": "667680"
  },
  {
    "text": "click this button it didn't really work so there's a bug in a bug in the program so we're gonna fix the bug in the program",
    "start": "667680",
    "end": "673910"
  },
  {
    "text": "so usually when you work with web applications you would then go to your code find the bug I'm not gonna tell you",
    "start": "673910",
    "end": "681570"
  },
  {
    "text": "all the details about this code I'm just gonna tell that here it says dilute it should have said delete so I fixed that",
    "start": "681570",
    "end": "688650"
  },
  {
    "text": "and then what you do you go back to the browser reload your app and then now you",
    "start": "688650",
    "end": "695100"
  },
  {
    "text": "have to retrace your steps click all the buttons and then figure yes okay I sold",
    "start": "695100",
    "end": "700230"
  },
  {
    "text": "the bug but this is kind of tedious right because the more complex your",
    "start": "700230",
    "end": "706260"
  },
  {
    "text": "application becomes the harder it will be for you to recreate the exact state that showed you the bug in the first",
    "start": "706260",
    "end": "711630"
  },
  {
    "text": "place and and you were going to be clicking and scrolling and doing these things over and over again and you lose",
    "start": "711630",
    "end": "717540"
  },
  {
    "text": "your flow right hopefully this is a familiar situation for you so now I want",
    "start": "717540",
    "end": "723180"
  },
  {
    "text": "to close this pop-up here by clicking somewhere and that doesn't work either so now I can do the same thing again or",
    "start": "723180",
    "end": "731400"
  },
  {
    "text": "we can try to do something better so the reason why the code got updated in the",
    "start": "731400",
    "end": "736410"
  },
  {
    "text": "first place is because I'm already running fig wheel which is a library but I'm not running it in its power mode so",
    "start": "736410",
    "end": "743190"
  },
  {
    "text": "let's fix that I'll ask it to include a repple which is a read eval print loop and I'll ask you to all auto load my",
    "start": "743190",
    "end": "752100"
  },
  {
    "text": "code and then I have to do something which takes a little bit of time",
    "start": "752100",
    "end": "758100"
  },
  {
    "text": "mmm okay reloads confit so now figure well it's going to dump",
    "start": "758100",
    "end": "764759"
  },
  {
    "text": "all the compiled code and compile everything from scratch and then I have two builds running so this is going to",
    "start": "764759",
    "end": "769980"
  },
  {
    "text": "take a little bit of time but once it's done we're not gonna have to wait for pretty much anything at all I'll just",
    "start": "769980",
    "end": "777569"
  },
  {
    "text": "find the file while over wedding so this takes about 20 seconds per built ish",
    "start": "777569",
    "end": "785120"
  },
  {
    "text": "cool okay so the idea now is that we're",
    "start": "785120",
    "end": "792660"
  },
  {
    "text": "going to add two to this section of the code this is the data that's being added for rendering when you're watching the",
    "start": "792660",
    "end": "799829"
  },
  {
    "text": "details so we want to add a cancel action into this so now I'm going to reload the app manually for one last",
    "start": "799829",
    "end": "806399"
  },
  {
    "text": "time and now I click here here now and now I want this to work clicking here",
    "start": "806399",
    "end": "812550"
  },
  {
    "text": "should close this thing so I can then go in here and add a cancel action again",
    "start": "812550",
    "end": "822540"
  },
  {
    "text": "the details of this isn't really all that important pictures basically I'm going to remove the show details flag",
    "start": "822540",
    "end": "829079"
  },
  {
    "text": "from this particular picture so when I do this figure well is hopefully going",
    "start": "829079",
    "end": "836040"
  },
  {
    "text": "to recompile my code and it should have reloaded the browser which it didn't so",
    "start": "836040",
    "end": "841889"
  },
  {
    "text": "that's interesting okay so now it works",
    "start": "841889",
    "end": "848660"
  },
  {
    "text": "something's amiss okay now you can see that every time I save",
    "start": "851029",
    "end": "856889"
  },
  {
    "text": "the file the browser gets updated and it's reloaded for me so this is one step",
    "start": "856889",
    "end": "863459"
  },
  {
    "text": "better now I don't have to press the reload button anymore but I still lose my context so if I go in here click this",
    "start": "863459",
    "end": "870029"
  },
  {
    "text": "one click here and then change my code then figueira is going to reload the",
    "start": "870029",
    "end": "875100"
  },
  {
    "text": "browser and I still lost the current state of my application so this is not really a much of an improvement at this",
    "start": "875100",
    "end": "882600"
  },
  {
    "text": "point in order to fix that less that my code has to be reloadable which means",
    "start": "882600",
    "end": "887910"
  },
  {
    "text": "that when closure script or yeah the process this file and places it into the browser",
    "start": "887910",
    "end": "893910"
  },
  {
    "text": "again it cannot override pre-existing global state because if it does then I",
    "start": "893910",
    "end": "900839"
  },
  {
    "text": "lose the state of the application and I'm back to scratch so clojurescript makes it really easy to solve this",
    "start": "900839",
    "end": "906509"
  },
  {
    "text": "problem because it has immutable data and it has specific tooling to manage mutable State which is the core of the",
    "start": "906509",
    "end": "914339"
  },
  {
    "text": "problem and in the case of this application I have only one piece of immutable state",
    "start": "914339",
    "end": "919350"
  },
  {
    "text": "which is defined here it's called store at this line and then",
    "start": "919350",
    "end": "925680"
  },
  {
    "text": "every time this file is being updated it's being loaded into the browser and it's just recreating the initial state",
    "start": "925680",
    "end": "931410"
  },
  {
    "text": "if I change the DEF to a Def once that's no longer going to happen that's going",
    "start": "931410",
    "end": "936990"
  },
  {
    "text": "to create the state one time I can manipulate it over time and then when the code is reloaded it's not going to",
    "start": "936990",
    "end": "942360"
  },
  {
    "text": "override that global variable so the other piece of the puzzle that makes this work is that this is being rendered",
    "start": "942360",
    "end": "948569"
  },
  {
    "text": "by by react and react has a diff mode for updating the UI you give it some",
    "start": "948569",
    "end": "954480"
  },
  {
    "text": "data it performs a diff with the previous version and it updates the Dom it it doesn't have to be react but that",
    "start": "954480",
    "end": "961920"
  },
  {
    "text": "model of updating your UI certainly does help so with this in place I can now go",
    "start": "961920",
    "end": "968250"
  },
  {
    "text": "and change let's say I can go in here look at the details then find a details",
    "start": "968250",
    "end": "975180"
  },
  {
    "text": "component and add some text to it just to see if it pops up I save that file",
    "start": "975180",
    "end": "984180"
  },
  {
    "text": "and now the text just pops up in the current state of the application and this is very very useful when you're",
    "start": "984180",
    "end": "990839"
  },
  {
    "text": "developing complex applications you have lots of drop-down menus and you can click and drag and scroll all the places",
    "start": "990839",
    "end": "997110"
  },
  {
    "text": "you never lose your place so this is very cool for for the code obviously",
    "start": "997110",
    "end": "1002620"
  },
  {
    "text": "it's also used for for for CSS you can see that many of my components are using",
    "start": "1002620",
    "end": "1008240"
  },
  {
    "text": "inline Styles here but some are not so the if you can see the I in the corner",
    "start": "1008240",
    "end": "1013399"
  },
  {
    "text": "of the image here if I wanted to change that I could find the CSS file that this",
    "start": "1013399",
    "end": "1019459"
  },
  {
    "text": "application uses and then there's a button down here so I want to add transition to the button for",
    "start": "1019459",
    "end": "1026760"
  },
  {
    "text": "the background give it a little bit of a sushi effect and then on hover I'll",
    "start": "1026760",
    "end": "1032100"
  },
  {
    "text": "change the background to black just save it and then when I hover now it has a",
    "start": "1032100",
    "end": "1038579"
  },
  {
    "text": "nice effect art or not because I'm not a designer but it has an effect anyway so",
    "start": "1038579",
    "end": "1044540"
  },
  {
    "text": "yeah you never need to lose your place again you could just keep your context very very very useful this is of course",
    "start": "1044540",
    "end": "1051929"
  },
  {
    "text": "possible in other languages as well but the immutable data surprise you with",
    "start": "1051929",
    "end": "1057780"
  },
  {
    "text": "makes this really simple to do okay but maybe this is just one browser let's say",
    "start": "1057780",
    "end": "1064230"
  },
  {
    "text": "that I'll add a phone into the picture and oh now I can see that the pictures",
    "start": "1064230",
    "end": "1072419"
  },
  {
    "text": "are actually too wide to fit on the iPhone so if I get into my core file",
    "start": "1072419",
    "end": "1077510"
  },
  {
    "text": "there should be okay so here says that the width should be 500 pixels actually",
    "start": "1077510",
    "end": "1082740"
  },
  {
    "text": "that's too wide for an iPhone so I want to set max width instead there we go I",
    "start": "1082740",
    "end": "1089429"
  },
  {
    "text": "say that and then things should look fine in the iPhone as well cool and then",
    "start": "1089429",
    "end": "1096179"
  },
  {
    "text": "my app works great here as well and yes",
    "start": "1096179",
    "end": "1102080"
  },
  {
    "text": "you can use the console to do fix that the status which tells you something about the status of your system so now I",
    "start": "1102080",
    "end": "1109110"
  },
  {
    "text": "have two connections to the dev build which is the iPhone and the Chrome and then I have a test connection here which",
    "start": "1109110",
    "end": "1116070"
  },
  {
    "text": "I'll show you in a minute so if you see my browser there on the tab to the left",
    "start": "1116070",
    "end": "1123090"
  },
  {
    "text": "here there's a green square and that is the tab that fig wheel is also running",
    "start": "1123090",
    "end": "1128340"
  },
  {
    "text": "which is running tests this is really tiny but it's not really all that important so this is not very useful",
    "start": "1128340",
    "end": "1134460"
  },
  {
    "text": "test output but the favicon on the top here is quite useful so let's say that I",
    "start": "1134460",
    "end": "1142549"
  },
  {
    "text": "unfixed my bug from before then this tab is going to turn red so I just keep this",
    "start": "1142549",
    "end": "1148320"
  },
  {
    "text": "up just for a small visual clue of what the state of my tests are in",
    "start": "1148320",
    "end": "1154140"
  },
  {
    "text": "for actual test feedback and and for CI sirs and whatnot you can run the test in",
    "start": "1154140",
    "end": "1159300"
  },
  {
    "text": "in a console like you would in other languages so the details again not all",
    "start": "1159300",
    "end": "1165150"
  },
  {
    "text": "that important but the visual clue here is really nice there's one more feature",
    "start": "1165150",
    "end": "1171260"
  },
  {
    "text": "which is quite useful so sometimes not",
    "start": "1171260",
    "end": "1176910"
  },
  {
    "text": "all the time but occasionally I make mistakes when I write my code and perhaps I misspelled a variable name",
    "start": "1176910",
    "end": "1184470"
  },
  {
    "text": "like this and if I do that the codes not going to work correctly so figure will",
    "start": "1184470",
    "end": "1189660"
  },
  {
    "text": "tells me that with really tiny font it says that it point out the exact place",
    "start": "1189660",
    "end": "1195450"
  },
  {
    "text": "where there was a warning and then it does one more thing and that is that it",
    "start": "1195450",
    "end": "1200850"
  },
  {
    "text": "does not reload the code because really in reloading the code at this point would break the application so instead",
    "start": "1200850",
    "end": "1207600"
  },
  {
    "text": "of just prompts me that there's a there's a problem here you should fix it and when you fix it I'm gonna reload the",
    "start": "1207600",
    "end": "1213840"
  },
  {
    "text": "code for you same thing happened happens if you have a compilation error which",
    "start": "1213840",
    "end": "1219030"
  },
  {
    "text": "you can do if you've have unbalanced expressions or whatever same thing is just that the Box gets ominously read",
    "start": "1219030",
    "end": "1227390"
  },
  {
    "text": "yeah the boxes ominously read and the error message will sometimes be less helpful yes cool so that is the basics",
    "start": "1227630",
    "end": "1239340"
  },
  {
    "text": "of fig wheel yeah you can see that the info that I got up earlier is still up",
    "start": "1239340",
    "end": "1246600"
  },
  {
    "text": "and yeah very very useful I'm gonna show",
    "start": "1246600",
    "end": "1252750"
  },
  {
    "text": "you more figure well a little bit later okay so when you have a compile to",
    "start": "1252750",
    "end": "1260070"
  },
  {
    "text": "JavaScript language like closure script is then you don't really want to",
    "start": "1260070",
    "end": "1266190"
  },
  {
    "text": "recreate the entire world in its image you like the JavaScript community has",
    "start": "1266190",
    "end": "1271800"
  },
  {
    "text": "vast amounts of tooling and libraries and all kinds of stuff and having to recreate it all included scripts would",
    "start": "1271800",
    "end": "1278340"
  },
  {
    "text": "be quite a loss so closure scrip provides excellent Interop with the",
    "start": "1278340",
    "end": "1284010"
  },
  {
    "text": "JavaScript runtime and also the library ecosystem around it so",
    "start": "1284010",
    "end": "1290260"
  },
  {
    "text": "just a few examples I'm gonna fix my window again",
    "start": "1290260",
    "end": "1295590"
  },
  {
    "text": "okay so the slash is closer scripts way of denoting namespaces and the jeaious",
    "start": "1296850",
    "end": "1303940"
  },
  {
    "text": "namespace gives you access to all the JavaScript Global's so jeaious slash window is the window object if you want",
    "start": "1303940",
    "end": "1311260"
  },
  {
    "text": "to access properties on JavaScript objects you can do that while this",
    "start": "1311260",
    "end": "1316330"
  },
  {
    "text": "syntax doc - location this is the window location or you can use the more",
    "start": "1316330",
    "end": "1323650"
  },
  {
    "text": "familiar look of this so if I evaluate this it shows me the location yeah",
    "start": "1323650",
    "end": "1332830"
  },
  {
    "text": "getting properties nice and easy if you want to call methods on JavaScript objects which you do",
    "start": "1332830",
    "end": "1338050"
  },
  {
    "text": "sometimes you do like this this mimics what Lisp usually looks like do you have",
    "start": "1338050",
    "end": "1346600"
  },
  {
    "text": "the function first so in the case of object methods you have the function",
    "start": "1346600",
    "end": "1351610"
  },
  {
    "text": "name and then the object and then you have other parameters if you need them so here's an example of slicing string",
    "start": "1351610",
    "end": "1358090"
  },
  {
    "text": "and this is really this is just a different way of writing JavaScript",
    "start": "1358090",
    "end": "1363340"
  },
  {
    "text": "right so this is useful when you're using the browser API or if you're using",
    "start": "1363340",
    "end": "1369360"
  },
  {
    "text": "libraries like d3 that would be a bit of a chore to rewrite the entire thing in",
    "start": "1369360",
    "end": "1375010"
  },
  {
    "text": "including script and you can just use those things and there's excellent syntax support for doing so you can even",
    "start": "1375010",
    "end": "1384010"
  },
  {
    "text": "use no modules so in your compiler configure configuration you can now say",
    "start": "1384010",
    "end": "1390690"
  },
  {
    "text": "installed apps true and then you can list NPM depths that you need for your application in case you need to",
    "start": "1390690",
    "end": "1397060"
  },
  {
    "text": "interrupt with for instance d3 or other JavaScript libraries so you want to use",
    "start": "1397060",
    "end": "1402100"
  },
  {
    "text": "and then you when you use the clojurescript build tool it's gonna",
    "start": "1402100",
    "end": "1408490"
  },
  {
    "text": "install the npm that dependencies in the background for you and create a package to taste and then manage that for you",
    "start": "1408490",
    "end": "1414160"
  },
  {
    "text": "and then in your namespaces I can require close",
    "start": "1414160",
    "end": "1419870"
  },
  {
    "text": "set from the standard library floated up string from the stand of the library and this library which actually comes from",
    "start": "1419870",
    "end": "1426350"
  },
  {
    "text": "knowled modules so this is a fairly recent addition to the closure script",
    "start": "1426350",
    "end": "1432080"
  },
  {
    "text": "compiler but it has been really really useful you can even do like this and",
    "start": "1432080",
    "end": "1439910"
  },
  {
    "text": "import individual files from from the modules that you pull in like you would",
    "start": "1439910",
    "end": "1446180"
  },
  {
    "text": "require for this you have used JavaScript before I'm just assuming that",
    "start": "1446180",
    "end": "1451190"
  },
  {
    "text": "you have at least passing the little script otherwise this makes no sense",
    "start": "1451190",
    "end": "1457420"
  },
  {
    "text": "okay let's revisit those parentheses I'm gonna get back to one more example of",
    "start": "1457420",
    "end": "1464590"
  },
  {
    "text": "interactive development but first we've got a take a look at the parentheses so",
    "start": "1464590",
    "end": "1469720"
  },
  {
    "text": "parroted is an editing mode that originally came with Emacs but is now available for IntelliJ and a",
    "start": "1469720",
    "end": "1476890"
  },
  {
    "text": "bunch of other editors and it's a different way of editing code than",
    "start": "1476890",
    "end": "1481970"
  },
  {
    "text": "you're used to so instead of destructively changing the the source code of your program character by",
    "start": "1481970",
    "end": "1488540"
  },
  {
    "text": "character parroted relies on the fact that Lisp code is data and then it",
    "start": "1488540",
    "end": "1494450"
  },
  {
    "text": "allows you to manipulate those data structurally instead of just wiping our characters nilly willy and this is it's",
    "start": "1494450",
    "end": "1502700"
  },
  {
    "text": "quite different way of writing code than you're probably used to so in the beginning it's really painful and when",
    "start": "1502700",
    "end": "1509300"
  },
  {
    "text": "you learn how to use how to use it then going back to the old way is extremely painful so I'm going to show you how it",
    "start": "1509300",
    "end": "1516710"
  },
  {
    "text": "works but first we have to see a famous quote about parodied so my friend manga nurse",
    "start": "1516710",
    "end": "1523760"
  },
  {
    "text": "fan once came into the IRC channel for closure and he said that I",
    "start": "1523760",
    "end": "1529150"
  },
  {
    "text": "I've tried pirated it's not really for me and the response that he got was if",
    "start": "1529150",
    "end": "1534800"
  },
  {
    "text": "you think parodies is not for you then you need to become the kind of person pirated it's for and this is this is",
    "start": "1534800",
    "end": "1542540"
  },
  {
    "text": "very true initially you're going to think that this is not for me but you just have to change the definition of me",
    "start": "1542540",
    "end": "1547700"
  },
  {
    "text": "and it's going to fit perfectly so excellent okay very basically with parody it makes",
    "start": "1547700",
    "end": "1556770"
  },
  {
    "text": "sure that things that need to stay balanced are balanced so in a clue to script program a single single double",
    "start": "1556770",
    "end": "1563850"
  },
  {
    "text": "quote has no meaning so whenever you insert a double quote it inserts two for you so you can write a string if",
    "start": "1563850",
    "end": "1571260"
  },
  {
    "text": "you want a double call inside your string you can get one and it's going to get escaped if you try to delete the",
    "start": "1571260",
    "end": "1579300"
  },
  {
    "text": "final back double coil it's not gonna let you because that would screw your",
    "start": "1579300",
    "end": "1584670"
  },
  {
    "text": "program so you can go all the way back here and when the strings empty you can",
    "start": "1584670",
    "end": "1590190"
  },
  {
    "text": "remove the whole thing perfect this will be extremely annoying in the beginning",
    "start": "1590190",
    "end": "1596160"
  },
  {
    "text": "but when your user is very very useful so everything that comes in pairs get",
    "start": "1596160",
    "end": "1602190"
  },
  {
    "text": "inserted in pairs so lists there there's no reason at all to have a single left",
    "start": "1602190",
    "end": "1608940"
  },
  {
    "text": "parenthesis in a closure script program so you'll always want to have two of them with a vector or the same thing and",
    "start": "1608940",
    "end": "1616100"
  },
  {
    "text": "yeah squiggly brackets and all those",
    "start": "1616100",
    "end": "1621330"
  },
  {
    "text": "things get paired up very nicely so then",
    "start": "1621330",
    "end": "1627179"
  },
  {
    "text": "we have three other functions call kill slurp and barf so Emacs has interesting terminology",
    "start": "1627179",
    "end": "1635580"
  },
  {
    "text": "kill in Emacs is its if that's the name they gave to just removing text that's",
    "start": "1635580",
    "end": "1641580"
  },
  {
    "text": "called kill it's very aggressive so for instance if I have a long line here I",
    "start": "1641580",
    "end": "1646980"
  },
  {
    "text": "can hit control K to kill to end of line just removes the rest of the line when",
    "start": "1646980",
    "end": "1653460"
  },
  {
    "text": "you do this inside a lisp expression like let's say that this function no longer needs arguments and I hit ctrl K",
    "start": "1653460",
    "end": "1660480"
  },
  {
    "text": "here it's going to remove the rest of the expression it's inside of so it has",
    "start": "1660480",
    "end": "1667260"
  },
  {
    "text": "knowledge about the structure wherein the code lives and this is perfect because doing this would not be useful",
    "start": "1667260",
    "end": "1674100"
  },
  {
    "text": "for me because now I have an unbalanced program it won't even compile so there's no need for my editor to support that",
    "start": "1674100",
    "end": "1680220"
  },
  {
    "text": "well it can because I can select text and cut it but that would be making",
    "start": "1680220",
    "end": "1685380"
  },
  {
    "text": "things hard for yourself similarly it has a function called barf so I have a vector here with",
    "start": "1685380",
    "end": "1693780"
  },
  {
    "text": "five characters in it let's say I'd only you the last one anymore I can barf it out I'll say go and then I",
    "start": "1693780",
    "end": "1700890"
  },
  {
    "text": "can kill these two and I can slurp them back in and now I remove the two first arguments this is this example is quite",
    "start": "1700890",
    "end": "1710070"
  },
  {
    "text": "contrived I'll write some code later and you can see me using it in action but one relevant example of this would be",
    "start": "1710070",
    "end": "1716280"
  },
  {
    "text": "let's say you have something printing to the screen hello world and then I figure out ah I only want to print this if it's",
    "start": "1716280",
    "end": "1723450"
  },
  {
    "text": "midnight so I'm gonna add it if they bent that looks like this and then I can slurp the expression right in and this",
    "start": "1723450",
    "end": "1730890"
  },
  {
    "text": "allows you to like I said manipulate the structure of your code as pieces of data",
    "start": "1730890",
    "end": "1736020"
  },
  {
    "text": "instead of just swiping and placing and you'll also notice that there's no need for me to manually re indent or anything",
    "start": "1736020",
    "end": "1743490"
  },
  {
    "text": "like that it just keeps it positioned exactly what it needs to go it's very good",
    "start": "1743490",
    "end": "1750380"
  },
  {
    "text": "okay next function is called rate so here I have an if and the if can only",
    "start": "1751170",
    "end": "1756570"
  },
  {
    "text": "have two forms in it the first will be the the if clause and the second will be",
    "start": "1756570",
    "end": "1762510"
  },
  {
    "text": "the then Clause or else Clause now I have two expressions that I want to run",
    "start": "1762510",
    "end": "1768480"
  },
  {
    "text": "in my if Clause so I put it in a do and the dude simply allows me to group multiple expressions as one so let's say",
    "start": "1768480",
    "end": "1776340"
  },
  {
    "text": "that I figure out that I don't really want to print here anymore so now I only have one expression inside to do and",
    "start": "1776340",
    "end": "1783030"
  },
  {
    "text": "then I don't really need to do so then I can erase this expression and it will take the place of its parent expression",
    "start": "1783030",
    "end": "1791600"
  },
  {
    "text": "so similar I could have figured out just here that I don't want to print anymore so I'll just have one expression so I'll",
    "start": "1791600",
    "end": "1797880"
  },
  {
    "text": "just raise this one out and it takes the place of its parent expression quite",
    "start": "1797880",
    "end": "1804960"
  },
  {
    "text": "useful here's a similar one race is perfect for lifting one expression to",
    "start": "1804960",
    "end": "1811800"
  },
  {
    "text": "one level up if you want to list both of these expressions up then you have to",
    "start": "1811800",
    "end": "1817140"
  },
  {
    "text": "use this way layer name function here not gonna try to pronounce it but let's",
    "start": "1817140",
    "end": "1822929"
  },
  {
    "text": "say that I figure out that I don't want to have my conditional anymore everyone's gonna eat ants from now so",
    "start": "1822929",
    "end": "1829859"
  },
  {
    "text": "I'm gonna start by racing to do to take place of the if and then inside the",
    "start": "1829859",
    "end": "1836489"
  },
  {
    "text": "function body I don't need to do so now I can do splice sex killing backwards to remove",
    "start": "1836489",
    "end": "1842970"
  },
  {
    "text": "it and then I'm left with only these two expressions so it looks strange when",
    "start": "1842970",
    "end": "1848220"
  },
  {
    "text": "it's new but I promise you when you when it's in your fingers manually editing codes character by character feels",
    "start": "1848220",
    "end": "1854759"
  },
  {
    "text": "extremely clumsy this is Emacs yes",
    "start": "1854759",
    "end": "1860549"
  },
  {
    "text": "but the same editing mode is also available for vim and IntelliJ and most",
    "start": "1860549",
    "end": "1867239"
  },
  {
    "text": "other popular editors use it as an atom to install yes final example here I have",
    "start": "1867239",
    "end": "1875460"
  },
  {
    "text": "an if an inside the if is a left so though that defines the local variable settings and it turns out that this",
    "start": "1875460",
    "end": "1882989"
  },
  {
    "text": "expression is being used twice so it would be cool to move the if inside the let so I could use the variable instead",
    "start": "1882989",
    "end": "1889619"
  },
  {
    "text": "of looking up the value twice and to do this I can use convolute s expression",
    "start": "1889619",
    "end": "1895139"
  },
  {
    "text": "which is the very aptly named which does this so it switches the place of the let",
    "start": "1895139",
    "end": "1901379"
  },
  {
    "text": "and the if and it also in mind the variable that I have here like from",
    "start": "1901379",
    "end": "1906690"
  },
  {
    "text": "before it was this is a map lookup and then I convoluted it and boom it's now",
    "start": "1906690",
    "end": "1913529"
  },
  {
    "text": "using the variables this one I don't get to use as often as I would like but",
    "start": "1913529",
    "end": "1919200"
  },
  {
    "text": "whenever I see enough possibility to use this feature I feel like a god it's a",
    "start": "1919200",
    "end": "1924690"
  },
  {
    "text": "it's highly recommended so that is parotid it looks a little bit strange",
    "start": "1924690",
    "end": "1932549"
  },
  {
    "text": "but it plays in with language very very nicely and it really feels like power",
    "start": "1932549",
    "end": "1937950"
  },
  {
    "text": "editing one thing I did not show you is that you can also use para to navigate",
    "start": "1937950",
    "end": "1943080"
  },
  {
    "text": "your code so I can go to the end of the expression to the beginning of this expression I can go down into the",
    "start": "1943080",
    "end": "1950399"
  },
  {
    "text": "expression and move in this level and down one more time and you have this",
    "start": "1950399",
    "end": "1957210"
  },
  {
    "text": "really neat way of navigating the structure of your code so you don't have",
    "start": "1957210",
    "end": "1962730"
  },
  {
    "text": "to use your arrow keys as much to flick around or god forbid the mouse to select",
    "start": "1962730",
    "end": "1968370"
  },
  {
    "text": "stuff okay back to our face applications",
    "start": "1968370",
    "end": "1974759"
  },
  {
    "text": "I'm gonna drag my window so when we",
    "start": "1974759",
    "end": "1980940"
  },
  {
    "text": "introduce figure wheel into this application I was able to keep the state and and work on local permutations of",
    "start": "1980940",
    "end": "1989519"
  },
  {
    "text": "the application but there are some kinds of feedback that are hard to it some",
    "start": "1989519",
    "end": "1995009"
  },
  {
    "text": "kind of features that are hard to iterate on even with that kind of feedback and example would be like if I",
    "start": "1995009",
    "end": "2001879"
  },
  {
    "text": "remove this monkey you see there's a really quick animation if I wanted to",
    "start": "2001879",
    "end": "2007789"
  },
  {
    "text": "study like the details of that animation and and and tweak it then figgle doesn't",
    "start": "2007789",
    "end": "2013100"
  },
  {
    "text": "really help me with that because the animations still passes along in 250 milliseconds and my brains not able to",
    "start": "2013100",
    "end": "2019340"
  },
  {
    "text": "work that quickly so we're going to look at a another tool or actually a companion tool called dev cards which",
    "start": "2019340",
    "end": "2026509"
  },
  {
    "text": "solves this problem yes mmm",
    "start": "2026509",
    "end": "2034610"
  },
  {
    "text": "so I will get back to my okay so we're",
    "start": "2034610",
    "end": "2042470"
  },
  {
    "text": "going to start another builds called dev cards",
    "start": "2042470",
    "end": "2048070"
  },
  {
    "text": "and then I'm going to open a new tab called cards and again the initial compile when",
    "start": "2050629",
    "end": "2058970"
  },
  {
    "text": "you start a new bill takes a little bit of time but the idea behind this tool is to take a component if you have like a",
    "start": "2058970",
    "end": "2066289"
  },
  {
    "text": "react component or any component technology and then you can display all",
    "start": "2066289",
    "end": "2072829"
  },
  {
    "text": "the different permutations of the component on a single page so in this",
    "start": "2072829",
    "end": "2079158"
  },
  {
    "text": "app I have a a button that you saw before I'm just gonna find the code",
    "start": "2079159",
    "end": "2085759"
  },
  {
    "text": "that's colors here is my button so now I want to display the button on a page of",
    "start": "2085759",
    "end": "2092839"
  },
  {
    "text": "its own so I can just look at the intricacies of the button if you will so to render the button I simply call the",
    "start": "2092839",
    "end": "2099019"
  },
  {
    "text": "button component and pass in the text click me and to render this in dev cards",
    "start": "2099019",
    "end": "2104420"
  },
  {
    "text": "I'm going to call def card and I call it basic button slurp it in and then I say",
    "start": "2104420",
    "end": "2112640"
  },
  {
    "text": "the file gets compiled and I can go in here so now I have this is a dev card for the button component it lists one",
    "start": "2112640",
    "end": "2119210"
  },
  {
    "text": "button excellent you can add some documentation here the button is a",
    "start": "2119210",
    "end": "2125410"
  },
  {
    "text": "clickable UI component very useful and then you can also include markup in here",
    "start": "2125410",
    "end": "2133489"
  },
  {
    "text": "so you can use this as a way of documenting your UI components living",
    "start": "2133489",
    "end": "2139849"
  },
  {
    "text": "documentation you can look this over yes",
    "start": "2139849",
    "end": "2145430"
  },
  {
    "text": "it has quotes",
    "start": "2145430",
    "end": "2148180"
  },
  {
    "text": "okay so yeah so you can use this like living documentation of your components",
    "start": "2150680",
    "end": "2156980"
  },
  {
    "text": "and then you can add more cards like this for the same component so now I'll",
    "start": "2156980",
    "end": "2162710"
  },
  {
    "text": "call a create a colored button so it takes a color like so and then when we",
    "start": "2162710",
    "end": "2170390"
  },
  {
    "text": "have the color button I can have a disabled button disabled question mark",
    "start": "2170390",
    "end": "2178070"
  },
  {
    "text": "true and I could just lay out all the permutations of the single component on one page and this increases my bandwidth",
    "start": "2178070",
    "end": "2185660"
  },
  {
    "text": "of feedback right you can see multiple states at once red button so here we go",
    "start": "2185660",
    "end": "2192320"
  },
  {
    "text": "okay this component though is not very exciting because it doesn't really have a lot of interesting states but here you",
    "start": "2192320",
    "end": "2198920"
  },
  {
    "text": "can see let's try to develop a little bit more interesting component that we can view in this view so I'll try to",
    "start": "2198920",
    "end": "2206510"
  },
  {
    "text": "create a progress bar so here I have a sing a simple dev card that it has a",
    "start": "2206510",
    "end": "2212990"
  },
  {
    "text": "progress bar with progress zero and then I'll add another one with which have",
    "start": "2212990",
    "end": "2218270"
  },
  {
    "text": "some percent 25 for instance and then",
    "start": "2218270",
    "end": "2224720"
  },
  {
    "text": "we're going to have to actually create the component so it's just two styles",
    "start": "2224720",
    "end": "2231200"
  },
  {
    "text": "for now our two spans for now let's add some styles here we'll make it",
    "start": "2231200",
    "end": "2236240"
  },
  {
    "text": "position:relative it'll make it background dark like that height should",
    "start": "2236240",
    "end": "2242600"
  },
  {
    "text": "be maybe 8 pixels I can save it under way to see what it looks like right now",
    "start": "2242600",
    "end": "2248180"
  },
  {
    "text": "it doesn't look very nice let's add some text back here hello hey yeah okay width",
    "start": "2248180",
    "end": "2257630"
  },
  {
    "text": "should be probably a hundred percent for this one or actually let's make it display:block and you you have the same",
    "start": "2257630",
    "end": "2264980"
  },
  {
    "text": "interactive feedback that would feed fig wheel it's still figure with running but in a different view of the application",
    "start": "2264980",
    "end": "2271630"
  },
  {
    "text": "ok cool border-radius we'll add a couple more features this and then we'll take a look",
    "start": "2271630",
    "end": "2278750"
  },
  {
    "text": "at this one we'll have background something light to overlay it",
    "start": "2278750",
    "end": "2284660"
  },
  {
    "text": "then we'll be absolutely positioned one pixel from the top one pixel from the",
    "start": "2284660",
    "end": "2290210"
  },
  {
    "text": "left the height will be four and then finally the width will be the progress",
    "start": "2290210",
    "end": "2298730"
  },
  {
    "text": "and then with the percent marker after it let's see what that looks like okay",
    "start": "2298730",
    "end": "2305450"
  },
  {
    "text": "it's - it's not tall off and let's just make a little bit bigger so you guys can",
    "start": "2305450",
    "end": "2311240"
  },
  {
    "text": "see so I'll make it 18 and 16 a huge progress bars okay I can see there's",
    "start": "2311240",
    "end": "2317750"
  },
  {
    "text": "some glitch over in the edge here because I'm missing the border radius yeah anyway my point here really is just",
    "start": "2317750",
    "end": "2325820"
  },
  {
    "text": "to show you that what this kind of instant feedback allows us to do without code it's very useful now I'm gonna do",
    "start": "2325820",
    "end": "2334070"
  },
  {
    "text": "one more thing with this component and that is I would like for this to progress like smoothly if I tell it to",
    "start": "2334070",
    "end": "2339890"
  },
  {
    "text": "increase the progress I wanted to move smoothly along so to do that we're gonna",
    "start": "2339890",
    "end": "2344990"
  },
  {
    "text": "have a transition on I guess this component on the width and then in order",
    "start": "2344990",
    "end": "2353480"
  },
  {
    "text": "to watch that live I need the progress to change so def cards has a feature for",
    "start": "2353480",
    "end": "2360680"
  },
  {
    "text": "this so we'll create a time card interactive progress bar and then if you",
    "start": "2360680",
    "end": "2368930"
  },
  {
    "text": "pass in a function then that card is going to create a piece of mutable state",
    "start": "2368930",
    "end": "2374960"
  },
  {
    "text": "and pass it to you so I can render the progress bar using that data and then I",
    "start": "2374960",
    "end": "2380390"
  },
  {
    "text": "have to do something where to it and then you can provide some initial data progress 0 let's just make sure it works",
    "start": "2380390",
    "end": "2389410"
  },
  {
    "text": "okay so I have an empty progress bar and now I need to provide some way to increase this value and we can do that",
    "start": "2389410",
    "end": "2396410"
  },
  {
    "text": "with just some elements here this is just react HTML virtual Dom elements",
    "start": "2396410",
    "end": "2403910"
  },
  {
    "text": "I'll create an a that has an on-click there will be a function and that is",
    "start": "2403910",
    "end": "2410480"
  },
  {
    "text": "going to do swap which is how you update mutable state in in this particular case and then we're",
    "start": "2410480",
    "end": "2417410"
  },
  {
    "text": "going to do update progress P and then",
    "start": "2417410",
    "end": "2422479"
  },
  {
    "text": "if the progress is 100 we're going to go back down to zero otherwise we'll just",
    "start": "2422479",
    "end": "2428660"
  },
  {
    "text": "increase the progress with five cool then we need some text for the button",
    "start": "2428660",
    "end": "2435559"
  },
  {
    "text": "and going fast now because the details are not all that important increase progress and then I know that we're",
    "start": "2435559",
    "end": "2444949"
  },
  {
    "text": "gonna need to have some margins okay now",
    "start": "2444949",
    "end": "2454369"
  },
  {
    "text": "we should get a button and when I click it it's going to huh so now I can really",
    "start": "2454369",
    "end": "2460839"
  },
  {
    "text": "contemplate the details of my wonderful animation but you know for some kinds of",
    "start": "2460839",
    "end": "2466249"
  },
  {
    "text": "components being able to just control control it very finely like this is very",
    "start": "2466249",
    "end": "2471919"
  },
  {
    "text": "useful and I can see that when it reaches 100 it actually goes to pixels over the edge there so that's an inch",
    "start": "2471919",
    "end": "2478999"
  },
  {
    "text": "case I would have to figure out like you wouldn't be able to catch this when it just switches switches on the screen so",
    "start": "2478999",
    "end": "2486969"
  },
  {
    "text": "because closure screen has such fantastic tools to manage mutable state",
    "start": "2486969",
    "end": "2492229"
  },
  {
    "text": "cool deaf cars can do one more thing for you so we can do inspect data here and",
    "start": "2492229",
    "end": "2501919"
  },
  {
    "text": "then when we do that it's going to tell me the current state of the so if you have like this could be a huge map with",
    "start": "2501919",
    "end": "2508640"
  },
  {
    "text": "lots of data for a complex component and it will tell you the entire state of the other component what we can also do is",
    "start": "2508640",
    "end": "2516049"
  },
  {
    "text": "to ask you to add some history and then",
    "start": "2516049",
    "end": "2521539"
  },
  {
    "text": "when I hit this button this other line shows up here and I can step back to the",
    "start": "2521539",
    "end": "2526609"
  },
  {
    "text": "previous version but this was really interesting okay one forward and then get back to the current version so this",
    "start": "2526609",
    "end": "2534650"
  },
  {
    "text": "is a very very useful tool to develop like individual components like this and",
    "start": "2534650",
    "end": "2540169"
  },
  {
    "text": "just to drive home that point I'm gonna show you one for my daily work which is",
    "start": "2540169",
    "end": "2545179"
  },
  {
    "text": "on this this is a mobile application for home automation stuff so this is my",
    "start": "2545179",
    "end": "2552559"
  },
  {
    "text": "living room you have some components here you can set the temperature you can",
    "start": "2552559",
    "end": "2558979"
  },
  {
    "text": "create a schedule for when the temperature should do what and then this entire application is built from",
    "start": "2558979",
    "end": "2565189"
  },
  {
    "text": "individual components that we have these kinds of cards for so the buttons for",
    "start": "2565189",
    "end": "2570920"
  },
  {
    "text": "instance like these are all our buttons some of them have spinners on them blah",
    "start": "2570920",
    "end": "2576499"
  },
  {
    "text": "blah blah we had the components that I showed you",
    "start": "2576499",
    "end": "2582140"
  },
  {
    "text": "the resizable areas are here we can just try them out",
    "start": "2582140",
    "end": "2588079"
  },
  {
    "text": "this shows the coloring of the temperature and you can just I worked on",
    "start": "2588079",
    "end": "2594890"
  },
  {
    "text": "this today it's not done yet yes and also in this application very",
    "start": "2594890",
    "end": "2602119"
  },
  {
    "text": "cool I did not I did not make the thing that I'm going to show you now but uh whenever you go between patrons has this",
    "start": "2602119",
    "end": "2609049"
  },
  {
    "text": "really nice mobile application swooshy effect and we have cards for that as",
    "start": "2609049",
    "end": "2614089"
  },
  {
    "text": "well so let's go back here and page stack so here here's the app with one",
    "start": "2614089",
    "end": "2621259"
  },
  {
    "text": "page rendered and then when you click to have a new page added it's getting rendered on the outside and then it's",
    "start": "2621259",
    "end": "2627849"
  },
  {
    "text": "slides over into the frame while the old page slides just a little bit out which",
    "start": "2627849",
    "end": "2632900"
  },
  {
    "text": "gives this really cool skeuomorphic effect and in this case I can actually step through the animation so this is",
    "start": "2632900",
    "end": "2640549"
  },
  {
    "text": "what happens to the entire page when you navigate in the app and I think developing a feature like that without",
    "start": "2640549",
    "end": "2647209"
  },
  {
    "text": "something like this is very frustrating to say the least of it and this tool is",
    "start": "2647209",
    "end": "2653809"
  },
  {
    "text": "not very advanced but it relies on the environment that a closure script",
    "start": "2653809",
    "end": "2659119"
  },
  {
    "text": "creates with its focus on the immutable data and this library that I'm using that is using react under the hood which",
    "start": "2659119",
    "end": "2665179"
  },
  {
    "text": "is not allowing me to use component local States which would make it harder",
    "start": "2665179",
    "end": "2670519"
  },
  {
    "text": "to make this work so I have one final example for you which is an old game",
    "start": "2670519",
    "end": "2678319"
  },
  {
    "text": "that I did some time ago this is just a I'm browser-based minesweeper that I wrote including script so with fig wheel",
    "start": "2678319",
    "end": "2687100"
  },
  {
    "text": "you also get a repple and a replica like",
    "start": "2687100",
    "end": "2692950"
  },
  {
    "text": "I said read eval print loop and this is connected to the browser so we can see",
    "start": "2692950",
    "end": "2698710"
  },
  {
    "text": "that by I can interrupt with JavaScript and say console.log hello and then it",
    "start": "2698710",
    "end": "2708130"
  },
  {
    "text": "gets compiled since the browser and it prints hello in the console here which is okay but it's also connected to the",
    "start": "2708130",
    "end": "2715240"
  },
  {
    "text": "actual state of the application so if I get into the namespace sweeper UI I",
    "start": "2715240",
    "end": "2722860"
  },
  {
    "text": "think it's going to switch into that namespace and then I can look at app",
    "start": "2722860",
    "end": "2728250"
  },
  {
    "text": "date I hope but that's not what it's",
    "start": "2728250",
    "end": "2733390"
  },
  {
    "text": "called at all it's called app state I guess no that",
    "start": "2733390",
    "end": "2739270"
  },
  {
    "text": "was not good let's see if we can find the file and then we'll figure it out",
    "start": "2739270",
    "end": "2744990"
  },
  {
    "text": "it's called app data here mm-hm",
    "start": "2744990",
    "end": "2751619"
  },
  {
    "text": "okay the ref app data come on okay here we go",
    "start": "2752940",
    "end": "2761089"
  },
  {
    "text": "so this is the entire data structure that's being rendered right now and to the bottom you can see it says dead true",
    "start": "2761089",
    "end": "2766460"
  },
  {
    "text": "because I screwed up a hit and hit the bomb in my game so this namespace also",
    "start": "2766460",
    "end": "2772670"
  },
  {
    "text": "has a function to undo that move even though there's no UI for yet so I can even call that function and I can",
    "start": "2772670",
    "end": "2779450"
  },
  {
    "text": "control the state of the application from the repple and this is just a",
    "start": "2779450",
    "end": "2784480"
  },
  {
    "text": "hugely powerful because now I can I can in my editor interface with the state of",
    "start": "2784480",
    "end": "2790670"
  },
  {
    "text": "the running application in the browser I can see the current state of the data I can manipulate the current state of the",
    "start": "2790670",
    "end": "2795950"
  },
  {
    "text": "data and I can run individual functions I can develop half a function inject it",
    "start": "2795950",
    "end": "2801230"
  },
  {
    "text": "into the game click around and go back and forth and this level of interactivity I've never found in any",
    "start": "2801230",
    "end": "2808490"
  },
  {
    "text": "other development environment and it's it's really really awesome and I really suggest you check it out even though the",
    "start": "2808490",
    "end": "2815660"
  },
  {
    "text": "language has a few parentheses and looks a little bit strange so that was really",
    "start": "2815660",
    "end": "2820730"
  },
  {
    "text": "what I had there's a bunch of other cool things that I don't have time to show you today I'll just mention them in",
    "start": "2820730",
    "end": "2827960"
  },
  {
    "text": "passing the community is very very good for a closure script if you count like",
    "start": "2827960",
    "end": "2834680"
  },
  {
    "text": "stars from github and questions on Stack Overflow and the other useless kinds of metrics it's not as big as other",
    "start": "2834680",
    "end": "2840950"
  },
  {
    "text": "communities but it's very positive if you they have a slack channel everyone gets I have their beginner questions",
    "start": "2840950",
    "end": "2847730"
  },
  {
    "text": "answered people are very friendly helpful and very important for me is I get older I get more and more tired of",
    "start": "2847730",
    "end": "2854869"
  },
  {
    "text": "having to patch libraries and fix like deprecation warnings and crap like that and the closure script community has",
    "start": "2854869",
    "end": "2861859"
  },
  {
    "text": "been very good at just keeping backwards-compatibility a main objective so I can find like this",
    "start": "2861859",
    "end": "2868790"
  },
  {
    "text": "minesweeper application I wrote it three years ago I pulled it up a few days ago it's just compiled some runs I have a",
    "start": "2868790",
    "end": "2875450"
  },
  {
    "text": "JavaScript version of the same thing can't even install it fantasies so that has lots of value to me like things are",
    "start": "2875450",
    "end": "2882290"
  },
  {
    "text": "stable and it's just things keep working they don't stop working for No",
    "start": "2882290",
    "end": "2888620"
  },
  {
    "text": "at all so community is very good there's a very interesting library called",
    "start": "2888620",
    "end": "2893870"
  },
  {
    "text": "closure spec which would require a whole talk of its own it allows you to do",
    "start": "2893870",
    "end": "2900250"
  },
  {
    "text": "declarative data validations and you can use it both in your application data and",
    "start": "2900250",
    "end": "2905450"
  },
  {
    "text": "on your code because your code is data right so you could use it in place of react prop types for validating props to",
    "start": "2905450",
    "end": "2913520"
  },
  {
    "text": "your components and you can even use it like as a light typing mechanism you can",
    "start": "2913520",
    "end": "2919880"
  },
  {
    "text": "add it to your function arguments for turn values and so on and so forth very very cool data script there's a",
    "start": "2919880",
    "end": "2926780"
  },
  {
    "text": "full-featured relational database you can run in your client-side applications it has a query engine it's amazing I've",
    "start": "2926780",
    "end": "2933680"
  },
  {
    "text": "worked with it multiple times so I'm just throwing these things out and",
    "start": "2933680",
    "end": "2939020"
  },
  {
    "text": "expecting you guys to go home and google it core I think it's a library again for",
    "start": "2939020",
    "end": "2946180"
  },
  {
    "text": "asynchronous programming including script which uses macros a lot which",
    "start": "2946180",
    "end": "2951670"
  },
  {
    "text": "kind of alters how the code is being executed it's hard to describe very",
    "start": "2951670",
    "end": "2956750"
  },
  {
    "text": "quick list I'm just gonna leave it for you guys to google it's cool so summary",
    "start": "2956750",
    "end": "2962300"
  },
  {
    "text": "I don't have much of a summary it's just that this stuff is cool I hope that you think it looks cool as well and want to",
    "start": "2962300",
    "end": "2968150"
  },
  {
    "text": "check it out like I mentioned I work for Google Market and we're looking for",
    "start": "2968150",
    "end": "2973400"
  },
  {
    "text": "people to work with us so if you want to work with me on cool stuff like this you should talk to me and yeah that was it",
    "start": "2973400",
    "end": "2980690"
  },
  {
    "text": "thank you for your time [Applause]",
    "start": "2980690",
    "end": "2985819"
  }
]