[
  {
    "start": "0",
    "end": "57000"
  },
  {
    "text": "there we go let's talk about merrier um so i've taken a whole lot of work",
    "start": "7440",
    "end": "15040"
  },
  {
    "text": "doing variably pretentious job titles like head of engineering and",
    "start": "15040",
    "end": "20160"
  },
  {
    "text": "chief technical architect and principal engineer all these you know all those job titles that sound",
    "start": "20160",
    "end": "25599"
  },
  {
    "text": "a lot fancier than they really are because what i really like doing is making comments and i love making things",
    "start": "25599",
    "end": "33680"
  },
  {
    "text": "i love spending time with the people that make things and i love trying to make them do things a little bit better",
    "start": "33680",
    "end": "39280"
  },
  {
    "text": "i've written a couple of kids books about programming websites and games get coding one and",
    "start": "39280",
    "end": "45280"
  },
  {
    "text": "two in all good bookstores etc uh but recently more more interestingly i made it a gameboy emulator",
    "start": "45280",
    "end": "53760"
  },
  {
    "text": "so so what is emulation when i say the word emulation",
    "start": "56840",
    "end": "62079"
  },
  {
    "start": "57000",
    "end": "57000"
  },
  {
    "text": "we should probably talk about a little bit emulation is the practice of writing",
    "start": "62079",
    "end": "68400"
  },
  {
    "text": "software on one system so that can simulate the runtime environment of another",
    "start": "68400",
    "end": "74000"
  },
  {
    "text": "normally with the goal of running software designed for a different piece of hardware or environment",
    "start": "74000",
    "end": "80000"
  },
  {
    "text": "now there's a couple of different approaches to emulation that you can take",
    "start": "80000",
    "end": "85119"
  },
  {
    "text": "you have low level emulation where you implement the behavior of the raw hardware and then the",
    "start": "85119",
    "end": "91439"
  },
  {
    "text": "software designed for it should just work and then we also have high level emulation",
    "start": "91439",
    "end": "96720"
  },
  {
    "text": "which is where you attempt to run the software natively on your target platform and intercept and re-implement",
    "start": "96720",
    "end": "102799"
  },
  {
    "text": "certain system level calls so most game system emulators are a mix",
    "start": "102799",
    "end": "108159"
  },
  {
    "text": "of these two things often emulating low-level hardware architecture",
    "start": "108159",
    "end": "113200"
  },
  {
    "text": "while re-implementing things like 3d drawing calls in higher level modern apis",
    "start": "113200",
    "end": "120799"
  },
  {
    "text": "there are plenty of famous emulators from games console emulators to operating",
    "start": "120960",
    "end": "126640"
  },
  {
    "text": "system emulators even to hardware emulators so you know if you're running any kind of virtual",
    "start": "126640",
    "end": "131760"
  },
  {
    "text": "machine or a vm that is a kind of emulation so when i say i built a game boy",
    "start": "131760",
    "end": "139280"
  },
  {
    "text": "emulator what i'm really saying is that i built a program that can run game boy software",
    "start": "139280",
    "end": "145280"
  },
  {
    "text": "while the gameboy software itself believes it's running on game boy hardware which is a little bit of a tongue",
    "start": "145280",
    "end": "151200"
  },
  {
    "text": "twister but the most important question kind of comes first why on earth would you build",
    "start": "151200",
    "end": "158480"
  },
  {
    "text": "a game boy emulator why would you do that i i know it is really a bit pointless",
    "start": "158480",
    "end": "165040"
  },
  {
    "text": "but that's kind of the fun of experimentation there's a lot of different answers to",
    "start": "165040",
    "end": "170480"
  },
  {
    "text": "this question but mostly i just i wanted to see if i could",
    "start": "170480",
    "end": "175680"
  },
  {
    "text": "it is so often that we're forced to live in a brutalistic corporate hellhole where only things",
    "start": "175680",
    "end": "182480"
  },
  {
    "text": "that have to exist for money get rendered into reality this is the",
    "start": "182480",
    "end": "187680"
  },
  {
    "text": "total opposite of that no one is ever going to get paid because of this i don't want to get paid because of this",
    "start": "187680",
    "end": "193599"
  },
  {
    "text": "and game boy emulators already exist",
    "start": "193599",
    "end": "199840"
  },
  {
    "text": "please please please please please don't use my emulator",
    "start": "201519",
    "end": "213840"
  },
  {
    "text": "and we're back okay sorry about that clearly technical difficulties can you give me a wave if you can see me",
    "start": "273440",
    "end": "279680"
  },
  {
    "text": "and you can hear me perfect thank you very much i'm going to start this slide again um so why would you build a gameboy",
    "start": "279680",
    "end": "285680"
  },
  {
    "text": "emulator like it is a little bit pointless um but there's a lot of different answers",
    "start": "285680",
    "end": "292080"
  },
  {
    "text": "to the question ultimately but i wanted to do it because it wasn't for money i wanted to do it because it's not",
    "start": "292080",
    "end": "297440"
  },
  {
    "text": "corporate and because it's not boring software and because it's kind of a different thing you can do with your skills",
    "start": "297440",
    "end": "304000"
  },
  {
    "text": "um so if you want to play game boy games please i'm going to start now with like don't use my emulator it's",
    "start": "304000",
    "end": "310479"
  },
  {
    "text": "it's incomplete it's possibly buggy and i'm not going to help you wake the wind fish and links awakening",
    "start": "310479",
    "end": "316880"
  },
  {
    "text": "right but this the story is a little bit different than that and it actually starts in the 1970s",
    "start": "316880",
    "end": "322639"
  },
  {
    "text": "with a game called pong and an interpreted programming language called chip 8. and what we're going to do is",
    "start": "322639",
    "end": "329680"
  },
  {
    "text": "we're going to use it to understand what emulation really is before we talk about game boys and before we talk about mario",
    "start": "329680",
    "end": "339440"
  },
  {
    "text": "and another way to make sure you can see my slides perfect thank you very much everybody",
    "start": "339440",
    "end": "345440"
  },
  {
    "text": "okay so chip 8 sounds delicious right so i started toying around with emulators",
    "start": "345440",
    "end": "352800"
  },
  {
    "text": "as part of what i suppose now is a decade-long experiment in running coding dojos",
    "start": "352800",
    "end": "359840"
  },
  {
    "text": "i do a lot of training for teams and especially web dev teams and they're looking to upskill or pick",
    "start": "359840",
    "end": "365680"
  },
  {
    "text": "up tdd or learn how to write better tests so while looking for different puzzles",
    "start": "365680",
    "end": "370960"
  },
  {
    "text": "for dojos i plundered the archives of this wonderful old website called ruby quiz which is still online it's on",
    "start": "370960",
    "end": "377000"
  },
  {
    "text": "rubyquiz.com like check it out if you're interested in this kind of stuff as attention and what they did is they used to run",
    "start": "377000",
    "end": "383600"
  },
  {
    "text": "weekly programming puzzle contests where people would literally email in solutions in ruby",
    "start": "383600",
    "end": "389520"
  },
  {
    "text": "cool and i ended up running their chip eight cutter quite a few",
    "start": "389520",
    "end": "395120"
  },
  {
    "text": "times it's quiz 88 if you're looking for it and the the chip8 ketter provides a binary program",
    "start": "395120",
    "end": "402560"
  },
  {
    "text": "written in a language called chip a it's a machine language and it tasks you with writing an",
    "start": "402560",
    "end": "408960"
  },
  {
    "text": "interpreter for it along with outlining the hardware that the program should run on",
    "start": "408960",
    "end": "414720"
  },
  {
    "text": "so chip 8 has 32 op codes in total and don't worry if you don't",
    "start": "414720",
    "end": "420000"
  },
  {
    "text": "know what that really means we're going to break it down in painful detail and the program supplied by the quiz",
    "start": "420000",
    "end": "425840"
  },
  {
    "text": "actually only uses a subset of them to make the quiz a little bit more approachable because i remember thinking like it",
    "start": "425840",
    "end": "431680"
  },
  {
    "text": "sounded absolutely terrifying the first time i read it like oh cool you want me to write an interpreter for a machine",
    "start": "431680",
    "end": "438000"
  },
  {
    "text": "language i've never heard that sounds like something i can do",
    "start": "438000",
    "end": "443120"
  },
  {
    "start": "444000",
    "end": "444000"
  },
  {
    "text": "so op codes machine languages what the hell let's look at a quick example of how",
    "start": "444960",
    "end": "452240"
  },
  {
    "text": "computers and specifically our computer processors and our cpus work before we go any further so when",
    "start": "452240",
    "end": "460080"
  },
  {
    "text": "processors are manufactured they're built to implement a specific instruction set",
    "start": "460080",
    "end": "466560"
  },
  {
    "text": "so this instruction set is the list of things the processor can do anybody old enough",
    "start": "466560",
    "end": "473199"
  },
  {
    "text": "to remember might remember the 1990s competition between sisk and risk architectures",
    "start": "473199",
    "end": "480479"
  },
  {
    "text": "which stands for complex instruction set and reduced instruction set computing respectively now the these instructions",
    "start": "480479",
    "end": "488720"
  },
  {
    "text": "these cpu instructions are what they were referring to the instructions are built into the",
    "start": "488720",
    "end": "494960"
  },
  {
    "text": "physical hardware and they can be programmed using machine code now every processor or family of",
    "start": "494960",
    "end": "502240"
  },
  {
    "text": "processors has its own instruction set and as a result it has its own machine code",
    "start": "502240",
    "end": "508879"
  },
  {
    "text": "now machine code is is strictly numerical and it's a strictly numerical representation of the operations that a",
    "start": "508879",
    "end": "516000"
  },
  {
    "text": "processor can perform so you've got a lot of numbers that can work with a processor",
    "start": "516000",
    "end": "521440"
  },
  {
    "text": "an op code shortened from operation code is the part of the machine code",
    "start": "521440",
    "end": "526720"
  },
  {
    "text": "which specifies what operation the cpu should do",
    "start": "526720",
    "end": "531680"
  },
  {
    "text": "as a result of that at one level up the assembly language for a given processor",
    "start": "532320",
    "end": "537839"
  },
  {
    "text": "can be assembled into this machine code basically compiled and is a low-level abstraction over the",
    "start": "537839",
    "end": "544640"
  },
  {
    "text": "instruction set of your processor so when we talk about assembly languages and people often will mention",
    "start": "544640",
    "end": "550560"
  },
  {
    "text": "assembly languages what they really mean is the assembly language for a specific cpus instruction set",
    "start": "550560",
    "end": "559120"
  },
  {
    "text": "now the cpu in hardware implements operations so things like add two",
    "start": "559120",
    "end": "564560"
  },
  {
    "text": "numbers together or take a number from here and put it in this memory location and the op code when a cpu is running a",
    "start": "564560",
    "end": "571360"
  },
  {
    "text": "program tells the cpu which instruction to execute when it encounters it",
    "start": "571360",
    "end": "577279"
  },
  {
    "text": "so i appreciate this all sounds really abstract so let's look at the example above and see where all those moving parts really are",
    "start": "577279",
    "end": "585200"
  },
  {
    "text": "so in the example on on the left you can see the raw machine code of a chip8",
    "start": "585200",
    "end": "590640"
  },
  {
    "text": "program and we're going to revisit this a few times and that same machine code decompiled into its corresponding",
    "start": "590640",
    "end": "597200"
  },
  {
    "text": "instructions is on the right hand side",
    "start": "597200",
    "end": "600880"
  },
  {
    "text": "besides the opcode itself most instructions also specify the data that they're going",
    "start": "602800",
    "end": "608480"
  },
  {
    "text": "to process in the form of operands just kind of think of them as parameters that get passed to an opcode",
    "start": "608480",
    "end": "615120"
  },
  {
    "text": "and normally those parameters are a memory address or a register address and a register if",
    "start": "615120",
    "end": "620800"
  },
  {
    "text": "you don't know is just some memory that lives on on the processor itself",
    "start": "620800",
    "end": "626000"
  },
  {
    "text": "so a memory address is just a number it's normally expressed in hexadecimal",
    "start": "626000",
    "end": "631040"
  },
  {
    "text": "but they're just numbers really and they start at zero and they count up to however much memory",
    "start": "631040",
    "end": "637360"
  },
  {
    "text": "you have so it's interesting because i remember in the 90s there was always a big thing",
    "start": "637360",
    "end": "642720"
  },
  {
    "start": "641000",
    "end": "641000"
  },
  {
    "text": "especially in video games about 16-bit 32-bit and this bitness got used as marketing",
    "start": "642720",
    "end": "648800"
  },
  {
    "text": "terms so when people talk about how many bits a cpu i suppose is has um they're referring to",
    "start": "648800",
    "end": "656560"
  },
  {
    "text": "the largest number a computer can hold in its memory when expressed in hexadecimal",
    "start": "656560",
    "end": "662640"
  },
  {
    "text": "the more bits the larger the total amount of memory a cpu can addresses so a cpu that only understands eight bit",
    "start": "662640",
    "end": "670160"
  },
  {
    "text": "numbers can only understand the numbers zero to two five five therefore it can only address 256 memory",
    "start": "670160",
    "end": "677920"
  },
  {
    "text": "locations a cpu that understands 16 bit numbers can only understand the numbers from",
    "start": "677920",
    "end": "683839"
  },
  {
    "text": "naught to 65 535 which which again means",
    "start": "683839",
    "end": "688959"
  },
  {
    "text": "it can only address a total of 65 300 and 536",
    "start": "688959",
    "end": "694480"
  },
  {
    "text": "memory locations so literally it can just keep a bigger numbery number in memory and each memory",
    "start": "694480",
    "end": "700560"
  },
  {
    "text": "location can store an amount of data so in the case of chip 8 a memory address stores 8 bytes of data",
    "start": "700560",
    "end": "707519"
  },
  {
    "text": "and the chip 8 hardware has 4096 memory locations cool so we've got some numbers and we've",
    "start": "707519",
    "end": "713760"
  },
  {
    "text": "got cpus that can refer to locations this is like the foundation of all computing i think you could probably go",
    "start": "713760",
    "end": "719839"
  },
  {
    "text": "away and like say you've done cs101 now probably if you have you haven't so when you use",
    "start": "719839",
    "end": "726800"
  },
  {
    "text": "a higher level programming language like c sharp or javascript though the run times that execute these specific programs",
    "start": "726800",
    "end": "733519"
  },
  {
    "text": "have been compiled down for your specific cpu architecture that means that ultimately somewhere",
    "start": "733519",
    "end": "740399"
  },
  {
    "text": "something has been translated down to machine code and is running on your cpu and whether you create vari whenever you",
    "start": "740399",
    "end": "746880"
  },
  {
    "text": "create variables in your programs somewhere something is putting things in memory registers",
    "start": "746880",
    "end": "752800"
  },
  {
    "text": "it's all buried under like epic amounts of abstraction most memory manipulation is done by",
    "start": "752800",
    "end": "758320"
  },
  {
    "text": "interacting with an operating system the operating system decides what libs where in memory",
    "start": "758320",
    "end": "764399"
  },
  {
    "text": "you know often if you're running c sharp you've got the clr or net core runtime",
    "start": "764399",
    "end": "770720"
  },
  {
    "text": "you're running javascript you've got node that interacts with the operating system but when you write code that puts",
    "start": "770720",
    "end": "777200"
  },
  {
    "text": "something in a variable all the way down the stack this stuff happens for every single line of code you ever write",
    "start": "777200",
    "end": "786480"
  },
  {
    "text": "so after our crash course on how processors",
    "start": "786480",
    "end": "792160"
  },
  {
    "text": "work let's look at a chip 8 program and some of the op codes that it uses",
    "start": "792160",
    "end": "797839"
  },
  {
    "text": "so the program in the top left portion of the slide is just the original ruby quiz chip 8 test program it's a raw binary",
    "start": "797839",
    "end": "804959"
  },
  {
    "text": "file in machine in the machine language of a chip 8 computer that when opened in a hex editor looks",
    "start": "804959",
    "end": "810959"
  },
  {
    "text": "like that to interpret this program you would loop through each of the bytes",
    "start": "810959",
    "end": "817120"
  },
  {
    "text": "and if you look at the snippet of c sharp on on the left on the right even we're just loading",
    "start": "817120",
    "end": "824000"
  },
  {
    "text": "this file as a byte array and printing it to the screen so in c sharp the bytes are all represented in",
    "start": "824000",
    "end": "830079"
  },
  {
    "text": "base 10 as integers but notice how the first number that gets printed 97 is the same as",
    "start": "830079",
    "end": "838320"
  },
  {
    "text": "61 in hexadec in hexadecimal and if you look at the first two digits of the original program at",
    "start": "838320",
    "end": "843839"
  },
  {
    "text": "the top this is that same 61 in the start of our test program",
    "start": "843839",
    "end": "848959"
  },
  {
    "text": "those first two two numbers so our documentation shows that our chip 8 interpreter operates on two byte op",
    "start": "848959",
    "end": "856639"
  },
  {
    "text": "codes so to run this program we need to loop through all of our pairs of bytes",
    "start": "856639",
    "end": "861839"
  },
  {
    "text": "in this case we read 61 and 77 together and then we process them according to",
    "start": "861839",
    "end": "867600"
  },
  {
    "text": "whatever the hardware behavior is and that's the very very foundations the fundamentals of emulating anything",
    "start": "867600",
    "end": "875199"
  },
  {
    "start": "876000",
    "end": "876000"
  },
  {
    "text": "so let's zoom in on those first two bytes from the file those two hex numbers 6177",
    "start": "876560",
    "end": "882399"
  },
  {
    "text": "the two of them make up an op code and its operand so if you look in the the manual",
    "start": "882399",
    "end": "889279"
  },
  {
    "text": "they call this 6xkk and it's explained in the original ruby quiz as setting the memory location",
    "start": "889279",
    "end": "896639"
  },
  {
    "text": "x to the constant value kk",
    "start": "896639",
    "end": "901680"
  },
  {
    "text": "in this case 6177 kk is an 8 bit constant it is literally",
    "start": "901680",
    "end": "907600"
  },
  {
    "text": "the hexadecimal value 77 so it's the number 119 that's what it means",
    "start": "907600",
    "end": "913040"
  },
  {
    "text": "so our first op code says 6 that's the op code 1 a constant the",
    "start": "913040",
    "end": "919120"
  },
  {
    "text": "memory address 1 and 77 the decimal number 119",
    "start": "919120",
    "end": "924320"
  },
  {
    "text": "which translated into english says put the hexadecimal number 77 into memory location 1.",
    "start": "924320",
    "end": "932480"
  },
  {
    "text": "so if you imagine memory locations as an array or like a big excel spreadsheet for all i care",
    "start": "932480",
    "end": "938079"
  },
  {
    "text": "you can interpret this entire chip 8 program by implementing each one of those op codes and writing a",
    "start": "938079",
    "end": "944000"
  },
  {
    "text": "little bit of code to perform the logic with the different op codes in this case the number 6",
    "start": "944000",
    "end": "949440"
  },
  {
    "text": "doing different things so this is a scary looking problem but it's actually",
    "start": "949440",
    "end": "955440"
  },
  {
    "start": "952000",
    "end": "952000"
  },
  {
    "text": "not so complicated under the hood because when you do that first ruby quiz you realize the solution to it",
    "start": "955440",
    "end": "961040"
  },
  {
    "text": "is a switch statement with like eight cases and that's it right that that's the",
    "start": "961040",
    "end": "966800"
  },
  {
    "text": "whole the answer to quiz sorry spoilers um but the great thing about it as a challenge is because it's so far out",
    "start": "966800",
    "end": "973519"
  },
  {
    "text": "from what people normally find themselves working on people attending the dojos where i ran this quiz always found it exciting",
    "start": "973519",
    "end": "980079"
  },
  {
    "text": "because like they felt they were making progress in something a world away from their normal work",
    "start": "980079",
    "end": "986720"
  },
  {
    "text": "and i ended up running this particular coding dojo a lot with plenty of different audiences because i think there's nothing more fun",
    "start": "986720",
    "end": "993120"
  },
  {
    "text": "than taking people who think their only real skills are taking numbers from a database and putting them on web pages",
    "start": "993120",
    "end": "998959"
  },
  {
    "text": "and showing them just how capable and awesome they can be with like a little bit of lateral thinking and that really programming isn't just",
    "start": "998959",
    "end": "1005440"
  },
  {
    "text": "this horrible blunt commercial thing it can be fun and challenging and",
    "start": "1005440",
    "end": "1010560"
  },
  {
    "text": "enjoyable so like the end right cool go go go do chip hey i i jest",
    "start": "1010560",
    "end": "1016399"
  },
  {
    "text": "um you now know how to write an emulator end of demo um no let's talk about game boys let's talk",
    "start": "1016399",
    "end": "1021839"
  },
  {
    "text": "about game boys so chip a is a useful introduction to this kind of low-level programming because there are only 32 relatively simple op",
    "start": "1021839",
    "end": "1029120"
  },
  {
    "text": "codes to implement and the ruby quiz cata even more so because it only uses so few of them",
    "start": "1029120",
    "end": "1035280"
  },
  {
    "text": "the principles are exactly the same but if i was to take you through every op code in the game boy it would hurt your brain",
    "start": "1035280",
    "end": "1042480"
  },
  {
    "text": "it's really important to remember that anyone can do things like this right so i'm not a particularly incredible",
    "start": "1042959",
    "end": "1048000"
  },
  {
    "text": "programmer but i can read and i can reason and i really wanted to know that if given a",
    "start": "1048000",
    "end": "1055039"
  },
  {
    "text": "background of building smaller machine code interpreters i could do something bigger and so",
    "start": "1055039",
    "end": "1062000"
  },
  {
    "text": "game boys bigger so what's a gameboy more or less",
    "start": "1062000",
    "end": "1068640"
  },
  {
    "text": "literally nobody ever asked um i'll do the wikipedia thing first a",
    "start": "1068640",
    "end": "1073840"
  },
  {
    "text": "gameboy is an 8-bit handheld game console developed and manufactured by nintendo the first handheld in the game boy",
    "start": "1073840",
    "end": "1079200"
  },
  {
    "text": "family it was first released in japan on april 21st 1989 then north america three months later",
    "start": "1079200",
    "end": "1084320"
  },
  {
    "text": "and leslie in europe over a year later it was designed by the same team that developed the game and watching several nintendo entertainment system games",
    "start": "1084320",
    "end": "1091200"
  },
  {
    "text": "i don't know whoever writes those really really dry things for wikipedia but it is a life skill um i mean we all know what a game boy is",
    "start": "1091200",
    "end": "1098240"
  },
  {
    "text": "right and that they're they're absolutely iconic you can set them on fire apparently and",
    "start": "1098240",
    "end": "1103520"
  },
  {
    "text": "they still work true story they saw off about 50 billion competitor consoles by being simple",
    "start": "1103520",
    "end": "1110240"
  },
  {
    "text": "accessible resilient and fun like this is my childhood legitimately",
    "start": "1110240",
    "end": "1116000"
  },
  {
    "text": "this is my childhood in a little plastic mold and it's where my lifelong obsession with games probably came from",
    "start": "1116000",
    "end": "1122160"
  },
  {
    "text": "and i literally just typoed game from in my speaker notes like game boys are freaking awesome and",
    "start": "1122160",
    "end": "1129120"
  },
  {
    "text": "personally i i remember growing up in asia in the 80s and i i got my game boy",
    "start": "1129120",
    "end": "1134640"
  },
  {
    "text": "i don't know if you can see it here this actual game boy the screen covering just fell off i got it in the temple street night",
    "start": "1134640",
    "end": "1140400"
  },
  {
    "text": "market in in hong kong and i remember being a kid like so excited and looking at the big",
    "start": "1140400",
    "end": "1146480"
  },
  {
    "text": "walls of like colorful box art cartridges in the game stores like it's a proper emotional thing so",
    "start": "1146480",
    "end": "1152640"
  },
  {
    "text": "not only is the game boy awesome but like it feels somehow deeply personal to me",
    "start": "1152640",
    "end": "1158400"
  },
  {
    "text": "but we don't care where you brought your game boy i hear you all thinking programming what is a game boy",
    "start": "1158400",
    "end": "1165200"
  },
  {
    "start": "1159000",
    "end": "1159000"
  },
  {
    "text": "uh fine so the game boy has an 8-bit 4.19 megahertz cpu",
    "start": "1165200",
    "end": "1172720"
  },
  {
    "text": "it's got 8 kilobytes of ram a 160 by 144",
    "start": "1172720",
    "end": "1178000"
  },
  {
    "text": "pixel display and the game boy cpu is similar to an older intel 8080",
    "start": "1178000",
    "end": "1184160"
  },
  {
    "text": "and most of the same the assemblers for it use z80 style syntax um so it's a custom chip but most of the",
    "start": "1184160",
    "end": "1191919"
  },
  {
    "text": "instructions are similar to other well-known processes cool so i read those technical specs",
    "start": "1191919",
    "end": "1199520"
  },
  {
    "text": "right and i was like yeah yeah i felt emboldened it's just like the z80 they're like really old how hard can",
    "start": "1199520",
    "end": "1206480"
  },
  {
    "text": "this possibly be um well i adore games and i always have",
    "start": "1206480",
    "end": "1213679"
  },
  {
    "text": "and i love the 90s and 2000s emulation and porting scene right but so but a few things specifically",
    "start": "1213679",
    "end": "1220799"
  },
  {
    "text": "ended up sending me down this path where i thought oh how hard could this possibly be so i watched this really",
    "start": "1220799",
    "end": "1226080"
  },
  {
    "text": "great youtube video um on a channel called modern vintage gamer i don't know if you've ever seen it",
    "start": "1226080",
    "end": "1231440"
  },
  {
    "text": "this guy's wonderful and he did a time lapse video of him porting the the game another world to the",
    "start": "1231440",
    "end": "1238400"
  },
  {
    "text": "original xbox live and he did it like live on stream and i'd spent some time in the past couple of years transliterating",
    "start": "1238400",
    "end": "1245440"
  },
  {
    "text": "software for various clients so when i say transliteration i was porting python and java into dotnet and.net core",
    "start": "1245440",
    "end": "1252320"
  },
  {
    "text": "and quite ironically porting a lot.net core and c-sharp stuff into typescript and javascript",
    "start": "1252320",
    "end": "1257600"
  },
  {
    "text": "so i felt kind of confident transliterating between these languages and i've been working on some cnc plus",
    "start": "1257600",
    "end": "1263679"
  },
  {
    "text": "hardware projects around building wearable led displays so i kind of thought hey",
    "start": "1263679",
    "end": "1269120"
  },
  {
    "text": "like the z80 processor it's not too different from chip 8 and complexity totally not true",
    "start": "1269120",
    "end": "1274960"
  },
  {
    "text": "um i wonder if i can write a lo-fi game boy emulator and we could use it to capture frames and",
    "start": "1274960",
    "end": "1280960"
  },
  {
    "text": "build some like mad wearable game boy that sounds cool um to be confirmed",
    "start": "1280960",
    "end": "1286880"
  },
  {
    "text": "and so i fell into this black hole of 1990s era pdfs about reverse engineering the game boy",
    "start": "1286880",
    "end": "1294080"
  },
  {
    "text": "and you know like when you fall into those wikipedia black holes that you lose like four hours to",
    "start": "1294080",
    "end": "1299360"
  },
  {
    "text": "and you end up reading about the capital of a country that didn't exist after 1965",
    "start": "1299360",
    "end": "1304559"
  },
  {
    "text": "this was one of those holes and it ran really really deep the 90s were wild man",
    "start": "1304559",
    "end": "1313279"
  },
  {
    "start": "1310000",
    "end": "1310000"
  },
  {
    "text": "so i spent about a day reading this thing called pens docs",
    "start": "1313520",
    "end": "1318960"
  },
  {
    "text": "a 25-year long community effort to catalogue all of the details of the game boy",
    "start": "1318960",
    "end": "1324080"
  },
  {
    "text": "hardware this is like some peak 1990s era deep technical reverse",
    "start": "1324080",
    "end": "1329440"
  },
  {
    "text": "engineering it's like totally totally a head full",
    "start": "1329440",
    "end": "1335360"
  },
  {
    "text": "uh they're wonderful docs but i'd probably not recommend them as casual bedtime reading",
    "start": "1335360",
    "end": "1340640"
  },
  {
    "text": "you know the no plot the characters are boring i i skipped to what i felt was the most",
    "start": "1340640",
    "end": "1345679"
  },
  {
    "text": "interesting place to start which was loading some information from cartridges and i opened visual studio",
    "start": "1345679",
    "end": "1351760"
  },
  {
    "text": "and i started to code and i wrote that so",
    "start": "1351760",
    "end": "1358960"
  },
  {
    "text": "well from the frame of reference of writing an entire emulator passing a cartridge might not seem like",
    "start": "1358960",
    "end": "1364240"
  },
  {
    "text": "much of a big deal but i managed to get it done pretty quickly i",
    "start": "1364240",
    "end": "1369360"
  },
  {
    "text": "grabbed my copy of my totally legally backed up nintendo i promise super mario land rom right here",
    "start": "1369360",
    "end": "1377039"
  },
  {
    "text": "right here it's fine this is mine um in case i need an alibi and i managed to",
    "start": "1377039",
    "end": "1382320"
  },
  {
    "text": "pass the boot logo right and and the cartridge information and the metadata within a few hours of hacking",
    "start": "1382320",
    "end": "1388159"
  },
  {
    "text": "around and i was like super excited because i could read the text super mario land um it felt real like i had some virtual",
    "start": "1388159",
    "end": "1395919"
  },
  {
    "text": "memory i made myself a cpu class and some op codes and i was like yes i'm gonna i'm gonna do this thing",
    "start": "1395919",
    "end": "1403919"
  },
  {
    "text": "then i got really really really catastrophically stuck",
    "start": "1403919",
    "end": "1409280"
  },
  {
    "text": "so i felt like i had a reasonable grasp of the game boy hardware but i i couldn't understand what some of",
    "start": "1409280",
    "end": "1416000"
  },
  {
    "text": "my op codes were meant to do and my emulator kept crashing in its boot sequence",
    "start": "1416000",
    "end": "1421840"
  },
  {
    "text": "and to make matters more confusing the documentation now i do not have like an electronic engineering background or",
    "start": "1421840",
    "end": "1427520"
  },
  {
    "text": "anything it started using notation that i literally didn't understand i couldn't even read the docs",
    "start": "1427520",
    "end": "1433840"
  },
  {
    "text": "and uh and i'm sure it's some fairly like standard high school maths but it was totally boiling my brain",
    "start": "1433840",
    "end": "1440240"
  },
  {
    "text": "so i was trying to implement the op codes for the game boy cpu just like in our earlier chip a example and i kept getting lost in the",
    "start": "1440240",
    "end": "1446960"
  },
  {
    "text": "documentation and i was stuck so not to be deterred",
    "start": "1446960",
    "end": "1452400"
  },
  {
    "text": "i went hunting for some other code bases that have been here before in an attempt to find something that",
    "start": "1452400",
    "end": "1457520"
  },
  {
    "text": "could literally help me read the documentation i was looking at and the game boy is quite a popular like",
    "start": "1457520",
    "end": "1463279"
  },
  {
    "text": "first emulation target because it's relatively accessible so i found a couple of emulators that",
    "start": "1463279",
    "end": "1469520"
  },
  {
    "text": "worked in a couple of different languages um and i stumbled upon a project called",
    "start": "1469520",
    "end": "1474799"
  },
  {
    "text": "coffee gb like a working emulator in java 1.8",
    "start": "1474799",
    "end": "1479840"
  },
  {
    "text": "and like this this is wonderful this is a revelation like i opened up the game and it worked i could clone it i could reason about it and it was in a language",
    "start": "1479840",
    "end": "1486159"
  },
  {
    "text": "i understood so at this point i figured i could try transl",
    "start": "1486159",
    "end": "1491840"
  },
  {
    "text": "transliterate this mit licensed open source code base",
    "start": "1491840",
    "end": "1497360"
  },
  {
    "text": "and use some of the tests that were written for it and then kind of glue the things together at the end",
    "start": "1497360",
    "end": "1504799"
  },
  {
    "text": "and i started off by like i lost an entire day converting coffee gb from java to kotlin",
    "start": "1504799",
    "end": "1510159"
  },
  {
    "text": "like it worked but there wasn't really any point like i thought it would make it look closer to c-sharp so it'd be easier to pull",
    "start": "1510159",
    "end": "1517120"
  },
  {
    "text": "and then i decided to just commit to doing a like for like full conversion a full transliteration of the",
    "start": "1517120",
    "end": "1522960"
  },
  {
    "text": "java source into netcore31 in an attempt to hopefully understand where my opco",
    "start": "1522960",
    "end": "1529360"
  },
  {
    "text": "processing approach had differed and where my code was crashing on boop",
    "start": "1529360",
    "end": "1534720"
  },
  {
    "text": "so i keep on using this word like transliterate so let's talk about that in in deep detail",
    "start": "1534960",
    "end": "1541120"
  },
  {
    "text": "um the this is originally a language term that means to write or print",
    "start": "1541120",
    "end": "1546720"
  },
  {
    "text": "a letter or word using the closest corresponding letters of a different alphabet or script so for",
    "start": "1546720",
    "end": "1553600"
  },
  {
    "text": "a little bit of clarification a transliteration as opposed to a full-blown software port",
    "start": "1553600",
    "end": "1558960"
  },
  {
    "text": "is a line for line cosmetic only change like we're literally going to change the minimum",
    "start": "1558960",
    "end": "1564159"
  },
  {
    "text": "amount required to get the software compiling in the target language and then we will end up doing",
    "start": "1564159",
    "end": "1569760"
  },
  {
    "text": "subsequent second and third passes to turn that transliteration into a real port for things that are",
    "start": "1569760",
    "end": "1575279"
  },
  {
    "text": "missing or don't quite convert like for like supporting and transliterating software",
    "start": "1575279",
    "end": "1581760"
  },
  {
    "text": "is a very very specific discipline which is counter to how i'd normally build software",
    "start": "1581760",
    "end": "1587600"
  },
  {
    "text": "and ultimately you have to think about it in three three passes so firstly you have to transliterate",
    "start": "1587600",
    "end": "1593360"
  },
  {
    "text": "until it compiles so you work from an entry point down normally involving starting at the main",
    "start": "1593360",
    "end": "1599279"
  },
  {
    "text": "method and only migrating code that gets called file by file you end up with lots and lots of stuff",
    "start": "1599279",
    "end": "1604799"
  },
  {
    "text": "commented on so secondly you port over any test suite once the transliteration is done and",
    "start": "1604799",
    "end": "1611120"
  },
  {
    "text": "ensure that the tests match the original so you've converted form not fun and",
    "start": "1611120",
    "end": "1616480"
  },
  {
    "text": "function and then thirdly you convert the code to be idiomatic in its host language so that's what i would normally regard",
    "start": "1616480",
    "end": "1623200"
  },
  {
    "text": "as actually porting software at the end like changing the way something worked so in the examples above you can see how",
    "start": "1623200",
    "end": "1630480"
  },
  {
    "text": "the java is subtly changed into c-sharp package declarations swapped for",
    "start": "1630480",
    "end": "1635520"
  },
  {
    "text": "namespaces attributes being removed and later much of the syntax being converted into c",
    "start": "1635520",
    "end": "1642000"
  },
  {
    "text": "sharp a using expression bodied methods so this is a fairly trite and succinct",
    "start": "1642000",
    "end": "1647360"
  },
  {
    "text": "example just to fit on some slides um as some of the other conversions are",
    "start": "1647360",
    "end": "1652480"
  },
  {
    "text": "far far more dramatic so it might seem like a set of obvious steps but you have to do some really",
    "start": "1652480",
    "end": "1658080"
  },
  {
    "text": "natural unnatural things sometimes that are going to totally go against your instincts",
    "start": "1658080",
    "end": "1663200"
  },
  {
    "text": "so during the first phase especially you're going to often find yourself fighting your tools because you're",
    "start": "1663200",
    "end": "1668880"
  },
  {
    "text": "you're at a disadvantage if you diverge the code in any way that prevents like for like comparisons",
    "start": "1668880",
    "end": "1675600"
  },
  {
    "text": "this means you're gonna have to keep all the naming conventions you're gonna have to keep the casings and odd non-idiomatic qualities of a foreign",
    "start": "1675600",
    "end": "1682399"
  },
  {
    "text": "code base precisely as they are until you get to a point of safety",
    "start": "1682399",
    "end": "1687760"
  },
  {
    "text": "you're going to have to get very very comfortable just throwing not implemented exceptions like everywhere where a direct equivalent is",
    "start": "1687760",
    "end": "1694799"
  },
  {
    "text": "is not available until you've managed to get the code executing and the sooner you can start transliterating any available tests the",
    "start": "1694799",
    "end": "1701840"
  },
  {
    "text": "better because you're going to start to know early on if you're going off track so ideally to do this you have to have a",
    "start": "1701840",
    "end": "1708880"
  },
  {
    "text": "good enough reading grasp of the source language add a relatively advanced grasp of the",
    "start": "1708880",
    "end": "1714159"
  },
  {
    "text": "target language to be able to convert some of the more subtle differences in this particular code base so",
    "start": "1714159",
    "end": "1720399"
  },
  {
    "text": "something you may or may not know is that java has quite rich genomes and you can put behavior load",
    "start": "1720399",
    "end": "1726399"
  },
  {
    "text": "into enums in java and we totally like that in c sharp the construct just doesn't exist so",
    "start": "1726399",
    "end": "1732640"
  },
  {
    "text": "producing similar syntactic constructs that could be used in the same way is important and i ended up like",
    "start": "1732640",
    "end": "1738880"
  },
  {
    "text": "stitching extension methods onto enums and all sorts of crazy stuff",
    "start": "1738880",
    "end": "1744000"
  },
  {
    "text": "and what that does is it requires a reasonable mastery of the target language to pull off without getting yourself confused and",
    "start": "1744000",
    "end": "1751200"
  },
  {
    "text": "stuck in a non-compiling code base so",
    "start": "1751200",
    "end": "1758320"
  },
  {
    "text": "once i found my groove with transliterating the coffee gb code base a couple of things became",
    "start": "1759200",
    "end": "1764840"
  },
  {
    "text": "apparent firstly the ui would not port at all just like not at all not even",
    "start": "1764840",
    "end": "1772000"
  },
  {
    "text": "remotely because it was a bunch of jwt java window toolkit code and there was absolutely no point",
    "start": "1772000",
    "end": "1779200"
  },
  {
    "text": "in trying to convert that like for like because i wasn't here to produce a weird c-sharp port of jwt",
    "start": "1779200",
    "end": "1786640"
  },
  {
    "text": "so the jwt code was also responsible for drawing the game on the screen",
    "start": "1786640",
    "end": "1792240"
  },
  {
    "text": "and handling controller inputs so cool fine i've got my to-do list there's two things that are gonna have to be",
    "start": "1792240",
    "end": "1797679"
  },
  {
    "text": "completely different my first target quickly as a result of that became to get the headless mode in",
    "start": "1797679",
    "end": "1803279"
  },
  {
    "text": "the original codebase booting a gameboy cartridge so headless mode was designed to run the",
    "start": "1803279",
    "end": "1810000"
  },
  {
    "text": "emulator without visual output or controls in a console window and it was used in the test suite",
    "start": "1810000",
    "end": "1816960"
  },
  {
    "text": "i just figured if i could do enough to get that running i could port the unit tests",
    "start": "1816960",
    "end": "1822640"
  },
  {
    "text": "and then i could exercise some of the community authored homebrew roms that are designed to test various aspects",
    "start": "1822640",
    "end": "1828640"
  },
  {
    "text": "of the gameboy hardware and i deleted all the jwt code and i",
    "start": "1828640",
    "end": "1834720"
  },
  {
    "text": "maintained all the code paths that called into it replacing the method bodies with not implemented exceptions",
    "start": "1834720",
    "end": "1841200"
  },
  {
    "text": "i implemented a few interfaces with empty implementations and i managed to basically cajole",
    "start": "1841200",
    "end": "1846399"
  },
  {
    "text": "the headless mode into life you can if you look at the screenshot you can see the code for headless mode as it still",
    "start": "1846399",
    "end": "1852559"
  },
  {
    "text": "exists today in the source passing in null displays and controllers and sound",
    "start": "1852559",
    "end": "1857679"
  },
  {
    "text": "um along with amusingly the remnants of some jwt stuff commented out",
    "start": "1857679",
    "end": "1862880"
  },
  {
    "text": "for reference so i can't state enough",
    "start": "1862880",
    "end": "1870320"
  },
  {
    "start": "1867000",
    "end": "1867000"
  },
  {
    "text": "how well compartmentalized the original code base was i was very very lucky when it came to",
    "start": "1870320",
    "end": "1877039"
  },
  {
    "text": "writing a new display that the original code kept an array of internal pixel colors packed into",
    "start": "1877039",
    "end": "1883120"
  },
  {
    "text": "integers right um and those integers com combined with the various graphics",
    "start": "1883120",
    "end": "1889840"
  },
  {
    "text": "op codes produced a display image and i knew that all i had to do at that point was convert an array of x",
    "start": "1889840",
    "end": "1896720"
  },
  {
    "text": "y coordinates and find a way to just like get it on the screen because i had pixel colors and locations",
    "start": "1896720",
    "end": "1904880"
  },
  {
    "text": "so i extracted the rgb values from this packed integer and i raised the c-sharp event in my new",
    "start": "1904880",
    "end": "1911039"
  },
  {
    "text": "bitmap display class um so i did this to match the original implementation",
    "start": "1911039",
    "end": "1916799"
  },
  {
    "text": "and made sure the display is running on its own thread which refreshes distinctly from the cpu",
    "start": "1916799",
    "end": "1922320"
  },
  {
    "text": "emulation that's ticking at the same time i just needed something to subscribe to",
    "start": "1922320",
    "end": "1927679"
  },
  {
    "text": "my event with all my pixels and draw them on a screen somewhere",
    "start": "1927679",
    "end": "1933440"
  },
  {
    "text": "and um yeah legitimately win forms to the rescue",
    "start": "1933440",
    "end": "1938559"
  },
  {
    "text": "like not even joking you totally heard me right win forms um so let's let's just um unpack this",
    "start": "1938559",
    "end": "1944960"
  },
  {
    "text": "here i ported a game boy emulator to dotnet core 31 just to run it in a wim forms ui and i'm",
    "start": "1944960",
    "end": "1950480"
  },
  {
    "text": "totally not sorry and i would totally do it again um the number of questions i got re",
    "start": "1950480",
    "end": "1955840"
  },
  {
    "text": "my sanity really why i wasn't using wpf if anyone still used wim forms if you",
    "start": "1955840",
    "end": "1962240"
  },
  {
    "text": "could even run wim forms on.net core we're all totally excellent um people",
    "start": "1962240",
    "end": "1967600"
  },
  {
    "text": "kind of forget that winforms was designed to be so easy to use and really rapid application development",
    "start": "1967600",
    "end": "1973279"
  },
  {
    "text": "friendly and it lets you get stuff on the screen really quickly right so winforms is secretly kind of awesome",
    "start": "1973279",
    "end": "1979200"
  },
  {
    "text": "and it also i believe last year was ported to run on net core so it totally just works obviously net",
    "start": "1979200",
    "end": "1985760"
  },
  {
    "text": "core only on windows so in about 200 lines of code i had a wim forms ui with a picture box on it",
    "start": "1985760",
    "end": "1992399"
  },
  {
    "text": "that i could update with the current frame every time the emulator raised an event if you're eagle-eyed and look closely",
    "start": "1992399",
    "end": "1999440"
  },
  {
    "text": "through the background images here the other thing that came free with wim forms was input handling",
    "start": "1999440",
    "end": "2005440"
  },
  {
    "text": "so i could hook an implementation of the controller up just like the jwt thing in the java code pasted",
    "start": "2005440",
    "end": "2010960"
  },
  {
    "text": "um and i could hook them up to just wim forms key press events so yeah like winforms is amazing",
    "start": "2010960",
    "end": "2018080"
  },
  {
    "text": "don't quote me on that and and it kind of worked like totally totally kind of kind of",
    "start": "2018080",
    "end": "2023760"
  },
  {
    "text": "worked um so once i got to the point where i had the title screen of mario booting in c sharp and side by side the",
    "start": "2023760",
    "end": "2030480"
  },
  {
    "text": "original java code base booting the same game i realized that",
    "start": "2030480",
    "end": "2035600"
  },
  {
    "text": "i'd made some kind of terrible terrible error where my game would crash as soon as i started running",
    "start": "2035600",
    "end": "2041120"
  },
  {
    "text": "it so obviously enough of my port was working",
    "start": "2041120",
    "end": "2046159"
  },
  {
    "text": "that there was stuff on the screen right and and establishing where my code diverged",
    "start": "2046159",
    "end": "2051440"
  },
  {
    "text": "on the other hand was very very tricky so luckily i'm not the first person to ever try and write a",
    "start": "2051440",
    "end": "2057280"
  },
  {
    "text": "game boy emulator there's this like really great set of homebrew test rooms",
    "start": "2057280",
    "end": "2064240"
  },
  {
    "text": "that exercise different parts of the game boy hardware which i could run in both emulators to see where they",
    "start": "2064240",
    "end": "2069358"
  },
  {
    "text": "diverged their wonderfully named blog with 3gs and moon eye",
    "start": "2069359",
    "end": "2075599"
  },
  {
    "text": "which uh test roms like i think the moon eye suite is actually from a work in progress rust emulator",
    "start": "2075599",
    "end": "2081760"
  },
  {
    "text": "so i ported the test harness across from the original code base and i got these test runs i had them",
    "start": "2081760",
    "end": "2087200"
  },
  {
    "text": "running and as i suspected the tests that were passing in the original java code base were failing in my port",
    "start": "2087200",
    "end": "2093839"
  },
  {
    "text": "so i'd made a mistake and this was a great first step because i had failing tests",
    "start": "2093839",
    "end": "2098960"
  },
  {
    "text": "i just needed to find out what and where i had broken something",
    "start": "2098960",
    "end": "2105280"
  },
  {
    "text": "so i mentioned earlier the idea of low level emulation where you're emulating the hardware",
    "start": "2108160",
    "end": "2114800"
  },
  {
    "text": "well both of these emulators are low-level emulators and what that means is they literally implement the opcodes of the hardware as",
    "start": "2114800",
    "end": "2122320"
  },
  {
    "text": "code and they tick at the clock rate of the cpu",
    "start": "2122320",
    "end": "2128079"
  },
  {
    "text": "you can't meaningfully step through the code because the number of operations that",
    "start": "2128079",
    "end": "2133200"
  },
  {
    "text": "you have to complete at the clock rate at the cpu to see any actual change in memory state is like",
    "start": "2133200",
    "end": "2139280"
  },
  {
    "text": "i don't know it's a really big number it's a lot it's many many many operations hundreds of",
    "start": "2139280",
    "end": "2145040"
  },
  {
    "text": "thousands so but that's okay right we live in visual studio and we have amazing things",
    "start": "2145040",
    "end": "2150640"
  },
  {
    "text": "like conditional break points that can help us see where values change right",
    "start": "2150640",
    "end": "2156400"
  },
  {
    "text": "well ironically the performance overhead of applying a conditional break point to",
    "start": "2156400",
    "end": "2161520"
  },
  {
    "text": "one of my virtual cpu registers was so severe that i couldn't even get visual studio",
    "start": "2161520",
    "end": "2166960"
  },
  {
    "text": "to process the test cases as far as the first error in less than 10 minutes on like a",
    "start": "2166960",
    "end": "2172240"
  },
  {
    "text": "top-end horizon uh it just couldn't churn through the numbers fast enough because clearly vs",
    "start": "2172240",
    "end": "2178480"
  },
  {
    "text": "was hooking in its debug process so i knew that i could i get both code bases",
    "start": "2178480",
    "end": "2184400"
  },
  {
    "text": "if i could get both code bases to a break point where their memory states diverged i could totally solve the problems i was",
    "start": "2184400",
    "end": "2190960"
  },
  {
    "text": "seeing i just wasn't immediately sure how when because when your debugger doesn't",
    "start": "2190960",
    "end": "2196079"
  },
  {
    "text": "work what do you do i was suffering from this pain of my",
    "start": "2196079",
    "end": "2201280"
  },
  {
    "text": "integration tests being my main tests right like a common pattern in all software",
    "start": "2201280",
    "end": "2208160"
  },
  {
    "start": "2208000",
    "end": "2208000"
  },
  {
    "text": "so so i spent a morning building some tools i started by building a",
    "start": "2208560",
    "end": "2215680"
  },
  {
    "text": "debugger i built a debugging tool with a client in both java and c-sharp",
    "start": "2215680",
    "end": "2222800"
  },
  {
    "text": "that would keep the ticks of both emulators in sync and it would break them both into the",
    "start": "2222800",
    "end": "2228240"
  },
  {
    "text": "regular debugger when their memory state differed so both emulators would call a http",
    "start": "2228240",
    "end": "2234560"
  },
  {
    "text": "server with the hash of their current memory state and when it differed i tell them to both pause and it was really nice in theory",
    "start": "2234560",
    "end": "2241920"
  },
  {
    "text": "but in practice it only helped me find one bug because obviously if visual studio's",
    "start": "2241920",
    "end": "2248079"
  },
  {
    "text": "built-in conditional debugger was slow making network requests over the network as we stepped forward was definitely",
    "start": "2248079",
    "end": "2254720"
  },
  {
    "text": "more slow so it was a little bit too much overhead and i thought okay cool i can't do this",
    "start": "2254720",
    "end": "2260079"
  },
  {
    "text": "let's go lo-fi so i built a logging function into each emulator that i could",
    "start": "2260079",
    "end": "2265440"
  },
  {
    "text": "wrap around the test cases that dumped the memory state to a massive log file",
    "start": "2265440",
    "end": "2270560"
  },
  {
    "text": "on every single cpu tick i knew that when the test passed in the first emulator",
    "start": "2270560",
    "end": "2276480"
  },
  {
    "text": "because they kind of ran at similar speeds i could stop the failing test if it was still executing in another",
    "start": "2276480",
    "end": "2282320"
  },
  {
    "text": "emulator the number of lines in the file would tell me how far i'd ticked forwards",
    "start": "2282320",
    "end": "2288240"
  },
  {
    "text": "and what i ended up doing was doing lengthy diffs of these many gigabyte long log files",
    "start": "2288240",
    "end": "2293760"
  },
  {
    "text": "like you run these tests for 30 seconds and you'll have 4 gig of text",
    "start": "2293760",
    "end": "2299119"
  },
  {
    "text": "to find the tick number that the emulators diverged on so i just did a diff tool and i found the tick number",
    "start": "2299119",
    "end": "2304480"
  },
  {
    "text": "once i had the take the tick number i added an if statement to my emulator with a debugger break",
    "start": "2304480",
    "end": "2310800"
  },
  {
    "text": "when the the tick number matched so the world's most low-fi debugging",
    "start": "2310800",
    "end": "2315839"
  },
  {
    "text": "technique um it was important because i kept the transliterated code base",
    "start": "2315839",
    "end": "2321599"
  },
  {
    "text": "very close to the original while i was doing this testing process actually this debugging worked and",
    "start": "2321599",
    "end": "2328560"
  },
  {
    "text": "wasn't a nightmare so i could put the same shaped if statement on the same tick in both code bases",
    "start": "2328560",
    "end": "2334160"
  },
  {
    "text": "and get both of my emulators frozen in a break point you know what like the the sense of",
    "start": "2334160",
    "end": "2340720"
  },
  {
    "text": "accomplishment you get from building your own debugging tools and it actually working is insane",
    "start": "2340720",
    "end": "2346000"
  },
  {
    "text": "like it felt like magic when i actually managed to get these two damn emulators into a break point that matched",
    "start": "2346000",
    "end": "2352320"
  },
  {
    "text": "it took about a day's work but i had them both in parity with the original source and i could start refactoring",
    "start": "2352320",
    "end": "2359920"
  },
  {
    "text": "so what what was the bug the what was the crashing bug",
    "start": "2359920",
    "end": "2365680"
  },
  {
    "start": "2361000",
    "end": "2361000"
  },
  {
    "text": "so i fell fell of converting one of the java data structures to c-sharp",
    "start": "2366079",
    "end": "2371520"
  },
  {
    "text": "so in java as i mentioned before enums can have methods and hastily transliterated some",
    "start": "2371520",
    "end": "2377839"
  },
  {
    "text": "of the code that categorized enums for the different memory banks and the game boy cartridges",
    "start": "2377839",
    "end": "2383359"
  },
  {
    "text": "so you'll notice if you glance to the top right here that enum names are used to categorize different parts of",
    "start": "2383359",
    "end": "2388880"
  },
  {
    "text": "the same type of memory for instance rom mbc3 and rom mbc",
    "start": "2388880",
    "end": "2396320"
  },
  {
    "text": "3 ram are both identifying parts of memory that make up mbc 3 which is a memory bank controller",
    "start": "2396320",
    "end": "2402960"
  },
  {
    "text": "inside a game boy cartridge game boy cartridges use this idea of memory banks",
    "start": "2402960",
    "end": "2408000"
  },
  {
    "text": "to expand the amount of memory available to games this is why the size of the cartridges were used in",
    "start": "2408000",
    "end": "2414319"
  },
  {
    "text": "marketing material in the day games with more data more switchable memory banks could get larger and you could store",
    "start": "2414319",
    "end": "2420160"
  },
  {
    "text": "more graphics so the bigger the the size of the cartridge generally the better the game looked",
    "start": "2420160",
    "end": "2426640"
  },
  {
    "text": "so the code in the emulator that implemented the op code to switch between memory banks needed to check if the current memory",
    "start": "2426640",
    "end": "2433040"
  },
  {
    "text": "location was part of one of these memory banks now the original java implementation used a regular expression to check",
    "start": "2433040",
    "end": "2440000"
  },
  {
    "text": "if the name of the enum member contained the name of the memory bank it",
    "start": "2440000",
    "end": "2445920"
  },
  {
    "text": "was looking for so it seems nice and simple so i had hastily replaced that with a",
    "start": "2445920",
    "end": "2452560"
  },
  {
    "text": "string contains call that presumed that the enum member would always have an underscore",
    "start": "2452560",
    "end": "2458319"
  },
  {
    "text": "followed by the mbc value followed by an underscore cool which works totally perfectly well",
    "start": "2458319",
    "end": "2466480"
  },
  {
    "text": "for for the string rom underscore mbc 3 underscore rem but not so well for rom",
    "start": "2466480",
    "end": "2473520"
  },
  {
    "text": "underscore mbc 3 because it lacked that trailing underscore right so while trying to switch memory banks",
    "start": "2473520",
    "end": "2480319"
  },
  {
    "text": "my code was crashing quickly replacing um my string contains method",
    "start": "2480319",
    "end": "2486000"
  },
  {
    "text": "back to the original x regular expression totally fixed the bug it's likely there are plenty more",
    "start": "2486000",
    "end": "2492400"
  },
  {
    "text": "idiomatic c-sharp ways to mark up enums normally you know you would add attributes to provide this kind of",
    "start": "2492400",
    "end": "2498319"
  },
  {
    "text": "categorization and do some kind of meta programming but you know what that's probably a little bit too slow",
    "start": "2498319",
    "end": "2508079"
  },
  {
    "text": "so one of the final entertaining surprises",
    "start": "2508079",
    "end": "2513359"
  },
  {
    "text": "was the afternoon that i lost trying to work out why my emulator was slow so on a related",
    "start": "2513440",
    "end": "2520800"
  },
  {
    "text": "note you'd be really surprised what a difference to performance release builds make like those buttons do mean something",
    "start": "2520800",
    "end": "2528560"
  },
  {
    "text": "so i spent what felt like an eternity trying to profile the performance of the emulator",
    "start": "2528560",
    "end": "2534560"
  },
  {
    "text": "because i couldn't work out why it was performing so badly and the irony was it was because it was",
    "start": "2534560",
    "end": "2540960"
  },
  {
    "text": "being observed the program was ticking so fast that the overhead of collecting",
    "start": "2540960",
    "end": "2546400"
  },
  {
    "text": "metrics and debugging in visual studio slowed the program down so that the two emulators side by",
    "start": "2546400",
    "end": "2552160"
  },
  {
    "text": "side mine was noticeably slower simply compiling and running in release",
    "start": "2552160",
    "end": "2557200"
  },
  {
    "text": "mode and without a debugger attached showed that it was running totally fine totally as benchmarked and used minimal",
    "start": "2557200",
    "end": "2563920"
  },
  {
    "text": "cpu",
    "start": "2563920",
    "end": "2566400"
  },
  {
    "text": "so i've kind of skirted around the audio in the emulator because well awkward there isn't any",
    "start": "2569119",
    "end": "2575920"
  },
  {
    "text": "yeah i've not written it yet i've never really done audio programming before and um i'm looking into various audio",
    "start": "2575920",
    "end": "2583200"
  },
  {
    "text": "wrappers probably starting with n audio to see if i can work out how to make the audio sing again",
    "start": "2583200",
    "end": "2588319"
  },
  {
    "text": "because i don't know about you but when i look at game boy cartridges like i can hear the the theme song to mario playing in my",
    "start": "2588319",
    "end": "2594560"
  },
  {
    "text": "head when i see this picture it's that like iconic um the original java implementation used a",
    "start": "2594560",
    "end": "2600880"
  },
  {
    "text": "very very java very very java open source audio thing which again just like i",
    "start": "2600880",
    "end": "2606240"
  },
  {
    "text": "didn't want to port jwt i probably don't want to port an entire audio library to make this happen",
    "start": "2606240",
    "end": "2612640"
  },
  {
    "text": "so throughout the first couple of weeks of this project and and given that we're all in",
    "start": "2614240",
    "end": "2620640"
  },
  {
    "text": "quarantine at the moment well the unlucky ones i've been teasing the internet with screenshots of game boy games relatively",
    "start": "2620640",
    "end": "2627200"
  },
  {
    "text": "hard so once i got to a point where the ui wasn't crashing and the code was suitably ported i just",
    "start": "2627200",
    "end": "2634000"
  },
  {
    "text": "kind of picked up the emulator and stuffed it on github and shared it around right mostly for the fun of it",
    "start": "2634000",
    "end": "2640560"
  },
  {
    "text": "and generally people have enjoyed seeing this kind of project done in c-sharp rather than like yet",
    "start": "2640560",
    "end": "2646960"
  },
  {
    "text": "another business application yet another boring like data access example",
    "start": "2646960",
    "end": "2652800"
  },
  {
    "text": "oh and i stuck like a ridiculous ascii art renderer on the command line so you can",
    "start": "2652800",
    "end": "2658160"
  },
  {
    "text": "technically play game boy games in ascii art if you want to which was kind of fun because why would you not want to do that it",
    "start": "2658160",
    "end": "2664480"
  },
  {
    "text": "it took like 20 minutes and really there was that was the reason for doing it at",
    "start": "2664480",
    "end": "2669760"
  },
  {
    "text": "all right like that was the reason so c sharp is a language i totally love a language i feel very comfortable with",
    "start": "2669760",
    "end": "2675760"
  },
  {
    "text": "and i love the direction that dotnetcore.net5.net whatever the branding is this week",
    "start": "2675760",
    "end": "2681520"
  },
  {
    "text": "um is taking at the moment and i'm on a bit of a journey to prove that really",
    "start": "2681520",
    "end": "2686640"
  },
  {
    "text": "any place that another language can do something.net core is at least as good",
    "start": "2686640",
    "end": "2691760"
  },
  {
    "text": "at least as performing and often plenty more beautiful at doing the same thing and it's kind of wonderful to see people",
    "start": "2691760",
    "end": "2697520"
  },
  {
    "text": "being really responsive and taking it in that spirit and feeling the same way so though obviously",
    "start": "2697520",
    "end": "2703119"
  },
  {
    "text": "when you put something online it's um let's say it's not without its detractors never never read the comments",
    "start": "2703119",
    "end": "2709359"
  },
  {
    "text": "they say never read the comments but i'm a glutton for punishment and i like to engage and there was one",
    "start": "2709359",
    "end": "2714880"
  },
  {
    "text": "comment that really both stuck with me and i think is important enough to highlight",
    "start": "2714880",
    "end": "2721040"
  },
  {
    "text": "code quality is questionable here's how the author emits frames they create a new image they iterate over every pixel they convert its value to a string they",
    "start": "2722160",
    "end": "2728480"
  },
  {
    "text": "pass it back as a source they create a memory stream they encode it as a bitmap they're called two array this is some electron level saw resource",
    "start": "2728480",
    "end": "2734720"
  },
  {
    "text": "wasting reddit as ever is a mixed bag um so",
    "start": "2734720",
    "end": "2740240"
  },
  {
    "text": "totally true i had a bunch of really interesting conversations with people in the dot net and c-sharp subreddits",
    "start": "2740240",
    "end": "2746720"
  },
  {
    "text": "and the general programming subreddit on the other hand absolutely not so much um it's really",
    "start": "2746720",
    "end": "2752880"
  },
  {
    "text": "easy to forget how hostile people can be to absolutely nothing at all but legitimately this is one of the big",
    "start": "2752880",
    "end": "2758400"
  },
  {
    "text": "takeaways of this process for me like as programmers we can be short and snipey and dig through code",
    "start": "2758400",
    "end": "2764640"
  },
  {
    "text": "contextless taking swipes at things basically just bringing each other down and like that whole comment is totally",
    "start": "2764640",
    "end": "2771440"
  },
  {
    "text": "true like it could definitely be better but like you know what the program",
    "start": "2771440",
    "end": "2776480"
  },
  {
    "text": "consumes 30 to 50 megabytes of memory in total i benchmarked it and i would do this",
    "start": "2776480",
    "end": "2782560"
  },
  {
    "text": "all again in exactly the same way in a heartbeat to put something cool and working out",
    "start": "2782560",
    "end": "2788640"
  },
  {
    "text": "into the world that people enjoy so let's like hear this loud and clear no gatekeepers",
    "start": "2788640",
    "end": "2794480"
  },
  {
    "text": "no perfection like there is no such thing do the fun thing enjoy yourselves and",
    "start": "2794480",
    "end": "2800640"
  },
  {
    "text": "share stuff or we let tedious bores like whoever that guy was win",
    "start": "2800640",
    "end": "2806720"
  },
  {
    "text": "luckily the boars never win in in the face of people doing cool stuff right so within a day or two of pushing",
    "start": "2808960",
    "end": "2814960"
  },
  {
    "text": "some tweets out with links to the code i already had two pull requests one with a mono game ui that let the",
    "start": "2814960",
    "end": "2820960"
  },
  {
    "text": "emulator run on various devices the other with an avalonia ui that the emulator run on linux and mac",
    "start": "2820960",
    "end": "2827839"
  },
  {
    "text": "as well as the existing wim forms ui that i glued on the top of it and the headless cross platform",
    "start": "2827839",
    "end": "2833040"
  },
  {
    "text": "scr head cli oh and you can also reference this emulator as a library",
    "start": "2833040",
    "end": "2838079"
  },
  {
    "text": "in your own net projects if you want to use it which is amazing because literally in the last two weeks",
    "start": "2838079",
    "end": "2843680"
  },
  {
    "text": "there's a guy that's just done like a twitter plays pokemon thing where you can tweet him gameboy controls",
    "start": "2843680",
    "end": "2850640"
  },
  {
    "text": "and his user picture changes to control a game of pokemon that uses this behind the scenes and i got a message literally",
    "start": "2850640",
    "end": "2857920"
  },
  {
    "text": "two days ago someone who's doing a similar thing with like a discord plays pokemon where he's averaging the chat inputs",
    "start": "2857920",
    "end": "2864160"
  },
  {
    "text": "and streaming the the image snapshots straight into his discord channel right this is what happens when you do fun",
    "start": "2864160",
    "end": "2870640"
  },
  {
    "text": "things you let people build cooler stuff on top of it",
    "start": "2870640",
    "end": "2875359"
  },
  {
    "text": "so you know the takeaway from me is that i'm very happy i didn't give up when i got stuck",
    "start": "2875760",
    "end": "2881200"
  },
  {
    "text": "this isn't the journey this isn't the journey that i thought i was going to go on when i started writing this but that's fine like i know it sounds",
    "start": "2881200",
    "end": "2887760"
  },
  {
    "text": "trite but everything we do in software is built on the shoulders of other talented people that built things before us and it's so",
    "start": "2887760",
    "end": "2894800"
  },
  {
    "text": "easy to get stuck and give up and it's hard to go and decide to look around for inspiration",
    "start": "2894800",
    "end": "2900800"
  },
  {
    "text": "so i'm really really thankful for the wonderfully high quality coffee gp code base that i have the pleasure",
    "start": "2900800",
    "end": "2906240"
  },
  {
    "text": "of adapting and merging with my own efforts i'm really happy that i didn't succumb to my own hubris",
    "start": "2906240",
    "end": "2912240"
  },
  {
    "text": "and decide that if i couldn't just work it out on my own that it wasn't worth doing and like i'm absolutely thrilled that by",
    "start": "2912240",
    "end": "2918480"
  },
  {
    "text": "sacrificing that little bit of ego for something cool and fun that people can play with and adapt",
    "start": "2918480",
    "end": "2924079"
  },
  {
    "text": "and do their own thing with as well so for my end i really hope that you all have fun maybe pushing some of this code",
    "start": "2924079",
    "end": "2930559"
  },
  {
    "text": "around or tearing it apart or seeing what you could do better right that's the point",
    "start": "2930559",
    "end": "2937040"
  },
  {
    "text": "and and that's the talk about game boy so i'm going to do a really really quick demo but you can obviously find me on",
    "start": "2937359",
    "end": "2942880"
  },
  {
    "text": "the internet in all of those places on the twitters on email whatever please ask me questions the code is on github",
    "start": "2942880",
    "end": "2949920"
  },
  {
    "text": "rip it off rip it off steal all the stuff and let's let's run it let's run it for a bit of",
    "start": "2949920",
    "end": "2956160"
  },
  {
    "text": "fun here's the actual emulator and it can load a rom",
    "start": "2956160",
    "end": "2962480"
  },
  {
    "text": "and we can play super mario in c-sharp",
    "start": "2962480",
    "end": "2970079"
  },
  {
    "text": "that's the real thing um and that's the end of the talk does anyone have any questions i'm going to",
    "start": "2970079",
    "end": "2976400"
  },
  {
    "text": "stop sharing my screen so i can see all your beautiful faces",
    "start": "2976400",
    "end": "2984400"
  },
  {
    "text": "i don't think you need son because the music was playing in my head when you were doing that anyway right like exactly that like just",
    "start": "2984400",
    "end": "2990319"
  },
  {
    "text": "everyone just come along and you know exactly how it works no i love it like it was such a fun",
    "start": "2990319",
    "end": "2996079"
  },
  {
    "text": "thing to do honestly and um it's been so good to see people pushing the code around in ways that i didn't",
    "start": "2996079",
    "end": "3002400"
  },
  {
    "text": "have the time or the inclination to to get done and the wild thing is it",
    "start": "3002400",
    "end": "3007839"
  },
  {
    "text": "was only like a i think i spent two weeks on it like two weeks as as as a day job i was getting up in the",
    "start": "3007839",
    "end": "3013680"
  },
  {
    "text": "morning and working on it and working on it and it's kind of amazing what you can do if you just",
    "start": "3013680",
    "end": "3019280"
  },
  {
    "text": "read the docs honestly just read the docs and march forwards",
    "start": "3019280",
    "end": "3026640"
  },
  {
    "text": "cool well thank you so much for coming everybody like if you let me um let's even get a link in the",
    "start": "3026640",
    "end": "3031839"
  },
  {
    "text": "chat as well of the the github if you want to have a play with it",
    "start": "3031839",
    "end": "3038880"
  },
  {
    "text": "you'd think i would prepare all this in advance but i don't it is uh where is the chat",
    "start": "3040079",
    "end": "3047359"
  },
  {
    "text": "that's a that's a more interesting question okay cool everyone into chat messages cool yeah",
    "start": "3047359",
    "end": "3054480"
  },
  {
    "text": "sorry about the technical error in the middle uh my my internet connection decided obviously this was the perfect time to",
    "start": "3054480",
    "end": "3059839"
  },
  {
    "text": "disconnect for about two minutes um so i hope there's no glitches in the recording",
    "start": "3059839",
    "end": "3066480"
  },
  {
    "text": "perfect thank you so much everybody",
    "start": "3066480",
    "end": "3069838"
  }
]