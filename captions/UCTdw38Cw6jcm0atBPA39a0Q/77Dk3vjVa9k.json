[
  {
    "text": "okay hello thank you for coming my name is Mark Rendell and I have brought you",
    "start": "2090",
    "end": "9900"
  },
  {
    "text": "here to talk to you about cloud native dot net and this talk is being done",
    "start": "9900",
    "end": "20820"
  },
  {
    "text": "using my handcrafted slide app which is",
    "start": "20820",
    "end": "27390"
  },
  {
    "text": "created in dotnet core 2.0 and which interacts with an online service called",
    "start": "27390",
    "end": "34020"
  },
  {
    "text": "deck hub and you can go to deck hub app now on your device and there's a little",
    "start": "34020",
    "end": "42210"
  },
  {
    "text": "search box on the front page and you can type in their cloud - native - net and then you can join in",
    "start": "42210",
    "end": "49800"
  },
  {
    "text": "with the talk you'll see the slides will appear on your device if you log in",
    "start": "49800",
    "end": "56280"
  },
  {
    "text": "using Twitter then you can take notes and those notes will then be there for",
    "start": "56280",
    "end": "62640"
  },
  {
    "text": "you to use in the future and you can ask questions and I have a little extra screen attached to my laptop here and",
    "start": "62640",
    "end": "69240"
  },
  {
    "text": "the questions will pop up on the screen so you can join in with the talk and you",
    "start": "69240",
    "end": "74850"
  },
  {
    "text": "don't have to interrupt or put your hand up or anything like that and deck hub is",
    "start": "74850",
    "end": "82159"
  },
  {
    "text": "an open-source project it's MIT licensed it's on github there's",
    "start": "82159",
    "end": "87990"
  },
  {
    "text": "a link on the home page of the website that will take you to github and you can",
    "start": "87990",
    "end": "93210"
  },
  {
    "text": "get all the code download it do whatever you want with it if you do start a",
    "start": "93210",
    "end": "98460"
  },
  {
    "text": "business with it and it makes tens of millions of dollars then buy me something nice but yes so and I'll be",
    "start": "98460",
    "end": "106560"
  },
  {
    "text": "using that as my demonstration samples throughout the course of the talk so to",
    "start": "106560",
    "end": "116820"
  },
  {
    "text": "start off let's define what cloud native actually means it does not mean building",
    "start": "116820",
    "end": "124469"
  },
  {
    "text": "applications that only run on Azure or only run on AWS or only one only run on",
    "start": "124469",
    "end": "131270"
  },
  {
    "text": "some cloud platform it's actually almost the opposite of",
    "start": "131270",
    "end": "137710"
  },
  {
    "text": "that it's building applications that run on any cloud or on any approximation of",
    "start": "137710",
    "end": "145750"
  },
  {
    "text": "a cloud that you might be able to put together in your own data center the",
    "start": "145750",
    "end": "150940"
  },
  {
    "text": "cloud native foundation which was started to bring together a group of",
    "start": "150940",
    "end": "156010"
  },
  {
    "text": "projects that are aiming to build the ecosystem all this approach to",
    "start": "156010",
    "end": "162370"
  },
  {
    "text": "development they define cloud native as generally consisting of micro services",
    "start": "162370",
    "end": "171510"
  },
  {
    "text": "those micro services are mostly running in containers you're using platform",
    "start": "171510",
    "end": "179770"
  },
  {
    "text": "services that are outside of that container environment for things like",
    "start": "179770",
    "end": "185650"
  },
  {
    "text": "data bases file storage service bus messaging and so on and also a strong",
    "start": "185650",
    "end": "196980"
  },
  {
    "text": "emphasis on DevOps and the whole idea of",
    "start": "196980",
    "end": "203110"
  },
  {
    "text": "continuous integration continuous testing and even continuous deployment",
    "start": "203110",
    "end": "208590"
  },
  {
    "text": "although that's really scary and you should only do it if you absolutely know what you're doing so it's important when",
    "start": "208590",
    "end": "220180"
  },
  {
    "text": "you start giving a talk to explain to people why they might want to adopt the",
    "start": "220180",
    "end": "225670"
  },
  {
    "text": "approach that you're talking about and for cloud native application development",
    "start": "225670",
    "end": "230950"
  },
  {
    "text": "there are a bunch of reasons not least because it's new and exciting and you",
    "start": "230950",
    "end": "237520"
  },
  {
    "text": "get to learn new things and play with new toys so there you go that's that's basically it that's good enough for me",
    "start": "237520",
    "end": "243580"
  },
  {
    "text": "but no there's a lot of great tooling around the cloud native ecosystem and",
    "start": "243580",
    "end": "249420"
  },
  {
    "text": "you can achieve an awful lot with tools that already exist are well documented",
    "start": "249420",
    "end": "255550"
  },
  {
    "text": "lots of books about them and so you can just dive in and get on with stuff and",
    "start": "255550",
    "end": "260680"
  },
  {
    "text": "not worry about building your own tooling and everything else and similarly there's an ecosystem",
    "start": "260680",
    "end": "266740"
  },
  {
    "text": "that has grown up around the things that are forming the the cloud native",
    "start": "266740",
    "end": "273120"
  },
  {
    "text": "ecosystem itself so we've got lots of things as a service things that work",
    "start": "273120",
    "end": "279039"
  },
  {
    "text": "with docker things that work with kubernetes things that provide logging and metrics and and everything else you",
    "start": "279039",
    "end": "286150"
  },
  {
    "text": "also have kind of implicit scalability so if you design your application in a",
    "start": "286150",
    "end": "292840"
  },
  {
    "text": "cloud native way then you're going to automatically get the benefits of being",
    "start": "292840",
    "end": "298060"
  },
  {
    "text": "able to scale upward and outward very easily using the tools in the ecosystem",
    "start": "298060",
    "end": "304389"
  },
  {
    "text": "that already exists and because you can run your applications on commodity",
    "start": "304389",
    "end": "311550"
  },
  {
    "text": "infrastructure you can generally save a lot of cost as well you don't have to",
    "start": "311550",
    "end": "317440"
  },
  {
    "text": "upfront say right well we're hoping to scale this service up to a hundred thousand",
    "start": "317440",
    "end": "323740"
  },
  {
    "text": "users or a million users so we'll have to invest in servers that are capable of",
    "start": "323740",
    "end": "329229"
  },
  {
    "text": "supporting that before you've actually started launching Darkly and got your first thousand users so you can keep",
    "start": "329229",
    "end": "336639"
  },
  {
    "text": "your costs low for as long as possible and by making sure you can jump around",
    "start": "336639",
    "end": "341919"
  },
  {
    "text": "between clouds you can also avoid vendor lock-in and migrate to whichever is",
    "start": "341919",
    "end": "347680"
  },
  {
    "text": "currently offering the best deal for your particular set of requirements so",
    "start": "347680",
    "end": "355570"
  },
  {
    "text": "let's start off with 0.1 micro services because it is illegal in 2018 to be at a",
    "start": "355570",
    "end": "362050"
  },
  {
    "text": "tech conference and stand up here and do a talk that isn't about micro services I",
    "start": "362050",
    "end": "367169"
  },
  {
    "text": "read that somewhere in a Martin Fowler book I think there's a lot of people",
    "start": "367169",
    "end": "376330"
  },
  {
    "text": "talking about micro services and a lot of debates raging on Twitter about what constitutes a micro service and how",
    "start": "376330",
    "end": "382840"
  },
  {
    "text": "small should they be and how do you decide whether something should be one",
    "start": "382840",
    "end": "388419"
  },
  {
    "text": "service or two or three different micro services you know how small is too small",
    "start": "388419",
    "end": "393430"
  },
  {
    "text": "how big is too big how do I decide where to make the cut between two things",
    "start": "393430",
    "end": "399840"
  },
  {
    "text": "it's very difficult with all the different arguments and different articles and everything that are",
    "start": "399840",
    "end": "405419"
  },
  {
    "text": "available to decide whether you're doing it right and I have come to the",
    "start": "405419",
    "end": "411090"
  },
  {
    "text": "conclusion that as long as it's working for you then it's probably right there",
    "start": "411090",
    "end": "418380"
  },
  {
    "text": "are lots of different advantages to micro service architectures one of my",
    "start": "418380",
    "end": "423600"
  },
  {
    "text": "favorite ones personally that I don't see mentioned a lot is when you're",
    "start": "423600",
    "end": "428729"
  },
  {
    "text": "working in a large team of teams micro-services make it very easy for",
    "start": "428729",
    "end": "436050"
  },
  {
    "text": "individual teams to work independently on a vertical slice of the application and they can keep their test suite nice",
    "start": "436050",
    "end": "444270"
  },
  {
    "text": "and small because it's only testing one particular set of things and then there's integration testing that happens",
    "start": "444270",
    "end": "450540"
  },
  {
    "text": "obviously to make sure that everything's interacting properly with everything else but as a counterexample currently",
    "start": "450540",
    "end": "457530"
  },
  {
    "text": "for my day job I'm working for one of the large banks working on a WPF application that consists of a hundred",
    "start": "457530",
    "end": "464039"
  },
  {
    "text": "and twenty five c-sharp projects in a single solution there are 25,000 unit",
    "start": "464039",
    "end": "470190"
  },
  {
    "text": "tests covering this when you do a check in it automatically runs all 25,000 unit",
    "start": "470190",
    "end": "476970"
  },
  {
    "text": "tests twice because there are two different configurations of this application that takes about an hour and",
    "start": "476970",
    "end": "483599"
  },
  {
    "text": "a half but either time those tests of run you go back and you go right can you",
    "start": "483599",
    "end": "488760"
  },
  {
    "text": "merge my pull request please and the system says no because somebody else's",
    "start": "488760",
    "end": "494039"
  },
  {
    "text": "pull request got merged in the meantime and an app config file got updated and now there's a merge conflict and so you",
    "start": "494039",
    "end": "500940"
  },
  {
    "text": "need to resolve that and once you've resolved it you do another push and then you spend an hour and a half running the",
    "start": "500940",
    "end": "506880"
  },
  {
    "text": "tests again it's very difficult we have 100 developers fighting each other to",
    "start": "506880",
    "end": "512130"
  },
  {
    "text": "get their commits in and merged and microservices is a great way around that because you take that from being a",
    "start": "512130",
    "end": "518640"
  },
  {
    "text": "hundred and twenty five projects down to maybe five projects and you have a test suite that takes maybe a minute and a",
    "start": "518640",
    "end": "524279"
  },
  {
    "text": "half to run instead of an hour and a half to run and you have maybe four developers working on the thing instead",
    "start": "524279",
    "end": "530459"
  },
  {
    "text": "of four hundred so that's one advantage microservices and there are many more my",
    "start": "530459",
    "end": "536620"
  },
  {
    "text": "rules of thumb for microservices basically they should be self-contained so they should have a responsibility",
    "start": "536620",
    "end": "543970"
  },
  {
    "text": "it's like the single responsibility principle from object-oriented programming you can apply that to micro",
    "start": "543970",
    "end": "549070"
  },
  {
    "text": "services so they should be self-contained they should do one thing and they should do it well a micro",
    "start": "549070",
    "end": "555220"
  },
  {
    "text": "service should own its own datastore it shouldn't be writing to the same data",
    "start": "555220",
    "end": "561040"
  },
  {
    "text": "store as any other micro service you certainly shouldn't be updating the same",
    "start": "561040",
    "end": "566530"
  },
  {
    "text": "table in the same database from two different micro services one of them has to be responsible for owning it ideally",
    "start": "566530",
    "end": "574090"
  },
  {
    "text": "and if you take this up to the kind of big companies where they've got the money to spend on machines and services",
    "start": "574090",
    "end": "580810"
  },
  {
    "text": "and everything else then every micro service should have its own actual",
    "start": "580810",
    "end": "586450"
  },
  {
    "text": "database server or servers that it's using and their database should be on",
    "start": "586450",
    "end": "593290"
  },
  {
    "text": "there so you get the resilience aspect where if one of the services goes down",
    "start": "593290",
    "end": "598420"
  },
  {
    "text": "or if one of the back-end databases goes down you lose the one service that's dependent on that back-end database but",
    "start": "598420",
    "end": "605140"
  },
  {
    "text": "all the others quite happily keep going if you have a point of failure that causes three separate micro services to",
    "start": "605140",
    "end": "611590"
  },
  {
    "text": "go down they're not three separate micro services and the other useful metric is",
    "start": "611590",
    "end": "618790"
  },
  {
    "text": "if a micro service goes away does everything still carry on working for",
    "start": "618790",
    "end": "626440"
  },
  {
    "text": "some value of working my screen down here is glitching and so I'm slightly thrown so yes can the rest of the system",
    "start": "626440",
    "end": "635890"
  },
  {
    "text": "carry on running in a slightly less useful way if one of those micro",
    "start": "635890",
    "end": "641920"
  },
  {
    "text": "services suddenly disappears because of a network partition or a machine catching fire or a cleaner unplugging",
    "start": "641920",
    "end": "649180"
  },
  {
    "text": "the server rack or something like that so micro services should generally be",
    "start": "649180",
    "end": "658170"
  },
  {
    "text": "removable and yes you're going to have some that are less removable than others some that are more important if you have",
    "start": "658170",
    "end": "664360"
  },
  {
    "text": "a micro service for your shopping cart and that goes down then your e-commerce site has become marginally less useful",
    "start": "664360",
    "end": "671380"
  },
  {
    "text": "than it was when the shopping cart was working so the example I'm going to use",
    "start": "671380",
    "end": "677890"
  },
  {
    "text": "here is the the Dec hub dot app so the the various services that I've got",
    "start": "677890",
    "end": "684190"
  },
  {
    "text": "running to provide can we just start chanting the word microservice yes yes",
    "start": "684190",
    "end": "689260"
  },
  {
    "text": "you can absolutely but thank you so much for actually using the thing because",
    "start": "689260",
    "end": "696550"
  },
  {
    "text": "it's much better when people do that and the first five times I gave this talk it",
    "start": "696550",
    "end": "702850"
  },
  {
    "text": "didn't even work so it's always very nice when the first question appears on my little screen here and I go yeah it's",
    "start": "702850",
    "end": "708340"
  },
  {
    "text": "working also I've just mined all your data No",
    "start": "708340",
    "end": "714390"
  },
  {
    "text": "so Dec hub provides various bits of",
    "start": "714390",
    "end": "722290"
  },
  {
    "text": "functionality so there is the main website and then you enter the tag and",
    "start": "722290",
    "end": "728380"
  },
  {
    "text": "you press ENTER and it takes you off to the shows area and within there you can",
    "start": "728380",
    "end": "734920"
  },
  {
    "text": "join a show and you'll be able to see the slide that's there and theoretically",
    "start": "734920",
    "end": "740590"
  },
  {
    "text": "as I move my slides along it should just get magically moved along on your screen",
    "start": "740590",
    "end": "746490"
  },
  {
    "text": "because of real-time messaging that's going on here and you can ask questions and I can receive the questions here and",
    "start": "746490",
    "end": "754440"
  },
  {
    "text": "you can make notes and those notes will get saved and so there are lots of",
    "start": "754440",
    "end": "760570"
  },
  {
    "text": "different services involved in making that happen and they all look like a",
    "start": "760570",
    "end": "766630"
  },
  {
    "text": "single website because of the way the thing has been put together in production the way it's actually set up",
    "start": "766630",
    "end": "772270"
  },
  {
    "text": "to run but they're all separate services so there is a main website service there",
    "start": "772270",
    "end": "777550"
  },
  {
    "text": "is a shows service there's a question service there's a Notes service there is",
    "start": "777550",
    "end": "783130"
  },
  {
    "text": "a real time service there's a presenter service which only I get to use because I've got an API key there is an identity",
    "start": "783130",
    "end": "791200"
  },
  {
    "text": "service so if you've created an ASP in MVC or core MVC website and you say use",
    "start": "791200",
    "end": "799660"
  },
  {
    "text": "individual authentication it puts a whole area into your website under",
    "start": "799660",
    "end": "805210"
  },
  {
    "text": "identity with a count slash log in register manage and everything else and",
    "start": "805210",
    "end": "810270"
  },
  {
    "text": "I've actually pulled that out and put it into a completely separate standalone service and that deals with the identity",
    "start": "810270",
    "end": "819550"
  },
  {
    "text": "database and everything else and it sets a cookie and then that cookie is used in all the other pages to authenticate the",
    "start": "819550",
    "end": "826630"
  },
  {
    "text": "user using a de WT token now if the identity service goes down then you",
    "start": "826630",
    "end": "833860"
  },
  {
    "text": "can't login so you can't ask questions and you can't make notes but you can",
    "start": "833860",
    "end": "839530"
  },
  {
    "text": "still search for a show and see the slides going along as as I'm progressing",
    "start": "839530",
    "end": "848200"
  },
  {
    "text": "them up here if the question service goes down then you can still log in and",
    "start": "848200",
    "end": "853990"
  },
  {
    "text": "you can take notes you can't ask any questions if the note service goes down you can still log in you can watch the show you can ask",
    "start": "853990",
    "end": "860890"
  },
  {
    "text": "questions that you can't take any notes and so on and so forth and eventually I will get to the point where I've done",
    "start": "860890",
    "end": "867250"
  },
  {
    "text": "some progressive web app stuff and you'll be able to take oats and it'll save them into local storage and then",
    "start": "867250",
    "end": "874420"
  },
  {
    "text": "synchronize when the note service becomes available again so you can then log in on another machine if the",
    "start": "874420",
    "end": "881740"
  },
  {
    "text": "real-time service goes down then you can still sort of follow along with the show but it just won't automatically advance",
    "start": "881740",
    "end": "888280"
  },
  {
    "text": "when I do things so almost everything except the actual call website itself",
    "start": "888280",
    "end": "893680"
  },
  {
    "text": "can go down and the call website is pretty much just static HTML at this",
    "start": "893680",
    "end": "898960"
  },
  {
    "text": "point there's not a lot in there so this is theoretically it's a robust",
    "start": "898960",
    "end": "905020"
  },
  {
    "text": "application it's actually all using a single database server because I can't afford multiple database servers so if",
    "start": "905020",
    "end": "911740"
  },
  {
    "text": "the database server goes down the whole thing's shut but that is a problem of",
    "start": "911740",
    "end": "916840"
  },
  {
    "text": "economy on my part and not with the design of the application itself so",
    "start": "916840",
    "end": "923560"
  },
  {
    "text": "let's take a look at what this looks like I'm going to be using Visual Studio",
    "start": "923560",
    "end": "929020"
  },
  {
    "text": "code to show stuff here and the thing I want to make sure can everyone",
    "start": "929020",
    "end": "934980"
  },
  {
    "text": "see this all right up at the back there yeah because if it gets much bigger then you can't really see very much on the",
    "start": "934980",
    "end": "941819"
  },
  {
    "text": "screen so you can see down here we've got a CLI and an identity and a live and",
    "start": "941819",
    "end": "950040"
  },
  {
    "text": "a notes presenter various things these are all separate solutions and if you",
    "start": "950040",
    "end": "955949"
  },
  {
    "text": "follow the link through to the github organization deck hub app you'll see that they're all separate git",
    "start": "955949",
    "end": "961519"
  },
  {
    "text": "repositories so they're all handled independently of each other and that's a",
    "start": "961519",
    "end": "968429"
  },
  {
    "text": "pain in the backside for me because I am the only person working on this but when you have large teams or even just four",
    "start": "968429",
    "end": "975809"
  },
  {
    "text": "people who were responsible for lots of different things this makes your life much easier having separate repos means",
    "start": "975809",
    "end": "983369"
  },
  {
    "text": "fewer commits conflicts fewer merge problems and also much easier continuous",
    "start": "983369",
    "end": "990720"
  },
  {
    "text": "integration continuous testing continuous deployment because you're not having to say okay which thing within",
    "start": "990720",
    "end": "996389"
  },
  {
    "text": "this repo changed so let's we'll start out by looking at the live service so",
    "start": "996389",
    "end": "1004399"
  },
  {
    "text": "this is the main web service here this is all now running on asp net core 2.1",
    "start": "1004399",
    "end": "1011540"
  },
  {
    "text": "release candidate one which came out on monday and i spent most of the week updating the software and getting it",
    "start": "1011540",
    "end": "1017749"
  },
  {
    "text": "working in that new environment so we have my my live code here and here is my",
    "start": "1017749",
    "end": "1027548"
  },
  {
    "text": "asp net core application and I have my program dot CS here which is perfectly",
    "start": "1027549",
    "end": "1036709"
  },
  {
    "text": "standard and then I have my startup CS here and the main thing that's that's",
    "start": "1036709",
    "end": "1047329"
  },
  {
    "text": "tricky with this is making sure that the cookies that are set by the identity",
    "start": "1047329",
    "end": "1055029"
  },
  {
    "text": "application the identity service are acceptable to this application as well I",
    "start": "1055029",
    "end": "1061460"
  },
  {
    "text": "want the same cookie that's set by one service to work or all the other",
    "start": "1061460",
    "end": "1066590"
  },
  {
    "text": "services that was literally the only difficult thing and it wasn't even that difficult",
    "start": "1066590",
    "end": "1072350"
  },
  {
    "text": "so if I go down to the configure off method down here you can see that we",
    "start": "1072350",
    "end": "1078890"
  },
  {
    "text": "have a doth in Takei ssin cookie authentication default authentication scheme and AD cookie so we're just",
    "start": "1078890",
    "end": "1084920"
  },
  {
    "text": "saying use use cookie authentication and it's a JWT token it's a serialized token",
    "start": "1084920",
    "end": "1093500"
  },
  {
    "text": "with the user information put into it that goes into a cookie and to get that",
    "start": "1093500",
    "end": "1099800"
  },
  {
    "text": "to work across multiple services you have to use data protection",
    "start": "1099800",
    "end": "1107050"
  },
  {
    "text": "configuration so asp net core has extensive data protection library and",
    "start": "1107050",
    "end": "1113210"
  },
  {
    "text": "what that includes is a private key that is used to sign the cookie that is put",
    "start": "1113210",
    "end": "1121880"
  },
  {
    "text": "into the user's browser and then when that comes back in its checked against",
    "start": "1121880",
    "end": "1127400"
  },
  {
    "text": "that private key so make sure it hasn't been tampered with so nobody can edit the cookie and change their user name to",
    "start": "1127400",
    "end": "1133730"
  },
  {
    "text": "somebody else's username and to get that working across multiple services and",
    "start": "1133730",
    "end": "1139400"
  },
  {
    "text": "even if you just create a single asp net core application and everything happens",
    "start": "1139400",
    "end": "1146750"
  },
  {
    "text": "in a single project because it's not that complicated if you're going to be running more than one instance of it you",
    "start": "1146750",
    "end": "1152660"
  },
  {
    "text": "need to do this anyway you have to configure some way that the data",
    "start": "1152660",
    "end": "1158120"
  },
  {
    "text": "protection Keys can be shared between all those services and they provide",
    "start": "1158120",
    "end": "1163850"
  },
  {
    "text": "various ways of doing that in NuGet packages that's that monitor it's",
    "start": "1163850",
    "end": "1175130"
  },
  {
    "text": "buzzing at me now excellent nearly made it through the whole conference just",
    "start": "1175130",
    "end": "1180980"
  },
  {
    "text": "just 14 more minutes so yes we have we say services we're",
    "start": "1180980",
    "end": "1188090"
  },
  {
    "text": "going to add data protection and then we're going to set the application name that's the important bit there the",
    "start": "1188090",
    "end": "1193430"
  },
  {
    "text": "application name is Dec hub and everything all the different services",
    "start": "1193430",
    "end": "1198560"
  },
  {
    "text": "have that same application name and they're going to persist the keys into Redis which is a nice simple place to",
    "start": "1198560",
    "end": "1206900"
  },
  {
    "text": "stick things we don't have to authenticate against it we just stick up a ready server inside our cluster and",
    "start": "1206900",
    "end": "1213530"
  },
  {
    "text": "everything can see it and they use that to share the keys around and so we're going to add data protection we're going",
    "start": "1213530",
    "end": "1219830"
  },
  {
    "text": "to disable automatic key generation and we're going to set the application name oh no hang on so this is this is the",
    "start": "1219830",
    "end": "1226430"
  },
  {
    "text": "production code so this does it in Redis and then this is the local code which",
    "start": "1226430",
    "end": "1231860"
  },
  {
    "text": "doesn't do that because I don't need that what I'm running locally okay yep",
    "start": "1231860",
    "end": "1241700"
  },
  {
    "text": "that's that's pretty much all of that the identity application does the actual",
    "start": "1241700",
    "end": "1250520"
  },
  {
    "text": "business of logging people in and this is just an ASP neck core application",
    "start": "1250520",
    "end": "1257120"
  },
  {
    "text": "where I scaffolded all the identity pages in so asp net core 2.1 does the",
    "start": "1257120",
    "end": "1264680"
  },
  {
    "text": "identity code as razor pages use UI and so i just got all that in it puts it",
    "start": "1264680",
    "end": "1272510"
  },
  {
    "text": "into an identity area inside the application and i'm really slightly",
    "start": "1272510",
    "end": "1279860"
  },
  {
    "text": "vexed that they decided in asp net core that they were still going to support areas obviously various customers came",
    "start": "1279860",
    "end": "1288260"
  },
  {
    "text": "back to them and said we liked areas please put areas back in but if you're breaking your application up into areas",
    "start": "1288260",
    "end": "1294920"
  },
  {
    "text": "you should be breaking it up into multiple services even if you're not",
    "start": "1294920",
    "end": "1300440"
  },
  {
    "text": "breaking your application up into areas you should probably be breaking it up into multiple services so areas are",
    "start": "1300440",
    "end": "1306470"
  },
  {
    "text": "definitely a bad idea so i just ripped everything out of the areas and then",
    "start": "1306470",
    "end": "1313930"
  },
  {
    "text": "we're in here and so we got more complicated stuff going on in here we've",
    "start": "1313930",
    "end": "1318980"
  },
  {
    "text": "got various identity bits we got the default UI that's going in there and here we",
    "start": "1318980",
    "end": "1325430"
  },
  {
    "text": "have our ad authentication and I can say add Twitter and specify my Twitter",
    "start": "1325430",
    "end": "1333080"
  },
  {
    "text": "consumer key in secret and in fairly soon I'll be adding in add Microsoft so",
    "start": "1333080",
    "end": "1341480"
  },
  {
    "text": "you can log in with your Microsoft account and add Google so you can log in with your Google account and not",
    "start": "1341480",
    "end": "1347210"
  },
  {
    "text": "Facebook because I don't like Facebook which I'm allowed to do or not so yes",
    "start": "1347210",
    "end": "1356690"
  },
  {
    "text": "but this is almost entirely just the scaffolding code from an asp net",
    "start": "1356690",
    "end": "1364660"
  },
  {
    "text": "application with individual authentication and I just ripped it out and put it into its own site the other",
    "start": "1364660",
    "end": "1372350"
  },
  {
    "text": "thing that's in here though that is going to be important later on is if we",
    "start": "1372350",
    "end": "1377810"
  },
  {
    "text": "go down to so everyone sort of familiar enough with asp net core that i don't need to explain the startup class so",
    "start": "1377810",
    "end": "1386270"
  },
  {
    "text": "you've got configure services which is dependency injection and then configure which is where you set up your pipeline",
    "start": "1386270",
    "end": "1391310"
  },
  {
    "text": "and the configure code down here we have",
    "start": "1391310",
    "end": "1397580"
  },
  {
    "text": "just the usual things use static files use cookie policy use authentication but",
    "start": "1397580",
    "end": "1403610"
  },
  {
    "text": "just here we've got something called use path base so this is what's used in the",
    "start": "1403610",
    "end": "1412250"
  },
  {
    "text": "production code to say this application is going to be running under slash",
    "start": "1412250",
    "end": "1417380"
  },
  {
    "text": "identity or some directory on the web server and we'll see how that's actually",
    "start": "1417380",
    "end": "1422900"
  },
  {
    "text": "handled on the web server side of things very shortly and then we have various",
    "start": "1422900",
    "end": "1430820"
  },
  {
    "text": "other applications so we have a shows application so this is what you're using",
    "start": "1430820",
    "end": "1436610"
  },
  {
    "text": "if you've actually got the been looking",
    "start": "1436610",
    "end": "1443000"
  },
  {
    "text": "at all 0 yes so sorry I'll come back to that in a moment see it's nice being able to ask have questions",
    "start": "1443000",
    "end": "1448670"
  },
  {
    "text": "asynchronously and it makes me read them out as well which is great for the video so yes I the application you're using is",
    "start": "1448670",
    "end": "1456470"
  },
  {
    "text": "the show service that's sharing cookies and and everything else if you're getting the questions coming through",
    "start": "1456470",
    "end": "1462980"
  },
  {
    "text": "onto your screen in real time that's the signal our service which is sitting in real time and I've got various",
    "start": "1462980",
    "end": "1468919"
  },
  {
    "text": "advantages to working like this one of them is that when I came to upgrade from ASP neck core 2.1 preview 2 to release",
    "start": "1468919",
    "end": "1477679"
  },
  {
    "text": "candidate 1 I could do it one service at a time I didn't have to sit there and",
    "start": "1477679",
    "end": "1482750"
  },
  {
    "text": "make sure the entire thing worked with the new rc1 and the various breaking changes that were in there I could just",
    "start": "1482750",
    "end": "1489590"
  },
  {
    "text": "deploy bits of the application that were upgraded one of the things that's in",
    "start": "1489590",
    "end": "1495379"
  },
  {
    "text": "there is that the identity application because the identity pages are still using bootstrap 3 as their styling code",
    "start": "1495379",
    "end": "1503059"
  },
  {
    "text": "so the identity micro service has bootstrap 3 and various older bits of",
    "start": "1503059",
    "end": "1509720"
  },
  {
    "text": "JavaScript and CSS in it whereas all the others have got bootstrap 4.1.1 and newer jQuery and everything else so",
    "start": "1509720",
    "end": "1519019"
  },
  {
    "text": "that's in there and then we have the presenter Micra service which is where",
    "start": "1519019",
    "end": "1529490"
  },
  {
    "text": "my command line application that's actually generating the slides is communicating with the presenter service",
    "start": "1529490",
    "end": "1535669"
  },
  {
    "text": "to say here this slide is now available there's also a slides service which",
    "start": "1535669",
    "end": "1541610"
  },
  {
    "text": "literally does nothing but accept streams of bytes assume that they're JPEGs and put them into Azure blob",
    "start": "1541610",
    "end": "1546980"
  },
  {
    "text": "storage and then get them back out again when you ask for them that's all it does that's a tiny little micro service so",
    "start": "1546980",
    "end": "1556370"
  },
  {
    "text": "yes I'm just going to go back to my slides and try and remember where I am",
    "start": "1556370",
    "end": "1567440"
  },
  {
    "text": "ok so been looking at all 0 any reason you didn't do earth as a service to keep it",
    "start": "1567440",
    "end": "1575580"
  },
  {
    "text": "simple or would that not be simpler the reason I'm not using all 0 is because",
    "start": "1575580",
    "end": "1580740"
  },
  {
    "text": "it's expensive and it's not hugely expensive for what it does it's just very expensive when all you want is a",
    "start": "1580740",
    "end": "1587040"
  },
  {
    "text": "little demo application to do in a talk all 0 provide a great service and if",
    "start": "1587040",
    "end": "1592620"
  },
  {
    "text": "you're building something big then I absolutely recommend using them or one",
    "start": "1592620",
    "end": "1600030"
  },
  {
    "text": "of those other you know Azure ad b2c or whatever we've got now so yes using",
    "start": "1600030",
    "end": "1607020"
  },
  {
    "text": "external services for things like authentication is is very sensible the",
    "start": "1607020",
    "end": "1614520"
  },
  {
    "text": "Redis serve isn't the Redis server a single point of failure it is but it's",
    "start": "1614520",
    "end": "1619740"
  },
  {
    "text": "not doing anything particularly important once the service is up and running it doesn't go back to the Redis",
    "start": "1619740",
    "end": "1626160"
  },
  {
    "text": "server to get the data protection key so until you restart a service or update a",
    "start": "1626160",
    "end": "1632130"
  },
  {
    "text": "service then you don't have to worry about whether the ready server is there or not you'll lose some of the messaging",
    "start": "1632130",
    "end": "1638520"
  },
  {
    "text": "that it's also being used for but again that's something that the application can carry on running without if you are",
    "start": "1638520",
    "end": "1646380"
  },
  {
    "text": "concerned about Redis as a point of failure for key sharing then you could use something like this your blob",
    "start": "1646380",
    "end": "1652050"
  },
  {
    "text": "storage which is less likely to go away but you're generally ok with with using",
    "start": "1652050",
    "end": "1659940"
  },
  {
    "text": "Redis for transient bits of code like that ok so the various components in",
    "start": "1659940",
    "end": "1669840"
  },
  {
    "text": "here we have asp net called two point one release candidate one which gives you an awful lot of stuff at the box not",
    "start": "1669840",
    "end": "1675870"
  },
  {
    "text": "least of which is absolutely bonkers performance so I can run these services on fairly small virtual machines in the",
    "start": "1675870",
    "end": "1683640"
  },
  {
    "text": "cloud and still get enough performance that the 40 or so people who come to my",
    "start": "1683640",
    "end": "1690090"
  },
  {
    "text": "talks can follow along quite happily I'm using Postgres equal so entity framework",
    "start": "1690090",
    "end": "1697560"
  },
  {
    "text": "core there is a Postgres equal provider for that which works very nicely",
    "start": "1697560",
    "end": "1702840"
  },
  {
    "text": "Postgres equal does everything I need and it's cheaper to run than Microsoft",
    "start": "1702840",
    "end": "1708330"
  },
  {
    "text": "sequel server Redis is in there Redis is used for pub/sub messaging inside the",
    "start": "1708330",
    "end": "1714900"
  },
  {
    "text": "application between various components and also for sharing the keys around the place the sharing the keys part of the",
    "start": "1714900",
    "end": "1722700"
  },
  {
    "text": "reason I'm using Redis for that is just because I don't have to worry about putting in connection strings for as",
    "start": "1722700",
    "end": "1728160"
  },
  {
    "text": "your blob storage or or anything else and then inside Azure I am using blob storage for for the slides that's where",
    "start": "1728160",
    "end": "1736530"
  },
  {
    "text": "the slides get stored some of the services will be using table storage instead of Postgres equal for user data",
    "start": "1736530",
    "end": "1744270"
  },
  {
    "text": "and I'm also using service bus and this is another important point with micro",
    "start": "1744270",
    "end": "1749550"
  },
  {
    "text": "service architecture is you don't as far as possible",
    "start": "1749550",
    "end": "1754710"
  },
  {
    "text": "you want to avoid synchronous communication between services so you don't want to have a post that goes from",
    "start": "1754710",
    "end": "1762270"
  },
  {
    "text": "the web to your service that then causes a post to another service and then has",
    "start": "1762270",
    "end": "1767640"
  },
  {
    "text": "to wait for that to complete before the response is returned to the user you",
    "start": "1767640",
    "end": "1773100"
  },
  {
    "text": "want to use messaging as far as possible so for example when I move the slide",
    "start": "1773100",
    "end": "1780060"
  },
  {
    "text": "along that goes to the presenter service and says I've moved this slide along the",
    "start": "1780060",
    "end": "1786210"
  },
  {
    "text": "presenter service puts a message on to Azure service bus saying this slide is now available which gets picked up by a",
    "start": "1786210",
    "end": "1793290"
  },
  {
    "text": "background process in the show service and then that updates the show's database because the show service is",
    "start": "1793290",
    "end": "1800310"
  },
  {
    "text": "responsible for the show's database and there are various other messages that go",
    "start": "1800310",
    "end": "1805710"
  },
  {
    "text": "around over service bus as well if the service that processes the messages on",
    "start": "1805710",
    "end": "1811590"
  },
  {
    "text": "service bus isn't there they'll sit there for a day until a service consumes",
    "start": "1811590",
    "end": "1818190"
  },
  {
    "text": "them if it hasn't consumed them after a day it'll just throw them on to a dead letter cube and I can come back and say",
    "start": "1818190",
    "end": "1824940"
  },
  {
    "text": "why didn't that get picked up so those are the various bits and pieces that the",
    "start": "1824940",
    "end": "1833340"
  },
  {
    "text": "application is using getting it into production is a matter",
    "start": "1833340",
    "end": "1842150"
  },
  {
    "text": "of wrapping things up in docker images so that we can run them in containers",
    "start": "1842150",
    "end": "1847370"
  },
  {
    "text": "and then using kubernetes to orchestrate those containers manage them inside the",
    "start": "1847370",
    "end": "1854330"
  },
  {
    "text": "cloud and get them all talking to each other and everything else docker you can",
    "start": "1854330",
    "end": "1860900"
  },
  {
    "text": "get docker for Windows which runs on top of hyper-v you can get docker for Mac which runs on top of docker zone the",
    "start": "1860900",
    "end": "1867800"
  },
  {
    "text": "hypervisor for Mac OS you can get docker for Linux just by doing a PT install",
    "start": "1867800",
    "end": "1875540"
  },
  {
    "text": "docker there's some repo stuff you have to do but that generally works docker",
    "start": "1875540",
    "end": "1882680"
  },
  {
    "text": "for Windows and docker for Mac both now also include kubernetes you have to turn",
    "start": "1882680",
    "end": "1888410"
  },
  {
    "text": "it on because it's an optional thing but you can say I want my local docker",
    "start": "1888410",
    "end": "1893560"
  },
  {
    "text": "instance to also be a single node kubernetes cluster and you can use all the kubernetes tools against that as",
    "start": "1893560",
    "end": "1900770"
  },
  {
    "text": "well which is great and Microsoft are enthusiastically supporting docker if",
    "start": "1900770",
    "end": "1906500"
  },
  {
    "text": "you go to hub comments last you slash Microsoft you can see there dozens of",
    "start": "1906500",
    "end": "1911510"
  },
  {
    "text": "repositories that they've got in there they've got they did have an asp net",
    "start": "1911510",
    "end": "1916550"
  },
  {
    "text": "call repository but that's been deprecated now it's all just dotnet so",
    "start": "1916550",
    "end": "1921950"
  },
  {
    "text": "many different dotnet images there are dotnet images based on Debian Linux",
    "start": "1921950",
    "end": "1927050"
  },
  {
    "text": "based on bionic Ubuntu Linux based on Alpine which is tiny it's a 5 megabyte",
    "start": "1927050",
    "end": "1933080"
  },
  {
    "text": "Linux very small the other one that's on there that I do actually use quite a lot",
    "start": "1933080",
    "end": "1938720"
  },
  {
    "text": "is MS - sequel server - Linux which is sequel server running inside a docker",
    "start": "1938720",
    "end": "1945560"
  },
  {
    "text": "container which is very nice because it means I can mess up my database I can",
    "start": "1945560",
    "end": "1953090"
  },
  {
    "text": "just delete the whole server and then start a new one and it's all better again so to develop with docker you have",
    "start": "1953090",
    "end": "1964130"
  },
  {
    "text": "to work with two things one is a docker file and then the other which is not absolutely necessary but will",
    "start": "1964130",
    "end": "1971020"
  },
  {
    "text": "make your life an awful lot easier is docker compose a docker file is really",
    "start": "1971020",
    "end": "1976660"
  },
  {
    "text": "just a recipe for a piece of functionality for an application at the",
    "start": "1976660",
    "end": "1983770"
  },
  {
    "text": "moment we use docker files to build docker images which we then push to a registry and then we pull them from a",
    "start": "1983770",
    "end": "1989020"
  },
  {
    "text": "docker runtime system and we use those to start containers but really a docker",
    "start": "1989020",
    "end": "1994600"
  },
  {
    "text": "file is just a recipe for how to put an application together in a way that it",
    "start": "1994600",
    "end": "2000929"
  },
  {
    "text": "can run anywhere and if I can get an application running in a docker container on my machine if I then push",
    "start": "2000929",
    "end": "2008850"
  },
  {
    "text": "that same image to a repository somewhere a registry somewhere and then run it on another machine it should",
    "start": "2008850",
    "end": "2015210"
  },
  {
    "text": "theoretically run just as well the only catch in there being external",
    "start": "2015210",
    "end": "2022350"
  },
  {
    "text": "dependencies so I might have an external dependency that is available on my machine that isn't available in the",
    "start": "2022350",
    "end": "2027720"
  },
  {
    "text": "target environment but apart from that I'm not gonna get any conflicts over dotnet framework versions or iis",
    "start": "2027720",
    "end": "2034890"
  },
  {
    "text": "versions or any of those other things docker files are really really simple these days so I have it the docker file",
    "start": "2034890",
    "end": "2042690"
  },
  {
    "text": "for live is here that's the whole thing it all fits on the screen we say use the",
    "start": "2042690",
    "end": "2051980"
  },
  {
    "text": "microsoft.net big long tag thing at the end there so that's the sdk version it's",
    "start": "2051980",
    "end": "2059700"
  },
  {
    "text": "the release candidate one of the 2.1 SDK and the Bionic bit at the end there means it's using the ubuntu Bionic base",
    "start": "2059700",
    "end": "2066868"
  },
  {
    "text": "image and then we're going to create a code directory on there and change into",
    "start": "2066869",
    "end": "2071940"
  },
  {
    "text": "that copy the contents of my local directory on this machine into that code",
    "start": "2071940",
    "end": "2078060"
  },
  {
    "text": "directory and then run CD into the project directory and then run dotnet",
    "start": "2078060",
    "end": "2085648"
  },
  {
    "text": "publish give it an output targets and then a configuration release then we",
    "start": "2085649",
    "end": "2092608"
  },
  {
    "text": "have another from and if you haven't played with docker recently you might not have seen this this is a multi-stage",
    "start": "2092609",
    "end": "2097710"
  },
  {
    "text": "built so the SDK image is nearly two gig Heights it got smaller because they",
    "start": "2097710",
    "end": "2104380"
  },
  {
    "text": "removed node from it but you don't want to be pushing to gigabyte images into",
    "start": "2104380",
    "end": "2110470"
  },
  {
    "text": "your production cluster because some of these are very small virtual machines and they don't have a lot of disk space",
    "start": "2110470",
    "end": "2115960"
  },
  {
    "text": "so we have a run time image which only has the bare minimum runtime",
    "start": "2115960",
    "end": "2121839"
  },
  {
    "text": "dependencies and the runtime version of the dotnet executable as opposed to the",
    "start": "2121839",
    "end": "2127540"
  },
  {
    "text": "SDK version the only thing that the runtime version can do is run a DLL and",
    "start": "2127540",
    "end": "2133480"
  },
  {
    "text": "so we use the runtime image we copy the output from our build image onto the",
    "start": "2133480",
    "end": "2141609"
  },
  {
    "text": "runtime image we set the work directory to slash app and then we set the entry",
    "start": "2141609",
    "end": "2147160"
  },
  {
    "text": "point here to dotnet and Dec our live DLL okay that creates our image so that",
    "start": "2147160",
    "end": "2154089"
  },
  {
    "text": "will create an image called Dec hub slash web with a version number on the end of it when I do a build to run that",
    "start": "2154089",
    "end": "2163210"
  },
  {
    "text": "I can do docker run and pass a bunch of parameters over to it but I've got like",
    "start": "2163210",
    "end": "2171040"
  },
  {
    "text": "a dozen different services here if I want to get the entire system running on my machine then I've got a lot of docker",
    "start": "2171040",
    "end": "2177369"
  },
  {
    "text": "runs to do and so there's something called docker compose which lets me spin everything up and make the connections",
    "start": "2177369",
    "end": "2184480"
  },
  {
    "text": "and specify the connection strings and everything else in a single Gamel file",
    "start": "2184480",
    "end": "2190569"
  },
  {
    "text": "and that looks like this so this sits outside the various different github",
    "start": "2190569",
    "end": "2199560"
  },
  {
    "text": "directories and this just lets me say",
    "start": "2199560",
    "end": "2204700"
  },
  {
    "text": "okay so I need to if I need to do a build then there's a docker file in dot",
    "start": "2204700",
    "end": "2210099"
  },
  {
    "text": "slash live and you can build the image you can give it this tag here if the tag",
    "start": "2210099",
    "end": "2215109"
  },
  {
    "text": "already exists don't worry about it just use the one that's already there I can specify some environment variables in",
    "start": "2215109",
    "end": "2220720"
  },
  {
    "text": "there I can specify the network I can say this depends on the database and",
    "start": "2220720",
    "end": "2227290"
  },
  {
    "text": "Redis although it doesn't depend on the right database so I'll just get rid of that and then I have",
    "start": "2227290",
    "end": "2233470"
  },
  {
    "text": "some labels here which are used with a docker image called traffic traffic is a",
    "start": "2233470",
    "end": "2240140"
  },
  {
    "text": "web proxy written in go that can actually listen to the docker run time",
    "start": "2240140",
    "end": "2246950"
  },
  {
    "text": "and when a container starts up looks to see if there are labels and if there are then it uses those to start routing",
    "start": "2246950",
    "end": "2254810"
  },
  {
    "text": "traffic it is routing here anything that",
    "start": "2254810",
    "end": "2261910"
  },
  {
    "text": "goes to the host micro stuff uh-oh will get routed to this service unless",
    "start": "2261910",
    "end": "2272750"
  },
  {
    "text": "it finds another service with a higher priority like identity for example which",
    "start": "2272750",
    "end": "2279260"
  },
  {
    "text": "specifies a path prefix of slash identity and has a priority of 200 so",
    "start": "2279260",
    "end": "2284510"
  },
  {
    "text": "that will win over the web side of things micro stuff dot IO is a domain",
    "start": "2284510",
    "end": "2293150"
  },
  {
    "text": "that I own and its DNS record has two",
    "start": "2293150",
    "end": "2298730"
  },
  {
    "text": "entries micro stuff de IO and wild card micro stuff the IO and both of them",
    "start": "2298730",
    "end": "2305600"
  },
  {
    "text": "point to 1 to 7.1 and will do so if you're ever working locally and you want",
    "start": "2305600",
    "end": "2311810"
  },
  {
    "text": "an actual domain to play with instead of just localhost just use Microsoft the IO it will work you're welcome",
    "start": "2311810",
    "end": "2318200"
  },
  {
    "text": "there you go free gifts for everybody ok and then down at the bottom here we",
    "start": "2318200",
    "end": "2325040"
  },
  {
    "text": "have the various dependencies that are necessary for this as well so we have",
    "start": "2325040",
    "end": "2332600"
  },
  {
    "text": "our DB which is the post Cruz Alpine image and there we're setting the username and password using environment",
    "start": "2332600",
    "end": "2339500"
  },
  {
    "text": "variables we have the traffic image we've got a radius image we've got an influx DB image and a chronograph image",
    "start": "2339500",
    "end": "2345590"
  },
  {
    "text": "in there as well just to make sure those things are working ok with that I can do",
    "start": "2345590",
    "end": "2352580"
  },
  {
    "text": "docker compose up and the entire micro service is architecture application just",
    "start": "2352580",
    "end": "2358430"
  },
  {
    "text": "spins up on my machine along with the dependencies and I can test everything make sure it all works locally and I can",
    "start": "2358430",
    "end": "2364820"
  },
  {
    "text": "use that for doing integration testing before I push things up into the actual production cluster in",
    "start": "2364820",
    "end": "2372500"
  },
  {
    "text": "production we don't use docker itself we use Koopa Nettie's kubernetes is like",
    "start": "2372500",
    "end": "2377990"
  },
  {
    "text": "another layer of abstraction on top of docker I'm sure you've heard all about it by now it is for a while there there",
    "start": "2377990",
    "end": "2386900"
  },
  {
    "text": "was docker swarm there was Mises sphere there was DCOs there was marathon there",
    "start": "2386900",
    "end": "2392270"
  },
  {
    "text": "were lots of different options for orchestration and then suddenly towards the end of last year kubernetes just one",
    "start": "2392270",
    "end": "2399970"
  },
  {
    "text": "last I checked you couldn't encrypt secrets in a compose or docker file has that changed supposed to just use the",
    "start": "2399970",
    "end": "2407930"
  },
  {
    "text": "managed orchestrators you cannot encrypt secrets in a docker file or in docker compose you don't keep your secrets you",
    "start": "2407930",
    "end": "2415730"
  },
  {
    "text": "could have that docker compose file that's only the secrets but when I'm running locally those are not the ones that go into production I'll talk about",
    "start": "2415730",
    "end": "2422750"
  },
  {
    "text": "the secrets that go into production in a little while could a server less app also be cloud native are they by default they sort of",
    "start": "2422750",
    "end": "2430370"
  },
  {
    "text": "are really because it's difficult to run a service app outside of the cloud and",
    "start": "2430370",
    "end": "2436270"
  },
  {
    "text": "when you're building this sort of thing you might have a bunch of asp net core micro services and say to yourself i",
    "start": "2436270",
    "end": "2443180"
  },
  {
    "text": "need this to be in you know i want to be able to build this and test it locally and everything else but you might have",
    "start": "2443180",
    "end": "2449990"
  },
  {
    "text": "something that is so piffling lea small it's literally just six lines of code then by all means put that into Azure",
    "start": "2449990",
    "end": "2456860"
  },
  {
    "text": "functions or AWS lambda so service can be part of your cloud native application",
    "start": "2456860",
    "end": "2463310"
  },
  {
    "text": "it's just difficult to run that locally okay so for running kubernetes you have",
    "start": "2463310",
    "end": "2470630"
  },
  {
    "text": "various options the three major cloud providers all now have kubernetes as a",
    "start": "2470630",
    "end": "2476150"
  },
  {
    "text": "service Azur has aks which is their second-generation",
    "start": "2476150",
    "end": "2481910"
  },
  {
    "text": "managed container orchestration service the first one did docker swarm mode and",
    "start": "2481910",
    "end": "2487370"
  },
  {
    "text": "DCOs as well the new one just as kubernetes the nice thing with that is",
    "start": "2487370",
    "end": "2492530"
  },
  {
    "text": "that they don't charge you for the control plane so they only charge you for the nodes which are actually running",
    "start": "2492530",
    "end": "2497600"
  },
  {
    "text": "your code not the nodes which are running the other notes Google have Google container",
    "start": "2497600",
    "end": "2503880"
  },
  {
    "text": "engine also spelt with the K same idea you don't pay you for the management nodes you just pay for the things that",
    "start": "2503880",
    "end": "2509760"
  },
  {
    "text": "you're running Amazon have eks which is their second generation managed cloud again as I think you don't pay for the",
    "start": "2509760",
    "end": "2518970"
  },
  {
    "text": "control plane with a KS with e KS it's",
    "start": "2518970",
    "end": "2524460"
  },
  {
    "text": "not entirely clear from their documentation and of course you can spin up your own kubernetes cluster which I",
    "start": "2524460",
    "end": "2531860"
  },
  {
    "text": "absolutely strongly recommend you do not do because it's very very complicated",
    "start": "2531860",
    "end": "2537030"
  },
  {
    "text": "you have to set up a net CD distributed service and all sorts of very complicated things and yeah",
    "start": "2537030",
    "end": "2544320"
  },
  {
    "text": "just just don't just let somebody else do it for you unless you're running on Prem in which case let ops do it for you",
    "start": "2544320",
    "end": "2551850"
  },
  {
    "text": "DevOps doesn't spin up the kubernetes cluster ops spin up the kubernetes cluster then DevOps use the kubernetes",
    "start": "2551850",
    "end": "2558840"
  },
  {
    "text": "cluster so kubernetes concepts you have",
    "start": "2558840",
    "end": "2563880"
  },
  {
    "text": "clusters which is your big bunch of machines that are all joined together and working in unison and the machines",
    "start": "2563880",
    "end": "2571740"
  },
  {
    "text": "within those are referred to as nodes and then the things that you run on your cluster are called workloads and there",
    "start": "2571740",
    "end": "2579120"
  },
  {
    "text": "are lots of different kinds of workloads so you have stateful services and stateless services and deployments and",
    "start": "2579120",
    "end": "2584910"
  },
  {
    "text": "various other things and then the actual containers themselves run inside pods so",
    "start": "2584910",
    "end": "2592620"
  },
  {
    "text": "most of the other orchestration systems just had containers so you would run a",
    "start": "2592620",
    "end": "2597840"
  },
  {
    "text": "container and then that an instance of that container would be scheduled across",
    "start": "2597840",
    "end": "2603090"
  },
  {
    "text": "multiple different nodes kubernetes has pods most pods will just have one",
    "start": "2603090",
    "end": "2609180"
  },
  {
    "text": "container inside them but you can have two or three containers inside a single",
    "start": "2609180",
    "end": "2614310"
  },
  {
    "text": "pot kubernetes will guarantee that those containers are always scheduled onto the",
    "start": "2614310",
    "end": "2619680"
  },
  {
    "text": "same node together and they can see each other over localhost as opposed to",
    "start": "2619680",
    "end": "2625320"
  },
  {
    "text": "needing to know each other's on IP addresses there are lots of reasons why you might want to do that",
    "start": "2625320",
    "end": "2631220"
  },
  {
    "text": "using kubernetes it's quite scary at first but once you get your head around",
    "start": "2632120",
    "end": "2638240"
  },
  {
    "text": "the basic principles it becomes a lot more friendly and straightforward and",
    "start": "2638240",
    "end": "2644630"
  },
  {
    "text": "eventually it's just the way you do things it's almost all done using the",
    "start": "2644630",
    "end": "2649670"
  },
  {
    "text": "cube CTL command line tool which is a single self-contained executable as an",
    "start": "2649670",
    "end": "2654830"
  },
  {
    "text": "example when I want to create a new kubernetes cluster in Azure I do a Zed",
    "start": "2654830",
    "end": "2661760"
  },
  {
    "text": "IKS create and specify a couple of parameters for the resource group and the location and everything else I then",
    "start": "2661760",
    "end": "2669290"
  },
  {
    "text": "do a Zed IKS get - credentials and then after",
    "start": "2669290",
    "end": "2674900"
  },
  {
    "text": "that's finished running cube CTL is suddenly magically pointing at my new cluster in my Azure data center and at",
    "start": "2674900",
    "end": "2682070"
  },
  {
    "text": "that point I can start using cube CTL to apply configurations from ml files on my",
    "start": "2682070",
    "end": "2688670"
  },
  {
    "text": "machine to my cluster so let's say quick look at the cube code from my deck hub",
    "start": "2688670",
    "end": "2697490"
  },
  {
    "text": "application so I've got the top-level stuff sits in a separate directory on",
    "start": "2697490",
    "end": "2705230"
  },
  {
    "text": "here and we have Dec hub namespace so we",
    "start": "2705230",
    "end": "2710270"
  },
  {
    "text": "just create a namespace called Dec hub to keep everything separate so you might have multiple separate",
    "start": "2710270",
    "end": "2717130"
  },
  {
    "text": "applications running in a kubernetes cluster you can namespace them to keep",
    "start": "2717130",
    "end": "2722510"
  },
  {
    "text": "their dependencies separate from each other so I can have Redis in the deck hub namespace and have a complete the",
    "start": "2722510",
    "end": "2728150"
  },
  {
    "text": "other Redis in a completely separate namespace and be sure that they're not going to overlap with each other",
    "start": "2728150",
    "end": "2734120"
  },
  {
    "text": "here is the reddest deployment file and that's just saying go and get this version of Redis from the registry and",
    "start": "2734120",
    "end": "2742160"
  },
  {
    "text": "run it and then expose it as a service with the Redis label and the Redis name",
    "start": "2742160",
    "end": "2750710"
  },
  {
    "text": "now anything inside the deck hard namespace can just go oh Redis and they",
    "start": "2750710",
    "end": "2757310"
  },
  {
    "text": "will get that service back running multiple instances of Redis in a",
    "start": "2757310",
    "end": "2762650"
  },
  {
    "text": "kubernetes cluster is much more complicated and lots of documentation on how to do that because you have to essentially spin one",
    "start": "2762650",
    "end": "2769650"
  },
  {
    "text": "up and then make sure that another one's running on the different node as a slave and then yeah whatever it is with Redis",
    "start": "2769650",
    "end": "2776099"
  },
  {
    "text": "if you need that sort of stuff then just start using Redis as a service from your favorite cloud provider and then we have",
    "start": "2776099",
    "end": "2784079"
  },
  {
    "text": "the nginx ingress setup here this is that where a lot of the magic happens so",
    "start": "2784079",
    "end": "2792140"
  },
  {
    "text": "kubernetes has the idea of an ingress controller when a request comes in and hits the load balancer and then hits the",
    "start": "2792140",
    "end": "2799349"
  },
  {
    "text": "cluster how does it decide which service inside the cluster it's going to route that request to does that using an",
    "start": "2799349",
    "end": "2806369"
  },
  {
    "text": "ingress controller the ingress controller when you're running on Azure IKS for example you can actually say",
    "start": "2806369",
    "end": "2814259"
  },
  {
    "text": "create a load balancer and it will create an azure level 5 load balancer for you and hook itself up to it and",
    "start": "2814259",
    "end": "2821069"
  },
  {
    "text": "then you attach labels through everything else similar to the traffic labels that we had in the docker compose",
    "start": "2821069",
    "end": "2826440"
  },
  {
    "text": "file that talked to the nginx ingress controller and say please route traffic",
    "start": "2826440",
    "end": "2832529"
  },
  {
    "text": "accordingly the Lego item in there is",
    "start": "2832529",
    "end": "2837630"
  },
  {
    "text": "slightly deprecated now and I haven't updated it yet but that does let's encrypt automatically it's let's encrypt",
    "start": "2837630",
    "end": "2846029"
  },
  {
    "text": "and then go because it's written in go because of course it is because you",
    "start": "2846029",
    "end": "2851519"
  },
  {
    "text": "don't need generics to do let's encrypt ok so then if we go into life you can",
    "start": "2851519",
    "end": "2858480"
  },
  {
    "text": "see that live has got a cube file in there as well and in here we say ok so here's my image",
    "start": "2858480",
    "end": "2865440"
  },
  {
    "text": "that I built and pushed to my registry I want you to pull that down and here are",
    "start": "2865440",
    "end": "2871759"
  },
  {
    "text": "my environment variables in here so is my Redis host and my influx server all",
    "start": "2871759",
    "end": "2877559"
  },
  {
    "text": "my non secure keys are held in there and",
    "start": "2877559",
    "end": "2883710"
  },
  {
    "text": "my container port and then I have my service entry here so that I can say",
    "start": "2883710",
    "end": "2888779"
  },
  {
    "text": "this is the deck hub service or this is the web service within deck hub and then I have my ingress settings down here",
    "start": "2888779",
    "end": "2895170"
  },
  {
    "text": "which says expose this to the engine engine ingress controller and when a request",
    "start": "2895170",
    "end": "2902820"
  },
  {
    "text": "comes in for deck Hubbell app then route the requests through to here so to go",
    "start": "2902820",
    "end": "2911460"
  },
  {
    "text": "back to the encrypted secrets kubernetes actually has secrets as a first-class",
    "start": "2911460",
    "end": "2917870"
  },
  {
    "text": "citizen so you can go to kubernetes and say create a secret there are actually",
    "start": "2917870",
    "end": "2923160"
  },
  {
    "text": "three kinds of Secrets you've got a registry secret which gives it permission to pull from private",
    "start": "2923160",
    "end": "2928470"
  },
  {
    "text": "registries you've got a TLS secret which lets you put in a certificate and key",
    "start": "2928470",
    "end": "2935010"
  },
  {
    "text": "file for when you want to do SSL and you have generic secrets which is what most",
    "start": "2935010",
    "end": "2942600"
  },
  {
    "text": "of these are so I have a generic secret called API key which has a value inside",
    "start": "2942600",
    "end": "2950580"
  },
  {
    "text": "it called hash fries and here I'm just saying take the value from that secret",
    "start": "2950580",
    "end": "2955890"
  },
  {
    "text": "which is encrypted at rest in kubernetes and set it into an environment variable",
    "start": "2955890",
    "end": "2961430"
  },
  {
    "text": "inside this container and that environment variable then overrides the",
    "start": "2961430",
    "end": "2966480"
  },
  {
    "text": "asp net call configuration that's in app settings Jason or wherever else it might",
    "start": "2966480",
    "end": "2971910"
  },
  {
    "text": "be and if you go and look through you'll see there are lots of different secrets",
    "start": "2971910",
    "end": "2977190"
  },
  {
    "text": "in there and no I have not checked my secrets file into github because that",
    "start": "2977190",
    "end": "2983280"
  },
  {
    "text": "would be stupid but I will at some point remember to check in an example secrets",
    "start": "2983280",
    "end": "2989160"
  },
  {
    "text": "file with instructions for filling in your own secrets for your own databases",
    "start": "2989160",
    "end": "2995000"
  },
  {
    "text": "okay so that's kubernetes and then yes so everything in Oh extra tip for this",
    "start": "2995000",
    "end": "3004250"
  },
  {
    "text": "entity framework core has migrations so",
    "start": "3004250",
    "end": "3009770"
  },
  {
    "text": "you can say right I want you to take I got my object model and I'm gonna say",
    "start": "3009770",
    "end": "3015530"
  },
  {
    "text": "dotnet EF migrations add initial create to do my initial migration then you",
    "start": "3015530",
    "end": "3023780"
  },
  {
    "text": "start the thing running with EF six if you were doing model first you would",
    "start": "3023780",
    "end": "3028850"
  },
  {
    "text": "generally while the while you're asp net at the we're starting up you would say context",
    "start": "3028850",
    "end": "3035530"
  },
  {
    "text": "dot ensure database which would make sure that the migrations had been run that doesn't work particularly well in",
    "start": "3035530",
    "end": "3041650"
  },
  {
    "text": "the air core ensure database is still there and it does create the tables what",
    "start": "3041650",
    "end": "3046900"
  },
  {
    "text": "it doesn't do is create the migrations history table so when you then change your model and try and do it again it'll",
    "start": "3046900",
    "end": "3053410"
  },
  {
    "text": "just explode what you actually have to do is do a try update database and then",
    "start": "3053410",
    "end": "3060940"
  },
  {
    "text": "catch the exception and if it's the exception that says it's already been updated then ignore it so that's one",
    "start": "3060940",
    "end": "3068230"
  },
  {
    "text": "thing the other thing is when do you run this because in the old days when you",
    "start": "3068230",
    "end": "3073510"
  },
  {
    "text": "were bringing up maybe two instances of an application on a web farm using",
    "start": "3073510",
    "end": "3078550"
  },
  {
    "text": "octopus deploy you could control how these things were running and you could",
    "start": "3078550",
    "end": "3083740"
  },
  {
    "text": "make sure that the migration only around once if you're deploying 15 instances of",
    "start": "3083740",
    "end": "3088750"
  },
  {
    "text": "an application all at the same time then they're going to go to the database and say has the",
    "start": "3088750",
    "end": "3093910"
  },
  {
    "text": "migration been run and it might only be three of them that actually get to this point at the same time and the database",
    "start": "3093910",
    "end": "3099550"
  },
  {
    "text": "comes back and says no it hasn't and then all three of them start trying to migrate the database at the same time that's not fun so what I do is I put my",
    "start": "3099550",
    "end": "3108280"
  },
  {
    "text": "actual entity framework context and model classes into a separate application I'll show you an example of",
    "start": "3108280",
    "end": "3116830"
  },
  {
    "text": "this using the identity code so I pulled",
    "start": "3116830",
    "end": "3123070"
  },
  {
    "text": "out the day",
    "start": "3123070",
    "end": "3129400"
  },
  {
    "text": "contexts and my application dbcontext and my application user and a couple of other bits and pieces that they need",
    "start": "3129400",
    "end": "3134470"
  },
  {
    "text": "have been pulled into a separate class library application this class library",
    "start": "3134470",
    "end": "3140110"
  },
  {
    "text": "application actually doesn't know what the real database is so this doesn't know about Postgres equal this will work",
    "start": "3140110",
    "end": "3146410"
  },
  {
    "text": "against any database I then reference that class library in my actual web",
    "start": "3146410",
    "end": "3152200"
  },
  {
    "text": "application and I also reference it in a console application that just does this",
    "start": "3152200",
    "end": "3160800"
  },
  {
    "text": "so creates a logger Factory I created a package called migration",
    "start": "3160800",
    "end": "3166540"
  },
  {
    "text": "helper which I put on NuGet which you are absolutely free to download and use",
    "start": "3166540",
    "end": "3171850"
  },
  {
    "text": "and you just say a wait new migration help her give it the logger factory dot",
    "start": "3171850",
    "end": "3178450"
  },
  {
    "text": "try migrate and pass in the command line arguments so you can pass the connection string in as the first command line",
    "start": "3178450",
    "end": "3185020"
  },
  {
    "text": "argument and then just log finished when it's done and it uses something called",
    "start": "3185020",
    "end": "3191500"
  },
  {
    "text": "the design time application dbcontext factory to work out how to run your",
    "start": "3191500",
    "end": "3197020"
  },
  {
    "text": "migration you have to have that in there for the.net ear migrations add command",
    "start": "3197020",
    "end": "3203530"
  },
  {
    "text": "to work anyway so that runs and then the cube directory for this component",
    "start": "3203530",
    "end": "3214350"
  },
  {
    "text": "actually has an additional file and this is another kind of workload in",
    "start": "3214350",
    "end": "3219880"
  },
  {
    "text": "kubernetes called a job and a job you say to kubernetes run this and it runs",
    "start": "3219880",
    "end": "3225550"
  },
  {
    "text": "it and it stops and then it's done and it just cleans itself up so this is",
    "start": "3225550",
    "end": "3230830"
  },
  {
    "text": "great you run this once and you know who that your migrations are running and they only run once and you can check",
    "start": "3230830",
    "end": "3237190"
  },
  {
    "text": "from your logs to make sure that it ran successfully so this runs while the 15 instances of",
    "start": "3237190",
    "end": "3243160"
  },
  {
    "text": "your actual application are all starting up so this is a really nice pattern for running AF core migrations in a cloud",
    "start": "3243160",
    "end": "3250420"
  },
  {
    "text": "native environment so we got our microservices we split",
    "start": "3250420",
    "end": "3259960"
  },
  {
    "text": "them all up in interesting ways they're showing their cookies they're all running on kubernetes in whichever cloud",
    "start": "3259960",
    "end": "3265779"
  },
  {
    "text": "platform we like and now we have the challenge of working out whether everything's ok is it all running all",
    "start": "3265779",
    "end": "3272170"
  },
  {
    "text": "right is it working and so obviously to get into this world you want to make",
    "start": "3272170",
    "end": "3278200"
  },
  {
    "text": "sure that you are logging and monitoring and recording as much information as you possibly can is it running is it running",
    "start": "3278200",
    "end": "3286660"
  },
  {
    "text": "fast enough is anything getting overloaded is anything running too hot has anything broken what the hell is",
    "start": "3286660",
    "end": "3292240"
  },
  {
    "text": "going on inside this cluster and again this is something I'm running three nodes here it's not actually that",
    "start": "3292240",
    "end": "3298119"
  },
  {
    "text": "complicated but you pretty soon get to the point in bigger applications where you're running a hundred nodes and you",
    "start": "3298119",
    "end": "3304869"
  },
  {
    "text": "might have five different applications running across there and you've got servers being taken down and brought",
    "start": "3304869",
    "end": "3310900"
  },
  {
    "text": "back in and everything else you do need to be able to see what's going on and so we have a bunch of tools that are useful",
    "start": "3310900",
    "end": "3317470"
  },
  {
    "text": "for this the fall that I lean on the most are Prometheus which is a",
    "start": "3317470",
    "end": "3325119"
  },
  {
    "text": "monitoring and metrics database and influx data which is also a monitoring",
    "start": "3325119",
    "end": "3331359"
  },
  {
    "text": "and metrics database but it works slightly differently Prometheus keeps asking things on your cluster is",
    "start": "3331359",
    "end": "3337480"
  },
  {
    "text": "everything okay how's it going and they respond with formatted data and then",
    "start": "3337480",
    "end": "3342730"
  },
  {
    "text": "Prometheus puts that into the database which is great for working out that a service is crashed because if you go",
    "start": "3342730",
    "end": "3348039"
  },
  {
    "text": "how's it going and it goes then you can go right that's crashed in flux works",
    "start": "3348039",
    "end": "3354190"
  },
  {
    "text": "the more traditional way where the service just keeps pushing information into influx so I like to use Prometheus",
    "start": "3354190",
    "end": "3360700"
  },
  {
    "text": "for monitoring the cluster and making sure that all the nodes and everything are okay and then in flux for my",
    "start": "3360700",
    "end": "3366759"
  },
  {
    "text": "internal application metrics how long are requests taking that sort of thing",
    "start": "3366759",
    "end": "3372249"
  },
  {
    "text": "they're two different databases for two different purposes influx is better at dealing with arbitrary tags attached to",
    "start": "3372249",
    "end": "3381489"
  },
  {
    "text": "each data point so you can say this came from this this URL was what was",
    "start": "3381489",
    "end": "3386710"
  },
  {
    "text": "requested May a user hash a correlation kill whatever",
    "start": "3386710",
    "end": "3392570"
  },
  {
    "text": "elasticsearch is a cheap and easy way of doing your logging elasticsearch with",
    "start": "3392570",
    "end": "3399000"
  },
  {
    "text": "cabana over the top of it and then there's also containership Daioh which is a free service where you can just",
    "start": "3399000",
    "end": "3406560"
  },
  {
    "text": "give it access to your kubernetes cluster and it will give you lots of lovely information about what's",
    "start": "3406560",
    "end": "3412650"
  },
  {
    "text": "happening in there Auto magically so this is my influx database this is graph",
    "start": "3412650",
    "end": "3421800"
  },
  {
    "text": "armor which is a charting and dashboarding application that runs over the top of it and these are my lovely",
    "start": "3421800",
    "end": "3426810"
  },
  {
    "text": "colorful charts that I have in there that tell me that everything is going ok on my cluster to do that I am using a",
    "start": "3426810",
    "end": "3435150"
  },
  {
    "text": "library so to actually get the data out of my application and into influx I'm",
    "start": "3435150",
    "end": "3440550"
  },
  {
    "text": "using a library called app metrics which is based on a very",
    "start": "3440550",
    "end": "3445910"
  },
  {
    "text": "well-established and well-respected library from the Java world called just",
    "start": "3445910",
    "end": "3451650"
  },
  {
    "text": "metrics which is used in various different frameworks written by Cody Hale guy called",
    "start": "3451650",
    "end": "3458220"
  },
  {
    "text": "owl Hardy has ported this over to dotnet and it runs on net core adding it into",
    "start": "3458220",
    "end": "3464250"
  },
  {
    "text": "your code is incredibly simple it is literally just a matter of in program",
    "start": "3464250",
    "end": "3471900"
  },
  {
    "text": "dot C s so you install the various packages and say use standard metrics",
    "start": "3471900",
    "end": "3477500"
  },
  {
    "text": "and along with some various settings inside your app settings dot JSON file",
    "start": "3477500",
    "end": "3484980"
  },
  {
    "text": "that's it that's now I've added that line all my metrics are going out to in flux so that",
    "start": "3484980",
    "end": "3491400"
  },
  {
    "text": "works very nicely and then the other component here is container ship",
    "start": "3491400",
    "end": "3498210"
  },
  {
    "text": "container ship is free for developers there's no limit on how many nodes you",
    "start": "3498210",
    "end": "3503400"
  },
  {
    "text": "can have or anything like that and all I ask is that if you start using it on",
    "start": "3503400",
    "end": "3508470"
  },
  {
    "text": "your production servers then you talk to their sales people and they'll sell you a support plan but in here I can see so",
    "start": "3508470",
    "end": "3514800"
  },
  {
    "text": "I've got my hub I just have a single instance of my hub I've got you can also see all the containers running the",
    "start": "3514800",
    "end": "3521390"
  },
  {
    "text": "old version of this application which used to be called slidable but nobody could spell that so I renamed it to Dec hub so yes we can see that I brought",
    "start": "3521390",
    "end": "3529130"
  },
  {
    "text": "this current version of 'deck hub identity up five hours ago and if I go into details here I can see",
    "start": "3529130",
    "end": "3535700"
  },
  {
    "text": "how much memory that's using that's using 600 megabytes that should be okay",
    "start": "3535700",
    "end": "3540710"
  },
  {
    "text": "I can see the pods that are running inside that service and I can view the details of those pods I can see the",
    "start": "3540710",
    "end": "3546590"
  },
  {
    "text": "single container that's running inside those pods and if I go into the container I can actually see the logs",
    "start": "3546590",
    "end": "3552770"
  },
  {
    "text": "coming out of there as well and the various errors that have been happening which were because I had forgotten to",
    "start": "3552770",
    "end": "3561190"
  },
  {
    "text": "turn the Twitter authentication service on in the Twitter dashboard okay so yes",
    "start": "3561190",
    "end": "3571580"
  },
  {
    "text": "app dot mate app - metrics 200 the other really nice thing about app metrics is",
    "start": "3571580",
    "end": "3576650"
  },
  {
    "text": "because he writes this data into your database and he decides what everything's going to be called so this",
    "start": "3576650",
    "end": "3582730"
  },
  {
    "text": "lovely dashboard here he created this dashboard and uploaded it to gravano",
    "start": "3582730",
    "end": "3588980"
  },
  {
    "text": "labs and it has the ID - five to zero and so you can just go to your graph",
    "start": "3588980",
    "end": "3594080"
  },
  {
    "text": "owner and say importer dashboard and type in - five to zero and you get this",
    "start": "3594080",
    "end": "3599180"
  },
  {
    "text": "suddenly appears and it makes you look enormous Lee clever when you're talking to your boss about what kind of metrics",
    "start": "3599180",
    "end": "3605210"
  },
  {
    "text": "you've got covering your services and everything else and you can build your own custom dashboards so I have other",
    "start": "3605210",
    "end": "3611990"
  },
  {
    "text": "dashboards which I haven't ruled over yet for how many current service bus not",
    "start": "3611990",
    "end": "3617510"
  },
  {
    "text": "service bus signal our connections are there okay platform services is just",
    "start": "3617510",
    "end": "3624320"
  },
  {
    "text": "things like databases and blob storage and messaging and persistent cache so like I said I'm running Redis inside the",
    "start": "3624320",
    "end": "3632300"
  },
  {
    "text": "cluster because it's a cheap and cheerful way of doing that if you wanted to use Redis and have it be more robust",
    "start": "3632300",
    "end": "3638030"
  },
  {
    "text": "then you would do something like this you're ready service or one of the other sort of registers or services on the",
    "start": "3638030",
    "end": "3644180"
  },
  {
    "text": "other platforms messaging so blob storage I'm using blob storage the slide",
    "start": "3644180",
    "end": "3650000"
  },
  {
    "text": "service is so small that it would take me five minutes to write another version of the slide service that used",
    "start": "3650000",
    "end": "3656380"
  },
  {
    "text": "s3 storage and then I would just have two different images so slides - blobbin",
    "start": "3656380",
    "end": "3662890"
  },
  {
    "text": "slides - s3 and I would decide which one I wanted to use based on which environment I was running in so you can",
    "start": "3662890",
    "end": "3669519"
  },
  {
    "text": "actually use the containers and images idea almost as dependency injection almost as",
    "start": "3669519",
    "end": "3674650"
  },
  {
    "text": "I will put this thing together from from LEGO pieces according to where I'm",
    "start": "3674650",
    "end": "3679689"
  },
  {
    "text": "running messaging is using service bus but service bus supports AMQP so you can",
    "start": "3679689",
    "end": "3686920"
  },
  {
    "text": "just as well use the AMQP protocol to talk to service bus and then you could replace that with RabbitMQ or another",
    "start": "3686920",
    "end": "3694390"
  },
  {
    "text": "service and persistent cache so if you wanted persistent caching then you could",
    "start": "3694390",
    "end": "3700569"
  },
  {
    "text": "use something like Azure reddish or some other service like that everything that",
    "start": "3700569",
    "end": "3705729"
  },
  {
    "text": "actually records data where you want kind of reliable duplication replication",
    "start": "3705729",
    "end": "3712390"
  },
  {
    "text": "failover that sort of stuff you want to be using external services platform services for those and DevOps well its",
    "start": "3712390",
    "end": "3722099"
  },
  {
    "text": "1723 which means you're here three minutes after the conference has finished so we don't have time to talk",
    "start": "3722099",
    "end": "3727479"
  },
  {
    "text": "about DevOps but we were never going to there are lots of other people talking about DevOps and you can go and talk to",
    "start": "3727479",
    "end": "3733989"
  },
  {
    "text": "them so that's it that's my very quick will wind tour of my cloud native",
    "start": "3733989",
    "end": "3739349"
  },
  {
    "text": "application all the code is on github at github comm slash dick harbor app like I",
    "start": "3739349",
    "end": "3746049"
  },
  {
    "text": "say is completely MIT licensed download it play with it if you want to contribute to it that would be awesome",
    "start": "3746049",
    "end": "3752289"
  },
  {
    "text": "if you want to rip bits out of it and use them in your own applications that's completely fine as well it's just there",
    "start": "3752289",
    "end": "3758079"
  },
  {
    "text": "as a reference application for everybody to get started with I hope that was useful I hope you've had a great",
    "start": "3758079",
    "end": "3764079"
  },
  {
    "text": "conference I hope that NDC comes back here next year if they do I will and I",
    "start": "3764079",
    "end": "3769209"
  },
  {
    "text": "hope that I will see you all then thank you very much [Applause]",
    "start": "3769209",
    "end": "3777960"
  }
]