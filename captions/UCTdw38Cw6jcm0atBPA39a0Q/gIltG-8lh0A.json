[
  {
    "text": "testing testing can you hear me hello how you doing you hello Matt how you doing you horrible",
    "start": "4640",
    "end": "10960"
  },
  {
    "text": "lot I said how you doing why that's it there we go hello",
    "start": "10960",
    "end": "16160"
  },
  {
    "text": "there thank you thank you uh clearly uh a night or two of wild partying hasn't",
    "start": "16160",
    "end": "23000"
  },
  {
    "text": "put you off waking up at some point in the morning and you're still all here well done you",
    "start": "23000",
    "end": "28160"
  },
  {
    "text": "guys so uh I am going to talk a little bit about one of the things I did once",
    "start": "28160",
    "end": "34680"
  },
  {
    "text": "when I got bored my wife is strangely the opinion that I never get bored in",
    "start": "34680",
    "end": "39920"
  },
  {
    "text": "fact the opposite is true I get bored very very easily I'm just very good at finding ways to fill my time up and a",
    "start": "39920",
    "end": "47000"
  },
  {
    "text": "couple of years ago it was the pandemic and that was that was a bit rough well I",
    "start": "47000",
    "end": "52520"
  },
  {
    "text": "say that but probably at most of the folks in this room I am strongly introverted consequently my social life",
    "start": "52520",
    "end": "59640"
  },
  {
    "text": "did not change demonstrably throughout the whole of the pandemic in fact if anything I I rather",
    "start": "59640",
    "end": "67240"
  },
  {
    "text": "liked not having to go to the office and working in my pajamas it was actually",
    "start": "67240",
    "end": "72320"
  },
  {
    "text": "I'm still doing that don't tell anyone so uh I taught myself a couple of",
    "start": "72320",
    "end": "78119"
  },
  {
    "text": "things I've picked up the piano I've been teaching myself to draw I did that one it's okay it's okay but uh I'm a bit",
    "start": "78119",
    "end": "85400"
  },
  {
    "text": "better than that now but you hear the idea I I like to fill my time up and so",
    "start": "85400",
    "end": "90720"
  },
  {
    "text": "I also thought I'll do something computery and I enjoyed it enough that I turned it into a series of blog articles",
    "start": "90720",
    "end": "96240"
  },
  {
    "text": "and then finally into this talk hopefully you guys will have as much fun as I did if you didn't oh well I had my",
    "start": "96240",
    "end": "102240"
  },
  {
    "text": "fun so my contact details in the event anyone actually wants to speak to you me again they're all down the bottom there",
    "start": "102240",
    "end": "107680"
  },
  {
    "text": "I can bring it back up later there's a link there to my can we call it Twitter I'm not sure anymore the uh the less",
    "start": "107680",
    "end": "114799"
  },
  {
    "text": "than benevolent overlord will probably change its name again next week and I don't",
    "start": "114799",
    "end": "120360"
  },
  {
    "text": "but for the time being I'm on all the social things and you can find me if you need me so let's move on first off this",
    "start": "120360",
    "end": "127960"
  },
  {
    "text": "is going to be talk about functional programming so briefly excuse me uh",
    "start": "127960",
    "end": "133239"
  },
  {
    "text": "briefly what is functional programming I'll just whip through this uh so that",
    "start": "133239",
    "end": "138720"
  },
  {
    "text": "you get an idea of what I'm trying to do uh because uh so it is a paradigm not a",
    "start": "138720",
    "end": "143959"
  },
  {
    "text": "framework by which I mean it is a style of programming you do not need to",
    "start": "143959",
    "end": "149080"
  },
  {
    "text": "install uh and you get packaged to do functional you can you don't need to uh",
    "start": "149080",
    "end": "154879"
  },
  {
    "text": "C supports pretty much all of the functional stuff pretty adequately um it's if you want a",
    "start": "154879",
    "end": "162360"
  },
  {
    "text": "metaphor think of a guitar and you may use a guitar to play many styles of music you could play rock or pop or if",
    "start": "162360",
    "end": "169599"
  },
  {
    "text": "you've got no taste country in western now you get the idea so it is with objectoriented or functional and",
    "start": "169599",
    "end": "176800"
  },
  {
    "text": "there are others but those are the big two uh um that is declarative not imperative okay some terms here these",
    "start": "176800",
    "end": "184799"
  },
  {
    "text": "are there are not only paradigms within programming there are also families of",
    "start": "184799",
    "end": "190159"
  },
  {
    "text": "Paradigm um imperative is the family to which object-oriented belongs an",
    "start": "190159",
    "end": "196319"
  },
  {
    "text": "imperative style of code involves being very concerned with the order of",
    "start": "196319",
    "end": "201920"
  },
  {
    "text": "operations with sort of having invisible point that goes go here go here go here do a loop go here go here do a loop",
    "start": "201920",
    "end": "208560"
  },
  {
    "text": "being precise about exactly how you start an object up and build it piece by piece that is an imperative approach",
    "start": "208560",
    "end": "216400"
  },
  {
    "text": "declarative is different declarative Works more by defining what you want and",
    "start": "216400",
    "end": "222360"
  },
  {
    "text": "then letting the environment get on with it the most common form of declarative programming that most of you are likely",
    "start": "222360",
    "end": "228319"
  },
  {
    "text": "to have encountered is tsql SQL is declarative programming because if you",
    "start": "228319",
    "end": "233879"
  },
  {
    "text": "think about an SQL statement you do not well you don't do anything the computer does not execute those lines in the",
    "start": "233879",
    "end": "240959"
  },
  {
    "text": "audit you write them typically but not exclusively the select is the last thing executed and yet the first thing are",
    "start": "240959",
    "end": "246360"
  },
  {
    "text": "written do you care no why should you uh so that is how it is more with",
    "start": "246360",
    "end": "252239"
  },
  {
    "text": "declarative and by extension functional programming the properties of functional",
    "start": "252239",
    "end": "257560"
  },
  {
    "text": "programming we have immutability which means once a variable is set it may never be changed nor any of its",
    "start": "257560",
    "end": "263800"
  },
  {
    "text": "properties Everything is const Everything is readon you create it once done the only thing you can do either",
    "start": "263800",
    "end": "270199"
  },
  {
    "text": "use it or not again if you want a metaphor think about Mass working in a math paper you write out a if you're",
    "start": "270199",
    "end": "277960"
  },
  {
    "text": "doing a full working you start with the problem and then you do this line based on the previous line then this line based on the previous line and so on you",
    "start": "277960",
    "end": "284680"
  },
  {
    "text": "can't retrospectively decide that actually that's not the value any longer if you made a mistake but other than",
    "start": "284680",
    "end": "290440"
  },
  {
    "text": "that that's that's how it is with this everything is reader um it uses higher order functions",
    "start": "290440",
    "end": "297880"
  },
  {
    "text": "now that's a funky name for something that's not Terri complicated higher order functions is simply functions",
    "start": "297880",
    "end": "303280"
  },
  {
    "text": "which are passed into something as a parameter or out of something as a a as",
    "start": "303280",
    "end": "309160"
  },
  {
    "text": "a return type so if you've used Funk or action delegates in C there you go",
    "start": "309160",
    "end": "314560"
  },
  {
    "text": "that's basically it and in fact link is a fantastic example of exactly how this",
    "start": "314560",
    "end": "320319"
  },
  {
    "text": "is all done link little little secret there is totally functional program so",
    "start": "320319",
    "end": "325840"
  },
  {
    "text": "if you if you like link you're in okay expressions rather than statements so a",
    "start": "325840",
    "end": "332120"
  },
  {
    "text": "statement is something which does not evaluate into something an object or an",
    "start": "332120",
    "end": "338400"
  },
  {
    "text": "primitive or whatever an expression always does so um a simple Funk delegate",
    "start": "338400",
    "end": "344680"
  },
  {
    "text": "can be an expression because it evaluates to whatever your return type is and if statement is well a statement",
    "start": "344680",
    "end": "351520"
  },
  {
    "text": "there you go clues in the name if while for those are all statements they do not evaluate to anything they change the",
    "start": "351520",
    "end": "358000"
  },
  {
    "text": "flow of the program functional programming does not use them there are no ifs whiles fors or anything like that",
    "start": "358000",
    "end": "365199"
  },
  {
    "text": "in pure functional code so I in part of my project here I am not using or at",
    "start": "365199",
    "end": "372160"
  },
  {
    "text": "least any of those or at least to using them as little as I possibly can there",
    "start": "372160",
    "end": "377400"
  },
  {
    "text": "are some exceptions and I'll get to that referential transparency also known as pure functions which means that a",
    "start": "377400",
    "end": "384800"
  },
  {
    "text": "function given the same parameters will all same parameter Val values that is",
    "start": "384800",
    "end": "390120"
  },
  {
    "text": "will always return the same result back no matter what no matter what state the",
    "start": "390120",
    "end": "395400"
  },
  {
    "text": "system is in or anything same values in equal same value out and no side effects",
    "start": "395400",
    "end": "400639"
  },
  {
    "text": "nothing else will change anywhere else the old oop technique of pass an object in and then the object will be modified",
    "start": "400639",
    "end": "407440"
  },
  {
    "text": "within the function and then pass back and we don't know what's happened to it no we don't do that uh recursion everyone good with",
    "start": "407440",
    "end": "416319"
  },
  {
    "text": "recursion good so it's going to be a tough talk uh pattern matching I used to have to",
    "start": "416319",
    "end": "423080"
  },
  {
    "text": "explain this but thanks to the gentleman sitting around the back somewhere we do there there yeah I see",
    "start": "423080",
    "end": "429080"
  },
  {
    "text": "you that's Matt Tuson um we do have pattern matching now in C and it's",
    "start": "429080",
    "end": "435639"
  },
  {
    "text": "really flipping good it doesn't do 100% of everything that pure functional patter matching can do but is we we're",
    "start": "435639",
    "end": "442000"
  },
  {
    "text": "talking 95% or better uh so if you've used switch Expressions that's it and",
    "start": "442000",
    "end": "447080"
  },
  {
    "text": "it's really cool uh and it's stateless there is no swell that's not entirely true I have been told off for saying",
    "start": "447080",
    "end": "453199"
  },
  {
    "text": "it's stateless it's not oop is based on the idea that you have a state object",
    "start": "453199",
    "end": "459800"
  },
  {
    "text": "which sits in the middle of everything and you'll periodically poke up dates into your state object that's not how",
    "start": "459800",
    "end": "466039"
  },
  {
    "text": "this works state is a transitive thing it's an emergent property State exists",
    "start": "466039",
    "end": "472159"
  },
  {
    "text": "for a moment and then it is replaced with an updated version that's actually a different object if anybody has used",
    "start": "472159",
    "end": "478759"
  },
  {
    "text": "react Redux that's exactly how you would do it in a functional language you would have your state object and then when you",
    "start": "478759",
    "end": "484919"
  },
  {
    "text": "want to update it you have a function which takes the Old State object a command and maybe some extra parameters",
    "start": "484919",
    "end": "491000"
  },
  {
    "text": "and then it creates an entire new state object so State exists for fractions of",
    "start": "491000",
    "end": "496400"
  },
  {
    "text": "seconds but it exists as a concept within the system just not as a physical thing for long depending on what you do",
    "start": "496400",
    "end": "505520"
  },
  {
    "text": "so why I've ranted an awful lot about what it is but why the hell why okay reduce",
    "start": "505520",
    "end": "511720"
  },
  {
    "text": "code noise a lot of people skip this one but this for me is one one of my favorite features of functional programming functional programming is",
    "start": "511720",
    "end": "518959"
  },
  {
    "text": "far more concise than the oop Alternatives you use far fewer lines of",
    "start": "518959",
    "end": "525519"
  },
  {
    "text": "code now that's not just because I'm lazy which I am but uh it's also because",
    "start": "525519",
    "end": "531800"
  },
  {
    "text": "reduced code noise means that it is easier to read the code and understand",
    "start": "531800",
    "end": "536880"
  },
  {
    "text": "in a moment what it does rather than having to hunt up and down try to",
    "start": "536880",
    "end": "542000"
  },
  {
    "text": "understand what this Loop is doing and why but also because you've made your code more concise and because you've",
    "start": "542000",
    "end": "547440"
  },
  {
    "text": "done away with some of these uh statement structures it tends to mean it's much easier to maintain because the",
    "start": "547440",
    "end": "554160"
  },
  {
    "text": "code is more arranged in a more logical manner when you look at functional",
    "start": "554160",
    "end": "559200"
  },
  {
    "text": "programming it tends to read like the way that you would describe this to your non-technical boss you know I do this",
    "start": "559200",
    "end": "566360"
  },
  {
    "text": "then I do this then I do this that's exactly how you'd write it whereas in oop those three steps that whatever they",
    "start": "566360",
    "end": "572440"
  },
  {
    "text": "are they'll probably scattered in about five different places depending it's more testable now",
    "start": "572440",
    "end": "578839"
  },
  {
    "text": "I know a lot for a lot of other people that's the big one fine it supports um unit testing we have the whole concept",
    "start": "578839",
    "end": "586800"
  },
  {
    "text": "of pure functions and because we use pure functions it's predictable and because it's predictable that means it's",
    "start": "586800",
    "end": "593000"
  },
  {
    "text": "very very easy to write automated testing the system doesn't require a lot of setup uh you just pass in everything",
    "start": "593000",
    "end": "599640"
  },
  {
    "text": "the function needs and then get back a result strictly PE speaking if we were going to go in purely functional then",
    "start": "599640",
    "end": "606680"
  },
  {
    "text": "you'd probably write everything as static classes uh and uh static functions that don't reference anything",
    "start": "606680",
    "end": "612640"
  },
  {
    "text": "outside themselves we can't really do that in C but that's the sort of end",
    "start": "612640",
    "end": "617800"
  },
  {
    "text": "goal if we could okay uh it's more robust there are functional languages that claim that",
    "start": "617800",
    "end": "623279"
  },
  {
    "text": "once you've actually got the thing to compile then nothing can kill it and bring it down that is probably entirely",
    "start": "623279",
    "end": "629160"
  },
  {
    "text": "true I do not doubt it now that's not quite what we can do in C but we can get pretty close so the closer we get to",
    "start": "629160",
    "end": "635680"
  },
  {
    "text": "that pure functional style the more robust your code is going to get uh if anyone's ever used rabbit mq that is",
    "start": "635680",
    "end": "642600"
  },
  {
    "text": "written in I think it's Aang yeah yeah I got some ND in Aang which is a pure",
    "start": "642600",
    "end": "647639"
  },
  {
    "text": "functional language so it's it's is in use in the real world it's more predictable which I mean we don't have",
    "start": "647639",
    "end": "654880"
  },
  {
    "text": "for example the concept of throwing exceptions that is not a thing",
    "start": "654880",
    "end": "659920"
  },
  {
    "text": "we don't worry about breaking the order of execution we start here we go down to here we will do that every time no",
    "start": "659920",
    "end": "666240"
  },
  {
    "text": "exceptions there's no branching um uh groups of logic and stuff like that it",
    "start": "666240",
    "end": "671880"
  },
  {
    "text": "is much easier to get on with at least I think so better support the concurrency too it's stateless as I've said so if",
    "start": "671880",
    "end": "678480"
  },
  {
    "text": "you're interested in things like uh serverless functions and all that this enables that rather nicely or if you",
    "start": "678480",
    "end": "684560"
  },
  {
    "text": "want to have concurrent processing of of a queue or or whatever because we don't have a state as such um we tend to get",
    "start": "684560",
    "end": "692959"
  },
  {
    "text": "fewer problems with resource contention and uh I'm not saying you couldn't have a race Condition it's probably still",
    "start": "692959",
    "end": "698399"
  },
  {
    "text": "possible but you're going to have to work a lot harder to get that to happen so right also sear is not a pure",
    "start": "698399",
    "end": "707000"
  },
  {
    "text": "functional language it's a hybrid that is a stated intention of the Microsoft team um he's over there so I can get",
    "start": "707000",
    "end": "714200"
  },
  {
    "text": "yeah we got yeah yeah yeah there we go and um it will never be purely",
    "start": "714200",
    "end": "719480"
  },
  {
    "text": "functional though that is not a thing that is going to happen even f is not purely functional probably never will be",
    "start": "719480",
    "end": "725160"
  },
  {
    "text": "for various reasons but the metaphor I like is that of a shadow so I've been",
    "start": "725160",
    "end": "731320"
  },
  {
    "text": "learning drawing so I've been learning about the different components of a shadow there's actually 12 or so but for",
    "start": "731320",
    "end": "736480"
  },
  {
    "text": "the purposes of this demonstration there are two there is the Umbra and penumbra",
    "start": "736480",
    "end": "741519"
  },
  {
    "text": "okay Umbra if you look at any Shadow is the big dark solid bit in the middle penumbra is the gray fuzzy bit around",
    "start": "741519",
    "end": "747680"
  },
  {
    "text": "the edge so when I write functional C I try and maximize the functional bit the",
    "start": "747680",
    "end": "753880"
  },
  {
    "text": "Umbra the dark bit in the middle make that as large as much of the system as I can and as purely functional as I can",
    "start": "753880",
    "end": "760360"
  },
  {
    "text": "but then there are always going to be places where I have to compromise and I keep those around the edge of the system",
    "start": "760360",
    "end": "765920"
  },
  {
    "text": "I keep them small and tucked away uh where hopefully no one needs to see them but there will have to be compromises",
    "start": "765920",
    "end": "772160"
  },
  {
    "text": "here and there and I'll I'll talk a little about that when they come up but um I I think there is actually a term",
    "start": "772160",
    "end": "778079"
  },
  {
    "text": "for it these days it's something like functional core imperative shell or something like that but I like my shadow",
    "start": "778079",
    "end": "783360"
  },
  {
    "text": "version so that's what I've going with so on to Oregon Trail which is the",
    "start": "783360",
    "end": "788680"
  },
  {
    "text": "project I set myself uh what is Oregon I have to admit uh I don't know if there's anyone here from the US today uh I I had",
    "start": "788680",
    "end": "795399"
  },
  {
    "text": "never heard of Oregon so I went and looked it up there it is up there for anyone who like myself was curious to",
    "start": "795399",
    "end": "801440"
  },
  {
    "text": "know what on Earth it is it's there there we go it's one of the states of the United of of America so great what's",
    "start": "801440",
    "end": "807560"
  },
  {
    "text": "it known for well found some rather lovely pictures of the scenery and my goodness that does look fantastic I",
    "start": "807560",
    "end": "813560"
  },
  {
    "text": "don't know whether there's ever going to be in NDC Oregon but you know I would go I'd like to see some of this stuffs",
    "start": "813560",
    "end": "819320"
  },
  {
    "text": "really nice that does cool Nike they are based in Oregon apparently well they have to be somewhere and that's where",
    "start": "819320",
    "end": "825320"
  },
  {
    "text": "they are named after the Greek goddess of uh Victory I believe if in case anyone was curious but yeah Oregon and",
    "start": "825320",
    "end": "832680"
  },
  {
    "text": "the 1980s film classic The Goonies uh which is named after a part of the city that they're in called the",
    "start": "832680",
    "end": "838959"
  },
  {
    "text": "gundock in case anyone like me ever wondered about the strange title and yes",
    "start": "838959",
    "end": "844360"
  },
  {
    "text": "set in Oregon apparently I forget which city but there we go that's a little potted history of Oregon for you guys",
    "start": "844360",
    "end": "850040"
  },
  {
    "text": "you're welcome also the legend of the Oregon Trail I found this painting of it there we go so I'm not going to have turn this",
    "start": "850040",
    "end": "857519"
  },
  {
    "text": "into a history lesson um but as I understand it there was a push at some point in America's history when they",
    "start": "857519",
    "end": "863639"
  },
  {
    "text": "were still settling to bring people from the East Coast over to the West and they",
    "start": "863639",
    "end": "870920"
  },
  {
    "text": "did indeed go over these long long trails with these covered wagons pulled",
    "start": "870920",
    "end": "876480"
  },
  {
    "text": "by oxen and encountered many and different things along the way uh I",
    "start": "876480",
    "end": "882519"
  },
  {
    "text": "believe the roots were not planned deliberately it was something like a network of smaller roots that were made for fur Trappers and the like which",
    "start": "882519",
    "end": "888800"
  },
  {
    "text": "gradually linked up until you had this one long continuous route across the US there's the route they were taken",
    "start": "888800",
    "end": "895000"
  },
  {
    "text": "they're going all the way over here from Missi all the way over to there to",
    "start": "895000",
    "end": "900920"
  },
  {
    "text": "Oregon it's quite a long way I believe it's thousands of miles because America as I when I looked it up turned out to",
    "start": "900920",
    "end": "907440"
  },
  {
    "text": "be really really big I had no idea but yeah it's really big and there so here's",
    "start": "907440",
    "end": "914759"
  },
  {
    "text": "a few of the things they encounter on the way you can kind of just about see it this is just about the only picture I could find of it but there is a mountain",
    "start": "914759",
    "end": "919959"
  },
  {
    "text": "pass that they have to go through um because there's a mountain range in the way which was inconvenient but they found a pass which allowed you to get",
    "start": "919959",
    "end": "926279"
  },
  {
    "text": "through relatively safely and I think this is the best pit found which isn't great also you might notice these uh",
    "start": "926279",
    "end": "931480"
  },
  {
    "text": "these persons here uh shooting the local wildlife of food this is a feature of",
    "start": "931480",
    "end": "936800"
  },
  {
    "text": "the game and in fact not only that but uh the game is text based and they still",
    "start": "936800",
    "end": "942319"
  },
  {
    "text": "managed to include a shooting mini game in text I will let you ponder that idea",
    "start": "942319",
    "end": "948560"
  },
  {
    "text": "I will show you later but they did it it's quite impressive right uh along the way also we encounter",
    "start": "948560",
    "end": "955160"
  },
  {
    "text": "thoughts these and these these uh people who who I'm sure entirely happy to",
    "start": "955160",
    "end": "960639"
  },
  {
    "text": "welcome their their new Colonial overlords uh um who who were also",
    "start": "960639",
    "end": "965759"
  },
  {
    "text": "encountered here and there so moving on a little bit uh this",
    "start": "965759",
    "end": "972000"
  },
  {
    "text": "gentleman is uh John kemy he was a Hungarian mathematician this is going to",
    "start": "972000",
    "end": "978440"
  },
  {
    "text": "the 1950s and onwards now so I don't know if anyone's everever heard the say",
    "start": "978440",
    "end": "983600"
  },
  {
    "text": "it said that uh Albert Einstein was not very good at uh at calculus this is the guy that said it",
    "start": "983600",
    "end": "989920"
  },
  {
    "text": "uh he apparently was a mathematics genius I'm not a mathematician I will take the word uh he worked with people",
    "start": "989920",
    "end": "996199"
  },
  {
    "text": "like um uh Fineman and stuff like that doing maass calculations for them so a",
    "start": "996199",
    "end": "1001959"
  },
  {
    "text": "really big deal and he became the head of mathematics for a university in America at the University of Dartmouth",
    "start": "1001959",
    "end": "1008920"
  },
  {
    "text": "and he had a couple of interesting obsessions at least for my purposes and",
    "start": "1008920",
    "end": "1014560"
  },
  {
    "text": "one of them at least was computers now we're in the 50s and 60s so computers is",
    "start": "1014560",
    "end": "1021120"
  },
  {
    "text": "pretty newish and he had the idea that computers were the way forward and that",
    "start": "1021120",
    "end": "1028400"
  },
  {
    "text": "everyone should have access to a computer crazy stuff uh it'll never catch on so he",
    "start": "1028400",
    "end": "1036360"
  },
  {
    "text": "teamed up with this guy this is Thomas Kutz and they implemented a couple of",
    "start": "1036360",
    "end": "1041600"
  },
  {
    "text": "rather radical things in the University one was a time share system so",
    "start": "1041600",
    "end": "1047160"
  },
  {
    "text": "computerss in those days were colossal they were massive they like size of basements and you would interact with",
    "start": "1047160",
    "end": "1053480"
  },
  {
    "text": "them by putting together a punch card and then going along with your punch card handing it to the person that",
    "start": "1053480",
    "end": "1058960"
  },
  {
    "text": "administered the computer going away and then coming back in a few days when that person has gathered all the Punch Cards",
    "start": "1058960",
    "end": "1065360"
  },
  {
    "text": "into a great big batch hence batch processing that's where it comes from and fed them into the computer and got",
    "start": "1065360",
    "end": "1070480"
  },
  {
    "text": "the results back so this whole several day process or whatever would then come back and say 404 exceptional whatever",
    "start": "1070480",
    "end": "1078919"
  },
  {
    "text": "and then we'll have to go band have another go uh so a time share system was a way",
    "start": "1078919",
    "end": "1086159"
  },
  {
    "text": "to make the computer more imminently accessible so what you did is had a series of terminals dotted around the",
    "start": "1086159",
    "end": "1092919"
  },
  {
    "text": "University campus and the computer would share its time between each of the",
    "start": "1092919",
    "end": "1098640"
  },
  {
    "text": "computers so every person could feel that they were connected to the computer and entering commands in something like",
    "start": "1098640",
    "end": "1105039"
  },
  {
    "text": "real time I don't know how quickly they actually operated I've never seen one in real life but in something close to real",
    "start": "1105039",
    "end": "1111120"
  },
  {
    "text": "time it would respond to you when it got around to you so that meant everybody",
    "start": "1111120",
    "end": "1116400"
  },
  {
    "text": "could have a go and the other was that they wanted to put together a programming language and that became bizarrely uh",
    "start": "1116400",
    "end": "1125559"
  },
  {
    "text": "revolutionary they called it the beginners orp purpose symbolic instruction code or",
    "start": "1125559",
    "end": "1131280"
  },
  {
    "text": "basic these are the guys that put that together basic was a revolution compared",
    "start": "1131280",
    "end": "1137159"
  },
  {
    "text": "to many of the programming languages that were available in the day which were things like cobal and Fortran I've",
    "start": "1137159",
    "end": "1142600"
  },
  {
    "text": "tried looking into Fortran once and I will not do it again um I'm sure it's very good and",
    "start": "1142600",
    "end": "1148320"
  },
  {
    "text": "apparently it's a great recipe for retiring early and possibly criminally insane",
    "start": "1148320",
    "end": "1153760"
  },
  {
    "text": "but fine they wanted a programming language that was human readable and human usable so amongst the concept was",
    "start": "1153760",
    "end": "1163960"
  },
  {
    "text": "that every sentence every line should have a verb in it and start with a verb which declared what the thing actually",
    "start": "1163960",
    "end": "1171360"
  },
  {
    "text": "did so there we go that's some basic uh does anyone think this is a",
    "start": "1171360",
    "end": "1176679"
  },
  {
    "text": "very good idea by the way I mean I it's true what I say but um right so the",
    "start": "1176679",
    "end": "1182919"
  },
  {
    "text": "other thing was it had line numbers now I do appreciate very much what they did with basic this is",
    "start": "1182919",
    "end": "1189280"
  },
  {
    "text": "brilliant the line number thing was not a good idea uh which is why literally no one else has ever done it so the idea",
    "start": "1189280",
    "end": "1197400"
  },
  {
    "text": "was that you gave a number to each line which basically became an ID reference for the line and then you could go to",
    "start": "1197400",
    "end": "1204559"
  },
  {
    "text": "that line you basically got the uh it's uh basic is uh interpreted rather",
    "start": "1204559",
    "end": "1209960"
  },
  {
    "text": "compiled it's basically scripting language so you start from the top da da da da da go to 10 well that means that the pointer literally goes back up to 10",
    "start": "1209960",
    "end": "1218120"
  },
  {
    "text": "this is fine in principle but it is a bugger to debug and tends to result in",
    "start": "1218120",
    "end": "1226200"
  },
  {
    "text": "rather complicated spaghetti code because everything's kind of connected to everything else in strange weird wild",
    "start": "1226200",
    "end": "1231559"
  },
  {
    "text": "ways there are no functions in basic and a few of the other things that we take for granted don't exist for Loops don't",
    "start": "1231559",
    "end": "1238640"
  },
  {
    "text": "exactly exist depending on the version of basic um and and this is a particularly early example I'm going to",
    "start": "1238640",
    "end": "1244360"
  },
  {
    "text": "be going to so it doesn't have an awful lot of modern programming conveniences he also rather",
    "start": "1244360",
    "end": "1250760"
  },
  {
    "text": "controversially at the time had the idea that we would put in a command called",
    "start": "1250760",
    "end": "1256159"
  },
  {
    "text": "input there was debate about this would you believe a lot of folks said what",
    "start": "1256159",
    "end": "1261600"
  },
  {
    "text": "computers are a tool for the mathematicians and as such why would we",
    "start": "1261600",
    "end": "1267240"
  },
  {
    "text": "break the um process of execution to take something from the user that's",
    "start": "1267240",
    "end": "1272799"
  },
  {
    "text": "silly but they persisted they like the idea of input and consequently everyone",
    "start": "1272799",
    "end": "1279200"
  },
  {
    "text": "on the campus made computer games with it because of course they did loads of them all text based and uh we go this is",
    "start": "1279200",
    "end": "1287279"
  },
  {
    "text": "the machine that you operated it with this is a time share basic machine I don't know it's the exact one that",
    "start": "1287279",
    "end": "1292400"
  },
  {
    "text": "Oregon Trail was written on but what you see here or rather what you don't see here is a monitor there was no",
    "start": "1292400",
    "end": "1299919"
  },
  {
    "text": "vdu I believe they existed in some form back then but this didn't have one this",
    "start": "1299919",
    "end": "1305559"
  },
  {
    "text": "is basically a typewriter connected to a printer so when your code used the",
    "start": "1305559",
    "end": "1311200"
  },
  {
    "text": "command print it meant it it actually printed awesome",
    "start": "1311200",
    "end": "1318679"
  },
  {
    "text": "uh making a version of Mario on this would probably be tricky but this is what we are operating",
    "start": "1318679",
    "end": "1326039"
  },
  {
    "text": "on and on the campus loads of games were made rapidly apparently there were games",
    "start": "1326039",
    "end": "1331120"
  },
  {
    "text": "that were implementations of American football and various other exciting things that I dare say were amazing to",
    "start": "1331120",
    "end": "1337440"
  },
  {
    "text": "play in an entirely text based form but Oregon Trail again was one of those",
    "start": "1337440",
    "end": "1343000"
  },
  {
    "text": "these are the three gentlemen who created the very first version of Oregon Trail in 1971 they were student teachers and they",
    "start": "1343000",
    "end": "1351159"
  },
  {
    "text": "were teaching a course or a lecture at least on the Oregon Trail for history",
    "start": "1351159",
    "end": "1356279"
  },
  {
    "text": "purposes and they had a bright idea why don't we make a computer game about it to help people learn better so they did",
    "start": "1356279",
    "end": "1364159"
  },
  {
    "text": "they sat there and blasted the whole thing out shared it onto the uh the machine and it became a smash hit on the",
    "start": "1364159",
    "end": "1370120"
  },
  {
    "text": "campus folks were playing it who weren't even part of the uh the course it was an incredibly popular game now",
    "start": "1370120",
    "end": "1378120"
  },
  {
    "text": "unfortunately the computers of the time being what they were when the um semester ended the computer would reset",
    "start": "1378120",
    "end": "1384480"
  },
  {
    "text": "and the game was lost to posterity the 1971 version will probably never be found but in",
    "start": "1384480",
    "end": "1391760"
  },
  {
    "text": "1975 they were approached by a Minnesotan educational company which is",
    "start": "1391760",
    "end": "1396840"
  },
  {
    "text": "what at least three of those letters stand for and um they liked the idea of",
    "start": "1396840",
    "end": "1402760"
  },
  {
    "text": "their educational game and asked if they wouldn't mind making it again so for memory they blasted together a version",
    "start": "1402760",
    "end": "1409840"
  },
  {
    "text": "two The 1975 version of Oregon Trail which was similar to the original but with some improvements apparently and",
    "start": "1409840",
    "end": "1416720"
  },
  {
    "text": "this is the version which if you do a little bit of Internet searching you will find",
    "start": "1416720",
    "end": "1421960"
  },
  {
    "text": "online so there we go that's what it looks like running on a more modern terminal and is again entirely text",
    "start": "1421960",
    "end": "1429559"
  },
  {
    "text": "based so effectively what you were doing is is playing with a text based menu and every now and then it's asking you what",
    "start": "1429559",
    "end": "1436440"
  },
  {
    "text": "you want to do typic typically it will give you a list of commands that you may carry out Each of which has a number and",
    "start": "1436440",
    "end": "1443520"
  },
  {
    "text": "then you type the number and press enter I'm so sorry uh and then we carry",
    "start": "1443520",
    "end": "1449640"
  },
  {
    "text": "up or enter a value there are a couple places where text is used but mostly it's numerical because in this sort of",
    "start": "1449640",
    "end": "1455360"
  },
  {
    "text": "interface just makes life simple so great there we go this is our super duper exciting game and what I'm going",
    "start": "1455360",
    "end": "1460799"
  },
  {
    "text": "to do is recreate this in entirely functional style C or as close as I can",
    "start": "1460799",
    "end": "1467000"
  },
  {
    "text": "get to it I'm trying to go all out which isn't necessarily always the way I'd exactly develop in production for work",
    "start": "1467000",
    "end": "1473760"
  },
  {
    "text": "but this is my project I'm doing it my way with my rules let's see how far I get this is",
    "start": "1473760",
    "end": "1480120"
  },
  {
    "text": "what the turn sequence looks like because effectively the thing has a turn sequence um we we have some initial",
    "start": "1480120",
    "end": "1486320"
  },
  {
    "text": "purchases to make which are things like um oxen and ammunition because yeah we",
    "start": "1486320",
    "end": "1491799"
  },
  {
    "text": "got to shoot some things and um miscellaneous supplies which puzzled me",
    "start": "1491799",
    "end": "1497320"
  },
  {
    "text": "for a long time time this is what they called and the more I read into the code what I realized is this is medical supplies it's actually stuff you use",
    "start": "1497320",
    "end": "1504200"
  },
  {
    "text": "when someone gets ill or whatever but for whatever reason that's not what they called it in the source code fine um and",
    "start": "1504200",
    "end": "1510000"
  },
  {
    "text": "then we have a set of choices that you may make you may hunt for food you may",
    "start": "1510000",
    "end": "1515480"
  },
  {
    "text": "go to a fort in order to buy supplies which honestly is a bit of a wasted feature of the game because there is no",
    "start": "1515480",
    "end": "1522080"
  },
  {
    "text": "way to get more money you cannot sell anything so you basically have whatever",
    "start": "1522080",
    "end": "1527159"
  },
  {
    "text": "money you have at the start of the game and if you spent it all at the the beginning then going to the 40 is a waste of your time or you may just",
    "start": "1527159",
    "end": "1533760"
  },
  {
    "text": "simply Press On And Then There are a set set of rather complicated random",
    "start": "1533760",
    "end": "1541080"
  },
  {
    "text": "generated events of various sorts that uh the computer determines whe whether",
    "start": "1541080",
    "end": "1546240"
  },
  {
    "text": "they happened or not we may encounter Riders on the trail ahead who may or may not be hostile um I think the original",
    "start": "1546240",
    "end": "1553360"
  },
  {
    "text": "version didn't say Riders it said something significantly less politically correct but I think for the 1975 version",
    "start": "1553360",
    "end": "1559760"
  },
  {
    "text": "we went with riders uh then there are just genuinely random events finally there was a set of",
    "start": "1559760",
    "end": "1566640"
  },
  {
    "text": "events that happened in the mountains but that only triggered if you are within the mountains every turn uh",
    "start": "1566640",
    "end": "1573360"
  },
  {
    "text": "updated the number of miles you had traveled and you win the game by",
    "start": "1573360",
    "end": "1578840"
  },
  {
    "text": "reaching the maximum number of miles and depending on the choices you make during the game that will determine how many",
    "start": "1578840",
    "end": "1585200"
  },
  {
    "text": "miles we travel this turn and I say turn in game it's a week I think and at the",
    "start": "1585200",
    "end": "1590399"
  },
  {
    "text": "end of every turn it will display the new date and then finally we do a check to see have we reached Oregon uh if we",
    "start": "1590399",
    "end": "1596320"
  },
  {
    "text": "haven't let's go again if we have then you get the Fantastic all singing all dancing elaborate end sequence which I",
    "start": "1596320",
    "end": "1602679"
  },
  {
    "text": "shall show you later it is very impressive right some code this is",
    "start": "1602679",
    "end": "1610679"
  },
  {
    "text": "actual source code from Oregon Trail from 1975 now I've applied a little color",
    "start": "1610679",
    "end": "1617240"
  },
  {
    "text": "just to to make it readable is to you um the original was basically a giant text",
    "start": "1617240",
    "end": "1623760"
  },
  {
    "text": "file so there is no color or formatting or anything it's just pure text I thought I'd try and make it at least a",
    "start": "1623760",
    "end": "1629760"
  },
  {
    "text": "vaguely V easier to read excuse me so interesting things on here especially if",
    "start": "1629760",
    "end": "1636279"
  },
  {
    "text": "like me you're a total nerd and love old programming languages REM what is REM",
    "start": "1636279",
    "end": "1642000"
  },
  {
    "text": "like I said it was a requirement of the basic language that everything had to be a verb in including comments comments",
    "start": "1642000",
    "end": "1650520"
  },
  {
    "text": "are also a verb REM is short for remark so that's the equivalant of the",
    "start": "1650520",
    "end": "1655799"
  },
  {
    "text": "old SL slash in uh um C we got a print there and again when it says print",
    "start": "1655799",
    "end": "1662279"
  },
  {
    "text": "that's what it does that pops up on your paper dim defines an array for whatever",
    "start": "1662279",
    "end": "1667360"
  },
  {
    "text": "reason arrays are always defined with um that dollar sign there it's actually pronounced string so that is C string",
    "start": "1667360",
    "end": "1674559"
  },
  {
    "text": "it's an array of size five that is actually no con concept of strings as we understand them in basic they're all",
    "start": "1674559",
    "end": "1680679"
  },
  {
    "text": "arrays there is no real distinction between an array and a a string in basic",
    "start": "1680679",
    "end": "1687320"
  },
  {
    "text": "so effectively what I have done is Define a string in a weird roundabout way input there it is so whatever the",
    "start": "1687320",
    "end": "1694519"
  },
  {
    "text": "player enters in and I will try to say player but a weird thing I found having done about 20 years worth of industrial",
    "start": "1694519",
    "end": "1701120"
  },
  {
    "text": "programming when I made my first computer game like this it was really hard not to say user there are players",
    "start": "1701120",
    "end": "1707519"
  },
  {
    "text": "they're having fun so I'll I will try my best uh so we're taking whatever the",
    "start": "1707519",
    "end": "1712799"
  },
  {
    "text": "player enters at popping in C string checking to see whether C string is no",
    "start": "1712799",
    "end": "1719480"
  },
  {
    "text": "if it is no then go to line 400 we don't have braces like we do in C",
    "start": "1719480",
    "end": "1727559"
  },
  {
    "text": "in these days effectively the brace works by if and then condition and if the condition is met go into the brace",
    "start": "1727559",
    "end": "1734720"
  },
  {
    "text": "and do whatever it is in basic it's the opposite it's if condition is met don't",
    "start": "1734720",
    "end": "1741880"
  },
  {
    "text": "do the next lot of lines which means I effectively have to reverse the logic of nearly every if statement in the whole",
    "start": "1741880",
    "end": "1748279"
  },
  {
    "text": "thing and then stare at it for ages making sure I've understood this right because with a sort of very free and",
    "start": "1748279",
    "end": "1755080"
  },
  {
    "text": "loose style of basic you could do some really interesting things that just not feasible in C and then so what this is",
    "start": "1755080",
    "end": "1762440"
  },
  {
    "text": "effectively doing is saying do you want the instructions and if they literally type A o we're not going to get them if",
    "start": "1762440",
    "end": "1769600"
  },
  {
    "text": "they type anything else whatsoever you're getting loed to all of the instructions marvelous uh Lynn there I",
    "start": "1769600",
    "end": "1776320"
  },
  {
    "text": "think is just doing some new lines so how would I do that how can I make that oh yeah and also um thankfully",
    "start": "1776320",
    "end": "1784559"
  },
  {
    "text": "for me they did put a a key at the end that explained what the heck all those variables actually meant because it is a",
    "start": "1784559",
    "end": "1791440"
  },
  {
    "text": "common thing in basic to give everything single character names now I'm guessing",
    "start": "1791440",
    "end": "1797320"
  },
  {
    "text": "sing it's for the purposes of saving memory or something like that but it also makes your code n",
    "start": "1797320",
    "end": "1803279"
  },
  {
    "text": "unreadable um I have no idea how the guys worked on did that in the old days so I want to try and wrap some",
    "start": "1803279",
    "end": "1811159"
  },
  {
    "text": "functional layers around this thing so functional works on the idea that we have no side effects in any of our code",
    "start": "1811159",
    "end": "1818399"
  },
  {
    "text": "our functions are pure fine now there is nothing more impure than a human being",
    "start": "1818399",
    "end": "1824240"
  },
  {
    "text": "therefore we need to wrap some levels around the bit that evolves interaction with the human being because we don't",
    "start": "1824240",
    "end": "1830600"
  },
  {
    "text": "know what that person is going to do with their fat old Fingers um and windows itself is quite",
    "start": "1830600",
    "end": "1836640"
  },
  {
    "text": "capable of throwing all sorts of Novel exceptions so this is the basic interaction system without any layers",
    "start": "1836640",
    "end": "1844200"
  },
  {
    "text": "yet so see how happy the person is there they're happy because they're playing Oregon Trail it's that",
    "start": "1844200",
    "end": "1850559"
  },
  {
    "text": "good so we're going to interact with Windows now I'm sure windows can throw exceptions and also let's Al bear in",
    "start": "1850559",
    "end": "1856120"
  },
  {
    "text": "mind that the user the player see told you um the player might enter all sorts",
    "start": "1856120",
    "end": "1861440"
  },
  {
    "text": "of invalid input and we have to take account of that they might just simply hit enter with nothing we also have to",
    "start": "1861440",
    "end": "1867880"
  },
  {
    "text": "take into account all of that now if I have to do this every single time I do an interaction it's going to get right",
    "start": "1867880",
    "end": "1873039"
  },
  {
    "text": "quite tedious to write this code so there we go first little step let's stick an interface on the console",
    "start": "1873039",
    "end": "1879440"
  },
  {
    "text": "because I'm a good guy I write unit tests great I can do a fake",
    "start": "1879440",
    "end": "1884760"
  },
  {
    "text": "console there are three possible things that can actually come out of an interaction with the player they might",
    "start": "1884760",
    "end": "1891320"
  },
  {
    "text": "enter something that's State they might enter nothing they just hit enter or an",
    "start": "1891320",
    "end": "1897200"
  },
  {
    "text": "error might happen I don't know what sort of Errors can come from reading something from the console but I will take it as granted that is possible and",
    "start": "1897200",
    "end": "1904000"
  },
  {
    "text": "all three of these states require some sort of processing and it may not always be the same processing so those are the",
    "start": "1904000",
    "end": "1910600"
  },
  {
    "text": "three possible conditions uh go there and this is how I represent it this is",
    "start": "1910600",
    "end": "1917279"
  },
  {
    "text": "an example of something called a discriminated Union uh and I'm not going to go into much more detail than that",
    "start": "1917279",
    "end": "1922519"
  },
  {
    "text": "about functional Theory because you don't need to know but think of it as being a bit like shredding as type if",
    "start": "1922519",
    "end": "1931000"
  },
  {
    "text": "you had a public abstract class of type cat which then could be inherited into",
    "start": "1931000",
    "end": "1936600"
  },
  {
    "text": "alive cat and dead cat we are representing all the possible states of cat as classes this is the same concept",
    "start": "1936600",
    "end": "1944679"
  },
  {
    "text": "I'm doing it here with an abstract class in inheritance because C doesn't natively support the",
    "start": "1944679",
    "end": "1949840"
  },
  {
    "text": "concept of this is a type and I don't actually know which type but it's one of these that's something you get in F and",
    "start": "1949840",
    "end": "1958360"
  },
  {
    "text": "there is talk of bringing it into C maybe in C 13 but until that happens for",
    "start": "1958360",
    "end": "1966120"
  },
  {
    "text": "now this is the one of the only ways that you can do it there are new get libraries that do it as well one of is a",
    "start": "1966120",
    "end": "1971559"
  },
  {
    "text": "good one but I'm going new get free I'm just doing everything myself from cure",
    "start": "1971559",
    "end": "1977279"
  },
  {
    "text": "out the box C or as close as I can get to it so this is a maybe of t meaning uh",
    "start": "1977279",
    "end": "1984360"
  },
  {
    "text": "it could be any actual type inside and it inherits off this with nothing now",
    "start": "1984360",
    "end": "1989880"
  },
  {
    "text": "that means that the user simply had enter this inherits a something and the something actually has a value called",
    "start": "1989880",
    "end": "1995840"
  },
  {
    "text": "value of type T so this is basically something in a box the idea is that um that you know",
    "start": "1995840",
    "end": "2004799"
  },
  {
    "text": "someone passes you the the box with a cat I don't know whether this cat is alive or dead if I care I will have a look if",
    "start": "2004799",
    "end": "2011960"
  },
  {
    "text": "I don't care then I'll just pass it along and I don't need to know what was inside it so that's why you would pass",
    "start": "2011960",
    "end": "2018320"
  },
  {
    "text": "it around as type Maybe by using it as maybe you were saying I don't actually care what this really is but here it is",
    "start": "2018320",
    "end": "2024399"
  },
  {
    "text": "if you need it if you need to use it then that's where we start doing a select statement to no select uh a",
    "start": "2024399",
    "end": "2030559"
  },
  {
    "text": "switch Express statement to um find out what type we've really got and then respond appropriately and then meant",
    "start": "2030559",
    "end": "2037320"
  },
  {
    "text": "that an error happened and if that condition happens I've also got the captured error",
    "start": "2037320",
    "end": "2042519"
  },
  {
    "text": "inside so what I have in this box is either nothing an actual value or an exception and I can open it and have a",
    "start": "2042519",
    "end": "2048878"
  },
  {
    "text": "look and do what I want if I care this is my read line so I have to",
    "start": "2048879",
    "end": "2055599"
  },
  {
    "text": "put some tric capes in once again this is never going to be a pure functional language we have to put some",
    "start": "2055599",
    "end": "2061118"
  },
  {
    "text": "considerations in there for the fact that um exceptions are still a thing in C at all now I try and keep these as",
    "start": "2061119",
    "end": "2068520"
  },
  {
    "text": "pushed as far to The Fringe of the system as possible so if you start seeing things like try and captures in my code it's only going to be on the",
    "start": "2068520",
    "end": "2074800"
  },
  {
    "text": "edges of the system where we're communicating with something external to our code in this case the console I",
    "start": "2074800",
    "end": "2080720"
  },
  {
    "text": "might also do this say for a database operation but only right at the point that we're actually triggering the",
    "start": "2080720",
    "end": "2085878"
  },
  {
    "text": "database operation only there and so there are little bits of Tri cat dotted around the edges but then once we have",
    "start": "2085879",
    "end": "2092320"
  },
  {
    "text": "passed the edge of the system into the functional core then everything will be entirely purely",
    "start": "2092320",
    "end": "2097960"
  },
  {
    "text": "functional now in this case what I'm doing is so try do the console readline do a string. isol whites space to say is",
    "start": "2097960",
    "end": "2105079"
  },
  {
    "text": "it nothing if it was n a null or Whit space then we return nothing if it was actually a string we'll return it and",
    "start": "2105079",
    "end": "2112119"
  },
  {
    "text": "finally if an error happened we return the error but we'll reference it as maybe of string to say that there's a",
    "start": "2112119",
    "end": "2119160"
  },
  {
    "text": "string in here maybe and then pass it around to whoever actually needs to open the box and have a look at what's in",
    "start": "2119160",
    "end": "2124440"
  },
  {
    "text": "it if you were doing this as a web applic a then quite often I wouldn't necessarily open it until you've",
    "start": "2124440",
    "end": "2130960"
  },
  {
    "text": "actually reached the controll action right at the end of the processor coming from the edges of the system back again",
    "start": "2130960",
    "end": "2137079"
  },
  {
    "text": "because it's typically only the controller that really cares what's actually in the Box uh we go and that's how I might",
    "start": "2137079",
    "end": "2144880"
  },
  {
    "text": "handle it so that's a switch expression to say something of string means that I will convert it into U ENT of this text",
    "start": "2144880",
    "end": "2150839"
  },
  {
    "text": "and a nothing means I nothing and an error means I write it that's an example of how I would consume a discriminated",
    "start": "2150839",
    "end": "2156480"
  },
  {
    "text": "Union a maybe of now strictly speaking maybe should only have two states something and nothing but I find it a lot more useful to also say error",
    "start": "2156480",
    "end": "2162560"
  },
  {
    "text": "because real world errors happen so I don't know if there's any very pure functional guys around here but I'm",
    "start": "2162560",
    "end": "2168280"
  },
  {
    "text": "sorry but it's the way I do it it's fine and also I have to represent things that",
    "start": "2168280",
    "end": "2173560"
  },
  {
    "text": "have no return type but I still want to capture whether it worked or not and I",
    "start": "2173560",
    "end": "2179560"
  },
  {
    "text": "I've called it operation there's probably other words for it a very common thing in fact I found with",
    "start": "2179560",
    "end": "2184960"
  },
  {
    "text": "functional programming is that there not entirely a consistent set of names for everything there seems to be at least",
    "start": "2184960",
    "end": "2191760"
  },
  {
    "text": "four or five names for some of the concepts so I may have used one set of names there may be others there's no",
    "start": "2191760",
    "end": "2197440"
  },
  {
    "text": "great big book of this is the exact name and how you all do it or if there is it's probably a master paper that I'm never going to read so operation",
    "start": "2197440",
    "end": "2204920"
  },
  {
    "text": "represents basically void so I never return void in my code I return",
    "start": "2204920",
    "end": "2210200"
  },
  {
    "text": "operation um operation means I did what you asked or it failed and here's why uh",
    "start": "2210200",
    "end": "2217040"
  },
  {
    "text": "if it's a success then there's nothing inside it because there's nothing further to say it worked and if it's a failure then it's failed and here is the",
    "start": "2217040",
    "end": "2223359"
  },
  {
    "text": "reason here's the exception for you to examine there we go I even created an",
    "start": "2223359",
    "end": "2229400"
  },
  {
    "text": "extension method I like extension methods they get a better rep but they have their uses provid you don't put business logic in or anything useful",
    "start": "2229400",
    "end": "2235440"
  },
  {
    "text": "like that but uh so I have attached it to T being everything and um then ask",
    "start": "2235440",
    "end": "2243319"
  },
  {
    "text": "the uh the whoever's in the outside to pass me an action to do with this and",
    "start": "2243319",
    "end": "2248560"
  },
  {
    "text": "then I'll put it inside a tri catch which is one of the again the few Tri catches in my whole system run the",
    "start": "2248560",
    "end": "2253960"
  },
  {
    "text": "action and if nothing resulted in exception then we'll return success otherwise return",
    "start": "2253960",
    "end": "2259160"
  },
  {
    "text": "failure we go and here is what a right line to the console might look like now",
    "start": "2259160",
    "end": "2264599"
  },
  {
    "text": "I've had to use a forre here reason being as far as I'm aware there's no way right or right uh do a right line with",
    "start": "2264599",
    "end": "2271200"
  },
  {
    "text": "an array of strings and I wanted whoever's in the outside to a to pass an array of strings so we can do a line at a time",
    "start": "2271200",
    "end": "2277119"
  },
  {
    "text": "and again what are we going to do so I could do message. TR operation and then",
    "start": "2277119",
    "end": "2282400"
  },
  {
    "text": "that means that the TR catch is now implicit in Tri operation there is no need to put a TR catch around this any",
    "start": "2282400",
    "end": "2288440"
  },
  {
    "text": "longer because any exception happening inside whatever I've passed into Tri operation is already captured with a tri",
    "start": "2288440",
    "end": "2296319"
  },
  {
    "text": "catch and so I'm writing to the console whatever message you've given me I'm going to go one at a time through your",
    "start": "2296319",
    "end": "2301400"
  },
  {
    "text": "lines and write them to the console there go but if you think about it there's actually an additional set of",
    "start": "2301400",
    "end": "2307119"
  },
  {
    "text": "States I have to think about so another level I want to add in I mean error and nothing are still what they are that's",
    "start": "2307119",
    "end": "2312800"
  },
  {
    "text": "fine but there's two possible something the user the player the player",
    "start": "2312800",
    "end": "2319800"
  },
  {
    "text": "could have um entered text or a number in this specific case that's significant",
    "start": "2319800",
    "end": "2328440"
  },
  {
    "text": "because 95% or more of the inputs that I capture from the player do actually need",
    "start": "2328440",
    "end": "2335400"
  },
  {
    "text": "to be integers and I am far too lazy to do all of those",
    "start": "2335400",
    "end": "2341960"
  },
  {
    "text": "trioses every single flame in time so I've put in an extra level of State uh",
    "start": "2341960",
    "end": "2349599"
  },
  {
    "text": "uh there this is data from user on this line so something I am branching out",
    "start": "2349599",
    "end": "2355119"
  },
  {
    "text": "into text and integer because those might be important I've now got four possible States in my Shing as box of",
    "start": "2355119",
    "end": "2361880"
  },
  {
    "text": "States they could have entered text they could have entered an integer they might have just hit enter or an error occurred",
    "start": "2361880",
    "end": "2369319"
  },
  {
    "text": "and bit by bit what I have done is I am gradually refining the raw input from",
    "start": "2369319",
    "end": "2376280"
  },
  {
    "text": "the player and Stage by stage turning it into something that makes sense",
    "start": "2376280",
    "end": "2382440"
  },
  {
    "text": "logically to the system the data from user represents the processed refined",
    "start": "2382440",
    "end": "2388760"
  },
  {
    "text": "version of whatever it is that they've entered and then that I can actually pass into the turn engine to be used and",
    "start": "2388760",
    "end": "2396480"
  },
  {
    "text": "understood properly there we go that's my new set of discriminator unions so I've called",
    "start": "2396480",
    "end": "2402760"
  },
  {
    "text": "it user input it's an abstract class you can't instantiate it and then that inherits into empty input text input",
    "start": "2402760",
    "end": "2408280"
  },
  {
    "text": "which contains a uh a string integer input which actually contains an integer",
    "start": "2408280",
    "end": "2413680"
  },
  {
    "text": "so if they hit an integer then it's not only definitely an integer if it's an integer input but here it is in integer",
    "start": "2413680",
    "end": "2419680"
  },
  {
    "text": "form and then an error there's a big old bit of code for exactly how I do this but once again we",
    "start": "2419680",
    "end": "2426200"
  },
  {
    "text": "got uh things like that it's basically another switch expression we're going with something when int. triar succeeds",
    "start": "2426200",
    "end": "2434680"
  },
  {
    "text": "and otherwise um something just be U where it is not null or Whit space uh",
    "start": "2434680",
    "end": "2440760"
  },
  {
    "text": "those all result in your integer input in your string input and then finally we got error and uh and uh empty so one",
    "start": "2440760",
    "end": "2448240"
  },
  {
    "text": "slight annoyance is that in the in a pure functional language when you have a discriminated Union you can actually",
    "start": "2448240",
    "end": "2454079"
  },
  {
    "text": "make the code fail if if uh you haven't considered every state that's possible",
    "start": "2454079",
    "end": "2460640"
  },
  {
    "text": "with the Union uh but that's not really thing we have in C it's never it might give you a compiler warning at Best But",
    "start": "2460640",
    "end": "2466960"
  },
  {
    "text": "there we go so I have to put um a default case in just to stop it moaning at me uh it's that all you just have to",
    "start": "2466960",
    "end": "2472839"
  },
  {
    "text": "remember to come and update it if you have a change of mind now this given this game was written in 1975 that's less likely but still I've been",
    "start": "2472839",
    "end": "2479839"
  },
  {
    "text": "good there and this is my replication of that first block so this user",
    "start": "2479839",
    "end": "2485400"
  },
  {
    "text": "interaction user inter action is the class that I've injected which represents all interactions with the user and get input give it a string do",
    "start": "2485400",
    "end": "2493160"
  },
  {
    "text": "you need instruction yes no and then we'll switch that to say if it was a text input when the text was yes then",
    "start": "2493160",
    "end": "2503000"
  },
  {
    "text": "we'll convert that into a Boolean true all other conditions result in Boolean",
    "start": "2503000",
    "end": "2509200"
  },
  {
    "text": "false I've changed it a little originally it was you have to write no to not get the instructions but I I no",
    "start": "2509200",
    "end": "2515440"
  },
  {
    "text": "not doing that uh but because uh that switch is hitting on text input it's guaranteed at this",
    "start": "2515440",
    "end": "2523079"
  },
  {
    "text": "point to be text and I don't need to do any further validation all of the",
    "start": "2523079",
    "end": "2528359"
  },
  {
    "text": "validation has been done by the deeper parts of the system and I know for fact that this is what we've got if they did",
    "start": "2528359",
    "end": "2534319"
  },
  {
    "text": "anything else like just hitting enter or typing something else then that will just turn into a false and there's no",
    "start": "2534319",
    "end": "2539400"
  },
  {
    "text": "real need to consider it further easy isn't it when I say that functional programming is more concise this is the",
    "start": "2539400",
    "end": "2545559"
  },
  {
    "text": "sort of thing I'm talking talking about and this is a version of it where",
    "start": "2545559",
    "end": "2552079"
  },
  {
    "text": "I am writing out the um write the instructions so I've got a Boolean which I created on the previous slide there",
    "start": "2552079",
    "end": "2558079"
  },
  {
    "text": "now I've got if here yeah now ifs aren't functional this is a an if with no",
    "start": "2558079",
    "end": "2564040"
  },
  {
    "text": "braces so this is never going to get terribly complicated and I can kind of live with this but hey this is my code",
    "start": "2564040",
    "end": "2569440"
  },
  {
    "text": "and I'm trying to go really nuts level functional so I created um a function",
    "start": "2569440",
    "end": "2575680"
  },
  {
    "text": "called write message conditional where you pass in a Boolean expression of some",
    "start": "2575680",
    "end": "2581599"
  },
  {
    "text": "kind and then the message and if the Boolean expression results is a false it",
    "start": "2581599",
    "end": "2586640"
  },
  {
    "text": "won't write the message so just means I can do away with one more if statement there you go",
    "start": "2586640",
    "end": "2592480"
  },
  {
    "text": "that's the whole thing so display so do a user interaction to get input and the instruction the text to the user player",
    "start": "2592480",
    "end": "2599440"
  },
  {
    "text": "player the text to the player is you need instructions yes no then we will convert that into a Boolean with a",
    "start": "2599440",
    "end": "2604920"
  },
  {
    "text": "switch expression and then use write message conditional to say whatever came out of display instruction is here you",
    "start": "2604920",
    "end": "2611720"
  },
  {
    "text": "decide whether to write the message or not based on whatever that is and at my level here in display instruction I don't actually care but you need to know",
    "start": "2611720",
    "end": "2618160"
  },
  {
    "text": "what this is so you're passing the data onto the place that needs it not how you don't have to consider it where it's",
    "start": "2618160",
    "end": "2625119"
  },
  {
    "text": "generated managing inventory is the next bit this is my inventory now I'm using a",
    "start": "2625119",
    "end": "2630319"
  },
  {
    "text": "record type here I like record types very much indeed uh it makes the whole",
    "start": "2630319",
    "end": "2635559"
  },
  {
    "text": "process of of creating new state objects quite simple because you can just say create a copy of this one with this one",
    "start": "2635559",
    "end": "2642680"
  },
  {
    "text": "change so makes functional style State Management very simple now the bits and pieces we need",
    "start": "2642680",
    "end": "2649559"
  },
  {
    "text": "an oxen Team food ammunition clothing and miscellaneous supplies which is not a euphemism once again it's medical",
    "start": "2649559",
    "end": "2656200"
  },
  {
    "text": "equipment don't know but uh it really I don't know why they",
    "start": "2656200",
    "end": "2662000"
  },
  {
    "text": "went with that nomenclature but they did so I am trying to respect the 1975 original because I'm inclined that way",
    "start": "2662000",
    "end": "2669440"
  },
  {
    "text": "okay this is a block of code that tells you how to start setting up your um",
    "start": "2669440",
    "end": "2675319"
  },
  {
    "text": "inventories so initial purchases the REM is thankfully actually there to help you understand what he's going on uh we've",
    "start": "2675319",
    "end": "2682000"
  },
  {
    "text": "got a set of variables Each of which represent the current spend on one of the items of inventory they're all being",
    "start": "2682000",
    "end": "2688599"
  },
  {
    "text": "set to zero there it's that extraordinary line of code there on 820 and then you're asking how much you want",
    "start": "2688599",
    "end": "2694559"
  },
  {
    "text": "to spend taking the input validating it to say that it's and again this is one of those weird inverted if statements",
    "start": "2694559",
    "end": "2700079"
  },
  {
    "text": "compared to what we are used to what it's saying is if it is valid skip the error message because that's the way it",
    "start": "2700079",
    "end": "2706359"
  },
  {
    "text": "works and this is what we'll do with everything to send different error messages and different skips and so on",
    "start": "2706359",
    "end": "2711640"
  },
  {
    "text": "so forth uh until eventually we've gone through this whole thing and then at the end of it there is another step that",
    "start": "2711640",
    "end": "2717119"
  },
  {
    "text": "says if the player has overspent because they only have $700 and if they spent",
    "start": "2717119",
    "end": "2722920"
  },
  {
    "text": "$704 then go all the way back to the beginning and do the whole process",
    "start": "2722920",
    "end": "2728000"
  },
  {
    "text": "again wow I mean it there was no there was no guy or anything they had they",
    "start": "2728000",
    "end": "2733319"
  },
  {
    "text": "were very limited and under those conditions it's still fairly impressive okay that's what it looks",
    "start": "2733319",
    "end": "2738839"
  },
  {
    "text": "like in diagram form let's first check oxen if you've spent less than 200 or more than 300 you moan and then go again",
    "start": "2738839",
    "end": "2746119"
  },
  {
    "text": "and say oxen again please food and all the rest they simply have to be greater than zero the original 1971 version of",
    "start": "2746119",
    "end": "2753359"
  },
  {
    "text": "Oregon Trail apparently had a bug where you could enter negative dollars and make phenomenal amounts of money by",
    "start": "2753359",
    "end": "2760319"
  },
  {
    "text": "buying uh supplies so the 1975 version has corrected that bug with a greater",
    "start": "2760319",
    "end": "2767079"
  },
  {
    "text": "than zero check uh and then finally the total spend at the end and we'll loot back",
    "start": "2767079",
    "end": "2773079"
  },
  {
    "text": "around if you've spent more than $700 right uh but if everything matches then we'll actually start playing our",
    "start": "2773079",
    "end": "2780760"
  },
  {
    "text": "game so here is a version of what I might do now I've got a while loop here",
    "start": "2780760",
    "end": "2786960"
  },
  {
    "text": "because in the C World we're going to have to do something like this now there is two kinds of Loop in the programming",
    "start": "2786960",
    "end": "2793240"
  },
  {
    "text": "World there is the indefinite Loop and the indefinite Loop the definite Loop is something like a four or a for each",
    "start": "2793240",
    "end": "2799520"
  },
  {
    "text": "where I know precisely how many times I'm going to go around is I know that",
    "start": "2799520",
    "end": "2804839"
  },
  {
    "text": "that's not exactly how that works with the numera bles but in principle I know how many times I'm going to go around",
    "start": "2804839",
    "end": "2810480"
  },
  {
    "text": "that's easy in functional C that's just a select statement in link so no problem",
    "start": "2810480",
    "end": "2815960"
  },
  {
    "text": "then there's the indefinite loop I don't know how many times I'm going to go around I'm going to carry on going",
    "start": "2815960",
    "end": "2822200"
  },
  {
    "text": "around until until I'm ready now in this case it's that the you the player the",
    "start": "2822200",
    "end": "2828800"
  },
  {
    "text": "player should have entered an integer which was within an accepted bound and",
    "start": "2828800",
    "end": "2835880"
  },
  {
    "text": "if they haven't we'll go again so can we do indefinite Loops in",
    "start": "2835880",
    "end": "2842599"
  },
  {
    "text": "functional C well there are a couple of methods the short answer is not really",
    "start": "2842599",
    "end": "2850000"
  },
  {
    "text": "the long answer is kind of is a bit there are a few techniques so I'll show",
    "start": "2850000",
    "end": "2856599"
  },
  {
    "text": "you shortly let's do so in my code I would this is one example and this is",
    "start": "2856599",
    "end": "2862040"
  },
  {
    "text": "using recursion so I'm doing my get ox and spend doing my check if it's not",
    "start": "2862040",
    "end": "2867960"
  },
  {
    "text": "valid I'll call the function again now you can do that recursion is a very powerful tool",
    "start": "2867960",
    "end": "2876480"
  },
  {
    "text": "uh not unlike myself but um it isn't",
    "start": "2876480",
    "end": "2881720"
  },
  {
    "text": "very kind to the memory of the system so unless you are really really sure that",
    "start": "2881720",
    "end": "2887280"
  },
  {
    "text": "this is not going to Loop all that many times then you can do it but if if you",
    "start": "2887280",
    "end": "2893040"
  },
  {
    "text": "don't know how many times you're going to Loop if there could be hundreds or thousands of iterations doing that recursively will cause the system to",
    "start": "2893040",
    "end": "2900200"
  },
  {
    "text": "just clog slowly until you get a stack Overflow exception I found that out the hard way",
    "start": "2900200",
    "end": "2908319"
  },
  {
    "text": "so I don't necessarily recommend recursion now F different story F sharp",
    "start": "2908319",
    "end": "2914079"
  },
  {
    "text": "implements something called uh tail optimize recursion calls which means that basically you can do recursion and",
    "start": "2914079",
    "end": "2919839"
  },
  {
    "text": "it's fine because behind the scenes little secret here it turns into a wild",
    "start": "2919839",
    "end": "2925680"
  },
  {
    "text": "Loop which let's be honest is the only way to do it it's not actually wild Loop but yeah I'll show you in a bit so",
    "start": "2925680",
    "end": "2932799"
  },
  {
    "text": "that's one way you could do that but I'm not going to because I don't know how many temps they're going to have to get",
    "start": "2932799",
    "end": "2938160"
  },
  {
    "text": "my spend box so I have created an extension",
    "start": "2938160",
    "end": "2943280"
  },
  {
    "text": "method which attaches to everything you can just about see it up there it's called iterate until that's what I have",
    "start": "2943280",
    "end": "2948839"
  },
  {
    "text": "called it what this means is I am going to give it two functions to two uh Funk",
    "start": "2948839",
    "end": "2954079"
  },
  {
    "text": "delegates rather um so one is the process I want it to do the other is a",
    "start": "2954079",
    "end": "2960880"
  },
  {
    "text": "check to say um have I met end condition yet now end condition there is down the",
    "start": "2960880",
    "end": "2967640"
  },
  {
    "text": "bottom it's that it's an integer between 200 and 300 that's my end condition and",
    "start": "2967640",
    "end": "2972720"
  },
  {
    "text": "then the bit of there is the actual body of the loop contained inside a function",
    "start": "2972720",
    "end": "2978200"
  },
  {
    "text": "and it's going to return something which will then be checked and if we're wrong we'll do it again so what does that look",
    "start": "2978200",
    "end": "2984559"
  },
  {
    "text": "like behind the scenes it's a while loop okay it is the only way to do it at",
    "start": "2984559",
    "end": "2993240"
  },
  {
    "text": "least in the C world it's the way it is is now um this actually the technical",
    "start": "2993240",
    "end": "2999240"
  },
  {
    "text": "term for this is trampolining which is a technical way of saying hidden wild Loop because how else",
    "start": "2999240",
    "end": "3005680"
  },
  {
    "text": "am I going to do it I mean honestly but it does mean that the performance level of this iterate until until is pretty much the same as a while loop because",
    "start": "3005680",
    "end": "3012240"
  },
  {
    "text": "it's a wild Loop and so there's no performance hit unlike recursion which might well have and it means that",
    "start": "3012240",
    "end": "3019079"
  },
  {
    "text": "there's only one okay I've only got one while loop in the whole system it's",
    "start": "3019079",
    "end": "3025240"
  },
  {
    "text": "there that's it that's the one every time I ever now do a while loop I'll",
    "start": "3025240",
    "end": "3030520"
  },
  {
    "text": "literally use that one now if one day we get an alternative in C then I'll switch",
    "start": "3030520",
    "end": "3037040"
  },
  {
    "text": "this uh the implementation of this function into whatever the new thing is and there we go sorted fine there is",
    "start": "3037040",
    "end": "3044240"
  },
  {
    "text": "another way of doing it in case you're interested now I recommend doing this with Extreme Caution the go-to statement",
    "start": "3044240",
    "end": "3051000"
  },
  {
    "text": "still exists in C it actually does that is what it looks like you but unlike the",
    "start": "3051000",
    "end": "3057040"
  },
  {
    "text": "old wild days of basic you can't simply go to an arbitrary part of the code base you have to define a tag which is in",
    "start": "3057040",
    "end": "3064000"
  },
  {
    "text": "scope where you use the goto and then you can go to that tag I am never going to use this",
    "start": "3064000",
    "end": "3070880"
  },
  {
    "text": "anywhere else except this exact condition there's probably a maybe a performance benefit I don't know and",
    "start": "3070880",
    "end": "3077480"
  },
  {
    "text": "technically I'm very very very slightly more functional than using a while loop",
    "start": "3077480",
    "end": "3082640"
  },
  {
    "text": "but it's up to you do what you like I would have no issue whatsoever with simply using a while loop at least just",
    "start": "3082640",
    "end": "3089079"
  },
  {
    "text": "one and then referencing it but this does the same basic concept it's checking and if you if your condition is",
    "start": "3089079",
    "end": "3096079"
  },
  {
    "text": "uh is met then we'll do a goto anyway get a non-zero spend pretty much the same sort of process but everything else",
    "start": "3096079",
    "end": "3103720"
  },
  {
    "text": "after this point all requires a simple nonzero spend so I'm not going to bother to make a separate function for each and",
    "start": "3103720",
    "end": "3110240"
  },
  {
    "text": "every inventory item when it's the same process so I'll just put a string in there that tells me which inventory item",
    "start": "3110240",
    "end": "3115359"
  },
  {
    "text": "it is I'm getting and then genericize the whole thing to be how much do you want to spend on thing do an iterate",
    "start": "3115359",
    "end": "3121200"
  },
  {
    "text": "until until it's an integer and then finally return out now you notice the green underlining there that's because",
    "start": "3121200",
    "end": "3126799"
  },
  {
    "text": "the compiler can't tell that what I'm returning is definitely an integer input",
    "start": "3126799",
    "end": "3132000"
  },
  {
    "text": "it is I guarantee it is because it is impossible for it to be anything else but resharp and visual studio can't",
    "start": "3132000",
    "end": "3138440"
  },
  {
    "text": "quite tell so just ignore that don't look at the man behind the",
    "start": "3138440",
    "end": "3143640"
  },
  {
    "text": "curtain oops there we go and then what I can do is just do a set of calls to this",
    "start": "3143640",
    "end": "3150160"
  },
  {
    "text": "stick it all into a great big array and then compile it later into uh a single",
    "start": "3150160",
    "end": "3155480"
  },
  {
    "text": "object from this array of items I'm using an enum to indicate which item it is that I'm doing the inventory 4 and",
    "start": "3155480",
    "end": "3162359"
  },
  {
    "text": "then it's quite simple just to create a single inventory record based on all of those items great easy peasy and there's",
    "start": "3162359",
    "end": "3168880"
  },
  {
    "text": "my whole process of getting the initial inventory took me ages to explain but reading that code doesn't take very long",
    "start": "3168880",
    "end": "3175920"
  },
  {
    "text": "so we've then got the total spend being greater than 700 that also has to be",
    "start": "3175920",
    "end": "3181520"
  },
  {
    "text": "taken into account that's another indefinite Loop we got a problem here because I mean I could do iterate until but to be honest I'm fairly sure that",
    "start": "3181520",
    "end": "3189000"
  },
  {
    "text": "the users not the players not going to um do that very many times because",
    "start": "3189000",
    "end": "3195599"
  },
  {
    "text": "there's only so many times you're going to go through the whole wizard until you just decide to flip the desk and go and play something else so I'm okay with",
    "start": "3195599",
    "end": "3201720"
  },
  {
    "text": "making that recursive right now the turn system so",
    "start": "3201720",
    "end": "3208079"
  },
  {
    "text": "there's a whole set of things that have to be done in each turn and at the end of each of these we have to do a check",
    "start": "3208079",
    "end": "3214640"
  },
  {
    "text": "to see have you won or is the player now dead either of those will end the game",
    "start": "3214640",
    "end": "3220359"
  },
  {
    "text": "now there is a cliche about Oregon Trails everyone dies of dysentry in fact that does not exist in the 1975 version",
    "start": "3220359",
    "end": "3226960"
  },
  {
    "text": "you can only die of two things uh pneumonia or injuries so those are our",
    "start": "3226960",
    "end": "3233839"
  },
  {
    "text": "is that a matter of time no sorry forget right so I've created a",
    "start": "3233839",
    "end": "3241680"
  },
  {
    "text": "function which attaches to the state object and each time you call it it has",
    "start": "3241680",
    "end": "3248480"
  },
  {
    "text": "a function inside it now each of those pins been passed in are functions and uh they are modifying the",
    "start": "3248480",
    "end": "3254839"
  },
  {
    "text": "state by which I actually mean they're taking the Old State and and making a new one modeled on the old one but at",
    "start": "3254839",
    "end": "3261319"
  },
  {
    "text": "each point I want to check to see whether the play is dead because I don't want them to carry on through the rest of the game so contained within",
    "start": "3261319",
    "end": "3267839"
  },
  {
    "text": "continued game is a check to say check state has the game ended in which case",
    "start": "3267839",
    "end": "3274319"
  },
  {
    "text": "don't execute the function that's been passed in so I have only one flow of instructions here but if any points like",
    "start": "3274319",
    "end": "3281799"
  },
  {
    "text": "for example in um I don't know Riders on the trail they encounter the ra the",
    "start": "3281799",
    "end": "3286920"
  },
  {
    "text": "Riders and it is a terminal encounter then the their status will be changed in",
    "start": "3286920",
    "end": "3292559"
  },
  {
    "text": "state from alive to dead therefore in the next function handle random events the continue game function checks",
    "start": "3292559",
    "end": "3300119"
  },
  {
    "text": "realizes they're dead and does not execute handle random events so one long",
    "start": "3300119",
    "end": "3306400"
  },
  {
    "text": "flow and the branching if structure is built into it this is an incredibly",
    "start": "3306400",
    "end": "3313640"
  },
  {
    "text": "simple and not technically quite right version of a monad but again I'm not going more into",
    "start": "3313640",
    "end": "3319040"
  },
  {
    "text": "functional Theory than that and this technically it's an art but it's close that's what continue games looks",
    "start": "3319040",
    "end": "3324760"
  },
  {
    "text": "like it's a tiny simple little thing and it's literally just check to see whether the game's over if it is then just",
    "start": "3324760",
    "end": "3330799"
  },
  {
    "text": "return the unmodified state back again if it is not over then execute the",
    "start": "3330799",
    "end": "3335920"
  },
  {
    "text": "function and then return the result of the function quite simple but very",
    "start": "3335920",
    "end": "3341119"
  },
  {
    "text": "powerful so yeah aren't I good at drawing let's have a look at um a few of",
    "start": "3341119",
    "end": "3346319"
  },
  {
    "text": "the other bits and then we'll wrap up here is the incredibly impressive miname",
    "start": "3346319",
    "end": "3351520"
  },
  {
    "text": "for shooting isn't it good so how do you do a shooting miname in text you get the",
    "start": "3351520",
    "end": "3358440"
  },
  {
    "text": "player to enter the text bang we count how many seconds it took",
    "start": "3358440",
    "end": "3364079"
  },
  {
    "text": "for them to type bang and the number of seconds is used to determine the quality",
    "start": "3364079",
    "end": "3369960"
  },
  {
    "text": "of their shot now if like me you're a pretty fast typist I can get it nearly subc so uh I'm I'm basically a hot shot",
    "start": "3369960",
    "end": "3377720"
  },
  {
    "text": "in this game uh if on the other hand it took you seven seconds then you probably",
    "start": "3377720",
    "end": "3382880"
  },
  {
    "text": "missed and if they typed anything other than bang you missed and missing is",
    "start": "3382880",
    "end": "3388599"
  },
  {
    "text": "considered to be the number seven so that's that's the worst result you can get there you go that's how it's done",
    "start": "3388599",
    "end": "3394960"
  },
  {
    "text": "there is no return or anything in this because no concept of functions exactly in basic there was a go sub which means",
    "start": "3394960",
    "end": "3401680"
  },
  {
    "text": "treat this line as a function but it's only a line because G sub says it is there's my version take the start",
    "start": "3401680",
    "end": "3409440"
  },
  {
    "text": "time I'm using a current time service which is basically my wrapper around uh a date time do now because that's impure",
    "start": "3409440",
    "end": "3417000"
  },
  {
    "text": "because it's different every time you call it so I have to put it inside an uh uh an interface and then get the input",
    "start": "3417000",
    "end": "3424880"
  },
  {
    "text": "check it to see is it a text input and then it's bang and then we can say okay time taken is the return or else seven",
    "start": "3424880",
    "end": "3431960"
  },
  {
    "text": "simple and an awful lot of that is just the usual uh Plumbing that we need to set up the class the rest the actual",
    "start": "3431960",
    "end": "3438039"
  },
  {
    "text": "line of lines of code is one two three four fiveish okay Riders on this TR ahead",
    "start": "3438039",
    "end": "3445760"
  },
  {
    "text": "anyone remember this guy no one does I feel very old no one remembers Brave",
    "start": "3445760",
    "end": "3451599"
  },
  {
    "text": "star I got a ND oh good thank goodness I thought yeah I'll put Brave star",
    "start": "3451599",
    "end": "3457000"
  },
  {
    "text": "references in this everyone loves Brave no one remembers it literally just me",
    "start": "3457000",
    "end": "3462520"
  },
  {
    "text": "you probably recognize the naing ponies though not as cool as Brave Star right there's this took me more",
    "start": "3462520",
    "end": "3471359"
  },
  {
    "text": "time than you will ever know because this is bizarre levels complicated there are",
    "start": "3471359",
    "end": "3478760"
  },
  {
    "text": "many I'm not going to go through the whole thing but the process as I finally understood it is roughly check to see if",
    "start": "3478760",
    "end": "3483880"
  },
  {
    "text": "there's Riders then do they look hostile",
    "start": "3483880",
    "end": "3489240"
  },
  {
    "text": "then were you right and we have got a whole mess of if",
    "start": "3489240",
    "end": "3495640"
  },
  {
    "text": "statements to handle that three-stage logic finding a way to render in C took",
    "start": "3495640",
    "end": "3501000"
  },
  {
    "text": "quite a while and that's oh R&D by the way there is a random number generator they use",
    "start": "3501000",
    "end": "3506760"
  },
  {
    "text": "some crazy complicated uh equations for that right and there's my version are they Riders do a random check and then",
    "start": "3506760",
    "end": "3513480"
  },
  {
    "text": "to say if they if they are then encounter Riders otherwise return unmodified",
    "start": "3513480",
    "end": "3519680"
  },
  {
    "text": "State there we go okay let's just zip through this bit then fine yeah it's same basic idea",
    "start": "3519680",
    "end": "3526760"
  },
  {
    "text": "we're going to do a check to see whether it's integer blah blah blah make your choice and then I'll do this skip ahead",
    "start": "3526760",
    "end": "3532240"
  },
  {
    "text": "a bit uh do some rights oh the final let's wrap up here so this is the all",
    "start": "3532240",
    "end": "3537280"
  },
  {
    "text": "singing all dancing end sequence to the game we checked to see whether the uh Oregon has been reached based on the",
    "start": "3537280",
    "end": "3543720"
  },
  {
    "text": "distance and then you notice a funny little uh speech mark seven thing in",
    "start": "3543720",
    "end": "3549160"
  },
  {
    "text": "there so that was a command to Ding A Bell so there was actually a little bell",
    "start": "3549160",
    "end": "3555119"
  },
  {
    "text": "attached to the terminal and whenever that was there because it actually printed these things one character at a time and if it reached the uh speech",
    "start": "3555119",
    "end": "3561319"
  },
  {
    "text": "mark seven it went ding so you ding finally arrived ding at our ding G City",
    "start": "3561319",
    "end": "3568319"
  },
  {
    "text": "uh someone did once suggest maybe it was playing a tune I don't know I've never seen this in real life I doubt it somehow I think they were just going",
    "start": "3568319",
    "end": "3573799"
  },
  {
    "text": "ding ding ding ding because why not it sounds cool and if there was a bell let's be honest wouldn't you want to",
    "start": "3573799",
    "end": "3579079"
  },
  {
    "text": "ding it I would ding it I would make it ding all the time uh finally other games I might look",
    "start": "3579079",
    "end": "3585839"
  },
  {
    "text": "at one day this is the one of the very first games ever made of Star Trek and",
    "start": "3585839",
    "end": "3591240"
  },
  {
    "text": "true to the spirit of Star Trek uh what you have to do is fly around finding Klingons and explaining why they",
    "start": "3591240",
    "end": "3598160"
  },
  {
    "text": "shouldn't be there with laser Weaponry very St Trek that Bolding",
    "start": "3598160",
    "end": "3604039"
  },
  {
    "text": "exploring and all the rest of it mostly involves Exterminating pling ons great but I might well do that one but that",
    "start": "3604039",
    "end": "3610200"
  },
  {
    "text": "requires a little bit more complicated stuff because you've got an updatable map of the universe there is a doctor whoan but it is so complicated the and",
    "start": "3610200",
    "end": "3618000"
  },
  {
    "text": "so large that the game comes with the the data of the game in compressed form",
    "start": "3618000",
    "end": "3623720"
  },
  {
    "text": "and the first thing it does is uncompress itself and then execute so that's going to take me a lot of staring",
    "start": "3623720",
    "end": "3628920"
  },
  {
    "text": "before I work at how on Earth to do it but there we go I am a big fan of Dr Who so I may well do that",
    "start": "3628920",
    "end": "3634799"
  },
  {
    "text": "one zor I might well do that one someday too zor is the best do not get watch out",
    "start": "3634799",
    "end": "3640760"
  },
  {
    "text": "for being eaten by a Gro and finally and then I shall let you guys go I have a",
    "start": "3640760",
    "end": "3646240"
  },
  {
    "text": "book coming out uh it would be remiss of me not to mention it it's coming out in",
    "start": "3646240",
    "end": "3651440"
  },
  {
    "text": "29 days or so it's just about out now finally you saw me messing with my phone there that was me actually emailing aiy",
    "start": "3651440",
    "end": "3658000"
  },
  {
    "text": "some stuff that they need uh because the final deadline of going to the printers is tomorrow I think so there we go uh",
    "start": "3658000",
    "end": "3665359"
  },
  {
    "text": "O'Reilly sent me this uh URL which you can feel free to use and I think it gives you a month on the platform please feel free to read whatever book you like",
    "start": "3665359",
    "end": "3671559"
  },
  {
    "text": "but I would be grateful if you have a look at mine that's also an out ofate picture I have actually got my animal",
    "start": "3671559",
    "end": "3677079"
  },
  {
    "text": "and apparently what O'Reilly did was say this guy is British what we shall give him is a",
    "start": "3677079",
    "end": "3683240"
  },
  {
    "text": "coyote I have no idea but I'll take it it's my coyote and I shall love it on principal uh and it's quite cute you can",
    "start": "3683440",
    "end": "3690359"
  },
  {
    "text": "look it up if you're interested to see my coyote there plenty of pictures of it out there right any P any",
    "start": "3690359",
    "end": "3697119"
  },
  {
    "text": "questions I am we're out of time so maybe come to me for questions but otherwise thank you very",
    "start": "3697119",
    "end": "3703400"
  },
  {
    "text": "much",
    "start": "3712039",
    "end": "3715039"
  }
]