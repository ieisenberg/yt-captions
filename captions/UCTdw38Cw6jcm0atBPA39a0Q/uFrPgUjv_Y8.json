[
  {
    "text": "hello everyone welcome to this session this session is about git in",
    "start": "7279",
    "end": "12759"
  },
  {
    "text": "case you have a chance to leave now if this is the wrong room okay uh my name",
    "start": "12759",
    "end": "18400"
  },
  {
    "text": "is cidio this is going to be a pretty technical session so hold on to your",
    "start": "18400",
    "end": "23880"
  },
  {
    "text": "seats and your coffees it's called get hidden gems now",
    "start": "23880",
    "end": "30080"
  },
  {
    "text": "before we start I would like to ask a few questions how many here are uh new to",
    "start": "30080",
    "end": "39160"
  },
  {
    "text": "get okay one or two how many here are intermediate git users like you use it",
    "start": "39160",
    "end": "47000"
  },
  {
    "text": "every day but you haven't looked into the more advanced stuff okay so that's most of you and how many here are G Masters come",
    "start": "47000",
    "end": "56840"
  },
  {
    "text": "on I know there are a few yeah okay one one yeah two all right okay so my goal",
    "start": "56840",
    "end": "65600"
  },
  {
    "text": "here today is to tell you at least one thing that you did not know about Kit",
    "start": "65600",
    "end": "72520"
  },
  {
    "text": "and if for some reason you already knew everything I told you about today then",
    "start": "72520",
    "end": "78720"
  },
  {
    "text": "look me up afterwards because we might have a hobby in common all right so what gems you might",
    "start": "78720",
    "end": "87240"
  },
  {
    "text": "ask well isn't it just Version Control System well yes and no you see git is a",
    "start": "87240",
    "end": "95159"
  },
  {
    "text": "bit like a Swiss army knife it's a tool that you know that is of Everyday Use",
    "start": "95159",
    "end": "102240"
  },
  {
    "text": "however it's also more than that it has more features than you probably know",
    "start": "102240",
    "end": "107840"
  },
  {
    "text": "about and some of them are hidden Bel below another layer that you don't",
    "start": "107840",
    "end": "113399"
  },
  {
    "text": "always look into and even if you find that feature you might not know what it's used for so yes git is kind of the",
    "start": "113399",
    "end": "121360"
  },
  {
    "text": "Swiss army knife of Version Control Systems and yes I came up with this",
    "start": "121360",
    "end": "127520"
  },
  {
    "text": "myself in the shower so before we move any F further though",
    "start": "127520",
    "end": "134080"
  },
  {
    "text": "let me address the elephant in the room what's with all this asky",
    "start": "134080",
    "end": "140239"
  },
  {
    "text": "art well you see git is a tool that was uh created at the command line and it's",
    "start": "140239",
    "end": "148760"
  },
  {
    "text": "meant to be used used at the command line now I know there are a lot of git goys some good some bad you know they do",
    "start": "148760",
    "end": "155640"
  },
  {
    "text": "the job however if you want to unlock the full power of Git You should be",
    "start": "155640",
    "end": "161480"
  },
  {
    "text": "using it from the command line and I'm going to prove you why that is here today so yes welcome to the",
    "start": "161480",
    "end": "170080"
  },
  {
    "text": "terminal that means that the entire presentation is going to be from the terminal and yes that even includes the",
    "start": "170080",
    "end": "178319"
  },
  {
    "text": "slides and you would will not believe how long it took me to draw",
    "start": "178319",
    "end": "184319"
  },
  {
    "text": "that so let's look at it for a few more seconds shall",
    "start": "184319",
    "end": "189480"
  },
  {
    "text": "we all right what's the game plan we have a canvas we divide it into",
    "start": "189480",
    "end": "196879"
  },
  {
    "text": "two parts now on one side my left your right or the other way around I never",
    "start": "196879",
    "end": "202159"
  },
  {
    "text": "get it right we're going to have a local git repository on the other side we're going",
    "start": "202159",
    "end": "207959"
  },
  {
    "text": "to have some text Tex and some more Ry Graphics to explain what's going on okay",
    "start": "207959",
    "end": "215680"
  },
  {
    "text": "and they're going to move along together these two now in order to do anything we're going to need a project now this is not",
    "start": "215680",
    "end": "223159"
  },
  {
    "text": "important at all but the project is a calculator not that it matters we're going to not look at it like from a",
    "start": "223159",
    "end": "229799"
  },
  {
    "text": "functional point of view but it's a calculator and it's written in node and it's written in typescript because why",
    "start": "229799",
    "end": "237360"
  },
  {
    "text": "not so that's it for the Preamble let's start with the first gem which I call",
    "start": "237360",
    "end": "244159"
  },
  {
    "text": "pretty logs",
    "start": "244159",
    "end": "249640"
  },
  {
    "text": "so so here we have the repository on the left side or right side depending on",
    "start": "249680",
    "end": "256199"
  },
  {
    "text": "which side you're on and you guys probably all know about",
    "start": "256199",
    "end": "261720"
  },
  {
    "text": "git log pretty boring command you know it shows you the commit graph nothing",
    "start": "261720",
    "end": "267120"
  },
  {
    "text": "really fancy about it however you might not know that git log",
    "start": "267120",
    "end": "273039"
  },
  {
    "text": "has an option called pretty now what this allows you to do is",
    "start": "273039",
    "end": "278800"
  },
  {
    "text": "that it allows you to customize the output of the history so for example if",
    "start": "278800",
    "end": "284479"
  },
  {
    "text": "you just wanted to see the commit message you would pass the option pretty",
    "start": "284479",
    "end": "289919"
  },
  {
    "text": "and then say percent s which is a placeholder that stands for summary which is the first line of the commit",
    "start": "289919",
    "end": "296560"
  },
  {
    "text": "message and if you do this then you just get the commit message message now okay you might say but of",
    "start": "296560",
    "end": "303720"
  },
  {
    "text": "course you can do much more than that so for example you can say l log pretty and",
    "start": "303720",
    "end": "311199"
  },
  {
    "text": "then you can change the color of the output to for example red and then we",
    "start": "311199",
    "end": "316759"
  },
  {
    "text": "want to print a commit hash however we don't want to look at the long commit hash we just want the abbreviated one",
    "start": "316759",
    "end": "323039"
  },
  {
    "text": "which is usually six or seven characters so let's say let's add the",
    "start": "323039",
    "end": "328960"
  },
  {
    "text": "percent H which stands for commit hash now let's reset the color now let's",
    "start": "328960",
    "end": "335840"
  },
  {
    "text": "change the color again to yellow and now I want to print out the any branch",
    "start": "335840",
    "end": "341759"
  },
  {
    "text": "reference that's currently pointing to that commit now if you had to guess what's the placeholder for the branch",
    "start": "341759",
    "end": "351840"
  },
  {
    "text": "reference b or any other guesses are well it's neither of them",
    "start": "352080",
    "end": "359600"
  },
  {
    "text": "it's D now you might wonder why on Earth is it D well let me open a brief",
    "start": "359600",
    "end": "365880"
  },
  {
    "text": "parenthesis here that's because you before in early git versions so pre",
    "start": "365880",
    "end": "372560"
  },
  {
    "text": "2010 you in order to print the branch references as part of your log output",
    "start": "372560",
    "end": "377919"
  },
  {
    "text": "you needed to pass the dash dash decorate option otherwise you wouldn't see them so for historical reason the",
    "start": "377919",
    "end": "386479"
  },
  {
    "text": "decorate that's where the d stands for stand for uh in order to print the branch references so that's a bit of",
    "start": "386479",
    "end": "393440"
  },
  {
    "text": "history trivia for you now let's reset the color again now let's add a space",
    "start": "393440",
    "end": "398680"
  },
  {
    "text": "and let's print the summary that you already seen now let's change the color",
    "start": "398680",
    "end": "403800"
  },
  {
    "text": "again this time to cion let's open a parenthesis and now I want to print the commit timestamp however I want to print",
    "start": "403800",
    "end": "411800"
  },
  {
    "text": "it not as a ISO timestamp but as a time stamp relative to now so I say author",
    "start": "411800",
    "end": "419759"
  },
  {
    "text": "time stamp relative to now and now let's reset the color again and then I get",
    "start": "419759",
    "end": "427520"
  },
  {
    "text": "this which is much better and of course the possibilities are",
    "start": "427520",
    "end": "432879"
  },
  {
    "text": "endless and I mean all you have to do to take advantage of this is type this string every time I mean as you can see",
    "start": "432879",
    "end": "440800"
  },
  {
    "text": "I got pretty fast at it no of course not you can do better than",
    "start": "440800",
    "end": "447120"
  },
  {
    "text": "this you can use another feature in git called aliases now you might or might",
    "start": "447120",
    "end": "452720"
  },
  {
    "text": "not know about aliases now an alias is simply a word that you associate to a",
    "start": "452720",
    "end": "459800"
  },
  {
    "text": "git command together with a bunch of options now of course we can do that for",
    "start": "459800",
    "end": "466520"
  },
  {
    "text": "this and this entire string so we can create a git Alias for our pretty log",
    "start": "466520",
    "end": "474039"
  },
  {
    "text": "now let let me just copy this string because we don't want to type it again",
    "start": "474039",
    "end": "481319"
  },
  {
    "text": "and now we say get config Global because you want it on all repositories not just",
    "start": "481360",
    "end": "486960"
  },
  {
    "text": "the current one and then you say Alias Dot and then the name of the Alias so in",
    "start": "486960",
    "end": "492240"
  },
  {
    "text": "this case LG and then you say which command you want to run when you invoke this alas",
    "start": "492240",
    "end": "498319"
  },
  {
    "text": "well I want to run log with the pretty option and then I paste in the entire",
    "start": "498319",
    "end": "504879"
  },
  {
    "text": "string and now I can say G LG which is what I currently I I've been",
    "start": "504879",
    "end": "510720"
  },
  {
    "text": "using it for years so that's my usual I I type git LG and then when I go to a new computer I type git LG and it says",
    "start": "510720",
    "end": "517640"
  },
  {
    "text": "unknown command so that's the blessing and the curse of using aasis because you your fingers get used to them and then",
    "start": "517640",
    "end": "524959"
  },
  {
    "text": "you go to a different computer we don't don't have your aliases and then nothing works so but you know it's really",
    "start": "524959",
    "end": "533200"
  },
  {
    "text": "useful let's continue on with the second gem which is called pretty diffs to stay",
    "start": "533200",
    "end": "540000"
  },
  {
    "text": "in the theme of pretty things because if you are sitting on the terminal all day like I am you might it might it might as",
    "start": "540000",
    "end": "546519"
  },
  {
    "text": "well look good right doesn't have to be black and white or green on",
    "start": "546519",
    "end": "552399"
  },
  {
    "text": "black so pretty divs now you all know the diff command so let's diff the",
    "start": "552399",
    "end": "559120"
  },
  {
    "text": "previous commit to the latest one and then you get this no pretty boring",
    "start": "559120",
    "end": "565320"
  },
  {
    "text": "everybody's seeing it however everything that comes out of git",
    "start": "565320",
    "end": "572000"
  },
  {
    "text": "commands is automatically piped through another program called a",
    "start": "572000",
    "end": "578200"
  },
  {
    "text": "pager Now the default pager in git is less which is a program that allows you",
    "start": "578200",
    "end": "586160"
  },
  {
    "text": "to scroll up and down using the arrows or the J and K Keys however it's not fixed you can",
    "start": "586160",
    "end": "593279"
  },
  {
    "text": "change it in with a configuration setting and that configuration setting is called core pager now the good thing",
    "start": "593279",
    "end": "601320"
  },
  {
    "text": "to know is that there are programs out there that do pretty things with the",
    "start": "601320",
    "end": "606360"
  },
  {
    "text": "diff output there are a bunch of them there is one called def so",
    "start": "606360",
    "end": "611959"
  },
  {
    "text": "fancy which is you know it says it does what it says and then there is another",
    "start": "611959",
    "end": "617040"
  },
  {
    "text": "one called Delta Now Delta is written in Rust which already there tells you that",
    "start": "617040",
    "end": "624920"
  },
  {
    "text": "it's much cooler than the rest so Delta is currently my pager of",
    "start": "624920",
    "end": "632120"
  },
  {
    "text": "choice and how do you use it well first you need to install it which of course I already did but it's pretty pretty easy",
    "start": "632120",
    "end": "638519"
  },
  {
    "text": "to do then you say git config Global core. pager and then you say that the",
    "start": "638519",
    "end": "646440"
  },
  {
    "text": "pager should be Delta and now if I run the same command",
    "start": "646440",
    "end": "651959"
  },
  {
    "text": "again I get this output now what's cool about this well you notice a few things first the plus",
    "start": "651959",
    "end": "659600"
  },
  {
    "text": "and minuses have been removed because you know they're just you can see them from the color green and red and then",
    "start": "659600",
    "end": "666279"
  },
  {
    "text": "you can also notice that we have syntax highlighting for your language in the",
    "start": "666279",
    "end": "673160"
  },
  {
    "text": "diff which is pretty cool so I highly recommend you to use",
    "start": "673160",
    "end": "680000"
  },
  {
    "text": "Delta and set it as a your",
    "start": "680000",
    "end": "684519"
  },
  {
    "text": "pager now let's move on",
    "start": "685480",
    "end": "690839"
  },
  {
    "text": "and let's start modifying files let's talk about staging",
    "start": "690839",
    "end": "696760"
  },
  {
    "text": "now it's always a good idea in git to make commits that",
    "start": "696760",
    "end": "702079"
  },
  {
    "text": "are semantically cohesive what does it mean it means that one commit should",
    "start": "702079",
    "end": "707200"
  },
  {
    "text": "represent one logical change for example if you're making a refactoring that should be one commit if you're adding a",
    "start": "707200",
    "end": "713000"
  },
  {
    "text": "feature that should be another commit now as you know that's hard to do in practice because when you're",
    "start": "713000",
    "end": "719480"
  },
  {
    "text": "working you might go in to implement a new feature but then you see a",
    "start": "719480",
    "end": "724920"
  },
  {
    "text": "refactoring opportunity so you take it right there and then so then how do you split that into different commits now",
    "start": "724920",
    "end": "732560"
  },
  {
    "text": "with other virsion Control Systems that's pretty hard to do if not impossible unless you are really",
    "start": "732560",
    "end": "737920"
  },
  {
    "text": "disciplined with doing one thing at a time in git it's not like like that at all because in git you can choose your",
    "start": "737920",
    "end": "745480"
  },
  {
    "text": "workflow work as you like and then use git feature to have a clean",
    "start": "745480",
    "end": "753160"
  },
  {
    "text": "history so one of the features that git has for these things is called the patch",
    "start": "753399",
    "end": "759560"
  },
  {
    "text": "option of git ad now let's look at an example",
    "start": "759560",
    "end": "765360"
  },
  {
    "text": "let's so I have a file called index.ts which is the entry point of this",
    "start": "765360",
    "end": "773000"
  },
  {
    "text": "program uh now let's open it up with the editor the only editor that you will",
    "start": "773000",
    "end": "778519"
  },
  {
    "text": "ever need which is it yes but which which text",
    "start": "778519",
    "end": "786040"
  },
  {
    "text": "editor did I did I hear ax no no what did it say V oh yes thank you very much",
    "start": "786040",
    "end": "794160"
  },
  {
    "text": "that's the that's the editor that you need the only editor that you'll ever need",
    "start": "794160",
    "end": "799800"
  },
  {
    "text": "actually so um yeah so let's open it up you know it's a typescript file now",
    "start": "799800",
    "end": "806680"
  },
  {
    "text": "let's say that I spot typo here so for example this word over here the word",
    "start": "806680",
    "end": "814240"
  },
  {
    "text": "embarrassingly embarrassingly enough has two hours so so here is a typo so let's fix",
    "start": "814240",
    "end": "820800"
  },
  {
    "text": "that let's make two hours over here now I'm in into this file and then I look at",
    "start": "820800",
    "end": "827399"
  },
  {
    "text": "at this feat the features of the F the code and then I see that yes this string here I like to change this as",
    "start": "827399",
    "end": "834240"
  },
  {
    "text": "well uh because I want my calculator to be really academic so I don't want to to say the numbers to add I want to say the",
    "start": "834240",
    "end": "841199"
  },
  {
    "text": "addent instead so now I made two",
    "start": "841199",
    "end": "846480"
  },
  {
    "text": "changes I made one change over here which is you could say fixing a",
    "start": "846480",
    "end": "853240"
  },
  {
    "text": "typo and then I made another change over here which is you could say kind of a",
    "start": "853240",
    "end": "859120"
  },
  {
    "text": "new feature okay so now what I want to do is that I",
    "start": "859120",
    "end": "864600"
  },
  {
    "text": "want to Stage that change but I want to leave that in my local working directory",
    "start": "864600",
    "end": "871440"
  },
  {
    "text": "so I want to commit just the upper portion of of the file how do I do",
    "start": "871440",
    "end": "876639"
  },
  {
    "text": "that that's where the patch option comes in so let's save",
    "start": "876639",
    "end": "882040"
  },
  {
    "text": "this and then I say git add patch now what git does is that it asks me do you",
    "start": "882040",
    "end": "889120"
  },
  {
    "text": "want to Stage this hunk now the word hunk here doesn't mean what you think it",
    "start": "889120",
    "end": "895040"
  },
  {
    "text": "means in this case it means basically in in the unified D format which believe it",
    "start": "895040",
    "end": "902040"
  },
  {
    "text": "or not is a standard the word hunk means a portion of a patch so it says do we",
    "start": "902040",
    "end": "908600"
  },
  {
    "text": "want to Stage this hunk and then you get a self-explanatory list of",
    "start": "908600",
    "end": "914480"
  },
  {
    "text": "options which of course I mean you can always always type the question mark and then you get an explanation but believe",
    "start": "914480",
    "end": "920639"
  },
  {
    "text": "me when I say that what we want to do in this case is we want to split this into",
    "start": "920639",
    "end": "927320"
  },
  {
    "text": "smaller chunks so we want to type S so let's say split and then I get the same",
    "start": "927320",
    "end": "934680"
  },
  {
    "text": "question however this time it's one of two hunks can you see",
    "start": "934680",
    "end": "940800"
  },
  {
    "text": "it here in the bottom corner so do I want to Stage this and",
    "start": "940800",
    "end": "946040"
  },
  {
    "text": "say yes do you want to Stage this no and then if I say get status you see",
    "start": "946040",
    "end": "951839"
  },
  {
    "text": "that the file is simultaneously staged and unstaged",
    "start": "951839",
    "end": "960440"
  },
  {
    "text": "now you might wonder how do I look at what I'm about to commit I want to see the diff of what's being staged well I",
    "start": "960440",
    "end": "967399"
  },
  {
    "text": "can I can say gtif staged and if I say gtif then I get what",
    "start": "967399",
    "end": "974560"
  },
  {
    "text": "is still in my working directory but not to be",
    "start": "974560",
    "end": "979759"
  },
  {
    "text": "committed bonus tip this works also for undoing",
    "start": "980759",
    "end": "987519"
  },
  {
    "text": "changes now let's open it up again let's say that I I am going to",
    "start": "987519",
    "end": "994720"
  },
  {
    "text": "type uh this is documentation and then over here I'm",
    "start": "994720",
    "end": "999880"
  },
  {
    "text": "going to make a comment this is a comment now I made two more changes I",
    "start": "999880",
    "end": "1006279"
  },
  {
    "text": "want to undo one of the changes like completely remove it from my working directory but keep the other",
    "start": "1006279",
    "end": "1013319"
  },
  {
    "text": "one I can say git restore patch and and then I get the same",
    "start": "1013319",
    "end": "1019720"
  },
  {
    "text": "question however this time it's about do you want to discard this",
    "start": "1019720",
    "end": "1025558"
  },
  {
    "text": "hunk and then I say split do you want to discard",
    "start": "1025559",
    "end": "1031360"
  },
  {
    "text": "this no do you want to discard this yes do you want to discard this",
    "start": "1031360",
    "end": "1036798"
  },
  {
    "text": "no and then I'm I got rid of one of the on the comments and then I kept the",
    "start": "1036799",
    "end": "1044199"
  },
  {
    "text": "other okay so patch works for staging but also for undo doing portions of a",
    "start": "1044199",
    "end": "1050880"
  },
  {
    "text": "change that you have in your file pretty useful stuff did you guys know about",
    "start": "1050880",
    "end": "1056760"
  },
  {
    "text": "this anyone knew okay couple of you let's move",
    "start": "1056760",
    "end": "1063559"
  },
  {
    "text": "on to more staging now that we have this situation over here where the file is",
    "start": "1063559",
    "end": "1070600"
  },
  {
    "text": "modified but only a portion of it is about to be committed now we have a problem because",
    "start": "1070600",
    "end": "1077120"
  },
  {
    "text": "when you commit things you not only want them to be cohesive you also want them",
    "start": "1077120",
    "end": "1082159"
  },
  {
    "text": "to be consistent that means they should not break the build you should be able to confidently cherry pick a commit or",
    "start": "1082159",
    "end": "1089600"
  },
  {
    "text": "merge a branch and not having to worry about this is going to break the build or start failing",
    "start": "1089600",
    "end": "1095840"
  },
  {
    "text": "tests but how do you ensure that if you are to if you are to commit only the",
    "start": "1095840",
    "end": "1101840"
  },
  {
    "text": "stage part how do you know that that by itself doesn't break the build without all the other changes that you still",
    "start": "1101840",
    "end": "1108039"
  },
  {
    "text": "have in your working directory so in other words how do you isolate that well",
    "start": "1108039",
    "end": "1113640"
  },
  {
    "text": "it turns out that the stash command has a useful option called keep",
    "start": "1113640",
    "end": "1122799"
  },
  {
    "text": "index so what this allows us to do is that we can stash what we have in a working",
    "start": "1122880",
    "end": "1130159"
  },
  {
    "text": "directory but we want to keep whatever is already being",
    "start": "1130159",
    "end": "1136120"
  },
  {
    "text": "staged so now if if I say staged I still have my change and if I say get if I",
    "start": "1136480",
    "end": "1143039"
  },
  {
    "text": "don't have anything so I got rid of everything in my working directory and I just kept a staged part so now I know",
    "start": "1143039",
    "end": "1150720"
  },
  {
    "text": "that that change by itself is going to be committed and then I can for example run the test and see that of course this",
    "start": "1150720",
    "end": "1158000"
  },
  {
    "text": "works because just know fixing a typo but nonetheless you can verify your",
    "start": "1158000",
    "end": "1163760"
  },
  {
    "text": "changes isolated from everything else and then this point I can make a",
    "start": "1163760",
    "end": "1169280"
  },
  {
    "text": "commit let's say fixes a typo and then when I'm done I can say get stash pop and get back my changes",
    "start": "1169280",
    "end": "1176600"
  },
  {
    "text": "from the stash and here they are again okay how many here they are using this",
    "start": "1176600",
    "end": "1182919"
  },
  {
    "text": "workflow okay couple of you cool cool cool pretty useful thing to",
    "start": "1182919",
    "end": "1190600"
  },
  {
    "text": "know let's move on to searching now git has some pretty powerful searching",
    "start": "1190600",
    "end": "1197240"
  },
  {
    "text": "facilities allow you to search through the history based on the",
    "start": "1197240",
    "end": "1202679"
  },
  {
    "text": "changes now the most powerful probably of those search features is called pickaxe because you imagine that you go",
    "start": "1202679",
    "end": "1210159"
  },
  {
    "text": "spelunking into your history with your pickaxe that at least that's how I think about it so what option is that well you use",
    "start": "1210159",
    "end": "1217840"
  },
  {
    "text": "it with Git log of course because that's about looking at history and the pickaxe allows you to",
    "start": "1217840",
    "end": "1225120"
  },
  {
    "text": "look at you want to find commit that either add or remove a line that matches",
    "start": "1225120",
    "end": "1232000"
  },
  {
    "text": "a certain pattern in other words what commit added this code or what commit change this",
    "start": "1232000",
    "end": "1239520"
  },
  {
    "text": "line and the option for that is uh capital S so in this case I want to find",
    "start": "1239600",
    "end": "1247640"
  },
  {
    "text": "the commit that originally introduced the typo okay so I say git of course you",
    "start": "1247640",
    "end": "1253960"
  },
  {
    "text": "can use you can use your alas so I can say git LG s and then you say",
    "start": "1253960",
    "end": "1260080"
  },
  {
    "text": "embarassing with one R and then I get two commits back of course I get the",
    "start": "1260080",
    "end": "1265400"
  },
  {
    "text": "commit that we just made that fixes the typo and then I get another commit could",
    "start": "1265400",
    "end": "1271320"
  },
  {
    "text": "it be the one that originally introduced it so let's grab the commit hash and",
    "start": "1271320",
    "end": "1276360"
  },
  {
    "text": "let's look at the contents a yes indeed that was the commit that originally introduced the",
    "start": "1276360",
    "end": "1283320"
  },
  {
    "text": "line cool stuff don't need any fancy goo to look at to find commit based on the",
    "start": "1283320",
    "end": "1291240"
  },
  {
    "text": "contents bonus tip and this is going to blow your mind I hope at least you blew",
    "start": "1291240",
    "end": "1297080"
  },
  {
    "text": "mine when I found out about it you can also search by function",
    "start": "1297080",
    "end": "1302799"
  },
  {
    "text": "name what's a function well it's it's whatever it resembles a c style function",
    "start": "1302799",
    "end": "1308880"
  },
  {
    "text": "so a name and a bunch of cbra not a bunch two two two parenthesis and two",
    "start": "1308880",
    "end": "1314480"
  },
  {
    "text": "curly braces doesn't matter which line they they are if it resembles a c style",
    "start": "1314480",
    "end": "1321279"
  },
  {
    "text": "function git is going to find it and you can find commits that somehow touch a",
    "start": "1321279",
    "end": "1328840"
  },
  {
    "text": "function so the Syntax for that is L so you say so for example in this case I",
    "start": "1328840",
    "end": "1335200"
  },
  {
    "text": "have a file called calculator. TS and this has an function called add",
    "start": "1335200",
    "end": "1342200"
  },
  {
    "text": "which indeed resembles a c style function could have been CP method could",
    "start": "1342200",
    "end": "1347760"
  },
  {
    "text": "have been in Java Java method doesn't really matter now I want to say which commit somehow modifies this this",
    "start": "1347760",
    "end": "1354440"
  },
  {
    "text": "function and I can say gitl g l colon the name of the function colon the path",
    "start": "1354440",
    "end": "1362880"
  },
  {
    "text": "to the file that contains that function so calc calculator. TS",
    "start": "1362880",
    "end": "1369400"
  },
  {
    "text": "bam I get the commit that added in this",
    "start": "1369400",
    "end": "1374440"
  },
  {
    "text": "case the function and if there were other commits that change anything",
    "start": "1374440",
    "end": "1379559"
  },
  {
    "text": "inside the function body or the signature they will also appear here did",
    "start": "1379559",
    "end": "1384880"
  },
  {
    "text": "you know about this kind kind of kind of new okay this",
    "start": "1384880",
    "end": "1390200"
  },
  {
    "text": "is this is pretty use one new this is pretty useful pretty useful",
    "start": "1390200",
    "end": "1395520"
  },
  {
    "text": "stuff some so this is another point I want to make that some goys might expose",
    "start": "1395520",
    "end": "1401200"
  },
  {
    "text": "this functionality to you but some others don't if you're at the command",
    "start": "1401200",
    "end": "1406679"
  },
  {
    "text": "line you have the full capab ility of everything H I'm going to prove this",
    "start": "1406679",
    "end": "1412279"
  },
  {
    "text": "point once more at least in this presentation so let's move on to",
    "start": "1412279",
    "end": "1417320"
  },
  {
    "text": "automation questions afterwards yeah automation all right",
    "start": "1417320",
    "end": "1424120"
  },
  {
    "text": "so there are a bunch of workflows that are very common when you're using git",
    "start": "1425039",
    "end": "1430200"
  },
  {
    "text": "one of these workflows is I just realized that the change I",
    "start": "1430200",
    "end": "1435240"
  },
  {
    "text": "made now should have been part of a commit 10 commits ago has it happened to",
    "start": "1435240",
    "end": "1440960"
  },
  {
    "text": "you yes it's pretty common now this is so common in fact that git has a",
    "start": "1440960",
    "end": "1446960"
  },
  {
    "text": "possibility that to it allows you to make a commit and then make it part of a",
    "start": "1446960",
    "end": "1453200"
  },
  {
    "text": "previous commit you're rewriting history you're doing something called squashing you're squashing a commit into another",
    "start": "1453200",
    "end": "1459320"
  },
  {
    "text": "one so that it looks like it's one and another one is called fix up",
    "start": "1459320",
    "end": "1464960"
  },
  {
    "text": "which is basically the same thing as squash but you are not you're reusing the commit methods you don't want to",
    "start": "1464960",
    "end": "1470919"
  },
  {
    "text": "change the commit methods now this is so common that git has an built-in automation feature to",
    "start": "1470919",
    "end": "1478480"
  },
  {
    "text": "make it easier to do which is called Autos squash now what on Earth is out to",
    "start": "1478480",
    "end": "1485279"
  },
  {
    "text": "squash well you wouldn't know because it's off by default and why is it off by",
    "start": "1485279",
    "end": "1490559"
  },
  {
    "text": "default I don't know you tell me but you need to enable it so you say get config",
    "start": "1490559",
    "end": "1496760"
  },
  {
    "text": "global rebase do AOS squash you said it to true",
    "start": "1496760",
    "end": "1503279"
  },
  {
    "text": "now it's enabled now how do you use it well let",
    "start": "1503279",
    "end": "1508640"
  },
  {
    "text": "me show you we have H right now A",
    "start": "1508640",
    "end": "1516159"
  },
  {
    "text": "change that this over here we change the string the numbers to add into the",
    "start": "1516159",
    "end": "1521279"
  },
  {
    "text": "Addams now let's imagine that I would like to squash this commit into the",
    "start": "1521279",
    "end": "1526960"
  },
  {
    "text": "commit that originally introduce the numbers to add so that it looks like I",
    "start": "1526960",
    "end": "1532919"
  },
  {
    "text": "wrote the addent from the very beginning okay I want to rewrite",
    "start": "1532919",
    "end": "1538240"
  },
  {
    "text": "history now first and if you haven't noticed already I'm going to tell you now these gems kind of build on top of",
    "start": "1538240",
    "end": "1545960"
  },
  {
    "text": "each other so as we progress we're going to use previous tips and tricks to do",
    "start": "1545960",
    "end": "1552919"
  },
  {
    "text": "more stuff so right now we want to find a commit that added a certain line so",
    "start": "1552919",
    "end": "1559200"
  },
  {
    "text": "we're going to use the pickaxe for example together with our alas so we say",
    "start": "1559200",
    "end": "1565320"
  },
  {
    "text": "G LG s and then we find the string numbers to",
    "start": "1565320",
    "end": "1570840"
  },
  {
    "text": "add there it is that's the commit that originally added that line let's grab",
    "start": "1570840",
    "end": "1577240"
  },
  {
    "text": "the commit hash now let's use the patch option to",
    "start": "1577240",
    "end": "1584520"
  },
  {
    "text": "partially stage the file and only stage that change because remember we have two changes now we don't want to Stage this",
    "start": "1584520",
    "end": "1592200"
  },
  {
    "text": "one we just want to Stage this one so we say no and then we say yes now we know which commit we want to",
    "start": "1592200",
    "end": "1600279"
  },
  {
    "text": "amend and we have just staged the part we want to include so now we say get",
    "start": "1600279",
    "end": "1605480"
  },
  {
    "text": "commit D- fix up and then the hash of the commit now what this does it creates",
    "start": "1605480",
    "end": "1612279"
  },
  {
    "text": "of course a regular commit however the commit message is made up to of the string fix",
    "start": "1612279",
    "end": "1618960"
  },
  {
    "text": "up exclamation mark so you can think of it as fix up and then you have the commit message",
    "start": "1618960",
    "end": "1627559"
  },
  {
    "text": "of the commit that is going to be squashed into now once you have this of course",
    "start": "1627559",
    "end": "1633320"
  },
  {
    "text": "you and then you can at this point you could keep working with other things you can make other commits and that is going to be parked",
    "start": "1633320",
    "end": "1640240"
  },
  {
    "text": "for later now what's later well later is an interactive rebase where you want to",
    "start": "1640240",
    "end": "1646960"
  },
  {
    "text": "move that commit below the one that's going to be squashed into",
    "start": "1646960",
    "end": "1652440"
  },
  {
    "text": "right so let's do that let let's rebase interactive probably just",
    "start": "1652440",
    "end": "1659679"
  },
  {
    "text": "type-i and then in this case I want to include the entire history so I say root but in your case is probably going to",
    "start": "1659679",
    "end": "1666200"
  },
  {
    "text": "have the branch point there o and this",
    "start": "1666200",
    "end": "1672200"
  },
  {
    "text": "happens have you ever had this experience you want to do a rebase but you have changes is you know working",
    "start": "1672200",
    "end": "1679320"
  },
  {
    "text": "directory yes it happens you might be surprised to know",
    "start": "1679320",
    "end": "1684440"
  },
  {
    "text": "that g has an automation feature for this as well which is also off by",
    "start": "1684440",
    "end": "1690760"
  },
  {
    "text": "default and that is called can you guess what the name",
    "start": "1690760",
    "end": "1696640"
  },
  {
    "text": "is it's called Auto stach but please pay attention to the spelling because it's",
    "start": "1696640",
    "end": "1704440"
  },
  {
    "text": "capital S if you type with with lowercase s it doesn't work and you don't know why it happened to me it has",
    "start": "1704440",
    "end": "1712440"
  },
  {
    "text": "to be stash with capital S so let's enable it we say git config Global",
    "start": "1712440",
    "end": "1720200"
  },
  {
    "text": "rebase do aouto stash true so now that we have enabled it",
    "start": "1720200",
    "end": "1727640"
  },
  {
    "text": "let's redo the same operation again the rebase H something happened we're going to look at it afterwards now what",
    "start": "1727640",
    "end": "1734360"
  },
  {
    "text": "happened here well just know that we could do the re base even though we had",
    "start": "1734360",
    "end": "1740120"
  },
  {
    "text": "changes in our working directory now you see this commit got moved right below the commit that is",
    "start": "1740120",
    "end": "1748200"
  },
  {
    "text": "going to be squashed into and the action has being changed to",
    "start": "1748200",
    "end": "1753799"
  },
  {
    "text": "fix up now imagine that you have a bunch of those fix up commits and they with",
    "start": "1753799",
    "end": "1760080"
  },
  {
    "text": "one single rebase they are going to be moved into the right",
    "start": "1760080",
    "end": "1765240"
  },
  {
    "text": "position so you basically do a want to fix up commits and then you do one single rebase and they all get they they",
    "start": "1765240",
    "end": "1773200"
  },
  {
    "text": "all move to the right position and they all get squashed so that's pretty pretty awesome",
    "start": "1773200",
    "end": "1779360"
  },
  {
    "text": "so in this case I don't have to do anything but just save the file and exit I did the rebase it got squashed we're",
    "start": "1779360",
    "end": "1785960"
  },
  {
    "text": "going to look at it but look what happened here in the meantime it created",
    "start": "1785960",
    "end": "1791200"
  },
  {
    "text": "a stash it allowed us to do the rebase and then it reapplied the contents so if I look at",
    "start": "1791200",
    "end": "1798799"
  },
  {
    "text": "my working directory here is my change if I look at my stash it's empty",
    "start": "1798799",
    "end": "1804559"
  },
  {
    "text": "no trash left left afterwards outo stash and outo",
    "start": "1804559",
    "end": "1811840"
  },
  {
    "text": "squash by the way let me show you our history",
    "start": "1811840",
    "end": "1818000"
  },
  {
    "text": "now and you see that we don't have the fix up commit",
    "start": "1818679",
    "end": "1824320"
  },
  {
    "text": "anymore and uh this one is the one that we squashed",
    "start": "1824320",
    "end": "1832240"
  },
  {
    "text": "into if you're wondering why I typed 45 are you wondering why you're type 45 I didn't mean to I I meant to write",
    "start": "1832279",
    "end": "1840679"
  },
  {
    "text": "four which means show me the last four commits in git log but then I slipped and I typed five as well but that's also",
    "start": "1840679",
    "end": "1848919"
  },
  {
    "text": "good to know that you can say git log Dash and then a number and that it shows",
    "start": "1848919",
    "end": "1854600"
  },
  {
    "text": "you just that number so for example if you want just want to later one you can say git log minus one",
    "start": "1854600",
    "end": "1860240"
  },
  {
    "text": "okay so let's look at this commit uh let's look at the content and",
    "start": "1860240",
    "end": "1867840"
  },
  {
    "text": "indeed it says the addent so we have successfully amended",
    "start": "1867840",
    "end": "1874679"
  },
  {
    "text": "it how many here knew about how to squash and how to stash one",
    "start": "1874760",
    "end": "1883080"
  },
  {
    "text": "okay let's move let's change gear by the way spoiler alert I have nine gems why",
    "start": "1886159",
    "end": "1892080"
  },
  {
    "text": "do I have nine gems and not 10 because when you're doing a presentation in the terminal you want usually squares",
    "start": "1892080",
    "end": "1898840"
  },
  {
    "text": "because it's not easy to have round shapes and nine looks really good on",
    "start": "1898840",
    "end": "1904919"
  },
  {
    "text": "three lines of three items that's the reason why I have nine so dot notation",
    "start": "1904919",
    "end": "1911360"
  },
  {
    "text": "have you guys heard about the dot notation no how about the dot dot",
    "start": "1911360",
    "end": "1919120"
  },
  {
    "text": "notation how about the dot dot dot notation yes one in both cases dot dot",
    "start": "1919120",
    "end": "1926399"
  },
  {
    "text": "dot is a is a real thing it exists but today we're going to look at the dot dot",
    "start": "1926399",
    "end": "1931639"
  },
  {
    "text": "notation two dots what does it do well it allows you",
    "start": "1931639",
    "end": "1938039"
  },
  {
    "text": "to compare branches so for example let's say that we have a situation that looks like",
    "start": "1938039",
    "end": "1943679"
  },
  {
    "text": "this what you you have a topic branch and you have a main branch know it's usually your pool request Branch",
    "start": "1943679",
    "end": "1949480"
  },
  {
    "text": "whatever the question you want to ask when you're working in a topic branch is what commit do I have in this branch",
    "start": "1949480",
    "end": "1956399"
  },
  {
    "text": "that are not in the mainline branch and on the other side you want to also say",
    "start": "1956399",
    "end": "1961760"
  },
  {
    "text": "what commits does a Mainline branch have that I don't have",
    "start": "1961760",
    "end": "1968760"
  },
  {
    "text": "so what we want to we want to basically find",
    "start": "1968760",
    "end": "1974279"
  },
  {
    "text": "out these two commits what commits are here that are not here so how do you",
    "start": "1974279",
    "end": "1981880"
  },
  {
    "text": "express that with the log command and the dot dot notation you say git log what commits",
    "start": "1981880",
    "end": "1989559"
  },
  {
    "text": "are not here but that are",
    "start": "1989559",
    "end": "1995360"
  },
  {
    "text": "here so in this case let me change to a",
    "start": "1995360",
    "end": "2000519"
  },
  {
    "text": "different branch I have a branch called feature ADD test script oh",
    "start": "2000519",
    "end": "2007840"
  },
  {
    "text": "let's do I have of course changes in my working directory that I don't want so",
    "start": "2007840",
    "end": "2013480"
  },
  {
    "text": "let me just force okay so now we are in a topic Branch what commits do I have here that",
    "start": "2013480",
    "end": "2019120"
  },
  {
    "text": "are not in main so I say git LG not in main but in my current branch and then I",
    "start": "2019120",
    "end": "2027080"
  },
  {
    "text": "get this list now the opposite is also possible",
    "start": "2027080",
    "end": "2033000"
  },
  {
    "text": "of course you want to say what commits are in",
    "start": "2033000",
    "end": "2040279"
  },
  {
    "text": "main that are not in my topic",
    "start": "2040279",
    "end": "2045519"
  },
  {
    "text": "Branch so how do you express this of course that is going to be the opposite",
    "start": "2047480",
    "end": "2053158"
  },
  {
    "text": "what commits are not in my topic Branch but that are in the main",
    "start": "2053159",
    "end": "2060839"
  },
  {
    "text": "branch so basically revert that G LG not in my feature Branch but that are in",
    "start": "2060839",
    "end": "2069679"
  },
  {
    "text": "Main and then I get those two pretty useful stuff now it gets even",
    "start": "2069679",
    "end": "2076000"
  },
  {
    "text": "more useful it gets useful if you combine this with the",
    "start": "2076000",
    "end": "2083520"
  },
  {
    "text": "aliases now imagine that I have an alias called new for example that basically",
    "start": "2083520",
    "end": "2090200"
  },
  {
    "text": "says show me the commits that are in my current Branch head the branch I've currently checked out that are not in",
    "start": "2090200",
    "end": "2097440"
  },
  {
    "text": "master main or default or whatever you call your main line so let's add a conf",
    "start": "2097440",
    "end": "2103160"
  },
  {
    "text": "a an alas globally called new that basically",
    "start": "2103160",
    "end": "2109520"
  },
  {
    "text": "says LG because another thing that blew my mind you can have aliases that",
    "start": "2109520",
    "end": "2115920"
  },
  {
    "text": "reference other aliases can you believe it that was not possible in git 1.0 H sorry",
    "start": "2115920",
    "end": "2124599"
  },
  {
    "text": "1.8 then in one the later versions they added the possibility to have aliases that reference",
    "start": "2124599",
    "end": "2131320"
  },
  {
    "text": "aliases can you can do pretty off powerful things with that and awful things as well you can have infinite",
    "start": "2131320",
    "end": "2137599"
  },
  {
    "text": "recursion of aliases don't don't try that so you say main dot dot head",
    "start": "2137599",
    "end": "2144720"
  },
  {
    "text": "whatever Branch I'm currently standing on compare that to Main and show me what's new here then I can have another",
    "start": "2144720",
    "end": "2153040"
  },
  {
    "text": "brand another alas called missing when I I basically say the opposite thing what",
    "start": "2153040",
    "end": "2159400"
  },
  {
    "text": "commits don't I have what commits are not in head but that are in main are you",
    "start": "2159400",
    "end": "2165960"
  },
  {
    "text": "with me yeah so then I'm in a feature branch and say what do I have I have",
    "start": "2165960",
    "end": "2171079"
  },
  {
    "text": "this what am I missing I have I'm missing those I use that all the time it's like",
    "start": "2171079",
    "end": "2177520"
  },
  {
    "text": "automatic I don't even think about it new missing which is the problem when I get to a new computer where I says get",
    "start": "2177520",
    "end": "2183480"
  },
  {
    "text": "new unknown command what yeah and that's the problem",
    "start": "2183480",
    "end": "2189400"
  },
  {
    "text": "so still you should still use those those uh",
    "start": "2189400",
    "end": "2195200"
  },
  {
    "text": "commands Okay now this is getting into the weed",
    "start": "2196040",
    "end": "2201640"
  },
  {
    "text": "of of git obscure stuff rebase on two now you guys",
    "start": "2201640",
    "end": "2208640"
  },
  {
    "text": "probably know about rebase do you know about rebase yeah now",
    "start": "2208640",
    "end": "2214920"
  },
  {
    "text": "rebase it does what it says it changes the base of your Branch from one commit",
    "start": "2214920",
    "end": "2222839"
  },
  {
    "text": "to another insert you all your base Meme here so what does rebase onto then do",
    "start": "2222839",
    "end": "2231240"
  },
  {
    "text": "rebase onto allows you to take a portion of a branch a sequence of commits not",
    "start": "2231240",
    "end": "2239480"
  },
  {
    "text": "from the branching point but somewhere in your branch take that sequence of commit and transport it into another",
    "start": "2239480",
    "end": "2246400"
  },
  {
    "text": "Comm it change the base of that portion now how is that useful in might",
    "start": "2246400",
    "end": "2252119"
  },
  {
    "text": "wonder well let me show you let's say that we have a situation",
    "start": "2252119",
    "end": "2258280"
  },
  {
    "text": "that looks like this the usual main topic Branch",
    "start": "2258280",
    "end": "2264839"
  },
  {
    "text": "now let's say that we have",
    "start": "2264839",
    "end": "2269599"
  },
  {
    "text": "Rewritten this commit over here which we actually did we have amended",
    "start": "2270160",
    "end": "2277160"
  },
  {
    "text": "the second to last commit so we have Rewritten that it becomes a new commit",
    "start": "2277160",
    "end": "2282400"
  },
  {
    "text": "with a new commit hash however any topic branch that included that commit before",
    "start": "2282400",
    "end": "2288319"
  },
  {
    "text": "now has a reference to the old one are you with me yeah so that b is still present in my",
    "start": "2288319",
    "end": "2297359"
  },
  {
    "text": "current topic Branch now what I want to do is that I",
    "start": "2297359",
    "end": "2303079"
  },
  {
    "text": "basically want to take this two",
    "start": "2303079",
    "end": "2308359"
  },
  {
    "text": "commits and I want to move them so that the base becomes",
    "start": "2308359",
    "end": "2314079"
  },
  {
    "text": "main thus effectively getting rid of",
    "start": "2314079",
    "end": "2319440"
  },
  {
    "text": "that so this is what I want to do and I want to do it in one go I don't want to fiddle around interactive rebat and",
    "start": "2319440",
    "end": "2326359"
  },
  {
    "text": "stuff I want to write one command and take C and D which I know are the new",
    "start": "2326359",
    "end": "2331560"
  },
  {
    "text": "commits and rebase them on top of Main and exclude B well rebase on two it's",
    "start": "2331560",
    "end": "2338200"
  },
  {
    "text": "exactly what you need for this and how does it work the syntax is rebase on two",
    "start": "2338200",
    "end": "2345560"
  },
  {
    "text": "and then you say what is the new base and then that's the key part you",
    "start": "2345560",
    "end": "2352640"
  },
  {
    "text": "say what is the old base what do you want to replace which is different than a",
    "start": "2352640",
    "end": "2358359"
  },
  {
    "text": "regular base which basically gets all the commits from the common parent from the branching",
    "start": "2358359",
    "end": "2365440"
  },
  {
    "text": "point so let's try it out so we are in the feature branch in our case we want to say Main",
    "start": "2365440",
    "end": "2372760"
  },
  {
    "text": "and B so we want to say git rebase onto Main right rebase it onto",
    "start": "2372760",
    "end": "2379160"
  },
  {
    "text": "the new base which is the commit currently referenced by main what is the",
    "start": "2379160",
    "end": "2384240"
  },
  {
    "text": "old base the old B which now I realized I forgot to grab the hash of so let's",
    "start": "2384240",
    "end": "2391160"
  },
  {
    "text": "say G new by the way I forgot to show you that",
    "start": "2391160",
    "end": "2396720"
  },
  {
    "text": "this is indeed the case Can you spot something when I say get new and get",
    "start": "2396720",
    "end": "2402480"
  },
  {
    "text": "missing something interesting see here this is the",
    "start": "2402480",
    "end": "2409520"
  },
  {
    "text": "old and this is the one we amended right still appears it's it's in main the new",
    "start": "2409520",
    "end": "2416200"
  },
  {
    "text": "one and our current feature branch is the old one that's the one we want to get rid of is this one so let's",
    "start": "2416200",
    "end": "2423440"
  },
  {
    "text": "grab the commit hash and then let's say get re base onto Main",
    "start": "2423440",
    "end": "2431359"
  },
  {
    "text": "what is the old base it's B bam let's K it new and that commit is",
    "start": "2431359",
    "end": "2439440"
  },
  {
    "text": "gone now okay one operation transport a portion",
    "start": "2439440",
    "end": "2446040"
  },
  {
    "text": "of a branch into another Branch did you guys know about this okay one or two do you use it",
    "start": "2446040",
    "end": "2453720"
  },
  {
    "text": "regularly yeah cool because it's very useful to also inside a branch let's say",
    "start": "2453720",
    "end": "2459480"
  },
  {
    "text": "that you want to remove some commits in the middle of course you can do that with an interactive rebase and then",
    "start": "2459480",
    "end": "2464960"
  },
  {
    "text": "comment them out but rebase onto is a much faster way to do it you say what's the new base commit that's this we which",
    "start": "2464960",
    "end": "2472920"
  },
  {
    "text": "is the old base that and everything in between is going to be removed okay rebase on",
    "start": "2472920",
    "end": "2481079"
  },
  {
    "text": "two of course the final result is that we have a linear history",
    "start": "2481079",
    "end": "2488240"
  },
  {
    "text": "now let's switch gears again let's talk about the ref log do",
    "start": "2488640",
    "end": "2496440"
  },
  {
    "text": "you guys know about the ref log couple of you okay so git is really",
    "start": "2496440",
    "end": "2501920"
  },
  {
    "text": "good at tracking the contents of your files but it also tracks its own files",
    "start": "2501920",
    "end": "2508800"
  },
  {
    "text": "and in this case it tracks the branch references so you know that in g a",
    "start": "2508800",
    "end": "2513839"
  },
  {
    "text": "branch is just a pointer to a commit now what git does is that every time a",
    "start": "2513839",
    "end": "2519000"
  },
  {
    "text": "branch changes either you make a new commit so you move it forward or you do a reset you move it to somewhere else or",
    "start": "2519000",
    "end": "2526440"
  },
  {
    "text": "you do a rebase whenever a branch changes git records the previous commit",
    "start": "2526440",
    "end": "2532480"
  },
  {
    "text": "that that Branch was pointing to into a its own log it's called a reference log",
    "start": "2532480",
    "end": "2538040"
  },
  {
    "text": "because branches are just references right so how do you get to the ref log",
    "start": "2538040",
    "end": "2544960"
  },
  {
    "text": "well you say ref log and then the branch name because every branch has its own reflog so for example I can say G reflog",
    "start": "2544960",
    "end": "2553440"
  },
  {
    "text": "Main and then I get this list where you say that each entry here has the name of",
    "start": "2553440",
    "end": "2559720"
  },
  {
    "text": "the branch then at and then an number which is an index which increases so the",
    "start": "2559720",
    "end": "2566119"
  },
  {
    "text": "higher the number the older the entry in the history is and of course the latest",
    "start": "2566119",
    "end": "2572400"
  },
  {
    "text": "one is zero which is the the one we're currently at and you can see that also it contains",
    "start": "2572400",
    "end": "2579480"
  },
  {
    "text": "what kind of operation it is so is it this was a rebase this was a",
    "start": "2579480",
    "end": "2585359"
  },
  {
    "text": "commit and this was a reset now how is this useful you might",
    "start": "2585359",
    "end": "2593240"
  },
  {
    "text": "wonder oh well before we move on you should also know oops close the",
    "start": "2593240",
    "end": "2599760"
  },
  {
    "text": "presentation never type Q when you are doing slides from the terminal because Q",
    "start": "2599760",
    "end": "2606680"
  },
  {
    "text": "is quit so let me just get back to this point real",
    "start": "2606680",
    "end": "2614359"
  },
  {
    "text": "quick there you go reminder to self don't type",
    "start": "2616040",
    "end": "2621720"
  },
  {
    "text": "Q over there but type it here so head which is also a reference and head of",
    "start": "2621720",
    "end": "2628920"
  },
  {
    "text": "course points to the brancher currently have checked out has it ALS also has its",
    "start": "2628920",
    "end": "2634240"
  },
  {
    "text": "own ref log which you get to by saying get ref log without anything and this is",
    "start": "2634240",
    "end": "2640480"
  },
  {
    "text": "basically the same thing however it's for head now what's different between a branch ref log and heads ref log is that",
    "start": "2640480",
    "end": "2648240"
  },
  {
    "text": "remember when you change a branch when you check out a different branch you are changing head so the so heads reflog",
    "start": "2648240",
    "end": "2655480"
  },
  {
    "text": "also includes check out operations and how is this useful it's a",
    "start": "2655480",
    "end": "2662359"
  },
  {
    "text": "little thing but you know you can still use it if I switch",
    "start": "2662359",
    "end": "2667640"
  },
  {
    "text": "to I say switch but of course it's check out switch is the new command for",
    "start": "2667640",
    "end": "2672720"
  },
  {
    "text": "that switch main I can say get switch minus and I get back to the previous one",
    "start": "2672720",
    "end": "2680559"
  },
  {
    "text": "so you're you can thanks to the ref to heads ref log you can switch back and",
    "start": "2680559",
    "end": "2686119"
  },
  {
    "text": "forth between two branches which is the equivalent of saying git switch at",
    "start": "2686119",
    "end": "2694960"
  },
  {
    "text": "minus1 so the dash is basically a Syntax for",
    "start": "2694960",
    "end": "2700400"
  },
  {
    "text": "saying you see the head is implicit so you say at minus one so the current one",
    "start": "2700400",
    "end": "2706280"
  },
  {
    "text": "minus one okay pretty useful but how is the",
    "start": "2706280",
    "end": "2712599"
  },
  {
    "text": "ref log really useful I mean the branch ref log well let's say that we have a situation",
    "start": "2712599",
    "end": "2718800"
  },
  {
    "text": "that looks like this and we have two branches topic and Main we rebase the topic on top of Main",
    "start": "2718800",
    "end": "2726240"
  },
  {
    "text": "right which is what we actually did right now now let's say that we change our",
    "start": "2726240",
    "end": "2731559"
  },
  {
    "text": "mind and we want to go back to how things were before we want to undo the rebase however the rebase is already",
    "start": "2731559",
    "end": "2738680"
  },
  {
    "text": "complete so there is no way to abort it it's complete it's done how do you get back to to the previous",
    "start": "2738680",
    "end": "2746160"
  },
  {
    "text": "commit the previous commit of course is still there but there is nothing really pointing to",
    "start": "2746160",
    "end": "2753119"
  },
  {
    "text": "it but is there of course there is one one thing that's pointing to it and",
    "start": "2753119",
    "end": "2758800"
  },
  {
    "text": "that's the ref log ref log remembers what commit that Branch was pointing to",
    "start": "2758800",
    "end": "2764280"
  },
  {
    "text": "before the rebase so how do you how do you undo a",
    "start": "2764280",
    "end": "2770599"
  },
  {
    "text": "rebase let's switch back to the feature Branch you can always reset which is the",
    "start": "2770599",
    "end": "2778800"
  },
  {
    "text": "command to move a branch reference to a different",
    "start": "2778800",
    "end": "2784160"
  },
  {
    "text": "commit and then you say hard because you really mean it now you say hard because you also",
    "start": "2784160",
    "end": "2791119"
  },
  {
    "text": "want to change your working directory so it matches that commit that",
    "start": "2791119",
    "end": "2797200"
  },
  {
    "text": "snapshot and then you can say feature ADD test script and if you just did the",
    "start": "2797200",
    "end": "2803760"
  },
  {
    "text": "commit if you didn't do nothing else you know that's going to be one right which",
    "start": "2803760",
    "end": "2810559"
  },
  {
    "text": "is the previous entry so you reset that to the previous one and if I say get new",
    "start": "2810559",
    "end": "2815880"
  },
  {
    "text": "knew now I have my old B commit back so I effectively undid a",
    "start": "2815880",
    "end": "2822520"
  },
  {
    "text": "rebase now since we are doing so good on time I have some bonus",
    "start": "2822520",
    "end": "2829079"
  },
  {
    "text": "tips what if you don't know where to look in the ref log what if now there",
    "start": "2829720",
    "end": "2834920"
  },
  {
    "text": "are situations where you realize you want to undo a rebase or undo an operation but it's much later than you",
    "start": "2834920",
    "end": "2841440"
  },
  {
    "text": "actually happened how do you can you can you can you look for stuff in the ref log the",
    "start": "2841440",
    "end": "2848480"
  },
  {
    "text": "answer yes the the the way you do that of course you can use the pickaxe same",
    "start": "2848480",
    "end": "2855480"
  },
  {
    "text": "command that that you use to look in the history of your commits but you can use",
    "start": "2855480",
    "end": "2860720"
  },
  {
    "text": "the same command to look in the ref log instead so you can say git",
    "start": "2860720",
    "end": "2866200"
  },
  {
    "text": "log one line so in this case the pretty option doesn't work with the ref log so",
    "start": "2866200",
    "end": "2871520"
  },
  {
    "text": "know that if you're going to spelunk in the ref log you can use the cretive",
    "start": "2871520",
    "end": "2876640"
  },
  {
    "text": "option so you say log and then one line just print one line and then you can say",
    "start": "2876640",
    "end": "2881720"
  },
  {
    "text": "s for example so the pickaxe let's look for the commit that included the word",
    "start": "2881720",
    "end": "2888000"
  },
  {
    "text": "embarrassing with the one R however I don't want to look in the history I want to look in the ref log so I say walk ref",
    "start": "2888000",
    "end": "2896160"
  },
  {
    "text": "logs instead and now I get all the entries you see from The Ref log instead that",
    "start": "2896160",
    "end": "2902760"
  },
  {
    "text": "contain that word now what you also want to do is",
    "start": "2902760",
    "end": "2909000"
  },
  {
    "text": "that you only if you're going to reset your branch to something you better reset it to either a start of rebase or",
    "start": "2909000",
    "end": "2917839"
  },
  {
    "text": "even better to a commit so when you look in the ref log you want to find basically",
    "start": "2917839",
    "end": "2925359"
  },
  {
    "text": "commits so what can you do well you can take this output and pipe it to grab and",
    "start": "2925960",
    "end": "2932680"
  },
  {
    "text": "say I just want to filter commits okay and then of if the results are long",
    "start": "2932680",
    "end": "2940119"
  },
  {
    "text": "you want to be able to scroll up and down so you pipe it to less and then you just get the",
    "start": "2940119",
    "end": "2948480"
  },
  {
    "text": "commits that include that word so the embarrassing with one R now there is another thing now of",
    "start": "2948480",
    "end": "2955880"
  },
  {
    "text": "course you just get numbers here they might not tell you they tell you just how old this entry is but it not might",
    "start": "2955880",
    "end": "2963359"
  },
  {
    "text": "be helpful right okay this one is much older than this one but how do I know",
    "start": "2963359",
    "end": "2969079"
  },
  {
    "text": "which one I should reset to well another way to make it easier is that you can",
    "start": "2969079",
    "end": "2975079"
  },
  {
    "text": "include the date instead so here I add",
    "start": "2975079",
    "end": "2980240"
  },
  {
    "text": "the date option and I say local and now instead of the index I get the time",
    "start": "2980240",
    "end": "2987920"
  },
  {
    "text": "stamp of the commit so this information might be it",
    "start": "2987920",
    "end": "2993680"
  },
  {
    "text": "might be easier for you to find in the ref log that commit that include the line that you want to get back to in",
    "start": "2993680",
    "end": "3000920"
  },
  {
    "text": "your branch and if you don't want to reset your branch to that you can always create a new branch that points to that",
    "start": "3000920",
    "end": "3008160"
  },
  {
    "text": "commit so something that I do for example let me just grab one of those is",
    "start": "3008160",
    "end": "3013680"
  },
  {
    "text": "that if I find the commit that I interested in that yes that is the one I want to reset to I can grab the commit",
    "start": "3013680",
    "end": "3021440"
  },
  {
    "text": "hash and then I can just create a new branch called for example temp on that",
    "start": "3021440",
    "end": "3030200"
  },
  {
    "text": "commit and now I can just look at that commit so I create a new Branch that's",
    "start": "3030200",
    "end": "3036440"
  },
  {
    "text": "pointing in a commit that I found in the ref log now you might be wondering how long",
    "start": "3036440",
    "end": "3043000"
  },
  {
    "text": "are things kept around in the reflog they're not there forever by default they're going to be there for 90 days so",
    "start": "3043000",
    "end": "3050920"
  },
  {
    "text": "entries older than 90 days are going to fall off the reflog and then there is really nothing pointing to it because",
    "start": "3050920",
    "end": "3056960"
  },
  {
    "text": "the ref log is the last thing that points to a commit and once they fall out of the ref log they're going to be",
    "start": "3056960",
    "end": "3064200"
  },
  {
    "text": "you guessed it garbage collected because yes git has a garbage",
    "start": "3064200",
    "end": "3069559"
  },
  {
    "text": "collector which you can invoke by saying get GC another another little piece of",
    "start": "3069559",
    "end": "3075960"
  },
  {
    "text": "information for you but this that runs automatically in the background so you don't have to worry about",
    "start": "3075960",
    "end": "3082119"
  },
  {
    "text": "it okay so what we did is in this case we",
    "start": "3082119",
    "end": "3087200"
  },
  {
    "text": "reseted to a commit that we found in the ref log and we effectively undid AR",
    "start": "3087200",
    "end": "3095319"
  },
  {
    "text": "base all right last Gem and my favorite one",
    "start": "3095319",
    "end": "3101760"
  },
  {
    "text": "R do you know about r no one or right one okay I thought I",
    "start": "3101760",
    "end": "3109319"
  },
  {
    "text": "could get away with okay so I I count it as a no then",
    "start": "3109319",
    "end": "3118119"
  },
  {
    "text": "perfect perfect okay that's always that's my actually my favorite one R",
    "start": "3118119",
    "end": "3124079"
  },
  {
    "text": "what does it stand for can you guess now I already to move the slide it stand for reuse recorded",
    "start": "3124079",
    "end": "3131359"
  },
  {
    "text": "resolution makes sense so no commit uh merge merch conflicts are the fact of",
    "start": "3131359",
    "end": "3138079"
  },
  {
    "text": "life you're not escaping them unless you're working by yourself and even then you can get a merged conflict with",
    "start": "3138079",
    "end": "3143359"
  },
  {
    "text": "yourself it happened to me many times s so and have you ever been in a situation",
    "start": "3143359",
    "end": "3150040"
  },
  {
    "text": "where you have to resolve the same conflict many times has it happened yeah",
    "start": "3150040",
    "end": "3155920"
  },
  {
    "text": "now when does this happen well one situation where this happens is when you're are using a kind of workflow",
    "start": "3155920",
    "end": "3163400"
  },
  {
    "text": "which is called the test merge so let's say that you have are in a topic branch",
    "start": "3163400",
    "end": "3168480"
  },
  {
    "text": "which is long running you know you keep this pull request alive for a long time in the meantime the main branch is",
    "start": "3168480",
    "end": "3174880"
  },
  {
    "text": "moving along so if you don't want to fall behind too much which is always a good",
    "start": "3174880",
    "end": "3180680"
  },
  {
    "text": "idea to not wait too long before you merge otherwise you're going to have all the conflicts in the world is that you",
    "start": "3180680",
    "end": "3188200"
  },
  {
    "text": "regularly merge the main branch into your topic Branch now bear with me not",
    "start": "3188200",
    "end": "3194079"
  },
  {
    "text": "the other way around you merge main into your topic at regular intervals if main",
    "start": "3194079",
    "end": "3199839"
  },
  {
    "text": "is moving faster than a big team with lot of turn you do it maybe once a day when you do that merge you're going",
    "start": "3199839",
    "end": "3206799"
  },
  {
    "text": "to have a possibly conflict if you have R enabled you're going to resolve those",
    "start": "3206799",
    "end": "3214200"
  },
  {
    "text": "conflicts and G is going to remember how you resolve them and then you keep going with more commits and then you regularly",
    "start": "3214200",
    "end": "3220599"
  },
  {
    "text": "merge down now when you are done what you want to do is you rebase your topic",
    "start": "3220599",
    "end": "3226440"
  },
  {
    "text": "branch on top of main now this will get rid of all the merge commits because",
    "start": "3226440",
    "end": "3231920"
  },
  {
    "text": "rebase by default do does not preserve merge commits so all those merges are",
    "start": "3231920",
    "end": "3237200"
  },
  {
    "text": "gone however you're going to get all the conflicts again but since you use the Red AR those",
    "start": "3237200",
    "end": "3244960"
  },
  {
    "text": "will be automatically resolved okay so that is this workflow that I described for you is very useful in situations",
    "start": "3244960",
    "end": "3252000"
  },
  {
    "text": "where you have long running topic branches long running pool requests and a fast moving main branch regular merge",
    "start": "3252000",
    "end": "3260839"
  },
  {
    "text": "commits so how do you use it well the first thing you you need to do is enable it because of course it's",
    "start": "3260839",
    "end": "3268640"
  },
  {
    "text": "off by default and remember that of of course R",
    "start": "3268640",
    "end": "3274559"
  },
  {
    "text": "Works in recording only from the point when you enabled it so all the conflicts",
    "start": "3274559",
    "end": "3280880"
  },
  {
    "text": "that you resolved yesterday those are not recorded however there is a shell script",
    "start": "3280880",
    "end": "3287640"
  },
  {
    "text": "out on GitHub that tries to train the on Old merge conflicts but it's an um I",
    "start": "3287640",
    "end": "3295440"
  },
  {
    "text": "don't know just know that it works it works from when you enable",
    "start": "3295440",
    "end": "3301000"
  },
  {
    "text": "it R enabled config Global re re re",
    "start": "3301000",
    "end": "3306040"
  },
  {
    "text": "enabled true all right so now it's on now let's try we have this scenario",
    "start": "3306040",
    "end": "3313400"
  },
  {
    "text": "let's try to merge topic into main so let's switch back to main you see how fast it",
    "start": "3313400",
    "end": "3319799"
  },
  {
    "text": "is with the minus as long as you're bouncing between two Comm two branches",
    "start": "3319799",
    "end": "3326000"
  },
  {
    "text": "so let's switch to Main and let's merge the feature",
    "start": "3326000",
    "end": "3331640"
  },
  {
    "text": "Branch conflict yes it was planted so uh regular conflict however",
    "start": "3331640",
    "end": "3339880"
  },
  {
    "text": "you might notice there is a new line in the output recorded pre pre-image for",
    "start": "3339880",
    "end": "3347880"
  },
  {
    "text": "this file so Ray is active now how do you proceed you proceed by resolving the",
    "start": "3347880",
    "end": "3353960"
  },
  {
    "text": "conflict as you normally would no no questions there so the conflict is in",
    "start": "3353960",
    "end": "3360480"
  },
  {
    "text": "index of course it's over here we have two two versions you could",
    "start": "3360480",
    "end": "3366799"
  },
  {
    "text": "choose just one version of course of the other but I'm going to edit it manually let's get rid of this let's get rid of",
    "start": "3366799",
    "end": "3374079"
  },
  {
    "text": "that actually let's get rid of that and that so we basically want to",
    "start": "3374079",
    "end": "3381480"
  },
  {
    "text": "keep the version with the addends which is the one we want to keep so resolve",
    "start": "3381480",
    "end": "3387240"
  },
  {
    "text": "the conflict save and exit so now we add this to the index we",
    "start": "3387240",
    "end": "3395079"
  },
  {
    "text": "stage it which is telling it that yes I have resolved the conflict this version that I've have staged is the resolved",
    "start": "3395079",
    "end": "3403520"
  },
  {
    "text": "one and then I can say get merge",
    "start": "3403520",
    "end": "3408200"
  },
  {
    "text": "continue bam now I have resolved the conflict and notice here Rec ordered",
    "start": "3408559",
    "end": "3415559"
  },
  {
    "text": "resolution for this file",
    "start": "3415559",
    "end": "3421280"
  },
  {
    "text": "now let's say that we change our mind again and we want to rebase instead",
    "start": "3421280",
    "end": "3427599"
  },
  {
    "text": "instead of creating a merge committee we want to rebase so we are on the main branch",
    "start": "3427599",
    "end": "3433039"
  },
  {
    "text": "still let's undo the latest the latest uh commit by resetting to the previous",
    "start": "3433039",
    "end": "3439799"
  },
  {
    "text": "one no need to use the ref log in this case because I mean the commit is still there so I just reset to the previous",
    "start": "3439799",
    "end": "3446760"
  },
  {
    "text": "commit before the merge commit and now there is no",
    "start": "3446760",
    "end": "3452640"
  },
  {
    "text": "merge anymore now let's switch to",
    "start": "3452640",
    "end": "3457760"
  },
  {
    "text": "the to the topic branch and now let's do a rebase on top",
    "start": "3457760",
    "end": "3464760"
  },
  {
    "text": "of main instead okay now of course a rebase is still a formal merge however",
    "start": "3464760",
    "end": "3470559"
  },
  {
    "text": "instead of merging two commits you are applying one commit one at a",
    "start": "3470559",
    "end": "3475720"
  },
  {
    "text": "time but the conflicts if they're there you're still going to get them you're going to get them just at when when it",
    "start": "3475720",
    "end": "3481200"
  },
  {
    "text": "comes to that commit so of course they're going to get the same however you see here special",
    "start": "3481200",
    "end": "3489240"
  },
  {
    "text": "line resolved using previous",
    "start": "3489240",
    "end": "3494920"
  },
  {
    "text": "resolution now you might wonder why didn't it just do the thing why do I",
    "start": "3494920",
    "end": "3500480"
  },
  {
    "text": "have to look at it well because things change and a resol solution that you",
    "start": "3500480",
    "end": "3505920"
  },
  {
    "text": "applied earlier might not be valid now remember that you know these",
    "start": "3505920",
    "end": "3511280"
  },
  {
    "text": "resolutions have being recorded for long time so G gives you the chance to look at it and say hey I applied the solution",
    "start": "3511280",
    "end": "3519440"
  },
  {
    "text": "from earlier but does it still look good so in this case we just have to look at",
    "start": "3519440",
    "end": "3526319"
  },
  {
    "text": "the file and say yes it looks like the resolution we did",
    "start": "3526319",
    "end": "3532039"
  },
  {
    "text": "earlier it's using the addends now I might want to run some tests to see that it didn't break",
    "start": "3532039",
    "end": "3539640"
  },
  {
    "text": "anything yes works so now how do I tell that I want still want to keep that",
    "start": "3539640",
    "end": "3545440"
  },
  {
    "text": "resolution I just add it to the index now what if the solution is no",
    "start": "3545440",
    "end": "3552559"
  },
  {
    "text": "longer valid in that case I would say G re",
    "start": "3552559",
    "end": "3561480"
  },
  {
    "text": "forget index and then it's going to basically remove the previous resolution",
    "start": "3561480",
    "end": "3567559"
  },
  {
    "text": "for that file because the way R works is that it remembers based on the file path",
    "start": "3567559",
    "end": "3574760"
  },
  {
    "text": "if each side of the conflict looks exactly the same as when you resolved it",
    "start": "3574760",
    "end": "3580440"
  },
  {
    "text": "then it's going to apply the final file that you that you used and by saying",
    "start": "3580440",
    "end": "3586720"
  },
  {
    "text": "forget you're basically removing those files but in this case I just want to",
    "start": "3586720",
    "end": "3592599"
  },
  {
    "text": "add it and then then I say rebase continue and I'm done okay so that's the",
    "start": "3592599",
    "end": "3600280"
  },
  {
    "text": "essence of R let's wrap this up we have been",
    "start": "3600280",
    "end": "3606920"
  },
  {
    "text": "looking at nine gems why why nine because they fit pretty nicely as you'll see soon pretty logs use the pretty",
    "start": "3606920",
    "end": "3614520"
  },
  {
    "text": "option to customize the output over the log command and then write an alas so that you can use it",
    "start": "3614520",
    "end": "3621079"
  },
  {
    "text": "quickly pretty diffs use Delta uh to format the output of the diff",
    "start": "3621079",
    "end": "3628839"
  },
  {
    "text": "command so that you can have syntax highlighting and it's easier to navigate and it's you know better on the",
    "start": "3628839",
    "end": "3635799"
  },
  {
    "text": "eyes staging we have been looking at how to partially stage a file using the",
    "start": "3635799",
    "end": "3642359"
  },
  {
    "text": "patch option of git ad and then we also looked at how to use",
    "start": "3642359",
    "end": "3647720"
  },
  {
    "text": "the stash keep index command to isolate what you have staged so that you can",
    "start": "3647720",
    "end": "3653200"
  },
  {
    "text": "verify that it doesn't break the B build we looked at searching",
    "start": "3653200",
    "end": "3659160"
  },
  {
    "text": "pickax uh- s look find commit that either add or remove a line that matches",
    "start": "3659160",
    "end": "3665039"
  },
  {
    "text": "a pattern and by the way if you're into regular Expressions you can say Dash",
    "start": "3665039",
    "end": "3670160"
  },
  {
    "text": "capital G instead and then you can write a full R exp to find the match",
    "start": "3670160",
    "end": "3676760"
  },
  {
    "text": "matches uh we look at automation Auto",
    "start": "3676760",
    "end": "3682280"
  },
  {
    "text": "squash uh and auto stack Autos squash allows you to speed up the workflow where you amend the previous",
    "start": "3682280",
    "end": "3689799"
  },
  {
    "text": "commits by doing one single interactive rebase and auto stash you can do a",
    "start": "3689799",
    "end": "3695680"
  },
  {
    "text": "rebase even though you have changes in your working",
    "start": "3695680",
    "end": "3700680"
  },
  {
    "text": "directory the dot notation more specifically the dot dot notation to",
    "start": "3700839",
    "end": "3706000"
  },
  {
    "text": "compare branches what's in my current topic branch that is not in the main line and vice versa and have aliases for",
    "start": "3706000",
    "end": "3712680"
  },
  {
    "text": "those as well we looked at rebas onto how you",
    "start": "3712680",
    "end": "3718279"
  },
  {
    "text": "transport portion of a branch from one branch to another instead of",
    "start": "3718279",
    "end": "3724240"
  },
  {
    "text": "transporting the entire Branch so doing Branch surgery so to speak within",
    "start": "3724240",
    "end": "3729359"
  },
  {
    "text": "portions reased on two we looked at the ref log gets Universal undo",
    "start": "3729359",
    "end": "3736000"
  },
  {
    "text": "machine uh we can find commits that you thought were lost but they're still being referenced by the reflog and bonus",
    "start": "3736000",
    "end": "3742720"
  },
  {
    "text": "tip how to look for stuff in the ref log using the pickaxe and the walk ref logs",
    "start": "3742720",
    "end": "3749839"
  },
  {
    "text": "option and last but not least reuse recorded",
    "start": "3749839",
    "end": "3755720"
  },
  {
    "text": "resolutions now there is much more than this in git as you can imagine a lot",
    "start": "3755720",
    "end": "3761039"
  },
  {
    "text": "more so if you have plural site I have a course out called Advanced G tips and",
    "start": "3761039",
    "end": "3766960"
  },
  {
    "text": "tricks where you will find these things and much more stuff that g has inside",
    "start": "3766960",
    "end": "3773440"
  },
  {
    "text": "its inner work that can and will improve your daily workflow if you make them",
    "start": "3773440",
    "end": "3779160"
  },
  {
    "text": "part of your toolbox and with that thank",
    "start": "3779160",
    "end": "3785250"
  },
  {
    "text": "[Applause]",
    "start": "3785250",
    "end": "3791050"
  },
  {
    "text": "you",
    "start": "3800039",
    "end": "3803039"
  }
]