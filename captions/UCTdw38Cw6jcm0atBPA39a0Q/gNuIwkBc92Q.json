[
  {
    "text": "uh so first a bit about me uh I've got more than 10 years of experience of",
    "start": "0",
    "end": "6120"
  },
  {
    "text": "Consulting and working in identity I've done a lot of Consulting and open source work first on saml 2.",
    "start": "6120",
    "end": "13019"
  },
  {
    "text": "which is by the way a horrible protocol don't use it but I've used it a lot and I created a quite successful open source",
    "start": "13019",
    "end": "21060"
  },
  {
    "text": "packet for saml 2. so if you have to use Hamilton you can use my packages",
    "start": "21060",
    "end": "27019"
  },
  {
    "text": "and then I've been moving away over to Consulting and training on open ad connection Awards which are the",
    "start": "27019",
    "end": "33600"
  },
  {
    "text": "protocols you should use they are modern they work better they are more secure all of that",
    "start": "33600",
    "end": "39840"
  },
  {
    "text": "I work for doing the software nowadays the new home of identity server",
    "start": "39840",
    "end": "45320"
  },
  {
    "text": "but first start with some history so this timeline starts as 2005 with saml",
    "start": "45739",
    "end": "52379"
  },
  {
    "text": "2. which was groundbreaking because it was the first single sign-on and",
    "start": "52379",
    "end": "58020"
  },
  {
    "text": "Authentication Protocol that was built using web technology",
    "start": "58020",
    "end": "65158"
  },
  {
    "text": "we had single sign-on for web applications before that you remember Windows integrated authentication where",
    "start": "65159",
    "end": "72240"
  },
  {
    "text": "you could if you were in a corporate environment an internal website uh and you were a member of the active",
    "start": "72240",
    "end": "79860"
  },
  {
    "text": "directory or anti-domain even earlier then you were automatically signed in but that was not built using web",
    "start": "79860",
    "end": "87000"
  },
  {
    "text": "technology because that was based on the browser having an",
    "start": "87000",
    "end": "92939"
  },
  {
    "text": "Intel mv2 or Kerberos implementation in the browser but sample two",
    "start": "92939",
    "end": "99060"
  },
  {
    "text": "came up with this notion that why don't we just make things that looks like ordinary web",
    "start": "99060",
    "end": "105479"
  },
  {
    "text": "request to the browser when the user enters an application that",
    "start": "105479",
    "end": "111540"
  },
  {
    "text": "application redirects the user to an identity provider where they prove",
    "start": "111540",
    "end": "117180"
  },
  {
    "text": "their identity and then we get a proof or a token of who the user is back to",
    "start": "117180",
    "end": "122759"
  },
  {
    "text": "the application that the application can validate and consume",
    "start": "122759",
    "end": "128060"
  },
  {
    "text": "and all of this I mean 2005 what was the most modern technology for data",
    "start": "129060",
    "end": "134459"
  },
  {
    "text": "interchange XML so all of this was done in XML for soap",
    "start": "134459",
    "end": "139680"
  },
  {
    "text": "and signature XML digital signature standard which is an even more horrible standard the saml 2 itself",
    "start": "139680",
    "end": "147540"
  },
  {
    "text": "and just overly complicated but hey it was enterprising and soap",
    "start": "147540",
    "end": "153920"
  },
  {
    "text": "around at the same time the internet companies were growing and found out we",
    "start": "154220",
    "end": "160140"
  },
  {
    "text": "need a way to do single sign-on and to do API Security on the internet using",
    "start": "160140",
    "end": "168000"
  },
  {
    "text": "modern Technologies I mean Json JavaScript doing things in the browser these protocols XML style are run",
    "start": "168000",
    "end": "177120"
  },
  {
    "text": "on a server-side component it's nothing you want to implement in JavaScript",
    "start": "177120",
    "end": "182340"
  },
  {
    "text": "and it was never meant to while oauth was meant from the start to",
    "start": "182340",
    "end": "187920"
  },
  {
    "text": "be usable in the internet era unfortunately it was 1.0 was had some",
    "start": "187920",
    "end": "194099"
  },
  {
    "text": "drawbacks so it was just a few years later that it was two to zero came along",
    "start": "194099",
    "end": "199819"
  },
  {
    "text": "and that was groundbreaking and we are still using oauth 2.0 more than 10 years",
    "start": "199819",
    "end": "207000"
  },
  {
    "text": "later with the fundamentals unchanged which proves that this was a well-designed protocol",
    "start": "207000",
    "end": "213500"
  },
  {
    "text": "Wireless ml2 and W's Federation W's trust was this a design by committee",
    "start": "213500",
    "end": "219060"
  },
  {
    "text": "product I mean if when Reading Terminal 2's back it's clear that if there were two",
    "start": "219060",
    "end": "225000"
  },
  {
    "text": "opinions on how to use how to do something both were included as options in the spec",
    "start": "225000",
    "end": "231239"
  },
  {
    "text": "while in oval treatment reading that spec there is one way to do things and it's a simple way to do things",
    "start": "231239",
    "end": "238799"
  },
  {
    "text": "but it's still based on a thorough threat modeling contemporary security research a solid security modal so it",
    "start": "238799",
    "end": "246720"
  },
  {
    "text": "works then quite a few things happen and we are now a decade later coming to oauth",
    "start": "246720",
    "end": "252599"
  },
  {
    "text": "2.1 which is it is a software thing it should be have been released last year I",
    "start": "252599",
    "end": "257820"
  },
  {
    "text": "think it's still not released but it's coming any day probably and as it is a software thing we use",
    "start": "257820",
    "end": "265139"
  },
  {
    "text": "something that looks like semantic versioning 2.1 and that means it should just add a few",
    "start": "265139",
    "end": "271680"
  },
  {
    "text": "things right it doesn't it removes things as well but that is actually thing because",
    "start": "271680",
    "end": "278580"
  },
  {
    "text": "these all recommendations and additions and stuff that happened in between here",
    "start": "278580",
    "end": "283979"
  },
  {
    "text": "actually said that part of the oval to the zero spec part of the things we had here part of",
    "start": "283979",
    "end": "290940"
  },
  {
    "text": "the options turned out to be bad ideas so there are no recommendations on further specs that says don't use that",
    "start": "290940",
    "end": "296880"
  },
  {
    "text": "thing from the original spec or like they pick this pack use it but add this",
    "start": "296880",
    "end": "302699"
  },
  {
    "text": "thing as well and now in 2.1 the idea is to console the data to what we actually",
    "start": "302699",
    "end": "307979"
  },
  {
    "text": "do recommend right now it's a bit like these books I read the right one",
    "start": "307979",
    "end": "313320"
  },
  {
    "text": "I never got a run to read the left one I don't know if I should but this talk is very much like the",
    "start": "313320",
    "end": "320940"
  },
  {
    "text": "right one the JavaScript The Good Portal oh of the good parts the thing that you need in the most common setups in 95 99",
    "start": "320940",
    "end": "328500"
  },
  {
    "text": "of the cases the things I will be showing today will be the things that you will be using in real life scenarios",
    "start": "328500",
    "end": "335699"
  },
  {
    "text": "then if you're doing things like smart TVs or stuff you might need the other ones",
    "start": "335699",
    "end": "342680"
  },
  {
    "text": "so the agenda today is first an introduction to to why does a what exist what is the problem it solves what are",
    "start": "343259",
    "end": "350520"
  },
  {
    "text": "the protocol flows for typical application and some typical application architectures finally if you want to",
    "start": "350520",
    "end": "356400"
  },
  {
    "text": "make someone working in the identity space cringe a bit you say that login using evil 2.",
    "start": "356400",
    "end": "362039"
  },
  {
    "text": "so I will talk about why ovalt is not a user authentication mechanism and what",
    "start": "362039",
    "end": "367199"
  },
  {
    "text": "open ID connect is and finally transfer the reading so first why does oauth exist",
    "start": "367199",
    "end": "375780"
  },
  {
    "text": "well as I said Edwards versus born on the",
    "start": "375780",
    "end": "380820"
  },
  {
    "text": "internet we had soap we had W security Etc that were used to secure web",
    "start": "380820",
    "end": "386400"
  },
  {
    "text": "services and it was extremely complicated and if you had Tech Stacks",
    "start": "386400",
    "end": "391440"
  },
  {
    "text": "from different vendors they were probably not totally 100 compatible on the web we wanted to be able to call",
    "start": "391440",
    "end": "398280"
  },
  {
    "text": "http apis and a very simple way to secure an API",
    "start": "398280",
    "end": "404220"
  },
  {
    "text": "is to use an API key that is still commonly used isn't it but the API key is a password so what if",
    "start": "404220",
    "end": "411539"
  },
  {
    "text": "we want to to have the client application being able to call multiple different apis",
    "start": "411539",
    "end": "417600"
  },
  {
    "text": "then we are essentially reusing our password and that is something we should not do",
    "start": "417600",
    "end": "423960"
  },
  {
    "text": "we are also sending that API key along with every single request there is the risk that it gets logged in some",
    "start": "423960",
    "end": "433259"
  },
  {
    "text": "server-side logic error logs uh whatever so we maybe should be using something",
    "start": "433259",
    "end": "439560"
  },
  {
    "text": "that is a bit more short-lived and if it gets stolen it's not that bad",
    "start": "439560",
    "end": "446580"
  },
  {
    "text": "and that is a token and this is actually something that saml 2 a concept sample 2",
    "start": "446580",
    "end": "451800"
  },
  {
    "text": "got right mostly at least the basic ideas of salmon token is right is token contains",
    "start": "451800",
    "end": "458400"
  },
  {
    "text": "an issue in the signature who said this about the user who vouches for this user",
    "start": "458400",
    "end": "465840"
  },
  {
    "text": "and there's a digital signature in here to prove that this token was actually",
    "start": "465840",
    "end": "471180"
  },
  {
    "text": "issued but by that issue and has not been tampered with since there's a Time window for how long is",
    "start": "471180",
    "end": "478259"
  },
  {
    "text": "this token valid uh there is scoping meaning that this token is not valid everywhere",
    "start": "478259",
    "end": "485819"
  },
  {
    "text": "it's valid for specific apis this is an important security feature",
    "start": "485819",
    "end": "491940"
  },
  {
    "text": "because if I if I am implementing a low security API and I get an access token",
    "start": "491940",
    "end": "497819"
  },
  {
    "text": "sent to my API from the user without scoping I could take that token",
    "start": "497819",
    "end": "504360"
  },
  {
    "text": "turn around and call a high security API over there and do something bad but thanks to scoping",
    "start": "504360",
    "end": "510960"
  },
  {
    "text": "the token I receive is only valid at my API I cannot turn it around and call",
    "start": "510960",
    "end": "516479"
  },
  {
    "text": "another API so if you have different producers different teams of different companies producing apis you definitely",
    "start": "516479",
    "end": "523140"
  },
  {
    "text": "do want to have separate scopes for them and ensure that they cannot",
    "start": "523140",
    "end": "529200"
  },
  {
    "text": "do a cross API attack or request",
    "start": "529200",
    "end": "533899"
  },
  {
    "text": "we have some information about authentication how was the authentication done in this case password",
    "start": "534480",
    "end": "539880"
  },
  {
    "text": "which um it's the normal thing but it could also indicate we have a two-factor",
    "start": "539880",
    "end": "546120"
  },
  {
    "text": "authentication maybe it's Banky there here in Norway or something like that and that is something that the API can",
    "start": "546120",
    "end": "552180"
  },
  {
    "text": "use to decide to give access so it might be that we have an access token saying that you are the right person it's an",
    "start": "552180",
    "end": "558120"
  },
  {
    "text": "access token from the right issuer it has the right scope it's the value valid time but this part of the API actually",
    "start": "558120",
    "end": "564959"
  },
  {
    "text": "requires a stronger authentication than you use to sign in and finally claims just key value pairs",
    "start": "564959",
    "end": "573180"
  },
  {
    "text": "and a flexible way to just convey whatever information the API might need",
    "start": "573180",
    "end": "580700"
  },
  {
    "text": "and this was great on working as long as we had at the Enterprise E architecture",
    "start": "586320",
    "end": "593940"
  },
  {
    "text": "where the uh well typically the",
    "start": "593940",
    "end": "600440"
  },
  {
    "text": "apis declined application and the authorization server all belong to the same organization",
    "start": "600440",
    "end": "607519"
  },
  {
    "text": "but nowadays if for example if I invent this perfect Google widget that makes",
    "start": "607620",
    "end": "613920"
  },
  {
    "text": "you all never become late be late again to any meeting so this is nice widgets that everybody",
    "start": "613920",
    "end": "620040"
  },
  {
    "text": "would like to use I create that widget so it can be usable with Google Calendar",
    "start": "620040",
    "end": "625800"
  },
  {
    "text": "but I'm not affiliated with Google it's you that found my widget and I have that widget running on some service and then",
    "start": "625800",
    "end": "633420"
  },
  {
    "text": "I want to be able to call or we do both want that my widget is able to call the",
    "start": "633420",
    "end": "638760"
  },
  {
    "text": "Google API on your behalf and uh simultaneous trust was really never",
    "start": "638760",
    "end": "644579"
  },
  {
    "text": "designed around this but over the boss so oauth has this concept of",
    "start": "644579",
    "end": "650399"
  },
  {
    "text": "a resource server or that is an API but I'm here now I'm using the terminology",
    "start": "650399",
    "end": "656519"
  },
  {
    "text": "that you would find in the Airwolf spec so if you read the oauth spec you will recognize this some products",
    "start": "656519",
    "end": "664260"
  },
  {
    "text": "use this terminology as well some other products would call this an API or whatever in oauth the resource server",
    "start": "664260",
    "end": "672920"
  },
  {
    "text": "has do trust the authorization server this is really the only trust things two",
    "start": "672920",
    "end": "679260"
  },
  {
    "text": "things that trust each other and the authorization service role is to",
    "start": "679260",
    "end": "684360"
  },
  {
    "text": "decide if a client application is authorized to use a specific resource or",
    "start": "684360",
    "end": "689700"
  },
  {
    "text": "API then we have clients it could be a browser-based single page",
    "start": "689700",
    "end": "694920"
  },
  {
    "text": "application it could be a mobile app or some server-side thing a server-side thing could be a machine to machine",
    "start": "694920",
    "end": "702720"
  },
  {
    "text": "communication or it could be a server-side web application",
    "start": "702720",
    "end": "708120"
  },
  {
    "text": "we differentiate these between public and confidential clients and this is a very important security distinction",
    "start": "708120",
    "end": "715320"
  },
  {
    "text": "if we start with the server if you have something running on a server in your data center under your control you can",
    "start": "715320",
    "end": "722040"
  },
  {
    "text": "keep Secret on there you can put in a client secret that is a password or a private key for",
    "start": "722040",
    "end": "728880"
  },
  {
    "text": "a certificate in the config and it stays on the server and is secure",
    "start": "728880",
    "end": "733980"
  },
  {
    "text": "but if you have the client application actually running as a single page application in the browser anyone who",
    "start": "733980",
    "end": "740700"
  },
  {
    "text": "knows how to open the browser Dev tools can get uh the information out",
    "start": "740700",
    "end": "747259"
  },
  {
    "text": "and the mobile app the same it runs on the device under the control of the user it's downloaded publicly downloaded from",
    "start": "748980",
    "end": "756360"
  },
  {
    "text": "the App Stores Etc so we cannot put secrecy in there",
    "start": "756360",
    "end": "761579"
  },
  {
    "text": "but these are the apps then we also have the resource owners or as we usually refer to them users",
    "start": "761579",
    "end": "769260"
  },
  {
    "text": "but in the oboath terminology they are resource owners",
    "start": "769260",
    "end": "775019"
  },
  {
    "text": "and that Works quite right I mean what it's about protecting the resource the resource",
    "start": "775019",
    "end": "781019"
  },
  {
    "text": "here is my Google Calendar and I own the information in my Google Calendar",
    "start": "781019",
    "end": "787940"
  },
  {
    "text": "the basic flow is that we do an authorizer token request to the",
    "start": "789300",
    "end": "796200"
  },
  {
    "text": "authorization server we get an access token back and then we use our access",
    "start": "796200",
    "end": "801480"
  },
  {
    "text": "token to access the resource",
    "start": "801480",
    "end": "806060"
  },
  {
    "text": "when we do the call with the authorization server we probably authenticate using for example a password a Long Live password but the",
    "start": "806760",
    "end": "814019"
  },
  {
    "text": "idea here is that the password is only ended on the authorization server we do",
    "start": "814019",
    "end": "819360"
  },
  {
    "text": "not send our passwords to all the apis or resources and also the password is only used in a",
    "start": "819360",
    "end": "827940"
  },
  {
    "text": "very specific request we are not using and exposing the password for risk of",
    "start": "827940",
    "end": "833399"
  },
  {
    "text": "being intercepted in by being sent along in every request",
    "start": "833399",
    "end": "840199"
  },
  {
    "text": "foreign request we also need to send in a scope",
    "start": "841139",
    "end": "846480"
  },
  {
    "text": "parameter to ask about what apis are we trying to reach",
    "start": "846480",
    "end": "853940"
  },
  {
    "text": "in the case of the Google Calendar I should probably also read access to",
    "start": "854459",
    "end": "859560"
  },
  {
    "text": "your Google calendar I should not ask for a scope that gives me right to send gmails on your behalf",
    "start": "859560",
    "end": "866579"
  },
  {
    "text": "that's probably wrong for Google Calendar widget we can look at some real life examples",
    "start": "866579",
    "end": "872100"
  },
  {
    "text": "of GitHub Scopes and they actually have a quite decent scope architecture we have for example user",
    "start": "872100",
    "end": "879300"
  },
  {
    "text": "which is a master remaster or main access to the user",
    "start": "879300",
    "end": "886440"
  },
  {
    "text": "information and then we have some more fine-grained Scopes if we just want to use a subset that is good because if I",
    "start": "886440",
    "end": "893639"
  },
  {
    "text": "want it all I do not have to repeat all of these but I can just refer to this this slide is also a great proof that",
    "start": "893639",
    "end": "900180"
  },
  {
    "text": "naming is hard is what is the name standard here is it object colon action or action Covenant",
    "start": "900180",
    "end": "906899"
  },
  {
    "text": "object or underscore it's Reaper underscore deployment but",
    "start": "906899",
    "end": "912899"
  },
  {
    "text": "Reaper colon status so while it works but",
    "start": "912899",
    "end": "918720"
  },
  {
    "text": "naming is hard Google is a big company they take naming very seriously and",
    "start": "918720",
    "end": "924959"
  },
  {
    "text": "probably had some someone with experience back from the XML days because all of their Scopes are urls",
    "start": "924959",
    "end": "931620"
  },
  {
    "text": "that day your url doesn't matter from the oval perspective it's just",
    "start": "931620",
    "end": "937320"
  },
  {
    "text": "string without spaces that happens to be a URL but here we are using a registered",
    "start": "937320",
    "end": "943680"
  },
  {
    "text": "domain to ensure uniqueness and we are using parts and probably this gives you",
    "start": "943680",
    "end": "949260"
  },
  {
    "text": "kind of a namespace where you as a team of Google you're probably assigned a namespace slash auth",
    "start": "949260",
    "end": "957000"
  },
  {
    "text": "Gmail and then you can put whatever you want after that",
    "start": "957000",
    "end": "961880"
  },
  {
    "text": "so that are the basic terminology all the two how to use it and the two protocol flows remember there are a",
    "start": "967079",
    "end": "973500"
  },
  {
    "text": "bunch of different flows in that large complete reference but the good part we",
    "start": "973500",
    "end": "978660"
  },
  {
    "text": "are only using two flows the first flow I want to talk about is client credential flows and this is for",
    "start": "978660",
    "end": "985199"
  },
  {
    "text": "machine to machine communication there is no human being or interactive user",
    "start": "985199",
    "end": "990240"
  },
  {
    "text": "present or if there is we don't care who it is we only authenticate the client",
    "start": "990240",
    "end": "996839"
  },
  {
    "text": "application we know who the what client application is making the call",
    "start": "996839",
    "end": "1003500"
  },
  {
    "text": "the protocol flow is extremely simple uh we make a post request to the Token",
    "start": "1003500",
    "end": "1009440"
  },
  {
    "text": "endpoint on the authorization server we get a response back with the token",
    "start": "1009440",
    "end": "1014720"
  },
  {
    "text": "and then we can call the apis using that let's have a look at the token",
    "start": "1014720",
    "end": "1019820"
  },
  {
    "text": "uh the token is a Json web token typically uh button",
    "start": "1019820",
    "end": "1027140"
  },
  {
    "text": "as I will soon get to it not always but typically it is um",
    "start": "1027140",
    "end": "1033740"
  },
  {
    "text": "it contains the same elements that we had in our salmon token we reviewed",
    "start": "1033740",
    "end": "1039438"
  },
  {
    "text": "earlier issue and signature we have the this is non-happy we had the",
    "start": "1039439",
    "end": "1045079"
  },
  {
    "text": "issue over here we have a signature at the end we have a time-winded the IAT is issued",
    "start": "1045079",
    "end": "1054080"
  },
  {
    "text": "at an exp expiry and those are Unix timestamps which indicates the validity",
    "start": "1054080",
    "end": "1059720"
  },
  {
    "text": "period we have the scope this token is valid for API one and we know the client ID",
    "start": "1059720",
    "end": "1065559"
  },
  {
    "text": "that is really the only information we get about the caller for a chronic",
    "start": "1065559",
    "end": "1071299"
  },
  {
    "text": "credential token because we do not have any user to describe the presence we just know it's what client it is",
    "start": "1071299",
    "end": "1077539"
  },
  {
    "text": "when we want to use this token we transmit it via the authorization header and called the API",
    "start": "1077539",
    "end": "1085460"
  },
  {
    "text": "so some token processing rules remember that I said that in this in oauth the only part that",
    "start": "1085460",
    "end": "1092299"
  },
  {
    "text": "really trust each other and have a intimate relationship is the API and the",
    "start": "1092299",
    "end": "1097400"
  },
  {
    "text": "authorization server and access token format is a private implementation of detail between those",
    "start": "1097400",
    "end": "1103580"
  },
  {
    "text": "so if you are looking at the oauth 2 spec it says nothing about the",
    "start": "1103580",
    "end": "1108679"
  },
  {
    "text": "authentication the format of the tokens so actually at least a few years ago if",
    "start": "1108679",
    "end": "1114260"
  },
  {
    "text": "you signed into Azure ID and got an access token to call the marks of graph apis that was not a jot it was a",
    "start": "1114260",
    "end": "1121940"
  },
  {
    "text": "proprietor token format from Microsoft that you could I don't know how to decode it but it doesn't matter because",
    "start": "1121940",
    "end": "1127700"
  },
  {
    "text": "I should not as a client I just forwarded it to the Microsoft graph API",
    "start": "1127700",
    "end": "1134120"
  },
  {
    "text": "Azure radius per can perfectly issue George tokens as well if you have third party apis because if you produce the",
    "start": "1134120",
    "end": "1140900"
  },
  {
    "text": "API you definitely do want to know what the token format is because you are about to consume it",
    "start": "1140900",
    "end": "1146419"
  },
  {
    "text": "if you're an API and want to process the token validate it there are some validation rules you must validate the",
    "start": "1146419",
    "end": "1153380"
  },
  {
    "text": "signature and you must also validate the signature algorithm is valid in the spec",
    "start": "1153380",
    "end": "1159320"
  },
  {
    "text": "there is actually a signature algorithm called none",
    "start": "1159320",
    "end": "1164620"
  },
  {
    "text": "and it was the idea was to use it for scenarios or flows where a signature is",
    "start": "1164960",
    "end": "1170360"
  },
  {
    "text": "not needed or for testing purposes but it turned out that there was an ERA",
    "start": "1170360",
    "end": "1176360"
  },
  {
    "text": "where there were quite a few implementations that didn't that just checked that there is a signature with",
    "start": "1176360",
    "end": "1182240"
  },
  {
    "text": "an algorithm and they allowed signature algorithm none which is of course totally unsecure",
    "start": "1182240",
    "end": "1188900"
  },
  {
    "text": "you must check that the type is 80 plus JWT and access token in jail format the",
    "start": "1188900",
    "end": "1194419"
  },
  {
    "text": "issue must be an expected value and why do we need to check the issue for an expected value if we also check",
    "start": "1194419",
    "end": "1201679"
  },
  {
    "text": "the signature while indicating for multi-tenancies such as Azure ID",
    "start": "1201679",
    "end": "1208000"
  },
  {
    "text": "each tenant Azure ad tenant gets their own issuer but Azure ID has a common set",
    "start": "1208000",
    "end": "1215000"
  },
  {
    "text": "of signature keys so the signature might look might",
    "start": "1215000",
    "end": "1220580"
  },
  {
    "text": "validate but it turns out it was not my Azure ID tenant that he issued it but",
    "start": "1220580",
    "end": "1225980"
  },
  {
    "text": "someone else is actually radio tenant the current time must fit and this scope",
    "start": "1225980",
    "end": "1231200"
  },
  {
    "text": "must be an expected value so I'm not access accepting access token that was that were meant for another API",
    "start": "1231200",
    "end": "1239260"
  },
  {
    "text": "so let's take an example uh",
    "start": "1241039",
    "end": "1245799"
  },
  {
    "text": "I'm too lazy to do so this is an example where I'm a simple console application",
    "start": "1246559",
    "end": "1253400"
  },
  {
    "text": "where I'm first using uh identity an identity model library to request client",
    "start": "1253400",
    "end": "1260539"
  },
  {
    "text": "token from the token endpoint I have a client",
    "start": "1260539",
    "end": "1266000"
  },
  {
    "text": "ID this is console a client secret this which is secret and uh the scope I want",
    "start": "1266000",
    "end": "1272000"
  },
  {
    "text": "to use and then I print out that and then I then I also call use it to let's see",
    "start": "1272000",
    "end": "1278480"
  },
  {
    "text": "here I uh I do call uh an API and attach it as",
    "start": "1278480",
    "end": "1286340"
  },
  {
    "text": "a bearer token to the outbound API call a typical flow",
    "start": "1286340",
    "end": "1293480"
  },
  {
    "text": "and um it's a.net run",
    "start": "1293480",
    "end": "1299559"
  },
  {
    "text": "we can see the token response for 200 we got this G this Json back with the access token the thing that is good to",
    "start": "1300320",
    "end": "1308059"
  },
  {
    "text": "notice that if you take Json and base UTF encoded then base64 encoded it",
    "start": "1308059",
    "end": "1315620"
  },
  {
    "text": "always starts with e y capital j so whenever you're working with this if",
    "start": "1315620",
    "end": "1321020"
  },
  {
    "text": "you see these letters e y capital J it is definitely JS basically for encoded",
    "start": "1321020",
    "end": "1327679"
  },
  {
    "text": "Json and probably a token so one of these things just to scan for",
    "start": "1327679",
    "end": "1333919"
  },
  {
    "text": "in when you are trying to find out in local storage or",
    "start": "1333919",
    "end": "1339559"
  },
  {
    "text": "whatever to see what data is here remember that the token has an expiry",
    "start": "1339559",
    "end": "1346700"
  },
  {
    "text": "time built in but as a client application I am not allowed to inspect the token to find",
    "start": "1346700",
    "end": "1352280"
  },
  {
    "text": "that expiry time so I also get the expires in in the response because this",
    "start": "1352280",
    "end": "1357559"
  },
  {
    "text": "is for me to consume also the token type era and scope API 2 that this is for API",
    "start": "1357559",
    "end": "1363860"
  },
  {
    "text": "2. once more the scope is of course not covered in the token but I am not allowed as a client to in inspect the",
    "start": "1363860",
    "end": "1371659"
  },
  {
    "text": "token and then I'm calling an API this API actually just returns hello API and",
    "start": "1371659",
    "end": "1377179"
  },
  {
    "text": "writes out the claims it forms in the token um",
    "start": "1377179",
    "end": "1382880"
  },
  {
    "text": "but I want to we can take the time to just I'll just switch screen sharing here",
    "start": "1382880",
    "end": "1390400"
  },
  {
    "text": "to",
    "start": "1390440",
    "end": "1392740"
  },
  {
    "text": "duplicate uh I just want to show you how you can decode the code so if I have the",
    "start": "1397700",
    "end": "1403580"
  },
  {
    "text": "token here if I select it it's up to here right and then I'm going for a browser we have",
    "start": "1403580",
    "end": "1411679"
  },
  {
    "text": "a browser uh here we can take a browser jot dot IO",
    "start": "1411679",
    "end": "1417020"
  },
  {
    "text": "is an excellent online tool",
    "start": "1417020",
    "end": "1420400"
  },
  {
    "text": "I can go here paste it and we can see that this was the actual token I got",
    "start": "1423799",
    "end": "1431179"
  },
  {
    "text": "the header with an algorithm type is correct 80 plus WT issuer I'm running my",
    "start": "1431179",
    "end": "1437840"
  },
  {
    "text": "ident server localhost 5000 50001 and scope so there are available to just a simple",
    "start": "1437840",
    "end": "1445520"
  },
  {
    "text": "inspect it so next time you want to try to find out when you expect an application and check the local storage",
    "start": "1445520",
    "end": "1452000"
  },
  {
    "text": "contents if you see ey as the starting string go to jaw to dial",
    "start": "1452000",
    "end": "1457100"
  },
  {
    "text": "and see if it is a token that you could actually use",
    "start": "1457100",
    "end": "1461559"
  },
  {
    "text": "um okay that was a very quick demo but you had a demo and I want of course to",
    "start": "1462919",
    "end": "1468799"
  },
  {
    "text": "extend once more when I'm on here",
    "start": "1468799",
    "end": "1473139"
  },
  {
    "text": "so that is using the token but remember the lifetime token fairly short",
    "start": "1475159",
    "end": "1480620"
  },
  {
    "text": "and to handle that what happened uh",
    "start": "1480620",
    "end": "1487400"
  },
  {
    "text": "I want to extend and I'd never knew that that if you use",
    "start": "1487400",
    "end": "1493220"
  },
  {
    "text": "the clicky to point on that selection screen it actually is flipped to the settings",
    "start": "1493220",
    "end": "1498700"
  },
  {
    "text": "so let's see if I can use the click in now yes uh",
    "start": "1498860",
    "end": "1504860"
  },
  {
    "text": "so just background four one versus four or three we all have this nice hoodies with",
    "start": "1504860",
    "end": "1510500"
  },
  {
    "text": "the 401 on the back it means we don't know don't know who",
    "start": "1510500",
    "end": "1515539"
  },
  {
    "text": "you are but we have 403 Forbidden which means we",
    "start": "1515539",
    "end": "1520640"
  },
  {
    "text": "know perfectly well who you are but you're not allowed to enter here",
    "start": "1520640",
    "end": "1526000"
  },
  {
    "text": "and we can actually use that for token management so if we have a token that is valid for one hour",
    "start": "1526940",
    "end": "1532700"
  },
  {
    "text": "one way is to keep track of that expiry return we got and renew ahead of time the other one is to use the token and as",
    "start": "1532700",
    "end": "1540440"
  },
  {
    "text": "long as it works it works and then if we get a 401 back it means that",
    "start": "1540440",
    "end": "1546980"
  },
  {
    "text": "the API no longer accepts my token it used to accept it right up until right",
    "start": "1546980",
    "end": "1552919"
  },
  {
    "text": "five seconds ago but now it doesn't that probably means it's expired and if",
    "start": "1552919",
    "end": "1558440"
  },
  {
    "text": "you have resent some mechanism already in your API you might as well get a new",
    "start": "1558440",
    "end": "1563960"
  },
  {
    "text": "honor 401 you might as well get a new token and um",
    "start": "1563960",
    "end": "1569539"
  },
  {
    "text": "retry the request my personal gut feeling is that I think",
    "start": "1569539",
    "end": "1577400"
  },
  {
    "text": "proactive is a bit more elegant that we shouldn't try something we should keep track of the timing but both works",
    "start": "1577400",
    "end": "1585820"
  },
  {
    "text": "and to get a new token I mean this is a machine we can just tell it to go to the Token endpoint once more just repeat the",
    "start": "1585980",
    "end": "1592640"
  },
  {
    "text": "same flow to give the token again but that's quite boring uh",
    "start": "1592640",
    "end": "1598400"
  },
  {
    "text": "what we actually what is actually more a bit more useful probably is interactive applications and and to be honest uh",
    "start": "1598400",
    "end": "1606260"
  },
  {
    "text": "client credential flows if you have an API set up in an API space that is only",
    "start": "1606260",
    "end": "1611900"
  },
  {
    "text": "called by other machines and it's a small scale where it's just one API most people just use API keys",
    "start": "1611900",
    "end": "1620480"
  },
  {
    "text": "and that's fine credential flows are usually used where",
    "start": "1620480",
    "end": "1626059"
  },
  {
    "text": "you have apis that are both called in the machine to machine scenario and in an interactive user context and you want",
    "start": "1626059",
    "end": "1631580"
  },
  {
    "text": "a unified security model where you just use access tokens for All Access Control",
    "start": "1631580",
    "end": "1639080"
  },
  {
    "text": "so an interactive application is designed to incorporate a user and we need a way to",
    "start": "1639080",
    "end": "1647059"
  },
  {
    "text": "get new tokens so while the client credential application",
    "start": "1647059",
    "end": "1653000"
  },
  {
    "text": "we could just tell it that okay after now we go essentially log in again because it's a machine we can tell it to",
    "start": "1653000",
    "end": "1658880"
  },
  {
    "text": "do that but if you have an interactive application if you offer one hour pop up a message",
    "start": "1658880",
    "end": "1664520"
  },
  {
    "text": "to the user saying sorry you are logged your access token expired anything you",
    "start": "1664520",
    "end": "1669620"
  },
  {
    "text": "didn't save is now lost to continue please give login again and you will get another hour",
    "start": "1669620",
    "end": "1676039"
  },
  {
    "text": "that is not a great user experience right so we need something that enables",
    "start": "1676039",
    "end": "1681200"
  },
  {
    "text": "the application to renew access token in the background just an overview of the protocol is that",
    "start": "1681200",
    "end": "1688340"
  },
  {
    "text": "we have once more this too late thing thing where we have a front Channel request the browser",
    "start": "1688340",
    "end": "1695059"
  },
  {
    "text": "redirects the user to the authorization server and all the interaction happens on the authorization server",
    "start": "1695059",
    "end": "1702440"
  },
  {
    "text": "we get the response back and there's a back Channel interaction where the",
    "start": "1702440",
    "end": "1708380"
  },
  {
    "text": "client application authenticates itself and proves it the right valid client",
    "start": "1708380",
    "end": "1714200"
  },
  {
    "text": "application and retrieves the access token this also enables us to keep the access",
    "start": "1714200",
    "end": "1719900"
  },
  {
    "text": "for server-side application confidential client remember it means we are able to keep the access",
    "start": "1719900",
    "end": "1726500"
  },
  {
    "text": "token out of the browser the user will never see the access token",
    "start": "1726500",
    "end": "1731960"
  },
  {
    "text": "passing by thanks to this back Channel call front Channel request",
    "start": "1731960",
    "end": "1737000"
  },
  {
    "text": "when we do that we need to tell the authorization server quite a few things about decline duplication and why to",
    "start": "1737000",
    "end": "1743360"
  },
  {
    "text": "redirect back Etc just I'm coming from the sample 2 background in Sample 2 everything where",
    "start": "1743360",
    "end": "1750559"
  },
  {
    "text": "XML so of course this request Ensemble 2 was XML and then it turned out that sending",
    "start": "1750559",
    "end": "1757159"
  },
  {
    "text": "XML as a query string parm is a bad idea so the basics before encoded it uh and it turned out that XML is extremely",
    "start": "1757159",
    "end": "1763580"
  },
  {
    "text": "chatty so it turned out to be too large for query string part so they decided that let's UTF encode it deflate",
    "start": "1763580",
    "end": "1770600"
  },
  {
    "text": "compress it then base64 and code the result and put that in the query string",
    "start": "1770600",
    "end": "1777039"
  },
  {
    "text": "when Earth came along it was the oauth artist sat down and thought well they",
    "start": "1777200",
    "end": "1783320"
  },
  {
    "text": "obviously started the saml 2 standard because that was an existing thing that worked and they tried to pick the good",
    "start": "1783320",
    "end": "1788960"
  },
  {
    "text": "parts but not repeated bad parts so they sat down and thought okay we need to convey a bunch of parameters across a",
    "start": "1788960",
    "end": "1795200"
  },
  {
    "text": "redirect is there anything but into HTTP that we can use to just send a few parameters we could do Json right we",
    "start": "1795200",
    "end": "1802820"
  },
  {
    "text": "could do deflated XML or we could just use a query string parameters",
    "start": "1802820",
    "end": "1808940"
  },
  {
    "text": "and just send the parameters to square string items what we have here is the client ID where it says who is the",
    "start": "1808940",
    "end": "1815720"
  },
  {
    "text": "client the redirect URI why do we want the response when we read write back",
    "start": "1815720",
    "end": "1821240"
  },
  {
    "text": "response type equals code that is selecting the authorization code",
    "start": "1821240",
    "end": "1827240"
  },
  {
    "text": "flow and state which is some state of the client",
    "start": "1827240",
    "end": "1832399"
  },
  {
    "text": "that is secured back and also code challenge I will talk a bit later on on",
    "start": "1832399",
    "end": "1838700"
  },
  {
    "text": "that uh then when we are at the server we have",
    "start": "1838700",
    "end": "1843740"
  },
  {
    "text": "user Authentication where this happens on the web and it is a web",
    "start": "1843740",
    "end": "1851419"
  },
  {
    "text": "page that is under control from the authorization server",
    "start": "1851419",
    "end": "1857240"
  },
  {
    "text": "that means that the client application has no idea how the user is authenticated what authentication means",
    "start": "1857240",
    "end": "1863360"
  },
  {
    "text": "if we have a centralized authorization server and we want a new add a new authentication method",
    "start": "1863360",
    "end": "1869120"
  },
  {
    "text": "we do it at the authorization survey we do not have to update all our clients",
    "start": "1869120",
    "end": "1874880"
  },
  {
    "text": "it could be username password an external account mobile or bank ID whatever",
    "start": "1874880",
    "end": "1881260"
  },
  {
    "text": "if we are in a corporate setup we are probably done here but if we are on the internet with this calendar widget which",
    "start": "1883100",
    "end": "1890600"
  },
  {
    "text": "is a third part application we probably have a consent screen as well because you as a user has a say",
    "start": "1890600",
    "end": "1897980"
  },
  {
    "text": "what do you want to let this client application do what apis",
    "start": "1897980",
    "end": "1903620"
  },
  {
    "text": "do you let this client API access and in the end how many of you actually",
    "start": "1903620",
    "end": "1910580"
  },
  {
    "text": "do read these consent screens before clicking ok well half the room that's great",
    "start": "1910580",
    "end": "1918500"
  },
  {
    "text": "well let me tell you how many of you have someone you know who had their Facebook account hacked and who created",
    "start": "1918500",
    "end": "1925520"
  },
  {
    "text": "a new Facebook account was there Facebook account hacked",
    "start": "1925520",
    "end": "1930980"
  },
  {
    "text": "nope they used their Facebook account to log into some shady Lottery scam",
    "start": "1930980",
    "end": "1937100"
  },
  {
    "text": "whatever and they didn't read the consent screen and they gave that Shadyside consent to",
    "start": "1937100",
    "end": "1943399"
  },
  {
    "text": "post to that timeline so in a moment we will get back to how",
    "start": "1943399",
    "end": "1948919"
  },
  {
    "text": "to un help your family to unhack their Facebook accounts instead of creating a",
    "start": "1948919",
    "end": "1954320"
  },
  {
    "text": "new account the next time but first of all more datas once we are",
    "start": "1954320",
    "end": "1960620"
  },
  {
    "text": "opposed that consent part we have the response which is a code essentially",
    "start": "1960620",
    "end": "1966140"
  },
  {
    "text": "handle or a reference to the authentication that just happened and the state to say goodbye",
    "start": "1966140",
    "end": "1972260"
  },
  {
    "text": "then we have the back Channel request to the Token endpoint with the code the",
    "start": "1972260",
    "end": "1978919"
  },
  {
    "text": "redirect URI authorization the Tok the client application sensor long is client",
    "start": "1978919",
    "end": "1984320"
  },
  {
    "text": "credentials the basic authentication to prove it's the right one or in case it's a public client it sends",
    "start": "1984320",
    "end": "1991700"
  },
  {
    "text": "alongs the code verifier which is kind of a temporary password that the client",
    "start": "1991700",
    "end": "1998059"
  },
  {
    "text": "created just for this request and that is a mechanism that was",
    "start": "1998059",
    "end": "2003700"
  },
  {
    "text": "introduced for mobile phone applications where on a mobile phone the redirect app",
    "start": "2003700",
    "end": "2009340"
  },
  {
    "text": "is back to a claimed URL which opens an app there is no central registry for these custom schemes so the Rogue app",
    "start": "2009340",
    "end": "2016179"
  },
  {
    "text": "could register the callbacks URL of a legitimate app and steal the code",
    "start": "2016179",
    "end": "2023519"
  },
  {
    "text": "but with code verifier it means that to redeem the code you need to have the",
    "start": "2023519",
    "end": "2029620"
  },
  {
    "text": "code verifier which is a one-time password the client application came up with but how does the authorization",
    "start": "2029620",
    "end": "2036279"
  },
  {
    "text": "server validate the verifier well let's go back to the front Channel request",
    "start": "2036279",
    "end": "2043679"
  },
  {
    "text": "because in the original request the client sent along the hash of the verifier",
    "start": "2043720",
    "end": "2050800"
  },
  {
    "text": "so this authorization server has the hash and can now take the clear text code verify it received hash it and",
    "start": "2050800",
    "end": "2057280"
  },
  {
    "text": "compiler to what it done and by this the authorization server can know for sure",
    "start": "2057280",
    "end": "2062800"
  },
  {
    "text": "that it's the same application instance during the back Channel all to acquire the tokens as was initiating the",
    "start": "2062800",
    "end": "2070358"
  },
  {
    "text": "redirect we have a background response with an access token a refresh token and the",
    "start": "2070359",
    "end": "2076358"
  },
  {
    "text": "same expiry time if we look at the access token we received it contains a bit more information here",
    "start": "2076359",
    "end": "2083679"
  },
  {
    "text": "and I know it's the load down on this monitor but or screen but we have now a",
    "start": "2083679",
    "end": "2089858"
  },
  {
    "text": "sub which is the subject identifier the ID number of the user",
    "start": "2089859",
    "end": "2095260"
  },
  {
    "text": "and authentication method reference we can also possibly have given name family name email address other information",
    "start": "2095260",
    "end": "2101980"
  },
  {
    "text": "that we want all our apis to have about this user available without having to",
    "start": "2101980",
    "end": "2108460"
  },
  {
    "text": "make outman calls and of course it's a signature on it as",
    "start": "2108460",
    "end": "2115240"
  },
  {
    "text": "well even though it's not shown here so back to the Token management thing uh",
    "start": "2115240",
    "end": "2123880"
  },
  {
    "text": "this token is valid for one hour when the validity period or this is not",
    "start": "2123880",
    "end": "2129760"
  },
  {
    "text": "valid for one hour the difference is just 200 seconds I think",
    "start": "2129760",
    "end": "2135460"
  },
  {
    "text": "uh which is very short so 200 seconds in a bit more than three minutes we need to",
    "start": "2135460",
    "end": "2140859"
  },
  {
    "text": "ask the user to sign in again which is not okay I've seen setups where people solve the",
    "start": "2140859",
    "end": "2147400"
  },
  {
    "text": "token management by uh extending the access token lifetime for eight hours a full working day",
    "start": "2147400",
    "end": "2153579"
  },
  {
    "text": "and then when people were working a bit all the time they got kicked out so they extended into 12 hours and then people",
    "start": "2153579",
    "end": "2160960"
  },
  {
    "text": "they had people working a lot of overtime so they extended it to 16 hours and then because then they had the idea",
    "start": "2160960",
    "end": "2168400"
  },
  {
    "text": "if people are getting on in the morning 16 hours will time out before the next morning and then they had someone sign",
    "start": "2168400",
    "end": "2174339"
  },
  {
    "text": "in in the afternoon which meant the session was still valid the next morning and armed out right as they had got up",
    "start": "2174339",
    "end": "2183160"
  },
  {
    "text": "to speed with their work at nine so don't do that",
    "start": "2183160",
    "end": "2189000"
  },
  {
    "text": "um the mechanism we want to use is refresh tokens",
    "start": "2189220",
    "end": "2195480"
  },
  {
    "text": "and the idea is that we get a refresh token on the initial token",
    "start": "2195700",
    "end": "2200740"
  },
  {
    "text": "request and once the access token expires the refresh token is long-lived",
    "start": "2200740",
    "end": "2207339"
  },
  {
    "text": "and we can query send a request to the Token endpoint for a refresh token",
    "start": "2207339",
    "end": "2214480"
  },
  {
    "text": "sorry for a new access token and we get a response with the new access token and probably a new refresh token",
    "start": "2214480",
    "end": "2222579"
  },
  {
    "text": "and this can be done right when the extra token expired or the refresh token",
    "start": "2222579",
    "end": "2227859"
  },
  {
    "text": "can a longer lifetime um I have refresh tokens that have been",
    "start": "2227859",
    "end": "2234160"
  },
  {
    "text": "around for years might see I see this server that has access to my GitHub account",
    "start": "2234160",
    "end": "2239859"
  },
  {
    "text": "that's a refresh token that is a very long lifetime so why can we have a long Lifetime on",
    "start": "2239859",
    "end": "2245140"
  },
  {
    "text": "the refresh token button on the access token well if consider if you one of you",
    "start": "2245140",
    "end": "2250480"
  },
  {
    "text": "managed to steal my wallet you would find some money and some credit cards",
    "start": "2250480",
    "end": "2257819"
  },
  {
    "text": "the money or Bearer tokens if you have my money my bills or coins you will be",
    "start": "2257980",
    "end": "2263680"
  },
  {
    "text": "able to go shopping for them and there's nothing stopping you if you have my credit card you can go",
    "start": "2263680",
    "end": "2269859"
  },
  {
    "text": "shopping with my credit card as long as you use low enough amounts you can just blip it and just until I",
    "start": "2269859",
    "end": "2279160"
  },
  {
    "text": "found out about it because when I found out about it I call my bank and revoke that credit card the credit card is a",
    "start": "2279160",
    "end": "2285820"
  },
  {
    "text": "reference token and the refresh token is also reference token it's something that is",
    "start": "2285820",
    "end": "2293079"
  },
  {
    "text": "an indexed into a database and if I remove that line in the database I can",
    "start": "2293079",
    "end": "2298599"
  },
  {
    "text": "revoke the refresh token so it's no longer valid and that is exactly what you can do if you go to Google account",
    "start": "2298599",
    "end": "2304420"
  },
  {
    "text": "your Facebook GitHub or whatever account you can see a list of approved oauth 2",
    "start": "2304420",
    "end": "2309579"
  },
  {
    "text": "applications that is a list of refresh tokens valid refresh tokens",
    "start": "2309579",
    "end": "2316180"
  },
  {
    "text": "and this is why you want to go to unhack your families Facebook accounts because if you go here you will see that they",
    "start": "2316180",
    "end": "2323680"
  },
  {
    "text": "have allowed a shade that shady Lottery site full access to their Facebook",
    "start": "2323680",
    "end": "2329320"
  },
  {
    "text": "account and if we you revoke that refresh token that site is gone from the",
    "start": "2329320",
    "end": "2334839"
  },
  {
    "text": "timeline and they do not have to register a new Facebook account",
    "start": "2334839",
    "end": "2339359"
  },
  {
    "text": "a more common usage for refresh token is to just use it for the duration of a",
    "start": "2340540",
    "end": "2346900"
  },
  {
    "text": "session so that when we sign in in the morning we get a",
    "start": "2346900",
    "end": "2353380"
  },
  {
    "text": "refresh token so we can get new access token throughout the day but when we sign out in the afternoon",
    "start": "2353380",
    "end": "2360579"
  },
  {
    "text": "we do not keep it around then it's polite to revoke the access token",
    "start": "2360579",
    "end": "2367000"
  },
  {
    "text": "at the end just to get it off that list because you're no longer using it",
    "start": "2367000",
    "end": "2374819"
  },
  {
    "text": "um so those are the two main protocol flows like credential flow for machine to",
    "start": "2376060",
    "end": "2381640"
  },
  {
    "text": "machine communication authorization code flow together with pixel proof key code exchange that",
    "start": "2381640",
    "end": "2388660"
  },
  {
    "text": "code verifier for interactive applications",
    "start": "2388660",
    "end": "2393760"
  },
  {
    "text": "and the reason that we can now recommend authorization code flow for all kinds of",
    "start": "2393760",
    "end": "2399760"
  },
  {
    "text": "interactive applications is thanks to Pixi because it turns out that together authorization code flow with pkce",
    "start": "2399760",
    "end": "2407400"
  },
  {
    "text": "solves all the problems that we try to solve using different flows previously",
    "start": "2407400",
    "end": "2412599"
  },
  {
    "text": "makes life a lot easier I want to talk a bit also about",
    "start": "2412599",
    "end": "2419079"
  },
  {
    "text": "application architecture so machine to machine scenarios are simple because it's roughly it's a console app running",
    "start": "2419079",
    "end": "2426000"
  },
  {
    "text": "off some batch scheduler whatever but interactive applications come in a few",
    "start": "2426000",
    "end": "2431200"
  },
  {
    "text": "different flavors we have browser-based applications",
    "start": "2431200",
    "end": "2436599"
  },
  {
    "text": "that can be server-side application or single page applications where the application actually runs in the browser",
    "start": "2436599",
    "end": "2444700"
  },
  {
    "text": "and we have non-browser-based applications out in mobile apps desktop applications well native apps",
    "start": "2444700",
    "end": "2451920"
  },
  {
    "text": "if you first look at browser-based application the classic server-side application contains an open letter connector over client Library session",
    "start": "2452500",
    "end": "2459040"
  },
  {
    "text": "management token management UI assets so",
    "start": "2459040",
    "end": "2466480"
  },
  {
    "text": "all of this runs on the server it's a confidential client and the tokens stays",
    "start": "2466480",
    "end": "2471940"
  },
  {
    "text": "on the server in the data center Out Of Reach from cross-site scripting and",
    "start": "2471940",
    "end": "2476980"
  },
  {
    "text": "Rogue plugins in your browser Etc and um",
    "start": "2476980",
    "end": "2482020"
  },
  {
    "text": "I'm really a bit uh disappointed with the scheduling today because uh a talk I",
    "start": "2482020",
    "end": "2487540"
  },
  {
    "text": "would really have loved to be at this field of direct talk which is in the Next Room on the same time and because",
    "start": "2487540",
    "end": "2492579"
  },
  {
    "text": "he uh explains a lot about why the browser is not a very secure platform so",
    "start": "2492579",
    "end": "2499839"
  },
  {
    "text": "go watch his video afterwards for more strong arguments of why uh",
    "start": "2499839",
    "end": "2506160"
  },
  {
    "text": "it's a good idea to keep everything on the server side uh because the problem",
    "start": "2506160",
    "end": "2512980"
  },
  {
    "text": "is really single page applications where all of this used runs on the client side",
    "start": "2512980",
    "end": "2518079"
  },
  {
    "text": "I mean open addiction over DC client.js from Rock Allen was a full open ID",
    "start": "2518079",
    "end": "2523540"
  },
  {
    "text": "connect client including RSA public private key crypto signature validation",
    "start": "2523540",
    "end": "2529359"
  },
  {
    "text": "done in JavaScript I mean he's an excellent JavaScript developer who created and maintained",
    "start": "2529359",
    "end": "2536079"
  },
  {
    "text": "this piece of software that worked across browsers uh all different browsers for multiple years and",
    "start": "2536079",
    "end": "2541660"
  },
  {
    "text": "eventually he got a bit tired of browsers changing all the time",
    "start": "2541660",
    "end": "2546940"
  },
  {
    "text": "and also for the reasons that the browser turned out to be non-secure and one more thing",
    "start": "2546940",
    "end": "2552280"
  },
  {
    "text": "the session management spec of open ID connect",
    "start": "2552280",
    "end": "2557800"
  },
  {
    "text": "for single page application relies heavily on hidden iframes doing cross-site requests and tokens being",
    "start": "2557800",
    "end": "2564820"
  },
  {
    "text": "transported there and modern browsers that are more and more privacy aware are blocking that",
    "start": "2564820",
    "end": "2573280"
  },
  {
    "text": "so uh let's take another demo just why I'll go back to duplicate if I find my",
    "start": "2573280",
    "end": "2581079"
  },
  {
    "text": "mouse um",
    "start": "2581079",
    "end": "2585119"
  },
  {
    "text": "or do I have we can just take that and put it down",
    "start": "2588160",
    "end": "2593740"
  },
  {
    "text": "so I'm opening in incognito window um not cool enough to use a Mac so I'm",
    "start": "2593740",
    "end": "2599380"
  },
  {
    "text": "using Chrome on Windows but I flip on this block third-party cookies",
    "start": "2599380",
    "end": "2604560"
  },
  {
    "text": "and I go to sign on to Microsoft teams",
    "start": "2605020",
    "end": "2609240"
  },
  {
    "text": "I'm redirected to the Azure ID login prompt",
    "start": "2611500",
    "end": "2618359"
  },
  {
    "text": "I'm entering my password I need to find my tele my phone because",
    "start": "2619240",
    "end": "2625900"
  },
  {
    "text": "of course I have two-factor auth enabled",
    "start": "2625900",
    "end": "2631560"
  },
  {
    "text": "and yes I want to prove that sign on",
    "start": "2631619",
    "end": "2637260"
  },
  {
    "text": "and I yes I want to stay signed on whatever it's in private between incognito window",
    "start": "2638500",
    "end": "2644560"
  },
  {
    "text": "so it doesn't matter so I've signed on to teams and team starts",
    "start": "2644560",
    "end": "2650980"
  },
  {
    "text": "and I'm well signed on to teams am I",
    "start": "2650980",
    "end": "2656760"
  },
  {
    "text": "the problem here is that teams use these the session management part of the or",
    "start": "2658300",
    "end": "2664960"
  },
  {
    "text": "the session management implementation that it's mandated for single page applications and it relies on cook is",
    "start": "2664960",
    "end": "2672640"
  },
  {
    "text": "being sent in third party request and hidden iframes and it turns out that it says in Swedish here if you want to open",
    "start": "2672640",
    "end": "2678579"
  },
  {
    "text": "your web up change your web browser settings to allow third-party cookies switch off the Privacy control",
    "start": "2678579",
    "end": "2685920"
  },
  {
    "text": "um this is not how I would prefer to solve it to tell user to switch off",
    "start": "2687040",
    "end": "2692319"
  },
  {
    "text": "privacy control so what do we do well",
    "start": "2692319",
    "end": "2697980"
  },
  {
    "text": "we have to accept that the idea to run single page application right do full",
    "start": "2697980",
    "end": "2703240"
  },
  {
    "text": "open ID connect in the browser is a dead end and I still should sorry I still had",
    "start": "2703240",
    "end": "2711819"
  },
  {
    "text": "that change in screen Focus so what we should do",
    "start": "2711819",
    "end": "2717180"
  },
  {
    "text": "what we should do is to have the right screen settings and show the presentation",
    "start": "2718359",
    "end": "2725560"
  },
  {
    "text": "and then yeah from this place where everything is",
    "start": "2725560",
    "end": "2731740"
  },
  {
    "text": "in the browser what we should do is to go to this",
    "start": "2731740",
    "end": "2736839"
  },
  {
    "text": "where we move all the open and reconnect handshake session management token",
    "start": "2736839",
    "end": "2741940"
  },
  {
    "text": "management to the server side so essentially and then let the browser have UI assets so essentially I said at",
    "start": "2741940",
    "end": "2749440"
  },
  {
    "text": "the start that we have two kinds of applications server-side rendered and single page application that our",
    "start": "2749440",
    "end": "2754780"
  },
  {
    "text": "client-side rendered for web applications but it turns out for that from an",
    "start": "2754780",
    "end": "2759819"
  },
  {
    "text": "authentication perspective going forward we really just have one type of application",
    "start": "2759819",
    "end": "2766300"
  },
  {
    "text": "where we do the authentication on the server side where we keep the tokens on the server side then it comes into",
    "start": "2766300",
    "end": "2772960"
  },
  {
    "text": "sub-variants where the content rendering happened to happen happen to be",
    "start": "2772960",
    "end": "2778359"
  },
  {
    "text": "downloaded server or in the client side",
    "start": "2778359",
    "end": "2781980"
  },
  {
    "text": "uh so what about non-browser-based applications",
    "start": "2783480",
    "end": "2790559"
  },
  {
    "text": "well non-browser-based applications and mobile phone application they are really",
    "start": "2790720",
    "end": "2795760"
  },
  {
    "text": "exactly the same we are redirecting out to the uh authorization server where",
    "start": "2795760",
    "end": "2802540"
  },
  {
    "text": "authentication happens on the web advantage of that remember that Google Calendar widget",
    "start": "2802540",
    "end": "2809380"
  },
  {
    "text": "back in the very early days you could come across pay applications",
    "start": "2809380",
    "end": "2815260"
  },
  {
    "text": "where sign it said sign in with Google please give me your Google password in",
    "start": "2815260",
    "end": "2820599"
  },
  {
    "text": "my app would you ever give me your Google password Scott's place",
    "start": "2820599",
    "end": "2827200"
  },
  {
    "text": "nope is a very good thing for the users as",
    "start": "2827200",
    "end": "2833859"
  },
  {
    "text": "well because that web browser indicates you are now on Google and it's a trustworthy if the web browser says",
    "start": "2833859",
    "end": "2841839"
  },
  {
    "text": "Google it actually is Google because of HTTP as we know that so we can teach how we use this to not",
    "start": "2841839",
    "end": "2848380"
  },
  {
    "text": "enter the main password in various applications Etc they should only enter",
    "start": "2848380",
    "end": "2853540"
  },
  {
    "text": "the main password in one place and also if it is a device where I'm already",
    "start": "2853540",
    "end": "2858579"
  },
  {
    "text": "signed into the browser I get single sign-on into my mobile app isn't that great",
    "start": "2858579",
    "end": "2865240"
  },
  {
    "text": "and then we are coming back uh you know if you click a link on an",
    "start": "2865240",
    "end": "2870700"
  },
  {
    "text": "Android phone to maps.google.com you're not you that link will not open",
    "start": "2870700",
    "end": "2876819"
  },
  {
    "text": "the web browser and maps.google.com it's actually the same on Windows uh",
    "start": "2876819",
    "end": "2885359"
  },
  {
    "text": "maps not windows.com let's see if I can move this over to the right of the screen",
    "start": "2886060",
    "end": "2892540"
  },
  {
    "text": "so if I on windows open maps https map.windows.com",
    "start": "2892540",
    "end": "2898060"
  },
  {
    "text": "click ok to put it on this monitor I actually get the windows map app I didn't know it",
    "start": "2898060",
    "end": "2904900"
  },
  {
    "text": "existed before I found out it was a great demo uh I've never used it but uh",
    "start": "2904900",
    "end": "2910180"
  },
  {
    "text": "so this is claimurl which means that if the authorization server redirects to",
    "start": "2910180",
    "end": "2915640"
  },
  {
    "text": "claimed URL the app is opened and can retrieve the code from the response back",
    "start": "2915640",
    "end": "2920740"
  },
  {
    "text": "and then do the back Channel call to get the the token",
    "start": "2920740",
    "end": "2926160"
  },
  {
    "text": "finally I want to talk a bit about open ID connect remember I said that",
    "start": "2927180",
    "end": "2932220"
  },
  {
    "text": "a log say login with oauth and people will cringe a bit",
    "start": "2932220",
    "end": "2938619"
  },
  {
    "text": "so the problem here is that if we look at a Pure oauth Flow we have the front",
    "start": "2938619",
    "end": "2943660"
  },
  {
    "text": "Channel again and then the back Channel ending up with retrieving an access token",
    "start": "2943660",
    "end": "2949180"
  },
  {
    "text": "what can declined application do with the access token can it read it",
    "start": "2949180",
    "end": "2955540"
  },
  {
    "text": "is it no it shouldn't consume it can just forward it to an API",
    "start": "2955540",
    "end": "2962020"
  },
  {
    "text": "uh and also when talking about single sign-on I usually want single log out as",
    "start": "2962020",
    "end": "2968260"
  },
  {
    "text": "well to be able to sign out is there any notion here about establishing a session",
    "start": "2968260",
    "end": "2974440"
  },
  {
    "text": "anyway no it isn't so that's why open ID connect is added",
    "start": "2974440",
    "end": "2981280"
  },
  {
    "text": "as an extra layer on top of oauth2 and the flows looks very kind of exactly",
    "start": "2981280",
    "end": "2989500"
  },
  {
    "text": "the same we just add a few more Scopes to indicate we want the open ID connect extension to our auth",
    "start": "2989500",
    "end": "2995560"
  },
  {
    "text": "but now we will get another token back we will get an ID token and while the",
    "start": "2995560",
    "end": "3001260"
  },
  {
    "text": "access token is for consumption by the API only the ID token is for consumption by the",
    "start": "3001260",
    "end": "3008460"
  },
  {
    "text": "application client application only so the ID token should never ever be",
    "start": "3008460",
    "end": "3013619"
  },
  {
    "text": "forwarded to an API we can even see that looking at the audience the audience",
    "start": "3013619",
    "end": "3019020"
  },
  {
    "text": "says client this is meant to be consumed by the client and it contains",
    "start": "3019020",
    "end": "3024300"
  },
  {
    "text": "subject ID and name some information about the user the flow to get it is well the same",
    "start": "3024300",
    "end": "3030420"
  },
  {
    "text": "front channel uh request and back Channel response where",
    "start": "3030420",
    "end": "3035579"
  },
  {
    "text": "we get an ID token and access token back on the same time uh I think we actually have time to look",
    "start": "3035579",
    "end": "3042660"
  },
  {
    "text": "at a uh we'll have a look at a demo of that as well I do have such a demo somewhere",
    "start": "3042660",
    "end": "3048839"
  },
  {
    "text": "here uh let's go here and I'll just",
    "start": "3048839",
    "end": "3054420"
  },
  {
    "text": "two pieces no not a piece of screen normally",
    "start": "3054420",
    "end": "3058700"
  },
  {
    "text": "I want to I mean it's a great idea with this cable",
    "start": "3061140",
    "end": "3068579"
  },
  {
    "text": "looks nice but it's sloping which means my mouse is constantly just running down here",
    "start": "3068579",
    "end": "3075119"
  },
  {
    "text": "um so let's go to Embassy one which is another client I have here.net run",
    "start": "3075119",
    "end": "3081900"
  },
  {
    "text": "I'm still running an identity server in the background and obviously",
    "start": "3081900",
    "end": "3089839"
  },
  {
    "text": "uh let's see 5002 localhost 5002.",
    "start": "3089839",
    "end": "3098480"
  },
  {
    "text": "uh so if I open the browser Dev tools just here here to be able to see if it was happening I'm clicking the Privacy",
    "start": "3098480",
    "end": "3104940"
  },
  {
    "text": "page we can see that the Privacy paged requires me to be authenticated so it",
    "start": "3104940",
    "end": "3113400"
  },
  {
    "text": "redirected me to the authorized endpoint of the identity server looking at the head the payload we can see",
    "start": "3113400",
    "end": "3121200"
  },
  {
    "text": "uh sorry um no",
    "start": "3121200",
    "end": "3126420"
  },
  {
    "text": "ah I want the entire timeline please authorize payload we can see that I'm",
    "start": "3126420",
    "end": "3134339"
  },
  {
    "text": "sending it in a client idmc one redirect URI where do you want the response back",
    "start": "3134339",
    "end": "3140700"
  },
  {
    "text": "response type should be code I'm requesting a bunch of",
    "start": "3140700",
    "end": "3145920"
  },
  {
    "text": "different Scopes offline access in the case refresh token and I have a code Challenge and code",
    "start": "3145920",
    "end": "3153059"
  },
  {
    "text": "challenge signature method indicated I do log in here Alice",
    "start": "3153059",
    "end": "3158819"
  },
  {
    "text": "now this Alice and I see a post to the redirect URI",
    "start": "3158819",
    "end": "3165599"
  },
  {
    "text": "back with the code then I don't I cannot see the actual tokens here I cannot see",
    "start": "3165599",
    "end": "3171480"
  },
  {
    "text": "the retrievable token because that is a back Channel called from the server side but if I go to Identity server",
    "start": "3171480",
    "end": "3179520"
  },
  {
    "text": "I can see that it actually had a requested the token endpoint and",
    "start": "3179520",
    "end": "3185579"
  },
  {
    "text": "received one client ID with an authorization code this is the code and code verifier all of that",
    "start": "3185579",
    "end": "3192000"
  },
  {
    "text": "so there was a back tunnel call and I can see I'm signed in and has established a session uh",
    "start": "3192000",
    "end": "3200819"
  },
  {
    "text": "on this side So What mechanisms were typically used to establish this session",
    "start": "3200819",
    "end": "3206900"
  },
  {
    "text": "can we see that from signing nowadc in the headers that it's doing something to",
    "start": "3207839",
    "end": "3213240"
  },
  {
    "text": "preserve State okay this is Love's a joke but I do have I do have something for the one that can",
    "start": "3213240",
    "end": "3220859"
  },
  {
    "text": "tell me what mechanism we are doing to preserve the session",
    "start": "3220859",
    "end": "3226818"
  },
  {
    "text": "come on cookies who wanted who wants cookies okay let's see if I can do this",
    "start": "3228119",
    "end": "3235319"
  },
  {
    "text": "oh broken cookies sorry but there are cookies okay uh",
    "start": "3235319",
    "end": "3243480"
  },
  {
    "text": "so finally a bit of further reading uh there was tutored ones back is quite",
    "start": "3243480",
    "end": "3249540"
  },
  {
    "text": "readable actually open ID connects back as well and uh Dominic's post about two is the",
    "start": "3249540",
    "end": "3257280"
  },
  {
    "text": "magic number where he argues for these two flows also about the BF back and forth front",
    "start": "3257280",
    "end": "3264420"
  },
  {
    "text": "and pattern where we use this back and for front end for our single page applications to from an authentication",
    "start": "3264420",
    "end": "3271020"
  },
  {
    "text": "perspective turn our uh application uh single page applications to back-end applications",
    "start": "3271020",
    "end": "3279180"
  },
  {
    "text": "I have time for questions if there are any a few questions yes",
    "start": "3279180",
    "end": "3286460"
  },
  {
    "text": "sir yep",
    "start": "3295020",
    "end": "3298099"
  },
  {
    "text": "just because you because the client just calls the server",
    "start": "3301440",
    "end": "3307020"
  },
  {
    "text": "on the same domain and we have a session cookie and I should of course mention that if you just stay in this room Dominic will",
    "start": "3307020",
    "end": "3313859"
  },
  {
    "text": "be doing in one hour talk on the back-end performance pattern right after this",
    "start": "3313859",
    "end": "3319220"
  },
  {
    "text": "yep",
    "start": "3320880",
    "end": "3323880"
  },
  {
    "text": "because a cookie can be HTTP only so it is kept Out Of Reach from here",
    "start": "3328680",
    "end": "3335160"
  },
  {
    "text": "JavaScript including cross-site scripting any kind of that also the cook",
    "start": "3335160",
    "end": "3340500"
  },
  {
    "text": "is only valid on that specific front end so it's not an access token is somewhat",
    "start": "3340500",
    "end": "3347760"
  },
  {
    "text": "higher value because it's probably possible to use it on multiple apis",
    "start": "3347760",
    "end": "3354440"
  },
  {
    "text": "there are also some performance advantages actually because uh",
    "start": "3354440",
    "end": "3359880"
  },
  {
    "text": "I mean ideally you would have this single page application that or a client application that called generic apis",
    "start": "3359880",
    "end": "3366900"
  },
  {
    "text": "that are totally reusable but in real life how many apis are really reused",
    "start": "3366900",
    "end": "3372720"
  },
  {
    "text": "across different applications in real life we have a lot of apis that",
    "start": "3372720",
    "end": "3378900"
  },
  {
    "text": "are dedicated for a specific application so why not make it more simple and put it on the same host",
    "start": "3378900",
    "end": "3384839"
  },
  {
    "text": "and also uh if we actually need to call other services",
    "start": "3384839",
    "end": "3391079"
  },
  {
    "text": "uh we can make have an import performance Improvement because you can make one",
    "start": "3391079",
    "end": "3396660"
  },
  {
    "text": "call to the back and for front and that then that is a high latency call across a mobile network and then you make",
    "start": "3396660",
    "end": "3403319"
  },
  {
    "text": "multiple low latency API calls from the BFF to backend apis that's within the",
    "start": "3403319",
    "end": "3408720"
  },
  {
    "text": "data center and you return an aggregated response so there are not many advantages",
    "start": "3408720",
    "end": "3414599"
  },
  {
    "text": "security uh application architecture convenience and performance from using a BFF pattern",
    "start": "3414599",
    "end": "3423200"
  },
  {
    "text": "yes yep",
    "start": "3424859",
    "end": "3432260"
  },
  {
    "text": "the amount of Scopes and combinations you can have yep [Music]",
    "start": "3435140",
    "end": "3441480"
  },
  {
    "text": "what if you get like very complex sets of different types so",
    "start": "3441480",
    "end": "3447680"
  },
  {
    "text": "if you get a complex set of different Scopes first of all if it impacts",
    "start": "3447680",
    "end": "3453119"
  },
  {
    "text": "performance no not really it's just an extra parameter however if you have a",
    "start": "3453119",
    "end": "3459240"
  },
  {
    "text": "really complex scenario with a lot of applications where there are third-party applications that",
    "start": "3459240",
    "end": "3465059"
  },
  {
    "text": "might have defined the Scopes so you have two applications have picked the same",
    "start": "3465059",
    "end": "3471000"
  },
  {
    "text": "name for a scope and in two apis then there is a concept called resource",
    "start": "3471000",
    "end": "3476819"
  },
  {
    "text": "indicators where you add another layer in the hierarchy on top of the Scopes so you can have different app different",
    "start": "3476819",
    "end": "3483300"
  },
  {
    "text": "access tokens for different resources I didn't go into it here because it's a more advanced Concept",
    "start": "3483300",
    "end": "3489319"
  },
  {
    "text": "in in real life as I said in many cases for internal use you simply can have a",
    "start": "3489319",
    "end": "3495359"
  },
  {
    "text": "one scope back end you do not need to use the Scopes and then you sometimes",
    "start": "3495359",
    "end": "3501839"
  },
  {
    "text": "you need to use a few Scopes but uh it's a perfectly valid but scenario that you",
    "start": "3501839",
    "end": "3508440"
  },
  {
    "text": "have that and that's when you can add on the resource indicator as well",
    "start": "3508440",
    "end": "3515700"
  },
  {
    "text": "yep so and you had another question okay great",
    "start": "3515700",
    "end": "3523460"
  },
  {
    "text": "yeah so so if it makes sense to summarize so if I mean Scopes as one of",
    "start": "3529559",
    "end": "3535799"
  },
  {
    "text": "those you ain't gonna need it things so don't introduce Scopes until you need",
    "start": "3535799",
    "end": "3542520"
  },
  {
    "text": "them don't introduce Scopes until you have multiple clients and you want to be able to on a per client application",
    "start": "3542520",
    "end": "3548940"
  },
  {
    "text": "basis partition your API you can still have you do not need Scopes to have a",
    "start": "3548940",
    "end": "3556200"
  },
  {
    "text": "different privileges for different uses because that are user properties",
    "start": "3556200",
    "end": "3562880"
  },
  {
    "text": "okay I think time's up so I'll be around for most of the day if your question so",
    "start": "3563160",
    "end": "3569160"
  },
  {
    "text": "please please catch me if there's anything thank you for coming [Applause]",
    "start": "3569160",
    "end": "3577779"
  }
]