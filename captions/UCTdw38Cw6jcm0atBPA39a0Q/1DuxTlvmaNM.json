[
  {
    "text": "okay good morning I guess still morning just for a minute",
    "start": "979",
    "end": "6180"
  },
  {
    "text": "so welcome to the last day of NDC Oslo 2023 hope you've had a great conference",
    "start": "6180",
    "end": "12360"
  },
  {
    "text": "so far I know I have my name is Jeff French and uh I'm going",
    "start": "12360",
    "end": "17880"
  },
  {
    "text": "to be talking to you today about managing kubernetes the get Ops way with flux now this presentation has some nice",
    "start": "17880",
    "end": "27539"
  },
  {
    "text": "interactive elements to it so if you would like to well if I can advance my",
    "start": "27539",
    "end": "33239"
  },
  {
    "text": "slides if you would like to join the fun and play along there will be some times",
    "start": "33239",
    "end": "38640"
  },
  {
    "text": "where you can kind of vote on some things or you know give your input this",
    "start": "38640",
    "end": "44280"
  },
  {
    "text": "will also allow you to ask questions throughout the presentation by simply typing them in so you can scan the QR",
    "start": "44280",
    "end": "50460"
  },
  {
    "text": "code or you can go to mentee.com and put in this code and you can do that on your",
    "start": "50460",
    "end": "56460"
  },
  {
    "text": "phone on your laptop smart fridge whatever you brought with you",
    "start": "56460",
    "end": "61860"
  },
  {
    "text": "so let's start with the fun",
    "start": "61860",
    "end": "67100"
  },
  {
    "text": "which is your favorite pizza or tacos these are the kinds of pressing questions that we come to NDC to answer",
    "start": "68460",
    "end": "75000"
  },
  {
    "text": "right let's see here oh what pizza is out into a heavy lead",
    "start": "75000",
    "end": "82680"
  },
  {
    "text": "tacos trying to make a comeback all right let's close that voting up in about 30",
    "start": "82680",
    "end": "89580"
  },
  {
    "text": "seconds man I'm really pulling for tacos I wish I could vote because tacos are my",
    "start": "89580",
    "end": "95400"
  },
  {
    "text": "favorite I need that oh here they come all right tacos making that late showing I like it",
    "start": "95400",
    "end": "102119"
  },
  {
    "text": "so okay",
    "start": "102119",
    "end": "106939"
  },
  {
    "text": "and these uh the website and the code will be at the top of the presentation most of the time so you can type it in",
    "start": "107939",
    "end": "113579"
  },
  {
    "text": "and join if you haven't already joined the fun but here we go coming into the home stretch and it looks like tacos is",
    "start": "113579",
    "end": "119280"
  },
  {
    "text": "going to take it all right yay tacos",
    "start": "119280",
    "end": "126740"
  },
  {
    "text": "so as I said my name is Jeff French uh I worked for a company called Moon switch",
    "start": "127740",
    "end": "133080"
  },
  {
    "text": "in the states we are a devops consulting firm specializing in Cloud migration and",
    "start": "133080",
    "end": "138239"
  },
  {
    "text": "modernization managed cloud and kubernetes devsecops this is what we do all day and this is why I'm here to talk",
    "start": "138239",
    "end": "144180"
  },
  {
    "text": "about githubs because it's what I do all day and I love it I'm passionate about how much it has had a positive effect on",
    "start": "144180",
    "end": "150720"
  },
  {
    "text": "the way that I manage environments for our company and for all of our customers and so the things that I'm going to talk",
    "start": "150720",
    "end": "156360"
  },
  {
    "text": "to you here about about here today are things that have been battle tested in",
    "start": "156360",
    "end": "162239"
  },
  {
    "text": "production with multiple clients multiple workload types multiple clouds even",
    "start": "162239",
    "end": "171079"
  },
  {
    "text": "so one more fun little interactive one let's find out where you already are with some of these Technologies",
    "start": "172379",
    "end": "180019"
  },
  {
    "text": "we'll just take about 30 seconds to vote on that real quick",
    "start": "180180",
    "end": "185220"
  },
  {
    "text": "so now to give you a little bit of my",
    "start": "185220",
    "end": "192060"
  },
  {
    "text": "background I've been practicing devops since kind of before we had the word for devops in fact I'm kind of excited to be",
    "start": "192060",
    "end": "198840"
  },
  {
    "text": "speaking here at NDC Oslo 2023 again because the first conference presentation I ever gave was at NDC Oslo",
    "start": "198840",
    "end": "206400"
  },
  {
    "text": "2013 where I was talking about deploying complex apps continuously with octopus",
    "start": "206400",
    "end": "211620"
  },
  {
    "text": "deploy and so for the last 10 years I have been",
    "start": "211620",
    "end": "216959"
  },
  {
    "text": "doing what became known as devops over that time with continuous delivery and",
    "start": "216959",
    "end": "223560"
  },
  {
    "text": "enabling application teams to deliver their applications to",
    "start": "223560",
    "end": "229220"
  },
  {
    "text": "to the cloud or to their servers uh you know efficiently",
    "start": "229220",
    "end": "235019"
  },
  {
    "text": "all right so it looks like we are kind of across the Spectrum on kubernetes experience that's cool and um",
    "start": "235019",
    "end": "242819"
  },
  {
    "text": "staying low on the customized helmet flux well that makes a lot of sense that's why you came to this talk right you want to learn about these things",
    "start": "242819",
    "end": "249540"
  },
  {
    "text": "um so before we get into flux and get Ops",
    "start": "249540",
    "end": "256620"
  },
  {
    "text": "itself we've got to lay a little bit of a foundation with some of the other technologies that are involved in",
    "start": "256620",
    "end": "262520"
  },
  {
    "text": "managing a git Ops configuration with flux and the first of those is customize",
    "start": "262520",
    "end": "272100"
  },
  {
    "text": "so customize is a standalone tool for customizing",
    "start": "275759",
    "end": "282540"
  },
  {
    "text": "kubernetes objects through declarative configuration language um and it's been built into Cube control",
    "start": "282540",
    "end": "288900"
  },
  {
    "text": "since version 1.14 it also has its own Standalone CLI as well",
    "start": "288900",
    "end": "294900"
  },
  {
    "text": "um and this is maintained written and maintained by the kubernetes team and customize its whole mission in life",
    "start": "294900",
    "end": "301500"
  },
  {
    "text": "is to gather up your kubernetes resources make small modifications or to them and",
    "start": "301500",
    "end": "309000"
  },
  {
    "text": "then help you apply them to your cluster so what are the benefits we've got obviously declarative configuration",
    "start": "309000",
    "end": "315479"
  },
  {
    "text": "management that sounds really good if we're trying to do get Ops right because we're going to want to declare exactly",
    "start": "315479",
    "end": "321120"
  },
  {
    "text": "the state that we want our clusters to be in reduced duplication as we'll see customize can help you organize your",
    "start": "321120",
    "end": "328380"
  },
  {
    "text": "application and all of your kubernetes manifests in a way that helps you keep them a little bit drier and keep them",
    "start": "328380",
    "end": "335039"
  },
  {
    "text": "more consistent across environments and it helps you with the separation of concerns across your different environments or different applications",
    "start": "335039",
    "end": "342560"
  },
  {
    "text": "so basics of a customized configuration or a customized app as I like to call them",
    "start": "344460",
    "end": "350280"
  },
  {
    "text": "are number one a customization file it's basically",
    "start": "350280",
    "end": "355500"
  },
  {
    "text": "always called customization.yaml and it is a definition that tells the",
    "start": "355500",
    "end": "364259"
  },
  {
    "text": "customize CLI how to transform your application and",
    "start": "364259",
    "end": "369360"
  },
  {
    "text": "how to transform your resources before you actually apply them to your cluster in this file you will Define which",
    "start": "369360",
    "end": "377100"
  },
  {
    "text": "resources you want and then we'll also you can organize these into some interesting structures",
    "start": "377100",
    "end": "383759"
  },
  {
    "text": "called bases and overlays okay this is where customize starts to help you dry out your configurations a",
    "start": "383759",
    "end": "390360"
  },
  {
    "text": "little bit you can create a base that has all of the common configuration for your application that's going to go to",
    "start": "390360",
    "end": "397440"
  },
  {
    "text": "every single environment right so in your base you might Define a deployment.yaml that defines a",
    "start": "397440",
    "end": "403740"
  },
  {
    "text": "kubernetes deployment probably a service and a service account maybe some config maps all these things that it takes to",
    "start": "403740",
    "end": "410940"
  },
  {
    "text": "deploy your application into any kubernetes cluster in your environments",
    "start": "410940",
    "end": "418080"
  },
  {
    "text": "then we've got overlays so overlays is where we actually store environment specific modifications to that base",
    "start": "418080",
    "end": "425460"
  },
  {
    "text": "your overlays will reference a base and say Hey I want you to go get everything that's in that base and then I want you",
    "start": "425460",
    "end": "432780"
  },
  {
    "text": "to apply these changes to it",
    "start": "432780",
    "end": "436580"
  },
  {
    "text": "so some of those changes and things that customize can apply from those overlays or in the base",
    "start": "441060",
    "end": "447780"
  },
  {
    "text": "patches patches are a really really helpful one and customize it lets you say hey I know we defined this this way",
    "start": "447780",
    "end": "455819"
  },
  {
    "text": "up in the base but for the dev environment it needs to be just a little bit different",
    "start": "455819",
    "end": "461180"
  },
  {
    "text": "or for the prod environment it needs to be slightly changed some of those common",
    "start": "461180",
    "end": "466860"
  },
  {
    "text": "modifications might be let's say you define an Ingress in the base of your",
    "start": "466860",
    "end": "473220"
  },
  {
    "text": "customization well in your Ingress you probably need to define a host name for that Ingress",
    "start": "473220",
    "end": "479400"
  },
  {
    "text": "and that host name is probably going to be different in Dev and stage and prod",
    "start": "479400",
    "end": "484560"
  },
  {
    "text": "right so patching there will allow you to say well I can Define most of my",
    "start": "484560",
    "end": "489900"
  },
  {
    "text": "Ingress at the base because the service names and the ports and the paths and",
    "start": "489900",
    "end": "494940"
  },
  {
    "text": "most of the configuration is actually the same and I don't want to have to repeat it everywhere but I just want to change this one",
    "start": "494940",
    "end": "500580"
  },
  {
    "text": "little piece so you can write a patch and customize that allows you to",
    "start": "500580",
    "end": "505620"
  },
  {
    "text": "modify just that another option might be say changing the replicas maybe we only",
    "start": "505620",
    "end": "511440"
  },
  {
    "text": "want to run one pod for a deployment in Dev but we want to run a hundred in",
    "start": "511440",
    "end": "517080"
  },
  {
    "text": "production uh config maps and secrets this is",
    "start": "517080",
    "end": "523200"
  },
  {
    "text": "another one that I really like to use and customize because it can generate them it can either make them up out of",
    "start": "523200",
    "end": "530040"
  },
  {
    "text": "nowhere based on some values that you give it or it can you take existing config Maps or secrets and modify them",
    "start": "530040",
    "end": "535500"
  },
  {
    "text": "and this is a really really powerful tool and customize",
    "start": "535500",
    "end": "540540"
  },
  {
    "text": "one example of this would be if you've ever deployed a",
    "start": "540540",
    "end": "546240"
  },
  {
    "text": "deployment a pod on kubernetes and configured it to read maybe a file or",
    "start": "546240",
    "end": "552420"
  },
  {
    "text": "even better an environment variable from a config map or a secret and then it was time to change that environment variable",
    "start": "552420",
    "end": "558839"
  },
  {
    "text": "so you went and you updated the config map and you put the new value in great and then you go back and your pod",
    "start": "558839",
    "end": "564540"
  },
  {
    "text": "is just still got the old value and we know why that is if you're on the",
    "start": "564540",
    "end": "569760"
  },
  {
    "text": "right hand side of that kubernetes Spectrum you probably already know this if you're on the left hand side you have to go restart that pod that pod reads",
    "start": "569760",
    "end": "577200"
  },
  {
    "text": "its config map value at startup and it's not going to change the environment variable once the Pod is running so you",
    "start": "577200",
    "end": "582839"
  },
  {
    "text": "have to go roll out your deployment or re delete your pod and let it restart so we can pick up that new value and that's",
    "start": "582839",
    "end": "588600"
  },
  {
    "text": "really easy to forget to do when you're checking this in to get and letting it get applied automatically well one of",
    "start": "588600",
    "end": "594180"
  },
  {
    "text": "the cool things that customize can do and does this by default is if you let it generate a config map then it will",
    "start": "594180",
    "end": "601980"
  },
  {
    "text": "actually change the name of that config map it will append a hash of the",
    "start": "601980",
    "end": "607140"
  },
  {
    "text": "contents of the config map or the secret to the end of the name and that way every time you run your customization if",
    "start": "607140",
    "end": "614820"
  },
  {
    "text": "that hash has changed because the contents have changed it will change the name and that sounds great but now you've got",
    "start": "614820",
    "end": "621360"
  },
  {
    "text": "to reference a new config map name in your deployment right well customizes got you covered it knows where config",
    "start": "621360",
    "end": "628380"
  },
  {
    "text": "maps and secrets get used in all the standards standard kubernetes objects like deployments pod specs on stateful",
    "start": "628380",
    "end": "636600"
  },
  {
    "text": "sets Daemon sets jobs cron jobs and so it will go and say hey every place that",
    "start": "636600",
    "end": "642300"
  },
  {
    "text": "you reference this config map by this name I just gave it a new name so I'm going to go update that for you and this",
    "start": "642300",
    "end": "648600"
  },
  {
    "text": "has the really nice effect of causing a change to your pod spec on your",
    "start": "648600",
    "end": "654240"
  },
  {
    "text": "deployment or stateful set which will naturally trigger your deployments",
    "start": "654240",
    "end": "659519"
  },
  {
    "text": "rolling upgrade whenever it gets applied so now by simply making a change to the",
    "start": "659519",
    "end": "664680"
  },
  {
    "text": "config map and then applying it with customize it will automatically make sure that all of your pods pick that",
    "start": "664680",
    "end": "670380"
  },
  {
    "text": "change up correctly it's a very very powerful tool you can also do some light variable",
    "start": "670380",
    "end": "676079"
  },
  {
    "text": "substitution I wouldn't get too deep with that but it can be helpful in a few small scenarios but usually a patch is",
    "start": "676079",
    "end": "682860"
  },
  {
    "text": "probably a better approach in most cases so",
    "start": "682860",
    "end": "687959"
  },
  {
    "text": "the root of our customization is a customization file as you can see it",
    "start": "687959",
    "end": "693060"
  },
  {
    "text": "looks just like a kubernetes object right we Define it in yaml just like we would a deployment or a service or a",
    "start": "693060",
    "end": "699300"
  },
  {
    "text": "config map and here we're defining that we've got resources and we're just",
    "start": "699300",
    "end": "704399"
  },
  {
    "text": "telling it hey pick these up now these as you might guess deployment service Ingress those are just yaml files that",
    "start": "704399",
    "end": "711839"
  },
  {
    "text": "have standard kubernetes yaml in them they could be applied directly to your cluster using Cube control apply Dash F",
    "start": "711839",
    "end": "718740"
  },
  {
    "text": "and passing in each one of those file names and they would be applied straight to your cluster",
    "start": "718740",
    "end": "725040"
  },
  {
    "text": "customize takes those and is going to actually combine them into a single yaml",
    "start": "725040",
    "end": "730320"
  },
  {
    "text": "output for you so you can either run customize and see what it's going to do and have it actually generate a full",
    "start": "730320",
    "end": "736019"
  },
  {
    "text": "output that you can inspect you could even take that and rather than letting Cube control apply apply it for you you",
    "start": "736019",
    "end": "743940"
  },
  {
    "text": "could save that as a full output and apply it yourself",
    "start": "743940",
    "end": "749060"
  },
  {
    "text": "now I mentioned that Cube control apply Cube control has",
    "start": "749399",
    "end": "757440"
  },
  {
    "text": "built-in support for customize and we see this in the bottom of this slide here where you can use Cube control customize as a command to actually run",
    "start": "757440",
    "end": "765120"
  },
  {
    "text": "your customization and see what the output is going to be test that it's actually updating your config maps and",
    "start": "765120",
    "end": "770639"
  },
  {
    "text": "things like that um or you can also just run Cube control apply but instead of Dash F you can say",
    "start": "770639",
    "end": "777420"
  },
  {
    "text": "Dash K and feed it a customization file or a directory that contains a customization file and Cube control is",
    "start": "777420",
    "end": "783420"
  },
  {
    "text": "going to automatically go and run the customization render it into its final form and then apply it to your cluster",
    "start": "783420",
    "end": "792079"
  },
  {
    "text": "now here is uh a common way that I lay out most of my kubernetes or my",
    "start": "792420",
    "end": "799320"
  },
  {
    "text": "customized applications on the right here and as you can see we've got a pod Info app and I always like to define a",
    "start": "799320",
    "end": "806760"
  },
  {
    "text": "folder called base and put all of my base resources in there that are going to be common for every environment and",
    "start": "806760",
    "end": "812880"
  },
  {
    "text": "then a folder called overlays and under that a folder for each environment that I'm going to deploy to Dev stage prod QA",
    "start": "812880",
    "end": "820079"
  },
  {
    "text": "wherever and in our base we'll Define a customization.yaml that defines most of",
    "start": "820079",
    "end": "827399"
  },
  {
    "text": "what is going to be picked up and generated and made for our app and then down in each overlay customization we put in just the parts",
    "start": "827399",
    "end": "833940"
  },
  {
    "text": "that need to be different for that environment okay and that might be generating or merging a config map or",
    "start": "833940",
    "end": "840540"
  },
  {
    "text": "secret to set a special value that might be putting a",
    "start": "840540",
    "end": "846420"
  },
  {
    "text": "putting a patch in there to change some value before it gets deployed another nice feature of customize is that it can",
    "start": "846420",
    "end": "853700"
  },
  {
    "text": "automatically update labels and annotations it can help you avoid naming",
    "start": "853700",
    "end": "860339"
  },
  {
    "text": "collisions by doing name prefixes right and so one common use is using say common",
    "start": "860339",
    "end": "867120"
  },
  {
    "text": "labels to say well okay I want all of these labels on my base for every deployment I want to know what app it is",
    "start": "867120",
    "end": "873180"
  },
  {
    "text": "and maybe all these other things but for a specific environment I want to know that its environment equals Dev right",
    "start": "873180",
    "end": "878519"
  },
  {
    "text": "and so I can go apply that at the dev overlay and that label will get applied to all of the resources that customize",
    "start": "878519",
    "end": "885420"
  },
  {
    "text": "processes in that configuration",
    "start": "885420",
    "end": "888860"
  },
  {
    "text": "okay so so that's the basics of customize right and we can already start to see how okay well if I can have all",
    "start": "892199",
    "end": "899279"
  },
  {
    "text": "of these yaml files and I can make them special for each environment I can then obviously check these into a repo you",
    "start": "899279",
    "end": "905639"
  },
  {
    "text": "can see how this starts to lay the foundation for git Ops right because we are going to store all of our",
    "start": "905639",
    "end": "911399"
  },
  {
    "text": "configuration in a git repository customize is a great tool to help us",
    "start": "911399",
    "end": "917040"
  },
  {
    "text": "achieve that Okay so",
    "start": "917040",
    "end": "922800"
  },
  {
    "text": "lots and lots of fun info about customize let's get back into some of our fun",
    "start": "922800",
    "end": "928320"
  },
  {
    "text": "interactive stuff what have you enjoyed the most at NDC so far",
    "start": "928320",
    "end": "935720"
  },
  {
    "text": "oh man it's hard to say but I think my favorite was probably the continuous food it's very nice to be at a",
    "start": "936000",
    "end": "941880"
  },
  {
    "text": "conference that's always always help you know making food available and coffee pretty good coffee too",
    "start": "941880",
    "end": "949500"
  },
  {
    "text": "yeah the food's making a strong oh oh people are here for the sessions uh you guys came to a conference for the",
    "start": "949500",
    "end": "954899"
  },
  {
    "text": "sessions I'm very happy to hear that as a speaker",
    "start": "954899",
    "end": "960420"
  },
  {
    "text": "all right just a few more seconds and yeah all right I always continuous food",
    "start": "960420",
    "end": "967320"
  },
  {
    "text": "gonna make a late push let's see okay oh oh continuous food",
    "start": "967320",
    "end": "974940"
  },
  {
    "text": "coming in at the wire all right I knew it would get you",
    "start": "974940",
    "end": "980240"
  },
  {
    "text": "okay so another technology that we want to make use of when we are",
    "start": "980639",
    "end": "985699"
  },
  {
    "text": "exercising get Ops with flux is hell if you are operating kubernetes clusters",
    "start": "985699",
    "end": "991740"
  },
  {
    "text": "you're probably familiar with Helm but according to our pre-workshop survey um you know not as much so let's dive",
    "start": "991740",
    "end": "999120"
  },
  {
    "text": "into Helm just a little bit so Helm is often referred to as the",
    "start": "999120",
    "end": "1007339"
  },
  {
    "text": "package manager for kubernetes okay you could kind of think of it like uh it's not the same as but similar to something",
    "start": "1007339",
    "end": "1014000"
  },
  {
    "text": "like apt or yum for operating systems or maybe npm or nougat for application",
    "start": "1014000",
    "end": "1022100"
  },
  {
    "text": "dependencies right it's a place where people can publish Helm charts that have",
    "start": "1022100",
    "end": "1028699"
  },
  {
    "text": "a configuration that is ready to deploy onto your cluster okay they help you manage it kubernetes applications and",
    "start": "1028699",
    "end": "1036380"
  },
  {
    "text": "they help you define and install things so what is a Helm chart okay it's",
    "start": "1036380",
    "end": "1043459"
  },
  {
    "text": "bundles of pre-configured kubernetes resources and it can be deployed multiple times inside of a cluster and most importantly",
    "start": "1043459",
    "end": "1050059"
  },
  {
    "text": "it supports go templating for customization so we just talked about customize and how it could gather up all",
    "start": "1050059",
    "end": "1056480"
  },
  {
    "text": "of your kubernetes resources and help you make some modifications to them so why do we need help well first off Helm is a",
    "start": "1056480",
    "end": "1063740"
  },
  {
    "text": "little more powerful mostly because of the go templating you can do a lot more powerful things inside of a Helm chart",
    "start": "1063740",
    "end": "1069020"
  },
  {
    "text": "to vary the output of the helm chart based on inputs that we'll get into here",
    "start": "1069020",
    "end": "1074720"
  },
  {
    "text": "in just a little bit um but also the helm chart is a very",
    "start": "1074720",
    "end": "1080299"
  },
  {
    "text": "good way to package what I like to consider say off-the-shelf software",
    "start": "1080299",
    "end": "1087559"
  },
  {
    "text": "um in in kubernetes land what I mean by that are basically things that I didn't",
    "start": "1087559",
    "end": "1093140"
  },
  {
    "text": "write okay um I don't want to have to maintain a whole bunch of kubernetes uh object",
    "start": "1093140",
    "end": "1100760"
  },
  {
    "text": "definitions for my Ingress controllers or external DNS or assert manager any of",
    "start": "1100760",
    "end": "1107120"
  },
  {
    "text": "these things right I would like for the maintainers or even vendors of those products to maintain that for me all",
    "start": "1107120",
    "end": "1114740"
  },
  {
    "text": "right but they have to be able to support a wide range of options so Helm gives them the power to package this up in a way that's easy for you to install",
    "start": "1114740",
    "end": "1121520"
  },
  {
    "text": "on your cluster with a little bit of variance based on some inputs and be",
    "start": "1121520",
    "end": "1127039"
  },
  {
    "text": "able to manage those efficiently so what is a Helm repository a home",
    "start": "1127039",
    "end": "1133880"
  },
  {
    "text": "repository is you guessed it it's where we store Helm charts right and it's really just kind of a folder with an index.yaml in it that points to a bunch",
    "start": "1133880",
    "end": "1140720"
  },
  {
    "text": "of tarballs of all of the different versions of a Helm chart that are available",
    "start": "1140720",
    "end": "1146620"
  },
  {
    "text": "so some of the comment Helm commands and these become important because we're going to automate them uh our U.S Helm",
    "start": "1150799",
    "end": "1157760"
  },
  {
    "text": "installed to install a chart Helm upgrade to upgrade a release they're very straightforward but you can see how",
    "start": "1157760",
    "end": "1162799"
  },
  {
    "text": "this really works very similar to other package managers right you simply Say Hey I want you to go to some repository",
    "start": "1162799",
    "end": "1169039"
  },
  {
    "text": "of packages I want you to find this one that I'm interested in and then I want you to perform these operations on it",
    "start": "1169039",
    "end": "1177100"
  },
  {
    "text": "so one of the most important parts about Helm for our purposes is understanding",
    "start": "1177919",
    "end": "1183740"
  },
  {
    "text": "the values files we're not going to get into how to create home charts here today that's well beyond the scope of this talk but we are going to talk about",
    "start": "1183740",
    "end": "1189500"
  },
  {
    "text": "how to deploy them and values files are critical for that",
    "start": "1189500",
    "end": "1194679"
  },
  {
    "text": "so value files are yaml files that are used to customize the configuration of a chart okay every chart has a default",
    "start": "1195200",
    "end": "1202840"
  },
  {
    "text": "values.yaml file right in the root of it that defines all of the default inputs",
    "start": "1202840",
    "end": "1208160"
  },
  {
    "text": "there those inputs are used in the go templates inside the chart in order to",
    "start": "1208160",
    "end": "1214280"
  },
  {
    "text": "alter the actual resources that get created based on those inputs all right",
    "start": "1214280",
    "end": "1219580"
  },
  {
    "text": "so you can then provide your own custom configuration without needing to modify the chart itself",
    "start": "1219580",
    "end": "1227380"
  },
  {
    "text": "so you can specify your values in a lot of different ways during installation",
    "start": "1229820",
    "end": "1235700"
  },
  {
    "text": "my favorite and the one that we will be kind of talking about a lot today is using the dash F or values flag this",
    "start": "1235700",
    "end": "1243260"
  },
  {
    "text": "lets you have your own yaml file that defines the inputs that you want to Define for that chart",
    "start": "1243260",
    "end": "1248660"
  },
  {
    "text": "and set the appropriate values and then pass it in on the command line and Helm",
    "start": "1248660",
    "end": "1254000"
  },
  {
    "text": "will read all those values and apply it to the chart and the other fun part here is that",
    "start": "1254000",
    "end": "1259880"
  },
  {
    "text": "multiple value files can be passed in so you could say Dash F values Dash F values and pass in multiple charts and",
    "start": "1259880",
    "end": "1266660"
  },
  {
    "text": "what will happen is that Helm will munge all of those together all right so anything the last file you",
    "start": "1266660",
    "end": "1273919"
  },
  {
    "text": "pass in ends up winning it's a last and wins kind of command line option and therefore if there is the same key in",
    "start": "1273919",
    "end": "1282200"
  },
  {
    "text": "your yaml file defined in the first values file that you pass in and another",
    "start": "1282200",
    "end": "1288440"
  },
  {
    "text": "one defined in the second values file that you pass in and they're the same key then the last one is going to",
    "start": "1288440",
    "end": "1294440"
  },
  {
    "text": "overwrite that it's going to clobber the first one and this is going to become very important for us in the way that we maintain bases and overlays",
    "start": "1294440",
    "end": "1303039"
  },
  {
    "text": "so as I said this is what that ends up looking like you can run a Helm upgrade with a dash dash install so it says Hey",
    "start": "1303860",
    "end": "1309320"
  },
  {
    "text": "upgrade this if it's there install it if it's not and if I pass in my values and",
    "start": "1309320",
    "end": "1314720"
  },
  {
    "text": "my other values anything that is in my other values can clobber what is in the my values",
    "start": "1314720",
    "end": "1320780"
  },
  {
    "text": "file but anything that is doesn't have the same key will simply get merged together into a single yaml file",
    "start": "1320780",
    "end": "1329320"
  },
  {
    "text": "and finally when we're running these commands we give it a release name so this is what's going to be used to",
    "start": "1330799",
    "end": "1336740"
  },
  {
    "text": "identify the release in your cluster and then we're telling it hey here's the helm repository that you should look for",
    "start": "1336740",
    "end": "1343700"
  },
  {
    "text": "this in and here's the helm chart I want you to find there's lots of other command line options you can pass inversions and all of that",
    "start": "1343700",
    "end": "1349880"
  },
  {
    "text": "so some tips and best practices on these store your values file in Source control so you have a record of all your changes",
    "start": "1349880",
    "end": "1357020"
  },
  {
    "text": "right they're just yaml now again apply all of your normal code repository",
    "start": "1357020",
    "end": "1365059"
  },
  {
    "text": "storage uh security measures if the helm chart takes an input for say a database",
    "start": "1365059",
    "end": "1371360"
  },
  {
    "text": "password don't check that into your repository please um there are other ways to handle that",
    "start": "1371360",
    "end": "1376880"
  },
  {
    "text": "and we'll talk about that a little bit when we get to flux um you can use a hierarchical structure",
    "start": "1376880",
    "end": "1382640"
  },
  {
    "text": "in your in the yaml file to organize everything and",
    "start": "1382640",
    "end": "1387860"
  },
  {
    "text": "lint your yaml files um they are yaml if they are not valid hell won't know what to do with them and",
    "start": "1387860",
    "end": "1394400"
  },
  {
    "text": "it might fail in some really interesting ways",
    "start": "1394400",
    "end": "1398140"
  },
  {
    "text": "all right let's have some more fun",
    "start": "1401179",
    "end": "1407000"
  },
  {
    "text": "this one might be spicy",
    "start": "1407000",
    "end": "1410140"
  },
  {
    "text": "yeah I thought maybe I'd go with uh you know tabs versus spaces but uh that's that's an old fight nobody wants",
    "start": "1413120",
    "end": "1419659"
  },
  {
    "text": "to have that fight anymore uh oh here we go AWS making a late comeback",
    "start": "1419659",
    "end": "1425299"
  },
  {
    "text": "oh I forgot to start the timer well we don't need to wait that long but why not 30 more seconds",
    "start": "1425299",
    "end": "1432080"
  },
  {
    "text": "so I I'm not surprised to see azure's out strong I know Azure is a very popular",
    "start": "1432080",
    "end": "1438200"
  },
  {
    "text": "Cloud among NDC attendees",
    "start": "1438200",
    "end": "1442779"
  },
  {
    "text": "I uh we do work on both Azure and AWS and uh you know they both serve their",
    "start": "1443659",
    "end": "1449539"
  },
  {
    "text": "purposes all right well it looks like uh although I will say this",
    "start": "1449539",
    "end": "1457419"
  },
  {
    "text": "[Music] doesn't look like my favorite is going to win this time though uh want",
    "start": "1458730",
    "end": "1465519"
  },
  {
    "text": "Okay so the main event this is what you came for",
    "start": "1466159",
    "end": "1471320"
  },
  {
    "text": "what is flux what is get Ops let's dig in",
    "start": "1471320",
    "end": "1476500"
  },
  {
    "text": "Okay so we'll start by just defining what get Ops is okay",
    "start": "1485720",
    "end": "1492940"
  },
  {
    "text": "that's better so as you can see to get based approach to managing infrastructure and",
    "start": "1494000",
    "end": "1499580"
  },
  {
    "text": "application deployments serves as a single source of Truth for your infrastructure and application configuration",
    "start": "1499580",
    "end": "1506500"
  },
  {
    "text": "what are the benefits of git Ops and and real quick let's talk about just the word get Ops get Ops is kind of like the",
    "start": "1509780",
    "end": "1517280"
  },
  {
    "text": "word devops okay it's not a thing it's an idea it's a collection of practices it's a culture it's a mindset okay you",
    "start": "1517280",
    "end": "1525919"
  },
  {
    "text": "can achieve get Ops with lots and lots of different tools okay today we are going to talk about flux but there is",
    "start": "1525919",
    "end": "1533299"
  },
  {
    "text": "also Argo CD that's a very popular git Ops framework in the kubernetes community you can also achieve the the",
    "start": "1533299",
    "end": "1541039"
  },
  {
    "text": "benefits of git Ops with just your regular CI CD system by simply following all and you gain all",
    "start": "1541039",
    "end": "1547700"
  },
  {
    "text": "of these benefits right we get consistency we want to make sure that our environments are",
    "start": "1547700",
    "end": "1553100"
  },
  {
    "text": "configured consistently right just like we want our Dev environment to be as",
    "start": "1553100",
    "end": "1558919"
  },
  {
    "text": "close to our prod environment as possible so that we can test our applications correctly understand how they're going to behave right",
    "start": "1558919",
    "end": "1566659"
  },
  {
    "text": "collaboration okay because we are storing all of these in a git Repository",
    "start": "1566659",
    "end": "1571760"
  },
  {
    "text": "we get all the benefits of say pull requests when someone wants to make a change to some of our configurations",
    "start": "1571760",
    "end": "1579679"
  },
  {
    "text": "they can submit a pull request we can have a discussion about what that change means what its impacts are why that",
    "start": "1579679",
    "end": "1585620"
  },
  {
    "text": "change is being made make sure it's the right change for our organization or for our application and then of course it provides us an",
    "start": "1585620",
    "end": "1591980"
  },
  {
    "text": "audit Trail right we can come back and see what changes have been made by who when and why",
    "start": "1591980",
    "end": "1598760"
  },
  {
    "text": "and it helps simplify rollbacks if things go wrong right we could just revert that commit go back to our last",
    "start": "1598760",
    "end": "1604880"
  },
  {
    "text": "state so",
    "start": "1604880",
    "end": "1610580"
  },
  {
    "text": "there are a few principles of get Ops that will kind of help guide you if you",
    "start": "1610580",
    "end": "1615980"
  },
  {
    "text": "are trying to implement get Ops with flux or any other tool set declarative configuration",
    "start": "1615980",
    "end": "1622279"
  },
  {
    "text": "Version Control and automatic convergence so",
    "start": "1622279",
    "end": "1629120"
  },
  {
    "text": "first principle declarative configuration Define everything in declarative configuration files much",
    "start": "1629120",
    "end": "1635000"
  },
  {
    "text": "like what we've just been looking at with customize and Helm there are ways where we can take our desired",
    "start": "1635000",
    "end": "1640039"
  },
  {
    "text": "configuration State express it in a file that can be checked in to a git",
    "start": "1640039",
    "end": "1645740"
  },
  {
    "text": "Repository that way we have and by doing so we are",
    "start": "1645740",
    "end": "1651140"
  },
  {
    "text": "stating this is our desired state of this environment or these environments",
    "start": "1651140",
    "end": "1656840"
  },
  {
    "text": "we're saying this is how we want things to look",
    "start": "1656840",
    "end": "1661899"
  },
  {
    "text": "Version Control store them in aversion control system",
    "start": "1662860",
    "end": "1668059"
  },
  {
    "text": "probably get it's kind of the most popular one these days it's right there in the name get Ops but",
    "start": "1668059",
    "end": "1673400"
  },
  {
    "text": "spoiler alert if you are using something else you can still",
    "start": "1673400",
    "end": "1678620"
  },
  {
    "text": "achieve the same get Ops principles with I don't know SVN or something like that",
    "start": "1678620",
    "end": "1683659"
  },
  {
    "text": "if you're still using something like that the idea being that as long as you have a some sort of source control",
    "start": "1683659",
    "end": "1688940"
  },
  {
    "text": "repository where you can store your configuration files and create that audit Trail and that collaboration and",
    "start": "1688940",
    "end": "1694039"
  },
  {
    "text": "that consistency you can still achieve get Ops you're not going to be able to use flux to do it it really only works",
    "start": "1694039",
    "end": "1699260"
  },
  {
    "text": "with Git and S3 but",
    "start": "1699260",
    "end": "1703960"
  },
  {
    "text": "and finally automatic convergence all right this is the real key to get",
    "start": "1705860",
    "end": "1714500"
  },
  {
    "text": "Ops automatic convergence it's one thing to say I've declared my state in a",
    "start": "1714500",
    "end": "1721460"
  },
  {
    "text": "repository and and we said that that's what we want and maybe our CI system ran",
    "start": "1721460",
    "end": "1726679"
  },
  {
    "text": "and applied that state to our clusters but if it's not continuously doing that",
    "start": "1726679",
    "end": "1732740"
  },
  {
    "text": "you're not really achieving get Ops okay automatic convergence is using some",
    "start": "1732740",
    "end": "1737840"
  },
  {
    "text": "kind of tool to constantly be reconciling the state of your cluster with what is defined in your Repository",
    "start": "1737840",
    "end": "1748120"
  },
  {
    "text": "Okay so flux is a tool that's really going to help us achieve that but again you could",
    "start": "1748400",
    "end": "1754340"
  },
  {
    "text": "achieve this with a CI pipeline as long as you schedule that CI pipeline to run maybe every five minutes or 10 minutes",
    "start": "1754340",
    "end": "1760399"
  },
  {
    "text": "or something like that so that it's going back and applying these states",
    "start": "1760399",
    "end": "1766179"
  },
  {
    "text": "all right so that brings us to flux so what is flux open source git Ops",
    "start": "1768559",
    "end": "1776000"
  },
  {
    "text": "toolkit for kubernetes developed by weaveworks and part of the cloud native Computing foundation",
    "start": "1776000",
    "end": "1782140"
  },
  {
    "text": "and it monitors git repositories and automatically applies their changes to the cluster um",
    "start": "1782140",
    "end": "1787640"
  },
  {
    "text": "I'm not 100 sure but as far as I know I think the flux team kind of was one of The",
    "start": "1787640",
    "end": "1794539"
  },
  {
    "text": "Originators of the git Ops term I could be wrong and now that I've said it at a conference session I'm guaranteed to be",
    "start": "1794539",
    "end": "1800059"
  },
  {
    "text": "wrong and someone will correct me but I like to learn so please do if I'm wrong um",
    "start": "1800059",
    "end": "1805820"
  },
  {
    "text": "um I think a quick note on the cncf I don't",
    "start": "1805820",
    "end": "1811279"
  },
  {
    "text": "have an internet an interactive slide for this one but quick show of hands of who's familiar with the cloud native Computing Foundation",
    "start": "1811279",
    "end": "1817940"
  },
  {
    "text": "okay maybe 50 so the cloud native Computing Foundation is a division of the Linux foundation",
    "start": "1817940",
    "end": "1824179"
  },
  {
    "text": "and it's basically a board that helps kind of identify up and coming projects",
    "start": "1824179",
    "end": "1830360"
  },
  {
    "text": "that are good in open source uh for cloud native Computing objectives and sort of guide those projects through",
    "start": "1830360",
    "end": "1838340"
  },
  {
    "text": "their governance model and how to build their Community until they get up to a state where they are actually considered",
    "start": "1838340",
    "end": "1844940"
  },
  {
    "text": "a graduated project and what's really cool about that is it means that they are kind of making sure that these projects have",
    "start": "1844940",
    "end": "1850460"
  },
  {
    "text": "good open source governance standards they've got active committed maintainers",
    "start": "1850460",
    "end": "1856220"
  },
  {
    "text": "they've got a thriving community of people who are both contributing to and using the project the idea being that if",
    "start": "1856220",
    "end": "1863840"
  },
  {
    "text": "if a project is in a cncf incubator stage it's pretty good and if it's in a",
    "start": "1863840",
    "end": "1869659"
  },
  {
    "text": "graduated stage you can be pretty confident in taking a dependency on that",
    "start": "1869659",
    "end": "1874820"
  },
  {
    "text": "project because it's going to be well maintained over the course of time kubernetes is probably the most",
    "start": "1874820",
    "end": "1881360"
  },
  {
    "text": "well-known and first graduated cncf project flux is a graduated cncf project",
    "start": "1881360",
    "end": "1887720"
  },
  {
    "text": "there are lots and lots and lots of others on their website",
    "start": "1887720",
    "end": "1892720"
  },
  {
    "text": "so what is flux what are the components of it it is a set of controllers and crds",
    "start": "1892940",
    "end": "1902000"
  },
  {
    "text": "that get installed into your kubernetes cluster okay so when you bootstrap a",
    "start": "1902000",
    "end": "1907399"
  },
  {
    "text": "cluster with the flux CLI it goes and applies a whole bunch of crds for things",
    "start": "1907399",
    "end": "1913640"
  },
  {
    "text": "like git repositories and Helm repositories and customizations and Helm releases",
    "start": "1913640",
    "end": "1920000"
  },
  {
    "text": "um that it knows about and then it deploys a set of controllers that know how to actually interact with those",
    "start": "1920000",
    "end": "1926659"
  },
  {
    "text": "objects as they get defined and take action based on them okay so there's a source controller",
    "start": "1926659",
    "end": "1933220"
  },
  {
    "text": "customized controller Helm controller notification controller and image automation controller it's actually two",
    "start": "1933220",
    "end": "1939919"
  },
  {
    "text": "controllers let's dig into them a little bit so this is a little diagram of how the",
    "start": "1939919",
    "end": "1946700"
  },
  {
    "text": "source controller works so as we can see on the left side of the slide here there",
    "start": "1946700",
    "end": "1953179"
  },
  {
    "text": "are some crds that get deployed with flux git repository Helm repository and bucket and they are definitions of how",
    "start": "1953179",
    "end": "1962179"
  },
  {
    "text": "to where to find and how to access each one of those types of objects and that lets the source controller go and clone",
    "start": "1962179",
    "end": "1970100"
  },
  {
    "text": "a git repository and constantly sync from it or uh load a Helm repository and constantly",
    "start": "1970100",
    "end": "1977360"
  },
  {
    "text": "sync all of the charts that are in it or load a bunch of files from an S3 bucket",
    "start": "1977360",
    "end": "1984100"
  },
  {
    "text": "those objects get created with the kubernetes API The Source controller sees that and then goes and follows",
    "start": "1984100",
    "end": "1989360"
  },
  {
    "text": "those instructions and says hey I know how to do this I'm going to go get it and then there are consumers which are",
    "start": "1989360",
    "end": "1995659"
  },
  {
    "text": "the other flux controllers of those artifacts that are they're going to take action based on the idea based on the",
    "start": "1995659",
    "end": "2001059"
  },
  {
    "text": "fact that there are new things found in these sources okay so and they will then",
    "start": "2001059",
    "end": "2007299"
  },
  {
    "text": "produce artifacts that can be deployed throughout our cluster",
    "start": "2007299",
    "end": "2012059"
  },
  {
    "text": "the customized controller it's aware of git repositories and customizations",
    "start": "2013000",
    "end": "2018640"
  },
  {
    "text": "okay and so its whole job is to take those customizations that we defined",
    "start": "2018640",
    "end": "2024039"
  },
  {
    "text": "earlier with customize and actually continuously apply them to our cluster right so we take all those",
    "start": "2024039",
    "end": "2029740"
  },
  {
    "text": "customizations that we wrote for our app we check them into a git Repository that git repository is registered with",
    "start": "2029740",
    "end": "2036039"
  },
  {
    "text": "flux The Source controller sees an update to it notifies the customized controller the customized controller",
    "start": "2036039",
    "end": "2041679"
  },
  {
    "text": "says oh I know what to do when there's new files converge automatically automatic convergence and it picks up",
    "start": "2041679",
    "end": "2047980"
  },
  {
    "text": "and runs those uh it picks up and runs those customizations and applies them and",
    "start": "2047980",
    "end": "2054820"
  },
  {
    "text": "ensures that and creates all of the normal resources you would have in your kubernetes cluster crds namespaces are",
    "start": "2054820",
    "end": "2060280"
  },
  {
    "text": "back all of these things the helm controller",
    "start": "2060280",
    "end": "2065980"
  },
  {
    "text": "I think you can see where this is going now it does the same thing with Helm charts right so we can then",
    "start": "2065980",
    "end": "2072398"
  },
  {
    "text": "Define these Helm repository and Helm chart and Helm release crds in our",
    "start": "2072399",
    "end": "2079540"
  },
  {
    "text": "in our git Repository and when we apply those to our cluster",
    "start": "2079540",
    "end": "2084940"
  },
  {
    "text": "the helm controller will see them and say oh I know what to do with this you're telling me that you want me to go get",
    "start": "2084940",
    "end": "2091179"
  },
  {
    "text": "this Helm chart out of this Helm Repository apply these values to it from values",
    "start": "2091179",
    "end": "2097240"
  },
  {
    "text": "files and run that on and install it in the cluster",
    "start": "2097240",
    "end": "2104520"
  },
  {
    "text": "this one also includes a die a part of the diagram that's really interesting and I just took these straight from the",
    "start": "2104980",
    "end": "2110200"
  },
  {
    "text": "flux website so I didn't make these diagrams um but they actually all do this the notification controller which we'll get",
    "start": "2110200",
    "end": "2115960"
  },
  {
    "text": "into in a minute but that's the interesting part is that it can give you notifications about things actions that are being taken by the other controllers",
    "start": "2115960",
    "end": "2124259"
  },
  {
    "text": "now what have we done okay",
    "start": "2124839",
    "end": "2129960"
  },
  {
    "text": "the notification controller um so the notification controller can do two things it can receive",
    "start": "2130660",
    "end": "2137140"
  },
  {
    "text": "web hooks and then it can dispatch notifications so the receiving of web hooks is kind of",
    "start": "2137140",
    "end": "2144280"
  },
  {
    "text": "cool because while the source controller if you give it a git repository it will on an interval that you specify go and",
    "start": "2144280",
    "end": "2151660"
  },
  {
    "text": "pull that repository to find any changes um but you can also register a web hook",
    "start": "2151660",
    "end": "2158260"
  },
  {
    "text": "receiver with the notification controller and then you can register that web hook with your say GitHub",
    "start": "2158260",
    "end": "2164140"
  },
  {
    "text": "repository or gitlab repository and that way rather than the source controller having to pull and wait five minutes or",
    "start": "2164140",
    "end": "2170200"
  },
  {
    "text": "however long your polling interval is it can instead just receive a web hook and know that it can go and reconcile",
    "start": "2170200",
    "end": "2177640"
  },
  {
    "text": "those changes immediately and then once the other controllers take actions",
    "start": "2177640",
    "end": "2185260"
  },
  {
    "text": "they will such as a customize apply or a Helm upgrade or install those will",
    "start": "2185260",
    "end": "2191740"
  },
  {
    "text": "surface events to the notification controller and you can then register dispatchers that will dispatch those",
    "start": "2191740",
    "end": "2197980"
  },
  {
    "text": "notifications to various places like slack teams Discord rocket chat there's",
    "start": "2197980",
    "end": "2203800"
  },
  {
    "text": "a whole host of places I think you can also just have it drop a web a web hook to something",
    "start": "2203800",
    "end": "2210540"
  },
  {
    "text": "all right and then the image automation controllers so by",
    "start": "2212200",
    "end": "2217300"
  },
  {
    "text": "default flux doesn't actually deploy the image automation controllers you have to kind of opt into that it's a little more",
    "start": "2217300",
    "end": "2222760"
  },
  {
    "text": "advanced use case um and it's Works in a way that you know you have to kind of determine your",
    "start": "2222760",
    "end": "2230079"
  },
  {
    "text": "organizational appetite for risk on on what you're letting things be automated for but the image automation controller",
    "start": "2230079",
    "end": "2236500"
  },
  {
    "text": "uh it has a reflector controller and an automation controller the reflector controller fetches tags from Docker",
    "start": "2236500",
    "end": "2242680"
  },
  {
    "text": "repository so you you define Docker or oci repositories it will constantly",
    "start": "2242680",
    "end": "2247960"
  },
  {
    "text": "check them and see when there are new tags pushed to those you can then write an image policy",
    "start": "2247960",
    "end": "2256839"
  },
  {
    "text": "that says Hey whenever there is a new tag in this Docker Repository",
    "start": "2256839",
    "end": "2262540"
  },
  {
    "text": "that matches this criteria I want you to select that as the new tag",
    "start": "2262540",
    "end": "2268900"
  },
  {
    "text": "it doesn't do anything with it yet we'll get to that in a second but you can Define that and it can be based",
    "start": "2268900",
    "end": "2275200"
  },
  {
    "text": "on either semantic versioning it can be based on a",
    "start": "2275200",
    "end": "2281079"
  },
  {
    "text": "lexical sort you can tell it I always want whatever the newest one is and there are different reasons to do those",
    "start": "2281079",
    "end": "2286720"
  },
  {
    "text": "for different environments but once it receives a new tag it will then",
    "start": "2286720",
    "end": "2294180"
  },
  {
    "text": "go and read configurations that you have in your git repository called image",
    "start": "2294180",
    "end": "2300640"
  },
  {
    "text": "update configurations or automations and take action on those and the common one",
    "start": "2300640",
    "end": "2308020"
  },
  {
    "text": "is by placing a specially formatted comment that you can see on the flux website into your yaml configurations it",
    "start": "2308020",
    "end": "2316060"
  },
  {
    "text": "can go update Docker tags so you can either put this special comment right on",
    "start": "2316060",
    "end": "2321400"
  },
  {
    "text": "your deployments or stateful sets or jobs where you want a particular Docker",
    "start": "2321400",
    "end": "2327520"
  },
  {
    "text": "image tag to be updated or you can use a feature of customize that will update",
    "start": "2327520",
    "end": "2333359"
  },
  {
    "text": "image tags throughout your customization by specifying it in your customized file or you could maybe put this comment in",
    "start": "2333359",
    "end": "2342180"
  },
  {
    "text": "values.yaml file for Helm that specifies an image tag that you want updated and whenever that policy that you",
    "start": "2342180",
    "end": "2349300"
  },
  {
    "text": "defined let's say it was semantic versioning sees a new tag that is newer",
    "start": "2349300",
    "end": "2354640"
  },
  {
    "text": "than the previous one and meets your criteria the automation controller will go and find that file or all those files",
    "start": "2354640",
    "end": "2361900"
  },
  {
    "text": "in your repository make the change to that tag and then commit it back to git",
    "start": "2361900",
    "end": "2368140"
  },
  {
    "text": "now we can do so on the same Branch it read it from which is going to trigger things to just roll out automatically",
    "start": "2368140",
    "end": "2373599"
  },
  {
    "text": "right away or you can have it commit to a separate branch that way you could use a pull request process in order to uh to",
    "start": "2373599",
    "end": "2380380"
  },
  {
    "text": "actually approve that change but when it Go the important thing to note is it does not actually make",
    "start": "2380380",
    "end": "2386140"
  },
  {
    "text": "changes in your cluster it makes a change to your actual declared configuration in the git repository",
    "start": "2386140",
    "end": "2392200"
  },
  {
    "text": "commits it back and then on the next flux sync cycle flux says hey there's",
    "start": "2392200",
    "end": "2397720"
  },
  {
    "text": "been a change to this image tag I'm going to apply it via customize I'm going to apply it via Helm right it's",
    "start": "2397720",
    "end": "2402940"
  },
  {
    "text": "still maintaining its own get Ops principles of hey we're not just going to do magic stuff here",
    "start": "2402940",
    "end": "2408040"
  },
  {
    "text": "with some minor exceptions ah but uh we're going to actually declare this stuff the one minor exception I",
    "start": "2408040",
    "end": "2414940"
  },
  {
    "text": "would put in there is that when you are defining semantic versioning for a Helm",
    "start": "2414940",
    "end": "2420460"
  },
  {
    "text": "chart to be released you can use semantic versioning selectors there and",
    "start": "2420460",
    "end": "2426460"
  },
  {
    "text": "sell and tell it hey I want you to just go ahead and install a new version of this Helm chart whenever these",
    "start": "2426460",
    "end": "2431680"
  },
  {
    "text": "conditions are met one I'll do with that a lot is for projects that I kind of trust like maybe uh Ingress in Gen X or",
    "start": "2431680",
    "end": "2439900"
  },
  {
    "text": "you know cert manager that have shown a pretty good history of making reasonable semantic versioning choices I might go",
    "start": "2439900",
    "end": "2445780"
  },
  {
    "text": "ahead and let them automatically install patch versions of those charts just so I'm kind of getting updated bug fixes",
    "start": "2445780",
    "end": "2451540"
  },
  {
    "text": "and um and security releases without having to think about it but for minor versions",
    "start": "2451540",
    "end": "2458560"
  },
  {
    "text": "or major versions I want to control that okay so we talked about the customized",
    "start": "2458560",
    "end": "2464500"
  },
  {
    "text": "controller and that there's a customization crd",
    "start": "2464500",
    "end": "2470500"
  },
  {
    "text": "so an unfortunate Choice was made in the",
    "start": "2470500",
    "end": "2476380"
  },
  {
    "text": "beginning of the flux project you know I can see how they got here they said hey we want to have a",
    "start": "2476380",
    "end": "2482320"
  },
  {
    "text": "controller that needs to go and deploy customizations that are built for",
    "start": "2482320",
    "end": "2487359"
  },
  {
    "text": "customize and so what are we going to call our crd that tells our system how to deploy a",
    "start": "2487359",
    "end": "2494619"
  },
  {
    "text": "customization we're going to call it customization I really wish it was called a customization release or",
    "start": "2494619",
    "end": "2499780"
  },
  {
    "text": "something like that but it's not so as you can see here if you're looking",
    "start": "2499780",
    "end": "2504940"
  },
  {
    "text": "closely we have two different kubernetes objects that each have a kind called",
    "start": "2504940",
    "end": "2510339"
  },
  {
    "text": "customization they differ by their API version the one on our left is",
    "start": "2510339",
    "end": "2518640"
  },
  {
    "text": "customized.config.ph.io this is the regular customization that we talked about at the top of the presentation",
    "start": "2518640",
    "end": "2524260"
  },
  {
    "text": "okay this is the one that can go and do all those customized things",
    "start": "2524260",
    "end": "2529300"
  },
  {
    "text": "the one on the right is flux's version okay and it represents a set of",
    "start": "2529300",
    "end": "2534940"
  },
  {
    "text": "instructions that tells flux how to go find the other customization and apply",
    "start": "2534940",
    "end": "2540040"
  },
  {
    "text": "it it's a very unfortunate naming overlap",
    "start": "2540040",
    "end": "2545400"
  },
  {
    "text": "but uh [Music] but we will",
    "start": "2545400",
    "end": "2550599"
  },
  {
    "text": "just have to live with it probably until flux V3 at least I don't know if there's any momentum on getting it changed in the",
    "start": "2550599",
    "end": "2557859"
  },
  {
    "text": "community or not but that's what it is also I guess real quick I do see someone asked a question about crd",
    "start": "2557859",
    "end": "2565440"
  },
  {
    "text": "so a crd in kubernetes is a custom resource definition okay and that is",
    "start": "2565440",
    "end": "2572500"
  },
  {
    "text": "basically a way that um anybody but generally open source projects or vendors can create new types",
    "start": "2572500",
    "end": "2580240"
  },
  {
    "text": "of kubernetes objects right these are both examples of crds well",
    "start": "2580240",
    "end": "2586359"
  },
  {
    "text": "customizes is technically uh the customization on the left is built into kubernetes because it is built in by the",
    "start": "2586359",
    "end": "2593140"
  },
  {
    "text": "by the kubernetes team but the one on the right is an actual crd a custom resource definition so this is where the",
    "start": "2593140",
    "end": "2599560"
  },
  {
    "text": "flux team wrote and oh if you've ever seen a crd if you haven't seen a crd don't they are",
    "start": "2599560",
    "end": "2607000"
  },
  {
    "text": "literally thousands in some case tens of thousands of lines of yaml to Define",
    "start": "2607000",
    "end": "2612640"
  },
  {
    "text": "these things you don't want to get into that you don't write them by hand they get generated from go Lane code but you",
    "start": "2612640",
    "end": "2620440"
  },
  {
    "text": "define customizations and it's basically a set of instructions to the kubernetes API that says hey here's a new object",
    "start": "2620440",
    "end": "2626680"
  },
  {
    "text": "that I want you to be able to maintain on our cluster all right I want to be able to create these types of objects",
    "start": "2626680",
    "end": "2632740"
  },
  {
    "text": "and I want to have things respond to them right so",
    "start": "2632740",
    "end": "2637980"
  },
  {
    "text": "all right so let's dig into",
    "start": "2638859",
    "end": "2645000"
  },
  {
    "text": "one of infinite possible repository structures when you're using flux",
    "start": "2645900",
    "end": "2651940"
  },
  {
    "text": "okay this is the one that I use all the time this one has served me well for",
    "start": "2651940",
    "end": "2657819"
  },
  {
    "text": "several years it has been battle tested and we'll take this through top to",
    "start": "2657819",
    "end": "2663880"
  },
  {
    "text": "bottom just a little bit what I like to I like to refer to this as a platform repo okay so typically",
    "start": "2663880",
    "end": "2669940"
  },
  {
    "text": "whenever especially if you are say a platform engineer that's supporting multiple Dev teams throughout an organization it can be a good idea to",
    "start": "2669940",
    "end": "2677500"
  },
  {
    "text": "have your own repository that defines all of your configurations for your different environments for your",
    "start": "2677500",
    "end": "2683020"
  },
  {
    "text": "infrastructure in a platform repo I will typically store all of my flux configurations like this as well as",
    "start": "2683020",
    "end": "2689440"
  },
  {
    "text": "terraform that's beyond the scope of this talk but here's what we've got so",
    "start": "2689440",
    "end": "2694960"
  },
  {
    "text": "I'll usually have a top level folder called apps and under that I place you guessed it apps here we've got an",
    "start": "2694960",
    "end": "2701260"
  },
  {
    "text": "example of this pod Info app that has the same structure that we identified earlier we've got a base with all of our",
    "start": "2701260",
    "end": "2708339"
  },
  {
    "text": "common deployment and service resources and a customization this is a customized customization",
    "start": "2708339",
    "end": "2714040"
  },
  {
    "text": "that defines how to pick up all those resources and then we've got overlays for Dev stage and prod whatever other",
    "start": "2714040",
    "end": "2720760"
  },
  {
    "text": "environments we might have and each one of those has a customization another customized customization that references",
    "start": "2720760",
    "end": "2726760"
  },
  {
    "text": "the base and says here's how you deploy pod info for Dev or stage or prod",
    "start": "2726760",
    "end": "2732880"
  },
  {
    "text": "and then we would have other app folders for all of our other applications back in front end whatever all these",
    "start": "2732880",
    "end": "2739300"
  },
  {
    "text": "applications are that need to be deployed to your cluster we put those there now a common question",
    "start": "2739300",
    "end": "2745540"
  },
  {
    "text": "I get is like well does that mean we're going to a mono repo no not necessarily all I store in this is just the yaml",
    "start": "2745540",
    "end": "2753400"
  },
  {
    "text": "files for kubernetes I'm only storing the things that tell how to deploy the kubernetes objects the application",
    "start": "2753400",
    "end": "2760119"
  },
  {
    "text": "source code is not here you could replicate this structure inside each one",
    "start": "2760119",
    "end": "2765579"
  },
  {
    "text": "of your application repositories if that works better for you and you can have flux point at each one of those different repositories to find what it",
    "start": "2765579",
    "end": "2772359"
  },
  {
    "text": "needs to be applying okay I prefer based on the way that I interact with my",
    "start": "2772359",
    "end": "2777400"
  },
  {
    "text": "systems and my client systems to have it all in a single repository that is decoupled from the application code",
    "start": "2777400",
    "end": "2786660"
  },
  {
    "text": "I then have a cluster Services top level folder Okay so",
    "start": "2786940",
    "end": "2792520"
  },
  {
    "text": "cluster Services is something I Define as basically all the stuff that needs to",
    "start": "2792520",
    "end": "2798280"
  },
  {
    "text": "run in your kubernetes cluster that's not your actual applications right so Ingress controllers cert managers",
    "start": "2798280",
    "end": "2805480"
  },
  {
    "text": "cluster Auto scaler you know maybe Prometheus and grafana for monitoring",
    "start": "2805480",
    "end": "2811800"
  },
  {
    "text": "log collection all of these kinds of things are what I call cluster Services right they are sort of the things that",
    "start": "2811800",
    "end": "2817839"
  },
  {
    "text": "are helping your applications be able to actually run in a kubernetes cluster and I'll store those there but you'll notice",
    "start": "2817839",
    "end": "2823839"
  },
  {
    "text": "we're using the exact same structure here but you'll notice I've got a helm.yaml",
    "start": "2823839",
    "end": "2828880"
  },
  {
    "text": "here for cluster Services I almost always try to deploy those with help right those are full-on projects that",
    "start": "2828880",
    "end": "2835720"
  },
  {
    "text": "are maintained by teams outside of my organization that I want to just be able to install via a",
    "start": "2835720",
    "end": "2842980"
  },
  {
    "text": "Helm chart all right and then we'll see down here there's overlays",
    "start": "2842980",
    "end": "2848560"
  },
  {
    "text": "where I can customize each one of those I've got a values.yaml file here in the base I can also have a values.yaml file",
    "start": "2848560",
    "end": "2854140"
  },
  {
    "text": "down in the overlay so that I can set up the exact type of command that we talked",
    "start": "2854140",
    "end": "2859359"
  },
  {
    "text": "about earlier where we've got our values.yaml our base.yaml and our overlay.yaml that are coming in to our",
    "start": "2859359",
    "end": "2866380"
  },
  {
    "text": "Helm command to modify that for a particular environment and then a little bit hard to see down",
    "start": "2866380",
    "end": "2871900"
  },
  {
    "text": "here but at the bottom this clusters folder at the top level and in each in that clusters folder I'll have a folder",
    "start": "2871900",
    "end": "2878740"
  },
  {
    "text": "for each environment each cluster that we operate right and then typically I map each cluster to an environment so",
    "start": "2878740",
    "end": "2885280"
  },
  {
    "text": "Dev stage prod again you'll see it's got a flux system folder in there that has a",
    "start": "2885280",
    "end": "2890380"
  },
  {
    "text": "whole bunch of stuff in it that is generated by flux when you bootstrap your cluster the flux CLI will generate all these for you put it right in your",
    "start": "2890380",
    "end": "2896920"
  },
  {
    "text": "repository maintain it there but then I have two interesting files here",
    "start": "2896920",
    "end": "2902700"
  },
  {
    "text": "apps.yaml and clusterservices.yaml and as you might be able to see down here at the bottom those are called out",
    "start": "2902700",
    "end": "2908560"
  },
  {
    "text": "as flux customizations all right so my apps.yaml file is typically one file",
    "start": "2908560",
    "end": "2915400"
  },
  {
    "text": "with several flux customizations in it that point to each one of the",
    "start": "2915400",
    "end": "2920680"
  },
  {
    "text": "applications up in the apps folder all right so in the dev cluster I'm",
    "start": "2920680",
    "end": "2926260"
  },
  {
    "text": "saying I want you to deploy these apps and in the dev cluster my apps.yaml will",
    "start": "2926260",
    "end": "2933400"
  },
  {
    "text": "point to the dev overlay for pod info in the clusterservices.yaml my flux",
    "start": "2933400",
    "end": "2940359"
  },
  {
    "text": "customization will point to the dev overlay for the nginx Ingress for the Ingress",
    "start": "2940359",
    "end": "2947079"
  },
  {
    "text": "engine X cluster service this really once you kind of wrap your",
    "start": "2947079",
    "end": "2953020"
  },
  {
    "text": "head around this structure it really kind of starts to make a whole lot of sense and and makes it very easy to go",
    "start": "2953020",
    "end": "2959800"
  },
  {
    "text": "look and understand which things are being deployed into a given cluster",
    "start": "2959800",
    "end": "2965520"
  },
  {
    "text": "what configurations do they have how do those configurations vary between environments right but you can also see",
    "start": "2965520",
    "end": "2972520"
  },
  {
    "text": "how it starts to give you a ton of consistency across your environments",
    "start": "2972520",
    "end": "2978400"
  },
  {
    "text": "okay you now have almost everything for each one of your applications or cluster Services defined",
    "start": "2978400",
    "end": "2985660"
  },
  {
    "text": "in a common place with just a little bit of variance per environment also defined in a common place easy to reason about",
    "start": "2985660",
    "end": "2992440"
  },
  {
    "text": "easy to collaborate on easy to compare the differences between environments on",
    "start": "2992440",
    "end": "2998818"
  },
  {
    "text": "now one more thing and we will actually go ahead and",
    "start": "3000300",
    "end": "3006000"
  },
  {
    "text": "drop right out to GitHub to look at this one because it's a little bit easier but here I have a",
    "start": "3006000",
    "end": "3014460"
  },
  {
    "text": "sample repo that has the very structure that we just looked at and I'm going to show you what one of",
    "start": "3014460",
    "end": "3021540"
  },
  {
    "text": "my cluster Services looks like for external DNS and how we apply some of the features of both",
    "start": "3021540",
    "end": "3027720"
  },
  {
    "text": "customize and Helm in order to change this across deployments so in this helm.yaml",
    "start": "3027720",
    "end": "3036599"
  },
  {
    "text": "file I've defined a Helm repository at the top I'm telling it I want to go look I want to go look at the bitnami helm",
    "start": "3036599",
    "end": "3042660"
  },
  {
    "text": "chart repo to find Helm charts and then down here I'm defining a Helm release and this tells flux's Helm controller",
    "start": "3042660",
    "end": "3050460"
  },
  {
    "text": "that I want you to go do a release of the external DNS Helm chart version",
    "start": "3050460",
    "end": "3056359"
  },
  {
    "text": "6.20.x like I said I let them do the patch releases I trust them from the bitnami helm Repository",
    "start": "3056359",
    "end": "3063000"
  },
  {
    "text": "it's got a little bit of configuration that says okay you know if something goes wrong I want you to retry it at least three times on",
    "start": "3063000",
    "end": "3069180"
  },
  {
    "text": "an install or an upgrade the really interesting part here is this values from section okay there's values from",
    "start": "3069180",
    "end": "3076260"
  },
  {
    "text": "and I'm telling it hey I want you to go get values from a config map called external DNS values and I want you to",
    "start": "3076260",
    "end": "3082680"
  },
  {
    "text": "get values from a config mat called external DNS overlay values and this one",
    "start": "3082680",
    "end": "3088079"
  },
  {
    "text": "I normally Mark the overlay values is optional I don't in external DNS and we'll see why in just a minute",
    "start": "3088079",
    "end": "3093960"
  },
  {
    "text": "but this says this lets me take my values files that I'm storing in my repository use",
    "start": "3093960",
    "end": "3101160"
  },
  {
    "text": "customize to generate a config map that contains that values file as a key",
    "start": "3101160",
    "end": "3108839"
  },
  {
    "text": "right and then when I've defined this on here that tells the helm controller go to this",
    "start": "3108839",
    "end": "3114720"
  },
  {
    "text": "config map pull that values file out and use it when you construct your Helm install command or Helm upgrade command",
    "start": "3114720",
    "end": "3120180"
  },
  {
    "text": "and I want and it's going to use these in order so my base values is going to",
    "start": "3120180",
    "end": "3125700"
  },
  {
    "text": "be first and my overlay values is going to be second that allows my overlay to modify the base",
    "start": "3125700",
    "end": "3133220"
  },
  {
    "text": "now the other interesting thing remember I told you that the uh customize will append hashes onto our",
    "start": "3134280",
    "end": "3142680"
  },
  {
    "text": "config map names you can also do this with Secrets by the way important to note there so if",
    "start": "3142680",
    "end": "3149220"
  },
  {
    "text": "I go look in my base we'll see that I have not defined the",
    "start": "3149220",
    "end": "3154680"
  },
  {
    "text": "file I want to show you well let's look at a different one then I think it's in here",
    "start": "3154680",
    "end": "3160940"
  },
  {
    "text": "I've got this customized config because the config map generator and",
    "start": "3161220",
    "end": "3167880"
  },
  {
    "text": "secret generator they know all about the built-in kubernetes objects so they know where to find references to the config",
    "start": "3167880",
    "end": "3173280"
  },
  {
    "text": "maps to update them but they might not know they absolutely do not know about",
    "start": "3173280",
    "end": "3178319"
  },
  {
    "text": "custom resource definitions right there could be any number of custom resource definitions in your cluster and they",
    "start": "3178319",
    "end": "3184680"
  },
  {
    "text": "can't keep up with that so here you're writing a configuration that says Hey whenever",
    "start": "3184680",
    "end": "3189900"
  },
  {
    "text": "the config map generator runs and generates a new name also look for a",
    "start": "3189900",
    "end": "3196800"
  },
  {
    "text": "Helm release object and at this path in the yaml update the name",
    "start": "3196800",
    "end": "3203220"
  },
  {
    "text": "same with the secrets right and you can do this for any other types of custom resource definitions by simply creating",
    "start": "3203220",
    "end": "3210660"
  },
  {
    "text": "a configuration file and referencing it now let's look at",
    "start": "3210660",
    "end": "3216599"
  },
  {
    "text": "let's go back to our cluster services and look at external DNS and see how it is that we're modifying this in our base",
    "start": "3216599",
    "end": "3223220"
  },
  {
    "text": "we've got a values file that just sets our log format to Json it's the only common setting we really needed to set",
    "start": "3223220",
    "end": "3229260"
  },
  {
    "text": "for this nice and simple I want that in all environments but if I come to my overlays and look at",
    "start": "3229260",
    "end": "3235619"
  },
  {
    "text": "Dev my values file here I've got and this is just an example so",
    "start": "3235619",
    "end": "3241619"
  },
  {
    "text": "I don't actually have an Arn here but I'm telling it some different things I'm telling it oh hey this one",
    "start": "3241619",
    "end": "3247680"
  },
  {
    "text": "is in the EU North one region of AWS with a public Zone it also needs these",
    "start": "3247680",
    "end": "3253800"
  },
  {
    "text": "other values to be changed it's a service account that I want to apply an annotation to obviously that annotation",
    "start": "3253800",
    "end": "3259200"
  },
  {
    "text": "is going to have to change between every environment right so I need to define those at the overlay level and that way",
    "start": "3259200",
    "end": "3266760"
  },
  {
    "text": "this can all get munched together and create a way to deploy my external DNS Helm chart into Dev or stage or prod",
    "start": "3266760",
    "end": "3274319"
  },
  {
    "text": "with the appropriate credentials",
    "start": "3274319",
    "end": "3278900"
  },
  {
    "text": "all right so",
    "start": "3283260",
    "end": "3289040"
  },
  {
    "text": "question we answered on the crd yep that one is answered",
    "start": "3290579",
    "end": "3296940"
  },
  {
    "text": "um can you point flux to Prometheus or nginx Ingress Helm chart and at the same",
    "start": "3296940",
    "end": "3303960"
  },
  {
    "text": "time read the values file you have created in your own repo yes",
    "start": "3303960",
    "end": "3310319"
  },
  {
    "text": "so I think the the question there which I don't",
    "start": "3310319",
    "end": "3315480"
  },
  {
    "text": "know when that came in maybe that one was already answered by what I just said but that's that's what we were just going over is that I'm storing these",
    "start": "3315480",
    "end": "3321480"
  },
  {
    "text": "value files in my repo and I'm saying go fetch the helm chart from their Helm repository But ultimately what flux is",
    "start": "3321480",
    "end": "3329099"
  },
  {
    "text": "doing is constructing a Helm upgrade command really and it's going to say Helm upgrade and it's going to take the values that I pass it here and",
    "start": "3329099",
    "end": "3337079"
  },
  {
    "text": "and perform that install",
    "start": "3337079",
    "end": "3340579"
  },
  {
    "text": "all right is that repo public uh yes this repo that I'm looking that",
    "start": "3342660",
    "end": "3348540"
  },
  {
    "text": "we're looking at here is in fact public it is and I'll I will drop the link to it in the room slack channel here but it",
    "start": "3348540",
    "end": "3355980"
  },
  {
    "text": "is at github.com moonswitch workshops slash terraform eks flux I gave a",
    "start": "3355980",
    "end": "3362280"
  },
  {
    "text": "two-day workshop on managing clusters on AWS with flux at the beginning of the",
    "start": "3362280",
    "end": "3367859"
  },
  {
    "text": "conference and this is sort of the almost final state of that Workshop if",
    "start": "3367859",
    "end": "3372960"
  },
  {
    "text": "uh for those who went through it and you can reference this and it's got most of this information in it",
    "start": "3372960",
    "end": "3379520"
  },
  {
    "text": "all right how do you stage updates to different environments to make sure updates are first tested before being",
    "start": "3382500",
    "end": "3388559"
  },
  {
    "text": "released to production uh that's a great question we use overlays because we have an overlay for",
    "start": "3388559",
    "end": "3395880"
  },
  {
    "text": "each application and a separate configuration for each cluster we can say",
    "start": "3395880",
    "end": "3401240"
  },
  {
    "text": "you know if you're looking at like let's talk about say the helm chart version right if we had our Helm chart version",
    "start": "3401240",
    "end": "3407400"
  },
  {
    "text": "of 6.2.3 right or an image tag version defined in our base right we want to",
    "start": "3407400",
    "end": "3413880"
  },
  {
    "text": "actually change that from the overlay and we would do that in a number of ways a really common one would be a patch",
    "start": "3413880",
    "end": "3420420"
  },
  {
    "text": "right so I can have a version defined in my base and then my overlay I can write",
    "start": "3420420",
    "end": "3425700"
  },
  {
    "text": "a patch that says okay well only for Dev do I want you to try changing the helm chart version to 7.0 and let's see what",
    "start": "3425700",
    "end": "3432660"
  },
  {
    "text": "happens or only in Dev do I want you to put this you know git commit Shaw based",
    "start": "3432660",
    "end": "3438599"
  },
  {
    "text": "Docker tag out there from our latest Dev build and see how that works and if it",
    "start": "3438599",
    "end": "3443940"
  },
  {
    "text": "works then we will look at checking that change in to the other environments in order to actually propagate that change",
    "start": "3443940",
    "end": "3451640"
  },
  {
    "text": "all right how do you do promotion of application releases between environments in the",
    "start": "3452520",
    "end": "3459180"
  },
  {
    "text": "folder structure what I just talked about right there you simply write your uh your application write your patches",
    "start": "3459180",
    "end": "3465420"
  },
  {
    "text": "move them down through and ultimately you know once you get to where that same version is is in each environment then",
    "start": "3465420",
    "end": "3472500"
  },
  {
    "text": "you would just check in a change that puts that version at the base and you're ready to go through another cycle again",
    "start": "3472500",
    "end": "3478700"
  },
  {
    "text": "um uh let's see here what is the main difference between Argo CD and flux um",
    "start": "3479760",
    "end": "3485339"
  },
  {
    "text": "well Argo CD has a GUI by default um and they do a lot of the same things",
    "start": "3485339",
    "end": "3490920"
  },
  {
    "text": "but they take some slightly different approaches into how they develop their graph and which features they actually",
    "start": "3490920",
    "end": "3496079"
  },
  {
    "text": "support um so I I and I found that I've had more",
    "start": "3496079",
    "end": "3501900"
  },
  {
    "text": "consistent reliability with flux than I have with Argo CD I've used both I still",
    "start": "3501900",
    "end": "3507480"
  },
  {
    "text": "use both I actually have some there are there are some features of Argo CD can",
    "start": "3507480",
    "end": "3513960"
  },
  {
    "text": "do some interesting things with reading jsonnet files in order to generate multiple configurations so I've used",
    "start": "3513960",
    "end": "3519599"
  },
  {
    "text": "that to set up Dynamic like QA Lane deployments for some clients even though I manage the rest of their cluster with",
    "start": "3519599",
    "end": "3524700"
  },
  {
    "text": "flux uh is there any particular reason you",
    "start": "3524700",
    "end": "3530640"
  },
  {
    "text": "would choose flux over Argo or any other same reasons I just said there I choose flux first I only go with Argo if it can",
    "start": "3530640",
    "end": "3537359"
  },
  {
    "text": "do something that flux can't and those things are very very limited",
    "start": "3537359",
    "end": "3542540"
  },
  {
    "text": "how does flux work when it comes to client pull versus server Push by default flux will pull the source",
    "start": "3542700",
    "end": "3549960"
  },
  {
    "text": "controller will pull all of the repositories you define but you as I said in the beginning you can define a",
    "start": "3549960",
    "end": "3555059"
  },
  {
    "text": "notification web hook receiver in order to receive web hooks that will trigger",
    "start": "3555059",
    "end": "3560880"
  },
  {
    "text": "changes and let's see here how would you deploy your base cluster with flux if it",
    "start": "3560880",
    "end": "3567780"
  },
  {
    "text": "doesn't exist yet great question flux has great documentation on their website about their bootstrap command so you run",
    "start": "3567780",
    "end": "3574140"
  },
  {
    "text": "the bootstrap command with access to your cluster it will deploy everything into the cluster set",
    "start": "3574140",
    "end": "3580440"
  },
  {
    "text": "up your git repo and we have lots and lots of questions all",
    "start": "3580440",
    "end": "3586079"
  },
  {
    "text": "right well I think we're going to have to move off on after that so anyway flexible bootstrap it you can also",
    "start": "3586079",
    "end": "3591119"
  },
  {
    "text": "there's a flux terraform provider that can bootstrap your cluster for you all right so oops",
    "start": "3591119",
    "end": "3597720"
  },
  {
    "text": "as I said uh I'm Jeff French from Moon switch software um",
    "start": "3597720",
    "end": "3603359"
  },
  {
    "text": "thank you for coming to learn about Helm flux and get Ops I hope that you've",
    "start": "3603359",
    "end": "3608520"
  },
  {
    "text": "taken something away from this that you can go and apply in your projects or at",
    "start": "3608520",
    "end": "3614099"
  },
  {
    "text": "your company and start having nice consistent",
    "start": "3614099",
    "end": "3619619"
  },
  {
    "text": "easy deployments across all of your environments I will stay back for to try",
    "start": "3619619",
    "end": "3626760"
  },
  {
    "text": "to answer some additional of these questions for anybody who wants to come talk but that is my time thank you",
    "start": "3626760",
    "end": "3633340"
  },
  {
    "text": "[Applause]",
    "start": "3633340",
    "end": "3639059"
  }
]