[
  {
    "start": "0",
    "end": "252000"
  },
  {
    "text": "okay so I know people are still coming in with us fine we don't mind we'll just get started now because we've got so",
    "start": "4580",
    "end": "10730"
  },
  {
    "text": "much stuff we want to pack into sixty minutes you know is we can't win no time for pleasantries or whatever so I'm",
    "start": "10730",
    "end": "17840"
  },
  {
    "text": "Steve and I'm Ryan I'm the other guy yes the other guy all right so we work together we're we're both at Microsoft",
    "start": "17840",
    "end": "24110"
  },
  {
    "text": "on the SP net team and we are to the people who have mainly responsible for designing what you see in the blazer",
    "start": "24110",
    "end": "30800"
  },
  {
    "text": "programming model today and Ryan's got extra special powers when it comes to compiler stuff so if the stuff you don't",
    "start": "30800",
    "end": "36380"
  },
  {
    "text": "like about it and you know who to blame and we don't care but you know you can come and tell us anyway yeah if you found a bug you can ask us and I'll tell",
    "start": "36380",
    "end": "42890"
  },
  {
    "text": "you whose fault it is if it's Steve's if it's mine yeah it's probably yes I'll give you a clue it's yeah",
    "start": "42890",
    "end": "48530"
  },
  {
    "text": "all right so we're gonna get started and in this talk you're gonna get a bit of a two for the price of one thing because",
    "start": "48530",
    "end": "55489"
  },
  {
    "text": "we're gonna go through two different subject matters that we think will be really interesting to you if you are a",
    "start": "55489",
    "end": "61010"
  },
  {
    "text": "little bit more on the advanced end of the blazer developer spectrum so I'm",
    "start": "61010",
    "end": "67610"
  },
  {
    "text": "just gonna get started pretty much straightaway with with that half of the top that I'm gonna focus on and now and",
    "start": "67610",
    "end": "73010"
  },
  {
    "text": "I want to mention that I haven't seen yours and you haven't seen mine yes so if an argument breaks out it is genuine",
    "start": "73010",
    "end": "78230"
  },
  {
    "text": "because this is all gonna be new to me yeah it may flatly contradict each other so my part of the talk so imagine that",
    "start": "78230",
    "end": "86380"
  },
  {
    "text": "what okay firstly you know that blazer is a component or intered framework right you build components and you",
    "start": "86380",
    "end": "92450"
  },
  {
    "text": "construct your application after out of that if you're a little bit more advanced you may also know that part of the design of this system is to let you",
    "start": "92450",
    "end": "99290"
  },
  {
    "text": "put your components in packages and reuse them and share them across projects and to even publish them to",
    "start": "99290",
    "end": "104960"
  },
  {
    "text": "NuGet and make yourself into an open-source superstar so that's what I want to focus on now I want to give you",
    "start": "104960",
    "end": "112070"
  },
  {
    "text": "some tips on how you can build a really nice Razer class library that packages",
    "start": "112070",
    "end": "117290"
  },
  {
    "text": "up Blaser components that you can share and it might be that you just want to share them with other teams within your",
    "start": "117290",
    "end": "122660"
  },
  {
    "text": "company it might be that you want to share them with the public in general or even if that's not the case it might",
    "start": "122660",
    "end": "128360"
  },
  {
    "text": "just be that you want to make things really good for your future self so that when you come to another blazer project",
    "start": "128360",
    "end": "133880"
  },
  {
    "text": "in the future you can make use of stuff that you made in the past in the most sort of convenien we're and you can think how I was a",
    "start": "133880",
    "end": "139400"
  },
  {
    "text": "genius for designing it in that way and it's so nice to reuse now so the scenario I want to cover of the example",
    "start": "139400",
    "end": "146900"
  },
  {
    "text": "case that I'll be using for a Razer class library is to do with building charts you know graphs and pie charts",
    "start": "146900",
    "end": "152629"
  },
  {
    "text": "and all that kind of stuff and I think it's a good fit for a Razer class library because you wouldn't probably",
    "start": "152629",
    "end": "159170"
  },
  {
    "text": "expect the Blazer framework to have built-in graphing features or hope you don't but you probably also wouldn't",
    "start": "159170",
    "end": "164750"
  },
  {
    "text": "expect to write that code yourself by hand you probably think that you're gonna get some third-party package that",
    "start": "164750",
    "end": "170359"
  },
  {
    "text": "gives you graphing capabilities so that's what we're gonna do for the next 20 25 minutes or so and the particular",
    "start": "170359",
    "end": "178280"
  },
  {
    "text": "way that I want to approach this is by showing you how we can wrap up some functionality that's provided by a",
    "start": "178280",
    "end": "184010"
  },
  {
    "text": "third-party JavaScript library so there's this thing called Chartist j/s which is a really nice way of making",
    "start": "184010",
    "end": "190129"
  },
  {
    "text": "graphs and charts but it's for JavaScript and what if we want to make a really nice set of Blazer components",
    "start": "190129",
    "end": "197480"
  },
  {
    "text": "that follow all the kind of most convenient API patterns so that I users can have a really fun time making some",
    "start": "197480",
    "end": "203720"
  },
  {
    "text": "charts and graphs now some of you have a question I heard that I heard that web everson web assembly is like antimatter",
    "start": "203720",
    "end": "209930"
  },
  {
    "text": "for JavaScript that it like eats JavaScript is that true just what assembly eat JavaScript yeah yeah well",
    "start": "209930",
    "end": "216500"
  },
  {
    "text": "you can use JavaScript from web assembly what else do you mean I guess I mean",
    "start": "216500",
    "end": "221870"
  },
  {
    "text": "like there there are obviously lots of like JavaScript components that are out there that are still useful oh yeah yeah",
    "start": "221870",
    "end": "228169"
  },
  {
    "text": "so like all that sounds like all that's needed is somebody has to make a blazer wrapper for that JavaScript component us",
    "start": "228169",
    "end": "234590"
  },
  {
    "text": "and then people can use it without even knowing you know how its implemented yeah that's absolutely true yeah so if we give some nice dotnet API",
    "start": "234590",
    "end": "241280"
  },
  {
    "text": "wrappers to whatever kind of underlying functionality we want to use then you can consume that very nicely as a.net",
    "start": "241280",
    "end": "246650"
  },
  {
    "text": "developer and he didn't really need to know okay how the underlying implementation worked so how can we do",
    "start": "246650",
    "end": "252769"
  },
  {
    "start": "252000",
    "end": "604000"
  },
  {
    "text": "it well I'm gonna give you eight steps to success and we will start with a very basic one which is just how to create",
    "start": "252769",
    "end": "259609"
  },
  {
    "text": "and run arrays a class library in the first place so over in my IDE here you",
    "start": "259609",
    "end": "264830"
  },
  {
    "text": "can see that I haven't really got started yet I've got this empty solution with just this folder you know",
    "start": "264830",
    "end": "270139"
  },
  {
    "text": "I want to add a razor class library you may have done this yourself but if you haven't you can do it through the visual",
    "start": "270139",
    "end": "275419"
  },
  {
    "text": "studio project creation dialog or you can do it on the command line that's a way of doing that there but I mean vs so",
    "start": "275419",
    "end": "281300"
  },
  {
    "text": "I'm going to start searching for razor and we get razor class library and we'll go on from there I'm gonna put it in a",
    "start": "281300",
    "end": "287090"
  },
  {
    "text": "particular place and I'll call it blazer chart East like that because that's the",
    "start": "287090",
    "end": "293300"
  },
  {
    "text": "thing that I'm doing and then when I have them create there's one option that I want to point out to you yeah there's",
    "start": "293300",
    "end": "298430"
  },
  {
    "text": "a bunch of options but the one that I think is the least obvious what it even means is this one support pages and",
    "start": "298430",
    "end": "304219"
  },
  {
    "text": "views so what that means is what we're talking about when we say pages of use here our MVC views and razor pages so",
    "start": "304219",
    "end": "312050"
  },
  {
    "text": "those are not laser technology these are a different type of razor class library",
    "start": "312050",
    "end": "317629"
  },
  {
    "text": "and that's not the one that we want because we want to build something that works in all Blaser environments including on web assembly so we don't",
    "start": "317629",
    "end": "324650"
  },
  {
    "text": "want to tie it to razor pages or MVC views so we're gonna leave that box unchecked that's just the one tip that",
    "start": "324650",
    "end": "330949"
  },
  {
    "text": "you need to know okay so we create our razor class library and then we'll have a look and see what is in that and what",
    "start": "330949",
    "end": "337849"
  },
  {
    "text": "we do find in there is a bit of example stuff so we've got a razor component and we've got some static files as well",
    "start": "337849",
    "end": "344779"
  },
  {
    "text": "because razor class libraries can contain components as well as static assets that you will use from those",
    "start": "344779",
    "end": "350930"
  },
  {
    "text": "components okay now before we do anything useful with this we need to have some way of running it and I can't",
    "start": "350930",
    "end": "356360"
  },
  {
    "text": "run array as a class library on its own it's just like a dotnet class library we need to have some kind of application",
    "start": "356360",
    "end": "361520"
  },
  {
    "text": "that it runs inside and so what I usually like to do when I create a razor purse library is to create a set of",
    "start": "361520",
    "end": "367129"
  },
  {
    "text": "sample projects that show how it can be used now do we want to use a blazer webassembly sample project or a blazer",
    "start": "367129",
    "end": "373490"
  },
  {
    "text": "server one well if we are being ambitious and we want to make the best possible cost library we want it to work",
    "start": "373490",
    "end": "379789"
  },
  {
    "text": "in all environments so how about we do both so I'm going to add a couple of sample projects right now and in this",
    "start": "379789",
    "end": "386750"
  },
  {
    "text": "talk I'm not really going to have time to type out everything by hand so I'm going to use git to jump backwards and",
    "start": "386750",
    "end": "393469"
  },
  {
    "text": "forwards to different points in the history of my project so we can accelerate our progress a little bit so",
    "start": "393469",
    "end": "399500"
  },
  {
    "text": "now you'll see that I have got this samples directory alongside my source files where I've got",
    "start": "399500",
    "end": "405690"
  },
  {
    "text": "two different actual runnable projects webassembly and a server one now I'm just going to start of this web assembly",
    "start": "405690",
    "end": "411150"
  },
  {
    "text": "one first before I tell you how this stuff is set up so I'll start that going",
    "start": "411150",
    "end": "416669"
  },
  {
    "text": "in my browser right now and when that comes up you should see it's pretty familiar it's the typical sort of file",
    "start": "416669",
    "end": "422460"
  },
  {
    "text": "new project blazer thing what have I changed about well I've removed a couple of the pages because I",
    "start": "422460",
    "end": "427740"
  },
  {
    "text": "don't really need them I just want to render one component and I've also got this little bit of a text up here saying what environment I'm running in and the",
    "start": "427740",
    "end": "434610"
  },
  {
    "text": "way that works if we go to our where as that's probably in is it nav menu it is",
    "start": "434610",
    "end": "441240"
  },
  {
    "text": "okay so here's the implementation for that I'm using this runtime information API to check where we're running and",
    "start": "441240",
    "end": "447539"
  },
  {
    "text": "displaying either web assembly or server okay now I've also got a server project and if I start that up you'll see what",
    "start": "447539",
    "end": "455190"
  },
  {
    "text": "comes out of there should also be very familiar to you because when that appears you'll see it's exactly the same",
    "start": "455190",
    "end": "461699"
  },
  {
    "text": "as what we had before except this time it says M server so to save myself a little bit of time I don't want to have",
    "start": "461699",
    "end": "467880"
  },
  {
    "text": "to keep copy and pasting code between these two samples I've actually referenced the web assembly sample from",
    "start": "467880",
    "end": "473219"
  },
  {
    "text": "the server sample maybe you didn't know you could do that but you can and then inside my host page on the server here",
    "start": "473219",
    "end": "479340"
  },
  {
    "text": "the actual root component that my server page is rendering is the same app that's coming from the web assembly sample so",
    "start": "479340",
    "end": "486029"
  },
  {
    "text": "I'm treating my web assembly sample as if itself was a class library and I could just reference one of my applications from another it just means",
    "start": "486029",
    "end": "492960"
  },
  {
    "text": "these two applications stay in sync with each other and I don't have to duplicate any code okay but what I actually want",
    "start": "492960",
    "end": "498690"
  },
  {
    "text": "to do is use some of the components from my Blaser Chartist project so I'm going",
    "start": "498690",
    "end": "504389"
  },
  {
    "text": "to go to this index page and I'm going to get rid of that and I'll try putting in a blazer Chartist component what okay",
    "start": "504389",
    "end": "512070"
  },
  {
    "text": "and that is what has just come out of my project template okay so let's start",
    "start": "512070",
    "end": "517349"
  },
  {
    "text": "that going and we'll see what that renders well by default it renders this little bit of text which is not super",
    "start": "517349",
    "end": "523589"
  },
  {
    "text": "interesting if you're wondering where that comes from well that comes out of our component one RAZR file so that's",
    "start": "523589",
    "end": "530130"
  },
  {
    "text": "doing exactly what you might expect with the exception that you'll see we've also got this CSS",
    "start": "530130",
    "end": "535710"
  },
  {
    "text": "class so what is that CSS class well that is wired up to this entry in our",
    "start": "535710",
    "end": "543120"
  },
  {
    "text": "style CSS file so you see we've got a particular border and a background image and stuff so you might be wondering well",
    "start": "543120",
    "end": "548880"
  },
  {
    "text": "why is that unstyled then why didn't the CSS stuff apply to it and the answer is because I didn't reference this",
    "start": "548880",
    "end": "554880"
  },
  {
    "text": "style.css file yet so if I'm a consumer of this razor class library I need to",
    "start": "554880",
    "end": "560279"
  },
  {
    "text": "choose which of the static assets in it I want to consume and where in my page they should appear so I'm adding that",
    "start": "560279",
    "end": "566820"
  },
  {
    "text": "reference with this particular URL format now and if you're wondering why the framework doesn't that ad doesn't",
    "start": "566820",
    "end": "572970"
  },
  {
    "text": "add that for you automatically that is exactly your question okay so the reason we did used to do that by the way we",
    "start": "572970",
    "end": "579240"
  },
  {
    "text": "used to add the references automatically but we found it wasn't practical in the real world because you need often to let",
    "start": "579240",
    "end": "585330"
  },
  {
    "text": "your user choose which of the static assets they want to use and choose which order those references should go in and",
    "start": "585330",
    "end": "591750"
  },
  {
    "text": "the framework can't know that sort of thing so if you're the class library author you're going to have to choose for yourself and document what",
    "start": "591750",
    "end": "598830"
  },
  {
    "text": "references people should add so now anyway you can see I've added that reference and my styling shows up cool",
    "start": "598830",
    "end": "604709"
  },
  {
    "text": "all right so that's the very very basics now how are we going to bring in this third-party JavaScript stuff that we",
    "start": "604709",
    "end": "610890"
  },
  {
    "text": "want to use well I've already done it so let's jump forward and I'll show you how that could be achieved and now in my",
    "start": "610890",
    "end": "617220"
  },
  {
    "text": "project you'll see I've got these files Chartist min dot CSS charter Stockman",
    "start": "617220",
    "end": "623010"
  },
  {
    "text": "das and I got those by literally just downloading them from the Chartists project website and putting them into my",
    "start": "623010",
    "end": "628860"
  },
  {
    "text": "project and that it's not really the best way to do this because now we have to deal with figuring out the versioning",
    "start": "628860",
    "end": "635400"
  },
  {
    "text": "manually and updating manually and stuff and I'll show you a better way we can approach this later but we're just getting started and I've also got",
    "start": "635400",
    "end": "641430"
  },
  {
    "text": "displays of chartres J s where I'm going to write my own code I've also got chart raiser and you can see in there what I'm",
    "start": "641430",
    "end": "647880"
  },
  {
    "text": "doing is just rendering it a bit of fixed markup which are deleting and I'm also using a blazer feature to capture a",
    "start": "647880",
    "end": "653820"
  },
  {
    "text": "reference to that div so that I can start passing references to that into JavaScript okay so I want to use that",
    "start": "653820",
    "end": "660990"
  },
  {
    "text": "now to actually render a chart at the moment it just displays this this little message there that says tell charters to",
    "start": "660990",
    "end": "667709"
  },
  {
    "text": "draw a chart so how do we make it draw a chart well we probably will go to the website for",
    "start": "667709",
    "end": "672990"
  },
  {
    "text": "charters J s and see what the API looks like and they're going to explain it to us in terms of JavaScript and they will",
    "start": "672990",
    "end": "678900"
  },
  {
    "text": "tell us that the thing you need to do to render a chart is something like this so you'll new a an instance of Chartist",
    "start": "678900",
    "end": "685260"
  },
  {
    "text": "line and pass an element to it and also pass a bunch of data that you want it to",
    "start": "685260",
    "end": "690570"
  },
  {
    "text": "render ok so as you can see it's just hard coded stuff right now but let's see can we actually call that in the first",
    "start": "690570",
    "end": "696030"
  },
  {
    "text": "place how do we call this create chart JavaScript function and pass an element to it from our raiser component well we",
    "start": "696030",
    "end": "703560"
  },
  {
    "text": "can do so using a pattern that you see a lot in Blazer applications which is that",
    "start": "703560",
    "end": "709110"
  },
  {
    "text": "we use ref to capture a reference to the element and then inside the on after render lifecycle method if this is the",
    "start": "709110",
    "end": "716190"
  },
  {
    "text": "first time we've rendered then we can use JavaScript Interop to call this method and we can literally just pass",
    "start": "716190",
    "end": "721530"
  },
  {
    "text": "the element directly from blazer into JavaScript so if you're wondering why that should be on after render and not",
    "start": "721530",
    "end": "728160"
  },
  {
    "text": "say uninitialized async the reason mainly is because we're trying to use this element and that element doesn't",
    "start": "728160",
    "end": "734850"
  },
  {
    "text": "even exist until we've rendered is something that gets produced by the rendering process so we can't use it",
    "start": "734850",
    "end": "740040"
  },
  {
    "text": "until we've rendered therefore we're going to put this into on after render there's another reason as well that I'll get to later on okay so assuming that",
    "start": "740040",
    "end": "748170"
  },
  {
    "text": "stuff works now can we do does our JavaScript code get run and do we actually render some charts inside the",
    "start": "748170",
    "end": "754680"
  },
  {
    "text": "browser let's see the answer is yes we are now successfully rendering a little graph which is cool okay",
    "start": "754680",
    "end": "761400"
  },
  {
    "start": "761000",
    "end": "926000"
  },
  {
    "text": "so we've successfully brought in some third-party JavaScript and we've invoked it but so far we don't really have any",
    "start": "761400",
    "end": "767940"
  },
  {
    "text": "proper API there's no way for our package user to specify what data is they want to render how can they give us",
    "start": "767940",
    "end": "774690"
  },
  {
    "text": "their own chart data well let me show you so I'm going to define a few extra",
    "start": "774690",
    "end": "780480"
  },
  {
    "text": "c-sharp class files to do this and I'll show them to you right now so you'll see I've now about this data directory here",
    "start": "780480",
    "end": "786930"
  },
  {
    "text": "with a bunch of c-sharp files inside it for example I've got chart type which is",
    "start": "786930",
    "end": "792330"
  },
  {
    "text": "any num I've got these two and I could add support for other things if later if I wanted I've also got chart data and",
    "start": "792330",
    "end": "798660"
  },
  {
    "text": "chart data is you define a set of labels which the horizontal x-axis labels and we can",
    "start": "798660",
    "end": "805380"
  },
  {
    "text": "also define a set of series that we want to plot and each series is something that's got a name and some data okay",
    "start": "805380",
    "end": "812130"
  },
  {
    "text": "now I've also added on to my chart component some parameters so you can now pass what type of chart you want it to",
    "start": "812130",
    "end": "818760"
  },
  {
    "text": "render and you can also pass an instance of chart data and then when we first create the chart I'm passing the type",
    "start": "818760",
    "end": "825930"
  },
  {
    "text": "into JavaScript and also every single time this thing renders which includes every time the data on it changes we're",
    "start": "825930",
    "end": "832710"
  },
  {
    "text": "also going to call this JavaScript method update chart and pass that data and the implementation on the JavaScript",
    "start": "832710",
    "end": "838860"
  },
  {
    "text": "side looks like this you can see the code later I published it to get over I'll tell you about that and if you look",
    "start": "838860",
    "end": "845190"
  },
  {
    "text": "inside the update chart you'll see it's is taking that data and it's passing it through okay so how do we actually use",
    "start": "845190",
    "end": "851340"
  },
  {
    "text": "this now as a consumer well I'm going to go back to my index page and you see I'm not passing any data just yet but I want",
    "start": "851340",
    "end": "858660"
  },
  {
    "text": "to pass some data so the sample date arrived got looks like this and as you can see I'm investigating a certain",
    "start": "858660",
    "end": "864990"
  },
  {
    "text": "conspiracy theory that I'm working on at the moment which is that maybe the global oil crisis caused Trump to tweet",
    "start": "864990",
    "end": "871110"
  },
  {
    "text": "more or maybe the route the causality goes the other way I don't know I haven't decided what my conspiracy is",
    "start": "871110",
    "end": "876210"
  },
  {
    "text": "yet but I'm gonna look at the graph and try and figure out what it is okay so I want to render some charts now using",
    "start": "876210",
    "end": "883260"
  },
  {
    "text": "that data so I can simply pass the data using these parameters that I've defined",
    "start": "883260",
    "end": "888600"
  },
  {
    "text": "so all being well we should now be able to plot these two series side-by-side",
    "start": "888600",
    "end": "894120"
  },
  {
    "text": "and compare them so back in the browser reload and you'll see we've now plotted these two graphs and we can try and",
    "start": "894120",
    "end": "900630"
  },
  {
    "text": "figure out you know what the theory about the conspiracy is and you could argue there's no real correlation but I",
    "start": "900630",
    "end": "906540"
  },
  {
    "text": "don't know I'm I'm still going with my conspiracy theory on that one I'm gonna punch up some of my examples ok had some",
    "start": "906540",
    "end": "914040"
  },
  {
    "text": "Boris jokes to them okay yeah that sounds good just try to mention brakes here as many",
    "start": "914040",
    "end": "919150"
  },
  {
    "text": "times together okay so we've got we've got a couple of charts that's great good",
    "start": "919150",
    "end": "925390"
  },
  {
    "text": "for us well done but so far we've got a very very basic API which is not very",
    "start": "925390",
    "end": "930730"
  },
  {
    "start": "926000",
    "end": "1320000"
  },
  {
    "text": "good it's not very idiomatic for Razer if someone is consuming this they will not feel like they're having a",
    "start": "930730",
    "end": "937000"
  },
  {
    "text": "particularly luxurious experience because they have to define all this code down here wouldn't it be nicer if",
    "start": "937000",
    "end": "943630"
  },
  {
    "text": "we could do it in a mol razor-like way for example we can pass a separate parameter for the labels like up there",
    "start": "943630",
    "end": "950200"
  },
  {
    "text": "and maybe instead of defining the series as an object literal we could have a syntax that looks like this series and",
    "start": "950200",
    "end": "957220"
  },
  {
    "text": "then we could start defining stuff like that that would be more razer e so how can we make a better api like that well",
    "start": "957220",
    "end": "964030"
  },
  {
    "text": "first thing is I'm going to go over to my chart raiser and I'm going to start",
    "start": "964030",
    "end": "969100"
  },
  {
    "text": "adding an extra parameter so I'm gonna say you can pass some labels but because this is a nice API I'm going to say it's",
    "start": "969100",
    "end": "975850"
  },
  {
    "text": "optional so I'm going to say if labels is not equal to null then we're going to",
    "start": "975850",
    "end": "981250"
  },
  {
    "text": "use them and if the labels is not equal to null then I'm going to write them onto this data property like that so now",
    "start": "981250",
    "end": "988390"
  },
  {
    "text": "it's optional if you want to pass all the data as one blob like this you can and if you want to split it up into separate parameters you can now I'm just",
    "start": "988390",
    "end": "995080"
  },
  {
    "text": "over writing some data that the user passed in which is arguably not the friendliest thing but it's it's a reasonable approximation to what we want",
    "start": "995080",
    "end": "1001770"
  },
  {
    "text": "to do right now so now back over here I can make sure that I've rebuilt everything and then hopefully the labels",
    "start": "1001770",
    "end": "1009230"
  },
  {
    "text": "property will show up in inter sense and I can start passing my labels in and I'm",
    "start": "1009230",
    "end": "1014730"
  },
  {
    "text": "going to do the same thing down here as well and now I don't even have to define it there at all so that's a slight",
    "start": "1014730",
    "end": "1020460"
  },
  {
    "text": "improvement next improvement is like I said I don't want to have to define this",
    "start": "1020460",
    "end": "1026040"
  },
  {
    "text": "object literal anymore I want to be able to use declarative razor syntax to specify the series so how do we do that",
    "start": "1026040",
    "end": "1033660"
  },
  {
    "text": "well in order for something like this to work we're going to need to define an extra component that's actually called",
    "start": "1033660",
    "end": "1039839"
  },
  {
    "text": "series so let me show you how we could achieve that and make it interact with the parent component so I've added a new",
    "start": "1039839",
    "end": "1048060"
  },
  {
    "text": "class now well firstly you can see this is what the the resulting API is going to look like you can see I don't have that object",
    "start": "1048060",
    "end": "1053909"
  },
  {
    "text": "literal at the bottom anymore so I think this is a bit nicer and I'll show you some advantages of that in a minute but",
    "start": "1053909",
    "end": "1059130"
  },
  {
    "text": "the actual implementation of it looks like this so you'll see I've got this class now called series dot CS and that",
    "start": "1059130",
    "end": "1065340"
  },
  {
    "text": "actually is a component now normally when you create a component you do so using a razor file and that's great that",
    "start": "1065340",
    "end": "1071669"
  },
  {
    "text": "you could totally do that in this case as well but arrays a component is just a",
    "start": "1071669",
    "end": "1077399"
  },
  {
    "text": "class after it's been compiled so if you want to you can define it with a regular CS class file just the same the only",
    "start": "1077399",
    "end": "1082740"
  },
  {
    "text": "difference is if you use a regular CS file you don't really have any way of defining the rendered markup because",
    "start": "1082740",
    "end": "1088409"
  },
  {
    "text": "you're just using C sharp but that's fine because this is going to be a data only component it's not going to render",
    "start": "1088409",
    "end": "1094230"
  },
  {
    "text": "any visible output it only exists to supply data to its parent so I'm showing you that we can do that with a CSV file",
    "start": "1094230",
    "end": "1100409"
  },
  {
    "text": "if we want and the syntax inside there is more or less the same as before so we've again able to accept parameters",
    "start": "1100409",
    "end": "1106409"
  },
  {
    "text": "for the name and the values we can use the same life cycle methods so when the parameters get set I'm going to build up",
    "start": "1106409",
    "end": "1112649"
  },
  {
    "text": "one of these series data objects I'm also going to receive a reference from the framework to the owner the parent",
    "start": "1112649",
    "end": "1119100"
  },
  {
    "text": "component which has being cascaded down and you can check the implementation later if you want to see exactly how",
    "start": "1119100",
    "end": "1124200"
  },
  {
    "text": "that works and then when this thing gets initialized and added to the UI we're adding the series to the parent and when",
    "start": "1124200",
    "end": "1130710"
  },
  {
    "text": "it gets removed from the UI we're also removing the series from the parent so as long as I've done everything",
    "start": "1130710",
    "end": "1136529"
  },
  {
    "text": "correctly I should be able to rebuild and reload in the browser and everything will behave like before which it does",
    "start": "1136529",
    "end": "1143250"
  },
  {
    "text": "but we've now got a nicer API and then one of the ways in which this is a nicer",
    "start": "1143250",
    "end": "1148529"
  },
  {
    "text": "API is that the person consuming it can do stuff in a more programmatic a more declarative way so previously if I",
    "start": "1148529",
    "end": "1155940"
  },
  {
    "text": "wanted to make my series toggleable on and off the user would have to write lots of code to add and remove stuff",
    "start": "1155940",
    "end": "1162690"
  },
  {
    "text": "from data structures but if we do it with razor syntax it can be done declaratively instead so let's say that",
    "start": "1162690",
    "end": "1168480"
  },
  {
    "text": "I want to have an ability to toggle Trump's tweets on and off okay so I'm going to take that boolean and I'm gonna",
    "start": "1168480",
    "end": "1175019"
  },
  {
    "text": "say just using normal razor syntax if we want to show Trump tweets then we'll have that series there and if not then",
    "start": "1175019",
    "end": "1181559"
  },
  {
    "text": "we want so it's really easy to use and to make that toggleable I'm going to simply wire that",
    "start": "1181559",
    "end": "1186930"
  },
  {
    "text": "up to a check box that's bound to that property okay let's check that this really works so back over here I'm going",
    "start": "1186930",
    "end": "1194820"
  },
  {
    "text": "to reload and then now you'll see we've got this check box and as I toggle it then there's that second day two serials",
    "start": "1194820",
    "end": "1200730"
  },
  {
    "text": "will go on and off so that's the advantage of using a nice idiomatic razor type syntax is that the person",
    "start": "1200730",
    "end": "1207720"
  },
  {
    "text": "using it can do all kinds of things to change what's going on at runtime without needing to know about your",
    "start": "1207720",
    "end": "1213570"
  },
  {
    "text": "special api's okay another thing that we can do to make our API is even better",
    "start": "1213570",
    "end": "1218940"
  },
  {
    "text": "what if I wanted to add some kind of tooltip to these charts or some extra CSS styling it's not completely clear",
    "start": "1218940",
    "end": "1225810"
  },
  {
    "text": "how I could do that as a consumer right now I could try to do it as follows for example I could try adding a title",
    "start": "1225810",
    "end": "1232950"
  },
  {
    "text": "attribute and some CSS styling that's hard-coded there let's see what happens",
    "start": "1232950",
    "end": "1237960"
  },
  {
    "text": "if I try and do that right now well if I do that and I hit reload then what happens now is we get an unhandled error",
    "start": "1237960",
    "end": "1245280"
  },
  {
    "text": "has occurred and if we look at the reason for why there's an error it's because objects of type chart does not",
    "start": "1245280",
    "end": "1251010"
  },
  {
    "text": "have a property matching the name title so by default the person consuming your component could only supply attributes",
    "start": "1251010",
    "end": "1257370"
  },
  {
    "text": "that you've declared a way of handling but if you're a high quality component author that wants to provide a",
    "start": "1257370",
    "end": "1263430"
  },
  {
    "text": "first-class experience to your users maybe you're going to make something like this work so we can't anticipate",
    "start": "1263430",
    "end": "1268500"
  },
  {
    "text": "every possible attribute that someone's going to supply to us but we can handle them all in some default kind of way so",
    "start": "1268500",
    "end": "1275280"
  },
  {
    "text": "what I'm going to do is add an extra parameter to my component which uses this special API capture and mash values",
    "start": "1275280",
    "end": "1282150"
  },
  {
    "text": "and that's going to let the framework build up a dictionary of all the extra attributes that have been supplied that",
    "start": "1282150",
    "end": "1287610"
  },
  {
    "text": "we haven't defied defined any handling for and then I can choose wearing my rendered markup I want them to go so I'm",
    "start": "1287610",
    "end": "1294300"
  },
  {
    "text": "going to use this syntax attributes with the @ symbol too because it's a directive attribute to add all these",
    "start": "1294300",
    "end": "1300870"
  },
  {
    "text": "extra attributes to my rendered output so now that I've done that instead of the thing that I did before being an",
    "start": "1300870",
    "end": "1306990"
  },
  {
    "text": "exception we'll see what comes up this time in fact it works and you'll see",
    "start": "1306990",
    "end": "1312150"
  },
  {
    "text": "we've got that faint yellow background and if I put the mouse there you'll see that our little tooltip actually shows",
    "start": "1312150",
    "end": "1317700"
  },
  {
    "text": "up okay so we're treating our users with a lot of care and allowing them to do",
    "start": "1317700",
    "end": "1324860"
  },
  {
    "start": "1320000",
    "end": "1436000"
  },
  {
    "text": "whatever kind of thing they want they can use that can pass different combinations of parameters they can use",
    "start": "1324860",
    "end": "1331070"
  },
  {
    "text": "razor syntax to surpass data declaratively and they can use arbitrary attributes in order to you know control",
    "start": "1331070",
    "end": "1338510"
  },
  {
    "text": "the rendered output quite nicely okay so we've got a nice API now if we're going",
    "start": "1338510",
    "end": "1344390"
  },
  {
    "text": "to continue with this sort of goal of providing the most first-class service we can then how about we make the",
    "start": "1344390",
    "end": "1350029"
  },
  {
    "text": "intellisense better as well I'm sure many of you know that with c-sharp you can add in line documentation that will",
    "start": "1350029",
    "end": "1357230"
  },
  {
    "text": "show up in intellisense what what not everyone seems to know is you can do that with Razer components too so right",
    "start": "1357230",
    "end": "1362899"
  },
  {
    "text": "now in the IDE if I'm consuming this stuff and I hover the mouse of a chart what does it tell me nothing really it",
    "start": "1362899",
    "end": "1369830"
  },
  {
    "text": "just says it's a chart have fun with that and if I hover over labels it just says so it's an enumerable of string",
    "start": "1369830",
    "end": "1375409"
  },
  {
    "text": "great there's just no real information being given to me but the editor",
    "start": "1375409",
    "end": "1381049"
  },
  {
    "text": "supports XML comments so I could go to my series class right now and I could use this triple slash syntax",
    "start": "1381049",
    "end": "1388460"
  },
  {
    "text": "like that and then I could fill in a bit of summary text and you can see we can have these strongly typed references in",
    "start": "1388460",
    "end": "1394279"
  },
  {
    "text": "the documentation from one class to another but it's not just CS files I can",
    "start": "1394279",
    "end": "1399470"
  },
  {
    "text": "also do this from a razor file as well for example let's say I want to add some",
    "start": "1399470",
    "end": "1404990"
  },
  {
    "text": "information about this this labels parameter so I'm going to drop in some text for that you know it's the x-axis",
    "start": "1404990",
    "end": "1411049"
  },
  {
    "text": "category labels okay so now I've done that if I go back over here and we try",
    "start": "1411049",
    "end": "1416659"
  },
  {
    "text": "doing this stuff again I'll hover of a series and you'll say now it's got that information that I just added with the",
    "start": "1416659",
    "end": "1421909"
  },
  {
    "text": "nice names first reference and if I hover over labels we'll get this message that we've added so it's a very small",
    "start": "1421909",
    "end": "1428269"
  },
  {
    "text": "and simple thing that you can do but it hopefully gives a better experience to people consuming your library okay well",
    "start": "1428269",
    "end": "1435980"
  },
  {
    "text": "okay let's think about compatibility a little bit so far I've been running exclusively on blazer webassembly but",
    "start": "1435980",
    "end": "1443059"
  },
  {
    "start": "1436000",
    "end": "1658000"
  },
  {
    "text": "does this stuff actually work if we're running on the server even though we're doing JavaScript Interop and what do I",
    "start": "1443059",
    "end": "1448340"
  },
  {
    "text": "even mean by it compatibility with pre-rendering well let me explain that to you well firstly let's check",
    "start": "1448340",
    "end": "1453930"
  },
  {
    "text": "does this work if we run on the server so remember that we've got this server sample I'm just going to get that to run",
    "start": "1453930",
    "end": "1459600"
  },
  {
    "text": "now and you remember I've made I've wired it up to the web assembly sample so that it always renders the exact same",
    "start": "1459600",
    "end": "1465000"
  },
  {
    "text": "output so if I start that up now you'll see we're running on the server now but we have the same behavior as before the",
    "start": "1465000",
    "end": "1471000"
  },
  {
    "text": "same toggling the same styling the same tooltips and everything and we can see an easily test that our component works",
    "start": "1471000",
    "end": "1476940"
  },
  {
    "text": "equally well on the server and if you're wondering what it takes to make a component that works perfectly on the",
    "start": "1476940",
    "end": "1483120"
  },
  {
    "text": "server - there's pretty much just one rule that you need to follow which is to do with JavaScript Interop when you're",
    "start": "1483120",
    "end": "1489270"
  },
  {
    "text": "running on the server or the JavaScript Interop is taking place over a network connection and therefore it can only",
    "start": "1489270",
    "end": "1494820"
  },
  {
    "text": "work if it's asynchronous so if you're using JavaScript Interop api's make sure you only use the async ones and that's",
    "start": "1494820",
    "end": "1501390"
  },
  {
    "text": "quite easy to do because by default that's the only thing that we actually let you do for this exact reason there",
    "start": "1501390",
    "end": "1507420"
  },
  {
    "text": "is a way of not doing it and I'm just telling you not to override us so you can see this j/s interface here",
    "start": "1507420",
    "end": "1514800"
  },
  {
    "text": "it's got invocation can invoke void async if you use those then you are safe your code will work on the server as",
    "start": "1514800",
    "end": "1520140"
  },
  {
    "text": "well there's a way of doing synchronous interrupt which I will not show you because I don't want you to do it and if you do that then it will not work on the",
    "start": "1520140",
    "end": "1527430"
  },
  {
    "text": "server so just don't what about this pre-rendering thing what do I mean by that well when you're running the blazer",
    "start": "1527430",
    "end": "1533970"
  },
  {
    "text": "application particularly if you're running on the server but you can do this with web assembly as well we also support server-side pre-rendering so the",
    "start": "1533970",
    "end": "1541110"
  },
  {
    "text": "actual initial markup of all your components gets resolved on the server and sends down to the browser now my",
    "start": "1541110",
    "end": "1546720"
  },
  {
    "text": "application doesn't actually do that just yet if I look inside my rendered HTML you'll see at the root here we're",
    "start": "1546720",
    "end": "1553350"
  },
  {
    "text": "rendering this app element and there's not really any content inside there there's this massive comment block which",
    "start": "1553350",
    "end": "1558630"
  },
  {
    "text": "is how the server and client stuff gets wired up together but there's no pre-rendered marker in there if we want",
    "start": "1558630",
    "end": "1564420"
  },
  {
    "text": "to do server-side pre-rendering it's pretty easy you can go to the component tag in your host project and change this",
    "start": "1564420",
    "end": "1570660"
  },
  {
    "text": "render mode in fact the default render mode is server pre-rendered but I turned it off just so that I could demo this",
    "start": "1570660",
    "end": "1575670"
  },
  {
    "text": "like that if I change it into server pre-rendered mode then we're going to get slightly different output from the",
    "start": "1575670",
    "end": "1581550"
  },
  {
    "text": "web server so if I come over here and hit reload then now instead of that comment block or as well as the comment",
    "start": "1581550",
    "end": "1587430"
  },
  {
    "text": "block we also get all the initial markup that's rendered from our components including stuff like this which you'll",
    "start": "1587430",
    "end": "1593820"
  },
  {
    "text": "recognize is coming from our chart component and everything works together at runtime so when I reload we do the",
    "start": "1593820",
    "end": "1600600"
  },
  {
    "text": "browser initially sees the pre-rendered HTML and then the interactivity takes over so what does it take for you to",
    "start": "1600600",
    "end": "1606660"
  },
  {
    "text": "ensure compatibility with the pre rendering mode well there's basically just one rule for that as well which is",
    "start": "1606660",
    "end": "1612630"
  },
  {
    "text": "also to do with JavaScript Interop because when you are doing JavaScript Interop you need to understand that that",
    "start": "1612630",
    "end": "1619290"
  },
  {
    "text": "does not make any sense during pre rendering because during pre rendering there is no browser therefore there is no JavaScript therefore you can't",
    "start": "1619290",
    "end": "1625620"
  },
  {
    "text": "interrupt with any JavaScript so if you want to do jeaious Interop make sure you put it in the on after render async",
    "start": "1625620",
    "end": "1632010"
  },
  {
    "text": "method and not inside on in it or on parameters sir because all the life cycle methods run",
    "start": "1632010",
    "end": "1637770"
  },
  {
    "text": "during pre rendering as well except for this one the on after render ones do not run during pre rendering therefore",
    "start": "1637770",
    "end": "1644610"
  },
  {
    "text": "that's a safe place to do JavaScript interrupt and thankfully that's also the only useful place to do it in many cases",
    "start": "1644610",
    "end": "1650370"
  },
  {
    "text": "so as long as you follow that rule that your class library will be compatible with all three of these environments",
    "start": "1650370",
    "end": "1656900"
  },
  {
    "text": "okay right then we're down to our last couple of tips that I want to give you",
    "start": "1656900",
    "end": "1662130"
  },
  {
    "start": "1658000",
    "end": "1703000"
  },
  {
    "text": "now the next one is to do with how we're dealing with these static resources so",
    "start": "1662130",
    "end": "1668040"
  },
  {
    "text": "at the moment you will remember that I put these Chartist files directly inside my project excuse me which is fine it's",
    "start": "1668040",
    "end": "1676320"
  },
  {
    "text": "a very basic way of doing things but we're missing a few features here like",
    "start": "1676320",
    "end": "1682260"
  },
  {
    "text": "how do we get updates to newer versions of it also how do we do things like bundling and minification of our",
    "start": "1682260",
    "end": "1689520"
  },
  {
    "text": "resources and what if I wanted to write my Blaser Chartist JS file inside in",
    "start": "1689520",
    "end": "1694890"
  },
  {
    "text": "typescript rather than JavaScript well to do that sort of thing we would want to have something like a web pack and",
    "start": "1694890",
    "end": "1701910"
  },
  {
    "text": "typescript build process now I know many of you may be thinking hang on a minute web pack and typescript the whole reason",
    "start": "1701910",
    "end": "1709170"
  },
  {
    "start": "1703000",
    "end": "1929000"
  },
  {
    "text": "I'm using blazer is to avoid those kind of things right so that's kind of the point right so if",
    "start": "1709170",
    "end": "1715810"
  },
  {
    "text": "you're the component class library author then you're the one who's taking on the complexity of dealing with things",
    "start": "1715810",
    "end": "1721480"
  },
  {
    "text": "like a web pack build system so that your users don't have to you're the hero in this story so let's be the ones who",
    "start": "1721480",
    "end": "1728890"
  },
  {
    "text": "add the web pack build system and then we can get the benefits and our consumers don't have to even know what's",
    "start": "1728890",
    "end": "1734620"
  },
  {
    "text": "going on with that so I'm going to jump ahead again to a web pack build system",
    "start": "1734620",
    "end": "1739660"
  },
  {
    "text": "and if we look inside the project now and we dismiss these helpful notifications then you'll see I don't",
    "start": "1739660",
    "end": "1745690"
  },
  {
    "text": "have a double double root directory anymore I've removed it what I've got inside now is this static assets folder",
    "start": "1745690",
    "end": "1751360"
  },
  {
    "text": "doesn't have to be called that I've just made up this name and inside there I've got some stuff to do with typescript and",
    "start": "1751360",
    "end": "1757270"
  },
  {
    "text": "web pack for example I've got blazer Chartist TS and that is a typescript based version of the same code that you",
    "start": "1757270",
    "end": "1764230"
  },
  {
    "text": "saw me right before it's a bit longer because it does all this extra type checking stuff and it's classes and things now it's also quite cool because",
    "start": "1764230",
    "end": "1771460"
  },
  {
    "text": "it's importing the charts Chartist library from NPM so don't need to have a separate reference to Chartist anymore I",
    "start": "1771460",
    "end": "1778060"
  },
  {
    "text": "can just declare what version of Chartists I want to have inside my package JSON file and I don't need to",
    "start": "1778060",
    "end": "1783700"
  },
  {
    "text": "have its actual files inside my project so that's nice then in order to actually build this stuff I've added a simple web",
    "start": "1783700",
    "end": "1790720"
  },
  {
    "text": "pack config if you're familiar with web pack you'll know this is a fairly straight forwards one if you're not then",
    "start": "1790720",
    "end": "1795910"
  },
  {
    "text": "you can just find this code and copy and paste it later it's pretty straightforward it's just using the typescript loader so that it knows how",
    "start": "1795910",
    "end": "1802420"
  },
  {
    "text": "to read typescript and you will be able to compile that okay and then finally I've chosen just to be a bit ambitious",
    "start": "1802420",
    "end": "1809410"
  },
  {
    "text": "to integrate this with the default msbuild build system you don't necessarily have to do that if you want",
    "start": "1809410",
    "end": "1815980"
  },
  {
    "text": "you can create a web pack in typescript build system that you just manually invoke from the command line you can",
    "start": "1815980",
    "end": "1821410"
  },
  {
    "text": "just go to command prompt and start running MPM install and web pack build and things like that on the command",
    "start": "1821410",
    "end": "1827230"
  },
  {
    "text": "prompt but I wanted to see what it would look like to really integrate that with msbuild so I've made these really awful targets",
    "start": "1827230",
    "end": "1832960"
  },
  {
    "text": "files that do things like if the package lock has changed we'll run NPM install automatically if your target script",
    "start": "1832960",
    "end": "1839710"
  },
  {
    "text": "sources will rebuild and will also automatically copy the CSS out of the",
    "start": "1839710",
    "end": "1845290"
  },
  {
    "text": "Chartists to package into our project so if I build that now that you'll see this dub-dub-dub root",
    "start": "1845290",
    "end": "1851080"
  },
  {
    "text": "directory has now appeared and if we look in there this is the output we've copied the CSS out and we've copied this",
    "start": "1851080",
    "end": "1857050"
  },
  {
    "text": "javascript file out and this is bundling everything together so I've got my code in here and I've got all the Chartist",
    "start": "1857050",
    "end": "1863230"
  },
  {
    "text": "code and so if I just run my project again now then everything should work the same as before if I reload that",
    "start": "1863230",
    "end": "1871120"
  },
  {
    "text": "everything is still working great that's wonderful and that's coming out of the build output but you may notice a couple",
    "start": "1871120",
    "end": "1878350"
  },
  {
    "text": "of things like what about the fact that this is not minified right now well",
    "start": "1878350",
    "end": "1883450"
  },
  {
    "text": "that's going to be not optimal in production well don't worry because we can set up all the necessary parameters",
    "start": "1883450",
    "end": "1888790"
  },
  {
    "text": "for that so if I change myself into really release mode now and I do a build on this which I will in momentarily then",
    "start": "1888790",
    "end": "1897010"
  },
  {
    "text": "this time because of all those targets it will say ah something has changed therefore I'm going to rerun webpack",
    "start": "1897010",
    "end": "1902620"
  },
  {
    "text": "which I wouldn't have done otherwise and we're doing it in production burg now so you'll see we've now got a minified",
    "start": "1902620",
    "end": "1907870"
  },
  {
    "text": "version of the output there so we've automated all these manual steps that we would normally have to do which is",
    "start": "1907870",
    "end": "1913360"
  },
  {
    "text": "pretty nice I would say it's an absolute ordeal trying to figure out this stuff so I would try and find some example",
    "start": "1913360",
    "end": "1921250"
  },
  {
    "text": "that that you can copy from if you want to do this kind of thing and of course I'll be publishing the code for this",
    "start": "1921250",
    "end": "1926680"
  },
  {
    "text": "project if you want to check that out later ok so that's adding a web pack and typescript build system we've got a nice",
    "start": "1926680",
    "end": "1934330"
  },
  {
    "start": "1929000",
    "end": "2088000"
  },
  {
    "text": "class library now it's got a nice API we've got a nice build system for it and finally we're going to want to actually",
    "start": "1934330",
    "end": "1939880"
  },
  {
    "text": "publish it and share it with the world you can of course do that manually you can run dotnet pack on the command line",
    "start": "1939880",
    "end": "1944980"
  },
  {
    "text": "you can get a new get package and you can manually go and start uploading that and you'll get a dog if you want to but",
    "start": "1944980",
    "end": "1951130"
  },
  {
    "text": "it's a bit of a pain to keep doing that every time somebody sends you a PR and you're merging you then have to go through this process all over again",
    "start": "1951130",
    "end": "1956830"
  },
  {
    "text": "wouldn't it be nice if you could automate this process all over if you could continually deploy every commit as",
    "start": "1956830",
    "end": "1963370"
  },
  {
    "text": "a new package to new get dog that used to be really hard to do but it's actually quite straightforward to do now",
    "start": "1963370",
    "end": "1968890"
  },
  {
    "text": "so if you've not seen how this sort of thing looks let me show you there's probably several ways you can do it you could do it with github actions or some",
    "start": "1968890",
    "end": "1975310"
  },
  {
    "text": "other kind of CI system I'm going to do it with as you'd ever right now but just just because I'm",
    "start": "1975310",
    "end": "1980560"
  },
  {
    "text": "familiar with that and because also it's free if you want to as long as you're not building your project too many times",
    "start": "1980560",
    "end": "1986500"
  },
  {
    "text": "which we're not so my my definition for how that works is this yeah mold file",
    "start": "1986500",
    "end": "1991540"
  },
  {
    "text": "and it's got a set of steps in it it says first we're going to choose which net SDK we want to use we're then going",
    "start": "1991540",
    "end": "1997540"
  },
  {
    "text": "to run a build to make sure that everything is happy including all the samples and then if that passes will run",
    "start": "1997540",
    "end": "2003240"
  },
  {
    "text": "dotnet pack to produce the actual package file and assuming that all of this stuff has succeeded so far and that",
    "start": "2003240",
    "end": "2009540"
  },
  {
    "text": "we're on the master branch then we are going to push that up to new gap dog so",
    "start": "2009540",
    "end": "2016500"
  },
  {
    "text": "when you create one of these config files like this probably buy a copy and pasting an example then you can go and",
    "start": "2016500",
    "end": "2022200"
  },
  {
    "text": "configure that with Azure DevOps so you create a project on agile devops and you",
    "start": "2022200",
    "end": "2027660"
  },
  {
    "text": "point it to your source files on github and it will find the yum or file in there and it'll say do you want to use",
    "start": "2027660",
    "end": "2033060"
  },
  {
    "text": "this as the build definition and you say yes and once you've done that it will start watching for all the commits that go",
    "start": "2033060",
    "end": "2039450"
  },
  {
    "text": "into your project and whenever a commit occurs it will run that pipeline and build your stuff so you can see it's",
    "start": "2039450",
    "end": "2045150"
  },
  {
    "text": "been building every time I've done a commit on this and if we look inside there you'll see all the different steps",
    "start": "2045150",
    "end": "2051060"
  },
  {
    "text": "within my job that I've configured such as the one that automatically publishes two new gap dog here you go this is",
    "start": "2051060",
    "end": "2057450"
  },
  {
    "text": "where it's actually pushing this file to nuga okay so that being the case if I go",
    "start": "2057450",
    "end": "2063148"
  },
  {
    "text": "and look at my project page on new get dog you'll see that we've got all these different versions of it that have been",
    "start": "2063149",
    "end": "2068850"
  },
  {
    "text": "automatically deployed to new get every time I've done a commit and I'm actually quite scared the people have start to",
    "start": "2068850",
    "end": "2074790"
  },
  {
    "text": "use this thing already it was not intentional this is just a demo and it's",
    "start": "2074790",
    "end": "2080129"
  },
  {
    "text": "very limited functionality bit everybody go use it yeah send me books I'm going to disable the issues on get up so you",
    "start": "2080130",
    "end": "2086940"
  },
  {
    "text": "can't okay so there you go those are my recommended eight steps to success as a robe razor",
    "start": "2086940",
    "end": "2093720"
  },
  {
    "text": "plus library author I hope that's useful to you if you want to get the code for this example then you can go to this URL",
    "start": "2093720",
    "end": "2099830"
  },
  {
    "text": "and obviously you'll find all the stuff that so with that I'm going to hand over",
    "start": "2099830",
    "end": "2105930"
  },
  {
    "text": "to Mike link hmm he's gonna whack you with some other stuff I'm gonna trip you with this power",
    "start": "2105930",
    "end": "2112020"
  },
  {
    "text": "hammer here we go",
    "start": "2112020",
    "end": "2117380"
  },
  {
    "text": "okay great we're alive here so Steve mentioned Steve introduced me I'm Ryan I'm you",
    "start": "2134509",
    "end": "2141989"
  },
  {
    "text": "know of the two of us maybe the compiler focused person or this sort of compiler whiz kid or maybe",
    "start": "2141989",
    "end": "2147450"
  },
  {
    "text": "mad scientist is a more appropriate term and I wanted to talk to you all about some compiler stuff mostly because I",
    "start": "2147450",
    "end": "2155130"
  },
  {
    "text": "think it's cool and I think it's interesting so hopefully you do too so about me",
    "start": "2155130",
    "end": "2160469"
  },
  {
    "text": "developer and architect and asp net core I've worked on pretty much everything in asp net core for the last couple years",
    "start": "2160469",
    "end": "2166499"
  },
  {
    "text": "really had the pleasure to be involved in the blazer effort and maybe spent about a year to a year and a half",
    "start": "2166499",
    "end": "2171900"
  },
  {
    "text": "working on compiler and language features there you can find my presentation materials from this and",
    "start": "2171900",
    "end": "2177299"
  },
  {
    "text": "other talks at that location after this is done so agenda for today I'm going to",
    "start": "2177299",
    "end": "2182969"
  },
  {
    "text": "be talking about I'm going to spend 30 seconds you know saying what is a compiler just in case anybody doesn't",
    "start": "2182969",
    "end": "2188579"
  },
  {
    "text": "learn that in computer science school pretty easy to grasp what's special and unique about the Razr compiler or what",
    "start": "2188579",
    "end": "2194759"
  },
  {
    "text": "we're doing for blazer and then we're gonna look at some code and we're gonna try and put it under the x-ray and",
    "start": "2194759",
    "end": "2200789"
  },
  {
    "text": "understand it a little bit and see examine maybe in detail some language features or what the compilers role law",
    "start": "2200789",
    "end": "2206670"
  },
  {
    "text": "is or what the steps are you won't need this information you might you might be",
    "start": "2206670",
    "end": "2212670"
  },
  {
    "text": "somebody who likes to learn this way you might be somebody who's like oh man this is blowing my mind if you're the kind of",
    "start": "2212670",
    "end": "2218849"
  },
  {
    "text": "person that likes low-level concepts I think you'll appreciate it and enjoy it I hope it's fun and it's interesting for",
    "start": "2218849",
    "end": "2223979"
  },
  {
    "text": "you even if it's not useful but I know I know some people out there really like to learn things from first principles so",
    "start": "2223979",
    "end": "2230099"
  },
  {
    "text": "maybe maybe this is helpful for you I'm not going to promise that it's not but I do hope that it's fun and and so in",
    "start": "2230099",
    "end": "2236999"
  },
  {
    "text": "order to talk about what to do today I'm gonna date myself pretty severely so you can choose you can choose your metaphor",
    "start": "2236999",
    "end": "2243299"
  },
  {
    "text": "for what we're gonna look at this today I've got I've got two options for you we're gonna look at the code and try to",
    "start": "2243299",
    "end": "2248640"
  },
  {
    "text": "see the high-level details that are buried in in all the code or this is either gonna be like an old time cartoon",
    "start": "2248640",
    "end": "2254759"
  },
  {
    "start": "2252000",
    "end": "2729000"
  },
  {
    "text": "where somebody walks in front of an x-ray machine or gets electrocuted and you get to see all their bones and see",
    "start": "2254759",
    "end": "2260249"
  },
  {
    "text": "all the things inside so simpson's and matrix may be dating myself a little bit there but",
    "start": "2260249",
    "end": "2265530"
  },
  {
    "text": "that's kind of what I hope you're gonna get out of today so what is a compiler what does it compiler typically do well",
    "start": "2265530",
    "end": "2271830"
  },
  {
    "text": "there's a set of steps that a compiler typically goes through you start with the source code or the things that you typed in or libraries that you pull in",
    "start": "2271830",
    "end": "2278700"
  },
  {
    "text": "the compiler is going to read all that text and it's going to build an understanding of that we typically think",
    "start": "2278700",
    "end": "2284609"
  },
  {
    "text": "about that as a syntax tree or like a like a sort of tree representation of the code that you've you've put in most",
    "start": "2284609",
    "end": "2291630"
  },
  {
    "text": "compilers nowadays are then going to transform the syntax trees into an intermediate representation the",
    "start": "2291630",
    "end": "2297359"
  },
  {
    "text": "intermediate representation is going to be a little bit closer to what the compiler outputs and usually is a useful",
    "start": "2297359",
    "end": "2302849"
  },
  {
    "text": "data form a more useful data form than a syntax tree for what the compilers job is and then lastly the compiler produces",
    "start": "2302849",
    "end": "2310020"
  },
  {
    "text": "some output after running a series of transformations over the intermediate representation so that output could be",
    "start": "2310020",
    "end": "2315720"
  },
  {
    "text": "native code it could be IL it could be JavaScript in the case of the typescript",
    "start": "2315720",
    "end": "2321119"
  },
  {
    "text": "compiler or in the case of the Blaser compiler it could be c-sharp so introducing the Blaser compiler or the",
    "start": "2321119",
    "end": "2327869"
  },
  {
    "text": "razor compiler they're kind of one in the same the job of the razor compiler is to take your C sharp code your",
    "start": "2327869",
    "end": "2334520"
  },
  {
    "text": "compiled assemblies that are your references and your CS HTML or your dot razor files and it actually produces",
    "start": "2334520",
    "end": "2341220"
  },
  {
    "text": "c-sharp on the other end we don't produce dotnet IL directly we produce like valid c-sharp code that could",
    "start": "2341220",
    "end": "2347609"
  },
  {
    "text": "actually be edited and compiled by the vanilla c-sharp compiler so walking through those steps from the point of",
    "start": "2347609",
    "end": "2353460"
  },
  {
    "text": "view of the razor compiler we're gonna read your CS HTML or razor files we're gonna build those into syntax trees",
    "start": "2353460",
    "end": "2359810"
  },
  {
    "text": "these syntax trees don't just represent one language which is kind of spooky because an HTML document or a CS HTML",
    "start": "2359810",
    "end": "2366990"
  },
  {
    "text": "document or a razor document has got that mix of c-sharp and razor so we actually build syntax trees that contain",
    "start": "2366990",
    "end": "2373109"
  },
  {
    "text": "multiple languages and sort of embed in transition between those in razor you can have c-sharp in HTML in c-sharp in",
    "start": "2373109",
    "end": "2380849"
  },
  {
    "text": "HTML you can have nesting then we turn those syntax trees into an intermediate",
    "start": "2380849",
    "end": "2386700"
  },
  {
    "text": "representation our intermediate representation in razor and in Blaser actually is pretty close to a generated",
    "start": "2386700",
    "end": "2394650"
  },
  {
    "text": "c-sharp code it's pretty close to c-sharp class so RRR our represents structural concepts like",
    "start": "2394650",
    "end": "2401609"
  },
  {
    "text": "classes and parameters and properties and methods as well as representing output concepts like markup or",
    "start": "2401609",
    "end": "2409050"
  },
  {
    "text": "expressions or binding or things like that so your your razor and blazer level",
    "start": "2409050",
    "end": "2415140"
  },
  {
    "text": "primitives are expressed in the IR or represented in the IR as well as a bunch of C sharp detail stuff like what is the",
    "start": "2415140",
    "end": "2421950"
  },
  {
    "text": "name of the class that's going to be generated and then lastly we output generated c-sharp code so we literally",
    "start": "2421950",
    "end": "2427500"
  },
  {
    "text": "write c-sharp files to disk and then run them through the see the normal c-sharp compiler in order to produce something",
    "start": "2427500",
    "end": "2433650"
  },
  {
    "text": "that's runnable so some things that make the razor or blazer compiler kind of special and kind of unique and kind of",
    "start": "2433650",
    "end": "2439920"
  },
  {
    "text": "tricky we have to parse and recognize the structure of all the HTML that",
    "start": "2439920",
    "end": "2445020"
  },
  {
    "text": "you've pasted in some people may know that a difference between CS HTML and razor is that CS hTML is text so when",
    "start": "2445020",
    "end": "2453780"
  },
  {
    "text": "you have an MVC view or an MVC razor page or something like that the runtime is actually treating the HTML as text it",
    "start": "2453780",
    "end": "2461160"
  },
  {
    "text": "knows very little about the structure of that HTML and you can do all kinds of invalid stuff or I guess maybe not",
    "start": "2461160",
    "end": "2468119"
  },
  {
    "text": "well-formed stuff is a better more precise term and the compiler and the runtime are happy with that because they",
    "start": "2468119",
    "end": "2473880"
  },
  {
    "text": "treat the output as text not as elements or as a tree whereas in Blaser",
    "start": "2473880",
    "end": "2479390"
  },
  {
    "text": "everything we create is ultimately a tree or like an instruction kind of thing so in Blaser your HTML actually has to",
    "start": "2479390",
    "end": "2486660"
  },
  {
    "text": "be correct and well-formed and the compiler needs to be able to understand all of the structure of everything that",
    "start": "2486660",
    "end": "2492510"
  },
  {
    "text": "you type in my friend AJ on the Razr team quick shout out to him did a massive amount of work in order to bring",
    "start": "2492510",
    "end": "2498750"
  },
  {
    "text": "up the HTML parsing support up to scratch for Blaser when we started the blazer effort very early on when it was",
    "start": "2498750",
    "end": "2505500"
  },
  {
    "text": "an experiment Steve's first prototype just grabbed a an external nougat library which one was it",
    "start": "2505500",
    "end": "2512480"
  },
  {
    "text": "yeah we use angle shop thank you sir we grabbed angle shark which is a great library yeah Steve grabbed angle Sharpe",
    "start": "2512480",
    "end": "2518220"
  },
  {
    "text": "off you get it's like I could do this and we had to retrofit that for the real compiler but for a long time we sort of",
    "start": "2518220",
    "end": "2524700"
  },
  {
    "text": "continued in this mode of like while we we bolted this external HTML parser on to the compiler",
    "start": "2524700",
    "end": "2530580"
  },
  {
    "text": "had lucky an adapter layer so that was a massive amount of work to ship blazer probably took one engineer about like a",
    "start": "2530580",
    "end": "2536370"
  },
  {
    "text": "year or two year and a half to bring that up to scratch in terms of understanding C sharp and razor",
    "start": "2536370",
    "end": "2542100"
  },
  {
    "text": "you've got your embedded C sharp statements in razor we understand like just enough C sharp to get by we're kind",
    "start": "2542100",
    "end": "2548970"
  },
  {
    "text": "of close enough for jazz the reason why we sort of take a minimal approach to",
    "start": "2548970",
    "end": "2554100"
  },
  {
    "text": "that is if you think about it like C sharp is changing every release C sharp is having stuff added every release or",
    "start": "2554100",
    "end": "2560160"
  },
  {
    "text": "new options or new flavors of syntax we don't want to try and understand them",
    "start": "2560160",
    "end": "2565440"
  },
  {
    "text": "all inside raisin if you don't have to we don't want to try and keep up with all of the C sharp changes inside of",
    "start": "2565440",
    "end": "2570960"
  },
  {
    "text": "inside of the C sharp language if there isn't a need to do it in razor so you can sort of think about when the parser",
    "start": "2570960",
    "end": "2577170"
  },
  {
    "text": "is looking at the document we find an @ symbol and we basically try to skip over",
    "start": "2577170",
    "end": "2582360"
  },
  {
    "text": "the rest of that text without understanding it deeply because we don't really need to",
    "start": "2582360",
    "end": "2587430"
  },
  {
    "text": "we don't really benefit from it it's not part of the programming model which helps us there are a whole bunch of",
    "start": "2587430",
    "end": "2592530"
  },
  {
    "text": "c-sharp constructs that we need to understand in detail like for each and if and things like that so if you look",
    "start": "2592530",
    "end": "2598530"
  },
  {
    "text": "at blazer you like writing blazer code and you're gonna have an unordered list you say ul for each or ul app for each",
    "start": "2598530",
    "end": "2606180"
  },
  {
    "text": "we have to understand the syntax of for each enough to represent that as like a for each in the Razr code base in order",
    "start": "2606180",
    "end": "2612870"
  },
  {
    "text": "to do the correct thing lastly what's special about the parser is that we break some rules I did mention that I'm",
    "start": "2612870",
    "end": "2619500"
  },
  {
    "text": "a mad scientist there's a really interesting case that we'll look at today about how we break the rules we",
    "start": "2619500",
    "end": "2625890"
  },
  {
    "text": "need to know basically all the components up front in order to do correct parsing the reason being that",
    "start": "2625890",
    "end": "2632760"
  },
  {
    "text": "the syntax of attributes is different depending on whether or not something is a component or an HTML element so when",
    "start": "2632760",
    "end": "2638790"
  },
  {
    "text": "we look at your text we need to know is this a component or is this an element in order to do the correct thing it's",
    "start": "2638790",
    "end": "2644610"
  },
  {
    "text": "not really a good language design practice but hTML is not really a traditional language either and it's too",
    "start": "2644610",
    "end": "2650130"
  },
  {
    "text": "useful for us not to do it about the code generation phase of razor or some",
    "start": "2650130",
    "end": "2655230"
  },
  {
    "text": "some of the other sorts of things that we do we we get to know all of your",
    "start": "2655230",
    "end": "2660240"
  },
  {
    "text": "components and what their types are and what the parameter types are as inputs the compiler we need to do that for a",
    "start": "2660240",
    "end": "2666860"
  },
  {
    "text": "bunch of semantic features in in the compiler code generation like event handlers and event callback in those",
    "start": "2666860",
    "end": "2672800"
  },
  {
    "text": "kinds of things we can't really know how to do the right thing from a code generation point of view unless we know",
    "start": "2672800",
    "end": "2677870"
  },
  {
    "text": "the types of all the components generics because we support generics and generic",
    "start": "2677870",
    "end": "2683480"
  },
  {
    "text": "type inference and razor and we will do an example of that make that very tricky because there are cases where we can't",
    "start": "2683480",
    "end": "2689030"
  },
  {
    "text": "know or we have to rely on type inference or we have to rely on overloading this also kind of breaks the",
    "start": "2689030",
    "end": "2694160"
  },
  {
    "text": "rules but it's it's a little bit of a useful thing for us to not do we'll see",
    "start": "2694160",
    "end": "2700700"
  },
  {
    "text": "we'll also look at some examples of how our code generation strategies rely on overloading because I mentioned that we",
    "start": "2700700",
    "end": "2706280"
  },
  {
    "text": "know the types of components and their parameters but we don't get to know the types of c-sharp expressions so if you",
    "start": "2706280",
    "end": "2712430"
  },
  {
    "text": "open up a code block and you define a method and you start typing inside that method the razor compiler doesn't",
    "start": "2712430",
    "end": "2717620"
  },
  {
    "text": "actually know anything about the types inside that method we just get to see the text which leads to some sort of",
    "start": "2717620",
    "end": "2722890"
  },
  {
    "text": "leads to some sort of complicated machinations as a result which which",
    "start": "2722890",
    "end": "2728480"
  },
  {
    "text": "will maybe bend people's minds a little bit so with that we're gonna do some examples that's all the all the slide",
    "start": "2728480",
    "end": "2734510"
  },
  {
    "start": "2729000",
    "end": "2789000"
  },
  {
    "text": "where that I've got for you and to do that I have built the world's worst IDE",
    "start": "2734510",
    "end": "2741700"
  },
  {
    "text": "so this is this is the world's worst IDE and it's for rate it's for razor and for",
    "start": "2741700",
    "end": "2747710"
  },
  {
    "text": "blazer and it kind of only specifically does razor and blazer and the the reference the naming the naming here is",
    "start": "2747710",
    "end": "2754460"
  },
  {
    "text": "a reference to God Bolt org which is a famous c-sharp and C++ compiler website that you should check out if you're",
    "start": "2754460",
    "end": "2760070"
  },
  {
    "text": "interested in native code so if I flip through I can see that for this document",
    "start": "2760070",
    "end": "2765620"
  },
  {
    "text": "I've got all of the things that I talked about I've got the syntax tree I've got the intermediate representation and I've",
    "start": "2765620",
    "end": "2772550"
  },
  {
    "text": "got the generated c-sharp and I want to show a couple things about the syntax tree trust me that this this banner",
    "start": "2772550",
    "end": "2778220"
  },
  {
    "text": "component has got has got a message and it's got a loudness so there's a banner component that we've defined here about",
    "start": "2778220",
    "end": "2784850"
  },
  {
    "text": "a sad crying clown I mentioned there'd be jokes and so let's let's take a look",
    "start": "2784850",
    "end": "2790010"
  },
  {
    "start": "2789000",
    "end": "2839000"
  },
  {
    "text": "at what's in the syntax tree for this and I realize that this is kind of hard to read but this is this is the code of the matrix this is the thing that the",
    "start": "2790010",
    "end": "2796370"
  },
  {
    "text": "people were the compiler sort of interpret and like view in the debugger and the thing that",
    "start": "2796370",
    "end": "2801859"
  },
  {
    "text": "I want to highlight here is like just how much structure and just how much detail there is for this so for this for",
    "start": "2801859",
    "end": "2807859"
  },
  {
    "text": "this image alt a sad crying clown we don't even have a source element on this image you can see that we found a markup",
    "start": "2807859",
    "end": "2814369"
  },
  {
    "text": "element we found a start tag and then we break up all of this text into",
    "start": "2814369",
    "end": "2820729"
  },
  {
    "text": "individual little chunks so we've got the alt we've got the equals we've got the quotes we've got the values all of",
    "start": "2820729",
    "end": "2828140"
  },
  {
    "text": "this stuff gets decomposed at the finest level of detail because we need that to represent in the structure of what we're",
    "start": "2828140",
    "end": "2834109"
  },
  {
    "text": "going to generate as output if we flip over to what the output looks like",
    "start": "2834109",
    "end": "2840039"
  },
  {
    "start": "2839000",
    "end": "2929000"
  },
  {
    "text": "there's a bunch of generated stuff to do with namespaces and file paths and things like that the output of that is",
    "start": "2840039",
    "end": "2847119"
  },
  {
    "text": "this we've got this HTML string here and you can see that we've actually like",
    "start": "2847119",
    "end": "2853460"
  },
  {
    "text": "taken all that stuff apart and then we've put it back together into an HTML string so you wrote you wrote a line of",
    "start": "2853460",
    "end": "2859670"
  },
  {
    "text": "HTML in your razor file we rip that apart into like a hundred pieces and then we put it back together and we",
    "start": "2859670",
    "end": "2866479"
  },
  {
    "text": "successfully put it back together into a single line of HTML Bravo that's brilliant so what's going on here why would we",
    "start": "2866479",
    "end": "2873200"
  },
  {
    "text": "bother to do this the reason is we have two in the compiler take this apart in enough detail to a make sure it's",
    "start": "2873200",
    "end": "2879619"
  },
  {
    "text": "correct be look at what are you doing in here is this all just static text or do",
    "start": "2879619",
    "end": "2885380"
  },
  {
    "text": "you have some expressions or are any of these attributes conditional like if you put a if you put a boolean value in an",
    "start": "2885380",
    "end": "2891229"
  },
  {
    "text": "attribute that makes that attribute sometimes appear and sometimes go away we've got to know all that stuff before",
    "start": "2891229",
    "end": "2896749"
  },
  {
    "text": "we can turn this into a single markup string the reason why we would turn it into a single markup stream is well it's",
    "start": "2896749",
    "end": "2902960"
  },
  {
    "text": "just more efficient that way so this add markup content becomes an instruction that goes to the runtime that says hey",
    "start": "2902960",
    "end": "2909410"
  },
  {
    "text": "I've got a block a markup and it contains no dynamic content so when you're updating the Dom you can either",
    "start": "2909410",
    "end": "2914630"
  },
  {
    "text": "add or remove this thing as one piece because it's always one piece and that's analysis that we do in the compiler",
    "start": "2914630",
    "end": "2920469"
  },
  {
    "text": "likewise we can look at the invocation of a component and if I flip back over to the syntax tree here we can find this",
    "start": "2920469",
    "end": "2928760"
  },
  {
    "text": "I'll just search for it so you can see that we've got a we call this a markup",
    "start": "2928760",
    "end": "2934849"
  },
  {
    "start": "2929000",
    "end": "2984000"
  },
  {
    "text": "tag helper element so people might be familiar with tag helpers from server-side asp net core in the compiler",
    "start": "2934849",
    "end": "2940820"
  },
  {
    "text": "we represent tag helpers and Razer and components and Blaser the same way but there's kind of a mishmash of features",
    "start": "2940820",
    "end": "2947000"
  },
  {
    "text": "that they share and don't share so we represent the start tag of this we represent all the attributes to it so",
    "start": "2947000",
    "end": "2953570"
  },
  {
    "text": "we've got an attribute here and we've got the text to satisfying clown that's being passed to it and those kinds of",
    "start": "2953570",
    "end": "2958880"
  },
  {
    "text": "things so we basically take it apart and generate the same kind of structure here",
    "start": "2958880",
    "end": "2964599"
  },
  {
    "text": "that we talked about on the lines of breaking the rules which I mentioned one",
    "start": "2964599",
    "end": "2971300"
  },
  {
    "text": "of the questions that we get asked a lot about Blaser that I think is a really interesting question that has a really",
    "start": "2971300",
    "end": "2976910"
  },
  {
    "text": "deep answer is for this loudness attribute if we compare those two you",
    "start": "2976910",
    "end": "2983210"
  },
  {
    "text": "can find that here inside of here we can",
    "start": "2983210",
    "end": "2989839"
  },
  {
    "start": "2984000",
    "end": "3014000"
  },
  {
    "text": "see that we've got an attribute value and it's text which is wrong so I think",
    "start": "2989839",
    "end": "2996020"
  },
  {
    "text": "this hasn't updated just give me a sec here I think my IDE is bugging out but",
    "start": "2996020",
    "end": "3002020"
  },
  {
    "text": "anyway what I wanted you to see is that we've got a c-sharp expression here",
    "start": "3002020",
    "end": "3007420"
  },
  {
    "text": "inside of this we've got a c-sharp expression here inside of this attribute",
    "start": "3007420",
    "end": "3013240"
  },
  {
    "text": "and this is actually an integer we know that this is c-sharp code if I wanted to",
    "start": "3013240",
    "end": "3018790"
  },
  {
    "text": "come in here and instead of 11 I want it to say 10 plus 1 that would compile and",
    "start": "3018790",
    "end": "3024190"
  },
  {
    "text": "that would be valid c-sharp code and you wouldn't see in the output 10 plus 1 you would see 11 because this is an integer",
    "start": "3024190",
    "end": "3029770"
  },
  {
    "text": "and anything that you type in here is c-sharp code if you look at this message attribute instead I can type in here and",
    "start": "3029770",
    "end": "3036579"
  },
  {
    "text": "it's just text it's not c-sharp right so I don't have to have a variable called a or a variable called sad or any of these",
    "start": "3036579",
    "end": "3044230"
  },
  {
    "text": "things if I wanted to reference a variable here I would have to do I would have to do it like this I have to have",
    "start": "3044230",
    "end": "3051369"
  },
  {
    "text": "the @ sign to get into c-sharp for this attribute and I don't have to have the @ sign to get into c-sharp for this",
    "start": "3051369",
    "end": "3058300"
  },
  {
    "text": "attribute what's going on here the answer is well we a special thing for Strings so anytime",
    "start": "3058300",
    "end": "3063820"
  },
  {
    "text": "you have a component parameter that's a string that effectively gets special handling in the compiler and in the in",
    "start": "3063820",
    "end": "3070480"
  },
  {
    "text": "the tools in the editor in the IDE and the reason why we do that is because the alternative would just be terrible so",
    "start": "3070480",
    "end": "3077080"
  },
  {
    "text": "imagine that you had to put the @ symbol in and then put in a c-sharp string every time you wanted to put a string",
    "start": "3077080",
    "end": "3083230"
  },
  {
    "text": "inside of an attribute to pass to a component well that would look like this",
    "start": "3083230",
    "end": "3088680"
  },
  {
    "text": "so you'd end up typing a whole bunch of like you'd end up typing a whole bunch of like quote @ paren quote and then",
    "start": "3088680",
    "end": "3098920"
  },
  {
    "text": "your string and then the reverse on the way out and that would just be terrible so this is a case where we actually",
    "start": "3098920",
    "end": "3103990"
  },
  {
    "text": "break the rules of language design like you get different syntax inside of this",
    "start": "3103990",
    "end": "3109750"
  },
  {
    "text": "attribute depending on what the type is that it's being bound to it's not really a good language design thing but the",
    "start": "3109750",
    "end": "3116800"
  },
  {
    "text": "results if we didn't fall if we followed the rules would actually be really bad so we do that for you and it's kind of",
    "start": "3116800",
    "end": "3121900"
  },
  {
    "text": "complicated to make that work but we do it with love so it's because we value",
    "start": "3121900",
    "end": "3127030"
  },
  {
    "text": "you likewise I want to look at this one this this is our this is another another",
    "start": "3127030",
    "end": "3135400"
  },
  {
    "start": "3129000",
    "end": "3214000"
  },
  {
    "text": "example this just got some blocks of like HTML in it and I'm going to flip over to the intermediate representation",
    "start": "3135400",
    "end": "3140770"
  },
  {
    "text": "which will probably be the most readable way to look at this and over here you can see that we've got a markup block",
    "start": "3140770",
    "end": "3146260"
  },
  {
    "text": "and we've got a markup element and we've got HTML content and we've got all this kind of stuff here going down to this",
    "start": "3146260",
    "end": "3153100"
  },
  {
    "text": "c-sharp expression for this second paragraph so our first paragraph which is an",
    "start": "3153100",
    "end": "3158770"
  },
  {
    "text": "important announcement about peanut butter is all one is all one markup block as we can see or it's - its -",
    "start": "3158770",
    "end": "3164680"
  },
  {
    "text": "markup blocks as we can see and then our second paragraph here our second P tag",
    "start": "3164680",
    "end": "3170080"
  },
  {
    "text": "here is you can see that in the intermediate representation it's broken up into like this big series of things",
    "start": "3170080",
    "end": "3176020"
  },
  {
    "text": "we have an element containing some texts containing an expression containing more text and the reason why this is",
    "start": "3176020",
    "end": "3182110"
  },
  {
    "text": "basically is because of this date I'm now in here so you can see that putting",
    "start": "3182110",
    "end": "3187270"
  },
  {
    "text": "some c-sharp into this big complex markup structure this is that optimization that I talked about before",
    "start": "3187270",
    "end": "3192370"
  },
  {
    "text": "where when we can we represent chunks of more a static text because it's more optimal",
    "start": "3192370",
    "end": "3197670"
  },
  {
    "text": "for the runtime it's more optimal for the generated code but when you put generated c-sharp in there we have to",
    "start": "3197670",
    "end": "3203880"
  },
  {
    "text": "represent that as all of its full structure and generate that out into the C sharp with all of its full structure",
    "start": "3203880",
    "end": "3209970"
  },
  {
    "text": "for the runtime to do the correct thing and these are some of the things that help Blaser work efficiently when you",
    "start": "3209970",
    "end": "3216240"
  },
  {
    "text": "update something so like if you just kept refreshing this page or if you just kept reloading this page triggered rear Enders on this component the value of",
    "start": "3216240",
    "end": "3223290"
  },
  {
    "text": "date time now would keep changing we wouldn't generate that whole string we",
    "start": "3223290",
    "end": "3228450"
  },
  {
    "text": "wouldn't turn this entire paragraph into a string send that entire paragraph down to the client and then paint that entire",
    "start": "3228450",
    "end": "3234870"
  },
  {
    "text": "paragraph into the Dom we would literally just update this inside of the",
    "start": "3234870",
    "end": "3240270"
  },
  {
    "text": "CM tag and you're seeing that optimization and work and the difference between how this first section of text",
    "start": "3240270",
    "end": "3247530"
  },
  {
    "text": "is represented in in the intermediate code versus this section of text that",
    "start": "3247530",
    "end": "3252540"
  },
  {
    "text": "contains some dynamic code if we look at that in this c-sharp and the generated c-sharp you can see the same thing that",
    "start": "3252540",
    "end": "3258840"
  },
  {
    "text": "we've got an add markup content here with this big block whereas for this other text we've got this add markup",
    "start": "3258840",
    "end": "3264330"
  },
  {
    "text": "content here with like a lot more stuff going on too in order to capture that dynamic expression let's look at our",
    "start": "3264330",
    "end": "3271260"
  },
  {
    "start": "3269000",
    "end": "3299000"
  },
  {
    "text": "next example and I'm actually going to jump out for these more more significant examples like this I'm actually going to",
    "start": "3271260",
    "end": "3277140"
  },
  {
    "text": "jump out to vs code so we can have a better view of this but I've got a to do editor here and I've got this on submit",
    "start": "3277140",
    "end": "3284460"
  },
  {
    "text": "handler so I've got it to a basic to do list sample with an on submit handler",
    "start": "3284460",
    "end": "3289530"
  },
  {
    "text": "and I'm passing in this method to that on submit handler so when this - - editor submits itself I'm gonna add my",
    "start": "3289530",
    "end": "3295380"
  },
  {
    "text": "item to my list pretty simple pretty straightforward stuff we know if you've",
    "start": "3295380",
    "end": "3300480"
  },
  {
    "text": "done any basic blazer kind of stuff we're always telling people you know if you want a simple answer for how to pass",
    "start": "3300480",
    "end": "3306060"
  },
  {
    "text": "commands and events and things around the type you're looking for is event callback event callback has got some special runtime smarts in it that will",
    "start": "3306060",
    "end": "3312960"
  },
  {
    "text": "help the system know when to re-render the right stuff and it also handles a bunch of different things to do with",
    "start": "3312960",
    "end": "3318480"
  },
  {
    "text": "acing so let me jump to UVs code where I have got this text sort of fanned out",
    "start": "3318480",
    "end": "3323910"
  },
  {
    "text": "for you to look at so here's my index with my 2d editor and this is my generated code",
    "start": "3323910",
    "end": "3329690"
  },
  {
    "text": "so I'm so here's our for each loop we understood the c-sharp and we were able to keep going okay here's our for each",
    "start": "3329690",
    "end": "3337109"
  },
  {
    "text": "loop we're able to understand the c-sharp and sort of put that out into the into the output inside of this loop",
    "start": "3337109",
    "end": "3343529"
  },
  {
    "text": "for each element we're adding an li tag which is represented by this this is the opening of the tag we're rendering the",
    "start": "3343529",
    "end": "3349890"
  },
  {
    "text": "item and then we're closing the element and then we're going to call to the TD",
    "start": "3349890",
    "end": "3355019"
  },
  {
    "text": "editor so when you call to another component in Blazer basically you can think of that like a function call to",
    "start": "3355019",
    "end": "3360839"
  },
  {
    "text": "another class we're gonna we're gonna say okay I want a to do editor to appear here on the page and then the next set",
    "start": "3360839",
    "end": "3366779"
  },
  {
    "text": "of things that are gonna happen with that to do editor is well we're gonna wire up all the parameters that need to get passed to it and that's what you're",
    "start": "3366779",
    "end": "3372749"
  },
  {
    "text": "seeing in the generated code this very complicated very long set of string here",
    "start": "3372749",
    "end": "3380279"
  },
  {
    "text": "is how we pass parameters to other components this is how I live my life scene so what is going on here can I",
    "start": "3380279",
    "end": "3388140"
  },
  {
    "text": "help unpack all of this craziness the answer is that well this API add",
    "start": "3388140",
    "end": "3393210"
  },
  {
    "text": "attribute is untyped so it's accepts an object which seems really flexible seems really good and it is really good",
    "start": "3393210",
    "end": "3399769"
  },
  {
    "text": "unless you want to get good errors when you pass the wrong thing because",
    "start": "3399769",
    "end": "3405210"
  },
  {
    "text": "whatever expression you type inside that on it submit attribute it's probably convertible to object right so because",
    "start": "3405210",
    "end": "3411569"
  },
  {
    "text": "it's probably convertible to object but we know the type we know that the type is supposed to be an event callback we",
    "start": "3411569",
    "end": "3418200"
  },
  {
    "text": "insert calls in the generated code to this type check method if you were to look at this type check method it's just",
    "start": "3418200",
    "end": "3424319"
  },
  {
    "text": "the identity function so it's a method that take it's a static method that takes one parameter where we we tell it",
    "start": "3424319",
    "end": "3430289"
  },
  {
    "text": "basically you only accept a parameter of this type and then it just immediately returns that value its entire purpose is",
    "start": "3430289",
    "end": "3436769"
  },
  {
    "text": "there to make the compiler happy and make it so that you actually get an error about passing in the wrong type if",
    "start": "3436769",
    "end": "3442859"
  },
  {
    "text": "you have done so which I would not advise the next thing that you'll see is there is this event callback Factory dot",
    "start": "3442859",
    "end": "3451259"
  },
  {
    "text": "creates of system string so going back to our code example here our to new",
    "start": "3451259",
    "end": "3457109"
  },
  {
    "text": "editor accepts an event callback of string but we are passing in a method we're passing",
    "start": "3457109",
    "end": "3464510"
  },
  {
    "text": "in this on submit' method and it's a void method that accepts a string so the",
    "start": "3464510",
    "end": "3472310"
  },
  {
    "text": "signature of that method is basically action of string right we need a way to convert an action of string into an",
    "start": "3472310",
    "end": "3479240"
  },
  {
    "text": "event callback of string and that's what this event callback factory does the other trick that event callback factory",
    "start": "3479240",
    "end": "3485360"
  },
  {
    "text": "does is it takes and takes an argument as the first argument that is the like receiver of the event this is basically",
    "start": "3485360",
    "end": "3492770"
  },
  {
    "text": "the magic that makes blazars event routing and blazars efficiently rendering work we're passing some",
    "start": "3492770",
    "end": "3498650"
  },
  {
    "text": "information into this event callback that says like who is the owner of this event or who's the person that's going",
    "start": "3498650",
    "end": "3504530"
  },
  {
    "text": "to respond to this event so in our case the index form is the one that wants to",
    "start": "3504530",
    "end": "3509690"
  },
  {
    "text": "respond to the event and so when we create an event callback we pass into this argument so that we're able to sort",
    "start": "3509690",
    "end": "3514850"
  },
  {
    "text": "of bind that up and say when you dispatch this event dispatch it to this component lastly this event callback",
    "start": "3514850",
    "end": "3521630"
  },
  {
    "text": "factory method is overloaded so in addition to accepting action of string it would accept action it would accept",
    "start": "3521630",
    "end": "3529820"
  },
  {
    "text": "func of string to task and it would accept func of task and that's the magic",
    "start": "3529820",
    "end": "3535970"
  },
  {
    "text": "for how all that sort of works in Blaser so if i came back over to this example and i said okay this is an async method",
    "start": "3535970",
    "end": "3541400"
  },
  {
    "text": "now that would just work in Blaser and event callback factory is the magic of how that's done it's just overloading so",
    "start": "3541400",
    "end": "3547490"
  },
  {
    "text": "there's four overloads of that method and then you're able to pass in those really flexible signatures and get what",
    "start": "3547490",
    "end": "3552710"
  },
  {
    "text": "you get whatever you want going through there let's do one other example how are we doing on time are we almost out of",
    "start": "3552710",
    "end": "3558440"
  },
  {
    "text": "time we yeah we've got one minute left we got one minute left so I'm gonna do one more example and I'm gonna go through it as",
    "start": "3558440",
    "end": "3565010"
  },
  {
    "text": "quickly as I can so I've got a templated list here and my templated list is a generic component so my template of",
    "start": "3565010",
    "end": "3571970"
  },
  {
    "text": "Lists has got a type parameter and it's a generic component and it is genericized on the type of item that I'm",
    "start": "3571970",
    "end": "3578780"
  },
  {
    "text": "passing in so I can pass in a list of some item and then I can specify how I want to display each item that's that",
    "start": "3578780",
    "end": "3584630"
  },
  {
    "text": "render fragment of item content and you can see that at work in here this kind of component is nice because you really",
    "start": "3584630",
    "end": "3590300"
  },
  {
    "text": "get tired of writing this kind of boilerplate I want to show a list of something but I I have a special message if the list is",
    "start": "3590300",
    "end": "3596680"
  },
  {
    "text": "empty do you want to write that all over the place or do you want to write a 30 line reusable thing so what does this",
    "start": "3596680",
    "end": "3602860"
  },
  {
    "text": "look like when we use a template it lists without specifying the type and with specifying the type because blazer",
    "start": "3602860",
    "end": "3609730"
  },
  {
    "text": "has type inference as a feature so let's take a look at that and this is in the",
    "start": "3609730",
    "end": "3615190"
  },
  {
    "text": "generated code again so we can see here that we're calling template list and",
    "start": "3615190",
    "end": "3621040"
  },
  {
    "text": "this is the example where we're not specifying the type we're passing in the items and we're passing in some child's",
    "start": "3621040",
    "end": "3627310"
  },
  {
    "text": "content where we're basically just going to render we're basically going to just pass in that template that gets used in",
    "start": "3627310",
    "end": "3633580"
  },
  {
    "text": "the body of it to render the item on the other hand this is not updated let me",
    "start": "3633580",
    "end": "3640150"
  },
  {
    "text": "give this a kick real quick and see if it updates sorry about that I think",
    "start": "3640150",
    "end": "3645940"
  },
  {
    "text": "about down there we go okay you can see",
    "start": "3645940",
    "end": "3653770"
  },
  {
    "text": "that once type inference gets into play we generate this little static helper class here so there's a type inference",
    "start": "3653770",
    "end": "3659650"
  },
  {
    "text": "class that shows up in your generated class and the reason is because in c-sharp there's no way - there's no way",
    "start": "3659650",
    "end": "3667450"
  },
  {
    "text": "for us to call open component unless we know what type is going to go into here",
    "start": "3667450",
    "end": "3673020"
  },
  {
    "text": "in the example where we're relying on type inference which is this one we don't know what to pass in there so we",
    "start": "3673020",
    "end": "3680350"
  },
  {
    "text": "create a static method that then we call and then inside of that static method which is a generic method we can call",
    "start": "3680350",
    "end": "3687420"
  },
  {
    "text": "templated list of T inside of here whereas in the case where you've",
    "start": "3687420",
    "end": "3693250"
  },
  {
    "text": "explicitly specified the type of something we can just do it it's much more straightforward so Blaser has",
    "start": "3693250",
    "end": "3698650"
  },
  {
    "text": "generic type inference it's really powerful it's also really hard to get right and kind of changes the semantics",
    "start": "3698650",
    "end": "3704620"
  },
  {
    "text": "of a lot of things or changes the implementation of a lot of things in a really dramatic way cool yeah all right",
    "start": "3704620",
    "end": "3711580"
  },
  {
    "text": "awesome I hope that you your minds are filled up with excitement about what you can do with internals of the compiler I",
    "start": "3711580",
    "end": "3718930"
  },
  {
    "text": "think that's all we've got time for so I hope that's been fun and useful to you",
    "start": "3718930",
    "end": "3724140"
  },
  {
    "text": "yeah if we if you got any questions come and chat to us but otherwise I hope you enjoy the rest of your day",
    "start": "3724140",
    "end": "3731190"
  }
]