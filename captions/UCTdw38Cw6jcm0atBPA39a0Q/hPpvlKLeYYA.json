[
  {
    "text": "okay put a finger down if you thought this talk would not happen and you just down the Pint and now you have to give",
    "start": "3600",
    "end": "9360"
  },
  {
    "text": "it anyway let's see how it",
    "start": "9360",
    "end": "14920"
  },
  {
    "text": "goes so welcome everybody I'm super excited to be here with you today uh for",
    "start": "14920",
    "end": "21160"
  },
  {
    "text": "quite a few reasons actually it's the first time I'm speaking in NDC London and it is the city I've spent the last",
    "start": "21160",
    "end": "27119"
  },
  {
    "text": "10 years of my life so super excited to be on this end and talk to you about",
    "start": "27119",
    "end": "32680"
  },
  {
    "text": "controllers and minimal apis so quick intro um hey my name is Nick chapsas um",
    "start": "32680",
    "end": "38640"
  },
  {
    "text": "this slide is a bit outdated I'm not working for checkout anymore however you should check that company out great",
    "start": "38640",
    "end": "44039"
  },
  {
    "text": "company great employer you should give it a chance if you're thinking into moving into fintech a bunch of other",
    "start": "44039",
    "end": "50840"
  },
  {
    "text": "stuff you probably know me from my YouTube channel and I also have some courses on my own website website Nick",
    "start": "50840",
    "end": "57079"
  },
  {
    "text": "chaps.com if you want to give that a go for topic like minimal apis as well so",
    "start": "57079",
    "end": "63640"
  },
  {
    "text": "let's dive straight into the topic which is minimal apis now how many of you know what minimal apis are s",
    "start": "63640",
    "end": "71080"
  },
  {
    "text": "hands okay and how many of you think it's something you will never put in anyone near",
    "start": "71080",
    "end": "77600"
  },
  {
    "text": "production okay I mean so the goal is to not think that way by the end of this",
    "start": "77600",
    "end": "83520"
  },
  {
    "text": "talk now in case you didn't know minimal apis are by far the most loved feature",
    "start": "83520",
    "end": "89600"
  },
  {
    "text": "of the the net 6 release I mean everybody just loves them it is amazing",
    "start": "89600",
    "end": "94759"
  },
  {
    "text": "to see people come together and embrace the Simplicity of using minimal apis and",
    "start": "94759",
    "end": "99799"
  },
  {
    "text": "really thinking that adopting something that other languages have been doing for years and moving away from controllers",
    "start": "99799",
    "end": "105719"
  },
  {
    "text": "is something that we really can't do in this community this joke is going for way too long in reality people are a bit",
    "start": "105719",
    "end": "112520"
  },
  {
    "text": "mixed about them to say the least I mean some say that they're junk okay let's see if we can change",
    "start": "112520",
    "end": "119479"
  },
  {
    "text": "that opinion so what are minimal apis now this is the point where I could be very",
    "start": "119479",
    "end": "124960"
  },
  {
    "text": "sophisticated and have a fancy quote and explain what they are but you do know what they say one picture is worth 1,000",
    "start": "124960",
    "end": "131720"
  },
  {
    "text": "lines of code so here's a picture with four lines of code so this is fundamentally what minimal apis are",
    "start": "131720",
    "end": "138440"
  },
  {
    "text": "about it's this idea that we can strip down everything about building apis in",
    "start": "138440",
    "end": "143720"
  },
  {
    "text": "net and this file is a valid API in C",
    "start": "143720",
    "end": "148800"
  },
  {
    "text": "now that's a bit of a lie the only other file you need for this to be a valid API is actually a CS Pro File which",
    "start": "148800",
    "end": "155519"
  },
  {
    "text": "specifies this as a web project but once you have that there are no using statements there are no name spaces no",
    "start": "155519",
    "end": "161640"
  },
  {
    "text": "classes no public static void main string array augs and so on and so forth",
    "start": "161640",
    "end": "167360"
  },
  {
    "text": "you just have that now some people are a bit intimidated by this Simplicity and",
    "start": "167360",
    "end": "173120"
  },
  {
    "text": "they think that this is immature this is not something they ever want to attach where are my",
    "start": "173120",
    "end": "178480"
  },
  {
    "text": "controllers well let's let's investigate that claim a little bit but I want to",
    "start": "178480",
    "end": "184159"
  },
  {
    "text": "emphasize something this is not something you you might be thinking wait a damn minute that thing over there that",
    "start": "184159",
    "end": "192000"
  },
  {
    "text": "looks a whole lot like that thing now blink it you miss it the top thing is minimal apis in cop and net the bottom",
    "start": "192000",
    "end": "199280"
  },
  {
    "text": "one is expressjs from the node world so this idea of going from 0 Z to point I",
    "start": "199280",
    "end": "206319"
  },
  {
    "text": "have an API very very easily and very very quickly is not novel it's how JS",
    "start": "206319",
    "end": "211439"
  },
  {
    "text": "has been building API for years and it's not really Limited in the JS world for",
    "start": "211439",
    "end": "217680"
  },
  {
    "text": "example python with fast API this idea that all you need is that fast API app and then you specify the endpoint and",
    "start": "217680",
    "end": "224920"
  },
  {
    "text": "you have the hello NDC very very simple very very easy to get started let's go",
    "start": "224920",
    "end": "230400"
  },
  {
    "text": "ahead go lovely language many people love it many people use it same thing you have Jin a framework which allows",
    "start": "230400",
    "end": "236920"
  },
  {
    "text": "you to create an app and then have that get or post or put or delete and just",
    "start": "236920",
    "end": "242480"
  },
  {
    "text": "quickly return a string or anything that you want and build an API on that let's go ahead anyone remember nany over here",
    "start": "242480",
    "end": "249120"
  },
  {
    "text": "nany effect do you remember this being a thing so this used to be a thing in cop all we need you needed to do is have",
    "start": "249120",
    "end": "255280"
  },
  {
    "text": "this get and then you point to a delegate that returns a string and that would return that text now node kind of",
    "start": "255280",
    "end": "262880"
  },
  {
    "text": "faded away for other reasons what which we are going to investigate as I go on",
    "start": "262880",
    "end": "268040"
  },
  {
    "text": "and it was reincarnated in the form of a project called Carter um but I don't think you should really use that as",
    "start": "268040",
    "end": "274919"
  },
  {
    "text": "opposed to minimal apis at this point but we're going to talk about that as well as I go on uh and also I'll go on",
    "start": "274919",
    "end": "281759"
  },
  {
    "text": "with Sinatra which is what Nancy effect Nancy Sinatra Sinatra that's the whole",
    "start": "281759",
    "end": "287320"
  },
  {
    "text": "name thing um you just have get you have the end point and you have the hello world and that is it so clearly for",
    "start": "287320",
    "end": "294600"
  },
  {
    "text": "years this is very very old actually the need to get from nothing to something that returns some data on the web has",
    "start": "294600",
    "end": "301199"
  },
  {
    "text": "been around and if you actually look deep down inside other languages",
    "start": "301199",
    "end": "306680"
  },
  {
    "text": "controllers and that whole concept of building apis with them isn't really much of a thing unless they have MVC",
    "start": "306680",
    "end": "315039"
  },
  {
    "text": "into a framework for example Ruby on Rails but you might be wondering how is",
    "start": "315039",
    "end": "321840"
  },
  {
    "text": "that even possible how can we just have these four lines of code with no using statements no name spaces no classes no",
    "start": "321840",
    "end": "328039"
  },
  {
    "text": "nothing and that is an API well I made a bit of an animation to show you how that",
    "start": "328039",
    "end": "333080"
  },
  {
    "text": "is possible all those features from cop 9",
    "start": "333080",
    "end": "338360"
  },
  {
    "text": "um 10 and net 6 APS are coming together you can tell about like how proud I am",
    "start": "338360",
    "end": "343520"
  },
  {
    "text": "about this because it has a watermark with my name on it because I don't want people to steal it it took me a long time to make but",
    "start": "343520",
    "end": "351560"
  },
  {
    "text": "this is how minimal APS are coming together let's see it again it took me three hours to make so these features are just coming",
    "start": "351560",
    "end": "358960"
  },
  {
    "text": "together to give us minimal apis I'm going to skip this early no let's just say it I don't know how big the Power",
    "start": "358960",
    "end": "364919"
  },
  {
    "text": "Ranges were in here but back home in Greece there were a bit of a deal so",
    "start": "364919",
    "end": "370400"
  },
  {
    "text": "this is how this is possible and we're going to see every single feature uh to see how we got here so top level",
    "start": "370400",
    "end": "376639"
  },
  {
    "text": "statements are actually in cop 9 feature which I kind of hated when came out but",
    "start": "376639",
    "end": "383000"
  },
  {
    "text": "in cop8 you have to have that using statement that name space which is optional but you had it anyway then the",
    "start": "383000",
    "end": "390720"
  },
  {
    "text": "program class then the public static void main string array ugs as if we're",
    "start": "390720",
    "end": "397360"
  },
  {
    "text": "inane and we're writing Java for some reason and then we have the actual meat of the application which is the console",
    "start": "397360",
    "end": "403319"
  },
  {
    "text": "do right line and then hello world so with top level statements we no longer need that all we have to do is just say",
    "start": "403319",
    "end": "409919"
  },
  {
    "text": "using system and then console. right line. hello world and yes I could cheat",
    "start": "409919",
    "end": "415240"
  },
  {
    "text": "if I did really want to and just merge system with the console but then I couldn't have this amazing segue into",
    "start": "415240",
    "end": "422160"
  },
  {
    "text": "the next feature which is implicit using statements so that problem we no longer have that because the C team said well",
    "start": "422160",
    "end": "429680"
  },
  {
    "text": "there's actually around seven namespaces that you're going to import on every single file most of the time anyway so",
    "start": "429680",
    "end": "436960"
  },
  {
    "text": "why don't we just imply that they exist already and then as long as you say yeah",
    "start": "436960",
    "end": "442919"
  },
  {
    "text": "use implicit using statements in that CS Pro File then you can just say that you",
    "start": "442919",
    "end": "449720"
  },
  {
    "text": "don't need system which is another awesome segue to the next feature Global using statements",
    "start": "449720",
    "end": "456319"
  },
  {
    "text": "because now what I can do is I can have a file a CS file that has Global using",
    "start": "456319",
    "end": "462080"
  },
  {
    "text": "and the statement hence the name and then that will be automatically imported",
    "start": "462080",
    "end": "467240"
  },
  {
    "text": "in every single file which is coincidentally exactly what this flag",
    "start": "467240",
    "end": "472800"
  },
  {
    "text": "will do on the Cs Pro the enable flag because it will actually kick in a source generator behind the scenes that",
    "start": "472800",
    "end": "479120"
  },
  {
    "text": "will drop that exact file so implicit using statements are a bit of a mixture",
    "start": "479120",
    "end": "484360"
  },
  {
    "text": "of global using statements and Source generators also inferred Lambda types",
    "start": "484360",
    "end": "490720"
  },
  {
    "text": "until C 9 the compiler here has all the information it needs to determine that",
    "start": "490720",
    "end": "496560"
  },
  {
    "text": "this is a function that accepts a string and returns a string but if you tried to do VAR or try to maybe inline this",
    "start": "496560",
    "end": "503319"
  },
  {
    "text": "Lambda somewhere the compil will be like I really don't know what this thing is supposed to be can you please specify",
    "start": "503319",
    "end": "509560"
  },
  {
    "text": "fight and you either had to cast it or create a new funk of something so it was a bit frustrating and there wasn't",
    "start": "509560",
    "end": "515880"
  },
  {
    "text": "really need for them to make it um being fed but now in C 10 we do have that",
    "start": "515880",
    "end": "521719"
  },
  {
    "text": "because the net team kind of needed this for minimal API to make sense if you",
    "start": "521719",
    "end": "526880"
  },
  {
    "text": "actually saw early demos of minimal apis the people who were demoing them especially Scott Hunter I think he had",
    "start": "526880",
    "end": "533320"
  },
  {
    "text": "to cast it and it did look a bit ugly so it's great that we have this here now",
    "start": "533320",
    "end": "538519"
  },
  {
    "text": "then the last last feature that we got is attributes on lambdas so previously this would not compile you could not",
    "start": "538519",
    "end": "544920"
  },
  {
    "text": "have the attribute the obsolete attribute on the Lambda itself now you can and this makes sense because if you",
    "start": "544920",
    "end": "551839"
  },
  {
    "text": "think of minimal apis if you have seen them before and we're going to see them in a second now you can actually specify",
    "start": "551839",
    "end": "557120"
  },
  {
    "text": "things like allow Anonymous or authorize attributes on the Lambda itself but",
    "start": "557120",
    "end": "563640"
  },
  {
    "text": "enough with that what I want to do is I want to go into a demo just to make sure everyone is on the same page so let's go",
    "start": "563640",
    "end": "572519"
  },
  {
    "text": "and do this I don't know why I'm doing a live demo I probably hate myself but let's give it a go and hope it doesn't fail so what I'm going to do is I'm just",
    "start": "572519",
    "end": "579519"
  },
  {
    "text": "going to create a minimal API and the first thing I need to do is just say minimal api. demo and create a console",
    "start": "579519",
    "end": "587440"
  },
  {
    "text": "app I'm explicitly not making an asp netcore application or a web project",
    "start": "587440",
    "end": "592760"
  },
  {
    "text": "just to show you how from nothing you can actually create a minimal API so",
    "start": "592760",
    "end": "598360"
  },
  {
    "text": "project is created I have a thumbs up if you can see this or if not I can all good okay if at any point you can please",
    "start": "598360",
    "end": "606040"
  },
  {
    "text": "shout and I will change it so I'm going to go ahead over here and I'm just going",
    "start": "606040",
    "end": "611360"
  },
  {
    "text": "to go to the Cs Pro of this project and I'm going to change the SDK to have a do",
    "start": "611360",
    "end": "617360"
  },
  {
    "text": "web and that's all you need a console app now magically is turned into a web API now the web API has two fundamental",
    "start": "617360",
    "end": "625360"
  },
  {
    "text": "components the web application Builder which is where you do all the configuration for your your API and then",
    "start": "625360",
    "end": "630680"
  },
  {
    "text": "the web application itself which is where you configure all the middleware so let's go ahead and see that I'm going",
    "start": "630680",
    "end": "635959"
  },
  {
    "text": "to create the Builder first so I'm going to say Builder equals web application.",
    "start": "635959",
    "end": "641000"
  },
  {
    "text": "create Builder and I can actually access the arguments of the program.cs as if they were there so I'm going to pass",
    "start": "641000",
    "end": "647240"
  },
  {
    "text": "them down in case someone wants to pass down some settings so that's my first construct then I have the application",
    "start": "647240",
    "end": "653639"
  },
  {
    "text": "itself so it's a materialization of the web application Builder so do build goes",
    "start": "653639",
    "end": "659079"
  },
  {
    "text": "here and then app. run and that's it I have my API at this point it doesn't have any",
    "start": "659079",
    "end": "665639"
  },
  {
    "text": "end points obviously but I can add them in here and effectively all this really",
    "start": "665639",
    "end": "672440"
  },
  {
    "text": "is because you might be thinking well where's the startup.cs where is my configuration where's everything well",
    "start": "672440",
    "end": "678360"
  },
  {
    "text": "you can treat this area over here as the configure method of the startup.cs and",
    "start": "678360",
    "end": "684000"
  },
  {
    "text": "you can treat this area over here as the configure services of your startup.cs so anything",
    "start": "684000",
    "end": "691200"
  },
  {
    "text": "in here you configure once you materialize your application you cannot actually retroactively update anything",
    "start": "691200",
    "end": "697800"
  },
  {
    "text": "so if I was to access services and add a service once my app has been created",
    "start": "697800",
    "end": "704959"
  },
  {
    "text": "well that is no longer applicable it won't change because I have my app already here so let's go ahead and",
    "start": "704959",
    "end": "711440"
  },
  {
    "text": "create our first endpoint and all I need to do is say app do map get and I'm going to have your",
    "start": "711440",
    "end": "719480"
  },
  {
    "text": "typical hello world so that's all I need hello NDC and I got that now in order",
    "start": "719480",
    "end": "727040"
  },
  {
    "text": "for me to run this without having to stop and start on my ID I'm actually going to go to the terminal and",
    "start": "727040",
    "end": "734040"
  },
  {
    "text": "do one of these so I'm going to say minimal API demo here we go and I'm",
    "start": "734040",
    "end": "739079"
  },
  {
    "text": "going to say net watch run but I'm going to choose not to use the hot reload",
    "start": "739079",
    "end": "744800"
  },
  {
    "text": "feature um see that's my choice I I don't use it because I want so imagine if someone thought removing this feature",
    "start": "744800",
    "end": "752199"
  },
  {
    "text": "is a good idea anyway that would never happen anyway so this will now start",
    "start": "752199",
    "end": "758880"
  },
  {
    "text": "let's give it a second and now every time I update this file the application would restart so I have that and the way",
    "start": "758880",
    "end": "766000"
  },
  {
    "text": "to call this without having to go to postan or another application is I have a bunch of predetermined uh requests in",
    "start": "766000",
    "end": "772279"
  },
  {
    "text": "this HTTP file and Ryder my ID allows me to call them so I can call that endpoint",
    "start": "772279",
    "end": "777959"
  },
  {
    "text": "and of course it didn't show me what the response is but you can see it here hello NDC I get the response back so if",
    "start": "777959",
    "end": "786680"
  },
  {
    "text": "I go back I can do other things as well I can say map get and I can say for",
    "start": "786680",
    "end": "792000"
  },
  {
    "text": "example hello object and I can just create a brand new Anonymous object here",
    "start": "792000",
    "end": "799079"
  },
  {
    "text": "it doesn't have to be a real one all I can say is message equals and then have",
    "start": "799079",
    "end": "805320"
  },
  {
    "text": "my text hello NDC very easily and I can also actually mix a couple of other things as well I'm going to create a",
    "start": "805320",
    "end": "811279"
  },
  {
    "text": "record over here called user with a full",
    "start": "811279",
    "end": "816959"
  },
  {
    "text": "name and I'm also going to use a class called results so I can say",
    "start": "816959",
    "end": "823920"
  },
  {
    "text": "user and then return from the results class which effectively has a bunch of",
    "start": "823920",
    "end": "829000"
  },
  {
    "text": "predetermined ways to return a request so text stream and authorized bad request sign in sign out all the typical",
    "start": "829000",
    "end": "836320"
  },
  {
    "text": "things you would also have in the MVC world all of them are here so I'm going to go ahead and say just okay and create",
    "start": "836320",
    "end": "843600"
  },
  {
    "text": "a new user and of course it will be me okay so with all those done I'm just",
    "start": "843600",
    "end": "851199"
  },
  {
    "text": "going to pretend like I'm pausing so the hot reload",
    "start": "851199",
    "end": "856639"
  },
  {
    "text": "restarts hello hello in this see works you can see serialization takes care of the case as well it's not capital M you",
    "start": "856639",
    "end": "862560"
  },
  {
    "text": "can customize all that and also if I want to get the user everything just automatically works out of the box now",
    "start": "862560",
    "end": "869160"
  },
  {
    "text": "now I can actually also access a bunch of special parameters here because until now everything is parameterless we don't",
    "start": "869160",
    "end": "876079"
  },
  {
    "text": "really use anything from the request we just return something so let's go ahead and do that I'm going to go ahead and",
    "start": "876079",
    "end": "881800"
  },
  {
    "text": "say special over here and I'm going to access a few special parameters and I'm just going to return an anonymous object",
    "start": "881800",
    "end": "889000"
  },
  {
    "text": "so the first thing I want to access is actually the htttp context so I can say context and this now will be",
    "start": "889000",
    "end": "895279"
  },
  {
    "text": "automatically injected and it gives me access to things like the connection the features the items the request the",
    "start": "895279",
    "end": "901120"
  },
  {
    "text": "response everything now for my taste that is a bit of a quite wide object and",
    "start": "901120",
    "end": "906160"
  },
  {
    "text": "I wouldn't really use that in any case really so what I want to do instead is",
    "start": "906160",
    "end": "911360"
  },
  {
    "text": "access the HTTP request directly if I want something from the request and I",
    "start": "911360",
    "end": "918079"
  },
  {
    "text": "can also break it down and access the HTTP response directly right so I can do",
    "start": "918079",
    "end": "924680"
  },
  {
    "text": "a few things with this first I can actually write to the response",
    "start": "924680",
    "end": "930639"
  },
  {
    "text": "with adjacent object which means I no longer need this new return I can take control",
    "start": "930639",
    "end": "938759"
  },
  {
    "text": "and return that and we're going to return a few things from the request but it also means that because this is an",
    "start": "938759",
    "end": "945040"
  },
  {
    "text": "async method I can change this delegate to be async as well let's make this like",
    "start": "945040",
    "end": "950319"
  },
  {
    "text": "that and let's delete this actually so you can see what's going on and I can say a wait over here so now",
    "start": "950319",
    "end": "957639"
  },
  {
    "text": "I can grab something from the request for example request do query and that's the query",
    "start": "957639",
    "end": "962880"
  },
  {
    "text": "collection and if I save and I give it some time to recycle and go back and run",
    "start": "962880",
    "end": "969240"
  },
  {
    "text": "this special request then you can see that it's grabbing that age parameter",
    "start": "969240",
    "end": "974480"
  },
  {
    "text": "and it's printing it over here so very simple there's other special parameters you can access as well for example you",
    "start": "974480",
    "end": "981199"
  },
  {
    "text": "can get access to the cancellation token if for some reason you want to pass it down in fact rder my ID is telling me",
    "start": "981199",
    "end": "987800"
  },
  {
    "text": "hey I can do something with this cancellation token let me just pass it down for you so here we go and then the",
    "start": "987800",
    "end": "994480"
  },
  {
    "text": "last thing I want to show is how you can do a more extravagant request which brings in a lot of the stuff that I just",
    "start": "994480",
    "end": "1000920"
  },
  {
    "text": "showed you for example what if you want parameters like a query string parameter or a route parameter or the body of a",
    "start": "1000920",
    "end": "1007279"
  },
  {
    "text": "request so many things to choose or even a header so let's go ahead and do that I'm going to say map get uh in fact M",
    "start": "1007279",
    "end": "1014079"
  },
  {
    "text": "map post again um and yes there is a map method for bunch of different things map",
    "start": "1014079",
    "end": "1019880"
  },
  {
    "text": "delete map get map post map put there's no patch uh I don't know if they're going to add it it's not like I'm using",
    "start": "1019880",
    "end": "1026880"
  },
  {
    "text": "patch anyway so it's fine for me uh extra is the end point I'm",
    "start": "1026880",
    "end": "1033319"
  },
  {
    "text": "creating and let's say I want to pass down a parameter from the route so let's say I want to pass down the year",
    "start": "1033319",
    "end": "1040720"
  },
  {
    "text": "parameter from the route it's the exact same thing you would do in controllers you specify it like that and then you",
    "start": "1040720",
    "end": "1046918"
  },
  {
    "text": "can map it to a parameter over here let's say you want to have a query",
    "start": "1046919",
    "end": "1052240"
  },
  {
    "text": "string parameter called age well you don't really need to do anything for that it just magically works because it",
    "start": "1052240",
    "end": "1059120"
  },
  {
    "text": "implies that if it's not specified here then it's probably coming from the query string what I'm going to do is I'm just",
    "start": "1059120",
    "end": "1065720"
  },
  {
    "text": "going to print them so you can see them when I call this so I'm going to say age now let's say I want something from the",
    "start": "1065720",
    "end": "1072880"
  },
  {
    "text": "header because if you see over here what I'm going to call this I actually have an accept header so so what I can say is",
    "start": "1072880",
    "end": "1080480"
  },
  {
    "text": "string accept but here's a bit of a problem this doesn't know how to map the",
    "start": "1080480",
    "end": "1085640"
  },
  {
    "text": "accept header it will assume that accept is a query string parameter because it's more of a common thing to do so the",
    "start": "1085640",
    "end": "1091240"
  },
  {
    "text": "default behavior is this so instead I'm going to say from header and be explicit",
    "start": "1091240",
    "end": "1097000"
  },
  {
    "text": "about it and last but not least because as you saw on this request I also have a",
    "start": "1097000",
    "end": "1102480"
  },
  {
    "text": "full name I'm going to pass down from the body a user and as if this wasn't",
    "start": "1102480",
    "end": "1109159"
  },
  {
    "text": "chaotic enough let me just pass this down I'm going to go ahead and copy from",
    "start": "1109159",
    "end": "1115000"
  },
  {
    "text": "this file this datetime provider",
    "start": "1115000",
    "end": "1120240"
  },
  {
    "text": "class which allows me to have more date in my application so for that to be able",
    "start": "1120240",
    "end": "1126000"
  },
  {
    "text": "to be injected I need to go up here and register it so builder. services. add",
    "start": "1126000",
    "end": "1131960"
  },
  {
    "text": "Singleton I daytime provider and Then daytime",
    "start": "1131960",
    "end": "1137080"
  },
  {
    "text": "provider c c cool okay so what I can do now is I can also inject I date time",
    "start": "1137080",
    "end": "1145600"
  },
  {
    "text": "provider now that's quite a lot of implicit",
    "start": "1148960",
    "end": "1154440"
  },
  {
    "text": "statements but if I go back here and I call that",
    "start": "1154440",
    "end": "1160000"
  },
  {
    "text": "API request then it all magically gets mapped well with",
    "start": "1160000",
    "end": "1166720"
  },
  {
    "text": "code so you can also be explicit if you want to for example if for some reason",
    "start": "1166720",
    "end": "1172720"
  },
  {
    "text": "the age parameter you wanted to have a different name in the header or the query you can also say for example name",
    "start": "1172720",
    "end": "1180440"
  },
  {
    "text": "equals a and then what you can do is go back here age is a and so on and so",
    "start": "1180440",
    "end": "1185799"
  },
  {
    "text": "forth those are the basic constructs and you still have it mapped over here so I",
    "start": "1185799",
    "end": "1191120"
  },
  {
    "text": "hope we are now all on the same page on what this thing is because we kind of",
    "start": "1191120",
    "end": "1197039"
  },
  {
    "text": "need to put that in context because I'm assuming all of you know what MVC is and what a controller is and what web API is",
    "start": "1197039",
    "end": "1204280"
  },
  {
    "text": "and this talk will be a bit critical about those constructs",
    "start": "1204280",
    "end": "1209320"
  },
  {
    "text": "now so with all that said and let me just cancel this because if I forget it",
    "start": "1209320",
    "end": "1214840"
  },
  {
    "text": "I might fil the next demo so let's move on and let's address something there are",
    "start": "1214840",
    "end": "1220600"
  },
  {
    "text": "a few unsupported features in M apis it's not it's not all Happy Days um if it was everybody would be using them",
    "start": "1220600",
    "end": "1227440"
  },
  {
    "text": "hopefully the first thing is there is no support for filters so so things like",
    "start": "1227440",
    "end": "1232559"
  },
  {
    "text": "the acing action filters the result filters the exception filters those things are not supported this support is",
    "start": "1232559",
    "end": "1239000"
  },
  {
    "text": "actually being added in Net 7 however they're a bit of a different thing I",
    "start": "1239000",
    "end": "1244440"
  },
  {
    "text": "mean it's still the same concept but you cannot reuse your filters that you have on MVC in minimal API so you're going to",
    "start": "1244440",
    "end": "1250960"
  },
  {
    "text": "have to remap them but it is coming then there is no built-in support for",
    "start": "1250960",
    "end": "1256200"
  },
  {
    "text": "validation so as you saw it did have model binding but my model validator would not work for example if I try to",
    "start": "1256200",
    "end": "1262960"
  },
  {
    "text": "have a required header in my model even if the value wasn't there this thing",
    "start": "1262960",
    "end": "1268200"
  },
  {
    "text": "would not throw an exception so you'd have to write your own validators which for me is fine because I'm using fluent",
    "start": "1268200",
    "end": "1274000"
  },
  {
    "text": "validator and I'm wiring it up in MVC anyway so there's not much of a problem",
    "start": "1274000",
    "end": "1279480"
  },
  {
    "text": "for me but I can totally see how this can be ofp putting for some people there is also no support like I showed you for",
    "start": "1279480",
    "end": "1286520"
  },
  {
    "text": "Json patch again something I never really have to use but I can totally see how some people would benefit of of",
    "start": "1286520",
    "end": "1293400"
  },
  {
    "text": "having that and likewise for o data o data is not supported and that's all I'm",
    "start": "1293400",
    "end": "1299080"
  },
  {
    "text": "going to say about that and also last but not least there is no built-in support for API versioning now this is",
    "start": "1299080",
    "end": "1305640"
  },
  {
    "text": "not the concept of API versioning you can have API versioning if you want you can just make a folder call it V1 put it",
    "start": "1305640",
    "end": "1312400"
  },
  {
    "text": "in the namespace Y yada yada but you cannot use the API visioning MVC package",
    "start": "1312400",
    "end": "1317799"
  },
  {
    "text": "which has all of that automated for you and you can have it in a header the media accept media I think header or a",
    "start": "1317799",
    "end": "1323960"
  },
  {
    "text": "qu string parameter or part of the route that is not supported I think that's",
    "start": "1323960",
    "end": "1329000"
  },
  {
    "text": "because it's based on filters for some stuff and we didn't have filters so someone might remake that in the future",
    "start": "1329000",
    "end": "1335679"
  },
  {
    "text": "but as far as I know it is not supported currently but I want to address another",
    "start": "1335679",
    "end": "1342559"
  },
  {
    "text": "problem which is actually caused by me showing you that program.cs file and it's called the program. CSH",
    "start": "1342559",
    "end": "1349120"
  },
  {
    "text": "so the other day which when I wrote this was the other day this is actually seven months ago is this tweet by someone who",
    "start": "1349120",
    "end": "1356480"
  },
  {
    "text": "said that hey I chose to build a minimal API because net 6 is out and minimal API is the new thing so I'm going to use",
    "start": "1356480",
    "end": "1362880"
  },
  {
    "text": "that and I ended up with six methods the mapg get methods in that program.cs six",
    "start": "1362880",
    "end": "1368159"
  },
  {
    "text": "classes they hate themselves they feel that this is wrong why are they doing this web API just feels better who",
    "start": "1368159",
    "end": "1376039"
  },
  {
    "text": "thinks that minimal API actually who thinks that we API is better than minimal API can I see a show of",
    "start": "1376039",
    "end": "1382200"
  },
  {
    "text": "hands okay okay so what's the last time anyone not not",
    "start": "1382200",
    "end": "1389679"
  },
  {
    "text": "not just the people who disagreed what's the last time that you you created an API let's let's say it was a customiz",
    "start": "1389679",
    "end": "1396279"
  },
  {
    "text": "API an API that manages customiz in your domain and you created the customiz controller and then in that controller",
    "start": "1396279",
    "end": "1402919"
  },
  {
    "text": "class you also slapped your customers mapper customer validator customers service customer Repository any F core",
    "start": "1402919",
    "end": "1409200"
  },
  {
    "text": "stuff maybe mediator was in there as well you didn't because you're software engineers and you structure your code",
    "start": "1409200",
    "end": "1415880"
  },
  {
    "text": "minimal apis are not different minimal apis are not about having everything in a single file they're about stripping",
    "start": "1415880",
    "end": "1422720"
  },
  {
    "text": "down everything to its Basics so you can choose your own destiny and build the structure that you want so let's recap",
    "start": "1422720",
    "end": "1430440"
  },
  {
    "text": "what minimal apis are not they're not one line one file apis I know it's very",
    "start": "1430440",
    "end": "1437760"
  },
  {
    "text": "convenient for demos for people like me to show you everything in one file because I don't have to jump around in",
    "start": "1437760",
    "end": "1443120"
  },
  {
    "text": "50 different files and explain what this controller and this service and this repository and how everything is",
    "start": "1443120",
    "end": "1448320"
  },
  {
    "text": "injected you just have everything in that single file and it's very convenient they're also not just for",
    "start": "1448320",
    "end": "1454440"
  },
  {
    "text": "demos but like I just said they're very convenient for demos because everything",
    "start": "1454440",
    "end": "1459640"
  },
  {
    "text": "is in that single file I have this Choice do you think that if that was the choice in the past I would have a",
    "start": "1459640",
    "end": "1465360"
  },
  {
    "text": "program.cs a startup.cs a controller a a repository and so on and so forth no cuz",
    "start": "1465360",
    "end": "1471480"
  },
  {
    "text": "that can be confusing for demos also not just for beginners some people think it is just for beginners",
    "start": "1471480",
    "end": "1478320"
  },
  {
    "text": "but as we're going to see later in this talk I really don't think that this is the G the case they're great for",
    "start": "1478320",
    "end": "1484200"
  },
  {
    "text": "beginners because it delivers to that promise of from nothing to an API that returns something very very easily the",
    "start": "1484200",
    "end": "1491279"
  },
  {
    "text": "same promise that Sinatra Nancy and those other apis had but it's not just",
    "start": "1491279",
    "end": "1496480"
  },
  {
    "text": "for them in fact the concept of a minimal API can be tied very nicely into",
    "start": "1496480",
    "end": "1501960"
  },
  {
    "text": "another minimalistic concept that many of you I'm sure are using and last but not least they're not",
    "start": "1501960",
    "end": "1509159"
  },
  {
    "text": "going to kill controllers I know many people think that this is the case and that Microsoft will actually make",
    "start": "1509159",
    "end": "1514279"
  },
  {
    "text": "control as obsolete in favor of minimal apis a lot of that discussion has actually started because someone who is",
    "start": "1514279",
    "end": "1520399"
  },
  {
    "text": "working on minimal apis by Microsoft has replied in a comment that they expect 70 to 80% of all the future use cases to be",
    "start": "1520399",
    "end": "1528080"
  },
  {
    "text": "done done with minimal apis I think it's a bit of an optimistic metric I think many of them will be eventually adopted",
    "start": "1528080",
    "end": "1535120"
  },
  {
    "text": "but 70 to 80 I don't think so and I also did crunch the numbers after extensive",
    "start": "1535120",
    "end": "1541919"
  },
  {
    "text": "research and I did find out that if Microsoft were to choose to kill",
    "start": "1541919",
    "end": "1547799"
  },
  {
    "text": "controllers that would break approximately 100% of all the software",
    "start": "1547799",
    "end": "1552960"
  },
  {
    "text": "out there running apis in cop and net it's not going to happen so",
    "start": "1552960",
    "end": "1559679"
  },
  {
    "text": "I want to take a minute now and before I go to this mini",
    "start": "1559679",
    "end": "1565279"
  },
  {
    "text": "Rand I want to take a second and just address the elephant in the room it is",
    "start": "1565279",
    "end": "1570480"
  },
  {
    "text": "it is a bit of a rant this one it's I won't bore you too much it's only like 50 bullet points but we'll get there um",
    "start": "1570480",
    "end": "1578039"
  },
  {
    "text": "controllers for building apis are weird there I said it how many of you think that they're not weird and they're great",
    "start": "1578039",
    "end": "1584360"
  },
  {
    "text": "for building apis show hands okay",
    "start": "1584360",
    "end": "1589640"
  },
  {
    "text": "so they're we for a few reasons now why do you think we're using controllers when we're building apis in net do you",
    "start": "1589640",
    "end": "1596120"
  },
  {
    "text": "think the 10 smartest people in Microsoft sat down and they said well it",
    "start": "1596120",
    "end": "1601880"
  },
  {
    "text": "does look like that architecturally and structurally and everything it makes",
    "start": "1601880",
    "end": "1607240"
  },
  {
    "text": "sense to have controllers as the way to build apis in net that is not the case the only reason why we have them is",
    "start": "1607240",
    "end": "1614480"
  },
  {
    "text": "because Ruby on Rails was a thing and then Microsoft thought well we kind of need an MVC framework as well and they",
    "start": "1614480",
    "end": "1620760"
  },
  {
    "text": "build MVC and controllers do endpoint routing uh model binding and validation",
    "start": "1620760",
    "end": "1626760"
  },
  {
    "text": "so they were like can we just Rebrand this to another thing call it web API and call it a day and just give it to people and say this amazing new way to",
    "start": "1626760",
    "end": "1633840"
  },
  {
    "text": "build apis is here just use it that's the only reason why they're called controllers they could be modules there",
    "start": "1633840",
    "end": "1639880"
  },
  {
    "text": "could be endpoints there could be anything as far as I care I don't care um but we have to acknowledge the fact",
    "start": "1639880",
    "end": "1645440"
  },
  {
    "text": "that this is not the starting point controll is are just one of the end",
    "start": "1645440",
    "end": "1650600"
  },
  {
    "text": "goals and it's one of the many end goals usually you start with minimal apis or the equivalent in a language and you get",
    "start": "1650600",
    "end": "1657399"
  },
  {
    "text": "there but here's the thing cuz we're using controllers which is the C on",
    "start": "1657399",
    "end": "1663279"
  },
  {
    "text": "MVC but what's the last time you used the view when you're using a controller because the whole point of having a",
    "start": "1663279",
    "end": "1668640"
  },
  {
    "text": "controller is its part of NVC but you don't use views so why are we using MVC",
    "start": "1668640",
    "end": "1675000"
  },
  {
    "text": "contracts to build apis and likewise M the models in MVC is more about",
    "start": "1675000",
    "end": "1682960"
  },
  {
    "text": "business logic it isn't really about dto and API contracts and in fact when you're building apis a different thing",
    "start": "1682960",
    "end": "1689039"
  },
  {
    "text": "is coming in a different thing is going out usually so what's the point of using",
    "start": "1689039",
    "end": "1695320"
  },
  {
    "text": "we just left with C why are we using an MVC thing and we just normalize that yeah this is this is fine this is",
    "start": "1695320",
    "end": "1700480"
  },
  {
    "text": "acceptable it is not but the reason why it is is that it was actually the only",
    "start": "1700480",
    "end": "1706360"
  },
  {
    "text": "viable way to build API and yeah someone might say hey Nick Nancy effect was a thing I was using it it was great well",
    "start": "1706360",
    "end": "1713279"
  },
  {
    "text": "the truth is for it to be dead not enough people were actually using it and",
    "start": "1713279",
    "end": "1718640"
  },
  {
    "text": "also people are just prone to not adopting something that it isn't supported officially by Microsoft",
    "start": "1718640",
    "end": "1725679"
  },
  {
    "text": "minimal API are and now controllers are as well and we're going to see how that goes as the time moves on they also have",
    "start": "1725679",
    "end": "1733039"
  },
  {
    "text": "these methods these actions that never really call each other you would never have one action call another",
    "start": "1733039",
    "end": "1738840"
  },
  {
    "text": "and if you're doing that don't and the reason why they exist in that controller",
    "start": "1738840",
    "end": "1744720"
  },
  {
    "text": "is because it made sense because in the MVC World The View would actually refer",
    "start": "1744720",
    "end": "1750159"
  },
  {
    "text": "to both the controller and the action by name or sometimes just the action by name so you would have intellisense it",
    "start": "1750159",
    "end": "1756399"
  },
  {
    "text": "would make sense that everything would be grouped logically because it isn't a black box that is calling those end",
    "start": "1756399",
    "end": "1762760"
  },
  {
    "text": "points it is your view so why are we using that again and and then they kind",
    "start": "1762760",
    "end": "1768799"
  },
  {
    "text": "of low key violates s responsibility because you might think it's not because you say hey Nick my domain is the",
    "start": "1768799",
    "end": "1774600"
  },
  {
    "text": "customer I have customer controller customer controller and everything is in there my create my update my delete",
    "start": "1774600",
    "end": "1780960"
  },
  {
    "text": "everything is there no violation well I would argue that it also kind of violates open closed on top of that",
    "start": "1780960",
    "end": "1787480"
  },
  {
    "text": "because every time you want to go ahead and add an endpoint you have to go and change that existing class that has",
    "start": "1787480",
    "end": "1792640"
  },
  {
    "text": "nothing to do with you adding an endpoint or deleting one in my opinion they should be separated in separate",
    "start": "1792640",
    "end": "1797679"
  },
  {
    "text": "endo points so let me just quick intermission because I'm a bit tired",
    "start": "1797679",
    "end": "1803559"
  },
  {
    "text": "okay so they also have this Services injected into them into the actions or",
    "start": "1803559",
    "end": "1809159"
  },
  {
    "text": "the controller actually but they are not used sometimes by all the actions so you would allocate an object in that",
    "start": "1809159",
    "end": "1815120"
  },
  {
    "text": "controller being instantiated and then you would waste all that memory for allocating that object and have to",
    "start": "1815120",
    "end": "1820799"
  },
  {
    "text": "garbage collect it as well even though it's not used by all actions so why are",
    "start": "1820799",
    "end": "1826320"
  },
  {
    "text": "we doing that and someone might say hey I'm using the from Services attribute and I'm only injecting it in the method",
    "start": "1826320",
    "end": "1833960"
  },
  {
    "text": "itself if you're doing that great I haven't really seen it all I see is the lazy way of just go with a Constructor",
    "start": "1833960",
    "end": "1839799"
  },
  {
    "text": "and just hope it we don't care about memory basically um and also they never share",
    "start": "1839799",
    "end": "1845760"
  },
  {
    "text": "State between actions so why are they sharing real estate because they're all scoped anyway and you wouldn't call one",
    "start": "1845760",
    "end": "1851440"
  },
  {
    "text": "another so what's the whole point of having them together I don't get it and when you have private methods they",
    "start": "1851440",
    "end": "1857440"
  },
  {
    "text": "usually are only called by a single action they wouldn't be called by multiple actions most of the time and",
    "start": "1857440",
    "end": "1863880"
  },
  {
    "text": "middleware and filters that you have because it is coming from MVC a lot of that was actually just left in there",
    "start": "1863880",
    "end": "1870320"
  },
  {
    "text": "from MVC and for example validation is called everywhere um so you have them be",
    "start": "1870320",
    "end": "1877399"
  },
  {
    "text": "comparatively slower than minimal apis as well because you have to inv invoke",
    "start": "1877399",
    "end": "1882919"
  },
  {
    "text": "and allocate those objects and even if it's just a if check to walk out of the flow uh minimal apis have a 10 to 15",
    "start": "1882919",
    "end": "1891360"
  },
  {
    "text": "realistically perc performance boost over controllers I won't dive too much into the performance point because",
    "start": "1891360",
    "end": "1897799"
  },
  {
    "text": "performance is contextual and it doesn't mean the same thing for everyone like if you have a database that takes a second",
    "start": "1897799",
    "end": "1902919"
  },
  {
    "text": "to respond minimal API won't just magically make your API fast um they can also grow quite a lot",
    "start": "1902919",
    "end": "1910840"
  },
  {
    "text": "and we have this questionable term called fat controllers and we just do everything we can to just remove stuff",
    "start": "1910840",
    "end": "1918440"
  },
  {
    "text": "from those controllers cuz someone is like so proud when they have oh like my controller is just three lines of code",
    "start": "1918440",
    "end": "1924440"
  },
  {
    "text": "that's how simple it needs to be well how do you how about you remove that controller all together if it needs to",
    "start": "1924440",
    "end": "1929639"
  },
  {
    "text": "be so you don't need it move the mapping outside send the thing to mediator which is what you're going to do anyway and",
    "start": "1929639",
    "end": "1935679"
  },
  {
    "text": "just move on with your life so this is what it can look like",
    "start": "1935679",
    "end": "1941120"
  },
  {
    "text": "for a new developer working in as a junior developer or as a season developer from a simpler ecosystem like",
    "start": "1941120",
    "end": "1948840"
  },
  {
    "text": "node like python like go so they just want to build an API but",
    "start": "1948840",
    "end": "1955080"
  },
  {
    "text": "then they have all those things dropped on them and it can certainly be",
    "start": "1955080",
    "end": "1960799"
  },
  {
    "text": "overwhelming and sometimes we forget that some people just want to build apis they don't want to build sorry just want",
    "start": "1960799",
    "end": "1966240"
  },
  {
    "text": "to build products they don't necessarily want to build your clean architecture with three layers and onion and",
    "start": "1966240",
    "end": "1971720"
  },
  {
    "text": "hexagonal and all those fancy words that you probably don't need",
    "start": "1971720",
    "end": "1978559"
  },
  {
    "text": "so what is this talk about really well like with everything in this",
    "start": "1978559",
    "end": "1984639"
  },
  {
    "text": "life it's is all about Lego it's always about Lego I I promise it will make",
    "start": "1984639",
    "end": "1991880"
  },
  {
    "text": "sense what do you see here just silently in your mind think about what you see",
    "start": "1991880",
    "end": "1997480"
  },
  {
    "text": "here if you say you see a half finished Lego set of hog wordss you're",
    "start": "1997480",
    "end": "2003919"
  },
  {
    "text": "wrong I mean that's the right answer but that's not where I'm getting so what you have here is the foundations",
    "start": "2003919",
    "end": "2011760"
  },
  {
    "text": "of some Castle I can see some windows I can see a door there is some structure",
    "start": "2011760",
    "end": "2016840"
  },
  {
    "text": "to this thing it's not finished but there's certainly some structure I can also see a window this way and there's",
    "start": "2016840",
    "end": "2022559"
  },
  {
    "text": "no back wall now what's great about this structure is that if I give it to my",
    "start": "2022559",
    "end": "2028600"
  },
  {
    "text": "nephew who is five and I say complete it just because of how much Foundation",
    "start": "2028600",
    "end": "2034519"
  },
  {
    "text": "there is there and how much work has been done by default they will probably finish with something like this I mean",
    "start": "2034519",
    "end": "2041240"
  },
  {
    "text": "they're five so maybe it looks a bit worse but something around",
    "start": "2041240",
    "end": "2046720"
  },
  {
    "text": "that but also me who is not an architect and I don't know how to build castles if",
    "start": "2046720",
    "end": "2052839"
  },
  {
    "text": "I take that and I'm I've done my fa bit of Lego but I'm not a castle expert I",
    "start": "2052839",
    "end": "2058919"
  },
  {
    "text": "can still create a fairly good look Castle something like this now let's",
    "start": "2058919",
    "end": "2065118"
  },
  {
    "text": "take a step back I go to my nephew again and instead of giving them an",
    "start": "2065119",
    "end": "2070599"
  },
  {
    "text": "unfinished Castle I give them ground and I give them a back a a bucket with",
    "start": "2070599",
    "end": "2077000"
  },
  {
    "text": "infinite amount of Lego of any sh size any color any length and I say build a",
    "start": "2077000",
    "end": "2083878"
  },
  {
    "text": "castle well they're going to probably build something like this now does it",
    "start": "2083879",
    "end": "2089200"
  },
  {
    "text": "look like a castle if I ask him he he'll be like yeah it's certainly a castle I can see a",
    "start": "2089200",
    "end": "2095440"
  },
  {
    "text": "door I can see the ground there's a torch somewhere there it is amazing now I wouldn't say it looks like",
    "start": "2095440",
    "end": "2101520"
  },
  {
    "text": "a castle I think it looks bad I wouldn't tell it to him because he would cry but at least he's engaged and he got into",
    "start": "2101520",
    "end": "2109119"
  },
  {
    "text": "using Lego and to his eyes he did build a castle and he can play with a castle",
    "start": "2109119",
    "end": "2115160"
  },
  {
    "text": "and you know what next time he builds Another Castle maybe maybe it will be less um",
    "start": "2115160",
    "end": "2122040"
  },
  {
    "text": "shitty but if I go to my uncle who studied architecture",
    "start": "2122040",
    "end": "2129000"
  },
  {
    "text": "and I gave the same tools then most likely he would make a",
    "start": "2129000",
    "end": "2135760"
  },
  {
    "text": "masterpiece do you get it that's what that's what minimal apis are all about",
    "start": "2135760",
    "end": "2141920"
  },
  {
    "text": "this is what controllers look like like to me there's a lot of opinions about something in there there's a lot of",
    "start": "2141920",
    "end": "2147760"
  },
  {
    "text": "stuff on how it should be built your model validator your um model State how",
    "start": "2147760",
    "end": "2153960"
  },
  {
    "text": "you can extend that specific controller base how you need an API uh controller attribute all of those",
    "start": "2153960",
    "end": "2161280"
  },
  {
    "text": "details on how you should structure your project and what it should do by default are there and what's great about that is",
    "start": "2161280",
    "end": "2167839"
  },
  {
    "text": "because a junior developer most likely will build an API that looks like this",
    "start": "2167839",
    "end": "2172880"
  },
  {
    "text": "because once you have that controller set up it's very unlikely you're going to fundamentally mess it",
    "start": "2172880",
    "end": "2179520"
  },
  {
    "text": "up but someone who's mid or senior as well can take the exact same thing and",
    "start": "2179520",
    "end": "2185079"
  },
  {
    "text": "build maybe a bit of a of a better one uh of a castle but again a nice looking",
    "start": "2185079",
    "end": "2190880"
  },
  {
    "text": "Castle but here's the thing with minimal apis if I break down everything to the",
    "start": "2190880",
    "end": "2196280"
  },
  {
    "text": "bare minimum and I go ahead and I give them to a junior developer or someone who has never built an API before but",
    "start": "2196280",
    "end": "2202599"
  },
  {
    "text": "all they care about is to build a product and the product happens to need an API and I say look how simple it is",
    "start": "2202599",
    "end": "2208480"
  },
  {
    "text": "to build an API you have all of these Lego bricks and a ground go ahead go",
    "start": "2208480",
    "end": "2214240"
  },
  {
    "text": "crazy they will be happy because they did build an API that works for them is",
    "start": "2214240",
    "end": "2219359"
  },
  {
    "text": "it a well architected API no does it matter if it works for them no because",
    "start": "2219359",
    "end": "2226359"
  },
  {
    "text": "next time they're going to build it it will be pretty good but what happens",
    "start": "2226359",
    "end": "2231520"
  },
  {
    "text": "with someone who's a true senior staff principal whatever word they invented uh today for calling very SAR Engineers if",
    "start": "2231520",
    "end": "2239240"
  },
  {
    "text": "I give that to one of those people one of those Architects then they most certainly will build a masterpiece and a",
    "start": "2239240",
    "end": "2245960"
  },
  {
    "text": "masterpiece that works for them and that's exactly what minimal apis are about it is about you it is about choice",
    "start": "2245960",
    "end": "2254720"
  },
  {
    "text": "so let's go back to the first question what are minimal apis well to me minimal",
    "start": "2254720",
    "end": "2262480"
  },
  {
    "text": "apis are an unopinionated way to build high performance apis in net with the",
    "start": "2262480",
    "end": "2267599"
  },
  {
    "text": "minimal amount of implicitly added features and the maximal amount of flexibility to explicitly op in the",
    "start": "2267599",
    "end": "2274359"
  },
  {
    "text": "features and the structure that you need it's a about you it's about",
    "start": "2274359",
    "end": "2280640"
  },
  {
    "text": "choice so let's see what is possible when you can have that sort of power in your hands let's go back to the first demo",
    "start": "2280640",
    "end": "2288480"
  },
  {
    "text": "actually the second demo and I'm going to go ahead and I have this API over here which I'm not going to show you",
    "start": "2288480",
    "end": "2293839"
  },
  {
    "text": "what's in there but I'm just going to run it and all you need to know is that",
    "start": "2293839",
    "end": "2298920"
  },
  {
    "text": "this API is a customer API microservice and it is a rest API so I'm just going",
    "start": "2298920",
    "end": "2304920"
  },
  {
    "text": "to make this smaller I'm going to expand this and I'm going to show you the end points so you have your classic rest get",
    "start": "2304920",
    "end": "2311280"
  },
  {
    "text": "all resources in a given H API thing so no customers in my system this is using",
    "start": "2311280",
    "end": "2316960"
  },
  {
    "text": "a real database by the way uh with the right responses and headers and everything then I can go ahead if I want",
    "start": "2316960",
    "end": "2323960"
  },
  {
    "text": "and create a user so let me just mess up my email a bit so that is definitely not my email but if I am to create a user",
    "start": "2323960",
    "end": "2332200"
  },
  {
    "text": "let me just find it here you can see that a.com is not a valid email address so I have full valid a here I can also",
    "start": "2332200",
    "end": "2339160"
  },
  {
    "text": "for example use the date in the future and try to call that and it says your",
    "start": "2339160",
    "end": "2344400"
  },
  {
    "text": "date of birth cannot be in the future so full model validation and domain level validation for my thing um that's",
    "start": "2344400",
    "end": "2352400"
  },
  {
    "text": "definitely not when I was born no that be ancient uh and I'm going to go ahead",
    "start": "2352400",
    "end": "2357720"
  },
  {
    "text": "and create me and I can go ahead and get me as well from that getting point so",
    "start": "2357720",
    "end": "2364960"
  },
  {
    "text": "I'm back I can also mess that um end point a bit and point to something that",
    "start": "2364960",
    "end": "2370520"
  },
  {
    "text": "doesn't exist and I get a 402 exactly as you would do in a rest API if you say that this should return 204 you are",
    "start": "2370520",
    "end": "2378960"
  },
  {
    "text": "wrong and I can go ahead and update this as well so my username will be different",
    "start": "2378960",
    "end": "2384200"
  },
  {
    "text": "so I have exactly what you need for rest API and then just to wrap this up I'm",
    "start": "2384200",
    "end": "2389400"
  },
  {
    "text": "just going to call delete and I'm gone 204 no content the user was deleted and if I do it again 404 resource not found",
    "start": "2389400",
    "end": "2398520"
  },
  {
    "text": "now let's take a look at something else I'm going to go to Swagger and I'm going to refresh this page and this is the",
    "start": "2398520",
    "end": "2405280"
  },
  {
    "text": "Swagger please move okay and this is uh Swagger from my API now I have to look",
    "start": "2405280",
    "end": "2412319"
  },
  {
    "text": "at this because it wasn't updating um and you can see my endpoints here",
    "start": "2412319",
    "end": "2417640"
  },
  {
    "text": "documented creates a new customer in the system I have my request body I have the",
    "start": "2417640",
    "end": "2423280"
  },
  {
    "text": "success code so 2011 400 get delete get again and put everything is here",
    "start": "2423280",
    "end": "2430440"
  },
  {
    "text": "with exactly what you'd expect from an API that respects itself now how is that done with minimal",
    "start": "2430440",
    "end": "2437839"
  },
  {
    "text": "API technology because all of that that you just saw is built with minimal apis now here's the API remember API is",
    "start": "2437839",
    "end": "2446560"
  },
  {
    "text": "not minimal apis are not about the minimal amount of code it is about the minimal amount of setup code and",
    "start": "2446560",
    "end": "2453520"
  },
  {
    "text": "stripping down everything to its bare minimum so for me an endpoint look something like this all I need to",
    "start": "2453520",
    "end": "2460400"
  },
  {
    "text": "have is a class an endpoint class which for this to be registered all I need to",
    "start": "2460400",
    "end": "2465680"
  },
  {
    "text": "do is create it and then I extend the endpoint class I slap an HTTP post here",
    "start": "2465680",
    "end": "2471400"
  },
  {
    "text": "and allow Anonymous and then I have my request and my response very explicit very descriptive I can inject any",
    "start": "2471400",
    "end": "2478119"
  },
  {
    "text": "service I want in here and I only have a single handle method because that thing is supposed to do one thing and one",
    "start": "2478119",
    "end": "2483839"
  },
  {
    "text": "thing only to handle this create customer request and then I'm sending that to a service because I don't need",
    "start": "2483839",
    "end": "2489560"
  },
  {
    "text": "mediator in this case and then I'm just returning it back as a created ad with the like the right location header and",
    "start": "2489560",
    "end": "2496640"
  },
  {
    "text": "all that and if I wanted to add an extra endpoint in my API I just create a new",
    "start": "2496640",
    "end": "2502079"
  },
  {
    "text": "class extending the same things now I also have validation for those things",
    "start": "2502079",
    "end": "2507560"
  },
  {
    "text": "and again those are implicitly registered all I needed to do is extend the abstract validator which if you are",
    "start": "2507560",
    "end": "2514240"
  },
  {
    "text": "familiar with fluent validation this definitely ring aell and then point to",
    "start": "2514240",
    "end": "2519760"
  },
  {
    "text": "that request over there so that just magically works with code and then last",
    "start": "2519760",
    "end": "2525520"
  },
  {
    "text": "but not least the summaries those are what is used for the documentation in Swagger so if if I went ahead and I",
    "start": "2525520",
    "end": "2532079"
  },
  {
    "text": "deleted that then that documentation would be gone and again I didn't have to explicitly register any of that now how",
    "start": "2532079",
    "end": "2539359"
  },
  {
    "text": "this all hangs together and you can find this code by the way on my GitHub under a clean minimal API which is ironic uh",
    "start": "2539359",
    "end": "2548520"
  },
  {
    "text": "is like this I have a package install called Fast end points which I helped",
    "start": "2548520",
    "end": "2554119"
  },
  {
    "text": "steer the direction a little bit uh because I found it very interesting and it's what I wanted to do with minimal",
    "start": "2554119",
    "end": "2559520"
  },
  {
    "text": "apis as well and I was glad someone else was doing that and I can just um help",
    "start": "2559520",
    "end": "2564800"
  },
  {
    "text": "with that and then that's all I need to do to register my services and then this is all I need to do to register my",
    "start": "2564800",
    "end": "2571040"
  },
  {
    "text": "endpoints and that's it I'm not cheating by the way all I have in here is just some error response mapping to a",
    "start": "2571040",
    "end": "2577760"
  },
  {
    "text": "validation contract which again I can just extract to a different class but that's it so I just want to recap this",
    "start": "2577760",
    "end": "2585319"
  },
  {
    "text": "is still technically using minimal API code now you might think that this is",
    "start": "2585319",
    "end": "2590599"
  },
  {
    "text": "too much this is a lot this is bloated however it is the path I chose and it is the cast The Castle I decided to build",
    "start": "2590599",
    "end": "2597680"
  },
  {
    "text": "and that's my choice which is what minimal apis are all about",
    "start": "2597680",
    "end": "2603240"
  },
  {
    "text": "so back to this let's talk about something that I call minimal value and",
    "start": "2603240",
    "end": "2609119"
  },
  {
    "text": "is definitely not the D in Krueger diagram with change labels it's totally original I made it so on the",
    "start": "2609119",
    "end": "2618680"
  },
  {
    "text": "horizontal on the vertical axis you have the viability of a project um of of of a",
    "start": "2618920",
    "end": "2624839"
  },
  {
    "text": "specific type of project using minimal apis and then on the horizontal you have the type of project the way I imagine it",
    "start": "2624839",
    "end": "2632040"
  },
  {
    "text": "when it comes to project lifetime because I think projects start in a certain way and they end up in a certain",
    "start": "2632040",
    "end": "2637520"
  },
  {
    "text": "way if you have enough money uh but you can also start at any point it doesn't have to go through all the life cycle so",
    "start": "2637520",
    "end": "2644839"
  },
  {
    "text": "first beginner projects it makes so much sense to use minimal apis for beginner projects it's a no-brainer you can just",
    "start": "2644839",
    "end": "2651920"
  },
  {
    "text": "start with just four lines of code and you have something there so we established that also demos as you saw",
    "start": "2651920",
    "end": "2657359"
  },
  {
    "text": "on the first demo very easy to demo an API using minimal apis and also proof of Concepts it's great to have a piece of",
    "start": "2657359",
    "end": "2663960"
  },
  {
    "text": "technology that you can just start building something with and then convert that if you want to something that can",
    "start": "2663960",
    "end": "2669880"
  },
  {
    "text": "go to production and be very very very performant as well now where I don't think they're going to have an",
    "start": "2669880",
    "end": "2675920"
  },
  {
    "text": "international career necessarily is those chunky Enterprise apps now those",
    "start": "2675920",
    "end": "2681119"
  },
  {
    "text": "are not limited to monoliths Beyond saving um modular monol can also be part",
    "start": "2681119",
    "end": "2686960"
  },
  {
    "text": "of this but I think that just because the type of company the type of developer who works on those projects is",
    "start": "2686960",
    "end": "2694280"
  },
  {
    "text": "a specific again type of developer it doesn't make much sense to move from one",
    "start": "2694280",
    "end": "2699480"
  },
  {
    "text": "thing to another waste all of that knowledge that exists in each company",
    "start": "2699480",
    "end": "2704720"
  },
  {
    "text": "and for that developer as well for something that really isn't significant because yes even if you did move to that",
    "start": "2704720",
    "end": "2710839"
  },
  {
    "text": "other structure you wouldn't really gain much if you took that risk so I",
    "start": "2710839",
    "end": "2715920"
  },
  {
    "text": "definitely don't see that being adopted there and in my opinion for good reason now if you make a new up and you say",
    "start": "2715920",
    "end": "2721920"
  },
  {
    "text": "we're going to give that a go then maybe try it but I just can't say it Happ",
    "start": "2721920",
    "end": "2727040"
  },
  {
    "text": "happening but where I do see that something amazing will happen is microservices now microservices are",
    "start": "2727040",
    "end": "2733760"
  },
  {
    "text": "small by nature is in the name microservices so minimal apis from",
    "start": "2733760",
    "end": "2739559"
  },
  {
    "text": "microservices just make so much sense for me and it also allows developers who work on microservices to choose their",
    "start": "2739559",
    "end": "2746280"
  },
  {
    "text": "own destiny on the structure I want to wrap this up with",
    "start": "2746280",
    "end": "2751920"
  },
  {
    "text": "the important the importance of minimal apis for net because I think it goes beyond the code",
    "start": "2751920",
    "end": "2757440"
  },
  {
    "text": "uh and Beyond everything we talked about until now I want to talk about how people get",
    "start": "2757440",
    "end": "2764079"
  },
  {
    "text": "into a programming language in general so first they have an idea of the vulnerability they don't know what",
    "start": "2764079",
    "end": "2769599"
  },
  {
    "text": "programming is they I'm just going to make a game I'm going to remake tetri I don't know how do I remake Tetris or the",
    "start": "2769599",
    "end": "2776160"
  },
  {
    "text": "programming language what's the easiest programming language to remake Tetris then University School College",
    "start": "2776160",
    "end": "2782680"
  },
  {
    "text": "they just have it as part of the classes and someone might be like well that programming things sounds good I'm going to give it a go and you just depend on",
    "start": "2782680",
    "end": "2789480"
  },
  {
    "text": "whatever the University or School decided for you to learn then curiosity as a beginner this is how many people",
    "start": "2789480",
    "end": "2795720"
  },
  {
    "text": "are starting I want to get into programming how do I program how do I make a calculator and it's all downhill",
    "start": "2795720",
    "end": "2801800"
  },
  {
    "text": "from there oh hopefully uphill um curiosity as an experienced",
    "start": "2801800",
    "end": "2806920"
  },
  {
    "text": "programmer is another one this is how I usually nowadays get into programming languages because of how many features",
    "start": "2806920",
    "end": "2812400"
  },
  {
    "text": "are added in cop um I really want to see where they're getting inspired from spoiler alert it's usually F shop um but",
    "start": "2812400",
    "end": "2820240"
  },
  {
    "text": "other languages as well like cotlin rust are a heavy influence to the cop team so",
    "start": "2820240",
    "end": "2825880"
  },
  {
    "text": "I'm getting into those languages to have a more spherical view on how things are added into",
    "start": "2825880",
    "end": "2832079"
  },
  {
    "text": "cop and then last but not least just because you get hired into the company that is using it this is how I start",
    "start": "2832079",
    "end": "2837640"
  },
  {
    "text": "with cop I desperately needed for a job I was doing Java beforehand for some reason my future would be building",
    "start": "2837640",
    "end": "2843920"
  },
  {
    "text": "desktop applications in Java",
    "start": "2843920",
    "end": "2848078"
  },
  {
    "text": "maybe not the smartest idea but someone said here has a job so I took it thanks Phil you kind of changed my life um but",
    "start": "2849680",
    "end": "2857720"
  },
  {
    "text": "this is in general how people get into programming languages there are this as well but I'm going to focus on these you",
    "start": "2857720",
    "end": "2864640"
  },
  {
    "text": "know a parent is also another one and so on but we're going to leave that outside so these three are the ones",
    "start": "2864640",
    "end": "2872119"
  },
  {
    "text": "directly applicable to cop now you could say no Nick three and one is also",
    "start": "2872119",
    "end": "2877559"
  },
  {
    "text": "applicable because of unity the game engine and that is true but Unity the game engine if you've seen C from Unity",
    "start": "2877559",
    "end": "2884440"
  },
  {
    "text": "the game engine you wouldn't really want to see that code trust me it's it's",
    "start": "2884440",
    "end": "2890200"
  },
  {
    "text": "weird it's a different thing it's not the same thing it kind of gets there but it's not the developer you would",
    "start": "2890200",
    "end": "2895680"
  },
  {
    "text": "necessarily hire and it's not the developer that would want to work for apis anyway so let's leave it outsite so",
    "start": "2895680",
    "end": "2902240"
  },
  {
    "text": "this is what we have but this is the one that is",
    "start": "2902240",
    "end": "2907400"
  },
  {
    "text": "actually really on our own destiny on our own hands we can choose the destiny",
    "start": "2907400",
    "end": "2912559"
  },
  {
    "text": "because universities schools colleges they can change which language they teach and companies they can change",
    "start": "2912559",
    "end": "2918599"
  },
  {
    "text": "which language they use so curiosity and experienced programmer is actually the one um thing left again outside of Unity",
    "start": "2918599",
    "end": "2926960"
  },
  {
    "text": "on how people can get into the language and even Unity if they decide to move away from cop which I don't think will",
    "start": "2926960",
    "end": "2933359"
  },
  {
    "text": "ever happen but if they do then we lose that as well and that is bad and the",
    "start": "2933359",
    "end": "2940359"
  },
  {
    "text": "reason why this is bad is a train so let's talk about trains this one won't",
    "start": "2940359",
    "end": "2946119"
  },
  {
    "text": "won't make so much sense as the Lego I'm just warning you so people get on board the train people stay on the train and",
    "start": "2946119",
    "end": "2953440"
  },
  {
    "text": "people get off the train and the train will keep making the journey as long as there are passengers",
    "start": "2953440",
    "end": "2960400"
  },
  {
    "text": "the moment there's no passengers the train will just stop doing that because it doesn't make any sense for the",
    "start": "2960400",
    "end": "2966280"
  },
  {
    "text": "journey to be be made so let's talk about the programming language Express a people pick up a language B",
    "start": "2966280",
    "end": "2974480"
  },
  {
    "text": "people use a language and they keep using that language and C people stop using that",
    "start": "2974480",
    "end": "2980760"
  },
  {
    "text": "language now a language is dying when a plus B minus C is decreasing over time",
    "start": "2980760",
    "end": "2986920"
  },
  {
    "text": "which makes sense the more people that ditch the language or if the people",
    "start": "2986920",
    "end": "2992520"
  },
  {
    "text": "ditching the language are more than the people picking up the language and using it then we kind of have a problem and",
    "start": "2992520",
    "end": "2998200"
  },
  {
    "text": "there's a bit of a catch 22 when it comes to programming language as well because the more people use a language",
    "start": "2998200",
    "end": "3003839"
  },
  {
    "text": "the more people will use a language and the less people that use a language the more people will stop using a",
    "start": "3003839",
    "end": "3009680"
  },
  {
    "text": "language which is how it's an interesting Dynamic but it is how it is um so C is good at B and C but a is a",
    "start": "3009680",
    "end": "3018400"
  },
  {
    "text": "bit stale people picking up the language especially in the context of ASP net core and apis and that is not um C to",
    "start": "3018400",
    "end": "3025839"
  },
  {
    "text": "blame because C is a great language people love using cop and they just stick with it for years upon years upon",
    "start": "3025839",
    "end": "3032200"
  },
  {
    "text": "years but we need to make it more accessible and make more people come in and say hey we're cool too you can also",
    "start": "3032200",
    "end": "3038799"
  },
  {
    "text": "have an API very quickly or you can also have a system that you can deploy in the cloud very very easily C is inevitable",
    "start": "3038799",
    "end": "3045880"
  },
  {
    "text": "as people retire like it makes so much sense for net being 20 years old that You' have some people doing it for so",
    "start": "3045880",
    "end": "3052079"
  },
  {
    "text": "long that they can just retire and they don't need to work for it anymore minimal apis are ultimately a step",
    "start": "3052079",
    "end": "3059559"
  },
  {
    "text": "towards increasing a to get more people picking up the language so when I hear",
    "start": "3059559",
    "end": "3065280"
  },
  {
    "text": "things like the net team should not be working on things like this this is not for me why are they wasting my time this",
    "start": "3065280",
    "end": "3072240"
  },
  {
    "text": "is not what I asked for this is not what I need well if you want to be able to",
    "start": "3072240",
    "end": "3078559"
  },
  {
    "text": "hire the next generation of cop and doet developers then it is for you even if",
    "start": "3078559",
    "end": "3083920"
  },
  {
    "text": "it's not for you thank you very much and keep going",
    "start": "3083920",
    "end": "3088559"
  },
  {
    "text": "do we have time for questions uh sure we have 9 minutes so",
    "start": "3096960",
    "end": "3104720"
  },
  {
    "text": "if I can't see anyone so if you have any questions ask me now if not we can just",
    "start": "3104720",
    "end": "3109960"
  },
  {
    "text": "call it here and you can come over and ask me okay let's do the second",
    "start": "3109960",
    "end": "3117290"
  },
  {
    "text": "[Applause]",
    "start": "3117290",
    "end": "3121719"
  }
]