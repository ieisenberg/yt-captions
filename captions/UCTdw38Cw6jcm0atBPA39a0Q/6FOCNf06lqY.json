[
  {
    "text": "fine well thanks so much for coming out today there's good competition in this slot so I probably shouldn't have",
    "start": "0",
    "end": "5940"
  },
  {
    "text": "mentioned that because you might have a look see who else on at the same time and realize there's a better room you could be in but Kevin's all the way at",
    "start": "5940",
    "end": "12059"
  },
  {
    "text": "the top and you won't get there in time so you're going to have to stay here now uh thank you so much for coming out this",
    "start": "12059",
    "end": "17400"
  },
  {
    "text": "is really a nice thrill for me because um it's only my second in-person conference since the happening",
    "start": "17400",
    "end": "24720"
  },
  {
    "text": "um and it's been this is where the first one where I've actually felt comfortable enough to actually enjoy myself and I've had some great conversations with uh",
    "start": "24720",
    "end": "31320"
  },
  {
    "text": "with many of you yesterday and looking forward to a more relaxed time once my talk is done it's the first time I've",
    "start": "31320",
    "end": "36719"
  },
  {
    "text": "given this talk in public I did it in my hotel room by myself talking often to like a fake attendees shaped in the form",
    "start": "36719",
    "end": "44399"
  },
  {
    "text": "of towels and things so hopefully you'll forgive any uh slight missteps here and",
    "start": "44399",
    "end": "50219"
  },
  {
    "text": "there but I'm not sure this is I'm very happy with this talk actually so I'm going back no this is a good talk right",
    "start": "50219",
    "end": "55559"
  },
  {
    "text": "and you'll be applauding at the end that's what I'm thinking internally but we're not we're gonna hear talking a little bit about the meaning of words",
    "start": "55559",
    "end": "63120"
  },
  {
    "text": "now some of you might know me for such things as microservices that is indeed a",
    "start": "63120",
    "end": "68400"
  },
  {
    "text": "lot of my day job and today's talk is sort of micro Services adjacent in as",
    "start": "68400",
    "end": "74939"
  },
  {
    "text": "much as it's about a topic which often interests us when we're looking at any discussion around Communication in a",
    "start": "74939",
    "end": "83159"
  },
  {
    "text": "service-based architecture of which microservices are just one type",
    "start": "83159",
    "end": "88320"
  },
  {
    "text": "I spend a lot of my time talking about boxes boxes and very importantly arrows right",
    "start": "88320",
    "end": "97079"
  },
  {
    "text": "the arrows are kind of vital in the whole boxes and arrows story sometimes",
    "start": "97079",
    "end": "102960"
  },
  {
    "text": "I'm talking about how big boxes should be or indeed how small boxes should be",
    "start": "102960",
    "end": "110460"
  },
  {
    "text": "in other situations we are discussing what should be in a box",
    "start": "110460",
    "end": "116460"
  },
  {
    "text": "how many things should be in a box I do especially enjoy talking about the",
    "start": "116460",
    "end": "122159"
  },
  {
    "text": "shape of the box and of course I have my own personal view which of course is the correct view which is that all boxes",
    "start": "122159",
    "end": "129179"
  },
  {
    "text": "should in fact be hexagons but today's talk is actually about the arrows",
    "start": "129179",
    "end": "135360"
  },
  {
    "text": "the arrows between these lovely lovely boxes this my friends is the life of an",
    "start": "135360",
    "end": "141840"
  },
  {
    "text": "architect how glamorous is a simple micro service architecture",
    "start": "141840",
    "end": "147599"
  },
  {
    "text": "just to because some of you probably want to hear a little bit of microservices stuff um and I always like to be very clear",
    "start": "147599",
    "end": "153500"
  },
  {
    "text": "about what these diagrams represent because I think understanding what I'm",
    "start": "153500",
    "end": "158879"
  },
  {
    "text": "trying to share helps you get the best out of it and make sure we're talking about the same things this little micro service",
    "start": "158879",
    "end": "165239"
  },
  {
    "text": "architecture is a logical architecture diagram and I show arrows here between these services so this Arrow here",
    "start": "165239",
    "end": "173459"
  },
  {
    "text": "is what I use to denote a logical dependency so the arrow here from returns to",
    "start": "173459",
    "end": "180720"
  },
  {
    "text": "shipping defines the direction of a logical dependency",
    "start": "180720",
    "end": "186959"
  },
  {
    "text": "and specifically what we mean here is that the returns microservice depends on",
    "start": "186959",
    "end": "192780"
  },
  {
    "text": "some functionality which is provided to it by the shipping microservice I think it's a mistake with a service",
    "start": "192780",
    "end": "199440"
  },
  {
    "text": "architecture to think in terms of oh I'm accessing data I think more generically the shipping",
    "start": "199440",
    "end": "205200"
  },
  {
    "text": "microservice has some functionality it implements and it decides to expose some of that",
    "start": "205200",
    "end": "211080"
  },
  {
    "text": "functionality over Network endpoints which other services can then consume",
    "start": "211080",
    "end": "217319"
  },
  {
    "text": "and so this Arrow says the returns to do with part of its job I need to rely on things that the shipping microservice",
    "start": "217319",
    "end": "223440"
  },
  {
    "text": "provides to me this is kind of the acceptable face of coupling in the context of a microservice architecture",
    "start": "223440",
    "end": "229620"
  },
  {
    "text": "and I've referred to this typically as domain coupling quite a loose or weak form of coupling in general well when",
    "start": "229620",
    "end": "236099"
  },
  {
    "text": "compared to the others so when we start talking about how to implement these interactions the most",
    "start": "236099",
    "end": "243360"
  },
  {
    "text": "common question I then get and this is going back for many many years now is should this integration be synchronous",
    "start": "243360",
    "end": "248940"
  },
  {
    "text": "or asynchronous that's what I get and I actually think this distinction is not very useful",
    "start": "248940",
    "end": "255900"
  },
  {
    "text": "and we'll get into a why that's really what the whole talk is about that this distinction isn't one that gives us any ability to",
    "start": "255900",
    "end": "263520"
  },
  {
    "text": "talk reasonably about what we want out of a system I typically Instead try and start the",
    "start": "263520",
    "end": "269340"
  },
  {
    "text": "conversation talking about different styles of interaction that we might have between two microservices and broadly",
    "start": "269340",
    "end": "275340"
  },
  {
    "text": "speaking I've broken the word the world down into request response or into communication and event driven",
    "start": "275340",
    "end": "281639"
  },
  {
    "text": "communication and again this being a talk about meaning I will now explain what I mean",
    "start": "281639",
    "end": "287220"
  },
  {
    "text": "by these terms just so there's no confusion request responsor into communication is",
    "start": "287220",
    "end": "292979"
  },
  {
    "text": "probably the form of communication that many of you are most familiar with",
    "start": "292979",
    "end": "298259"
  },
  {
    "text": "so in this case we've got a micro service in this crisis that returns microservice which is acting as the",
    "start": "298259",
    "end": "304139"
  },
  {
    "text": "consumer it wants to consume functionality provided by another microservice to do so in a request",
    "start": "304139",
    "end": "310800"
  },
  {
    "text": "response oriented fashion it sends a request so in this case here I'm going",
    "start": "310800",
    "end": "316139"
  },
  {
    "text": "to another microservice and saying hi look I need a shipping label we need to return this package for a customer",
    "start": "316139",
    "end": "321960"
  },
  {
    "text": "I don't know how to generate return labels but you do the shipping microservice looks at the weight of the package you're trying to send the",
    "start": "321960",
    "end": "327840"
  },
  {
    "text": "location you're trying to send that to and it generates your label and it gives you a PDF maybe in the response that you",
    "start": "327840",
    "end": "334020"
  },
  {
    "text": "can then use some people would refer to this in terms instead of request response I'll just say request driven I",
    "start": "334020",
    "end": "339900"
  },
  {
    "text": "like to point out that you always do want some kind of response even if it's just to know did the thing work",
    "start": "339900",
    "end": "346139"
  },
  {
    "text": "but often because we need the response to do something else with that information all because we've got you",
    "start": "346139",
    "end": "351479"
  },
  {
    "text": "know a chain of causality that we need to deal with other people will talk about commands",
    "start": "351479",
    "end": "356580"
  },
  {
    "text": "you can see a request as being a synonym an alternative name for a command I",
    "start": "356580",
    "end": "361800"
  },
  {
    "text": "prefer the word request because request is slightly weaker which I think is important when I send a request to",
    "start": "361800",
    "end": "368100"
  },
  {
    "text": "something the thing I'm sending a request to gets to say no when I call something a command it feels",
    "start": "368100",
    "end": "374039"
  },
  {
    "text": "much more forceful do",
    "start": "374039",
    "end": "377180"
  },
  {
    "text": "for me these things are much more like a request to my son to clean up his room it would be nice if it happened but I'm",
    "start": "379199",
    "end": "385740"
  },
  {
    "text": "not going to be surprised if it doesn't so I'd prefer request response but I understand think command if you're using",
    "start": "385740",
    "end": "391500"
  },
  {
    "text": "that terminology is kind of similar to a request here so the return to microservice consumes the functionality",
    "start": "391500",
    "end": "397440"
  },
  {
    "text": "of the shipping Market service we move into one of the adventure and this is quite different",
    "start": "397440",
    "end": "402660"
  },
  {
    "text": "here we've inverted things with request response it's the consumer",
    "start": "402660",
    "end": "407880"
  },
  {
    "text": "that initiates the interaction I need to do something can you help me please",
    "start": "407880",
    "end": "413580"
  },
  {
    "text": "with event-driven communication we have an inversion the consumers in this interaction don't",
    "start": "413580",
    "end": "419940"
  },
  {
    "text": "initiate the interaction they react to things happening in the system so here we've got a microservice called",
    "start": "419940",
    "end": "426840"
  },
  {
    "text": "inventory this manages the stock in our system and it alerts us to a very important",
    "start": "426840",
    "end": "432780"
  },
  {
    "text": "piece of information and that is that we've just received 10 000 copies of Justin Bieber's greatest hits",
    "start": "432780",
    "end": "438720"
  },
  {
    "text": "this is Vital Information now the way I describe an event just you know another way of thinking of an event here is to",
    "start": "438720",
    "end": "445020"
  },
  {
    "text": "think of it as a fact something has happened and it's an important enough fact that I",
    "start": "445020",
    "end": "451380"
  },
  {
    "text": "want to let the world know so I communicate that fact but I don't send a fact to anybody it's more like",
    "start": "451380",
    "end": "458520"
  },
  {
    "text": "putting up on a notice board and then interesting parties can decide if they care about that fact",
    "start": "458520",
    "end": "464699"
  },
  {
    "text": "so in this example we have two different microservices which both care about this fact but",
    "start": "464699",
    "end": "472020"
  },
  {
    "text": "might do very different things with this information the promotions microservice for example",
    "start": "472020",
    "end": "477720"
  },
  {
    "text": "is responsible for automatically discounting our products based on stock volumes so if we've got more than say 5",
    "start": "477720",
    "end": "485039"
  },
  {
    "text": "000 items in stock it will automatically take 20 off the recommended retail price",
    "start": "485039",
    "end": "491160"
  },
  {
    "text": "the wish list on the other hand notifies people when items that they put on their",
    "start": "491160",
    "end": "496259"
  },
  {
    "text": "wish list are now available in stock one event two very different outcomes",
    "start": "496259",
    "end": "502080"
  },
  {
    "text": "so in this context these micro services on the right hand side promotional wish list are the consumers we see a kind of",
    "start": "502080",
    "end": "508319"
  },
  {
    "text": "interesting inversion and these interaction styles are very different",
    "start": "508319",
    "end": "513779"
  },
  {
    "text": "request response feels very familiar to us event driven is very nicely Loosely",
    "start": "513779",
    "end": "520260"
  },
  {
    "text": "coupled but has some additional complexity when trying to confirm things like did anything actually happen I'm a",
    "start": "520260",
    "end": "526140"
  },
  {
    "text": "big fan of event driven interactions because of that loose coupling nature this is the city of how I tend to",
    "start": "526140",
    "end": "533040"
  },
  {
    "text": "approach the world of inter-process communication this tends to be where my head goes to first I would say the",
    "start": "533040",
    "end": "538500"
  },
  {
    "text": "majority of non-trivial microservice architectures that I've ever worked on will end up having a mix of these styles",
    "start": "538500",
    "end": "543899"
  },
  {
    "text": "of interaction there will be things that you want to do within your system that just fit one of those styles of",
    "start": "543899",
    "end": "550380"
  },
  {
    "text": "communication really neatly and you'll annoyingly have a lot of types of interactions that could be modeled in",
    "start": "550380",
    "end": "555779"
  },
  {
    "text": "either way and this is the beautiful Bounty of our industry there's always a",
    "start": "555779",
    "end": "561360"
  },
  {
    "text": "hundred different answers to Any Given question so then the interesting question is well",
    "start": "561360",
    "end": "567779"
  },
  {
    "text": "what's my problem with synchronous versus asynchronous well traditionally I would sort of talk about synchronous and asynchronous here request response",
    "start": "567779",
    "end": "574800"
  },
  {
    "text": "versus event driven here and then talk about how they are related to each other and as we'll see you know we think of",
    "start": "574800",
    "end": "580560"
  },
  {
    "text": "request response traditionally as being very synchronous in nature but in fact it can also be asynchronous",
    "start": "580560",
    "end": "587339"
  },
  {
    "text": "we'll see how one way in which we can make an asynchronous interaction around request response for some value of the",
    "start": "587339",
    "end": "593339"
  },
  {
    "text": "word asynchronous and as we'll see later the word asynchronous actually has no value",
    "start": "593339",
    "end": "599160"
  },
  {
    "text": "um but eventually interaction as we always think of as being asynchronous in nature because the things reacting to",
    "start": "599160",
    "end": "604680"
  },
  {
    "text": "the event are based on the nature of the interaction deciding what they do when",
    "start": "604680",
    "end": "609720"
  },
  {
    "text": "they do it if they feel like it right and so I often found this kind of way of",
    "start": "609720",
    "end": "614940"
  },
  {
    "text": "thinking of the world quite useful because rather than say picking a technology and then working out from",
    "start": "614940",
    "end": "620220"
  },
  {
    "text": "that technology what I could do with it instead I start by thinking about the style of interaction I want",
    "start": "620220",
    "end": "625560"
  },
  {
    "text": "and then using that to pick which technology I want based on other factors in my environment",
    "start": "625560",
    "end": "631080"
  },
  {
    "text": "however I've stopped doing this a little bit partly because I've come to the realization there is no consistent",
    "start": "631080",
    "end": "637140"
  },
  {
    "text": "definition of what asynchronous actually means and I was so inspired to do this talk",
    "start": "637140",
    "end": "642959"
  },
  {
    "text": "partly by post by Pat Helen so this is actually from Pat Helen's newsletter",
    "start": "642959",
    "end": "648120"
  },
  {
    "text": "which is very it's a very sporadic posting but Pat Helen's pretty smart guy and in this post he makes the argument",
    "start": "648120",
    "end": "654899"
  },
  {
    "text": "that we should stop using the word the term eventual consistency because we use consistency the term",
    "start": "654899",
    "end": "661380"
  },
  {
    "text": "consistency in two very closely associated contexts but those words have",
    "start": "661380",
    "end": "667200"
  },
  {
    "text": "very different meanings when we think about consistency in the context eventual consistency we're",
    "start": "667200",
    "end": "673560"
  },
  {
    "text": "thinking about can two or three or four replicas see the same data at the same",
    "start": "673560",
    "end": "678600"
  },
  {
    "text": "time that's one of our main concerns but then we have the term consistency in the context of an acid database",
    "start": "678600",
    "end": "684839"
  },
  {
    "text": "transaction and it means something completely different I mean if you look at the definition of",
    "start": "684839",
    "end": "691140"
  },
  {
    "text": "what the consistency means I'll leave it as an exercise to all of you it means something very weird",
    "start": "691140",
    "end": "696420"
  },
  {
    "text": "and his argument is well actually that's actually got mathematical properties and you know formal thinking behind it maybe",
    "start": "696420",
    "end": "703079"
  },
  {
    "text": "we should come up with a new term for eventual consistency and He suggests eventual convergence which I think is a",
    "start": "703079",
    "end": "709560"
  },
  {
    "text": "better term in the term I'll be using going forward now unfortunately I'm not as smart as Pat",
    "start": "709560",
    "end": "714600"
  },
  {
    "text": "so Pat in this post says here's a problem here's a potential solution this talk largely is about me going yeah it's",
    "start": "714600",
    "end": "721079"
  },
  {
    "text": "a problem I don't yet have the solution but maybe you can help me with that a bit later on so around this sort of time I was",
    "start": "721079",
    "end": "727560"
  },
  {
    "text": "thinking about this problem with this issue with this term asynchronous what does it mean I talk to different people I get very different views so I did what",
    "start": "727560",
    "end": "734399"
  },
  {
    "text": "any smart rational human being would do and that is reach out to Twitter for some well thought through advice and",
    "start": "734399",
    "end": "742800"
  },
  {
    "text": "guidance remarkably I got some kind of useful information so from that point of view",
    "start": "742800",
    "end": "749040"
  },
  {
    "text": "you know this might be quite shocking right so I'm going to run through some of the responses I got and this gives you a",
    "start": "749040",
    "end": "755399"
  },
  {
    "text": "sense of the different viewpoints on what asynchronous communication means to a variety of different people",
    "start": "755399",
    "end": "762600"
  },
  {
    "text": "so one of the first responses I got was from an old colleague of mine Darren Hobbs and Darren said well to him",
    "start": "762600",
    "end": "769800"
  },
  {
    "text": "asynchronous communication is sending an email versus having a phone call",
    "start": "769800",
    "end": "776700"
  },
  {
    "text": "okay the variations on all these themes I thought cherry pick the tweets that most fit these different ideas",
    "start": "776700",
    "end": "783720"
  },
  {
    "text": "now this the problem is when we see a definition like this we immediately start making assumptions that",
    "start": "783720",
    "end": "788880"
  },
  {
    "text": "asynchronous communication will therefore somehow be slower than synchronous communication",
    "start": "788880",
    "end": "793980"
  },
  {
    "text": "which is is not the case because the speed the throughput the latency of a",
    "start": "793980",
    "end": "799380"
  },
  {
    "text": "system is based on a number of factors and the fastest lowest latency systems",
    "start": "799380",
    "end": "804779"
  },
  {
    "text": "I've ever worked on absolutely rely on asynchronous communication so this idea",
    "start": "804779",
    "end": "810540"
  },
  {
    "text": "of slow email fast phone call doesn't quite line up but there is something about this distinction",
    "start": "810540",
    "end": "817139"
  },
  {
    "text": "that is interesting so this was sort of rolling around in my head and I thought well why this Twitter",
    "start": "817139",
    "end": "822959"
  },
  {
    "text": "thread was going on and you know obviously there were certain conversations being had that I made heavy use of the mute button on",
    "start": "822959",
    "end": "829200"
  },
  {
    "text": "um I thought well let's look elsewhere for where people have put time energy and work into trying to Define these",
    "start": "829200",
    "end": "834660"
  },
  {
    "text": "terms and I come across the reactive Manifesto I say come across it this is one of my favorite punching bags it's",
    "start": "834660",
    "end": "840360"
  },
  {
    "text": "always good to see where smart people have decided to get together and work",
    "start": "840360",
    "end": "845639"
  },
  {
    "text": "together and try and Define terms putting their head above the parapet and I thought I would reward that work and",
    "start": "845639",
    "end": "852420"
  },
  {
    "text": "there's a lot of great stuff in your active Manifesto I don't agree with a lot of it and that's okay but because",
    "start": "852420",
    "end": "858300"
  },
  {
    "text": "they they put their head above the parapet I think it's only fair to take pot shots at them for things I don't",
    "start": "858300",
    "end": "863880"
  },
  {
    "text": "agree with and cherry pick things that I can poke fun of so I've seen this with lots of love for the people that wrote it I do know some of them there is some",
    "start": "863880",
    "end": "870660"
  },
  {
    "text": "good stuff in here as I say but there are also some things that just to me don't make any sense",
    "start": "870660",
    "end": "876360"
  },
  {
    "text": "the later versions of the active Manifesto try to do a better job of defining terms which is good so I go and",
    "start": "876360",
    "end": "881699"
  },
  {
    "text": "took a look I went and have a look at their definition of the term asynchronous they start off of course in",
    "start": "881699",
    "end": "888660"
  },
  {
    "text": "try in in time on a fashion talking about what the Oxford English Dictionary thinks about asynchronous and they say",
    "start": "888660",
    "end": "895139"
  },
  {
    "text": "the Oxford English Dictionary defines asynchronous as not existing or occurring at the same time now interestingly the Oxford English",
    "start": "895139",
    "end": "901800"
  },
  {
    "text": "Dictionary has multiple meanings for Words as something we'll come back to a bit later on they have an explicit",
    "start": "901800",
    "end": "907440"
  },
  {
    "text": "meaning for the term asynchronous in the context of computer-based systems and that is not what this definition is so",
    "start": "907440",
    "end": "913860"
  },
  {
    "text": "pick the wrong meaning for the word but that's fine we'll move on the next thing they say is in the context of this",
    "start": "913860",
    "end": "919440"
  },
  {
    "text": "Manifesto we mean that the processing of a request occurs at an arbitrary point in time so sometime after it has been",
    "start": "919440",
    "end": "927120"
  },
  {
    "text": "transmitted from the client to the server that's what they mean by asynchronous I'm thinking what does that",
    "start": "927120",
    "end": "933600"
  },
  {
    "text": "mean again the processing of the request occurs at an arbitrary time sometime",
    "start": "933600",
    "end": "940680"
  },
  {
    "text": "after it has been transmitted from the client to the server and I'm thinking what as opposed to",
    "start": "940680",
    "end": "946860"
  },
  {
    "text": "processing the request before it's been sent work",
    "start": "946860",
    "end": "951959"
  },
  {
    "text": "it's like some kind of Doctor Who stuff going on here do they think that other types of protocol we or we've got",
    "start": "951959",
    "end": "958139"
  },
  {
    "text": "instantaneous communication look there were two truths about distributed systems one it takes time for stuff to",
    "start": "958139",
    "end": "963660"
  },
  {
    "text": "get to from point A to point B and two sometimes point B isn't there that's all distributed systems the one thing we",
    "start": "963660",
    "end": "970079"
  },
  {
    "text": "know is time is a thing right so of course I have to send something and then it",
    "start": "970079",
    "end": "976860"
  },
  {
    "text": "gets processed this meaning doesn't really mean isn't very helpful there's some other stuff in there that is kind of interesting",
    "start": "976860",
    "end": "982800"
  },
  {
    "text": "they then go and say this is the opposite they use a different word there they use the word antonym which is actually also the wrong word to use",
    "start": "982800",
    "end": "988079"
  },
  {
    "text": "there but we'll let that one lie the opposite of synchronous processing which implies that the client only resumes its",
    "start": "988079",
    "end": "995459"
  },
  {
    "text": "own execution once the server has processed the request there is a lot of things interactive",
    "start": "995459",
    "end": "1001940"
  },
  {
    "text": "manifest that's good I don't agree with it necessarily wholly so please take all of this the pinch of salt but look it's",
    "start": "1001940",
    "end": "1008959"
  },
  {
    "text": "it's it's good to kick something that's got a lot of attention right I feel like I'm at least punching sideways rather",
    "start": "1008959",
    "end": "1014240"
  },
  {
    "text": "than punching down um this is interesting though but this for",
    "start": "1014240",
    "end": "1019279"
  },
  {
    "text": "me isn't necessarily about the distinction between synchronous and asynchronous the client only resumes its own",
    "start": "1019279",
    "end": "1026660"
  },
  {
    "text": "execution once the service has processed the request this is about something different more explicit more discrete",
    "start": "1026660",
    "end": "1036140"
  },
  {
    "text": "and some of the tweets agreed so originally Steve Smith responded and he said that for him if he's thinking",
    "start": "1036140",
    "end": "1043938"
  },
  {
    "text": "about synchronous versus asynchronics there's a TCP connection is open for the duration of a",
    "start": "1043939",
    "end": "1049400"
  },
  {
    "text": "communication now I know Steve he didn't mind I was obviously going to poke holes at this so I said what if I use quick or",
    "start": "1049400",
    "end": "1055760"
  },
  {
    "text": "UDP as accounts I know the answer to this of course the answer is um and he said no he clarify what he meant",
    "start": "1055760",
    "end": "1062419"
  },
  {
    "text": "which is I assume you're not blocking for a response so this is getting more specific this lines up with what we just",
    "start": "1062419",
    "end": "1068900"
  },
  {
    "text": "saw in the reactive Manifesto so for Steve and for at least one aspect of what the",
    "start": "1068900",
    "end": "1075020"
  },
  {
    "text": "reactive Manifesto authors mean by asynchronous they mean not blocking for",
    "start": "1075020",
    "end": "1080600"
  },
  {
    "text": "a response so this is interesting and this I think is worth discourse discussing and",
    "start": "1080600",
    "end": "1086179"
  },
  {
    "text": "exploring so let's talk a little bit about what non-blocking means so here's a simple scenario I've got two",
    "start": "1086179",
    "end": "1093260"
  },
  {
    "text": "Services loyalty and subscription and I've got another micro service that needs to interact with them in some way",
    "start": "1093260",
    "end": "1100100"
  },
  {
    "text": "so one of the things we need to do is we need to award some points and we also want to upgrade your subscription now",
    "start": "1100100",
    "end": "1106280"
  },
  {
    "text": "these things aren't don't have to be ordered they just both have to be done from the point of view of the business process these operations could happen in",
    "start": "1106280",
    "end": "1112940"
  },
  {
    "text": "parallel or sequentially kind of that's what left up to us as a developer now if we started implementing these",
    "start": "1112940",
    "end": "1119840"
  },
  {
    "text": "maybe let's assume we're implementing these as sort of a direct HTTP call so this could be using rest over HTTP maybe",
    "start": "1119840",
    "end": "1126740"
  },
  {
    "text": "using grpc which again is just going to be using the HTTP protocol under the hood we might end up with some simple code",
    "start": "1126740",
    "end": "1132620"
  },
  {
    "text": "that looks a bit like this so I've got a line of codes the first line of code here I go loyalty service.orward points",
    "start": "1132620",
    "end": "1139340"
  },
  {
    "text": "okay I pass some parameters in and rest one that's the first response",
    "start": "1139340",
    "end": "1144919"
  },
  {
    "text": "so I'm going to execute that line of code and I'm going to block and wait until I get response",
    "start": "1144919",
    "end": "1150500"
  },
  {
    "text": "once I get that response I'm then going to move on to the next line of code",
    "start": "1150500",
    "end": "1156980"
  },
  {
    "text": "and so that's when I'm going to make the next call to the service so in this situation here",
    "start": "1156980",
    "end": "1162860"
  },
  {
    "text": "I'm calling you and I'm waiting till you respond no it's not it's not it right so now I",
    "start": "1162860",
    "end": "1168679"
  },
  {
    "text": "go over to you now I know you have to nod others I can't yes not it thank you so now I can carry on with",
    "start": "1168679",
    "end": "1174320"
  },
  {
    "text": "my world right so this is kind of what it thinking is blocking calls right now of course we can start to see some of",
    "start": "1174320",
    "end": "1180740"
  },
  {
    "text": "the issues with blocking calls like this in this particular context the latency",
    "start": "1180740",
    "end": "1185900"
  },
  {
    "text": "of this operation is now becoming the sum of these Downstream calls so if the",
    "start": "1185900",
    "end": "1191059"
  },
  {
    "text": "first call was taking I don't know 50 milliseconds and the second call was taking 150 milliseconds our total",
    "start": "1191059",
    "end": "1198500"
  },
  {
    "text": "end-to-end latency is going to be at least 200 milliseconds this operation",
    "start": "1198500",
    "end": "1205240"
  },
  {
    "text": "and actually you know we might you know one of the things we're often dealing with in the Microsoft architecture is trying to reduce the latency of our",
    "start": "1205400",
    "end": "1212480"
  },
  {
    "text": "systems and so we try and do things like avoiding long cool chains however even",
    "start": "1212480",
    "end": "1217760"
  },
  {
    "text": "if we don't have what looks like a long call chain but have sequential calls from within a single service we still",
    "start": "1217760",
    "end": "1224299"
  },
  {
    "text": "have that latency buildup occurring because of a call happening then a call happening then a call happening and this",
    "start": "1224299",
    "end": "1230360"
  },
  {
    "text": "would be visible to you that this is going on if you're using say a digital tracing tool big shout out to my friends at honeycomb go see them on floor five",
    "start": "1230360",
    "end": "1236780"
  },
  {
    "text": "and they'll show you how you solve all these we usually see all these problems occurring in your systems so",
    "start": "1236780",
    "end": "1242840"
  },
  {
    "text": "this is this is not ideal the other thing is it also gets a bit worse in a way because we have to",
    "start": "1242840",
    "end": "1248059"
  },
  {
    "text": "remember that the latency for an operation is not a fixed number in fact it's dangerous to talk about an",
    "start": "1248059",
    "end": "1254240"
  },
  {
    "text": "average latency for an operation in fats because typically we would expect the latency for say a service call to have a",
    "start": "1254240",
    "end": "1260600"
  },
  {
    "text": "distribution and so it's more common to look at them in a histogram you'll often see you know calls with like multiple",
    "start": "1260600",
    "end": "1265640"
  },
  {
    "text": "Peaks which can occur when you're doing say when you're having cash hits versus cash misses and the like and so you do",
    "start": "1265640",
    "end": "1271640"
  },
  {
    "text": "get variability on this and the issue is you then get sort of",
    "start": "1271640",
    "end": "1276860"
  },
  {
    "text": "you know it could be as quick as two 20 milliseconds in this case or as slow as",
    "start": "1276860",
    "end": "1282679"
  },
  {
    "text": "70 milliseconds we've got a range of how long any given operation might take now if we're making multiple calls",
    "start": "1282679",
    "end": "1289640"
  },
  {
    "text": "sequentially we end up with a much much larger range",
    "start": "1289640",
    "end": "1294919"
  },
  {
    "text": "of potential durations for this operation that we might otherwise expect and this is a problem",
    "start": "1294919",
    "end": "1301580"
  },
  {
    "text": "the more variability you have around operations latency the harder it becomes",
    "start": "1301580",
    "end": "1307100"
  },
  {
    "text": "to understand what the system is doing and whether or not it's healthy if an operation could could successfully",
    "start": "1307100",
    "end": "1313340"
  },
  {
    "text": "complete and take anywhere from say 200 milliseconds to a second it becomes quite difficult for you to",
    "start": "1313340",
    "end": "1320299"
  },
  {
    "text": "spot when you've got issues occurring because sometimes it might complete a second and other times that might speak",
    "start": "1320299",
    "end": "1326600"
  },
  {
    "text": "to a catastrophic issue you should have picked up earlier so in general with distributed systems we're aiming for",
    "start": "1326600",
    "end": "1332179"
  },
  {
    "text": "consistent and more consistent Behavior now obviously from a latency point of",
    "start": "1332179",
    "end": "1338480"
  },
  {
    "text": "view an improvement here would be to do these two calls in parallel",
    "start": "1338480",
    "end": "1343820"
  },
  {
    "text": "so that rather than doing one call and then the second call instead just to run them both at once",
    "start": "1343820",
    "end": "1350960"
  },
  {
    "text": "and initiate both calls at the same time and therefore the overall latency of",
    "start": "1350960",
    "end": "1356900"
  },
  {
    "text": "that at least this part of our processing should be bound by the slowest service rather than the sum of",
    "start": "1356900",
    "end": "1362240"
  },
  {
    "text": "the latencies so in this example what I've done is I've just wrapped these calls",
    "start": "1362240",
    "end": "1367640"
  },
  {
    "text": "effectively in the future so for those who don't know a future is a read-only type for basically a pending operation",
    "start": "1367640",
    "end": "1373100"
  },
  {
    "text": "it's sometimes you have direct access to a future construct you know a reactive extension library and I quite like the",
    "start": "1373100",
    "end": "1379460"
  },
  {
    "text": "concept of the future so basically when we create that future here that's the first line of code here",
    "start": "1379460",
    "end": "1385220"
  },
  {
    "text": "we're not actually the request has been kicked off in a background thread of execution and all of that work is",
    "start": "1385220",
    "end": "1390500"
  },
  {
    "text": "handled for us by wherever reactive extension we're using so that first line of code we're not",
    "start": "1390500",
    "end": "1397039"
  },
  {
    "text": "blocking waiting it's going to immediately return with a pointer to that pending operation",
    "start": "1397039",
    "end": "1403100"
  },
  {
    "text": "so now the calls to loyalty and subscription are being done much more in parallel",
    "start": "1403100",
    "end": "1408260"
  },
  {
    "text": "these calls are no longer blocking seems good right this is an improvement",
    "start": "1408260",
    "end": "1414320"
  },
  {
    "text": "and you know all of you will have libraries which will make it fairly trivial to do something like this around",
    "start": "1414320",
    "end": "1420799"
  },
  {
    "text": "synchronous calls if you've currently got synchronous blocking calls doing things like this to make them",
    "start": "1420799",
    "end": "1426260"
  },
  {
    "text": "non-blocking isn't that difficult at all without you don't have to change a communication protocol at all",
    "start": "1426260",
    "end": "1433520"
  },
  {
    "text": "the issue of course is when we say oh we're not blocking we're not blocking it's not blocking it's not blocking but but um",
    "start": "1433520",
    "end": "1439760"
  },
  {
    "text": "we uh we kind of do need the answers so how do we get the answers in a",
    "start": "1439760",
    "end": "1444799"
  },
  {
    "text": "situation like this so we've constructed that future and at this point here we don't know",
    "start": "1444799",
    "end": "1451100"
  },
  {
    "text": "whether or not those calls are completed in those background threads of execution we certainly don't have the results of",
    "start": "1451100",
    "end": "1457340"
  },
  {
    "text": "this operation we may need the results we may need to know that these things worked or didn't work or we might see some of the return information to do",
    "start": "1457340",
    "end": "1463880"
  },
  {
    "text": "something else or to return some information to the user or whatever else that might be so how do we get the",
    "start": "1463880",
    "end": "1469520"
  },
  {
    "text": "information what would I need to do I block yeah we block so I do something",
    "start": "1469520",
    "end": "1477140"
  },
  {
    "text": "like an await I love it when people say oh yeah I've made my I've made my interactions",
    "start": "1477140",
    "end": "1482360"
  },
  {
    "text": "asynchronous by using an async await yeah the await bit means you're blocking",
    "start": "1482360",
    "end": "1488780"
  },
  {
    "text": "it might be happening in a thread but you're blocking so this is",
    "start": "1488780",
    "end": "1494000"
  },
  {
    "text": "you know oh it's non-blocking but blocking but it's also non-blocking but it's also",
    "start": "1494000",
    "end": "1499220"
  },
  {
    "text": "blocking though isn't it but it's also non-block but it's also blocking so this is a more specific term but again has",
    "start": "1499220",
    "end": "1505700"
  },
  {
    "text": "confusion now this isn't to mean that doing things like this is a waste of time absolutely not being able to do",
    "start": "1505700",
    "end": "1512179"
  },
  {
    "text": "calls like this in parallel can have a significant improvements to systems there's another bonus of doing things like this",
    "start": "1512179",
    "end": "1518299"
  },
  {
    "text": "so some of you hands up who's heard of Moore's Law of course you're all going to put your",
    "start": "1518299",
    "end": "1524000"
  },
  {
    "text": "hands up now traditionally when I first started in Computing uh I'll I'll kind of the the outcome of",
    "start": "1524000",
    "end": "1529279"
  },
  {
    "text": "Moore's Law which states a transistor identity will double every 18 months the outcome we saw of that was just ever",
    "start": "1529279",
    "end": "1535940"
  },
  {
    "text": "increasing clock speeds so we could write a program and that program would just magically get faster without us",
    "start": "1535940",
    "end": "1541700"
  },
  {
    "text": "having to do any work year on year as chips got faster some time ago chip manufacturers really found it more",
    "start": "1541700",
    "end": "1548360"
  },
  {
    "text": "difficult to just increase clock speeds and so instead that increasing",
    "start": "1548360",
    "end": "1553460"
  },
  {
    "text": "transistor density manifested itself in terms of us having more and more cores",
    "start": "1553460",
    "end": "1558559"
  },
  {
    "text": "the problem was our programs weren't necessarily built to take advantage of those chords when we do things like this",
    "start": "1558559",
    "end": "1566240"
  },
  {
    "text": "the LIE depending on the run times we're using when we create those effectively background threads of execution to run",
    "start": "1566240",
    "end": "1572480"
  },
  {
    "text": "those non-blocking calls behind the scenes we give our run time and the operating system the opportunity to make",
    "start": "1572480",
    "end": "1579440"
  },
  {
    "text": "use of those additional cores so sometimes this will actually Grant you better throughput by making better",
    "start": "1579440",
    "end": "1584779"
  },
  {
    "text": "use of the underlying Hardware so there's still good reasons to do it but recognize that",
    "start": "1584779",
    "end": "1590840"
  },
  {
    "text": "yeah you still might need out blocking even non-blocking calls may end up",
    "start": "1590840",
    "end": "1596179"
  },
  {
    "text": "blocking this is a good thing right I still don't think there's anything wrong with this",
    "start": "1596179",
    "end": "1602900"
  },
  {
    "text": "but we're still you know some people would say okay you're doing non-blocking calls but you're still just sending say a HTTP request response flow and I don't",
    "start": "1602900",
    "end": "1608960"
  },
  {
    "text": "think that's in I don't think that's asynchronous at all so let's go back to our Twitter thread to see what's happening in our Twitter thread so",
    "start": "1608960",
    "end": "1614120"
  },
  {
    "text": "here's the next one this is from uh Graham Lee uh who used to be at Cairo in Australia",
    "start": "1614120",
    "end": "1619640"
  },
  {
    "text": "and uh Graham starts off by saying the definition I've been using is the sending service doesn't wait for",
    "start": "1619640",
    "end": "1625880"
  },
  {
    "text": "completion of the receiving service before continuing and or completing its own",
    "start": "1625880",
    "end": "1631159"
  },
  {
    "text": "work so there's part of this is about non-blocking that first part the second thing he says though which is",
    "start": "1631159",
    "end": "1637640"
  },
  {
    "text": "where we're getting into another definition of what asynchronous means to some people we see together says but but",
    "start": "1637640",
    "end": "1643580"
  },
  {
    "text": "now I think about it I think I also expect a temporal decoupling from the",
    "start": "1643580",
    "end": "1649700"
  },
  {
    "text": "receiving Services availability now at this point I'll pause and say there's a lot of competing definitions of what",
    "start": "1649700",
    "end": "1655159"
  },
  {
    "text": "temporal coupling decoupling means as well but we can't get into that one because I've only got so much time but",
    "start": "1655159",
    "end": "1660320"
  },
  {
    "text": "we'll talk at least about what Graham means in this context in a moment another variation on this comes from",
    "start": "1660320",
    "end": "1665539"
  },
  {
    "text": "Benjamin who says synchronous communication there's a direct communication between sender and receiver async communication there's an",
    "start": "1665539",
    "end": "1672919"
  },
  {
    "text": "intermediary involved between the sender and receiver",
    "start": "1672919",
    "end": "1678740"
  },
  {
    "text": "and both Graham and Benjamin are basically touching on this idea of decoupling",
    "start": "1678740",
    "end": "1685460"
  },
  {
    "text": "of the client you know the temporally decoupling the client and server using",
    "start": "1685460",
    "end": "1690980"
  },
  {
    "text": "some kind of intermediary and typically by this we would often mean a message broker not exclusively but this is what",
    "start": "1690980",
    "end": "1696980"
  },
  {
    "text": "often we often have so the way to think about message Brokers is as often called middleware",
    "start": "1696980",
    "end": "1702500"
  },
  {
    "text": "rather than talking directly to the place you want to send a message to instead you deliver that message to the",
    "start": "1702500",
    "end": "1708919"
  },
  {
    "text": "broker and the broker takes it from there so service a wants to send something to service B it actually says",
    "start": "1708919",
    "end": "1714500"
  },
  {
    "text": "puts it gives it to the broker says here's the message can you make sure that b gets this when B is available so if B is currently",
    "start": "1714500",
    "end": "1720860"
  },
  {
    "text": "unreachable the broker holds on to that message once B is available that message gets",
    "start": "1720860",
    "end": "1728059"
  },
  {
    "text": "delivered it's a lovely beautiful idea so this is what Graham thinks of when he",
    "start": "1728059",
    "end": "1734720"
  },
  {
    "text": "thinks facing is communication it's temporal decoupling some kind of intermediary like a message broker and",
    "start": "1734720",
    "end": "1741020"
  },
  {
    "text": "effectively what we're doing here is we're offloading this property of guaranteed delivery",
    "start": "1741020",
    "end": "1746299"
  },
  {
    "text": "we're going to the broker and if once the broker gives us acknowledgment we are trusting the broker to ensure",
    "start": "1746299",
    "end": "1752059"
  },
  {
    "text": "that message is delivered now there's lots of different guarantees that you'll get from Brokers you need to",
    "start": "1752059",
    "end": "1758299"
  },
  {
    "text": "look at your own documentation to find out what your broker means by guaranteed delivery but again we only have so much time",
    "start": "1758299",
    "end": "1765460"
  },
  {
    "text": "another comment async communication is like dropping snail mail in a red post",
    "start": "1765740",
    "end": "1771380"
  },
  {
    "text": "box and then going on with your life then one day boom Postman Pat does",
    "start": "1771380",
    "end": "1776600"
  },
  {
    "text": "something into your house mailbox along with millions of coupons and charity mailers",
    "start": "1776600",
    "end": "1782299"
  },
  {
    "text": "so I know a lot of people here are not from the United Kingdom and some of you are also young so you might have a different version of who you think",
    "start": "1782299",
    "end": "1788299"
  },
  {
    "text": "Postman Pat is but this is the OG Postman Pat not that idiot with the hovercraft right this is proper stop-mation OG Postman Pat and this was",
    "start": "1788299",
    "end": "1797059"
  },
  {
    "text": "fantastic show gritty realistic show about a postman struggling with his life",
    "start": "1797059",
    "end": "1802880"
  },
  {
    "text": "as a single parent of a cat delivering packages he might have been married I don't remember right this idea of the",
    "start": "1802880",
    "end": "1809779"
  },
  {
    "text": "broker the intermediate like an inbox is kind of useful right so I'm out someone",
    "start": "1809779",
    "end": "1815419"
  },
  {
    "text": "comes and delivers posts through the front door it's in my letterbox when I get home in the US obviously they have post boxes on",
    "start": "1815419",
    "end": "1822080"
  },
  {
    "text": "the edge of the property because if you go onto the property you'll get shot so here we that's why but anyway you get",
    "start": "1822080",
    "end": "1827960"
  },
  {
    "text": "the idea though I'm not at home right now and I know things have been delivered for me I don't have to be there to receive the package and that's",
    "start": "1827960",
    "end": "1834140"
  },
  {
    "text": "great and in a distributed system where one of the fundamental truths is sometimes the thing you want to talk to",
    "start": "1834140",
    "end": "1839600"
  },
  {
    "text": "is not available having something which can act as an inbox is incredibly useful",
    "start": "1839600",
    "end": "1845899"
  },
  {
    "text": "especially if that inbox has good durability and there's actually a bunch of different variations on this you don't",
    "start": "1845899",
    "end": "1852320"
  },
  {
    "text": "have to use a message broker you can actually use databases for this although you probably shouldn't for communication",
    "start": "1852320",
    "end": "1858980"
  },
  {
    "text": "between Services file systems are incredibly common as well for doing this I create a file I drop it in a location",
    "start": "1858980",
    "end": "1866059"
  },
  {
    "text": "and another service picks that file up you're using the file system there as a durable intermediary",
    "start": "1866059",
    "end": "1872240"
  },
  {
    "text": "we don't have any smarts around being told when the new file arrives except for our ability to pull the file system",
    "start": "1872240",
    "end": "1877340"
  },
  {
    "text": "but again that's something built into all the common libraries of languages I've ever used well in the last five years at least",
    "start": "1877340",
    "end": "1883640"
  },
  {
    "text": "we can even do this with email this also should be filed in the just because you can communicate between",
    "start": "1883640",
    "end": "1889340"
  },
  {
    "text": "services using email doesn't mean you should email as a reliable message broker has a",
    "start": "1889340",
    "end": "1896000"
  },
  {
    "text": "lot to be desired the key thing here is I don't need to worry about whether",
    "start": "1896000",
    "end": "1902240"
  },
  {
    "text": "or not the recipient is currently available it's a nice property but we do need to trust",
    "start": "1902240",
    "end": "1908059"
  },
  {
    "text": "that the intermediary is good isn't going to fall over we have to put our",
    "start": "1908059",
    "end": "1913760"
  },
  {
    "text": "faith in that which means not just the people who wrote that broker using a message broker but also the people that",
    "start": "1913760",
    "end": "1919279"
  },
  {
    "text": "run it this is why I always try to use a managed service because people who want to manager services are always smarter",
    "start": "1919279",
    "end": "1924919"
  },
  {
    "text": "than me but again your mileage may vary now I mentioned at the beginning that we",
    "start": "1924919",
    "end": "1931159"
  },
  {
    "text": "traditionally see request response-based Communications through the synchronous light but I mentioned that you could",
    "start": "1931159",
    "end": "1936320"
  },
  {
    "text": "absolutely make request response asynchronous and we sometimes we've seen one version of asynchronous request",
    "start": "1936320",
    "end": "1942860"
  },
  {
    "text": "response-based communication just by making it non-blocking whatever that means here's another",
    "start": "1942860",
    "end": "1948020"
  },
  {
    "text": "variation on asynchronous request response when we think about using a broker so service a is going to send a message",
    "start": "1948020",
    "end": "1955100"
  },
  {
    "text": "a request here to service B we're going to ask service B to do something and so I put it into a queue",
    "start": "1955100",
    "end": "1961399"
  },
  {
    "text": "for like four microservice b b consumes the message",
    "start": "1961399",
    "end": "1968240"
  },
  {
    "text": "in this case the request from that queue I do some work and I remember B is going to pick that",
    "start": "1968240",
    "end": "1973940"
  },
  {
    "text": "up when it's ready and when that work completes it's going to put its response back on",
    "start": "1973940",
    "end": "1979159"
  },
  {
    "text": "another queue and back the response comes there we go isn't that nice this is",
    "start": "1979159",
    "end": "1985100"
  },
  {
    "text": "asynchronous oh this is asynchronous request response",
    "start": "1985100",
    "end": "1990559"
  },
  {
    "text": "via broker who knew kind of powerful works really",
    "start": "1990559",
    "end": "1995600"
  },
  {
    "text": "well the challenge of course well this one what this does though is it does expose",
    "start": "1995600",
    "end": "2002140"
  },
  {
    "text": "another interesting problem the way most brokers work",
    "start": "2002140",
    "end": "2008620"
  },
  {
    "text": "it's not possible necessarily to guarantee that the response is going",
    "start": "2008620",
    "end": "2015519"
  },
  {
    "text": "to come back to the same instance of a microservice that sent it so far I've mostly been showing a you",
    "start": "2015519",
    "end": "2021220"
  },
  {
    "text": "know a very logical view of a microservice but in reality when we deploy a microservice we have multiple",
    "start": "2021220",
    "end": "2026860"
  },
  {
    "text": "instances typically for Baseline durability right you don't get an SLA for machines on the cloud Ergo you want",
    "start": "2026860",
    "end": "2033039"
  },
  {
    "text": "to have multiple copies of your microservice instances to tolerate those notes dying so I might have multiple",
    "start": "2033039",
    "end": "2038679"
  },
  {
    "text": "instances of service a and in fact service B so when I send that first",
    "start": "2038679",
    "end": "2043720"
  },
  {
    "text": "request to that queue and B picks it up at some point B does its processing and",
    "start": "2043720",
    "end": "2049419"
  },
  {
    "text": "it sends back the response that response goes back on the response queue that response could go back to a",
    "start": "2049419",
    "end": "2055599"
  },
  {
    "text": "different instance of that microservice so we have to code a in such a way that",
    "start": "2055599",
    "end": "2063460"
  },
  {
    "text": "it can handle that return value coming in and be able to effectively if there is sort of a causal train pick up",
    "start": "2063460",
    "end": "2069638"
  },
  {
    "text": "processing again effectively this encourages us to make these things much more stateless",
    "start": "2069639",
    "end": "2077858"
  },
  {
    "text": "now if you build a system where you say no no the original instance that since that request has to get the response",
    "start": "2077859",
    "end": "2083800"
  },
  {
    "text": "back the next question to ask about is why well often the reason why is because you're holding on to state in memory",
    "start": "2083800",
    "end": "2090460"
  },
  {
    "text": "I've sent that request over a broker and I need the response to come back here because I need to kick carry on that",
    "start": "2090460",
    "end": "2096460"
  },
  {
    "text": "processing and I'm holding state in memory so now I've got the complexity of somehow trying to effectively do session",
    "start": "2096460",
    "end": "2104080"
  },
  {
    "text": "based message routing which is an added complexity and then I ask the question what happens when that machine dies",
    "start": "2104080",
    "end": "2110859"
  },
  {
    "text": "oh that's okay you say because I've used some kind of system for replicating in",
    "start": "2110859",
    "end": "2116800"
  },
  {
    "text": "memory State and I'm like what are you doing this is not the way the world works just stop it just make your system work like",
    "start": "2116800",
    "end": "2124000"
  },
  {
    "text": "this and everybody's happier it'll be more robust and more scalable and your right code which is much more stateless",
    "start": "2124000",
    "end": "2129880"
  },
  {
    "text": "and the world's happy unfortunately the vendors are crying at this point because there are lots of vendors that sell complicated software for doing in-memory",
    "start": "2129880",
    "end": "2137140"
  },
  {
    "text": "replication of state now to be fair there are some problem program programming problems where maintaining",
    "start": "2137140",
    "end": "2143440"
  },
  {
    "text": "in-memory State across multiple requests is required um sort of in-memory processing grids",
    "start": "2143440",
    "end": "2149940"
  },
  {
    "text": "online Shooters and other games online because the latencies involved",
    "start": "2149940",
    "end": "2155020"
  },
  {
    "text": "absolutely they represent probably less than five percent of the world's Computing problems you're likely not in",
    "start": "2155020",
    "end": "2160180"
  },
  {
    "text": "that five percent if you are you know it okay so keep your stuff stateless",
    "start": "2160180",
    "end": "2166440"
  },
  {
    "text": "we don't have that here coming back to our previous example when I'm making those calls",
    "start": "2166599",
    "end": "2174520"
  },
  {
    "text": "I want you to do something I want you to do something and I'm waiting for you both to come back",
    "start": "2174520",
    "end": "2179859"
  },
  {
    "text": "so both the responses here could come back but they're going to have to come back to the same instance that's kind of",
    "start": "2179859",
    "end": "2185320"
  },
  {
    "text": "implicitly what's happening here I've opened the connection from my process to your process it's coming back here",
    "start": "2185320",
    "end": "2192520"
  },
  {
    "text": "so we know the responses are coming back to the same instance so then we should ask the question like well what happens when the consumer",
    "start": "2192520",
    "end": "2199420"
  },
  {
    "text": "either process running this code dies halfway through well we're going to lose those responses they've gone bye hopefully they weren't",
    "start": "2199420",
    "end": "2206440"
  },
  {
    "text": "important and hopefully we can retry this operation so just something to be aware of what",
    "start": "2206440",
    "end": "2212800"
  },
  {
    "text": "happens we often think about what happens when a when the service we're talking to dies but what happens when",
    "start": "2212800",
    "end": "2218619"
  },
  {
    "text": "the client sending that request dies halfway through do we know how we're going to recover from that situation",
    "start": "2218619",
    "end": "2224380"
  },
  {
    "text": "I would also say this style of programming can often lead you to making more stateful type processing happening",
    "start": "2224380",
    "end": "2230500"
  },
  {
    "text": "in your client code which again has the problems I outlined before but I think it's arguable",
    "start": "2230500",
    "end": "2235960"
  },
  {
    "text": "that having an intermediary like a broker forces you to think about some of",
    "start": "2235960",
    "end": "2241420"
  },
  {
    "text": "these issues and in turn encourages more stateless processing so it could be a good thing although we've now got the",
    "start": "2241420",
    "end": "2247480"
  },
  {
    "text": "added complexity of a broker so we've got lots of different definitions we've seen of what",
    "start": "2247480",
    "end": "2252579"
  },
  {
    "text": "asynchronous mean to some people for some it's about immediacy the phone call",
    "start": "2252579",
    "end": "2257800"
  },
  {
    "text": "versus email for others is about temporal coupling whatever that means others view it in terms of non",
    "start": "2257800",
    "end": "2264040"
  },
  {
    "text": "non-blocking and others think oh no it's about a broker and I'm like what are we",
    "start": "2264040",
    "end": "2269740"
  },
  {
    "text": "what is it again which one and of course then the next question you're gonna ask is does it matter",
    "start": "2269740",
    "end": "2275859"
  },
  {
    "text": "right words have different meanings now I suspect some of you might know",
    "start": "2275859",
    "end": "2281740"
  },
  {
    "text": "this does anyone know the word in the English language with the most different meanings",
    "start": "2281740",
    "end": "2287680"
  },
  {
    "text": "put your hand up if you know what it is good set yes set",
    "start": "2287680",
    "end": "2294099"
  },
  {
    "text": "so in the 1987 edition of the Oxford English Dictionary which is the most recent edition of the full oxen English dictionary set has the most meanings",
    "start": "2294099",
    "end": "2301359"
  },
  {
    "text": "they think in the next Edition which is coming out believe it or not in 2037 I believe it's a big book it's actually",
    "start": "2301359",
    "end": "2307359"
  },
  {
    "text": "multiple volumes we think is now going to be run so set has only 430 meanings",
    "start": "2307359",
    "end": "2315160"
  },
  {
    "text": "only 430 meanings run they reckon at the moment has about 645 different meanings",
    "start": "2315160",
    "end": "2321940"
  },
  {
    "text": "now of course yes we're talking about the tenses of these words as well but you know there are we are used to using",
    "start": "2321940",
    "end": "2329680"
  },
  {
    "text": "languages that have lots of meanings and English is no different so like what's",
    "start": "2329680",
    "end": "2335560"
  },
  {
    "text": "the big deal we clearly deal with this so here's the thing right when we get",
    "start": "2335560",
    "end": "2341440"
  },
  {
    "text": "given a word we see a word the meaning of that word to us how we derive that meaning is about our own",
    "start": "2341440",
    "end": "2349260"
  },
  {
    "text": "understanding it's about our own context if I say the same word",
    "start": "2349260",
    "end": "2355420"
  },
  {
    "text": "to two different people they might think different things about it because of what just happened to them",
    "start": "2355420",
    "end": "2361660"
  },
  {
    "text": "if I said what does run mean to you and you've just been out for a jog you might immediately be thinking of or run means",
    "start": "2361660",
    "end": "2368140"
  },
  {
    "text": "running you bring some personal context into it one of the beauties of being at",
    "start": "2368140",
    "end": "2373900"
  },
  {
    "text": "conference is like this is getting to have chats with interesting people and on Tuesday I had a nice chat with Ian Cooper and many of us have a hinterland",
    "start": "2373900",
    "end": "2379839"
  },
  {
    "text": "Ian Cooper's Hinterland is vast and of course it turns out he studied semiotics at University semiotics is the study of",
    "start": "2379839",
    "end": "2386800"
  },
  {
    "text": "meaning believe it or not um which yeah it might be my next Jam I",
    "start": "2386800",
    "end": "2391839"
  },
  {
    "text": "think anyway and he and you're paraphrasing something you said to me and I was talking through these ideas he said",
    "start": "2391839",
    "end": "2397359"
  },
  {
    "text": "the meaning of a word becomes more narrow as we add other words around it if I give you a word in isolation and",
    "start": "2397359",
    "end": "2404560"
  },
  {
    "text": "give you no other words or explanation around it the only meaning you can derive is your own personal meaning but",
    "start": "2404560",
    "end": "2410740"
  },
  {
    "text": "there's still a wide variety of different meanings you might take from it as I add more words around that",
    "start": "2410740",
    "end": "2416619"
  },
  {
    "text": "initial word the definition the meaning becomes much more narrow",
    "start": "2416619",
    "end": "2422380"
  },
  {
    "text": "what's he talking about semiotics you know if you want to start dipping your toe into semiotics I can thoroughly",
    "start": "2422380",
    "end": "2427900"
  },
  {
    "text": "recommend watching Community the sitcom because you'll start getting a sense of how that works there",
    "start": "2427900",
    "end": "2433060"
  },
  {
    "text": "let's think of the word run so this run I want you all to think of what run means to you picture it in your",
    "start": "2433060",
    "end": "2439540"
  },
  {
    "text": "head what does run mean to you okay I don't need to use that out loud now I'm going to put some words around",
    "start": "2439540",
    "end": "2445720"
  },
  {
    "text": "it and let's see if my meaning of the word run matches your word of the meaning run the issue got worse the moment the",
    "start": "2445720",
    "end": "2452500"
  },
  {
    "text": "program was run okay so I put some words around it and for",
    "start": "2452500",
    "end": "2458079"
  },
  {
    "text": "many of you the term run now means something a bit different to what you're originally thinking in your head let's try that again",
    "start": "2458079",
    "end": "2464760"
  },
  {
    "text": "the economy crashed due to a run on the banks a different definition a different",
    "start": "2465099",
    "end": "2470980"
  },
  {
    "text": "meaning rather of the word run the issue is when we're having conversations about technology and",
    "start": "2470980",
    "end": "2477700"
  },
  {
    "text": "what's the right way to do things we throw away round terms like asynchronous without anywhere near enough context to",
    "start": "2477700",
    "end": "2485380"
  },
  {
    "text": "allow people to derive a shared meaning why is a shared meaning important",
    "start": "2485380",
    "end": "2493859"
  },
  {
    "text": "well because fundamentally software is a socio-technical system this being a talk about meanings let's",
    "start": "2494320",
    "end": "2501099"
  },
  {
    "text": "derive let's talk about what socio-technical means it sounds like a very expensive management consultancy term doesn't it and indeed if you hire",
    "start": "2501099",
    "end": "2508420"
  },
  {
    "text": "my services it can be but let's talk about what socio-technical means socio-technical",
    "start": "2508420",
    "end": "2514540"
  },
  {
    "text": "socio people humans human beings Being Human people and Technical we mean",
    "start": "2514540",
    "end": "2521260"
  },
  {
    "text": "technology in the kind of the more broad sense of this term being sort of complex knowledge and now you're starting to say oh hang",
    "start": "2521260",
    "end": "2527320"
  },
  {
    "text": "on Sam you're going to say that somehow like people are involved in writing software like some kind of left-wing",
    "start": "2527320",
    "end": "2533140"
  },
  {
    "text": "Guardian reading beardy Lefty liberal snowflake wanker and it's like well",
    "start": "2533140",
    "end": "2538960"
  },
  {
    "text": "actually you know the term socio-technical actually comes from a study into the efficiency of coal mining",
    "start": "2538960",
    "end": "2544480"
  },
  {
    "text": "in World War II so no this doesn't necessarily come from a bunch oh there's probably as a bit of a healthy overlap",
    "start": "2544480",
    "end": "2549820"
  },
  {
    "text": "between people studying coal mining and guardian readers but anyway you know the term it's been around for a while this",
    "start": "2549820",
    "end": "2555040"
  },
  {
    "text": "term and we've now been maybe in the last 10 years or so been looking at this concept in the context of software",
    "start": "2555040",
    "end": "2560500"
  },
  {
    "text": "because we have to reflect and be honest with ourselves that the amount of useful",
    "start": "2560500",
    "end": "2566619"
  },
  {
    "text": "software that's created by individuals is vanishingly rare to the point what I'd say is it doesn't",
    "start": "2566619",
    "end": "2573700"
  },
  {
    "text": "happen you can think of individuals who may have started an influential project",
    "start": "2573700",
    "end": "2579940"
  },
  {
    "text": "the Linux kernel was written by Linus no it wasn't I bet you he's not the he hasn't written",
    "start": "2579940",
    "end": "2585579"
  },
  {
    "text": "most of that code software is created by teams of people maybe not teams but lots of people",
    "start": "2585579",
    "end": "2593140"
  },
  {
    "text": "working together to create something we have to bring groups of people together and they have to be able to communicate",
    "start": "2593140",
    "end": "2600220"
  },
  {
    "text": "effectively to build useful things if you've got two people and you start",
    "start": "2600220",
    "end": "2606760"
  },
  {
    "text": "banding around terms like asynchronous but you have different Visions in your head about what these things mean and",
    "start": "2606760",
    "end": "2612400"
  },
  {
    "text": "you think that with these different definitions of a term like this you can come together and build a system",
    "start": "2612400",
    "end": "2617980"
  },
  {
    "text": "successfully things can go badly wrong",
    "start": "2617980",
    "end": "2624160"
  },
  {
    "text": "now we have some interesting stories that we can draw upon to see this problem firsthand",
    "start": "2624160",
    "end": "2631180"
  },
  {
    "text": "we have the story of the Tower of Babel from the Old Testament",
    "start": "2631180",
    "end": "2636460"
  },
  {
    "text": "and in the Tower of Babel there were one people with one language we never find out what the language is",
    "start": "2636460",
    "end": "2641740"
  },
  {
    "text": "but we can probably guess right and there's one people they're getting on really well they've all using the same language and they're building a beautiful city and they're building a",
    "start": "2641740",
    "end": "2647740"
  },
  {
    "text": "beautiful Tower and in the story like the Old Testament God apparently goes you know oh look they're doing really",
    "start": "2647740",
    "end": "2653619"
  },
  {
    "text": "well there's nothing they couldn't do let's mess with them and then he comes",
    "start": "2653619",
    "end": "2660099"
  },
  {
    "text": "down and he says you've all got different languages now and lo the Tara Babel doesn't end up",
    "start": "2660099",
    "end": "2665319"
  },
  {
    "text": "getting built now I always thought in the Old Testament there was some explanation for why the Old Testament",
    "start": "2665319",
    "end": "2671079"
  },
  {
    "text": "God did this but not really just seems that the Old Testament God no matter what your beliefs are the Old",
    "start": "2671079",
    "end": "2676540"
  },
  {
    "text": "Testament God a bit of a dick so we know like this is this is a thousands of years old story",
    "start": "2676540",
    "end": "2684220"
  },
  {
    "text": "that speaks about the importance of people speaking and being able to communicate clearly to deliver",
    "start": "2684220",
    "end": "2690099"
  },
  {
    "text": "interesting and powerful things",
    "start": "2690099",
    "end": "2695380"
  },
  {
    "text": "coming back to our context the term asynchronous in the context of inter-process",
    "start": "2695380",
    "end": "2700599"
  },
  {
    "text": "communication has so many meanings that it is effectively meaningless if you use",
    "start": "2700599",
    "end": "2706060"
  },
  {
    "text": "that word in isolation and you what you I tend to find is as I put more words around the word asynchronous I no longer need the word",
    "start": "2706060",
    "end": "2712720"
  },
  {
    "text": "asynchronous in the first place so what we do with this when you're thinking about the thing",
    "start": "2712720",
    "end": "2719079"
  },
  {
    "text": "you're trying to build understand what is it that my application needs talk about how it should handle",
    "start": "2719079",
    "end": "2725140"
  },
  {
    "text": "different situations talk about his desirable characteristics and get specific as possible about the general",
    "start": "2725140",
    "end": "2730960"
  },
  {
    "text": "ways you expect it to handle certain common situations what should happen when a server is",
    "start": "2730960",
    "end": "2736480"
  },
  {
    "text": "unreachable how are you going to handle that how fast do you want it to be putting his numbers around things is",
    "start": "2736480",
    "end": "2742359"
  },
  {
    "text": "always good I find what should you do if the client crashes and use and develop more explicit terms",
    "start": "2742359",
    "end": "2750220"
  },
  {
    "text": "even if it means locally coming up with your own internal terms",
    "start": "2750220",
    "end": "2755319"
  },
  {
    "text": "to Define things to make things more clear an old colleague of mine that price is a great talk about how event storming was",
    "start": "2755319",
    "end": "2761859"
  },
  {
    "text": "almost a disaster by the company where he worked and that's because partly because there are lots of different",
    "start": "2761859",
    "end": "2767500"
  },
  {
    "text": "people coming in different contexts and they all had a different meaning of what the word event meant for some event was",
    "start": "2767500",
    "end": "2772900"
  },
  {
    "text": "something an Event Source system for others event was about communication between things and it ended up being a giant mess and",
    "start": "2772900",
    "end": "2779800"
  },
  {
    "text": "so they ended up actually having to use terms like historic fact to distinguish between different usages of these things",
    "start": "2779800",
    "end": "2785800"
  },
  {
    "text": "so maybe you want to come up with your own internal terms which are more specific within your context",
    "start": "2785800",
    "end": "2792040"
  },
  {
    "text": "say things like clients should wear a possible be non-blocking you should try and run operations in parallel but we're",
    "start": "2792040",
    "end": "2797859"
  },
  {
    "text": "going to give you the visibility to see when things could run in parallel again go Talk to Honeycomb on floor five tell",
    "start": "2797859",
    "end": "2803859"
  },
  {
    "text": "them Sam sent you I get no Commission or we are going to use broker X as an",
    "start": "2803859",
    "end": "2809380"
  },
  {
    "text": "intermediary so that we can do XYZ be more specific but don't try and use this as a way to",
    "start": "2809380",
    "end": "2816579"
  },
  {
    "text": "gatekeep language or make it about a power play about correcting other people",
    "start": "2816579",
    "end": "2823540"
  },
  {
    "text": "so in The Princess Bride this is a bit of a I haven't quite used this as a way it",
    "start": "2823540",
    "end": "2828880"
  },
  {
    "text": "should be used in a way because obviously in the film which you should all watch because it's a brilliant film we have this situation where vinicus is",
    "start": "2828880",
    "end": "2834760"
  },
  {
    "text": "running around saying inconceivable a lot and the joke of course in the film is that we all kind of do know what",
    "start": "2834760",
    "end": "2841119"
  },
  {
    "text": "inconceivable means and vinicus is clearly not using it correctly right and so this is this is what the",
    "start": "2841119",
    "end": "2847900"
  },
  {
    "text": "conversation is about you keep using that word I do not think you it means what you",
    "start": "2847900",
    "end": "2853060"
  },
  {
    "text": "think it means and he's being polite here but in a way that's like yeah you are kind of wrong",
    "start": "2853060",
    "end": "2858819"
  },
  {
    "text": "don't if you're trying to have conversations with your colleagues about the terms and the words they use I mean I think in game on toys doing it fairly",
    "start": "2858819",
    "end": "2865960"
  },
  {
    "text": "well and it's something irresistible about Mandy isn't it but anyway you",
    "start": "2865960",
    "end": "2871960"
  },
  {
    "text": "you could afford to ask a variation on this so next time someone says",
    "start": "2871960",
    "end": "2877900"
  },
  {
    "text": "we should make you say synchronous maybe just ask what does that mean to you",
    "start": "2877900",
    "end": "2883359"
  },
  {
    "text": "and you might be surprised okay that's me we've got time for questions I have a book please buy my",
    "start": "2883359",
    "end": "2889119"
  },
  {
    "text": "book I have a child to support um and if you want more information about",
    "start": "2889119",
    "end": "2894819"
  },
  {
    "text": "the work I do so over my website I'll get the slides for this talk up on my website once I can get this website rebuilt and I'll send around a tweet I'm",
    "start": "2894819",
    "end": "2902500"
  },
  {
    "text": "also over I'm just Sam Newman at hacky Durham over on Macedon as well and I hope you enjoy the rest of the",
    "start": "2902500",
    "end": "2908859"
  },
  {
    "text": "conference if you aren't going to hang well as you leave please do vote but we do have time for some questions if",
    "start": "2908859",
    "end": "2914859"
  },
  {
    "text": "anyone has a question for me go ahead",
    "start": "2914859",
    "end": "2920200"
  },
  {
    "text": "one that tweets uh did anyone mention the definition of",
    "start": "2920200",
    "end": "2926319"
  },
  {
    "text": "asynchronous being out of order communion so the question was did anyone mention asynchronous implying out of",
    "start": "2926319",
    "end": "2933220"
  },
  {
    "text": "order communication I'll be honest with you that threat was 18 months ago I don't recall that being the answer of",
    "start": "2933220",
    "end": "2938859"
  },
  {
    "text": "being a thing I mean out of order communication is often something you",
    "start": "2938859",
    "end": "2944920"
  },
  {
    "text": "have to deal with face to face when working with intermediaries So within within Brokers now some message Brokers",
    "start": "2944920",
    "end": "2950980"
  },
  {
    "text": "will order things for you sort of what you might class as say traditional message Brokers like rabbit mq and",
    "start": "2950980",
    "end": "2956800"
  },
  {
    "text": "things you will get guaranteed ordering within the queue within CAF you only get that within",
    "start": "2956800",
    "end": "2962560"
  },
  {
    "text": "partitions so different intermediaries are able to give you ordering or not so",
    "start": "2962560",
    "end": "2967720"
  },
  {
    "text": "I think that's probably not um it's not something I would take away in the context of asynchronous however",
    "start": "2967720",
    "end": "2974079"
  },
  {
    "text": "it's something I would be worried about depending on what I'm using for communication because some communication will offer one if you read from two",
    "start": "2974079",
    "end": "2980560"
  },
  {
    "text": "Kafka partitions you're going to get stuff out of order that's just that's just life so it's more something you have to be",
    "start": "2980560",
    "end": "2985720"
  },
  {
    "text": "aware of around specific technology if that makes sense another question",
    "start": "2985720",
    "end": "2991480"
  },
  {
    "text": "any other questions for me now what's going to happen is you guys have no questions and then you're able to come running up and ask me questions",
    "start": "2991480",
    "end": "2997240"
  },
  {
    "text": "afterwards so go ahead",
    "start": "2997240",
    "end": "3001099"
  },
  {
    "text": "when you have this actress single threaded and then you they sort of they don't need to",
    "start": "3007500",
    "end": "3014940"
  },
  {
    "text": "deal business so the chap in the akka.net T-shirt suggested that we use actors",
    "start": "3014940",
    "end": "3021119"
  },
  {
    "text": "now I'm poking fun right right it's a lot of work I mean that because it is a you know academic that's a big",
    "start": "3021119",
    "end": "3026280"
  },
  {
    "text": "undertaking um I don't think that you now you've got to Define What actors are",
    "start": "3026280",
    "end": "3032280"
  },
  {
    "text": "so you haven't changed the problem my problem my question here wasn't about should we be synchronous or asynchrist my conversation was here about talking",
    "start": "3032280",
    "end": "3037920"
  },
  {
    "text": "about the properties you want and the actor model there's actor model inside a process boundary",
    "start": "3037920",
    "end": "3044040"
  },
  {
    "text": "and then as actor model across a process boundary and those are very very different things so I've seen people using the",
    "start": "3044040",
    "end": "3050339"
  },
  {
    "text": "actor-based model and they think about it just as passing I'm just basically calling methods and an object that's what it feels like when you get a nice",
    "start": "3050339",
    "end": "3055859"
  },
  {
    "text": "abstraction like akka gives you you don't really realize you're doing anything special right I'm just calling methods on",
    "start": "3055859",
    "end": "3062819"
  },
  {
    "text": "another object and then people start Distributing their active-based systems and they start making fine-grained calls",
    "start": "3062819",
    "end": "3069000"
  },
  {
    "text": "between those things and I know that's not the goal of those sort of systems I think that Souls problems that just says",
    "start": "3069000",
    "end": "3074339"
  },
  {
    "text": "pick my term rather than somebody else's term to be fair at least there is a bit more terminology around the concept of",
    "start": "3074339",
    "end": "3081420"
  },
  {
    "text": "What actors mean um but yeah go talk to chat about akka.net if you",
    "start": "3081420",
    "end": "3088200"
  },
  {
    "text": "want to know more about it what else we got we've got a question over there in the middle",
    "start": "3088200",
    "end": "3094039"
  },
  {
    "text": "well depends you know I wasn't sitting there waiting yeah",
    "start": "3101040",
    "end": "3106800"
  },
  {
    "text": "um yeah I mean that's the thing that would be a form of asynchronous I'm waiting around I'm not waiting around",
    "start": "3106800",
    "end": "3112380"
  },
  {
    "text": "for that person to operate however if I was writing an article or doing a presentation",
    "start": "3112380",
    "end": "3118380"
  },
  {
    "text": "that needed the answers I would have to wait so I got enough answer to write the presentation",
    "start": "3118380",
    "end": "3123480"
  },
  {
    "text": "and I put that tweet out 18 months ago and 18 months later here the talk is so maybe not for the individual tweets but",
    "start": "3123480",
    "end": "3129900"
  },
  {
    "text": "I kind of did have to at some point block and wait till I had enough information to do the talk",
    "start": "3129900",
    "end": "3136400"
  },
  {
    "text": "wow that's quite clever good question though I like the question that's an awesome one thank you",
    "start": "3136500",
    "end": "3143460"
  },
  {
    "text": "um what else we got who has got a question for me now I've got a question for you hands up",
    "start": "3143460",
    "end": "3149520"
  },
  {
    "text": "if you're doing asynchronous communication between your processes based on the conversation you just had so very certain are you sure of",
    "start": "3149520",
    "end": "3155819"
  },
  {
    "text": "yourselves aren't you later on go chat to someone else right well exactly there you go that's the right answer but",
    "start": "3155819",
    "end": "3161700"
  },
  {
    "text": "afterwards go maybe track someone else's Communications some people's hands up there and ask them what they do and you",
    "start": "3161700",
    "end": "3167040"
  },
  {
    "text": "know what you find might shock you as well um but yeah just be clearer",
    "start": "3167040",
    "end": "3173520"
  },
  {
    "text": "any other questions at all about any of these things I promise I won't poke fun go ahead",
    "start": "3173520",
    "end": "3179660"
  },
  {
    "text": "yes good question so how did you learn between precision and technobabble and it's sort of interesting because some of",
    "start": "3182760",
    "end": "3188339"
  },
  {
    "text": "the things you can when you do have terms in a complex domain like ours that can have different meanings sometimes",
    "start": "3188339",
    "end": "3194700"
  },
  {
    "text": "what we do is we bring a new word in to try and give it more specific meaning this though that unfortunately just",
    "start": "3194700",
    "end": "3200700"
  },
  {
    "text": "increases the vocabulary that you have for a particular domain so okay we're not going to use the term",
    "start": "3200700",
    "end": "3207420"
  },
  {
    "text": "eventually consistent we're now going to say eventually convergent I've now got to explain what convergence means",
    "start": "3207420",
    "end": "3212460"
  },
  {
    "text": "I honestly I don't know the answer to that I kind of it's also a bit unfair for me is because most of my job is often",
    "start": "3212460",
    "end": "3218819"
  },
  {
    "text": "helping to educate people about what these terms mean and I'm not sure the answer",
    "start": "3218819",
    "end": "3224280"
  },
  {
    "text": "um I think what it helps is to often try and get feedback from people that are",
    "start": "3224280",
    "end": "3230760"
  },
  {
    "text": "not as in the domain as you are yourself so you know when I write the book for",
    "start": "3230760",
    "end": "3236400"
  },
  {
    "text": "example I would purposely go out and get people that don't know microservices that well but do no computing",
    "start": "3236400",
    "end": "3242940"
  },
  {
    "text": "and they'd go what's this mean what's that mean what's this mean I think that's all you can do if you're a tech",
    "start": "3242940",
    "end": "3248040"
  },
  {
    "text": "if you're somebody inside an organization for example who is there to communicate on ideas or share about",
    "start": "3248040",
    "end": "3253680"
  },
  {
    "text": "ideas you're a technical leader for example I think it's important that you actually",
    "start": "3253680",
    "end": "3258780"
  },
  {
    "text": "go out and chat one-on-one with people and use these terms and get feedback on them and tune what you're saying and how",
    "start": "3258780",
    "end": "3264960"
  },
  {
    "text": "you're saying it a lot of the time I will go to presentations about topics that I",
    "start": "3264960",
    "end": "3270540"
  },
  {
    "text": "already know really really well and I nearly always come out of them with some other way to express ideas in a better",
    "start": "3270540",
    "end": "3277859"
  },
  {
    "text": "way than I could honestly a lot of it's just I think just practice and triangulation and triangulating with your audience thanks",
    "start": "3277859",
    "end": "3284520"
  },
  {
    "text": "knowing your audience as well so I've done like a couple lectures and things like on a master's program and",
    "start": "3284520",
    "end": "3289680"
  },
  {
    "text": "you go in and you have conversations there these are people that have never worked in Industry before so you have to try and collect your language however",
    "start": "3289680",
    "end": "3295440"
  },
  {
    "text": "they probably know more about consensus algorithms than I ever will I don't I can't break it to them that yes they",
    "start": "3295440",
    "end": "3300720"
  },
  {
    "text": "might be able to tell me how raft works but their day job is probably going to involve taking data out of a database",
    "start": "3300720",
    "end": "3307260"
  },
  {
    "text": "and putting it on a screen and maybe taking that data off a screen and putting it back in the database but you",
    "start": "3307260",
    "end": "3312720"
  },
  {
    "text": "triangulate your your meanings I think based on the audience all you can do I think that's all you can do all study",
    "start": "3312720",
    "end": "3317880"
  },
  {
    "text": "semiotics but I don't I don't have the time for that right now I'm going to that we'll I'll look it up on me I'll",
    "start": "3317880",
    "end": "3323339"
  },
  {
    "text": "look it up on Wikipedia that'll probably be enough it's tough but you're right it's absolutely it's tough go ahead question",
    "start": "3323339",
    "end": "3330920"
  },
  {
    "text": "yes so so around my terminology when I when I talk about um request response if I wanted to send",
    "start": "3340920",
    "end": "3347339"
  },
  {
    "text": "a request to multiple people I would just send it to multiple people with an event when I so if you think you're the",
    "start": "3347339",
    "end": "3353700"
  },
  {
    "text": "service and you you post something up on a notice board you don't necessarily know who's going to look at that it could be multiple",
    "start": "3353700",
    "end": "3359760"
  },
  {
    "text": "different people could come and look at it the terminology I tend to use as I talk about request and response for request interaction and the event in the",
    "start": "3359760",
    "end": "3367020"
  },
  {
    "text": "adventure of an interaction but yeah if that events fit really nicely in any situation where you've got kind of a",
    "start": "3367020",
    "end": "3373440"
  },
  {
    "text": "multicast you often don't want multicast requests because if you think about the",
    "start": "3373440",
    "end": "3378720"
  },
  {
    "text": "nature of apis I'm not going to go and make the same API call on 10 different microsources because those 10 different",
    "start": "3378720",
    "end": "3385020"
  },
  {
    "text": "microservices are doing different things um so that that's kind of how it's a",
    "start": "3385020",
    "end": "3390660"
  },
  {
    "text": "tradition typically most multi-car situations tend to be more event driven I hope that kind of makes sense though",
    "start": "3390660",
    "end": "3398160"
  },
  {
    "text": "any other questions question write that back",
    "start": "3398160",
    "end": "3401900"
  },
  {
    "text": "well yes and no because again they're using the term asynchronous in probably",
    "start": "3417180",
    "end": "3423059"
  },
  {
    "text": "an acceptable context the person who wrote those libraries was thinking about asynchronous in the context of a single",
    "start": "3423059",
    "end": "3428940"
  },
  {
    "text": "running process so we then take that term of asynchronous which is that narrow confines makes sense and then we use it",
    "start": "3428940",
    "end": "3436140"
  },
  {
    "text": "to wrap course on other service so we're almost overlapping those contexts so I don't I don't really know the answer to",
    "start": "3436140",
    "end": "3443220"
  },
  {
    "text": "that um it's weird because I did actually go back searching into all the prior art of where people use terms like asynchronous",
    "start": "3443220",
    "end": "3448800"
  },
  {
    "text": "and things I looked at tandem Bound for example tannenband only uses the term 11 times in the whole District of systems",
    "start": "3448800",
    "end": "3453900"
  },
  {
    "text": "books I think he looks at that term I went nope um but the reactive extension stuff I mean there might be a and actually what",
    "start": "3453900",
    "end": "3460020"
  },
  {
    "text": "Pat Helen does in his original article he said look the term consistency in acid",
    "start": "3460020",
    "end": "3465180"
  },
  {
    "text": "has that concept of an asset transaction has been around a lot longer than us talking about eventual consistency so",
    "start": "3465180",
    "end": "3471240"
  },
  {
    "text": "his proposal was we let that prior art word remain and we come up with a new term a new",
    "start": "3471240",
    "end": "3476760"
  },
  {
    "text": "word um so I I don't think I don't think we can blame the people who write the library",
    "start": "3476760",
    "end": "3482339"
  },
  {
    "text": "because they were writing it in one context and using it in another context but we can afford to make that less",
    "start": "3482339",
    "end": "3488880"
  },
  {
    "text": "confusing there's no reasons why you can't take a library like that and wrap your own",
    "start": "3488880",
    "end": "3495059"
  },
  {
    "text": "abstraction around it that for your context uses better clearer language so",
    "start": "3495059",
    "end": "3500640"
  },
  {
    "text": "that for your own developers you add meaning I think that's probably probably the best we can hope for but yeah we can",
    "start": "3500640",
    "end": "3507300"
  },
  {
    "text": "also blame people that did loads of hard work as well because that's always fun sorry reactive Manifesto authors",
    "start": "3507300",
    "end": "3514500"
  },
  {
    "text": "any other I thought time for one more question go ahead",
    "start": "3514500",
    "end": "3518720"
  },
  {
    "text": "yeah so the comment was so in the context of say a document or a presentation you can take the time to",
    "start": "3544140",
    "end": "3550380"
  },
  {
    "text": "build up sufficient context around these Concepts that they have better meaning how do we do that in code",
    "start": "3550380",
    "end": "3557160"
  },
  {
    "text": "um I mean some I mean a lot of it I mean part of this is a lot of what we use refactoring for is to try and rename",
    "start": "3557160",
    "end": "3565200"
  },
  {
    "text": "things to give them more meaning I don't I think there is this idea though that we can just jump into a code base and",
    "start": "3565200",
    "end": "3572339"
  },
  {
    "text": "that's going to be enough that's going to be sufficient and I don't think that's true so hypothetically let's",
    "start": "3572339",
    "end": "3577380"
  },
  {
    "text": "imagine you worked at some kind of I don't know newspaper right and you jump",
    "start": "3577380",
    "end": "3582420"
  },
  {
    "text": "into a code base based on that and you start to see words and you start to see terms being used in that context you",
    "start": "3582420",
    "end": "3589200"
  },
  {
    "text": "might get some understanding about what that means but you might actually also need to go and ask a reporter or an",
    "start": "3589200",
    "end": "3594299"
  },
  {
    "text": "editor what those terms mean as well I don't think we can as we can have a",
    "start": "3594299",
    "end": "3600180"
  },
  {
    "text": "piece of code perfectly communicate both a technical context and a domain context",
    "start": "3600180",
    "end": "3605640"
  },
  {
    "text": "where we assume that no other information is being given I think all we can assume is that miscommunity",
    "start": "3605640",
    "end": "3611460"
  },
  {
    "text": "misunderstandings will arise from that I think good code that's using say",
    "start": "3611460",
    "end": "3617040"
  },
  {
    "text": "ubiquitous language of your domain can actually make the communication",
    "start": "3617040",
    "end": "3622079"
  },
  {
    "text": "outside of that code much easier when I do read that documentation I do speak to that business stakeholder they",
    "start": "3622079",
    "end": "3629040"
  },
  {
    "text": "use the same words that are in my code I think that's that makes the whole thing work together but again I don't think you can look at the code just in",
    "start": "3629040",
    "end": "3634920"
  },
  {
    "text": "isolation it wants to reinforce that context not contradict it when it",
    "start": "3634920",
    "end": "3640260"
  },
  {
    "text": "contradicts it that's when things get really bad that's been taking some business people don't talk to each other",
    "start": "3640260",
    "end": "3646740"
  },
  {
    "text": "all right I think we're probably going to call it on time I'm happy to hang out and ask more questions but I know some of you need to go get coffee and",
    "start": "3646740",
    "end": "3652020"
  },
  {
    "text": "everything else and I think we've got a fairly tight turnaround for the next session so I'm gonna start packing up you've gotta I've got to do a very quick",
    "start": "3652020",
    "end": "3658079"
  },
  {
    "text": "thing for my my very talented colleague over here um so I probably got time for you might have to hang around while I do",
    "start": "3658079",
    "end": "3664020"
  },
  {
    "text": "a quick video but then I'm happy to ask and answer questions but thank you so much for your time [Applause]",
    "start": "3664020",
    "end": "3670830"
  }
]