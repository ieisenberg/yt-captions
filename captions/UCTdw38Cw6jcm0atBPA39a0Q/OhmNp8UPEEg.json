[
  {
    "text": "all right oh and II see just couple more people coming in yeah isn't it awesome",
    "start": "2150",
    "end": "9330"
  },
  {
    "text": "that the lighting matches the slide because it would have been really really unfortunate if the lighting was all",
    "start": "9330",
    "end": "14549"
  },
  {
    "text": "green and we're starting with that one you having an awesome day yep um I'm",
    "start": "14549",
    "end": "21359"
  },
  {
    "text": "Nick I'm sure I met some of you through my earlier work on auto-attack maybe all",
    "start": "21359",
    "end": "26550"
  },
  {
    "text": "through the summer BCL currently I work on a product called seek but this",
    "start": "26550",
    "end": "31710"
  },
  {
    "text": "session is about an open source project that I started and now run called Sarah",
    "start": "31710",
    "end": "37530"
  },
  {
    "text": "log as a 16 minute session so we should have heaps of time at the end for some questions if some if you've got any and",
    "start": "37530",
    "end": "44370"
  },
  {
    "text": "if not we run over I'll stick around and make sure that I have a chance to talk to you so don't don't worry too much if",
    "start": "44370",
    "end": "50130"
  },
  {
    "text": "you think you miss any of those so anyway I come all out from from Brisbane",
    "start": "50130",
    "end": "57990"
  },
  {
    "text": "on the east coast of Australia so it's a little city like Oslo probably like I",
    "start": "57990",
    "end": "63180"
  },
  {
    "text": "was below we've got rather big software seen especially dotnet seen for our size",
    "start": "63180",
    "end": "68780"
  },
  {
    "text": "unlike Oslo we have beautiful sunny weather it's about year-round it's great that",
    "start": "68780",
    "end": "74280"
  },
  {
    "text": "the wildlife loves it that dad's is so",
    "start": "74280",
    "end": "79410"
  },
  {
    "text": "this story starts some years ago when I just come back from overseas and I was",
    "start": "79410",
    "end": "85050"
  },
  {
    "text": "working on a system for a financial institution and I think it was really the kind of system that financial",
    "start": "85050",
    "end": "91590"
  },
  {
    "text": "institutions the world over right someone was taking taking payments from",
    "start": "91590",
    "end": "97170"
  },
  {
    "text": "customers through a portal on the Internet I just finished a really long arduous",
    "start": "97170",
    "end": "102600"
  },
  {
    "text": "unpleasant session of debugging trawling through log files and that wasn't the",
    "start": "102600",
    "end": "109340"
  },
  {
    "text": "kickoff for this but I realized while I was while I was doing this just how much interesting data we keep in application",
    "start": "109340",
    "end": "115170"
  },
  {
    "text": "logs I was a consultant and so I saw the opportunity to really pull some of that",
    "start": "115170",
    "end": "121409"
  },
  {
    "text": "out and with upper whip up a report for my client I thought I'd impress them so they're doing a bit of insight into",
    "start": "121409",
    "end": "126960"
  },
  {
    "text": "their system I spent five minutes thinking about how I might do it kind of",
    "start": "126960",
    "end": "132270"
  },
  {
    "text": "put the pieces together in my head of how advice and regex and all the rest this kind of ugly gunk and I had to",
    "start": "132270",
    "end": "139050"
  },
  {
    "text": "shelve it because I realized there's just no way I could justify taking that amount of time out of the project they",
    "start": "139050",
    "end": "144150"
  },
  {
    "text": "were working on to them to do anything with this data that we were collecting and that was really disappointing and so",
    "start": "144150",
    "end": "151170"
  },
  {
    "text": "it sort of stuck with me that there was this missed opportunity and so now we",
    "start": "151170",
    "end": "159510"
  },
  {
    "text": "are down the track the the product of that sort of process was Sarah log which",
    "start": "159510",
    "end": "164670"
  },
  {
    "text": "is an open source projects I mentioned it's a few years old now that's gone",
    "start": "164670",
    "end": "169770"
  },
  {
    "text": "beyond being a kind of a pet project the core contribution sort of team is quite",
    "start": "169770",
    "end": "176610"
  },
  {
    "text": "dedicated we've got 80 contributors listed on our main repo but if you look",
    "start": "176610",
    "end": "182010"
  },
  {
    "text": "at all of the 209 repositories in this area of organization I think we've got oh sorry all the 59 repositories in the",
    "start": "182010",
    "end": "188640"
  },
  {
    "text": "cellular organization we've got about 209 contributors now in the new get",
    "start": "188640",
    "end": "195990"
  },
  {
    "text": "scheme of things I don't know if it's huge but we have about two and a half million package downloads it's kind of",
    "start": "195990",
    "end": "201660"
  },
  {
    "text": "interesting just from the perspective of it being a new logging library that's come into an already pretty established",
    "start": "201660",
    "end": "207330"
  },
  {
    "text": "space like other ways you log4net for application diagnostics and there lots",
    "start": "207330",
    "end": "213480"
  },
  {
    "text": "of people have n log as well those really established libraries and so it's",
    "start": "213480",
    "end": "219480"
  },
  {
    "text": "quite hard to believe that I know there could be interest in activity around building a whole new logging framework",
    "start": "219480",
    "end": "225900"
  },
  {
    "text": "now that Nets out more than 10 years old but we do have there is a lot going on",
    "start": "225900",
    "end": "233550"
  },
  {
    "text": "with Sarah log I really want to try to get to the core of that today in this talk so I'm not going to spend a whole",
    "start": "233550",
    "end": "240630"
  },
  {
    "text": "lot of time going over other details of how the cellular KPI works one of the design goals when Sarah log was",
    "start": "240630",
    "end": "246120"
  },
  {
    "text": "originally built was to be completely unsurprising if you can take in what's on this slide like Sarah log was",
    "start": "246120",
    "end": "253500"
  },
  {
    "text": "developed fairly recently so it's all quite a modern API I was coded as configuration you know it's a sinker",
    "start": "253500",
    "end": "260880"
  },
  {
    "text": "where it was born into the kind of world of tasks and all the rest of that you can you can write log files you can",
    "start": "260880",
    "end": "267360"
  },
  {
    "text": "write the console I think you saw in last slide that they're about different sinks so destinations that you",
    "start": "267360",
    "end": "272410"
  },
  {
    "text": "can send log data to now none of that particularly distinguishes sera log something different see it's leveled",
    "start": "272410",
    "end": "278800"
  },
  {
    "text": "logging library so you can write debug statements or information statements or log your errors and control at runtime",
    "start": "278800",
    "end": "286150"
  },
  {
    "text": "which ones of those are actually going to be written through to storage yeah if you take that in you've pretty much got",
    "start": "286150",
    "end": "291220"
  },
  {
    "text": "most of the details now sarah log so so in this session what I really want to",
    "start": "291220",
    "end": "296950"
  },
  {
    "text": "spend some time on is that the core that makes of the ideas that make Sarah log",
    "start": "296950",
    "end": "303370"
  },
  {
    "text": "different and I think interesting at this point in time so those are",
    "start": "303370",
    "end": "310560"
  },
  {
    "text": "capturing events with message templates so this is house every log takes information from your program and",
    "start": "310560",
    "end": "317050"
  },
  {
    "text": "records it so that later on you can do Diagnostics in a low-friction kind of",
    "start": "317050",
    "end": "322300"
  },
  {
    "text": "way and the second piece that we look at is related to it",
    "start": "322300",
    "end": "328360"
  },
  {
    "text": "which is which is doing correlation through an event enrichment so this is I guess how you use Sarah log to find that",
    "start": "328360",
    "end": "334660"
  },
  {
    "text": "needle in the haystack when you're when you're actually doing some diagnostics for an application all right",
    "start": "334660",
    "end": "341290"
  },
  {
    "text": "so in part one we look at the we look at the message templates part",
    "start": "341290",
    "end": "346800"
  },
  {
    "text": "heard of message templates previously till able to using sera log Oh lots of",
    "start": "353220",
    "end": "359730"
  },
  {
    "text": "hands cool aha and one never heard of Sarah log apart from I guessing the",
    "start": "359730",
    "end": "365280"
  },
  {
    "text": "title of this session yeah yeah okay so it turns out that there's kind of a long",
    "start": "365280",
    "end": "371670"
  },
  {
    "text": "history in application logging certainly a lot of people have have thought about",
    "start": "371670",
    "end": "378540"
  },
  {
    "text": "how to improve this situation that we have the classic kind of most established form of text of logging that",
    "start": "378540",
    "end": "385110"
  },
  {
    "text": "we have is text logging which you'll have seen with log to net where logging",
    "start": "385110",
    "end": "391140"
  },
  {
    "text": "is done by creating a kind of a narrative of what's going on inside the applications usually with it's sometimes",
    "start": "391140",
    "end": "396240"
  },
  {
    "text": "called printf debugging because of the formatting functions in C very old",
    "start": "396240",
    "end": "401280"
  },
  {
    "text": "approach you can see the example on the Left where we take am an elapsed time",
    "start": "401280",
    "end": "406770"
  },
  {
    "text": "span formatted into a string and we write that out to the console so some",
    "start": "406770",
    "end": "411780"
  },
  {
    "text": "real strengths that are in text logging in that it's very easy to write a quick",
    "start": "411780",
    "end": "417630"
  },
  {
    "text": "logging statement as you work through writing a piece of code program code and you don't really have to take your mind",
    "start": "417630",
    "end": "424020"
  },
  {
    "text": "off of the job you can just kind of write out your thoughts and what this is what I'm intending this piece of code to do and in goes some data and it comes",
    "start": "424020",
    "end": "431490"
  },
  {
    "text": "out in there and a kind of a nicely human readable form so when you scan",
    "start": "431490",
    "end": "436560"
  },
  {
    "text": "through a text log as a human I mean all of those um all that perceptual system that's trained for for reading text can",
    "start": "436560",
    "end": "443940"
  },
  {
    "text": "really quickly make a narrative out of what's going on in a text log the",
    "start": "443940",
    "end": "449700"
  },
  {
    "text": "problem with text logs and why we're here I guess is that humans and",
    "start": "449700",
    "end": "455220"
  },
  {
    "text": "computers differ a lot around this point like processing this text to to say find",
    "start": "455220",
    "end": "461250"
  },
  {
    "text": "all of the events where the commits took longer than 500 milliseconds is trivial",
    "start": "461250",
    "end": "467640"
  },
  {
    "text": "for to express in English but quite a painful process to go through if you want to use some kind of automated tool",
    "start": "467640",
    "end": "474210"
  },
  {
    "text": "to pull that out of a log especially when there's a lot of data and all kinds of different information formatted into",
    "start": "474210",
    "end": "480330"
  },
  {
    "text": "it so on the other side we have a school of thought that's called structured",
    "start": "480330",
    "end": "486210"
  },
  {
    "text": "logging and this is how it is this is how it has origins way back and the approach that",
    "start": "486210",
    "end": "492180"
  },
  {
    "text": "structured logging takes is to conceive to REE this idea of writing logs not as",
    "start": "492180",
    "end": "501300"
  },
  {
    "text": "producing messages but about but as producing events which in this case you",
    "start": "501300",
    "end": "506520"
  },
  {
    "text": "can see my fake structured logging API we're just using an object initializer to create an anonymous app that has",
    "start": "506520",
    "end": "512820"
  },
  {
    "text": "exactly the same data we've got the type of events that occur this type of the event that's occurring and then the",
    "start": "512820",
    "end": "519240"
  },
  {
    "text": "elapsed time and you can imagine that when we produce something like a stream of JSON out of this style of logging",
    "start": "519240",
    "end": "525260"
  },
  {
    "text": "it's trivially easily easy to use the kinds of tools that we have to go and find events that are commits or defined",
    "start": "525260",
    "end": "533190"
  },
  {
    "text": "events that where the commit time took between 500 and 600 milliseconds that's much easier to mechanically work with",
    "start": "533190",
    "end": "540630"
  },
  {
    "text": "this sort of information unfortunately though we've now song the other way and we can't use that human text recognition",
    "start": "540630",
    "end": "549090"
  },
  {
    "text": "kind of system to make sense of these these logs really quickly so during development not only do you have to kind",
    "start": "549090",
    "end": "555510"
  },
  {
    "text": "of switch modes and think about how to structure up some kind of object to represent your event when you're writing",
    "start": "555510",
    "end": "560790"
  },
  {
    "text": "code which introduces friction it's also very difficult to scan a stream of JSON",
    "start": "560790",
    "end": "566400"
  },
  {
    "text": "there's more than five lines long and make any sense whatsoever of what's going on in there so structured logging",
    "start": "566400",
    "end": "572880"
  },
  {
    "text": "is has been the underdog for a really long time it's it's fantastic in dealing",
    "start": "572880",
    "end": "578490"
  },
  {
    "text": "with large volumes of data from very busy systems but the ergonomics has been very poor and so it hasn't really",
    "start": "578490",
    "end": "585780"
  },
  {
    "text": "achieved the traction that that text logging still has I think with",
    "start": "585780",
    "end": "591390"
  },
  {
    "text": "developers but",
    "start": "591390",
    "end": "598490"
  },
  {
    "text": "does I guess the question then that we have to ask is now we're stuck at a",
    "start": "598490",
    "end": "604700"
  },
  {
    "text": "local maximum here where we've got good ergonomics at development time we're obviously resources are pretty",
    "start": "604700",
    "end": "610820"
  },
  {
    "text": "scarce and then when we're desperate to get information out of run time there are there are techniques that suffice",
    "start": "610820",
    "end": "615920"
  },
  {
    "text": "but if we take a closer look at what we're doing with text logging you know",
    "start": "615920",
    "end": "620959"
  },
  {
    "text": "is there a way to to remove all of this manual effort and still keep the things that we like about about logging with",
    "start": "620959",
    "end": "628220"
  },
  {
    "text": "text so when we write a text logging",
    "start": "628220",
    "end": "633680"
  },
  {
    "text": "statement and application we do actually have separate schema which describes",
    "start": "633680",
    "end": "639500"
  },
  {
    "text": "what the event is and data that parameterize it so when when you're writing a program and your program is",
    "start": "639500",
    "end": "645320"
  },
  {
    "text": "running we've got that format stream commit took curly brackets 0",
    "start": "645320",
    "end": "650660"
  },
  {
    "text": "milliseconds and we've got elapsed as a separate property where we format that series of text we just lose that",
    "start": "650660",
    "end": "656870"
  },
  {
    "text": "information that we had and we sort of throwing it away as a lossy transform and there's not really any easy",
    "start": "656870",
    "end": "662720"
  },
  {
    "text": "mechanical way to go back from that log line to the to the original kind of",
    "start": "662720",
    "end": "668899"
  },
  {
    "text": "separate schema and data which is really where the problem comes in it comes into it but if we were able to to preserve",
    "start": "668899",
    "end": "677029"
  },
  {
    "text": "those two pieces of information through our logging system could we have our cake and eat it too and that is I guess",
    "start": "677029",
    "end": "684350"
  },
  {
    "text": "the one of the core premises of Sarah log so here we've got an example written",
    "start": "684350",
    "end": "692930"
  },
  {
    "text": "with Sarah log notice the logger isn't initialized in the using statement cellular is built with no static state",
    "start": "692930",
    "end": "699500"
  },
  {
    "text": "in the login pipeline at all so you can create yourself 100 loggers call them from any thread you like whatever you",
    "start": "699500",
    "end": "704839"
  },
  {
    "text": "like or as a convenience if you don't want to inject loggers or pass loggers through your code camp you can use the",
    "start": "704839",
    "end": "710270"
  },
  {
    "text": "static log class which is sort of used in this example so here we have on every",
    "start": "710270",
    "end": "716750"
  },
  {
    "text": "any great idea in programming really has to be expressible in a console app or it's just too much for me to take in",
    "start": "716750",
    "end": "721970"
  },
  {
    "text": "right so we've got a console app it says hello if we run it too",
    "start": "721970",
    "end": "730130"
  },
  {
    "text": "information there we run it with control f5 there's two pieces of information",
    "start": "730130",
    "end": "735380"
  },
  {
    "text": "there I hope that the text isn't too small for you we've got the counter it's going through",
    "start": "735380",
    "end": "741500"
  },
  {
    "text": "the stream of messages and we've got a name and you can already tell that Sarah log is a little different from what",
    "start": "741500",
    "end": "747290"
  },
  {
    "text": "you're used to in in text logging and that is maybe a throwback to visual",
    "start": "747290",
    "end": "754370"
  },
  {
    "text": "studio 6.0 I think that magenta is for numbers and green two strings something",
    "start": "754370",
    "end": "761000"
  },
  {
    "text": "way back in the past anyway but you can see that when Sarah logs printed that message out to the console it has more",
    "start": "761000",
    "end": "766580"
  },
  {
    "text": "awareness than what you typically expect in a logging library or in string formatting so it has enough information",
    "start": "766580",
    "end": "773810"
  },
  {
    "text": "there to know that the number is is actually in numeric and it's separate from the message and the string is also",
    "start": "773810",
    "end": "782090"
  },
  {
    "text": "a separate piece of data there and if you if you can kind of wrap your head around what's going on there you've got",
    "start": "782090",
    "end": "787790"
  },
  {
    "text": "the the fundamentals of house every log combines text down structured logging to",
    "start": "787790",
    "end": "794510"
  },
  {
    "text": "see that more clearly though we'll switch over and instead of viewing that",
    "start": "794510",
    "end": "799700"
  },
  {
    "text": "as as text we'll take the same code and we'll write it out as a JSON stream",
    "start": "799700",
    "end": "809200"
  },
  {
    "text": "unfortunately the readability just goes downhill however you notice that the",
    "start": "809200",
    "end": "816350"
  },
  {
    "text": "template that hello number and then the format placeholders is is in that JSON",
    "start": "816350",
    "end": "821720"
  },
  {
    "text": "document as well as the individual values that we wrote a zero for the UM the counter value and we've got one for",
    "start": "821720",
    "end": "828350"
  },
  {
    "text": "the name I mean I can't I can't remember",
    "start": "828350",
    "end": "833540"
  },
  {
    "text": "that um zero as the counter and when was the name and I've got one login statement so that's obviously not going to scale to a big complicated",
    "start": "833540",
    "end": "838850"
  },
  {
    "text": "application so several log introduces an extension to dotnet format strings that",
    "start": "838850",
    "end": "845630"
  },
  {
    "text": "we call message templates what page down",
    "start": "845630",
    "end": "851300"
  },
  {
    "text": "and the arrow key next to each other okay we'll just make a slight change and you",
    "start": "851300",
    "end": "856730"
  },
  {
    "text": "see instead of instead of using numeric placeholders in that format string there are now two placeholders to the name we",
    "start": "856730",
    "end": "862010"
  },
  {
    "text": "have the counter and we have the name and both of those are essentially going to become properties on the log event",
    "start": "862010",
    "end": "868040"
  },
  {
    "text": "that we're going to collect to do analysis on later group functions next control so the template is carried",
    "start": "868040",
    "end": "878150"
  },
  {
    "text": "through again but you'll notice on the right-hand side the two properties that are included in every log event names",
    "start": "878150",
    "end": "885650"
  },
  {
    "text": "now counter and name which means that even though we can take the same the",
    "start": "885650",
    "end": "892550"
  },
  {
    "text": "same piece of logging code and produce a stream of like machine to a level Jason we can just as easily continue to to",
    "start": "892550",
    "end": "900920"
  },
  {
    "text": "produce the human readable text at the same time it wouldn't really be super",
    "start": "900920",
    "end": "909740"
  },
  {
    "text": "interesting though if all we were doing was producing a stream of Jason",
    "start": "909740",
    "end": "915020"
  },
  {
    "text": "obviously there's you know I don't want to go and pause and read jason log files",
    "start": "915020",
    "end": "920500"
  },
  {
    "text": "sarah log came along I guess at the point that most large dotnet systems were not monolithic anymore and so it's",
    "start": "920500",
    "end": "927740"
  },
  {
    "text": "kind of post log file if you can imagine that and Sarah log is built so that the",
    "start": "927740",
    "end": "933020"
  },
  {
    "text": "target for log log events is generally expected to be something that's jason aware or something that can represent",
    "start": "933020",
    "end": "938930"
  },
  {
    "text": "structured data if we take the same example now and then we pop this into",
    "start": "938930",
    "end": "946550"
  },
  {
    "text": "Postgres which I just noticed there's a post grad session going on in the UM in the room next door the post graders is",
    "start": "946550",
    "end": "952910"
  },
  {
    "text": "quite an interesting database for storing event data because it has a very rich system for including jason inside",
    "start": "952910",
    "end": "959270"
  },
  {
    "text": "the table schema so you can have a jason column and that it provides indexing",
    "start": "959270",
    "end": "964850"
  },
  {
    "text": "over the jason partial indexes and a few other concepts make our post code is really interesting to store event soon",
    "start": "964850",
    "end": "970720"
  },
  {
    "text": "if we take the same code and we run that",
    "start": "970720",
    "end": "975970"
  },
  {
    "text": "you see we get the output on the console but as well we're in the same event",
    "start": "976120",
    "end": "981440"
  },
  {
    "text": "information to a log that's not good thank you haha so now",
    "start": "981440",
    "end": "995420"
  },
  {
    "text": "you can tell that it didn't just pre-baked the content of the logs table it really is empty yeah yeah all right",
    "start": "995420",
    "end": "1005850"
  },
  {
    "text": "so if we look at our loads table you see that we've got a properties column over",
    "start": "1005850",
    "end": "1012160"
  },
  {
    "text": "there and right that has much the same as what our what our JSON documents at",
    "start": "1012160",
    "end": "1017500"
  },
  {
    "text": "the console showed and then that little stream of messages we've got the name we've got the counter and they're both",
    "start": "1017500",
    "end": "1022779"
  },
  {
    "text": "preserved so if you think about the example we were talking about with the elapsed time events from an application",
    "start": "1022779",
    "end": "1031240"
  },
  {
    "text": "now where the counter is say greater than 7 we can look yeah now we can use",
    "start": "1031240",
    "end": "1038650"
  },
  {
    "text": "Postgres as JSON query syntax and go through there actually the properties and then a very complex looking right",
    "start": "1038650",
    "end": "1045670"
  },
  {
    "text": "arrow that's accessing a JSON object member and then Postgres needs to quote",
    "start": "1045670",
    "end": "1051990"
  },
  {
    "text": "adjacent values and strengths but that's actually doing a numeric comparison and if you run the same query now we've",
    "start": "1051990",
    "end": "1058750"
  },
  {
    "text": "zoomed in to just the events where the counter was was greater than 7 now it",
    "start": "1058750",
    "end": "1065380"
  },
  {
    "text": "seems simple but of course we've just taken a log stream from an application",
    "start": "1065380",
    "end": "1070809"
  },
  {
    "text": "with no other no extra work at the time that we wrote the logs we have an ax format where we can pretty much perform",
    "start": "1070809",
    "end": "1076300"
  },
  {
    "text": "any arbitrary query on on the events that come out of that application so when time comes to actually do some",
    "start": "1076300",
    "end": "1083110"
  },
  {
    "text": "debugging and diagnostics or even just to try to get some insights about the system the amount of effort that's",
    "start": "1083110",
    "end": "1088419"
  },
  {
    "text": "actually required to go and extract that information is hugely reduced so previously we had sort of text logging",
    "start": "1088419",
    "end": "1096429"
  },
  {
    "text": "was easy during development time and structured logging was better for analysis and now it's very low we've got",
    "start": "1096429",
    "end": "1102309"
  },
  {
    "text": "the case where hopefully we can still enjoy a really simple text-based kind of logging for development but then by sort",
    "start": "1102309",
    "end": "1109240"
  },
  {
    "text": "of flicking a switch and sending the logs to somewhere that's more suited for production diagnostics we can actually",
    "start": "1109240",
    "end": "1114400"
  },
  {
    "text": "get the full structured data experience out of that as well so there are a number of places that you",
    "start": "1114400",
    "end": "1120019"
  },
  {
    "text": "can send logs from stereo log actually we've had the number already it's about 100 which is pretty amazing I think",
    "start": "1120019",
    "end": "1125600"
  },
  {
    "text": "because I wouldn't have ever imagined that people would have such a huge variety of logging targets obviously the",
    "start": "1125600",
    "end": "1135379"
  },
  {
    "text": "space has become really hot in recent years and so we've got application insights from Microsoft we've got Splunk",
    "start": "1135379",
    "end": "1141440"
  },
  {
    "text": "and elastic search and got Postgres coming along quietly in the background",
    "start": "1141440",
    "end": "1146659"
  },
  {
    "text": "adding all sorts of awesome Jason querying facilities I'll show you",
    "start": "1146659",
    "end": "1152509"
  },
  {
    "text": "another example using a log specific data store core seek which is like welcome day today and it's good for",
    "start": "1152509",
    "end": "1160759"
  },
  {
    "text": "these kinds of vicam it's good it's good",
    "start": "1160759",
    "end": "1167899"
  },
  {
    "text": "for demos because I can run it locally and I don't have to worry about the network causing some causing some pain",
    "start": "1167899",
    "end": "1175730"
  },
  {
    "text": "so if we jump in there now did I just do that startup product project thing again no I didn't there we go someone's some",
    "start": "1175730",
    "end": "1189860"
  },
  {
    "text": "serious volunteer going on out there so",
    "start": "1189860",
    "end": "1196580"
  },
  {
    "text": "most of the time with Sarah log you went generally save it yeah you want",
    "start": "1196580",
    "end": "1203450"
  },
  {
    "text": "generally save events locally because you're running right-size services or",
    "start": "1203450",
    "end": "1208820"
  },
  {
    "text": "some kind of cloud-based service that needs to that needs to draw events from a whole host of machines and so there at",
    "start": "1208820",
    "end": "1214700"
  },
  {
    "text": "most of those hundred targets I think to Sarah Logan network base this one was just sent lobes fire HDB to a server",
    "start": "1214700",
    "end": "1220610"
  },
  {
    "text": "running running locally and again sorry",
    "start": "1220610",
    "end": "1226580"
  },
  {
    "text": "looks like and again a proven that there wasn't really any pre-loaded data again",
    "start": "1226580",
    "end": "1233210"
  },
  {
    "text": "and see that the counter and the name popped through and we've got a query interface where you can do things like",
    "start": "1233210",
    "end": "1239119"
  },
  {
    "text": "very counter is greater than 7 and get a result back from our logo vents and we",
    "start": "1239119",
    "end": "1244429"
  },
  {
    "text": "still get the text view to read",
    "start": "1244429",
    "end": "1248080"
  },
  {
    "text": "but the promise of Sarah log is also that Sarah log would provide fully",
    "start": "1250210",
    "end": "1256460"
  },
  {
    "text": "structured events so coming up against something that's built to say just recording pure JSON objects there's a",
    "start": "1256460",
    "end": "1262730"
  },
  {
    "text": "lot more opportunity to record interesting data in JSON so Jason has a",
    "start": "1262730",
    "end": "1268090"
  },
  {
    "text": "basic type system but it covers arrays and and fully structured and nested",
    "start": "1268090",
    "end": "1273140"
  },
  {
    "text": "objects so Sarah log needs to provide",
    "start": "1273140",
    "end": "1278570"
  },
  {
    "text": "that kind of experience to to really excuse me I'll just wait for the car to",
    "start": "1278570",
    "end": "1284930"
  },
  {
    "text": "finish shooting its horn again sorry",
    "start": "1284930",
    "end": "1289990"
  },
  {
    "text": "alright so for Sarah log to record structured data there's a little extension",
    "start": "1290650",
    "end": "1298150"
  },
  {
    "text": "our alarm system test thank you yep okay great so here we have got a more",
    "start": "1306360",
    "end": "1313740"
  },
  {
    "text": "interesting user object ID equals three and to record that with several log",
    "start": "1313740",
    "end": "1320549"
  },
  {
    "text": "there's an extension of message templates that said we could pass the user through and you get an idea of how",
    "start": "1320549",
    "end": "1327690"
  },
  {
    "text": "Sara logged got it's got its name it's a it's a serializing logger and so it's",
    "start": "1327690",
    "end": "1335340"
  },
  {
    "text": "not limited to just having simple values recorded like strings and numbers to send data through stereo log that has",
    "start": "1335340",
    "end": "1341250"
  },
  {
    "text": "structure you can include it in your log event and pop a little prefix in there the add symbol and then if we run that",
    "start": "1341250",
    "end": "1347789"
  },
  {
    "text": "again hopefully startup project is set this time and zip over and have a look",
    "start": "1347789",
    "end": "1353399"
  },
  {
    "text": "at the resulting data you see that instead of the user coming through with",
    "start": "1353399",
    "end": "1359100"
  },
  {
    "text": "two string we got the user through as a as a JSON object with the properties so",
    "start": "1359100",
    "end": "1364470"
  },
  {
    "text": "we can look for user dot ID equals three and obviously you've got one user here",
    "start": "1364470",
    "end": "1370970"
  },
  {
    "text": "and that's that's really really useful and powerful when you're doing things like recording say headers from an HTTP",
    "start": "1370970",
    "end": "1378360"
  },
  {
    "text": "request or D tos and system you also do need to be very careful though because I think the first thing that people tend",
    "start": "1378360",
    "end": "1384870"
  },
  {
    "text": "to do when they start logging this area log is serialized all the things and initially we had some really interesting",
    "start": "1384870",
    "end": "1390389"
  },
  {
    "text": "bug reports where someone would have serialized an object it wasn't built for serialization and it had a system locked",
    "start": "1390389",
    "end": "1396929"
  },
  {
    "text": "tight in there and so you walk from type to assembly and then you walk from assembly to all the types in the",
    "start": "1396929",
    "end": "1403380"
  },
  {
    "text": "assembly and then all their dependencies and all the other assemblies and end up with gigabytes stashed into just one the",
    "start": "1403380",
    "end": "1408419"
  },
  {
    "text": "log message so hence serial serialization with Sarah log is an opt-in with the with that little",
    "start": "1408419",
    "end": "1415350"
  },
  {
    "text": "residual character there and um and you do need to still kind of keep in mind",
    "start": "1415350",
    "end": "1421500"
  },
  {
    "text": "that that log events should probably be pretty compact but especially if you're trying to debug a problem of the system",
    "start": "1421500",
    "end": "1428340"
  },
  {
    "text": "that is networked and you have a have say request object coming and be able to lower all of that data and then query it",
    "start": "1428340",
    "end": "1433500"
  },
  {
    "text": "for say I want checkout requests where the cart has more than five items",
    "start": "1433500",
    "end": "1439360"
  },
  {
    "text": "makes every log really different logging experience to what you can achieve this text so that's that's the essence of",
    "start": "1439360",
    "end": "1453100"
  },
  {
    "text": "message template and it is a very simple idea but it's the possibilities are",
    "start": "1453100",
    "end": "1458290"
  },
  {
    "text": "really quite deep when I first realized how how much more valuable you could make your log data with so little extra",
    "start": "1458290",
    "end": "1465130"
  },
  {
    "text": "effort I sort of went along to a user group talking jumped up and said this is",
    "start": "1465130",
    "end": "1470380"
  },
  {
    "text": "going to be the next big thing and that was probably three years ago and I don't",
    "start": "1470380",
    "end": "1475390"
  },
  {
    "text": "think I was too wrong because in the recent versions of asp.net core message",
    "start": "1475390",
    "end": "1480400"
  },
  {
    "text": "templates have been adopted into the logging infrastructure there and for instance if you look at the logging output produced by asp.net core MVC",
    "start": "1480400",
    "end": "1488520"
  },
  {
    "text": "you'll see that it's using message templates to record web requests and",
    "start": "1488520",
    "end": "1493929"
  },
  {
    "text": "searching for controllers and all those things as well so this is from message",
    "start": "1493929",
    "end": "1499000"
  },
  {
    "text": "templates org because the slide that we're looking at because we realized I",
    "start": "1499000",
    "end": "1505120"
  },
  {
    "text": "think when that process began that there are actually quite a few libraries now adopting message templates and donate in addition to Sarah logs so even if you",
    "start": "1505120",
    "end": "1511419"
  },
  {
    "text": "don't go and adopt Sarah lo hopefully this is something that you can apply either now or in the future with one of",
    "start": "1511419",
    "end": "1517600"
  },
  {
    "text": "the other libraries that you might be using so a message templates separate out the capturing of a log event from",
    "start": "1517600",
    "end": "1525190"
  },
  {
    "text": "the rendering it's a really simple idea I didn't realize myself when I started",
    "start": "1525190",
    "end": "1535059"
  },
  {
    "text": "working with them but there's one other little side benefit that's quite surprising that you don't initially see",
    "start": "1535059",
    "end": "1541660"
  },
  {
    "text": "but becomes obvious marts pointed out all the events produced from a single message template are effectively the",
    "start": "1541660",
    "end": "1548980"
  },
  {
    "text": "same event and they're at their type isn't is really the template every event",
    "start": "1548980",
    "end": "1554590"
  },
  {
    "text": "that's produced by the same log line will have the same template associated with it and if you imagine that for",
    "start": "1554590",
    "end": "1560590"
  },
  {
    "text": "instance you're looking for Shekhar checkout events and you're logging all of those with the same template like",
    "start": "1560590",
    "end": "1566500"
  },
  {
    "text": "that being able to go and actually zoom in on all of the checkouts just by searching for events from the template",
    "start": "1566500",
    "end": "1572470"
  },
  {
    "text": "is really for it if you have to collect the template as well as the rendered message",
    "start": "1572470",
    "end": "1578620"
  },
  {
    "text": "though you've essentially doubled the volume of the log data that you have to collect and so it's more common when",
    "start": "1578620",
    "end": "1584530"
  },
  {
    "text": "using Siri log 2 instead record the message template by hashing it in this",
    "start": "1584530",
    "end": "1590620"
  },
  {
    "text": "example the the message template gets hashed and produces that first value that's highlighted and you see that all",
    "start": "1590620",
    "end": "1597430"
  },
  {
    "text": "instances of the same event they're just the same computational hash from the message template and then the different",
    "start": "1597430",
    "end": "1603850"
  },
  {
    "text": "event gets a different hash so that's um that's something that I didn't expect was going to come out of message",
    "start": "1603850",
    "end": "1609910"
  },
  {
    "text": "templates when I first when I first started working with them however it's",
    "start": "1609910",
    "end": "1615510"
  },
  {
    "text": "become a kind of a very natural way to go and search for the log data now and",
    "start": "1615510",
    "end": "1621970"
  },
  {
    "text": "then so you can see in this case even though all of the events look different and have different data embedded in them",
    "start": "1621970",
    "end": "1628150"
  },
  {
    "text": "and they can be very complex it's trivial to go and zoom in and cut and capture just the ones that were produced",
    "start": "1628150",
    "end": "1633820"
  },
  {
    "text": "in the same log line but that is not I think the the thing that makes me really",
    "start": "1633820",
    "end": "1640420"
  },
  {
    "text": "excited about event types like most diagnostic sessions do do start with",
    "start": "1640420",
    "end": "1647710"
  },
  {
    "text": "looking for an Olin thing I've got an exception it was raised in a web request",
    "start": "1647710",
    "end": "1653110"
  },
  {
    "text": "I see the order ID in that web request and then I want to zoom in and find all the events with that order ID and I'll",
    "start": "1653110",
    "end": "1658570"
  },
  {
    "text": "see something went wrong like that's pretty common diagnostic scenario but went the ones that really make me sweat",
    "start": "1658570",
    "end": "1664650"
  },
  {
    "text": "the unknown unknowns when something went wrong between 2 o'clock and 3 o'clock",
    "start": "1664650",
    "end": "1671050"
  },
  {
    "text": "yesterday afternoon and our numbers are out and no one has any idea why and I have a million log events to get through",
    "start": "1671050",
    "end": "1677500"
  },
  {
    "text": "to figure it out but the curious thing is that is that just like I guess",
    "start": "1677500",
    "end": "1686890"
  },
  {
    "text": "instances in a in c-sharp itself you",
    "start": "1686890",
    "end": "1692530"
  },
  {
    "text": "generally have a lot more instances than you do types and so if we start excluding the the events by their",
    "start": "1692530",
    "end": "1698740"
  },
  {
    "text": "template to be 0 these are the ones that are Omega we exclude the debug events so",
    "start": "1698740",
    "end": "1704260"
  },
  {
    "text": "that saves us a bit of zooming but so okay it's got nothing to do with claim status so we're excluding",
    "start": "1704260",
    "end": "1710009"
  },
  {
    "text": "that so nothing to do with this eligibility thing exclude that you know",
    "start": "1710009",
    "end": "1715710"
  },
  {
    "text": "not interested in this one either and while we might have million events to scan through after we start to",
    "start": "1715710",
    "end": "1722669"
  },
  {
    "text": "exclude them type type by type the things that we couldn't we would never have actually found yeah things that we",
    "start": "1722669",
    "end": "1731759"
  },
  {
    "text": "would never have found scanning a log file by eye because we don't know what we're looking for suddenly can can be revealed and that's",
    "start": "1731759",
    "end": "1740340"
  },
  {
    "text": "that's probably to me the the number one reason that I really enjoy using Siri log for this sort of work okay so Sarah",
    "start": "1740340",
    "end": "1752580"
  },
  {
    "text": "log out of the box doesn't actually provide event types by the way you need to plug that in we'll see actually how",
    "start": "1752580",
    "end": "1758340"
  },
  {
    "text": "that's plugged in a little bit later I found that a 32-bit hash seems to work",
    "start": "1758340",
    "end": "1763830"
  },
  {
    "text": "I've never had anybody report collisions but you know it you can also actually",
    "start": "1763830",
    "end": "1769440"
  },
  {
    "text": "take that hash and just format it into a log file and get some of these benefits to like you might still have a text log you might not have any central way to",
    "start": "1769440",
    "end": "1776159"
  },
  {
    "text": "collect it and such as a structured data but that doesn't mean that you can't find some kind of way to encode that",
    "start": "1776159",
    "end": "1782369"
  },
  {
    "text": "event type down into the log file and make just text-based log debugging a lot more a lot more fun as well so it's not",
    "start": "1782369",
    "end": "1789359"
  },
  {
    "text": "only it's not only for kind of structured log data collection so that's",
    "start": "1789359",
    "end": "1798840"
  },
  {
    "text": "event IDs so that's pretty much message templates in a nutshell and why I would",
    "start": "1798840",
    "end": "1804179"
  },
  {
    "text": "why I would do Sarah log but the other interesting thing that that Sarah log",
    "start": "1804179",
    "end": "1810029"
  },
  {
    "text": "brings to the table while it's otherwise unsurprising and looks just like logs and that is that you know love is it",
    "start": "1810029",
    "end": "1817350"
  },
  {
    "text": "really it really does have a very very strong focus on treating log events as events and I say correlation but I had",
    "start": "1817350",
    "end": "1825960"
  },
  {
    "text": "to pop this up because if you were around through this time of doing SOA with WCF and those sorts of tools the",
    "start": "1825960",
    "end": "1833009"
  },
  {
    "text": "notion of correlation was generally you've got some kind of scheme for passing correlation IDs through a chain",
    "start": "1833009",
    "end": "1838259"
  },
  {
    "text": "of service calls that's one kind of correlation but the kind of correlation that Sarah logo is",
    "start": "1838259",
    "end": "1843690"
  },
  {
    "text": "built for is the kind of chaotic correlation that you need to do when you're dealing with large systems that interact with each other in kind of",
    "start": "1843690",
    "end": "1849899"
  },
  {
    "text": "arbitrary ways like it's not there might be feasible in a v1 to kind of roll out some kind of sophisticated pre-baked",
    "start": "1849899",
    "end": "1858090"
  },
  {
    "text": "correlation scheme but really when it comes to doing off to doing diagnostics and analysis the number of scenarios for",
    "start": "1858090",
    "end": "1865769"
  },
  {
    "text": "having to for tracking down events are really kind of boundless and so the kind of correlation Sarah logo is built for",
    "start": "1865769",
    "end": "1871350"
  },
  {
    "text": "it's be able to go and say without having a thought about the scenario in",
    "start": "1871350",
    "end": "1876450"
  },
  {
    "text": "advance necessarily go and find all of the events from the same customer or the same order or the same you know",
    "start": "1876450",
    "end": "1884249"
  },
  {
    "text": "subscription ID and that this process of like natural correlation is really",
    "start": "1884249",
    "end": "1890090"
  },
  {
    "text": "moving like navigating through a stream of logs jumping from one sort of correlation axis to another you might",
    "start": "1890090",
    "end": "1896549"
  },
  {
    "text": "have a request ID that tags everything that's generated by the same HTTP",
    "start": "1896549",
    "end": "1901769"
  },
  {
    "text": "request and in the back end where you're processing orders perhaps in the system you might have a message ID that that is",
    "start": "1901769",
    "end": "1910369"
  },
  {
    "text": "associated with all of the events that come out of processing some kind of",
    "start": "1910369",
    "end": "1915570"
  },
  {
    "text": "message bus message and then given the requests that or given them the message",
    "start": "1915570",
    "end": "1921479"
  },
  {
    "text": "handlers that failed you know can you work back to the web request that triggered it off and that's usually a",
    "start": "1921479",
    "end": "1926789"
  },
  {
    "text": "process of navigating backups through say some kind of natural correlation identifier in the one kind of timeline",
    "start": "1926789",
    "end": "1934349"
  },
  {
    "text": "of the code sitting across and then finding the other correlation identifier and working through all the events there and so Sarah log brings is really a",
    "start": "1934349",
    "end": "1943919"
  },
  {
    "text": "toolkit I guess for adding this kind of data to events and it's not it's not a",
    "start": "1943919",
    "end": "1950820"
  },
  {
    "text": "completely foreign concept in dotnet logging like there's generally some context there's some kind of diagnostic",
    "start": "1950820",
    "end": "1957210"
  },
  {
    "text": "context that you can jam data into in just every logging library but Sarah",
    "start": "1957210",
    "end": "1962580"
  },
  {
    "text": "lobster treats is the first-class citizen you're not just kind of formatting a thread ID into the message",
    "start": "1962580",
    "end": "1967730"
  },
  {
    "text": "log events in Sarah log like an event object and there are a number of API is that allow",
    "start": "1967730",
    "end": "1974620"
  },
  {
    "text": "you to actually attach properties to that event and you can then go in and collect them up and use them for for",
    "start": "1974620",
    "end": "1980470"
  },
  {
    "text": "debug and later on so that process we call enrichment I've got a little demo",
    "start": "1980470",
    "end": "1989130"
  },
  {
    "text": "I'll make sure I actually set it this time okay and so yeah this one's writing",
    "start": "1989850",
    "end": "1998230"
  },
  {
    "text": "to two destinations you see if you if you like auto fax kind of fluent builder",
    "start": "1998230",
    "end": "2004110"
  },
  {
    "text": "syntax you'll be really at home with them with Sarah log but you can chain that cut that together so you've got the",
    "start": "2004110",
    "end": "2009690"
  },
  {
    "text": "console output and seek output or their file or database or anything else so in",
    "start": "2009690",
    "end": "2018090"
  },
  {
    "text": "this case we've got a little simple little program it calculates an answer the answer is square of whatever numbers",
    "start": "2018090",
    "end": "2025409"
  },
  {
    "text": "that we've gone through and what the zero to ninety nine and initially all of",
    "start": "2025409",
    "end": "2030960"
  },
  {
    "text": "those events are just going to get rid of that sorry actually wrong on all of",
    "start": "2030960",
    "end": "2039809"
  },
  {
    "text": "those events are just going to have the data that's provided in the message template the first way though that we",
    "start": "2039809",
    "end": "2049290"
  },
  {
    "text": "might want to drill down to a particular set of related events especially if you're collecting a lot of events from",
    "start": "2049290",
    "end": "2056220"
  },
  {
    "text": "some kind of service-oriented architecture or all of different applications it's just to attach some data at the you know at the logo level",
    "start": "2056220",
    "end": "2064858"
  },
  {
    "text": "so every event that goes through this area load pipeline we might enrich it with property called environment and",
    "start": "2064859",
    "end": "2072950"
  },
  {
    "text": "this one is going to be production should be demo I guess and so that's the",
    "start": "2072950",
    "end": "2080700"
  },
  {
    "text": "simplest form of enrichment in Sarah log you can create a yeah we run that again and if we look at the events they will",
    "start": "2080700",
    "end": "2090419"
  },
  {
    "text": "all have that environment attached there we can go we can go in search or exclude you know in whatever data store that",
    "start": "2090419",
    "end": "2096990"
  },
  {
    "text": "we're using to collect the events there um the second kind of enrichment is",
    "start": "2096990",
    "end": "2102720"
  },
  {
    "text": "probably the more familiar one if you're working with other logging libraries and that is there's some ambient data that we can",
    "start": "2102720",
    "end": "2109220"
  },
  {
    "text": "collect and attach to log event so it's not always the same but for example we might have a thread ID and we want to go",
    "start": "2109220",
    "end": "2118010"
  },
  {
    "text": "to tell what events were kind of raised in the same logical context so we do risk oh I have a bad feeling to have",
    "start": "2118010",
    "end": "2127460"
  },
  {
    "text": "them you get package installed really come on resharper okay",
    "start": "2127460",
    "end": "2135619"
  },
  {
    "text": "actually we have to skip that one because you know terribly it's not already in my cache and then having that",
    "start": "2135619",
    "end": "2140839"
  },
  {
    "text": "on we'll come back to that though so in reaching the events with a thread ID",
    "start": "2140839",
    "end": "2146470"
  },
  {
    "text": "we'll we'll go and take the current thread ID that's like thread dot current",
    "start": "2146470",
    "end": "2153079"
  },
  {
    "text": "thread manage thread ID and stick that onto each each event object so that you can go and find events based on the same",
    "start": "2153079",
    "end": "2160010"
  },
  {
    "text": "kind of causal chain so those are kind of the simple global enrichment",
    "start": "2160010",
    "end": "2166430"
  },
  {
    "text": "scenarios but that obviously in a single application you might have hundreds of",
    "start": "2166430",
    "end": "2172220"
  },
  {
    "text": "different ways that you might want to go and track down events and Sarah log provides a much more fine-grained way of",
    "start": "2172220",
    "end": "2179349"
  },
  {
    "text": "doing that based on the log context and so the log context is sarah logs kind of",
    "start": "2179349",
    "end": "2185269"
  },
  {
    "text": "scoping mechanism and in every instance where we go through this loop and we calculate the answer based on whatever",
    "start": "2185269",
    "end": "2191150"
  },
  {
    "text": "the current loop counter is now we might want to attach that to all of the events",
    "start": "2191150",
    "end": "2197299"
  },
  {
    "text": "to the race in the loop so log context push property in this case we're going",
    "start": "2197299",
    "end": "2204589"
  },
  {
    "text": "to say we'll call it counter because we haven't used that one in this example and the counter is I and here's where",
    "start": "2204589",
    "end": "2215509"
  },
  {
    "text": "one of the Sarah lobes design points becomes a little bit of an anti feature in some way if you look at the events",
    "start": "2215509",
    "end": "2221029"
  },
  {
    "text": "now that come out here you'll find that",
    "start": "2221029",
    "end": "2226609"
  },
  {
    "text": "they don't carry out counter unfortunately we also don't see the",
    "start": "2226609",
    "end": "2232060"
  },
  {
    "text": "debug level events I should turn those on so the reason that we don't see the the counter is that zero log really does",
    "start": "2232060",
    "end": "2239680"
  },
  {
    "text": "stick to that no static state rule like I do I do really like the convenience of",
    "start": "2239680",
    "end": "2247839"
  },
  {
    "text": "like being able to put something in the ambient context and then have it just attach to stuff now track wherever the",
    "start": "2247839",
    "end": "2253599"
  },
  {
    "text": "wherever the call chain leads but obviously there's a lot of scenarios for",
    "start": "2253599",
    "end": "2260020"
  },
  {
    "text": "doing logging and so having having a logging pipeline that goes in grabs data from somewhere by default just doesn't",
    "start": "2260020",
    "end": "2265810"
  },
  {
    "text": "it just has a bit of a smell to me and so now we need to actually opt in and say enriched from from logged context we",
    "start": "2265810",
    "end": "2275740"
  },
  {
    "text": "run that again and we now see that each time through the loop all of the three refresh all of the the three events that",
    "start": "2275740",
    "end": "2284140"
  },
  {
    "text": "are raised in the same loop iteration will have the same counter value so if we found that we'll see that we can now",
    "start": "2284140",
    "end": "2292960"
  },
  {
    "text": "see that when the counter was 95 we produced the answer 90 25 and so this is",
    "start": "2292960",
    "end": "2299410"
  },
  {
    "text": "the the enrichment technique that you generally use where you've got a message hand lock and the message came in that's",
    "start": "2299410",
    "end": "2304599"
  },
  {
    "text": "got an order ID attached so you push that onto the log context and then make a bunch of vlogging calls that record",
    "start": "2304599",
    "end": "2310540"
  },
  {
    "text": "what how the order was processed and then later on if you've got a problem with it you can go and follow along that chain and see everything that",
    "start": "2310540",
    "end": "2316660"
  },
  {
    "text": "contributed to the the same order being processed all right okay we're looking",
    "start": "2316660",
    "end": "2327790"
  },
  {
    "text": "at the enrichment toolkit do we have that group sorry I flipped the wrong way actually I",
    "start": "2327790",
    "end": "2334359"
  },
  {
    "text": "skipped one as well a half so there is there is one other technique it's",
    "start": "2334359",
    "end": "2339520"
  },
  {
    "text": "actually only only include it because if you've used log4net you're generally all logging is kind of",
    "start": "2339520",
    "end": "2345220"
  },
  {
    "text": "like source oriented so before I can before I can log anything I need to actually say which class is going to do",
    "start": "2345220",
    "end": "2351339"
  },
  {
    "text": "the logging and Sarah log doesn't throw that concept away at all for Sarah log",
    "start": "2351339",
    "end": "2357250"
  },
  {
    "text": "we can actually create loggers individual loggers that have enrichment applied to them so we can say barda's",
    "start": "2357250",
    "end": "2363130"
  },
  {
    "text": "program logger equals log or context and then",
    "start": "2363130",
    "end": "2371359"
  },
  {
    "text": "program which I hope is not static because I see shell dislikes that good",
    "start": "2371359",
    "end": "2377830"
  },
  {
    "text": "in this case we can say program logger",
    "start": "2377830",
    "end": "2382849"
  },
  {
    "text": "debug calculating whatever that is and",
    "start": "2382849",
    "end": "2389619"
  },
  {
    "text": "in this case only the events raised by that one specific logger instance called",
    "start": "2389619",
    "end": "2394820"
  },
  {
    "text": "program logger will carry that information so this is the UM this is",
    "start": "2394820",
    "end": "2400190"
  },
  {
    "text": "the inverse of kind of the I want everything Nicolle chain to carry the same correlation ids in this case it's",
    "start": "2400190",
    "end": "2407810"
  },
  {
    "text": "like i only want the messages raised by particular logger instance to carry this",
    "start": "2407810",
    "end": "2413930"
  },
  {
    "text": "information so you can see we got the source context attached but to that calculating event but we don't really have it on and as the others in there so",
    "start": "2413930",
    "end": "2424300"
  },
  {
    "text": "cellulose got a fairly counted some complex set of enrichment api's but",
    "start": "2424300",
    "end": "2430820"
  },
  {
    "text": "under the hood these are all represented by the same concept and just where if",
    "start": "2430820",
    "end": "2435830"
  },
  {
    "text": "you've used middleware and say a spit on that core or Owen that that idea that you have a component you can plug into",
    "start": "2435830",
    "end": "2441650"
  },
  {
    "text": "the pipeline and can inspect all of the events that flows through the pipeline",
    "start": "2441650",
    "end": "2446780"
  },
  {
    "text": "and interact with them is kind of a pretty good analogy for how in Rich's work and Sarah log so with just with",
    "start": "2446780",
    "end": "2452750"
  },
  {
    "text": "just this one implementation you can you can implement a log event of richer and richer and the parameters to that the",
    "start": "2452750",
    "end": "2460970"
  },
  {
    "text": "log event itself and you can inspect the log event and look at all of its properties and then you can not only add",
    "start": "2460970",
    "end": "2467960"
  },
  {
    "text": "properties to the event but you can remove properties as well and this is where things get interesting because",
    "start": "2467960",
    "end": "2473030"
  },
  {
    "text": "there are a few different schemes where for instance you might want to log a user object but not the password that",
    "start": "2473030",
    "end": "2478880"
  },
  {
    "text": "we're storing the text field attached to a property or maybe we want to make sure that there are no credit card numbers",
    "start": "2478880",
    "end": "2484339"
  },
  {
    "text": "ever logged through Laurine pipeline and can just inspect individual and individual properties and wipe them out",
    "start": "2484339",
    "end": "2489500"
  },
  {
    "text": "if they're armed if they look like there might be a credit card number so in Rich's are really a really powerful concept and we use them for all kinds of",
    "start": "2489500",
    "end": "2496430"
  },
  {
    "text": "things it probably looks a little bit more complex than it needs to be you see that",
    "start": "2496430",
    "end": "2502010"
  },
  {
    "text": "we're passing a scalar value through here as as the parameter instead of just an integer thread ID and I think at",
    "start": "2502010",
    "end": "2510740"
  },
  {
    "text": "least some of you will at this point be saying well how can this be a good idea I've got all these complex objects in my",
    "start": "2510740",
    "end": "2516560"
  },
  {
    "text": "program and I'm passing them into a logging library that's going to go and muck around with some background threads and all the rest house there ever going",
    "start": "2516560",
    "end": "2522380"
  },
  {
    "text": "to be thread safe Sarah log has a really limited set of types that it will treat",
    "start": "2522380",
    "end": "2528860"
  },
  {
    "text": "as thread safe kind of scalar data like it or to treat the built in numeric types and strings and a couple of others",
    "start": "2528860",
    "end": "2534410"
  },
  {
    "text": "that are known to be immutable and then the the other data that gets passed through whether it's serialized or not",
    "start": "2534410",
    "end": "2541220"
  },
  {
    "text": "it gets pulled apart through a capturing process and put into an object model",
    "start": "2541220",
    "end": "2546290"
  },
  {
    "text": "much like JSON nets so if you've ever used J object and J array and those types and Jason's on that sarah log has",
    "start": "2546290",
    "end": "2553030"
  },
  {
    "text": "structure values scalar value and some equivalent types that that I used to",
    "start": "2553030",
    "end": "2558320"
  },
  {
    "text": "represent the actual log data so then Richard here actually has to use a to",
    "start": "2558320",
    "end": "2563390"
  },
  {
    "text": "use the scalar value to represent the thread ID just to say that's how these things represented otherwise it will end up getting converted using to string",
    "start": "2563390",
    "end": "2570080"
  },
  {
    "text": "because that's the way that's very low determines that something ensures that something is going to be safe to go on",
    "start": "2570080",
    "end": "2575510"
  },
  {
    "text": "them pass through an asynchronous logging pipeline so more than meets the eye so Sarah logs based on a pipeline as",
    "start": "2575510",
    "end": "2583550"
  },
  {
    "text": "well you can see on the left there enrichers can go right in the middle and then using that same pipeline we can",
    "start": "2583550",
    "end": "2590240"
  },
  {
    "text": "plug in filters and lots of other kind of event oriented concepts and the pipeline kind of looks like it's a fixed",
    "start": "2590240",
    "end": "2596570"
  },
  {
    "text": "topology but you can chain pipelines together do all kinds of them event processing type things like you can send",
    "start": "2596570",
    "end": "2602660"
  },
  {
    "text": "the output of a logging pipeline to our X and then do some kind of analysis say windowing or otherwise like rate",
    "start": "2602660",
    "end": "2608990"
  },
  {
    "text": "limiting and then pass the events into another logging pipeline that might dispatch the sinks so it's not really",
    "start": "2608990",
    "end": "2615560"
  },
  {
    "text": "enrichment that's the I guess the fundamental idea here but the notion that logging is an event pipeline rather",
    "start": "2615560",
    "end": "2622220"
  },
  {
    "text": "than being a kind of a big text formatting engine so that's really Sarah",
    "start": "2622220",
    "end": "2629359"
  },
  {
    "text": "log in a nutshell there's a lot more to it obviously if you want to get in there and learn learn about how its API is",
    "start": "2629359",
    "end": "2635640"
  },
  {
    "text": "work but if you if you focus on how",
    "start": "2635640",
    "end": "2640890"
  },
  {
    "text": "message templates make it possible to do human friendly as well as machine friendly logging without extra overhead",
    "start": "2640890",
    "end": "2646950"
  },
  {
    "text": "and enriches make it possible to handle the kind of micro service architecture",
    "start": "2646950",
    "end": "2652110"
  },
  {
    "text": "that you wrote last summer and now your lump is supporting and those two things",
    "start": "2652110",
    "end": "2658050"
  },
  {
    "text": "I think of the reasons that you use Sarah lobe so you can find Sarah log at 0 log net that's me up the top there and",
    "start": "2658050",
    "end": "2667850"
  },
  {
    "text": "there's the message templates that are also mentioned Ron github seek that I showed is them up there as well I think",
    "start": "2667850",
    "end": "2675060"
  },
  {
    "text": "we've got some time left for for a few questions as well ah and because I will forget I have",
    "start": "2675060",
    "end": "2681030"
  },
  {
    "text": "Sarah log stickers I have many Sarah log stickers so please come and come and see",
    "start": "2681030",
    "end": "2687180"
  },
  {
    "text": "me if you would like to grab one of those as well so I can take any questions yeah over there yeah okay yes",
    "start": "2687180",
    "end": "2702810"
  },
  {
    "text": "the question was with whether there's a way to do the opposite of enrichment which is kind of remove sensitive information so the same interface is",
    "start": "2702810",
    "end": "2708900"
  },
  {
    "text": "used for that process so if we get back to the example in richer you see it has",
    "start": "2708900",
    "end": "2714210"
  },
  {
    "text": "the ad property of absent method used to modify the log event we jumped through a",
    "start": "2714210",
    "end": "2719520"
  },
  {
    "text": "few hoops because we want to minimize the number of dictionaries we allocate when you use thread safe data structures",
    "start": "2719520",
    "end": "2725910"
  },
  {
    "text": "so ad property absent seems pretty worthy but that just adds a property there's another one called remove property if present that can do that",
    "start": "2725910",
    "end": "2732960"
  },
  {
    "text": "kind of work and I didn't show it in any of the demos but the capturing process",
    "start": "2732960",
    "end": "2738900"
  },
  {
    "text": "to Sarah log is also pluggable so by default you can use the little app",
    "start": "2738900",
    "end": "2743910"
  },
  {
    "text": "symbol to serialize a.net object just by walking its properties you can plug in what we call these structuring policies",
    "start": "2743910",
    "end": "2750300"
  },
  {
    "text": "there's a long long story about how that name came to be and and they will",
    "start": "2750300",
    "end": "2756150"
  },
  {
    "text": "actually also let you customize how objects are pulled apart and so we have a destructuring policy that handles",
    "start": "2756150",
    "end": "2762000"
  },
  {
    "text": "f-sharp types we have policies that handle things like Jason net dynamic objects and we can serialize",
    "start": "2762000",
    "end": "2768240"
  },
  {
    "text": "those into Sarah log data and that's also where we have a library that allows",
    "start": "2768240",
    "end": "2773759"
  },
  {
    "text": "you to mark sensitive properties with an attribute so that say if you've got an SSN property on on a DTO you can put a",
    "start": "2773759",
    "end": "2781380"
  },
  {
    "text": "put an attribute not logged on there and the policy will make sure that's excluded at the time that the that the",
    "start": "2781380",
    "end": "2786569"
  },
  {
    "text": "object is captured sorry yeah the sync",
    "start": "2786569",
    "end": "2797190"
  },
  {
    "text": "the the sync infrastructure that actually sends messages out to different destinations is really free of any kind",
    "start": "2797190",
    "end": "2804509"
  },
  {
    "text": "of like overarching policy like you just plug it in into the interface and you give an event to the thing and it can do",
    "start": "2804509",
    "end": "2810119"
  },
  {
    "text": "whatever it likes there's a pre-built sync abstract based class called",
    "start": "2810119",
    "end": "2815579"
  },
  {
    "text": "periodic batching sync which will go and batch up messages and then allow the",
    "start": "2815579",
    "end": "2821009"
  },
  {
    "text": "derives think to go and send them say to some network destination and the building one has a policy that does an",
    "start": "2821009",
    "end": "2827490"
  },
  {
    "text": "exponential back-off where if the M if the attempt to log fails it'll wait for",
    "start": "2827490",
    "end": "2832980"
  },
  {
    "text": "twice the timeout and then four times the timeout and get up to about ten minutes and then start dropping events",
    "start": "2832980",
    "end": "2837989"
  },
  {
    "text": "on the floor so Sarah log I really didn't want to deviate far from what I",
    "start": "2837989",
    "end": "2843180"
  },
  {
    "text": "knew and loved in log4net because only it's a it's been a successful strategy",
    "start": "2843180",
    "end": "2848759"
  },
  {
    "text": "for me I log from that has that kind of fail stop policy where nothing in the",
    "start": "2848759",
    "end": "2853859"
  },
  {
    "text": "login pipeline will bring your application down and Sarah log not only we don't we don't propagate errors back",
    "start": "2853859",
    "end": "2859349"
  },
  {
    "text": "out from Network calls we also try to make sure that we don't keep too much data in memory either so there's a",
    "start": "2859349",
    "end": "2865349"
  },
  {
    "text": "little bit of stuff in there you can you can customize it by plugging in wrappers as well that might wrap up a sink and a different air handling policy sky a few",
    "start": "2865349",
    "end": "2873299"
  },
  {
    "text": "options that just answer your question yeah great thanks yeah you couldn't it",
    "start": "2873299",
    "end": "2883170"
  },
  {
    "text": "wouldn't go anywhere yeah so if the events already been sent even's already happens let's say we have",
    "start": "2883170",
    "end": "2889829"
  },
  {
    "text": "a couple of logs that fly to a certain board what happens then the over gets",
    "start": "2889829",
    "end": "2897420"
  },
  {
    "text": "again we know the order I guess the",
    "start": "2897420",
    "end": "2904809"
  },
  {
    "text": "question was if say something like an order ID was only revealed after a few a few related events had already being",
    "start": "2904809",
    "end": "2910539"
  },
  {
    "text": "processed could that be retrospectively applied to the earlier events it may be",
    "start": "2910539",
    "end": "2917019"
  },
  {
    "text": "possible if you if you did something custom in the sink infrastructure there's an idea that has been floated a few times called kind of transactional",
    "start": "2917019",
    "end": "2923380"
  },
  {
    "text": "logging where we buffer log events as we go at the debug level say and we just throw them away",
    "start": "2923380",
    "end": "2928569"
  },
  {
    "text": "unless an error happens in which case we flush the hole up through Sarah log doesn't implement that the trick to",
    "start": "2928569",
    "end": "2934390"
  },
  {
    "text": "implement what you're suggesting right now would just be to come up with say some kind of good operation ID and then",
    "start": "2934390",
    "end": "2939489"
  },
  {
    "text": "you would log that on all of the related events and use the order ID to surf backwards towards the the the built in",
    "start": "2939489",
    "end": "2946959"
  },
  {
    "text": "the operation ID perhaps okay yeah cool right so yeah yeah this this is exactly",
    "start": "2946959",
    "end": "2969400"
  },
  {
    "text": "yeah this is this is one of the core things that I think drove me to start working on Sarah log and it's gotten",
    "start": "2969400",
    "end": "2976179"
  },
  {
    "text": "stronger over the course of we went through the dotnet core shift that everybody else I think has gone through",
    "start": "2976179",
    "end": "2981699"
  },
  {
    "text": "in the dotnet library space and we also we really pared down the core of Sarah log in that process the Coursera log DLL",
    "start": "2981699",
    "end": "2987670"
  },
  {
    "text": "has only got a few types for handling they're kind of restructuring and capturing kind of enrichment things and",
    "start": "2987670",
    "end": "2994869"
  },
  {
    "text": "we've tried to keep things like the file based sinks which tend to grow until they become less complex as databases in",
    "start": "2994869",
    "end": "3002429"
  },
  {
    "text": "separate packages and there I think in all these cases we've tried to keep options open so that rather than try and",
    "start": "3002429",
    "end": "3009869"
  },
  {
    "text": "make one set of sinks do everything we try and keep them simple enough that if someone wants the file logger to do",
    "start": "3009869",
    "end": "3016799"
  },
  {
    "text": "something we don't do they could if they're prepared to spend the effort just going to fork it and create an alternative and there's only a small amount of codes",
    "start": "3016799",
    "end": "3022590"
  },
  {
    "text": "have to modify but yeah I've seen that phenomenon too it's a pretty strong guiding principle for how we organize the project because I see that the the",
    "start": "3022590",
    "end": "3030000"
  },
  {
    "text": "trajectory of vlogging libraries does tend to really slow as they start to get more complex yeah but thanks for",
    "start": "3030000",
    "end": "3036330"
  },
  {
    "text": "question I was a that's an interesting observation too yeah and oh yeah",
    "start": "3036330",
    "end": "3042470"
  },
  {
    "text": "class name and line number are um very hard to it is plot there is a way to do",
    "start": "3048200",
    "end": "3054990"
  },
  {
    "text": "it in fact if I have a chance to tattoo after this I can sketch some code it",
    "start": "3054990",
    "end": "3060150"
  },
  {
    "text": "requires you to do a little bit extra work each time you write a log statement though but but yeah there is a trick for",
    "start": "3060150",
    "end": "3065940"
  },
  {
    "text": "doing it unfortunately with c-sharp you can choose either to have a variable number of arguments or you can choose to",
    "start": "3065940",
    "end": "3071760"
  },
  {
    "text": "get the class name and line number pass through to a method and so several log like many others chooses the variable",
    "start": "3071760",
    "end": "3077820"
  },
  {
    "text": "number of arguments but it's um it's been that has been raised a few times and there is there is a hack for making it work so we happy to help with that",
    "start": "3077820",
    "end": "3084000"
  },
  {
    "text": "one any other questions we have some time yeah at least at least is good yeah",
    "start": "3084000",
    "end": "3093810"
  },
  {
    "text": "I mean Sarah log has been built with it",
    "start": "3093810",
    "end": "3100560"
  },
  {
    "text": "puts the quality of the log data first and then when it comes to performance then the biggest focus we have on",
    "start": "3100560",
    "end": "3106230"
  },
  {
    "text": "performance is performance when the logger has turned off because that's probably the most critical performance",
    "start": "3106230",
    "end": "3111330"
  },
  {
    "text": "where you have see a debug statement in a tight loop and you turn that off at runtime and we try very hard not only to",
    "start": "3111330",
    "end": "3118410"
  },
  {
    "text": "make sure that that's as close to zero allocations as possible and generally we do have zero locations on that case but",
    "start": "3118410",
    "end": "3126150"
  },
  {
    "text": "we also do things like we don't use volatile Zoar memory barriers by default",
    "start": "3126150",
    "end": "3131310"
  },
  {
    "text": "so logging statements where the logger is off don't have any impact on a CPU cache that kind of thing so logging with",
    "start": "3131310",
    "end": "3137850"
  },
  {
    "text": "Sarah log off is about as fast as it gets we allocate a bit more as far as the event objects that go through the",
    "start": "3137850",
    "end": "3143700"
  },
  {
    "text": "pipeline then I think than other libraries but once you start to really",
    "start": "3143700",
    "end": "3149370"
  },
  {
    "text": "use any existing logging library to try to include correlation information that",
    "start": "3149370",
    "end": "3154589"
  },
  {
    "text": "Richmond scenario you end up having to allocate things like a dictionary to hold them we've got some more room to optimize in the future and some ideas",
    "start": "3154589",
    "end": "3161519"
  },
  {
    "text": "though so we're at least as good as anything in the space at the moment and I think we've got room to go better",
    "start": "3161519",
    "end": "3167690"
  },
  {
    "text": "definitely the intention yeah Josh oh",
    "start": "3167690",
    "end": "3173719"
  },
  {
    "text": "yeah I just format it and start all over again so yeah this errorlog project yeah",
    "start": "3175279",
    "end": "3189719"
  },
  {
    "text": "under the sarah log project i think there are about 50 somewhere close to about 50 and the rest it's hard to track",
    "start": "3189719",
    "end": "3197549"
  },
  {
    "text": "them all down but yeah there are a lot produced by people outside the project I think we have time for one more",
    "start": "3197549",
    "end": "3203960"
  },
  {
    "text": "potentially well good okay thanks you guys been an awesome audience thanks for",
    "start": "3203960",
    "end": "3209940"
  },
  {
    "text": "coming along really appreciate you taking the time and come say hi and",
    "start": "3209940",
    "end": "3215809"
  }
]