[
  {
    "start": "0",
    "end": "75000"
  },
  {
    "text": "hello everybody and welcome to room one at ndc oslo",
    "start": "2159",
    "end": "7279"
  },
  {
    "text": "in virtual my name's leila porter this session is tdd and the terminator an",
    "start": "7279",
    "end": "13759"
  },
  {
    "text": "introduction to test-driven development now just a quick note this is an introduction to tdd if you are",
    "start": "13759",
    "end": "21279"
  },
  {
    "text": "already a tdd whiz kid you may want to pop over to any of the other amazing talks happening",
    "start": "21279",
    "end": "28320"
  },
  {
    "text": "right now you've still got plenty of time if an introduction to test driven development isn't for you but if it is",
    "start": "28320",
    "end": "36160"
  },
  {
    "text": "then let's begin so as i said my name's leila porter welcome",
    "start": "36160",
    "end": "42879"
  },
  {
    "text": "to my home office my i am a microsoft mvp",
    "start": "42879",
    "end": "47920"
  },
  {
    "text": "uh i organize my local.net user group here in milton keynes uh which is about",
    "start": "47920",
    "end": "54640"
  },
  {
    "text": "60 miles north of london i love csharp and i am a senior developer evangelist",
    "start": "54640",
    "end": "61680"
  },
  {
    "text": "at twilio so if you've not heard of twilio we're just a cloud communications platform so",
    "start": "61680",
    "end": "67520"
  },
  {
    "text": "you feel free to find me on slack and ask me some questions about it if you wish",
    "start": "67520",
    "end": "73439"
  },
  {
    "text": "but you're probably asking yourself this question right now why tdd and the terminator",
    "start": "73439",
    "end": "81520"
  },
  {
    "start": "75000",
    "end": "278000"
  },
  {
    "text": "and that's a very good question and to answer that i need to take you back",
    "start": "81520",
    "end": "86960"
  },
  {
    "text": "to uh a previous job of mine this is quite a while ago now",
    "start": "86960",
    "end": "93280"
  },
  {
    "text": "and this was also at a communications company and we worked on my team worked",
    "start": "93280",
    "end": "99920"
  },
  {
    "text": "on a cloud platform that allowed carriers to manage communications and like their",
    "start": "99920",
    "end": "106560"
  },
  {
    "text": "rating and routing of telephony so it's quite a complicated system so we worked",
    "start": "106560",
    "end": "112159"
  },
  {
    "text": "on the platform that allowed them to manage it and uh we relied solely on a team of",
    "start": "112159",
    "end": "119759"
  },
  {
    "text": "six testers and by that i mean we didn't have a single unit test not one no integration tests",
    "start": "119759",
    "end": "128080"
  },
  {
    "text": "nothing we just about had uh uat testing which is user acceptance testing",
    "start": "128080",
    "end": "133840"
  },
  {
    "text": "um but everything was based on this this team of six testers that worked out",
    "start": "133840",
    "end": "141360"
  },
  {
    "text": "fine for me for a while and then after one particular release and our release cycles were sort of",
    "start": "141360",
    "end": "147120"
  },
  {
    "text": "once a year uh we got to the point where we had nine weeks",
    "start": "147120",
    "end": "154080"
  },
  {
    "text": "of regression bug fixing so just let that sink in nine weeks of development which was only",
    "start": "154080",
    "end": "161920"
  },
  {
    "text": "fixing regression bugs it was a bad time uh and at this bad time i",
    "start": "161920",
    "end": "169680"
  },
  {
    "text": "thought there had to be a better way of doing things surely this couldn't be the way that",
    "start": "169680",
    "end": "175760"
  },
  {
    "text": "quality software was written and that's when i started to research different ways of doing things",
    "start": "175760",
    "end": "181680"
  },
  {
    "text": "and i came across tdd or test driven development i was like yeah this sounds",
    "start": "181680",
    "end": "187200"
  },
  {
    "text": "right up my street definitely something i would like to watch oh and i've just",
    "start": "187200",
    "end": "193040"
  },
  {
    "text": "remembered if you're watching on youtube you can also watch on webex just remembered i was asked to say that and it just popped",
    "start": "193040",
    "end": "198879"
  },
  {
    "text": "into my head so this is also on webex so feel free to watch on there as well but anyway back to tdd",
    "start": "198879",
    "end": "206720"
  },
  {
    "text": "so i i thought this is a much better way of doing things i'm going to learn how to do tdd",
    "start": "206720",
    "end": "214159"
  },
  {
    "text": "or more to the point i'm going to attempt to learn because that's what it was uh i didn't",
    "start": "214159",
    "end": "220239"
  },
  {
    "text": "know where to start i didn't find tdd very accessible i felt the learning curve was really steep",
    "start": "220239",
    "end": "226799"
  },
  {
    "text": "i tried reading books that didn't help i tried watching youtube videos",
    "start": "226799",
    "end": "233439"
  },
  {
    "text": "and it was like magic happening on straight on screen i also watched pluralsight and",
    "start": "233439",
    "end": "240640"
  },
  {
    "text": "nothing really helped i was like i need something simple that i can build myself that will help",
    "start": "240640",
    "end": "246959"
  },
  {
    "text": "me relate to the issue and that's what i did i'm a fan of the terminator",
    "start": "246959",
    "end": "252400"
  },
  {
    "text": "movies so i created my own little tiny tdd terminator app",
    "start": "252400",
    "end": "259759"
  },
  {
    "text": "and i have rewritten that and revamped it a little bit and i'm going to share it with you in the aims that if",
    "start": "259759",
    "end": "267120"
  },
  {
    "text": "you're stuck on how to get started with tdd or it just doesn't sink in that this may help you",
    "start": "267120",
    "end": "272720"
  },
  {
    "text": "just as it did me so let's have a look at some tdd successes",
    "start": "272720",
    "end": "280400"
  },
  {
    "start": "278000",
    "end": "675000"
  },
  {
    "text": "and the first one of those is acceptance criteria now this is where you speak to the project",
    "start": "280400",
    "end": "287520"
  },
  {
    "text": "or product owner or your project manager and you really get them to define what the",
    "start": "287520",
    "end": "294960"
  },
  {
    "text": "requirements for each feature are and what does this mean really well it",
    "start": "294960",
    "end": "300880"
  },
  {
    "text": "means that you don't have any wishy-washy requirements and you know exactly what your code should do",
    "start": "300880",
    "end": "307600"
  },
  {
    "text": "and if you know exactly what your code should do then it's very easy to write tests for it and so that's the",
    "start": "307600",
    "end": "315120"
  },
  {
    "text": "first thing and this means that you have a greater understanding of what your code",
    "start": "315120",
    "end": "320320"
  },
  {
    "text": "should do and once you've written your code you're not going to have your product manager",
    "start": "320320",
    "end": "326400"
  },
  {
    "text": "or product owner come up to you and say well i didn't mean for it to do that i actually meant for it to do x y and z",
    "start": "326400",
    "end": "333120"
  },
  {
    "text": "so you save time and everybody has a clear understanding of what should be happening",
    "start": "333120",
    "end": "341039"
  },
  {
    "text": "so the next one focus now as developers we are prone to adhd and",
    "start": "341039",
    "end": "349840"
  },
  {
    "text": "there's a term called shaving the yak and i've got the link to a good blog post on it at the end of",
    "start": "349840",
    "end": "355600"
  },
  {
    "text": "the talk so don't feel like you have to rush off and google it now of course you could but uh the phrase shaving the yak and",
    "start": "355600",
    "end": "362720"
  },
  {
    "text": "once you know what it means you'll be like yes that's exactly what i do and what a lot of us do is right i",
    "start": "362720",
    "end": "369680"
  },
  {
    "text": "need to implement this feature but hang on to implement this feature i need to write",
    "start": "369680",
    "end": "374800"
  },
  {
    "text": "this bit of code oh but to write this bit of code i need to update the database and so on and so forth and you",
    "start": "374800",
    "end": "380000"
  },
  {
    "text": "just get on this endless to-do list and you never actually get to do the thing that you really wanted to",
    "start": "380000",
    "end": "385360"
  },
  {
    "text": "do so focus and this means that",
    "start": "385360",
    "end": "390720"
  },
  {
    "text": "you have distinct pieces of code functionality let's call it and you know",
    "start": "390720",
    "end": "396960"
  },
  {
    "text": "exactly what you need to do to complete this little test so you write a test",
    "start": "396960",
    "end": "402560"
  },
  {
    "text": "or a collection of tests and you say oh okay if i fulfill this bit of code that's it",
    "start": "402560",
    "end": "409199"
  },
  {
    "text": "i keep focused all i have to do is write some code that fulfills this function and passes this test so you",
    "start": "409199",
    "end": "415120"
  },
  {
    "text": "don't go off anywhere else and looking at other things you keep your focus so",
    "start": "415120",
    "end": "420160"
  },
  {
    "text": "that's really helpful so the next thing we have is interfaces and",
    "start": "420160",
    "end": "425599"
  },
  {
    "text": "you may be thinking well what's that got to do with tdd now i'm i'm a practical",
    "start": "425599",
    "end": "431919"
  },
  {
    "text": "uh person so i have a very pragmatic approach to tdd rather than dogmatic and a lot of people",
    "start": "431919",
    "end": "438400"
  },
  {
    "text": "you'll see and will be like no you just write the bare minimum of code i like to write interfaces for my tdd",
    "start": "438400",
    "end": "445360"
  },
  {
    "text": "they're a coding contract and when i'm working in a team i can actually say to clara",
    "start": "445360",
    "end": "451919"
  },
  {
    "text": "my teammate here's my interface this is what i expect my code to fulfill",
    "start": "451919",
    "end": "458240"
  },
  {
    "text": "and if you need to get on with your code this is what my code will fulfill even",
    "start": "458240",
    "end": "463440"
  },
  {
    "text": "though you haven't written any of the functionality or the implementation of that interface because you've written your tests",
    "start": "463440",
    "end": "469360"
  },
  {
    "text": "and you know that your tests are going to fulfill that interface okay so this leads on to a",
    "start": "469360",
    "end": "475840"
  },
  {
    "text": "really useful aspect of tdd and that's asynchronous development and",
    "start": "475840",
    "end": "482319"
  },
  {
    "text": "that means that i am not dependent on bob who's working on a particular",
    "start": "482319",
    "end": "489199"
  },
  {
    "text": "feature to finish finish his feature before i can start working on mine now at the old company where i used to",
    "start": "489199",
    "end": "495759"
  },
  {
    "text": "work um we couldn't go and just pick something out the back clock it was",
    "start": "495759",
    "end": "501360"
  },
  {
    "text": "really oh well actually that needs this story to be finished first",
    "start": "501360",
    "end": "506639"
  },
  {
    "text": "and oh i need to make sure that that's changed and that's implemented so you're constantly picking through the backlog",
    "start": "506639",
    "end": "512240"
  },
  {
    "text": "and seeing what you actually can do rather than just grabbing one that fits your time frame",
    "start": "512240",
    "end": "518240"
  },
  {
    "text": "and your interest or your skill set and getting on with it so having interfaces and proper",
    "start": "518240",
    "end": "525279"
  },
  {
    "text": "small pieces of code and all of the above will help you be an asynchronous development team",
    "start": "525279",
    "end": "533279"
  },
  {
    "text": "and because you're focused and you have coding contracts you have cleaner code because",
    "start": "533279",
    "end": "539519"
  },
  {
    "text": "you're only writing enough code to pass a test you're not going off and",
    "start": "539519",
    "end": "544720"
  },
  {
    "text": "shaving that yak and doing everything else that you think you need to do you are simply writing enough code to",
    "start": "544720",
    "end": "551360"
  },
  {
    "text": "pass the test so you don't get bloat or unnecessary code or code where it shouldn't be",
    "start": "551360",
    "end": "557040"
  },
  {
    "text": "you just get lovely clean code this one is one of my favorites safe",
    "start": "557040",
    "end": "564080"
  },
  {
    "text": "refactoring now remember those nine weeks of fixing regression bugs i wouldn't have had it",
    "start": "564080",
    "end": "569200"
  },
  {
    "text": "if we had tests because if as soon as you regress your code",
    "start": "569200",
    "end": "575760"
  },
  {
    "text": "your tests don't pass so you get an idea straight away that you have made a regression bug and you don't have",
    "start": "575760",
    "end": "583200"
  },
  {
    "text": "to wait till release day to find out that by working in a particular area you've broken a",
    "start": "583200",
    "end": "588880"
  },
  {
    "text": "whole another area so safe refactoring is a massive factor for tests i will just put",
    "start": "588880",
    "end": "596560"
  },
  {
    "text": "that caveat in some of these things are not just restricted to test driven",
    "start": "596560",
    "end": "603440"
  },
  {
    "text": "development but unit testing in general so just having unit tests allows you to have safe refactoring",
    "start": "603440",
    "end": "611519"
  },
  {
    "text": "so that definitely leads on to fewer bugs which everybody loves fewer",
    "start": "611519",
    "end": "618079"
  },
  {
    "text": "bugs and of course if you have fewer bugs you're spending less time fixing bugs and more time",
    "start": "618079",
    "end": "625360"
  },
  {
    "text": "implementing new features and and developing a better product so you get increasing returns which makes everybody",
    "start": "625360",
    "end": "632880"
  },
  {
    "text": "happy and the final point i'm going to raise is living documentation now",
    "start": "632880",
    "end": "640880"
  },
  {
    "text": "tests are not a replacement for documentation however they are a really",
    "start": "640880",
    "end": "648240"
  },
  {
    "text": "good start if you have a new developer joining your team if they go and read all of your tests",
    "start": "648240",
    "end": "653839"
  },
  {
    "text": "which should have descriptive names they can understand what your code is",
    "start": "653839",
    "end": "659040"
  },
  {
    "text": "meant to do and you can also build your actual documentation from your",
    "start": "659040",
    "end": "665040"
  },
  {
    "text": "tests so it really helps in so many different ways having tests",
    "start": "665040",
    "end": "670640"
  },
  {
    "text": "okay excuse me so let's go back to the terminator",
    "start": "670640",
    "end": "678880"
  },
  {
    "start": "675000",
    "end": "756000"
  },
  {
    "text": "and have a look at how we apply some of these things to our terminator app and the very first thing we want to look",
    "start": "678880",
    "end": "685920"
  },
  {
    "text": "at is the process and what is the first thing in our process well",
    "start": "685920",
    "end": "694000"
  },
  {
    "text": "that's gathering the requirements let's have a look at how we're going to gather our requirements",
    "start": "694000",
    "end": "700480"
  },
  {
    "text": "for our terminator app okay so we have a boy on",
    "start": "700480",
    "end": "706880"
  },
  {
    "text": "a motorbike and we're having a look at him we're investigating him",
    "start": "706880",
    "end": "712000"
  },
  {
    "text": "further and we've actually identified him positively as john connor and we we really need to",
    "start": "712000",
    "end": "720079"
  },
  {
    "text": "investigate john connor further because he's a target so from that we can derive a couple of",
    "start": "720079",
    "end": "726880"
  },
  {
    "text": "requirements and the first one is scan subjects and determine if they require",
    "start": "726880",
    "end": "732160"
  },
  {
    "text": "further investigation and the second one is investigate subjects of interest and",
    "start": "732160",
    "end": "737839"
  },
  {
    "text": "determine if they are indeed the target and then terminate them we're going to focus on the top one scan",
    "start": "737839",
    "end": "745600"
  },
  {
    "text": "subjects and determine if they require further investigation so that seems like a really nice",
    "start": "745600",
    "end": "751200"
  },
  {
    "text": "um requirement to start with nice and and succinct as well",
    "start": "751200",
    "end": "757440"
  },
  {
    "start": "756000",
    "end": "852000"
  },
  {
    "text": "so what we need to do now is start with failing tests and these failing tests",
    "start": "757440",
    "end": "764639"
  },
  {
    "text": "um mean that you haven't got any code written because you can't pass test if there's no code so it's a",
    "start": "764639",
    "end": "771120"
  },
  {
    "text": "really good start to test driven development um",
    "start": "771120",
    "end": "776160"
  },
  {
    "text": "and this is important when you write tests after coding you may be writing them to fit your code",
    "start": "776160",
    "end": "781839"
  },
  {
    "text": "and not your requirements and what i mean by this is imagine you've written an api endpoint and it",
    "start": "781839",
    "end": "789760"
  },
  {
    "text": "returns 200 and content and then you go and write a test",
    "start": "789760",
    "end": "798160"
  },
  {
    "text": "that tests to see if your code returns 200 and some content your tests pass",
    "start": "798160",
    "end": "805680"
  },
  {
    "text": "everything you think is hunky-dory but actually when you go and look at the documentation it's not meant to return 200 and content",
    "start": "805680",
    "end": "812639"
  },
  {
    "text": "it's just supposed to return a 204 and your tests have passed and any",
    "start": "812639",
    "end": "818800"
  },
  {
    "text": "thing you change will fail your test so you know you think everything is okay but it doesn't actually fit your",
    "start": "818800",
    "end": "824720"
  },
  {
    "text": "requirements so unless you're cross-checking your tests with your requirements",
    "start": "824720",
    "end": "830480"
  },
  {
    "text": "you could be writing them to fit your code now if you write your tests first the",
    "start": "830480",
    "end": "835760"
  },
  {
    "text": "only thing you've got to go on is the requirements so you would look at your requirements go right this has to return to 204 and you write the tests",
    "start": "835760",
    "end": "842720"
  },
  {
    "text": "to check that it's returning a 204 so that's a really valid reason for doing",
    "start": "842720",
    "end": "850240"
  },
  {
    "text": "tdd okay i like to use the red green refactor",
    "start": "850240",
    "end": "855760"
  },
  {
    "start": "852000",
    "end": "875000"
  },
  {
    "text": "pattern and what that means is we write a failing test and we write enough code to get the test",
    "start": "855760",
    "end": "863120"
  },
  {
    "text": "pass so the failing test is red when your test pass it goes green and then we can refactor",
    "start": "863120",
    "end": "870959"
  },
  {
    "text": "and that's a really nice iterative process that you can keep doing and we're going",
    "start": "870959",
    "end": "876240"
  },
  {
    "start": "875000",
    "end": "945000"
  },
  {
    "text": "to go over to code and have a look at what that looks like so",
    "start": "876240",
    "end": "881680"
  },
  {
    "text": "let's go this way and here i have a simple",
    "start": "881680",
    "end": "888240"
  },
  {
    "text": "application this is just built off a template it's nothing fancy",
    "start": "888240",
    "end": "895040"
  },
  {
    "text": "and i do have the github repo for this as well which you can have the links at the end of the talk um i will just say uh i'm",
    "start": "895040",
    "end": "902320"
  },
  {
    "text": "not checking slack or anything if you have questions please just uh save them for the end and there'll be time at the end for me",
    "start": "902320",
    "end": "908880"
  },
  {
    "text": "to go through and answer them so let's have a look at what i've got in this code the first thing we're going to",
    "start": "908880",
    "end": "915600"
  },
  {
    "text": "look at is this interface called i subject and this has one property called",
    "start": "915600",
    "end": "920959"
  },
  {
    "text": "subject name i have an implementation of that called subject",
    "start": "920959",
    "end": "927360"
  },
  {
    "text": "and pretty straightforward and then i have an eye subject analyzer now if you remember",
    "start": "927360",
    "end": "933120"
  },
  {
    "text": "our requirement was should we go and investigate a person further so we've got this being",
    "start": "933120",
    "end": "939440"
  },
  {
    "text": "a bull yes or no and investigate further and we're going to pass them in a subject",
    "start": "939440",
    "end": "945920"
  },
  {
    "start": "945000",
    "end": "1033000"
  },
  {
    "text": "and over here we have our test class now i use n-unit",
    "start": "945920",
    "end": "952399"
  },
  {
    "text": "in this particular instance i i like n unit you could use x unit and there are many",
    "start": "952399",
    "end": "959199"
  },
  {
    "text": "arguments for using x unit because it's more maintained and it's more modern you can of course",
    "start": "959199",
    "end": "965839"
  },
  {
    "text": "use the microsoft testing framework as well uh i've used all of them i just happen",
    "start": "965839",
    "end": "972000"
  },
  {
    "text": "to like n unit and i've put this one in here x unit is very similar uh just slightly different decorators",
    "start": "972000",
    "end": "977759"
  },
  {
    "text": "but they all do roughly the same thing so what we have is test fixture here is",
    "start": "977759",
    "end": "984880"
  },
  {
    "text": "part of uh n unit and it's saying this is going to be a test class and once we go in here you'll see i have",
    "start": "984880",
    "end": "991040"
  },
  {
    "text": "this private of i subject analyzer so that's this interface here and i've called that",
    "start": "991040",
    "end": "999120"
  },
  {
    "text": "sut and that stands for subject under test calling the class that you're testing",
    "start": "999120",
    "end": "1006399"
  },
  {
    "text": "something such as sut differentiates it from many other dependencies so",
    "start": "1006399",
    "end": "1011600"
  },
  {
    "text": "perhaps this class subject analyzer is dependent on multiple classes",
    "start": "1011600",
    "end": "1019040"
  },
  {
    "text": "if i have all of those in here because i'll need them and they've all got their class names by",
    "start": "1019040",
    "end": "1025520"
  },
  {
    "text": "calling this sct it just keeps it clear that this is the class that i'm testing so it's just",
    "start": "1025520",
    "end": "1030880"
  },
  {
    "text": "it makes life easier next uh we have this setup and this is where",
    "start": "1030880",
    "end": "1037520"
  },
  {
    "text": "i can set anything up that i want to use throughout all of my test methods",
    "start": "1037520",
    "end": "1042880"
  },
  {
    "text": "you can set stuff up in each test method but if it's something you're going to be using again and again",
    "start": "1042880",
    "end": "1048240"
  },
  {
    "text": "it's nice to set it up at the beginning and this is where the frameworks differ slightly i particularly like this way of doing it",
    "start": "1048240",
    "end": "1054960"
  },
  {
    "text": "with n unit so what we need to do is actually create an instance of s-u-t so we'll come here s-u-t is",
    "start": "1054960",
    "end": "1062480"
  },
  {
    "text": "equal to mu and i don't have an implementation of i subject analyzer",
    "start": "1062480",
    "end": "1068880"
  },
  {
    "text": "so all right we need to create one of those so let's come over here",
    "start": "1068880",
    "end": "1074160"
  },
  {
    "text": "to services and i'm going to add one in here so we'll have a new file and we'll call that",
    "start": "1074160",
    "end": "1081919"
  },
  {
    "text": "we won't have a new file we'll have a new class and we're going to call that subject analyzer um i often get asked what ide",
    "start": "1081919",
    "end": "1090000"
  },
  {
    "text": "i'm using i'm using uh jetbrains um i happen to like this as you may have",
    "start": "1090000",
    "end": "1097200"
  },
  {
    "text": "noticed i'm on a mac and i find it's really good for development on a mac um it's very",
    "start": "1097200",
    "end": "1103760"
  },
  {
    "text": "similar to visual studio with resharper on i like the testing",
    "start": "1103760",
    "end": "1109280"
  },
  {
    "text": "framework from resharper as well so um i just happen to use it but it doesn't make any difference",
    "start": "1109280",
    "end": "1114960"
  },
  {
    "text": "to what we're doing so i've now got this class called subject analyzer and it implements isubject",
    "start": "1114960",
    "end": "1121280"
  },
  {
    "text": "analyzer but it doesn't really implement it because we haven't said implement missing members so what",
    "start": "1121280",
    "end": "1127679"
  },
  {
    "text": "we do when we get an implemented interface is we'll get something that looks like this",
    "start": "1127679",
    "end": "1133679"
  },
  {
    "text": "and it says throw new system not implemented exception and that's absolutely fine we don't need",
    "start": "1133679",
    "end": "1139919"
  },
  {
    "text": "to change any code yet because we haven't written a test yet so leave it like this let me zoom in",
    "start": "1139919",
    "end": "1146559"
  },
  {
    "text": "a little bit for you and let's go back to our tests",
    "start": "1146559",
    "end": "1152000"
  },
  {
    "start": "1151000",
    "end": "1373000"
  },
  {
    "text": "so now that we've got the implementation i can go new subject analyzer and this is now ready for us",
    "start": "1152000",
    "end": "1159679"
  },
  {
    "text": "to use and test so down here i've got our requirements",
    "start": "1159679",
    "end": "1165679"
  },
  {
    "text": "scan subjects and determine if they require further investigation and so let's go and write",
    "start": "1165679",
    "end": "1173679"
  },
  {
    "text": "our first test and that's going to be a public void",
    "start": "1173679",
    "end": "1179120"
  },
  {
    "text": "and what we're going to say is terminator should uh determine",
    "start": "1179120",
    "end": "1185760"
  },
  {
    "text": "to investigate let's go look for sarah connor and let's",
    "start": "1185760",
    "end": "1191280"
  },
  {
    "text": "have investigate woman further okay so",
    "start": "1191280",
    "end": "1197200"
  },
  {
    "text": "just a note on naming of your test methods",
    "start": "1197200",
    "end": "1203440"
  },
  {
    "text": "many people will delimit each word like so with an underscore i find that",
    "start": "1203440",
    "end": "1210159"
  },
  {
    "text": "harder but you may prefer it um but what i like to do is have what what we're doing what the thing is",
    "start": "1210159",
    "end": "1217760"
  },
  {
    "text": "what it should do and then sort of the end part so i like to divide it up into",
    "start": "1217760",
    "end": "1223840"
  },
  {
    "text": "three parts and you'll see as i name more methods what that looks like and what we need to do is make this",
    "start": "1223840",
    "end": "1230960"
  },
  {
    "text": "discoverable to our testing framework so this is with another decorator and this is called",
    "start": "1230960",
    "end": "1236240"
  },
  {
    "text": "test and you can see now i've got this little play button here and you can see it's going to run",
    "start": "1236240",
    "end": "1242159"
  },
  {
    "text": "my tests and we'll get to that in a moment so there's a few things that we need to",
    "start": "1242159",
    "end": "1247520"
  },
  {
    "text": "think about when we write a test and that is we need to arrange",
    "start": "1247520",
    "end": "1253520"
  },
  {
    "text": "we need to act and then we need to assert and",
    "start": "1253520",
    "end": "1259760"
  },
  {
    "text": "so the action is going to be actually the test method so that is going to be var result is equal to",
    "start": "1259760",
    "end": "1269120"
  },
  {
    "text": "s ut dot investigate further",
    "start": "1269120",
    "end": "1274480"
  },
  {
    "text": "and you can see that we've got a red squiggle here which means we need something in here and that's",
    "start": "1275440",
    "end": "1280640"
  },
  {
    "text": "going to go into our range if we go look here it wants a subject",
    "start": "1280640",
    "end": "1286559"
  },
  {
    "text": "so let's create a subject bar subject is equal to a new subject",
    "start": "1286559",
    "end": "1293919"
  },
  {
    "text": "and let's initialize it here as well and bring in the missing usings and that has a subject name and",
    "start": "1293919",
    "end": "1300080"
  },
  {
    "text": "let's call that woman because we're going to look for a woman as it says up here in our test method and now we can pass",
    "start": "1300080",
    "end": "1308480"
  },
  {
    "text": "that subject in and i happen to know that if we're looking",
    "start": "1308480",
    "end": "1315679"
  },
  {
    "text": "for people to investigate further because we're looking for sarah connor we need to investigate a woman we see",
    "start": "1315679",
    "end": "1322400"
  },
  {
    "text": "further in case she's sarah connor so then we want to go result dot i use fluent",
    "start": "1322400",
    "end": "1329120"
  },
  {
    "text": "assertions so that's going to be should uh be true",
    "start": "1329120",
    "end": "1334480"
  },
  {
    "text": "and i quite like flown assertions because they're nice and readable they're spewing that up a little bit um but you don't have to you can use the",
    "start": "1334480",
    "end": "1341120"
  },
  {
    "text": "built-in um assertions that we're going to have a look at in a",
    "start": "1341120",
    "end": "1346240"
  },
  {
    "text": "a little bit we'll we'll use one of those so result thought should be true so very quickly someone can come along and",
    "start": "1346240",
    "end": "1352159"
  },
  {
    "text": "go terminator should determine to investigate women further and we can see what this is so let's go",
    "start": "1352159",
    "end": "1357760"
  },
  {
    "text": "and run our test now i'm going to run them from up here first because it's the first time we're doing them and i want it to go through",
    "start": "1357760",
    "end": "1363600"
  },
  {
    "text": "and of course it wants to do that because i clicked run rather than tests",
    "start": "1363600",
    "end": "1368960"
  },
  {
    "text": "run unit tests",
    "start": "1368960",
    "end": "1374000"
  },
  {
    "start": "1373000",
    "end": "1726000"
  },
  {
    "text": "so we've now got our testing um window up here and you can see",
    "start": "1374000",
    "end": "1380720"
  },
  {
    "text": "everything's red so we've got our red part of our red green refactor which is perfect and you can",
    "start": "1380720",
    "end": "1386240"
  },
  {
    "text": "see here it's looking at the classes if i had more classes they'd all be listed here",
    "start": "1386240",
    "end": "1391280"
  },
  {
    "text": "and then inside the individual methods and it tells you what's wrong if i uh move that across",
    "start": "1391280",
    "end": "1396799"
  },
  {
    "text": "you can see that it says it's not implemented which is exactly what we would expect",
    "start": "1396799",
    "end": "1402320"
  },
  {
    "text": "so let's go back to our class and remember our number one rule",
    "start": "1402320",
    "end": "1410559"
  },
  {
    "text": "we only want to implement enough code to get our test to pass all right",
    "start": "1410559",
    "end": "1417440"
  },
  {
    "text": "now as i said i can't see slack but feel free to all scream it out and slack if you know the answer",
    "start": "1417440",
    "end": "1424080"
  },
  {
    "text": "and um so the simplest thing we can write here to",
    "start": "1424080",
    "end": "1430080"
  },
  {
    "text": "get the test to pass is return truth and that was",
    "start": "1430080",
    "end": "1438480"
  },
  {
    "text": "a massive aha moment to me okay i was like that can't be right but",
    "start": "1438480",
    "end": "1445520"
  },
  {
    "text": "if we come back now and if i run all the tests down here",
    "start": "1445520",
    "end": "1450960"
  },
  {
    "text": "we'll let that do its thing green and that was like an amazing aha moment",
    "start": "1450960",
    "end": "1457200"
  },
  {
    "text": "for me that i just write return true and that's the start of tdd",
    "start": "1457200",
    "end": "1462320"
  },
  {
    "text": "so let's get on so uh let me zoom out a little bit here we're",
    "start": "1462320",
    "end": "1467520"
  },
  {
    "text": "going to go and write another method let's think about if we see a t-1000",
    "start": "1467520",
    "end": "1474080"
  },
  {
    "text": "i'm sorry if you're not into the terminator movies you're going to get a lot of jargon that you might not",
    "start": "1474080",
    "end": "1479360"
  },
  {
    "text": "understand um so if we see a t-1000",
    "start": "1479360",
    "end": "1484720"
  },
  {
    "text": "let's think we're in terminator 1 now we're hunting john and sarah connor so is a t-1000 i know i've managed the",
    "start": "1484720",
    "end": "1490880"
  },
  {
    "text": "movies together but forgive me and um we're not interested in them because they're on the same side",
    "start": "1490880",
    "end": "1496960"
  },
  {
    "text": "as us so let's have a look terminator should determine not to investigate further and i'm not",
    "start": "1496960",
    "end": "1503279"
  },
  {
    "text": "worried what this particular thing is we're going to say a t-1000",
    "start": "1503279",
    "end": "1509200"
  },
  {
    "text": "i've passed that in and now we're just going to update this to be false because we're not interested in",
    "start": "1509200",
    "end": "1515039"
  },
  {
    "text": "investigating a t-1000 all right let's run our code actually if i run them all we can have a",
    "start": "1515039",
    "end": "1521440"
  },
  {
    "text": "look at what we've got down here you can see it's already discovered that second test and that one's failed so let's go and",
    "start": "1521440",
    "end": "1528480"
  },
  {
    "text": "write just enough code to get our test to pass so let's come back in here what i'm",
    "start": "1528480",
    "end": "1534799"
  },
  {
    "text": "going to do is just cut that and if subject dot",
    "start": "1534799",
    "end": "1539840"
  },
  {
    "text": "subject name is equal to woman or a lovely bit of string matching here",
    "start": "1539840",
    "end": "1545760"
  },
  {
    "text": "and will return true otherwise we'll return false",
    "start": "1545760",
    "end": "1551679"
  },
  {
    "text": "and i will just say that i hope nobody ever programs a terminator by string",
    "start": "1552000",
    "end": "1557440"
  },
  {
    "text": "matching okay we're not going to do that um but it works for demonstration",
    "start": "1557440",
    "end": "1563760"
  },
  {
    "text": "purposes so now we've got this let's run our tests again",
    "start": "1563760",
    "end": "1571039"
  },
  {
    "text": "boom they're all green you're liking this let's go back over here so now we've",
    "start": "1571039",
    "end": "1578240"
  },
  {
    "text": "we've seen john connor so that's a boy we want to investigate further so i could go",
    "start": "1578240",
    "end": "1583440"
  },
  {
    "text": "and copy this whole method again and and paste it and do it but it's going to get a little bit tedious",
    "start": "1583440",
    "end": "1589760"
  },
  {
    "text": "so what we're going to do is update this method to take multiple test",
    "start": "1589760",
    "end": "1595760"
  },
  {
    "text": "cases so let's start by renaming it who should we investigate further",
    "start": "1595760",
    "end": "1602080"
  },
  {
    "text": "i'm going to change this decorator to be a test case and in here we're going to say a woman",
    "start": "1602080",
    "end": "1609200"
  },
  {
    "text": "and we can add as many test cases as we want to here",
    "start": "1609200",
    "end": "1615919"
  },
  {
    "text": "and you can have loads of them and immediately if you notice down here in",
    "start": "1615919",
    "end": "1620960"
  },
  {
    "text": "our test explorer i've now got this set of sub",
    "start": "1620960",
    "end": "1626080"
  },
  {
    "text": "tests under this one terminator should determine to investigate further so we've got two tests in there",
    "start": "1626080",
    "end": "1632159"
  },
  {
    "text": "boy and woman we've not run those tests yet so they've got question marks and how we get those in is we add them",
    "start": "1632159",
    "end": "1640159"
  },
  {
    "text": "as arguments so string and we'll call this one subject name and then what we need to do",
    "start": "1640159",
    "end": "1647520"
  },
  {
    "text": "is just where we've got woman down here we'll just say that subject name is equal to subject name",
    "start": "1647520",
    "end": "1653279"
  },
  {
    "text": "and these are all going to be true okay and we'll come to how we can update this further",
    "start": "1653279",
    "end": "1659520"
  },
  {
    "text": "and back in slides so let's go and run all of our tests",
    "start": "1659520",
    "end": "1668960"
  },
  {
    "text": "and you can see the one for boy has failed so let's go back now you're probably",
    "start": "1668960",
    "end": "1674559"
  },
  {
    "text": "going oh why didn't you just do the switch statement here or something but that would break our rules we're only",
    "start": "1674559",
    "end": "1680960"
  },
  {
    "text": "writing enough code to pass our tests and so i'm just going",
    "start": "1680960",
    "end": "1686000"
  },
  {
    "text": "to do a really lovely and this is gorgeous isn't it folks",
    "start": "1686000",
    "end": "1692159"
  },
  {
    "text": "don't worry we will refactor um so that let's run it's just enough code",
    "start": "1692159",
    "end": "1699520"
  },
  {
    "text": "to get my tests to pass hopefully and there so you can see",
    "start": "1699520",
    "end": "1706320"
  },
  {
    "text": "really clearly how we've quickly started to build up code um i'm not saying that this is",
    "start": "1706320",
    "end": "1712080"
  },
  {
    "text": "particularly nice code um but we've got two tests",
    "start": "1712080",
    "end": "1717840"
  },
  {
    "text": "and we've written our code so let's now go back to the slides and see what we",
    "start": "1717840",
    "end": "1724000"
  },
  {
    "text": "can do further so i want to go this way and let's continue",
    "start": "1724000",
    "end": "1730960"
  },
  {
    "start": "1726000",
    "end": "1793000"
  },
  {
    "text": "so now that we've got the basics in there and we've got our tests we can start to safely refactor and this",
    "start": "1730960",
    "end": "1738080"
  },
  {
    "text": "is really key and um let's go and have a look at what we've got so",
    "start": "1738080",
    "end": "1743840"
  },
  {
    "text": "imagine now i've added in um tests for a girl and a man we want to go and",
    "start": "1743840",
    "end": "1748960"
  },
  {
    "text": "investigate them all so here's my lovely stack of if statements",
    "start": "1748960",
    "end": "1755279"
  },
  {
    "text": "and i've gone and made a switch not a fancy new c-sharp eight-six switch",
    "start": "1755279",
    "end": "1760880"
  },
  {
    "text": "just a plain old basic switch uh so we safely refactored that and",
    "start": "1760880",
    "end": "1768080"
  },
  {
    "text": "um if we have a look at our test our test class here you can see that",
    "start": "1768080",
    "end": "1774320"
  },
  {
    "text": "i've got all of those test cases stacked okay so",
    "start": "1774320",
    "end": "1780159"
  },
  {
    "text": "that all works and if i look at my uh bottom class there the uh terminator",
    "start": "1780159",
    "end": "1787200"
  },
  {
    "text": "should determine not to investigate further that's fine two but now requirement change",
    "start": "1787200",
    "end": "1796559"
  },
  {
    "start": "1793000",
    "end": "1903000"
  },
  {
    "text": "let's see what this one is okay so sarah connor's doing something",
    "start": "1796559",
    "end": "1803039"
  },
  {
    "text": "funny with them the terminators heads they oh this is interesting",
    "start": "1803039",
    "end": "1808559"
  },
  {
    "text": "and oh it looks like he can learn things now um if you have not seen the",
    "start": "1808559",
    "end": "1815520"
  },
  {
    "text": "director's cut of terminator 2 this will be an unfamiliar scene to you this is only in the director's cut and a",
    "start": "1815520",
    "end": "1822480"
  },
  {
    "text": "little bit of uh trivia there is the head you see in the foreground the back of the head is uh arnold schwarzenegger's stunt double",
    "start": "1822480",
    "end": "1829840"
  },
  {
    "text": "and the arm is lindell linda hamilton's sister so this hand closest to us is linda",
    "start": "1829840",
    "end": "1836159"
  },
  {
    "text": "hamilton's sister uh so just a little bit of uh movie trivia there so they switched his chip",
    "start": "1836159",
    "end": "1842320"
  },
  {
    "text": "to from read only so he can learn things so our new requirements are protect john",
    "start": "1842320",
    "end": "1849520"
  },
  {
    "text": "and sarah connor from threats and an ability to learn so let's go back and have a look at our",
    "start": "1849520",
    "end": "1857760"
  },
  {
    "text": "code so this all still looks fine we've got a nice success it's green",
    "start": "1857760",
    "end": "1864880"
  },
  {
    "text": "but we've got terminator should determine not to investigate further um",
    "start": "1864880",
    "end": "1872559"
  },
  {
    "text": "but now we want to because if we see a t-1000 there are potential threat to john and",
    "start": "1872559",
    "end": "1879120"
  },
  {
    "text": "sarah so we need to investigate them further so if we update our switch and say yes we want to",
    "start": "1879120",
    "end": "1886480"
  },
  {
    "text": "investigate t-1000 we get this error expected result to be",
    "start": "1886480",
    "end": "1892080"
  },
  {
    "text": "false but found true so now what am i faced with doing well i'd have to go and",
    "start": "1892080",
    "end": "1899600"
  },
  {
    "text": "modify my tests but i don't want to so we should design applications to be",
    "start": "1899600",
    "end": "1907440"
  },
  {
    "start": "1903000",
    "end": "2113000"
  },
  {
    "text": "more robust because we shouldn't have to go in there and fiddle with things as soon as a",
    "start": "1907440",
    "end": "1912480"
  },
  {
    "text": "requirement changes that's tedious and that's not why we have all this safe refactoring and things",
    "start": "1912480",
    "end": "1919440"
  },
  {
    "text": "and to make software more robust you can look at design patterns um",
    "start": "1919440",
    "end": "1926640"
  },
  {
    "text": "now anyone who has known me for a while will know that my",
    "start": "1926640",
    "end": "1931919"
  },
  {
    "text": "twitter bio used to say so solid okay at the moment",
    "start": "1931919",
    "end": "1938320"
  },
  {
    "text": "i am championing black lives matter so i have that on my twitter bio at the moment but previously",
    "start": "1938320",
    "end": "1944000"
  },
  {
    "text": "i had so solid because i am a big advocate for solid but this isn't going to turn into a",
    "start": "1944000",
    "end": "1949919"
  },
  {
    "text": "solid talk so never fear we're going to have a look at them briefly though so in case you don't know",
    "start": "1949919",
    "end": "1957360"
  },
  {
    "text": "what solid is uh here it is it's the single responsibility principle the open close principle the lisk of",
    "start": "1957360",
    "end": "1964320"
  },
  {
    "text": "substitution principle the interface segregation principle and the dependency inversion principle now",
    "start": "1964320",
    "end": "1970880"
  },
  {
    "text": "we've already done some of these um and we'll cover that in a moment but we're really interested",
    "start": "1970880",
    "end": "1976320"
  },
  {
    "text": "in the top three soul or the sunny side as i like to call it let's look at these",
    "start": "1976320",
    "end": "1982880"
  },
  {
    "text": "closer so the single responsibility means that every class or module in a program should have a",
    "start": "1982880",
    "end": "1990000"
  },
  {
    "text": "responsibility to just a single piece of that program's functionality",
    "start": "1990000",
    "end": "1995279"
  },
  {
    "text": "now if you think about that from our requirements if you've got multiple things happening",
    "start": "1995279",
    "end": "2002640"
  },
  {
    "text": "in a class multiple pieces of functionality how do you test that how do you know which is the failing",
    "start": "2002640",
    "end": "2008960"
  },
  {
    "text": "piece of this big method if i take you back to the company i used to work for",
    "start": "2008960",
    "end": "2014480"
  },
  {
    "text": "we had controllers and with a control their method in there",
    "start": "2014480",
    "end": "2019600"
  },
  {
    "text": "that was 800 lines of code and it had so much functionality going on there",
    "start": "2019600",
    "end": "2025519"
  },
  {
    "text": "you wouldn't even know where to start to debug that we had breakpoints galore everywhere it was a nightmare i",
    "start": "2025519",
    "end": "2031760"
  },
  {
    "text": "wouldn't inflict it on my enemies or maybe i would maybe i would but anyway so this is really key principle",
    "start": "2031760",
    "end": "2038960"
  },
  {
    "text": "that you just have that single piece of functionality and onto open close principle",
    "start": "2038960",
    "end": "2046559"
  },
  {
    "text": "software entities such as classes modules functions etc should be open for extension but closed the",
    "start": "2046559",
    "end": "2054158"
  },
  {
    "text": "modification what does that mean when i first saw",
    "start": "2054159",
    "end": "2059520"
  },
  {
    "text": "this i was like i don't understand i don't get it how can it be open for extension",
    "start": "2059520",
    "end": "2064960"
  },
  {
    "text": "but closed for modification i don't get it well i'm going to show you in a moment a",
    "start": "2064960",
    "end": "2070398"
  },
  {
    "text": "sort of example of how this works that can be amazing for keeping",
    "start": "2070399",
    "end": "2075919"
  },
  {
    "text": "your code in a really good functional way that you don't have to go and rewrite your tests or anything okay we're going",
    "start": "2075919",
    "end": "2082638"
  },
  {
    "text": "to do it in a moment and the final one we're looking at is the list of substitution principle",
    "start": "2082639",
    "end": "2089440"
  },
  {
    "text": "objects should be replaceable with instances of their subtypes without altering the correctness of that program",
    "start": "2089440",
    "end": "2096320"
  },
  {
    "text": "and that's going to be key for what we're going to do in a moment we've already seen that we can have",
    "start": "2096320",
    "end": "2102400"
  },
  {
    "text": "multiple implementations of a certain interface and the tests should all still",
    "start": "2102400",
    "end": "2108320"
  },
  {
    "text": "work similarly so let's see this in action we'll come over and",
    "start": "2108320",
    "end": "2114400"
  },
  {
    "start": "2113000",
    "end": "2208000"
  },
  {
    "text": "refactor our code",
    "start": "2114400",
    "end": "2118240"
  },
  {
    "text": "alrighty so this is what we've got we've got our terminator should",
    "start": "2120160",
    "end": "2126400"
  },
  {
    "text": "determine to investigate further and we've got the four test cases and then we have the one for the t100",
    "start": "2126400",
    "end": "2134320"
  },
  {
    "text": "that's t1000 rather so i am going to rewrite those two tests",
    "start": "2134320",
    "end": "2140880"
  },
  {
    "text": "into this one test on the right hand side so what we've done now is we've added",
    "start": "2140880",
    "end": "2147040"
  },
  {
    "text": "some more arguments and let's step through so let's take that first decorator test",
    "start": "2147040",
    "end": "2154000"
  },
  {
    "text": "case and we've got woman and true and they map to those two arguments string",
    "start": "2154000",
    "end": "2159599"
  },
  {
    "text": "subject name and bull outcome and then the subject name works just the",
    "start": "2159599",
    "end": "2165520"
  },
  {
    "text": "same we pass that into our new subject and then the outcome",
    "start": "2165520",
    "end": "2171200"
  },
  {
    "text": "is in our results so this is now not uh fluent assertions we're going into the regular assertions and result dot equals",
    "start": "2171200",
    "end": "2179440"
  },
  {
    "text": "the outcome okay so you can see there that we've actually got the test case",
    "start": "2179440",
    "end": "2184640"
  },
  {
    "text": "with the t-1000 we're no longer going to investigate uh the girl or the man we can put",
    "start": "2184640",
    "end": "2191280"
  },
  {
    "text": "whatever we like in here as many test cases as we want and they should all work in the code in the same way",
    "start": "2191280",
    "end": "2199200"
  },
  {
    "text": "and as you can see they do so we've got all of those uh passing based on our current code",
    "start": "2199200",
    "end": "2208160"
  },
  {
    "start": "2208000",
    "end": "2553000"
  },
  {
    "text": "so let's go and have a closer look at how we can refactor this code even",
    "start": "2208160",
    "end": "2214000"
  },
  {
    "text": "further and so let's see what we've got at the moment we have our public",
    "start": "2214000",
    "end": "2220880"
  },
  {
    "text": "bull method called investigate further that takes a subject and that currently has that rather",
    "start": "2220880",
    "end": "2226640"
  },
  {
    "text": "delightful switch we have our i subject and we have our implementation of isubject",
    "start": "2226640",
    "end": "2233920"
  },
  {
    "text": "um and what i'm proposing we add is this now this interface down here in",
    "start": "2233920",
    "end": "2240320"
  },
  {
    "text": "the bottom right is called i subject rule i'm going to create a rule set",
    "start": "2240320",
    "end": "2245680"
  },
  {
    "text": "and we can do all of this because we've got our lovely tests in there first and this has two methods is match so",
    "start": "2245680",
    "end": "2253359"
  },
  {
    "text": "does this rule match the subject name coming in and then if it does is the subject of interest",
    "start": "2253359",
    "end": "2261760"
  },
  {
    "text": "so let's now have a look at how we write those rules based on our code so on the left we have",
    "start": "2261760",
    "end": "2268640"
  },
  {
    "text": "our current code with the switch and on the right we have our first implementation of a an i subject rule and that's the is",
    "start": "2268640",
    "end": "2276720"
  },
  {
    "text": "woman rule if we look at our switch we can say that if there's a woman is it of interest and",
    "start": "2276720",
    "end": "2283040"
  },
  {
    "text": "you can see yes it is we'll return true and then we've got the is match method which will take the",
    "start": "2283040",
    "end": "2289200"
  },
  {
    "text": "subject and using a little bit of very dodgy link here it's going to",
    "start": "2289200",
    "end": "2295280"
  },
  {
    "text": "have a look and see if that matches now of course i know that if you um had a man rule and you passed woman",
    "start": "2295280",
    "end": "2303040"
  },
  {
    "text": "yes woman contains man and it gets messy but just forget that this rule could be anything you could be",
    "start": "2303040",
    "end": "2309520"
  },
  {
    "text": "heading on over to cognitive services and getting a um a certainty back from them on whether",
    "start": "2309520",
    "end": "2317599"
  },
  {
    "text": "a subject is a woman and based on that um certainty going and investigating it",
    "start": "2317599",
    "end": "2323200"
  },
  {
    "text": "doesn't matter what this is match is um",
    "start": "2323200",
    "end": "2328480"
  },
  {
    "text": "it it's going to work the same way so we're just going to use um string matching here do not build a",
    "start": "2328480",
    "end": "2335760"
  },
  {
    "text": "terminator by matching on strings please please don't but it's good for demonstration purposes",
    "start": "2335760",
    "end": "2344720"
  },
  {
    "text": "um so now we have an is dog rule and dogs are lovely and so we don't need to",
    "start": "2344720",
    "end": "2350640"
  },
  {
    "text": "investigate them further so you can see that our of interest method is going to return",
    "start": "2350640",
    "end": "2355680"
  },
  {
    "text": "false here okay so we can go and pull out as many rules as you like and they all",
    "start": "2355680",
    "end": "2362000"
  },
  {
    "text": "have to implement i subject rule that is the key",
    "start": "2362000",
    "end": "2367119"
  },
  {
    "text": "so i've got the investigate further method on the left and i have it",
    "start": "2367200",
    "end": "2374480"
  },
  {
    "text": "on the right now but you can see i've added some more code to my subject",
    "start": "2374480",
    "end": "2379680"
  },
  {
    "text": "analyzer class and we're going to step through this because you're thinking wow that switch just looks lovely now",
    "start": "2379680",
    "end": "2386400"
  },
  {
    "text": "can we not go back to the switch no we can't we're going to go through and have a look",
    "start": "2386400",
    "end": "2391520"
  },
  {
    "text": "at how we can refactor our code to be much more extensible",
    "start": "2391520",
    "end": "2398880"
  },
  {
    "text": "so i'm going to bring up those rules on the left and let's start to step through our code and with those in mind so the first",
    "start": "2398880",
    "end": "2407040"
  },
  {
    "text": "and most important thing we've added is this collection of i subject rules and we've just called",
    "start": "2407040",
    "end": "2413119"
  },
  {
    "text": "that underscore subject rules and it's very important that this is i",
    "start": "2413119",
    "end": "2418160"
  },
  {
    "text": "subject rules because now we can have any implementation of i subject rule",
    "start": "2418160",
    "end": "2423680"
  },
  {
    "text": "added to this collection which is what we do in the constructor so we've now got a constructor",
    "start": "2423680",
    "end": "2429440"
  },
  {
    "text": "we have um we've instantiated subject rules and you can see that's a new list of i",
    "start": "2429440",
    "end": "2435520"
  },
  {
    "text": "subject rule and now we can add our",
    "start": "2435520",
    "end": "2440720"
  },
  {
    "text": "women rule and our dog rule so here is where you can do your extension",
    "start": "2440720",
    "end": "2446880"
  },
  {
    "text": "or your extensibility we can just keep adding new rules okay",
    "start": "2446880",
    "end": "2452240"
  },
  {
    "text": "and we'll show you that in a moment so let's go down and look at our investigate further method the signature",
    "start": "2452240",
    "end": "2457839"
  },
  {
    "text": "is exactly the same so our tests should work exactly the same so we take",
    "start": "2457839",
    "end": "2463520"
  },
  {
    "text": "that subject in and the first thing we're going to look at is we're going to get a rule out of our",
    "start": "2463520",
    "end": "2470880"
  },
  {
    "text": "collection of rules we want to pluck the relevant rule out so we use a little bit of",
    "start": "2470880",
    "end": "2476079"
  },
  {
    "text": "a link here and we use an expression to access our is match rule from our um for example is",
    "start": "2476079",
    "end": "2483040"
  },
  {
    "text": "woman rule on the left and we pass in our subject and that will either return",
    "start": "2483040",
    "end": "2488240"
  },
  {
    "text": "uh true or false and if it's true we're gonna pluck that out and now",
    "start": "2488240",
    "end": "2495119"
  },
  {
    "text": "we've got our rules so say our subject is a woman we pass that into the investigate further",
    "start": "2495119",
    "end": "2501440"
  },
  {
    "text": "that rule is going to be true and we get that is woman rule and then we pass that rule into our",
    "start": "2501440",
    "end": "2509040"
  },
  {
    "text": "investigate further uh our investigate method now that's a private method and it will have",
    "start": "2509040",
    "end": "2514240"
  },
  {
    "text": "a note on private methods at a moment so we pass that rule in and then we can",
    "start": "2514240",
    "end": "2519520"
  },
  {
    "text": "straight away call the of interest and that will tell us whether it's true",
    "start": "2519520",
    "end": "2524640"
  },
  {
    "text": "or false and that means investigate further will return true or false so we've tidied that up",
    "start": "2524640",
    "end": "2531520"
  },
  {
    "text": "very easily without a big switch now i think if we did use a switch and we had loads more things that we needed to",
    "start": "2531520",
    "end": "2537599"
  },
  {
    "text": "investigate that's which is going to get bigger and bigger and bigger and bigger and bigger and we don't want that we've already seen it grow from two to",
    "start": "2537599",
    "end": "2543839"
  },
  {
    "text": "four and so on um so we definitely this this makes it a lot easier but back to private",
    "start": "2543839",
    "end": "2551680"
  },
  {
    "text": "methods if you need to make a private method public",
    "start": "2551680",
    "end": "2557280"
  },
  {
    "start": "2553000",
    "end": "2633000"
  },
  {
    "text": "in order to test it then it's time to refactor now imagine we're working asynchronously",
    "start": "2557280",
    "end": "2565760"
  },
  {
    "text": "and i have been given an interface by clara",
    "start": "2565760",
    "end": "2571200"
  },
  {
    "text": "clara has implemented all of her stuff using that interface and everything's going great and i go well i",
    "start": "2571200",
    "end": "2578560"
  },
  {
    "text": "really need to test this private method here that i need so i'm going to add it to the interface",
    "start": "2578560",
    "end": "2585440"
  },
  {
    "text": "so i can test it but i've just broken all of clara's code",
    "start": "2585440",
    "end": "2590880"
  },
  {
    "text": "and she's like well i don't need this i'm not going to do an implementation so she just leaves it as throw new not implemented exception",
    "start": "2590880",
    "end": "2599280"
  },
  {
    "text": "now i have seen classes that have 20 or 30 of these methods with throw",
    "start": "2599280",
    "end": "2606480"
  },
  {
    "text": "new not implemented exception um and that's a real code smell",
    "start": "2606480",
    "end": "2611599"
  },
  {
    "text": "it's unnecessary code bloat now all your tests well you can't write",
    "start": "2611599",
    "end": "2616720"
  },
  {
    "text": "tests for this because well they're not doing anything they're all going to fail um",
    "start": "2616720",
    "end": "2622000"
  },
  {
    "text": "so this is really not great now if i do want to make my private method public",
    "start": "2622000",
    "end": "2628880"
  },
  {
    "text": "i should write a second interface for it which brings me on to the i in solid the interface segregation",
    "start": "2628880",
    "end": "2636720"
  },
  {
    "start": "2633000",
    "end": "2753000"
  },
  {
    "text": "principle and this splits interfaces that are very large into smaller and more specific",
    "start": "2636720",
    "end": "2642319"
  },
  {
    "text": "ones so that implementations will only have to know about the methods that are of interest to them",
    "start": "2642319",
    "end": "2648079"
  },
  {
    "text": "so now i can implement two interfaces on my class but clara just needs to implement the",
    "start": "2648079",
    "end": "2655440"
  },
  {
    "text": "one and we share that one but the additional stuff that i need i just make a separate interface for it",
    "start": "2655440",
    "end": "2663200"
  },
  {
    "text": "and so that's a really tidy way of being able to look after your code and",
    "start": "2663200",
    "end": "2669440"
  },
  {
    "text": "keep it clean and minimalistic so let's have a look at our code now so",
    "start": "2669440",
    "end": "2675680"
  },
  {
    "text": "we've implemented this change you see we've got that collection in our constructor um and then down here",
    "start": "2675680",
    "end": "2682960"
  },
  {
    "text": "we've got our public method the investigate further and we've got our investigate private",
    "start": "2682960",
    "end": "2689440"
  },
  {
    "text": "method and now when we pass in those two rules and test those test cases dog and women",
    "start": "2689440",
    "end": "2695440"
  },
  {
    "text": "we get it all passing now as i said this is extensible",
    "start": "2695440",
    "end": "2702560"
  },
  {
    "text": "it fulfills the open close principle so it's open to extension but close to modification as i get",
    "start": "2702560",
    "end": "2709839"
  },
  {
    "text": "new rules all i have to do is add them to the collection my code in",
    "start": "2709839",
    "end": "2716400"
  },
  {
    "text": "investigate further doesn't need to change it's closed for modification we're not modifying that any further but i can keep adding",
    "start": "2716400",
    "end": "2724480"
  },
  {
    "text": "new functionality by adding new rules and and you may be thinking",
    "start": "2724480",
    "end": "2731359"
  },
  {
    "text": "where do i use this well i've recently did this for a notification handler",
    "start": "2731359",
    "end": "2736560"
  },
  {
    "text": "uh so you could have notification rules based on different criteria what type of notification is sent",
    "start": "2736560",
    "end": "2743200"
  },
  {
    "text": "so you don't need to go through and if statements you just have a rule and it will go through and so it's a",
    "start": "2743200",
    "end": "2749760"
  },
  {
    "text": "really good way of making code totally extensible",
    "start": "2749760",
    "end": "2754960"
  },
  {
    "start": "2753000",
    "end": "2773000"
  },
  {
    "text": "and with that good practices and code management becomes infinitely",
    "start": "2754960",
    "end": "2760880"
  },
  {
    "text": "easier so you don't need to worry about refactoring tests and refactoring your",
    "start": "2760880",
    "end": "2766079"
  },
  {
    "text": "methods you can just extend till your heart's content so that's",
    "start": "2766079",
    "end": "2772000"
  },
  {
    "text": "fantastic so let's have a look at tdd failures",
    "start": "2772000",
    "end": "2777680"
  },
  {
    "start": "2773000",
    "end": "2968000"
  },
  {
    "text": "and this is specifically through the learning of tdd and implementations and things and the",
    "start": "2777680",
    "end": "2784240"
  },
  {
    "text": "biggest one is underestimating the learning curve so if you think that you can pick up tdd",
    "start": "2784240",
    "end": "2791520"
  },
  {
    "text": "in a day maybe you can but a lot of people are going to be going um i don't know how",
    "start": "2791520",
    "end": "2799280"
  },
  {
    "text": "to start and so underestimating that learning curve can",
    "start": "2799280",
    "end": "2805119"
  },
  {
    "text": "be a real issue and it can be really disheartening as well if you think am i being really",
    "start": "2805119",
    "end": "2810160"
  },
  {
    "text": "stupid here is that surely this is easy it's not it's a complete cultural change a massive change to the way you",
    "start": "2810160",
    "end": "2817520"
  },
  {
    "text": "think as well many people confuse tdd with unit testing",
    "start": "2817520",
    "end": "2823440"
  },
  {
    "text": "um so i've done twitter polls and ask people well do you do tdd and they're like yeah well i write my code and then i",
    "start": "2823440",
    "end": "2829839"
  },
  {
    "text": "write my unit test no that's just testing it's not tdd uh",
    "start": "2829839",
    "end": "2835520"
  },
  {
    "text": "tdd is specifically writing those failing tests before you write a single",
    "start": "2835520",
    "end": "2841520"
  },
  {
    "text": "line of code and another failing is thinking tdd is",
    "start": "2841520",
    "end": "2847760"
  },
  {
    "text": "enough testing so my previous job we were all tdd but we only had tdd with unit testing",
    "start": "2847760",
    "end": "2855040"
  },
  {
    "text": "we didn't have integration tests we didn't have a testing team we didn't have uat",
    "start": "2855040",
    "end": "2861520"
  },
  {
    "text": "testing and so we just depended wholly on unit tests and tdd and i'm",
    "start": "2861520",
    "end": "2866800"
  },
  {
    "text": "sure you've seen enough means about unit test versus integration",
    "start": "2866800",
    "end": "2872000"
  },
  {
    "text": "test uh not starting with failing tests that's a code smell if",
    "start": "2872000",
    "end": "2878319"
  },
  {
    "text": "your tests immediately pass then you know you probably haven't written your test first because",
    "start": "2878319",
    "end": "2885680"
  },
  {
    "text": "how is your your test gonna pass if you've not written your code",
    "start": "2885680",
    "end": "2890960"
  },
  {
    "text": "um and then not refactoring enough being lazy and not you know making that",
    "start": "2890960",
    "end": "2896800"
  },
  {
    "text": "private method public and tacking it onto clara's interface and screwing over her coat and you don't want to over engineer but",
    "start": "2896800",
    "end": "2903760"
  },
  {
    "text": "you want to make stuff refactored enough to be maintainable and",
    "start": "2903760",
    "end": "2909200"
  },
  {
    "text": "obviously you know if something's going to be changed again and again or or hopefully with the scope and",
    "start": "2909200",
    "end": "2914880"
  },
  {
    "text": "basically the rule is you can refactor something once and if you come to refactor it",
    "start": "2914880",
    "end": "2920319"
  },
  {
    "text": "a second time then you should be thinking about what you should make uh do to make it more maintainable okay",
    "start": "2920319",
    "end": "2926240"
  },
  {
    "text": "um i'm not actually doing tdd i'm really",
    "start": "2926240",
    "end": "2931520"
  },
  {
    "text": "um when i started i was really uh falling foul of this one so remember",
    "start": "2931520",
    "end": "2937920"
  },
  {
    "text": "we had that switch and i said just return true well i wouldn't just return true i'd be like well i need",
    "start": "2937920",
    "end": "2943040"
  },
  {
    "text": "a switch here so i'd write my big switch and i'd be like i'll let my tests passed and none of that right what's my next test so i'd",
    "start": "2943040",
    "end": "2949040"
  },
  {
    "text": "write another test oh it passed oh i've already written my code so i'm not actually doing tdd",
    "start": "2949040",
    "end": "2954880"
  },
  {
    "text": "anymore i'm writing unit tests after the fact so you have to be quite strict when you do",
    "start": "2954880",
    "end": "2960559"
  },
  {
    "text": "tdd and you know that that's difficult um so let's have a look at implementation",
    "start": "2960559",
    "end": "2966720"
  },
  {
    "text": "within your organization it can be controversial and is a",
    "start": "2966720",
    "end": "2972240"
  },
  {
    "start": "2968000",
    "end": "3273000"
  },
  {
    "text": "significant cultural change so you may when you implement it you may",
    "start": "2972240",
    "end": "2979119"
  },
  {
    "text": "start to really slow down on your output and your product manager is going to be like",
    "start": "2979119",
    "end": "2984319"
  },
  {
    "text": "what's going on why is this all changing so that can lead to an initial drop in",
    "start": "2984319",
    "end": "2989359"
  },
  {
    "text": "productivity which is my next point but it can be controversial not everyone is",
    "start": "2989359",
    "end": "2994559"
  },
  {
    "text": "going to be on board um so you need to be kind and patient and help people",
    "start": "2994559",
    "end": "2999760"
  },
  {
    "text": "make the cultural change and it may be that people just don't want to do tdd",
    "start": "2999760",
    "end": "3005040"
  },
  {
    "text": "certain members of the team and be prepared that they're going to move on um because it's not for everybody um",
    "start": "3005040",
    "end": "3012400"
  },
  {
    "text": "you know be be sort of open-minded about things so as i said it can give an initial drop",
    "start": "3012400",
    "end": "3018960"
  },
  {
    "text": "in productivity and that can be really disconcerting if you've got a high performing team and suddenly",
    "start": "3018960",
    "end": "3025119"
  },
  {
    "text": "you've halved their um the number of stories in their sprint",
    "start": "3025119",
    "end": "3032400"
  },
  {
    "text": "uh or they you haven't halved it yet you've got the same number of things and they're now not finishing everything in the sprint that",
    "start": "3032400",
    "end": "3038880"
  },
  {
    "text": "can be disconcerting they're like why are we so um down on all of this uh why are we",
    "start": "3038880",
    "end": "3044880"
  },
  {
    "text": "not progressing still so you know you really need to be",
    "start": "3044880",
    "end": "3050400"
  },
  {
    "text": "mindful that this could be a really disconcerting time for your developers",
    "start": "3050400",
    "end": "3055520"
  },
  {
    "text": "but if you stick with it and you get past this lack of this drop",
    "start": "3055520",
    "end": "3061040"
  },
  {
    "text": "in productivity and you speak to your product manager and tell them what's happening you will",
    "start": "3061040",
    "end": "3068240"
  },
  {
    "text": "get a productivity increase it will go up and your reworks will be reduced so",
    "start": "3068240",
    "end": "3075440"
  },
  {
    "text": "you'll get less bugs and you'll get faster and faster and faster you have to be prepared for that initial",
    "start": "3075440",
    "end": "3081200"
  },
  {
    "text": "slump and reduction in productivity",
    "start": "3081200",
    "end": "3086400"
  },
  {
    "text": "but once you're going the the productivity just skyrockets because you're not creating all those blood",
    "start": "3087680",
    "end": "3094839"
  },
  {
    "text": "bugs so you get an increased understanding of requirements and their acceptance criteria so",
    "start": "3094839",
    "end": "3101200"
  },
  {
    "text": "your relationship with the product manager or the product owner becomes far better because you're saying no i",
    "start": "3101200",
    "end": "3108880"
  },
  {
    "text": "haven't got enough information here to write the code so you're putting the onus on them to go",
    "start": "3108880",
    "end": "3114240"
  },
  {
    "text": "and really think about how the product should work what they need and then coming back to you and going",
    "start": "3114240",
    "end": "3119839"
  },
  {
    "text": "this is what it should do see everybody has a greater understanding so you won't get those",
    "start": "3119839",
    "end": "3125200"
  },
  {
    "text": "um bugs where you say well this didn't do what i wanted it to do so",
    "start": "3125200",
    "end": "3131920"
  },
  {
    "text": "basically if you take one thing away from this talk well let's say two let's go back",
    "start": "3131920",
    "end": "3137359"
  },
  {
    "text": "here um and think about the implementation i just want to say be kind and patient that's a really big",
    "start": "3137359",
    "end": "3144240"
  },
  {
    "text": "thing okay be kind and patient it's a big culture of change um and don't expect it to happen overnight and",
    "start": "3144240",
    "end": "3150640"
  },
  {
    "text": "just communicate with everybody and that should go much better for you so on to the if you",
    "start": "3150640",
    "end": "3157839"
  },
  {
    "text": "take one thing away from this talk and this is going back to my big aha moment and that's if",
    "start": "3157839",
    "end": "3164960"
  },
  {
    "text": "you have code that looks like this you want to return true write the least",
    "start": "3164960",
    "end": "3172319"
  },
  {
    "text": "amount of code to get your test to pass and if that means return true just",
    "start": "3172319",
    "end": "3177599"
  },
  {
    "text": "return true okay don't be afraid to do it this blew my mind um every time i've given this",
    "start": "3177599",
    "end": "3184720"
  },
  {
    "text": "talk someone has come up to me and said that was either their aha moment when they learned tdd",
    "start": "3184720",
    "end": "3191280"
  },
  {
    "text": "or it was their aha moment within this talk so i hope that that has helped some of you",
    "start": "3191280",
    "end": "3198160"
  },
  {
    "text": "understand tdd a little bit more um and with that i want to say a huge",
    "start": "3198160",
    "end": "3204079"
  },
  {
    "text": "thank you um to all of you for joining me uh to every one of the organizers",
    "start": "3204079",
    "end": "3210400"
  },
  {
    "text": "uh to my host in the room and and making what is a massive conference",
    "start": "3210400",
    "end": "3216880"
  },
  {
    "text": "that um i've been to the last few years in oslo and taking it onto a super interactive",
    "start": "3216880",
    "end": "3222640"
  },
  {
    "text": "event online so um a massive thank you to everybody um so here are some things about me you",
    "start": "3222640",
    "end": "3229359"
  },
  {
    "text": "can follow me on twitter uh layla codes at uh this repo you can get on that bitly link tdd terminator or you",
    "start": "3229359",
    "end": "3236640"
  },
  {
    "text": "can find out my github where it's layla hyphen p uh this deck is available um on that",
    "start": "3236640",
    "end": "3243440"
  },
  {
    "text": "link there uh i am on twitch i'm part of the live coders team um so you can watch me",
    "start": "3243440",
    "end": "3251839"
  },
  {
    "text": "on twitch where i predominantly talk about uh azure functions on a monday and general",
    "start": "3251839",
    "end": "3258240"
  },
  {
    "text": "c-sharp on a thursday i will be adding in some more scheduling as well in the coming weeks",
    "start": "3258240",
    "end": "3264319"
  },
  {
    "text": "so feel free to catch me on twitch and as i promise if you want to know more about shading",
    "start": "3264319",
    "end": "3270720"
  },
  {
    "text": "the yak you can check out that link",
    "start": "3270720",
    "end": "3275519"
  }
]