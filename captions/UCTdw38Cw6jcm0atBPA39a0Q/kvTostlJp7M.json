[
  {
    "start": "0",
    "end": "69000"
  },
  {
    "text": "okay everyone we will go ahead and get started I'm very excited to be here this",
    "start": "4540",
    "end": "10040"
  },
  {
    "text": "is the last session of the last day of NDC Oslo so everybody here watching you",
    "start": "10040",
    "end": "17570"
  },
  {
    "text": "are the real heroes of the conference this will be a good session though this should be a pretty fun one so I'm Jeff",
    "start": "17570",
    "end": "22910"
  },
  {
    "text": "Holland I'm program manager working inside of Asher back in Seattle",
    "start": "22910",
    "end": "28369"
  },
  {
    "text": "Washington and I'm on the Azure functions team so I'm program manager for Azure functions which is one of the",
    "start": "28369",
    "end": "34820"
  },
  {
    "text": "core pieces of service for Microsoft Azure that said a lot of what I'm going to be talking today are going to be some",
    "start": "34820",
    "end": "40070"
  },
  {
    "text": "of the concepts to know about for as your functions but they are not necessarily unique to Azure at all a lot",
    "start": "40070",
    "end": "46579"
  },
  {
    "text": "of these practices are good for any even distributed system all around but",
    "start": "46579",
    "end": "52129"
  },
  {
    "text": "especially around server lists so whether you do or don't use Azure this should still be useful for you but but",
    "start": "52129",
    "end": "59059"
  },
  {
    "text": "do use a sure you won't be sorry about it so we're gonna go into a little bit of an intro of functions and server",
    "start": "59059",
    "end": "64908"
  },
  {
    "text": "lists but we're gonna spend a lot of our times on best practices architecture and some examples so with that said in case",
    "start": "64909",
    "end": "72590"
  },
  {
    "text": "you aren't already familiar what are as your functions in the very basic definition of this is as your functions",
    "start": "72590",
    "end": "79220"
  },
  {
    "start": "77000",
    "end": "137000"
  },
  {
    "text": "much like other service providers allow you to have your code executed in response to some event so in this case",
    "start": "79220",
    "end": "86810"
  },
  {
    "text": "I've got a really simple code sample this is in c-sharp and all this is saying is I'm gonna get an HTTP trigger",
    "start": "86810",
    "end": "93380"
  },
  {
    "text": "request to some endpoint and whenever that request comes in I want you to run this little bit of code here now the",
    "start": "93380",
    "end": "100490"
  },
  {
    "text": "code you might want to run might be you know scheduled based hey I want you to run this sequel query every day at 1",
    "start": "100490",
    "end": "106310"
  },
  {
    "text": "o'clock p.m. it might be message base like every time a message shows up on some queue or stream base like stream",
    "start": "106310",
    "end": "112909"
  },
  {
    "text": "this data and constantly process it as it comes in but it gives you as a developer the flexibility to just write",
    "start": "112909",
    "end": "119030"
  },
  {
    "text": "your code and not have to worry about the scale the hosting the resiliency of",
    "start": "119030",
    "end": "124520"
  },
  {
    "text": "the service that's all managed for you out of the box from as your fun excuse me as your",
    "start": "124520",
    "end": "130100"
  },
  {
    "text": "functions imma grab a drink real quick so with that said a term that you have",
    "start": "130100",
    "end": "136760"
  },
  {
    "text": "probably heard a lot of this conference been some great sessions already very brief definition I'm gonna jump right",
    "start": "136760",
    "end": "142520"
  },
  {
    "start": "137000",
    "end": "191000"
  },
  {
    "text": "through this which is what is serverless as your functions is a service technology and service is about an",
    "start": "142520",
    "end": "149000"
  },
  {
    "text": "abstraction of servers first and foremost like when I publish that code that I just showed you I'm not worried",
    "start": "149000",
    "end": "155750"
  },
  {
    "text": "about how to host maintain patch and secure the servers behind the scenes I just focus on my code it is event-driven",
    "start": "155750",
    "end": "162680"
  },
  {
    "text": "the resources to run your code are provisioned automatically for you on-demand at whatever scale you might be",
    "start": "162680",
    "end": "169370"
  },
  {
    "text": "requesting so you attach it to some type of event I've already given some examples of those already",
    "start": "169370",
    "end": "174590"
  },
  {
    "text": "and you're only billed for when your code is actually running so if I did have a serverless API and nobody called",
    "start": "174590",
    "end": "181820"
  },
  {
    "text": "it during the entire month I wouldn't be charged a dime and then if the next day all the sudden I got you know thousands",
    "start": "181820",
    "end": "187880"
  },
  {
    "text": "of requests I'd only be charged for those thousands of requests now as your the service platform looks a little bit",
    "start": "187880",
    "end": "194030"
  },
  {
    "start": "191000",
    "end": "250000"
  },
  {
    "text": "different than you might see in other cloud providers there's actually three core components we're not going to spend a lot of time",
    "start": "194030",
    "end": "199670"
  },
  {
    "text": "in these right two but I think it's important to know as you consider what a service architecture might be formed of",
    "start": "199670",
    "end": "205040"
  },
  {
    "text": "so the first one you have functions this is you know the code that you write and publish code that you want to run off of",
    "start": "205040",
    "end": "211520"
  },
  {
    "text": "some event and Azure there's also something called as your logic apps I'll show you just briefly what one of these",
    "start": "211520",
    "end": "217790"
  },
  {
    "text": "looks like in a second but these are workflows this enables you to orchestrate code or data in a service",
    "start": "217790",
    "end": "225200"
  },
  {
    "text": "fashion and there's also a service called as your event grid which allows you to route your events to different",
    "start": "225200",
    "end": "231050"
  },
  {
    "text": "pieces of your architecture so you might say hey I want to be notified whenever something happens on my virtual machine",
    "start": "231050",
    "end": "236720"
  },
  {
    "text": "or on my storage account or I want to be notified whenever an employee is hired",
    "start": "236720",
    "end": "241730"
  },
  {
    "text": "by my company so I can go do some something an event grid is the platform",
    "start": "241730",
    "end": "247300"
  },
  {
    "text": "piece that lets you wrap that information now on top of it it's very likely that a full application isn't",
    "start": "247300",
    "end": "254120"
  },
  {
    "start": "250000",
    "end": "285000"
  },
  {
    "text": "just going to be service code service workflow done events you're gonna need data you're gonna need security potentially",
    "start": "254120",
    "end": "260750"
  },
  {
    "text": "for like user logins potentially some intelligence on top of it as well so you",
    "start": "260750",
    "end": "265850"
  },
  {
    "text": "get rich integration with a bunch of other services inside of the Azure cloud to do things like store your data in a",
    "start": "265850",
    "end": "271970"
  },
  {
    "text": "nose database or run machine learning to give like order recommendations like maybe",
    "start": "271970",
    "end": "278580"
  },
  {
    "text": "you have an ordering API and you want to send them an email and say hey you might also be interested in these items",
    "start": "278580",
    "end": "284130"
  },
  {
    "text": "weaving those types of intelligent services is very easy as well and then something we're very proud of an a sure",
    "start": "284130",
    "end": "290070"
  },
  {
    "text": "that Microsoft's obviously always taken very seriously is the development tooling so I'll go through a bunch of",
    "start": "290070",
    "end": "296100"
  },
  {
    "text": "the this today whether it's monitoring developing testing or even continuous",
    "start": "296100",
    "end": "301139"
  },
  {
    "text": "integration and continuous deployment okay so that's kind of the overview of service many of you might have already",
    "start": "301139",
    "end": "306600"
  },
  {
    "text": "known much of this let's talk about some examples and one of the reason that I personally really love service is just",
    "start": "306600",
    "end": "313260"
  },
  {
    "text": "because it's changed how I am able to write applications so the first cloud app I ever wrote was actually an app for",
    "start": "313260",
    "end": "320430"
  },
  {
    "start": "315000",
    "end": "501000"
  },
  {
    "text": "the Microsoft band if you were familiar with that that short-lived product from Microsoft this is a picture of the app",
    "start": "320430",
    "end": "326850"
  },
  {
    "text": "here what it was was a simple app so that if you were a fan of sports you",
    "start": "326850",
    "end": "332130"
  },
  {
    "text": "could open up the app and you could say hey I want to know about you know NBA scores or football scores or whatever",
    "start": "332130",
    "end": "337979"
  },
  {
    "text": "scores it might be and your band would then talk to the cloud I would get the",
    "start": "337979",
    "end": "343620"
  },
  {
    "text": "sport score of whatever game was happening and send it to your wrist for a point in time reference I built this",
    "start": "343620",
    "end": "349770"
  },
  {
    "text": "in 2015 right around the same time that the Apple watch was released this was the first application I'd ever written",
    "start": "349770",
    "end": "355950"
  },
  {
    "text": "that was callable through the cloud it wasn't just like some app that ran on a box it took me about a month to build I",
    "start": "355950",
    "end": "363060"
  },
  {
    "text": "spent a lot of time building this it was a good learning exercise and I was spending $80 a month for the server",
    "start": "363060",
    "end": "369810"
  },
  {
    "text": "behind the scenes that was powering this application when I had one user I was paying $80 a month and even you know",
    "start": "369810",
    "end": "375900"
  },
  {
    "text": "this is actually a picture from a news article that picked up this app when Microsoft band was just taking off and",
    "start": "375900",
    "end": "382320"
  },
  {
    "text": "when this news article hit I got a thousand downloads like in one day and it kept growing I was still paying $80 a",
    "start": "382320",
    "end": "388770"
  },
  {
    "text": "month but I also struggled to kind of manage the spike in usage that I was seeing the other challenge was because",
    "start": "388770",
    "end": "395039"
  },
  {
    "text": "of this was kind of built as just my VM with a bunch of code that I'd Jerry raked together one of the biggest pieces",
    "start": "395039",
    "end": "400830"
  },
  {
    "text": "of feedback I got when I first shipped this was hey we want to be able to follow Premier League or world or whatever adults it might be and so to",
    "start": "400830",
    "end": "408360"
  },
  {
    "text": "add additional features was taking me a really long time and was hard to update because I just again had this virtual",
    "start": "408360",
    "end": "414420"
  },
  {
    "text": "machine so cool app fun experience but took me a long time to build and was",
    "start": "414420",
    "end": "419670"
  },
  {
    "text": "painful to manage now if I look at this year some of the different apps that I built this is just one example of one of",
    "start": "419670",
    "end": "426240"
  },
  {
    "text": "the apps that I built this is actually a picture of my doorbell at my house I have an IOT doorbell that has a camera",
    "start": "426240",
    "end": "433830"
  },
  {
    "text": "on it and it will be able to detect motion or sound and I want it to be able to use that feed from my doorbell to do",
    "start": "433830",
    "end": "440940"
  },
  {
    "text": "some intelligent stuff so what actually happens is when somebody comes to my door you can see an image of the end",
    "start": "440940",
    "end": "446130"
  },
  {
    "text": "result I'll actually run this video feed through some intelligence services if you've given me access to know your",
    "start": "446130",
    "end": "452790"
  },
  {
    "text": "identity then I can actually do some facial recognition I can detect the text if any text is being spoken and all this",
    "start": "452790",
    "end": "459720"
  },
  {
    "text": "is just running monitoring my doorbell 24/7 this only took me two evenings to",
    "start": "459720",
    "end": "465120"
  },
  {
    "text": "build I actually wrote a few blogs about how it was put together if you're interested and just like I mentioned",
    "start": "465120",
    "end": "470430"
  },
  {
    "text": "with serverless this is only ever running when somebody actually comes to my door I don't have a lot of visitors",
    "start": "470430",
    "end": "475919"
  },
  {
    "text": "I'm not super popular so this means I'm only spending about four dollars a month right now to constantly be monitoring my",
    "start": "475919",
    "end": "482729"
  },
  {
    "text": "doorbell and a lot of that cost is actually from the no sequel database the functions themselves are actually zero",
    "start": "482729",
    "end": "489060"
  },
  {
    "text": "dollars they're free because I'm not calling them enough this will automatically scale to any traffic and",
    "start": "489060",
    "end": "494490"
  },
  {
    "text": "it's extensible and reusable so to give you a sense for what kind of a service app can look like in Azure I do want a",
    "start": "494490",
    "end": "500190"
  },
  {
    "text": "piece apart this doorbell one ok so just an example this is Visual Studio code",
    "start": "500190",
    "end": "505380"
  },
  {
    "start": "501000",
    "end": "693000"
  },
  {
    "text": "and for this app my door Bo one it's actually written in JavaScript so I just",
    "start": "505380",
    "end": "510540"
  },
  {
    "text": "have here a very simple Java function which says hey on a timer I every 15",
    "start": "510540",
    "end": "516870"
  },
  {
    "text": "seconds go and check to see if anybody is ringing my doorbell if somebody is ringing my doorbell I want to send an",
    "start": "516870",
    "end": "523500"
  },
  {
    "text": "event out to let me know that someone rang my doorbell and then it keeps running and keeps checking my doorbell so not a bunch of complex code I have to",
    "start": "523500",
    "end": "530670"
  },
  {
    "text": "write just check to see if somebody's at my door if somebody's have my door notify my application some of the nice",
    "start": "530670",
    "end": "537030"
  },
  {
    "text": "things to call out I talked about dev tooling I've got this extension directly inside",
    "start": "537030",
    "end": "542550"
  },
  {
    "text": "a Visual Studio code for Azure functions or I can create updates and publish my",
    "start": "542550",
    "end": "547649"
  },
  {
    "text": "functions all from within this experience I can even do things like set a breakpoint and f5 run and this will",
    "start": "547649",
    "end": "555240"
  },
  {
    "text": "actually spin up the Azure functions runtime inside a Visual Studio code so that I could debug this live and hit a",
    "start": "555240",
    "end": "562199"
  },
  {
    "text": "breakpoint so you'll see here with all this moving text this is just spun up it's now checking locally on my machine",
    "start": "562199",
    "end": "569279"
  },
  {
    "text": "here I think I've set this one to see every 15 seconds so within about 10 seconds or so you'll actually see this",
    "start": "569279",
    "end": "575160"
  },
  {
    "text": "breakpoint would get hit so some really nice tooling in here as well to help me build these in this case a JavaScript",
    "start": "575160",
    "end": "580860"
  },
  {
    "text": "function now what happens when that event gets sent because this functions not doing a whole lot right that's not",
    "start": "580860",
    "end": "586139"
  },
  {
    "text": "powering all that cool machine learning stuff I showed you a second ago and what's powering all of that this is the",
    "start": "586139",
    "end": "592079"
  },
  {
    "text": "only part you're going to be able to see out your logic apps today so don't blink this is actually the workflow that gets",
    "start": "592079",
    "end": "598860"
  },
  {
    "text": "kicked off from that event that's running in my subscription okay so you can see here's some of the different",
    "start": "598860",
    "end": "603990"
  },
  {
    "text": "runs that have happened I can click into them and see the status if I actually click Edit this is what an",
    "start": "603990",
    "end": "609600"
  },
  {
    "text": "Asscher logic app's looks like this is a very useful tool for functions and for service to orchestrate events so here",
    "start": "609600",
    "end": "616799"
  },
  {
    "text": "I'm listening for that doorbell event so I'm saying hey wait to see if my function sees that someone's",
    "start": "616799",
    "end": "622619"
  },
  {
    "text": "at my door bell and now I'm gonna execute this process which can be pretty long running the first thing is I'm",
    "start": "622619",
    "end": "628230"
  },
  {
    "text": "gonna wait until the recording is finished this could take a few minutes until somebody finally leaves my",
    "start": "628230",
    "end": "633240"
  },
  {
    "text": "doorstep once I know the recording is finished I'm actually going to upload that recording to an out-of-the-box",
    "start": "633240",
    "end": "639720"
  },
  {
    "text": "connector here inside of azure so this is a connector for one of the cognitive services or artificial intelligence",
    "start": "639720",
    "end": "645540"
  },
  {
    "text": "services in Azure they can actually take a video feed and automatically process",
    "start": "645540",
    "end": "651089"
  },
  {
    "text": "emotions faces text all that other good stuff so we'll go ahead and push that up here I'll wait for that video to be",
    "start": "651089",
    "end": "656999"
  },
  {
    "text": "processed and then I can store the data here one other thing I'll show you in case you haven't seen launch apps before",
    "start": "656999",
    "end": "662129"
  },
  {
    "text": "if I wanted to continue to add some more stuff when someone rings my doorbell I've got all of these not only as your",
    "start": "662129",
    "end": "669329"
  },
  {
    "text": "functions that I can call I could also call you know contain running an Asscher container instances I",
    "start": "669329",
    "end": "675210"
  },
  {
    "text": "could call other connectors like dynamics github whatever service I might be using this is probably code I don't",
    "start": "675210",
    "end": "681510"
  },
  {
    "text": "have to write so this is great it's awesome and now you know within two evenings I have this code that's",
    "start": "681510",
    "end": "687029"
  },
  {
    "text": "constantly running and listening for when someone's at my door Bell so just an example of what a service app can",
    "start": "687029",
    "end": "692700"
  },
  {
    "text": "look like okay now we're gonna spend the whole rest of the time talking about functions so that's that's the service",
    "start": "692700",
    "end": "698399"
  },
  {
    "text": "architecture piece let's go deeper into functions now a few key concepts to note",
    "start": "698399",
    "end": "703529"
  },
  {
    "start": "701000",
    "end": "747000"
  },
  {
    "text": "when you're writing as your functions the core component that you're dealing with is a function app and an app is",
    "start": "703529",
    "end": "711330"
  },
  {
    "text": "your unit of deployment it's your unit of development it's also the unit of scale so a single app will be scaled as",
    "start": "711330",
    "end": "718860"
  },
  {
    "text": "a unit you can have multiple functions in an app but your app is your primary unit of development deployment and scale",
    "start": "718860",
    "end": "725790"
  },
  {
    "text": "and it can have many functions inside of it so again just to kind of tied the",
    "start": "725790",
    "end": "731190"
  },
  {
    "text": "knots together if you come back here to my doorbell project this is my app here this is my function app but actually I",
    "start": "731190",
    "end": "737010"
  },
  {
    "text": "have a few different functions I have checked the rings I have get the current recording I have store some data and",
    "start": "737010",
    "end": "742560"
  },
  {
    "text": "Cosmos DB these are all different functions but they all live in the same app so I can develop them and deploy",
    "start": "742560",
    "end": "748380"
  },
  {
    "start": "747000",
    "end": "773000"
  },
  {
    "text": "them together all of your functions will have a trigger this is the event source",
    "start": "748380",
    "end": "754230"
  },
  {
    "text": "that it's listening for and the data that will be passed in to let your function know to execute every function",
    "start": "754230",
    "end": "759990"
  },
  {
    "text": "can only have one trigger and the service itself will automatically be listening to that source so you're not",
    "start": "759990",
    "end": "765420"
  },
  {
    "text": "you're not charged if it's listening to something like a cue waiting for a message to drop you're only charged once",
    "start": "765420",
    "end": "771150"
  },
  {
    "text": "that trigger fires and your code actually runs the other piece which is unique to as your functions is this",
    "start": "771150",
    "end": "777600"
  },
  {
    "start": "773000",
    "end": "873000"
  },
  {
    "text": "concept called bindings these can be super useful for use you're developing your functions bindings are data that",
    "start": "777600",
    "end": "783450"
  },
  {
    "text": "you can pull in or push out of your function without having to integrate",
    "start": "783450",
    "end": "788520"
  },
  {
    "text": "with that service directly inside of code so I have here a table these are like our top whatever seven or eight",
    "start": "788520",
    "end": "794100"
  },
  {
    "text": "triggers and bindings that we have an example and I'll walk through this in just a second I might want to build a",
    "start": "794100",
    "end": "800070"
  },
  {
    "text": "service API with has your function so HTTP would be the trigger I'm going to",
    "start": "800070",
    "end": "805350"
  },
  {
    "text": "be listening for an HTTP Qwest but maybe I want to store some data from that request in a database in",
    "start": "805350",
    "end": "812260"
  },
  {
    "text": "a no sequel database like cosmos DB now I don't necessarily want to have to write and manage my connection to cosmos",
    "start": "812260",
    "end": "819220"
  },
  {
    "text": "DB so I can use a binding to automatically push data to cosmos DB as",
    "start": "819220",
    "end": "825310"
  },
  {
    "text": "part of my execution and I can describe that integration through configuration I'll show that to you in a second",
    "start": "825310",
    "end": "831910"
  },
  {
    "text": "alternatively maybe my endpoint I'm getting in a query parameter for like an",
    "start": "831910",
    "end": "836980"
  },
  {
    "text": "ID or a path parameter for an ID and I know that that ID maps to some data in",
    "start": "836980",
    "end": "843610"
  },
  {
    "text": "my storage account or like table storage maybe I actually want to pull in data",
    "start": "843610",
    "end": "848710"
  },
  {
    "text": "from storage at the time of execution I can use an input binding to tell my",
    "start": "848710",
    "end": "854410"
  },
  {
    "text": "function hey you're going to be triggered from HTTP but also pull in data from cosmos or storage or wherever",
    "start": "854410",
    "end": "860650"
  },
  {
    "text": "else at the time of execution if that doesn't make sense right now that's okay I'm going to show it to you in just a second but just remember we have",
    "start": "860650",
    "end": "867010"
  },
  {
    "text": "triggers that start your event and bindings which can allow you to flow data in and out independent of the",
    "start": "867010",
    "end": "872680"
  },
  {
    "text": "trigger now one of the nice things about Azure functions is that you do have a number of different choices on where and",
    "start": "872680",
    "end": "878950"
  },
  {
    "start": "873000",
    "end": "976000"
  },
  {
    "text": "how you want to develop I actually have some recommendations here though so you can write and manage hauser functions",
    "start": "878950",
    "end": "885190"
  },
  {
    "text": "entirely in the azure portal there's a little code editor you can run and test I wouldn't recommend it for anything in",
    "start": "885190",
    "end": "892390"
  },
  {
    "text": "production though it's great for trying things out if you have a really simple script and you just want to play around",
    "start": "892390",
    "end": "897880"
  },
  {
    "text": "with out your functions or it's not a very important script it's fine but anything you're doing that will have the",
    "start": "897880",
    "end": "903790"
  },
  {
    "text": "words production associated with it you're gonna want to use one of these other editors because then you can do",
    "start": "903790",
    "end": "909070"
  },
  {
    "text": "things like source control and continuous integration and automated testing and all of the best practices",
    "start": "909070",
    "end": "914740"
  },
  {
    "text": "that you've been hearing about so visual studio this is perfect for C sharp F",
    "start": "914740",
    "end": "920080"
  },
  {
    "text": "sharp anything dotnet related there's a really nice visual studio integrated tooling that gives you debugging",
    "start": "920080",
    "end": "926740"
  },
  {
    "text": "publishing integration with has your functions it's perfect for that you can",
    "start": "926740",
    "end": "932320"
  },
  {
    "text": "use Visual Studio code I showed you I'm writing I'm using my Mac right now so I have Visual Studio code Visual Studio",
    "start": "932320",
    "end": "938770"
  },
  {
    "text": "code does support c-sharp but if you have the option I do think visual studio is a more natural place to",
    "start": "938770",
    "end": "943870"
  },
  {
    "text": "do that for now at least for me personally but if you're writing JavaScript Java or Python functions",
    "start": "943870",
    "end": "950680"
  },
  {
    "text": "Visual Studio code is a great fit again it has that out-of-the-box tenth out-of-the-box extension we also have",
    "start": "950680",
    "end": "957880"
  },
  {
    "text": "maven tooling for Java functions so you could write your functions in IntelliJ or eclipse if there's a different Java",
    "start": "957880",
    "end": "963850"
  },
  {
    "text": "editor you care about and really the tools can be run anywhere so if there's an editor here that you like that I",
    "start": "963850",
    "end": "969730"
  },
  {
    "text": "haven't listed it will still work you just need to make sure you hook it up to our CLI tools so that it runs for",
    "start": "969730",
    "end": "975520"
  },
  {
    "text": "you ok so I want to show you what this looks like now I'm gonna do a really quick walk through a building function",
    "start": "975520",
    "end": "981850"
  },
  {
    "text": "inside a visual studio this time from scratch ok and the one I want to build is actually what I described a little",
    "start": "981850",
    "end": "987460"
  },
  {
    "text": "bit in the example so I want to build an API and I have here a cosmos DB no",
    "start": "987460",
    "end": "993490"
  },
  {
    "text": "sequel database inside of my Azure account and I want to make an API so I can get a request have that function",
    "start": "993490",
    "end": "999910"
  },
  {
    "text": "spin up on demand and then push that data directly into cosmos DB so let's go",
    "start": "999910",
    "end": "1005220"
  },
  {
    "start": "1004000",
    "end": "1017000"
  },
  {
    "text": "ahead and do that I'm gonna go ahead here and say file new project and create a brand new as your function project I",
    "start": "1005220",
    "end": "1012440"
  },
  {
    "text": "can choose whether I want to do this in our version one I'll zoom in here I know this is really small in our version one",
    "start": "1012440",
    "end": "1018900"
  },
  {
    "start": "1017000",
    "end": "1032000"
  },
  {
    "text": "runtime which is currently generally available which is written and runs dotnet framework functions or our",
    "start": "1018900",
    "end": "1024839"
  },
  {
    "text": "version two one which is in preview and will be in preview for a few more weeks which is dotnet standard it actually",
    "start": "1024839",
    "end": "1029910"
  },
  {
    "text": "runs dot in that core 2.1 which gives it some nice benefits i'm actually gonna go ahead and do this in the version to.net",
    "start": "1029910",
    "end": "1036150"
  },
  {
    "text": "core one and let's go ahead and say we want it I'm just gonna do an empty project for now ok so here's an empty",
    "start": "1036150",
    "end": "1042600"
  },
  {
    "start": "1041000",
    "end": "1056000"
  },
  {
    "text": "project inside a visual studio I don't have any functions here yet so let's go",
    "start": "1042600",
    "end": "1048209"
  },
  {
    "text": "ahead and add one into this app remember this is my app and an app can have many functions and this is my unit of",
    "start": "1048209",
    "end": "1053700"
  },
  {
    "text": "development deployment and scale so let's add a function into this project",
    "start": "1053700",
    "end": "1058740"
  },
  {
    "start": "1056000",
    "end": "1068000"
  },
  {
    "text": "and there's a bunch of different triggers that I could choose from I already mentioned I want this to be an",
    "start": "1058740",
    "end": "1064410"
  },
  {
    "text": "API so let's do HTTP triggered and this will start for us right here okay let me",
    "start": "1064410",
    "end": "1070110"
  },
  {
    "start": "1068000",
    "end": "1078000"
  },
  {
    "text": "make sure our code is big enough so that you can see a little bit of what's going on 200% yes please I guess it doesn't like",
    "start": "1070110",
    "end": "1079590"
  },
  {
    "text": "to zoom hopefully this won't crash if so that's fine we'll have to move on from there this is what I get for running inside of a virtual machine on my Mac on",
    "start": "1079590",
    "end": "1086820"
  },
  {
    "text": "battery power it looks like it didn't like it that's okay don't zoom in your code live but that",
    "start": "1086820",
    "end": "1094320"
  },
  {
    "text": "code right there was just an HTTP function I won't show you for the sake of waiting for this to reboot and making",
    "start": "1094320",
    "end": "1099660"
  },
  {
    "text": "sure we have time to go into some other topics as we move forward but I could do the same thing I did in Visual Studio code set a breakpoint click the Run",
    "start": "1099660",
    "end": "1107070"
  },
  {
    "text": "button and everything would would run for me and I'll do that in a second okay now this is great but I need to",
    "start": "1107070",
    "end": "1113190"
  },
  {
    "start": "1108000",
    "end": "1169000"
  },
  {
    "text": "integrate now with with cosmos DB and I'm gonna use that concept called bindings Kay so I don't want to",
    "start": "1113190",
    "end": "1119520"
  },
  {
    "text": "necessarily have to write the integration code with cosmos DB directly I'd rather leverage these bindings so",
    "start": "1119520",
    "end": "1125640"
  },
  {
    "text": "one important thing to note is that functions you can pull in different extensions okay so we have an extension",
    "start": "1125640",
    "end": "1132720"
  },
  {
    "text": "for cosmos DB we have an extension for service bus queues we have an extension for as your event grid these are all",
    "start": "1132720",
    "end": "1139980"
  },
  {
    "text": "published through nougat so in this case the first thing I'm going to do is make sure I pull in the extension for cosmos",
    "start": "1139980",
    "end": "1146730"
  },
  {
    "text": "DB and actually have a nice keyboard shortcut which is going to give me all the code here so I'm gonna say hey in my",
    "start": "1146730",
    "end": "1152160"
  },
  {
    "text": "function app I want to install the extension for cosmos DB the reason that",
    "start": "1152160",
    "end": "1157710"
  },
  {
    "text": "we make you install these extensions is because we want the base image to be as the lightweight as possible so you get",
    "start": "1157710",
    "end": "1163680"
  },
  {
    "text": "really good performance so if you want to bring in any integrations with other services we have you install them in",
    "start": "1163680",
    "end": "1169080"
  },
  {
    "start": "1169000",
    "end": "1196000"
  },
  {
    "text": "through nougat if you're using JavaScript or Java those two links have you know different ways to do those",
    "start": "1169080",
    "end": "1174690"
  },
  {
    "text": "packages but I won't go into those now all right so now this is where I want to define how that integration works in my",
    "start": "1174690",
    "end": "1180870"
  },
  {
    "text": "function this is where I'm actually gonna write my binding I'm gonna paste this in right now and then I'll walk through it okay so what I've done here",
    "start": "1180870",
    "end": "1187170"
  },
  {
    "text": "is I've written an attribute on this function I've said hey I want you to",
    "start": "1187170",
    "end": "1192420"
  },
  {
    "text": "integrate with cosmos DB I have a database called function I have a collection called function and I have a",
    "start": "1192420",
    "end": "1200130"
  },
  {
    "start": "1196000",
    "end": "1239000"
  },
  {
    "text": "connection string which is going to be in an environment variable called cosmos DB connection okay I don't want to paste",
    "start": "1200130",
    "end": "1206820"
  },
  {
    "text": "my actual connection string here because you don't want to put secrets inside of your code so I'm",
    "start": "1206820",
    "end": "1211950"
  },
  {
    "text": "actually just referencing an environment variable which I'll set in just a second now",
    "start": "1211950",
    "end": "1217590"
  },
  {
    "text": "what it's telling this to do is I'm gonna have this variable called Docs which is an out variable and my",
    "start": "1217590",
    "end": "1223169"
  },
  {
    "text": "parameter whatever I set to Doc's in this case it's the string I could make it a document I could change the type",
    "start": "1223169",
    "end": "1230039"
  },
  {
    "text": "depending on what type of type I want to use but let's just leave it as a string for now whatever I set as the value of",
    "start": "1230039",
    "end": "1237269"
  },
  {
    "text": "docs that's what it's going to push into Cosmos DB for me okay so I'm going to",
    "start": "1237269",
    "end": "1243059"
  },
  {
    "start": "1239000",
    "end": "1272000"
  },
  {
    "text": "set this value for docs and push that to this Cosmos DB database so the only code I have to write is hey let's set that",
    "start": "1243059",
    "end": "1250440"
  },
  {
    "text": "Doc's variable to the request body that I get from the HTTP request okay so with",
    "start": "1250440",
    "end": "1256830"
  },
  {
    "text": "that one line of code and this attribute up here now whatever is in my request",
    "start": "1256830",
    "end": "1262049"
  },
  {
    "text": "body is going to create a record at my cosmos DB database obviously I couldn't manipulate and do whatever I want to do",
    "start": "1262049",
    "end": "1267840"
  },
  {
    "text": "with it now the last part I need to do here before this will actually work is I need to make sure that I'm setting this",
    "start": "1267840",
    "end": "1273389"
  },
  {
    "start": "1272000",
    "end": "1281000"
  },
  {
    "text": "environment variable okay so locally I have this handy file which you probably can't read very well called local dot",
    "start": "1273389",
    "end": "1280200"
  },
  {
    "text": "Settings JSON and that will let me set local environment variables easier in",
    "start": "1280200",
    "end": "1285509"
  },
  {
    "start": "1281000",
    "end": "1316000"
  },
  {
    "text": "the cloud they're called application settings but let's go ahead here and we'll say hey I have this environment",
    "start": "1285509",
    "end": "1292169"
  },
  {
    "text": "variable and I want it to connect to this oops this really long connection",
    "start": "1292169",
    "end": "1299039"
  },
  {
    "text": "string no one used this Cosmos DB database no one look at the video recording okay so that's it so that's my",
    "start": "1299039",
    "end": "1305399"
  },
  {
    "text": "function that I wrote quickly here I use bindings to make my life a little bit easier and now",
    "start": "1305399",
    "end": "1312919"
  },
  {
    "text": "let's go ahead and run this and test it out okay so I'm gonna go ahead and click",
    "start": "1313860",
    "end": "1319530"
  },
  {
    "start": "1316000",
    "end": "1331000"
  },
  {
    "text": "the Run button I don't know where my solution Explorer went things kind of wigged out on me a second ago but it doesn't really matter okay so I'm now",
    "start": "1319530",
    "end": "1325590"
  },
  {
    "text": "running this code I have my as your functions runtime which is spun up inside a visual studio this is the exact",
    "start": "1325590",
    "end": "1332670"
  },
  {
    "text": "same runtime that we'll be running when I publish to the cloud so I know that if it works on my local machine it will",
    "start": "1332670",
    "end": "1337980"
  },
  {
    "text": "work when I publish it because it's the same runtime that's running here it's given me this nice end point that I can",
    "start": "1337980",
    "end": "1344580"
  },
  {
    "text": "test locally so here's my add your function now that I can test on my machine so let's go ahead and copy this",
    "start": "1344580",
    "end": "1350670"
  },
  {
    "text": "endpoint I'm just gonna send a request using postman this Windows machine is",
    "start": "1350670",
    "end": "1356040"
  },
  {
    "text": "really struggling but that's okay all right so I'm gonna send a request to that endpoint and I'm gonna pass in this",
    "start": "1356040",
    "end": "1362820"
  },
  {
    "start": "1357000",
    "end": "1394000"
  },
  {
    "text": "request body the shift keys like locked right now but I'm not too worried about it I don't think so let's just keep",
    "start": "1362820",
    "end": "1369210"
  },
  {
    "text": "going all right so let's go ahead and click send it's gone ahead now and fired",
    "start": "1369210",
    "end": "1374670"
  },
  {
    "text": "off that function in fact if I come back over here to the logs it return back hello Jeff I could change this to",
    "start": "1374670",
    "end": "1381450"
  },
  {
    "text": "whatever I want it to as well like hello NDC and go ahead and send this again and",
    "start": "1381450",
    "end": "1386940"
  },
  {
    "text": "now it says hello NDC and I can actually see my logs that are been generated here just to prove that this worked let's",
    "start": "1386940",
    "end": "1394110"
  },
  {
    "text": "come look at this cosmos DB database now in the cloud and if I click refresh we should now see two new documents that",
    "start": "1394110",
    "end": "1400650"
  },
  {
    "text": "got created for me one with the request body of name is NDC and this is just the metadata that cosmos DB generates and",
    "start": "1400650",
    "end": "1407850"
  },
  {
    "text": "the other one which is named Jeff so now I have this function that I could write check in the source control and then",
    "start": "1407850",
    "end": "1414630"
  },
  {
    "text": "deploy once I'm ready to go which is now integrating with cosmos DB as an azure function okay so hopefully",
    "start": "1414630",
    "end": "1422070"
  },
  {
    "text": "if you hadn't used functions before that's a bit of a walk through of how some of those concepts weave into what a function looks like okay so now that",
    "start": "1422070",
    "end": "1430020"
  },
  {
    "text": "you've seen functions it's useful to know some of the common architectures where I've seen these fit in very well with some of our customers so here's the",
    "start": "1430020",
    "end": "1436920"
  },
  {
    "start": "1436000",
    "end": "1568000"
  },
  {
    "text": "top five scenarios that I've seen the first one is any time you have an event stream that you want to be doing some",
    "start": "1436920",
    "end": "1443130"
  },
  {
    "text": "processing on so these events might be IOT events coming from IOT devices or Machinery anything that's like in an",
    "start": "1443130",
    "end": "1450390"
  },
  {
    "text": "event hub or kafka something that's pushing a ton of data diagnostic logs whatever it is because the nice part",
    "start": "1450390",
    "end": "1457800"
  },
  {
    "text": "about functions is that I can just write the code I want to execute for a single event and click publish and now that",
    "start": "1457800",
    "end": "1465000"
  },
  {
    "text": "piece of code will run for every single event that's happening so it's kind of very easy to just attach this to the",
    "start": "1465000",
    "end": "1470250"
  },
  {
    "text": "stream and have it scale automatically to do some processing on top of that stream web api is a mobile backends is",
    "start": "1470250",
    "end": "1476790"
  },
  {
    "text": "another very popular one one of our larger customers has a mobile app for a retail store and how it works is if you",
    "start": "1476790",
    "end": "1483210"
  },
  {
    "text": "want to send somebody like a gift card you open up the mobile app and you're like hey I want to send Jeff $20 and you",
    "start": "1483210",
    "end": "1490620"
  },
  {
    "text": "select my account and you click send when you click that send button and it's actually kicking off some as your",
    "start": "1490620",
    "end": "1495630"
  },
  {
    "text": "functions behind the scenes which go and charge their accounts and the email do all those other great things and it's a",
    "start": "1495630",
    "end": "1501450"
  },
  {
    "text": "great fit forum because they don't have to worry about managing this API and scaling it they just publish this as a",
    "start": "1501450",
    "end": "1507030"
  },
  {
    "text": "function and it works you'll hear serverless often used and talked about as glue between systems you might have a bunch",
    "start": "1507030",
    "end": "1513990"
  },
  {
    "text": "of data that's in some file system and you want that data in a sequel database",
    "start": "1513990",
    "end": "1519060"
  },
  {
    "text": "or in a no sequel database being able to just really simply write a function and say hey whenever new data gets added or",
    "start": "1519060",
    "end": "1526440"
  },
  {
    "text": "every hour go pull the data and push it over to this system is a really nice fit to just kind of glue things together",
    "start": "1526440",
    "end": "1532590"
  },
  {
    "text": "if you're using pubsubhubbub ESB type",
    "start": "1532590",
    "end": "1540120"
  },
  {
    "text": "patterns and then for just general automation or scripting if there's ever a task that you're doing that you want",
    "start": "1540120",
    "end": "1546150"
  },
  {
    "text": "to automate something very simple like recently I was just on a call with a customer who uses functions to help",
    "start": "1546150",
    "end": "1552990"
  },
  {
    "text": "automate their pull request process so they have it so that whenever anybody opens up a pull request it fires off a",
    "start": "1552990",
    "end": "1558960"
  },
  {
    "text": "function that does some code checks very quickly for them it's not they don't have pull requests happening 24/7 but",
    "start": "1558960",
    "end": "1565740"
  },
  {
    "text": "whenever they do now this code can run one of the customers I'll just share one use case Carl Zeiss who does very",
    "start": "1565740",
    "end": "1574170"
  },
  {
    "start": "1568000",
    "end": "1605000"
  },
  {
    "text": "high-end electronics and imaging devices they've been using Azure functions",
    "start": "1574170",
    "end": "1579840"
  },
  {
    "text": "there's a use case they published two strimer stop Microsoft comm that monitors and scales to field devices",
    "start": "1579840",
    "end": "1586710"
  },
  {
    "text": "that are connecting to back-end REST API s and that's all powered by functions and just to kind of bring the point home",
    "start": "1586710",
    "end": "1592890"
  },
  {
    "text": "and so I'm not the only one saying it the thing that they call out is that the scalability of Azure functions is amazing they can send millions of",
    "start": "1592890",
    "end": "1599640"
  },
  {
    "text": "records in the platform adjusts automatically to the load so very low operations and very high scale okay now",
    "start": "1599640",
    "end": "1606990"
  },
  {
    "start": "1605000",
    "end": "1624000"
  },
  {
    "text": "let's talk about some more advanced tips and best practices these are some of the common hiccups that I see people do when",
    "start": "1606990",
    "end": "1613710"
  },
  {
    "text": "there's a support ticket that comes in or somebody says hey Jeff I tried to use functions and things aren't working as I",
    "start": "1613710",
    "end": "1619560"
  },
  {
    "text": "expected these are some of the top things that I've seen and how to get around them the first is another concept",
    "start": "1619560",
    "end": "1626820"
  },
  {
    "start": "1624000",
    "end": "1635000"
  },
  {
    "text": "to understand which is how instances and resources are managed actually I do want",
    "start": "1626820",
    "end": "1632430"
  },
  {
    "text": "to show you this because it's a little bit easier to show so let's come back here to this let me open up my solution",
    "start": "1632430",
    "end": "1638640"
  },
  {
    "start": "1635000",
    "end": "1659000"
  },
  {
    "text": "Explorer wherever that went what do I do view here view solution Explorer so this",
    "start": "1638640",
    "end": "1644910"
  },
  {
    "text": "has your function okay very simple REST API this is in my app let's say I go",
    "start": "1644910",
    "end": "1650790"
  },
  {
    "text": "ahead now and publish this to the cloud okay I have one just like this it's already published I'm not going to go through this now and what I do want to",
    "start": "1650790",
    "end": "1657600"
  },
  {
    "text": "show though is I have here a live stream connected to application insight so one",
    "start": "1657600",
    "end": "1664860"
  },
  {
    "start": "1659000",
    "end": "1677000"
  },
  {
    "text": "of the tips is hook your Azure functions into a monitoring solution like application insights which we integrate",
    "start": "1664860",
    "end": "1670380"
  },
  {
    "text": "with out of the box because it will give you insights and observability into how your function is performing now what I'm",
    "start": "1670380",
    "end": "1675930"
  },
  {
    "text": "going to do here is that I actually have a script ready to run which uses a load",
    "start": "1675930",
    "end": "1681270"
  },
  {
    "start": "1677000",
    "end": "1698000"
  },
  {
    "text": "testing tool called artillery and I want to simulate 1,000 requests happening",
    "start": "1681270",
    "end": "1687030"
  },
  {
    "text": "every single second at one of those function api's like I just wrote okay now nothing has been called yet like",
    "start": "1687030",
    "end": "1694470"
  },
  {
    "text": "this thing is totally empty in fact just to show this I'll call it one time really quickly let's call this API and",
    "start": "1694470",
    "end": "1699810"
  },
  {
    "start": "1698000",
    "end": "1797000"
  },
  {
    "text": "you'll see what happens here in our live monitoring so I can actually see that an instance has now spun up to execute that",
    "start": "1699810",
    "end": "1707190"
  },
  {
    "text": "request right and it's already done you see I had one one execution that happened one lonely execution now I'm",
    "start": "1707190",
    "end": "1713880"
  },
  {
    "text": "gonna run this load test I'm going push a thousand requests a second at this function and I want you to pay",
    "start": "1713880",
    "end": "1719190"
  },
  {
    "text": "attention to the instances down here so there's a thousand requests coming in and you'll see how quickly and how many",
    "start": "1719190",
    "end": "1725580"
  },
  {
    "text": "servers are going to be scaled up behind the scenes to process this load so suspense now is high let's go ahead and",
    "start": "1725580",
    "end": "1732389"
  },
  {
    "text": "run this test let me wait for it to start up and initialize I think it should be going so we'll come back here",
    "start": "1732389",
    "end": "1738659"
  },
  {
    "text": "yep it started up ICOC already before I finished my first sentence we're at four",
    "start": "1738659",
    "end": "1745230"
  },
  {
    "text": "servers that have spun up online and are helping process the requests in fact it's seeing that the load isn't stopping",
    "start": "1745230",
    "end": "1751440"
  },
  {
    "text": "so now it's at five servers six servers very quickly this has been able to scale up as the requests per second continues",
    "start": "1751440",
    "end": "1758639"
  },
  {
    "text": "to increase seven servers you can see counter up here eight servers this is nice if any of you have had to deploy a server before it usually is not as quick",
    "start": "1758639",
    "end": "1765809"
  },
  {
    "text": "as this sentence that I'm completing right now but already that function that we wrote a second ago is now processing",
    "start": "1765809",
    "end": "1772590"
  },
  {
    "text": "across nine different servers and it looks like it's hitting about 500",
    "start": "1772590",
    "end": "1777779"
  },
  {
    "text": "requests a second right now the requester ations still really low so I don't know if my my computer is bogged",
    "start": "1777779",
    "end": "1783269"
  },
  {
    "text": "down by me having too many things open and it's not sending more than 500 a second but that's okay regardless you",
    "start": "1783269",
    "end": "1788669"
  },
  {
    "text": "can see I'm processing 500 requests a second across nine fully powered as your",
    "start": "1788669",
    "end": "1794669"
  },
  {
    "text": "servers running right now it looks like this is very happy at 500 requests a second so I'm just gonna stop this right",
    "start": "1794669",
    "end": "1801120"
  },
  {
    "start": "1797000",
    "end": "1808000"
  },
  {
    "text": "now to save my computer from blowing up okay so we'll go ahead and stop that okay so a few things to note is we",
    "start": "1801120",
    "end": "1807960"
  },
  {
    "text": "talked about what just happened so as your functions will automatically add instances or servers as needed in this",
    "start": "1807960",
    "end": "1815820"
  },
  {
    "start": "1808000",
    "end": "1832000"
  },
  {
    "text": "case for this load test it realized it needs nine fully powered servers running in the cloud to process that load each",
    "start": "1815820",
    "end": "1822539"
  },
  {
    "text": "of those instances will have my app running on top of it okay so that same runtime you saw me running in visual",
    "start": "1822539",
    "end": "1829200"
  },
  {
    "text": "studio those are running on all of those instances now every single one of those",
    "start": "1829200",
    "end": "1834539"
  },
  {
    "start": "1832000",
    "end": "1878000"
  },
  {
    "text": "instances may be executing multiple things in parallel right these are powerful servers I don't need to just do",
    "start": "1834539",
    "end": "1840539"
  },
  {
    "text": "one request per server I could be processing multiple multiple requests in",
    "start": "1840539",
    "end": "1845759"
  },
  {
    "text": "parallel per instance so there is some parallel I'm here happening even on top of an",
    "start": "1845759",
    "end": "1851039"
  },
  {
    "text": "instance for a single instance now the reason this is important and one of the",
    "start": "1851039",
    "end": "1856710"
  },
  {
    "text": "best practices to know is that you can take advantage of the fact that yes there are servers powering server lists",
    "start": "1856710",
    "end": "1862799"
  },
  {
    "text": "and you can reuse certain resources across executions so for example a very",
    "start": "1862799",
    "end": "1870330"
  },
  {
    "text": "common example of this is a sequel client in your code maybe your code needs to talk to a sequel database in",
    "start": "1870330",
    "end": "1875879"
  },
  {
    "text": "you're using sequel client a very common mistake that people make is that in",
    "start": "1875879",
    "end": "1881039"
  },
  {
    "start": "1878000",
    "end": "1906000"
  },
  {
    "text": "their code they will do something like var sequel clients equals new sequel",
    "start": "1881039",
    "end": "1886469"
  },
  {
    "text": "client and then my connection string now the problem with this is that every",
    "start": "1886469",
    "end": "1892349"
  },
  {
    "text": "single time my function executes it's going to instantiate a brand new sequel",
    "start": "1892349",
    "end": "1897389"
  },
  {
    "text": "client and have to establish a brand new connection to that sequel server but",
    "start": "1897389",
    "end": "1902580"
  },
  {
    "text": "we're not throwing away your servers after every single execution in fact you'll notice if I even come back here",
    "start": "1902580",
    "end": "1908429"
  },
  {
    "start": "1906000",
    "end": "1923000"
  },
  {
    "text": "to the monitoring solution we have I still have nine servers online all of the code that I instantiated all of the",
    "start": "1908429",
    "end": "1915509"
  },
  {
    "text": "public or private static variables are still set they still preserve their values so if I would have done something",
    "start": "1915509",
    "end": "1921869"
  },
  {
    "text": "like private static sequel client that sequel client would have only had to",
    "start": "1921869",
    "end": "1928229"
  },
  {
    "start": "1923000",
    "end": "1930000"
  },
  {
    "text": "establish one connection and that connection could still be alive and I could reuse it for subsequent executions",
    "start": "1928229",
    "end": "1934289"
  },
  {
    "start": "1930000",
    "end": "1985000"
  },
  {
    "text": "okay so again here's the anti pattern that I see a lot of people do HTTP client is the other one this comes up a lot this",
    "start": "1934289",
    "end": "1940469"
  },
  {
    "text": "is an anti-pattern for a number of reasons if you're interested there's a link down here ok so here's my function",
    "start": "1940469",
    "end": "1945599"
  },
  {
    "text": "code does it matter the language if I do something like using var client equals",
    "start": "1945599",
    "end": "1950729"
  },
  {
    "text": "new HTTP client that means for every one of those thousand requests that are coming in I'm having to instantiate a",
    "start": "1950729",
    "end": "1957389"
  },
  {
    "text": "whole new HTTP client my instance is going to be really inefficient but I'm",
    "start": "1957389",
    "end": "1962519"
  },
  {
    "text": "also going to exhaust the available sockets pretty quickly because there's only a limited amount of sockets I have",
    "start": "1962519",
    "end": "1967769"
  },
  {
    "text": "on one of these VMs and if I'm pushing high load I'm gonna exhaust them just because I'm not managing things very",
    "start": "1967769",
    "end": "1973440"
  },
  {
    "text": "well ok so again there's a link here if you're interested just remember these instances are established but you can",
    "start": "1973440",
    "end": "1980789"
  },
  {
    "text": "actually reuse resources across the you can almost have kind of simple caches as well so the better way to do",
    "start": "1980789",
    "end": "1987010"
  },
  {
    "start": "1985000",
    "end": "2030000"
  },
  {
    "text": "this I'm gonna create an HTTP client as a singleton in this case a private static HTTP client this is thread safe",
    "start": "1987010",
    "end": "1994570"
  },
  {
    "text": "and what this will enable me to do is now as multiple requests are coming in I can reuse the same client and make",
    "start": "1994570",
    "end": "2002460"
  },
  {
    "text": "multiple requests so my codes gonna be a lot more performant it's gonna scale a lot nicer and I'm not gonna run out of a",
    "start": "2002460",
    "end": "2008100"
  },
  {
    "text": "sockets okay so this could be sequel client this could be event hook client this could even be some type of an",
    "start": "2008100",
    "end": "2014400"
  },
  {
    "text": "in-memory dictionary or cache and that's gonna hang around you can keep reusing that as you want so very very important",
    "start": "2014400",
    "end": "2021510"
  },
  {
    "text": "tip that's gonna make a big difference and if you don't do it things might start working quirky for you okay moving",
    "start": "2021510",
    "end": "2028950"
  },
  {
    "text": "right along because I want to give plenty of time for durable the last tip I'm gonna give in regards to scale I'm gonna paint a little story for you okay",
    "start": "2028950",
    "end": "2035790"
  },
  {
    "start": "2030000",
    "end": "2239000"
  },
  {
    "text": "so if you think about this example we just did with the HTTP load test where",
    "start": "2035790",
    "end": "2041340"
  },
  {
    "text": "unfortunately I wasn't able to push a big enough load that's okay imagine that we have two cities ok city a and city B",
    "start": "2041340",
    "end": "2048179"
  },
  {
    "text": "and everybody on city a wants to get over to city B and let's say there's that 1,000 people who want to get across",
    "start": "2048179",
    "end": "2055139"
  },
  {
    "text": "and I have one vote now the question that I have to answer is how many people",
    "start": "2055140",
    "end": "2061290"
  },
  {
    "text": "can I fit on one boat for one trip to city B now if these are small children",
    "start": "2061290",
    "end": "2067080"
  },
  {
    "text": "right maybe they're like 5 years old maybe I could fit like 30 people on one of those boat trips and that's cool",
    "start": "2067080",
    "end": "2073500"
  },
  {
    "text": "because it means I have to take less trips back and forth but if they're bigger people maybe it's like a thousand people who are my size maybe I can only",
    "start": "2073500",
    "end": "2080158"
  },
  {
    "text": "fit like two or three people on one of these boats before I get worried about it ok don't worry I'm gonna tie this back into functions I promise now even",
    "start": "2080159",
    "end": "2087179"
  },
  {
    "text": "if I have multiple boats like maybe I have 10 boats or 20 boats there's still the question I have to answer which is",
    "start": "2087179",
    "end": "2095190"
  },
  {
    "text": "how many people can fit on a single boat at one time maybe I have a thousand",
    "start": "2095190",
    "end": "2100260"
  },
  {
    "text": "boats and that's ok but I want to make sure that I don't load too much onto a single boat by itself ok so just",
    "start": "2100260",
    "end": "2106350"
  },
  {
    "text": "remember that things can scale out across multiple boats but I need to make sure I'm aware of how many things can",
    "start": "2106350",
    "end": "2111570"
  },
  {
    "text": "fit on a boat at one time now what does this have to do with how's your functions so you just softer that HTTP example",
    "start": "2111570",
    "end": "2119100"
  },
  {
    "text": "that I scaled out to a bunch of different instances and the service itself does as good of a job as it can",
    "start": "2119100",
    "end": "2125760"
  },
  {
    "text": "to allocate and distribute your your load so that each of these instances isn't processing too much we do our best",
    "start": "2125760",
    "end": "2132450"
  },
  {
    "text": "effort but sometimes our best effort isn't perfect okay and we understand that we're not perfect at this and so we",
    "start": "2132450",
    "end": "2139800"
  },
  {
    "text": "may do something like push too many executions onto one instance at one time we would overfill your boat okay so you",
    "start": "2139800",
    "end": "2147780"
  },
  {
    "text": "want to make sure that your function isn't having to execute too much on one of these single instances now when as",
    "start": "2147780",
    "end": "2153720"
  },
  {
    "text": "your functions just so you know a single instance is one and a half gigs of memory and one core of CPU so you can",
    "start": "2153720",
    "end": "2161010"
  },
  {
    "text": "think in terms of how much can I process in a gig and a half of memory in one core CPU if for some reason we've gotten",
    "start": "2161010",
    "end": "2167610"
  },
  {
    "text": "the math wrong you're using some of the monitoring like I've just shown you and it looks like we're overloading an",
    "start": "2167610",
    "end": "2172800"
  },
  {
    "text": "instance like it's memory utilization is bad or it's starting to timeout or get overwhelmed we do give you this",
    "start": "2172800",
    "end": "2178710"
  },
  {
    "text": "configuration file which is called the host dot JSON file where you can actually tell us how much we can send",
    "start": "2178710",
    "end": "2185940"
  },
  {
    "text": "and how much data we can push to a single instance and that will allow our scaling to compensate for it and scale",
    "start": "2185940",
    "end": "2191940"
  },
  {
    "text": "out appropriately okay so in this case for like a very simple if I'm just doing",
    "start": "2191940",
    "end": "2197010"
  },
  {
    "text": "simple addition like hey take value 1 and add it to value 2 I could probably be doing a hundred of those in parallel",
    "start": "2197010",
    "end": "2203310"
  },
  {
    "text": "at a time it's not doing that much work but maybe I'm doing like Bitcoin mining a cryptocurrency it's not profitable",
    "start": "2203310",
    "end": "2209820"
  },
  {
    "text": "don't do it on functions but if I was that's probably more memory or CPU intensive I might want to tell as your",
    "start": "2209820",
    "end": "2217440"
  },
  {
    "text": "functions hey don't send too much on a single instance okay there's a lot more information here in terms of scalability",
    "start": "2217440",
    "end": "2224100"
  },
  {
    "text": "so that you can control how functions scale to preserve things like downstream systems I'm not going to go into that",
    "start": "2224100",
    "end": "2230520"
  },
  {
    "text": "right now but just note that there's a lot of config here that you should be aware of and this again applies to just",
    "start": "2230520",
    "end": "2236190"
  },
  {
    "text": "distributed systems in parallel processing in general ok the other thing",
    "start": "2236190",
    "end": "2241530"
  },
  {
    "start": "2239000",
    "end": "2253000"
  },
  {
    "text": "I'll let you know is that without your functions you do have a lot of fun flexibility and that you can run your",
    "start": "2241530",
    "end": "2247410"
  },
  {
    "text": "function in your ideal environment so up into this point I pretty much talked exclusively about consumption",
    "start": "2247410",
    "end": "2254580"
  },
  {
    "start": "2253000",
    "end": "2337000"
  },
  {
    "text": "functions these are functions that run in the service plan you only pay for what you use we only allocate resources",
    "start": "2254580",
    "end": "2261090"
  },
  {
    "text": "for you on-demand but that's only one of the many different flavors that your functions can run in you can run your",
    "start": "2261090",
    "end": "2268740"
  },
  {
    "text": "Asha functions in what's called an app service plan this is like the website plan inside of Azure and this plan",
    "start": "2268740",
    "end": "2275190"
  },
  {
    "text": "allows you to reserve and have reserve capacity for your functions so instead",
    "start": "2275190",
    "end": "2280650"
  },
  {
    "text": "of saying hey spin these up on the man you could say hey I want twenty instances that are my instances that I",
    "start": "2280650",
    "end": "2287370"
  },
  {
    "text": "can manage how I want choose different hardware configurations maybe even have websites or other processes running on",
    "start": "2287370",
    "end": "2293250"
  },
  {
    "text": "top of it you can still deploy your functions to run there you can run in your own dedicated isolated environments",
    "start": "2293250",
    "end": "2299370"
  },
  {
    "text": "connected to things like V nets you can run on premises with Azure stack there's also an on-premises which is called as",
    "start": "2299370",
    "end": "2305850"
  },
  {
    "text": "your functions runtime which is similar to the runtime I just had in Visual Studio which doesn't require the full",
    "start": "2305850",
    "end": "2311760"
  },
  {
    "text": "Azure stack and finally you can run your Azure functions on IOT devices so that",
    "start": "2311760",
    "end": "2316800"
  },
  {
    "text": "same function that I just wrote at the beginning if I wanted to when I've done demos like this before if I had a",
    "start": "2316800",
    "end": "2322170"
  },
  {
    "text": "Raspberry Pi sitting next to me like a really simple IOT device I could deploy and have that function run on that IOT",
    "start": "2322170",
    "end": "2328350"
  },
  {
    "text": "device as well connected or disconnected so you can have kind of take advantage",
    "start": "2328350",
    "end": "2333720"
  },
  {
    "text": "of this programming model but then host it in the environment that best fits you ok so we've got about 20 minutes left",
    "start": "2333720",
    "end": "2340890"
  },
  {
    "start": "2337000",
    "end": "2358000"
  },
  {
    "text": "we'll probably maybe even finished a little bit early in case there's questions and this is the last session so the last thing I want to talk about",
    "start": "2340890",
    "end": "2346830"
  },
  {
    "text": "is how you can orchestrate processes with functions you saw at the beginning during that doorbell example how I used",
    "start": "2346830",
    "end": "2353610"
  },
  {
    "text": "as your logic apps to kind of create that process to process the video but",
    "start": "2353610",
    "end": "2358740"
  },
  {
    "start": "2358000",
    "end": "2551000"
  },
  {
    "text": "there's actually another way that you can process your your functions and orchestrate data and the other way that",
    "start": "2358740",
    "end": "2366120"
  },
  {
    "text": "I want to spend the rest of the time talking about is a newer piece of Azure functions which is again very unique to",
    "start": "2366120",
    "end": "2371610"
  },
  {
    "text": "Azure inside of service is called Azure durable functions I have screenshots of",
    "start": "2371610",
    "end": "2376980"
  },
  {
    "text": "durable functions up here on the right or your left I'm sorry on the left",
    "start": "2376980",
    "end": "2382170"
  },
  {
    "text": "as your directions are hard durable functions you'll see here I have one",
    "start": "2382170",
    "end": "2387810"
  },
  {
    "text": "example here in JavaScript and one example here in c-sharp and what I've actually done here is I'm able to",
    "start": "2387810",
    "end": "2394080"
  },
  {
    "text": "describe orchestrating and calling different functions and activities but",
    "start": "2394080",
    "end": "2399420"
  },
  {
    "text": "I'm describing that all through code so to kind of help illustrate why this might be needed for one if I'm running",
    "start": "2399420",
    "end": "2406320"
  },
  {
    "text": "in a microservices environment which serverless is a natural fit and some of these like single function single piece",
    "start": "2406320",
    "end": "2414000"
  },
  {
    "text": "of functionality type mentality that microservices bring it's very often that to do something I'm gonna need to call",
    "start": "2414000",
    "end": "2420570"
  },
  {
    "text": "multiple of these things so durable functions in logic apps are a great way to call multiple but the other thing to",
    "start": "2420570",
    "end": "2426240"
  },
  {
    "text": "be aware of is for server lists and the server list plan a single function can",
    "start": "2426240",
    "end": "2431640"
  },
  {
    "text": "only run for a maximum of 10 minutes which means if you have a piece of data or some processing that needs to occur",
    "start": "2431640",
    "end": "2437790"
  },
  {
    "text": "that may be running much longer than 10 minutes that becomes very difficult to manage and you have to end up splitting",
    "start": "2437790",
    "end": "2443970"
  },
  {
    "text": "up the task and without something like durable functions or logic gaps you end up having to create queues and do",
    "start": "2443970",
    "end": "2450000"
  },
  {
    "text": "everything yourself here with durable functions and with logic apps you can actually run things that last for a very",
    "start": "2450000",
    "end": "2455430"
  },
  {
    "text": "long time and we will manage the orchestration and state for you so that",
    "start": "2455430",
    "end": "2460890"
  },
  {
    "text": "these can run indefinitely so let's talk about as your durable functions it's an extension that you can pull into your",
    "start": "2460890",
    "end": "2468060"
  },
  {
    "text": "app there's a bunch of documentation on this I'd encourage you to look at look at that documentation as well because",
    "start": "2468060",
    "end": "2474060"
  },
  {
    "text": "I'm not gonna be able to do it justice here in the last 15 minutes it enables you to run these long-running and",
    "start": "2474060",
    "end": "2479400"
  },
  {
    "text": "stateful serverless orchestrations you can write these in c-sharp or in",
    "start": "2479400",
    "end": "2485580"
  },
  {
    "text": "JavaScript right now this slide isn't fully up to date I guess JavaScript just got announced last month this will",
    "start": "2485580",
    "end": "2492300"
  },
  {
    "text": "manage the state the checkpoints the queuing all for you it's built on top of some open source technology called the",
    "start": "2492300",
    "end": "2498330"
  },
  {
    "text": "durable task framework which is just an open source framework to enable you to durably execute things so it's very nice",
    "start": "2498330",
    "end": "2505560"
  },
  {
    "text": "to be able to manage things so a few patterns that it solves for just to give you another flavor it's kind of like",
    "start": "2505560",
    "end": "2511230"
  },
  {
    "text": "function chaining I have function one I want to call function to them function three function 4",
    "start": "2511230",
    "end": "2516320"
  },
  {
    "text": "without durable I would end up having to do something like this where I would drop a message into a queue this one",
    "start": "2516320",
    "end": "2522050"
  },
  {
    "text": "would have to pick it up from a queue and so forth that gets really challenging to manage and to monitor and",
    "start": "2522050",
    "end": "2527630"
  },
  {
    "text": "to version with durable functions I can just write c-sharp code to say call function 1 then function to them",
    "start": "2527630",
    "end": "2533510"
  },
  {
    "text": "function 3 another popular one this is what I'm going to show a demo in just a second of is doing some like distributed",
    "start": "2533510",
    "end": "2539930"
  },
  {
    "text": "fan-out fanon or MapReduce type of patterns where maybe you get a bunch of data and you want to process it across a",
    "start": "2539930",
    "end": "2546410"
  },
  {
    "text": "number of parallel executions and you can describe this all again in code a",
    "start": "2546410",
    "end": "2552610"
  },
  {
    "text": "synchronous response is where you want to return back a status endpoint and be",
    "start": "2552610",
    "end": "2557780"
  },
  {
    "text": "able to a pole until the long-running work is complete maybe you have some work that might take 5 minutes to",
    "start": "2557780",
    "end": "2563630"
  },
  {
    "text": "execute and you don't want to have to keep an HTTP request open for five minutes durable will provide out-of-the-box",
    "start": "2563630",
    "end": "2569900"
  },
  {
    "text": "patterns for you to say hey return back an immediate response and then do the work in the background and let them",
    "start": "2569900",
    "end": "2576470"
  },
  {
    "text": "check to find out when the work is done super super useful pattern monitoring saying things like hey go watch this",
    "start": "2576470",
    "end": "2583310"
  },
  {
    "text": "value for the next hour or the next day and tell me if something changes human",
    "start": "2583310",
    "end": "2588470"
  },
  {
    "text": "interaction one of the cool demos and samples we have with durable functions is doing like a text validation pattern",
    "start": "2588470",
    "end": "2594740"
  },
  {
    "text": "where you send somebody a code and you wait for them to put that code into like",
    "start": "2594740",
    "end": "2600500"
  },
  {
    "text": "a website or to text that code to a number it might take them three days before they finally read that text",
    "start": "2600500",
    "end": "2606980"
  },
  {
    "text": "message and send back the text but you could wait that long for that interaction and tie all that together",
    "start": "2606980",
    "end": "2612790"
  },
  {
    "text": "obviously if it's like a authentication thing you don't want to wait that long but I'm just saying they can run for a",
    "start": "2612790",
    "end": "2618050"
  },
  {
    "start": "2618000",
    "end": "2687000"
  },
  {
    "text": "very long time and again this is exactly something dropped that scared me this is",
    "start": "2618050",
    "end": "2623660"
  },
  {
    "text": "an example of that first pattern function chaining but in c-sharp I just",
    "start": "2623660",
    "end": "2629510"
  },
  {
    "text": "say hey call function 1 then call function to call function 3 I'm even",
    "start": "2629510",
    "end": "2634610"
  },
  {
    "text": "passing in inputs so I can pull data and push data between and then all of the rest gets managed for me let's show it",
    "start": "2634610",
    "end": "2641750"
  },
  {
    "text": "an example really quick before I do this piece I'll do this piece a little bit out of order so I want to show you this",
    "start": "2641750",
    "end": "2647060"
  },
  {
    "text": "in action so I have an example very quickly we I have a website let me show you the",
    "start": "2647060",
    "end": "2653100"
  },
  {
    "text": "website first this is a website that's powered by service technology it's beautiful it was written by one of the",
    "start": "2653100",
    "end": "2659340"
  },
  {
    "text": "azure cloud advocates it's a simple store I could come in here and add some items go ahead and check out but the",
    "start": "2659340",
    "end": "2667680"
  },
  {
    "text": "nice thing about this function is that whenever somebody Plato this is an email not not my credit card when any whenever",
    "start": "2667680",
    "end": "2675150"
  },
  {
    "text": "anybody comes in here and places in order let me make sure I put in the right test credit card number it's",
    "start": "2675150",
    "end": "2681120"
  },
  {
    "text": "actually right here when I push pay it's calling an azure function behind the scenes and processing this all server",
    "start": "2681120",
    "end": "2687480"
  },
  {
    "text": "lessly so that the order process piece doesn't actually take any compute out of my website now this is using cosmos DB",
    "start": "2687480",
    "end": "2695130"
  },
  {
    "text": "behind the scenes to store all of these orders and what I want to be able to do is generate a report so I want to go and",
    "start": "2695130",
    "end": "2702780"
  },
  {
    "text": "say hey look at my database and give me the last seven days of orders and for",
    "start": "2702780",
    "end": "2709020"
  },
  {
    "text": "each of those orders there could have been 1,000 orders or 10,000 orders I want you to go and get the current",
    "start": "2709020",
    "end": "2714870"
  },
  {
    "text": "status of that order like hey is the payment been processed has it been shipped has it been delivered what's the",
    "start": "2714870",
    "end": "2720990"
  },
  {
    "text": "status of that order and then returned to me a report now if I was trying to do this without durable this would be",
    "start": "2720990",
    "end": "2726870"
  },
  {
    "text": "really difficult cuz this middle step here could take a really long time if I",
    "start": "2726870",
    "end": "2732210"
  },
  {
    "text": "had a thousand orders that had been placed and I have to do a lookup of a database for each of those thousand orders that could take an hour I don't",
    "start": "2732210",
    "end": "2739050"
  },
  {
    "text": "know it depends on how slow my databases there's no way I could execute that all in a single function but with durable",
    "start": "2739050",
    "end": "2745050"
  },
  {
    "text": "functions I'm able to chain this together in code I'll show you briefly what this looks like and then show you",
    "start": "2745050",
    "end": "2750360"
  },
  {
    "text": "what it looks like actually I'll show you the demo first let me open it up right here and while I wait for this to open let's go ahead and call that report",
    "start": "2750360",
    "end": "2757380"
  },
  {
    "text": "so I have here a URL not this URL you can see a test of this I'm gonna go",
    "start": "2757380",
    "end": "2764229"
  },
  {
    "text": "ahead and kick off this process to generate a report so I just put in the URL to that report up here and what it's",
    "start": "2764229",
    "end": "2771759"
  },
  {
    "text": "immediately returned to me back is some data it said hey I've gone ahead and kicked off this process this is the URL",
    "start": "2771759",
    "end": "2777640"
  },
  {
    "text": "you can follow to get the status if you want to add some data you can post some data here or if you want to terminate",
    "start": "2777640",
    "end": "2783459"
  },
  {
    "text": "this I can terminate here let's just go ahead and click the status endpoint and hopefully I didn't talk too long and",
    "start": "2783459",
    "end": "2789099"
  },
  {
    "text": "this will still be running it already completed so let's do it again it ran too fast let's run another one",
    "start": "2789099",
    "end": "2795640"
  },
  {
    "text": "and I'm going to click that status endpoint cuz I want to show you it does so you can see right here it's still running right it's still right now it's",
    "start": "2795640",
    "end": "2802209"
  },
  {
    "start": "2798000",
    "end": "2830000"
  },
  {
    "text": "looking at cosmos it's spun up a bunch of parallel functions to go look up the",
    "start": "2802209",
    "end": "2807430"
  },
  {
    "text": "status of the database and it's telling me that it's running right now and if I go ahead and refresh this depending on",
    "start": "2807430",
    "end": "2813009"
  },
  {
    "text": "how much data I had it could have still said running but in this case it's completed announcer deported data which",
    "start": "2813009",
    "end": "2818769"
  },
  {
    "text": "said hey you have four that are preparing for shipment one that shipped four that are delivered and two that are",
    "start": "2818769",
    "end": "2824769"
  },
  {
    "text": "being processed so I was able to build this pattern but have it all running as functions and the code here just to give",
    "start": "2824769",
    "end": "2831819"
  },
  {
    "text": "you another sense of what a durable function looks like this is the orchestration all in c-sharp so the",
    "start": "2831819",
    "end": "2837279"
  },
  {
    "text": "first thing that I do is I say hey go get all of the transactions from cosmos DB so that's going to call a function",
    "start": "2837279",
    "end": "2843609"
  },
  {
    "text": "that gets all my transactions from cosmos I'm gonna do a for each loop to create a bunch of parallel tasks so for",
    "start": "2843609",
    "end": "2851140"
  },
  {
    "text": "every single transaction I've had I'm gonna go and call the git process function and here I can just say wait",
    "start": "2851140",
    "end": "2857979"
  },
  {
    "text": "for all of these to be done and again this when all could take an hour it could take two hours what's really cool",
    "start": "2857979",
    "end": "2864880"
  },
  {
    "text": "here with durable function that's hard to wrap your mind around is that this function isn't actually going to be",
    "start": "2864880",
    "end": "2870009"
  },
  {
    "text": "running the entire time whenever there's this awake keyword it's actually going to go to sleep and wait for them to all",
    "start": "2870009",
    "end": "2876279"
  },
  {
    "text": "complete and that will trigger it to wake up and continue and then it will return all the details so a lot of tech",
    "start": "2876279",
    "end": "2881410"
  },
  {
    "text": "here it's pretty advanced in a little bit complex but it's worth knowing it maybe to help visualize that the last",
    "start": "2881410",
    "end": "2887440"
  },
  {
    "text": "thing I'll show you is is how this durable function is running behind the scenes what's actually happening here",
    "start": "2887440",
    "end": "2892779"
  },
  {
    "start": "2888000",
    "end": "2925000"
  },
  {
    "text": "how are we able to run these long-running processes still have it be service not having to pay a bunch of money so here I have a",
    "start": "2892779",
    "end": "2899980"
  },
  {
    "text": "very simple orchestration this is in c-sharp all I'm saying is create a new",
    "start": "2899980",
    "end": "2905230"
  },
  {
    "text": "list call this function called say hello it says Amsterdam I should have updated",
    "start": "2905230",
    "end": "2910330"
  },
  {
    "text": "my slides I'm sorry I've been doing too much traveling this week and then add that to a list okay",
    "start": "2910330",
    "end": "2916210"
  },
  {
    "text": "but hello anyone who's watching this stream from Amsterdam once it's published and that's it so what actually",
    "start": "2916210",
    "end": "2921700"
  },
  {
    "text": "happens is my orchestration is gonna start it's gonna run this first line of code and so it creates a new list and",
    "start": "2921700",
    "end": "2929260"
  },
  {
    "start": "2925000",
    "end": "2959000"
  },
  {
    "text": "it's going to see this await word and when it sees this await word there's this thing called the execution history",
    "start": "2929260",
    "end": "2935620"
  },
  {
    "text": "and the first thing it's going to do is it's going to look at the execution history and it's going to say hey have",
    "start": "2935620",
    "end": "2941050"
  },
  {
    "text": "already done this action have already had this function have it say hello to Amsterdam and in this case I haven't so",
    "start": "2941050",
    "end": "2948790"
  },
  {
    "text": "it's gonna say nope you haven't done this before the orchestrator is like okay cool I'm gonna do this then so it's gonna call",
    "start": "2948790",
    "end": "2954700"
  },
  {
    "text": "that function it's gonna say hey function you have some work to do that activity functions and then sorry it's",
    "start": "2954700",
    "end": "2961840"
  },
  {
    "start": "2959000",
    "end": "2988000"
  },
  {
    "text": "gonna call that function and then you're gonna notice that Orchestrator is gonna go to sleep it's gonna scale the zero",
    "start": "2961840",
    "end": "2966970"
  },
  {
    "text": "it's gonna disappear it's done for now the activity function gets triggered it's been told that has some work to do",
    "start": "2966970",
    "end": "2974050"
  },
  {
    "text": "it executes the work and in this case the response is hello Amsterdam should say hello Norway I'm sorry that",
    "start": "2974050",
    "end": "2981430"
  },
  {
    "text": "functions done that function goes to sleep and you'll notice all of this has been stored in the execution history now",
    "start": "2981430",
    "end": "2988300"
  },
  {
    "text": "once that activity function is done it wakes up the orchestrator so now my Orchestrator wakes back up but here's",
    "start": "2988300",
    "end": "2995050"
  },
  {
    "text": "the part that's important to understand when that Orchestrator wakes back up it doesn't start from this line right",
    "start": "2995050",
    "end": "3001590"
  },
  {
    "text": "here it starts from the very beginning again because there's no way to just like resume a program from the very",
    "start": "3001590",
    "end": "3006750"
  },
  {
    "text": "middle after you've scaled to zero so the first thing it's gonna do is it's going to create a new list now it's",
    "start": "3006750",
    "end": "3012270"
  },
  {
    "text": "going to see this awake keyword and it's going to look at the execution history it's gonna say hey have we already called Amsterdam or say hello Amsterdam",
    "start": "3012270",
    "end": "3019740"
  },
  {
    "text": "in this case it has like it's already done that action so my history is like yep you've already done this thing",
    "start": "3019740",
    "end": "3025110"
  },
  {
    "text": "Marcus Tudor says great I'm gonna move on and do my next step and then it's going to continue to do",
    "start": "3025110",
    "end": "3030839"
  },
  {
    "text": "its next step and then return back the responses so every time one of these functions is completed my orchestration",
    "start": "3030839",
    "end": "3037740"
  },
  {
    "text": "is going to replay now that's extremely important to know because this impacts",
    "start": "3037740",
    "end": "3043859"
  },
  {
    "text": "what your Orchestrator can do it is very important to know that your Orchestrator code must be deterministic you cannot",
    "start": "3043859",
    "end": "3051390"
  },
  {
    "text": "have values in your orchestration that will be different every time it runs so",
    "start": "3051390",
    "end": "3056609"
  },
  {
    "text": "for example maybe I have an if condition I don't want to say if date/time dot now",
    "start": "3056609",
    "end": "3062630"
  },
  {
    "text": "equal equals something right because every time that code gets replayed the",
    "start": "3062630",
    "end": "3067890"
  },
  {
    "text": "date time is going to be different or if I generate a grid that grid is going to be generated different on every single",
    "start": "3067890",
    "end": "3073559"
  },
  {
    "text": "replay and it can corrupt my state so never write logic that depends on random numbers date time or grids okay don't do",
    "start": "3073559",
    "end": "3082410"
  },
  {
    "text": "i/o inside of an Orchestrator function do your i/o inside of your activities don't write infinite loops that's just a",
    "start": "3082410",
    "end": "3089039"
  },
  {
    "text": "good rule in general I figured we should throw it in every tech don't write infinite loops make sure that these",
    "start": "3089039",
    "end": "3094140"
  },
  {
    "text": "things terminate there are patterns though for all of these so if you have something that is running infinitely",
    "start": "3094140",
    "end": "3100950"
  },
  {
    "text": "there is a safe way to do this endurable that doesn't result in you having infinite replays there are ways to do",
    "start": "3100950",
    "end": "3108390"
  },
  {
    "text": "i/o inside of your activities and there are ways to do like get a current date time or generate a grid or generate a",
    "start": "3108390",
    "end": "3114390"
  },
  {
    "text": "random number but you need to make sure you're leveraging the built-in pieces of",
    "start": "3114390",
    "end": "3119490"
  },
  {
    "text": "functionality we have in the orchestrator that enable us to do this in a deterministic way okay so again a",
    "start": "3119490",
    "end": "3125880"
  },
  {
    "text": "lot of kind of advanced concepts here with durable functions but they're extremely powerful for you",
    "start": "3125880",
    "end": "3132569"
  },
  {
    "start": "3131000",
    "end": "3224000"
  },
  {
    "text": "the last thing I'll finish with is we've shown two ways to orchestrate data now we've shown just recently durable",
    "start": "3132569",
    "end": "3139619"
  },
  {
    "text": "functions which they should do it in code at the beginning we showed you logic apps which lets you do it in that",
    "start": "3139619",
    "end": "3144839"
  },
  {
    "text": "kind of visual designer that I showed you so which one should you use durable functions is a stateful process",
    "start": "3144839",
    "end": "3151019"
  },
  {
    "text": "Orchestrator not necessarily an integration service so logic apps has a",
    "start": "3151019",
    "end": "3156210"
  },
  {
    "text": "bunch of out-of-the-box connectors it has things like Edda fact and x12 and the types of things you would expect",
    "start": "3156210",
    "end": "3162329"
  },
  {
    "text": "from servus almost like BizTalk server durable is not that rich in those types",
    "start": "3162329",
    "end": "3167530"
  },
  {
    "text": "of features so if you're looking at something that's doing integration at that level logic apps may be the better",
    "start": "3167530",
    "end": "3174700"
  },
  {
    "text": "fit however there is a lot of healthy overlap between the two so a lot of it comes down to personal preference in",
    "start": "3174700",
    "end": "3180339"
  },
  {
    "text": "fact a lot of times I'll talk with developers and they're like you know what I really like how fast I can build things and chain them together and",
    "start": "3180339",
    "end": "3186089"
  },
  {
    "text": "visualize them inside of logic apps so I'm gonna use this declarative workflow in other people who are like hey I'm",
    "start": "3186089",
    "end": "3192549"
  },
  {
    "text": "writing code all day I think in code I'd rather be writing this inside of code in kind of an imperative fashion that's",
    "start": "3192549",
    "end": "3199390"
  },
  {
    "text": "totally cool that's fine I do whatever one makes you happy understanding some of the differences in",
    "start": "3199390",
    "end": "3204789"
  },
  {
    "text": "how they execute for example logic apps doesn't do that replay between every execution it will just do action than",
    "start": "3204789",
    "end": "3211839"
  },
  {
    "text": "action than action than action durable has that replayability these to mix and",
    "start": "3211839",
    "end": "3217030"
  },
  {
    "text": "match together very well and if you're interested there's even another duck there but just use whatever makes you happy that's just a general good rule",
    "start": "3217030",
    "end": "3222849"
  },
  {
    "text": "for all technology okay so that's it for the content I wanted to share with you again thank you so much for coming I'll",
    "start": "3222849",
    "end": "3230020"
  },
  {
    "start": "3224000",
    "end": "3347000"
  },
  {
    "text": "hang around here for a few minutes afterwards and answer any questions if you're interested in learning more getting started I'd encourage you to",
    "start": "3230020",
    "end": "3236770"
  },
  {
    "text": "look at our documentation especially durable functions there's like ten pieces of Docs and a bunch of samples to",
    "start": "3236770",
    "end": "3244809"
  },
  {
    "text": "get you started if you're interested in trying it out it's extremely powerful because you can get these long-running",
    "start": "3244809",
    "end": "3249910"
  },
  {
    "text": "processes with the benefits of server lists we also have a number of QuickStart so if you haven't ever built",
    "start": "3249910",
    "end": "3255400"
  },
  {
    "text": "a function before we have one where you can do it all within the portal we have some for visual studio we have some for",
    "start": "3255400",
    "end": "3260799"
  },
  {
    "text": "visual studio code whatever editor makes you happy even some that just use the command line we've got a bunch of",
    "start": "3260799",
    "end": "3266890"
  },
  {
    "text": "samples and then some of the advance patterns I've talked about like instance management concurrency control in order",
    "start": "3266890",
    "end": "3274270"
  },
  {
    "text": "messaging error handling I've written a few of these in my own personal blog if",
    "start": "3274270",
    "end": "3279430"
  },
  {
    "text": "you're interested which is at medium.com slash at jeff hall and it's also my twitter handle i'm more than happy to",
    "start": "3279430",
    "end": "3285279"
  },
  {
    "text": "answer any questions you may have there so with that that's it so thank you all",
    "start": "3285279",
    "end": "3291369"
  },
  {
    "text": "very much for coming I'll go ahead and answer any questions there's not a bunch of people in the room so if you have any questions go head and then please just as you leave",
    "start": "3291369",
    "end": "3298000"
  },
  {
    "text": "you get the little feedback slips this is my first time coming to NDC I'm learning exactly how best to do this",
    "start": "3298000",
    "end": "3304750"
  },
  {
    "text": "they stuck me at the very end of the last day because I was a late entry but even just those feedback slips will help",
    "start": "3304750",
    "end": "3310240"
  },
  {
    "text": "me know how to improve and hopefully get me invited back as well so thank you all very much",
    "start": "3310240",
    "end": "3315360"
  },
  {
    "text": "any questions I can answer while we're here are we all good oh yes one right here good question so the question for",
    "start": "3315360",
    "end": "3326710"
  },
  {
    "text": "those who didn't hear is do the new dotnet core questions get around assembly redirect stuff so this is a",
    "start": "3326710",
    "end": "3332710"
  },
  {
    "text": "good questions a very common one the the challenge that we had with the version",
    "start": "3332710",
    "end": "3338440"
  },
  {
    "text": "one of Asher functions was that for dotnet function specifically the desire",
    "start": "3338440",
    "end": "3343960"
  },
  {
    "text": "was to let you have access to very rich data types in fact if you look at this example that I had at the beginning",
    "start": "3343960",
    "end": "3350490"
  },
  {
    "text": "where I was pulling in data from cosmos DB I could as I mentioned like I could",
    "start": "3350490",
    "end": "3356680"
  },
  {
    "text": "say hey I want to push a string to cosmos DB but I could also say I want to pass in a cosmos DB document like this",
    "start": "3356680",
    "end": "3363460"
  },
  {
    "text": "is a very rich data type that comes directly from the cosmos DB SDK and the",
    "start": "3363460",
    "end": "3368680"
  },
  {
    "text": "way that this is possible is we wanted you to be able to pass rich data types between your function and the host",
    "start": "3368680",
    "end": "3375010"
  },
  {
    "text": "process and there's a really good idea at the time and that's how it was built but the challenge with that is that it",
    "start": "3375010",
    "end": "3381760"
  },
  {
    "text": "means that now your function has some dependencies on the assemblies that the",
    "start": "3381760",
    "end": "3387550"
  },
  {
    "text": "host is using that host process so if you want to do something like use a newer version of cosmos DB then what the",
    "start": "3387550",
    "end": "3395110"
  },
  {
    "text": "host is using if you try to do that you're going to get Assembly resolution errors when you try to run it especially",
    "start": "3395110",
    "end": "3401110"
  },
  {
    "text": "when you try to pass data in between because it's like hey this is document version 2 and I use document version 1 so there's a lot of consternation there",
    "start": "3401110",
    "end": "3407560"
  },
  {
    "text": "so one of the big things we've been doing with version 2 is helping improve that the short answer is just now the",
    "start": "3407560",
    "end": "3414100"
  },
  {
    "text": "release that just completed improved a bunch of scenarios in fact 95% of the",
    "start": "3414100",
    "end": "3420490"
  },
  {
    "text": "scenarios we were tracking are now much more possible today but we're not done yet the next piece we want to do which",
    "start": "3420490",
    "end": "3425740"
  },
  {
    "text": "should be available in preview by the end of the year would allow you to run your c-sharp functions completely in a",
    "start": "3425740",
    "end": "3431799"
  },
  {
    "text": "separate process doing whatever you want on those it does make it so that things like rich data type transfer would work",
    "start": "3431799",
    "end": "3437829"
  },
  {
    "text": "differently because we're gonna have to like serialize and pass the data but the long story or I guess the short story is",
    "start": "3437829",
    "end": "3443319"
  },
  {
    "text": "give it a shot in the B to one there's like you know a bunch of things that weren't possible that now we've we've",
    "start": "3443319",
    "end": "3449230"
  },
  {
    "text": "worked very closely with the dotnet core team to have specific assembly load context for your function so that you",
    "start": "3449230",
    "end": "3455470"
  },
  {
    "text": "can pull in whatever extensions you want and run them independently but we're gonna continue to work on this through",
    "start": "3455470",
    "end": "3460480"
  },
  {
    "text": "the end a year so that we never have anybody who SSS is that so good question though definitely very high priority any other",
    "start": "3460480",
    "end": "3465970"
  },
  {
    "text": "questions yep yeah good question so the",
    "start": "3465970",
    "end": "3473380"
  },
  {
    "text": "question was again for those who didn't hear Python support so we actually have Python running right now in private",
    "start": "3473380",
    "end": "3479769"
  },
  {
    "text": "preview which is funny to say I and we can give invitations to really anybody",
    "start": "3479769",
    "end": "3485920"
  },
  {
    "text": "who's interested just just sent me a note on Twitter so yes it is coming it's it's available",
    "start": "3485920",
    "end": "3491440"
  },
  {
    "text": "right now we have Python workers I built a few of these myself it's not yet in",
    "start": "3491440",
    "end": "3496660"
  },
  {
    "text": "public preview yet it should be in the coming weeks but if you're interested in giving it a shot I'd encourage you to",
    "start": "3496660",
    "end": "3502269"
  },
  {
    "text": "get onboard the private preview now and then keep an eye out in the next few weeks and hopefully you'll see an announcement where you can use it",
    "start": "3502269",
    "end": "3507670"
  },
  {
    "text": "publicly and then as the version 2 becomes generally available it would come available after that as well",
    "start": "3507670",
    "end": "3513940"
  },
  {
    "text": "ok any other ones yep go ahead functions",
    "start": "3513940",
    "end": "3522400"
  },
  {
    "text": "with exceptions you said what happens to it yep so when your function has an exception",
    "start": "3522400",
    "end": "3529289"
  },
  {
    "text": "is that like if you threw an exception in here oh and no reference in sight",
    "start": "3529289",
    "end": "3539769"
  },
  {
    "start": "3531000",
    "end": "3600000"
  },
  {
    "text": "yeah so just like any except like if I wrote code here and I tried to like Poland request body and request body was",
    "start": "3539769",
    "end": "3545230"
  },
  {
    "text": "no like what would happen yeah so Jen when exceptions get thrown your code just finishes and could go away and",
    "start": "3545230",
    "end": "3551680"
  },
  {
    "text": "that's another really important thing to note is the trigger that you're using so for an HTTP trigger for example if I",
    "start": "3551680",
    "end": "3558430"
  },
  {
    "text": "have an exception that I don't catch and handle in my code it's very possible that that request just vanished into",
    "start": "3558430",
    "end": "3563920"
  },
  {
    "text": "in air and I would have lost that data okay so one thing is that you can like",
    "start": "3563920",
    "end": "3569260"
  },
  {
    "text": "catch exceptions in your code directly some of our triggers though do have automatic retries so if this was coming",
    "start": "3569260",
    "end": "3575440"
  },
  {
    "text": "from a cue instead of a HTTP trigger if you had something like a no ref exception we would actually",
    "start": "3575440",
    "end": "3581670"
  },
  {
    "text": "automatically go and retry that a number of times and if all of them result in",
    "start": "3581670",
    "end": "3586930"
  },
  {
    "text": "exceptions and we retry five times we'll actually go ahead and stick that in a poison cue or a dead letter Q so that",
    "start": "3586930",
    "end": "3593619"
  },
  {
    "text": "you can see hey you know this message had an error and and it ended up being a",
    "start": "3593619",
    "end": "3599200"
  },
  {
    "text": "poison Q so monitoring helps with that the trigger type is the biggest one on this one now if you have data that you",
    "start": "3599200",
    "end": "3604599"
  },
  {
    "text": "want to make sure you don't lose make sure you use a trigger that can keep some state around like a Q does that",
    "start": "3604599",
    "end": "3610869"
  },
  {
    "text": "help was that the question okay cool all right we'll go with one more go ahead mmm great question so I mentioned",
    "start": "3610869",
    "end": "3621970"
  },
  {
    "text": "how these connection strings are environment variables in the cloud you would put this type of a connection",
    "start": "3621970",
    "end": "3627040"
  },
  {
    "text": "string in an app setting which is encrypted but a lot of people want to keep these in key vault so by the end of",
    "start": "3627040",
    "end": "3632770"
  },
  {
    "text": "this summer we plan to have a feature where instead of me having to put my connection string directly in an app",
    "start": "3632770",
    "end": "3638349"
  },
  {
    "text": "setting I would actually be able to do something like key vault something",
    "start": "3638349",
    "end": "3643930"
  },
  {
    "text": "something something and have an address to where that secret lives inside of my Azure key vault and we would fetch it",
    "start": "3643930",
    "end": "3650049"
  },
  {
    "text": "out of key vault for you using the managed service identity so it's being worked on right now targeted to around",
    "start": "3650049",
    "end": "3655240"
  },
  {
    "text": "the end of the summer where you could reference secrets coming from key vault instead of having to put them directly in your environment variables okay all",
    "start": "3655240",
    "end": "3663549"
  },
  {
    "text": "right I think that's everyone then thanks again so much enjoy your weekend five twenty on the dot appreciate you all staying honestly I",
    "start": "3663549",
    "end": "3670180"
  },
  {
    "text": "can't remember the last time I went to the last session of a conference so I appreciate you all being here if I had",
    "start": "3670180",
    "end": "3675309"
  },
  {
    "text": "swag I would give it to you so thanks again so much",
    "start": "3675309",
    "end": "3679109"
  }
]