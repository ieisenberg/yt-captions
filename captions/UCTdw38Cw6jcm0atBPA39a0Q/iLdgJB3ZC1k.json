[
  {
    "text": "okay let's start hello and welcome thank you for having me at ndc i'm purnima nair i'm a freelance.net",
    "start": "7120",
    "end": "15519"
  },
  {
    "text": "developer based in berkshire uk um i do a lot of work with amrako and i've been in",
    "start": "15519",
    "end": "21039"
  },
  {
    "text": "umbraco mvp for the past two years non-work me i spend a lot of time with my little girl",
    "start": "21039",
    "end": "26560"
  },
  {
    "text": "who is six years old i spend a lot of time reading mainly fiction and as much as i have a passion for new",
    "start": "26560",
    "end": "32640"
  },
  {
    "text": "technologies i have a passion for carnatic music and i'm learning carnatic music as well",
    "start": "32640",
    "end": "38559"
  },
  {
    "text": "the vocal part of it that's my twitter handle should you wish to connect with me",
    "start": "38559",
    "end": "44480"
  },
  {
    "text": "so today's topic is how i can use umbraco hardcore which is a headless cms",
    "start": "44480",
    "end": "50079"
  },
  {
    "text": "and i have a catalog of content in my cms i'm using the graphql endpoint and",
    "start": "50079",
    "end": "56079"
  },
  {
    "text": "giving a frontend meaning to my content using a blazer standalone app so we won't be building the graphql endpoint",
    "start": "56079",
    "end": "62719"
  },
  {
    "text": "we'll make use of what umbraco provides us with um and it's it's bound to give you a",
    "start": "62719",
    "end": "69280"
  },
  {
    "text": "starting point on how you can achieve this thing so it's it's a it's a principle that you take ahead i'll show",
    "start": "69280",
    "end": "75680"
  },
  {
    "text": "you two approaches on how to achieve this but you can always build on top of it if you want to post",
    "start": "75680",
    "end": "81439"
  },
  {
    "text": "your questions to the slack channel i can take a look at them at the end of the session because there's much to get",
    "start": "81439",
    "end": "86479"
  },
  {
    "text": "through so uh what i have as the catalogue of content is a sneak peek",
    "start": "86479",
    "end": "91759"
  },
  {
    "text": "the wizarding world of harry potter i love harry potter and i wanted to include it in my talks",
    "start": "91759",
    "end": "97119"
  },
  {
    "text": "at one point and i think this is the right opportunity so i've got a catalogue of content about the",
    "start": "97119",
    "end": "102479"
  },
  {
    "text": "hogwarts houses the books about harry potter and some of the famous slash infamous characters in",
    "start": "102479",
    "end": "108240"
  },
  {
    "text": "the harry potter world and i'm bringing that to the to a blazer app",
    "start": "108240",
    "end": "114560"
  },
  {
    "text": "let's have a look at what graphql umbraco hardcore and blazer is all about then we'll discuss some of",
    "start": "114560",
    "end": "120960"
  },
  {
    "text": "the technical aspects and the features that i've used to bring together the single page app so",
    "start": "120960",
    "end": "126240"
  },
  {
    "text": "graphql is a query language it's a syntax to ask for your data and of course there's a server side",
    "start": "126240",
    "end": "132959"
  },
  {
    "text": "runtime to fulfill fulfill those queries and it's a layer on top of your existing data so you",
    "start": "132959",
    "end": "138879"
  },
  {
    "text": "might have a entity framework code database you could have a rest api",
    "start": "138879",
    "end": "143920"
  },
  {
    "text": "and graphql can be a layer on top of that and the most powerful aspect about",
    "start": "143920",
    "end": "149360"
  },
  {
    "text": "graphql is that it gives the clients or the frontend developers or the app developers",
    "start": "149360",
    "end": "154879"
  },
  {
    "text": "to ask for what they need and they get exactly what they want they don't get anything more than what",
    "start": "154879",
    "end": "160239"
  },
  {
    "text": "they want or they don't get anything less than what they want this makes it both the api",
    "start": "160239",
    "end": "165599"
  },
  {
    "text": "as well as the app on the front end to iterate and develop and progress at its own pace they are standalone isolated system",
    "start": "165599",
    "end": "172959"
  },
  {
    "text": "without conflicting with each other what did graphql try to solve over",
    "start": "172959",
    "end": "179599"
  },
  {
    "text": "fetching and under fetching so graphql was introduced into this world by facebook they had an issue with their",
    "start": "179599",
    "end": "187760"
  },
  {
    "text": "ios and android apps back in 2011 2012 whereby a lot of data was constantly",
    "start": "187760",
    "end": "195360"
  },
  {
    "text": "being polled and asked for over the network this led to mobile devices being sapped out of their",
    "start": "195360",
    "end": "201200"
  },
  {
    "text": "battery life the apps crashing and mobile bandwidth being used up the reason being facebook app upon the",
    "start": "201200",
    "end": "209360"
  },
  {
    "text": "loading it was reaching out to get the user information using a part of it discarding the rest",
    "start": "209360",
    "end": "215360"
  },
  {
    "text": "then going out and seeking more and more data so over fetching is that scenario where",
    "start": "215360",
    "end": "220720"
  },
  {
    "text": "the the app or the client fetches a bunch of information uses a part of it",
    "start": "220720",
    "end": "226879"
  },
  {
    "text": "discuss the rest under fetching is the opposite uh whereby a client doesn't have the data it needs",
    "start": "226879",
    "end": "234080"
  },
  {
    "text": "at any point of time and then keeps polling or keeps hitting other apis for more and more data that",
    "start": "234080",
    "end": "240159"
  },
  {
    "text": "in turn leads to overfetching because the client might be using a part of it and discarding the rest",
    "start": "240159",
    "end": "246239"
  },
  {
    "text": "so it's like a cascading multitude effect which led to facebook quickly thinking",
    "start": "246239",
    "end": "251840"
  },
  {
    "text": "or rethinking their strategy they came up with this technology called graphql or a layer called graphql",
    "start": "251840",
    "end": "258959"
  },
  {
    "text": "and instead of having thousand different endpoints doing one thing at a time this endpoint",
    "start": "258959",
    "end": "265120"
  },
  {
    "text": "was a single smart endpoint and all it took in was queries it was what the client was asking for",
    "start": "265120",
    "end": "271680"
  },
  {
    "text": "and the endpoint would do nothing but massage the query massage the data that comes out",
    "start": "271680",
    "end": "277680"
  },
  {
    "text": "of the data layer and present it in the same existing format to the client",
    "start": "277680",
    "end": "282720"
  },
  {
    "text": "so the client specified the data that they need and the server responds back with the data in the same format as they",
    "start": "282720",
    "end": "289040"
  },
  {
    "text": "ask for so let's have a look at a query here i have a query which says",
    "start": "289040",
    "end": "295600"
  },
  {
    "text": "i want a query and the query is i want to get the user with the id one two three four five",
    "start": "295600",
    "end": "301520"
  },
  {
    "text": "seven probably a fictitious user and on that user i want the name of the user",
    "start": "301520",
    "end": "307280"
  },
  {
    "text": "i want to know the events that the user is interested in but i don't want a list of events i just want the count of events",
    "start": "307280",
    "end": "314080"
  },
  {
    "text": "i want to know friends suggestions but i don't want all the suggested friends i just want one suggested friend",
    "start": "314080",
    "end": "320320"
  },
  {
    "text": "and for that suggested friend get me the name of the suggested friend and i want to know the mutual friends",
    "start": "320320",
    "end": "326000"
  },
  {
    "text": "between this particular user and the suggested friend but i don't want the names i just want the count",
    "start": "326000",
    "end": "331680"
  },
  {
    "text": "so as you can see it it would have been probably a multiple list of orchestrated calls in",
    "start": "331680",
    "end": "339680"
  },
  {
    "text": "rest api world which has been condensed into a single query with my graphql query",
    "start": "339680",
    "end": "345039"
  },
  {
    "text": "so that is the power of query language the client decides to ask for what they want and",
    "start": "345039",
    "end": "351120"
  },
  {
    "text": "what they get is a hierarchical json response which is exactly a mirror of the query so if you",
    "start": "351120",
    "end": "356960"
  },
  {
    "text": "look at the data the query and the json response are identical it's a mirror",
    "start": "356960",
    "end": "362160"
  },
  {
    "text": "except that the query is it is a string it looks like json it's not json but",
    "start": "362160",
    "end": "368400"
  },
  {
    "text": "what i get is json which can be deserialized and used in my app as and when i need it",
    "start": "368400",
    "end": "374960"
  },
  {
    "text": "let's talk about umbraco hardcore umbraco hardcore is a headless cms",
    "start": "374960",
    "end": "380240"
  },
  {
    "text": "based on the opensource.net base cms umbraco it's a headless robot it's a content",
    "start": "380240",
    "end": "387360"
  },
  {
    "text": "store you can store your content and give your brand an omni channel presence which means the same content can be used",
    "start": "387360",
    "end": "393600"
  },
  {
    "text": "to power websites iot devices chat boards etc",
    "start": "393600",
    "end": "398720"
  },
  {
    "text": "so this gives your consumer a seamless but cohesive experience as a brand",
    "start": "398720",
    "end": "405360"
  },
  {
    "text": "and i've been working a lot with umbraco cms it's a it's a huge part of my daily job and",
    "start": "405360",
    "end": "411280"
  },
  {
    "text": "integrations like this is what excites me in the umbraco world which is why i chose the topic for the",
    "start": "411280",
    "end": "416400"
  },
  {
    "text": "day umbraco hardcore you can create a project and the project can be created",
    "start": "416400",
    "end": "423120"
  },
  {
    "text": "using the cloud portal uh we have a graphql api for the hardcore project",
    "start": "423120",
    "end": "428479"
  },
  {
    "text": "and that's what we are interested in today with graphql api you can read",
    "start": "428479",
    "end": "433680"
  },
  {
    "text": "the published content which is ready to face the world as well as draft content note that",
    "start": "433680",
    "end": "440160"
  },
  {
    "text": "with the graphql endpoint you cannot post data back into the cms for that you would have to",
    "start": "440160",
    "end": "445199"
  },
  {
    "text": "either use the cms itself to edit the content but we do have this classic example in the wide",
    "start": "445199",
    "end": "450800"
  },
  {
    "text": "world where you might want end users to say post something into the content area using an api",
    "start": "450800",
    "end": "457199"
  },
  {
    "text": "and that can only be provided by the rest api so it's it's a knowledge nice to have talking",
    "start": "457199",
    "end": "463120"
  },
  {
    "text": "about what blazer is briefly it is a single page application framework from microsoft",
    "start": "463120",
    "end": "468160"
  },
  {
    "text": "so i as a c-sharp developer is a happy bunny because go on other days when i have to pick up",
    "start": "468160",
    "end": "474400"
  },
  {
    "text": "a framework like angularjs or to build a single-player application no",
    "start": "474400",
    "end": "479759"
  },
  {
    "text": "i can do that all using native c-sharp and it is nothing but net code running in your browser yep",
    "start": "479759",
    "end": "487440"
  },
  {
    "text": "when i say that i think i'll be the first one to bite into that school because um i can",
    "start": "487440",
    "end": "493039"
  },
  {
    "text": "build rich interactive ui using c sharp there are two hosting models for blazer one is the",
    "start": "493039",
    "end": "498800"
  },
  {
    "text": "laser web assembly which helps you create what is called as static standalone apps and my approach is based",
    "start": "498800",
    "end": "506319"
  },
  {
    "text": "on the web assembly model today for me the web assembly model is what brings out",
    "start": "506319",
    "end": "512080"
  },
  {
    "text": "the best of blazer because all the dotnet dependencies all the dlls are downloaded",
    "start": "512080",
    "end": "517440"
  },
  {
    "text": "into your browser and it runs from your browser thread as well so you might be wondering what the",
    "start": "517440",
    "end": "523360"
  },
  {
    "text": "performance is like the performance is on par with any other system out there because the dlls are so",
    "start": "523360",
    "end": "529519"
  },
  {
    "text": "small and if you're concerned about the security it runs from within your javascript",
    "start": "529519",
    "end": "534800"
  },
  {
    "text": "sandbox so it is uh it is as secure as anything else can be uh there's also the blazer server model",
    "start": "534800",
    "end": "542959"
  },
  {
    "text": "this is more of a traditional app model where your app is served from the server and you can use an azure",
    "start": "542959",
    "end": "549360"
  },
  {
    "text": "web app or a signalr service to host it and the client server connection happens",
    "start": "549360",
    "end": "555600"
  },
  {
    "text": "over a signalr connection which makes the app interactive and rich",
    "start": "555600",
    "end": "562160"
  },
  {
    "text": "blazer web assembly is still young it was released i think in march may last year uh wireless blazer server",
    "start": "562160",
    "end": "569360"
  },
  {
    "text": "it was production ready the year before back in 2019 i think it was shipped with dot net code three",
    "start": "569360",
    "end": "576480"
  },
  {
    "text": "let's talk briefly about the graphql type system this is a server-side detail but it",
    "start": "576480",
    "end": "581519"
  },
  {
    "text": "helps me continue the talk and relate to how hardcore builds everything up",
    "start": "581519",
    "end": "587760"
  },
  {
    "text": "so let's talk about what a schema is in graphql with every graphql endpoint at the heart of",
    "start": "587760",
    "end": "594560"
  },
  {
    "text": "it is called something called schema schema is the type system of the input of the graphql endpoint",
    "start": "594560",
    "end": "600480"
  },
  {
    "text": "and schema is made up of types so the first type is object type which is your data",
    "start": "600480",
    "end": "607040"
  },
  {
    "text": "which is a data that you can fetch using a graphql endpoint so in my example i have characters i've",
    "start": "607040",
    "end": "613360"
  },
  {
    "text": "got books i've got houses each of these are object types and with your schema you're giving a",
    "start": "613360",
    "end": "619120"
  },
  {
    "text": "definition to your business model the next type in the schema is a query type",
    "start": "619120",
    "end": "625920"
  },
  {
    "text": "it's one of those weird terminologies because query is a type in the schema as well as i use queries to query",
    "start": "625920",
    "end": "633519"
  },
  {
    "text": "the data as well query is a type used to get the data from your endpoint",
    "start": "633519",
    "end": "638560"
  },
  {
    "text": "and mutation helps you insert delete or update data and then you have the subscription type",
    "start": "638560",
    "end": "644959"
  },
  {
    "text": "again which is an operation type which is for pushed update so i can subscribe to the um updates on the graphql endpoint on my",
    "start": "644959",
    "end": "652480"
  },
  {
    "text": "data using subscription query mutation subscription they are all operation type",
    "start": "652480",
    "end": "657600"
  },
  {
    "text": "but still a schema type wireless object types are more things where i have control of it's",
    "start": "657600",
    "end": "664079"
  },
  {
    "text": "as a model of my data but with every type that you have in here object type query mutation",
    "start": "664079",
    "end": "670240"
  },
  {
    "text": "subscription these are all made up of fields and each field can have a written type which is a",
    "start": "670240",
    "end": "676320"
  },
  {
    "text": "scalar or a list or or another object type",
    "start": "676320",
    "end": "682800"
  },
  {
    "text": "let's talk about queries which are used to get or fetch the data and as the name suggests it's used to",
    "start": "682800",
    "end": "689040"
  },
  {
    "text": "get or fetch the data at its simplest level it is used to ask for specific",
    "start": "689040",
    "end": "694079"
  },
  {
    "text": "fields on specific objects so if i have a character field a character object i am trying to get",
    "start": "694079",
    "end": "700240"
  },
  {
    "text": "say the id of it the name of it the description of it and that is",
    "start": "700240",
    "end": "705440"
  },
  {
    "text": "what query does it ask for specific fields what you get is hierarchical json response",
    "start": "705440",
    "end": "711600"
  },
  {
    "text": "and usually you do that over a post operation um i i mean usually because there are",
    "start": "711600",
    "end": "718320"
  },
  {
    "text": "there are instances or there there are ways by which i can query over a get operation as well",
    "start": "718320",
    "end": "724000"
  },
  {
    "text": "but to make things simpler let's just go with the post operation for now one of the most amazing facts about",
    "start": "724000",
    "end": "729440"
  },
  {
    "text": "queries in graphql is that i can query character a book a house all using the same query",
    "start": "729440",
    "end": "736160"
  },
  {
    "text": "and graphql doesn't wait for it to complete one to complete before the other starts",
    "start": "736160",
    "end": "741760"
  },
  {
    "text": "it runs in parallel so it goes and fetch all the three data three pieces of data for me and brings",
    "start": "741760",
    "end": "747360"
  },
  {
    "text": "me back the response let's have a look at a query a sample",
    "start": "747360",
    "end": "752480"
  },
  {
    "text": "query what you see on the left hand side is me querying for a character of id123 and i'm saying",
    "start": "752480",
    "end": "760639"
  },
  {
    "text": "return me the id name and description for some strange reason i've decided to return id which is totally not needed",
    "start": "760639",
    "end": "766320"
  },
  {
    "text": "there but what you get in response is a character",
    "start": "766320",
    "end": "771680"
  },
  {
    "text": "harry potter with the description and the id and as you can see the response is json and is an exact",
    "start": "771680",
    "end": "778880"
  },
  {
    "text": "mirror of the query itself and as you might have rightly guessed queries can accept arguments in this",
    "start": "778880",
    "end": "786000"
  },
  {
    "text": "case i'm passing 123 as the static id in this case and it gets me back that",
    "start": "786000",
    "end": "791920"
  },
  {
    "text": "exact character you can even ask for nested data so a",
    "start": "791920",
    "end": "797680"
  },
  {
    "text": "character might have friends and i can ask for friends in my query as well",
    "start": "797680",
    "end": "802959"
  },
  {
    "text": "so i can ask for id name description i can ask for friends but the friends might be other",
    "start": "802959",
    "end": "808800"
  },
  {
    "text": "characters which means the friends is bound to have name description and ids themselves",
    "start": "808800",
    "end": "814959"
  },
  {
    "text": "but what i'm interested is just the name of the friend so i'm telling hey query let get me the",
    "start": "814959",
    "end": "820720"
  },
  {
    "text": "character and get me the names of the friends so it returns me the id description and name as before",
    "start": "820720",
    "end": "826800"
  },
  {
    "text": "and it also decides to let me know of the friends of the character ron and hermione and it's a list of",
    "start": "826800",
    "end": "834000"
  },
  {
    "text": "names that i get back we have been having static data as a",
    "start": "834000",
    "end": "840880"
  },
  {
    "text": "value in here of late till now we can generalize it because that's what",
    "start": "840880",
    "end": "846720"
  },
  {
    "text": "is bound to happen in the real world out there so we can generalize it by using variables",
    "start": "846720",
    "end": "852880"
  },
  {
    "text": "there are three things that you need to do to make it more generic the first thing is to define a variable",
    "start": "852880",
    "end": "859519"
  },
  {
    "text": "name and a type so in this case i'm saying id is my variable name and the variable",
    "start": "859519",
    "end": "866000"
  },
  {
    "text": "name is always in the format dollar with the variable name i specify a return type or the type it corresponds",
    "start": "866000",
    "end": "872399"
  },
  {
    "text": "to i'm saying that the id is always of the type int and there is a little exclamation mark here by the",
    "start": "872399",
    "end": "878959"
  },
  {
    "text": "return type this is to say that int is this particular written type or this",
    "start": "878959",
    "end": "884959"
  },
  {
    "text": "particular id is non-nullable in c sharp we make types or we make properties or we",
    "start": "884959",
    "end": "892000"
  },
  {
    "text": "make variables known nullable explicitly in graphql is the other way",
    "start": "892000",
    "end": "897199"
  },
  {
    "text": "we everything is nullable by default and we have to explicitly mark it as non-nullable which is what i've done",
    "start": "897199",
    "end": "903120"
  },
  {
    "text": "here so this query won't execute it won't even hit the server without that id being passed into my",
    "start": "903120",
    "end": "910160"
  },
  {
    "text": "query the next thing i need to do is replace the static value with the variable name so instead of 1 2",
    "start": "910160",
    "end": "916880"
  },
  {
    "text": "3 i am putting the variable name in place and then the query syntax",
    "start": "916880",
    "end": "922399"
  },
  {
    "text": "follows as normal till i reach this part which is the variables with this what",
    "start": "922399",
    "end": "928079"
  },
  {
    "text": "i'm doing is i'm passing variables as a separate dictionary along with my request so i pass in",
    "start": "928079",
    "end": "935759"
  },
  {
    "text": "variables as a separate dictionary and inside that i specify my variable name and the value that i",
    "start": "935759",
    "end": "941360"
  },
  {
    "text": "pass in so if you want to use something like postman to test your graphql query which",
    "start": "941360",
    "end": "946959"
  },
  {
    "text": "by all means is possible you can hit the graphql end point using a post operation",
    "start": "946959",
    "end": "952000"
  },
  {
    "text": "pass the query as well as variables as json in the request body and it should get back the details the server responds",
    "start": "952000",
    "end": "958240"
  },
  {
    "text": "for you let's talk about the graphql api query in much more detail now",
    "start": "958240",
    "end": "964399"
  },
  {
    "text": "the api is available at graphql umbraco io so you can use postman to test it",
    "start": "964399",
    "end": "969759"
  },
  {
    "text": "alongside your query it's available over cloudflare",
    "start": "969759",
    "end": "975279"
  },
  {
    "text": "and the data has a caching layer on top of it so you can see that it after the first",
    "start": "975279",
    "end": "981199"
  },
  {
    "text": "query it gets much much much more faster as well uh it accepts a post",
    "start": "981199",
    "end": "986320"
  },
  {
    "text": "request so you can by all means use postman to test it with a post request",
    "start": "986320",
    "end": "991920"
  },
  {
    "text": "and it accepts a content type of application json",
    "start": "991920",
    "end": "997360"
  },
  {
    "text": "by default the endpoint is not protected it doesn't have it doesn't require an",
    "start": "997360",
    "end": "1002480"
  },
  {
    "text": "api key or an authorization header but what it needs is a header a custom header called amp",
    "start": "1002480",
    "end": "1008639"
  },
  {
    "text": "project alias so whenever you set up a project in hardcore using the cloud portal what you get to choose",
    "start": "1008639",
    "end": "1015680"
  },
  {
    "text": "is a project alias and this project alias is your key to querying data in hardcore and even",
    "start": "1015680",
    "end": "1021759"
  },
  {
    "text": "for support purposes so the project alias needs to be passed in as a",
    "start": "1021759",
    "end": "1027199"
  },
  {
    "text": "custom header value when you pass your request in if you choose to protect",
    "start": "1027199",
    "end": "1033600"
  },
  {
    "text": "your endpoint with adding authorization you can by all means do that using the back of his own",
    "start": "1033600",
    "end": "1038959"
  },
  {
    "text": "umbraco in such instances alongside the umbraco project alias you either need an",
    "start": "1038959",
    "end": "1045038"
  },
  {
    "text": "authorization header passed in or you can have an api key passed in",
    "start": "1045039",
    "end": "1050559"
  },
  {
    "text": "as the header so regardless it needs the project alias because the project alias is what",
    "start": "1050559",
    "end": "1056000"
  },
  {
    "text": "uh gives the whole system a context of where your data is where you are trying to get the data",
    "start": "1056000",
    "end": "1061120"
  },
  {
    "text": "from let's have a look at some of the basic aspects of umbraco now",
    "start": "1061120",
    "end": "1067919"
  },
  {
    "text": "so this is my back of a cms",
    "start": "1067919",
    "end": "1072880"
  },
  {
    "text": "so when i log in i get presented with my content tree content is of a tree structure which",
    "start": "1076400",
    "end": "1081600"
  },
  {
    "text": "means i can traverse the tree using some of the methods that i have or the fields that i",
    "start": "1081600",
    "end": "1088799"
  },
  {
    "text": "have so i have a little catalog of content which is wizarding world then i have my characters which is like",
    "start": "1088799",
    "end": "1095440"
  },
  {
    "text": "a list it's like a holder for all my characters and i've got a fair few characters put",
    "start": "1095440",
    "end": "1101280"
  },
  {
    "text": "up here i've got the houses and i've got the four houses",
    "start": "1101280",
    "end": "1106640"
  },
  {
    "text": "i've got books and i've got the four the seven books here and i've got few uh pieces of content",
    "start": "1106640",
    "end": "1113600"
  },
  {
    "text": "that i filled in so this is the content for my home page this helps me build the navigation on",
    "start": "1113600",
    "end": "1119440"
  },
  {
    "text": "the site etc and with every piece of content it has a url",
    "start": "1119440",
    "end": "1124880"
  },
  {
    "text": "and the url is driven by the name that i put in here so these are called nodes and the node name what you put in here",
    "start": "1124880",
    "end": "1132240"
  },
  {
    "text": "drives the url the url is also driven by the relative position of the node in the content tree",
    "start": "1132240",
    "end": "1138559"
  },
  {
    "text": "so as you can see it's already building up a pattern the the slug is made up of the node name but",
    "start": "1138559",
    "end": "1144400"
  },
  {
    "text": "it also follows the position in the tree if i go into one of the actual characters",
    "start": "1144400",
    "end": "1150880"
  },
  {
    "text": "let's go to volume what uh it again follows that pattern uh the slug built by the name of the",
    "start": "1150880",
    "end": "1157679"
  },
  {
    "text": "node itself and then following that pattern following the relative position in the content tree i've got the media",
    "start": "1157679",
    "end": "1164480"
  },
  {
    "text": "where i stole store all my media items and when i fetched data using graphql",
    "start": "1164480",
    "end": "1170000"
  },
  {
    "text": "endpoint umbraco gives me a fully qualified url for the media and it is served over",
    "start": "1170000",
    "end": "1176080"
  },
  {
    "text": "a cdn as well the settings section is what i might be looking into more because i'm a",
    "start": "1176080",
    "end": "1182320"
  },
  {
    "text": "developer and this is quite developery this is where you have what you call the document type for content types in",
    "start": "1182320",
    "end": "1188720"
  },
  {
    "text": "umbraco the content types are the blueprint for your content and the little form that you see here",
    "start": "1188720",
    "end": "1196320"
  },
  {
    "text": "when you open up which i have filled in it is all driven by what you have in the corresponding content type",
    "start": "1196320",
    "end": "1202960"
  },
  {
    "text": "so if i look at the visiting world content it has got different fields it has got",
    "start": "1202960",
    "end": "1208720"
  },
  {
    "text": "the navigation field footer field so a content type is basically a collection of fields",
    "start": "1208720",
    "end": "1214320"
  },
  {
    "text": "and it is used to define a piece of content on your catalog if you look here it says inherited from",
    "start": "1214320",
    "end": "1220640"
  },
  {
    "text": "content base which means that it is using something else so this is a",
    "start": "1220640",
    "end": "1225679"
  },
  {
    "text": "case where you have a set of properties which you think is common or it can be used across a",
    "start": "1225679",
    "end": "1231360"
  },
  {
    "text": "multiple a set of other document types and in such cases you define",
    "start": "1231360",
    "end": "1236480"
  },
  {
    "text": "a document type like so a content base nothing special about it is just a",
    "start": "1236480",
    "end": "1241600"
  },
  {
    "text": "regular document type and what i do is on all the other document types where i want to use it",
    "start": "1241600",
    "end": "1248240"
  },
  {
    "text": "i go and specify that it is a composition so in my visiting world type i have added content base as a composition",
    "start": "1248240",
    "end": "1256159"
  },
  {
    "text": "which is why i get those fields here so a classic example of what",
    "start": "1256159",
    "end": "1261360"
  },
  {
    "text": "we normally find in the umbraco world is the seo properties for a page so you have the keywords the title and",
    "start": "1261360",
    "end": "1267520"
  },
  {
    "text": "the description which you want to put across all your document types that's usually done as a composition so",
    "start": "1267520",
    "end": "1274880"
  },
  {
    "text": "this is a wizarding world type and this is the home page or the the home page the landing page of my",
    "start": "1274880",
    "end": "1280000"
  },
  {
    "text": "catalog of information and uh underneath uh wizarding world i'm",
    "start": "1280000",
    "end": "1285039"
  },
  {
    "text": "specifying that i cannot build content types of every other type",
    "start": "1285039",
    "end": "1290240"
  },
  {
    "text": "i can only specify or build content of book list house list of character list so these are again document types and if",
    "start": "1290240",
    "end": "1297760"
  },
  {
    "text": "i choose a visiting world page i cannot create content other than any of these types as child items",
    "start": "1297760",
    "end": "1304799"
  },
  {
    "text": "so i've got my character list here which is a very simple document type book list and house list again which is",
    "start": "1304799",
    "end": "1312480"
  },
  {
    "text": "quite simple and inherits from the composition having a look at one more character one",
    "start": "1312480",
    "end": "1318159"
  },
  {
    "text": "more content type say character it's got another set of fields and at every level i'm saying that uh",
    "start": "1318159",
    "end": "1326000"
  },
  {
    "text": "only a character is allowed as a child of the character list page uh a book is only the outside of the",
    "start": "1326000",
    "end": "1332080"
  },
  {
    "text": "book list page and house is only the allowed child of houseless page so it lets me have my content have a",
    "start": "1332080",
    "end": "1338799"
  },
  {
    "text": "really good structure and a rooted structure so all my editors can do is go and create another house",
    "start": "1338799",
    "end": "1344320"
  },
  {
    "text": "create another book or create another character so it let it it already lets me have that that",
    "start": "1344320",
    "end": "1351120"
  },
  {
    "text": "structure ready for my single page application uh now these are called fields or these",
    "start": "1351120",
    "end": "1356960"
  },
  {
    "text": "are called properties of a content type and every property has a input type which could be",
    "start": "1356960",
    "end": "1362960"
  },
  {
    "text": "something simple like text string or a rex text editor or something more complex like the multi-note",
    "start": "1362960",
    "end": "1369200"
  },
  {
    "text": "free picker what a multi-note 3-picker helps me do is um it helps me choose other pieces of",
    "start": "1369200",
    "end": "1377120"
  },
  {
    "text": "content but i can then limit it to a particular type if i need to be so appears in",
    "start": "1377120",
    "end": "1385200"
  },
  {
    "text": "is what i mean by appears in is uh in which books this character appears in",
    "start": "1385200",
    "end": "1390720"
  },
  {
    "text": "so uh by in all in all honesty so this needs to be a book so this forces my content editor uh to",
    "start": "1390720",
    "end": "1398240"
  },
  {
    "text": "go down the route of picking a book and picking a book only if needed they",
    "start": "1398240",
    "end": "1403679"
  },
  {
    "text": "cannot choose a character or a book to go in place of that so that is about the back office of",
    "start": "1403679",
    "end": "1410320"
  },
  {
    "text": "ambraka let's have a look at how how the schema",
    "start": "1410320",
    "end": "1416240"
  },
  {
    "text": "is generated in umbraco hardcore we have this document types and content specified for",
    "start": "1416240",
    "end": "1422159"
  },
  {
    "text": "us now how does it turn into a schema every time i save a content type",
    "start": "1422159",
    "end": "1429279"
  },
  {
    "text": "in ambraco a corresponding object type is generated behind the scenes so when i",
    "start": "1429279",
    "end": "1435520"
  },
  {
    "text": "save this or when i save a data type it regenerates the schema and for every content type that i have",
    "start": "1435520",
    "end": "1442320"
  },
  {
    "text": "in my in my content collection it generates an object type and",
    "start": "1442320",
    "end": "1447840"
  },
  {
    "text": "every content type has a alias what you see here and the name of the object type is the",
    "start": "1447840",
    "end": "1454320"
  },
  {
    "text": "is the alias in pascal case so in this case my object type would be called character",
    "start": "1454320",
    "end": "1460559"
  },
  {
    "text": "i have compositions uh like content base and such compositions gets generated as",
    "start": "1460559",
    "end": "1466559"
  },
  {
    "text": "interfaces in the graphql schema so like any other system graphql allows",
    "start": "1466559",
    "end": "1472320"
  },
  {
    "text": "interfaces and it is very similar in concept to the c sharp interfaces that we have",
    "start": "1472320",
    "end": "1478000"
  },
  {
    "text": "it's a rule which says that you have this many types this can implement this particular type",
    "start": "1478000",
    "end": "1485120"
  },
  {
    "text": "and when you implement this particular type you need to make sure that you implement all the fields of that particular type",
    "start": "1485120",
    "end": "1491760"
  },
  {
    "text": "and that's what interfaces lets us do uh all the fields uh in an object type",
    "start": "1491760",
    "end": "1498000"
  },
  {
    "text": "uh say let's go back to character all the properties that you see here guess generated as the fields in my",
    "start": "1498000",
    "end": "1505200"
  },
  {
    "text": "object type so my character type would have character name description character etc",
    "start": "1505200",
    "end": "1511039"
  },
  {
    "text": "and the data type determines what the underlying scalar or the return type of a",
    "start": "1511039",
    "end": "1517039"
  },
  {
    "text": "particular field is so let's have a look at the headless section in ambraco which has the api",
    "start": "1517039",
    "end": "1523840"
  },
  {
    "text": "explorer so this is the little switch if you want to make your api endpoint secure that is with",
    "start": "1523840",
    "end": "1530880"
  },
  {
    "text": "authorization required but you have something called the graphql playground",
    "start": "1530880",
    "end": "1536799"
  },
  {
    "text": "graphql endpoints by default are introspective which means you can query the endpoint for its own",
    "start": "1536799",
    "end": "1542559"
  },
  {
    "text": "information so i've got a little schema introspection query here which helps me query everything about",
    "start": "1542559",
    "end": "1549200"
  },
  {
    "text": "this particular endpoint so uh this is get this is quite interesting because this has given",
    "start": "1549200",
    "end": "1555039"
  },
  {
    "text": "rise to tools like graphql playground what you see here or graphical which are like",
    "start": "1555039",
    "end": "1560159"
  },
  {
    "text": "browser-based ids which lets you test your release so i as a developer i don't need to rely on",
    "start": "1560159",
    "end": "1566000"
  },
  {
    "text": "postpan i can use this ide to test my queries and what it also gives me is intellisense so",
    "start": "1566000",
    "end": "1573840"
  },
  {
    "text": "if i start typing in here it starts giving me intellisense which",
    "start": "1573840",
    "end": "1579760"
  },
  {
    "text": "is very useful and also the entire schema of my graphql endpoint",
    "start": "1579760",
    "end": "1585919"
  },
  {
    "text": "is available to me for reference so i can go into a character",
    "start": "1585919",
    "end": "1591120"
  },
  {
    "text": "and see what it does so the type character implements content content is another",
    "start": "1591120",
    "end": "1596640"
  },
  {
    "text": "interface which is uh like an object type in ambraco and the content contains a lot of fields like",
    "start": "1596640",
    "end": "1603840"
  },
  {
    "text": "ancestors children id level name so these are all common fields which is",
    "start": "1603840",
    "end": "1608880"
  },
  {
    "text": "common to every piece of content in umbraco and it helps me traverse the tree as well because at the end of the day when",
    "start": "1608880",
    "end": "1615120"
  },
  {
    "text": "you query the graphql endpoint in umbraco what you are getting back is content so with all the objects all the content",
    "start": "1615120",
    "end": "1621919"
  },
  {
    "text": "types implementing this interface it makes it easier for me to query the content number",
    "start": "1621919",
    "end": "1627919"
  },
  {
    "text": "uh in addition to this it also lets me know what the scalars and the return types for each of",
    "start": "1627919",
    "end": "1633200"
  },
  {
    "text": "my field is and this is an incredibly useful way for",
    "start": "1633200",
    "end": "1638399"
  },
  {
    "text": "me to query my graphql end point uh so other thing to note is that the",
    "start": "1638399",
    "end": "1644399"
  },
  {
    "text": "graphql endpoint query which is the top level entry point to querying your endpoint that query type has out of the box two",
    "start": "1644399",
    "end": "1652240"
  },
  {
    "text": "fields which is all content and content all content lets me query all the country number uh wireless",
    "start": "1652240",
    "end": "1660240"
  },
  {
    "text": "content helps me query a particular piece of content by an id or a url and what it returns me",
    "start": "1660240",
    "end": "1667360"
  },
  {
    "text": "is a content type when you start building your content types your document types in umbraco",
    "start": "1667360",
    "end": "1673520"
  },
  {
    "text": "additional fields get added to the query type so if i have a character content type two fields get",
    "start": "1673520",
    "end": "1680640"
  },
  {
    "text": "generated one is the character where i can query a particular character by",
    "start": "1680640",
    "end": "1685919"
  },
  {
    "text": "id or url uh and all character where i can query all",
    "start": "1685919",
    "end": "1691279"
  },
  {
    "text": "content of the type character so that that is getting all the list of the items and the other one",
    "start": "1691279",
    "end": "1697200"
  },
  {
    "text": "is getting just a single item of character so this uh querying by url from basis of one of the",
    "start": "1697200",
    "end": "1704320"
  },
  {
    "text": "approaches of my single page application using blazer uh now let's have a look at what uh",
    "start": "1704320",
    "end": "1710799"
  },
  {
    "text": "features of blazer did i use to approach my single page application the first one is components",
    "start": "1710799",
    "end": "1716799"
  },
  {
    "text": "so they are the building blocks of blazer apps everything that you see in blazer is",
    "start": "1716799",
    "end": "1722559"
  },
  {
    "text": "components literally a component is everywhere in blazer uh",
    "start": "1722559",
    "end": "1727919"
  },
  {
    "text": "razer blazer components or razer components are files with a dot razor extension so",
    "start": "1727919",
    "end": "1733120"
  },
  {
    "text": "if you are well versed with mvc uh once you get into the component world it is",
    "start": "1733120",
    "end": "1738480"
  },
  {
    "text": "a razor markup that's waiting for you out there you can make components routable by",
    "start": "1738480",
    "end": "1744399"
  },
  {
    "text": "using a page directive which means you can access them using urls uh which is again one of the key points",
    "start": "1744399",
    "end": "1750640"
  },
  {
    "text": "i have used in my approaches today you can be really smart about components and you can",
    "start": "1750640",
    "end": "1757440"
  },
  {
    "text": "you can build components which can be reused shared created as you get packages and",
    "start": "1757440",
    "end": "1763840"
  },
  {
    "text": "you will see one along the line which i have used in my approaches razer components when compiled generates",
    "start": "1763840",
    "end": "1771039"
  },
  {
    "text": "c-sharp partial classes with the same name as a component so if i have a component called character it gives rise to a partial",
    "start": "1771039",
    "end": "1778320"
  },
  {
    "text": "class called character behind the scenes and that is a good way of including c",
    "start": "1778320",
    "end": "1783760"
  },
  {
    "text": "sharp code in your component as well so partial classes are one way of including c sharp code",
    "start": "1783760",
    "end": "1789840"
  },
  {
    "text": "you can use a code directive in the component to include csr code or you can even inherit from the",
    "start": "1789840",
    "end": "1795039"
  },
  {
    "text": "component base and use that as the basis of your c sharp code i have gone with the",
    "start": "1795039",
    "end": "1802240"
  },
  {
    "text": "director way today because it helps me take everything in a single shot but you can",
    "start": "1802240",
    "end": "1808000"
  },
  {
    "text": "use any of the other two ways if needed so what is a single page application very briefly uh with traditional web",
    "start": "1808000",
    "end": "1815440"
  },
  {
    "text": "uh web pages i enter a page address into the address bar it",
    "start": "1815440",
    "end": "1822799"
  },
  {
    "text": "hits hits the server and gets me all the html and javascript back but with single page application what",
    "start": "1822799",
    "end": "1829360"
  },
  {
    "text": "you achieve is a virtual navigation there is always a smart person called router coming into the",
    "start": "1829360",
    "end": "1836159"
  },
  {
    "text": "scene with single page applications and what router does is it adds or removes um parts of the",
    "start": "1836159",
    "end": "1842159"
  },
  {
    "text": "page dynamically as and when needed and that's how single page application does the virtual navigation for you",
    "start": "1842159",
    "end": "1848799"
  },
  {
    "text": "and if you're really smart after the first time an application is requested for it might",
    "start": "1848799",
    "end": "1854799"
  },
  {
    "text": "not even hit the server it'll just continue to be on the browser and like any single page application",
    "start": "1854799",
    "end": "1861360"
  },
  {
    "text": "framework blazer has a router as well it's quite a cohesive",
    "start": "1861360",
    "end": "1866480"
  },
  {
    "text": "um kind of application quite comprehensive router it kind of fills you in for all the scenarios that are",
    "start": "1866480",
    "end": "1872799"
  },
  {
    "text": "needed but you can play around at router level you can create custom",
    "start": "1872799",
    "end": "1878799"
  },
  {
    "text": "routers if needed and there are applications in cms's like obtain uh which has got a custom implementation",
    "start": "1878799",
    "end": "1885679"
  },
  {
    "text": "of router so it's it's out there for you to play and the same approach that i'm doing here",
    "start": "1885679",
    "end": "1891360"
  },
  {
    "text": "today it can be given a totally entirely different meaning using a custom route",
    "start": "1891360",
    "end": "1897360"
  },
  {
    "text": "but i'm going with the basics just to make the demo pretty simple so router in blazer is a component in",
    "start": "1897360",
    "end": "1904840"
  },
  {
    "text": "itself and you can find the router in the app.tracer",
    "start": "1904840",
    "end": "1910480"
  },
  {
    "text": "so with this with the standard visual studio template in app.razer is where you would find your",
    "start": "1910480",
    "end": "1916240"
  },
  {
    "text": "app router and that is your router what router does is upon the startup of",
    "start": "1916240",
    "end": "1921760"
  },
  {
    "text": "the app it scans the app assembly and tries to figure out information about",
    "start": "1921760",
    "end": "1926880"
  },
  {
    "text": "any components that have a route attached to it and when the end user requests for a",
    "start": "1926880",
    "end": "1933120"
  },
  {
    "text": "particular component or a url what the router does is it tries to",
    "start": "1933120",
    "end": "1938399"
  },
  {
    "text": "find a match between the incoming url and the components has got awareness of with the matching route",
    "start": "1938399",
    "end": "1944399"
  },
  {
    "text": "template and in such cases it passes the control over to the route view and you get served a page or a",
    "start": "1944399",
    "end": "1950880"
  },
  {
    "text": "component otherwise you get a sorry message and how do you specify routes and that is",
    "start": "1950880",
    "end": "1956799"
  },
  {
    "text": "done using a page directive like so so i have routable components",
    "start": "1956799",
    "end": "1962880"
  },
  {
    "text": "across my app and this is how you specify a route and i'm jumping at the gun here",
    "start": "1962880",
    "end": "1970960"
  },
  {
    "text": "slightly you can have route parameters as well so route parameters can be used to",
    "start": "1970960",
    "end": "1976720"
  },
  {
    "text": "genera generalize your route so in this case i have a route which specifies wizarding",
    "start": "1976720",
    "end": "1982640"
  },
  {
    "text": "world in characters and then i am saying that at the end of this particular url whatever comes in",
    "start": "1982640",
    "end": "1989120"
  },
  {
    "text": "is to be treated as the character name so this is how you can specify rod parameters which is again a very",
    "start": "1989120",
    "end": "1996480"
  },
  {
    "text": "powerful feature about routing in blazer and the way i consume a route",
    "start": "1996480",
    "end": "2002480"
  },
  {
    "text": "route parameter using is using the component parameter this is how you specify a component",
    "start": "2002480",
    "end": "2008080"
  },
  {
    "text": "parameter but when you have a route parameter and you have a",
    "start": "2008080",
    "end": "2013440"
  },
  {
    "text": "component parameter of the same name a public property of the same name and don't buy the parameter attribute",
    "start": "2013440",
    "end": "2020720"
  },
  {
    "text": "blazer treats it as like a match to other or a way to consume the rod parameter",
    "start": "2020720",
    "end": "2026799"
  },
  {
    "text": "so this parameter this property out here helps me consume the character name that",
    "start": "2026799",
    "end": "2032399"
  },
  {
    "text": "comes in as a part of my url you can also have component parameters which",
    "start": "2032399",
    "end": "2037600"
  },
  {
    "text": "is basically by specifying a public property of any type and this helps me treat this as a",
    "start": "2037600",
    "end": "2045120"
  },
  {
    "text": "component parameter and when i use this particular component elsewhere i get this as a part of my syntax",
    "start": "2045120",
    "end": "2054638"
  },
  {
    "text": "like so so if i have a view character with a detail page component parameter it becomes a part of",
    "start": "2054639",
    "end": "2063040"
  },
  {
    "text": "my syntax to use that parameter itself so that's about parameters that's a very",
    "start": "2063040",
    "end": "2068320"
  },
  {
    "text": "brief take on parameters but then there are things like route parameters which are optional",
    "start": "2068320",
    "end": "2074158"
  },
  {
    "text": "which can be constrained you can even have actual parameters so just playing with the route parameters",
    "start": "2074159",
    "end": "2080398"
  },
  {
    "text": "you can have different flavors or different shaped the same same single page application now we have",
    "start": "2080399",
    "end": "2087760"
  },
  {
    "text": "a blazer we have our endpoint how do we talk to the graphql endpoint from my blazer app",
    "start": "2087760",
    "end": "2093839"
  },
  {
    "text": "for that you can use client libraries uh and right now uh the two client libraries in",
    "start": "2093839",
    "end": "2100000"
  },
  {
    "text": "dotnet that i can think of is graphql client and strawberry shake graphql client has been out there for",
    "start": "2100000",
    "end": "2106880"
  },
  {
    "text": "some time while strawberry shake is still in preview it's from the house of hot chocolate and",
    "start": "2106880",
    "end": "2112480"
  },
  {
    "text": "it's quite a rising star at the moment it's two very different takes on graphql",
    "start": "2112480",
    "end": "2118079"
  },
  {
    "text": "client but um it's fantastic so feel free to give it a try and i've installed these two packages in",
    "start": "2118079",
    "end": "2124480"
  },
  {
    "text": "my blazer app so let's start looking at the first approach um",
    "start": "2124480",
    "end": "2132400"
  },
  {
    "text": "let's talk about the graphql client wire up before that so once you've installed the graphql client it needs a bit of",
    "start": "2132400",
    "end": "2138079"
  },
  {
    "text": "setup is netco so what i specify is a graphql http client",
    "start": "2138079",
    "end": "2143440"
  },
  {
    "text": "passing in the graphql endpoint and specifying the serializer i also",
    "start": "2143440",
    "end": "2149280"
  },
  {
    "text": "need a header going in with every request to the umbraco endpoint for which i've",
    "start": "2149280",
    "end": "2154640"
  },
  {
    "text": "suggested the project alias and the header and with uh adding it as a scoped",
    "start": "2154640",
    "end": "2160240"
  },
  {
    "text": "service it is it is now available for me to inject into my components like so",
    "start": "2160240",
    "end": "2166079"
  },
  {
    "text": "so this is the way of injecting a service into your into your components in blazer so let's",
    "start": "2166079",
    "end": "2172480"
  },
  {
    "text": "have a look at my content structure i've got a very rigid content structure and it's in layers so the first one is the home",
    "start": "2172480",
    "end": "2179520"
  },
  {
    "text": "which is the wizarding world then i have a list of pages list pages not list of pages it's a list page",
    "start": "2179520",
    "end": "2186960"
  },
  {
    "text": "books houses and characters and then underneath each i have a collection of books",
    "start": "2186960",
    "end": "2192800"
  },
  {
    "text": "character details and the house details so which means i can achieve a mapping like this",
    "start": "2192800",
    "end": "2201839"
  },
  {
    "text": "so what i have done in this instance is i have mapped up each content type to a component with a",
    "start": "2205119",
    "end": "2211119"
  },
  {
    "text": "specified root or route in my blazer app it's a very",
    "start": "2211119",
    "end": "2216160"
  },
  {
    "text": "rigid content structure that i have got and for this particular scenario it totally works so i have a content type",
    "start": "2216160",
    "end": "2222480"
  },
  {
    "text": "called visiting world which i'm mapping to the visiting uh the index component and i know that",
    "start": "2222480",
    "end": "2229839"
  },
  {
    "text": "in that particular component i will only be querying for a content type of wizarding world so",
    "start": "2229839",
    "end": "2236240"
  },
  {
    "text": "it's easy for me to match up there but when it gets to the next level like character list",
    "start": "2236240",
    "end": "2242640"
  },
  {
    "text": "again i have a component called characters matched up to the content type character list",
    "start": "2242640",
    "end": "2247760"
  },
  {
    "text": "and again know that on that particular component i will only be looking out for the character list page and content from",
    "start": "2247760",
    "end": "2254240"
  },
  {
    "text": "the character list page i am letting my cms drive the urls of my",
    "start": "2254240",
    "end": "2259839"
  },
  {
    "text": "app because then it becomes easier for me to query graphql endpoint because i know that i can query graphql",
    "start": "2259839",
    "end": "2266320"
  },
  {
    "text": "endpoint and ask for a content based on its url so which allows me uh to do it in a very",
    "start": "2266320",
    "end": "2273280"
  },
  {
    "text": "straightforward simple manner without having to do any string manipulation but by all means you can choose your own",
    "start": "2273280",
    "end": "2279119"
  },
  {
    "text": "ways of doing it you can take a totally different route have your have your",
    "start": "2279119",
    "end": "2284320"
  },
  {
    "text": "component route set up in your own way if possible but then you have to do string manipulation but this is just to give",
    "start": "2284320",
    "end": "2290720"
  },
  {
    "text": "the idea of what you can do and i do the same for the book list and the house list i have a",
    "start": "2290720",
    "end": "2297040"
  },
  {
    "text": "component mark to the content type and i've got specified routes for the character book and the house",
    "start": "2297040",
    "end": "2304000"
  },
  {
    "text": "detail page again i've got the cms urls here but i can see a pattern",
    "start": "2304000",
    "end": "2309520"
  },
  {
    "text": "so when it gets to the character detail page i know that what appears at the end of",
    "start": "2309520",
    "end": "2314960"
  },
  {
    "text": "the url slug in the cms is the character name itself",
    "start": "2314960",
    "end": "2320000"
  },
  {
    "text": "so i can make use of that generalization and have the character name as my route",
    "start": "2320000",
    "end": "2325520"
  },
  {
    "text": "parameter similarly in the book detail page i know that the last part of the url is always",
    "start": "2325520",
    "end": "2331599"
  },
  {
    "text": "going to be the book name so i can use that as a parameter and in the house detail page i have the",
    "start": "2331599",
    "end": "2337599"
  },
  {
    "text": "house name coming in and i can use that as the parameter so i've got set routes for each of the",
    "start": "2337599",
    "end": "2343599"
  },
  {
    "text": "component and on the component i can always query for the relative url and pass that back",
    "start": "2343599",
    "end": "2349520"
  },
  {
    "text": "to the endpoint and to set things right away from the start my nav menu is also driven by the cms",
    "start": "2349520",
    "end": "2356880"
  },
  {
    "text": "which means that the end user will always be playing along with the urls which is",
    "start": "2356880",
    "end": "2362000"
  },
  {
    "text": "which is driven by the cms itself so let's have a look at some of the",
    "start": "2362000",
    "end": "2367359"
  },
  {
    "text": "queries that i have written for this we'll first have a look at the query for the wizarding world",
    "start": "2367359",
    "end": "2372480"
  },
  {
    "text": "home page and then we'll have a look at the character list and the character page because from there on it just follows",
    "start": "2372480",
    "end": "2378640"
  },
  {
    "text": "the same path so for the wizarding world page uh what",
    "start": "2378640",
    "end": "2384000"
  },
  {
    "text": "i'm doing is on the page i know that i'll always be querying the wizarding world content",
    "start": "2384000",
    "end": "2389119"
  },
  {
    "text": "type so i can i don't want to query it by passing in a url because i know that",
    "start": "2389119",
    "end": "2395359"
  },
  {
    "text": "there's only one of that content piece always and in such in in that instance i'm querying for all",
    "start": "2395359",
    "end": "2402079"
  },
  {
    "text": "wizarding world content but i'm using only the first one and items is like a connection or it helps",
    "start": "2402079",
    "end": "2410000"
  },
  {
    "text": "me get the child or the ancestors it's called the connection in graphql and items is a convenient field for me",
    "start": "2410000",
    "end": "2417040"
  },
  {
    "text": "to query those connected nodes in ambraco and for the first item",
    "start": "2417040",
    "end": "2422480"
  },
  {
    "text": "that is returned from this query i am querying the headline and the description and i can get the details like so",
    "start": "2422480",
    "end": "2431599"
  },
  {
    "text": "and back in my code in the index page",
    "start": "2431599",
    "end": "2439839"
  },
  {
    "text": "i have the query here uh this is one of the annoyances i've got with graphql client there is there's no",
    "start": "2441839",
    "end": "2447520"
  },
  {
    "text": "nice way to put my query in place just for the ease of demo i have put it",
    "start": "2447520",
    "end": "2452800"
  },
  {
    "text": "in but in reality feel free to constant it up have it in places i have an object",
    "start": "2452800",
    "end": "2459040"
  },
  {
    "text": "which is my return type and i'm using of the own initialized async lifecycle event of a component so this",
    "start": "2459040",
    "end": "2466160"
  },
  {
    "text": "is the second life cycle event in the whole life cycle of a component and this method",
    "start": "2466160",
    "end": "2472319"
  },
  {
    "text": "this life cycle event is triggered whenever a component is initialized for the first time and this",
    "start": "2472319",
    "end": "2478319"
  },
  {
    "text": "is a good place for me to initialize the data in a component and i'm making use of that fact",
    "start": "2478319",
    "end": "2484880"
  },
  {
    "text": "in the initialize method i need to set up a graphql request object uh which will be then passed in",
    "start": "2484880",
    "end": "2492400"
  },
  {
    "text": "as the request body to my query um and inside the graphql object there's a",
    "start": "2492400",
    "end": "2497920"
  },
  {
    "text": "query property and i'm setting the query to be my string query i don't have any variables and i can use",
    "start": "2497920",
    "end": "2504640"
  },
  {
    "text": "the send query async method to pass the request to my endpoint and get the data back into serialized format",
    "start": "2504640",
    "end": "2512000"
  },
  {
    "text": "and in my razer markup i check for whether the the data is null because it's an async",
    "start": "2512000",
    "end": "2518319"
  },
  {
    "text": "method it's considered a best practice and then i can use regular razor markup",
    "start": "2518319",
    "end": "2523359"
  },
  {
    "text": "to emit my data out so that's the index page done let's have a look at the character list",
    "start": "2523359",
    "end": "2530880"
  },
  {
    "text": "page on the character list page i want to show the description and the content and",
    "start": "2530880",
    "end": "2536400"
  },
  {
    "text": "a list of characters as cards as well i'm not relying on pagination or filtering or",
    "start": "2536400",
    "end": "2541599"
  },
  {
    "text": "sorting here the endpoint allows all of that but this is to provide you the basics",
    "start": "2541599",
    "end": "2547280"
  },
  {
    "text": "uh all my characters component of the characters page i know that i'm always going to be",
    "start": "2547280",
    "end": "2552400"
  },
  {
    "text": "querying for a particular character list page so if i have the url which is already",
    "start": "2552400",
    "end": "2557599"
  },
  {
    "text": "matched up the cmsurl i can pass that into my query and get and query that particular piece",
    "start": "2557599",
    "end": "2564079"
  },
  {
    "text": "of content in the back office so i have my character list query here",
    "start": "2564079",
    "end": "2569119"
  },
  {
    "text": "and it is accepting a url uh variable and on the character list",
    "start": "2569119",
    "end": "2574240"
  },
  {
    "text": "i'm asking for headline and description and now i can start querying the child",
    "start": "2574240",
    "end": "2580000"
  },
  {
    "text": "items of the character list page so my content structure is home character list and content the",
    "start": "2580000",
    "end": "2585280"
  },
  {
    "text": "character pages and for a character list page i have character as the content",
    "start": "2585280",
    "end": "2591440"
  },
  {
    "text": "the child content and i've got this children connection in the",
    "start": "2591440",
    "end": "2597920"
  },
  {
    "text": "query field so i can query the items from there on and once i get to the items i know that",
    "start": "2597920",
    "end": "2604720"
  },
  {
    "text": "what it returns is a list of content as you can see it's a content connection it's a list of",
    "start": "2604720",
    "end": "2610240"
  },
  {
    "text": "content but i know that child items will always be of a character type",
    "start": "2610240",
    "end": "2616079"
  },
  {
    "text": "so i'm using what is called as inline fragment which is used to convert interface into",
    "start": "2616079",
    "end": "2622400"
  },
  {
    "text": "its concrete and then i can query the fields on that so i cast it to my concrete and",
    "start": "2622400",
    "end": "2628079"
  },
  {
    "text": "get me the url the character name the character picture and so on so i as you can see my",
    "start": "2628079",
    "end": "2634400"
  },
  {
    "text": "character has a lot more fields but i only want to display the the image of the",
    "start": "2634400",
    "end": "2639920"
  },
  {
    "text": "character i want the name of the character and of course i want the url because then i can match up the url in",
    "start": "2639920",
    "end": "2646240"
  },
  {
    "text": "my app to the url from the cms so i get that information",
    "start": "2646240",
    "end": "2651280"
  },
  {
    "text": "and in my component",
    "start": "2651280",
    "end": "2656319"
  },
  {
    "text": "which is here i have set the route to be so so that the url kind of matches up",
    "start": "2656319",
    "end": "2662640"
  },
  {
    "text": "and following the same method as before i have the query and the graphql request",
    "start": "2662640",
    "end": "2668000"
  },
  {
    "text": "object setup in the uninitialized async method but then i need the url",
    "start": "2668000",
    "end": "2673280"
  },
  {
    "text": "as well and the url can be obtained using the navigation manager it is an injectable dependency the",
    "start": "2673280",
    "end": "2680240"
  },
  {
    "text": "navigation manager which helps me provide it says it provides an abstraction for querying and managing",
    "start": "2680240",
    "end": "2685520"
  },
  {
    "text": "url navigation so i can use the navigation manager service to get me the relative path and",
    "start": "2685520",
    "end": "2692079"
  },
  {
    "text": "i need to append a forward slash because uh umbra expects that as well",
    "start": "2692079",
    "end": "2698000"
  },
  {
    "text": "and as usual i can query the data deserialize and display it which is this so if i have a look at",
    "start": "2698000",
    "end": "2705599"
  },
  {
    "text": "uh if you have a look at the app and what we have achieved so far we have the home which is here it's got",
    "start": "2705599",
    "end": "2712319"
  },
  {
    "text": "my mouse is a bit sluggish it's got the heading and the content coming in from umbraco and with the characters i've got the",
    "start": "2712319",
    "end": "2719280"
  },
  {
    "text": "description and a list of characters and i can click on one and it takes me",
    "start": "2719280",
    "end": "2724880"
  },
  {
    "text": "to the character detail page and to achieve this i've got another piece of query",
    "start": "2724880",
    "end": "2731680"
  },
  {
    "text": "which is here again i'm querying a character by its",
    "start": "2731680",
    "end": "2736960"
  },
  {
    "text": "url i'm getting the character name uh the character description and species when it gets to appears in i",
    "start": "2736960",
    "end": "2744480"
  },
  {
    "text": "know that the what data that appears in returns is a list of content but i am allowing only editors to choose",
    "start": "2744480",
    "end": "2751920"
  },
  {
    "text": "the books so i can cast to a concrete type and get me the headliner url",
    "start": "2751920",
    "end": "2757280"
  },
  {
    "text": "but if at some point you choose to allow something like a movie it would still work but then you would have to have an",
    "start": "2757280",
    "end": "2763839"
  },
  {
    "text": "inline fragment like on on movie or so uh because graphql",
    "start": "2763839",
    "end": "2769280"
  },
  {
    "text": "won't error out if you have a content which is not cast will just continue as usual when it gets the house",
    "start": "2769280",
    "end": "2777119"
  },
  {
    "text": "i know that i'm allowing houses so i can again cast the concrete and get me headline and url",
    "start": "2777119",
    "end": "2782640"
  },
  {
    "text": "and i can get the character picture i'm getting the url and appears in url as well because from the",
    "start": "2782640",
    "end": "2789760"
  },
  {
    "text": "character page then i can allow my users to go back to the house detail pages as well and",
    "start": "2789760",
    "end": "2796160"
  },
  {
    "text": "in my component i have hardcoded the route like so",
    "start": "2796160",
    "end": "2804240"
  },
  {
    "text": "and i am getting the query and the url as before forming the",
    "start": "2804240",
    "end": "2810000"
  },
  {
    "text": "graphql request object sending the query and from the serialized object i",
    "start": "2810000",
    "end": "2815040"
  },
  {
    "text": "am displaying the data as and when i need so this is one approach of doing it uh",
    "start": "2815040",
    "end": "2821520"
  },
  {
    "text": "this works because i've got a rigid content structure but we can start",
    "start": "2821520",
    "end": "2826640"
  },
  {
    "text": "generalizing it a bit more with my second approach in this method what i did was i",
    "start": "2826640",
    "end": "2833680"
  },
  {
    "text": "instead of mapping one component to url i have one component per level of the content",
    "start": "2833680",
    "end": "2840079"
  },
  {
    "text": "structure so i have one component for the home page which is the content the wizarding world i have one component",
    "start": "2840079",
    "end": "2847040"
  },
  {
    "text": "mapped to the list page which is the character list book list in house list and because i know that the",
    "start": "2847040",
    "end": "2852960"
  },
  {
    "text": "url pattern is is quite predictable i can use the characters or the books or the houses",
    "start": "2852960",
    "end": "2860079"
  },
  {
    "text": "as the list type again with the detail pages the the url photos are",
    "start": "2860079",
    "end": "2866800"
  },
  {
    "text": "patterned so i can form a pattern for my route template based on that with the list type as well as the name",
    "start": "2866800",
    "end": "2874319"
  },
  {
    "text": "acting as the route parameters here so let's have a look at the query which i use for this",
    "start": "2874319",
    "end": "2880400"
  },
  {
    "text": "the query gets a bit more generic in this instance because at every level i am not querying for a",
    "start": "2880400",
    "end": "2886800"
  },
  {
    "text": "particular type i am but i'm querying only for content so",
    "start": "2886800",
    "end": "2891839"
  },
  {
    "text": "um this is what i uh used i use the content query here which lets me query all",
    "start": "2891839",
    "end": "2898319"
  },
  {
    "text": "contour any content of a particular url i'm passing in a url as before now when",
    "start": "2898319",
    "end": "2904559"
  },
  {
    "text": "it gets to the list pages i know they are composed of the content-based composition so i can try and cast the content-based",
    "start": "2904559",
    "end": "2911359"
  },
  {
    "text": "composition and get the description in the headline and then i know that the list pages can",
    "start": "2911359",
    "end": "2917200"
  },
  {
    "text": "the type character list book list or the house list so again i can try an inline fragment",
    "start": "2917200",
    "end": "2923119"
  },
  {
    "text": "get me the and i'm saying that if this is a character list type then query the children and get me",
    "start": "2923119",
    "end": "2930640"
  },
  {
    "text": "the items as before and if it's a book list query the children of the book list item",
    "start": "2930640",
    "end": "2938079"
  },
  {
    "text": "and get me the books as before using an inline fragment or if it's in a house list get me the",
    "start": "2938079",
    "end": "2943440"
  },
  {
    "text": "houses and get me the details of them and if i pass the query and parameter",
    "start": "2943440",
    "end": "2950079"
  },
  {
    "text": "here it should work why didn't it work",
    "start": "2950079",
    "end": "2957839"
  },
  {
    "text": "let's have a look it is working on the page that's what is more needed so it should it should get me some data",
    "start": "2958400",
    "end": "2964079"
  },
  {
    "text": "so as before i've got the second approach and the second app here",
    "start": "2964079",
    "end": "2971838"
  },
  {
    "text": "the the index page remains the same it hasn't changed but the major changes are in the list page in the detail page",
    "start": "2973520",
    "end": "2979680"
  },
  {
    "text": "i've got the query here and i am using the the url",
    "start": "2979680",
    "end": "2986160"
  },
  {
    "text": "uh using navigation manager as before but there is a change in the lifecycle method that i use here",
    "start": "2986160",
    "end": "2992240"
  },
  {
    "text": "i'm using the set parameters as sync instead of the uninitialized the reason being whenever a component is",
    "start": "2992240",
    "end": "2998319"
  },
  {
    "text": "loaded for the first time or requested for the first time that is when the on initialize kicks in",
    "start": "2998319",
    "end": "3003520"
  },
  {
    "text": "if the same component is requested with a change in parameters the uninitialized doesn't run",
    "start": "3003520",
    "end": "3009200"
  },
  {
    "text": "it straight away goes from method number one which is set parameters with the on parameters set async and so",
    "start": "3009200",
    "end": "3016559"
  },
  {
    "text": "this becomes the right place for me to query data based upon the change in the parameter value",
    "start": "3016559",
    "end": "3022640"
  },
  {
    "text": "so i know that the incoming route template is of wizarding world slash a list type",
    "start": "3022640",
    "end": "3029359"
  },
  {
    "text": "so i can get the url from there and then i can query my graphql endpoint and return the data",
    "start": "3029359",
    "end": "3036079"
  },
  {
    "text": "which is what i have in my approach to here so if i look at my characters it should load the characters",
    "start": "3036079",
    "end": "3044000"
  },
  {
    "text": "as before houses as before and books as before and then i can click onto my",
    "start": "3044800",
    "end": "3051520"
  },
  {
    "text": "detail pages so the detail pages follow the same kind of principle and the same kind of",
    "start": "3051520",
    "end": "3056640"
  },
  {
    "text": "querying except that it is acquiring for either a character a book or a house and that query is here",
    "start": "3056640",
    "end": "3068160"
  },
  {
    "text": "again i'm querying from the content endpoint at the content field in the query",
    "start": "3068160",
    "end": "3073200"
  },
  {
    "text": "uh i am checking whether it can be cast to a content base because two of my types",
    "start": "3073200",
    "end": "3078240"
  },
  {
    "text": "implement the content base i'm getting the details then i'm saying if it's a book return me the data about the image if",
    "start": "3078240",
    "end": "3085440"
  },
  {
    "text": "it's a character get me all these fields if it's a house get me all these fields and i'm using",
    "start": "3085440",
    "end": "3092319"
  },
  {
    "text": "the same exact principle as before um except for the fact",
    "start": "3092319",
    "end": "3098000"
  },
  {
    "text": "that of course the query is different uh i'm using the url and i'm using the",
    "start": "3098000",
    "end": "3104640"
  },
  {
    "text": "set parameter set on parameter set sync but i'm passing the data using component",
    "start": "3104640",
    "end": "3110319"
  },
  {
    "text": "parameters with child components so i get the data back in my",
    "start": "3110319",
    "end": "3115440"
  },
  {
    "text": "detail detail page object here and i have all these display views they are quite",
    "start": "3115440",
    "end": "3121359"
  },
  {
    "text": "dumb views which just accepts some data and displays it and that's the uh that's the path i've taken here the",
    "start": "3121359",
    "end": "3128400"
  },
  {
    "text": "reason why i chose to do it this way because um upon each of these components i know",
    "start": "3128400",
    "end": "3134160"
  },
  {
    "text": "what type i am querying for it is a content type alias that i'm querying for and that content type areas",
    "start": "3134160",
    "end": "3140000"
  },
  {
    "text": "doesn't change because if it changes the entire schema changes as well so it is quite a good solid constant for",
    "start": "3140000",
    "end": "3147520"
  },
  {
    "text": "you to query upon of course you don't need to magic string it this is for ease of demo purposes that i've done it",
    "start": "3147520",
    "end": "3153760"
  },
  {
    "text": "um so the nav menu follows the same path i have the nav menu in the",
    "start": "3153760",
    "end": "3159050"
  },
  {
    "text": "[Music] wizarding world",
    "start": "3159050",
    "end": "3163200"
  },
  {
    "text": "node i am querying for this particular field in the visiting world node and getting the data",
    "start": "3164079",
    "end": "3169760"
  },
  {
    "text": "out and forming the navigation as well the code is in github which you can see",
    "start": "3169760",
    "end": "3176079"
  },
  {
    "text": "um and as see as as you can see it works you can even have links to external",
    "start": "3176079",
    "end": "3182720"
  },
  {
    "text": "pages which i've done and it works it's a simple test that i've done so if i go back",
    "start": "3182720",
    "end": "3188559"
  },
  {
    "text": "into my character list page i've got some setup here let us try and",
    "start": "3188559",
    "end": "3194240"
  },
  {
    "text": "publish a character and see whether that works",
    "start": "3194240",
    "end": "3198400"
  },
  {
    "text": "let's see there you go we have helen ravenclaw so",
    "start": "3202640",
    "end": "3209040"
  },
  {
    "text": "that's how it works so it publishes content and it gets it in currently the order of display is the order of display in or",
    "start": "3209040",
    "end": "3216079"
  },
  {
    "text": "the order in which the items appear in the cms but you can have filtering on it you can have sorting on it",
    "start": "3216079",
    "end": "3222400"
  },
  {
    "text": "the way you want it but that is on to the next level i feel one thing when we think about single",
    "start": "3222400",
    "end": "3229200"
  },
  {
    "text": "page applications that always comes to our mind is seo and there is a way to tackle seo in blazer",
    "start": "3229200",
    "end": "3236079"
  },
  {
    "text": "as well and for it i have made use of this package called tool belt blazer head element by",
    "start": "3236079",
    "end": "3241920"
  },
  {
    "text": "jay sakamoto there is also a extensions package from microsoft which is in preview it's not",
    "start": "3241920",
    "end": "3248160"
  },
  {
    "text": "production ready but this package which i've used helps gets it ready for both server side",
    "start": "3248160",
    "end": "3254960"
  },
  {
    "text": "blazer as well as web assembly laser and if you look at the code it is actually components",
    "start": "3254960",
    "end": "3261520"
  },
  {
    "text": "sakamoto has written to provide us with this facility so it needs a bit of wiring up in the",
    "start": "3261520",
    "end": "3267760"
  },
  {
    "text": "program cms program.ts by adding the head element helper",
    "start": "3267760",
    "end": "3273119"
  },
  {
    "text": "and once it is done and the imports are in place in my imports dot phraser so this is where you",
    "start": "3273119",
    "end": "3280000"
  },
  {
    "text": "can control all the common imports for your blazer app so the imports is in place",
    "start": "3280000",
    "end": "3285920"
  },
  {
    "text": "it helps me have a title page on a per component level if you want so for each",
    "start": "3285920",
    "end": "3292079"
  },
  {
    "text": "purposes i have used the character name on the character page or the house name on the house page",
    "start": "3292079",
    "end": "3297440"
  },
  {
    "text": "but what you can do is you can have even the seo coming in as separate data from",
    "start": "3297440",
    "end": "3302480"
  },
  {
    "text": "the graphql endpoint so that is my little take on lasers single page",
    "start": "3302480",
    "end": "3308640"
  },
  {
    "text": "applications using a cms but you can rethink your routing strategy you can rethink your query and",
    "start": "3308640",
    "end": "3314720"
  },
  {
    "text": "you can come up with totally fluid the single page applications i can think about a",
    "start": "3314720",
    "end": "3320480"
  },
  {
    "text": "complete set of different ideas in approaching this you can even play at the custom router",
    "start": "3320480",
    "end": "3325680"
  },
  {
    "text": "level and make the entire thing dynamic if you want all sort of opportunities are there for",
    "start": "3325680",
    "end": "3332079"
  },
  {
    "text": "us to research and try on an experiment on so these are",
    "start": "3332079",
    "end": "3338319"
  },
  {
    "text": "some of the resources from today uh feel i'll i'll have a look at the slack channel and see if there are any",
    "start": "3338319",
    "end": "3344480"
  },
  {
    "text": "questions but otherwise i would consider this mission accomplished",
    "start": "3344480",
    "end": "3350559"
  },
  {
    "text": "no questions i think so that's it from me thank you",
    "start": "3353359",
    "end": "3363838"
  },
  {
    "text": "you",
    "start": "3366079",
    "end": "3368160"
  }
]