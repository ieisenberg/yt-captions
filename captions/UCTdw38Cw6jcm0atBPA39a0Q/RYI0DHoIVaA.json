[
  {
    "text": "there we go hey all right so we give a talk last",
    "start": "4620",
    "end": "9760"
  },
  {
    "text": "year and you see London 2017 about diagnosing common issues with a spirit core this talk is kind of a part to do",
    "start": "9760",
    "end": "16869"
  },
  {
    "text": "that that first talk it's a pretty deep dive so if you'd not familiar with a lot of yes--the reading and those kind of",
    "start": "16869",
    "end": "25180"
  },
  {
    "text": "issues you may not make sense but if you watch a video ten times in there and I'm gonna explain it that way I will explain",
    "start": "25180",
    "end": "30430"
  },
  {
    "text": "it okay everyone understands let's go through all the BS I'm David he's Damien hello",
    "start": "30430",
    "end": "37019"
  },
  {
    "text": "I'm real get started you have a nice way so we can just wait like did you try and",
    "start": "37019",
    "end": "43600"
  },
  {
    "text": "use present a moment that's very brave oh they go what's up is it working it is right now no it doesn't work all",
    "start": "43600",
    "end": "50229"
  },
  {
    "text": "right this is this all right so a snake horse been around for like I don't know not long before a snake or I didn't have",
    "start": "50229",
    "end": "57100"
  },
  {
    "text": "any kids and I have to sow out for a",
    "start": "57100",
    "end": "62680"
  },
  {
    "text": "while anyone be using it for the whole time I need I heard dnx fans anyone's",
    "start": "62680",
    "end": "67840"
  },
  {
    "text": "still running day necks there's one day here somewhere no one there's no one good good good good",
    "start": "67840",
    "end": "73960"
  },
  {
    "text": "um there's a lot of issues don't get home doesn't mean it's buggy there's no place to actually put like good feedback",
    "start": "73960",
    "end": "79299"
  },
  {
    "text": "so people open issues it's to say this is a great product so there's a place to put it back yeah she issues only praise",
    "start": "79299",
    "end": "86409"
  },
  {
    "text": "it's just meant to be a measure of the size yeah the people are using it a lot of issues being logged it's been a big uptake sense 2.0 since we had the",
    "start": "86409",
    "end": "93249"
  },
  {
    "text": "compatibility stuff in 2.0 so we saw a big uptake since that came out and as a",
    "start": "93249",
    "end": "99280"
  },
  {
    "text": "result there are more issues more issues in emails and in on github right if you",
    "start": "99280",
    "end": "104859"
  },
  {
    "text": "pay for Microsoft support you get to call into Microsoft whenever there's an issue and they eventually will cause and",
    "start": "104859",
    "end": "111850"
  },
  {
    "text": "we you'll have to handle bugs we have buzzing both issues an email I'm connected to call this both define like common things so what we did was we we",
    "start": "111850",
    "end": "119139"
  },
  {
    "text": "kind of went over all the issues we saw over the last two years and we kind of found a bunch of patterns and the goal",
    "start": "119139",
    "end": "124420"
  },
  {
    "text": "to show you a bunch of those issues for this talk and it is crushing ready if you were worried",
    "start": "124420",
    "end": "129970"
  },
  {
    "text": "whatever that means it is founded people always asks they say is it production with me and I'll read it that was like it's a professional video",
    "start": "129970",
    "end": "136290"
  },
  {
    "text": "and they're kind of two camps one who's like yeah and one was like this is terrible don't use it yet it's ready",
    "start": "136290",
    "end": "143100"
  },
  {
    "text": "it's good it's totally good because need to understand a few things wolves a text need to be out there anyone run it gunmen encore the original",
    "start": "143100",
    "end": "150600"
  },
  {
    "text": "asp.net system web-based net yeah it's like parsing it so parts of this talk is is understanding what happens if you",
    "start": "150600",
    "end": "157020"
  },
  {
    "text": "move migrate from one to the other and what the changes are and why there are the way there a spirit core runs outside",
    "start": "157020",
    "end": "164220"
  },
  {
    "text": "of the I guess process so in system web asp.net we have an is monitor that runs",
    "start": "164220",
    "end": "169740"
  },
  {
    "text": "in process for a spinet core it doesn't run in the same process as I actually run outside of the I guess process and",
    "start": "169740",
    "end": "177420"
  },
  {
    "text": "that has a bunch of caveats on on - why would care about that its net core does",
    "start": "177420",
    "end": "183450"
  },
  {
    "text": "not have a synchronization context anyone know what that is one heard of a synchronization context in dotnet",
    "start": "183450",
    "end": "189050"
  },
  {
    "text": "bathroom water of the room maybe a third of it I've heard about Italy this is how the name where you know what it is who's ever called an API on a",
    "start": "189050",
    "end": "195810"
  },
  {
    "text": "synchronization context that's thought I expect two or three four or five beaming since yeah that's better",
    "start": "195810",
    "end": "201150"
  },
  {
    "text": "I shouldn't have to do it very often it does have some implications on the actual code you write yes it's both good",
    "start": "201150",
    "end": "206370"
  },
  {
    "text": "and bad actually as part of doing the research for this talk I realized that",
    "start": "206370",
    "end": "211410"
  },
  {
    "text": "maybe we should add some things back there's no request qhp nightcore does",
    "start": "211410",
    "end": "218760"
  },
  {
    "text": "anyone ever seen the performance counters in system web where you you know your app is performing poorly and",
    "start": "218760",
    "end": "224100"
  },
  {
    "text": "anyone to see what's going on see so the request queue number right there's no request Queen XP Network which also has",
    "start": "224100",
    "end": "230580"
  },
  {
    "text": "good in bed and we'll look at why that's a problem yeah a little later on static files in a spirit core are served from",
    "start": "230580",
    "end": "238340"
  },
  {
    "text": "Eithne itself not from III so previously in system web static files came from is",
    "start": "238340",
    "end": "245070"
  },
  {
    "text": "itself so imagine a scenario where your servers overloaded you're starting to still work because you had kind of is",
    "start": "245070",
    "end": "252300"
  },
  {
    "text": "serving them and it's been at core if your your app is overloaded the starter fellows won't load because it's the same",
    "start": "252300",
    "end": "258030"
  },
  {
    "text": "process of uploading both talking follows and and I'm your same set of gates same memory and their way to work",
    "start": "258030",
    "end": "265050"
  },
  {
    "text": "on that and there is a configure injects I have to surf sorry fellas but it's not the default story hey snake",
    "start": "265050",
    "end": "272330"
  },
  {
    "text": "doesn't try to copy assemblies then you want to know about the asp net temporary files folder that beautiful folder that",
    "start": "272330",
    "end": "278630"
  },
  {
    "text": "has all those weird and is it I just who's ever had to delete something from the HPA temporary but yeah but then it worse they don't work out already",
    "start": "278630",
    "end": "285229"
  },
  {
    "text": "I'm sorry yeah so it's good and bad because that folder actually when you",
    "start": "285229",
    "end": "290600"
  },
  {
    "text": "load assemblies in dotnet they're locked in place which means you can deploy opens assemblies and in asp.net whatever",
    "start": "290600",
    "end": "298040"
  },
  {
    "text": "happening there was a feature in dotnet on AB domains called Shadow Copy directories so that was set by asp.net",
    "start": "298040",
    "end": "303470"
  },
  {
    "text": "to temporary folders and whenever you loaded file it would actually make a copy I love the assemblies from that folder",
    "start": "303470",
    "end": "310180"
  },
  {
    "text": "as a result you can ex copy deploy things like normal this is not in the",
    "start": "310180",
    "end": "316340"
  },
  {
    "text": "net core as a result if you try to deploy over a live running site it won't work you didn't hit that if she was one",
    "start": "316340",
    "end": "322910"
  },
  {
    "text": "of the biggest issues we've seen if I have deployments and people hate us for it right we're not sorry do we have a",
    "start": "322910",
    "end": "329240"
  },
  {
    "text": "solution app offline still works in is only so if you if you deploy an app",
    "start": "329240",
    "end": "336770"
  },
  {
    "text": "offline file first in is not nowhere else the site will die because there's a",
    "start": "336770",
    "end": "343490"
  },
  {
    "text": "file watcher and gracefully that shutdown shutdown it'll it'll die it'll it'll just die gracefully Shakespearian",
    "start": "343490",
    "end": "352190"
  },
  {
    "text": "Eddy it'll it'll so the goal is to drop app offline make a new site somewhere",
    "start": "352190",
    "end": "358490"
  },
  {
    "text": "else I'm point your pointy deployment to the new site right well deploy actually automates this for you and when you and",
    "start": "358490",
    "end": "365690"
  },
  {
    "text": "I'm having luck files whether the play will do a bunch of retries and in the worst case it'll rename the file to make",
    "start": "365690",
    "end": "371150"
  },
  {
    "text": "it to make it all work wasn't this broken for like several time to like two",
    "start": "371150",
    "end": "376430"
  },
  {
    "text": "months ago as long yeah okay so if you keep trying it it eventually worked really well should be good now there was",
    "start": "376430",
    "end": "381440"
  },
  {
    "text": "actually a bug it was supposed to work again that call there were issues where there was like race condition the",
    "start": "381440",
    "end": "386900"
  },
  {
    "text": "process dying yeah and they're retrained the fought over pretty sure it's fixed now does anyone deploy their sites like in",
    "start": "386900",
    "end": "392810"
  },
  {
    "text": "place without doing a swap don't be ashamed is fine who's like a single a Just Cavalli over the top while they run",
    "start": "392810",
    "end": "399289"
  },
  {
    "text": "web deploy straight onto it I'm shoulder are people here who do that yes it's not a ship production it's fine it's fine",
    "start": "399289",
    "end": "404790"
  },
  {
    "text": "Shay you did it you bet I'm sorry yeah be that this is for you this is what",
    "start": "404790",
    "end": "410820"
  },
  {
    "text": "it's for right certain that it makes it work if you're doing hot swapping yeah if you have different slots and it's fun",
    "start": "410820",
    "end": "416820"
  },
  {
    "text": "you shut it down you deploy and then you bring that up all the other one goes down but not everyone does that so when you migrate from 8 to 32 exponet core",
    "start": "416820",
    "end": "423660"
  },
  {
    "text": "you may hit this in your deployment scripts right um there are no optimal there is one of them in there is a",
    "start": "423660",
    "end": "428940"
  },
  {
    "text": "abdomen is an abdomen the main abdomen so there's no multiple domains running multiple apps in the same process that's",
    "start": "428940",
    "end": "435120"
  },
  {
    "text": "been gone since like forever forever yeah we actually don't recommend you do that for security reasons if you if you offer",
    "start": "435120",
    "end": "442350"
  },
  {
    "text": "holsters we recommend one process per app right if you were using what's about the minutes to get more density I don't",
    "start": "442350",
    "end": "449520"
  },
  {
    "text": "have answer for you I'm sorry but in this context it's a little more important in the COG to look at it for",
    "start": "449520",
    "end": "455310"
  },
  {
    "text": "deployment yeah no I think in in is it would use app domains to help shut down",
    "start": "455310",
    "end": "461130"
  },
  {
    "text": "the old version of your app while the new one was starting up and so you could have requests in flight to the old one and the new ones would get routed to the",
    "start": "461130",
    "end": "467670"
  },
  {
    "text": "new abdomen a new app running in the new app domain and it would all just be seamless and there's our web domains and",
    "start": "467670",
    "end": "472830"
  },
  {
    "text": "on the core so that process still works with with the is motor because with the process but there's worry yeah yeah all",
    "start": "472830",
    "end": "481980"
  },
  {
    "text": "right I have specific changes an cm is what we called the asp net core module",
    "start": "481980",
    "end": "489000"
  },
  {
    "text": "it's a new is module that manages dotnet core apps in in is the way it works is",
    "start": "489000",
    "end": "496080"
  },
  {
    "text": "it's a native module that when requests come in via is it uses HTTP to make external requests to the backend process",
    "start": "496080",
    "end": "501660"
  },
  {
    "text": "what win HTTP where CP is a kernel API that does HTTP oh it's like HTTP client",
    "start": "501660",
    "end": "508800"
  },
  {
    "text": "it should be client for Windows R in 32 yeah it's in a DHCP client that Windows uses to to do this kind of stuff ok so",
    "start": "508800",
    "end": "515070"
  },
  {
    "text": "it manages connections between the reverse proxy is and your back-end process so you're never running in the",
    "start": "515070",
    "end": "521430"
  },
  {
    "text": "same process as as is which has some interesting implications I am has to",
    "start": "521430",
    "end": "530280"
  },
  {
    "text": "minus the person's lifetime so whenever request comes in it has to find if there is a process sniff it isn't one would put it",
    "start": "530280",
    "end": "536100"
  },
  {
    "text": "up make a request to it and it is back and forth so it's lazy so I've had to flip my app there was no requests dotnet",
    "start": "536100",
    "end": "542760"
  },
  {
    "text": "it's not running yet yep and then a request comes in a in cm booster prior to the request queue to request booster",
    "start": "542760",
    "end": "547920"
  },
  {
    "text": "booster process waits for a start and then the request gets forwarded that's correct as a result an tiem has to pick",
    "start": "547920",
    "end": "554040"
  },
  {
    "text": "up port dynamically we've seen a class of issues where either there's a port conflict or or maybe this port is Austin",
    "start": "554040",
    "end": "560970"
  },
  {
    "text": "you run out of ports your honor's reports on the machine we've never run out of ephemeral client ports anyone know what that means so if you're making",
    "start": "560970",
    "end": "566730"
  },
  {
    "text": "outgoing TCP connection you need to grab a client port on your machine and then",
    "start": "566730",
    "end": "572339"
  },
  {
    "text": "to make an outgoing call to a server port so everyone knows HTTP goes to port 80 usually in SSL support for four three",
    "start": "572339",
    "end": "578760"
  },
  {
    "text": "but there's a client port on the client right that's being occupied and it can't be shared it's just you using that and",
    "start": "578760",
    "end": "583950"
  },
  {
    "text": "so we need to do that from a NCM to.net XE if NCM needs to allocate a port on",
    "start": "583950",
    "end": "589200"
  },
  {
    "text": "its side so we can talk to your app now the server side can share report everyone connects to the same one that's",
    "start": "589200",
    "end": "594750"
  },
  {
    "text": "fine but the client can't and there have been circumstances in fact it took down my site it took down live like for a",
    "start": "594750",
    "end": "600750"
  },
  {
    "text": "couple of days where for some reason some condition happens on the server and you run out of ports an NC em can't",
    "start": "600750",
    "end": "607380"
  },
  {
    "text": "connect new requests yeah that kind of sucks yeah it's pretty new where you're we're a poorly written back-end",
    "start": "607380",
    "end": "613949"
  },
  {
    "text": "application imagine you you've made a bunch of our consent and you used to me suck it on your Donna process right that",
    "start": "613949",
    "end": "620010"
  },
  {
    "text": "bad code can affect your incoming requests to an see em oh but it's the",
    "start": "620010",
    "end": "625110"
  },
  {
    "text": "same machine since your everyone gets action so if you're making you of your server don the XE or a teaspoon of core at and",
    "start": "625110",
    "end": "630720"
  },
  {
    "text": "it's calling out to api's right h-2b client if you do that poorly where you're perhaps using too many",
    "start": "630720",
    "end": "637230"
  },
  {
    "text": "instances we're going to talk about this in a minute you know you're doing it in such a way that you end up using too many client ports you're stealing those",
    "start": "637230",
    "end": "643589"
  },
  {
    "text": "ports from a NCM it's a shared resort it's machine wide right so you can write bad code and net that results in the",
    "start": "643589",
    "end": "649500"
  },
  {
    "text": "native code means um not being able to connect your app if you get this cascading failure as a result you innovate a notes and you just get",
    "start": "649500",
    "end": "655380"
  },
  {
    "text": "timeouts everyone's favorite thing so that there's an issue one on a stern net I think is integration repository and",
    "start": "655380",
    "end": "661170"
  },
  {
    "text": "the the title is this error code 2003 and this",
    "start": "661170",
    "end": "667680"
  },
  {
    "text": "this error happens whenever the the back end process can't respond in time so it climbs out the problem is people always",
    "start": "667680",
    "end": "673470"
  },
  {
    "text": "think that it's an is issue it's really probably in your app but it's so generic but and it always happens it can be for",
    "start": "673470",
    "end": "679500"
  },
  {
    "text": "anything out of memory it can be anything in the back more so that goes wrong it's kind of the first thing you'll see as an as a nuclear that we've",
    "start": "679500",
    "end": "685890"
  },
  {
    "text": "seen this error when they're running a screen it core behind is ever no one no",
    "start": "685890",
    "end": "690930"
  },
  {
    "text": "one they've suppress it this one person Renault one is the horror thing I see it every day usually I do something that",
    "start": "690930",
    "end": "696300"
  },
  {
    "text": "makes my app not work and then I see this in I yes you have to go figure it out and the and the front end will drop",
    "start": "696300",
    "end": "702360"
  },
  {
    "text": "the client from the request so this is what it looked like today in system web in the existing",
    "start": "702360",
    "end": "710760"
  },
  {
    "text": "exponet song isn't it cool yeah I had a hard time picking a name for it on the system web system web",
    "start": "710760",
    "end": "716100"
  },
  {
    "text": "client so ACB sis is a kernel module that handles a CP in Windows that has a",
    "start": "716100",
    "end": "723570"
  },
  {
    "text": "queue so whenever a request comes in it goes into a queue in is iist nd cues from ACB",
    "start": "723570",
    "end": "729839"
  },
  {
    "text": "sis and in whose into its own thread pool and then is well dispatched to asp.net via the isin the is module and i",
    "start": "729839",
    "end": "738209"
  },
  {
    "text": "think it's called web engine for web engine for that module is the managed",
    "start": "738209",
    "end": "743339"
  },
  {
    "text": "code motto for SQL net system web in is that has its own request queue and when",
    "start": "743339",
    "end": "751220"
  },
  {
    "text": "so this isn't totally inaccurate because the request queue isn't always used so",
    "start": "751220",
    "end": "756870"
  },
  {
    "text": "think of it but think of it as a pipe liner so I'd like if there were if there's nothing in the queue and nothing me it'll just jump it'll jump I can jump",
    "start": "756870",
    "end": "763800"
  },
  {
    "text": "but it's there it is there ok so you have this she'll of that kind of tries to do a bunch of back off in case the",
    "start": "763800",
    "end": "769950"
  },
  {
    "text": "thread pool in Donna is being overused and then if your net core is really good",
    "start": "769950",
    "end": "776579"
  },
  {
    "text": "so the big things are different processes so on the left you have it should be cysts and I asked our pool in",
    "start": "776579",
    "end": "783260"
  },
  {
    "text": "w3 w p our favorite process and there's an i/o thread and castro that had that",
    "start": "783260",
    "end": "788700"
  },
  {
    "text": "hand of the request and that this part is to thread pool threads this is Castro at schedule yeah that takes bites off",
    "start": "788700",
    "end": "794160"
  },
  {
    "text": "the wire yep I have memories of I'm doing dances explaining this a couple",
    "start": "794160",
    "end": "799290"
  },
  {
    "text": "years ago it I was like and and this is your code generally on one of these three right okay so you're",
    "start": "799290",
    "end": "805110"
  },
  {
    "text": "always going to threat people eventually the question is how many hops do you have to get there right all right not",
    "start": "805110",
    "end": "812220"
  },
  {
    "text": "having a saint context what does it mean so it means you want deadlock if you if",
    "start": "812220",
    "end": "817380"
  },
  {
    "text": "you block if you did that wait that's that's pretty good anyone ever deadlock they're like MVC old app by calling that way yeah okay",
    "start": "817380",
    "end": "824399"
  },
  {
    "text": "don't wait don't the cold dot way and there's one thing she's learned from this talk it just don't block he's doing",
    "start": "824399",
    "end": "829589"
  },
  {
    "text": "if I don't don't do it unless you cut then you have to he's doing this still",
    "start": "829589",
    "end": "835199"
  },
  {
    "text": "don't do it configure await false does not have an effect in exponet core I've seen a bunch of questions asking if you",
    "start": "835199",
    "end": "840569"
  },
  {
    "text": "have to call you should still call it in your library because libraries are used in every kind of done application and you may actually harvesting contacts and",
    "start": "840569",
    "end": "847519"
  },
  {
    "text": "so you will typically have a sink context in like a uwp app or a WinForms apple or DF app or a traditional a speed",
    "start": "847519",
    "end": "854970"
  },
  {
    "text": "on their app there will be a synchronization context and it manages threads and thing as Cole's going around",
    "start": "854970",
    "end": "860970"
  },
  {
    "text": "yeah we don't have one right so so what it actually is is its kind of an abstraction over where code runs so all",
    "start": "860970",
    "end": "866880"
  },
  {
    "text": "it really is is coding honest in context and it's kind of an abstract concept and the different kinds there's the UI",
    "start": "866880",
    "end": "873180"
  },
  {
    "text": "thread informs the UI thread in WPF in its net court doesn't Iver Easter request right yet the requests right so",
    "start": "873180",
    "end": "880230"
  },
  {
    "text": "you could think of your your request as a UI thread and work always goes to the request read right but we don't have one",
    "start": "880230",
    "end": "886620"
  },
  {
    "text": "there's not on a stack or so and as a result when you when you continue a task",
    "start": "886620",
    "end": "891689"
  },
  {
    "text": "after the await returns those can run in parallel so if you have multiple tasks running at the same time when those come",
    "start": "891689",
    "end": "897569"
  },
  {
    "text": "back they're running on different different threads so you can end up you can end up corrupting structures that",
    "start": "897569",
    "end": "903449"
  },
  {
    "text": "aren't thread safe if you weren't careful the conference itself isn't thread safe we had a bunch of really",
    "start": "903449",
    "end": "909810"
  },
  {
    "text": "cool problems where people saw Dictionary corruption and infinite loops because multiple threads were accessing",
    "start": "909810",
    "end": "915480"
  },
  {
    "text": "the headers at the same time sorry the HTTP context which is like the root of all the api's your bill with a request",
    "start": "915480",
    "end": "922050"
  },
  {
    "text": "is not thread safe nothing hanging off a destroyed so you should never ever in not even do not you know think about",
    "start": "922050",
    "end": "928769"
  },
  {
    "text": "right and can't do a single you can't even read it you can't even read price yeah there's",
    "start": "928769",
    "end": "933870"
  },
  {
    "text": "and out of that surely it's easy to avoid that right um so no you go notice",
    "start": "933870",
    "end": "941040"
  },
  {
    "text": "how it's alright um there's a there's an interface called the IH DB kana",
    "start": "941040",
    "end": "946470"
  },
  {
    "text": "successor that gives you access to a few currents outside of the actual request if you and it's commonly used for",
    "start": "946470",
    "end": "951720"
  },
  {
    "text": "getting things like the user for something you're not in the right question is read you have a thing as a",
    "start": "951720",
    "end": "957360"
  },
  {
    "text": "singleton you capture it once and then you can get the context for request right it's dangerous",
    "start": "957360",
    "end": "962520"
  },
  {
    "text": "that makes things really hard to see when your code of viewing so there was an awesome bug in a kitchen insight",
    "start": "962520",
    "end": "967710"
  },
  {
    "text": "they'll open up oh my god how do you",
    "start": "967710",
    "end": "975720"
  },
  {
    "text": "even do that from there we can't see it work oh oh like doing a little widely",
    "start": "975720",
    "end": "981420"
  },
  {
    "text": "gesture or just exit presenter mode there you go yeah and this is uh so it's still open I",
    "start": "981420",
    "end": "988200"
  },
  {
    "text": "notice yeah so the you said there was a bug we're still discussing stuff yeah there is a bug the thing was fixed but",
    "start": "988200",
    "end": "994410"
  },
  {
    "text": "this is this is a follow up bug I see I see when you have a bug in late this is a fixed piece that looks like a button",
    "start": "994410",
    "end": "999780"
  },
  {
    "text": "okay finished yeah so there's a bug and it's really bad it's really hard to see this is kind of the long explanation",
    "start": "999780",
    "end": "1005570"
  },
  {
    "text": "there's a big thread about this oh my goodness going on all right now we haven't agreed to what we're supposed to",
    "start": "1005570",
    "end": "1011540"
  },
  {
    "text": "do yeah all right so this is generally a problem that affects things that live in",
    "start": "1011540",
    "end": "1016820"
  },
  {
    "text": "di yep right in the dependency container three injection container net core that want to do something per request or they",
    "start": "1016820",
    "end": "1024050"
  },
  {
    "text": "want to might just be reading something project quest that is a is a logical pattern",
    "start": "1024050",
    "end": "1029178"
  },
  {
    "text": "whew laughing it every time you're but onion but you don't want to have to pass through the context in manually when you",
    "start": "1029179",
    "end": "1035569"
  },
  {
    "text": "pull it out a DI right you just want it to be able to pull it in the ether that's quite a difficult pattern to achieve these buzzards are due to the",
    "start": "1035569",
    "end": "1041150"
  },
  {
    "text": "mutable shared state so that's kind of the general alright general issue let's look at a demo of this yeah slides now let's can",
    "start": "1041150",
    "end": "1049820"
  },
  {
    "text": "you break something and slightly fix it um Oh somewhere salon so let's look at",
    "start": "1049820",
    "end": "1056660"
  },
  {
    "text": "something interesting I'm most gone oh oh that was good",
    "start": "1056660",
    "end": "1066760"
  },
  {
    "text": "why we watching your goodness I saw this same thing happen before this is",
    "start": "1066760",
    "end": "1074510"
  },
  {
    "text": "recording right you'd be amazed how many times we watch David try to type his",
    "start": "1074510",
    "end": "1080330"
  },
  {
    "text": "password in at work and it takes him three or four times every day yeah have you actually forgotten it no again",
    "start": "1080330",
    "end": "1091820"
  },
  {
    "text": "I think it crashed blowed me out you",
    "start": "1091820",
    "end": "1097040"
  },
  {
    "text": "lost all you state that's right even Carlos that was a person can you dance no it's distract no I can't just try the",
    "start": "1097040",
    "end": "1104420"
  },
  {
    "text": "audience distract them now we're gonna watch you recover because that's that's the fun part what are you gonna demo tell us what",
    "start": "1104420",
    "end": "1110270"
  },
  {
    "text": "you're gonna show I'll show them what abusing okay I'll show you some good you put what's wrong with it aah aah and",
    "start": "1110270",
    "end": "1115880"
  },
  {
    "text": "then you get a press I don't have a praise but afraid that we could probably did you get one okay so you're gonna",
    "start": "1115880",
    "end": "1121670"
  },
  {
    "text": "show them a snippet let's give it a code and then you have to figure out what's wrong with it okay is it bad oh if it's bad or not I guess yeah so I",
    "start": "1121670",
    "end": "1129520"
  },
  {
    "text": "have a project here I'm gonna show you a controller action and then the name of",
    "start": "1129520",
    "end": "1135740"
  },
  {
    "text": "the controller is kind of giving away okay this one first",
    "start": "1135740",
    "end": "1141320"
  },
  {
    "text": "it's more fun okay all right so I have a list ten tasks I have get number async",
    "start": "1141320",
    "end": "1148070"
  },
  {
    "text": "she's doing hard work doing aya and then add into a list okay in parallel and",
    "start": "1148070",
    "end": "1154400"
  },
  {
    "text": "then I do when all tasks so you passed the list I see you create a list you",
    "start": "1154400",
    "end": "1160310"
  },
  {
    "text": "create a bunch of tasks you fall each over the task array you pass in the list",
    "start": "1160310",
    "end": "1167030"
  },
  {
    "text": "into a thing and it does some stuff in those wait okay wait and then add",
    "start": "1167030",
    "end": "1174260"
  },
  {
    "text": "results to a list okay and I see a wait I see a sink I don't see any blocking calls look right it swings like so far",
    "start": "1174260",
    "end": "1180830"
  },
  {
    "text": "it looks pretty good anyone that spot the bug yeah",
    "start": "1180830",
    "end": "1184900"
  },
  {
    "text": "so the results right here so he's passing them in so he says it's a local",
    "start": "1186890",
    "end": "1192020"
  },
  {
    "text": "variable and then he passes it he constructs it up there and then he passes it in it is oh it isn't went all",
    "start": "1192020",
    "end": "1202549"
  },
  {
    "text": "so I'm doing in parallel yeah so I buy he collects up the tasks and",
    "start": "1202549",
    "end": "1207710"
  },
  {
    "text": "then he puts them all then he passes them to tasks top when all and then it effectively awaits it for you because",
    "start": "1207710",
    "end": "1213530"
  },
  {
    "text": "you have returning that task back to a spit out neck or because it's being returned from the result there we go so",
    "start": "1213530",
    "end": "1221000"
  },
  {
    "text": "I heard a couple of correct why does that matter here yeah why is it that list does not thread safe which is correct but why does that matter here",
    "start": "1221000",
    "end": "1227270"
  },
  {
    "text": "because you're using async and one and",
    "start": "1227270",
    "end": "1233750"
  },
  {
    "text": "there's no sterilization context and so what happens it's running in parallel you get them running in parallel so every continuation so whenever this",
    "start": "1233750",
    "end": "1240559"
  },
  {
    "text": "returns from so you do a delay it goes to a timer it comes back after three",
    "start": "1240559",
    "end": "1245840"
  },
  {
    "text": "milliseconds and it's on a different thread let's run this let's let's crash",
    "start": "1245840",
    "end": "1251530"
  },
  {
    "text": "in all them in all days in asp.net that works on asp.net that works this code",
    "start": "1251530",
    "end": "1258410"
  },
  {
    "text": "works fine because it cues continuations so hang on hang on this is the async part right this is the OL method this is",
    "start": "1258410",
    "end": "1265250"
  },
  {
    "text": "the only bit that actually does any type of yielding right but once you come back from here the thread pool you're gonna",
    "start": "1265250",
    "end": "1270530"
  },
  {
    "text": "be hoisted onto some thread pull thread randomly right in the old world because there was a sync context when you",
    "start": "1270530",
    "end": "1276440"
  },
  {
    "text": "entered this well when you entered here actually yeah when you when you yield",
    "start": "1276440",
    "end": "1281480"
  },
  {
    "text": "back here the task scheduler would say oh there was a sync context let me ask it where I should run the code and then",
    "start": "1281480",
    "end": "1287540"
  },
  {
    "text": "it would block here and I seen it actually and then wait before it would run again so you would have all ten",
    "start": "1287540",
    "end": "1293929"
  },
  {
    "text": "finish basically at the same time right and then they would all get in line and run one after the other this would run",
    "start": "1293929",
    "end": "1299540"
  },
  {
    "text": "then that would run them without a ten of them that doesn't happen a snit core correct you just get all these running on ten",
    "start": "1299540",
    "end": "1304880"
  },
  {
    "text": "random threads maybe they get scheduled anyway you might get a couple running in a time around although yeah so how does",
    "start": "1304880",
    "end": "1313160"
  },
  {
    "text": "that fail what does it do let's see thinking it feel okay this app has panelists",
    "start": "1313160",
    "end": "1319150"
  },
  {
    "text": "let's launch this app five zero six seven what a random port or is it random",
    "start": "1319150",
    "end": "1327500"
  },
  {
    "text": "oh I'm using work this is the this tool",
    "start": "1327500",
    "end": "1334730"
  },
  {
    "text": "runs only on Linux and it works well on the windows subsystem saloon yes well it",
    "start": "1334730",
    "end": "1341030"
  },
  {
    "text": "does on WSI is he used by tech empire to do up to do the load testing for it's a large generator well now you're not",
    "start": "1341030",
    "end": "1347690"
  },
  {
    "text": "you're actually just running your app right now oh yeah is that what you meant to do no [Laughter]",
    "start": "1347690",
    "end": "1353799"
  },
  {
    "text": "there we go okay alright so I'm using",
    "start": "1353799",
    "end": "1359350"
  },
  {
    "text": "256 connections I want the right so it's in a hammer that endpoint for 20 seconds okay okay",
    "start": "1359350",
    "end": "1371120"
  },
  {
    "text": "it's pretty boring : mine it's coming don't worry alright I don't know",
    "start": "1371120",
    "end": "1376510"
  },
  {
    "text": "winter is coming right is it printing like you don't watch Game of Thrones I don't I look at memes warning oh what's",
    "start": "1376510",
    "end": "1385850"
  },
  {
    "text": "going on it looks like it's working perfectly that's that's the trick Larry OH",
    "start": "1385850",
    "end": "1391390"
  },
  {
    "text": "are you telling me that this is racy it took me two times and it would happen every time after two times after two",
    "start": "1391390",
    "end": "1397970"
  },
  {
    "text": "times it happened every time that's what you want to hear that's what you wanted from a production application it",
    "start": "1397970",
    "end": "1403610"
  },
  {
    "text": "deployed it was fine and then it restarted and it wasn't it still looks like it's long it functioning did you",
    "start": "1403610",
    "end": "1410750"
  },
  {
    "text": "fix it accidentally while you were like preparing okay let's try one more time okay this let's try harder let's try",
    "start": "1410750",
    "end": "1419030"
  },
  {
    "text": "hotter create more talk of it straight",
    "start": "1419030",
    "end": "1424280"
  },
  {
    "text": "harder more threads throw more dye things at it",
    "start": "1424280",
    "end": "1430630"
  },
  {
    "text": "we actually I we said to each other before this talk wouldn't it be funny if when we tried to show all the errors we couldn't get them to fail because this",
    "start": "1431190",
    "end": "1438779"
  },
  {
    "text": "is the nature of like oh good",
    "start": "1438779",
    "end": "1444110"
  },
  {
    "text": "all right this just proves these are horrible horrible horrible bugs to have",
    "start": "1444110",
    "end": "1449190"
  },
  {
    "text": "in your application because it'll run fine for a day and then you'll do an advertising campaign and 20 percent more",
    "start": "1449190",
    "end": "1454830"
  },
  {
    "text": "people will show up at your website and then it'll crash horribly all right let's corruption the capacity was less",
    "start": "1454830",
    "end": "1462239"
  },
  {
    "text": "than the current size so that's a race condition yep right okay there you go oh good good job okay I remember the the",
    "start": "1462239",
    "end": "1470369"
  },
  {
    "text": "the salient point about this is that this code works in nbc5 yep all web forms or a spinet system web you work in",
    "start": "1470369",
    "end": "1478919"
  },
  {
    "text": "a spinet core you need to protect this code so you didn't lock here and then you're fixed or use a concurrent",
    "start": "1478919",
    "end": "1485850"
  },
  {
    "text": "collection oh use a concurrent structure of some sort by concurrent list and current queue right okay something that",
    "start": "1485850",
    "end": "1491789"
  },
  {
    "text": "will trust that will never net will never fail now all right so let's look at this one separate so same kind of",
    "start": "1491789",
    "end": "1499350"
  },
  {
    "text": "issue by Carla access to this looks a little more real now yeah I'll be calling out to something but is it for",
    "start": "1499350",
    "end": "1506309"
  },
  {
    "text": "delay oh okay let's assume it's actually HP client do something useful okay fair",
    "start": "1506309",
    "end": "1511619"
  },
  {
    "text": "enough but this is very common right I mean who's ever called to web requests concurrently yeah right to make it a",
    "start": "1511619",
    "end": "1517350"
  },
  {
    "text": "little faster of course you would right and this is how you do that right one calls it lot faster right so the hood is",
    "start": "1517350",
    "end": "1522659"
  },
  {
    "text": "is making it making you a request okay logging there before your L and content-type okay quest I'm not seeing",
    "start": "1522659",
    "end": "1529379"
  },
  {
    "text": "sheds today yeah it logs something right yeah logging stuff sure before and after so",
    "start": "1529379",
    "end": "1535769"
  },
  {
    "text": "you're not passing in some shared state there's no giveaway there what's wrong with it all right so what's wrong you're",
    "start": "1535769",
    "end": "1542609"
  },
  {
    "text": "using ambient values which one's this one what do we say before where did this",
    "start": "1542609",
    "end": "1548639"
  },
  {
    "text": "come from it's a property on this property it's a property so what's wrong with this one you're on the right track",
    "start": "1548639",
    "end": "1554869"
  },
  {
    "text": "you're on well I'm not the it's shared right what does this hang off",
    "start": "1554869",
    "end": "1561760"
  },
  {
    "text": "HP context what are we say on the second slide yep H no context is not thread safe and so when is this going to run",
    "start": "1561760",
    "end": "1568350"
  },
  {
    "text": "because this is where the asynchrony happens right before here you're all on the same thread right this is this is",
    "start": "1568350",
    "end": "1575140"
  },
  {
    "text": "where you yield and after this point you can be on different threads and in parallel up to this point you won't be",
    "start": "1575140",
    "end": "1580390"
  },
  {
    "text": "right so this one is the problem not this one yeah and so this continuation is the",
    "start": "1580390",
    "end": "1586600"
  },
  {
    "text": "term that which gets used right these this is a continuation of from this task this will get scheduled and will be",
    "start": "1586600",
    "end": "1593170"
  },
  {
    "text": "potentially in parallel in parallel yep and that's when you're gonna start seeing strange things but Tony reading how could it possibly be a problem",
    "start": "1593170",
    "end": "1599320"
  },
  {
    "text": "subtle right right so in its neck word and it's kind of a detail reads because",
    "start": "1599320",
    "end": "1604330"
  },
  {
    "text": "of how the request is designed reads may do a lazy evaluation and cause things to",
    "start": "1604330",
    "end": "1610720"
  },
  {
    "text": "be read all of a sudden so maybe maybe the headers haven't made it read yet okay first time you read them it'll all",
    "start": "1610720",
    "end": "1616360"
  },
  {
    "text": "it'll read all the headers and then materialize in dictionary I'm reading a single property can end up doing that",
    "start": "1616360",
    "end": "1621850"
  },
  {
    "text": "operation and it ends up being a right to be on thing so you end up with okay erase and so that's an interesting",
    "start": "1621850",
    "end": "1627460"
  },
  {
    "text": "detail so Nate's been a core we focus a lot on performance you know that right we did a whole bunch of work one of the things that was we don't do work until",
    "start": "1627460",
    "end": "1633880"
  },
  {
    "text": "you need to do it right so we don't do a whole bunch of work up front that involves we might be pausing the request",
    "start": "1633880",
    "end": "1639310"
  },
  {
    "text": "but we may not populate a whole bunch of structures that need that data because it costs cost time until you ask for it",
    "start": "1639310",
    "end": "1645790"
  },
  {
    "text": "so that's a lazy evaluation so you can end up if you've got two threads who start to cause like you eat this one is",
    "start": "1645790",
    "end": "1653590"
  },
  {
    "text": "your evaluation then this one tries to read it knows it's constructing stuff but now you're reading in the middle of",
    "start": "1653590",
    "end": "1658930"
  },
  {
    "text": "it being set up right and you can get very strange results same kind of error as the one we had before do you ever get",
    "start": "1658930",
    "end": "1664150"
  },
  {
    "text": "a situation where you start reading from the wrong request no no that would be really bad",
    "start": "1664150",
    "end": "1669580"
  },
  {
    "text": "I'll be off okay I mean I hope not cuz we don't pull don't pull request today no all right no good let me check",
    "start": "1669580",
    "end": "1676440"
  },
  {
    "text": "everyone we wrote signal are originally yeah we had a bug where we ended up getting the response from other requests",
    "start": "1676440",
    "end": "1682660"
  },
  {
    "text": "that was pretty good in the see these singular response to stress test that was interesting all right and this is",
    "start": "1682660",
    "end": "1688630"
  },
  {
    "text": "the most fun one okay so same pattern before",
    "start": "1688630",
    "end": "1695070"
  },
  {
    "text": "okay so there's no context now all right what's this all okay so you're calling",
    "start": "1695299",
    "end": "1701490"
  },
  {
    "text": "out to something I get it you'd say basically just removed the",
    "start": "1701490",
    "end": "1706740"
  },
  {
    "text": "thing that you're already the request okay it's gone okay and I'm logging okay it's fine it looks",
    "start": "1706740",
    "end": "1714659"
  },
  {
    "text": "fine you got rid of all the problem most part right didn't you get rid of all the problems except there's a whole strange",
    "start": "1714659",
    "end": "1720990"
  },
  {
    "text": "thing that's your logo yeah I see some so this lager is a special thing I wrote",
    "start": "1720990",
    "end": "1726260"
  },
  {
    "text": "that's super fancy that gets the it should be content and then it tries to",
    "start": "1726260",
    "end": "1732679"
  },
  {
    "text": "log the same stuff oh but it's hidden now it's hidden this is what you were saying yeah so",
    "start": "1732679",
    "end": "1739250"
  },
  {
    "text": "this is the kind of error that we we got from the app insights I seen there was a team in Bing that was doing this kind of",
    "start": "1739250",
    "end": "1746010"
  },
  {
    "text": "stuff and we really we don't see anything wrong this is ironic wrong it's code right it's just a logger what could",
    "start": "1746010",
    "end": "1752279"
  },
  {
    "text": "possibly go wrong app insights whenever you call a tractor limitary they have an entire pipe when I think of things that are run called",
    "start": "1752279",
    "end": "1758220"
  },
  {
    "text": "telemetry initializing lasers yeah and those cat feet the assessor and TRADOC",
    "start": "1758220",
    "end": "1763289"
  },
  {
    "text": "mister context and it was causing havoc on their their their machines actually cause they start to run tests got to go",
    "start": "1763289",
    "end": "1769409"
  },
  {
    "text": "to an infinite loop so to hone their CPUs and was that's not good it's bad okay so how do you fix this let's try to",
    "start": "1769409",
    "end": "1776669"
  },
  {
    "text": "write something to fix it okay quickly okay so I'm gonna write well you could",
    "start": "1776669",
    "end": "1782640"
  },
  {
    "text": "log which is simpler but we're computer science look let's write complex code to",
    "start": "1782640",
    "end": "1787950"
  },
  {
    "text": "do something super simple okay so to show people how this thing conduct kind of works I'll do a private class one at",
    "start": "1787950",
    "end": "1798690"
  },
  {
    "text": "a time sync contacts just like if your",
    "start": "1798690",
    "end": "1804960"
  },
  {
    "text": "knit okay and it would be very from synchronization context and there's",
    "start": "1804960",
    "end": "1814020"
  },
  {
    "text": "method called post post is like it's called so whenever you do an async operation the task a waiter looks to see",
    "start": "1814020",
    "end": "1821490"
  },
  {
    "text": "if there is a current sync on if there is one it'll call the post whenever it wants to run a continuation so when ever",
    "start": "1821490",
    "end": "1827010"
  },
  {
    "text": "wants to continue heard from in a wit returning it calls pause to say like keep running this code on this on this sinc context",
    "start": "1827010",
    "end": "1833679"
  },
  {
    "text": "so what I want to do is store a task that it's basically gonna be my cue I'm",
    "start": "1833679",
    "end": "1841030"
  },
  {
    "text": "gonna have a little pseudo Q okay and so whenever someone calls post you'll add",
    "start": "1841030",
    "end": "1846370"
  },
  {
    "text": "this to the queue and then it'll eventually run the sequence okay so I'm going to say task equals task start",
    "start": "1846370",
    "end": "1854220"
  },
  {
    "text": "continue with I say run D passing state",
    "start": "1854220",
    "end": "1862530"
  },
  {
    "text": "so I get the previous task I chain this continuation after that task to sign up",
    "start": "1862530",
    "end": "1868450"
  },
  {
    "text": "with this giant chain of a it's basically queue but the attack right okay thank you very single to right that",
    "start": "1868450",
    "end": "1875080"
  },
  {
    "text": "should actually be the whole thing okay how do you use it that's the question so I'm gonna go",
    "start": "1875080",
    "end": "1881710"
  },
  {
    "text": "ahead and create a new context and then",
    "start": "1881710",
    "end": "1888309"
  },
  {
    "text": "it calls sync contacts dot set the context okay it should be intro finally",
    "start": "1888309",
    "end": "1895210"
  },
  {
    "text": "but sure it's a demo to undo it you mean certain to it you're icing I don't know",
    "start": "1895210",
    "end": "1902530"
  },
  {
    "text": "wait here except to undo it afterwards I'm going to do st. context dot set",
    "start": "1902530",
    "end": "1909780"
  },
  {
    "text": "no okay let's do we basically just put a",
    "start": "1909780",
    "end": "1915730"
  },
  {
    "text": "god around like we basically put a little area where we want this to be coordinated so just for this one this",
    "start": "1915730",
    "end": "1921190"
  },
  {
    "text": "parallel all I'm gonna right make it make it run out of time okay I'm gonna hit that five on this so we",
    "start": "1921190",
    "end": "1929049"
  },
  {
    "text": "can see how the same context handles the pose",
    "start": "1929049",
    "end": "1932940"
  },
  {
    "text": "the speedy I mean you might look you do need anyone's kind of suck this I don't",
    "start": "1937390",
    "end": "1943279"
  },
  {
    "text": "want that so that's running all right at",
    "start": "1943279",
    "end": "1952880"
  },
  {
    "text": "the end point I think it was called parlor list 5:06 create a faint context",
    "start": "1952880",
    "end": "1966700"
  },
  {
    "text": "sit down the current thread yeah I put a Brit point here and here this is bucket",
    "start": "1966700",
    "end": "1977270"
  },
  {
    "text": "by the way okay I was gonna say that but I thought I'd let you find it first and",
    "start": "1977270",
    "end": "1982460"
  },
  {
    "text": "then you fix it I have no idea where it is so they call it post okay and if you",
    "start": "1982460",
    "end": "1989779"
  },
  {
    "text": "look at the cost AK it makes no sense but right look at this thing I see time",
    "start": "1989779",
    "end": "1995929"
  },
  {
    "text": "is hostage innovation run callback okay so the task continued the task Athena mission tasks actually runs on the same",
    "start": "1995929",
    "end": "2003190"
  },
  {
    "text": "context so it's clung pause to sing resume wherever you left off from alright I'm gonna put this in the tasks",
    "start": "2003190",
    "end": "2008289"
  },
  {
    "text": "you right and it should just run in sequence so I ran this again under under",
    "start": "2008289",
    "end": "2015549"
  },
  {
    "text": "load it should just like should just work she just work okay I never feel never failed the question",
    "start": "2015549",
    "end": "2021070"
  },
  {
    "text": "is how many times I run it to prove that it works that's a good well that sounds a bit like it what's the number that's",
    "start": "2021070",
    "end": "2026679"
  },
  {
    "text": "probably a comp site time what than that we can't do that what's the number",
    "start": "2026679",
    "end": "2031860"
  },
  {
    "text": "well had you made it fail before with one there is a there is a risk here where as tasks returned from the await",
    "start": "2031860",
    "end": "2039039"
  },
  {
    "text": "they do post at the same time so I should probably put a lock around this oh my goodness okay which is what system",
    "start": "2039039",
    "end": "2045940"
  },
  {
    "text": "web did if I were does yeah okay it's not only for the in queueing not for actual it's not for the execution okay",
    "start": "2045940",
    "end": "2051700"
  },
  {
    "text": "so I'm looking in this carrot I have to tell you fella I'm like we're not actually telling people to do this right",
    "start": "2051700",
    "end": "2057550"
  },
  {
    "text": "yeah no no of course not it's not like I don't want writing this this is more of an educational thing I see so the lesson",
    "start": "2057550",
    "end": "2064780"
  },
  {
    "text": "here is to do what you were doing before safely you would to do something like this thread-safe",
    "start": "2064780",
    "end": "2070960"
  },
  {
    "text": "collection it's probably easier what you really want to do is it's more about identifying the situations that will",
    "start": "2070960",
    "end": "2077169"
  },
  {
    "text": "introduce parallelization that's going to cause you a problem and then using the correct constructs or using",
    "start": "2077169",
    "end": "2082628"
  },
  {
    "text": "different patterns and patterns in order to do it not building harnesses and structures like this we know this may be",
    "start": "2082629",
    "end": "2088240"
  },
  {
    "text": "an ad well but we did it under the covers I'd feel ok if you get that out one customers to have to do this time",
    "start": "2088240",
    "end": "2093878"
  },
  {
    "text": "you sure no I'm pretty sure yes pretty this is pretty bad it's an interesting educational tool I'll give you that",
    "start": "2093879",
    "end": "2098950"
  },
  {
    "text": "pretty bad this is pretty crazy all right so I'm lit once and then that'll just be good enough okay you",
    "start": "2098950",
    "end": "2106210"
  },
  {
    "text": "believe me did you dial it all the way up yeah all right see that just never I'm not finally not fixed it's perfect",
    "start": "2106210",
    "end": "2113349"
  },
  {
    "text": "shipping it's perfect not a problem at all all right all right",
    "start": "2113349",
    "end": "2119049"
  },
  {
    "text": "Oh perfect let's resume because this",
    "start": "2119049",
    "end": "2125170"
  },
  {
    "text": "thing like long meal person wheezing all",
    "start": "2125170",
    "end": "2138430"
  },
  {
    "text": "right so where was I still showing their",
    "start": "2138430",
    "end": "2145029"
  },
  {
    "text": "thing Oh starring nice there you go",
    "start": "2145029",
    "end": "2153410"
  },
  {
    "text": "that's recorded probably oh there we go",
    "start": "2156830",
    "end": "2163220"
  },
  {
    "text": "you good all right yeah so we were at st. context yeah is everyone thoroughly like freaked out",
    "start": "2163220",
    "end": "2169810"
  },
  {
    "text": "not yet does anyone think they've hit one of these issues yet when they've moved their code from a you spinner",
    "start": "2169810",
    "end": "2176360"
  },
  {
    "text": "toast minute call because we lay a hand at the back yeah okay you're all lucky so far",
    "start": "2176360",
    "end": "2181610"
  },
  {
    "text": "maybe all right all right no requests queue so as part of doing research for",
    "start": "2181610",
    "end": "2187760"
  },
  {
    "text": "this this talk I found this this beautiful comment we have to end this",
    "start": "2187760",
    "end": "2192920"
  },
  {
    "text": "Late Show noise yeah I think you should just give up on the presentation it does it link by itself you can turn it off",
    "start": "2192920",
    "end": "2197930"
  },
  {
    "text": "completely yeah that sounds super complex there's",
    "start": "2197930",
    "end": "2203660"
  },
  {
    "text": "this comment that says the request queue was made to prevent thread pool",
    "start": "2203660",
    "end": "2208670"
  },
  {
    "text": "starvation I felt a little bit bad where's this comment in system web requests queue in the.net framework in",
    "start": "2208670",
    "end": "2215750"
  },
  {
    "text": "the nephron in HP net okay so turns out if you make a new thing you should probably like read the",
    "start": "2215750",
    "end": "2221870"
  },
  {
    "text": "old thing for it's not read it but like appreciate it okay for what it was okay um the fact is that that bad code runs",
    "start": "2221870",
    "end": "2229400"
  },
  {
    "text": "better on a stone Nathan espenak or did that land it's kind of a double double",
    "start": "2229400",
    "end": "2235270"
  },
  {
    "text": "meaning it will run better on a spinet yeah well crap is it like a pseudonym because",
    "start": "2235270",
    "end": "2242060"
  },
  {
    "text": "I wrote yeah right yes my body's just an ideal that's not lesson I do better on it garnet okay",
    "start": "2242060",
    "end": "2248630"
  },
  {
    "text": "Cole with an opportunity to be improved yeah so so when you port your code it unveils problems that you may not have",
    "start": "2248630",
    "end": "2254900"
  },
  {
    "text": "seen before nice so we're kind of like a linty so we help you like find your finder bad code I used to pick coal into a run pile into",
    "start": "2254900",
    "end": "2261560"
  },
  {
    "text": "that happens arbitrary run times it happens randomly yeah that's great so blocking the top loop tress can be problematic",
    "start": "2261560",
    "end": "2268100"
  },
  {
    "text": "buddy fault as you saw in the first diagram we run your code on thread blue threads which it's gonna cord us as well",
    "start": "2268100",
    "end": "2273440"
  },
  {
    "text": "as well but right we do it we don't have a queue to handle burst up front so you",
    "start": "2273440",
    "end": "2279920"
  },
  {
    "text": "kind of have to write the code and then I'm walking away to make it work below okay I know Jesse is really good at this",
    "start": "2279920",
    "end": "2286100"
  },
  {
    "text": "and there's no just good to know what is good at this no no doesn't have any blocking API is well they have a few but in general right no",
    "start": "2286100",
    "end": "2292609"
  },
  {
    "text": "doesn't have any blocking API he's done that came from a place where where was think at first had a really bad I did",
    "start": "2292609",
    "end": "2297680"
  },
  {
    "text": "bad I think like two times and then had tapped and it was like oh my gosh task agree then they think who ate was great",
    "start": "2297680",
    "end": "2302720"
  },
  {
    "text": "and then everyone's gonna figure out how to move their code from the old stuff to the new async/await see so you end up with a bunch of ApS",
    "start": "2302720",
    "end": "2309770"
  },
  {
    "text": "that look acing that aren't cinq-cinq I will see more of that as we go to the top okay under and what ends up",
    "start": "2309770",
    "end": "2316250"
  },
  {
    "text": "happening is if you do put your code but you may end up doing is a reason that's very cool because you may be using an AP",
    "start": "2316250",
    "end": "2321619"
  },
  {
    "text": "that is over posting or doing doing IO that is synchronous and the you get",
    "start": "2321619",
    "end": "2327380"
  },
  {
    "text": "worse performance on its kinetic or because we don't have that layer in front to to help you throttle requests but if you write good code it's much",
    "start": "2327380",
    "end": "2334490"
  },
  {
    "text": "much faster it's much faster correct good the thread pool has a has a very",
    "start": "2334490",
    "end": "2340339"
  },
  {
    "text": "fancy algorithm for measuring measuring throughput so it so you give it a minute",
    "start": "2340339",
    "end": "2345440"
  },
  {
    "text": "of Max and it has this very computer science the algorithm for figuring out when it has to be injected first I",
    "start": "2345440",
    "end": "2351950"
  },
  {
    "text": "remove threads to keep the system at a constant like rate is very slow my default so if you get a burst of traffic",
    "start": "2351950",
    "end": "2358609"
  },
  {
    "text": "and you don't have and you don't have non blocking code you can end up driving thread pool and so if you run out of",
    "start": "2358609",
    "end": "2366079"
  },
  {
    "text": "threads you you're not gonna get another one you won't get even for a while right you can work run it by increasing the",
    "start": "2366079",
    "end": "2372200"
  },
  {
    "text": "limits the the minimum number of threads in the thread pool but you have to take into account the stack size Porifera",
    "start": "2372200",
    "end": "2378410"
  },
  {
    "text": "he's ever fiddled with the thread pool size yeah kind of do is usually it usually happens people do it yeah and",
    "start": "2378410",
    "end": "2384770"
  },
  {
    "text": "it's sometimes it's fine right but it's generally a sign of something something that's not something that not happen to",
    "start": "2384770",
    "end": "2390770"
  },
  {
    "text": "be solved a different way yeah so most of the time when you're when you're in a case where you hit this situation and",
    "start": "2390770",
    "end": "2396380"
  },
  {
    "text": "you're starting the thread pool a quick fix is to bum the button the main threads if you have a lot of memory and then fix the problem and then buy down",
    "start": "2396380",
    "end": "2403280"
  },
  {
    "text": "right and you okay after you fixed it let's have a let's gonna see this if I all I want to say this so",
    "start": "2403280",
    "end": "2409010"
  },
  {
    "text": "oh these really about starvation mercy so think over a scene I want to read Stephen topes blog post on cinco bracing",
    "start": "2409010",
    "end": "2415940"
  },
  {
    "text": "he has a great series on all of the async stuff from like I think years ago basically an APA that kind of masquerade",
    "start": "2415940",
    "end": "2422839"
  },
  {
    "text": "sinkers but I see blocking ethnic methods so you have read on stream in Castro for example Castro",
    "start": "2422839",
    "end": "2428990"
  },
  {
    "text": "does not have blocking i/o so it's a farce we implement stream and we implement read but actually calls read a",
    "start": "2428990",
    "end": "2435650"
  },
  {
    "text": "think thought thought wait right so it does the thing we tell everyone not to do yeah yeah yeah so what was what would",
    "start": "2435650",
    "end": "2443450"
  },
  {
    "text": "be the alternative throw so I actually tried to make that change in to Oh so that if he tried to call one of",
    "start": "2443450",
    "end": "2449300"
  },
  {
    "text": "kestrels non asynchronous mounted methods it would throw by default and",
    "start": "2449300",
    "end": "2454760"
  },
  {
    "text": "then we turned it on and all the applications started throwing by default there are really interesting things that",
    "start": "2454760",
    "end": "2460850"
  },
  {
    "text": "haven't made her do these like big change it turns out that there was code that there couldn't change its",
    "start": "2460850",
    "end": "2466190"
  },
  {
    "text": "fundamental silicon example there streams that buffer like gzipstream and memory stream and there's no displace a",
    "start": "2466190",
    "end": "2473150"
  },
  {
    "text": "sink in the framework and there's no like using dispose they think so as I'm happening in streams that do buffering and normally flush on dispose and they",
    "start": "2473150",
    "end": "2480050"
  },
  {
    "text": "call synchronous flush which is called synchronous right right so you end up with this chain of things that you can't",
    "start": "2480050",
    "end": "2485450"
  },
  {
    "text": "really change or you might be using a serializer yeah that you passed the stream to you say I want to deserialize",
    "start": "2485450",
    "end": "2490760"
  },
  {
    "text": "this stuff from the incoming stream incoming request you pass it to adjacent D serializer and it reads the stream using",
    "start": "2490760",
    "end": "2497150"
  },
  {
    "text": "synchronous API is because the vast majority of them do that I think only Jason's are nets that are doing your base it's in 11 and so you",
    "start": "2497150",
    "end": "2504350"
  },
  {
    "text": "think everything is fine so in your code it's just configured in the system and then you can get into situations where you've got the system making synchronous",
    "start": "2504350",
    "end": "2510950"
  },
  {
    "text": "reading calls which you should never do and the case study that also next ok",
    "start": "2510950",
    "end": "2516650"
  },
  {
    "text": "most of them were the first one the first ones kind of most common issue some imported some code doing some stuff",
    "start": "2516650",
    "end": "2521990"
  },
  {
    "text": "I don't know if it was passed or not and they called like I think API a dot dot",
    "start": "2521990",
    "end": "2527540"
  },
  {
    "text": "result or not wait okay I think what we're saying is when you're doing offloading is you see this more in",
    "start": "2527540",
    "end": "2533900"
  },
  {
    "text": "you guys you I present when you want to not block the UI thread so you task to run something to run some background process it's not great and in server",
    "start": "2533900",
    "end": "2542420"
  },
  {
    "text": "after because you're you're taking a pool out of the thread that could be used to surf requests so it's fine if you want to do legite virtualization",
    "start": "2542420",
    "end": "2549350"
  },
  {
    "text": "doing something faster but it cost you more it cost if you do it correctly you pay the right cost for what you're",
    "start": "2549350",
    "end": "2554390"
  },
  {
    "text": "getting that's fine what we did before you were weighted to you created two tasks that result in paralyzation than your weight of them",
    "start": "2554390",
    "end": "2560270"
  },
  {
    "text": "both that's a sink over sink at some point we're saying clay know that that's more everything is when you tasked our",
    "start": "2560270",
    "end": "2566180"
  },
  {
    "text": "random block ah well that's okay that would cost you even more even more yes",
    "start": "2566180",
    "end": "2571900"
  },
  {
    "text": "blocking API is don't block just doing",
    "start": "2571900",
    "end": "2577040"
  },
  {
    "text": "don't do it what does that mean so don't call these don't call yeah ever so okay I want to be extreme of course you can",
    "start": "2577040",
    "end": "2584720"
  },
  {
    "text": "do it sometimes if you know what you're doing but like it it's a general rule the general rule if you haven't you",
    "start": "2584720",
    "end": "2589880"
  },
  {
    "text": "should be like huh why is it there right I think I think this is kind of",
    "start": "2589880",
    "end": "2595040"
  },
  {
    "text": "the same thing just don't block don't block that block ban Adams of the UK",
    "start": "2595040",
    "end": "2600410"
  },
  {
    "text": "wrote this this awesome middleware called blocking detector bans blocking today's blocking blocking effector and",
    "start": "2600410",
    "end": "2607130"
  },
  {
    "text": "what it does it creates a sink context and tries to capture all blocking API is",
    "start": "2607130",
    "end": "2612500"
  },
  {
    "text": "for a single occasion call and what it gives you logs for whenever you do you",
    "start": "2612500",
    "end": "2617690"
  },
  {
    "text": "block and the funny thing is he actually found a bug and this probably scare you",
    "start": "2617690",
    "end": "2623480"
  },
  {
    "text": "you found the bug in physical client oh like the white the single coin please",
    "start": "2623480",
    "end": "2629960"
  },
  {
    "text": "people going oh wait I can't see the screen hey yeah I can see presenter mode",
    "start": "2629960",
    "end": "2643330"
  },
  {
    "text": "there we go there's an issue where some guy was like",
    "start": "2643330",
    "end": "2648470"
  },
  {
    "text": "I use your tool it's awesome and some hole using dapper and create a sink I'm",
    "start": "2648470",
    "end": "2654470"
  },
  {
    "text": "getting this weird log thing it's blocking was it blocking it Ben goes oh snap that's a bug that's a core",
    "start": "2654470",
    "end": "2661340"
  },
  {
    "text": "effects this is buggin core effects Wow the connection pooling API is in sequel a",
    "start": "2661340",
    "end": "2667310"
  },
  {
    "text": "sequel server league block oops and they're gonna fix it is it fixable",
    "start": "2667310",
    "end": "2673400"
  },
  {
    "text": "uh-huh okay Rob put that maybe I don't know okay cool so this tool is quite",
    "start": "2673400",
    "end": "2679010"
  },
  {
    "text": "messy right say yes this to this library is quite new yeah okay so it's probably",
    "start": "2679010",
    "end": "2684740"
  },
  {
    "text": "hopefully will become more popular this type of thing if you've been talking this week about I was researching this",
    "start": "2684740",
    "end": "2690200"
  },
  {
    "text": "talk we need to do more as a team to help you find this type of code in your application so I would imagine in a",
    "start": "2690200",
    "end": "2696530"
  },
  {
    "text": "future release never be towards the end of the year we might have analyzers for things like this so that you'll get",
    "start": "2696530",
    "end": "2702380"
  },
  {
    "text": "warned in as part of your build right and while you're editing code that you've got issues if you don't own the",
    "start": "2702380",
    "end": "2707480"
  },
  {
    "text": "code that's a problem at Ricky rabbit and so then the next thing you do is introduce something we call an app",
    "start": "2707480",
    "end": "2712580"
  },
  {
    "text": "verifier which is a mode that you run the application in and then it reports things when it finds them which is kind",
    "start": "2712580",
    "end": "2718609"
  },
  {
    "text": "of what this is doing and then you put it in different modes so you can even run it in a mode where it crashes the application purposely when it finds a",
    "start": "2718609",
    "end": "2724790"
  },
  {
    "text": "mistake and you might do that in your test service and stuff like that so you prevent it getting out we actually have",
    "start": "2724790",
    "end": "2729830"
  },
  {
    "text": "that in system web yes the system web has an app verifier that you can turn on the registry with different levels of",
    "start": "2729830",
    "end": "2735080"
  },
  {
    "text": "severity one it is halted the program capture a dump and then crash if you find a violation and we use that with",
    "start": "2735080",
    "end": "2742280"
  },
  {
    "text": "Microsoft support to find issues in people's applications where they violate these types of rules because gonna be very subtle to track them down even if",
    "start": "2742280",
    "end": "2749119"
  },
  {
    "text": "you have a heap and a dump and profiling tools it can be very hard you really need the runtime to know about it sorry",
    "start": "2749119",
    "end": "2754280"
  },
  {
    "text": "all right show some some demos for this all right that time all right so I have",
    "start": "2754280",
    "end": "2760430"
  },
  {
    "text": "this app called threading it has a controller that has a bunch of actions",
    "start": "2760430",
    "end": "2766160"
  },
  {
    "text": "it has hello that was asleep dirty low world that looks bad is it I think you",
    "start": "2766160",
    "end": "2772070"
  },
  {
    "text": "just said that was bad he's just tired okay it's just tight hello sink over is there a thread cot rest I don't know",
    "start": "2772070",
    "end": "2781130"
  },
  {
    "text": "just just resting my eyes hello sink over a sink this is this is a",
    "start": "2781130",
    "end": "2787630"
  },
  {
    "text": "basic API and you're doing dot wait on it okay so sync erasing this is TAS",
    "start": "2787630",
    "end": "2793580"
  },
  {
    "text": "start run thread that's sleep so spawn use hair pull thread away in it and thence people not thread okay and then",
    "start": "2793580",
    "end": "2800300"
  },
  {
    "text": "hello async beautifully thing can we should we ask people how many threads are being used in each of these examples",
    "start": "2800300",
    "end": "2806599"
  },
  {
    "text": "how do they think yeah okay so for the first one it's just one thread how many",
    "start": "2806599",
    "end": "2812390"
  },
  {
    "text": "threads surely it's just one one you just call sleepwalk right so that's",
    "start": "2812390",
    "end": "2817490"
  },
  {
    "text": "easiest one thread gets used okay think over it I think anyone want to guess yes how many threads get used when",
    "start": "2817490",
    "end": "2823970"
  },
  {
    "text": "this method is called - finish it - is it - its food okay yeah so the first one to start it",
    "start": "2823970",
    "end": "2831290"
  },
  {
    "text": "and then you yield this one no and then",
    "start": "2831290",
    "end": "2836390"
  },
  {
    "text": "then you call wait blood the blood thread that has to get scheduled I guess yeah so that the second thread that",
    "start": "2836390",
    "end": "2841609"
  },
  {
    "text": "pulse work I see comes back compared pool to resume so two threads on that one what about this",
    "start": "2841609",
    "end": "2847460"
  },
  {
    "text": "one - task dot you will wait tasks run",
    "start": "2847460",
    "end": "2855410"
  },
  {
    "text": "it's an async method you will wait the async thing and then inside that it blocks the thread that's running on I",
    "start": "2855410",
    "end": "2861079"
  },
  {
    "text": "think it's three is three is it four I don't even know no it's a",
    "start": "2861079",
    "end": "2866089"
  },
  {
    "text": "fire maybe it's three I think it's three right because current generations get",
    "start": "2866089",
    "end": "2872630"
  },
  {
    "text": "scheduled right yeah so this is the second half of the method after this semicolon so you get one frame maybe and",
    "start": "2872630",
    "end": "2878329"
  },
  {
    "text": "if you shouldn't call it threads we should call it like no no no I'm not not new threads it might be the resin",
    "start": "2878329",
    "end": "2883640"
  },
  {
    "text": "execute up to three it could be it could be up to three right and so you come in on a thread you yield that roast this",
    "start": "2883640",
    "end": "2889790"
  },
  {
    "text": "into a thread and then you run on a thread down here those are set three separate logical operations you could",
    "start": "2889790",
    "end": "2896119"
  },
  {
    "text": "end up using three separate threads for that yeah from the thread pool depending on the load all those things could",
    "start": "2896119",
    "end": "2901400"
  },
  {
    "text": "result in a new thread neutral being added that makes sense I mean you could be lucky if there's no",
    "start": "2901400",
    "end": "2906619"
  },
  {
    "text": "other load it all runs in the same straight that does happen sometimes write code that runs after your way up to three is the continuation so",
    "start": "2906619",
    "end": "2912530"
  },
  {
    "text": "everything after anyway is like is a continuing a continuation right okay so three four what really look like two",
    "start": "2912530",
    "end": "2917960"
  },
  {
    "text": "right now for this one oh that looks simple like one - I know one and a half",
    "start": "2917960",
    "end": "2924829"
  },
  {
    "text": "so you come in as one thread right it yields the yields so this thread yields",
    "start": "2924829",
    "end": "2930140"
  },
  {
    "text": "here heels yeah yeah it comes back and resume so two threads tooth right okay two sections that ones again so it's",
    "start": "2930140",
    "end": "2936020"
  },
  {
    "text": "really this one of the middle is the one that you got to really look out for us yeah but the point is in a wait go down",
    "start": "2936020",
    "end": "2942220"
  },
  {
    "text": "this one here is doing the right thing yes but it can use two threads do this",
    "start": "2942220",
    "end": "2947450"
  },
  {
    "text": "okay all right so which is the worst one then one no way this is much worse than this",
    "start": "2947450",
    "end": "2952970"
  },
  {
    "text": "one like much much worse like this just don't do it worse well two is",
    "start": "2952970",
    "end": "2959640"
  },
  {
    "text": "bigger than one so yeah that's why it's worth its it's at least twice as bad you win I can make it quick maths",
    "start": "2959640",
    "end": "2968509"
  },
  {
    "text": "alright so this app has a background thread that prints out the triple stats",
    "start": "2970519",
    "end": "2978329"
  },
  {
    "text": "so I made the tear pull the thread pool small it's not this small normally just like in show bad things happening okay",
    "start": "2978329",
    "end": "2984569"
  },
  {
    "text": "see you second for the max is not that small max is 10 the min is actually smaller usually the Matty at the",
    "start": "2984569",
    "end": "2989759"
  },
  {
    "text": "ministry is the number of CPUs and yeah so on your machine is - yours is old on mine it's 16 or something bad I feel bad",
    "start": "2989759",
    "end": "2997769"
  },
  {
    "text": "that's mean and yours is too but the max is like unlimited usually writes like a max value or something right so every",
    "start": "2997769",
    "end": "3003949"
  },
  {
    "text": "every loop I get the available worker threads I don't care about IO threads are important all right these but these",
    "start": "3003949",
    "end": "3010429"
  },
  {
    "text": "idle threads are for like HTTP requests and sockets not for orchestral things at",
    "start": "3010429",
    "end": "3015529"
  },
  {
    "text": "all we use a dedicated right we have a difference we don't use the pool yeah yeah mint is max right so I guess the",
    "start": "3015529",
    "end": "3021769"
  },
  {
    "text": "mint prismatic stress and available threads every every loop okay so it's printing out we're just counting choice available active threads main threads",
    "start": "3021769",
    "end": "3029109"
  },
  {
    "text": "max threads and requests a number of requests currently a flight okay cool and that's counted by startup all right",
    "start": "3029109",
    "end": "3037880"
  },
  {
    "text": "I guess this middle work that increments after and deca mess after okay so these",
    "start": "3037880",
    "end": "3044539"
  },
  {
    "text": "are these are our rudimentary perf counters yeah because we don't have parameters in call yeah not yet so I had",
    "start": "3044539",
    "end": "3051739"
  },
  {
    "text": "this other Prohm they wrote that sucks but it's good enough to show things this",
    "start": "3051739",
    "end": "3057529"
  },
  {
    "text": "five thousand I think that basically lets me add load add constant load by",
    "start": "3057529",
    "end": "3063380"
  },
  {
    "text": "hitting up or down on my keyboard okay so I'm gonna do hello hello first and",
    "start": "3063380",
    "end": "3070009"
  },
  {
    "text": "how I was the one that just did a fret don't sleep rightly yeah so it's just request comes in you're gonna sleep that thread and then it's gonna return after",
    "start": "3070009",
    "end": "3076549"
  },
  {
    "text": "it what is it a second yeah okay two seconds two seconds okay",
    "start": "3076549",
    "end": "3083439"
  },
  {
    "text": "I ran so you guys see UI number of",
    "start": "3083589",
    "end": "3091299"
  },
  {
    "text": "requests I hit up there's one it should have one request going into this is app",
    "start": "3091299",
    "end": "3096309"
  },
  {
    "text": "one request after there's one available trans nine okay King sees this right so",
    "start": "3096309",
    "end": "3102489"
  },
  {
    "text": "it's continually issuing a one request there's always a single request in flight it goes it comes back it sends another one right one at a time - now",
    "start": "3102489",
    "end": "3109779"
  },
  {
    "text": "there's two concurrent at any time four four and so you can see the threads going down like available is now six",
    "start": "3109779",
    "end": "3115420"
  },
  {
    "text": "because four active because there's four requests because we said that that card used one thread per request and it's",
    "start": "3115420",
    "end": "3121539"
  },
  {
    "text": "blocking so we're always using four threads with that blocking car and the thread pool never goes past the max max",
    "start": "3121539",
    "end": "3127749"
  },
  {
    "text": "isn't us so our server can scale - well I'm gonna do some math again I think the",
    "start": "3127749",
    "end": "3134170"
  },
  {
    "text": "server's gonna get to ten and then it's gonna get a little wonky you're clever no I see it's a nine looking pretty good",
    "start": "3134170",
    "end": "3142239"
  },
  {
    "text": "it's so far ten I'm like a super stress",
    "start": "3142239",
    "end": "3147880"
  },
  {
    "text": "test why is it working perfectly fine okay it's ramping up still Oh up ten no",
    "start": "3147880",
    "end": "3154359"
  },
  {
    "text": "threads left what is this possibly do no more threads so make it 11 oh it's crashing already oh clients are",
    "start": "3154359",
    "end": "3161769"
  },
  {
    "text": "crashing is that a timeout yeah but that what happens okay so now I'm gonna I'm",
    "start": "3161769",
    "end": "3169509"
  },
  {
    "text": "gonna go down it should recover you're",
    "start": "3169509",
    "end": "3174609"
  },
  {
    "text": "reducing load yeah them back it should be late oh oh oh yeah there we go",
    "start": "3174609",
    "end": "3179979"
  },
  {
    "text": "perfect so that's actually a really interesting demonstration recovered says distillation hits here's the max",
    "start": "3179979",
    "end": "3186549"
  },
  {
    "text": "recovers it's fine so it is blocking threads of who's ever had a website they've deployed an application they got",
    "start": "3186549",
    "end": "3191979"
  },
  {
    "text": "an increase in traffic and their website became unresponsive right I'm hoping if",
    "start": "3191979",
    "end": "3197410"
  },
  {
    "text": "you've ever had a site of any type of scale you'll get that when you don't control the traffic that's really stressful because there's not a lot you",
    "start": "3197410",
    "end": "3203799"
  },
  {
    "text": "can do to turn the traffic off you have to have something else in front of your site some type of load balance or some",
    "start": "3203799",
    "end": "3208989"
  },
  {
    "text": "type of reverse proxy where you can fail quickly so your app can keep going in this case we'll be hitting it directly",
    "start": "3208989",
    "end": "3214809"
  },
  {
    "text": "you see very quickly once you go beyond the to leave your site to scale in this case it's blocked by threads yep right",
    "start": "3214809",
    "end": "3220120"
  },
  {
    "text": "because of bag code then it's done like people just start timing out but it came",
    "start": "3220120",
    "end": "3226550"
  },
  {
    "text": "back right once the Lord went down it came back it came back that's a key so okay cars do that let's",
    "start": "3226550",
    "end": "3232610"
  },
  {
    "text": "do this think over this one is the most fun but the clients weren't failing fast yeah I had to timeout the time though my",
    "start": "3232610",
    "end": "3239050"
  },
  {
    "text": "single racing so I'm still running an achievement URL - hello sync overrating",
    "start": "3239050",
    "end": "3247300"
  },
  {
    "text": "so runs in the fate request to make sure it's running should have okay so we've",
    "start": "3247330",
    "end": "3255530"
  },
  {
    "text": "got ten and no requests no requests 10 threads ID 5 6 7 8 9 10 this is the same",
    "start": "3255530",
    "end": "3263720"
  },
  {
    "text": "code but we were just doing tasks are delayed don't wait right yeah okay so it's late asleep right it's doing a tosser delay and then doing",
    "start": "3263720",
    "end": "3269690"
  },
  {
    "text": "a dot wait okay so I'm gonna add 10 okay",
    "start": "3269690",
    "end": "3274780"
  },
  {
    "text": "no trace left okay Oh start feeling good night 11 12",
    "start": "3274780",
    "end": "3280610"
  },
  {
    "text": "okay still dead yeah gonna go down now reduce load okay",
    "start": "3280610",
    "end": "3287740"
  },
  {
    "text": "char - anyway there we go there we go 10 9",
    "start": "3287740",
    "end": "3294789"
  },
  {
    "text": "I mean this is what a cascading failure looks like right things become",
    "start": "3297740",
    "end": "3303770"
  },
  {
    "text": "unresponsive 7 this is me a production all right Francis fixed my site so the",
    "start": "3303770",
    "end": "3309200"
  },
  {
    "text": "hope here is the app will recover because we reducing connections right why what's going on oh why is it what's",
    "start": "3309200",
    "end": "3316040"
  },
  {
    "text": "still zero it has ten requests oh no available threads 10 active why is it not recovering",
    "start": "3316040",
    "end": "3322160"
  },
  {
    "text": "anyone was white yep so he's saying the",
    "start": "3322160",
    "end": "3329330"
  },
  {
    "text": "thread pool there waiting these requests are waiting for a continuation to run that was the the the the inside line",
    "start": "3329330",
    "end": "3336650"
  },
  {
    "text": "yeah all right and it's awesome the thread pool for a thread bond you're blocking the current",
    "start": "3336650",
    "end": "3341720"
  },
  {
    "text": "thread you schedule the work to the timer right that and you're and you're",
    "start": "3341720",
    "end": "3346970"
  },
  {
    "text": "blocking the current thread yeah so you're taking up the 10th red so this app will never never a couple is a that job is dead",
    "start": "3346970",
    "end": "3352349"
  },
  {
    "text": "this is a is reset oops that's kind of subtle yes so when you said it was",
    "start": "3352349",
    "end": "3358710"
  },
  {
    "text": "really bad because it used two threads that you were really lying yeah you're really bad because it'll never recover yeah if you go beyond load okay I know",
    "start": "3358710",
    "end": "3364859"
  },
  {
    "text": "real life you you probably want it the maximum less you have Hugh a huge burst of traffic but but there's thread pool",
    "start": "3364859",
    "end": "3370259"
  },
  {
    "text": "injection rig yeah sue a second and it may seem it won't recover because you're adding press so they pull like that you may not",
    "start": "3370259",
    "end": "3376140"
  },
  {
    "text": "end up getting to the max and I don't care how good your Linux kernel is or your Windows kernel there's only so much",
    "start": "3376140",
    "end": "3381599"
  },
  {
    "text": "you can do to multitask and like a thousands of threads on top of four physical CPUs or eight physical CPUs",
    "start": "3381599",
    "end": "3388559"
  },
  {
    "text": "right especially if they're all blocking and you're only injecting a new thread every two seconds anyway so one thing we want to show before you probably pick",
    "start": "3388559",
    "end": "3395309"
  },
  {
    "text": "one more in this is going so maybe was say that a think makes things scale it's",
    "start": "3395309",
    "end": "3400440"
  },
  {
    "text": "kind of hard to see what that means right people say and it sounds good web skills songs sounds good it sounds powerful",
    "start": "3400440",
    "end": "3405660"
  },
  {
    "text": "you think is web scale but what it actually means is that you have available threats to handle more stuff so if I did the same thing for for hello",
    "start": "3405660",
    "end": "3413309"
  },
  {
    "text": "async so this is a white tossed delay yeah this is a could be a sink okay so",
    "start": "3413309",
    "end": "3424039"
  },
  {
    "text": "okay so we've got ten requests in flight",
    "start": "3424039",
    "end": "3429599"
  },
  {
    "text": "at all times and we'll always have ten threads of paranor threads and use so",
    "start": "3429599",
    "end": "3434910"
  },
  {
    "text": "we've got ten requests running right now but we have all the threads available which is counterintuitive right but the",
    "start": "3434910",
    "end": "3441359"
  },
  {
    "text": "reality is there's code running there are threads being used but at the rate he's printing them out they're always available because they're writing for",
    "start": "3441359",
    "end": "3447719"
  },
  {
    "text": "millisecond yeah I mean let's say microseconds probably even just to do the scheduling the time out and then the",
    "start": "3447719",
    "end": "3453690"
  },
  {
    "text": "scheduling back so that each request takes a fraction of a CPU to finish which means that you can hit this",
    "start": "3453690",
    "end": "3458910"
  },
  {
    "text": "probably with thousands of requests automatically and it would scale fine web this is web scale this is web scale",
    "start": "3458910",
    "end": "3465200"
  },
  {
    "text": "nice that make sense to people understand that now so like if you use async purely all the way up and down the",
    "start": "3465200",
    "end": "3471809"
  },
  {
    "text": "stack and the things you're calling in to that are a single well-written so you know you hope that the the async API is",
    "start": "3471809",
    "end": "3477239"
  },
  {
    "text": "in net are well-written you hope the tasks pull a thread pool and the task scheduler are well-written you hope you",
    "start": "3477239",
    "end": "3482339"
  },
  {
    "text": "hope and Kestrel and a spirit core is well written and you almost be fine bugs we fix them then it scales really well",
    "start": "3482339",
    "end": "3488790"
  },
  {
    "text": "right because you actually don't use a lot of CPU if you're calling async methods you do one thing wrong one thing",
    "start": "3488790",
    "end": "3495300"
  },
  {
    "text": "you can literally because imagine you only had one method in your entire app that did this right but then you had a",
    "start": "3495300",
    "end": "3502080"
  },
  {
    "text": "thousand people hit it no apps dead they will never recover okay so this is really dangerous we're",
    "start": "3502080",
    "end": "3509370"
  },
  {
    "text": "gonna really blow up really really dangerous no time left but okay I'm gonna show it a couple of slides lately",
    "start": "3509370",
    "end": "3514500"
  },
  {
    "text": "it should be client cuz it's pretty interesting perfect so starvation there but should",
    "start": "3514500",
    "end": "3520800"
  },
  {
    "text": "links here to a bunch of scenarios will share the slides yeah afterwards to put them up so people pretty good I think",
    "start": "3520800",
    "end": "3526110"
  },
  {
    "text": "all razor is I think so if don't ever call synchronous methods to render razor always called the async version in a",
    "start": "3526110",
    "end": "3532200"
  },
  {
    "text": "spec core we are going to get rid of the sync versions in three oh yeah okay let's go with super angry we kill this",
    "start": "3532200",
    "end": "3538890"
  },
  {
    "text": "site yeah sorry oops HP client everyone familiar they",
    "start": "3538890",
    "end": "3544770"
  },
  {
    "text": "should be client you should use a singleton it should be client never create one per operation is very very very bad there's a blog post from the",
    "start": "3544770",
    "end": "3551310"
  },
  {
    "text": "exponet monster is talking about why it's so bad in great detail always make sure you bump up the concurrent action",
    "start": "3551310",
    "end": "3557070"
  },
  {
    "text": "limit by default in dotnet framework is to I think to persever linked server 2000 you can figure it in different",
    "start": "3557070",
    "end": "3564030"
  },
  {
    "text": "places based on where you are always using the ethic methods don't block don't block you just saw why you",
    "start": "3564030",
    "end": "3569400"
  },
  {
    "text": "shouldn't block never block if you're porting code from full front Dominic or you shouldn't use they see you requests",
    "start": "3569400",
    "end": "3575550"
  },
  {
    "text": "because it creates in the HIV client everyone knows this type right this is what we use for operation HP client",
    "start": "3575550",
    "end": "3580790"
  },
  {
    "text": "don't use that in dotnet core just don't use it this yeah not in a spinet core anyway bad bad things happen do not use",
    "start": "3580790",
    "end": "3588890"
  },
  {
    "text": "this get a string async and I should be client for large responses that's a very",
    "start": "3588890",
    "end": "3594060"
  },
  {
    "text": "common pardon I see where you people call get string I think deserialized string as Jason and every turn to NBC",
    "start": "3594060",
    "end": "3599820"
  },
  {
    "text": "don't do that use a stream API is and always use the this triple used to about the stream",
    "start": "3599820",
    "end": "3605160"
  },
  {
    "text": "parsing yeah okay and I had a demo but this so usually free too late now alright cool yep I think all the things",
    "start": "3605160",
    "end": "3611310"
  },
  {
    "text": "you think all the things that's probably the crux of the entire talk yeah okay so we'll share these slides and the",
    "start": "3611310",
    "end": "3616410"
  },
  {
    "text": "code is all available up in your Reaper yep we'll just put the slides in the github repo yep otherwise thanks for coming Alice will be around for a little",
    "start": "3616410",
    "end": "3622380"
  },
  {
    "text": "bit through an awesome question",
    "start": "3622380",
    "end": "3625309"
  }
]