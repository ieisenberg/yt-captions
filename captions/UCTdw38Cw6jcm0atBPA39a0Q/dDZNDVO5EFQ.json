[
  {
    "text": "all right good morning everyone for the people in the back we have some premium seating right here up front if you want",
    "start": "4540",
    "end": "11260"
  },
  {
    "text": "to sit on the first row we have one spot left I think so fix some other spots on the second and",
    "start": "11260",
    "end": "17140"
  },
  {
    "text": "third row so if you want to sit down don't don't hesitate just come up and we got to talk about common API security",
    "start": "17140",
    "end": "22990"
  },
  {
    "text": "pitfalls so this talk is gonna be an overview of a lot of problems that can",
    "start": "22990",
    "end": "28240"
  },
  {
    "text": "happen in API a lot of problems you might have in your API and a lot of problems I'm gonna try to help you solve",
    "start": "28240",
    "end": "33579"
  },
  {
    "text": "in your API and I started talking about this actually quite a long time ago in 2017 when they added something to the",
    "start": "33579",
    "end": "41109"
  },
  {
    "text": "OS top-10 so the OS stop then is a list of the ten most dangerous availabilities in web applications and they make this",
    "start": "41109",
    "end": "47979"
  },
  {
    "text": "list every couple of years and in 2010 2017 they proposed to add under",
    "start": "47979",
    "end": "53350"
  },
  {
    "text": "protected api's to that list of vulnerabilities some things happen in the community a lot of people were very",
    "start": "53350",
    "end": "59459"
  },
  {
    "text": "discontent with what top 10 has become and the whole project shifted gears a bit and this is appeared in the final",
    "start": "59459",
    "end": "65408"
  },
  {
    "text": "version but didn't matter because the seed was planted people realize like holy crap you're building all these api-based",
    "start": "65409",
    "end": "71200"
  },
  {
    "text": "applications and this is a real problem you need to start thinking about security specifically for that and",
    "start": "71200",
    "end": "76570"
  },
  {
    "text": "that's why last year they launched the API security project in Ross Perot and this API security project focuses on",
    "start": "76570",
    "end": "83440"
  },
  {
    "text": "everything API security related they even builds a separate top ten for issues about API security so if you're",
    "start": "83440",
    "end": "90100"
  },
  {
    "text": "interested in API secured if you want to get started with API security I suggest to take a look at that because it's a",
    "start": "90100",
    "end": "95710"
  },
  {
    "text": "treasure trove of information I'm not going to talk about the top ten of API security issues some of them will be in",
    "start": "95710",
    "end": "101440"
  },
  {
    "text": "there some of them might not be I'm gonna talk about my own experience I'm gonna talk about what I see when I talk",
    "start": "101440",
    "end": "107110"
  },
  {
    "text": "to developers when I teach developers about security or when I look at their systems I encounter often the same",
    "start": "107110",
    "end": "112630"
  },
  {
    "text": "things which is what I distilled into this API security pitfall stock just to",
    "start": "112630",
    "end": "117970"
  },
  {
    "text": "make sure that we're all on the same page I want to sketch a little totally lava facial architecture diagram so what",
    "start": "117970",
    "end": "124000"
  },
  {
    "text": "we're doing is we're building an application today it's gonna be typically a web application in a lot of cases a front-end so you're loading your",
    "start": "124000",
    "end": "130750"
  },
  {
    "text": "front-end your client-side JavaScript based application where there is angular or react or view doesn't matter your",
    "start": "130750",
    "end": "136180"
  },
  {
    "text": "bootstrapping that in browser that's step one that moment you have an empty shell you have something that",
    "start": "136180",
    "end": "141740"
  },
  {
    "text": "doesn't really do anything useful because typically you need back-end systems to make that work and that back-end system is going to be your API",
    "start": "141740",
    "end": "147800"
  },
  {
    "text": "it's gonna be fetching data from an API rendering displaying that and when you perform an operation it's gonna push",
    "start": "147800",
    "end": "153440"
  },
  {
    "text": "that operation back to the API to actually persist that later on we're going to talk about the API part we're",
    "start": "153440",
    "end": "159440"
  },
  {
    "text": "not going to talk about the frontline security part which also means that in this case it's also very relevant for",
    "start": "159440",
    "end": "164570"
  },
  {
    "text": "people building other types of clients if you build a mobile client or a desktop application or whatever if it's",
    "start": "164570",
    "end": "169760"
  },
  {
    "text": "backed by an API I can guarantee that almost every one of these issues we're going to talk about is going to be",
    "start": "169760",
    "end": "174890"
  },
  {
    "text": "relevant I didn't count them so I have no idea how many we're gonna cover but that gives me flexibility to cut it",
    "start": "174890",
    "end": "180350"
  },
  {
    "text": "short we're running late but we're gonna be totally fine this image is a good",
    "start": "180350",
    "end": "186800"
  },
  {
    "text": "starting point there's a lot of people well sometimes you have full stack developer sometimes you have to split",
    "start": "186800",
    "end": "192290"
  },
  {
    "text": "between front end and back end but off people think about this image as a whole well II actually only the top part is",
    "start": "192290",
    "end": "197870"
  },
  {
    "text": "usually relevant for security because the top part is where the things happen where the data is where the operations",
    "start": "197870",
    "end": "203209"
  },
  {
    "text": "happen and a very good example is tinder you can swipe left and right for looking for",
    "start": "203209",
    "end": "208880"
  },
  {
    "text": "a partner totally based on appearances so it's absolutely not what we stand for as a society but sure it's probably very",
    "start": "208880",
    "end": "215630"
  },
  {
    "text": "useful by the way everything I'm telling you now is totally anecdotal because I have a wife and otherwise she would be",
    "start": "215630",
    "end": "220820"
  },
  {
    "text": "very very displeased with my behavior but as it turns out apparently you can",
    "start": "220820",
    "end": "227140"
  },
  {
    "text": "also see who likes you so other people can see your profile and you can even of",
    "start": "227140",
    "end": "232580"
  },
  {
    "text": "course they like you the app is trying to sell you a premium subscription by showing you blurred images like hey these people like you you want to see",
    "start": "232580",
    "end": "238700"
  },
  {
    "text": "what they look like right so why not pay us and we'll get you access to that data it turns out that the blurring of the",
    "start": "238700",
    "end": "244340"
  },
  {
    "text": "images is a front-end operation the mobile app just pulls in the image and blurs it and then shows it to you so of",
    "start": "244340",
    "end": "250760"
  },
  {
    "text": "course if you know a bit about computers you're like mmm do I want to pay for that no let's just spend a lot of time",
    "start": "250760",
    "end": "256640"
  },
  {
    "text": "figuring out how it works and you'll find the API call that you can actually use to get that image and with that you",
    "start": "256640",
    "end": "263450"
  },
  {
    "text": "can actually get the image and so on and so on so somebody else figured this out they analyzed the web application figure",
    "start": "263450",
    "end": "269840"
  },
  {
    "text": "out the API endpoints we make the call coming from the iOS application and they got the images just",
    "start": "269840",
    "end": "275030"
  },
  {
    "text": "like that and that brings us to the first important pitfall your API is a",
    "start": "275030",
    "end": "280490"
  },
  {
    "text": "real attack surface it's not a front-end yes there are some security things you need to address in front ends but",
    "start": "280490",
    "end": "285620"
  },
  {
    "text": "usually it's gonna be about your API that's where you should focus most of your efforts when you look for security",
    "start": "285620",
    "end": "290960"
  },
  {
    "text": "problems and a lot of API is over expose data not only images but just fetching like full JSON objects and then",
    "start": "290960",
    "end": "297889"
  },
  {
    "text": "displaying three fields in the front-end and yeah everybody everything else is hidden right well not if somebody figures out what the API calls are what",
    "start": "297889",
    "end": "304669"
  },
  {
    "text": "the traffic looks like they can grab all of that data just like that so that's definitely one thing to keep in mind",
    "start": "304669",
    "end": "310669"
  },
  {
    "text": "also sets very good team we're gonna talk about a lot of authorization issues because in security it often comes down",
    "start": "310669",
    "end": "316639"
  },
  {
    "text": "to authorization to preventing somebody from doing something they're not supposed to be doing which is authorization we need some things to",
    "start": "316639",
    "end": "323300"
  },
  {
    "text": "make that work I will talk about that later first another authorization problem I really like these cases not to",
    "start": "323300",
    "end": "330110"
  },
  {
    "text": "make fun of companies getting it wrong but to illustrate you that these are real things because when I talk about these things people are like yeah",
    "start": "330110",
    "end": "336229"
  },
  {
    "text": "nobody does that in practice like come on you know better than to do that well apparently not what happened here",
    "start": "336229",
    "end": "342800"
  },
  {
    "text": "t-mobile mobile phone operator they get cake they can give you access to your account you want to access your account",
    "start": "342800",
    "end": "348469"
  },
  {
    "text": "information is gonna be an API call with your phone number phone number is a unique identifier for your account makes",
    "start": "348469",
    "end": "354110"
  },
  {
    "text": "sense since cell phone numbers are unique and linked to your account so why not the problem here is called unsecure",
    "start": "354110",
    "end": "360439"
  },
  {
    "text": "direct object references it's an old problem has been around for a while and what a problem actually",
    "start": "360439",
    "end": "365930"
  },
  {
    "text": "means is that if I substitute my phone number for your phone number I'm gonna get your account information just like",
    "start": "365930",
    "end": "371149"
  },
  {
    "text": "that then I figure out what his phone number is and bam I got his account information and so on and so on and what",
    "start": "371149",
    "end": "377000"
  },
  {
    "text": "they actually did check is whether you were authenticated but he never checked if you were the actual person the owner",
    "start": "377000",
    "end": "382580"
  },
  {
    "text": "of that account and were supposed to access an information it's an unsecure of that reference happened to t-mobile",
    "start": "382580",
    "end": "389680"
  },
  {
    "text": "happen to telefónica in Spain to AT&T in the US and to Verizon in the US as well",
    "start": "389680",
    "end": "395210"
  },
  {
    "text": "all of the phone companies apparently have a very similar vulnerability and happens in other cases as well insurance",
    "start": "395210",
    "end": "401360"
  },
  {
    "text": "documents linked to by numbers of identifier in the URL and then it starts",
    "start": "401360",
    "end": "408180"
  },
  {
    "text": "with zero zero zero zero 200 for somebody might try zero zero zero 203 and boom there you go out of document",
    "start": "408180",
    "end": "414720"
  },
  {
    "text": "and so on and so on you can start enumerating there used to be a problem in old Web Apps we have the same thing",
    "start": "414720",
    "end": "420630"
  },
  {
    "text": "in api's just like that we call it differently it's called broken object level access control but it's the same",
    "start": "420630",
    "end": "426410"
  },
  {
    "text": "essential problem under the hood and these things are really really common I",
    "start": "426410",
    "end": "432000"
  },
  {
    "text": "can guarantee you that in this room five to ten people if they go look at their",
    "start": "432000",
    "end": "437400"
  },
  {
    "text": "API on Monday they will find this problem absolutely that common and why",
    "start": "437400",
    "end": "442410"
  },
  {
    "text": "does it exist because we build applications with two turtles we learn about REST API is in node in ten minutes",
    "start": "442410",
    "end": "449910"
  },
  {
    "text": "and in ten minutes there's not going to be any security in there I can tell you that takes a lot longer to talk about",
    "start": "449910",
    "end": "455280"
  },
  {
    "text": "security but this is okay because it's about the rest paradigm and you learn how to build a to-do application of",
    "start": "455280",
    "end": "460620"
  },
  {
    "text": "course and it's about fetching tasks so you can read a task with a task identifier here is a request or",
    "start": "460620",
    "end": "467220"
  },
  {
    "text": "parameter stop task ID you can delete tasks with a task identifier of course you send it a delete request and it will",
    "start": "467220",
    "end": "473789"
  },
  {
    "text": "make sure the task disappears and when you build a first application your first API like that is gonna be awesome like",
    "start": "473789",
    "end": "480479"
  },
  {
    "text": "oh this is pretty cool of course then you're going to think about users like hey but I don't have a",
    "start": "480479",
    "end": "486479"
  },
  {
    "text": "single user I'm like I have different users so let's learn about how to do identification and users and all of",
    "start": "486479",
    "end": "491940"
  },
  {
    "text": "these things and that information that tutorial that course is gonna talk about",
    "start": "491940",
    "end": "497009"
  },
  {
    "text": "how you have to implement authentication checks like is the user log didn't know Oh in that case let's send them a 401",
    "start": "497009",
    "end": "503219"
  },
  {
    "text": "otherwise go ahead and perform that operation and that's exactly what t-mobile and all the other phone",
    "start": "503219",
    "end": "509099"
  },
  {
    "text": "companies also did but then you have to think further then you have to think about who's allowed to access this",
    "start": "509099",
    "end": "514200"
  },
  {
    "text": "particular task who can read it and you have to implement explicit authorization checks and these things are often",
    "start": "514200",
    "end": "520500"
  },
  {
    "text": "missing because often people don't talk about that and they're not very easy to implement it's a very difficult problem",
    "start": "520500",
    "end": "527130"
  },
  {
    "text": "to solve and unless you go to your application and you look for the absence of that code you're not gonna spot this",
    "start": "527130",
    "end": "533550"
  },
  {
    "text": "yes with testing you'll find the fact that somebody is should be logged in I can access that that's gonna be in",
    "start": "533550",
    "end": "539830"
  },
  {
    "text": "your test but unless you thought about this problem explicitly it's not gonna be in your tests and you might be missing that particular piece of code",
    "start": "539830",
    "end": "546310"
  },
  {
    "text": "and the cases I talked about illustrate that this thing is really really common all right",
    "start": "546310",
    "end": "551920"
  },
  {
    "text": "brings us here lack of proper authorization always check both authentication status and object level",
    "start": "551920",
    "end": "559570"
  },
  {
    "text": "access control check if the user is allowed to access these things yes or no and again that's not an easy problem to",
    "start": "559570",
    "end": "565600"
  },
  {
    "text": "solve even in a task manager like the one that showed you here this can get complicated really quickly I use a task",
    "start": "565600",
    "end": "572830"
  },
  {
    "text": "manager that I share with my wife for example or full household and life is basically in a to-do application but",
    "start": "572830",
    "end": "578920"
  },
  {
    "text": "that means that deciding if somebody's ought to read a task means did this person create a task lock okay that's",
    "start": "578920",
    "end": "583960"
  },
  {
    "text": "fine or are they part of a shared project which also gives them access to this task which gets complicated really",
    "start": "583960",
    "end": "589840"
  },
  {
    "text": "really quickly it's not an easy check to do at a single single location in your application that brings us here so",
    "start": "589840",
    "end": "597850"
  },
  {
    "text": "you're gonna get a call to a back-end like hey I want to fetch this information and there's gonna be some",
    "start": "597850",
    "end": "603370"
  },
  {
    "text": "authorization information we'll talk about that in a second there might be some custom headers or token in the header something like that and then the",
    "start": "603370",
    "end": "610150"
  },
  {
    "text": "call is gonna invoke other services in your application architecture and I'm explicitly or deliberately vague about",
    "start": "610150",
    "end": "616960"
  },
  {
    "text": "this services whether it's a Mike or service or another layer in your monolith application doesn't matter",
    "start": "616960",
    "end": "622660"
  },
  {
    "text": "because this happens in all types of applications there's all things involved there's a data access layer there's maybe a layer to a control or doing",
    "start": "622660",
    "end": "629140"
  },
  {
    "text": "something and so on and so on and at each of these layers you typically make authorization checks like is the user",
    "start": "629140",
    "end": "634600"
  },
  {
    "text": "logged in oh yeah that's that's good then let's move ahead with the skull and then maybe there you want to check all this user is allowed to read this task",
    "start": "634600",
    "end": "640720"
  },
  {
    "text": "that's cool and that part does something else based on different customers and different projects maybe sir there's",
    "start": "640720",
    "end": "646390"
  },
  {
    "text": "going to be a customer specific ID check and God knows what else the user specific ID check or something like that and all of these checks together",
    "start": "646390",
    "end": "654700"
  },
  {
    "text": "that's your authorization policy and this is something really interesting because if you if I had to unsecure the",
    "start": "654700",
    "end": "659830"
  },
  {
    "text": "assessment I'm typically sitting around the table with five to six of the engineers that built the application and we talked about how to handle security",
    "start": "659830",
    "end": "666610"
  },
  {
    "text": "and when I asked them like hey if this calls come call comes in how do you know that this you",
    "start": "666610",
    "end": "671800"
  },
  {
    "text": "our application is supposed or allowed to access this particular object and of the six people are on the table five",
    "start": "671800",
    "end": "677769"
  },
  {
    "text": "people are going to be looking at job because that's the guy that built this authorization policy and Java is gonna",
    "start": "677769",
    "end": "683439"
  },
  {
    "text": "be like oh crap I'm on the spot now and you see him thinking like hmm so this",
    "start": "683439",
    "end": "689649"
  },
  {
    "text": "call comes in so we have a token in your requests we're going to take this parameter out of the token and that",
    "start": "689649",
    "end": "694899"
  },
  {
    "text": "comes out of the database and then based on this so yeah I think we have discovered that's the good case yeah",
    "start": "694899",
    "end": "701499"
  },
  {
    "text": "this is fine the bad case is like oh crap and they start writing like an authorization rule on the fly like let's",
    "start": "701499",
    "end": "706779"
  },
  {
    "text": "just update the code to add this but these things are hard to analyze they're",
    "start": "706779",
    "end": "712239"
  },
  {
    "text": "hard to audit and if you have a policy like this were a few people only a few people in an organization have the full mental model of that it's gonna be",
    "start": "712239",
    "end": "719170"
  },
  {
    "text": "insanely difficult to actually alter that policy you have no idea what checks are and forced our checks are not",
    "start": "719170",
    "end": "725079"
  },
  {
    "text": "enforced and if these people are sick or leave the company nobody knows and that's why you need a centralized",
    "start": "725079",
    "end": "731739"
  },
  {
    "text": "authorization policy these checks are good as a defense in that mechanism absolutely use them but preferably you",
    "start": "731739",
    "end": "738369"
  },
  {
    "text": "have one place where you can specify an authorization policy whether that's in code or a separate declarative policy",
    "start": "738369",
    "end": "744999"
  },
  {
    "text": "run by a policy agent doesn't really matter here but you need to have an auditable centralized authorization",
    "start": "744999",
    "end": "751029"
  },
  {
    "text": "policy you need to be able to go to one place in your application say like this is what we enforce on incoming API calls",
    "start": "751029",
    "end": "757209"
  },
  {
    "text": "and that will give you a good idea and that if somebody asks like hey have recovered this particular authorization",
    "start": "757209",
    "end": "763509"
  },
  {
    "text": "problem for this particular endpoint you can go ahead and select oh we probably",
    "start": "763509",
    "end": "768790"
  },
  {
    "text": "should add that or oh yeah this is covered here's the policy and that's a very good way of making authorization",
    "start": "768790",
    "end": "774790"
  },
  {
    "text": "checks all right by the way if you want to grab a copy of the slides I've pushed",
    "start": "774790",
    "end": "780519"
  },
  {
    "text": "the tweet out so you can go to my Twitter feed and grab a full PDF with a lot more slides than what I'm talking about here so that's definitely a good",
    "start": "780519",
    "end": "787059"
  },
  {
    "text": "way to spend your weekend reading about API security all right or just do it",
    "start": "787059",
    "end": "792850"
  },
  {
    "text": "mommy I know work-life balance you I understand that so let's do it on Monday that's also fine all right",
    "start": "792850",
    "end": "800368"
  },
  {
    "text": "catherization like I said we're gonna talk a lot about authorization",
    "start": "801200",
    "end": "806740"
  },
  {
    "text": "authorization or propagating authentication states that's essentially",
    "start": "806740",
    "end": "811790"
  },
  {
    "text": "what we're doing we're logging in once as a user for every subsequent call we need to know oh it's Phillip making the",
    "start": "811790",
    "end": "818269"
  },
  {
    "text": "call so we can make authorization decisions and this used to be a fairly simple thing to do you had a client and",
    "start": "818269",
    "end": "824029"
  },
  {
    "text": "you had a back-end this is the old days this is Internet Explorer and a PHP or Perl back end with a my sequel database",
    "start": "824029",
    "end": "830079"
  },
  {
    "text": "remember those times life was a lot simpler back then anyway your",
    "start": "830079",
    "end": "835399"
  },
  {
    "text": "application grew you have a lot more users maybe there was like a Firefox user in there sure let's make sure that",
    "start": "835399",
    "end": "841279"
  },
  {
    "text": "works as well but essentially you had us a number of clients and a manageable number of back-end servers and that's a",
    "start": "841279",
    "end": "848240"
  },
  {
    "text": "typical application model this is called stateful because the server's typically keep session state a PHP session ID",
    "start": "848240",
    "end": "854959"
  },
  {
    "text": "pointing to a server-side session object keeping track of states such as is the user authenticated yes",
    "start": "854959",
    "end": "860959"
  },
  {
    "text": "what's his user name Phillip that's essentially what's going on in the rest world this is considered to be evil like",
    "start": "860959",
    "end": "867709"
  },
  {
    "text": "no and never ever keep State on a server in a restaurant because we have stateless services honestly I don't",
    "start": "867709",
    "end": "873529"
  },
  {
    "text": "really agree with that there's nothing wrong with keeping state right here on back-end systems there's something wrong",
    "start": "873529",
    "end": "880579"
  },
  {
    "text": "with writing stateful code actually agree if you write code that behaves differently based on what's in that object that might not be the right thing",
    "start": "880579",
    "end": "887390"
  },
  {
    "text": "to do but if you're making authorization decisions the server-side state that works we know how to do that we know how",
    "start": "887390",
    "end": "893630"
  },
  {
    "text": "to use sticky sessions or session replication on the server and your engineers if there have been doing web",
    "start": "893630",
    "end": "898820"
  },
  {
    "text": "development for 20 years they know how to do that and if you're building a small to medium scale application where",
    "start": "898820",
    "end": "904370"
  },
  {
    "text": "you know that you'll have a few hundred users and nothing more often my recommendations just use this mechanism",
    "start": "904370",
    "end": "909860"
  },
  {
    "text": "it works of course if you're building something like this we have a bunch of",
    "start": "909860",
    "end": "914870"
  },
  {
    "text": "services like 20,000 Amazon instances and a gazillion clients this is probably not gonna work very well and hit it's",
    "start": "914870",
    "end": "921350"
  },
  {
    "text": "not the use case for that anymore then you have to move towards the stateless systems and it makes a lot of sense but",
    "start": "921350",
    "end": "927230"
  },
  {
    "text": "what I see is a lot of people read about these rest api's and statelessness and they look at Twitter how is Twitter doing things and then",
    "start": "927230",
    "end": "933800"
  },
  {
    "text": "they replicate is their application it takes a lot of effort to get it right we're gonna talk about that in a second a lot of effort",
    "start": "933800",
    "end": "939379"
  },
  {
    "text": "to learn about these things to get it right only to realize after it's like yeah we only have a hundred users so why did we do that what's wrong with our",
    "start": "939379",
    "end": "946069"
  },
  {
    "text": "Java session ID in a spring boot application it works first modules to actually do that and it makes a lot of",
    "start": "946069",
    "end": "952970"
  },
  {
    "text": "sense in certain applications so I'm not saying one is better than the other I'm saying one it's a bit easier than the",
    "start": "952970",
    "end": "958399"
  },
  {
    "text": "other shirt but if you want to move from stateful server-side sessions to",
    "start": "958399",
    "end": "963499"
  },
  {
    "text": "stateless sessions with tokens probably do it for the right reasons do it for scalability not because somebody said so",
    "start": "963499",
    "end": "970189"
  },
  {
    "text": "that you have to do that in a blog post about how to build your first angular application make sure you think this true PHP session IDs probably not",
    "start": "970189",
    "end": "980089"
  },
  {
    "text": "sequential and single-digit but you get the idea this is a server-side State",
    "start": "980089",
    "end": "985179"
  },
  {
    "text": "server-side State lives in this nice server-side environment in memory which",
    "start": "985179",
    "end": "990259"
  },
  {
    "text": "is considered to be a fairly secure environment somebody can modify that information trust me that's gonna be the",
    "start": "990259",
    "end": "995720"
  },
  {
    "text": "least of your problems you're gonna be screwed anyway however if we move this to the client the back end becomes",
    "start": "995720",
    "end": "1001959"
  },
  {
    "text": "stateless which is awesome but our data now lives in a very insecure environment where everybody who knows how to open up",
    "start": "1001959",
    "end": "1007629"
  },
  {
    "text": "local storage can start tampering with that information in the browser it's like oh here's the value authenticated",
    "start": "1007629",
    "end": "1012909"
  },
  {
    "text": "false well let's change that to true and see what happens I can guarantee you nurse API is out there like oh you're",
    "start": "1012909",
    "end": "1018459"
  },
  {
    "text": "authenticated oh here's the data that happened in practice there's API so you can change admin equals false to true an",
    "start": "1018459",
    "end": "1025360"
  },
  {
    "text": "API it's like Oh welcome admin BAM just like that of course we know better so",
    "start": "1025360",
    "end": "1031120"
  },
  {
    "text": "let's not talk about that but how do you protect the data you need integrity protection absolutely you need to be",
    "start": "1031120",
    "end": "1037990"
  },
  {
    "text": "able to detect unauthorized changes to this information you might also need confidentiality because sir site memory",
    "start": "1037990",
    "end": "1044529"
  },
  {
    "text": "confidential lo storage if you put sensitive information there health care information financial information it is",
    "start": "1044529",
    "end": "1049659"
  },
  {
    "text": "considered to be a safe place to keep that information client-side storage not so much it might be breaking God knows",
    "start": "1049659",
    "end": "1055929"
  },
  {
    "text": "how many regulations by pushing the data into the client so think about these",
    "start": "1055929",
    "end": "1062019"
  },
  {
    "text": "things in practice we're gonna think about that and learn about that you're",
    "start": "1062019",
    "end": "1067029"
  },
  {
    "text": "probably gonna end up here a JSON web token a job and the tilt is",
    "start": "1067029",
    "end": "1072610"
  },
  {
    "text": "sorry for the sign language people here the next part is not gonna be very straightforward to translate that try to",
    "start": "1072610",
    "end": "1080090"
  },
  {
    "text": "stick with me so a job is a way to represent JSON data and we all know what",
    "start": "1080090",
    "end": "1086179"
  },
  {
    "text": "a job looks like typically on a job has a header a payload for actual data lifts and a signature and we get that job you",
    "start": "1086179",
    "end": "1092690"
  },
  {
    "text": "need to want to grab that data out of here that data is going to be the useful piece of information that you want to do",
    "start": "1092690",
    "end": "1098210"
  },
  {
    "text": "something with such as make authorization decisions here's a code example of how to do that in Java and",
    "start": "1098210",
    "end": "1105440"
  },
  {
    "text": "this is a very interesting example because I often show this in my training courses and ask people what's wrong with this and you have a group of 20 people",
    "start": "1105440",
    "end": "1113090"
  },
  {
    "text": "in the room and this happens generally on every occasion and you're looking at this like hmm",
    "start": "1113090",
    "end": "1119860"
  },
  {
    "text": "that's interesting there's probably one meaningful line of code yet people are",
    "start": "1119860",
    "end": "1125059"
  },
  {
    "text": "like I know something I can't really pinpoint it and it's like one or two persons yeah I think you're just getting",
    "start": "1125059",
    "end": "1132890"
  },
  {
    "text": "the data out but you're not verifying any integrity you don't know whether you can trust that data and they're right this lime tree the decode function is",
    "start": "1132890",
    "end": "1141200"
  },
  {
    "text": "simply decoding the payload from base64 to Jason well in this case to a Java",
    "start": "1141200",
    "end": "1147080"
  },
  {
    "text": "object actually this is the or a better way to do things",
    "start": "1147080",
    "end": "1152210"
  },
  {
    "text": "verify the signature first before we're getting the data out the result is the same in line 6 we get a decoded shot",
    "start": "1152210",
    "end": "1158960"
  },
  {
    "text": "object just like we did in line 3 but the implications are a lot more serious",
    "start": "1158960",
    "end": "1165470"
  },
  {
    "text": "here because the first code example is extremely vulnerable anybody can give you anything they want and the second is",
    "start": "1165470",
    "end": "1171830"
  },
  {
    "text": "the way to get it right and I don't blame you Vela purrs for this because honestly we don't need the documentation",
    "start": "1171830",
    "end": "1177590"
  },
  {
    "text": "for every function that we ever call that's why it should have been called in security code or decode without",
    "start": "1177590",
    "end": "1183230"
  },
  {
    "text": "verifying signature because that would tell you as a developer like mmm that's",
    "start": "1183230",
    "end": "1188270"
  },
  {
    "text": "probably not the one I need and you will be able to find other solutions this is just an illustration of why moving these",
    "start": "1188270",
    "end": "1194570"
  },
  {
    "text": "things to the client makes things more complicated don't miss handle client side session",
    "start": "1194570",
    "end": "1200600"
  },
  {
    "text": "data if you want to call it that our authentication state or authorization state whatever you want to call it I honestly don't care about the",
    "start": "1200600",
    "end": "1206430"
  },
  {
    "text": "name I care about what it represents and that's exactly what this is about don't miss handle that all right when we",
    "start": "1206430",
    "end": "1215310"
  },
  {
    "text": "talk about jobs for a while now why because they have become the de facto standard to do these things and there's a lot of things wrong with them usually",
    "start": "1215310",
    "end": "1224570"
  },
  {
    "text": "let's talk about a pretty purple part here the payloads that's where the actual data lives that payloads often",
    "start": "1225020",
    "end": "1232740"
  },
  {
    "text": "looks like this I can guarantee you if you open up Google or sorry if you open up go I should say in your brave browser",
    "start": "1232740",
    "end": "1240150"
  },
  {
    "text": "which is actually pretty awesome you can Google for how to do token-based authentication angular apps and you're",
    "start": "1240150",
    "end": "1246390"
  },
  {
    "text": "gonna find something like this like just authenticate user and push some stuff in an adjacent web token and send it to the",
    "start": "1246390",
    "end": "1252150"
  },
  {
    "text": "client that off we go and people love it because it's a stateless paradigm if you look back at your very old PHP",
    "start": "1252150",
    "end": "1258630"
  },
  {
    "text": "application that we all know that you're still running but that's a different story it's gonna look like this you're",
    "start": "1258630",
    "end": "1264180"
  },
  {
    "text": "gonna get a session ID a meaningless identifier you're gonna have to look it up at the database and then you get some",
    "start": "1264180",
    "end": "1269430"
  },
  {
    "text": "vault database or memory or Redis cache or whatever you need to get some session data and you can make your authorization decisions state on the server that are",
    "start": "1269430",
    "end": "1276660"
  },
  {
    "text": "it's in the database or whatnot if you deploy this in different geographical zones it's not gonna work very well and",
    "start": "1276660",
    "end": "1282000"
  },
  {
    "text": "this mutton the new paradigm that's often called token-based authentication which is a very incorrect name but",
    "start": "1282000",
    "end": "1288720"
  },
  {
    "text": "that's again not very important here looks like that beautiful right no more data stored on a server no more",
    "start": "1288720",
    "end": "1295920"
  },
  {
    "text": "stay to manage or replicate no we can simply get it out of a job by verifying the signature and we're",
    "start": "1295920",
    "end": "1301140"
  },
  {
    "text": "good to go however when you implement a system like this you have vastly different properties because here you",
    "start": "1301140",
    "end": "1307380"
  },
  {
    "text": "have full control over what's happening you can control sessions you know how many active sessions there are you can",
    "start": "1307380",
    "end": "1313410"
  },
  {
    "text": "kill a session if you want to you can revoke access to a session and so on here you have nothing and especially if",
    "start": "1313410",
    "end": "1321210"
  },
  {
    "text": "you use it as a session this token that you now have is gonna be valid for 8 hours 12 hours a day and if somebody",
    "start": "1321210",
    "end": "1327870"
  },
  {
    "text": "loses that token if somebody steals that token one way or another you're in a role of trouble because there's no way",
    "start": "1327870",
    "end": "1333390"
  },
  {
    "text": "to kill it there's no way to even tell application like don't accept this anymore this one is bad doesn't exist of",
    "start": "1333390",
    "end": "1340860"
  },
  {
    "text": "course if you think about this upfront you can build systems you can build for example a list of revoke tokens a very",
    "start": "1340860",
    "end": "1347400"
  },
  {
    "text": "common approach like what if we give every token an identifier and then we keep a list of bad identifiers so we",
    "start": "1347400",
    "end": "1353400"
  },
  {
    "text": "know that this one shouldn't be accepted anymore and you get something like this so you have your token and you have a",
    "start": "1353400",
    "end": "1359190"
  },
  {
    "text": "list a database or a cache or whatever somewhere with a list of known bad identifiers so you have to go check it",
    "start": "1359190",
    "end": "1365010"
  },
  {
    "text": "every time a token comes in to make sure if it's still valid or not and that's under the assumption that you kept these",
    "start": "1365010",
    "end": "1371820"
  },
  {
    "text": "identifiers in the first place linked to specific users or specific devices because if you haven't have if you don't",
    "start": "1371820",
    "end": "1377910"
  },
  {
    "text": "have that list upfront then this doesn't even work very well again to show you that there's a lot of things wrong it's",
    "start": "1377910",
    "end": "1385260"
  },
  {
    "text": "lightly pushing that state to the client it doesn't work like that somebody on the internet called you P has been",
    "start": "1385260",
    "end": "1392250"
  },
  {
    "text": "saying that for a very long time you wrote a blog post a very ran T blog post which is actually very spot on and of",
    "start": "1392250",
    "end": "1399090"
  },
  {
    "text": "course people started suggesting solutions like changing keys or keeping lists of revoked identifiers so we build",
    "start": "1399090",
    "end": "1404760"
  },
  {
    "text": "a very sarcastic flowchart to tell all of them that are wrong because everything ends up either in usability",
    "start": "1404760",
    "end": "1410190"
  },
  {
    "text": "problems or security problems all of them brings us soo-ji I suggest you read",
    "start": "1410190",
    "end": "1415440"
  },
  {
    "text": "it it's actually really interesting brings us to the takeaway here don't mistake a job for a session a job is",
    "start": "1415440",
    "end": "1421290"
  },
  {
    "text": "just a way to represent data securely by adding integrity protection and confidentiality if you want to but it",
    "start": "1421290",
    "end": "1428400"
  },
  {
    "text": "doesn't do anything it's not a session it's not revocable and if you want to use juts like all artists you need a",
    "start": "1428400",
    "end": "1434730"
  },
  {
    "text": "whole supporting ecosystem to make that work that's why a lot is so complicated because it ensures that there's a",
    "start": "1434730",
    "end": "1440700"
  },
  {
    "text": "central party in control of issuing tokens and making sure when the token is renewed that they're allowed to get a",
    "start": "1440700",
    "end": "1446610"
  },
  {
    "text": "new token adding revoke ability and all of these things into the mix all right",
    "start": "1446610",
    "end": "1454700"
  },
  {
    "text": "back to a job we talked about is a few times shots have integrity protection",
    "start": "1454740",
    "end": "1461100"
  },
  {
    "text": "they are signed by the issuer meaning once they're signed a receiver is able",
    "start": "1461100",
    "end": "1466230"
  },
  {
    "text": "to verify whether the job has been changed in between yes or no which is good otherwise I could change my user ID",
    "start": "1466230",
    "end": "1472440"
  },
  {
    "text": "from one two three four five six seven eight nine zero to something else and I will become another person that's not",
    "start": "1472440",
    "end": "1478770"
  },
  {
    "text": "possible because of a signature the blue part here is a signature a few things about signatures you'll often find them",
    "start": "1478770",
    "end": "1485850"
  },
  {
    "text": "as an H Mac more on that in a second don't use super-secret H Maki as the",
    "start": "1485850",
    "end": "1491640"
  },
  {
    "text": "secret to sign that a check and if you use something else don't put that on a PowerPoint slide and broadcast that to",
    "start": "1491640",
    "end": "1497280"
  },
  {
    "text": "the world again seems obvious but people have production found production systems",
    "start": "1497280",
    "end": "1502410"
  },
  {
    "text": "using Kies copy pasted from lock posts like a blog post explaining how this works something like super-secret H",
    "start": "1502410",
    "end": "1508230"
  },
  {
    "text": "Mickey copy/paste production code oh yeah this seems to work very well don't do it why because that's how it here's",
    "start": "1508230",
    "end": "1514920"
  },
  {
    "text": "how an h-back works an HVAC takes this input data in a jot world that's the",
    "start": "1514920",
    "end": "1521370"
  },
  {
    "text": "header and the payload and I'm going to push it through an HVAC function a dedicated cryptographic function that",
    "start": "1521370",
    "end": "1526590"
  },
  {
    "text": "takes a secret key as input super secret H Mickey and spits out an HVAC that H",
    "start": "1526590",
    "end": "1531900"
  },
  {
    "text": "Mac is uniquely linked to this data and this key and that's what you add to the job that's the blue part in a job you",
    "start": "1531900",
    "end": "1538320"
  },
  {
    "text": "push that out to the client and everybody's happy that's how you assigned jobs that way you get when you",
    "start": "1538320",
    "end": "1544950"
  },
  {
    "text": "receive a job and then at the data and the payload I'm going to push that through the hmx function again with the",
    "start": "1544950",
    "end": "1551160"
  },
  {
    "text": "secret key and out comes an H Mac and now it can compare these two H max you can compare the original one with a new",
    "start": "1551160",
    "end": "1557190"
  },
  {
    "text": "one and if you're the same then you know that the message of the job that data has not been changed in the meantime",
    "start": "1557190",
    "end": "1564690"
  },
  {
    "text": "since issuing that job and if they did change maybe somebody added a white space maybe somebody's changed a zero",
    "start": "1564690",
    "end": "1571020"
  },
  {
    "text": "into a one we don't care if it's not valid we reject it and we kick it out and that's how an H Mac works there's",
    "start": "1571020",
    "end": "1578670"
  },
  {
    "text": "one big elephant on this slide one big glaring problem this works perfectly",
    "start": "1578670",
    "end": "1584309"
  },
  {
    "text": "fine in your application sorry are targeting you if you build an",
    "start": "1584309",
    "end": "1590700"
  },
  {
    "text": "application that issues a job and receives a job you can verify that signature very easy use key volts to put",
    "start": "1590700",
    "end": "1596670"
  },
  {
    "text": "that secret in you get it or you ask the vault to verify that signature and you're done awesome however if you make friends at a",
    "start": "1596670",
    "end": "1604950"
  },
  {
    "text": "conference they want to give their application shots they're going to need to verify the integrity of that job so",
    "start": "1604950",
    "end": "1611970"
  },
  {
    "text": "you might be tempted to give them your secret as well don't do that you can never keep a secret more than",
    "start": "1611970",
    "end": "1618270"
  },
  {
    "text": "one application basically or one person unless you kill them which is a lot harder with applications of it people",
    "start": "1618270",
    "end": "1624420"
  },
  {
    "text": "also not recommended by the way because hmx have a second signature scheme H",
    "start": "1624420",
    "end": "1629790"
  },
  {
    "text": "sorry shots h max are only useful within one single isolated application everybody else should be using",
    "start": "1629790",
    "end": "1635640"
  },
  {
    "text": "astrometric signatures which are much more awesome but also a bit harder to implement but you should go to the",
    "start": "1635640",
    "end": "1641700"
  },
  {
    "text": "effort of doing that what's going to happen here is we're going to use a signature algorithm again dedicated cryptographic function and we give it a",
    "start": "1641700",
    "end": "1647970"
  },
  {
    "text": "data and a private key and out comes a signature which we add to the data and we push it out to the client in this",
    "start": "1647970",
    "end": "1654390"
  },
  {
    "text": "case and when it comes back we get a data in the signature and we use again a",
    "start": "1654390",
    "end": "1659520"
  },
  {
    "text": "specialized function to verify that signature which takes the data and the original signature as inputs along with",
    "start": "1659520",
    "end": "1665580"
  },
  {
    "text": "a public key and it will tell you yes or no true or false exception or no",
    "start": "1665580",
    "end": "1671460"
  },
  {
    "text": "exception depending on how it's implemented and then it's the same when it's a good a go thumbs up or whatever",
    "start": "1671460",
    "end": "1677490"
  },
  {
    "text": "that means that a data has not been changed and that the data has been signed by the private key belong to this",
    "start": "1677490",
    "end": "1683400"
  },
  {
    "text": "specific public key and when something doesn't match either the data changed or",
    "start": "1683400",
    "end": "1688650"
  },
  {
    "text": "it was signed by a different key honestly we don't care and we don't want it in this mechanism much more beautiful",
    "start": "1688650",
    "end": "1694290"
  },
  {
    "text": "to use because this means if you are issuing juts to all the conference",
    "start": "1694290",
    "end": "1699420"
  },
  {
    "text": "attendees all you need to give them is your public key and the word says it itself public key everybody can know",
    "start": "1699420",
    "end": "1705000"
  },
  {
    "text": "that because nobody can use that to generate Falacci of tokens in your name the only thing that can do that is a",
    "start": "1705000",
    "end": "1710970"
  },
  {
    "text": "private key which as the word implies you keep private you store that in your key vault and give nobody else access to",
    "start": "1710970",
    "end": "1717300"
  },
  {
    "text": "that private key and that is how you handle child signatures and this is the only useful thing in most",
    "start": "1717300",
    "end": "1723210"
  },
  {
    "text": "applications even within your own trust zone even within your microservice architecture every service issuing jobs",
    "start": "1723210",
    "end": "1729450"
  },
  {
    "text": "should have their own private public key pair allowing you to compartmentalize that allowing to verify who actually",
    "start": "1729450",
    "end": "1735750"
  },
  {
    "text": "generated this job and whether you want to trust that yes or no very very very",
    "start": "1735750",
    "end": "1740940"
  },
  {
    "text": "important and again something that I often see implemented in a different way",
    "start": "1740940",
    "end": "1748190"
  },
  {
    "text": "all right one of the reason shots are so hard is",
    "start": "1749480",
    "end": "1754950"
  },
  {
    "text": "because they're crypto basically it's not about Jason though it's about signing and encrypting whenever you sign",
    "start": "1754950",
    "end": "1761220"
  },
  {
    "text": "something think about our scenario adhere our friend upfront which is totally gonna hate me for targeting in it's giving all",
    "start": "1761220",
    "end": "1769649"
  },
  {
    "text": "of you with jobs it's giving all of you a job and you want to verify that how do you know his public key you don't right",
    "start": "1769649",
    "end": "1779519"
  },
  {
    "text": "that's gonna be a hard problem and the same happens in an architecture you need to get hold of the proper the right key",
    "start": "1779519",
    "end": "1786049"
  },
  {
    "text": "one simple way would be for him to write to add is key to the wall of keys let's",
    "start": "1786049",
    "end": "1792539"
  },
  {
    "text": "say we have a wall of keys here and it gives it an identifier like my key is number 17 so now you can include a claim",
    "start": "1792539",
    "end": "1799350"
  },
  {
    "text": "in the header of your child called K ID the key identifier and in the case here it would be 17 allowing you to go to the",
    "start": "1799350",
    "end": "1807000"
  },
  {
    "text": "list of public keys 17 audacity key I need to use you can verify that child so",
    "start": "1807000",
    "end": "1812789"
  },
  {
    "text": "if you have a bunch of keys floating around in your organization you can go to your key vault and ask the key vault",
    "start": "1812789",
    "end": "1819120"
  },
  {
    "text": "like hey give me the public key with ID 17 and off you go or along a random UID which is a bit",
    "start": "1819120",
    "end": "1825149"
  },
  {
    "text": "harder to pronounce in a presentation but realistic as implementation all",
    "start": "1825149",
    "end": "1830610"
  },
  {
    "text": "right that's very nice if you have a centralized way to access keys doesn't work very well in distributed scenarios",
    "start": "1830610",
    "end": "1836940"
  },
  {
    "text": "let's say Google is issuing jobs and I need to verify them well just probably not gonna be a very easy way for me to",
    "start": "1836940",
    "end": "1843179"
  },
  {
    "text": "grab Google's public key in a reliable way which is why the spec has some other",
    "start": "1843179",
    "end": "1848639"
  },
  {
    "text": "mechanisms as well they have a GK you claim and a GK you allows the issuer to",
    "start": "1848639",
    "end": "1853950"
  },
  {
    "text": "embed a URL holding a set of public keys the represented in a JSON format which is",
    "start": "1853950",
    "end": "1859830"
  },
  {
    "text": "absolutely ugly for public keys but doesn't matter you never have to look at it as a human so we're all good",
    "start": "1859830",
    "end": "1866010"
  },
  {
    "text": "but essentially here's a JSON web key set a set of public keys I can fetch it",
    "start": "1866010",
    "end": "1872100"
  },
  {
    "text": "from there and then the key identifier is gonna say like Oh from that those keys just use the key with this ID and I",
    "start": "1872100",
    "end": "1877559"
  },
  {
    "text": "can now verify the signature and if Google decides to start using new keys tomorrow they just published a public",
    "start": "1877559",
    "end": "1883679"
  },
  {
    "text": "key on that endpoint change the key ID in the next issue jut and again my service can go there 50 keys verify the",
    "start": "1883679",
    "end": "1889770"
  },
  {
    "text": "signature and trust the data coming from Google all right if you don't like JSON",
    "start": "1889770",
    "end": "1896340"
  },
  {
    "text": "web Keys you can also do the same with certificates x.509 certificates there you would use the x5 you claim you give",
    "start": "1896340",
    "end": "1902940"
  },
  {
    "text": "it a URL pointing to a certificate and you can fetch that key information from there that's essentially how key",
    "start": "1902940",
    "end": "1908850"
  },
  {
    "text": "management works in a job world this is something that I've honestly never seen",
    "start": "1908850",
    "end": "1915090"
  },
  {
    "text": "implemented in a real world system people think about this then they don't do it but you need to implement key",
    "start": "1915090",
    "end": "1920940"
  },
  {
    "text": "management but you need to be careful with that because once you start doing that you'll end up with a scenario like",
    "start": "1920940",
    "end": "1926909"
  },
  {
    "text": "this somebody gives you a job it's signed by a private key so you need to verify that with a public key you can",
    "start": "1926909",
    "end": "1933240"
  },
  {
    "text": "find the key set to chase a file with keys on evil example.com like hmm your",
    "start": "1933240",
    "end": "1939360"
  },
  {
    "text": "application has been implemented because you listened to like half of this talk and not the other half so it's like oh yeah so the gku I'm gonna fetch your",
    "start": "1939360",
    "end": "1946110"
  },
  {
    "text": "skis I'm gonna find the key with this identifier like this K ID oh yeah I found it verify the signature oh it's",
    "start": "1946110",
    "end": "1951510"
  },
  {
    "text": "fellas awesome so your flip I'm gonna trust you and give you access to my",
    "start": "1951510",
    "end": "1956760"
  },
  {
    "text": "account this is not good the problem here is that you're using",
    "start": "1956760",
    "end": "1962100"
  },
  {
    "text": "information from a sign shot without the ability to verify the signature you're",
    "start": "1962100",
    "end": "1967110"
  },
  {
    "text": "relying on this header info but you don't know whether you can trust the job yet which is kind of a chicken and egg",
    "start": "1967110",
    "end": "1972179"
  },
  {
    "text": "problem which doesn't have a good solution",
    "start": "1972179",
    "end": "1977179"
  },
  {
    "text": "that's why specs that rely on this like open ID connect have an out-of-band",
    "start": "1977200",
    "end": "1983350"
  },
  {
    "text": "configuration channel if you choose to sign in with Google on a website in the",
    "start": "1983350",
    "end": "1989050"
  },
  {
    "text": "end that website is going to receive a JSON web token signed by Google saying who you are within the Google ecosystem",
    "start": "1989050",
    "end": "1995070"
  },
  {
    "text": "your account with an identifier and a name but the application is not gonna",
    "start": "1995070",
    "end": "2000120"
  },
  {
    "text": "dynamically fetch Google's keys no when you configure your application to allow log in with Google you tell it that you",
    "start": "2000120",
    "end": "2005760"
  },
  {
    "text": "want to log in with Google and the service or libraries are gonna go to this location dot well-known slash operating configuration at on accounts",
    "start": "2005760",
    "end": "2013440"
  },
  {
    "text": "on google.com on a fixed hard-coded domain and you're gonna go there and that is a JSON file with the Open ID",
    "start": "2013440",
    "end": "2020310"
  },
  {
    "text": "Connect configuration and it's gonna have a gt3 wks your I claim telling you",
    "start": "2020310",
    "end": "2025680"
  },
  {
    "text": "like oh the keys for Google or this identity provider I'm using 4 are 0 are",
    "start": "2025680",
    "end": "2030720"
  },
  {
    "text": "located in this specific location and you can fetch your skis before even",
    "start": "2030720",
    "end": "2035940"
  },
  {
    "text": "having received the first token an out-of-band configuration channel on a trusted location because your point",
    "start": "2035940",
    "end": "2041060"
  },
  {
    "text": "specifically your application to Google and that way you can sidestep this whole",
    "start": "2041060",
    "end": "2046400"
  },
  {
    "text": "thrusting the key thing I'm not saying this is the only way I'm saying this is a fairly straightforward way to sidestep",
    "start": "2046400",
    "end": "2053429"
  },
  {
    "text": "that whole trust issue something to definitely keep in mind in rural applications all right",
    "start": "2053429",
    "end": "2061520"
  },
  {
    "text": "enough about jobs now but I would say",
    "start": "2062410",
    "end": "2068679"
  },
  {
    "text": "it's gonna be better now no let's talk about cookies everybody loves cookies right no this is",
    "start": "2068680",
    "end": "2074950"
  },
  {
    "text": "a PHP era PHP session ID not hopefully not 42 but this meaningless identifier",
    "start": "2074950",
    "end": "2083200"
  },
  {
    "text": "it's long identifiers with some entropy in there but whatever you get the idea that's the old way of doing things",
    "start": "2083200",
    "end": "2088300"
  },
  {
    "text": "somebody that most people something that most people absolutely hate because cookies have a very very bad reputation",
    "start": "2088300",
    "end": "2096030"
  },
  {
    "text": "the modern way is using an authorization header so many applications today are",
    "start": "2096030",
    "end": "2101440"
  },
  {
    "text": "using the authorization header with bearer as a type of authorization value and then a token you can recognize the",
    "start": "2101440",
    "end": "2108400"
  },
  {
    "text": "EU IJ that's a base64 encoding of a JSON object to start at least so you know it's probably gonna eat Jason in this",
    "start": "2108400",
    "end": "2114730"
  },
  {
    "text": "case a child those are the two approaches and I often get asked like",
    "start": "2114730",
    "end": "2120370"
  },
  {
    "text": "what should we use cookies are tokens and I'm like that makes no sense because",
    "start": "2120370",
    "end": "2125440"
  },
  {
    "text": "a cookie is a mechanism to transport data from a client to the server and the",
    "start": "2125440",
    "end": "2131800"
  },
  {
    "text": "authorization header is the same thing but what you put in there is a string it's a text-based file you can put in",
    "start": "2131800",
    "end": "2137380"
  },
  {
    "text": "there whatever you want so why not put your job in a cookie or your identifier in an authorization header if you want",
    "start": "2137380",
    "end": "2144460"
  },
  {
    "text": "to switch it up and people always look skeptical with this light like what the hell is he talking about like nobody",
    "start": "2144460",
    "end": "2150430"
  },
  {
    "text": "does that well this is an identifier if you're using OAuth you have a concept called",
    "start": "2150430",
    "end": "2155560"
  },
  {
    "text": "a reference token which is an identifier to state kept by the authorization server on the server side it's called an",
    "start": "2155560",
    "end": "2162820"
  },
  {
    "text": "access token but it's just a random ID and if you're using OAuth you also have the jobs base tokens access tokens",
    "start": "2162820",
    "end": "2170890"
  },
  {
    "text": "that's called self-contained tokens but nobody tells you what to do with them the spec is even like once you have that",
    "start": "2170890",
    "end": "2176530"
  },
  {
    "text": "token how you contact the server with a token that's your business we don't care about that and there's actually pros and",
    "start": "2176530",
    "end": "2182530"
  },
  {
    "text": "cons to all of these let me show you a few highlights of things that always come up when I first asked you he who",
    "start": "2182530",
    "end": "2190630"
  },
  {
    "text": "hears using cookies Twitter ap is like nobody",
    "start": "2190630",
    "end": "2196210"
  },
  {
    "text": "maybe I should have asked a baseline first who is building api's like okay we're good it's like nobody raises their",
    "start": "2196210",
    "end": "2203290"
  },
  {
    "text": "hand then of course the other talks must have really been not interesting I would say but awesome",
    "start": "2203290",
    "end": "2209260"
  },
  {
    "text": "many people don't use cookies with your abs like no we don't do that but I've",
    "start": "2209260",
    "end": "2214510"
  },
  {
    "text": "seen a lot of systems that are hosting resources is at least in a web application hosting resources that",
    "start": "2214510",
    "end": "2220720"
  },
  {
    "text": "require authorization checks for example if you're loading images or documents or",
    "start": "2220720",
    "end": "2227140"
  },
  {
    "text": "whatever images with an image tag you might want to enforce some authorization if this is per customer or per project",
    "start": "2227140",
    "end": "2233650"
  },
  {
    "text": "or pre user you need to make authorization decisions before giving out that image if you don't do that by",
    "start": "2233650",
    "end": "2238960"
  },
  {
    "text": "the way you have an unsecure direct object reference problem stick skip back thirty minutes and look at that again",
    "start": "2238960",
    "end": "2245290"
  },
  {
    "text": "because that's exactly the problem you have there but guess what if you're loading an image tag in a web application the browser doesn't send",
    "start": "2245290",
    "end": "2250750"
  },
  {
    "text": "custom authorization headers with bear and your application cannot send that either and let them tell you unless you",
    "start": "2250750",
    "end": "2257020"
  },
  {
    "text": "do some really dirty workarounds guess what the browser does send when you add an image tag to a page cookies if you",
    "start": "2257020",
    "end": "2263740"
  },
  {
    "text": "have a cookie for that domain brass is gonna send that cookie along and I've seen a lot of people go towards the",
    "start": "2263740",
    "end": "2269349"
  },
  {
    "text": "header based approach like yeah we're gonna implement this authorization header in angular with an interceptor and it's awesome and then a couple of",
    "start": "2269349",
    "end": "2275560"
  },
  {
    "text": "months later or implementing resource loading or lazy loading for admin templates or whatever and they discover",
    "start": "2275560",
    "end": "2281560"
  },
  {
    "text": "that there's no information there and what they typically do is they come up with a hybrid mechanism like let's add a",
    "start": "2281560",
    "end": "2286780"
  },
  {
    "text": "cookie to the application for these cases with some authorization so I think about this upfront",
    "start": "2286780",
    "end": "2291820"
  },
  {
    "text": "same thing for web sockets opening a web socket you type well you write JavaScript code new web sockets",
    "start": "2291820",
    "end": "2297520"
  },
  {
    "text": "something-something no authorization header the difference cookies for that domain the browser will send cookies to",
    "start": "2297520",
    "end": "2304060"
  },
  {
    "text": "that back-end and that might be a very good way to implement authorization I fully agree that in a non web world",
    "start": "2304060",
    "end": "2310960"
  },
  {
    "text": "cookies have no place for building something that's not a web application absolutely get rid of cookies 100% but",
    "start": "2310960",
    "end": "2317560"
  },
  {
    "text": "if it's a web app think about this upfront think about the pros and cons I have a few have a nice overview slide",
    "start": "2317560",
    "end": "2323230"
  },
  {
    "text": "here of the pros and cons boats headers can contain string based values whatever",
    "start": "2323230",
    "end": "2328420"
  },
  {
    "text": "you want in that header key they remind cookies only work well with a single domain",
    "start": "2328420",
    "end": "2334260"
  },
  {
    "text": "that's how cookies work well the authorization header you can send it anywhere completing 10 api's on 10",
    "start": "2334260",
    "end": "2340290"
  },
  {
    "text": "different domains probably want to use authorization headers and not cookies cookies are handled automatically by the",
    "start": "2340290",
    "end": "2346440"
  },
  {
    "text": "browser which is very good and a bad thing but the authorization header requires you to write custom code which",
    "start": "2346440",
    "end": "2352050"
  },
  {
    "text": "might mean you introduced some vulnerabilities and then finally cookies are always present in a web world",
    "start": "2352050",
    "end": "2357630"
  },
  {
    "text": "cookies are added to dom resource loading to web circuits to cross-origin calls with xhr if you enable that while",
    "start": "2357630",
    "end": "2364830"
  },
  {
    "text": "the authorization header is only there when your application is in control of that request if you're sending it from",
    "start": "2364830",
    "end": "2370170"
  },
  {
    "text": "JavaScript sure you can add it otherwise you'll need either a very dirty work around with service workers which is not",
    "start": "2370170",
    "end": "2375900"
  },
  {
    "text": "recommended or there's no information there and that's the truth about this cookies in a work world are the only",
    "start": "2375900",
    "end": "2382260"
  },
  {
    "text": "thing that worked really well because the browser handles them automatically again when I talk about API executing",
    "start": "2382260",
    "end": "2389430"
  },
  {
    "text": "courses my disclaimer is I have no answers I only have options I can give you the options I can tell you what to",
    "start": "2389430",
    "end": "2395100"
  },
  {
    "text": "look for but the end the final decision is up to you you decide what's gonna work for your application and honestly",
    "start": "2395100",
    "end": "2401010"
  },
  {
    "text": "in this case both of them work quite well",
    "start": "2401010",
    "end": "2405890"
  },
  {
    "text": "that takes me straight to one of my pet peeves security if you're riding",
    "start": "2409320",
    "end": "2417400"
  },
  {
    "text": "something with an authorization header you are riding application code to make it happen you are writing code to take",
    "start": "2417400",
    "end": "2424300"
  },
  {
    "text": "something out of a response from the server stored somewhere in a browser and reattach it on outgoing requests and one",
    "start": "2424300",
    "end": "2430300"
  },
  {
    "text": "of the questions you will have is where do I store this thing where do I put it like in a browser would you store things",
    "start": "2430300",
    "end": "2437560"
  },
  {
    "text": "like there's local storage sessions stored in index DB and and so on and so on it's like in memory maybe who knows",
    "start": "2437560",
    "end": "2443860"
  },
  {
    "text": "it's a really really difficult problem and a lot of people struggle with that and you'll find advice online telling",
    "start": "2443860",
    "end": "2452080"
  },
  {
    "text": "you to be really careful because if you put in a look of storage your risk cross-site scripting attacks if the attacker injects some JavaScript in the",
    "start": "2452080",
    "end": "2458650"
  },
  {
    "text": "application they can read everything that's in local storage and ship it off somewhere else and if that thing was a token that's",
    "start": "2458650",
    "end": "2463870"
  },
  {
    "text": "held for eight hours the next 7 hours and 59 minutes are now gonna be very fun for the user whose token got stolen",
    "start": "2463870",
    "end": "2471030"
  },
  {
    "text": "which is a problem and some people have solutions like you know what we have",
    "start": "2471030",
    "end": "2476050"
  },
  {
    "text": "something called HTTP only cookies so we can put it in a cookie and then mark it HTP only minier javascript is not",
    "start": "2476050",
    "end": "2482740"
  },
  {
    "text": "allowed to read it and that takes away that danger right these are HTTP only",
    "start": "2482740",
    "end": "2490090"
  },
  {
    "text": "cookies depends on where you're standing where this is secure and not from the outside looks like",
    "start": "2490090",
    "end": "2495280"
  },
  {
    "text": "oh yeah the door's locked until somebody pushes that and off you go because the problem is not the fact that you hide a",
    "start": "2495280",
    "end": "2502030"
  },
  {
    "text": "value the problem is that you're running code from the attacker that's the real",
    "start": "2502030",
    "end": "2507100"
  },
  {
    "text": "threat cross-site scripting means game over and this is something that comes up over and over again people at this is a",
    "start": "2507100",
    "end": "2514300"
  },
  {
    "text": "tweet from me from last year I usually don't go looking for these things and calling people out but if they ask me",
    "start": "2514300",
    "end": "2520240"
  },
  {
    "text": "like can you look at my blog post and I have some time I'll do it but I'm gonna tell it like it is this is bad advice",
    "start": "2520240",
    "end": "2527130"
  },
  {
    "text": "because yes hiding this token from an attacker and cross-site scripting seems",
    "start": "2527130",
    "end": "2532900"
  },
  {
    "text": "to solve the problem but it's it only sidesteps it addresses one symptom and that's it you're still running code from",
    "start": "2532900",
    "end": "2539470"
  },
  {
    "text": "the attacker the attacker can still do whatever you want and need location they can change the UI if you're building a banking app they can",
    "start": "2539470",
    "end": "2544780"
  },
  {
    "text": "add transactions to the list of transactions to do and hide them in the interface users will not even know that",
    "start": "2544780",
    "end": "2550600"
  },
  {
    "text": "the transaction is there the attacker has already won so hiding one little",
    "start": "2550600",
    "end": "2556180"
  },
  {
    "text": "token yes it's gonna make it harder to attack your application that's true means that your eight-year-old script",
    "start": "2556180",
    "end": "2563200"
  },
  {
    "text": "kiddie that broke in it's not gonna be able to exploit that they'll be like oh there's nothing in the local search let's move on to the next one you got",
    "start": "2563200",
    "end": "2569200"
  },
  {
    "text": "away good there awesome but a real attacker a skilled attacker a pen tester is gonna be like okay let's let's see",
    "start": "2569200",
    "end": "2575350"
  },
  {
    "text": "what you're doing oh I can start making API calls I can do whatever I want she using oh I take an embed an iframe and",
    "start": "2575350",
    "end": "2580450"
  },
  {
    "text": "get a new access token that way before it's hidden away in memory or HT only",
    "start": "2580450",
    "end": "2585760"
  },
  {
    "text": "cookies or whatever it doesn't solve the problem so my advice is do not ever underestimate cross-site scripting and",
    "start": "2585760",
    "end": "2592000"
  },
  {
    "text": "instead of looking for like that the best place to put this little value in the browser spend that time learning how",
    "start": "2592000",
    "end": "2600640"
  },
  {
    "text": "to prevent cross-site scripting in your application much more useful because that's the real problem not the hiding",
    "start": "2600640",
    "end": "2607480"
  },
  {
    "text": "of this value who is building anger front ends awesome angular solves most",
    "start": "2607480",
    "end": "2612880"
  },
  {
    "text": "of cross-site scripting issues for you look on my website I have some advice on angular who's building react apps yeah",
    "start": "2612880",
    "end": "2619750"
  },
  {
    "text": "bad news for you guys we react it's not really good at preventing cross-site scripting so I",
    "start": "2619750",
    "end": "2624760"
  },
  {
    "text": "built a full full one page cheat sheet on how to do that correctly again go to my Twitter feed you'll find the cheat",
    "start": "2624760",
    "end": "2630460"
  },
  {
    "text": "sheet it's really available you can download it today and start using it on Monday at your job to look for",
    "start": "2630460",
    "end": "2636220"
  },
  {
    "text": "cross-site scripting in your reactives if you have questions I'll be around the rest of the day so you can harass me after my talk as well alright I was",
    "start": "2636220",
    "end": "2644710"
  },
  {
    "text": "still good shoot your API accept this input it's",
    "start": "2644710",
    "end": "2653020"
  },
  {
    "text": "like blah that is one unfortunate username probably not I don't know maybe",
    "start": "2653020",
    "end": "2661120"
  },
  {
    "text": "maybe not there's a one here so probably you actually want a numerical value so this is bad input and many people talked",
    "start": "2661120",
    "end": "2669250"
  },
  {
    "text": "about this in the first steps like input validation oh my god you need input validation I don't but I'm talking about",
    "start": "2669250",
    "end": "2676660"
  },
  {
    "text": "it now towards the end lack of input validation is absolutely a security",
    "start": "2676660",
    "end": "2682030"
  },
  {
    "text": "problem you need to have input validation input validation gets rid of",
    "start": "2682030",
    "end": "2687370"
  },
  {
    "text": "known malicious data if you get five megabytes of password data probably not",
    "start": "2687370",
    "end": "2693820"
  },
  {
    "text": "a real password just saying yes 25 characters 30 characters that's",
    "start": "2693820",
    "end": "2699460"
  },
  {
    "text": "acceptable so capital 100 everything larger than hub characters is striped DDoS your server by sending large",
    "start": "2699460",
    "end": "2705670"
  },
  {
    "text": "passwords reject that however input validation will never be",
    "start": "2705670",
    "end": "2711940"
  },
  {
    "text": "your full defense to the API accept this data as input no some people say no some",
    "start": "2711940",
    "end": "2722230"
  },
  {
    "text": "people are like huh that's interesting well it depends if you didn't accept the",
    "start": "2722230",
    "end": "2728020"
  },
  {
    "text": "first one because it was sequel injection and you shouldn't accept this one either because it's sequel injection",
    "start": "2728020",
    "end": "2733230"
  },
  {
    "text": "however if you're relying on input validation you're gonna have a bad time first of all this is a valid email",
    "start": "2733230",
    "end": "2739420"
  },
  {
    "text": "address so if you input validate this with an RFC email address validate the validation library it's gonna be like",
    "start": "2739420",
    "end": "2745390"
  },
  {
    "text": "yeah totally valid if it causes sequel injection problems you have bigger problems in your API because input",
    "start": "2745390",
    "end": "2751480"
  },
  {
    "text": "validation is never going to be your only or primary defense input validation can never stop things like sequel",
    "start": "2751480",
    "end": "2757810"
  },
  {
    "text": "injection command injection cross-site scripting it can only get rid of known bad data to keep the crazy out that's",
    "start": "2757810",
    "end": "2765160"
  },
  {
    "text": "why we have these guys at our front door checking your badge when you come in input validation if your badge is",
    "start": "2765160",
    "end": "2771670"
  },
  {
    "text": "missing they're being like oh you're not allowed in here and of course everybody with a pic the camera and a scanner or a printer can",
    "start": "2771670",
    "end": "2777460"
  },
  {
    "text": "actually create a badge it looks good enough to get in anyway we have no other security here because",
    "start": "2777460",
    "end": "2783770"
  },
  {
    "text": "everyone should learn about secure development but input validation will never save your butt for security it's",
    "start": "2783770",
    "end": "2790580"
  },
  {
    "text": "good as a first line of defense but never as the only defense keep that in mind you should have it but it will",
    "start": "2790580",
    "end": "2797330"
  },
  {
    "text": "never save you from the actual attack that's why we have parameterization for sequel queries where we have output",
    "start": "2797330",
    "end": "2802670"
  },
  {
    "text": "encoding or sanitization for cross-site scripting escaping for command injection and so on the real Defense's happen at output I'm",
    "start": "2802670",
    "end": "2809870"
  },
  {
    "text": "not an input time very very important consideration all right final takeaway",
    "start": "2809870",
    "end": "2819670"
  },
  {
    "text": "what happens when chocolate ice cream goes wrong now none of my kids think",
    "start": "2819670",
    "end": "2825590"
  },
  {
    "text": "this is ice cream so apparently it was supposed to be ice cream but that failed miserably not sure whether a different",
    "start": "2825590",
    "end": "2833540"
  },
  {
    "text": "color would have helped them with it just any way things go wrong there's",
    "start": "2833540",
    "end": "2839800"
  },
  {
    "text": "well hopefully you'll never have an issue but in reality you're likely going",
    "start": "2839800",
    "end": "2844970"
  },
  {
    "text": "to have a security issue at a certain point in time it's gonna happen so the best thing you can do is think about",
    "start": "2844970",
    "end": "2851210"
  },
  {
    "text": "this upfront like what if something goes wrong and one of the best defenses that you can use is compartmentalization",
    "start": "2851210",
    "end": "2858290"
  },
  {
    "text": "split things up into smaller components if you're building an API that serves a",
    "start": "2858290",
    "end": "2865250"
  },
  {
    "text": "public part of an application and an authenticated part and an admin part that should not be one API that should",
    "start": "2865250",
    "end": "2870440"
  },
  {
    "text": "be three separate api's preferably running on three separate subdomains or domains or whatever because that helps",
    "start": "2870440",
    "end": "2877970"
  },
  {
    "text": "you compartmentalize that means if something goes wrong in a public part of the application it's gonna be separated from the other parts it means you'll be",
    "start": "2877970",
    "end": "2884360"
  },
  {
    "text": "able to detect cross application or cross trust boundary communication and reject those requests immediately and",
    "start": "2884360",
    "end": "2891590"
  },
  {
    "text": "this is something that holds for both back-end systems and front-end systems and so on always try to think about",
    "start": "2891590",
    "end": "2899000"
  },
  {
    "text": "these things and reduce the impact and you can today you can build very seamless user experience even with",
    "start": "2899000",
    "end": "2906200"
  },
  {
    "text": "multiple compartmentalized applications working as one big application so always keep that in mind because this is the",
    "start": "2906200",
    "end": "2913220"
  },
  {
    "text": "thing that's gonna save your butt one Oh a vulnerability in our front page which is public without authentication",
    "start": "2913220",
    "end": "2918680"
  },
  {
    "text": "whoops let's fix that but if you compartmentalize that from the other indicated part attenti gated users will",
    "start": "2918680",
    "end": "2924620"
  },
  {
    "text": "not suffer from that vulnerability or suffer less and that is going to be really really important question",
    "start": "2924620",
    "end": "2930040"
  },
  {
    "text": "everything don't just do something because you wrote one blog post it says that's how you supposed to do things",
    "start": "2930040",
    "end": "2936110"
  },
  {
    "text": "question what I'm saying ask me those questions and I'll try to argue with you on why I'm right usually I am sometimes",
    "start": "2936110",
    "end": "2943730"
  },
  {
    "text": "I'm not but that's why I only talk about security not about other things but seriously question these things healthy",
    "start": "2943730",
    "end": "2950810"
  },
  {
    "text": "debate is useful because you need to understand the different viewpoints and the nuances to be able to make accurate",
    "start": "2950810",
    "end": "2956360"
  },
  {
    "text": "security decisions in your applications alright thank you very much for",
    "start": "2956360",
    "end": "2961370"
  },
  {
    "text": "listening grab the slides and the sheet cheese from Twitter and ask any questions you want to right now or the rest of the day",
    "start": "2961370",
    "end": "2968840"
  },
  {
    "text": "at the conference thanks for being here",
    "start": "2968840",
    "end": "2972430"
  }
]