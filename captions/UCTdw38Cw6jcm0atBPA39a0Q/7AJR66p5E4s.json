[
  {
    "text": "we're ready right yes so hi I'm Robert",
    "start": "3990",
    "end": "9040"
  },
  {
    "text": "Verdi I'm going to talk a bit about the basic a line system house looks inside",
    "start": "9040",
    "end": "14219"
  },
  {
    "text": "some of the a bit of history showing he took try and explain why it looks like",
    "start": "14219",
    "end": "19330"
  },
  {
    "text": "it does as well yeah I come well I",
    "start": "19330",
    "end": "24670"
  },
  {
    "text": "originally was part of the the corralling team so we were three of us was John strong Mike Williams and myself",
    "start": "24670",
    "end": "30520"
  },
  {
    "text": "who the basic designers of the original language more people came in later of course currently I work for our Lang",
    "start": "30520",
    "end": "36909"
  },
  {
    "text": "solutions and we do consulting training support in and around our lang and",
    "start": "36909",
    "end": "42850"
  },
  {
    "text": "Alexia systems and we have officers a",
    "start": "42850",
    "end": "48190"
  },
  {
    "text": "bit everywhere so yeah this is the outline will end up in the somewhere in",
    "start": "48190",
    "end": "53829"
  },
  {
    "text": "the middle trying to explain what the what the ecosystem means and how we view it and how can be extended with things",
    "start": "53829",
    "end": "59829"
  },
  {
    "text": "like this and we build time we have some examples showing some ideas as if this",
    "start": "59829",
    "end": "66940"
  },
  {
    "text": "work tell me yes right okay not much here so there are a couple of points I",
    "start": "66940",
    "end": "72039"
  },
  {
    "text": "want to make which if you go out you'll sometimes see these taken up and",
    "start": "72039",
    "end": "78130"
  },
  {
    "text": "mentioned so yes our line was developed by Ericsson so when we were developing",
    "start": "78130",
    "end": "83229"
  },
  {
    "text": "we were working for Ericsson however no it is not a telecom language a lot of",
    "start": "83229",
    "end": "90670"
  },
  {
    "text": "times you'll read people saying is uninteresting versus telecom language it's not a telecom language and I like",
    "start": "90670",
    "end": "95770"
  },
  {
    "text": "to try and explain why it isn't and what and what what it is right so a little",
    "start": "95770",
    "end": "101560"
  },
  {
    "text": "bit of history trying to just describe it there's a reason for the way it looks",
    "start": "101560",
    "end": "106780"
  },
  {
    "text": "like it does and originally we're now talking in the 80s Ericsson had the",
    "start": "106780",
    "end": "113979"
  },
  {
    "text": "product called the ax e was a telephone exchange switches and was a very successful product but it required quite",
    "start": "113979",
    "end": "121450"
  },
  {
    "text": "a lot of work to develop and maintain the software and I was working in a computer lab at that time that Ericsson",
    "start": "121450",
    "end": "127689"
  },
  {
    "text": "had and one of the things we're trying to look at is how we could improve the system making it easier to program and",
    "start": "127689",
    "end": "134140"
  },
  {
    "text": "maintain it that was what we're looking at other things as well but this is one of the things we're looking at but the important thing was",
    "start": "134140",
    "end": "140830"
  },
  {
    "text": "had to have the same characteristics okay I don't think they intended us to",
    "start": "140830",
    "end": "148299"
  },
  {
    "text": "make a new language but that's where we ended up so what we found out here is that if you look at this problem the",
    "start": "148299",
    "end": "156099"
  },
  {
    "text": "problem domain we were looking at the telecoms part was not difficult I mean controlling the switch someone",
    "start": "156099",
    "end": "162310"
  },
  {
    "text": "had already written that we didn't have to worry about controlling the switch and getting information from the switch he send a command to the switch and it",
    "start": "162310",
    "end": "168370"
  },
  {
    "text": "does it you connect people together it send another command as phones start ringing all that work had been done for us that was that was that the problem",
    "start": "168370",
    "end": "176400"
  },
  {
    "text": "the same thing getting information from the switch that was quite easy to fix so we get into that information into the",
    "start": "176400",
    "end": "182049"
  },
  {
    "text": "system so what was the problem and the these are some of the main issues once",
    "start": "182049",
    "end": "188560"
  },
  {
    "text": "we're tackling was that you had to be able to handle a lot of concurrent activities going on so in those days a",
    "start": "188560",
    "end": "195819"
  },
  {
    "text": "big switch might have a few hundred thousand lines coming in you might have tens of thousands of calls going on at",
    "start": "195819",
    "end": "201340"
  },
  {
    "text": "the same time plus all the things that switch is doing and you have to be able to handle all these at the same time",
    "start": "201340",
    "end": "206970"
  },
  {
    "text": "there are timing constraints things have to happen at a certain time or within a",
    "start": "206970",
    "end": "212260"
  },
  {
    "text": "certain time and that means the system can never block whatever happens if",
    "start": "212260",
    "end": "218709"
  },
  {
    "text": "something is something supposed to happen a specific time it must happen at that time whatever the system is doing it cannot block you need distribution if",
    "start": "218709",
    "end": "228849"
  },
  {
    "text": "you want to build a fault extremely a seriously fault-tolerant system you need multiple machines if we",
    "start": "228849",
    "end": "235030"
  },
  {
    "text": "need some form as helpful distribution another feature here is that it has to",
    "start": "235030",
    "end": "240699"
  },
  {
    "text": "be in continuous operation over many years this was talking back in those days to switch to start the switch off",
    "start": "240699",
    "end": "246940"
  },
  {
    "text": "it it's supposed to run for years right even if you're doing software maintenance so if you're doing upgrading",
    "start": "246940",
    "end": "253930"
  },
  {
    "text": "the system the switch must not go down while you're doing this for and there",
    "start": "253930",
    "end": "259030"
  },
  {
    "text": "are strict requirements for fault tolerance so when things go wrong in hardware or you get some programming",
    "start": "259030",
    "end": "265240"
  },
  {
    "text": "errors the switch must not go down yes you could lose a few calls but the",
    "start": "265240",
    "end": "270610"
  },
  {
    "text": "switch is must never go down and the interesting thing is if you look at these none of",
    "start": "270610",
    "end": "276520"
  },
  {
    "text": "these have anything telecom specific this describes the problem we were",
    "start": "276520",
    "end": "282040"
  },
  {
    "text": "trying to solve and it's not it wasn't a telecom problem is that you took us a",
    "start": "282040",
    "end": "289120"
  },
  {
    "text": "while to realize that this wasn't just telecoms I can still say the first time I heard someone written a web server an",
    "start": "289120",
    "end": "295180"
  },
  {
    "text": "hour long I thought why would anyone want to write a web server an hour long right and if you go back and reflect on",
    "start": "295180",
    "end": "300190"
  },
  {
    "text": "it you can say that's a very good choice just what was more powerful so yeah so",
    "start": "300190",
    "end": "306940"
  },
  {
    "text": "the ally in the system around it was designed to solve this type of problem and there's direct support an hour-long",
    "start": "306940",
    "end": "313570"
  },
  {
    "text": "an OTP for supporting these issues that's what it's all about it's concurrent fault-tolerant scalable",
    "start": "313570",
    "end": "320650"
  },
  {
    "text": "systems basically some more reflections",
    "start": "320650",
    "end": "325750"
  },
  {
    "text": "here we weren't out to make a functional language it became functional along the way because we thought this we felt as we're",
    "start": "325750",
    "end": "332500"
  },
  {
    "text": "going this was a very good choice for it we weren't out to implement the actor model we read later in papers saying",
    "start": "332500",
    "end": "339100"
  },
  {
    "text": "Elling implemented the actor model we had never heard of the actor model we just arrived at this type of idea as",
    "start": "339100",
    "end": "345700"
  },
  {
    "text": "very suitable for what we wanted it to do right so yeah we were trying to solve the problem the whole development of the",
    "start": "345700",
    "end": "352840"
  },
  {
    "text": "Erlang language and the system around it was very problem oriented we had a problem solve it this meant development",
    "start": "352840",
    "end": "362650"
  },
  {
    "text": "the language system was very focused we had a clear set of criteria for the",
    "start": "362650",
    "end": "367690"
  },
  {
    "text": "language and the system should do the six points I mentioned there if we could not do that it wasn't interesting no",
    "start": "367690",
    "end": "374740"
  },
  {
    "text": "matter how fantastic it was we just had to solve that problem and that meant the",
    "start": "374740",
    "end": "380349"
  },
  {
    "text": "language in the system evolved to solve this problem so we were very fortunate we had a user group who'd come back from",
    "start": "380349",
    "end": "387490"
  },
  {
    "text": "they were from the system side and they can come back with comments on our ideas and how on the language and how the",
    "start": "387490",
    "end": "393520"
  },
  {
    "text": "language should be used they could come back and say this was a good idea this didn't work or whatever and sometimes we",
    "start": "393520",
    "end": "399820"
  },
  {
    "text": "just made wrong suggestion choices so where do we end up",
    "start": "399820",
    "end": "404840"
  },
  {
    "text": "like wait concurrency concurrency is very fundamental property must be able",
    "start": "404840",
    "end": "409880"
  },
  {
    "text": "to handle a lot of processes there must be cheap in every way asynchronous",
    "start": "409880",
    "end": "415310"
  },
  {
    "text": "communication if you have time at the end I'll show you the way should not have synchronous communication in parallel systems it",
    "start": "415310",
    "end": "421669"
  },
  {
    "text": "takes about three minutes process isolation and the error handling so when",
    "start": "421669",
    "end": "427220"
  },
  {
    "text": "something goes wrong in a process crashes it should be isolated you shouldn't ruin things for other processes we need support for error",
    "start": "427220",
    "end": "433880"
  },
  {
    "text": "handling for making error handling systems so we've felt that things like in currency and error handling were so",
    "start": "433880",
    "end": "439220"
  },
  {
    "text": "fundamental to the problem this is not something you put in afterwards as a library this is something you build into the base system the primitives for",
    "start": "439220",
    "end": "446050"
  },
  {
    "text": "continuous evolution the system we need to be able to upgrade the system while it's running load code in running",
    "start": "446050",
    "end": "451550"
  },
  {
    "text": "systems and not crash the system while you're doing it and it's soft real-time so we had these timing constraints if",
    "start": "451550",
    "end": "458870"
  },
  {
    "text": "you sometimes miss one it wasn't too bad it wasn't hard real time real real time",
    "start": "458870",
    "end": "465470"
  },
  {
    "text": "people say it's not real time but we call it soft real time but it means the system must never block ok you can't sit",
    "start": "465470",
    "end": "472970"
  },
  {
    "text": "and wait for 5 or 10 seconds while it's garbage collecting that's just not allowed a few other things we wanted a",
    "start": "472970",
    "end": "480140"
  },
  {
    "text": "higher level language okay this was late 80s so things weren't that high at that time",
    "start": "480140",
    "end": "485650"
  },
  {
    "text": "yeah like compared to the Lillet systems there was we wanted the language and the",
    "start": "485650",
    "end": "491270"
  },
  {
    "text": "system to be simple simple in the sense that you have a basic simple number of",
    "start": "491270",
    "end": "496729"
  },
  {
    "text": "base small number basic principles and on top of that you can build anything you want ok that is difficult time small",
    "start": "496729",
    "end": "505520"
  },
  {
    "text": "is good in this case and I know that see if I get the right here some victors have some very nice quotes about this",
    "start": "505520",
    "end": "511659"
  },
  {
    "text": "and he says simplicity is a great virtue that requires hard work to achieve it in education to appreciate it and to make",
    "start": "511659",
    "end": "518750"
  },
  {
    "text": "matters worse complex yourselves better and it's quite true there it is",
    "start": "518750",
    "end": "523880"
  },
  {
    "text": "difficult to make a simple system you get the right basics it's very easy to make a complex system you need something",
    "start": "523880",
    "end": "529910"
  },
  {
    "text": "you just chuck it in enough while your system grows in complexity get the basic stuff right is difficult",
    "start": "529910",
    "end": "535470"
  },
  {
    "text": "we also found provide tools not solutions we tried to provide solutions",
    "start": "535470",
    "end": "542610"
  },
  {
    "text": "but we usually got them wrong and then they come back and so know that we can't use this anyway so the basic idea is",
    "start": "542610",
    "end": "548100"
  },
  {
    "text": "provide tools and then lift the users build the solutions they need so yeah",
    "start": "548100",
    "end": "554580"
  },
  {
    "text": "that that's that's actually not me playing that's me working all right so this was in 91 there was a trade show",
    "start": "554580",
    "end": "561060"
  },
  {
    "text": "and we're going to demo Erlang and we wanted something to try and attract people to it and we had a small switch",
    "start": "561060",
    "end": "567570"
  },
  {
    "text": "in the lab so all our experiments were actually done against telecom systems that is the switch and we felt that",
    "start": "567570",
    "end": "574050"
  },
  {
    "text": "showing that at the conference will not attract anyone there are no blinking lights or anything so we thought ok",
    "start": "574050",
    "end": "579270"
  },
  {
    "text": "would make a train set and we'll have the train set control piling and which we did this is me sitting experimenting",
    "start": "579270",
    "end": "585800"
  },
  {
    "text": "all the freely admit I went slightly overboard here because we ended up with automatic train control system so accept",
    "start": "585800",
    "end": "591630"
  },
  {
    "text": "racks multiple trains running good books the track through the strange system and everything and work and they wouldn't",
    "start": "591630",
    "end": "596790"
  },
  {
    "text": "crash or collide or anything like this and it was fault tolerant as well - of course so yeah that's work so where we end up",
    "start": "596790",
    "end": "606090"
  },
  {
    "text": "with the language the sequential language it's a simple functional language it has a slightly different syntax but most functional languages",
    "start": "606090",
    "end": "613290"
  },
  {
    "text": "have a different syntax it's got your typical language functional features it's immutable data immutable variables",
    "start": "613290",
    "end": "619650"
  },
  {
    "text": "extensive use of pattern matching recursion rules these are just your standard functional stuff it's",
    "start": "619650",
    "end": "625920"
  },
  {
    "text": "dynamically typed and there are no user defined data types I can discuss afterwards widened there I",
    "start": "625920",
    "end": "631380"
  },
  {
    "text": "use it for that so for the sequential language is a pretty standard functional language there's nothing strange about",
    "start": "631380",
    "end": "637350"
  },
  {
    "text": "it really then you get into the the concurrency side for it we want a",
    "start": "637350",
    "end": "642780"
  },
  {
    "text": "lightweight isolated processes literally millions of processes you can do that in",
    "start": "642780",
    "end": "648030"
  },
  {
    "text": "the Erlang system asynchronous message passing that is the only safe way if you",
    "start": "648030",
    "end": "653070"
  },
  {
    "text": "want complete we're going to guaranty non-blocking systems if you put synchronous communication there eventually you're screwed",
    "start": "653070",
    "end": "661050"
  },
  {
    "text": "they'll be very cheap we have a selective receive mechanism which allows you to say which messages are interested",
    "start": "661050",
    "end": "666630"
  },
  {
    "text": "in receiving now and just leave all the other ones for later and we don't do global data so",
    "start": "666630",
    "end": "676260"
  },
  {
    "text": "that's the concurrency that's the basic premises of the concurrency now for error handling the basic thing is errors",
    "start": "676260",
    "end": "682380"
  },
  {
    "text": "will always occur get over and build a system that can handle it and what we",
    "start": "682380",
    "end": "688830"
  },
  {
    "text": "want to do in the basic goals here is the system must never go down so yes you might get errors going in the system but",
    "start": "688830",
    "end": "695610"
  },
  {
    "text": "the system must be able to detect those errors recover and keep on going it should never crash right but we want",
    "start": "695610",
    "end": "702690"
  },
  {
    "text": "to avoid writing error checking code everywhere if you've ever done this you'll thought you'll know what a pain it is now easily is to get it wrong",
    "start": "702690",
    "end": "709110"
  },
  {
    "text": "right so we just want to let this let it crash right so something goes wrong in a",
    "start": "709110",
    "end": "714540"
  },
  {
    "text": "process let that process crash someone else will detect it and know what to do when that process does clean up after to",
    "start": "714540",
    "end": "720930"
  },
  {
    "text": "restart it which means that it's it's very seldom you actually write error handling code anywhere we can avoid",
    "start": "720930",
    "end": "728310"
  },
  {
    "text": "there are some cases you need to do it but most of the case you can just program as if everything worked when it",
    "start": "728310",
    "end": "733860"
  },
  {
    "text": "crashes someone else will clean up after you it's like having enormous cleanup team around you all the time right and",
    "start": "733860",
    "end": "741350"
  },
  {
    "text": "so what you need to build robust systems will at least two things you need you",
    "start": "741350",
    "end": "747570"
  },
  {
    "text": "need to ensure that something that necessary functionality is always available if some pilot system you have",
    "start": "747570",
    "end": "754320"
  },
  {
    "text": "to have to be whether it works if it's not their system is not up and you need to clean up when things go wrong and",
    "start": "754320",
    "end": "761480"
  },
  {
    "text": "well you also need much least two machines if you want to really fault tolerance for Muni distribution for so",
    "start": "761480",
    "end": "768090"
  },
  {
    "text": "the first thing with the necessary functionality is that's what we call supervision trees that's that's the method we use to do that in that you",
    "start": "768090",
    "end": "774780"
  },
  {
    "text": "have some processes which are supervisors and their job is to monitor other processes in this we have a",
    "start": "774780",
    "end": "781770"
  },
  {
    "text": "supervision tree here and we have this supervisor monitoring this supervisor and that process that worker process and",
    "start": "781770",
    "end": "788520"
  },
  {
    "text": "this supervisor monitoring those workers and if a worker dies the supervisor knows what to do its main job is to",
    "start": "788520",
    "end": "795990"
  },
  {
    "text": "restart things so this is how weakening we can ensure that necessary functionality is always there",
    "start": "795990",
    "end": "802560"
  },
  {
    "text": "if some critical server process dies it will have a supervisor that restarts a weekend thing and can continue right",
    "start": "802560",
    "end": "808999"
  },
  {
    "text": "that's all the supervisors do the other thing of course is cleaning up we have",
    "start": "808999",
    "end": "816480"
  },
  {
    "text": "we need to be able to monitor processes and when they die clean up after them free resources or whatever it might be",
    "start": "816480",
    "end": "821850"
  },
  {
    "text": "for and also we can have groups of cowork co-worker processes they are",
    "start": "821850",
    "end": "827160"
  },
  {
    "text": "linked together and if one dies they will die basic rationale is they should",
    "start": "827160",
    "end": "833009"
  },
  {
    "text": "either all work will not want or they all die for and the basic error handling mechanisms do this for they use for",
    "start": "833009",
    "end": "842100"
  },
  {
    "text": "building this that they're not part of the base system but they're the basic tools for building these type of",
    "start": "842100",
    "end": "847199"
  },
  {
    "text": "functionality on top of the system so you get it that leads us upwards so we",
    "start": "847199",
    "end": "853230"
  },
  {
    "text": "have the language here and when we're developing the language we had ideas about how we should use the features in the language and we had the the the",
    "start": "853230",
    "end": "861449"
  },
  {
    "text": "requirements we had to push down into the features so the features of the language and how they we use a very very",
    "start": "861449",
    "end": "866699"
  },
  {
    "text": "work mesh together okay so we have the concept safe for links and using a links",
    "start": "866699",
    "end": "874110"
  },
  {
    "text": "or supervisor could detect if it's if a child process has died and restarted or you could have a serve which could",
    "start": "874110",
    "end": "879629"
  },
  {
    "text": "monitor a processor using resources from it and when they die clean up afterwards using the same mechanisms for doing this",
    "start": "879629",
    "end": "886069"
  },
  {
    "text": "and OTP it's a set of design patterns",
    "start": "886069",
    "end": "891680"
  },
  {
    "text": "for building concurrent fault tolerant systems yes there is a telecom whoops",
    "start": "891680",
    "end": "898019"
  },
  {
    "text": "one one sorry there is a telecom in the word here but it's not a telecom",
    "start": "898019",
    "end": "904259"
  },
  {
    "text": "specific anyway if you look what's actually there there's nothing telecom specific in it the closest is an ASN dot",
    "start": "904259",
    "end": "911160"
  },
  {
    "text": "one compiler for interfaces that's about it right but it's all based on the",
    "start": "911160",
    "end": "916290"
  },
  {
    "text": "original system ideas we had these ideas and monitoring things for for restarting for cleaning up and stuff like this for",
    "start": "916290",
    "end": "922230"
  },
  {
    "text": "it this is something called there's a concept called generic behavior which implements these design patterns and",
    "start": "922230",
    "end": "928399"
  },
  {
    "text": "there's also support for adding new behaviors it's it's not a closed box where you have this wealth of five basic",
    "start": "928399",
    "end": "935129"
  },
  {
    "text": "behaviors when you start you can add new behaviors if you want them as well - and there's a set of",
    "start": "935129",
    "end": "940509"
  },
  {
    "text": "rules for building behaviors and you follow those rules they'll just fit in it's quite simple actually it also contains a large number of libraries and",
    "start": "940509",
    "end": "947410"
  },
  {
    "text": "support tools for building systems and we what we call releases it's actually",
    "start": "947410",
    "end": "953230"
  },
  {
    "text": "quite simple once you get into it to be honest yeah there is nothing about",
    "start": "953230",
    "end": "958540"
  },
  {
    "text": "telecom and OTP it's a very politically politically correct name from coming from a telecom company versus the same",
    "start": "958540",
    "end": "965350"
  },
  {
    "text": "thing and saying our legs not a telecom language this is not a telecom system and what you happen to find is that",
    "start": "965350",
    "end": "972309"
  },
  {
    "text": "systems built with our line tend to be very operating system like in their",
    "start": "972309",
    "end": "977800"
  },
  {
    "text": "field they provide services for what you want to do here and there is very seldom",
    "start": "977800",
    "end": "984879"
  },
  {
    "text": "any central thread of execution in these systems again think an operating system",
    "start": "984879",
    "end": "990339"
  },
  {
    "text": "I'm doing lots of different stuff for an operating system if I want a new browser I just pop one up and I just run it and",
    "start": "990339",
    "end": "995889"
  },
  {
    "text": "keep on going I can take it down I can start up new functionality and things like this it's very much the same thing",
    "start": "995889",
    "end": "1002339"
  },
  {
    "text": "in airline systems the closest you can get having any central form of execution central theory of execution is something",
    "start": "1002339",
    "end": "1008790"
  },
  {
    "text": "which starts tasks right so if you're",
    "start": "1008790",
    "end": "1013889"
  },
  {
    "text": "talking telecoms there will be a set of processes there and every time a calls made it will start a number of processes",
    "start": "1013889",
    "end": "1019139"
  },
  {
    "text": "for starting that call and those process just go when keep executing when the call goes the process of got go away if",
    "start": "1019139",
    "end": "1026280"
  },
  {
    "text": "you're thinking servers typically for example you have a server running every time a new connection comes up one part",
    "start": "1026280",
    "end": "1032668"
  },
  {
    "text": "start a few processes handling that connection and that's all it does then then those processes handle the",
    "start": "1032669",
    "end": "1038250"
  },
  {
    "text": "connection and when the connection goes down there go away it's very seldom a central thread of execution I tend to",
    "start": "1038250",
    "end": "1045720"
  },
  {
    "text": "think of it not so much as a language with concurrency but more a system with a language for building it's for",
    "start": "1045720",
    "end": "1050940"
  },
  {
    "text": "building the systems what we're really all about here so that's looking from the language upwards we now we can also",
    "start": "1050940",
    "end": "1058590"
  },
  {
    "text": "go downwards here and ask the question what is the beam well that's very simple",
    "start": "1058590",
    "end": "1064470"
  },
  {
    "text": "it's a virtual machine to run a line that says everything and it says nothing",
    "start": "1064470",
    "end": "1069910"
  },
  {
    "text": "what does all this mean one the beam is actually stands for bog dance our line",
    "start": "1069910",
    "end": "1075550"
  },
  {
    "text": "abstract machine and bog done Houseman he was a guy working with in the lab the",
    "start": "1075550",
    "end": "1080620"
  },
  {
    "text": "early 90s and he started doing well the second virtual machine actually the first one was called a gem which was",
    "start": "1080620",
    "end": "1086380"
  },
  {
    "text": "Joe's abstract machine and this beam has now been modified and updated er for",
    "start": "1086380",
    "end": "1091780"
  },
  {
    "text": "about 25 years there's probably not much of the original code there but still called the beam B the B actually stand",
    "start": "1091780",
    "end": "1099250"
  },
  {
    "text": "for Buren alpha B on Gustav's on took over mostly internal work for so what's",
    "start": "1099250",
    "end": "1104260"
  },
  {
    "text": "in what is this what's a virtual machine to run a line and yeah well this looks",
    "start": "1104260",
    "end": "1111370"
  },
  {
    "text": "very familiar doesn't it so all the properties in the language there's direct support for all these in the in",
    "start": "1111370",
    "end": "1118030"
  },
  {
    "text": "the beam so its support for handling lightweight massive concurrency and yes",
    "start": "1118030",
    "end": "1123850"
  },
  {
    "text": "I can say massive in this case I mean having millions of processes is actually",
    "start": "1123850",
    "end": "1128940"
  },
  {
    "text": "perfectly feasible to do it there are systems that do it as well to I mean real live runtime systems that do it",
    "start": "1128940",
    "end": "1135990"
  },
  {
    "text": "it's based asynchronous communication if you wanted a synchronous communication you send one message and that's it and",
    "start": "1135990",
    "end": "1143080"
  },
  {
    "text": "the person you're requesting sends back a reply and is didn't wait for it this process Oaks a lot isolation built into",
    "start": "1143080",
    "end": "1149530"
  },
  {
    "text": "the system so if one a long process crashes the others won't be affected there is support for the error handling",
    "start": "1149530",
    "end": "1155320"
  },
  {
    "text": "the error handling primitives are directly supported in the virtual machine their support for the continued",
    "start": "1155320",
    "end": "1161490"
  },
  {
    "text": "evolution of the system there are primitives for handling and reloading code in the system while the system is",
    "start": "1161490",
    "end": "1167290"
  },
  {
    "text": "running it also means I can reload any module wireless system is running and",
    "start": "1167290",
    "end": "1172480"
  },
  {
    "text": "that will never crash the system the only of that module is in use I can reload it the worst thing that can",
    "start": "1172480",
    "end": "1178630"
  },
  {
    "text": "happen some Erlang processes might die but the Aling system as a whole will never go down because of that",
    "start": "1178630",
    "end": "1184500"
  },
  {
    "text": "so it's just something I don't have to worry about at that point there's soft",
    "start": "1184500",
    "end": "1190720"
  },
  {
    "text": "real-time there so the real-time hand the time handling all the support for that is in the virtual machine itself",
    "start": "1190720",
    "end": "1196650"
  },
  {
    "text": "but there's so the connection between the beam and our line is very close right it's it's a very much",
    "start": "1196650",
    "end": "1202960"
  },
  {
    "text": "a virtual machine for running Ally its non-blocking it's blocking the system is",
    "start": "1202960",
    "end": "1210070"
  },
  {
    "text": "something I never have to worry about I can send off a request to someone or say no external system say the database",
    "start": "1210070",
    "end": "1217570"
  },
  {
    "text": "and just sit and wait there for seconds and the system won't it never block like",
    "start": "1217570",
    "end": "1223330"
  },
  {
    "text": "it is practically impossible to block the system again think an operating system for a lot of loading might slow",
    "start": "1223330",
    "end": "1230620"
  },
  {
    "text": "it down but not blocking it for example is a pre-emptive scheduler so even if",
    "start": "1230620",
    "end": "1236440"
  },
  {
    "text": "you have one process that's running continually executing it will be reschedule all the time the system just",
    "start": "1236440",
    "end": "1242140"
  },
  {
    "text": "does not block it's got transparent SMP multi-core support so quite happily when",
    "start": "1242140",
    "end": "1249700"
  },
  {
    "text": "you start up barreling and will grab every core confined it will use them all and will load balanced automatically across them that this is something I",
    "start": "1249700",
    "end": "1256539"
  },
  {
    "text": "just don't have to think about I have control over it I can limit it but I don't have to think about it and worry",
    "start": "1256539",
    "end": "1262270"
  },
  {
    "text": "about it there are a number of powerful introspection and internal prep tracing",
    "start": "1262270",
    "end": "1267309"
  },
  {
    "text": "primitives for looking at the system while the system is running I can show have time I show some simple examples of",
    "start": "1267309",
    "end": "1273760"
  },
  {
    "text": "that but it's a very powerful system a lots been put in to managing production",
    "start": "1273760",
    "end": "1278890"
  },
  {
    "text": "systems were in use so I can look internally into the system and see what's going on while it's running and",
    "start": "1278890",
    "end": "1284700"
  },
  {
    "text": "there are a number of interfaces the outside world we'll talk more about those later it's got the typical",
    "start": "1284700",
    "end": "1290830"
  },
  {
    "text": "functional stuff immutable data predicts a predefined set of data types there's patent matching this functional",
    "start": "1290830",
    "end": "1296529"
  },
  {
    "text": "language support the handling of modules and code again is built into the virtual machine and again the fact there's no",
    "start": "1296529",
    "end": "1302380"
  },
  {
    "text": "global data we just don't do global so",
    "start": "1302380",
    "end": "1308860"
  },
  {
    "text": "this gets us what - what the outline ecosystem is so it's a set of languages",
    "start": "1308860",
    "end": "1316960"
  },
  {
    "text": "built and running on top of the beam along an OTP so we have this layer around here which",
    "start": "1316960",
    "end": "1325210"
  },
  {
    "text": "is the beam - everything runs on top of the beam we had our line go TP support and libraries for it and then we can",
    "start": "1325210",
    "end": "1331270"
  },
  {
    "text": "have a set of languages running on top of those using those our lang of course is there so we have",
    "start": "1331270",
    "end": "1342410"
  },
  {
    "text": "another one for example as Alex here which is very good which is a very growing language on top it's partly a",
    "start": "1342410",
    "end": "1348920"
  },
  {
    "text": "Pylea ecosystem we have LFE which stands for list flavor darling for we who like",
    "start": "1348920",
    "end": "1355310"
  },
  {
    "text": "parentheses it's there there is also there's a Prolog implementation and law",
    "start": "1355310",
    "end": "1360350"
  },
  {
    "text": "implementation other languages are well all running on top of the ecosystem now the thing here is that if these",
    "start": "1360350",
    "end": "1367430"
  },
  {
    "text": "implementations language implementations follow the rules correctly they're all interactable so they can interact with",
    "start": "1367430",
    "end": "1374510"
  },
  {
    "text": "each other and they can support each other so I can I can in principle write my application in different languages",
    "start": "1374510",
    "end": "1380090"
  },
  {
    "text": "and have them calling each other in the right way just getting them working together right so just because I pick",
    "start": "1380090",
    "end": "1385430"
  },
  {
    "text": "our line doesn't mean everything has to be a line or just because I pick a legacy everything doesn't have to be Alex here I can mix these two quite",
    "start": "1385430",
    "end": "1393680"
  },
  {
    "text": "close together for it so yeah so now",
    "start": "1393680",
    "end": "1399830"
  },
  {
    "text": "we're getting beyond our line right so now we want to extend the system so how",
    "start": "1399830",
    "end": "1406010"
  },
  {
    "text": "can we do that so what what we want to provide is new skins the old ceremony we",
    "start": "1406010",
    "end": "1411290"
  },
  {
    "text": "have the our line at the bottom we've got the beam we've got our line at the bottom and the beam is can't stress it",
    "start": "1411290",
    "end": "1416630"
  },
  {
    "text": "is very a line specific for example it just will not do mutable data this is",
    "start": "1416630",
    "end": "1424280"
  },
  {
    "text": "not the compiled our line compiler saying you can't update something this is the beam which does not update things",
    "start": "1424280",
    "end": "1429580"
  },
  {
    "text": "if you try and do it internally the chances are it either won't work you're crashing so you just adjust support for",
    "start": "1429580",
    "end": "1436760"
  },
  {
    "text": "it so it's new skins the old ceremony if you have not heard this CD you should it's a wonderful CD it's like what",
    "start": "1436760",
    "end": "1443990"
  },
  {
    "text": "everything Leonard Cohen is very depressing but it's very good music and I will not play it for you later yeah so",
    "start": "1443990",
    "end": "1452630"
  },
  {
    "text": "how does it work well as again we have the beam here we have our language P so",
    "start": "1452630",
    "end": "1457760"
  },
  {
    "text": "my new language I'll implement this in some way on top here and new language libraries on top so that they'll both be",
    "start": "1457760",
    "end": "1464000"
  },
  {
    "text": "on top of our land on top of OTP and using those this is the basic way we extend the",
    "start": "1464000",
    "end": "1469340"
  },
  {
    "text": "system and it's like a skin and the",
    "start": "1469340",
    "end": "1477350"
  },
  {
    "text": "thickness of the skin will very much affect how efficient it is and how it works so sometimes it'll be very thin",
    "start": "1477350",
    "end": "1484010"
  },
  {
    "text": "skin sometimes be very thick skin it's up to you to choose what you need and we'll do thing for it so yeah so I would",
    "start": "1484010",
    "end": "1496550"
  },
  {
    "text": "say I class they're three different classes of extending the system what one",
    "start": "1496550",
    "end": "1502040"
  },
  {
    "text": "I call native languages these are languages basically keep the Erlang execution model and data types",
    "start": "1502040",
    "end": "1511540"
  },
  {
    "text": "but just provide a new say a new syntax and different packaging and things like",
    "start": "1511540",
    "end": "1516950"
  },
  {
    "text": "this for so this is definitely the most efficient way of running a new language",
    "start": "1516950",
    "end": "1522110"
  },
  {
    "text": "on top of it because we're basically running our Lang it look might look and feel very different some examples of",
    "start": "1522110",
    "end": "1527930"
  },
  {
    "text": "this are Alexia which is a language has grown quite quite a lot over the last couple of years which looks very",
    "start": "1527930",
    "end": "1534650"
  },
  {
    "text": "different in many ways feels different but it's the same thing we have LFE FN",
    "start": "1534650",
    "end": "1540440"
  },
  {
    "text": "is one that's sort of inspired by python we have closure which is a closure like language running on top and there also a",
    "start": "1540440",
    "end": "1547430"
  },
  {
    "text": "number of statically to experiments doing statically typed languages so I mentioned our line is done dynamically",
    "start": "1547430",
    "end": "1553880"
  },
  {
    "text": "typed and it only has to set a predefined set of data types again this",
    "start": "1553880",
    "end": "1559970"
  },
  {
    "text": "is directly what support in the machine there are reasons for this okay discuss them later but that's just the way it is",
    "start": "1559970",
    "end": "1567580"
  },
  {
    "text": "so if we look here alexia well dynamic functional language designed for",
    "start": "1567580",
    "end": "1573080"
  },
  {
    "text": "building scalable and maintainable applications of course if you look at it it's influenced by Ruby but it's",
    "start": "1573080",
    "end": "1579350"
  },
  {
    "text": "definitely not Ruby so if you look at the syntax you've looked at Ruby you'll find this click clear similarity between",
    "start": "1579350",
    "end": "1586820"
  },
  {
    "text": "the syntax and the alexia syntax has many taken many features and Ruby syntax but be very aware we are not running",
    "start": "1586820",
    "end": "1593660"
  },
  {
    "text": "Ruby because Ruby has a lot of things that will just not run on the beam for example mutable data",
    "start": "1593660",
    "end": "1601330"
  },
  {
    "text": "it has metaprogramming capabilities using macros there's a macro package as a macro system rather defined in the",
    "start": "1601559",
    "end": "1607769"
  },
  {
    "text": "language which allows you to write your own macros and it takes down the language a lot of the things you'll do",
    "start": "1607769",
    "end": "1613289"
  },
  {
    "text": "standard stuff you'll find an Alexia are actually macros this is nothing strange",
    "start": "1613289",
    "end": "1619279"
  },
  {
    "text": "however you can't change the syntax because the handling of macros is done",
    "start": "1619279",
    "end": "1626190"
  },
  {
    "text": "after you've passed it so what you write in your file has to be possible by the",
    "start": "1626190",
    "end": "1631529"
  },
  {
    "text": "Alexia parser then you can macro then you can do macro processing and change that before goes into the compiler",
    "start": "1631529",
    "end": "1638600"
  },
  {
    "text": "now the Alexia syntax is pretty well lacks in some way so you can write",
    "start": "1638600",
    "end": "1644190"
  },
  {
    "text": "things which actually are function calls but don't look like function calls in many of the standard things if I mean",
    "start": "1644190",
    "end": "1650460"
  },
  {
    "text": "that the syntax you use for defining a function the death it does not look like a functional call but syntactically it",
    "start": "1650460",
    "end": "1657720"
  },
  {
    "text": "actually is one and expands into a macro so a lot of the system the macros a lot",
    "start": "1657720",
    "end": "1663509"
  },
  {
    "text": "of packages you'll find in Alexia will have macro type interfaces we were",
    "start": "1663509",
    "end": "1669330"
  },
  {
    "text": "looking before the X unit to test the unit test facility there you're writing tests using macros it also comes with an",
    "start": "1669330",
    "end": "1678899"
  },
  {
    "text": "extensive set of build tools and packages there are a lot of a lot of packages that come with Alexia it's",
    "start": "1678899",
    "end": "1684509"
  },
  {
    "text": "being spent extended and from a very early stage that I said a build tool for building systems with it but at the",
    "start": "1684509",
    "end": "1691409"
  },
  {
    "text": "basic level it still has the same semantics as early because that's what the beam provides you which means it's",
    "start": "1691409",
    "end": "1698700"
  },
  {
    "text": "quite an easy to interface Alex you're nailing because they're same basic data types same operations anything like this",
    "start": "1698700",
    "end": "1704820"
  },
  {
    "text": "for me the other one which I like which I've done is this play with a line it's",
    "start": "1704820",
    "end": "1712409"
  },
  {
    "text": "a lisp so it's a lisp syntax front-end work it's a real lisp with all the real",
    "start": "1712409",
    "end": "1718320"
  },
  {
    "text": "lisp goodies so to proper her my iconic language and with real this macros macros the way god intended right the",
    "start": "1718320",
    "end": "1725220"
  },
  {
    "text": "macros to work and just effective for but it's not scheme it's not common list",
    "start": "1725220",
    "end": "1732299"
  },
  {
    "text": "because these will not as they stand on top of the a-line system so the Lisp has been adapted to",
    "start": "1732299",
    "end": "1738630"
  },
  {
    "text": "fit onto the a-line system again this is what you need to do so for example there's no immutable data it's only the",
    "start": "1738630",
    "end": "1747270"
  },
  {
    "text": "standard airline data types it has our Lang Stein style modules and functions",
    "start": "1747270",
    "end": "1752580"
  },
  {
    "text": "so if you've trying to look at it say coming from so commonly spamming your packages they just don't exist",
    "start": "1752580",
    "end": "1758730"
  },
  {
    "text": "Allen does not support the primitives you need to build a package system for that just not how it handles code",
    "start": "1758730",
    "end": "1764370"
  },
  {
    "text": "workout hounds atoms there and macros only compile time because at runtime in",
    "start": "1764370",
    "end": "1770760"
  },
  {
    "text": "the Erlang system there are just compiled functions there's no there's no direct assist web de triomphe or example",
    "start": "1770760",
    "end": "1778710"
  },
  {
    "text": "what you need to do for those who know Lisp is to Lisp to instead of a lisp one",
    "start": "1778710",
    "end": "1784610"
  },
  {
    "text": "if you don't know this doesn't make any difference if you do I can gladly take the argument afterwards but there's a",
    "start": "1784610",
    "end": "1790050"
  },
  {
    "text": "specific reason for doing this but again this is another thing here as well for yeah standard data types yes so a line",
    "start": "1790050",
    "end": "1796800"
  },
  {
    "text": "only has a predefined set of data types and what you will the beam has a predefined set of a little ten types",
    "start": "1796800",
    "end": "1803010"
  },
  {
    "text": "which means you can in principle not define your own data types so what L",
    "start": "1803010",
    "end": "1809220"
  },
  {
    "text": "lang and Alexia do and Lily fee is one they fake it so you make something that",
    "start": "1809220",
    "end": "1815010"
  },
  {
    "text": "looks like your own defined data type but you actually implement using on to running it on top of something else so",
    "start": "1815010",
    "end": "1822390"
  },
  {
    "text": "from the a line point of view they have something that's called records which gives you nice syntax you can define",
    "start": "1822390",
    "end": "1828060"
  },
  {
    "text": "records as certain operations on records but they're implemented on top of the standard tuples just using a tag couple",
    "start": "1828060",
    "end": "1834120"
  },
  {
    "text": "for Alexia has something called structs which gives you the same features I can define struct sucking you type checking",
    "start": "1834120",
    "end": "1840780"
  },
  {
    "text": "of at least access checking of structs at runtime but they're just built on top of maps and there's just no way around",
    "start": "1840780",
    "end": "1848460"
  },
  {
    "text": "this yeah I'm not I'm not going to talk",
    "start": "1848460",
    "end": "1856050"
  },
  {
    "text": "about a Fenian closure there for it but this is something interesting as well so",
    "start": "1856050",
    "end": "1861600"
  },
  {
    "text": "as I've said number of times that there is no static type system so the base language",
    "start": "1861600",
    "end": "1867130"
  },
  {
    "text": "very system is dynamically-typed and people feel would be very nice to have a",
    "start": "1867130",
    "end": "1872230"
  },
  {
    "text": "statically typed functional language running on the online system and there have been there is a number of well as",
    "start": "1872230",
    "end": "1879760"
  },
  {
    "text": "yet experiments doing this so one for example is alpaca which is it statically",
    "start": "1879760",
    "end": "1888760"
  },
  {
    "text": "typed legally evaluated functional programming language it relies on it",
    "start": "1888760",
    "end": "1895750"
  },
  {
    "text": "well it relies on type inference and all the things you expect in it but at the base level everything just compiles down",
    "start": "1895750",
    "end": "1900910"
  },
  {
    "text": "to a line it's ml inspired this means",
    "start": "1900910",
    "end": "1907930"
  },
  {
    "text": "that in the alpaca system itself when the modules to find an alpaca I can I",
    "start": "1907930",
    "end": "1913270"
  },
  {
    "text": "can do type checking I can be very certain that the type chat types are checked and it is type correct this then",
    "start": "1913270",
    "end": "1920650"
  },
  {
    "text": "lope ins up a lot how actually want to implement my user-defined types but in in the in this site part of the system I",
    "start": "1920650",
    "end": "1926890"
  },
  {
    "text": "know I'm type safe which is very nice however the problem is when I interact",
    "start": "1926890",
    "end": "1932890"
  },
  {
    "text": "with the rest of the world in this case the rest of the ally insists the beam system which is not type safe so there's",
    "start": "1932890",
    "end": "1939760"
  },
  {
    "text": "in in the a-line system there is nothing stopping me calling any function I want",
    "start": "1939760",
    "end": "1945040"
  },
  {
    "text": "with any arguments and why default all this checking is done at runtime which",
    "start": "1945040",
    "end": "1951370"
  },
  {
    "text": "is completely against what what we're doing here and the same thing with when processes are communicating I can send",
    "start": "1951370",
    "end": "1958270"
  },
  {
    "text": "any message to I want to any process the system does not block and stop anything",
    "start": "1958270",
    "end": "1963490"
  },
  {
    "text": "like this which means if I'm doing something like this I need some form of shell around my my type statically type",
    "start": "1963490",
    "end": "1970330"
  },
  {
    "text": "check system interacting with the outside world for but doing that then I can I can build a system inside which I",
    "start": "1970330",
    "end": "1976210"
  },
  {
    "text": "know is type safe and as I said there's not mount of work going on this alpaca",
    "start": "1976210",
    "end": "1981690"
  },
  {
    "text": "it sort of works but it's not production ready there are some people doing F sharp as well on it which would fit",
    "start": "1981690",
    "end": "1987760"
  },
  {
    "text": "quite well and again you have the same problem there y'all can make my packages work but I need to work this so this is",
    "start": "1987760",
    "end": "1994870"
  },
  {
    "text": "coming on you it's interesting you'll be interesting to see how when they get them better",
    "start": "1994870",
    "end": "2002560"
  },
  {
    "text": "further wrong and development how useful they are and how they get them to interact with the rest of the system so",
    "start": "2002560",
    "end": "2009800"
  },
  {
    "text": "I know there's quite a lot of interest in this yeah the next level is are you standing the",
    "start": "2009800",
    "end": "2017390"
  },
  {
    "text": "system like what I call non native languages so now I want to run a language I want to run languages on top",
    "start": "2017390",
    "end": "2023000"
  },
  {
    "text": "of the Erlang system but they're not Elling like however look at it",
    "start": "2023000",
    "end": "2028850"
  },
  {
    "text": "alexia LFE well the other ones close your app a cassette they are alum Erlang",
    "start": "2028850",
    "end": "2034130"
  },
  {
    "text": "like in their semantics I can change the syntax I can add packaging systems and do a lot of things for it but the base",
    "start": "2034130",
    "end": "2039980"
  },
  {
    "text": "level here's here we're looking at what happens if I want to let implement a language on top of the Erlang system which has completely different semantics",
    "start": "2039980",
    "end": "2046990"
  },
  {
    "text": "and I have two examples here like if these examples I've done them myself I",
    "start": "2046990",
    "end": "2052909"
  },
  {
    "text": "think they're probably others as well do it and one news I want to run Lua or I want to run Prolog on top of the system",
    "start": "2052910",
    "end": "2060889"
  },
  {
    "text": "here so what is lower it's a powerful efficient lightweight",
    "start": "2060890",
    "end": "2067760"
  },
  {
    "text": "embeddable scripting language supports procedural programming object-oriented programming functional programming data",
    "start": "2067760",
    "end": "2072889"
  },
  {
    "text": "different programming and data description it basically supports everything right and it's quite actually",
    "start": "2072890",
    "end": "2080149"
  },
  {
    "text": "it's a quite a nice little language I'm very impressed because they've managed to keep the language simple and they",
    "start": "2080150",
    "end": "2087649"
  },
  {
    "text": "managed to get the right basic primitives in and we're using these primitives you can build a lot of stuff on top of it yes I can make it",
    "start": "2087650",
    "end": "2094399"
  },
  {
    "text": "object-oriented it doesn't have a concept of classes but using the tables and meta tables I can implement",
    "start": "2094400",
    "end": "2100010"
  },
  {
    "text": "something like classes for it's a very nice for simple little system and",
    "start": "2100010",
    "end": "2106000"
  },
  {
    "text": "Louella is an implementation of this running in our lang which implements Lua 5.2 well it doesn't do the co-routines",
    "start": "2106000",
    "end": "2114920"
  },
  {
    "text": "that's about it right everything else it does for and Lua is very different amongst other thing it",
    "start": "2114920",
    "end": "2122660"
  },
  {
    "text": "has shared global mutable data defined in the language right how should work and without that it",
    "start": "2122660",
    "end": "2129280"
  },
  {
    "text": "wouldn't belong so if you're going to implement law you have to do you have to implement shared mutable global data",
    "start": "2129280",
    "end": "2135839"
  },
  {
    "text": "which airline doesn't support the lower handling of code is completely different",
    "start": "2135839",
    "end": "2143040"
  },
  {
    "text": "so these are things there are other features as well for it that you just",
    "start": "2143040",
    "end": "2148300"
  },
  {
    "text": "have to do yourself if you can do it if you want to look and the goal here is to",
    "start": "2148300",
    "end": "2153490"
  },
  {
    "text": "make something that is compatible with law not lower like or lower influence but Lua",
    "start": "2153490",
    "end": "2158740"
  },
  {
    "text": "that's what Lu l is there are other things as well in the language that just don't fit again it's very nice to the",
    "start": "2158740",
    "end": "2166630"
  },
  {
    "text": "language they've also been vert they're also very conservative in their development so they've reached 5.2 now that was a couple of years ago they went",
    "start": "2166630",
    "end": "2173080"
  },
  {
    "text": "to 5.3 and then they did something extremely radical they added integers",
    "start": "2173080",
    "end": "2178710"
  },
  {
    "text": "before that all the numbers were floating points and there was printed a lot of argument about integers where",
    "start": "2178710",
    "end": "2183730"
  },
  {
    "text": "they should be they're not for kiss which means it's very compatible so how's it done right well this means I",
    "start": "2183730",
    "end": "2191200"
  },
  {
    "text": "have to implement a system on top which interprets lower will compile or a",
    "start": "2191200",
    "end": "2196690"
  },
  {
    "text": "little bytecode or something like this and manage the whole state myself so what this is this is now this is the",
    "start": "2196690",
    "end": "2203050"
  },
  {
    "text": "airline data structure to record which implements contains all the lower state",
    "start": "2203050",
    "end": "2208890"
  },
  {
    "text": "so it contains information for tables the main data type will the only the",
    "start": "2208890",
    "end": "2214210"
  },
  {
    "text": "only structured data type you have in lower our tables key value tables you",
    "start": "2214210",
    "end": "2219700"
  },
  {
    "text": "knew that you need you need frames because the the call frame is immutable so after you sometimes have to handle",
    "start": "2219700",
    "end": "2225910"
  },
  {
    "text": "those I need the current global table the bottom level global table whichever it",
    "start": "2225910",
    "end": "2230950"
  },
  {
    "text": "references everything I need to keep track of the stack there are met all the",
    "start": "2230950",
    "end": "2236440"
  },
  {
    "text": "atomic data types have meta tables as well so I've got a meta table for nil for boolean's for numbers and for",
    "start": "2236440",
    "end": "2241660"
  },
  {
    "text": "strings so I need to carry these things around with me as well for I need a random state so each each implementation",
    "start": "2241660",
    "end": "2249190"
  },
  {
    "text": "Elul has its own random number generation ports I don't overlap and well I need a tag so I can crash it in",
    "start": "2249190",
    "end": "2255550"
  },
  {
    "text": "the right way so so what you need to do here this this case is lower but you do another",
    "start": "2255550",
    "end": "2261000"
  },
  {
    "text": "language have exactly the same problem I need to manage a state containing all the stuff that is not our Lang you and",
    "start": "2261000",
    "end": "2266700"
  },
  {
    "text": "carry that around with me and work on that so if I'm adding a new table then I",
    "start": "2266700",
    "end": "2272760"
  },
  {
    "text": "add a table into this into the table table here and if I'm updating a table",
    "start": "2272760",
    "end": "2278280"
  },
  {
    "text": "will I go in extract that table mutate this which is just now long datatype mutate it and put it back in again they",
    "start": "2278280",
    "end": "2285330"
  },
  {
    "text": "to carry all these things around with me there are a few more for accessing",
    "start": "2285330",
    "end": "2291030"
  },
  {
    "text": "things and stuff like this and well too but this is type of work I need to do if",
    "start": "2291030",
    "end": "2296700"
  },
  {
    "text": "I'm putting a language into like into our language is not Allen another example not gonna go deep into it is org",
    "start": "2296700",
    "end": "2303420"
  },
  {
    "text": "which is standard Prolog it's a subset of Strix it's a strict subset of standard Palo and again it's got",
    "start": "2303420",
    "end": "2309150"
  },
  {
    "text": "completely different semantics fella so it's got backtracking logical variables and unification which Alan doesn't have",
    "start": "2309150",
    "end": "2315680"
  },
  {
    "text": "so I have to do I have to do this myself in the language itself in the implementation fortunately most of the",
    "start": "2315680",
    "end": "2322590"
  },
  {
    "text": "mapping between analog and our line data structures pretty straightforward except for logical variables because they",
    "start": "2322590",
    "end": "2328680"
  },
  {
    "text": "update sometimes I bind them when I backtrack them I lose bindings and things like this for so this is two",
    "start": "2328680",
    "end": "2336810"
  },
  {
    "text": "examples if I wanted something like all a non-native language the third level is",
    "start": "2336810",
    "end": "2343800"
  },
  {
    "text": "extending the system using external systems accessing things on the outside and there are a number of ways of doing",
    "start": "2343800",
    "end": "2350610"
  },
  {
    "text": "this there's the basic mechanism the original one it's called ports and that just allows me to talk to other",
    "start": "2350610",
    "end": "2356700"
  },
  {
    "text": "operating system processes by sending messages to them so in the outline from the other side I open a port and there's",
    "start": "2356700",
    "end": "2363060"
  },
  {
    "text": "an operating system process the other end I send bytes to it it will arrive there when they send bites back also his",
    "start": "2363060",
    "end": "2368550"
  },
  {
    "text": "message coming from the external site makes the outside world look like a process in just any messages backwards and forth that's a very nice way of",
    "start": "2368550",
    "end": "2375870"
  },
  {
    "text": "doing things we have NIF's which are natively implemented functions that's a way of",
    "start": "2375870",
    "end": "2382050"
  },
  {
    "text": "implementing functions in c and calling them from our lang as if they are a long defined functions so i can set up a",
    "start": "2382050",
    "end": "2388950"
  },
  {
    "text": "module accessing thing outside and I'll call it from our line functions and I'll do the outside",
    "start": "2388950",
    "end": "2394529"
  },
  {
    "text": "work there for example if you're running say raspberry pi you can make it you can",
    "start": "2394529",
    "end": "2401730"
  },
  {
    "text": "make a set of NIF's that implement the I squared C interface then I can talk I squared C from my",
    "start": "2401730",
    "end": "2407970"
  },
  {
    "text": "raspberry pi the outside doing this by calling our line functions there's a set",
    "start": "2407970",
    "end": "2413910"
  },
  {
    "text": "of libraries for converting to and from our line data structures their support for doing threads as well there so I can start up threads from magnificent run",
    "start": "2413910",
    "end": "2420359"
  },
  {
    "text": "things for they use quite a lot today we",
    "start": "2420359",
    "end": "2426930"
  },
  {
    "text": "also something called C nodes which is in between its it's a way of writing having an another operating system",
    "start": "2426930",
    "end": "2433200"
  },
  {
    "text": "process written in another language but from the outlying point of view it looks like a distributed airline node so I can",
    "start": "2433200",
    "end": "2439770"
  },
  {
    "text": "link to or I can send messages to it and things like this for as well there's a bit of work needed to do it to make it",
    "start": "2439770",
    "end": "2445020"
  },
  {
    "text": "behave properly but there's support for doing that and I can talk with other languages as well I think rust and wear of assembly of",
    "start": "2445020",
    "end": "2451260"
  },
  {
    "text": "things are probably arriving the neuf interface allows me to talk to anything just as long as I go through a see",
    "start": "2451260",
    "end": "2456809"
  },
  {
    "text": "function an example of a seat well",
    "start": "2456809",
    "end": "2461970"
  },
  {
    "text": "examples of C nodes here the J interface that's something that comes with a standard a standard outline release it's",
    "start": "2461970",
    "end": "2467849"
  },
  {
    "text": "a way of talking with Java it's basically a set of Java class the size where I can run Java I can send our messages backwards and forth from it",
    "start": "2467849",
    "end": "2475559"
  },
  {
    "text": "peer laying is something a colleague did of mine that's for doing the same thing with Python so I can start a Python",
    "start": "2475559",
    "end": "2482099"
  },
  {
    "text": "machine other Python processes I can talk backwards or forward from the Python to it so you could use a line as",
    "start": "2482099",
    "end": "2487470"
  },
  {
    "text": "a interactive concurrent glue between Python systems and sending messages between them as well",
    "start": "2487470",
    "end": "2494690"
  },
  {
    "text": "yeah okay so why we have these three basic three basic alternatives why would",
    "start": "2496160",
    "end": "2502140"
  },
  {
    "text": "I choose one over the other right so why choose a native language well however you look at it it's the optimal use of",
    "start": "2502140",
    "end": "2508500"
  },
  {
    "text": "the beam because you're doing what the beam is meant to do and it's definitely the fastest thing you can get running on",
    "start": "2508500",
    "end": "2513869"
  },
  {
    "text": "the beam however you look at it's conceptually easy to interface because",
    "start": "2513869",
    "end": "2519270"
  },
  {
    "text": "it's just a line and it's safe what I mean by safe here",
    "start": "2519270",
    "end": "2525990"
  },
  {
    "text": "is you make a mistake in that in the crash at all you'll happen is your crash now Lange process you will not crash the yelling system we're something pretty",
    "start": "2525990",
    "end": "2533040"
  },
  {
    "text": "paranoid about safety but yes so it's safe in that sense the downside of",
    "start": "2533040",
    "end": "2539040"
  },
  {
    "text": "course is you basically restricted traveling like languages you cannot get around that they may look and feel very",
    "start": "2539040",
    "end": "2545670"
  },
  {
    "text": "different if you look at Alexia it looks very different in many ways it feels",
    "start": "2545670",
    "end": "2550710"
  },
  {
    "text": "very different but the base level is the same that's just a limitation of it and",
    "start": "2550710",
    "end": "2556470"
  },
  {
    "text": "typically you probably a large environment to do it anyway I mean you want libraries you want tools you want you probably want your own Ripple",
    "start": "2556470",
    "end": "2562560"
  },
  {
    "text": "something like this you want Lemax mode of course they can you can edit the language right but you need these things",
    "start": "2562560",
    "end": "2568620"
  },
  {
    "text": "for doing it and if again if you go back the elixir side you'll find they have this big environment around the language so next",
    "start": "2568620",
    "end": "2578220"
  },
  {
    "text": "one of course is what happens to undo not non-native languages the examples of being lower land analog here well there",
    "start": "2578220",
    "end": "2585840"
  },
  {
    "text": "are no restrictions I can do whatever I want I can make my language as global as mutable they're shared whatever it's up",
    "start": "2585840",
    "end": "2593280"
  },
  {
    "text": "to me to implement it's a good use of the beam in the sense I'm still running",
    "start": "2593280",
    "end": "2598350"
  },
  {
    "text": "inside beam processes that I can still communicate with other things we're written in other languages and on the",
    "start": "2598350",
    "end": "2603540"
  },
  {
    "text": "beam and directly just plus any data across on calling functions I've got fast data transfer with Alec because I'm",
    "start": "2603540",
    "end": "2610140"
  },
  {
    "text": "just running inside the outline system all the time right and it's safe because again I might have any I might have",
    "start": "2610140",
    "end": "2617070"
  },
  {
    "text": "written interpreter like the loyal system that that interprets law but it's running inside a normal hour long process and if that crash is just just",
    "start": "2617070",
    "end": "2623910"
  },
  {
    "text": "as normal a line family photographer the downside is that it is often slower",
    "start": "2623910",
    "end": "2630510"
  },
  {
    "text": "than doing a normal implementation I take my language X and implement outside in C or whatever that will generally go",
    "start": "2630510",
    "end": "2637380"
  },
  {
    "text": "faster than implementing on top of la if it doesn't have probably done something",
    "start": "2637380",
    "end": "2642720"
  },
  {
    "text": "wrong somewhere right there just a price you pay for it it can be costly to",
    "start": "2642720",
    "end": "2648480"
  },
  {
    "text": "implement sometimes it's not trivial doing it and you need an environment for things",
    "start": "2648480",
    "end": "2653980"
  },
  {
    "text": "for these things right you need new that you need the environment the global state for mutable data what I was",
    "start": "2653980",
    "end": "2660040"
  },
  {
    "text": "showing whether the example from from from the world actually that those world",
    "start": "2660040",
    "end": "2665650"
  },
  {
    "text": "8 right there the actual ones in the system that's real real stuff but I need to implement all these I need to handle this global state pass it around with me",
    "start": "2665650",
    "end": "2672940"
  },
  {
    "text": "and manage in a nice way I can't get around that the final alternative is doing let's see",
    "start": "2672940",
    "end": "2682660"
  },
  {
    "text": "where are we external systems so it's good I can access anything there are no",
    "start": "2682660",
    "end": "2688360"
  },
  {
    "text": "restrictions on what I talk to I just as long as I get the interface working correctly so the other other the other",
    "start": "2688360",
    "end": "2694360"
  },
  {
    "text": "system talks the right way without like I can talk to anything pick a language I can talk to it I can monitor and manage",
    "start": "2694360",
    "end": "2701770"
  },
  {
    "text": "systems and it gives me of course the",
    "start": "2701770",
    "end": "2707140"
  },
  {
    "text": "maximum efficiency of that system because I'm using the external the default implementation of it",
    "start": "2707140",
    "end": "2713700"
  },
  {
    "text": "I'm just communicating with it then it's slightly generally interface is a bit",
    "start": "2713700",
    "end": "2721030"
  },
  {
    "text": "slower even if I'm doing an if in this case of having a new for a port even than if it there is data conversion",
    "start": "2721030",
    "end": "2727690"
  },
  {
    "text": "going backwards and forwards in between so I'm calling with our line data structures which I'll then have C code which accesses and when the C codes",
    "start": "2727690",
    "end": "2734380"
  },
  {
    "text": "gonna return something it'll build a new a line data structure for it so it's slightly slow and it can either be safe",
    "start": "2734380",
    "end": "2739870"
  },
  {
    "text": "or unsafe so if I am talking with another node through a port then from",
    "start": "2739870",
    "end": "2745900"
  },
  {
    "text": "the Aling point of view that's safe because if that other system dies it will not crash the ailing system the",
    "start": "2745900",
    "end": "2751480"
  },
  {
    "text": "worst oil seeds are the ports closed if I'm using NIF's it is decidedly unsafe",
    "start": "2751480",
    "end": "2757410"
  },
  {
    "text": "so if something goes wrong in that C code or whatever the C code calls it will crash the Alain system again this",
    "start": "2757410",
    "end": "2764650"
  },
  {
    "text": "is just a trade off I have to make to choose which one do I want try so I can",
    "start": "2764650",
    "end": "2772570"
  },
  {
    "text": "get a safe system but I pay for it by having Sailor slow communication interaction times I can do a faster",
    "start": "2772570",
    "end": "2778510"
  },
  {
    "text": "connection one then I'll pay for it by being unsafe there's not much you gain you have to make your choice here",
    "start": "2778510",
    "end": "2784660"
  },
  {
    "text": "it's valuable works and yeah what I want",
    "start": "2784660",
    "end": "2791530"
  },
  {
    "text": "to end up finally is so a little bit about how long has one problem right",
    "start": "2791530",
    "end": "2797520"
  },
  {
    "text": "it's actually used quite a lot but you don't see it so if you ask people if",
    "start": "2797520",
    "end": "2803020"
  },
  {
    "text": "they have ever used Allen they'll say no and but there are core for a lot of systems in the world which I used are",
    "start": "2803020",
    "end": "2809619"
  },
  {
    "text": "implemented in Erlang right we're not talking just that's in the back companies well I mean whatsapp is your",
    "start": "2809619",
    "end": "2815589"
  },
  {
    "text": "classic one the whole back-end system of whatsapp the service is written in Ellen and they have what over a billion users",
    "start": "2815589",
    "end": "2822400"
  },
  {
    "text": "now that's an awful lot of a line being used on for and of course no users no",
    "start": "2822400",
    "end": "2828160"
  },
  {
    "text": "just this is just their right and they're not there because it just happens to be there there are also classic users of many of",
    "start": "2828160",
    "end": "2834549"
  },
  {
    "text": "the features of our they literally have our line systems running running millions of processors running a",
    "start": "2834549",
    "end": "2839799"
  },
  {
    "text": "millions of a long process on one system or one machine and they just do that in the production system for there are",
    "start": "2839799",
    "end": "2846130"
  },
  {
    "text": "other uses as well - I mean well Ericsson of course has some products written in Allen so if you're sending",
    "start": "2846130",
    "end": "2854079"
  },
  {
    "text": "mobile data from from your mug from your phone and you most likely running through in systems written in Allen",
    "start": "2854079",
    "end": "2859480"
  },
  {
    "text": "there's some of the base station parts are written out and I think Ericsson have somewhere around about 40 percent of the world market for that so the",
    "start": "2859480",
    "end": "2865599"
  },
  {
    "text": "chance is very great using Allen even if what you're doing here today bet365 part",
    "start": "2865599",
    "end": "2875289"
  },
  {
    "text": "of their system is howling as well so they did a number of experiments four or five years ago that we're going to add a new feature and they do experiments with",
    "start": "2875289",
    "end": "2882010"
  },
  {
    "text": "hour-long and they like that layout of that feature you know and then they've extended that with a few other features as well written in our so again you",
    "start": "2882010",
    "end": "2890140"
  },
  {
    "text": "don't see it but it's there and for those who don't know Beck bit say they are the largest online betting system in",
    "start": "2890140",
    "end": "2896589"
  },
  {
    "text": "the world I can never remember if it's the number of users or the amount of money but it says there's somewhere for",
    "start": "2896589",
    "end": "2902319"
  },
  {
    "text": "it so there are serious users of Allen a few others if you're going here cubic",
    "start": "2902319",
    "end": "2908740"
  },
  {
    "text": "for example they're the ones who do quick check the quick check search systems written in our course it can",
    "start": "2908740",
    "end": "2915279"
  },
  {
    "text": "check other languages as well but the basic system is written in our look for and again as a quick check user",
    "start": "2915279",
    "end": "2921230"
  },
  {
    "text": "you don't really have to know this it's there but it just works right what else",
    "start": "2921230",
    "end": "2927370"
  },
  {
    "text": "Cisco they use our lang and their switches so you're probably running out",
    "start": "2927370",
    "end": "2933830"
  },
  {
    "text": "on your many different cases for you never see it it's just infrastructure there's also some software that uses it",
    "start": "2933830",
    "end": "2939290"
  },
  {
    "text": "as well to I mean a classic one is RabbitMQ RabbitMQ is written in ellen and most users of rabbitmq never see",
    "start": "2939290",
    "end": "2946340"
  },
  {
    "text": "this because you don't have to see it it's there if you need it but doing it I don't know how many RabbitMQ systems",
    "start": "2946340",
    "end": "2952550"
  },
  {
    "text": "around the world they're quite a few where are we yeah caps need caps DB it",
    "start": "2952550",
    "end": "2960950"
  },
  {
    "text": "was written in a line again you don't need to know it but it is the react",
    "start": "2960950",
    "end": "2967370"
  },
  {
    "text": "database which I'd know if you've seen it but that's also written a line the",
    "start": "2967370",
    "end": "2973580"
  },
  {
    "text": "company basho they developed that they went under but now was taken over by bet365 and they maintain and support because they're using it themselves",
    "start": "2973580",
    "end": "2979460"
  },
  {
    "text": "right and what else well yeah I mean the kallana client about online banking",
    "start": "2979460",
    "end": "2985940"
  },
  {
    "text": "system the system they use in Europe is written in a like to have anymore",
    "start": "2985940",
    "end": "2991760"
  },
  {
    "text": "well they're vulgar games VMware I think they support rabbitmq we have water",
    "start": "2991760",
    "end": "2997610"
  },
  {
    "text": "which is a German gaming online gaming company and part of some of their games are written in elegant they found when",
    "start": "2997610",
    "end": "3004900"
  },
  {
    "text": "they went did this they did some tests I think they've got a tip out of ten times speed up of the system when converting",
    "start": "3004900",
    "end": "3010120"
  },
  {
    "text": "from Ruby at least so our line is a lot of different places you just never see",
    "start": "3010120",
    "end": "3016390"
  },
  {
    "text": "it which is very nice but it also means if you ask people they said why should I learn Ellen because I'll never use it",
    "start": "3016390",
    "end": "3021970"
  },
  {
    "text": "well they do Alex here has all is also",
    "start": "3021970",
    "end": "3027550"
  },
  {
    "text": "spreading quite a lot and mostly in a different world at the moment then for",
    "start": "3027550",
    "end": "3033100"
  },
  {
    "text": "example some of the standard packages that come with Alexia are for doing web servers so quite a lot of web servers",
    "start": "3033100",
    "end": "3038920"
  },
  {
    "text": "are being used written in Alexia as a migration say Ruby on Rails using Alex you in Phoenix they're also extending",
    "start": "3038920",
    "end": "3047020"
  },
  {
    "text": "into other type of applications as well so they're also expanding for there's a lot of airline going on in the",
    "start": "3047020",
    "end": "3052809"
  },
  {
    "text": "world and that is basically where I want",
    "start": "3052809",
    "end": "3058419"
  },
  {
    "text": "to end and I'm on time as well two",
    "start": "3058419",
    "end": "3063869"
  },
  {
    "text": "questions ya know there are two things",
    "start": "3068489",
    "end": "3079539"
  },
  {
    "text": "you can say the question was can you upgrade the beam and the rowing system and that no there are two things you cannot upgrade to be upgrade one the",
    "start": "3079539",
    "end": "3085959"
  },
  {
    "text": "running system one is the operating system and the others have been unfortunately everything else you can upgrade but not that honestly oh yeah",
    "start": "3085959",
    "end": "3098079"
  },
  {
    "text": "yeah okay yes yes but you cannot upgrade one machine if you're running a single system you can you want to upgrade the",
    "start": "3098079",
    "end": "3104650"
  },
  {
    "text": "beam then you have to take it down if you're running I say multiple modes multiple machines then of course you can",
    "start": "3104650",
    "end": "3109900"
  },
  {
    "text": "do rolling upgrades it means you have to design your system in such a way can handle them then you also get the",
    "start": "3109900",
    "end": "3116799"
  },
  {
    "text": "feature that one of the nodes one of this is one of the machines crashes everything else just keep on going and take over the work which you want to do",
    "start": "3116799",
    "end": "3122229"
  },
  {
    "text": "anyway right but then I'll do that yes any more more questions nope I want to",
    "start": "3122229",
    "end": "3131469"
  },
  {
    "text": "show one thing I want to show this excuse me here I can't help it so what",
    "start": "3131469",
    "end": "3140919"
  },
  {
    "text": "we've got here and we'll start this up I think we will run it like this let's see",
    "start": "3140919",
    "end": "3147819"
  },
  {
    "text": "if this works shall we no display preferences and if we now do arrangement",
    "start": "3147819",
    "end": "3154749"
  },
  {
    "text": "we murder this place sorry for it and we can shut that down and we do this and so",
    "start": "3154749",
    "end": "3160689"
  },
  {
    "text": "what I'm going to do now is run a little demo both to show a bit about the concurrency and some of the",
    "start": "3160689",
    "end": "3166359"
  },
  {
    "text": "introspection systems as well too so I am running a spaceship system here so I'm going to start off and I will",
    "start": "3166359",
    "end": "3174159"
  },
  {
    "text": "start the system which I try and increase increase this size yes like this visible yeah so I'm gonna run",
    "start": "3174159",
    "end": "3182600"
  },
  {
    "text": "in space which is 500 by 500 vegan I'm gonna run two thousand ships on them so",
    "start": "3182600",
    "end": "3188060"
  },
  {
    "text": "I've started up the space here we're not running it's running but we're not kicking any clocks so we'll start the run and I will tick a clock every 75",
    "start": "3188060",
    "end": "3195020"
  },
  {
    "text": "milliseconds so now we have this to 2,000 ships running okay each ship is a",
    "start": "3195020",
    "end": "3201770"
  },
  {
    "text": "separate island process so if I look at this system I'll find that over 2,000 processes running which from the outline",
    "start": "3201770",
    "end": "3207800"
  },
  {
    "text": "point of view is pretty trivial so we can look at that let's have a look so I can I can do I can start an outline here",
    "start": "3207800",
    "end": "3214120"
  },
  {
    "text": "and I'll call this observer and I will set the cookie right ship demo like this",
    "start": "3214120",
    "end": "3225910"
  },
  {
    "text": "and now I will start observer observer is a tool that comes with a standard hour lang release it provides in to",
    "start": "3225910",
    "end": "3233570"
  },
  {
    "text": "provide some some levels of introspection come up eventually yes",
    "start": "3233570",
    "end": "3239960"
  },
  {
    "text": "there we go and so what I'm doing now is I'm running observer on one our line",
    "start": "3239960",
    "end": "3245960"
  },
  {
    "text": "node and the simulator on another outline node so we're just showing distributions as well here so I can tell",
    "start": "3245960",
    "end": "3251660"
  },
  {
    "text": "which node I want to observe and I want to observe the simulator so now I'm looking at the simulator node here and",
    "start": "3251660",
    "end": "3257120"
  },
  {
    "text": "we can see down here for example I'm running 2049 processes so each ship is",
    "start": "3257120",
    "end": "3263900"
  },
  {
    "text": "to each chip is one process and the 49 other processes around I can look at",
    "start": "3263900",
    "end": "3268910"
  },
  {
    "text": "load charts for example take at a time get going and now we can see if we look",
    "start": "3268910",
    "end": "3273950"
  },
  {
    "text": "down here it's bit hard to see it properly there are eight schedulers one per core so we're running a jeweler's",
    "start": "3273950",
    "end": "3280580"
  },
  {
    "text": "the loads distributed and all that and the load balancers automatic for it I don't have to do anything about this we",
    "start": "3280580",
    "end": "3286220"
  },
  {
    "text": "can look at the memory usage we can look at other things as well we can look at the memory allocators and I will freely admit I don't understand what these are",
    "start": "3286220",
    "end": "3292550"
  },
  {
    "text": "doing but someone who knows about it can very well to save is the memory is the memory handling working as it should be",
    "start": "3292550",
    "end": "3298370"
  },
  {
    "text": "handling right I can look at these things for I can look internally in the system I can look at some applications",
    "start": "3298370",
    "end": "3305630"
  },
  {
    "text": "what not going for it but can look at low charts here and and so I'm running the system here",
    "start": "3305630",
    "end": "3311910"
  },
  {
    "text": "and I can of course do things so I'm running there I'm just having that I just have one shell I could start up",
    "start": "3311910",
    "end": "3316980"
  },
  {
    "text": "multiple shells I can do things so I can change the programming of the ships so the ships are actually encode the logic",
    "start": "3316980",
    "end": "3323550"
  },
  {
    "text": "of the ship is law so so each ship is running lower code for the logic author",
    "start": "3323550",
    "end": "3328770"
  },
  {
    "text": "and the logic here is very simple this stuff it ship just runs in a straight line until it gets the edge of the",
    "start": "3328770",
    "end": "3334350"
  },
  {
    "text": "universe and it balances right so it's very logic like change the logic so I can say I want to make it a run ship and",
    "start": "3334350",
    "end": "3340400"
  },
  {
    "text": "I will make the first 1000 of them run ships so what I'll do now is I'll load",
    "start": "3340400",
    "end": "3347130"
  },
  {
    "text": "in and recompile the code and you'll find the run ships agree yeah no it didn't stop of course didn't stop right",
    "start": "3347130",
    "end": "3353430"
  },
  {
    "text": "there would be fatal so now we're running different logic here for it and if I look if I look at",
    "start": "3353430",
    "end": "3359580"
  },
  {
    "text": "the load charts here I can see that there was a bump when of recompiling loading in the new code a bit where more",
    "start": "3359580",
    "end": "3365040"
  },
  {
    "text": "memory they're just running right and of course this is a game and I've all",
    "start": "3365040",
    "end": "3374130"
  },
  {
    "text": "gained in real games of course you kill things right so well yeah fine for me",
    "start": "3374130",
    "end": "3382860"
  },
  {
    "text": "gaming is computer games not not betting okay it's obvious trick to you so let's let's make some ships attack ships right",
    "start": "3382860",
    "end": "3389550"
  },
  {
    "text": "and we'll make a lot of them are so we'll kill it off quickly so I'll set I'll make 200 attack ships",
    "start": "3389550",
    "end": "3397400"
  },
  {
    "text": "now we'll see they will turn orange if you look there and you'll see the little",
    "start": "3397400",
    "end": "3402690"
  },
  {
    "text": "little things going that's explosions so one attack ship does is when it gets which is normal another ship in front of",
    "start": "3402690",
    "end": "3409110"
  },
  {
    "text": "it it kills it and I don't have sound so I'm writing out the sound therefore do in this space we hear things as you go",
    "start": "3409110",
    "end": "3416130"
  },
  {
    "text": "boom boom boom boom boom but I don't have sound for it and now we see the ships are going down of course now if I look at the load I see the loads",
    "start": "3416130",
    "end": "3423240"
  },
  {
    "text": "dropping of course because they're less processes less memory usage to everything I can see this it's keeping",
    "start": "3423240",
    "end": "3429840"
  },
  {
    "text": "pretty earth balanced now we can do some fun things this this one I like so we have this concept of schedulers and each",
    "start": "3429840",
    "end": "3436260"
  },
  {
    "text": "schedule is running one one operating system thread and they're balanced for it I can shut down",
    "start": "3436260",
    "end": "3441830"
  },
  {
    "text": "so I can do a line call on system flag",
    "start": "3441830",
    "end": "3448120"
  },
  {
    "text": "I've got that right yes shed weight",
    "start": "3448120",
    "end": "3453520"
  },
  {
    "text": "shared euler's online so I don't want to",
    "start": "3453520",
    "end": "3458990"
  },
  {
    "text": "run each schedulers anymore let's go down to four shall we so I'll set it to 4 here and we're now what will happen",
    "start": "3458990",
    "end": "3464960"
  },
  {
    "text": "now is I've shut down four schedulers and it's moving the process and from",
    "start": "3464960",
    "end": "3470030"
  },
  {
    "text": "those four across the other ones so now it's now it's only working on four schedulers we're running into a bit of",
    "start": "3470030",
    "end": "3475820"
  },
  {
    "text": "problem here well not a problem actually what's happening here is the a line system and not only load balances but if",
    "start": "3475820",
    "end": "3481130"
  },
  {
    "text": "it decides we have so little load will actually try and shut schedulers down by itself that's why we're seeing some of",
    "start": "3481130",
    "end": "3486290"
  },
  {
    "text": "them dropping but I'm moving things across here as well so I can set it back to eight I can set it to where specific",
    "start": "3486290",
    "end": "3491690"
  },
  {
    "text": "to and see if we can see then anymore here for",
    "start": "3491690",
    "end": "3495460"
  },
  {
    "text": "footman's yeah that's sorry yes that's why it's going all weird sorry",
    "start": "3499940",
    "end": "3506140"
  },
  {
    "text": "now we can sit down and now we see it shut down we shut down six of them depressed running on - sorry that was me",
    "start": "3506140",
    "end": "3513319"
  },
  {
    "text": "misspelling it doesn't try it automatically correct but yeah I do that so yeah I can I can control a lot of",
    "start": "3513319",
    "end": "3520789"
  },
  {
    "text": "things in the system while the system is running for I just want to show one thing and then we're done",
    "start": "3520789",
    "end": "3528710"
  },
  {
    "text": "so I mentioned but we'll kill this and I will restart it again and we'll just",
    "start": "3528710",
    "end": "3535880"
  },
  {
    "text": "start no down yes that that's that's the that's the observer saying the nodes gone down that's okay we went but we",
    "start": "3535880",
    "end": "3543529"
  },
  {
    "text": "won't worry about that so will you start here we'll start 500 mm again so I was mentioning before an",
    "start": "3543529",
    "end": "3551829"
  },
  {
    "text": "example of why you should definitely not do synchronous communication in parallel systems so all these ships if we start",
    "start": "3551829",
    "end": "3558890"
  },
  {
    "text": "them start the run here they're just running independently they're not",
    "start": "3558890",
    "end": "3564349"
  },
  {
    "text": "looking around it'd be very nice to have a ship that for example have a flock of ships so if they find other ships around",
    "start": "3564349",
    "end": "3570049"
  },
  {
    "text": "them they could follow it and do things like this for so we do have a flock ship here so I can set ships again to flock",
    "start": "3570049",
    "end": "3578029"
  },
  {
    "text": "ship and we'll set the whole lot for and",
    "start": "3578029",
    "end": "3586490"
  },
  {
    "text": "they all become flock ships here and now they're becoming well they're orange and when they're finding flocks they're",
    "start": "3586490",
    "end": "3591980"
  },
  {
    "text": "becoming green and yeah something's going wrong right and it took us about",
    "start": "3591980",
    "end": "3598880"
  },
  {
    "text": "less than one minute the whole system to hang the reason of course for this is is that we're doing synchronous",
    "start": "3598880",
    "end": "3604640"
  },
  {
    "text": "communication they'll discover a ship close and they're sent off a synchronous request saying where are you and how fast you're going and then sit and wait",
    "start": "3604640",
    "end": "3610670"
  },
  {
    "text": "for the reply and the whole system blocked in less than a minute so a very",
    "start": "3610670",
    "end": "3615920"
  },
  {
    "text": "clear example I should be very careful doing synchronous communication in parallel systems and I cannot restart",
    "start": "3615920",
    "end": "3621259"
  },
  {
    "text": "them anymore because they did they're just hung like they're just sitting there hanging so yeah that's me",
    "start": "3621259",
    "end": "3626990"
  },
  {
    "text": "okay and for any more questions for most likely over time okay thank you the presentation coming",
    "start": "3626990",
    "end": "3643660"
  },
  {
    "text": "afterwards now will look more a long and actually described at a higher level using at doing things with it and",
    "start": "3643660",
    "end": "3649120"
  },
  {
    "text": "examples of doing things with it not at the level I've been talking about or what might exist for that could be that",
    "start": "3649120",
    "end": "3654460"
  },
  {
    "text": "that is also interesting see it actually in actual use and real systems in actual",
    "start": "3654460",
    "end": "3659530"
  },
  {
    "text": "use [Music]",
    "start": "3659530",
    "end": "3664590"
  }
]