[
  {
    "start": "0",
    "end": "474000"
  },
  {
    "text": "testing testing is this thing on okay are we ready to do this all right so",
    "start": "3280",
    "end": "12080"
  },
  {
    "text": "this is an intro talk to Elixir how many people have used Elixir before good how many people have heard",
    "start": "12080",
    "end": "19439"
  },
  {
    "text": "of Elixir before how many people were looking for the you know coffee shop and they",
    "start": "19439",
    "end": "25599"
  },
  {
    "text": "thought it was back here and just kind of stumbled in no okay all right so I am Johnny win most uh most commonly",
    "start": "25599",
    "end": "33760"
  },
  {
    "text": "known as Johnny rugger gets confusing to people they think my last name is rugger but it's not uh that comes from playing",
    "start": "33760",
    "end": "40039"
  },
  {
    "text": "rugby I did it for a number of years until I retired well rugby in retirement",
    "start": "40039",
    "end": "45960"
  },
  {
    "text": "if you've ever played rugby basically means my wife told me to stop playing um so every once in a while I go out there",
    "start": "45960",
    "end": "52079"
  },
  {
    "text": "and I run around and let's just say I'm getting a little old um so I host a podcast called elixir",
    "start": "52079",
    "end": "60000"
  },
  {
    "text": "Fountain have anybody heard of it listen to it enjoy it love it okay one nice okay well I would say",
    "start": "60000",
    "end": "68720"
  },
  {
    "text": "everybody go out there and check it out it's on Soundcloud you can also get it on whatever favorite app you have for",
    "start": "68720",
    "end": "73799"
  },
  {
    "text": "podcast it's available uh there's an RSS feed uh currently I work at imbala power",
    "start": "73799",
    "end": "79200"
  },
  {
    "text": "networks uh I really enjoy what I do we're actually building virtual power plants to manage renewable resources uh",
    "start": "79200",
    "end": "85880"
  },
  {
    "text": "it's a very complex thing to handle there's a lot of in ins and outs and uh",
    "start": "85880",
    "end": "91840"
  },
  {
    "text": "actually I'll probably talk quite a bit more about that tomorrow if you come to the talk on coyote uh basically these",
    "start": "91840",
    "end": "98360"
  },
  {
    "text": "systems are large uh you know they're distributed systems that have to calculate cost and try to find the most",
    "start": "98360",
    "end": "104840"
  },
  {
    "text": "effective way to use these resources to handle grid problems now as far as Elixir goes I've",
    "start": "104840",
    "end": "111079"
  },
  {
    "text": "been using Elixir for just over four years now yes I'm one of the few people",
    "start": "111079",
    "end": "116640"
  },
  {
    "text": "that started way a long time ago I I know last year believe it was at NDC Oslo the my Elixir status hashtag was",
    "start": "116640",
    "end": "124560"
  },
  {
    "text": "like the second top hashtag or something like that from people coming from here or something I remember seeing a post on it I actually started that several years",
    "start": "124560",
    "end": "131280"
  },
  {
    "text": "ago as a way to help kind of bring everybody together because not only is elixir a great language for doing",
    "start": "131280",
    "end": "137680"
  },
  {
    "text": "distributed uh programming but it's also was a very distributed Network like everybody was scattered around we were",
    "start": "137680",
    "end": "144040"
  },
  {
    "text": "all kind of like all over the place it kind of sometimes felt like there was five of us all chatting and the elixir Fountain started",
    "start": "144040",
    "end": "150560"
  },
  {
    "text": "as a newsletter to try to drum up kind of interest in Elixir and so it was really hard to find articles uh back in",
    "start": "150560",
    "end": "158800"
  },
  {
    "text": "that day if you Googled Elixir chances are you were going to either find uh Elixir strings if anybody plays guitar",
    "start": "158800",
    "end": "165599"
  },
  {
    "text": "there's Elixir strings um that came up all the time there's also and of course if you Google Ruby Elixir there's a club",
    "start": "165599",
    "end": "172319"
  },
  {
    "text": "in Tampa Florida called Ruby's Elixir that came up all the time so needless to",
    "start": "172319",
    "end": "177920"
  },
  {
    "text": "say I spent hours trying to find articles and searching for the few things that were out there and so what I",
    "start": "177920",
    "end": "183159"
  },
  {
    "text": "did is I came up with the hashtag my Elixir status if you're doing something in Elixir or if you want to find help",
    "start": "183159",
    "end": "188640"
  },
  {
    "text": "with something you can tweet something with my Elixir status and people will follow it uh I tend to retweet those",
    "start": "188640",
    "end": "195640"
  },
  {
    "text": "quite a bit from The Elixir Fountain Twitter account so if you're out there if you're learning Elixir uh that's a",
    "start": "195640",
    "end": "200799"
  },
  {
    "text": "great place to start you can find tons of Articles and things like that there's also several newsletters out there including one from platform Tech Elixir",
    "start": "200799",
    "end": "207879"
  },
  {
    "text": "radar and there's Elixir weekly uh the these are all great sources for learning",
    "start": "207879",
    "end": "213280"
  },
  {
    "text": "now before we get too far into this I have a little",
    "start": "213280",
    "end": "218879"
  },
  {
    "text": "disclaimer I'm not a big fan of intro to language X talks um mainly because they're kind of",
    "start": "218879",
    "end": "226680"
  },
  {
    "text": "very specific and I came up with this idea for this talk called What to Expect When You're Elixir based on the idea",
    "start": "226680",
    "end": "234000"
  },
  {
    "text": "that how many people have kids how many people have one kid two",
    "start": "234000",
    "end": "240680"
  },
  {
    "text": "3 4 5 6",
    "start": "240680",
    "end": "246360"
  },
  {
    "text": "7 I been there once or twice but one thing that I noticed oh",
    "start": "246360",
    "end": "254239"
  },
  {
    "text": "sorry my feed sto there for a second okay um one thing I noticed it's there",
    "start": "254799",
    "end": "260359"
  },
  {
    "text": "is kind of a bit of a parallel between when you're going to you know have a kid and when you're learning a new",
    "start": "260359",
    "end": "266120"
  },
  {
    "text": "language by no means are you creating life but you're learning something new and everything else out there is very",
    "start": "266120",
    "end": "271960"
  },
  {
    "text": "generic it's like well you know if you know trimester 1 expect this trimester",
    "start": "271960",
    "end": "277680"
  },
  {
    "text": "two expect that oh they don't bother to tell you that once they turn 18 it's a whole another ball game by the way I",
    "start": "277680",
    "end": "283680"
  },
  {
    "text": "have two 20-year- olds um so you know it's like everything is so generalized that you don't really get",
    "start": "283680",
    "end": "290360"
  },
  {
    "text": "much out of it like maybe you kind of spark a little interest maybe you kind of pick up something here and",
    "start": "290360",
    "end": "296199"
  },
  {
    "text": "there but now there's a funny story I've got for this is that so my daughter",
    "start": "296199",
    "end": "302120"
  },
  {
    "text": "who's 10 now so this is 10 years ago you know of course my wife has read several of the books and all that kind of stuff",
    "start": "302120",
    "end": "308039"
  },
  {
    "text": "and I've read a few of them myself when she was born we decided to do a home birth how many people have had a home",
    "start": "308039",
    "end": "315039"
  },
  {
    "text": "birth on purpose not on accident um so as we're going through this whole thing",
    "start": "315039",
    "end": "321199"
  },
  {
    "text": "and I feel at this point now I have several children that I kind of know my responsibilities I know what I'm supposed to do well then my wife decides",
    "start": "321199",
    "end": "328160"
  },
  {
    "text": "we're going to do a home birth and so was a whole another ball game we're going to a midwife we have a doula and all sorts of things like that but I'm",
    "start": "328160",
    "end": "334759"
  },
  {
    "text": "still feeling pretty confident in what I know the day my daughter was",
    "start": "334759",
    "end": "341160"
  },
  {
    "text": "born so that evening the night before my wife was starting to not feel so good",
    "start": "341160",
    "end": "346199"
  },
  {
    "text": "but she wasn't sure what was she's like maybe I just need to sleep maybe I need to rest whatever I said that's fine she",
    "start": "346199",
    "end": "352199"
  },
  {
    "text": "wakes me up at 7:00 in the morning and she's like I've been up all night and I think I've been having contractions and",
    "start": "352199",
    "end": "357800"
  },
  {
    "text": "they haven't been you know going going so well I think they're pretty close I well how close are they she like well",
    "start": "357800",
    "end": "363759"
  },
  {
    "text": "about you know every 10 minutes or so or something like that and I was like well how long has that been going on uh the",
    "start": "363759",
    "end": "369639"
  },
  {
    "text": "past couple hours did you call the Midwife no I didn't want to bug her it's the middle of the",
    "start": "369639",
    "end": "375919"
  },
  {
    "text": "night so I was like let's Call the Midwife so we called the Midwife this is my wife on the",
    "start": "375919",
    "end": "381479"
  },
  {
    "text": "phone uh-huh okay all right oh yeah I'll let you talk",
    "start": "381479",
    "end": "388520"
  },
  {
    "text": "to him hands me the phone the mid wife gets on the phone she is having that baby any second now you better get ready",
    "start": "388520",
    "end": "393919"
  },
  {
    "text": "cuz you're going to be getting that baby I'm trying to get there as fast as I can but I don't know if I'm going be able to get there in a time all of a sudden all",
    "start": "393919",
    "end": "399599"
  },
  {
    "text": "that introductory knowledge that I had went out the door now I am getting ready to birth a baby which I have never done",
    "start": "399599",
    "end": "406680"
  },
  {
    "text": "before and actually I didn't end up having to do it that time either luckily the Midwife showed up at the door but",
    "start": "406680",
    "end": "413400"
  },
  {
    "text": "any case so that brings me to when I came to sit down and write this talk now the",
    "start": "413400",
    "end": "420199"
  },
  {
    "text": "conference uh organizers is going to love me because I don't actually have any slides I wrote the entire talk using",
    "start": "420199",
    "end": "427199"
  },
  {
    "text": "Elixir basically I have one application that runs in the background on one node and I have another application that runs",
    "start": "427199",
    "end": "433680"
  },
  {
    "text": "in the foreground on another node it's actually what's going to be displaying things and talking to you the one in the",
    "start": "433680",
    "end": "440160"
  },
  {
    "text": "background is actually going to be doing all the work and we're going to do some kind of cool things because honestly I",
    "start": "440160",
    "end": "446280"
  },
  {
    "text": "can show you and I will some of the basics will cover the the basics just so everybody gets an idea but I want to",
    "start": "446280",
    "end": "452560"
  },
  {
    "text": "show you some of the cooler features some of the features that I enjoy and really I'll kind of go into more depth",
    "start": "452560",
    "end": "458039"
  },
  {
    "text": "on them tomorrow if you come to the talk but this is actually kind of a good little quick view of",
    "start": "458039",
    "end": "463080"
  },
  {
    "text": "them so let's tell Victoria that it's",
    "start": "463080",
    "end": "471000"
  },
  {
    "start": "474000",
    "end": "545000"
  },
  {
    "text": "time there what is elixir so essentially elixir is a",
    "start": "474319",
    "end": "480120"
  },
  {
    "text": "dynamic functional Language by the way most of these like basic slides I stole from the uh getting",
    "start": "480120",
    "end": "488599"
  },
  {
    "text": "started site C to the getting started site it's a great site great material it's easy to follow it's easy to get",
    "start": "488599",
    "end": "495240"
  },
  {
    "text": "through but it's basically it's a dynamic uh functional language built on the earling virtual",
    "start": "495240",
    "end": "501800"
  },
  {
    "text": "machine you get to take advantage of all the power that erlang has without necessarily having to write earling how",
    "start": "501800",
    "end": "508960"
  },
  {
    "text": "how many people had to write earling how many people enjoy writing earling I do too we're like the few out",
    "start": "508960",
    "end": "515919"
  },
  {
    "text": "there most people are like oh I can't stand the syntax but it's it's not that bad I don't mind it um and I'm you know",
    "start": "515919",
    "end": "521839"
  },
  {
    "text": "I kind of side with the uh Joe Armstrong idea where it's syntax really doesn't matter if you enjoy it you enjoy it if",
    "start": "521839",
    "end": "528480"
  },
  {
    "text": "not you not it's not that big of a deal so but like I said Elixir is great for",
    "start": "528480",
    "end": "534640"
  },
  {
    "text": "scalability fault tolerance which we're going to see some of that stuff uh really cool features that the language",
    "start": "534640",
    "end": "540240"
  },
  {
    "text": "has built into it because it was written on beam now basic types and cuties I love",
    "start": "540240",
    "end": "549160"
  },
  {
    "start": "545000",
    "end": "689000"
  },
  {
    "text": "that voice because it's like just so monotone because I'm like basic types hey guess what guys Elixir has",
    "start": "549160",
    "end": "555760"
  },
  {
    "text": "types like every other language out there um so yeah so we have integers of",
    "start": "555760",
    "end": "561200"
  },
  {
    "text": "course we have binaries uh now one kind of little thing to note is that",
    "start": "561200",
    "end": "566959"
  },
  {
    "text": "everything you can actually compare one type to another type if if you see on there",
    "start": "566959",
    "end": "573440"
  },
  {
    "text": "everything has its place numbers being the smallest we go all the way up to bit strings but you can actually compare one",
    "start": "573440",
    "end": "580440"
  },
  {
    "text": "value against another even though they're different types and see which one's greater now atoms is one of those",
    "start": "580440",
    "end": "586240"
  },
  {
    "text": "tricky bits that we want to talk about because they are not garbage",
    "start": "586240",
    "end": "591839"
  },
  {
    "text": "collected now if anybody's used other languages that have symbols things like that the name is actually the value of",
    "start": "591839",
    "end": "597640"
  },
  {
    "text": "the uh of the atom and those aren't garbage collected those are written in local history and so it stays there they",
    "start": "597640",
    "end": "603800"
  },
  {
    "text": "never go away this is one of the things that you want to keep in mind because you only",
    "start": "603800",
    "end": "609240"
  },
  {
    "text": "have 1, 48,5 76 of those now you can configure",
    "start": "609240",
    "end": "615160"
  },
  {
    "text": "that and of course that includes all the atoms that the system already has so you don't want to let users generate atoms",
    "start": "615160",
    "end": "621880"
  },
  {
    "text": "because you can do that now one of the things that you can do when you're trying to protect yourself from things like that if you'll notice in my example",
    "start": "621880",
    "end": "628160"
  },
  {
    "text": "code is we have the atom atom and we can say two existing atom which means it's",
    "start": "628160",
    "end": "633360"
  },
  {
    "text": "going to reuse the atom that's there if we try to use the two existing atom on",
    "start": "633360",
    "end": "638519"
  },
  {
    "text": "and create an atom based on a binary that doesn't exist it's actually going to throw us an error and say no that",
    "start": "638519",
    "end": "644560"
  },
  {
    "text": "doesn't there not there now because you can do string to atom but that goes back to that you're generating atoms and if",
    "start": "644560",
    "end": "651120"
  },
  {
    "text": "you're doing that dynamically based on user input somebody could pound your system now of course you're going to run",
    "start": "651120",
    "end": "657160"
  },
  {
    "text": "out of the number of atoms before you run out of the number much memory but if you're in there tweaking your configuration to where you're bumping",
    "start": "657160",
    "end": "662800"
  },
  {
    "text": "that up you could run into problems lists lists are another thing",
    "start": "662800",
    "end": "668760"
  },
  {
    "text": "how many people have done functional programming before nice okay so you're familiar with",
    "start": "668760",
    "end": "673800"
  },
  {
    "text": "list we won't cover it too much this is basically what a list is it's a list of lists uh going all the way down but you",
    "start": "673800",
    "end": "679839"
  },
  {
    "text": "can do things like grab the head you can do pattern matching on that to grab the first element in a list it's really easy to get through um let's see",
    "start": "679839",
    "end": "689760"
  },
  {
    "start": "689000",
    "end": "774000"
  },
  {
    "text": "Anonymous functions ah now we're getting to the good stuff Anonymous functions so now",
    "start": "689760",
    "end": "697279"
  },
  {
    "text": "functions in uh functions in Elixir and an earling are identified by the name and the aity so there there's a couple",
    "start": "697279",
    "end": "703760"
  },
  {
    "text": "cool things that we can do with this now yes we can create Anonymous functions you can actually pass them around you",
    "start": "703760",
    "end": "709079"
  },
  {
    "text": "can set them to uh uh you can match them to variables or bind them to variables and then pass those in as arguments uh",
    "start": "709079",
    "end": "714959"
  },
  {
    "text": "to be executed later um but one of the cool things and there's also a syntax on I don't know if",
    "start": "714959",
    "end": "721560"
  },
  {
    "text": "you're familiar with it if if you do know Elixir uh is the the shorthand for",
    "start": "721560",
    "end": "726880"
  },
  {
    "text": "uh Anonymous functions where you just use the ersin and you actually give the number argument that you're passing in",
    "start": "726880",
    "end": "732800"
  },
  {
    "text": "so if the first if you're passing in one an aity of one you can do erson one and that'll give you that",
    "start": "732800",
    "end": "739199"
  },
  {
    "text": "value and then of course you can execute it by calling dot PRS passing it a",
    "start": "739199",
    "end": "745079"
  },
  {
    "text": "pram um as far as the actual aity goes we can do",
    "start": "745079",
    "end": "751160"
  },
  {
    "text": "one of the things that we can do is as we're actually looping over we can pass in an Amper understand the name slash",
    "start": "751639",
    "end": "756680"
  },
  {
    "text": "theity and that actually passes that function in so you can pass like if you're mapping over something you can",
    "start": "756680",
    "end": "762399"
  },
  {
    "text": "actually iterate over and it'll call that function for you over and over again um that's pretty common it's in",
    "start": "762399",
    "end": "769320"
  },
  {
    "text": "the earling and uh we use it a lot and you'll probably see it some in some of this code grouping code and",
    "start": "769320",
    "end": "776440"
  },
  {
    "text": "modules now modules this is one of the things about functions that's that's",
    "start": "776440",
    "end": "782360"
  },
  {
    "text": "kind of odd is that uh you know Anonymous function you can use anywhere if you open up IEX you can create an",
    "start": "782360",
    "end": "787519"
  },
  {
    "text": "anonymous function execute it no problem a named function on the other hand has to be grouped in modules now one of the",
    "start": "787519",
    "end": "794959"
  },
  {
    "text": "first things if you come from an objectoriented language object oriented background or objectoriented language",
    "start": "794959",
    "end": "800440"
  },
  {
    "text": "you see modules you think class it's not a class it's just a grouping of similar",
    "start": "800440",
    "end": "805839"
  },
  {
    "text": "or functions with similar functionality or for purpose now we can create one here's a",
    "start": "805839",
    "end": "812440"
  },
  {
    "text": "simple one where we just create a math uh one of the things that we're doing in this in this module that we created is",
    "start": "812440",
    "end": "817880"
  },
  {
    "text": "we have two functions uh zero uh question mark where one we've actually set zero and so if it's zero if the",
    "start": "817880",
    "end": "825160"
  },
  {
    "text": "value is zero it's going to be true because we're asking if it's zero if it's anything else and that's an integer",
    "start": "825160",
    "end": "830639"
  },
  {
    "text": "it's going to be false so we're doing some pattern matching there on our actual aity to say if a zero gets passed",
    "start": "830639",
    "end": "836880"
  },
  {
    "text": "in we know always what it is so we can kind of get around using some conditionals like if although ifs are",
    "start": "836880",
    "end": "841920"
  },
  {
    "text": "there they do use them I try to not um but",
    "start": "841920",
    "end": "847800"
  },
  {
    "text": "now let's take a break everybody",
    "start": "847800",
    "end": "852959"
  },
  {
    "text": "ready come on y'all let's go you guys look so come on this is a fun conference",
    "start": "852959",
    "end": "858079"
  },
  {
    "text": "right everybody's having a good time right yes we're having a good time so I",
    "start": "858079",
    "end": "863600"
  },
  {
    "text": "gave a talk in Sweden last week and it's funny because it was the same thing everybody just kind of mhm mhm and you",
    "start": "863600",
    "end": "869720"
  },
  {
    "text": "got to get come on interactive feel free to ask questions too I don't mind I actually had this whole thing timed to",
    "start": "869720",
    "end": "875800"
  },
  {
    "text": "where Victoria would actually push me to keep going through because I don't know if you noticed this but I tend to talk a",
    "start": "875800",
    "end": "881279"
  },
  {
    "text": "lot um so I had her kind of going through I was like this is never going to work CU I'm going to be off time all the time I'm going to be constantly",
    "start": "881279",
    "end": "887360"
  },
  {
    "text": "having her go back and stuff like that so let's take a little bit of a break",
    "start": "887360",
    "end": "893680"
  },
  {
    "text": "and we're going to actually look at some code because we're going to need this later everybody can see this all right",
    "start": "893680",
    "end": "902759"
  },
  {
    "text": "right the Beloved Fibonacci scale so what we're going to actually do is I",
    "start": "903759",
    "end": "909600"
  },
  {
    "text": "have this class or this module called sequencer and we're going to actually determine uh sequence of Fibonacci",
    "start": "909600",
    "end": "915959"
  },
  {
    "text": "numbers based on a link that we used pass in now I also want to introduce you to xunit which xunit is basically the",
    "start": "915959",
    "end": "922800"
  },
  {
    "text": "testing framework uh so we can actually write our tests we can execute our test and of course I've got them all comment",
    "start": "922800",
    "end": "928279"
  },
  {
    "text": "and out because as you notice if there's one fun thing about our Fibonacci function right now guess what it always",
    "start": "928279",
    "end": "935399"
  },
  {
    "text": "passes because we've hardcoded values come on interactive yeah um so we kind",
    "start": "935399",
    "end": "942800"
  },
  {
    "text": "of want to get this to pass but before I do that I want to make a note of something on line three the dock test",
    "start": "942800",
    "end": "950160"
  },
  {
    "text": "one of the things that we do is we actually have dock tests so if you'll notice in the actual sequencer there's",
    "start": "950160",
    "end": "956399"
  },
  {
    "text": "on line nine we're actually executing the code well the doc test will actually execute that code so if at any point in",
    "start": "956399",
    "end": "962800"
  },
  {
    "text": "time the code changes and that is not true we will actually get an error so we know that our documentation needs to be",
    "start": "962800",
    "end": "968639"
  },
  {
    "text": "updated and or we broke something in the code it's kind of Handy that makes sure your docs are always right because",
    "start": "968639",
    "end": "975199"
  },
  {
    "text": "everybody loves writing docs right yes no um so let's run this real quick",
    "start": "975199",
    "end": "984639"
  },
  {
    "text": "just so that everybody knows that I am running",
    "start": "984639",
    "end": "990000"
  },
  {
    "text": "it we run it with mix test now mix is a a toolkit that basically does a lot of",
    "start": "990000",
    "end": "995319"
  },
  {
    "text": "the stuff when we create projects uh we run our code we have mixed tasks that actually can be written you can do",
    "start": "995319",
    "end": "1000519"
  },
  {
    "text": "custom tasks when you're actually trying to do some things um there's a lot of custom tasks when you look at libraries",
    "start": "1000519",
    "end": "1006519"
  },
  {
    "text": "like Ecto and things like that where they're actually doing like your migrations or you're you know running other process that you want that kind of",
    "start": "1006519",
    "end": "1012079"
  },
  {
    "text": "run outside the scope of your application mix test is one that you will use often hey look our test pass",
    "start": "1012079",
    "end": "1019240"
  },
  {
    "text": "let's ship it right let's do",
    "start": "1019240",
    "end": "1024520"
  },
  {
    "text": "this we'll add one more test now so we're just going to basically assert that we have what we think we should",
    "start": "1024520",
    "end": "1029798"
  },
  {
    "text": "have when we pass a length of six so that means we want six",
    "start": "1029799",
    "end": "1035240"
  },
  {
    "text": "numbers oh did I save it so it's funny and I don't know how",
    "start": "1036360",
    "end": "1041520"
  },
  {
    "text": "many of you are emac or space Max users it doesn't either way but yes everything on the screen is big but if you look at",
    "start": "1041520",
    "end": "1048199"
  },
  {
    "text": "the very bottom that's what I'm trying to like and the very bottom is actually where it tells me whether or not I",
    "start": "1048199",
    "end": "1053400"
  },
  {
    "text": "actually wrote the file um so anyway so no I didn't not write at that time this",
    "start": "1053400",
    "end": "1058919"
  },
  {
    "text": "Oh see it's broken well I'll begin to call it two in the morning so let's go fix this now one",
    "start": "1058919",
    "end": "1067000"
  },
  {
    "text": "of the things that we did with or I did with this function was I actually underscored in front of the parameter meaning that I don't really care about",
    "start": "1067000",
    "end": "1073120"
  },
  {
    "text": "this value if on one hand I took this out and tried to run this I would",
    "start": "1073120",
    "end": "1078840"
  },
  {
    "text": "actually get a thing saying unused parameter hey you did something wrong uh so if you H are passing in parameters",
    "start": "1078840",
    "end": "1085559"
  },
  {
    "text": "and you don't care about them you want to ignore them you just underscore them and then it tends to uh uh and then it",
    "start": "1085559",
    "end": "1090919"
  },
  {
    "text": "doesn't worry about them at all now this is also true in pattern matching so say you're trying to get the head and you",
    "start": "1090919",
    "end": "1096320"
  },
  {
    "text": "don't really care about the end of the list you can just do head pipe symbol underscore and then it'll match and then",
    "start": "1096320",
    "end": "1103080"
  },
  {
    "text": "it'll put the head in head and everything else will just be ignored",
    "start": "1103080",
    "end": "1108799"
  },
  {
    "text": "so now let's see here now we need to",
    "start": "1111280",
    "end": "1117200"
  },
  {
    "text": "actually culate want to pass our length and we're",
    "start": "1117200",
    "end": "1122640"
  },
  {
    "text": "going to start this by giving it an empty list to fill so",
    "start": "1122640",
    "end": "1129080"
  },
  {
    "text": "when we do this now let's run it just to make",
    "start": "1129080",
    "end": "1134120"
  },
  {
    "text": "sure we should have a passing test",
    "start": "1134120",
    "end": "1139120"
  },
  {
    "text": "and actually because I'm so handy for y'all",
    "start": "1139240",
    "end": "1146559"
  },
  {
    "text": "there we can get them all passing yay let's kind of evaluate this a little bit",
    "start": "1146559",
    "end": "1152960"
  },
  {
    "text": "so we have a module that we've now added our primary function which is the Fibonacci where we pass in a length",
    "start": "1152960",
    "end": "1159799"
  },
  {
    "text": "that's going to be actually our public API for this module it's going to let us everything else is private we have two",
    "start": "1159799",
    "end": "1165520"
  },
  {
    "text": "types of name functions we have uh def def 2 and Def P2 remember I said name",
    "start": "1165520",
    "end": "1171600"
  },
  {
    "text": "and arity uh so our private functions can't be called from from outside this",
    "start": "1171600",
    "end": "1176960"
  },
  {
    "text": "module or outside the context of this module but our public ones can be so in our case what we actually",
    "start": "1176960",
    "end": "1184200"
  },
  {
    "text": "did is we call the function calculate with passing it length with an empty",
    "start": "1184200",
    "end": "1189520"
  },
  {
    "text": "string the first time it's there we know what it's going to be it's going to be zero so we put this Z zero in uh and",
    "start": "1189520",
    "end": "1195480"
  },
  {
    "text": "then we actually kind of have an accumulator that's kind of building that list for us uh remember I said that we can underscore if we don't care about the",
    "start": "1195480",
    "end": "1201679"
  },
  {
    "text": "end of the list well see in our pattern matching on line 23 what I did was I wanted the first two values and then I",
    "start": "1201679",
    "end": "1207840"
  },
  {
    "text": "don't care about anything else so I can set those to A and B and I can kind of move forward from there and then I can you know add them on and add them to the",
    "start": "1207840",
    "end": "1214320"
  },
  {
    "text": "list and then we just iterate over and of course at the end our list is reversed so we need to go ahead and reverse it so that we have the list",
    "start": "1214320",
    "end": "1220880"
  },
  {
    "text": "looking the way we want it to look never mind what's on 29 we'll get to that",
    "start": "1220880",
    "end": "1226240"
  },
  {
    "text": "later everything else you can pay attention to so that is a trip through some modules",
    "start": "1226240",
    "end": "1233200"
  },
  {
    "text": "and a look at some testing what's",
    "start": "1233200",
    "end": "1238960"
  },
  {
    "text": "next graduating to processes processes what everybody loves",
    "start": "1242840",
    "end": "1249480"
  },
  {
    "start": "1243000",
    "end": "1589000"
  },
  {
    "text": "right so one of the things that you have to get used to really quick in Elixir is dealing with supervision trees and gen",
    "start": "1249480",
    "end": "1256159"
  },
  {
    "text": "servers and or and supervis visors this entire application is",
    "start": "1256159",
    "end": "1262120"
  },
  {
    "text": "dependent on understanding how those work now we can create a basic gen",
    "start": "1262120",
    "end": "1267360"
  },
  {
    "text": "server and in fact our our mailbox for our session app the the session app that's in the front all it is is a gen",
    "start": "1267360",
    "end": "1273279"
  },
  {
    "text": "server that's see she gets impatient and she just moves on to the next thing um so",
    "start": "1273279",
    "end": "1282080"
  },
  {
    "text": "the way we do that is we use gen server and then we actually have a start link which we can connect using the super",
    "start": "1282080",
    "end": "1288559"
  },
  {
    "text": "supervisor which we'll see in a second and then we call gen server. start link we give it the module that it's in uh we",
    "start": "1288559",
    "end": "1295200"
  },
  {
    "text": "can pass in anything that we want it startup and then we can use either a name and in this case we're using the",
    "start": "1295200",
    "end": "1300880"
  },
  {
    "text": "module which it the name can be any atom",
    "start": "1300880",
    "end": "1305960"
  },
  {
    "text": "and actually have them listed out it can be an atom which module names or atoms",
    "start": "1305960",
    "end": "1312080"
  },
  {
    "text": "uh it can be the global term if you want to do like a register globally you can also use the Via uh via Tuple which the",
    "start": "1312080",
    "end": "1319240"
  },
  {
    "text": "Via Tuple is actually really convenient and if you use gpro which allows you to Global globally register uh um processes",
    "start": "1319240",
    "end": "1327000"
  },
  {
    "text": "you can actually use the name gpro is built on ETS which is the short-term",
    "start": "1327000",
    "end": "1332480"
  },
  {
    "text": "inmemory storage and it'll actually record the name of it matched up with the uh PID so if the pit dies if your",
    "start": "1332480",
    "end": "1339559"
  },
  {
    "text": "process dies and has to restart it's still still uses the name you can get the you can still get the process a new",
    "start": "1339559",
    "end": "1345880"
  },
  {
    "text": "process whichever one it goes through those are little little bit out of scope of the beginner track we'll get to those",
    "start": "1345880",
    "end": "1352279"
  },
  {
    "text": "maybe in another Advanced one um",
    "start": "1352279",
    "end": "1358919"
  },
  {
    "text": "callbacks now there's actually six callbacks that are important that you actually have to implement but when you",
    "start": "1358919",
    "end": "1366200"
  },
  {
    "text": "use gen server the nice thing is is those are already kind of taken care of for you you don't have to worry about it the main ones to focus on are the handle",
    "start": "1366200",
    "end": "1372520"
  },
  {
    "text": "call handle cast and handle info uh the I use these all the time you kind of",
    "start": "1372520",
    "end": "1377600"
  },
  {
    "text": "have to uh handle call is actually when you want to do your synchronous call so if you're actually wanting data back if",
    "start": "1377600",
    "end": "1383240"
  },
  {
    "text": "you don't care about it you just want to push something to a process and let it deal with it you can use cast if you want to send a generic message to it uh",
    "start": "1383240",
    "end": "1390600"
  },
  {
    "text": "you can use handle info now that being said you can send any message you want to a process if the process doesn't know",
    "start": "1390600",
    "end": "1398559"
  },
  {
    "text": "how to handle it you're going to get an error that it's got a message that it doesn't know how to deal with so what you end up having to do is you end up",
    "start": "1398559",
    "end": "1404840"
  },
  {
    "text": "doing a catch-all to say hey if I get this and I don't know what to do with it um just ignore or move on or if you want",
    "start": "1404840",
    "end": "1411120"
  },
  {
    "text": "to say heyy you shouldn't have been sending me that why did you send that uh you can do that as well um this is",
    "start": "1411120",
    "end": "1416520"
  },
  {
    "text": "actually really handy when uh using something like gen event because gen event is basically a gen server you can",
    "start": "1416520",
    "end": "1421960"
  },
  {
    "text": "Implement uh events on your own in gen or in gen server but the idea is you're going to",
    "start": "1421960",
    "end": "1427760"
  },
  {
    "text": "be passing messages and you want to make sure that you deal with if you pass a message that you don't know how to deal with you want to know what to do now",
    "start": "1427760",
    "end": "1434200"
  },
  {
    "text": "that might be just ignoring it all together which I do a lot of times uh because if you don't know what to do",
    "start": "1434200",
    "end": "1439520"
  },
  {
    "text": "with it why bother um you don't necessarily know where to send it so our",
    "start": "1439520",
    "end": "1445799"
  },
  {
    "text": "supervisors now of course as you would imagine a supervisor is pretty critical for a",
    "start": "1445799",
    "end": "1451120"
  },
  {
    "text": "supervision tree but you actually add gen servers and you can add events and things like that to uh as workers to",
    "start": "1451120",
    "end": "1458039"
  },
  {
    "text": "your supervisors to kind of build out a supervision tree and in our case one of the things that we're going to see a little bit of is we have a supervisor",
    "start": "1458039",
    "end": "1464960"
  },
  {
    "text": "that not only monitors processes but it also monitors other super another",
    "start": "1464960",
    "end": "1470039"
  },
  {
    "text": "supervisor which monitors other processes so you tend to get this tree structure built out uh one of the things",
    "start": "1470039",
    "end": "1475960"
  },
  {
    "text": "that I'll show you is a handy tool that's provided by the beam called Observer so you can actually see all",
    "start": "1475960",
    "end": "1482559"
  },
  {
    "text": "your processes and see which ones are there comes in real handy when you get those straight processes that aren't dying and you don't know why and you see",
    "start": "1482559",
    "end": "1488919"
  },
  {
    "text": "that they're all there and you're like oh maybe I did something wrong I forgot to kill a process um so but here's a",
    "start": "1488919",
    "end": "1495240"
  },
  {
    "text": "quick look cuz what we're going to look at today there's another way to do super supervisors you can actually do a supervisor spec if you create a new",
    "start": "1495240",
    "end": "1501399"
  },
  {
    "text": "project with a supervisor it'll be an application and you'll see supervisor. speec that's a different way but what",
    "start": "1501399",
    "end": "1508080"
  },
  {
    "text": "we're going to be most or looking at most today is going to be the module version uh where we actually use",
    "start": "1508080",
    "end": "1513720"
  },
  {
    "text": "supervisor we have a start link it basically follows the same patterns as",
    "start": "1513720",
    "end": "1520320"
  },
  {
    "text": "gen server where you have a name you can name it the module or you can name it the adom same thing uh you provide the",
    "start": "1520320",
    "end": "1526200"
  },
  {
    "text": "children which in our case we have this background calculator for our sequencer I told you it's going to get good trust",
    "start": "1526200",
    "end": "1531520"
  },
  {
    "text": "me um now one thing to note on here is the restart for this so you have",
    "start": "1531520",
    "end": "1537080"
  },
  {
    "text": "different types of restarts when you're when you're supervising these workers you can do permanent which means",
    "start": "1537080",
    "end": "1543120"
  },
  {
    "text": "if the process dies always restarts uh you can do temporary or in our case you can do transient what transient means is",
    "start": "1543120",
    "end": "1550919"
  },
  {
    "text": "that we don't necessarily want to start a process we only want to start a process when we're actually trying to",
    "start": "1550919",
    "end": "1557120"
  },
  {
    "text": "calculate something so we're going to actually tell it to calculate it's going to spin up a new process that'll handle",
    "start": "1557120",
    "end": "1562399"
  },
  {
    "text": "the calculation and then when it's done it'll die and it'll go away and drop out of the tree uh why is that handy well",
    "start": "1562399",
    "end": "1569360"
  },
  {
    "text": "when you think about the cases where you have these long running calculations that you don't necessarily want to",
    "start": "1569360",
    "end": "1574440"
  },
  {
    "text": "bottleneck the app you can spin up a process send it somewhere and start letting it do its work and then when the next request comes in you spin up",
    "start": "1574440",
    "end": "1580399"
  },
  {
    "text": "another one and uh have it execute a different calculation uh maybe with different",
    "start": "1580399",
    "end": "1586480"
  },
  {
    "text": "parameters so message passing in state ah",
    "start": "1586480",
    "end": "1593640"
  },
  {
    "start": "1589000",
    "end": "2069000"
  },
  {
    "text": "state so I want to quote Joe Armstrong here and say that earling is the only",
    "start": "1593640",
    "end": "1600880"
  },
  {
    "text": "true objectoriented language because it's all about message",
    "start": "1600880",
    "end": "1605960"
  },
  {
    "text": "passing so these processes actually manage their own State uh you'll see when you use when you create a gen",
    "start": "1605960",
    "end": "1612320"
  },
  {
    "text": "server that it always every every one of your uh call backs for like your handle call handle cast everything they always",
    "start": "1612320",
    "end": "1617559"
  },
  {
    "text": "have state as the last uh last argument sorry she she gets so impatient",
    "start": "1617559",
    "end": "1623600"
  },
  {
    "text": "she just tries to rush me through this um it's actually good because it keeps me on track a little bit um so in our",
    "start": "1623600",
    "end": "1629760"
  },
  {
    "text": "case right here we're going to have the uh our our gen server itself when it starts up we're going to initiate it",
    "start": "1629760",
    "end": "1635480"
  },
  {
    "text": "with some State we know that our first step is going to be the intro uh you guys already had that we've already had",
    "start": "1635480",
    "end": "1641760"
  },
  {
    "text": "uh the first examples um and we're going to pause it there so that it doesn't continue running through the script um",
    "start": "1641760",
    "end": "1650320"
  },
  {
    "text": "and then of course we have our handle info because these messages are actually being sent in uh from um from the",
    "start": "1650320",
    "end": "1658480"
  },
  {
    "text": "session or the session on a different node to say hey go do this thing and then it'll kind of run through it um if",
    "start": "1658480",
    "end": "1665360"
  },
  {
    "text": "you notice we have our send do at the end of our call back we have",
    "start": "1665360",
    "end": "1671519"
  },
  {
    "text": "to do no reply because like I said info is just an inbound message so we have to",
    "start": "1671519",
    "end": "1676720"
  },
  {
    "text": "tell it you're not reply find anything and you're passing back the state now in",
    "start": "1676720",
    "end": "1681799"
  },
  {
    "text": "the case we do a call we would actually have a reply what we wanted to get back and then the state in a cast we also do",
    "start": "1681799",
    "end": "1689279"
  },
  {
    "text": "the no reply and then passing a state now in our case we want to use our state is actually a map which it tells us what",
    "start": "1689279",
    "end": "1696399"
  },
  {
    "text": "the current step is and the next step is and whether or not it's paused so we want to update that state at the end of",
    "start": "1696399",
    "end": "1701799"
  },
  {
    "text": "this handle info to say hey we have a new state processes are the only one that",
    "start": "1701799",
    "end": "1707519"
  },
  {
    "text": "that can actually um update their state you cannot update the state of a process from outside you",
    "start": "1707519",
    "end": "1713600"
  },
  {
    "text": "have to call into it to make changes to it so in some weird",
    "start": "1713600",
    "end": "1719480"
  },
  {
    "text": "way it's kind of like a class but it's not it's not uh but it is kind of funny",
    "start": "1719480",
    "end": "1725320"
  },
  {
    "text": "that like you know it it's all about State when it comes to processes now there's three ways to call into it or",
    "start": "1725320",
    "end": "1731799"
  },
  {
    "text": "three ways to to send a message to a process that we want to look at uh one of them being send which sends a message",
    "start": "1731799",
    "end": "1737600"
  },
  {
    "text": "to a process process that's the one that's going to hit your handle info uh the send after will also hit your handle",
    "start": "1737600",
    "end": "1744000"
  },
  {
    "text": "info but it allows you to send it at a later time so say uh you know you're",
    "start": "1744000",
    "end": "1749200"
  },
  {
    "text": "executing something and you know at some point you're going to want to send a message to a different process or back to yourself uh you can give it a time",
    "start": "1749200",
    "end": "1756080"
  },
  {
    "text": "frame so some some of these like if you're doing a timer every 5 seconds or so you want to send a message you can",
    "start": "1756080",
    "end": "1761840"
  },
  {
    "text": "actually give it the 5sec um uh 5-second time frame and then it'll send it at that time now the other thing is is to",
    "start": "1761840",
    "end": "1769039"
  },
  {
    "text": "directly call Jens server. call gen server. cast uh and pass in the correct",
    "start": "1769039",
    "end": "1774559"
  },
  {
    "text": "aity and then they'll receive those messages but you have to have your call backs for those now let's look",
    "start": "1774559",
    "end": "1783120"
  },
  {
    "text": "at I told you we're going to do something kind of cool with this sequencer",
    "start": "1783840",
    "end": "1790080"
  },
  {
    "text": "so let's look at that here",
    "start": "1790080",
    "end": "1795240"
  },
  {
    "text": "um see",
    "start": "1795799",
    "end": "1799799"
  },
  {
    "text": "okay we good on that that's good okay so",
    "start": "1812480",
    "end": "1817640"
  },
  {
    "text": "our background calculator because keep in mind you know doing a sequence of 10",
    "start": "1817640",
    "end": "1823640"
  },
  {
    "text": "numbers in Fibonacci doesn't take that long doing a 100,000 can take a little while um so if we",
    "start": "1823640",
    "end": "1831760"
  },
  {
    "text": "wanted to do that multiple times or several times over we don't necessarily um want the same machine doing it maybe",
    "start": "1831760",
    "end": "1838279"
  },
  {
    "text": "want to kind of distribute that uh so one of the things that we're going to do here today is we're going to actually create this gen server",
    "start": "1838279",
    "end": "1845120"
  },
  {
    "text": "now the first thing that I want to talk about with this gen server is everything that we mentioned uh it's gen server we",
    "start": "1845120",
    "end": "1852240"
  },
  {
    "text": "do call start link uh it's the module and then we're going to actually pass in the code we'll get to that in a minute",
    "start": "1852240",
    "end": "1858159"
  },
  {
    "text": "um but we're actually setting the initial state of this as being code which is going to be kind of cool we'll",
    "start": "1858159",
    "end": "1864000"
  },
  {
    "text": "get to it in a second and then on the initi or in it uh we're going to take that code and we're going to set it to State and we're going to call we're",
    "start": "1864000",
    "end": "1870440"
  },
  {
    "text": "going to send a message to oursel to load that code uh that's our handle info where load and it's going to receive the",
    "start": "1870440",
    "end": "1876080"
  },
  {
    "text": "state and it's going to do some stuff that we'll talk about in a second um and then when calculate is called we're",
    "start": "1876080",
    "end": "1881760"
  },
  {
    "text": "going to actually call calculate on it we're going to pass in the link that we want to do and it's going to run the Fibonacci code and then it's going to",
    "start": "1881760",
    "end": "1887960"
  },
  {
    "text": "give us back a number it's going to return that result there's that reply result um and then of course the mo our",
    "start": "1887960",
    "end": "1893559"
  },
  {
    "text": "module which is our code uh after it's done we had that process send after",
    "start": "1893559",
    "end": "1899240"
  },
  {
    "text": "because of course if I on a call if I try to kill the process remember we don't want to keep these around we want",
    "start": "1899240",
    "end": "1905320"
  },
  {
    "text": "them to go away when they're done doing their calculation if I try to call it beforehand we're not actually going to",
    "start": "1905320",
    "end": "1910679"
  },
  {
    "text": "get a chance to return our state back and we're not going to actually finish that synchronous call so what I do is I",
    "start": "1910679",
    "end": "1915919"
  },
  {
    "text": "say well just wait a second then die off uh is basically what I'm doing I call",
    "start": "1915919",
    "end": "1921240"
  },
  {
    "text": "the I send a message to exit and then of course the process exits it exits with normal status there was no reason to to",
    "start": "1921240",
    "end": "1928600"
  },
  {
    "text": "have an error just dies now does anybody have any questions on",
    "start": "1928600",
    "end": "1935720"
  },
  {
    "text": "that code is everybody following me everybody good all",
    "start": "1935720",
    "end": "1944960"
  },
  {
    "text": "right here we go oh wow y'all can all see that",
    "start": "1945880",
    "end": "1951398"
  },
  {
    "text": "right here's our supervisor for our supervisor all we're",
    "start": "1951679",
    "end": "1957840"
  },
  {
    "text": "actually doing is starting up the supervisor and then we're adding on our nit we're actually adding the worker",
    "start": "1957840",
    "end": "1963159"
  },
  {
    "text": "which is going to be our back our background. calculator we pretty much solv this code before so I won't spend too much time on",
    "start": "1963159",
    "end": "1969960"
  },
  {
    "text": "it and then we're going to have our function called start calculator which is going to take code",
    "start": "1969960",
    "end": "1976159"
  },
  {
    "text": "and it's actually going to go ahead and start one of those child processes and then we can go ahead and execute",
    "start": "1976159",
    "end": "1981639"
  },
  {
    "text": "it so that is",
    "start": "1981639",
    "end": "1988720"
  },
  {
    "text": "uh I have no idea what to do with this ah shoot all right give me a second",
    "start": "1990799",
    "end": "1996960"
  },
  {
    "text": "because I forgot something here real quick so",
    "start": "1996960",
    "end": "2002120"
  },
  {
    "text": "um see this is what happens when you plan uh talks and you try to do it and",
    "start": "2002120",
    "end": "2008480"
  },
  {
    "text": "of course then you go live coding and something always goes wrong doesn't it it's let's see",
    "start": "2008480",
    "end": "2016039"
  },
  {
    "text": "[Music] here I had commented this",
    "start": "2016450",
    "end": "2022440"
  },
  {
    "text": "out okay well so the problem with that is is if I",
    "start": "2022440",
    "end": "2027960"
  },
  {
    "text": "kill this Victoria is going to start all over and who wants to see this STC again right um so let's do this let's do",
    "start": "2027960",
    "end": "2035919"
  },
  {
    "text": "system suspend background",
    "start": "2035919",
    "end": "2042080"
  },
  {
    "text": "messenger all right and then [Music]",
    "start": "2042080",
    "end": "2054090"
  },
  {
    "text": "we'll all right what let's see H swapping code oh",
    "start": "2064359",
    "end": "2072118"
  },
  {
    "start": "2069000",
    "end": "2184000"
  },
  {
    "text": "it's funny I did that one um so anyway so what we just did we had a running",
    "start": "2072119",
    "end": "2077200"
  },
  {
    "text": "process that was running that was up there and working and one of our developers I don't know who it was",
    "start": "2077200",
    "end": "2084200"
  },
  {
    "text": "commented out some code that we actually needed didn't know how to handle it now it didn't blow up because we had that",
    "start": "2084200",
    "end": "2089679"
  },
  {
    "text": "catchall because that message came in it didn't know what to do with it and it just said hey I don't know what to do with this but we could also put some code in",
    "start": "2089679",
    "end": "2097240"
  },
  {
    "text": "there to where we said send a message send an email hey something's not right whatever we want to do so what I",
    "start": "2097240",
    "end": "2103119"
  },
  {
    "text": "actually ended up doing is I suspended the service for a second and recompiled the code that's what that c is that allows us to recompile that file and",
    "start": "2103119",
    "end": "2109800"
  },
  {
    "text": "then I resumed it so it's it kind of unpaused the the service and then I could actually continue on without",
    "start": "2109800",
    "end": "2115400"
  },
  {
    "text": "having to restart the process Al together now there's another way to do hot swapping of code which I tend to try",
    "start": "2115400",
    "end": "2124760"
  },
  {
    "text": "to like everybody loves the idea of hot swapping code it's like a really cool thing to do the problem with it is is",
    "start": "2124760",
    "end": "2130320"
  },
  {
    "text": "there's a very particular way you have to do it so when you have a function if you want to be able to hot swap code",
    "start": "2130320",
    "end": "2135720"
  },
  {
    "text": "within say a process you have to um you have to do an absolute name so you have to call like module. function and that's",
    "start": "2135720",
    "end": "2142079"
  },
  {
    "text": "going to force it to reload the code because you can actually have two versions of the code running at the same",
    "start": "2142079",
    "end": "2147200"
  },
  {
    "text": "time you can have one old version and the new version that you just pushed out but until you actually force it to to",
    "start": "2147200",
    "end": "2153400"
  },
  {
    "text": "reload the code it's not going to reload the code it's just going to keep going on now if you push another version out",
    "start": "2153400",
    "end": "2159280"
  },
  {
    "text": "it's going to get rid of the oldest version and so you can actually it drops off the old version because you can only",
    "start": "2159280",
    "end": "2164640"
  },
  {
    "text": "have two as you can see it can get a little complicated and unless you really need to do it for some reason I I would",
    "start": "2164640",
    "end": "2171359"
  },
  {
    "text": "try to avoid it but this is a cool little thing that you can do did I fool yall at all no no not",
    "start": "2171359",
    "end": "2179359"
  },
  {
    "text": "really did this is nice okay cool all right let's see here code loading on a",
    "start": "2179359",
    "end": "2184560"
  },
  {
    "start": "2184000",
    "end": "2429000"
  },
  {
    "text": "remote node now remember I kept telling you about this code loading stuff so",
    "start": "2184560",
    "end": "2190920"
  },
  {
    "text": "what we actually want to do is we want to read the code in from that module and we want to pass it over to another node somewhere else could be on some Google",
    "start": "2190920",
    "end": "2197359"
  },
  {
    "text": "Cloud somewhere um and execute that code and get a response back so let's take a",
    "start": "2197359",
    "end": "2202960"
  },
  {
    "text": "look at that real",
    "start": "2202960",
    "end": "2205720"
  },
  {
    "text": "quick so we'll start with our sequencer now get code so if you notice",
    "start": "2209960",
    "end": "2216520"
  },
  {
    "text": "that this is a funny app do function well what we're actually doing is we're calling into lling code now",
    "start": "2216520",
    "end": "2223240"
  },
  {
    "text": "the I guess the not so little secret is that underneath there are things in Elixir that still are basically earling",
    "start": "2223240",
    "end": "2230599"
  },
  {
    "text": "calls and a lot of it at some point is an an lling call you just have to go down deeper than you used to four years",
    "start": "2230599",
    "end": "2236640"
  },
  {
    "text": "ago four years ago it was pretty easy you'd open up a file and there' be a function and boom it would be calling into",
    "start": "2236640",
    "end": "2243119"
  },
  {
    "text": "earling but now what we're going to do is we're actually going to utilize a beam and or an OTP to say we're going to",
    "start": "2243119",
    "end": "2249440"
  },
  {
    "text": "get this code we're going to give it the module that we want to get so it's going to basically read itself in and it's",
    "start": "2249440",
    "end": "2255079"
  },
  {
    "text": "going to create what we have over here",
    "start": "2255079",
    "end": "2262480"
  },
  {
    "text": "okay our module the binary which is the string value of the code and then the file which the file you don't actually",
    "start": "2262480",
    "end": "2269359"
  },
  {
    "text": "need and I'm not sure if you've been a long time earlinger you might know I mean I'm sure there's a good reason so",
    "start": "2269359",
    "end": "2275440"
  },
  {
    "text": "that you know but I mean my thought is if you're passing over to another node it doesn't necessarily have access to that file so really once you load it",
    "start": "2275440",
    "end": "2282280"
  },
  {
    "text": "into memory it's in memory now I would assume that you could persist to a file if you really wanted to um but the idea",
    "start": "2282280",
    "end": "2289680"
  },
  {
    "text": "is that that we're going to actually load this code up into memory and so that is now the same code that we wrote on one node we're going to send over to",
    "start": "2289680",
    "end": "2296240"
  },
  {
    "text": "another node and then that code is going to be executed from that node and then it's going to report back to the other",
    "start": "2296240",
    "end": "2301640"
  },
  {
    "text": "node hey I did a value for you so let's see if this",
    "start": "2301640",
    "end": "2310318"
  },
  {
    "text": "works all right let's do something wow that only took 37 microc",
    "start": "2316280",
    "end": "2323000"
  },
  {
    "text": "seconds oh did I",
    "start": "2323000",
    "end": "2327200"
  },
  {
    "text": "not oh I know",
    "start": "2328359",
    "end": "2332160"
  },
  {
    "text": "why I did not hot swap code on the session testing testing is this thing on",
    "start": "2334760",
    "end": "2341720"
  },
  {
    "text": "okay are we ready to do this Cod loading on a remote",
    "start": "2341720",
    "end": "2348880"
  },
  {
    "text": "node let's try it this time wow that only took 873 microc seconds so we just",
    "start": "2354560",
    "end": "2362400"
  },
  {
    "text": "did about 100 let's do",
    "start": "2362400",
    "end": "2368400"
  },
  {
    "text": "wow that only took 20 milliseconds it's pretty fast wait did I",
    "start": "2368400",
    "end": "2373680"
  },
  {
    "text": "get enough numbers in there I don't think okay this will wow that only took",
    "start": "2373680",
    "end": "2379400"
  },
  {
    "text": "1,793 Mill so as you can see we're now taking that code we're sending it over and I'll show you the code itself the",
    "start": "2379400",
    "end": "2385680"
  },
  {
    "text": "other thing that we can do which is kind of fun um anybody can do it once right let's do",
    "start": "2385680",
    "end": "2394160"
  },
  {
    "text": "it 10 times wellow that only took",
    "start": "2394160",
    "end": "2399280"
  },
  {
    "text": "1746 milliseconds wow that only took 3,22 milliseconds wow that only took",
    "start": "2399280",
    "end": "2407960"
  },
  {
    "text": "5,152 milliseconds wow that only took 274 milliseconds I'm going to stop her",
    "start": "2407960",
    "end": "2415079"
  },
  {
    "text": "cuz she will keep talking she as bad as I am 269 oh that's right why because we have",
    "start": "2415079",
    "end": "2421480"
  },
  {
    "text": "the code running on another node and so I'd have to actually crash the other node I'll just turn her down",
    "start": "2421480",
    "end": "2429319"
  },
  {
    "start": "2429000",
    "end": "2625000"
  },
  {
    "text": "178 talking talking talking talking she's worse than I am so anyway you can see we'll actually",
    "start": "2431520",
    "end": "2437640"
  },
  {
    "text": "look at the code while she's talking about it all",
    "start": "2437640",
    "end": "2444520"
  },
  {
    "text": "right",
    "start": "2444760",
    "end": "2447760"
  },
  {
    "text": "um s all right so this is kind of how I was",
    "start": "2451599",
    "end": "2458000"
  },
  {
    "text": "controlling the whole thing I was doing gen server cast uh I had the My Messenger on the other node um the I",
    "start": "2458000",
    "end": "2466319"
  },
  {
    "text": "would send the message over to the other node I would send a start restart or whatever pause um my next is actually",
    "start": "2466319",
    "end": "2472720"
  },
  {
    "text": "just a call to start but our calculate sequence basically we take a a length and then we have a default value of one",
    "start": "2472720",
    "end": "2479359"
  },
  {
    "text": "so if I don't pass in a count it just does it one",
    "start": "2479359",
    "end": "2483640"
  },
  {
    "text": "time now we're iterating over a range here and we're using task now task and",
    "start": "2484839",
    "end": "2491280"
  },
  {
    "text": "agent are two other types of basically wrappers around gen server tasks are meant for doing asynchronous things you",
    "start": "2491280",
    "end": "2497400"
  },
  {
    "text": "just want to fire something off and forget it agents are used more for storing like if you wanted to have like",
    "start": "2497400",
    "end": "2502800"
  },
  {
    "text": "a data store or something like that like a temporary data store um and you want to put values in there so tasks are",
    "start": "2502800",
    "end": "2508400"
  },
  {
    "text": "really great if you want to do asynchronous calls so basically it's going to send out H1 it's just going to keep Loop through or looping through",
    "start": "2508400",
    "end": "2514839"
  },
  {
    "text": "them until they're done um and then of course you see our gen server cast because this isn't going to",
    "start": "2514839",
    "end": "2520880"
  },
  {
    "text": "this does not want to wait for a response this just wants to send it over there our Messenger on the other node",
    "start": "2520880",
    "end": "2526240"
  },
  {
    "text": "will when it's done it'll send something back to us to report back in that it's done and give us those values",
    "start": "2526240",
    "end": "2532359"
  },
  {
    "text": "um and actually let's see our mailbox like to expose a little bit of",
    "start": "2532359",
    "end": "2539839"
  },
  {
    "text": "what was actually working here's basically how I ran the",
    "start": "2539839",
    "end": "2545040"
  },
  {
    "text": "whole thing messages would come back from the back or um from the background",
    "start": "2545040",
    "end": "2550640"
  },
  {
    "text": "and if a message came in that I needed Victoria to tell us it would just call say on the command line uh and spit out",
    "start": "2550640",
    "end": "2556800"
  },
  {
    "text": "the message uh when those examples were run now all that all those slides that",
    "start": "2556800",
    "end": "2562119"
  },
  {
    "text": "you saw basically I utilized what Elixir already put in there for the um for Io",
    "start": "2562119",
    "end": "2568319"
  },
  {
    "text": "an or anti helpers and so it basically grabs the dock um the module doc reads",
    "start": "2568319",
    "end": "2573720"
  },
  {
    "text": "it in into binary and sends it over and kind of formats it for you so it looks like nice and pretty you can use print header print Doc and stuff like that so",
    "start": "2573720",
    "end": "2580800"
  },
  {
    "text": "this entire talk was written using Elixir I did not use anything else and I",
    "start": "2580800",
    "end": "2586119"
  },
  {
    "text": "did not use any external libraries or anything like that and um when I first started thinking about doing this talk I",
    "start": "2586119",
    "end": "2592359"
  },
  {
    "text": "was going to include things like Ecto and Phoenix and things like that but those are all things you can explore on your own there's plenty of documentation",
    "start": "2592359",
    "end": "2598520"
  },
  {
    "text": "on them most of you are probably familiar with MVC pattern uh seeing that this is a net conference most of you are",
    "start": "2598520",
    "end": "2605440"
  },
  {
    "text": "probably familiar with link which Ecto is very similar to links and tax it's not hard to pick up so let's see where",
    "start": "2605440",
    "end": "2613559"
  },
  {
    "text": "we're at because",
    "start": "2613559",
    "end": "2617640"
  },
  {
    "text": "um oh that's all I got so you are on your",
    "start": "2619760",
    "end": "2626440"
  },
  {
    "start": "2625000",
    "end": "2959000"
  },
  {
    "text": "own now oh great all right so there we have it now this was not your typical",
    "start": "2626440",
    "end": "2632319"
  },
  {
    "text": "intro to Elixir I know I kind of covered some stuff that you probably wouldn't get into in that first trimester maybe",
    "start": "2632319",
    "end": "2637440"
  },
  {
    "text": "not even the second trimester um but I hope that it was an interesting look um",
    "start": "2637440",
    "end": "2643119"
  },
  {
    "text": "I hope that there was some things that you kind of picked up on that kind of went beyond the hey look here's here's binding because you can figure that",
    "start": "2643119",
    "end": "2649280"
  },
  {
    "text": "stuff out in 10 minutes why stand up here and take up your time talking about it so I want to kind of show focus on",
    "start": "2649280",
    "end": "2656319"
  },
  {
    "text": "some of the the cool features not to mention my talk tomorrow I use a lot of this stuff in what coyote does so what",
    "start": "2656319",
    "end": "2663480"
  },
  {
    "text": "coyote basically does and I'll just kind of give you a preview is that it's it's basically routing traffic between nodes",
    "start": "2663480",
    "end": "2669839"
  },
  {
    "text": "so when an application comes up it registers with the leader server uh the leader server can then pass messages",
    "start": "2669839",
    "end": "2675640"
  },
  {
    "text": "over to it to have all that working so I'm using Code loading I'm using uh I'm node connecting I'm watching the nodes",
    "start": "2675640",
    "end": "2681760"
  },
  {
    "text": "when they go down um if you notice like when I dropped one of these nodes when it came back up she started over she realized",
    "start": "2681760",
    "end": "2688880"
  },
  {
    "text": "that something was going on she tested the connection to make sure it was there and then went on so but I'll get into more of that",
    "start": "2688880",
    "end": "2696079"
  },
  {
    "text": "tomorrow what I want to do and I hope that I've that I've kind of helped with that is spark a curiosity when I first",
    "start": "2696079",
    "end": "2703280"
  },
  {
    "text": "got involved in Elixir the big thing was I was curious and I think as developers were intrinsically curious like we want",
    "start": "2703280",
    "end": "2709000"
  },
  {
    "text": "to know a little bit more we're not just happy with what we're doing today we kind of want to see what else is out there now I did net for a number of",
    "start": "2709000",
    "end": "2715839"
  },
  {
    "text": "years I was a c developer for 10 years prior to that I did Pearl uh PHP um and",
    "start": "2715839",
    "end": "2723359"
  },
  {
    "text": "various other languages along the way but I kind came around that Curiosity kept me moving from language to language",
    "start": "2723359",
    "end": "2730400"
  },
  {
    "text": "and it wasn't even there was languages I looked at that I didn't never I would never used actually when I first found erlang living in Jacksonville Florida I",
    "start": "2730400",
    "end": "2737119"
  },
  {
    "text": "realized that there was no way I was getting a job in Jacksonville Florida using erlang and this was at a time",
    "start": "2737119",
    "end": "2743559"
  },
  {
    "text": "before like a big remote like like the big remote push so I got into Ruby and I",
    "start": "2743559",
    "end": "2749839"
  },
  {
    "text": "I did that for a while but functional language is always kind of called to me and I think that like I said developers",
    "start": "2749839",
    "end": "2755920"
  },
  {
    "text": "on a whole are C ious people and so I want to show you something that's going to make you curious if I stand up here",
    "start": "2755920",
    "end": "2761880"
  },
  {
    "text": "and talk about the basics of Elixir and kind of the what you can get on the the the getting started guides it's not",
    "start": "2761880",
    "end": "2767800"
  },
  {
    "text": "going to get you to go up and yeah just yeah just wondering what",
    "start": "2767800",
    "end": "2773599"
  },
  {
    "text": "kind of what kind of systems do you consider to be the best so that's a good",
    "start": "2773599",
    "end": "2781119"
  },
  {
    "text": "question what kind of systems do I'm repeating just because of the mic but what kind of systems do this good fit",
    "start": "2781119",
    "end": "2786319"
  },
  {
    "text": "for honestly it's I think it's working its way to a",
    "start": "2786319",
    "end": "2791599"
  },
  {
    "text": "pretty good uh general purpose language like you can do most things you can uh you can write scripts and have them",
    "start": "2791599",
    "end": "2797280"
  },
  {
    "text": "execute and things like that um it's you know it's picking up a lot of steam",
    "start": "2797280",
    "end": "2802680"
  },
  {
    "text": "because of Phoenix uh because of web development and things like that but I treat Phoenix a little bit different",
    "start": "2802680",
    "end": "2808480"
  },
  {
    "text": "than most people I I go by the idea that Phoenix is not my application it's a key",
    "start": "2808480",
    "end": "2814280"
  },
  {
    "text": "to my presentation layer uh it allows me to put stuff on the web so I build these small applications that I can then",
    "start": "2814280",
    "end": "2820920"
  },
  {
    "text": "distribute sometimes across multiple nodes sometimes on the same one I mean there's not you don't necessarily need",
    "start": "2820920",
    "end": "2826040"
  },
  {
    "text": "to distribute everything but like systems that I'm working on currently we have large amounts of data that need to",
    "start": "2826040",
    "end": "2832720"
  },
  {
    "text": "be processed and so it is kind of Handy to spend something up and push it over to another node but it's also really",
    "start": "2832720",
    "end": "2838480"
  },
  {
    "text": "fast on a single node uh if you're building just a web application or if you're building you know the there's",
    "start": "2838480",
    "end": "2844920"
  },
  {
    "text": "even like one of the things that I had looked at doing a few years ago was I guess with the electron the desktop",
    "start": "2844920",
    "end": "2850960"
  },
  {
    "text": "applications running an Elixir backend on a desktop application and using",
    "start": "2850960",
    "end": "2856440"
  },
  {
    "text": "electron um I kind of went down that path and then backed out of it uh Rob",
    "start": "2856440",
    "end": "2862000"
  },
  {
    "text": "connory actually was one that was trying to convince me to do it and I was like H it sounded fun but I'm not a huge",
    "start": "2862000",
    "end": "2867400"
  },
  {
    "text": "JavaScript um fan so um and it's not that I don't I shouldn't say I'm not a",
    "start": "2867400",
    "end": "2872760"
  },
  {
    "text": "fan it's just it's one of those things I write bad JavaScript so I tend to try to avoid it um which is",
    "start": "2872760",
    "end": "2881000"
  },
  {
    "text": "like everybody here don't lie um so I hope that answer your question",
    "start": "2881000",
    "end": "2886240"
  },
  {
    "text": "but I mean it's pretty much I mean it's it is actually a good fit for a lot of cases I mean it's it's definitely working and it's easy and fun to use um",
    "start": "2886240",
    "end": "2895079"
  },
  {
    "text": "I don't know uh what languages you're using now but I mean it does have that kind of Ruby feel to it um the you know",
    "start": "2895079",
    "end": "2902800"
  },
  {
    "text": "what's funny is I hear a lot of people like in the earling community complain because of the Ruby sent",
    "start": "2902800",
    "end": "2907920"
  },
  {
    "text": "um you know but it's you know teaches you know if you want to use earling use earling it's fine I'm",
    "start": "2907920",
    "end": "2914760"
  },
  {
    "text": "not yeah pretty much I use uh it's the language I use the most now I haven't um",
    "start": "2915240",
    "end": "2920800"
  },
  {
    "text": "I have been pretty much 100% Elixir for about 2",
    "start": "2920800",
    "end": "2926240"
  },
  {
    "text": "years um some Ruby sprinkled in there um but it's been a while since I've really",
    "start": "2926240",
    "end": "2931480"
  },
  {
    "text": "written any other I mean of course you know like the javascripts and stuff like that and SQL and stuff but um for the most",
    "start": "2931480",
    "end": "2937319"
  },
  {
    "text": "part um all right I guess any other I mean that's pretty much what I got what you",
    "start": "2937319",
    "end": "2944000"
  },
  {
    "text": "got you have an example of the opposite system that you wouldn't build",
    "start": "2944000",
    "end": "2950240"
  },
  {
    "text": "inir do I have an example of a system that I couldn't build in Elixir no you wouldn't wouldn't",
    "start": "2950240",
    "end": "2957119"
  },
  {
    "text": "yeah um off the top of my head no I think I",
    "start": "2957119",
    "end": "2964559"
  },
  {
    "text": "haven't run into a case where it wasn't necessarily good fit um and if I could remember back CU in the early days there",
    "start": "2964559",
    "end": "2971240"
  },
  {
    "text": "were some things that I noticed that like there was other languages that were definitely faster at doing it um but",
    "start": "2971240",
    "end": "2976440"
  },
  {
    "text": "there there have been so many improvements to the language and the speed of the language in the last few years that it's kind of getting a little",
    "start": "2976440",
    "end": "2982359"
  },
  {
    "text": "the lines are getting blurred between what is in a good fit and what isn't or what is and what isn't",
    "start": "2982359",
    "end": "2988839"
  },
  {
    "text": "um I think the big concern right now is like how people are building um because",
    "start": "2988839",
    "end": "2994280"
  },
  {
    "text": "you do have that influx of people coming from object Ori languages that kind of get caught up in building things a certain way and this is one of the",
    "start": "2994280",
    "end": "3001760"
  },
  {
    "text": "problems that I kind of solve for for Sol a few years ago is that you come to",
    "start": "3001760",
    "end": "3007680"
  },
  {
    "text": "um come to the language and you start implementing old habits and you're basically just rewriting your old",
    "start": "3007680",
    "end": "3014240"
  },
  {
    "text": "language and and I'm I'm a firm believer of you know bring what you know into the",
    "start": "3014240",
    "end": "3019319"
  },
  {
    "text": "new language so that you have that kind of to fall back on but respect the Paradigm of the language that you're working on and try to figure out how it",
    "start": "3019319",
    "end": "3026200"
  },
  {
    "text": "wants you to do it um because I think too many people try to force the old paradigms of their old languages on the",
    "start": "3026200",
    "end": "3032079"
  },
  {
    "text": "new language and then they're like this is broken it doesn't work this is not anywhere near as good and it's like we're not using it right you know so I",
    "start": "3032079",
    "end": "3039520"
  },
  {
    "text": "think that that kind of comes into play um any other",
    "start": "3039520",
    "end": "3044839"
  },
  {
    "text": "questions yeah uh I'm actually going to just put the project on GitHub and then I'll uh",
    "start": "3044839",
    "end": "3051760"
  },
  {
    "text": "you can I'm n Ru GG r07 new rugger 07 um",
    "start": "3051760",
    "end": "3057559"
  },
  {
    "text": "on GitHub and I will just push up this with a read me that kind of walks through how to set it up and how to walk",
    "start": "3057559",
    "end": "3062680"
  },
  {
    "text": "through it I think that's probably the best way to do it uh and then that way you can look at the code you can play with it you can Fork it and tear it up",
    "start": "3062680",
    "end": "3069359"
  },
  {
    "text": "and you know criticize it all everything that you want",
    "start": "3069359",
    "end": "3074240"
  },
  {
    "text": "so I think so um and actually there's in the states I know that there's a few groups that are starting up one",
    "start": "3083559",
    "end": "3091640"
  },
  {
    "text": "um there's if you're familiar with the railsbridge pro uh project there's like an Elixir Bridge Project that's starting",
    "start": "3091640",
    "end": "3097640"
  },
  {
    "text": "up to try to bring people in uh to women into code um but there's also I saw",
    "start": "3097640",
    "end": "3103280"
  },
  {
    "text": "something about a program for kids teaching kids Elixir from the start and functional languages from the start to",
    "start": "3103280",
    "end": "3108920"
  },
  {
    "text": "try to get you know people on board with it and things like that it it actually I mean it is a really good language it's",
    "start": "3108920",
    "end": "3114720"
  },
  {
    "text": "easy to use it's you can get up and running with it in 5 minutes and start working in it you don't necessarily have",
    "start": "3114720",
    "end": "3120480"
  },
  {
    "text": "to Traverse the the the trials and tribulations of OTP right away uh in fact a friend of mine that got into",
    "start": "3120480",
    "end": "3126599"
  },
  {
    "text": "Elixir a couple years ago actually mentioned that um you know he spent a year using Elixir and never used OTP",
    "start": "3126599",
    "end": "3133760"
  },
  {
    "text": "like processes and and gen servers and things like that um and then of course once he started getting into it he you",
    "start": "3133760",
    "end": "3140280"
  },
  {
    "text": "know it's to each his own like you're going to find the project that you do you can get into it you can use it you can get into pattern matching and",
    "start": "3140280",
    "end": "3146520"
  },
  {
    "text": "binding and understanding immutability and then work into the OTP stuff because it's deep the OTP stuff is deep",
    "start": "3146520",
    "end": "3153720"
  },
  {
    "text": "so anybody else all right well thank you I hope you enjoyed it",
    "start": "3153720",
    "end": "3159380"
  },
  {
    "text": "[Applause]",
    "start": "3159380",
    "end": "3164869"
  }
]