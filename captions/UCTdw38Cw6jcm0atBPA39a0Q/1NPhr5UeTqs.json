[
  {
    "text": "all right hi everyone uh welcome this uh session is called easier infrastructure and",
    "start": "8960",
    "end": "15599"
  },
  {
    "text": "safer secrets and in this session we're going to be using a tool called palumi the azure cloud and",
    "start": "15599",
    "end": "22880"
  },
  {
    "text": "a little bit of net core to demonstrate how we can spin up infrastructure in a way that's",
    "start": "22880",
    "end": "28800"
  },
  {
    "text": "pretty easy uh but also in a way that's safe and a way that helps everybody",
    "start": "28800",
    "end": "35120"
  },
  {
    "text": "not make giant mistakes so who am i my name's ryan uh",
    "start": "35120",
    "end": "41520"
  },
  {
    "text": "i like to play guitar i like to travel a bit when it's not 2020 and i like to barbecue things i've got",
    "start": "41520",
    "end": "47600"
  },
  {
    "text": "some my contact details down here on the bottom if you're interested in reaching out to me i'll show these again at the end",
    "start": "47600",
    "end": "54640"
  },
  {
    "text": "and in my professional role at the moment i'm the cto at a startup called amphora data so we",
    "start": "54640",
    "end": "60800"
  },
  {
    "text": "operate a real-time data marketplace and we also build uh intelligent applications",
    "start": "60800",
    "end": "66799"
  },
  {
    "text": "um currently we are part of the unsw 10x founder program uh we've actually got",
    "start": "66799",
    "end": "73200"
  },
  {
    "text": "some pretty cool uh announcements to make in about two weeks time so",
    "start": "73200",
    "end": "78479"
  },
  {
    "text": "keep an eye on that uh if you're interested and again feel free to reach out if if anything in here distracts you as",
    "start": "78479",
    "end": "85520"
  },
  {
    "text": "interest so what are we going to talk about so",
    "start": "85520",
    "end": "91360"
  },
  {
    "text": "firstly we're going to talk about uh what is infrastructure automation and how to do with bulimi",
    "start": "91360",
    "end": "97439"
  },
  {
    "text": "and i'll run through a demo of of bulimia sort of halfway through this uh this presentation um then we're going",
    "start": "97439",
    "end": "103520"
  },
  {
    "text": "to talk about secrets secrets management and some methods you can use to manage your secrets we'll briefly",
    "start": "103520",
    "end": "110000"
  },
  {
    "text": "touch on some parts of asp.net core which are really useful if you're um",
    "start": "110000",
    "end": "116560"
  },
  {
    "text": "using a lot of secrets and and you want to write nice looking code that's easy",
    "start": "116560",
    "end": "121600"
  },
  {
    "text": "and then at the end if we have time i'll show you how you can do mostly secret list deployments and for",
    "start": "121600",
    "end": "128640"
  },
  {
    "text": "that we'll use polymer gain and github actions",
    "start": "128640",
    "end": "134560"
  },
  {
    "text": "so infrastructure automation i think a lot of us here have probably",
    "start": "138319",
    "end": "143360"
  },
  {
    "text": "done quite a lot of infrastructure automation but when we do it we to my mind want at",
    "start": "143360",
    "end": "150080"
  },
  {
    "text": "least these three desirable properties for whatever tool we're using",
    "start": "150080",
    "end": "155280"
  },
  {
    "text": "and there might be some arguments here and maybe there's a fourth maybe maybe there's some other ones but this",
    "start": "155280",
    "end": "161440"
  },
  {
    "text": "is just my opinion but the three i think are really important uh repeatability",
    "start": "161440",
    "end": "166879"
  },
  {
    "text": "a property called adam potency and another one called understandability repeatability is is",
    "start": "166879",
    "end": "173200"
  },
  {
    "text": "pretty clear what it means it means i can do the same thing more than once",
    "start": "173200",
    "end": "178400"
  },
  {
    "text": "and if i do it in different places the same thing happens that's really a property we want on most",
    "start": "178400",
    "end": "184640"
  },
  {
    "text": "of our tooling understandability means that i know",
    "start": "184640",
    "end": "190879"
  },
  {
    "text": "by looking at this code what it does and i know how to change it again like we want that in most of our tooling right",
    "start": "190879",
    "end": "197120"
  },
  {
    "text": "the third one item potency is a little bit more subtle and i'll talk about that in a moment but",
    "start": "197120",
    "end": "202720"
  },
  {
    "text": "basically what it means is that when i do something multiple times it has no extra side effects from doing",
    "start": "202720",
    "end": "209680"
  },
  {
    "text": "multiple doing something more than once",
    "start": "209680",
    "end": "213840"
  },
  {
    "text": "so firstly let's look at repeatability generally speaking you know in a first",
    "start": "215599",
    "end": "221920"
  },
  {
    "text": "forays into cloud infrastructure when we first start getting into it we're going to go to you know a web interface like the aws",
    "start": "221920",
    "end": "228720"
  },
  {
    "text": "portal uh sorry the aws console or the azure portal and we're going to play around with that we're going to create some",
    "start": "228720",
    "end": "234799"
  },
  {
    "text": "virtual machines or some s3 buckets or something like that once we're comfortable",
    "start": "234799",
    "end": "240000"
  },
  {
    "text": "with that we start scripting right we start automating and we do that because we're software engineers and we love automating things",
    "start": "240000",
    "end": "246879"
  },
  {
    "text": "a common place to start is just to start writing bash scripts and you know this is how i started automating infrastructure",
    "start": "246879",
    "end": "254560"
  },
  {
    "text": "and i've just got a little sample here on how you can do some basic automation and in this",
    "start": "254560",
    "end": "260799"
  },
  {
    "text": "sample i've just got a bash script that uses the azure cli cross platform tool to create",
    "start": "260799",
    "end": "267600"
  },
  {
    "text": "a resource group a dns zone and an a record in that dns zone right pretty basic",
    "start": "267600",
    "end": "273759"
  },
  {
    "text": "cloud infrastructure kind of stuff but what happens if i run this thing more than once",
    "start": "273759",
    "end": "280320"
  },
  {
    "text": "and what happens is that i get an error okay and the error says i'm not allowed to",
    "start": "280320",
    "end": "285919"
  },
  {
    "text": "create more than one record of type a with the same ip address",
    "start": "285919",
    "end": "291680"
  },
  {
    "text": "that makes a lot of sense right because in regular dns things you can't have uh more than one a record with the",
    "start": "291680",
    "end": "298960"
  },
  {
    "text": "same ip address but if you think about it why did it fail at that point",
    "start": "298960",
    "end": "304400"
  },
  {
    "text": "if i go back to the script i also can't have multiple resource groups of the same",
    "start": "304400",
    "end": "310479"
  },
  {
    "text": "name but it didn't fail there i also can't have multiple dns zones with the same name but it also",
    "start": "310479",
    "end": "317120"
  },
  {
    "text": "didn't fail there it failed on the third one and the reason it did that is because",
    "start": "317120",
    "end": "322800"
  },
  {
    "text": "the first two operations were item potent but the third one was not and this is a problem",
    "start": "322800",
    "end": "329840"
  },
  {
    "text": "so what is item potency item potency means that when we apply an operation once or apply",
    "start": "330560",
    "end": "336720"
  },
  {
    "text": "it multiple times it has the same effect often this is just called like a desired",
    "start": "336720",
    "end": "343520"
  },
  {
    "text": "state model and you've probably seen this in your day-to-day lives",
    "start": "343520",
    "end": "348639"
  },
  {
    "text": "when you multiply by zero that's an idempotent operation because multiplying by zero once or a",
    "start": "348639",
    "end": "354639"
  },
  {
    "text": "thousand times doesn't change the answer it's still zero we see technologies like this every day",
    "start": "354639",
    "end": "361600"
  },
  {
    "text": "something like an elevated call button or a pedestrian crossing where pressing",
    "start": "361600",
    "end": "366880"
  },
  {
    "text": "the button more than once doesn't make a difference contrary to what i believed as a child",
    "start": "366880",
    "end": "373600"
  },
  {
    "text": "and if anyone's used kubernetes the kubernetes api and kubernetes",
    "start": "373759",
    "end": "379680"
  },
  {
    "text": "controllers are another example of an item potent system where",
    "start": "379680",
    "end": "385039"
  },
  {
    "text": "the command you know cube control apply applying it once or applying it 10 times doesn't make a",
    "start": "385039",
    "end": "391360"
  },
  {
    "text": "difference hopefully",
    "start": "391360",
    "end": "395840"
  },
  {
    "text": "and look the third the third property that's really important when we're looking at infrastructure automation uh is",
    "start": "396800",
    "end": "402000"
  },
  {
    "text": "understandability right and a great way to do this is just to use familiar languages",
    "start": "402000",
    "end": "408880"
  },
  {
    "text": "right you can write something in javascript and most people are going to be able to read it",
    "start": "408880",
    "end": "415440"
  },
  {
    "text": "and understand it and if it's not javascript then it's maybe python or c-sharp or go i bet 95 percent",
    "start": "415440",
    "end": "423440"
  },
  {
    "text": "of people uh in this virtual room could read or write at",
    "start": "423440",
    "end": "429919"
  },
  {
    "text": "least one of these languages i have on screen now",
    "start": "429919",
    "end": "435280"
  },
  {
    "text": "you could probably write this yourself you know you could probably write your own infrastructure automation",
    "start": "435280",
    "end": "441360"
  },
  {
    "text": "tool in in python that you know checked if an ip address",
    "start": "441360",
    "end": "446880"
  },
  {
    "text": "uh already existed in a dns zone and and only created it if it didn't",
    "start": "446880",
    "end": "452160"
  },
  {
    "text": "exist but why would you bother when there's already",
    "start": "452160",
    "end": "457280"
  },
  {
    "text": "a free tool that does it for you and you probably guessed that tool is",
    "start": "457280",
    "end": "463199"
  },
  {
    "text": "called polyme so in a way polomi is very similar to",
    "start": "463199",
    "end": "469520"
  },
  {
    "text": "terraform and if anyone out there has used terraform then these concepts which i'm going to talk",
    "start": "469520",
    "end": "476240"
  },
  {
    "text": "about next are going to feel really similar so you know why do i like plumi well of",
    "start": "476240",
    "end": "483919"
  },
  {
    "text": "course it meets the criteria that i just set pollumi is understandable",
    "start": "483919",
    "end": "489280"
  },
  {
    "text": "because when we read it it's written in programming languages uh that we",
    "start": "489280",
    "end": "496240"
  },
  {
    "text": "usually can understand like python javascript or go",
    "start": "496240",
    "end": "501120"
  },
  {
    "text": "it has this property of repeatability via these concepts of projects and stacks and i'll go into that in a moment on how",
    "start": "501759",
    "end": "508400"
  },
  {
    "text": "they work and it achieves item potency in the same way that terraform does",
    "start": "508400",
    "end": "513518"
  },
  {
    "text": "via a desired state configuration methodology there's some other cool reasons why you",
    "start": "513519",
    "end": "519039"
  },
  {
    "text": "might like plummy so it's all open source the whole thing's on on github it's got",
    "start": "519039",
    "end": "524480"
  },
  {
    "text": "a consistent programming model if you're programming across multiple clouds say gcp and aws not that i necessarily",
    "start": "524480",
    "end": "531600"
  },
  {
    "text": "recommend doing that but if that's what you're doing then they look the same then doesn't matter",
    "start": "531600",
    "end": "537120"
  },
  {
    "text": "where you're deploying to uh it enables testing of infrastructure which can be quite cool especially",
    "start": "537120",
    "end": "542959"
  },
  {
    "text": "because you can actually write unit tests on your infrastructure code if you want to",
    "start": "542959",
    "end": "549680"
  },
  {
    "text": "and it does have a policy as code engine that to be honest i'm not uh",
    "start": "549680",
    "end": "556640"
  },
  {
    "text": "very familiar with but i think if you are you know programming infrastructure in large enterprise",
    "start": "556640",
    "end": "563200"
  },
  {
    "text": "environments and large enterprise companies then policy and compliance become really important",
    "start": "563200",
    "end": "570880"
  },
  {
    "text": "so what are the pollumi concepts that you need to know if you really want to go deep and become a",
    "start": "573040",
    "end": "579440"
  },
  {
    "text": "wizard at using it so obviously it's a cli i'll briefly talk about that",
    "start": "579440",
    "end": "585519"
  },
  {
    "text": "there's three concepts which are the program the project and the stack which are kind of the core of what plume",
    "start": "585519",
    "end": "591279"
  },
  {
    "text": "is and how it works and then we'll also talk about how to configure it and what the state means in pollumi",
    "start": "591279",
    "end": "601440"
  },
  {
    "text": "so the main way you'll interact with bulumi is via a command line interface",
    "start": "602320",
    "end": "608160"
  },
  {
    "text": "a cli and you can install this on on whatever os you're using it runs on",
    "start": "608160",
    "end": "613680"
  },
  {
    "text": "you know linux mac os and windows and if you look at the help function",
    "start": "613680",
    "end": "620160"
  },
  {
    "text": "you'll see there's some common commands that it suggests",
    "start": "620160",
    "end": "625839"
  },
  {
    "text": "you'll use most of the time the most common command is just called pulling me up and what",
    "start": "625839",
    "end": "630959"
  },
  {
    "text": "that does is it spins up your infrastructure as you've defined it in code the other",
    "start": "630959",
    "end": "636240"
  },
  {
    "text": "commands that it recommends you understand are plummy stack which is the cli way you interact with",
    "start": "636240",
    "end": "642399"
  },
  {
    "text": "instances of your infrastructure you can configure it via the cli",
    "start": "642399",
    "end": "647760"
  },
  {
    "text": "and you can also destroy your infrastructure via the cli and this is",
    "start": "647760",
    "end": "653360"
  },
  {
    "text": "really useful when you have modular components which i just want to create and destroy as i like",
    "start": "653360",
    "end": "661680"
  },
  {
    "text": "so what's a polymer project really it's just any directory which contains a",
    "start": "661680",
    "end": "667519"
  },
  {
    "text": "polymer.yaml file and there's not too much yamlin plumi so you don't get into",
    "start": "667519",
    "end": "672720"
  },
  {
    "text": "yaml hell but anyway where you see this kind of a file where it's got a name",
    "start": "672720",
    "end": "677760"
  },
  {
    "text": "a particular runtime which is the language we get to write our",
    "start": "677760",
    "end": "683200"
  },
  {
    "text": "infrastructure code in and a little description which will show up you know when you look at the web interface and",
    "start": "683279",
    "end": "688959"
  },
  {
    "text": "so it gives people a little idea of what the point of the infrastructure is and this",
    "start": "688959",
    "end": "694399"
  },
  {
    "text": "uh if you want to compare it to terraform is similar to the root module which is kind of the only required",
    "start": "694399",
    "end": "700000"
  },
  {
    "text": "module when you're when you're working in terraform",
    "start": "700000",
    "end": "704399"
  },
  {
    "text": "the next thing that's important to understand is the plumi program so in pollumi a program",
    "start": "706160",
    "end": "713360"
  },
  {
    "text": "is literally the way you define your infrastructure and you can write it",
    "start": "713360",
    "end": "719680"
  },
  {
    "text": "in in any of the supported languages which there's five and although you are",
    "start": "719680",
    "end": "725120"
  },
  {
    "text": "using a general purpose language the magic of bulimia is it turns that into a desired state it turns it into a",
    "start": "725120",
    "end": "732240"
  },
  {
    "text": "declarative piece of infrastructure rather than the",
    "start": "732240",
    "end": "737279"
  },
  {
    "text": "normal method of programming you would you would normally be familiar with so in this example this is a python",
    "start": "737279",
    "end": "744160"
  },
  {
    "text": "example and we're using python to create this group object",
    "start": "744160",
    "end": "749760"
  },
  {
    "text": "and this server object now the group object maps to an aws ec2 security group and",
    "start": "749760",
    "end": "756160"
  },
  {
    "text": "we've got some properties that we put on there like the description and you know the protocol it supports and the port and et cetera",
    "start": "756160",
    "end": "762880"
  },
  {
    "text": "and then we also create an ec2 instance where we you know give it an instance type and",
    "start": "762880",
    "end": "768800"
  },
  {
    "text": "and we pass in the security group that it's a part of now the way that polymer works",
    "start": "768800",
    "end": "775040"
  },
  {
    "text": "these objects that you create in python which is obviously an object-oriented",
    "start": "775040",
    "end": "780480"
  },
  {
    "text": "language mostly they map pretty much one to one with the",
    "start": "780480",
    "end": "787760"
  },
  {
    "text": "cloud resources that end up getting created so when i instantiate an object in",
    "start": "787760",
    "end": "793680"
  },
  {
    "text": "pollumi that maps to a cloud provider or any kind of provider creating some cloud",
    "start": "793680",
    "end": "799760"
  },
  {
    "text": "resource for us these objects these cloud resources",
    "start": "799760",
    "end": "805600"
  },
  {
    "text": "these polymer resources they're hierarchically organized and you can have",
    "start": "805600",
    "end": "811680"
  },
  {
    "text": "many children of these objects but the root object is the stack",
    "start": "811680",
    "end": "818480"
  },
  {
    "text": "so a paloomy stack is comparable in terraform land to a terraform",
    "start": "819760",
    "end": "826839"
  },
  {
    "text": "workspace so every polymery program must be deployed to a stack",
    "start": "826839",
    "end": "832079"
  },
  {
    "text": "there's no way around it and a stack is an isolated and independently",
    "start": "832079",
    "end": "837360"
  },
  {
    "text": "configurable instance of your program the main",
    "start": "837360",
    "end": "842639"
  },
  {
    "text": "reason you would have more than one stack is because you might have a production stack so your production set",
    "start": "842639",
    "end": "849600"
  },
  {
    "text": "of infrastructure and a development and test set of that infrastructure",
    "start": "849600",
    "end": "854800"
  },
  {
    "text": "and what you want and this is a part of the repeatability property that we were looking for is for those stacks",
    "start": "854800",
    "end": "862720"
  },
  {
    "text": "those bits of infrastructure to be similar in that i want my development",
    "start": "862720",
    "end": "868000"
  },
  {
    "text": "environment to be like my production environment i don't want them to drift otherwise how can i be sure that when i do something",
    "start": "868000",
    "end": "873680"
  },
  {
    "text": "in develop it's gonna work the same in production",
    "start": "873680",
    "end": "878160"
  },
  {
    "text": "but we can have differences between our stacks you know i don't necessarily want a monster virtual machine in my",
    "start": "880079",
    "end": "885519"
  },
  {
    "text": "development environment i kind of don't care about latency and there's probably not much load on my development environment",
    "start": "885519",
    "end": "891360"
  },
  {
    "text": "so what we can do by the pollumi configuration tool is to make sure our stacks",
    "start": "891360",
    "end": "899360"
  },
  {
    "text": "have different values inside them so really common example is going to be making sure your development environment",
    "start": "899360",
    "end": "906000"
  },
  {
    "text": "has a smaller type of virtual machine or maybe a smaller number of virtual machines than your production",
    "start": "906000",
    "end": "911120"
  },
  {
    "text": "environment so the last concept uh you should",
    "start": "911120",
    "end": "918160"
  },
  {
    "text": "understand when you're working with palumi uh is the polymer state",
    "start": "918160",
    "end": "924000"
  },
  {
    "text": "now this is very similar to the terraform state basically it's a snapshot of your",
    "start": "924000",
    "end": "931279"
  },
  {
    "text": "infrastructure at any time and that state",
    "start": "931279",
    "end": "936480"
  },
  {
    "text": "changes as you run pulling me up or you edit the state manually and",
    "start": "936480",
    "end": "942480"
  },
  {
    "text": "pulling me uses that state to basically do a diff between what you want",
    "start": "942480",
    "end": "948000"
  },
  {
    "text": "your infrastructure to look like and what it looks like right now",
    "start": "948000",
    "end": "955839"
  },
  {
    "text": "so this is like an overview of how that happens right so when i write a pollumi program let's",
    "start": "957519",
    "end": "963920"
  },
  {
    "text": "say i write it in javascript that file runs inside the pollumi language host",
    "start": "963920",
    "end": "970880"
  },
  {
    "text": "as the javascript file runs the pollumi it's almost like a run time",
    "start": "970959",
    "end": "977199"
  },
  {
    "text": "captures the objects that were created or watches the objects that were created",
    "start": "977199",
    "end": "983040"
  },
  {
    "text": "and uses that to create the new state of our infrastructure it then in the",
    "start": "983040",
    "end": "989600"
  },
  {
    "text": "engine compares that new state to the current state and decides",
    "start": "989600",
    "end": "994800"
  },
  {
    "text": "what changes it needs to make to ensure that the deployed state becomes like our",
    "start": "994800",
    "end": "1000560"
  },
  {
    "text": "desired state and it does this by the three operations create update and delete",
    "start": "1000560",
    "end": "1005920"
  },
  {
    "text": "and it can do that on any uh provider that you can plug in to",
    "start": "1005920",
    "end": "1011680"
  },
  {
    "text": "plummy so there's actually a lot of providers you know there's a gcp provider as well as the ones i've sort of listed up here",
    "start": "1011680",
    "end": "1018800"
  },
  {
    "text": "but you know so i can create something in aws i can update something in azure and i can",
    "start": "1018800",
    "end": "1023839"
  },
  {
    "text": "delete something in kubernetes so enough theory let's",
    "start": "1023839",
    "end": "1031760"
  },
  {
    "text": "see if we can just do a demo where's on",
    "start": "1031760",
    "end": "1038319"
  },
  {
    "text": "my there it is",
    "start": "1038319",
    "end": "1045678"
  },
  {
    "text": "okay so what i'm gonna do whoops",
    "start": "1046400",
    "end": "1054000"
  },
  {
    "text": "is i'm going to show you how you can actually get started with polyme so i'm going to",
    "start": "1054000",
    "end": "1060400"
  },
  {
    "text": "just create a new directory just to put it somewhere let's call it ndc",
    "start": "1060400",
    "end": "1068159"
  },
  {
    "text": "and i'm going to show you the kinds of options you have when you are creating a new pollumi program i do",
    "start": "1070000",
    "end": "1077280"
  },
  {
    "text": "that by the plume and new command and you can see pretty quickly that there's a lot of options",
    "start": "1077280",
    "end": "1083760"
  },
  {
    "text": "i can code stuff for aws for azure for gcp for kubernetes and i can",
    "start": "1083760",
    "end": "1091280"
  },
  {
    "text": "do it in these five languages c sharp go javascript or typescript what i'm going to do",
    "start": "1091280",
    "end": "1099760"
  },
  {
    "text": "is i'm going to create a new azure typescript gloomy program and it's going to prompt",
    "start": "1099760",
    "end": "1105520"
  },
  {
    "text": "me to give me some information so it knows how to spin up this or how to template this code for me so",
    "start": "1105520",
    "end": "1112480"
  },
  {
    "text": "i'm just going to call this project the plumi project like we were discussing ndc the default",
    "start": "1112480",
    "end": "1118000"
  },
  {
    "text": "again just this default project description now we get to pick a stack and",
    "start": "1118000",
    "end": "1126080"
  },
  {
    "text": "you could name the stack whatever you want uh you might you know name it your name if you want different stacks",
    "start": "1126080",
    "end": "1131840"
  },
  {
    "text": "for the different developers but again i'm just going to keep it as the default the dev stack we can choose the azure environment even",
    "start": "1131840",
    "end": "1139039"
  },
  {
    "text": "but of course i'm just going to pick public and lastly we can choose the default azure location because this technically",
    "start": "1139039",
    "end": "1144559"
  },
  {
    "text": "is ndc sydney even though i'm in melbourne i'm going to pick australia east",
    "start": "1144559",
    "end": "1152080"
  },
  {
    "text": "all right and now that's gonna go and create uh the project and right now it's",
    "start": "1153200",
    "end": "1160480"
  },
  {
    "text": "actually doing an npm install and the reason it's doing that is because we created a typescript program",
    "start": "1160480",
    "end": "1166640"
  },
  {
    "text": "and the next thing it does is it downloads the that we need to use remember how",
    "start": "1166640",
    "end": "1173280"
  },
  {
    "text": "pollumi can work with many clouds and many providers this plugin lets follow me with azure",
    "start": "1173280",
    "end": "1182160"
  },
  {
    "text": "cool we're up and ready to go so let's have a look at what this code actually looks like",
    "start": "1182160",
    "end": "1193520"
  },
  {
    "text": "um i'm not gonna full screen like that do it like this",
    "start": "1193520",
    "end": "1199760"
  },
  {
    "text": "i'll zoom in so everyone can see that okay so i can tell i'm in a pollumi",
    "start": "1200400",
    "end": "1207039"
  },
  {
    "text": "program because i've got my plumie.yaml here but the real meat of the mata happens here",
    "start": "1207039",
    "end": "1214880"
  },
  {
    "text": "in index.ts so in index.ts is where we're actually",
    "start": "1214880",
    "end": "1222559"
  },
  {
    "text": "going to define our infrastructure so i can see just by reading this this is a property",
    "start": "1222559",
    "end": "1230080"
  },
  {
    "text": "of understandability what this program is going to do and pretty obvious it's going to create a",
    "start": "1230080",
    "end": "1236000"
  },
  {
    "text": "resource group and then it's going to create a storage account by newing up these objects",
    "start": "1236000",
    "end": "1243440"
  },
  {
    "text": "and down the bottom here it's going to export the connection string for the storage account",
    "start": "1243440",
    "end": "1249919"
  },
  {
    "text": "okay so let's do that",
    "start": "1249919",
    "end": "1253759"
  },
  {
    "text": "i've got a short alias for gloomy just p in my shell but this is just",
    "start": "1255760",
    "end": "1264000"
  },
  {
    "text": "equivalent to writing poly me up and now this is going to go and compare",
    "start": "1264000",
    "end": "1269200"
  },
  {
    "text": "the desired state that it gets from running that program with the actual state",
    "start": "1269200",
    "end": "1274720"
  },
  {
    "text": "and of course the actual state is empty because we only just created this stack and it tells me what it's going to do",
    "start": "1274720",
    "end": "1281039"
  },
  {
    "text": "right it knows that it's got to create a resource group and it knows it's got to create a storage account",
    "start": "1281039",
    "end": "1286480"
  },
  {
    "text": "so let's do that and now you can watch these things being",
    "start": "1286480",
    "end": "1291600"
  },
  {
    "text": "created one thing you'll notice is that i didn't have to give",
    "start": "1291600",
    "end": "1298240"
  },
  {
    "text": "a lot of res a lot of parameters to the creation of this resource group",
    "start": "1298240",
    "end": "1303280"
  },
  {
    "text": "if i mouse over this you'll see from the intellisense that there are a bunch of options i could pass into this constructor",
    "start": "1303280",
    "end": "1309200"
  },
  {
    "text": "but the only one i need to pass is this name at least for the azure resource group",
    "start": "1309200",
    "end": "1316840"
  },
  {
    "text": "type that name is actually not the name of the resource group in azure it's actually",
    "start": "1316840",
    "end": "1323600"
  },
  {
    "text": "the name of the resource in pollumi",
    "start": "1323600",
    "end": "1328799"
  },
  {
    "text": "you look at this name here name resource group that's the name we",
    "start": "1328799",
    "end": "1335520"
  },
  {
    "text": "defined the actual resource group that got created is not going to be called resource group it's going to have a kind",
    "start": "1335520",
    "end": "1341840"
  },
  {
    "text": "of random name basically and i can probably show you that",
    "start": "1341840",
    "end": "1348799"
  },
  {
    "text": "i refresh that oh",
    "start": "1350799",
    "end": "1356400"
  },
  {
    "text": "god that one but not that one interesting um don't know where that went obviously",
    "start": "1358480",
    "end": "1364080"
  },
  {
    "text": "not that subscription um okay but what i'm going to show you is now how when you make a change the",
    "start": "1364080",
    "end": "1369919"
  },
  {
    "text": "way pollumi plans and knows how to make changes so you can pass options into your",
    "start": "1369919",
    "end": "1377840"
  },
  {
    "text": "resource group and enforce it to do different behavior so one of the options i you can pass is for example the name",
    "start": "1377840",
    "end": "1385840"
  },
  {
    "text": "okay and i'm just going to call this you know ndc demo my resource group now this is the",
    "start": "1385840",
    "end": "1392720"
  },
  {
    "text": "name of the resource group that i've forced to be this property and now if i",
    "start": "1392720",
    "end": "1398080"
  },
  {
    "text": "flew me up again it's going to do the same thing it did before compare the current state to my",
    "start": "1398080",
    "end": "1405200"
  },
  {
    "text": "desired state and then it's going to tell me via this preview feature what it has to do",
    "start": "1405200",
    "end": "1411840"
  },
  {
    "text": "and you'll see that it knows that the resource group's name has changed from this diff here",
    "start": "1412000",
    "end": "1419440"
  },
  {
    "text": "and it also knows that resource groups in azure can't have their names changed",
    "start": "1419440",
    "end": "1425760"
  },
  {
    "text": "resource groups are kind of stuck with the name that they're created with so when i go to change the name it knows",
    "start": "1425760",
    "end": "1430960"
  },
  {
    "text": "that this is a destructive process for this resource group and it needs to be deleted",
    "start": "1430960",
    "end": "1436320"
  },
  {
    "text": "and then replaced it also knows because of the dependency tree which it",
    "start": "1436320",
    "end": "1443120"
  },
  {
    "text": "infers from this line that the resource group for our storage account",
    "start": "1443120",
    "end": "1448799"
  },
  {
    "text": "uh is the resource group that we created above that the storage account also needs to be deleted and recreated",
    "start": "1448799",
    "end": "1456720"
  },
  {
    "text": "and then it also has inferred that the connection string output which you see here is going to be",
    "start": "1457440",
    "end": "1463120"
  },
  {
    "text": "deleted and it's going to be recreated with a with a new",
    "start": "1463120",
    "end": "1468159"
  },
  {
    "text": "connection string the way polyme deals with this dependency or unknown at plan time value",
    "start": "1468159",
    "end": "1475919"
  },
  {
    "text": "is it uses this type called output so this is a string but before the storage account is",
    "start": "1475919",
    "end": "1481600"
  },
  {
    "text": "created we don't know what the connection string is going to be so we use this placeholder called the output",
    "start": "1481600",
    "end": "1487840"
  },
  {
    "text": "so i'm not going to do that what i'm actually going to do instead is a destroy",
    "start": "1488880",
    "end": "1493679"
  },
  {
    "text": "destroyers are really useful because you don't want lots of infrastructure just sitting around everywhere it does cost",
    "start": "1495440",
    "end": "1500559"
  },
  {
    "text": "money i'm sure all of us have experienced cloud bill shock so what i'm going to do and says i'm",
    "start": "1500559",
    "end": "1505760"
  },
  {
    "text": "just going to delete this infrastructure and in a moment i'm going to show you a more full example",
    "start": "1505760",
    "end": "1512640"
  },
  {
    "text": "of the kind infrastructure you might actually want to create that's a bit more complex than just a resource group with a storage account",
    "start": "1512640",
    "end": "1519120"
  },
  {
    "text": "inside it but before we do that let's talk about secrets",
    "start": "1519120",
    "end": "1529840"
  },
  {
    "text": "okay so what are secrets secrets are the things that let you",
    "start": "1539840",
    "end": "1545200"
  },
  {
    "text": "interact with your infrastructure right and the hard part about them is that",
    "start": "1545200",
    "end": "1550240"
  },
  {
    "text": "they have to go somewhere people need access to them but not everybody they need to be in the right place at",
    "start": "1550240",
    "end": "1555919"
  },
  {
    "text": "the right time so you know you're going to need secrets on your developer machine when you want to prototype some new",
    "start": "1555919",
    "end": "1563200"
  },
  {
    "text": "thing with some new cloud service you'll need the connection string to that cloud resource you'll need secrets in each of your",
    "start": "1563200",
    "end": "1569600"
  },
  {
    "text": "environments in your development your staging and your production environment but you've got to make sure they're different obviously and you really want",
    "start": "1569600",
    "end": "1576799"
  },
  {
    "text": "to make sure that your production secret doesn't end up in your development environment it's really painful when you",
    "start": "1576799",
    "end": "1582720"
  },
  {
    "text": "accidentally run a test against your production database and fill it up with something",
    "start": "1582720",
    "end": "1587840"
  },
  {
    "text": "unpleasant uh and the last place you're gonna need your secrets are during",
    "start": "1587840",
    "end": "1593039"
  },
  {
    "text": "integration tests so how do you make sure that they get where they to go",
    "start": "1593039",
    "end": "1598880"
  },
  {
    "text": "diagrammatically we can think about it like this you know we've got secrets that get generated in a bunch of places maybe they're you",
    "start": "1598880",
    "end": "1605919"
  },
  {
    "text": "know existing third parties that we've we're using you know so maybe",
    "start": "1605919",
    "end": "1611120"
  },
  {
    "text": "we're using sendgrid and we've got an api key that we need obviously you've got your cloud",
    "start": "1611120",
    "end": "1616799"
  },
  {
    "text": "credentials which are really important and you've also got secrets for the",
    "start": "1616799",
    "end": "1621919"
  },
  {
    "text": "things that you create in the cloud so when i create a database i get a connection string",
    "start": "1621919",
    "end": "1627440"
  },
  {
    "text": "when i create a container registry um i get an admin password and a login",
    "start": "1627440",
    "end": "1634159"
  },
  {
    "text": "url and i already mentioned the kind of places that we need these things so what we really need in",
    "start": "1634159",
    "end": "1641520"
  },
  {
    "text": "this situation",
    "start": "1641520",
    "end": "1644399"
  },
  {
    "text": "is an abstraction layer that solves these problems but in each of",
    "start": "1647120",
    "end": "1653760"
  },
  {
    "text": "these places it just feels like we're consuming a secret that you know we didn't even care where it",
    "start": "1653760",
    "end": "1660000"
  },
  {
    "text": "came from we just know that it works",
    "start": "1660000",
    "end": "1663440"
  },
  {
    "text": "which came first the chicken or the secret no matter how hard you try you can't get rid of",
    "start": "1665200",
    "end": "1670720"
  },
  {
    "text": "secrets altogether you can imagine putting all of your secrets in a box and then lock the box with a key but now",
    "start": "1670720",
    "end": "1678000"
  },
  {
    "text": "this key is just the uber secret right so but there is a useful",
    "start": "1678000",
    "end": "1683600"
  },
  {
    "text": "concept here which is useful and that's the concept of identity",
    "start": "1683600",
    "end": "1688720"
  },
  {
    "text": "all of the big cloud providers have this concept of identity uh and basically an identity is not",
    "start": "1690080",
    "end": "1696799"
  },
  {
    "text": "attached to just a single secret that gives you access it groups secrets together and those",
    "start": "1696799",
    "end": "1703279"
  },
  {
    "text": "secrets have roles and capabilities so just as an example i have an identity",
    "start": "1703279",
    "end": "1709520"
  },
  {
    "text": "uh in azure active directory and that identity lets me interact with",
    "start": "1709520",
    "end": "1714720"
  },
  {
    "text": "some azure subscriptions but not others so identity is a good",
    "start": "1714720",
    "end": "1720080"
  },
  {
    "text": "place to have the root secret for your infrastructure",
    "start": "1720080",
    "end": "1725120"
  },
  {
    "text": "so for the infrastructure that i've been creating my password essentially for my",
    "start": "1725120",
    "end": "1730399"
  },
  {
    "text": "azure active directory account is the root secret so what are some of the tools that we",
    "start": "1730399",
    "end": "1736480"
  },
  {
    "text": "can use to enable this abstraction so",
    "start": "1736480",
    "end": "1741679"
  },
  {
    "text": "all of the three big cloud providers have their own uh built-in product for this",
    "start": "1741679",
    "end": "1748480"
  },
  {
    "text": "that does this kind of role in azure it's called key vault in aws it's called secrets manager",
    "start": "1748480",
    "end": "1753520"
  },
  {
    "text": "and gcp it's this kms thing and there's also a tool i want to mention here called hashicorp vault",
    "start": "1753520",
    "end": "1760399"
  },
  {
    "text": "which is different from the others in that it's actually a binary that you can deploy anywhere",
    "start": "1760399",
    "end": "1766080"
  },
  {
    "text": "and so again this one's going to be really useful if you're doing cross cloud stuff where you need to",
    "start": "1766080",
    "end": "1771200"
  },
  {
    "text": "manage your secrets in one location so of course you know they all support rotation which is pretty basic",
    "start": "1771200",
    "end": "1777440"
  },
  {
    "text": "they all have a pollumi provider which is really useful so you can create these things or manage them in pollumi",
    "start": "1777440",
    "end": "1783840"
  },
  {
    "text": "if you're using asp.net which i have been using heavily there is a slight advantage",
    "start": "1783840",
    "end": "1790960"
  },
  {
    "text": "that azure and aws have over the others which is uh they have an asp.net configuration",
    "start": "1790960",
    "end": "1797200"
  },
  {
    "text": "integration now this is just a new nuget package so it's nothing fundamental about those products and",
    "start": "1797200",
    "end": "1803200"
  },
  {
    "text": "and actually if you know of an asp.net configuration sdk for gcp or hashicorp um i'd love to",
    "start": "1803200",
    "end": "1810080"
  },
  {
    "text": "know about it premier prove this slide wrong um but that's really the only reason why you would",
    "start": "1810080",
    "end": "1816320"
  },
  {
    "text": "choose one over the other and of course the main reason is you know if you're purely on aws then just use aws sequence manager you",
    "start": "1816320",
    "end": "1823520"
  },
  {
    "text": "don't need to go and use anything else just use the default",
    "start": "1823520",
    "end": "1828080"
  },
  {
    "text": "okay so i'm going to give you a very brief uh introduction to asp.net core just so you understand what we're",
    "start": "1829520",
    "end": "1835039"
  },
  {
    "text": "talking about so blah blah blah this is what it says on the",
    "start": "1835039",
    "end": "1840640"
  },
  {
    "text": "you know website if you go to asp.net core website but all you really need to know is look it's a modern web server written in c sharp and",
    "start": "1840640",
    "end": "1847840"
  },
  {
    "text": "you get to write c sharp that's it",
    "start": "1847840",
    "end": "1851840"
  },
  {
    "text": "one thing it does use very heavily is dependency injection and dependency injection is probably the",
    "start": "1853279",
    "end": "1859760"
  },
  {
    "text": "most useful concept and pattern i think i ever learned",
    "start": "1859760",
    "end": "1864880"
  },
  {
    "text": "in in my career so you know a dependency is obviously an object that another",
    "start": "1864880",
    "end": "1870000"
  },
  {
    "text": "object depends on and the benefits of dependency injection",
    "start": "1870000",
    "end": "1875360"
  },
  {
    "text": "is that your implementation is abstracted away from where it's used so i as the consumer i don't need to care how",
    "start": "1875360",
    "end": "1882000"
  },
  {
    "text": "it's implemented those implementations can then be replaced so",
    "start": "1882000",
    "end": "1887120"
  },
  {
    "text": "i can connect to either azure sql database or a document db",
    "start": "1887120",
    "end": "1893440"
  },
  {
    "text": "database and as long as i'm using some kind of interface then i don't necessarily care what the",
    "start": "1893440",
    "end": "1899760"
  },
  {
    "text": "underlying database technology is it also means that your instantiation of these kind of objects",
    "start": "1899760",
    "end": "1905679"
  },
  {
    "text": "can be centralized which is useful when you want to control the amount of connections that you might",
    "start": "1905679",
    "end": "1911200"
  },
  {
    "text": "be making to a database for example you don't want to make 10 000 connections because you'll exhaust the pool pretty quickly",
    "start": "1911200",
    "end": "1919360"
  },
  {
    "text": "uh and the kind of last really useful thing that dependency injection means is that we can",
    "start": "1919440",
    "end": "1925919"
  },
  {
    "text": "mock some dependencies during during testing and the ultimate result of all this is that you get loosely coupled software",
    "start": "1925919",
    "end": "1933600"
  },
  {
    "text": "and in this instance what we care about when we talk about infrastructure and secrets is we want to loosely couple our software",
    "start": "1933600",
    "end": "1940320"
  },
  {
    "text": "from where the secrets come from so the way you do that if you're using asp.net is you use",
    "start": "1940320",
    "end": "1946559"
  },
  {
    "text": "the configuration system so what that does it injects your configurations including",
    "start": "1946559",
    "end": "1952320"
  },
  {
    "text": "your secrets at runtime and the secret provider is abstracted from the consumer",
    "start": "1952320",
    "end": "1958399"
  },
  {
    "text": "i've got a short example piece of code just to give you a sense of what this looks like in this",
    "start": "1958399",
    "end": "1965200"
  },
  {
    "text": "class you know we've got a constructor that uses the i options monitor interface which is a generic",
    "start": "1965200",
    "end": "1971519"
  },
  {
    "text": "for this my options class and then when the method my method",
    "start": "1971519",
    "end": "1978559"
  },
  {
    "text": "is called the current value of that options is now read into this",
    "start": "1978559",
    "end": "1984720"
  },
  {
    "text": "variable and what's useful is that this option could be set anywhere",
    "start": "1984720",
    "end": "1990000"
  },
  {
    "text": "this option could be set in a json file it could be set in an environment variable it could be a secret stored in azure key",
    "start": "1990000",
    "end": "1996480"
  },
  {
    "text": "vault but when i'm writing this code i don't need to worry about where it came from",
    "start": "1996480",
    "end": "2005840"
  },
  {
    "text": "so that's the end of the theory section of this presentation what",
    "start": "2006960",
    "end": "2013360"
  },
  {
    "text": "i'm going to do now is i'm going to show you a demonstration repository and code",
    "start": "2013360",
    "end": "2019919"
  },
  {
    "text": "that does a lot of this stuff and what it's going to do is it's going to take some secrets that get",
    "start": "2019919",
    "end": "2025360"
  },
  {
    "text": "generated in pollumi it's going to store those secrets in key vault and then it's going to allow",
    "start": "2025360",
    "end": "2033440"
  },
  {
    "text": "certain identities but not in others to access that keyboard read the secret and then consume it",
    "start": "2033440",
    "end": "2047840"
  },
  {
    "text": "so this is all um on this repository which i can provide a",
    "start": "2048560",
    "end": "2057118"
  },
  {
    "text": "link to this uh in the slack channel um at the end of this talk so you guys can see what i'm",
    "start": "2057119",
    "end": "2064240"
  },
  {
    "text": "talking about but i think it's probably easier just to show you what it looks like",
    "start": "2064240",
    "end": "2075839"
  },
  {
    "text": "very zoomed in okay so in this repository we've got",
    "start": "2077280",
    "end": "2086320"
  },
  {
    "text": "our source code and inside our source code we've got two directories we've got our infrastructure directory",
    "start": "2086320",
    "end": "2091679"
  },
  {
    "text": "and our app directory now our app directory is pretty close to",
    "start": "2091679",
    "end": "2098480"
  },
  {
    "text": "a file new project asp.net application um it's an asp.net",
    "start": "2098480",
    "end": "2104720"
  },
  {
    "text": "application using react um so that's why we've got this client app thing and",
    "start": "2104720",
    "end": "2110880"
  },
  {
    "text": "you know i can dig into client app and i can see what it is but the kind of main interesting point of",
    "start": "2110880",
    "end": "2117599"
  },
  {
    "text": "this asp.net application is in the program",
    "start": "2117599",
    "end": "2123839"
  },
  {
    "text": "and the startup so for those of you familiar with asp.net",
    "start": "2123839",
    "end": "2129200"
  },
  {
    "text": "you'll recognize this kind of entry point and what we've done",
    "start": "2129200",
    "end": "2136880"
  },
  {
    "text": "at this entry point is we've added this use key vault",
    "start": "2136880",
    "end": "2143760"
  },
  {
    "text": "and this used keyboard method is what connects our key vault into our configuration system",
    "start": "2143760",
    "end": "2152160"
  },
  {
    "text": "so what we've done is we've grabbed the keyboard uri from our settings and so this is",
    "start": "2152160",
    "end": "2158960"
  },
  {
    "text": "actually going to come through the environment variable and then using the azure service token provider",
    "start": "2158960",
    "end": "2166320"
  },
  {
    "text": "and the key vault client we connect it all up and this is all",
    "start": "2166320",
    "end": "2171839"
  },
  {
    "text": "done in the nougat package you don't need to worry too much about this and the long story short is that you get",
    "start": "2171839",
    "end": "2178079"
  },
  {
    "text": "your secrets now injected into your configuration system i'm not going to go too deeply into this",
    "start": "2178079",
    "end": "2184320"
  },
  {
    "text": "code you can see this on github and you can poke around with it but all",
    "start": "2184320",
    "end": "2190160"
  },
  {
    "text": "you need to know really is that this nougat package means that your secrets end up where they need to be",
    "start": "2190160",
    "end": "2195839"
  },
  {
    "text": "the one kind of interesting part here is i think this azure service token provider",
    "start": "2195839",
    "end": "2201200"
  },
  {
    "text": "what that does is it looks for an identity that's going to be attached to the",
    "start": "2201200",
    "end": "2208560"
  },
  {
    "text": "to wherever this application is running and it's going to grab a token related to that identity and then that's",
    "start": "2208960",
    "end": "2214320"
  },
  {
    "text": "the token that's going to use to access the key vault and i think a good way to",
    "start": "2214320",
    "end": "2221040"
  },
  {
    "text": "demonstrate how that works is to show uh what that looks like in the plumi",
    "start": "2221040",
    "end": "2226839"
  },
  {
    "text": "program so i've put everything into one big",
    "start": "2226839",
    "end": "2236400"
  },
  {
    "text": "file called index.ts but you don't need to do that because this is just a regular",
    "start": "2236480",
    "end": "2242240"
  },
  {
    "text": "typescript program you can break this up into multiple files you",
    "start": "2242240",
    "end": "2247760"
  },
  {
    "text": "can create your own custom resources if you want to do that you can do most of the things you can do",
    "start": "2247760",
    "end": "2254320"
  },
  {
    "text": "in in javascript so i've got this section here between",
    "start": "2254320",
    "end": "2260560"
  },
  {
    "text": "lines 11 and 17 that's really meant to show why you might use pollumi",
    "start": "2260560",
    "end": "2266400"
  },
  {
    "text": "rather than something like terraform and this is kind of a silly example",
    "start": "2266400",
    "end": "2272079"
  },
  {
    "text": "where we're going to check if it's a friday and you know if it is a friday so the day of week is five",
    "start": "2272079",
    "end": "2278160"
  },
  {
    "text": "then we're just gonna throw we're gonna say you know hey don't deploy on friday that's a that's a big mistake",
    "start": "2278160",
    "end": "2284960"
  },
  {
    "text": "and the reason i'm doing this is to show you that when you're writing programs in pollumi",
    "start": "2284960",
    "end": "2290800"
  },
  {
    "text": "you still get all of the nice magic that you get from writing regular javascript",
    "start": "2290800",
    "end": "2295920"
  },
  {
    "text": "doing this kind of a comparison this kind of control flow would be quite difficult in terraform",
    "start": "2295920",
    "end": "2303520"
  },
  {
    "text": "because you don't get you know methods like this and you don't get to write you know easy to read if",
    "start": "2303520",
    "end": "2311119"
  },
  {
    "text": "statements so let me kind of scroll through this",
    "start": "2311119",
    "end": "2317119"
  },
  {
    "text": "and i'll show you what we're doing here",
    "start": "2317119",
    "end": "2322400"
  },
  {
    "text": "this is kind of a little bit too long for me really to go into all of it in depth so",
    "start": "2322400",
    "end": "2329280"
  },
  {
    "text": "if there's any questions you can type in the chat and i can address them but similar to before you",
    "start": "2329280",
    "end": "2335280"
  },
  {
    "text": "know we're going to create a resource group this time i'm going to give it some tags and a name",
    "start": "2335280",
    "end": "2341760"
  },
  {
    "text": "um i'm going to create a key vault right",
    "start": "2341760",
    "end": "2346800"
  },
  {
    "text": "again i'm just going to give it the regular sku and i also have to give it the tenant id which is something specific to the key",
    "start": "2347119",
    "end": "2353040"
  },
  {
    "text": "vault object similar as to before i'm going to create a storage account",
    "start": "2353040",
    "end": "2359839"
  },
  {
    "text": "and i can do quite complex stuff right i can create a storage container in the storage account i can create a storage",
    "start": "2359839",
    "end": "2364960"
  },
  {
    "text": "account table you can get quite granular",
    "start": "2364960",
    "end": "2370079"
  },
  {
    "text": "with what you're doing and you can even if you want to import the azure storage sdk and start to",
    "start": "2370079",
    "end": "2375839"
  },
  {
    "text": "manipulate things inside the table if you really want to because it's good practice i'm going to",
    "start": "2375839",
    "end": "2381920"
  },
  {
    "text": "create an app insights application insights monitoring thing i'm going to create a container registry",
    "start": "2381920",
    "end": "2388640"
  },
  {
    "text": "because one of the things i'm going to do is i'm going to build a docker image of my asp.net",
    "start": "2388640",
    "end": "2394400"
  },
  {
    "text": "application and i'm going to push it to this container registry and i can do that using this polyme tool",
    "start": "2394400",
    "end": "2403119"
  },
  {
    "text": "or this sort of not tool class called a docker image",
    "start": "2403119",
    "end": "2412160"
  },
  {
    "text": "and i give it the context which is app which i was just showing you and i give it the registry that we want to push to and",
    "start": "2412160",
    "end": "2420640"
  },
  {
    "text": "when i run this it's going to go in and push this image up to my registry",
    "start": "2420640",
    "end": "2427040"
  },
  {
    "text": "last couple of things we want to do is obviously we want to run this application somewhere and i'm going to",
    "start": "2427119",
    "end": "2432560"
  },
  {
    "text": "run it in an app service plan and because i want to use containers i",
    "start": "2432560",
    "end": "2437599"
  },
  {
    "text": "want to run it that way then i'm going to have to create a linux container uh and i have to give it this screw",
    "start": "2437599",
    "end": "2444400"
  },
  {
    "text": "there's a bunch of options you can give it here and then within the app service we created we actually have to create",
    "start": "2444400",
    "end": "2450880"
  },
  {
    "text": "an app service plan sorry we actually have to create an application and we can do stuff like set settings",
    "start": "2450880",
    "end": "2456960"
  },
  {
    "text": "the app settings and this is also a piece of configuration so there is at least one secret",
    "start": "2456960",
    "end": "2464720"
  },
  {
    "text": "that we'll need to actually no there's no secrets here look at that magic oh okay so there's the",
    "start": "2464720",
    "end": "2470800"
  },
  {
    "text": "applications instrumentation key",
    "start": "2470800",
    "end": "2474319"
  },
  {
    "text": "kind of a secret but mostly not but we do need to say where it's going to pull the container",
    "start": "2475839",
    "end": "2482079"
  },
  {
    "text": "from the kind of secret or the kind of key we're going to give it is this",
    "start": "2482079",
    "end": "2488400"
  },
  {
    "text": "identity object and this is like a managed identity in azure",
    "start": "2488400",
    "end": "2494560"
  },
  {
    "text": "and it's going to use this identity to access the key vault and then get all the other secrets that it's going to",
    "start": "2494560",
    "end": "2499599"
  },
  {
    "text": "need but we do need to say it is allowed access to keyboard",
    "start": "2499599",
    "end": "2504720"
  },
  {
    "text": "and we do that by creating key vault access policies",
    "start": "2504720",
    "end": "2509760"
  },
  {
    "text": "i looped through all of the access policies some are static and some aren't but the one you probably care about",
    "start": "2509760",
    "end": "2515040"
  },
  {
    "text": "is the one for the application",
    "start": "2515040",
    "end": "2522400"
  },
  {
    "text": "do you like keeping yourself on your mute sorry if you're",
    "start": "2522400",
    "end": "2527200"
  },
  {
    "text": "cool uh and then okay once we've created all this infrastructure all we need to do now is store",
    "start": "2533200",
    "end": "2538319"
  },
  {
    "text": "the secrets that we need to use in our um in our key vault",
    "start": "2538319",
    "end": "2545920"
  },
  {
    "text": "so i grab the connection string from my storage account and i can store",
    "start": "2546240",
    "end": "2552400"
  },
  {
    "text": "it in the key vault using this azure keyboard secret class but to make it really obvious what's",
    "start": "2552400",
    "end": "2558640"
  },
  {
    "text": "happening i can also just store arbitrary strings and i'm",
    "start": "2558640",
    "end": "2564319"
  },
  {
    "text": "going to store this string here for you so let's say hello",
    "start": "2564319",
    "end": "2570800"
  },
  {
    "text": "and dc sydney save that",
    "start": "2570800",
    "end": "2579838"
  },
  {
    "text": "and [Music] there we go",
    "start": "2581440",
    "end": "2587280"
  },
  {
    "text": "i'm in the trash",
    "start": "2588960",
    "end": "2593838"
  },
  {
    "text": "i can use this command to check which stack i'm a part of i want to be in this dev stack because we also have a production stack which i'll show you in",
    "start": "2597119",
    "end": "2603200"
  },
  {
    "text": "a moment and i'm just going to spin up my infrastructure",
    "start": "2603200",
    "end": "2607839"
  },
  {
    "text": "so what you'll see here is you'll see it'll plan the kinds of changes it needs to make because there are no resources",
    "start": "2608960",
    "end": "2615599"
  },
  {
    "text": "it's going to have to create everything and all of these",
    "start": "2615599",
    "end": "2622319"
  },
  {
    "text": "pollumi resources map exactly to the code that we just saw so you can see the docker image that i",
    "start": "2622319",
    "end": "2627839"
  },
  {
    "text": "defined you can see the resource group you can see the storage accounts plus",
    "start": "2627839",
    "end": "2634160"
  },
  {
    "text": "the container and table you can even see the access policies so everything that is getting created",
    "start": "2634160",
    "end": "2641599"
  },
  {
    "text": "every every object that i created in my pollute program is now being turned into literally",
    "start": "2641599",
    "end": "2648560"
  },
  {
    "text": "resources in azure and what's really interesting i think is",
    "start": "2648560",
    "end": "2653920"
  },
  {
    "text": "that you can do stuff that is not related to just azure so like i said i'm creating a",
    "start": "2653920",
    "end": "2660960"
  },
  {
    "text": "docker image here you can even see some of the some of the docker commands kind of",
    "start": "2660960",
    "end": "2666079"
  },
  {
    "text": "popping up in the blog here on the right now you don't have to do it this way you",
    "start": "2666079",
    "end": "2671920"
  },
  {
    "text": "can also create your infrastructure and then deploy your containers in a different way",
    "start": "2671920",
    "end": "2677359"
  },
  {
    "text": "and there are pros and cons one way or the other this way is is simpler in the sense that",
    "start": "2677359",
    "end": "2683119"
  },
  {
    "text": "i just have to run polyme up and everything gets spun",
    "start": "2683119",
    "end": "2688160"
  },
  {
    "text": "up for me i don't have to run a second process but the downside here is you don't get to do any kind of promoting",
    "start": "2688160",
    "end": "2694720"
  },
  {
    "text": "you know you can't do blue green deployments very easily this way",
    "start": "2694720",
    "end": "2700560"
  },
  {
    "text": "you can't use the the promotion feature in app service for example app service has a way of setting slots",
    "start": "2700560",
    "end": "2707599"
  },
  {
    "text": "and then promoting from that slot up into production and back again",
    "start": "2707599",
    "end": "2714640"
  },
  {
    "text": "so you can see most of these things are created except for the key vault",
    "start": "2716560",
    "end": "2722078"
  },
  {
    "text": "and then it actually even pushed my image up to the",
    "start": "2722160",
    "end": "2729040"
  },
  {
    "text": "container registry and while this is ready to finish look let me show you",
    "start": "2729760",
    "end": "2734880"
  },
  {
    "text": "what the",
    "start": "2734880",
    "end": "2739279"
  },
  {
    "text": "oh let me show you how you can actually put this into production",
    "start": "2740240",
    "end": "2745440"
  },
  {
    "text": "so you can see from this that as long as we can run plummy up with an identity that has access to our",
    "start": "2745440",
    "end": "2752079"
  },
  {
    "text": "azure subscription then we can create the infrastructure that we care about you can also see that i've got two",
    "start": "2752079",
    "end": "2758839"
  },
  {
    "text": "stacks one of them is my oops my development stack and one of them is",
    "start": "2758839",
    "end": "2765760"
  },
  {
    "text": "my production stack in development i can you know change the",
    "start": "2765760",
    "end": "2772240"
  },
  {
    "text": "configuration if i want to and in production i've actually got a slightly different configuration",
    "start": "2772240",
    "end": "2777520"
  },
  {
    "text": "in production i'm i've added this service principle to the kind of identities that i want to have access to",
    "start": "2777520",
    "end": "2783040"
  },
  {
    "text": "the keyboard and that's because in production this service principle",
    "start": "2783040",
    "end": "2788960"
  },
  {
    "text": "is going to be running on my github actions host and that's where we want to",
    "start": "2788960",
    "end": "2794079"
  },
  {
    "text": "run our integration tests and that's why this service principle will need access to",
    "start": "2794079",
    "end": "2800319"
  },
  {
    "text": "the keyboard so when i deploy this via github actions",
    "start": "2800319",
    "end": "2805440"
  },
  {
    "text": "and i'll show you apologies for so much yaml uh you can you can basically grab yaml",
    "start": "2805440",
    "end": "2812800"
  },
  {
    "text": "very similar to this uh drop it in your repository under github workflows and then when you start pushing code",
    "start": "2812800",
    "end": "2819920"
  },
  {
    "text": "it's going to spin it up for you you can do it after you run tests you can target different environments",
    "start": "2819920",
    "end": "2827760"
  },
  {
    "text": "so it's pretty simple i just basically install polomi i run plumey up",
    "start": "2827920",
    "end": "2834720"
  },
  {
    "text": "and i give it the secrets that it needs to run so the kind of secrets it needs obviously needs access to azure which",
    "start": "2834720",
    "end": "2841520"
  },
  {
    "text": "are these first three and it also needs access to your pollumi account so i sort of glossed over earlier how you",
    "start": "2841520",
    "end": "2848720"
  },
  {
    "text": "can install and initialize polyme on your machine it's relatively simple it's quite",
    "start": "2848720",
    "end": "2854000"
  },
  {
    "text": "similar to how you would log into the azure cli uh you can just log in by the cli and",
    "start": "2854000",
    "end": "2859200"
  },
  {
    "text": "it'll take you to a browser and and do a redirect um i know idc redirect for you",
    "start": "2859200",
    "end": "2865760"
  },
  {
    "text": "so coming back to our plume up that was running here my dev machine",
    "start": "2869119",
    "end": "2876480"
  },
  {
    "text": "you can see this has all been created and i've got an endpoint and this endpoint is my",
    "start": "2876480",
    "end": "2884079"
  },
  {
    "text": "azure websites app service url and if i go to it",
    "start": "2884079",
    "end": "2891680"
  },
  {
    "text": "okay cool i can see my program is running it looks like it's working and i've",
    "start": "2891680",
    "end": "2899040"
  },
  {
    "text": "put a little dodgy bit here where in this basic weather component um page",
    "start": "2899040",
    "end": "2906240"
  },
  {
    "text": "which comes out of the box when you do a um create a new project an asp.net project",
    "start": "2906240",
    "end": "2912000"
  },
  {
    "text": "i've just tacked the secret onto the end there and you can see the secret says hello ndc sydney which is",
    "start": "2912000",
    "end": "2919520"
  },
  {
    "text": "the same secret i set in index hello ndc sydney",
    "start": "2919520",
    "end": "2929920"
  },
  {
    "text": "now one thing to be aware of is that often these secrets are cached so",
    "start": "2929920",
    "end": "2936800"
  },
  {
    "text": "if i change this to hello melbourne and run the same thing again it is going",
    "start": "2936800",
    "end": "2944800"
  },
  {
    "text": "to detect that there are changes and it actually is going to change the um secret in key vault",
    "start": "2944800",
    "end": "2953200"
  },
  {
    "text": "the challenge becomes the application caches these secrets it catches all of its configuration and",
    "start": "2953200",
    "end": "2959760"
  },
  {
    "text": "that's a good thing because you don't want your application going back to key vault every single time it needs the",
    "start": "2959760",
    "end": "2965680"
  },
  {
    "text": "connection string for example but on the other hand what it means is that",
    "start": "2965680",
    "end": "2972240"
  },
  {
    "text": "when i change the secret like i just did and i come and refresh this page it",
    "start": "2972240",
    "end": "2979200"
  },
  {
    "text": "still says hello ndc sydney and that's because it's cached so there's two ways you can",
    "start": "2979200",
    "end": "2986800"
  },
  {
    "text": "solve this problem one is you can call a method called configuration.reload inside",
    "start": "2986800",
    "end": "2993599"
  },
  {
    "text": "your application but how are you going to know to do that it's a bit complicated",
    "start": "2993599",
    "end": "2998880"
  },
  {
    "text": "i find the easiest way is just to force restarts of your application now and then so i mean if i deploy a new container if",
    "start": "2998880",
    "end": "3006079"
  },
  {
    "text": "i make changes to the container and i deploy it then it's going to force a restart and it's going to reload",
    "start": "3006079",
    "end": "3012000"
  },
  {
    "text": "all of my secrets and it's probably going to just naturally cycle at some point when the underlying infrastructure changes",
    "start": "3012000",
    "end": "3019760"
  },
  {
    "text": "one thing you may want to see as well is what this looks like uh when i deploy",
    "start": "3020319",
    "end": "3027839"
  },
  {
    "text": "via actions so that yaml i showed you earlier",
    "start": "3027839",
    "end": "3033359"
  },
  {
    "text": "that defines this github workflow that runs",
    "start": "3033359",
    "end": "3041040"
  },
  {
    "text": "uh you can see it all of these runs here you can see all the times i broke it and it didn't work",
    "start": "3041040",
    "end": "3054160"
  },
  {
    "text": "and you can even see where i ran blew me up",
    "start": "3054160",
    "end": "3059119"
  },
  {
    "text": "and i did all of the stuff that you saw running on my machine it built the container created all of the things and etc",
    "start": "3059200",
    "end": "3066720"
  },
  {
    "text": "and you can even see here the endpoint for my production thing a different endpoint different secret and if i go here",
    "start": "3066720",
    "end": "3075200"
  },
  {
    "text": "you'll see a different secret to the one i said in my development environment",
    "start": "3075200",
    "end": "3080319"
  },
  {
    "text": "so this is really important make sure that when you're deploying your things and",
    "start": "3080319",
    "end": "3086000"
  },
  {
    "text": "you're using your secrets you can ensure that your secrets uh",
    "start": "3086000",
    "end": "3091119"
  },
  {
    "text": "in your development environment your production environment are different uh last thing i will show you uh",
    "start": "3091119",
    "end": "3099119"
  },
  {
    "text": "is what pollumi looks like in the web uh in the web interface",
    "start": "3099119",
    "end": "3105440"
  },
  {
    "text": "i can see i need to refresh that",
    "start": "3105440",
    "end": "3111040"
  },
  {
    "text": "somewhere here i'm going to have my ndc stack",
    "start": "3111040",
    "end": "3115839"
  },
  {
    "text": "and this is a useful way to keep an eye on what's going on in your infrastructure it's kind of like",
    "start": "3116640",
    "end": "3122000"
  },
  {
    "text": "a different view so here i can see my um ndc project sorry and i can see",
    "start": "3122000",
    "end": "3128240"
  },
  {
    "text": "uh the stuff i've been doing recently i can see you know in the master environments i",
    "start": "3128240",
    "end": "3138240"
  },
  {
    "text": "run this before oh this is actually the one i created as a demo earlier that's not what i wanted to show you",
    "start": "3138240",
    "end": "3145200"
  },
  {
    "text": "it's actually this one this is one we were just looking at and",
    "start": "3146720",
    "end": "3152400"
  },
  {
    "text": "i can see the same endpoint the same keyboard url the name of the resource group",
    "start": "3152400",
    "end": "3157520"
  },
  {
    "text": "and i can even dive in and start to look at some of the resources inside so for example i can look at the docker",
    "start": "3157520",
    "end": "3163359"
  },
  {
    "text": "image and i can see you know exactly the docker image that's deployed i can see the logs that were associated with it",
    "start": "3163359",
    "end": "3170400"
  },
  {
    "text": "so this is quite a useful way to get insight into what's going on uh in your infrastructure how it's",
    "start": "3170400",
    "end": "3175440"
  },
  {
    "text": "getting deployed and i tend to use this if i don't understand a problem that's that's occurred or",
    "start": "3175440",
    "end": "3181760"
  },
  {
    "text": "something like that okay so pretty much run out of time",
    "start": "3181760",
    "end": "3190800"
  },
  {
    "text": "and i know that was a big demo but what i wanted to show you is how you can do this",
    "start": "3190800",
    "end": "3197599"
  },
  {
    "text": "without exposing a lot of secrets like you notice i did that whole thing without",
    "start": "3197599",
    "end": "3202640"
  },
  {
    "text": "exposing any connection strings or anything on on the um on this recording",
    "start": "3202640",
    "end": "3209359"
  },
  {
    "text": "so a short number of sort of tips and takeaways things that i've learned from doing a",
    "start": "3209359",
    "end": "3214640"
  },
  {
    "text": "lot of pulling me ups first one is you know smaller stacks and",
    "start": "3214640",
    "end": "3219680"
  },
  {
    "text": "more of them one giant stack becomes quite complex",
    "start": "3219680",
    "end": "3226079"
  },
  {
    "text": "pollumi destroy can be a lot trickier than pulling me up",
    "start": "3226480",
    "end": "3231599"
  },
  {
    "text": "because when the infrastructure gets destroyed it destroys it in reverse order of",
    "start": "3231599",
    "end": "3237680"
  },
  {
    "text": "dependency and if there's one thing that can't be destroyed then anything that came before it",
    "start": "3237680",
    "end": "3245760"
  },
  {
    "text": "in the dependency tree also won't be destroyed and so you can kind of get stuck because one",
    "start": "3245760",
    "end": "3251119"
  },
  {
    "text": "thing can't be deleted one way to sometimes get around that is using a",
    "start": "3251119",
    "end": "3256960"
  },
  {
    "text": "command called polymer refresh and that can fix some problems but it can also cause others what polymer refresh does",
    "start": "3256960",
    "end": "3263200"
  },
  {
    "text": "is it looks at your cloud infrastructure compares it to your current state and then will if you want it to",
    "start": "3263200",
    "end": "3270960"
  },
  {
    "text": "update your current state to attempt to reflect the actual infrastructure so a good example of that might be in some",
    "start": "3270960",
    "end": "3278079"
  },
  {
    "text": "of those previous examples if i had used the azure portal to delete the storage account then",
    "start": "3278079",
    "end": "3284880"
  },
  {
    "text": "when i run plume refresh the state of my plumi stack will be updated",
    "start": "3284880",
    "end": "3291440"
  },
  {
    "text": "to reflect the fact that that storage account had been deleted so also use dependency injection it's",
    "start": "3291440",
    "end": "3298319"
  },
  {
    "text": "really great i saw another talk this morning recommending dependency injection similarly use configuration and",
    "start": "3298319",
    "end": "3305200"
  },
  {
    "text": "when you can prefer identity to a secret so if you can access a database or a",
    "start": "3305200",
    "end": "3311359"
  },
  {
    "text": "container registry or a key vault or whatever",
    "start": "3311359",
    "end": "3316480"
  },
  {
    "text": "via some kind of identity method rather than just a straight up connection string or a straight up secret then you should",
    "start": "3316480",
    "end": "3322559"
  },
  {
    "text": "always prefer that method because it's easier and you're less likely to expose a secret either in a",
    "start": "3322559",
    "end": "3328720"
  },
  {
    "text": "git repository or when you're sharing your screen",
    "start": "3328720",
    "end": "3332798"
  },
  {
    "text": "so thanks for coming and learning about how to create infrastructure and how to",
    "start": "3333760",
    "end": "3339440"
  },
  {
    "text": "protect your secrets uh i do have the slack channel open if",
    "start": "3339440",
    "end": "3344480"
  },
  {
    "text": "anyone has any questions but i also know it's 12 30 and right before lunch",
    "start": "3344480",
    "end": "3350559"
  },
  {
    "text": "so happy today questions um and if you don't want to ask here you can always reach out to me by any of these",
    "start": "3350559",
    "end": "3356880"
  },
  {
    "text": "contact methods i've listed below thanks everyone",
    "start": "3356880",
    "end": "3363838"
  },
  {
    "text": "you",
    "start": "3372640",
    "end": "3374720"
  }
]