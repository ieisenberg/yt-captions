[
  {
    "start": "0",
    "end": "105000"
  },
  {
    "text": "how well it pays off i think it's time to bring in aaron he's our our next speaker",
    "start": "7200",
    "end": "13840"
  },
  {
    "text": "see you lars hey aaron bye lars we say bye and and this is where we go",
    "start": "13840",
    "end": "20400"
  },
  {
    "text": "wait am i on mute am i me can you hear me yeah you're here you're here no i",
    "start": "20400",
    "end": "26000"
  },
  {
    "text": "i i was pretty sure i didn't have myself muted this time so yes fingers crossed",
    "start": "26000",
    "end": "31519"
  },
  {
    "text": "everybody uh there we have all the buttons everything all good yes i gotta hit all the buttons on the stream deck",
    "start": "31519",
    "end": "36559"
  },
  {
    "text": "and make sure everything's working now cool so you're talking to us today",
    "start": "36559",
    "end": "41600"
  },
  {
    "text": "about hype safe graphql with touchscript uh that's right and i'm reading the uh",
    "start": "41600",
    "end": "48079"
  },
  {
    "text": "the abstract here and it sounds really cool so there's cogeneration uh you're gonna be looking at",
    "start": "48079",
    "end": "55280"
  },
  {
    "text": "how to have efficient storage and a whole bunch of cool stuff you're looking at the schema combining schemas oh wow um",
    "start": "55280",
    "end": "63520"
  },
  {
    "text": "sounds interesting yes yes hopefully we've only got an hour",
    "start": "63520",
    "end": "69200"
  },
  {
    "text": "which seems like a long time but we know how quickly an hour can go past when uh",
    "start": "69200",
    "end": "74560"
  },
  {
    "text": "when we're presenting don't we yeah yeah it does fly uh so look good luck and i'm keen to listen to",
    "start": "74560",
    "end": "81280"
  },
  {
    "text": "all of what you have to say today so the show is all yours excellent",
    "start": "81280",
    "end": "86720"
  },
  {
    "text": "well thank you uh everyone who is joining in on the stream and uh",
    "start": "86720",
    "end": "91920"
  },
  {
    "text": "and and watching from wherever you are around the world um hopefully you are watching the right",
    "start": "91920",
    "end": "97360"
  },
  {
    "text": "session this is uh typescript and graphql we're going to be looking at how to use those together and how we can",
    "start": "97360",
    "end": "103520"
  },
  {
    "text": "build type safe applications for those of you that i haven't had a chance to meet before or haven't",
    "start": "103520",
    "end": "110880"
  },
  {
    "start": "105000",
    "end": "210000"
  },
  {
    "text": "been we haven't seen each other at an in-person event uh which i i miss them i really miss in-person events we'll get",
    "start": "110880",
    "end": "117439"
  },
  {
    "text": "back there soon my name is aaron powell and i work for microsoft part of the cloud advocacy team i've been doing web",
    "start": "117439",
    "end": "123520"
  },
  {
    "text": "development for going to say like 17 years now i don't know it's it's to that point where i'm",
    "start": "123520",
    "end": "129920"
  },
  {
    "text": "just like i do i just need to keep counting i don't really want to keep counting because it's it's getting long and i'm okay i",
    "start": "129920",
    "end": "136480"
  },
  {
    "text": "feel old when i say things like that particularly to uh to to people that i'm coaching mentoring that are just coming",
    "start": "136480",
    "end": "141920"
  },
  {
    "text": "into the industry but in that time i've been able to work with a lot of different aspects of web",
    "start": "141920",
    "end": "148480"
  },
  {
    "text": "development i've built applications that were like truly service centric where we were doing things like everything was on",
    "start": "148480",
    "end": "154000"
  },
  {
    "text": "the server you would always send the whole page back kind of web forms and pre-dating asp.net web forms to api",
    "start": "154000",
    "end": "160160"
  },
  {
    "text": "centered applications where we're building custom apis to expose data out to the consumer clients",
    "start": "160160",
    "end": "167040"
  },
  {
    "text": "to rest designed applications and more recently i've been looking at graphql on the role that it can play in the way",
    "start": "167040",
    "end": "173360"
  },
  {
    "text": "that we build applications um if you want to reach out to me after",
    "start": "173360",
    "end": "178640"
  },
  {
    "text": "this session if there's a question i don't get to answering in the time or anything like that uh you can find me on",
    "start": "178640",
    "end": "184800"
  },
  {
    "text": "social media you can find me on my email address um there uh i'll also be uh i'm",
    "start": "184800",
    "end": "190239"
  },
  {
    "text": "going to try and get into together town at lunchtime i'm actually going on a long weekend away because we're finally",
    "start": "190239",
    "end": "196640"
  },
  {
    "text": "allowed to leave our houses here in sydney um so i will try and jump in for a little bit in between packing the car",
    "start": "196640",
    "end": "202720"
  },
  {
    "text": "to head out this afternoon but i do reach out because i want to make sure that anything that you want to know i can help you get answered",
    "start": "202720",
    "end": "209599"
  },
  {
    "text": "but that's enough about me and all that kind of stuff you're here to learn about application design and particularly about graphql",
    "start": "209599",
    "end": "215599"
  },
  {
    "start": "210000",
    "end": "314000"
  },
  {
    "text": "but before we get into building an application and things like that i want to make sure that we're all on the same page of",
    "start": "215599",
    "end": "221120"
  },
  {
    "text": "what we're trying to do so we're going to build a game today this is a game that i built uh back when",
    "start": "221120",
    "end": "226640"
  },
  {
    "text": "we first started doing the lockdowns and the only way that we were interacting with our friends was via a video call",
    "start": "226640",
    "end": "231760"
  },
  {
    "text": "where we were playing like trivia and stuff like that so i was like well how do we build a trivia game so",
    "start": "231760",
    "end": "237760"
  },
  {
    "text": "let's start with the data model for that because this is the the fundamental constructs that we're going to work with is the underlying data set so we're",
    "start": "237760",
    "end": "243680"
  },
  {
    "text": "going to have a quiz or a game object that um is represented with a couple of fields on that so we've got an id so we",
    "start": "243680",
    "end": "250000"
  },
  {
    "text": "can uniquely identify games we'll have players again we'll have a state like are we waiting for players to join is",
    "start": "250000",
    "end": "255519"
  },
  {
    "text": "the game in progress or has the game completed are we going to have questions that are associated with the game and we're going to have answers that players",
    "start": "255519",
    "end": "261120"
  },
  {
    "text": "are providing to the to those questions so we end up with a relationship to a",
    "start": "261120",
    "end": "266800"
  },
  {
    "text": "players um object and that might have like the name of the player maybe we have some more information that we're um",
    "start": "266800",
    "end": "272800"
  },
  {
    "text": "sorry about the player maybe not um but then on that we could uh we we also have kind of a two-way relationship between",
    "start": "272800",
    "end": "279040"
  },
  {
    "text": "those darn models we can go from players back to the the games and we go from the games through to the players",
    "start": "279040",
    "end": "285360"
  },
  {
    "text": "and then of course we're going to have questions so these are our three primary data models and it's going to have the the name like the question that's being",
    "start": "285360",
    "end": "292000"
  },
  {
    "text": "asked the all the answers that are available for that because this is multiple choice and then the correct",
    "start": "292000",
    "end": "297680"
  },
  {
    "text": "answer that a player could needs to provide to get a passing point",
    "start": "297680",
    "end": "302880"
  },
  {
    "text": "for that game now this is a like it's a fairly basic data bottle we've got some relationships here and",
    "start": "302880",
    "end": "309280"
  },
  {
    "text": "as a result it could be there's a number of ways that we can represent this out in the way that we",
    "start": "309280",
    "end": "314400"
  },
  {
    "start": "314000",
    "end": "401000"
  },
  {
    "text": "consume it so let's start by talking about rest i know this is a graphql talk but i want to contextualize things about rest",
    "start": "314400",
    "end": "320080"
  },
  {
    "text": "because that's what we've done a lot of api development over the last n number of years and uh this is the way that i would",
    "start": "320080",
    "end": "326720"
  },
  {
    "text": "model this in a very strict rest sense so we have our our primary routes that",
    "start": "326720",
    "end": "331840"
  },
  {
    "text": "represent the data models and then from those we would either get back like all the quizzes or a quiz by its id um all",
    "start": "331840",
    "end": "338240"
  },
  {
    "text": "the players or a player by their id all the questions or a specific question um and",
    "start": "338240",
    "end": "344000"
  },
  {
    "text": "let's just think about the scenario where you're trying to display the um like the the completed game screen so for that",
    "start": "344000",
    "end": "349919"
  },
  {
    "text": "we're going to need to know the well the game id we're going to need to know what questions we're asked in that we're",
    "start": "349919",
    "end": "355759"
  },
  {
    "text": "going to need to know the answers and we're going to need to know the players and we're going to need to know the players and their answers",
    "start": "355759",
    "end": "361520"
  },
  {
    "text": "and in a very strict rest design we'll end up with a lot of links that we end up having to follow so we get back",
    "start": "361520",
    "end": "367919"
  },
  {
    "text": "that our first game from our quiz end point and then that's going to have back a bunch of links through to the players",
    "start": "367919",
    "end": "373120"
  },
  {
    "text": "and the questions so then we're going to fetch to the players and we're going to fetch the questions but we're also getting back data that we may not need",
    "start": "373120",
    "end": "379199"
  },
  {
    "text": "like we don't need all the answers necessarily on the the completed screen",
    "start": "379199",
    "end": "384240"
  },
  {
    "text": "we just need the correct answer so that we know if the player provided the correct answer when they um when they submitted",
    "start": "384240",
    "end": "391039"
  },
  {
    "text": "their their response through the question and this is where risk can have some",
    "start": "391039",
    "end": "396720"
  },
  {
    "text": "challenges in the way that a client will want to communicate with it",
    "start": "396720",
    "end": "402479"
  },
  {
    "start": "401000",
    "end": "577000"
  },
  {
    "text": "and then this is where graphql comes at a different approach to the way we can do client server communication in data",
    "start": "402479",
    "end": "409520"
  },
  {
    "text": "modeling so first off graphql isn't a server it isn't a client graphql is a",
    "start": "409520",
    "end": "414639"
  },
  {
    "text": "query language we have graphql servers that implement a consumer of the query language and can",
    "start": "414639",
    "end": "420560"
  },
  {
    "text": "process that query language break it down and then provide that through to your database and provide queries",
    "start": "420560",
    "end": "425680"
  },
  {
    "text": "against your database you can have clients that will construct graphql queries that can be sent to servers to process and things like that",
    "start": "425680",
    "end": "432160"
  },
  {
    "text": "but at the end of the day graphql is a query language it was originally developed by facebook um it was built by",
    "start": "432160",
    "end": "437280"
  },
  {
    "text": "facebook to solve problems that facebook has so something to bear in mind is that graphql is not gonna be right for every",
    "start": "437280",
    "end": "442880"
  },
  {
    "text": "single project that you build because it was designed for a very niche set of problems that facebook has um it's",
    "start": "442880",
    "end": "449840"
  },
  {
    "text": "evolved since then or do i need to call meta now no i think we'll still call it facebook uh",
    "start": "449840",
    "end": "455120"
  },
  {
    "text": "it's very much evolved from what the original uh problem that facebook was trying to solve so it's a bit more uh",
    "start": "455120",
    "end": "460560"
  },
  {
    "text": "general purpose but it's like i said it's not gonna be for everything facebook has since open source that",
    "start": "460560",
    "end": "466479"
  },
  {
    "text": "they've handed it over to the graphql foundation and they manage the evolution of the graphql language",
    "start": "466479",
    "end": "471759"
  },
  {
    "text": "so then what makes refuel really different to doing a rest api design is that you end",
    "start": "471759",
    "end": "476960"
  },
  {
    "text": "up with a full view of the data schema that's available for your um from your backend",
    "start": "476960",
    "end": "483199"
  },
  {
    "text": "system from your from your servers and that for by having this full scheme of view you can then work out what you need",
    "start": "483199",
    "end": "489680"
  },
  {
    "text": "at what point in time as a querying client so this means that let's say back to",
    "start": "489680",
    "end": "494720"
  },
  {
    "text": "that scenario where i want to show the um the the completed game screen well",
    "start": "494720",
    "end": "500160"
  },
  {
    "text": "for that i'm going to say i want the here's the game id and then i want players and i want maybe the player name",
    "start": "500160",
    "end": "506000"
  },
  {
    "text": "because i don't need any other information about players i need the game answers and i need to know whether",
    "start": "506000",
    "end": "511360"
  },
  {
    "text": "uh what the answer that the player provided i need to know the questions the question that was like the the",
    "start": "511360",
    "end": "516399"
  },
  {
    "text": "description of the question and then the correct answer and i can do that in one single request but i can also drop off the fields that",
    "start": "516399",
    "end": "522240"
  },
  {
    "text": "i don't need so this avoids an over fetching scenario where we're getting more data than we actually need at the",
    "start": "522240",
    "end": "527680"
  },
  {
    "text": "client which can be optimized then for maybe lower bandwidth available clients like",
    "start": "527680",
    "end": "533680"
  },
  {
    "text": "lars when he's sunk out in rural australia or mobile devices that don't have maybe the processing power to deal",
    "start": "533680",
    "end": "539040"
  },
  {
    "text": "with exceptionally large data models now there are other things that are useful about graphql that you can't do",
    "start": "539040",
    "end": "544080"
  },
  {
    "text": "with rest such as a subscriptions model which allows you to do real-time communication via",
    "start": "544080",
    "end": "549440"
  },
  {
    "text": "websockets so in that case um a use case in context of this game would be you're",
    "start": "549440",
    "end": "554880"
  },
  {
    "text": "waiting for players to join and then you have a screen and instead of having to do long polling saying is everyone joined is everyone joining everyone",
    "start": "554880",
    "end": "560800"
  },
  {
    "text": "joined you open websocket connections via subscriptions to your graphql server",
    "start": "560800",
    "end": "565920"
  },
  {
    "text": "and as someone as a player joins we drop a notification send that back over the um the websocket so that all connected",
    "start": "565920",
    "end": "572959"
  },
  {
    "text": "clients receive that information so that's graphql in a nutshell how does",
    "start": "572959",
    "end": "578320"
  },
  {
    "start": "577000",
    "end": "650000"
  },
  {
    "text": "it look well this is what a graphql query looks like um so this is oh sorry",
    "start": "578320",
    "end": "585120"
  },
  {
    "text": "this is a subset of a graphql schema what i've got is i've hidden away a bunch of the type models and things like",
    "start": "585120",
    "end": "590800"
  },
  {
    "text": "that and then this is just the entry point the way that you would query against the data structures that you've got with inside of your schema so we get",
    "start": "590800",
    "end": "597519"
  },
  {
    "text": "back again by its id we can get back all the games and we can get back the results for a particular player now if you look at this and it's kind of",
    "start": "597519",
    "end": "604800"
  },
  {
    "text": "like javascript like it's there you can see there's a javascript heritage in the way that this is designed but it's not",
    "start": "604800",
    "end": "611440"
  },
  {
    "text": "exactly javascript i mean there's types that i mean types don't exist to this degree in javascript um and",
    "start": "611440",
    "end": "619120"
  },
  {
    "text": "the things like using the bane operator like it there's no semicolons either i'm a very much a semicolon supporter in",
    "start": "619120",
    "end": "624959"
  },
  {
    "text": "javascript but that's kind of you can see where that data model and that object model is kind of related back",
    "start": "624959",
    "end": "632560"
  },
  {
    "text": "so then when we perform a query against this so we create a query so this is the kind of thing that a client would be creating we're saying we're going to",
    "start": "632560",
    "end": "638000"
  },
  {
    "text": "perform a query against a particular available query option within side of our schema we're going to pass that",
    "start": "638000",
    "end": "643760"
  },
  {
    "text": "through and then we're going to pick out the fields that we want back as a result we'll see a bit more of this as we get",
    "start": "643760",
    "end": "649440"
  },
  {
    "text": "into deros and start building our application now realistically you're going to need four core components to building and an",
    "start": "649440",
    "end": "655600"
  },
  {
    "start": "650000",
    "end": "772000"
  },
  {
    "text": "application with well basically any application you need somewhere to store the data you're going to need some sort of",
    "start": "655600",
    "end": "661360"
  },
  {
    "text": "infrastructure to run it on and then you have a client in the server to communicate together we're really going to focus on the top two pieces of this",
    "start": "661360",
    "end": "668399"
  },
  {
    "text": "the client and the server for this talk obviously i'm going to be using",
    "start": "668399",
    "end": "673680"
  },
  {
    "text": "certain infrastructure and i'm going to be using certain data stores but the the stuff that i'm covering i am not",
    "start": "673680",
    "end": "680000"
  },
  {
    "text": "necessarily impactful for the way that you could build this uh application um so i want",
    "start": "680000",
    "end": "685440"
  },
  {
    "text": "you to really focus more around the way the client and the server interact together so let's just talk a bit about those components",
    "start": "685440",
    "end": "691680"
  },
  {
    "text": "so for the server i'm going to be building it on azure functions so i like using the service programmatic model i",
    "start": "691680",
    "end": "698160"
  },
  {
    "text": "find that quite quite nice particularly from a price point for the sorts of applications that i'm building at the",
    "start": "698160",
    "end": "703680"
  },
  {
    "text": "moment and we're going to be using apollo as the graphql server implementation so apollo is an open",
    "start": "703680",
    "end": "708880"
  },
  {
    "text": "source project they have a server implementation for graphql that runs on top of azure functions it also runs",
    "start": "708880",
    "end": "714880"
  },
  {
    "text": "across pretty much any common javascript uh web application framework if you're using express or color",
    "start": "714880",
    "end": "721040"
  },
  {
    "text": "you can use it inside of there it supports i think most of the other clouds and their serverless programmatic",
    "start": "721040",
    "end": "726639"
  },
  {
    "text": "models and things like that so again the infrastructure here is not important but um i have to have some sort of",
    "start": "726639",
    "end": "733440"
  },
  {
    "text": "infrastructure underpinning this uh from a client standpoint i'm going to be building it in",
    "start": "733440",
    "end": "739440"
  },
  {
    "text": "uh react because well it's a facebook um heritage language so",
    "start": "739440",
    "end": "745279"
  },
  {
    "text": "um i also prefer react that's my kind of go-to web framework but the stuff again",
    "start": "745279",
    "end": "750959"
  },
  {
    "text": "that i'll show you from a client standpoint is applicable whether you're doing vue or svelte or angular or",
    "start": "750959",
    "end": "757120"
  },
  {
    "text": "like vanilla javascript without a web framework like is that doable do people",
    "start": "757120",
    "end": "762639"
  },
  {
    "text": "still do that anyway um that's gonna be my choice uh um and again you can swap all these",
    "start": "762639",
    "end": "770079"
  },
  {
    "text": "components out um it's not going to be hopefully impactful but what is the problem that we're ultimately trying to solve",
    "start": "770079",
    "end": "777200"
  },
  {
    "start": "772000",
    "end": "887000"
  },
  {
    "text": "graphql is a type based schema that is exposing our servers",
    "start": "777200",
    "end": "782800"
  },
  {
    "text": "our server's data out to consuming clients so it's got a type system within it we define types we can define enums",
    "start": "782800",
    "end": "789600"
  },
  {
    "text": "we can define interfaces we can have we can define custom scholar scalar values and things like that",
    "start": "789600",
    "end": "795360"
  },
  {
    "text": "but then i'm going to be building this as a typescript application and typescript has its own type system",
    "start": "795360",
    "end": "801600"
  },
  {
    "text": "so we're going to be talking to a database we're going to have data models that represents the way the data is stored in our database um we have uh we",
    "start": "801600",
    "end": "808880"
  },
  {
    "text": "then need to kind of communicate with our pseudo orm that we've got in there",
    "start": "808880",
    "end": "813920"
  },
  {
    "text": "and then we need to expose that back out as a as a javascript application but we've got two independent type",
    "start": "813920",
    "end": "820720"
  },
  {
    "text": "systems now with inside of our application we have the type system that's represented with inside of our graphql schema and we have the type",
    "start": "820720",
    "end": "826000"
  },
  {
    "text": "system that's represented with inside of our typescript application they're not necessarily compatible because we don't want our underlying",
    "start": "826000",
    "end": "832880"
  },
  {
    "text": "data structures exposed in their kind of rawness to our connected clients",
    "start": "832880",
    "end": "838320"
  },
  {
    "text": "but we kind of want something that helps us along the way like i i don't want to add a field to my graphql schema and",
    "start": "838320",
    "end": "844959"
  },
  {
    "text": "then have it explode in the data access because we didn't know that field existed or kind of move things around",
    "start": "844959",
    "end": "852480"
  },
  {
    "text": "what does that actually look like at code on the left here we have a um a subset of the graphql schema and the one",
    "start": "852480",
    "end": "857600"
  },
  {
    "text": "that we're actually going to build through our demos today and you can see that kind of looks it looks typescript type definition e like it's not exactly",
    "start": "857600",
    "end": "864800"
  },
  {
    "text": "the same but you can see the the analogies there we can we see there's enums we have types they um",
    "start": "864800",
    "end": "870720"
  },
  {
    "text": "those types have fields and types against them and all that sort of stuff and then on the right we have our",
    "start": "870720",
    "end": "875920"
  },
  {
    "text": "resolvers the things that are going to handle the requests that have come into the server that are then going to work with our underlying data store that",
    "start": "875920",
    "end": "882560"
  },
  {
    "text": "they're going to probably want to know about the type system that's there so that things don't explode",
    "start": "882560",
    "end": "888160"
  },
  {
    "text": "so how do we go about generating these types well there's two ways that we can do strongly typed graphql applications with",
    "start": "888160",
    "end": "895519"
  },
  {
    "text": "typescript the first is to go down a schema first model so in this we have the types of inside",
    "start": "895519",
    "end": "901519"
  },
  {
    "text": "of our schema and they kind of look like our javascript primitives so i like this because it gives me a clean",
    "start": "901519",
    "end": "908079"
  },
  {
    "text": "separation between the types that are making that i'm making available to consumers and the types that are actually downstream with inside of my",
    "start": "908079",
    "end": "914800"
  },
  {
    "text": "backend aspects of the application and i don't necessarily bleed out the internal",
    "start": "914800",
    "end": "920160"
  },
  {
    "text": "implementations so i'm going to be using a tool called graphql code generator that will take",
    "start": "920160",
    "end": "925360"
  },
  {
    "text": "the schema and generate some typescript types and then we can use those to do uh",
    "start": "925360",
    "end": "930560"
  },
  {
    "text": "to have some type safety between the way our resolvers work and the data that we need to expose out so we're actually",
    "start": "930560",
    "end": "936320"
  },
  {
    "text": "going to go schema first in the demo that we'll get to in just a few minutes the other option is you could go code",
    "start": "936320",
    "end": "942560"
  },
  {
    "text": "first uh so code first is where we use our timesheet objects that we're creating and we annotate them in a way",
    "start": "942560",
    "end": "948000"
  },
  {
    "text": "that we can extract the type definitions to create our graphql schema so",
    "start": "948000",
    "end": "953120"
  },
  {
    "text": "that's why it's code first we start with the typescript objects and we turn them into a graphql schema now this gives you",
    "start": "953120",
    "end": "958240"
  },
  {
    "text": "a clear relationship between the types that we've got with inside of our application and the way that we want those exposed out to",
    "start": "958240",
    "end": "964800"
  },
  {
    "text": "our client now if you want to go down this route um check out typegraphql.com and that has",
    "start": "964800",
    "end": "970240"
  },
  {
    "text": "and that is a project that will help you do that my like i said we're going to be going",
    "start": "970240",
    "end": "975279"
  },
  {
    "text": "co um schema first in the application we're building because that's that's my preference and that's the model that i prefer to tackle but",
    "start": "975279",
    "end": "983279"
  },
  {
    "text": "that's enough slides at least for the time being let's jump over to vs code and have a",
    "start": "983279",
    "end": "988320"
  },
  {
    "text": "bit of a look around at building an application so here we are in my vs code instance",
    "start": "988320",
    "end": "995360"
  },
  {
    "text": "and i'll share the links out to the git repo that we're going to be working with um it's uh it's publicly available up on my",
    "start": "995360",
    "end": "1002320"
  },
  {
    "text": "github at um github.com aaron powell slash graphical typefit workshop i said the link is at the end and this is a",
    "start": "1002320",
    "end": "1009440"
  },
  {
    "text": "workshop we'll go through uh building from uh kind of zero to hero in building a",
    "start": "1009440",
    "end": "1014959"
  },
  {
    "text": "graphql application so we're going to start from the start i've pre scaffold it with some useful",
    "start": "1014959",
    "end": "1021279"
  },
  {
    "text": "things that you're going to want with inside of your application it does have the starting for the reactor but we're not going to get to",
    "start": "1021279",
    "end": "1026640"
  },
  {
    "text": "that until quite late in the piece and we have our api which is where the azure functions is running",
    "start": "1026640",
    "end": "1032079"
  },
  {
    "text": "and it's got uh this also has a dev container so it's running inside of",
    "start": "1032079",
    "end": "1038400"
  },
  {
    "text": "a dockerized sandbox uh if you're using vs code remote containers or if you're using uh code spaces on um github",
    "start": "1038400",
    "end": "1046160"
  },
  {
    "text": "you can use it with inside of that but the first thing we need to do is we're going to need to install uh",
    "start": "1046160",
    "end": "1052400"
  },
  {
    "start": "1049000",
    "end": "1171000"
  },
  {
    "text": "some in uh npm packages so i'll come into the api folder and we'll do npm",
    "start": "1052400",
    "end": "1058000"
  },
  {
    "text": "install and we'll do we're going to need the oops apollo server azure",
    "start": "1058000",
    "end": "1065039"
  },
  {
    "text": "and that's not how you spell server finally i actually did that when i was um doing my dry runs i kept typing",
    "start": "1065039",
    "end": "1070960"
  },
  {
    "text": "apollo 7 i'm not sure what that's telling me about my brain azure functions functions and we're",
    "start": "1070960",
    "end": "1077280"
  },
  {
    "text": "going to function outside here functions and then we're going to graphql and i'm just going to pin this at the",
    "start": "1077280",
    "end": "1083840"
  },
  {
    "text": "version 15 of graphql because version 16 of the graphql library has actually come out and it has some incompatible types",
    "start": "1083840",
    "end": "1090799"
  },
  {
    "text": "with the apollo server implementations they haven't upgraded to graphical graphql16 as an npm package",
    "start": "1090799",
    "end": "1097679"
  },
  {
    "text": "okay so those are installed and i'm going to use azure functions to generate",
    "start": "1097679",
    "end": "1103120"
  },
  {
    "text": "a new uh let's see i might have it back here no i don't",
    "start": "1103120",
    "end": "1108400"
  },
  {
    "text": "we're going to use azure functions to generate a new template",
    "start": "1108400",
    "end": "1114240"
  },
  {
    "text": "template and we will use uh http trigger",
    "start": "1114240",
    "end": "1120799"
  },
  {
    "text": "and we'll pull back we're uh with our name of graphql so we'll generate a graphical",
    "start": "1120799",
    "end": "1127440"
  },
  {
    "text": "azure function that we'll now find with inside of our explorer excellent there we go",
    "start": "1127440",
    "end": "1132880"
  },
  {
    "text": "so obviously this doesn't have anything graphql in it yet we'll get to that in a moment but one thing that we do have to",
    "start": "1132880",
    "end": "1138480"
  },
  {
    "text": "change for azure functions is the output binding for http trigger it needs to become a uh it needs to be dollar's",
    "start": "1138480",
    "end": "1145280"
  },
  {
    "text": "return that's just for apollo because it doesn't know what you've named the output binding that you've got with",
    "start": "1145280",
    "end": "1151039"
  },
  {
    "text": "inside of your function.json file so you just have to so it will return from the function handler so you just need to",
    "start": "1151039",
    "end": "1157200"
  },
  {
    "text": "tell azure functions to look at the return value not wait for it to be set onto a specific",
    "start": "1157200",
    "end": "1162840"
  },
  {
    "text": "binding okay and to speed things up i am going to copy and paste some code that i",
    "start": "1162840",
    "end": "1168720"
  },
  {
    "text": "wrote in the readme so this is a like a super basic graphql",
    "start": "1168720",
    "end": "1175600"
  },
  {
    "start": "1171000",
    "end": "1294000"
  },
  {
    "text": "server that we will do npm start we'll get that running uh while i explain what this code is doing",
    "start": "1175600",
    "end": "1181520"
  },
  {
    "text": "so uh in this super basic server we are importing the azure functions package",
    "start": "1181520",
    "end": "1187200"
  },
  {
    "text": "we are importing gql which is a template literal to define a graphql schema it",
    "start": "1187200",
    "end": "1192720"
  },
  {
    "text": "has a single type cool our server is up and running uh called query it has a um",
    "start": "1192720",
    "end": "1198080"
  },
  {
    "text": "an operation that we can perform on that query called hello and that's just going to return us a string and we have a resolver down here that is",
    "start": "1198080",
    "end": "1204000"
  },
  {
    "text": "then the thing that is going to handle that request so it matches the schema structure so we have query hello and",
    "start": "1204000",
    "end": "1211039"
  },
  {
    "text": "then it's returning a string we provide that to azure server uh apollo server the type definition so our",
    "start": "1211039",
    "end": "1216880"
  },
  {
    "text": "graphql schema our resolvers and then we create a handler that azure functions can consume",
    "start": "1216880",
    "end": "1223280"
  },
  {
    "text": "so that's up and running let's pop this into the browser there we go",
    "start": "1223280",
    "end": "1228880"
  },
  {
    "text": "and we'll come across to apollo studio zoom in a few steps",
    "start": "1228880",
    "end": "1235520"
  },
  {
    "text": "uh let's resize our windows a little bit and delete the uh sample that i've played",
    "start": "1235520",
    "end": "1241440"
  },
  {
    "text": "with so apollo's studio is a this is a sandbox application that",
    "start": "1241440",
    "end": "1246480"
  },
  {
    "text": "allows you to inspect graphql queries inspect graph your servers interact with them test them out that kind of stuff",
    "start": "1246480",
    "end": "1253360"
  },
  {
    "text": "we can see that we have a root type of query so that's the the entry point on our schema it has a field called hello which i can",
    "start": "1253360",
    "end": "1259919"
  },
  {
    "text": "add to a query hit run and we have created our very first graphql",
    "start": "1259919",
    "end": "1265760"
  },
  {
    "text": "server um in uh fully in typescript but at the moment it's pretty simplistic like we're not really carrying anything",
    "start": "1265760",
    "end": "1272320"
  },
  {
    "text": "about type safety or any that sort of stuff we i just wanted to prove that we can make a graphql server",
    "start": "1272320",
    "end": "1278159"
  },
  {
    "text": "work um and we've done that time to go home wait i'm already at home",
    "start": "1278159",
    "end": "1285520"
  },
  {
    "text": "you're going to be stuck with a lot of terrible jokes as well because i don't get audience feedback so i don't know if uh if you're laughing or just cry",
    "start": "1286799",
    "end": "1292799"
  },
  {
    "text": "laughing with me so uh let's jump forward in time to the next",
    "start": "1292799",
    "end": "1298159"
  },
  {
    "start": "1294000",
    "end": "1366000"
  },
  {
    "text": "point with inside of our workshop um just so i don't run off script and break anything um",
    "start": "1298159",
    "end": "1305360"
  },
  {
    "text": "as i said this uh this does go through uh there's like eight steps we are going to skip some of the steps because it's",
    "start": "1305360",
    "end": "1310559"
  },
  {
    "text": "about a half day workshop and i only have uh 39 minutes left according to my",
    "start": "1310559",
    "end": "1315600"
  },
  {
    "text": "countdown timer uh maybe less depending if they kick me off early so uh we're still here we've still got our schema",
    "start": "1315600",
    "end": "1322159"
  },
  {
    "text": "run the same way but let's start extracting that out into a separate file because at the moment this schema is embedded with inside of this",
    "start": "1322159",
    "end": "1329440"
  },
  {
    "text": "dot ts file which means it's inherently undiscoverable like we don't know where that schema",
    "start": "1329440",
    "end": "1335600"
  },
  {
    "text": "exists so i'm going to create a new file and we'll call this graph",
    "start": "1335600",
    "end": "1341200"
  },
  {
    "text": "schema.ref [Music] ql and we will grab",
    "start": "1341200",
    "end": "1346960"
  },
  {
    "text": "the type definition here done that cool it's all formatted lovely",
    "start": "1346960",
    "end": "1353120"
  },
  {
    "text": "and now we can get rid of this but",
    "start": "1353120",
    "end": "1358400"
  },
  {
    "text": "how we're going to get those type definitions we need to import them somewhere and kind of parse that schema and turn it into something that can be",
    "start": "1358400",
    "end": "1364640"
  },
  {
    "text": "consumed by apollo i'm going to again install some npm packages so to do that i will",
    "start": "1364640",
    "end": "1371520"
  },
  {
    "start": "1366000",
    "end": "1528000"
  },
  {
    "text": "sneakily copy and paste from my readme file and we will put them into",
    "start": "1371520",
    "end": "1377200"
  },
  {
    "text": "the api folder so that will go ahead and also if you do",
    "start": "1377200",
    "end": "1383440"
  },
  {
    "text": "actually go through this workshop yourself and you install the vsco plugins that i i recommend we run in the um",
    "start": "1383440",
    "end": "1390159"
  },
  {
    "text": "dev container um i have these uh this code tour which is what these little icons here are on the side um which will",
    "start": "1390159",
    "end": "1396720"
  },
  {
    "text": "uh which you can step through and it will give you hints along the way of what to do at specific lines of the code",
    "start": "1396720",
    "end": "1403200"
  },
  {
    "text": "base and stuff like that so that's it's another way so you don't have to kind of alt tab back and forth between this schema sorry this readme",
    "start": "1403200",
    "end": "1410240"
  },
  {
    "text": "file and again for speedness sake i will copy and paste our",
    "start": "1410240",
    "end": "1415520"
  },
  {
    "text": "updated server implementation let's get rid of the terminal there we",
    "start": "1415520",
    "end": "1420960"
  },
  {
    "text": "go okay so what have we done we've imported three new modules from a a",
    "start": "1420960",
    "end": "1426720"
  },
  {
    "text": "collection a package called graphql tools we're importing one that will load our schema we're doing this synchronously",
    "start": "1426720",
    "end": "1432880"
  },
  {
    "text": "because of the way azure functions work uh we can't actually have to like we have to read that before we uh return",
    "start": "1432880",
    "end": "1438720"
  },
  {
    "text": "things um sorry return the handler so it's it's a little bit clunky it just means yeah you're doing synchronous um schema",
    "start": "1438720",
    "end": "1445279"
  },
  {
    "text": "creation um we're then saying that we're going to be loading from a file and disk this is",
    "start": "1445279",
    "end": "1450799"
  },
  {
    "text": "because you um you can be importing a graphical schema from a number of locations if we were building a maybe a",
    "start": "1450799",
    "end": "1456480"
  },
  {
    "text": "graphql server that is then sitting as a it's like sitting in front of a number of other graphical servers we could be",
    "start": "1456480",
    "end": "1463120"
  },
  {
    "text": "loading from a http endpoint so this is what we call graphql federation where you're bringing through a bunch of graphql servers um and then exposing",
    "start": "1463120",
    "end": "1470159"
  },
  {
    "text": "them as one unified graphql schema but we're going to be loading from a file on disk so we're using the",
    "start": "1470159",
    "end": "1475360"
  },
  {
    "text": "graphical file learner and then finally we're using the schema tools to add the resolvers to the schema so",
    "start": "1475360",
    "end": "1482480"
  },
  {
    "text": "we still have our resolve object here we're going to load the schema and just",
    "start": "1482480",
    "end": "1487600"
  },
  {
    "text": "a bit of path uh messing around to go back and find that because we're dealing with a compile",
    "start": "1487600",
    "end": "1493760"
  },
  {
    "text": "typescript output we're going to load it from there we're going to add the resolvers to it provide it to apollo",
    "start": "1493760",
    "end": "1498799"
  },
  {
    "text": "server and then everything should go nicely and we should be able to do npm start again and our application should",
    "start": "1498799",
    "end": "1505440"
  },
  {
    "text": "continue to run or be rerun given that",
    "start": "1505440",
    "end": "1510960"
  },
  {
    "text": "it wasn't currently running all right give that a minute",
    "start": "1510960",
    "end": "1515840"
  },
  {
    "text": "excellent looks like our api is back up come over here we'll execute the query",
    "start": "1516320",
    "end": "1522240"
  },
  {
    "text": "and there we go so everything's still working we've we've done the first step we've extracted things out into a separate location so fantastic where",
    "start": "1522240",
    "end": "1529360"
  },
  {
    "start": "1528000",
    "end": "1642000"
  },
  {
    "text": "we're starting to get going all right so the next thing we need to do is start building out a like a more",
    "start": "1529360",
    "end": "1535440"
  },
  {
    "text": "realistic schema the skimmer that we got here is it's pretty simplistic so let's start building out the schema",
    "start": "1535440",
    "end": "1541120"
  },
  {
    "text": "that's going to look that we're going to need to represent our uh our game",
    "start": "1541120",
    "end": "1546400"
  },
  {
    "text": "again i'm going to cheat and bring in some of this stuff from my uh",
    "start": "1546400",
    "end": "1553120"
  },
  {
    "text": "pre-written script so we're gonna start with so we find um our question so uh we have the id and we're using a",
    "start": "1553120",
    "end": "1560720"
  },
  {
    "text": "special scale of a scalar type with inside of um the graphql language which is id um just indicating that it's a",
    "start": "1560720",
    "end": "1567120"
  },
  {
    "text": "unique identifier and the exclamation point indicates that this is going to be a strongly typed sorry a non-nullable",
    "start": "1567120",
    "end": "1574000"
  },
  {
    "text": "field so we know that we have to have a question we have to have a correct answer and then with the array here i'm",
    "start": "1574000",
    "end": "1580480"
  },
  {
    "text": "saying that you'll that you will always get a rate ray an array of zero or more items and those",
    "start": "1580480",
    "end": "1586240"
  },
  {
    "text": "items are going to be strings and it will always be a string will never be a null or an undefined or anything like that",
    "start": "1586240",
    "end": "1592720"
  },
  {
    "text": "okay uh oh where did my redmi go i forgot to open that in a pin banner",
    "start": "1592720",
    "end": "1597919"
  },
  {
    "text": "there we go so we have our question let's create our game",
    "start": "1597919",
    "end": "1603278"
  },
  {
    "text": "add our game in we'll add our enum that represents game state",
    "start": "1603600",
    "end": "1610400"
  },
  {
    "text": "and what else do we need we're going to need our player select that",
    "start": "1610480",
    "end": "1617600"
  },
  {
    "text": "okay and lastly we'll have our player result",
    "start": "1617600",
    "end": "1624159"
  },
  {
    "text": "let's pop that in save uh we will just have to restart the server because it while it's got a file",
    "start": "1624159",
    "end": "1629200"
  },
  {
    "text": "system watcher it's not watching for changes to the docker fql file um and let's have a look at now what our uh our",
    "start": "1629200",
    "end": "1634880"
  },
  {
    "text": "schema is exposed as to um connected clients such as the studio",
    "start": "1634880",
    "end": "1640240"
  },
  {
    "text": "here oops okay so we've had an error um",
    "start": "1640240",
    "end": "1646240"
  },
  {
    "start": "1642000",
    "end": "1751000"
  },
  {
    "text": "well that's all we want we don't want things to explode immediately we want to exploit when i expect them to explode no",
    "start": "1646240",
    "end": "1652480"
  },
  {
    "text": "so the reason it exploded is that um the resolvers that we've got here",
    "start": "1652480",
    "end": "1657600"
  },
  {
    "text": "and this is where we're starting to lose some of this type information um the resolvers need to match kind of",
    "start": "1657600",
    "end": "1662720"
  },
  {
    "text": "one to one or um the resolvers can't have things with inside of them that aren't within side",
    "start": "1662720",
    "end": "1668480"
  },
  {
    "text": "of your schema and that's what this error message has said we've defined a resolver to handle something called",
    "start": "1668480",
    "end": "1673760"
  },
  {
    "text": "query but our schema doesn't have anything that has query now we didn't know that well we didn't necessarily know that",
    "start": "1673760",
    "end": "1680480"
  },
  {
    "text": "because well there's no type information to help us along the way i know that if i delete",
    "start": "1680480",
    "end": "1686000"
  },
  {
    "text": "that um apollo will uh if something doesn't exist in the schema it won't um kind of freak out it would just well it",
    "start": "1686000",
    "end": "1692880"
  },
  {
    "text": "shouldn't have freaked out ah uh i don't have uh i don't have a root type um",
    "start": "1692880",
    "end": "1700159"
  },
  {
    "text": "uh well i'll put in the thing i was trying to be clever and like jump forward with inside of uh time",
    "start": "1700159",
    "end": "1706559"
  },
  {
    "text": "but we will put in here we go so we'll put in the query uh and then that should uh oh no",
    "start": "1706559",
    "end": "1713360"
  },
  {
    "text": "and we'll pop in the schema that's the last piece that we need um okay and then we'll restart our",
    "start": "1713360",
    "end": "1719919"
  },
  {
    "text": "server isn't live coding fun",
    "start": "1719919",
    "end": "1726080"
  },
  {
    "text": "um okay so the reason it exploded was because um it didn't know where the route was going to be for anyone that",
    "start": "1726559",
    "end": "1732559"
  },
  {
    "text": "wants to come and query your graphql server because we hadn't defined any of that",
    "start": "1732559",
    "end": "1737679"
  },
  {
    "text": "inside of our schema now that's done now we've defined um a",
    "start": "1737679",
    "end": "1742799"
  },
  {
    "text": "uh a schema object that indicates that the when you're performing a query you're going to start like the root query is",
    "start": "1742799",
    "end": "1748240"
  },
  {
    "text": "going to get this type called query not game or anything else but the problem is that well so our resolvers aren't uh",
    "start": "1748240",
    "end": "1755200"
  },
  {
    "text": "aren't there and we don't need them there yet and if we reload that well now we'll see that things start looking a",
    "start": "1755200",
    "end": "1760320"
  },
  {
    "text": "bit better and we'll see that we have our query root here we can query for a game with a a specific item so i could",
    "start": "1760320",
    "end": "1767200"
  },
  {
    "text": "perform that operation if i wanted um i could perform like a request for all games",
    "start": "1767200",
    "end": "1773440"
  },
  {
    "text": "uh whoops not game state i wanted to get back uh let's get back to the ide of all games and we don't need that variable",
    "start": "1773440",
    "end": "1780000"
  },
  {
    "text": "there so now i can perform that query and it's going to explode because we haven't written anything that will handle that you can see in the error",
    "start": "1780000",
    "end": "1785760"
  },
  {
    "text": "message there it says cannot return null from a non-nullable field query.games and that's because our type",
    "start": "1785760",
    "end": "1792159"
  },
  {
    "text": "system with inside of our schema has forbidden us to return a null and because we haven't implemented",
    "start": "1792159",
    "end": "1797760"
  },
  {
    "text": "anything we're implicitly returning null so we're getting so like we're getting some type information and we're getting",
    "start": "1797760",
    "end": "1803600"
  },
  {
    "text": "that back from our server we're getting it from the web we're performing queries but we've lost any of that with inside",
    "start": "1803600",
    "end": "1808960"
  },
  {
    "text": "our actual application so again we're going to jump forward a",
    "start": "1808960",
    "end": "1814880"
  },
  {
    "start": "1812000",
    "end": "1954000"
  },
  {
    "text": "little bit in time where we'll start writing out some of the resolvers i'm going to skip over the",
    "start": "1814880",
    "end": "1820320"
  },
  {
    "text": "data storage section itself and instead we'll see the way that i've implemented data storage um",
    "start": "1820320",
    "end": "1827039"
  },
  {
    "text": "in the application but let's just close off all the windows that i had open i don't want to give",
    "start": "1827039",
    "end": "1832799"
  },
  {
    "text": "anyone a sneak peek at what we've got coming so for data access uh this workshop has an",
    "start": "1832799",
    "end": "1839679"
  },
  {
    "text": "in-memory data store so it literally is just an array of objects that are maintained in memory and every time you",
    "start": "1839679",
    "end": "1844880"
  },
  {
    "text": "restart the server you'll lose all your game information or you can store it in a persistent way",
    "start": "1844880",
    "end": "1849919"
  },
  {
    "text": "using cosmos db pick your poison uh and i do have the instructions in the workshop which goes",
    "start": "1849919",
    "end": "1856080"
  },
  {
    "text": "through both ways of setting up data access but for data access well i've defined a",
    "start": "1856080",
    "end": "1862000"
  },
  {
    "text": "number of different types that we have here so we have a base kind of",
    "start": "1862000",
    "end": "1868000"
  },
  {
    "text": "like a base type it's not a class it's just a base type called model because everything is going to have an id and",
    "start": "1868000",
    "end": "1875200"
  },
  {
    "text": "a model type associated with it the model type is just whether it's a question an answer a user answer or a game useful for storing in cosmos db so",
    "start": "1875200",
    "end": "1882880"
  },
  {
    "text": "that we can perform queries against that and we can set up the data in there with the appropriate partition",
    "start": "1882880",
    "end": "1888640"
  },
  {
    "text": "keys we have our question model which extends model with question category incorrect",
    "start": "1888640",
    "end": "1895360"
  },
  {
    "text": "answers correct answers type and difficulty um so the data set that i'm using here comes from open trivia api",
    "start": "1895360",
    "end": "1901519"
  },
  {
    "text": "and this is the way that they return their data structure so i've just kind of mapped that through this is what i want to store in my database",
    "start": "1901519",
    "end": "1907679"
  },
  {
    "text": "use the model we have our name the identity provider user roles user details so that this could be",
    "start": "1907679",
    "end": "1914399"
  },
  {
    "text": "plugged into azure static web apps and use the authentication model there that gives us some some information",
    "start": "1914399",
    "end": "1920799"
  },
  {
    "text": "we have our user answer we have our game and then we have our our three data sources game user and question that we",
    "start": "1920799",
    "end": "1928240"
  },
  {
    "text": "can access i said there's an immemory implementation and a cosmos db",
    "start": "1928240",
    "end": "1934320"
  },
  {
    "text": "implementation and we're going to use the in-memory one for the time being and we can see that i create that here it's",
    "start": "1934320",
    "end": "1940240"
  },
  {
    "text": "an apollo data context sorry as a data source um and i've strongly typed an apollo context which just is a way that",
    "start": "1940240",
    "end": "1946720"
  },
  {
    "text": "we represent data sources and we'll see a bit more of that as we get to implementing type safety uh but we have",
    "start": "1946720",
    "end": "1952399"
  },
  {
    "text": "things like user question game so that's all being given over to apollo so",
    "start": "1952399",
    "end": "1957440"
  },
  {
    "text": "when it starts it will understand that we can access data but now we need to do something with that",
    "start": "1957440",
    "end": "1963039"
  },
  {
    "text": "so inside of our resolvers let's go and build that out and i put the schema here on the side",
    "start": "1963039",
    "end": "1970799"
  },
  {
    "text": "if i can remember the keyboard shortcut which i can't which is annoying i've recently changed my keyboard and my",
    "start": "1970799",
    "end": "1977760"
  },
  {
    "text": "muscle memory in uh vs code has drastically decreased because i was just",
    "start": "1977760",
    "end": "1983840"
  },
  {
    "text": "so used to where keys were on my keyboard and now keys out where they used to be on my keyboard i've gone like",
    "start": "1983840",
    "end": "1988880"
  },
  {
    "text": "crazy split keyboard layout but let's just move on from me complaining about my",
    "start": "1988880",
    "end": "1995200"
  },
  {
    "text": "tools okay uh so we need to implement a something",
    "start": "1995200",
    "end": "2000960"
  },
  {
    "text": "in mind uh so i need to implement this uh this query type here so we're gonna have game games and player results let's",
    "start": "2000960",
    "end": "2007120"
  },
  {
    "text": "start with games because games is the easiest one to do now i know that we're going to so",
    "start": "2007120",
    "end": "2012960"
  },
  {
    "text": "because i've worked with apollo before i know that the first argument to this is going to be the parent",
    "start": "2012960",
    "end": "2019200"
  },
  {
    "text": "in the object hierarchy that's being returned from our server i know that the second argument",
    "start": "2019200",
    "end": "2025840"
  },
  {
    "text": "is going to be any arguments passed through to the query or any variables and the third",
    "start": "2025840",
    "end": "2031440"
  },
  {
    "text": "argument is our apology context which is where we get data sources",
    "start": "2031440",
    "end": "2036480"
  },
  {
    "text": "data sources oh i can't remember whether data source or data sources and i don't have any type information",
    "start": "2036480",
    "end": "2042640"
  },
  {
    "text": "like i'm i'm losing the value of typescript here data sources that's what it is data sources okay and then we will",
    "start": "2042640",
    "end": "2049919"
  },
  {
    "text": "return data sources dot yeah game games there's games get gain",
    "start": "2049919",
    "end": "2058878"
  },
  {
    "text": "okay so that's how we perform games um and",
    "start": "2058879",
    "end": "2064240"
  },
  {
    "text": "let's just grab a bit of sample data that i've got",
    "start": "2064240",
    "end": "2069440"
  },
  {
    "text": "where was that there it is so this is just a sample game that we can use for testing we'll embed that",
    "start": "2070560",
    "end": "2076398"
  },
  {
    "text": "into our thing here save and we'll bring in basic type cool okay",
    "start": "2076399",
    "end": "2084878"
  },
  {
    "text": "uh and we'll go to api and the um [Music] start okay",
    "start": "2084879",
    "end": "2091599"
  },
  {
    "text": "so that let's hope that this comes up and running oops",
    "start": "2091599",
    "end": "2097280"
  },
  {
    "text": "give it a moment [Applause] all right looks like it's looks like",
    "start": "2097599",
    "end": "2103440"
  },
  {
    "text": "it's working the server is up uh so now we do have a game there i should be able to query this",
    "start": "2103440",
    "end": "2109920"
  },
  {
    "text": "and get games of oh it must be called games",
    "start": "2109920",
    "end": "2115920"
  },
  {
    "text": "it must be called so now we're starting to see where we're getting the problems of lack of type",
    "start": "2115920",
    "end": "2121839"
  },
  {
    "start": "2118000",
    "end": "2217000"
  },
  {
    "text": "safety now typescript is great because it gives us that type safety graphql is great because it gives us",
    "start": "2121839",
    "end": "2127280"
  },
  {
    "text": "that type safety but i don't like this data source is in any because it doesn't understand anything about this it knows",
    "start": "2127280",
    "end": "2133280"
  },
  {
    "text": "it's obviously not it's actually called game not games so i didn't know that because i didn't",
    "start": "2133280",
    "end": "2138400"
  },
  {
    "text": "have any um type support i didn't know this until runtime and anyone that's done enough javascript development will know that you can very",
    "start": "2138400",
    "end": "2145359"
  },
  {
    "text": "easily end up with runtime problems and there's a reason that the compiled languages or languages that",
    "start": "2145359",
    "end": "2150800"
  },
  {
    "text": "have type checking in them as part of a compile step are quite valuable but anyway let's uh",
    "start": "2150800",
    "end": "2156480"
  },
  {
    "text": "do that and did uh uh is that games",
    "start": "2156480",
    "end": "2162400"
  },
  {
    "text": "games can i read null from non-nullable field query.games did i not restart the server properly",
    "start": "2162400",
    "end": "2169680"
  },
  {
    "text": "oh no it should have been good let's get games not get game of course",
    "start": "2169680",
    "end": "2174720"
  },
  {
    "text": "okay there we go so now we've created so fantastic um you've seen the problems that lack of",
    "start": "2174720",
    "end": "2180079"
  },
  {
    "text": "time safety can bring um and some of those were manufactured errors and some of those were because i",
    "start": "2180079",
    "end": "2185760"
  },
  {
    "text": "actually typed things incorrectly but if we were to say kind of like flesh this out a bit more so we can do game",
    "start": "2185760",
    "end": "2192560"
  },
  {
    "text": "and then again we're going to ignore the first argument we know that this receives an id and then we're going to have our",
    "start": "2192560",
    "end": "2198800"
  },
  {
    "text": "data sources oops data sources and then that will need to be return data sources",
    "start": "2198800",
    "end": "2206480"
  },
  {
    "text": "dot game bang dot get game and then we'll pass the id into there",
    "start": "2206480",
    "end": "2212560"
  },
  {
    "text": "so now we can get back again based off of a specific idea so like what is id how do i know that it's",
    "start": "2212560",
    "end": "2219760"
  },
  {
    "text": "called id i know it's there because i've got the schema open side by side but this is getting a bit tedious and it's going to be frustrating so let's",
    "start": "2219760",
    "end": "2226400"
  },
  {
    "text": "jump forward again in time and have a look at um what like how will we bring some of this",
    "start": "2226400",
    "end": "2232320"
  },
  {
    "text": "type safety information in here and i'm going to skip over the first step of generating types and look at the",
    "start": "2232320",
    "end": "2238079"
  },
  {
    "text": "second aspect of it so when it comes to generating types uh is it because i'm doing schema first",
    "start": "2238079",
    "end": "2245200"
  },
  {
    "text": "i'm using a tool called graphql code yet so a graphql code generator is",
    "start": "2245200",
    "end": "2251440"
  },
  {
    "text": "a is a tool where you'll provide it with your graphql schema uh it takes",
    "start": "2251440",
    "end": "2256720"
  },
  {
    "text": "if you have a number of plugins that you give to it and it will give you some output for that",
    "start": "2256720",
    "end": "2262160"
  },
  {
    "text": "let's take our graphql schema just to have a look at it in the browser what it's doing it's",
    "start": "2262320",
    "end": "2268720"
  },
  {
    "text": "okay so what it's doing is it's creating a couple of things like some utility types like a maybe type an exam exact a few",
    "start": "2268720",
    "end": "2276000"
  },
  {
    "text": "things like that but then we'll see that we have scalar values so id string boolean inflow and how they map through",
    "start": "2276000",
    "end": "2281359"
  },
  {
    "text": "to typescript or javascript primitives so id is a string string is unsurprising a string boolean is a",
    "start": "2281359",
    "end": "2287520"
  },
  {
    "text": "boolean int is a number and float is a number because floating points are difficult um we see that we have a question here",
    "start": "2287520",
    "end": "2293839"
  },
  {
    "text": "and we can see the fields that are mapping to that we see that's defined as raise and so on and so forth um if i was",
    "start": "2293839",
    "end": "2299520"
  },
  {
    "text": "to change say question to be nullable now it's a maybe type and we",
    "start": "2299520",
    "end": "2304640"
  },
  {
    "text": "can see that it has that the question mark there indicating that this allows that allows us to assign null in touch",
    "start": "2304640",
    "end": "2312240"
  },
  {
    "text": "and kind of so on and so forth so so we like that's really useful for us now we can get",
    "start": "2312240",
    "end": "2317280"
  },
  {
    "text": "type objects that represent our graphql schema we can generate this so i've gone ahead and set that up with",
    "start": "2317280",
    "end": "2322800"
  },
  {
    "text": "inside of this step of the the application i've installed graphql code gen um and i've created the cogen.yaml file",
    "start": "2322800",
    "end": "2330079"
  },
  {
    "text": "and i'm generating two things here i'm generating uh the typescript definitions and i'm generating the typescript resolvers",
    "start": "2330079",
    "end": "2336880"
  },
  {
    "text": "so the reason that i'm generating the attachment resolve with resolvers additionally is",
    "start": "2336880",
    "end": "2341920"
  },
  {
    "text": "so that i can come into my resolve object here and then i can strongly type it i can say that the resolvers is um",
    "start": "2341920",
    "end": "2350320"
  },
  {
    "text": "this object here and it is let's just npn",
    "start": "2350320",
    "end": "2355839"
  },
  {
    "text": "gen because i think things are not quite right oh whoops coming to the api",
    "start": "2355839",
    "end": "2361280"
  },
  {
    "text": "npm run gem generator type let's see",
    "start": "2361280",
    "end": "2366560"
  },
  {
    "text": "the the type signature that i was looking at there wasn't quite right there we go um so we can see that the",
    "start": "2366560",
    "end": "2372000"
  },
  {
    "text": "query um as we expected there uh we have game which we know and now",
    "start": "2372000",
    "end": "2377040"
  },
  {
    "text": "that's got some type information it know that it knows that it doesn't have any arguments provided to it whereas if i",
    "start": "2377040",
    "end": "2382160"
  },
  {
    "text": "hover over game we can see if i can get there we go so it has",
    "start": "2382160",
    "end": "2388160"
  },
  {
    "text": "it has game query arguments and it's going to have a field called id we know that we need to return a game object",
    "start": "2388160",
    "end": "2393920"
  },
  {
    "text": "from here so on and so forth but we still like that data source like it it doesn't have a type yet so how do",
    "start": "2393920",
    "end": "2401680"
  },
  {
    "text": "we go ahead and give that data source a type so that it's uh it's understood with inside of",
    "start": "2401680",
    "end": "2407599"
  },
  {
    "text": "application well that's where uh we have the uh",
    "start": "2407599",
    "end": "2414640"
  },
  {
    "text": "apollo context so i've created a strongly typed apollo context here data sources user in game in question and if we were",
    "start": "2414960",
    "end": "2422560"
  },
  {
    "text": "to add that as a custom bit of model mapping",
    "start": "2422560",
    "end": "2428480"
  },
  {
    "text": "which i'll grab from here put it into my yaml file make sure i get the indents correctly because that's",
    "start": "2428960",
    "end": "2435359"
  },
  {
    "text": "yaml and nothing says fun like white space significance",
    "start": "2435359",
    "end": "2440800"
  },
  {
    "text": "says the person that is a huge fan of f sharp okay so what i've said here is there's a",
    "start": "2440800",
    "end": "2446400"
  },
  {
    "text": "file called apollo context and inside of that is a type called apollo context and where you have the",
    "start": "2446400",
    "end": "2451760"
  },
  {
    "text": "apollo context i want you to strongly type that awesome now data sources is strongly typed we",
    "start": "2451760",
    "end": "2458240"
  },
  {
    "start": "2454000",
    "end": "2538000"
  },
  {
    "text": "know that these are probably called games it's called game but we're getting another red squiggle this time it is saying that well",
    "start": "2458240",
    "end": "2465040"
  },
  {
    "text": "it's a very long error message that won't fit on the screen but essentially i'm i'm returning an array of model types asynchronously",
    "start": "2465040",
    "end": "2471760"
  },
  {
    "text": "but this expects a uh array of game not game model",
    "start": "2471760",
    "end": "2477200"
  },
  {
    "text": "so how do we fix that problem well we come back and we grab",
    "start": "2477200",
    "end": "2482240"
  },
  {
    "text": "some more stuff out of my sample here which is model mapping so this tells",
    "start": "2482240",
    "end": "2488720"
  },
  {
    "text": "the code generator that where you find types map them between the",
    "start": "2488720",
    "end": "2495040"
  },
  {
    "text": "uh the the internal type that i'm using for my back-end system will map through to this",
    "start": "2495040",
    "end": "2500960"
  },
  {
    "text": "uh type that is available from my graphql schema uh so we'll run gen and there we go",
    "start": "2500960",
    "end": "2506839"
  },
  {
    "text": "success npm start",
    "start": "2506839",
    "end": "2510960"
  },
  {
    "text": "all right i looks like i've got about five minutes left so i'm going to be kind of powering on through a little bit",
    "start": "2512079",
    "end": "2518400"
  },
  {
    "text": "uh here oh oops i've got to npm stall on something maybe uh",
    "start": "2518400",
    "end": "2524000"
  },
  {
    "text": "or should i have i should have actually looked at the error message um it was not uh not what i thought it was and we",
    "start": "2524000",
    "end": "2531119"
  },
  {
    "text": "will pop through here and we are missing",
    "start": "2531119",
    "end": "2536000"
  },
  {
    "text": "npm start so we get our server up and running um and then i'll jump through to the fully completed application because",
    "start": "2537280",
    "end": "2542880"
  },
  {
    "start": "2538000",
    "end": "2713000"
  },
  {
    "text": "i don't think i'm going to have time to implement this with inside of the react application but i can show you what that",
    "start": "2542880",
    "end": "2548319"
  },
  {
    "text": "looks like and where and how we can do type safety all the way through to our connected client",
    "start": "2548319",
    "end": "2553599"
  },
  {
    "text": "but there is still one more thing that's possibly going to explode um if i do this",
    "start": "2553599",
    "end": "2559599"
  },
  {
    "text": "so i get games i want the questions of this game and let's get the question and",
    "start": "2559599",
    "end": "2565040"
  },
  {
    "text": "the correct answer and the answers all right",
    "start": "2565040",
    "end": "2571599"
  },
  {
    "text": "and as predicted this is exploded the reason exploded is because it can't find a field called correct answer in the",
    "start": "2572079",
    "end": "2577520"
  },
  {
    "text": "object model that we're returning so why has that happened well it's because if we think back to",
    "start": "2577520",
    "end": "2584800"
  },
  {
    "text": "our database types it's correct underscore answer",
    "start": "2584800",
    "end": "2590400"
  },
  {
    "text": "not correct answer in pascal case so like our type system is all there it's",
    "start": "2590400",
    "end": "2596640"
  },
  {
    "text": "all correct it's all giving us this information but we need to help it out and and explain how to do some of the",
    "start": "2596640",
    "end": "2602079"
  },
  {
    "text": "custom mapping so for that i can come into the right level here and we'll",
    "start": "2602079",
    "end": "2607839"
  },
  {
    "text": "go question right where am i uh i'm at the wrong set of parentheses",
    "start": "2607839",
    "end": "2614640"
  },
  {
    "text": "and we're going to go question so we can do we can give some help to the way that",
    "start": "2614640",
    "end": "2621680"
  },
  {
    "text": "um apollo will convert our back-end data models into our output data",
    "start": "2621680",
    "end": "2627839"
  },
  {
    "text": "so here we're going to receive a um a question model we have a look at",
    "start": "2627839",
    "end": "2633280"
  },
  {
    "text": "that we're going to receive the question model and i need to return well i need to return that particular field of for",
    "start": "2633280",
    "end": "2640000"
  },
  {
    "text": "our question which we can do with return question dot correct answer",
    "start": "2640000",
    "end": "2646240"
  },
  {
    "text": "uh similarly we can do that for answers because we don't have an answers property that we saw in our database we",
    "start": "2646240",
    "end": "2651760"
  },
  {
    "text": "have correct answer and incorrect answers so again we're going to do question",
    "start": "2651760",
    "end": "2657599"
  },
  {
    "text": "oops not cubit question",
    "start": "2657599",
    "end": "2663520"
  },
  {
    "text": "and then we'll return uh we're just going to randomize these so that we don't get the answers in a",
    "start": "2663520",
    "end": "2668640"
  },
  {
    "text": "predictable order uh this will be question dot incorrect answers concat",
    "start": "2668640",
    "end": "2675520"
  },
  {
    "text": "uh question dot answer correct answer okay save that",
    "start": "2675520",
    "end": "2681200"
  },
  {
    "text": "wait for the server to restart now we have helped with some additional",
    "start": "2681200",
    "end": "2686640"
  },
  {
    "text": "model mapping um to deal with some of the custom data structures and everything is looking just the way that",
    "start": "2686640",
    "end": "2692240"
  },
  {
    "text": "we want we are getting data back we are getting type information we know that when we're mapping here that it's the",
    "start": "2692240",
    "end": "2698240"
  },
  {
    "text": "database type we know that the question is going to be expecting question types of returned we know that",
    "start": "2698240",
    "end": "2703760"
  },
  {
    "text": "this is expecting a string out whereas this is expecting an array of strings so that's all given us kind of the things",
    "start": "2703760",
    "end": "2710480"
  },
  {
    "text": "that we need all right and the last thing before uh william comes back and joins me for q a",
    "start": "2710480",
    "end": "2716880"
  },
  {
    "start": "2713000",
    "end": "2837000"
  },
  {
    "text": "because i think i can see some questions uh starting to pop in is let's go to our",
    "start": "2716880",
    "end": "2722079"
  },
  {
    "text": "fully completed application and have a look at how we bring this into the the client as well",
    "start": "2722079",
    "end": "2729920"
  },
  {
    "text": "so uh loading that up there we go okay so the last thing i need to do is i want to",
    "start": "2731200",
    "end": "2737760"
  },
  {
    "text": "perform things so i'm using react hooks here but again it's sort of immaterial you could be using it with any way to",
    "start": "2737760",
    "end": "2744000"
  },
  {
    "text": "talk with apollo client back to your your backend server but i want to say",
    "start": "2744000",
    "end": "2750960"
  },
  {
    "text": "let's let's have a look at the completed game i want a",
    "start": "2750960",
    "end": "2756240"
  },
  {
    "text": "i want to perform an operation if i could find it here where is it",
    "start": "2756240",
    "end": "2762880"
  },
  {
    "text": "[Music] where is that one that i'm trying to perform okay we'll start with create a game so i want to create a new game",
    "start": "2763540",
    "end": "2770880"
  },
  {
    "text": "this is going to perform a mutation that's going to need us to send some data and get some data back",
    "start": "2770880",
    "end": "2776000"
  },
  {
    "text": "so this is the query that i or the mutation operation that i want to perform i want this strongly type so that i know",
    "start": "2776000",
    "end": "2782400"
  },
  {
    "text": "that i'm going to get back that string id well i can generate the types using graphql code gen that gives me this",
    "start": "2782400",
    "end": "2789599"
  },
  {
    "text": "typed document node so this is a a thing that graphql clients in",
    "start": "2789599",
    "end": "2795680"
  },
  {
    "text": "javascript can consume this type document node can be passed through to any query operator which then gives me",
    "start": "2795680",
    "end": "2802480"
  },
  {
    "text": "back a a mutation function and then because this is a react hook it",
    "start": "2802480",
    "end": "2808160"
  },
  {
    "text": "gives me back the values that will be updated from that react hook so i know that",
    "start": "2808160",
    "end": "2814160"
  },
  {
    "text": "loading oh sorry i know that data that's the thing that's coming back it's going to be a create game mutation or a null",
    "start": "2814160",
    "end": "2819280"
  },
  {
    "text": "or an undefined depending on what state we're in if we unpack that a bit more um create game is going to be a optional thing",
    "start": "2819280",
    "end": "2826319"
  },
  {
    "text": "that can return from a game but it's going to pick out just the id field so if we have a look at",
    "start": "2826319",
    "end": "2833599"
  },
  {
    "text": "dot notation we'll see that we have id which again imagine the thing that we wanted um the",
    "start": "2833599",
    "end": "2840480"
  },
  {
    "start": "2837000",
    "end": "2947000"
  },
  {
    "text": "the operation we've tried to perform against our graphql backhand it's all there as expected um",
    "start": "2840480",
    "end": "2846960"
  },
  {
    "text": "and i think i'm just about out of time so let's jump over back to our slides and quickly wrap up if i can if i can",
    "start": "2846960",
    "end": "2854000"
  },
  {
    "text": "find my slides where did they go there they are okay so there was a lot of stuff to go",
    "start": "2854000",
    "end": "2859359"
  },
  {
    "text": "through in a very short period of time um and yeah so we wanted to leave some time for uh for questions now if you",
    "start": "2859359",
    "end": "2865359"
  },
  {
    "text": "want to get uh the if you wanna have a play around with this workshop and have a look at the stuff that i didn't get time to dive into you'll find it on my",
    "start": "2865359",
    "end": "2871520"
  },
  {
    "text": "github at github.com sharingpal graphical typescript workshop i'll also share these on social media and in the",
    "start": "2871520",
    "end": "2879040"
  },
  {
    "text": "slack channel with the ndc on twitter if you want to get them and you don't want to frantically try and screenshot or type",
    "start": "2879040",
    "end": "2885680"
  },
  {
    "text": "them down graphql code generator was the tool that i used to convert the graphql schema file into typescript type definitions",
    "start": "2885680",
    "end": "2892880"
  },
  {
    "text": "and if you want to learn more about using graphql and on azure i have i think it's a seven",
    "start": "2892880",
    "end": "2900000"
  },
  {
    "text": "part series so far um of doing that uh you'll find the the starting point of",
    "start": "2900000",
    "end": "2905119"
  },
  {
    "text": "that of how we get started we kind of build out a bunch of stuff that we've seen in the workshop today",
    "start": "2905119",
    "end": "2910240"
  },
  {
    "text": "um and again uh for the folks that are here in australia um if you want to grab some azure swag uh",
    "start": "2910240",
    "end": "2916800"
  },
  {
    "text": "the link is now working uh looks like we actually had a problem with it initially uh but that is now working um so you can",
    "start": "2916800",
    "end": "2922559"
  },
  {
    "text": "clean your azure swag um or uh if you wanna if you don't have an azure",
    "start": "2922559",
    "end": "2927680"
  },
  {
    "text": "account you wanna have a free trial um jump on there and uh use the azure pass to get ready to and have a play around",
    "start": "2927680",
    "end": "2933680"
  },
  {
    "text": "uh but looks like uh william is about to join us again so thanks everyone for uh sticking around i",
    "start": "2933680",
    "end": "2940640"
  },
  {
    "text": "hope that that was interesting i hope you've learned something new about how we can do graphql uh in a type safe",
    "start": "2940640",
    "end": "2946800"
  },
  {
    "text": "manner thanks for having me so now over to questions it's really",
    "start": "2946800",
    "end": "2952480"
  },
  {
    "start": "2947000",
    "end": "2995000"
  },
  {
    "text": "awkward if william doesn't come back no he is excellent that was really smooth hey virtual club",
    "start": "2952480",
    "end": "2959760"
  },
  {
    "text": "yeah well look because we can't be there in person i have to bring my own audience applause um i also have a laugh track but i",
    "start": "2959760",
    "end": "2966800"
  },
  {
    "text": "didn't use it because i didn't think my jokes were funny enough to warrant that i would you could have played it would",
    "start": "2966800",
    "end": "2972800"
  },
  {
    "text": "have been quite funny actually i uh aaron yeah like i said that's really smooth sessions i i'm actually was",
    "start": "2972800",
    "end": "2978400"
  },
  {
    "text": "taking a lot of notes here um and uh there is a question that in the chat the one from ben",
    "start": "2978400",
    "end": "2985440"
  },
  {
    "text": "lowbridge so ben's asking is there a benefit to building out the application schema",
    "start": "2985440",
    "end": "2991280"
  },
  {
    "text": "first as opposed to the types first",
    "start": "2991280",
    "end": "2995839"
  },
  {
    "start": "2995000",
    "end": "3094000"
  },
  {
    "text": "so benefit is probably a subjective term because um everyone has",
    "start": "2996319",
    "end": "3001680"
  },
  {
    "text": "um a view of what is beneficial in a different way so uh the reason that i prefer to go schema",
    "start": "3001680",
    "end": "3007839"
  },
  {
    "text": "first then database first is that that tends to be the way that i think about designing my application i think about",
    "start": "3007839",
    "end": "3014240"
  },
  {
    "text": "what the client is going to be wanting before i think about how the data structures are going to be now in uh",
    "start": "3014240",
    "end": "3020960"
  },
  {
    "text": "in my past time in consulting i definitely worked on applications where we started database first where we would",
    "start": "3020960",
    "end": "3026160"
  },
  {
    "text": "design out a database structure and and what was it going to look like for us to store the data and then turn that into",
    "start": "3026160",
    "end": "3031839"
  },
  {
    "text": "an api that we're then exposing to our clients or into an application that was going to be consuming it or whatever it might be so",
    "start": "3031839",
    "end": "3039440"
  },
  {
    "text": "benefit is like i said it's a subjective term um there are going to be reasons that you would want to do it there are",
    "start": "3039440",
    "end": "3044640"
  },
  {
    "text": "going to be reasons why you wouldn't want to do it that way but think about it in terms of what is going to be the best fit for yourselves",
    "start": "3044640",
    "end": "3052000"
  },
  {
    "text": "for the uh the the approach that you want to take in the way that you're designing your architecture and then",
    "start": "3052000",
    "end": "3057839"
  },
  {
    "text": "ultimately that should help you with um the decision on do you want to go schema first or do you",
    "start": "3057839",
    "end": "3063119"
  },
  {
    "text": "want to go um data modeling first uh that sounds sounds good yeah it is",
    "start": "3063119",
    "end": "3069200"
  },
  {
    "text": "definitely a subjective you uh like i said you get to a project and the database is",
    "start": "3069200",
    "end": "3075200"
  },
  {
    "text": "already there but for some reason they decide hey we need graphql now you mentioned graphql you've done",
    "start": "3075200",
    "end": "3081359"
  },
  {
    "text": "all the demos here with the you know javascript typescript but you know what about all the other",
    "start": "3081359",
    "end": "3087119"
  },
  {
    "text": "sort of platforms other languages out there so net and c sharp f sharp",
    "start": "3087119",
    "end": "3092160"
  },
  {
    "text": "what what do we do there um well first off i'd say why are they important just do",
    "start": "3092160",
    "end": "3098400"
  },
  {
    "start": "3094000",
    "end": "3230000"
  },
  {
    "text": "everything in javascript nothing goes wrong just as a complete segue um and",
    "start": "3098400",
    "end": "3106160"
  },
  {
    "text": "something that i saw on ignite's announcements was um there is some updated support for excel macros to be",
    "start": "3106160",
    "end": "3112640"
  },
  {
    "text": "written in javascript so javascript is taking over the world you can write macros for excel in javascript",
    "start": "3112640",
    "end": "3118400"
  },
  {
    "text": "but i digress um if you're let's say that you're building a dotnet application",
    "start": "3118400",
    "end": "3124400"
  },
  {
    "text": "there's a there's a couple of different um libraries out there that will do graphql",
    "start": "3124400",
    "end": "3129440"
  },
  {
    "text": "servers uh for you my pick of them is hot chocolate funny name",
    "start": "3129440",
    "end": "3135839"
  },
  {
    "text": "um sirius project i guess um it's but it's a it's a very",
    "start": "3135839",
    "end": "3141760"
  },
  {
    "text": "fully fledged graphql server um implementation for net it runs on",
    "start": "3141760",
    "end": "3147359"
  },
  {
    "text": "asp.net it can run on azure functions um otherwise there's graphql.net that's",
    "start": "3147359",
    "end": "3154880"
  },
  {
    "text": "just it's another project that's out there another open source project and in my graphql on azure series i",
    "start": "3154880",
    "end": "3162880"
  },
  {
    "text": "actually talk both about graphql.net and hot chocolate and we'll look at how we can implement with either of them",
    "start": "3162880",
    "end": "3168160"
  },
  {
    "text": "um in terms of uh like how do you like the the data structures and things like that",
    "start": "3168160",
    "end": "3173920"
  },
  {
    "text": "graphql cogen will actually generate you um c sharp classes from a uh a graphql",
    "start": "3173920",
    "end": "3180720"
  },
  {
    "text": "schema so if you are going down that schema first round and you want a way that you could generate your classes to maybe give the nd framework or users as",
    "start": "3180720",
    "end": "3188319"
  },
  {
    "text": "mapping between your um your like your entity framework rm and your um your",
    "start": "3188319",
    "end": "3194319"
  },
  {
    "text": "resolvers uh it can actually generate you that stuff as well so you don't have to go down the code first route if that's not the way that you want to",
    "start": "3194319",
    "end": "3199920"
  },
  {
    "text": "tackle it so that's the tool that you you've used during the talk right the same one",
    "start": "3199920",
    "end": "3205680"
  },
  {
    "text": "um yes yes i think so uh i'm definitely going to explore that one uh a bit further myself",
    "start": "3205680",
    "end": "3212640"
  },
  {
    "text": "um yeah i've got another a question here about um uh the schema like you know so it can be",
    "start": "3212640",
    "end": "3219680"
  },
  {
    "text": "quite big notice we've got a really complicated application um can we split it up can we make it a little bit more manageable",
    "start": "3219680",
    "end": "3226079"
  },
  {
    "text": "and you know what what's uh any downsides to doing that yeah so",
    "start": "3226079",
    "end": "3232240"
  },
  {
    "start": "3230000",
    "end": "3344000"
  },
  {
    "text": "if we think about some graphql servers that are out there so github is a has a graphql server component to it so",
    "start": "3232240",
    "end": "3238720"
  },
  {
    "text": "instead of using the rest api you can use graphql and there is there is hundreds of things you can do",
    "start": "3238720",
    "end": "3244079"
  },
  {
    "text": "with github's api um now i'm making some assumptions here i don't actually know how the github",
    "start": "3244079",
    "end": "3250400"
  },
  {
    "text": "graphical schema is implemented but i would expect they're probably splitting it out as a",
    "start": "3250400",
    "end": "3256000"
  },
  {
    "text": "as a bunch of separate schema files now you can um because you still need to expose this as",
    "start": "3256000",
    "end": "3261200"
  },
  {
    "text": "a unified front you can do that in a couple of ways first is through federation where we",
    "start": "3261200",
    "end": "3266400"
  },
  {
    "text": "where we have something that will then bring together a bunch of back a bunch of schemas and then expose them out as a",
    "start": "3266400",
    "end": "3271680"
  },
  {
    "text": "single unified view the other is you can just take a schema with inside of a an application and",
    "start": "3271680",
    "end": "3277280"
  },
  {
    "text": "split it out over multiple files and use um graphql tools so what i was using for loading the schema from a file and then",
    "start": "3277280",
    "end": "3284079"
  },
  {
    "text": "converting it into something that apollo could consume they also have a plugin that that is used to kind of extend the",
    "start": "3284079",
    "end": "3290880"
  },
  {
    "text": "graphql language a little bit that allows you to write basically an import statement so you could have um the like",
    "start": "3290880",
    "end": "3297760"
  },
  {
    "text": "the the types for your your game and your player and your question as separate things with inside of separate",
    "start": "3297760",
    "end": "3304000"
  },
  {
    "text": "files and then you can use it to just bring them all into a single file that is then",
    "start": "3304000",
    "end": "3309359"
  },
  {
    "text": "the thing that you're serving out so that can be like if it's maybe a a project that doesn't warrant you",
    "start": "3309359",
    "end": "3314480"
  },
  {
    "text": "creating a bunch of different microservices that are all exposing graphql but instead you want to just avoid having one file that's like",
    "start": "3314480",
    "end": "3321119"
  },
  {
    "text": "hundreds and hundreds of lines of graphql schema you can use that to merge them all into a single file um and then",
    "start": "3321119",
    "end": "3327680"
  },
  {
    "text": "expose in a single server cool that sounds great um i've got just a sort of an obvious question",
    "start": "3327680",
    "end": "3334960"
  },
  {
    "text": "uh when does graphql go wrong or what's the sort of uh",
    "start": "3334960",
    "end": "3340000"
  },
  {
    "text": "pain that you may have encountered before for others to be aware of yep",
    "start": "3340000",
    "end": "3345119"
  },
  {
    "start": "3344000",
    "end": "3511000"
  },
  {
    "text": "so probably the number one biggest thing that i find painful with graphql is authentication",
    "start": "3345119",
    "end": "3350880"
  },
  {
    "text": "because graphql is a query language and it's pretty expressive in the way that you represent it",
    "start": "3350880",
    "end": "3357200"
  },
  {
    "text": "but it doesn't have a good way to represent authentication and authorization access because you are",
    "start": "3357200",
    "end": "3363119"
  },
  {
    "text": "kind of giving someone the power to get very close to your underlying data models and query against those how do",
    "start": "3363119",
    "end": "3369440"
  },
  {
    "text": "you do authorization against that so how do you make sure that well i might have access because i'm authenticated to",
    "start": "3369440",
    "end": "3375599"
  },
  {
    "text": "perform this particular query but do i have access to that field within the database or that",
    "start": "3375599",
    "end": "3381680"
  },
  {
    "text": "um that that that other data model that's following a relationship how do you",
    "start": "3381680",
    "end": "3387040"
  },
  {
    "text": "implement that so that could be a difficult thing to to do because first off you need to make sure you're modeling it out for your clients to",
    "start": "3387040",
    "end": "3392799"
  },
  {
    "text": "consume and understand the things they can and can't do but also you've got to have your resolvers intelligent enough",
    "start": "3392799",
    "end": "3398240"
  },
  {
    "text": "they can deal with that probably the other thing is that graphql is very well known for allowing you to",
    "start": "3398240",
    "end": "3404240"
  },
  {
    "text": "create a your own like ddos attack um against your own infrastructure",
    "start": "3404240",
    "end": "3410319"
  },
  {
    "text": "so this is actually possible with inside of the schema design that i have in that graphql query um you can go from a game",
    "start": "3410319",
    "end": "3418799"
  },
  {
    "text": "to a player back to a game back to a player back through a game back to a player back to again back so",
    "start": "3418799",
    "end": "3424640"
  },
  {
    "text": "you can end up with this object graph that just gets huge and if you haven't implement your",
    "start": "3424640",
    "end": "3430079"
  },
  {
    "text": "resolvers to be intelligent enough to perform short circuits or to detect",
    "start": "3430079",
    "end": "3435440"
  },
  {
    "text": "recursive queries and things like that yeah you can you can very quickly create your own dios because",
    "start": "3435440",
    "end": "3442079"
  },
  {
    "text": "you've got a query that is just recursive on itself and if you're talking to a database you're building a",
    "start": "3442079",
    "end": "3447920"
  },
  {
    "text": "query that's going to the database that's then going then it's building a new career that's going the database it's building a new query",
    "start": "3447920",
    "end": "3453119"
  },
  {
    "text": "and and that's just so that's just a limitation that you've got in the way",
    "start": "3453119",
    "end": "3458160"
  },
  {
    "text": "the language is designed now there are ways around that like i said you can have your resolvers intelligent to detect short circuits there are projects",
    "start": "3458160",
    "end": "3464640"
  },
  {
    "text": "out there that will enforce those short circuitings with inside of resolve a chain so you can't go more than like 10",
    "start": "3464640",
    "end": "3470400"
  },
  {
    "text": "and 10 deep in field traversals or you can just hope no one realizes that they can bring down your",
    "start": "3470400",
    "end": "3476000"
  },
  {
    "text": "infrastructure by writing a very poor query yeah so i'm just thinking even like when",
    "start": "3476000",
    "end": "3481040"
  },
  {
    "text": "you what you said that ddos attack so that is your when you write the query so if you're just nesting the same types over",
    "start": "3481040",
    "end": "3487119"
  },
  {
    "text": "and over deeper and deeper right so you get a very wide very deep sort of query",
    "start": "3487119",
    "end": "3492160"
  },
  {
    "text": "and that creates a ddos uh headache idea cool and i guess",
    "start": "3492160",
    "end": "3498079"
  },
  {
    "text": "if i think about subscriptions can you um yeah somehow you can sort of you know",
    "start": "3498079",
    "end": "3504720"
  },
  {
    "text": "exhaust websockets so well if you want to subscribe to literally everything or is that not really a problem anymore",
    "start": "3504720",
    "end": "3511119"
  },
  {
    "start": "3511000",
    "end": "3599000"
  },
  {
    "text": "uh well no it's definitely a problem and the other the other challenge with um subscriptions and websockets in general",
    "start": "3511119",
    "end": "3517520"
  },
  {
    "text": "is that you end up with a very tight coupling between client to server so scalability becomes a problem so if if",
    "start": "3517520",
    "end": "3523359"
  },
  {
    "text": "we think about infrastructure where we're scaling out um",
    "start": "3523359",
    "end": "3528480"
  },
  {
    "text": "we've hit a scale limit and we want to add more infrastructure to it or we want to scale up the size of our infrastructure",
    "start": "3528480",
    "end": "3534319"
  },
  {
    "text": "more more cpus more ram well how do we maintain those socket connections across scale ups",
    "start": "3534319",
    "end": "3540960"
  },
  {
    "text": "also websockets don't work in a serverless model because they're kind of like anti-serverless",
    "start": "3540960",
    "end": "3547520"
  },
  {
    "text": "the point of service is that it's event driven and then if you're like i want a persistent connection well how are you having a persistent",
    "start": "3547520",
    "end": "3553359"
  },
  {
    "text": "connection to something that is inherently not allowed to persist um so yeah",
    "start": "3553359",
    "end": "3558880"
  },
  {
    "text": "you you definitely can and um you can definitely overload a system using web sockets um and using the",
    "start": "3558880",
    "end": "3564720"
  },
  {
    "text": "subscription model mostly because limits the ability to scale",
    "start": "3564720",
    "end": "3570799"
  },
  {
    "text": "cool so in a sense really you know we have to make sure we're picking the right tool for the job you know it's",
    "start": "3570799",
    "end": "3577359"
  },
  {
    "text": "built for purpose and you know if if things change down the track then you know we have to be mindful of that we",
    "start": "3577359",
    "end": "3583440"
  },
  {
    "text": "don't want to create a really problem well that looks like all the questions i have",
    "start": "3583440",
    "end": "3589119"
  },
  {
    "text": "aaron uh thank you very much great talk uh i think lars is learning to come back",
    "start": "3589119",
    "end": "3595280"
  },
  {
    "text": "on screen he's got something cool in store for us coming up you there lies",
    "start": "3595280",
    "end": "3602760"
  }
]