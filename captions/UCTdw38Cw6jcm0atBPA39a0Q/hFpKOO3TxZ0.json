[
  {
    "text": "all right hello everyone I'm here again and today we're solving this problem pip",
    "start": "3250",
    "end": "11050"
  },
  {
    "text": "install my project this is all about really providing something for your",
    "start": "11050",
    "end": "18130"
  },
  {
    "text": "users in Python this is a pretty good language for a lot of users especially",
    "start": "18130",
    "end": "23349"
  },
  {
    "text": "new to programming for doing high-level descriptions of their problems but it",
    "start": "23349",
    "end": "32439"
  },
  {
    "text": "often comes with some issues and for us the challenge the challenge I really",
    "start": "32439",
    "end": "37770"
  },
  {
    "text": "like I want to use C++ I want to use C++ to provide speed to integrate with other",
    "start": "37770",
    "end": "45040"
  },
  {
    "text": "solutions I have in in C++ and also to provide a sort of static static of",
    "start": "45040",
    "end": "51250"
  },
  {
    "text": "framework for me to work with because sometimes you're factoring in Python can be a little bit difficult and also I",
    "start": "51250",
    "end": "57430"
  },
  {
    "text": "won't install this on Linux Mac windows there's also DBS DS but they're sort of",
    "start": "57430",
    "end": "63160"
  },
  {
    "text": "an exercise for the reader as a proxy for me I'm gonna use my Kesava I'm not",
    "start": "63160",
    "end": "70180"
  },
  {
    "text": "very fond of using my own name so I'm gonna use my Kesava he will show up in where you would substitute yourself",
    "start": "70180",
    "end": "76210"
  },
  {
    "text": "that's a pal of mine semester with pip install pip install is one of those",
    "start": "76210",
    "end": "84610"
  },
  {
    "text": "things that if you're developing Python you're using all the time and maybe you never really thought about how it actually works it works in four main",
    "start": "84610",
    "end": "92740"
  },
  {
    "text": "steps the first thing it does it looks up the package you're looking for in an index usually that would be pi pi but it",
    "start": "92740",
    "end": "100270"
  },
  {
    "text": "can in principle be any compatible index this is a package registry then it",
    "start": "100270",
    "end": "107200"
  },
  {
    "text": "determines if this particular package is installable if it's there and can I",
    "start": "107200",
    "end": "112360"
  },
  {
    "text": "install it to do that it looks at the host system it looks at your python version and whatever is available inside",
    "start": "112360",
    "end": "118119"
  },
  {
    "text": "index after that it'll fetch the package and finally extracts the contents of",
    "start": "118119",
    "end": "125170"
  },
  {
    "text": "this package into your side packages directory that's really at most package manager",
    "start": "125170",
    "end": "132160"
  },
  {
    "text": "it's almost a you work that way tom package can be constructed in several",
    "start": "132160",
    "end": "139690"
  },
  {
    "text": "different ways I've chosen to to grow them into four main categories you have your pure Python this is what you would",
    "start": "139690",
    "end": "146170"
  },
  {
    "text": "usually want to write and especially your downstream users you would want them to write this so that's when you have all Python code in your dog PI",
    "start": "146170",
    "end": "152680"
  },
  {
    "text": "files and it's just Python you know they have the thing I've chosen to name in",
    "start": "152680",
    "end": "158110"
  },
  {
    "text": "pure Python which is almost indistinguishable from pure Python so this is Python code that uses a non",
    "start": "158110",
    "end": "164230"
  },
  {
    "text": "Python back-end probably the best example of this is numpy numpy has a",
    "start": "164230",
    "end": "169810"
  },
  {
    "text": "back-end in c and you never really notice it looks and feels and behaves by",
    "start": "169810",
    "end": "174940"
  },
  {
    "text": "Python all the way but it's just a lot faster because python this is quite slow you have what I shouldn't go thin",
    "start": "174940",
    "end": "182800"
  },
  {
    "text": "library wrappers so imagine you have your system library it could be Blas it could be a lot like it could be anything",
    "start": "182800",
    "end": "188640"
  },
  {
    "text": "then you then make a thin like wrapper in Python around they would typically",
    "start": "188640",
    "end": "195220"
  },
  {
    "text": "operate in a sort of fire a request to the library wait for it to finish its",
    "start": "195220",
    "end": "200650"
  },
  {
    "text": "routine and then parse it results pretty much like a sir process you would treat the library like a sub process very of",
    "start": "200650",
    "end": "207280"
  },
  {
    "text": "me would you see types for this which is the Python foreign function interface for libraries but that's not necessary",
    "start": "207280",
    "end": "216459"
  },
  {
    "text": "but it's done you know style of libraries they they look very much to like the host library that they're",
    "start": "216459",
    "end": "221950"
  },
  {
    "text": "integrating against and there's the fat wrappers so they differ from the thin wrapper is really only in the",
    "start": "221950",
    "end": "227739"
  },
  {
    "text": "sophistication of their interaction with the other library is there a lot of communication back and forth does it",
    "start": "227739",
    "end": "233800"
  },
  {
    "text": "maybe provide progress sometimes there is input/output you modify state and you do all of this but from a Python setting",
    "start": "233800",
    "end": "242130"
  },
  {
    "text": "big difference between this and impure Python library is that the fat library",
    "start": "242130",
    "end": "247510"
  },
  {
    "text": "wrappers typically target something that is also available from other programming languages were asked in the impure",
    "start": "247510",
    "end": "253570"
  },
  {
    "text": "Python case in the umpires case the backend is really only available in Python this hope will largely cover the",
    "start": "253570",
    "end": "261250"
  },
  {
    "text": "impure Python and fat library wrapper setting but it is also applicable to attend libraries this is a packaged",
    "start": "261250",
    "end": "271690"
  },
  {
    "text": "Python it's it's from the terrarium in a",
    "start": "271690",
    "end": "276760"
  },
  {
    "text": "toccata in Bergen which is not my hometown and I just wanted to share that",
    "start": "276760",
    "end": "283770"
  },
  {
    "text": "so the question is one is actually inside a package what's in a package",
    "start": "283770",
    "end": "290639"
  },
  {
    "text": "this is a pretty common layout I stole this from the docs python.org",
    "start": "291390",
    "end": "297990"
  },
  {
    "text": "listing but your run-of-the-mill Python project would be laid out like this you",
    "start": "297990",
    "end": "303520"
  },
  {
    "text": "have some metadata in terms so in like I read me you have a license file some",
    "start": "303520",
    "end": "309460"
  },
  {
    "text": "requirements that you wouldn't into being installed with the package you have Docs and hopefully you have a lot",
    "start": "309460",
    "end": "315669"
  },
  {
    "text": "of tests and of course it's the my package in this case sorcerer actually this is where all the source code goes",
    "start": "315669",
    "end": "321870"
  },
  {
    "text": "python is pretty opinionated on how this source code directory should be laid out",
    "start": "321870",
    "end": "327790"
  },
  {
    "text": "because python libraries are religious directories with a specific structure that Python the knows how to interpret",
    "start": "327790",
    "end": "336000"
  },
  {
    "text": "okay so we let out a project like this and then we run the setup script we'll",
    "start": "337140",
    "end": "343030"
  },
  {
    "text": "go into the actual details of the setup script later but when you run that you will get with the command B this wheel",
    "start": "343030",
    "end": "349690"
  },
  {
    "text": "which means binary distributable wheel or something you would get voice really",
    "start": "349690",
    "end": "357400"
  },
  {
    "text": "a zip file in these guys if you just list the contents of that you will see a",
    "start": "357400",
    "end": "362890"
  },
  {
    "text": "lot of files that weren't in the original source directory like the metadata the wheel and a record but",
    "start": "362890",
    "end": "370240"
  },
  {
    "text": "there's also the license file and of course our source files pip knows how to",
    "start": "370240",
    "end": "377229"
  },
  {
    "text": "take this structure unknown packet into your side package directory which is",
    "start": "377229",
    "end": "384880"
  },
  {
    "text": "where Python stores its libraries and you will see here the my package from",
    "start": "384880",
    "end": "391050"
  },
  {
    "text": "their source directory being laid out next to an umpire to pandas terminus at and all your other installed",
    "start": "391050",
    "end": "396969"
  },
  {
    "text": "Python libraries and that's really what a package is right it's just this intermediary format that you can give to",
    "start": "396969",
    "end": "403629"
  },
  {
    "text": "someone that their tools would know how to unpack into something that they cannot just run this is the Pantheon in",
    "start": "403629",
    "end": "413860"
  },
  {
    "text": "Rome arguably one of if not the most gorgeous building in the world if you",
    "start": "413860",
    "end": "418959"
  },
  {
    "text": "haven't seen it then order a plane ticket right away I'm bringing that up",
    "start": "418959",
    "end": "424179"
  },
  {
    "text": "because the Pantheon is a living piece of history in Rome and it's quite",
    "start": "424179",
    "end": "431769"
  },
  {
    "text": "important to understand and appreciate history in order to provide some context on to why things are the way they are",
    "start": "431769",
    "end": "437199"
  },
  {
    "text": "today history is is that context so",
    "start": "437199",
    "end": "442229"
  },
  {
    "text": "let's look at my for Python packaging in the late 90s Python the Python community",
    "start": "442229",
    "end": "449589"
  },
  {
    "text": "realized that they wanted something like the sea pan for Perl comprehensive Perl",
    "start": "449589",
    "end": "455649"
  },
  {
    "text": "archive network Sipan is arguably one of",
    "start": "455649",
    "end": "461379"
  },
  {
    "text": "the reasons Perl had such a massive success in the 90s and it was pretty glorious it was very easy to get and",
    "start": "461379",
    "end": "467319"
  },
  {
    "text": "obtain and use software and there was a massive wealth of packages available and",
    "start": "467319",
    "end": "473829"
  },
  {
    "text": "Python didn't wanna be any worse they wanted to win the script language force so they developed dis to tails and",
    "start": "473829",
    "end": "479409"
  },
  {
    "text": "released it for the Python 1.6 standard library unfortunately the standard libraries where modules go to die so it",
    "start": "479409",
    "end": "487329"
  },
  {
    "text": "didn't scale very well as time went on in 2003 in the pi PI the Python package",
    "start": "487329",
    "end": "495039"
  },
  {
    "text": "index comes online to be a proper alternative to to see pan and this",
    "start": "495039",
    "end": "500860"
  },
  {
    "text": "tutorials is taught how to create package metadata for this index this goes on for a few years until syllabus",
    "start": "500860",
    "end": "507549"
  },
  {
    "text": "comes it tries to extend and replace these two teens really asked a de facto",
    "start": "507549",
    "end": "512550"
  },
  {
    "text": "full tool for Python and it pretty much",
    "start": "512550",
    "end": "518948"
  },
  {
    "text": "wipes the floor with this UT also it adds a few options and but it does extend it and then later in 2008 to pet",
    "start": "518949",
    "end": "526240"
  },
  {
    "text": "now goals on top of set of tools and papers the way to manage your Python packages one thing you can notice with",
    "start": "526240",
    "end": "533530"
  },
  {
    "text": "this is that everything builds on everything right which is great because",
    "start": "533530",
    "end": "538540"
  },
  {
    "text": "if you had a package with a script written for dist utils in 2005 that",
    "start": "538540",
    "end": "545920"
  },
  {
    "text": "still works to die with set of tools you only need to change the import the",
    "start": "545920",
    "end": "551710"
  },
  {
    "text": "drawback of course that means we now have was it 20 years of legacy and that",
    "start": "551710",
    "end": "557770"
  },
  {
    "text": "shows sometimes in 2000 with the distance release it already knew how to",
    "start": "557770",
    "end": "565090"
  },
  {
    "text": "build C extensions that like when you see an umpire write it like C code that",
    "start": "565090",
    "end": "572020"
  },
  {
    "text": "behaves like any Python library but this is largely intended for distribution and",
    "start": "572020",
    "end": "579790"
  },
  {
    "text": "it shows because it provides you very few tools for development so let's look into using setup Tomas",
    "start": "579790",
    "end": "585250"
  },
  {
    "text": "what we're gonna do now is we're gonna take and actually create a package from scratch so we write our setup file this",
    "start": "585250",
    "end": "592840"
  },
  {
    "text": "is pretty much the minimal setup file you can have you import your setup tools and you invoke setup with a lot of keys",
    "start": "592840",
    "end": "600100"
  },
  {
    "text": "that will then be interpreted by set of tools to mean specific things for building and packaging so said the name",
    "start": "600100",
    "end": "605950"
  },
  {
    "text": "the my project name and we give it a version we put down mecca's audacity",
    "start": "605950",
    "end": "611260"
  },
  {
    "text": "author because he is not a proxy and our avatar for this we slap a BSD license on it because that's pretty convenient and",
    "start": "611260",
    "end": "617650"
  },
  {
    "text": "then we list our packages in this case we only have one package but this will be all the modules we can import after a",
    "start": "617650",
    "end": "624100"
  },
  {
    "text": "package is installed this is pretty straightforward it reads easily and if you have a pure",
    "start": "624100",
    "end": "631180"
  },
  {
    "text": "Python project this is pretty much all you need",
    "start": "631180",
    "end": "635100"
  },
  {
    "text": "but I want to use some say so I add a",
    "start": "637209",
    "end": "644089"
  },
  {
    "text": "little bit I used to sell toast on extension module in order to declare I",
    "start": "644089",
    "end": "649399"
  },
  {
    "text": "want this to be a Python module but I",
    "start": "649399",
    "end": "654529"
  },
  {
    "text": "want it built with the C compiler so I list the sources to my package math",
    "start": "654529",
    "end": "660319"
  },
  {
    "text": "thought C source file and I also extend",
    "start": "660319",
    "end": "666079"
  },
  {
    "text": "the setup call with the X modules extension modules parameter this is",
    "start": "666079",
    "end": "674089"
  },
  {
    "text": "still pretty straightforward right so let's actually build this math or C",
    "start": "674089",
    "end": "679429"
  },
  {
    "text": "extension we start by including the Python header which is the Python API header and we create a function add this",
    "start": "679429",
    "end": "688309"
  },
  {
    "text": "is just its sums two numbers and then in fact it seems to integers the parts to people there takes a format string from",
    "start": "688309",
    "end": "695449"
  },
  {
    "text": "C almost and says I want these parameters to be integers and if they're not integers I want you to file that's",
    "start": "695449",
    "end": "701509"
  },
  {
    "text": "what it says and then we create a Python integer from nine just return it okay",
    "start": "701509",
    "end": "709539"
  },
  {
    "text": "then we register this function in a function table it's just an array of",
    "start": "710199",
    "end": "716799"
  },
  {
    "text": "Python owns pythons own function definition so to speak and then we",
    "start": "716799",
    "end": "725089"
  },
  {
    "text": "create a module definition because we're obviously building a module you need a module in Python with its name math it's",
    "start": "725089",
    "end": "734379"
  },
  {
    "text": "doctoring no I just put download your doctoring but please be a little bit more elaborate hear something about",
    "start": "734379",
    "end": "742489"
  },
  {
    "text": "interpretive states which usually should be minus 1 you have all the states in your global variables and then we give",
    "start": "742489",
    "end": "749029"
  },
  {
    "text": "it a function table and finally we have",
    "start": "749029",
    "end": "755449"
  },
  {
    "text": "this init function that Python knows to look for that simply creates this module",
    "start": "755449",
    "end": "761899"
  },
  {
    "text": "is a very simple module with no complex state or object going about so all we need is the PI module create function",
    "start": "761899",
    "end": "767149"
  },
  {
    "text": "call this is for Python 3 but it's almost identical for Python -",
    "start": "767149",
    "end": "773620"
  },
  {
    "text": "so far so good pretty simple and straightforward and as you can see how this works you can try",
    "start": "775060",
    "end": "781399"
  },
  {
    "text": "this out and it will work like this okay",
    "start": "781399",
    "end": "786529"
  },
  {
    "text": "but I don't want to you see I wanna use C++ so it's actually livid I'm Claire",
    "start": "786529",
    "end": "794180"
  },
  {
    "text": "it's the blue color very difficult to see it's pretty low contrast from here okay good",
    "start": "794180",
    "end": "800709"
  },
  {
    "text": "but anyway so at this line up there with I didn't know accept and we changed the",
    "start": "800709",
    "end": "806930"
  },
  {
    "text": "nulls to no pointers just to make sure that this is actually suppose post and in fact it's C++ 11 okay other or not",
    "start": "806930",
    "end": "814639"
  },
  {
    "text": "this is the file is identical and we",
    "start": "814639",
    "end": "819769"
  },
  {
    "text": "modify our setup script to use the extra compile args for C++ the standard super",
    "start": "819769",
    "end": "827720"
  },
  {
    "text": "plus 11 flag because we no need to talk we want to use C++ 11 this is a little",
    "start": "827720",
    "end": "836240"
  },
  {
    "text": "bit problematic because this assumes that your compiler is GCC or takes GCC",
    "start": "836240",
    "end": "841490"
  },
  {
    "text": "flags clong DOS but unless we see just not so",
    "start": "841490",
    "end": "847129"
  },
  {
    "text": "this one I'm not the one windows the previous one dead because he didn't take any parameters but this will crash on",
    "start": "847129",
    "end": "852170"
  },
  {
    "text": "Windows this is always a not great because one of our requirements was of",
    "start": "852170",
    "end": "858829"
  },
  {
    "text": "course to build and distributed for Windows",
    "start": "858829",
    "end": "862899"
  },
  {
    "text": "so what do we do well we move out a check says if this platform is not",
    "start": "865160",
    "end": "873570"
  },
  {
    "text": "windows we assume we have GCC style options and really we're saying we",
    "start": "873570",
    "end": "879300"
  },
  {
    "text": "assume you don't have an Intel compiler anyway so just ignore that and then only",
    "start": "879300",
    "end": "885450"
  },
  {
    "text": "if it's not MS we see we add the or if it's not on Windows we add the stds it",
    "start": "885450",
    "end": "891090"
  },
  {
    "text": "was was 11 flank all right pretty good right now you should work on Windows which it does until you realize some",
    "start": "891090",
    "end": "898680"
  },
  {
    "text": "people use mingw on Windows so this test is not sufficient at this point",
    "start": "898680",
    "end": "907910"
  },
  {
    "text": "sorry at this point you get pretty frustrated how hard can it be to just say I want to use C++ 11 to compile this",
    "start": "907910",
    "end": "915570"
  },
  {
    "text": "code right so you start and then the more you dive into this your more you",
    "start": "915570",
    "end": "920700"
  },
  {
    "text": "realize that building for multiple platforms is just not an easy problem so",
    "start": "920700",
    "end": "926640"
  },
  {
    "text": "this is just for compiler flies but imagine wanting to find libraries in non-standard locations for instance",
    "start": "926640",
    "end": "931650"
  },
  {
    "text": "because your base distribution is read at 6 which is very old and you want to use a newer version of a library",
    "start": "931650",
    "end": "937350"
  },
  {
    "text": "somewhere that you've installed locally it's a pretty common use case right so",
    "start": "937350",
    "end": "942480"
  },
  {
    "text": "you check how do other people find non-standard libraries well I looked at",
    "start": "942480",
    "end": "949890"
  },
  {
    "text": "been around on the web and I found this monstrosity I don't even know where to",
    "start": "949890",
    "end": "956490"
  },
  {
    "text": "begin honestly it makes a lot of assumptions that are very easily broken for instance",
    "start": "956490",
    "end": "963540"
  },
  {
    "text": "that the library is in Lib and not Lib 64 so in very many red-hot style",
    "start": "963540",
    "end": "969030"
  },
  {
    "text": "layouts this will not work this will definitely not work on a standard Debian because it puts them behind architecture",
    "start": "969030",
    "end": "974880"
  },
  {
    "text": "Triplets so this is obviously this is very brittle it probably works on the",
    "start": "974880",
    "end": "981840"
  },
  {
    "text": "developers machine because a spirit like that but this just it's not portable and",
    "start": "981840",
    "end": "987630"
  },
  {
    "text": "this is something I see time and time again with these set up scripts it's not they make these kind of assumptions because covering something actually",
    "start": "987630",
    "end": "995220"
  },
  {
    "text": "robust is very hard and there's no mechanism for controlling it as a user but then",
    "start": "995220",
    "end": "1005119"
  },
  {
    "text": "you look at the help right for building extensions inside of tools and then you",
    "start": "1005119",
    "end": "1010579"
  },
  {
    "text": "read this you can pass it the library there's option which search for external libraries separated by a semicolon which",
    "start": "1010579",
    "end": "1016850"
  },
  {
    "text": "is pretty common UNIX relic and a series of directories to search for and figure",
    "start": "1016850",
    "end": "1022819"
  },
  {
    "text": "well with that you can they say alright see if you have your non standard libraries path somewhere give it to them",
    "start": "1022819",
    "end": "1029569"
  },
  {
    "text": "it's ok until you realize you also need its include path and then you stir a little bit more so",
    "start": "1029569",
    "end": "1036860"
  },
  {
    "text": "you call that in and say you stop mmm and that should work fine until you run",
    "start": "1036860",
    "end": "1042380"
  },
  {
    "text": "it on Windows in which cases crashes no recovery and you feel like this",
    "start": "1042380",
    "end": "1052539"
  },
  {
    "text": "it's very painful being that anything's get out of it worse because building C++",
    "start": "1054440",
    "end": "1065820"
  },
  {
    "text": "comes with a lot of issues you have very different compiler options depending on",
    "start": "1065820",
    "end": "1071220"
  },
  {
    "text": "your compiler version and of course which compiler you using there are",
    "start": "1071220",
    "end": "1077280"
  },
  {
    "text": "multiple versions there are multiple versions on the same machine right you",
    "start": "1077280",
    "end": "1082410"
  },
  {
    "text": "might want to use clang on a system where the default C compiler is GCC",
    "start": "1082410",
    "end": "1088280"
  },
  {
    "text": "alright we maybe want to use a newer GCC than the one that's in the user bin like how do you deal with that you hunt",
    "start": "1088280",
    "end": "1095250"
  },
  {
    "text": "platform specific options sometimes you have configuration you only want to do in Windows because Windows has some",
    "start": "1095250",
    "end": "1100320"
  },
  {
    "text": "peculiarities that the other systems you support don't and you have your binary compatibility it is an endless nightmare",
    "start": "1100320",
    "end": "1107400"
  },
  {
    "text": "if you start struggling and then there's more you have conditionals and options",
    "start": "1107400",
    "end": "1113490"
  },
  {
    "text": "in your build logic for instance do you want to support both using and not using",
    "start": "1113490",
    "end": "1118530"
  },
  {
    "text": "Blas and then you have a fallback called path maybe how do you do that right you have system differences imagine you want",
    "start": "1118530",
    "end": "1125190"
  },
  {
    "text": "to use one of the most common ones is network to host byte swapping which is just fixing endianness on Windows",
    "start": "1125190",
    "end": "1133380"
  },
  {
    "text": "studies in the windsock header and in the right but on Linux it's usually an",
    "start": "1133380",
    "end": "1139710"
  },
  {
    "text": "issue sign it but it could also be in Archon net sign it I think it is and it has like three four headers it can be in",
    "start": "1139710",
    "end": "1146010"
  },
  {
    "text": "and that's just Linux and then you have the Mac which also has different directories and if you want the bsds and",
    "start": "1146010",
    "end": "1152340"
  },
  {
    "text": "they support it elsewhere you have built time dependencies and code generation an obvious example there",
    "start": "1152340",
    "end": "1158340"
  },
  {
    "text": "might be flex and or lexan and vice on but there are of course others and you",
    "start": "1158340",
    "end": "1163919"
  },
  {
    "text": "have runtime dependencies and they're transitive links alright so if you're linking against the library and that",
    "start": "1163919",
    "end": "1169740"
  },
  {
    "text": "needs another library you need to link against that third library too and you need to get that information from somewhere",
    "start": "1169740",
    "end": "1176660"
  },
  {
    "text": "and then there's the problem of development so let's assume that you write this function it's a templated",
    "start": "1177020",
    "end": "1183090"
  },
  {
    "text": "it's just a division but I can give it a name Dave and you put it in a math HPP",
    "start": "1183090",
    "end": "1188220"
  },
  {
    "text": "header in your project right this is a pretty straightforward divide in C++ so",
    "start": "1188220",
    "end": "1195450"
  },
  {
    "text": "you have that and then you add the you",
    "start": "1195450",
    "end": "1201179"
  },
  {
    "text": "register it in the in the function table add it to the module and you run it and it works right you can divide numbers",
    "start": "1201179",
    "end": "1207230"
  },
  {
    "text": "great and then you realize that if you",
    "start": "1207230",
    "end": "1214200"
  },
  {
    "text": "divide by zero you get a floating-point exception from your operating system and",
    "start": "1214200",
    "end": "1220080"
  },
  {
    "text": "it kills your process that's usually not an acceptable way of having our library",
    "start": "1220080",
    "end": "1227370"
  },
  {
    "text": "and python work you would want a runtime exception in python that you can then deal with appropriately right you don't want your process to be taken down",
    "start": "1227370",
    "end": "1233970"
  },
  {
    "text": "especially not from a library so you change it a little bit to actually check",
    "start": "1233970",
    "end": "1239309"
  },
  {
    "text": "is the right-hand side my divisor zero",
    "start": "1239309",
    "end": "1244530"
  },
  {
    "text": "and if it is just raise the divide by zero exception and if not just perform",
    "start": "1244530",
    "end": "1251250"
  },
  {
    "text": "the division all right still pretty straightforward so you do",
    "start": "1251250",
    "end": "1256440"
  },
  {
    "text": "this and then you built okay and you run",
    "start": "1256440",
    "end": "1262350"
  },
  {
    "text": "your test again and you still get the process termination",
    "start": "1262350",
    "end": "1268820"
  },
  {
    "text": "so what happens here is that set of tools doesn't acknowledge the fact that",
    "start": "1271040",
    "end": "1276210"
  },
  {
    "text": "code changes in headers can lead to changes in object files it doesn't track",
    "start": "1276210",
    "end": "1283080"
  },
  {
    "text": "that dependency which is not very convenient when you're having templated code which is very common in C++ that",
    "start": "1283080",
    "end": "1288990"
  },
  {
    "text": "you tend to factor out into headers it only sees that the source files are unchanged and never considers the fact",
    "start": "1288990",
    "end": "1295590"
  },
  {
    "text": "that headers might contribute to the need of a rebuild and you feel like this",
    "start": "1295590",
    "end": "1301310"
  },
  {
    "text": "you scream very loud both internally and maybe you scream some external later",
    "start": "1301310",
    "end": "1309110"
  },
  {
    "text": "then the question is is paradise lost",
    "start": "1310130",
    "end": "1315950"
  },
  {
    "text": "this illustration by Gustav Dora is called the fall of Lucifer I think in",
    "start": "1315950",
    "end": "1321360"
  },
  {
    "text": "English and it depicts Lucifer being thrown out of heaven this scene from",
    "start": "1321360",
    "end": "1327780"
  },
  {
    "text": "well Paradise Lost by nothing but of",
    "start": "1327780",
    "end": "1333870"
  },
  {
    "text": "course the talk name hints of a solution there is in fact a new tomorrow so when",
    "start": "1333870",
    "end": "1339930"
  },
  {
    "text": "I discovered this it was one of the happier days of my life I have to admit there is a package called psychic belt",
    "start": "1339930",
    "end": "1347370"
  },
  {
    "text": "which was starting 2014 at a conference for Syfy and the the circuit or the",
    "start": "1347370",
    "end": "1356100"
  },
  {
    "text": "sorry disciple people they build a lot of code that depends on speed because a lot of it is numerical and mathematical",
    "start": "1356100",
    "end": "1362370"
  },
  {
    "text": "and that's generally not very pleasant in Python I later kind of felt that the",
    "start": "1362370",
    "end": "1369780"
  },
  {
    "text": "tools they had for building and managing and developing this world or they were inadequate",
    "start": "1369780",
    "end": "1375440"
  },
  {
    "text": "so they created this package and as the it says on the readme the psychical package is fundamentally just glue",
    "start": "1375440",
    "end": "1382050"
  },
  {
    "text": "between the set of tools Python module and C Mike",
    "start": "1382050",
    "end": "1386870"
  },
  {
    "text": "so say what you want about see Mike about its syntax and it sometimes",
    "start": "1388770",
    "end": "1394380"
  },
  {
    "text": "funkiness but it's pretty good at what it does so for instance referring to the",
    "start": "1394380",
    "end": "1400360"
  },
  {
    "text": "problems we saw earlier you can find packaged to actually detect libraries",
    "start": "1400360",
    "end": "1405940"
  },
  {
    "text": "for your runtime dependency and then of course make against them and more",
    "start": "1405940",
    "end": "1413020"
  },
  {
    "text": "importantly see make assumes that it's sometimes interesting to point to specific versions of that library that's",
    "start": "1413020",
    "end": "1420630"
  },
  {
    "text": "configuration time you can find your compile time dependencies like if you",
    "start": "1420630",
    "end": "1427660"
  },
  {
    "text": "independent flex in order to create a parser for your language that you want expose in Python you might want to run",
    "start": "1427660",
    "end": "1435160"
  },
  {
    "text": "Flex as a part off of your your build pipeline of course you can link libraries and c-max target link",
    "start": "1435160",
    "end": "1441429"
  },
  {
    "text": "libraries actually manages to deal with transitive linking which is quite useful",
    "start": "1441429",
    "end": "1446620"
  },
  {
    "text": "once you have non-trivial dependencies you can portably set your C++ 11 14 17",
    "start": "1446620",
    "end": "1452770"
  },
  {
    "text": "or your standard across compilers and see mag knows how to you know sort the",
    "start": "1452770",
    "end": "1457809"
  },
  {
    "text": "flags out you can check for like what compiler am i using in order to set",
    "start": "1457809",
    "end": "1463870"
  },
  {
    "text": "compiler specific options instead of hoping that operating system also determines compiler you can check those",
    "start": "1463870",
    "end": "1472240"
  },
  {
    "text": "days compiler setup have this include file available and if so should I then include it or set a specific flag or not",
    "start": "1472240",
    "end": "1479049"
  },
  {
    "text": "and of course you have your options for a built-in runtime like do you want to build shared libs do you want to link",
    "start": "1479049",
    "end": "1484299"
  },
  {
    "text": "statically you can you can do this this is what it looks like this is once I",
    "start": "1484299",
    "end": "1489970"
  },
  {
    "text": "could build looks like in practice and I have to say it is remarkably similar to",
    "start": "1489970",
    "end": "1496440"
  },
  {
    "text": "the pure Python set of tools example the",
    "start": "1496440",
    "end": "1502210"
  },
  {
    "text": "only difference is that you import SK build for socket build instead of set of tools",
    "start": "1502210",
    "end": "1508140"
  },
  {
    "text": "that's it this is really it so Python the Python del script is actually not",
    "start": "1508540",
    "end": "1514690"
  },
  {
    "text": "really aware that you're relying on C++",
    "start": "1514690",
    "end": "1520419"
  },
  {
    "text": "code that's all and this is to see make",
    "start": "1520419",
    "end": "1527710"
  },
  {
    "text": "lists that Peres said so I'll just go through it okay you'll specify your minimum version that's very useful in",
    "start": "1527710",
    "end": "1533679"
  },
  {
    "text": "order to know what features you can at least use and that will throw the appropriate error from C make you say",
    "start": "1533679",
    "end": "1540100"
  },
  {
    "text": "that I want to use C and C++ language and linkage and in my case now set the eleven standard then you find package",
    "start": "1540100",
    "end": "1547960"
  },
  {
    "text": "this Python extensions thing now that's psychic bells own C make magic thing",
    "start": "1547960",
    "end": "1553419"
  },
  {
    "text": "that you need to just include that should always be there and then you add your library as a module like you would",
    "start": "1553419",
    "end": "1559179"
  },
  {
    "text": "do with NEC see my project make sure to call this Python extension module",
    "start": "1559179",
    "end": "1564520"
  },
  {
    "text": "function which is provided by the Python exemptions CMAC module from socket belt",
    "start": "1564520",
    "end": "1571500"
  },
  {
    "text": "and then of course I've just demonstrate Harry there you can check for compiler you can do anything because this is just",
    "start": "1571500",
    "end": "1577270"
  },
  {
    "text": "a regular C make invocation finally install your target into your Python",
    "start": "1577270",
    "end": "1583780"
  },
  {
    "text": "directory your package directory if you",
    "start": "1583780",
    "end": "1590320"
  },
  {
    "text": "want to link against anything then you just find package for that hopefully it",
    "start": "1590320",
    "end": "1596950"
  },
  {
    "text": "provides the CMAC file for you or at least to see my config for you and you just link if satellite would have had",
    "start": "1596950",
    "end": "1603669"
  },
  {
    "text": "any other things he needed you to link against or any definitions you needed to set anything you needed to include in",
    "start": "1603669",
    "end": "1609340"
  },
  {
    "text": "particular that is now handled by the target link library logic in ce mec it's a much improvement from the fine dakota",
    "start": "1609340",
    "end": "1616720"
  },
  {
    "text": "paths that we saw earlier okay",
    "start": "1616720",
    "end": "1622169"
  },
  {
    "text": "as i mentioned sometimes you want to use specific versions of a library and see make assumes that you want to set those",
    "start": "1622169",
    "end": "1628480"
  },
  {
    "text": "from the command line at configure time and of course sake build allows you to",
    "start": "1628480",
    "end": "1633910"
  },
  {
    "text": "do that by we're after the double dash you can now pass just regular c make arguments is it regular c make arguments",
    "start": "1633910",
    "end": "1640000"
  },
  {
    "text": "to say look for set lib in that directory remember this from before",
    "start": "1640000",
    "end": "1649559"
  },
  {
    "text": "if we had done this but with psychic build instead this would have been the",
    "start": "1649559",
    "end": "1655059"
  },
  {
    "text": "outcome instead which is probably I'd hope to see a last time",
    "start": "1655059",
    "end": "1660330"
  },
  {
    "text": "so we're just gonna have a brief Intermezzo from the psychic both because",
    "start": "1663539",
    "end": "1671970"
  },
  {
    "text": "after everyday work something like this is what you want to be doing they should",
    "start": "1672269",
    "end": "1677440"
  },
  {
    "text": "be enough for your development you want one entry point you want one command to just do everything for you okay you",
    "start": "1677440",
    "end": "1683889"
  },
  {
    "text": "don't want to have to manually remember and run multiple build system in sequence that should all be handled and",
    "start": "1683889",
    "end": "1689679"
  },
  {
    "text": "out automated for you so of course you know we do that and how we do it is in",
    "start": "1689679",
    "end": "1696639"
  },
  {
    "text": "our case my job we use Simek for this we",
    "start": "1696639",
    "end": "1701740"
  },
  {
    "text": "you see make us our sort of puppet master to control everything it didn't have to be it could have been it could",
    "start": "1701740",
    "end": "1707409"
  },
  {
    "text": "have been scones it could have been basil it could have been bill - it could have been any of the others but for us it seemed like and it worked very well",
    "start": "1707409",
    "end": "1712960"
  },
  {
    "text": "for us so let's assume we now have a project that laid out like this we have a core library here that everything",
    "start": "1712960",
    "end": "1720789"
  },
  {
    "text": "depends on we have our Python library that also depends on the core library",
    "start": "1720789",
    "end": "1726249"
  },
  {
    "text": "right within my package that we saw before and just for giggles I added",
    "start": "1726249",
    "end": "1731889"
  },
  {
    "text": "another language to see you have all this you know built sari languages in parallel language support in parallel",
    "start": "1731889",
    "end": "1739830"
  },
  {
    "text": "and each of these directories come with their own cmakelists file that then manages how to build you know from their",
    "start": "1739830",
    "end": "1746679"
  },
  {
    "text": "own town so let's look at what that looks like for us so we are what we call",
    "start": "1746679",
    "end": "1752919"
  },
  {
    "text": "a custom target custom target in cement behaves like your ad library or your ad",
    "start": "1752919",
    "end": "1758529"
  },
  {
    "text": "executable except that is always considered out of date so Simek will always try and rebuild it we give it",
    "start": "1758529",
    "end": "1765240"
  },
  {
    "text": "that we give the target a name we want it to be included in all so we don't",
    "start": "1765240",
    "end": "1771100"
  },
  {
    "text": "have to say you have to specify that we want it built we want it always built and we specify in pythons case that we",
    "start": "1771100",
    "end": "1778809"
  },
  {
    "text": "want to run this in the source directory of Python Python tools are very in my",
    "start": "1778809",
    "end": "1785379"
  },
  {
    "text": "opinion obnoxious in that and then they tend to already pollute the source directories a lot and do a lot of their work in source directories because",
    "start": "1785379",
    "end": "1791379"
  },
  {
    "text": "Python is just source code in its distributed form anyway so we do that in order to choose the",
    "start": "1791379",
    "end": "1797470"
  },
  {
    "text": "path of least resistance and you don't want to spend much time fighting both systems so we had a command where we've",
    "start": "1797470",
    "end": "1806169"
  },
  {
    "text": "had the path to our Python and the path to the setup file and we run build",
    "start": "1806169",
    "end": "1813280"
  },
  {
    "text": "extension with in place and I said we're now polluting the source directory but psych it built already masks not beyond",
    "start": "1813280",
    "end": "1820929"
  },
  {
    "text": "its own escapable directory so that multiple builds in the same tree for multiple pythons will already be in two",
    "start": "1820929",
    "end": "1827289"
  },
  {
    "text": "separate directories anyway so it's not that big of a deal and celebrants will regardless pollute your directory and it's kind of accepted",
    "start": "1827289",
    "end": "1833770"
  },
  {
    "text": "in the Python community so I consider that a recent trade off and we run the",
    "start": "1833770",
    "end": "1838900"
  },
  {
    "text": "build but we make sure that this emic executable is the same as the one that invoked me and the generator is the same",
    "start": "1838900",
    "end": "1845950"
  },
  {
    "text": "so if you ask for a ninja you will get a ninja also for the the python extension",
    "start": "1845950",
    "end": "1852179"
  },
  {
    "text": "and then we pass the path to the cord",
    "start": "1852179",
    "end": "1859150"
  },
  {
    "text": "that we now depend on as a parameter to see Mike so that it tries to link",
    "start": "1859150",
    "end": "1865270"
  },
  {
    "text": "against the freshly built core library right so that if we do make changes in",
    "start": "1865270",
    "end": "1870309"
  },
  {
    "text": "our you know development tree that will be picked up by the package we're using our path for that here as well but that",
    "start": "1870309",
    "end": "1876940"
  },
  {
    "text": "of course is something you wouldn't do when you install then you just rebuild it without our path which is quite nice",
    "start": "1876940",
    "end": "1882270"
  },
  {
    "text": "okay and that's really it now it's",
    "start": "1882270",
    "end": "1890289"
  },
  {
    "text": "always pulled after core so that dependency ordering is in place and it just defers all the work and decision of",
    "start": "1890289",
    "end": "1897460"
  },
  {
    "text": "building Python to setup tools it's granted it done is invoked every time even though there's nothing to do in the",
    "start": "1897460",
    "end": "1905169"
  },
  {
    "text": "Python extension but checking that is pretty quick because that you used to see Mike and just a teensy bits on logic",
    "start": "1905169",
    "end": "1911080"
  },
  {
    "text": "so it's not that much of an impact on performance okay the next step is",
    "start": "1911080",
    "end": "1920169"
  },
  {
    "text": "building stuff and building it in parallel and testing it",
    "start": "1920169",
    "end": "1925870"
  },
  {
    "text": "so here we have a picture from shipyard in Belfast that's the Olympic and the Titanic and I",
    "start": "1925870",
    "end": "1932470"
  },
  {
    "text": "think it's pretty fitting analogy for what we're about to do because one of those had a very long and happy life and",
    "start": "1932470",
    "end": "1938350"
  },
  {
    "text": "one well didn't because we want to build",
    "start": "1938350",
    "end": "1943870"
  },
  {
    "text": "everything I know but not build it everywhere so this is pretty good this",
    "start": "1943870",
    "end": "1950590"
  },
  {
    "text": "is what we came out here by running Sutter Pine Belt we can build our project and we can test it with",
    "start": "1950590",
    "end": "1957220"
  },
  {
    "text": "certified tests but in my opinion is is still a little bit too manual right it's",
    "start": "1957220",
    "end": "1962320"
  },
  {
    "text": "way too manual because now I need to actually go in somewhere and type that command but remember we support three",
    "start": "1962320",
    "end": "1969279"
  },
  {
    "text": "operating systems and we support multiple Python versions and we've",
    "start": "1969279",
    "end": "1977260"
  },
  {
    "text": "learned one lesson over the ice right and it's not things that you don't do automatically you just won't do right so",
    "start": "1977260",
    "end": "1984070"
  },
  {
    "text": "anyone experienced that presumably but you supposed to test for 10 platform be your test on your one the one you're at",
    "start": "1984070",
    "end": "1990250"
  },
  {
    "text": "right - Ramon that we want to automate it so what we do is we use a CI service",
    "start": "1990250",
    "end": "1999880"
  },
  {
    "text": "in our case most of our projects are open sourced so we use cloud providers for that we have we use travis circle a",
    "start": "1999880",
    "end": "2007919"
  },
  {
    "text": "layer i think we use both pipelines and those one more they're all pretty much",
    "start": "2007919",
    "end": "2013950"
  },
  {
    "text": "the same thing but the gist of it is that they will check out your code whenever you do something and they will",
    "start": "2013950",
    "end": "2019380"
  },
  {
    "text": "run through a job and we'll go over that so we have first the machine definition",
    "start": "2019380",
    "end": "2025679"
  },
  {
    "text": "I've chosen to call it so in this case we're saying we want a machine with Linux we want to test it in your Python",
    "start": "2025679",
    "end": "2031049"
  },
  {
    "text": "context and that context is of course is provided by Travis and I want to test these versions to 735 3 6 + 3 7",
    "start": "2031049",
    "end": "2038059"
  },
  {
    "text": "obviously actually this won't work for this project because it's Python 3 only but that's how it should be so this now",
    "start": "2038059",
    "end": "2046559"
  },
  {
    "text": "specifies the machine and in fact it specifies four machines one for each Python version and then we have a script",
    "start": "2046559",
    "end": "2053760"
  },
  {
    "text": "that it should do we wanted to install our requirements and we install another one that we just",
    "start": "2053760",
    "end": "2060820"
  },
  {
    "text": "run out there which is called bandit which runs some static analysis on it and the nice thing about that is that",
    "start": "2060820",
    "end": "2066760"
  },
  {
    "text": "when we do something we don't have to remember to run bandit because it's always done that and more importantly",
    "start": "2066760",
    "end": "2073750"
  },
  {
    "text": "third-party contributors to our open source project don't have to deal with the fact that we also would like to do",
    "start": "2073750",
    "end": "2079000"
  },
  {
    "text": "static analysis on their code because we do it for them and that helps the contributor experience tremendously if a",
    "start": "2079000",
    "end": "2086230"
  },
  {
    "text": "new developer joins your team and wants to contribute something wants to do some work a lot of these details that takes a",
    "start": "2086230",
    "end": "2094089"
  },
  {
    "text": "long while to get into habit is also done for you so we have a massive safety net and then finally we do the thing",
    "start": "2094089",
    "end": "2102369"
  },
  {
    "text": "where we in our case run CMake make and",
    "start": "2102369",
    "end": "2107710"
  },
  {
    "text": "we test it so this is now done all the",
    "start": "2107710",
    "end": "2113290"
  },
  {
    "text": "time on on Travis jobs are triggered by",
    "start": "2113290",
    "end": "2120790"
  },
  {
    "text": "changes to the repository okay so whenever there's a new pull request whenever there's a new commit whenever",
    "start": "2120790",
    "end": "2127030"
  },
  {
    "text": "there's a new merge and whenever there's a new tag and get these jobs will",
    "start": "2127030",
    "end": "2134260"
  },
  {
    "text": "trigger I mentioned we also used a fire and circle and that's in order to also cover the Mac and Windows both from",
    "start": "2134260",
    "end": "2141970"
  },
  {
    "text": "multiple versions of the Python runtime but also multiple versions of the",
    "start": "2141970",
    "end": "2147760"
  },
  {
    "text": "operating system sometimes this is what it looks like in practice this is from",
    "start": "2147760",
    "end": "2154089"
  },
  {
    "text": "one of our projects where I have merged I didn't find an open one when I made this server here you can see eleven jobs",
    "start": "2154089",
    "end": "2161140"
  },
  {
    "text": "have been run to test different configurations with different parameters and different levels of strictness",
    "start": "2161140",
    "end": "2168089"
  },
  {
    "text": "they're all successful so I'm pretty confident now there are no new and obvious problems introduced by this it",
    "start": "2168089",
    "end": "2174490"
  },
  {
    "text": "helps us catch errors very fast and it helps us move very fast and honestly I would never develop without it I think",
    "start": "2174490",
    "end": "2182710"
  },
  {
    "text": "it's time to reinvent the wheel this illustration shows up if you google reinvent the wheel I don't know what it",
    "start": "2182710",
    "end": "2189670"
  },
  {
    "text": "is but let's reinvent the wheel so the wheel is the format for Python packages",
    "start": "2189670",
    "end": "2197300"
  },
  {
    "text": "I would recommend you use these dice it has a rule set for communicating what",
    "start": "2197300",
    "end": "2205490"
  },
  {
    "text": "exactly it is it requires a name and a version you can optionally add a build number it requires your Python version",
    "start": "2205490",
    "end": "2212090"
  },
  {
    "text": "your ABI version and or a sorry API name rather and then your platform this is in",
    "start": "2212090",
    "end": "2222590"
  },
  {
    "text": "order for pip to know am I able to install this package so let's go back",
    "start": "2222590",
    "end": "2228110"
  },
  {
    "text": "and we run the project again we run the build to be this wheel on my debian 10",
    "start": "2228110",
    "end": "2234260"
  },
  {
    "text": "Boston machine and it creates this wheel and you can see it's the name and",
    "start": "2234260",
    "end": "2240710"
  },
  {
    "text": "version the Python version in the Python ABI and my platform and this these are",
    "start": "2240710",
    "end": "2251330"
  },
  {
    "text": "the content ok it has the init and the core as we saw and this now math C",
    "start": "2251330",
    "end": "2259070"
  },
  {
    "text": "Python Linux dot s oh right so that would be the extension and then the",
    "start": "2259070",
    "end": "2265880"
  },
  {
    "text": "metadata why you saw before this is sort of the anatomy of a wheel there's a",
    "start": "2265880",
    "end": "2272810"
  },
  {
    "text": "problem because we've already linked against that Lib and there's no set label on the user machine at least not",
    "start": "2272810",
    "end": "2278450"
  },
  {
    "text": "an appropriate set Lib so how do we solve that right well we distribute",
    "start": "2278450",
    "end": "2285830"
  },
  {
    "text": "settle it with the wheel and you just bond there in there",
    "start": "2285830",
    "end": "2291039"
  },
  {
    "text": "there is a tool called audit wheel which does exactly that it looks at what libraries do I need to load this module",
    "start": "2292230",
    "end": "2301810"
  },
  {
    "text": "all right I'll grab those and I'll put them inside the wheel that's exactly what it will does and then when you look",
    "start": "2301810",
    "end": "2309880"
  },
  {
    "text": "at the contents of this wheelhouse after running this on my debian 10 machine you get this so the big change here is the",
    "start": "2309880",
    "end": "2321190"
  },
  {
    "text": "dot Lib directory which including includes Lib standard C++ Lib C Lib math",
    "start": "2321190",
    "end": "2326200"
  },
  {
    "text": "and live GCC ass we're going to whine a little bit oh and yes also of course",
    "start": "2326200",
    "end": "2332380"
  },
  {
    "text": "lives at which is the one we wanted to make sure this now actually included the transitive dependencies - it's quite",
    "start": "2332380",
    "end": "2338619"
  },
  {
    "text": "nice just to brief note we wanted to",
    "start": "2338619",
    "end": "2344859"
  },
  {
    "text": "automate everything right but we had a manually set version number before that does not work because you will forget to",
    "start": "2344859",
    "end": "2353140"
  },
  {
    "text": "update that number whenever you release in your package fortunately there is an extension to setup tools which is called",
    "start": "2353140",
    "end": "2359349"
  },
  {
    "text": "setup tools SCM that if you specify use SCM version in the as a setup parameter",
    "start": "2359349",
    "end": "2366460"
  },
  {
    "text": "it will pull the version the last tag it's orden de correo new is tag it saw",
    "start": "2366460",
    "end": "2373359"
  },
  {
    "text": "and write that as the version file with that and you never have to think about",
    "start": "2373359",
    "end": "2379630"
  },
  {
    "text": "version again and we have a single source of truth which is the get tag and it's or arguably or maybe even obviously",
    "start": "2379630",
    "end": "2385900"
  },
  {
    "text": "the most authoritative of any piece of information in terms of versioning for your project so we're lowering boats",
    "start": "2385900",
    "end": "2396300"
  },
  {
    "text": "because we're very close to the target and when you if you did whaling in the",
    "start": "2396300",
    "end": "2402990"
  },
  {
    "text": "18th and world in 19th and 20th century that's what you would do when you would",
    "start": "2402990",
    "end": "2408040"
  },
  {
    "text": "spot a whale you know the classic there she blows you will then lower your boats because now it's hunting time this is an",
    "start": "2408040",
    "end": "2413950"
  },
  {
    "text": "illustration from from Moby Dick we're close to the target and were you",
    "start": "2413950",
    "end": "2420550"
  },
  {
    "text": "know going for the kill problem is as you notice the name of the wheel was Linux right Linux is not a",
    "start": "2420550",
    "end": "2428800"
  },
  {
    "text": "redistributable because there are many different flavors of Linux and merited many different versions of both the",
    "start": "2428800",
    "end": "2434770"
  },
  {
    "text": "kernel and core libraries and they tend why that might not be compatible",
    "start": "2434770",
    "end": "2442710"
  },
  {
    "text": "fortunately the point on packaging Authority the pipe I have this definition called mini Linux and the",
    "start": "2442710",
    "end": "2448840"
  },
  {
    "text": "idea is if you've built right your library on a very old system for a very",
    "start": "2448840",
    "end": "2454930"
  },
  {
    "text": "old Lipsy generally it works everywhere it's a pretty good observation they call",
    "start": "2454930",
    "end": "2460690"
  },
  {
    "text": "that the mini Linux dance the specification released by them and if",
    "start": "2460690",
    "end": "2468070"
  },
  {
    "text": "the image was many Linux it would be redistributable right so I could install",
    "start": "2468070",
    "end": "2473860"
  },
  {
    "text": "this wheel on my buster machine but I wouldn't be able to give it to someone else and have it in have them install it",
    "start": "2473860",
    "end": "2479250"
  },
  {
    "text": "so if I run the same thing on a reddit 5 machine right that we did on buster we",
    "start": "2479250",
    "end": "2487060"
  },
  {
    "text": "would actually get a mini Linux wheel out ok but I don't have a rabbit machine",
    "start": "2487060",
    "end": "2496510"
  },
  {
    "text": "with right at 5 and I don't have a",
    "start": "2496510",
    "end": "2501700"
  },
  {
    "text": "Windows machine and I don't want that",
    "start": "2501700",
    "end": "2507760"
  },
  {
    "text": "machine running just to be able to build and distribute my library so 100 rest ah",
    "start": "2507760",
    "end": "2515560"
  },
  {
    "text": "well there is a very good reason for me to use two-faced machine definition when",
    "start": "2515560",
    "end": "2521770"
  },
  {
    "text": "I talked about the Travis job because Tyrell at 5 is just another machine and",
    "start": "2521770",
    "end": "2527710"
  },
  {
    "text": "the wailing theme was not by accident so what the Python packaging authorities do",
    "start": "2527710",
    "end": "2534430"
  },
  {
    "text": "is that they distribute this docker image with read at 5 compilers and some",
    "start": "2534430",
    "end": "2540340"
  },
  {
    "text": "pre-installed pythons intended for building these packages for any Linux",
    "start": "2540340",
    "end": "2547830"
  },
  {
    "text": "and we already have an infrastructure in place to do this automatically which is our CI pipeline so that's what we do to",
    "start": "2547830",
    "end": "2557730"
  },
  {
    "text": "automate that there is a fantastic package on the web called multi build it's pretty much designed to use we use",
    "start": "2557730",
    "end": "2564060"
  },
  {
    "text": "my gift clone that automates a lot of this setting up or getting their docker image getting into it building it in",
    "start": "2564060",
    "end": "2571140"
  },
  {
    "text": "there copying back out all not Janice Matthew breath is built-in maintain it",
    "start": "2571140",
    "end": "2576180"
  },
  {
    "text": "he is very helpful it's kind of a message if you need anything but if you put this in your before install this is all from the",
    "start": "2576180",
    "end": "2582030"
  },
  {
    "text": "documentation you source the common utils under Travis snaps it determines if this is a Linux or a an OSX Mac OS",
    "start": "2582030",
    "end": "2590340"
  },
  {
    "text": "job and then run the before install to just set up the environment with that it",
    "start": "2590340",
    "end": "2596790"
  },
  {
    "text": "will pretty much build a will for you a complete example can be seen in the docs and finally we added deploying section",
    "start": "2596790",
    "end": "2604490"
  },
  {
    "text": "so at the end of every successful job Travis consider if it wants to perform",
    "start": "2604490",
    "end": "2611940"
  },
  {
    "text": "this deploy it uses this conditional here to determine if it should do it or not and I'm saying if there is if this",
    "start": "2611940",
    "end": "2618510"
  },
  {
    "text": "build was triggered by the push of a new tag you should do the deploy step where",
    "start": "2618510",
    "end": "2623820"
  },
  {
    "text": "it builds the package it builds the wheel and he tries to upload it to pi PI using my encrypted credentials and",
    "start": "2623820",
    "end": "2630420"
  },
  {
    "text": "username my cryptid password and username and that turned this into a",
    "start": "2630420",
    "end": "2637050"
  },
  {
    "text": "true one click deploy because the only thing I now have to do in order to distribute my package to every platform",
    "start": "2637050",
    "end": "2643380"
  },
  {
    "text": "for many different Python versions is to push a new tag or do that create release",
    "start": "2643380",
    "end": "2651450"
  },
  {
    "text": "on github there's this tree one click deploy because of that and of course I know this will will work because I've",
    "start": "2651450",
    "end": "2657210"
  },
  {
    "text": "already built and tested it through every single commit since you know rust last release and here's our end game now",
    "start": "2657210",
    "end": "2667320"
  },
  {
    "text": "with all of this you can run Pippin so my project for fun and profit",
    "start": "2667320",
    "end": "2674839"
  },
  {
    "text": "this is my cassava distributing stuff for us he's a little bit old-school one uses his CD",
    "start": "2676630",
    "end": "2683530"
  },
  {
    "text": "so let's look back or we just saw so we've created a package okay we built an",
    "start": "2683530",
    "end": "2691370"
  },
  {
    "text": "extension on multiple platform with C++ we assemble the wheel we bundled its",
    "start": "2691370",
    "end": "2698810"
  },
  {
    "text": "dependencies from multiple platforms and we automatically test it and publish it",
    "start": "2698810",
    "end": "2706310"
  },
  {
    "text": "it I wrap this up into an actually",
    "start": "2706310",
    "end": "2713860"
  },
  {
    "text": "runable example you can fund it at github slash a queen or a socket build",
    "start": "2713860",
    "end": "2720050"
  },
  {
    "text": "example it's pretty much complete although the code in Olin is it's",
    "start": "2720050",
    "end": "2725990"
  },
  {
    "text": "trivial but it's a pretty good starting point if you want to build a Python library with C++",
    "start": "2725990",
    "end": "2733390"
  },
  {
    "text": "finally I want to give a big shout out to the main sort of tools I go in today",
    "start": "2733750",
    "end": "2740600"
  },
  {
    "text": "its socket built from the disciple crew the maintainer czar very helpful if you",
    "start": "2740600",
    "end": "2745700"
  },
  {
    "text": "have questions or patches for them they're very grateful to which provides",
    "start": "2745700",
    "end": "2751490"
  },
  {
    "text": "the set of tools and seemingly it's a shout out to Matthew Brandt and others for multi builds to automate the wheel",
    "start": "2751490",
    "end": "2757280"
  },
  {
    "text": "building in CI context and of course the serve tools sem for actually making our",
    "start": "2757280",
    "end": "2762470"
  },
  {
    "text": "lives livable dealing with versions because i may or may not have updated",
    "start": "2762470",
    "end": "2767600"
  },
  {
    "text": "the wrong number very many times thank you",
    "start": "2767600",
    "end": "2773590"
  },
  {
    "text": "[Applause]",
    "start": "2773590",
    "end": "2778650"
  },
  {
    "text": "I think we might have time for some questions if you are any if not then enjoy the rest of the conference",
    "start": "2778650",
    "end": "2784430"
  },
  {
    "text": "okay yes yes you know you have to be",
    "start": "2784430",
    "end": "2796589"
  },
  {
    "text": "like when you say mean we're not everything if you want for it and upload",
    "start": "2796589",
    "end": "2802380"
  },
  {
    "text": "every different person yes yeah because",
    "start": "2802380",
    "end": "2807989"
  },
  {
    "text": "they use the platform tag information that's of course your Python knows what platform is running on because it knows",
    "start": "2807989",
    "end": "2815130"
  },
  {
    "text": "you know what system you're on and it uses the the naming information in the wheel to determine is this wheel",
    "start": "2815130",
    "end": "2821460"
  },
  {
    "text": "suitable for me and then it pulls only that and then that should then hopefully include all you need is just want to",
    "start": "2821460",
    "end": "2835289"
  },
  {
    "text": "find the package no installing insulation candidate it'll say so if there's a packet as only released for",
    "start": "2835289",
    "end": "2841380"
  },
  {
    "text": "Windows and I try and install that name with my Linux machine it will just say no installation candidate found and then",
    "start": "2841380",
    "end": "2848190"
  },
  {
    "text": "of course it will also try earlier versions until it finds one that matches and if none are available then it just",
    "start": "2848190",
    "end": "2853650"
  },
  {
    "text": "keeps up but I think it just says no installation candidate any more",
    "start": "2853650",
    "end": "2858989"
  },
  {
    "text": "questions yes no no if you bundle the",
    "start": "2858989",
    "end": "2871859"
  },
  {
    "text": "the objects it also so the water audit will really does it a copyist objects",
    "start": "2871859",
    "end": "2878369"
  },
  {
    "text": "into this dot libs directory and I think it's such a state or path does I use that one so it's effectively a hard",
    "start": "2878369",
    "end": "2884489"
  },
  {
    "text": "linking I static linking but you know it will not consider local candidates if",
    "start": "2884489",
    "end": "2890460"
  },
  {
    "text": "you don't do the audit will step it of course just used a regular loader semantics but at that point you probably",
    "start": "2890460",
    "end": "2896549"
  },
  {
    "text": "want to build from source anyway yeah anymore",
    "start": "2896549",
    "end": "2902510"
  },
  {
    "text": "all right then I wish you a good day and enjoy the rest of the conference thank you very much",
    "start": "2902510",
    "end": "2908340"
  },
  {
    "text": "[Applause]",
    "start": "2908340",
    "end": "2913519"
  }
]