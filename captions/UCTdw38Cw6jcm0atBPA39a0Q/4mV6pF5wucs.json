[
  {
    "text": "all right oh yep we're live there we go all right so like I said before some of",
    "start": "6359",
    "end": "11759"
  },
  {
    "text": "you got in here this is not a C++ talk if you're hoping for a C++ talk it's",
    "start": "11759",
    "end": "17199"
  },
  {
    "text": "okay if you run across the the road real quick I don't think it's raining real hard out there but the this is why data",
    "start": "17199",
    "end": "25199"
  },
  {
    "text": "access patterns have always mattered it's some historical perspective",
    "start": "25199",
    "end": "30840"
  },
  {
    "text": "something that I've been thinking about lately it kind of has been bothering me",
    "start": "30840",
    "end": "36200"
  },
  {
    "text": "so I put together a bunch of notes my name is Jason Turner um and",
    "start": "36200",
    "end": "43559"
  },
  {
    "text": "just for the record I have stickers up here if anyone want stickers you can come get them afterward or I might give",
    "start": "43559",
    "end": "48719"
  },
  {
    "text": "one to you if you ask something or say something particularly interesting host of C++",
    "start": "48719",
    "end": "55120"
  },
  {
    "text": "weekly I've been releasing YouTube videos for 394 weeks",
    "start": "55120",
    "end": "61879"
  },
  {
    "text": "straight makes me question some of my life choices but um seven years now",
    "start": "61879",
    "end": "67640"
  },
  {
    "text": "going on and I just got 100,000 subscribers a few weeks ago very",
    "start": "67640",
    "end": "74320"
  },
  {
    "text": "exciting silver play button underneath my desk because there's nowhere else to put",
    "start": "76640",
    "end": "82200"
  },
  {
    "text": "it uh Microsoft MVP since 2015 I just out of curiosity has anyone",
    "start": "82200",
    "end": "87640"
  },
  {
    "text": "else have MVP that's in the room at the moment no okay I know there's other people here",
    "start": "87640",
    "end": "93560"
  },
  {
    "text": "um I do code reviews and on-site training uh for C++ specifically but sometimes things like this will come up",
    "start": "93560",
    "end": "99159"
  },
  {
    "text": "I also paste a lot so they adjusted the camera for me for those of you who might be",
    "start": "99159",
    "end": "105479"
  },
  {
    "text": "uh coming in remotely okay so my talk is different",
    "start": "105479",
    "end": "110960"
  },
  {
    "text": "from most of my other talks interestingly I realized the last time that I said that was the last time I",
    "start": "110960",
    "end": "116079"
  },
  {
    "text": "presented at techt toown two years ago remotely as well I don't normally use this presentation",
    "start": "116079",
    "end": "122439"
  },
  {
    "text": "system so hopefully everything works out all right and this is not a C++ talk and I don't have any specific point",
    "start": "122439",
    "end": "130879"
  },
  {
    "text": "that I'm trying to make I previewed this talk at my Meetup do you go to your",
    "start": "130879",
    "end": "137239"
  },
  {
    "text": "local user group meeting of any sort good more of you should be raising your hands I previewed this talk at my",
    "start": "137239",
    "end": "144800"
  },
  {
    "text": "local user group meeting and they're like that was a good talk but what was your point and I'm like I I don't know",
    "start": "144800",
    "end": "151519"
  },
  {
    "text": "if I actually had a point I just wanted to give some historical perspective then like okay then it was a good talk all",
    "start": "151519",
    "end": "158400"
  },
  {
    "text": "right I I I just want to make you think a little bit that's that's my goal today",
    "start": "158400",
    "end": "163680"
  },
  {
    "text": "um but don't worry we will get a little bit of C++ and a little bit of 6502 assembly on the screen does that make",
    "start": "163680",
    "end": "169519"
  },
  {
    "text": "everyone feel better no why not who's familiar with 6502",
    "start": "169519",
    "end": "177480"
  },
  {
    "text": "assembly I'm going to be calling on some of you to read some of this stuff up here then all right all right so if",
    "start": "177480",
    "end": "183000"
  },
  {
    "text": "you're like me I I graduated from University in 2000 I started in",
    "start": "183000",
    "end": "188280"
  },
  {
    "text": "1996 um and I thinking about like data structures and uh algorithm analysis and",
    "start": "188280",
    "end": "195400"
  },
  {
    "text": "such I kind of walked away with an impression that somehow linked lists were better than say arrays or vectors",
    "start": "195400",
    "end": "203440"
  },
  {
    "text": "uh because you know when you do an analysis of the operations inserting something into the middle of a list",
    "start": "203440",
    "end": "209280"
  },
  {
    "text": "that's cheaper right okay um so I used list instead of",
    "start": "209280",
    "end": "217840"
  },
  {
    "text": "vector by default in my code",
    "start": "217840",
    "end": "223200"
  },
  {
    "text": "from the first probably five years that I was a C++ programmer uh and we're",
    "start": "223200",
    "end": "229519"
  },
  {
    "text": "talking um so if you're not a C++ programmer standard list is a doubly",
    "start": "229519",
    "end": "235319"
  },
  {
    "text": "linked list Vector is a contiguously allocated chunk of",
    "start": "235319",
    "end": "241599"
  },
  {
    "text": "storage my code worked and there was no problem with this right I use list it",
    "start": "241599",
    "end": "247360"
  },
  {
    "text": "worked fine and one day I come across something",
    "start": "247360",
    "end": "253200"
  },
  {
    "text": "like this from BJ this is from BJ uh strups FAQ says our list",
    "start": "253200",
    "end": "259479"
  },
  {
    "text": "evil According to some corners of the web I am under the impression that vectors are always better than length",
    "start": "259479",
    "end": "265240"
  },
  {
    "text": "list and that I don't know about other data structures such as trees and hash tables",
    "start": "265240",
    "end": "270639"
  },
  {
    "text": "obviously that's absurd the problem seems to be an interesting little exercise that John Bentley does anyone",
    "start": "270639",
    "end": "276560"
  },
  {
    "text": "know who John Bentley is no has anyone ever heard of the book programming",
    "start": "276560",
    "end": "282160"
  },
  {
    "text": "pearls I'm almost positive he's referring to the author of programming pearls which is a very popular book at",
    "start": "282160",
    "end": "288000"
  },
  {
    "text": "one time it's a lot of like um code optimization kind of qu uh",
    "start": "288000",
    "end": "295840"
  },
  {
    "text": "exercises in a lot of ways says insert a sequence of random integers into a",
    "start": "295840",
    "end": "300919"
  },
  {
    "text": "sorted sequence then remove those elements one by one as determined by a random sequence of positions do you use",
    "start": "300919",
    "end": "308600"
  },
  {
    "text": "a vector the contiguously allocated sequence of elements or a linked list",
    "start": "308600",
    "end": "314400"
  },
  {
    "text": "and he has other links here you can go find this URL if you're interested in doing",
    "start": "314400",
    "end": "321600"
  },
  {
    "text": "that he says note the labs absence of list and Vector in the conclusion don't",
    "start": "321600",
    "end": "327319"
  },
  {
    "text": "confuse an example with what the example is meant to illustrate so",
    "start": "327319",
    "end": "332520"
  },
  {
    "text": "um let's get to the point",
    "start": "332520",
    "end": "337840"
  },
  {
    "text": "here I missed something unfortunately um don't store data unnecessarily keep data",
    "start": "339400",
    "end": "346120"
  },
  {
    "text": "Compact and access memory in a predictable manner was his conclusion here he says my impression is that many",
    "start": "346120",
    "end": "353600"
  },
  {
    "text": "viewers fail to understand that the purpose of this example is to illustrate some general principles and to make",
    "start": "353600",
    "end": "358639"
  },
  {
    "text": "people think there we we go initially most people say list of course I have tried asking that question many times",
    "start": "358639",
    "end": "364759"
  },
  {
    "text": "because of the many insertions and deletions in the middle list are good at that that answer is completely and",
    "start": "364759",
    "end": "370800"
  },
  {
    "text": "dramatically wrong there we go that's the sentence I was looking for a moment ago so people tend to say list because",
    "start": "370800",
    "end": "377599"
  },
  {
    "text": "you're thinking I'm inserting and deleting from the middle of the thing many times in a random fashion and that answer is wrong dramatically",
    "start": "377599",
    "end": "384319"
  },
  {
    "text": "wrong um and then uh are you familiar with this stack Overflow question by any chance I believe it is technically the",
    "start": "384319",
    "end": "392440"
  },
  {
    "text": "uh most popular stack Overflow question ever 27,000 up votes why is processing a",
    "start": "392440",
    "end": "398199"
  },
  {
    "text": "sorted array faster than processing an unsorted array do you know the answer to this by any",
    "start": "398199",
    "end": "403960"
  },
  {
    "text": "chance Branch prediction there's Branch prediction is one aspect of this and cach effects is",
    "start": "403960",
    "end": "411880"
  },
  {
    "text": "another aspect of these things and it's",
    "start": "411880",
    "end": "417560"
  },
  {
    "text": "complicated it's complicated at we've got all kinds of keywords that you can",
    "start": "417560",
    "end": "423960"
  },
  {
    "text": "Google for that are related to cach things we've got direct map cach",
    "start": "423960",
    "end": "430599"
  },
  {
    "text": "associative cash right through caches cash hits cash misses cash lines",
    "start": "430599",
    "end": "436080"
  },
  {
    "text": "prefetching how many levels of cash do we have right we have just all these",
    "start": "436080",
    "end": "441560"
  },
  {
    "text": "things when we're talking about cash and it's a very complicated um topic and our modern",
    "start": "441560",
    "end": "448160"
  },
  {
    "text": "caches have diagram s that look like this this is",
    "start": "448160",
    "end": "453599"
  },
  {
    "text": "taken oh what machine is this from exactly I don't know um but we're",
    "start": "453599",
    "end": "461120"
  },
  {
    "text": "talking megabytes gigabytes of cash depending on",
    "start": "461120",
    "end": "466280"
  },
  {
    "text": "the device we've got level three cache level two cache we've got level one and",
    "start": "466280",
    "end": "471919"
  },
  {
    "text": "level two caches that are shared across cores and then we've got instruction uh data caches that aren't shared across",
    "start": "471919",
    "end": "478400"
  },
  {
    "text": "cores it's ridiculous and",
    "start": "478400",
    "end": "485000"
  },
  {
    "text": "associativity has anyone seen diagrams like this before do you know what it",
    "start": "485000",
    "end": "492639"
  },
  {
    "text": "means can you explain for me",
    "start": "492639",
    "end": "496919"
  },
  {
    "text": "Claus I you know there's there's a yeah cast associativity actually I don't honestly remember what this means and I",
    "start": "499639",
    "end": "505720"
  },
  {
    "text": "was not joking if anyone wants to like chime in here cuz it's been too long since I studied stuff like",
    "start": "505720",
    "end": "512640"
  },
  {
    "text": "this maybe this is the kind of thing you deal with every day yeah a memory address can only",
    "start": "512640",
    "end": "520000"
  },
  {
    "text": "number okay have",
    "start": "520320",
    "end": "527080"
  },
  {
    "text": "access may",
    "start": "527080",
    "end": "530680"
  },
  {
    "text": "only okay so not every ad memory address can go in any cach line so it has or in",
    "start": "532480",
    "end": "538640"
  },
  {
    "text": "any piece of of cash so it's a question of which chunks of cash can be utilized",
    "start": "538640",
    "end": "543920"
  },
  {
    "text": "by which memory addresses and yeah so you can make yourself in an even worse situation than you thought you were in",
    "start": "543920",
    "end": "550360"
  },
  {
    "text": "so it's complicated there's been a few talks about writing code that is friendly to",
    "start": "550360",
    "end": "560480"
  },
  {
    "text": "your uh Hardware I don't know are is any of you",
    "start": "560480",
    "end": "565600"
  },
  {
    "text": "in this room at the moment uh Jonathan Mueller",
    "start": "565600",
    "end": "571920"
  },
  {
    "text": "no let's see uh want fast C++ know your Hardware from tour write cash friendly",
    "start": "571920",
    "end": "577640"
  },
  {
    "text": "C++ from Jonathan uh CPU cash effects from Saray CPU design effects from",
    "start": "577640",
    "end": "584600"
  },
  {
    "text": "yakob um we've got memory allocator talks from everyone at",
    "start": "584600",
    "end": "592000"
  },
  {
    "text": "Bloomberg um basically and Bjorn gave a talk on memory allocators uh just yesterday",
    "start": "592000",
    "end": "600200"
  },
  {
    "text": "actually and then we have Bjorn as well what do you mean by cash friendly should I care about my CPU cash from Camille",
    "start": "600200",
    "end": "606800"
  },
  {
    "text": "CPU friendly code from borisoff borisoff I'm guessing maybe the is that a way or",
    "start": "606800",
    "end": "613279"
  },
  {
    "text": "is that a now all right um uh cash warming how to warm up your",
    "start": "613279",
    "end": "618839"
  },
  {
    "text": "cash how to design fast efficient cash friendly code cash optimized cash tables",
    "start": "618839",
    "end": "624560"
  },
  {
    "text": "C++ algorithmic complexity data locality parallelism like",
    "start": "624560",
    "end": "631040"
  },
  {
    "text": "it's just so many talks about this have you seen any of these talks have you",
    "start": "631200",
    "end": "636399"
  },
  {
    "text": "given some of these talks I just out of curiosity does",
    "start": "636399",
    "end": "642079"
  },
  {
    "text": "anyone have like a one sentence like what have you taken away from watching these",
    "start": "642079",
    "end": "648200"
  },
  {
    "text": "talks it's complicated what do you want to say Victor always measure always measure okay that's a good",
    "start": "648200",
    "end": "655360"
  },
  {
    "text": "one anything else yeah Vector ARR wait do what sorry you don't",
    "start": "655360",
    "end": "662600"
  },
  {
    "text": "know Vector ar oh if you don't know then vector and array yeah that's well that's that's",
    "start": "662600",
    "end": "669560"
  },
  {
    "text": "kind of what IID said too yeah um and and and these giant layers and",
    "start": "669560",
    "end": "675480"
  },
  {
    "text": "complexity of cash this new problem that we're dealing with I started to think this had like an old",
    "start": "675480",
    "end": "682160"
  },
  {
    "text": "familiarity to me this is approximately my first Drive",
    "start": "682160",
    "end": "689440"
  },
  {
    "text": "yeah Victor I was surprised I didn't see I didn't",
    "start": "689440",
    "end": "694760"
  },
  {
    "text": "see C there about data oriented design oh yeah for the remote people Victor is",
    "start": "694760",
    "end": "702160"
  },
  {
    "text": "surprised that I didn't put data oriented design talk from Mike Acton on there that probably would have been a pretty good one to list as well but I",
    "start": "702160",
    "end": "708279"
  },
  {
    "text": "largely was like searching YouTube for cash keyw keyword and putting together",
    "start": "708279",
    "end": "714240"
  },
  {
    "text": "things that I both I recognized and things I didn't recognize and I I wasn't thinking about that specific talk",
    "start": "714240",
    "end": "719760"
  },
  {
    "text": "um has anyone else had this hard drive it was very popular yeah go ahead and seriously raise your hand if you had",
    "start": "719760",
    "end": "725560"
  },
  {
    "text": "this hard drive there's only one other person in the room seriously it's a uh seate st225 uh it's a 20 megabyte hard",
    "start": "725560",
    "end": "732639"
  },
  {
    "text": "drive my first hard drive or my first computer with a hard drive had two of",
    "start": "732639",
    "end": "738440"
  },
  {
    "text": "these in it and they were already quite old when they ended up in my computer",
    "start": "738440",
    "end": "745880"
  },
  {
    "text": "because I could only afford used computers at the time um these things mean anything to you MFM",
    "start": "745880",
    "end": "754680"
  },
  {
    "text": "rll no 8bit isabs okay low-level",
    "start": "754680",
    "end": "763519"
  },
  {
    "text": "formatting does anyone here actually work in the storage industry I had when I gave this in my",
    "start": "763519",
    "end": "770240"
  },
  {
    "text": "Meetup I had one guy who had been working at Seagate for like 30 years so he was like oh let me tell you stories",
    "start": "770240",
    "end": "777839"
  },
  {
    "text": "here uh in leave no okay well couple people getting",
    "start": "777839",
    "end": "784560"
  },
  {
    "text": "a couple nods all right all right all right seek time yeah okay now sounds a little bit more familiar so you have to",
    "start": "784560",
    "end": "791079"
  },
  {
    "text": "be I think particularly old to know what inter leave is about so we'll cover that in a second and the little formatting",
    "start": "791079",
    "end": "798760"
  },
  {
    "text": "let's just pretend like this is my hard drive layout and I've got",
    "start": "798760",
    "end": "804079"
  },
  {
    "text": "tracks and I've got sectors the sectors are the things that spoke out",
    "start": "804079",
    "end": "809880"
  },
  {
    "text": "uh as I'm reading data from the disc you know you might read like I want to read from uh 1 2 3 4 5 6 7 8 9 10 11 12 right",
    "start": "809880",
    "end": "818320"
  },
  {
    "text": "like as the disc is spinning underneath the drive head I want to read the next chunk of data that's becoming available",
    "start": "818320",
    "end": "824800"
  },
  {
    "text": "to me what happens if your computer is actually slower than your hard",
    "start": "824800",
    "end": "833959"
  },
  {
    "text": "drive you're laughing because you remember this era right",
    "start": "834079",
    "end": "840000"
  },
  {
    "text": "did anyone else ever have a computer that was slower than their hard drive all right thank you thank you I'm not",
    "start": "840000",
    "end": "846120"
  },
  {
    "text": "alone in the room okay I had my uh 286",
    "start": "846120",
    "end": "851800"
  },
  {
    "text": "with this hard drive in it and so you could run tools that would actually calculate the speed of your hard drive",
    "start": "851800",
    "end": "858000"
  },
  {
    "text": "and decide what the optimum inter leave Factor was for you and you might end up with something",
    "start": "858000",
    "end": "864680"
  },
  {
    "text": "like this you reformat your hard drive so that you actually space the sectors around the disc and that is",
    "start": "864680",
    "end": "873600"
  },
  {
    "text": "because you've got your read head and the drive is spinning and you read this",
    "start": "873600",
    "end": "879000"
  },
  {
    "text": "chunk of data but your computer is not fast enough to read the next block of",
    "start": "879000",
    "end": "884120"
  },
  {
    "text": "data so if the drive passes underneath it and you missed the opportunity to",
    "start": "884120",
    "end": "889279"
  },
  {
    "text": "read it you have to wait for the next Revolution to complete before you can read the next block of data so we",
    "start": "889279",
    "end": "895759"
  },
  {
    "text": "actually space it out so that our hard drive that's faster than our computer doesn't have to keep spinning waiting",
    "start": "895759",
    "end": "902800"
  },
  {
    "text": "for us some pretty impressive stats here",
    "start": "902800",
    "end": "910320"
  },
  {
    "text": "3600 RPM stepper motor for moving the drive head they don't voice coils I believe is",
    "start": "910320",
    "end": "918560"
  },
  {
    "text": "what's used currently not not steer Motors um 1984",
    "start": "918560",
    "end": "923600"
  },
  {
    "text": "construction 21 megabytes",
    "start": "923600",
    "end": "929680"
  },
  {
    "text": "some sweet storage space pretty cool stuff five megabits",
    "start": "929680",
    "end": "936199"
  },
  {
    "text": "per second yeah all right 65 millisecond seeks seek time",
    "start": "936199",
    "end": "944120"
  },
  {
    "text": "what's the seek time about H yeah moving the head trying finding",
    "start": "944120",
    "end": "951120"
  },
  {
    "text": "the next track that you're looking for I have videos and a cameraman this",
    "start": "951120",
    "end": "958680"
  },
  {
    "text": "is the hard drive head actually seeking so you have lots of questions about uh",
    "start": "958680",
    "end": "964120"
  },
  {
    "text": "how quickly can it find that track um how long does it take to start moving how long does it take to settle moving",
    "start": "964120",
    "end": "971160"
  },
  {
    "text": "before you can actually be ready to start reading the next thing uh yeah so",
    "start": "971160",
    "end": "977600"
  },
  {
    "text": "just Wikipedia page about this kind of stuff we've got the seek time rotational latency how long does it take for the",
    "start": "977600",
    "end": "983440"
  },
  {
    "text": "data to come back underneath the head how long does it take for the drive itself to actually process process the",
    "start": "983440",
    "end": "988959"
  },
  {
    "text": "command that we asked it to process and how long does it take everything to settle in be able to read this",
    "start": "988959",
    "end": "995560"
  },
  {
    "text": "data Who currently still uses a spinning dis at of any",
    "start": "996079",
    "end": "1001759"
  },
  {
    "text": "sort is it just in your file server raise your hand if it's only in your file",
    "start": "1001759",
    "end": "1007839"
  },
  {
    "text": "server okay it's most of us I would say in that case it's the only place I have spinning disc",
    "start": "1007839",
    "end": "1014240"
  },
  {
    "text": "left all right here is uh dis mark",
    "start": "1014240",
    "end": "1020480"
  },
  {
    "text": "notice the random read times on the",
    "start": "1021079",
    "end": "1026600"
  },
  {
    "text": "bottom 68 megabytes per second down here this is greater than 100 times slower",
    "start": "1032319",
    "end": "1039918"
  },
  {
    "text": "than like the best case sequential read times um read through put does anyone",
    "start": "1039919",
    "end": "1047400"
  },
  {
    "text": "notice something that you should notice if you're like really reading the slide",
    "start": "1047400",
    "end": "1052600"
  },
  {
    "text": "like why like wait why does he have that slide up right",
    "start": "1052600",
    "end": "1057960"
  },
  {
    "text": "now it's not a hard drive this is an SSD I found this Benchmark first accidentally put it in the slides and",
    "start": "1058000",
    "end": "1064440"
  },
  {
    "text": "then looked at it later and said wait a minute that's an SSD even in an SSD it's possible for random reads and writs to",
    "start": "1064440",
    "end": "1070880"
  },
  {
    "text": "be considerably slower than sequential if we go to my old spinning",
    "start": "1070880",
    "end": "1078400"
  },
  {
    "text": "disc friend here then we're talking and this is not even that old this is a relatively modern terabyte Seagate 128",
    "start": "1078400",
    "end": "1086400"
  },
  {
    "text": "to 586 times slower to do sequential reads and writs across the desk as",
    "start": "1086400",
    "end": "1093039"
  },
  {
    "text": "opposed to uh excuse me to do random access as opposed to sequential I just",
    "start": "1093039",
    "end": "1099159"
  },
  {
    "text": "realized I not keeping track of time at all oh it's only been 20 minutes and we have plenty of time and plenty of",
    "start": "1099159",
    "end": "1105200"
  },
  {
    "text": "slides all right so for the best disc performance we access data in the same",
    "start": "1105200",
    "end": "1110280"
  },
  {
    "text": "order that is laid out on the desk we Access Data",
    "start": "1110280",
    "end": "1117240"
  },
  {
    "text": "linearly we're ready for the data when it arrives we knew all this decades",
    "start": "1117240",
    "end": "1126240"
  },
  {
    "text": "ago for those of you who are too young to know what this is this is defrag well well it's not",
    "start": "1131799",
    "end": "1139080"
  },
  {
    "text": "actually defrag I'll tell you what this is in a second if you don't recognize it this is what defrag looks looked like",
    "start": "1139080",
    "end": "1145880"
  },
  {
    "text": "from the Dos 6 era I would say that's when defrag shipped with DOs right dos",
    "start": "1145880",
    "end": "1151039"
  },
  {
    "text": "six was it five it wasn't five it was six yeah all right so um you would",
    "start": "1151039",
    "end": "1157240"
  },
  {
    "text": "actually from time to time run a program that would look for all of the files on",
    "start": "1157240",
    "end": "1162799"
  },
  {
    "text": "your hard drive it it would scan through the fat and it would say oh you know these files are scattered like pieces of",
    "start": "1162799",
    "end": "1169000"
  },
  {
    "text": "the files are scattered all over the hard drive that's terrible performance and it would Rec compact those files so",
    "start": "1169000",
    "end": "1175679"
  },
  {
    "text": "that all of their data was laid out linearly on the hard drive so that we had much better Performance Reading from",
    "start": "1175679",
    "end": "1181919"
  },
  {
    "text": "our disk and we would choose to manually do this from time to time Windows does",
    "start": "1181919",
    "end": "1187400"
  },
  {
    "text": "still have a defrag and it will do automatic background defrags on dis",
    "start": "1187400",
    "end": "1193480"
  },
  {
    "text": "where it matters it's important to actually in many ways not do this on an",
    "start": "1193480",
    "end": "1198559"
  },
  {
    "text": "SSD because you're going to wear your hard drive down faster or your your uh Solid State Storage down faster",
    "start": "1198559",
    "end": "1206640"
  },
  {
    "text": "um but you know on the spinning disc we did this now I said a moment ago that I",
    "start": "1206640",
    "end": "1211919"
  },
  {
    "text": "would tell you what this was uh since it's not actually defrag um this is and",
    "start": "1211919",
    "end": "1218600"
  },
  {
    "text": "my pointer is not very visible but this is a game called Z frag it's uh it's zen",
    "start": "1218600",
    "end": "1225400"
  },
  {
    "text": "zen defrag I believe is the point here this is meant to just be one of these things where you load it up and you are",
    "start": "1225400",
    "end": "1232240"
  },
  {
    "text": "like kind of zoning out manually defragmenting a virtual",
    "start": "1232240",
    "end": "1240760"
  },
  {
    "text": "drive and if you just want the old experience you can click on auto defrag",
    "start": "1240760",
    "end": "1246760"
  },
  {
    "text": "and it will just do the animation for you and defragment the bits here so if",
    "start": "1246760",
    "end": "1252360"
  },
  {
    "text": "you're curious it's a it's an actual like hiio game Z frag you can you can have the funold experience of",
    "start": "1252360",
    "end": "1258600"
  },
  {
    "text": "defragmenting a drive all right so data access",
    "start": "1258600",
    "end": "1266399"
  },
  {
    "text": "patterns I'm just going to stand here take a drink of water till someone make some sort of a",
    "start": "1269640",
    "end": "1276840"
  },
  {
    "text": "comment yeah depends on how the data is laid",
    "start": "1283840",
    "end": "1289360"
  },
  {
    "text": "out so compared to perhaps this if you didn't notice I swapped the inner and outer Loops X and",
    "start": "1289360",
    "end": "1296640"
  },
  {
    "text": "Y might be better might be worse",
    "start": "1296640",
    "end": "1303320"
  },
  {
    "text": "yeah ra uh row access versus column access I remember my intro to data",
    "start": "1304320",
    "end": "1310400"
  },
  {
    "text": "structures class this was in 19 oh I say 97 I have 97 on the slide I would have",
    "start": "1310400",
    "end": "1317720"
  },
  {
    "text": "sworn and it was 96 if you just asked me might have been second semester my",
    "start": "1317720",
    "end": "1323000"
  },
  {
    "text": "freshman year um I remember the professor instructor",
    "start": "1323000",
    "end": "1328919"
  },
  {
    "text": "actually mentioning that you know oh on some systems this can have a performance",
    "start": "1328919",
    "end": "1335480"
  },
  {
    "text": "impact and then I I literally do not remember this coming up again at all in",
    "start": "1335480",
    "end": "1341120"
  },
  {
    "text": "four years of computer science after that I and I don't even remember if an",
    "start": "1341120",
    "end": "1348760"
  },
  {
    "text": "explanation was given so if we've got our data let's say",
    "start": "1348760",
    "end": "1354520"
  },
  {
    "text": "our array to dimensional representation of this data laid out 1 2 3 4 5 6 7 8 n",
    "start": "1354520",
    "end": "1360640"
  },
  {
    "text": "and and we're thinking of it as a 3X3 grid if we do uh row major access we've",
    "start": "1360640",
    "end": "1366279"
  },
  {
    "text": "got all the data as it was laid out in memory because memory isn't two dimensional at least on any computer",
    "start": "1366279",
    "end": "1373200"
  },
  {
    "text": "that I'm aware of today did like I don't know super super computer companies back",
    "start": "1373200",
    "end": "1378919"
  },
  {
    "text": "in the day do weird stuff like that um if you access it column major then",
    "start": "1378919",
    "end": "1384799"
  },
  {
    "text": "you're skipping around 1 472 5 8 3 69 I mean this is nine integers is going",
    "start": "1384799",
    "end": "1392559"
  },
  {
    "text": "to make an impact no who works on data sets that are more than nine",
    "start": "1392559",
    "end": "1398919"
  },
  {
    "text": "integers who when writing a nested for Loop thinks about",
    "start": "1401080",
    "end": "1406880"
  },
  {
    "text": "this now you do think okay cool cool cool um",
    "start": "1406880",
    "end": "1412760"
  },
  {
    "text": "who when writing a nested for Loop like this doesn't think about it more people okay that's me just for the record it's",
    "start": "1412760",
    "end": "1419400"
  },
  {
    "text": "not until I really started thinking about this while I was working on this stuff um so if we access data in the",
    "start": "1419400",
    "end": "1425520"
  },
  {
    "text": "correct order we get the elements in the order they're laid out in memory if we access it in the incorrect order we're",
    "start": "1425520",
    "end": "1431039"
  },
  {
    "text": "jumping around in memory yeah so I already asked you who thinks about",
    "start": "1431039",
    "end": "1436880"
  },
  {
    "text": "this",
    "start": "1436880",
    "end": "1439880"
  },
  {
    "text": "Magnetic Tape",
    "start": "1443400",
    "end": "1446279"
  },
  {
    "text": "reels very bad random XA seek",
    "start": "1450880",
    "end": "1456200"
  },
  {
    "text": "times and I I love that it has to have actual buffer of tape so the tape doesn't get stretched when it's going",
    "start": "1457200",
    "end": "1463039"
  },
  {
    "text": "back and forth that's what that little uh um Loop of tape is at the bottom",
    "start": "1463039",
    "end": "1468840"
  },
  {
    "text": "there yeah so uh who's ever actually programmed on one of these",
    "start": "1468840",
    "end": "1474399"
  },
  {
    "text": "systems you know they still exist tape storage is a thing because",
    "start": "1474399",
    "end": "1479720"
  },
  {
    "text": "the density is much higher than anything else that we've got uh and and and cost",
    "start": "1479720",
    "end": "1485120"
  },
  {
    "text": "per petabyte or something I don't even know at this point what you measure the stuff at so if you're accessing your",
    "start": "1485120",
    "end": "1491799"
  },
  {
    "text": "magnetic tape in the order that the data is laid out you get read read read read read that sounds nice nice",
    "start": "1491799",
    "end": "1499360"
  },
  {
    "text": "right if you're accessing it in the order that it's not laid out doing the wrong order then you've got read fast",
    "start": "1499360",
    "end": "1506600"
  },
  {
    "text": "forward read rewind read fast forward read rewind that's really",
    "start": "1506600",
    "end": "1514760"
  },
  {
    "text": "bad uh or if we've got a spinning disc read seek read seek read seek read seek",
    "start": "1515919",
    "end": "1523919"
  },
  {
    "text": "right so back then if you will you couldn't write software if you didn't",
    "start": "1523919",
    "end": "1531919"
  },
  {
    "text": "take this into account your program would have been",
    "start": "1531919",
    "end": "1536158"
  },
  {
    "text": "unusable how did we deal ultimately with this desire for Random Access while",
    "start": "1537200",
    "end": "1542399"
  },
  {
    "text": "processing data",
    "start": "1542399",
    "end": "1549720"
  },
  {
    "text": "cash here is a gaming hard drive you know it's fast and expensive if it's a",
    "start": "1551399",
    "end": "1557720"
  },
  {
    "text": "gaming hard drive 10 tbyte drive from Western",
    "start": "1557720",
    "end": "1562799"
  },
  {
    "text": "Digital today 256 megabytes of",
    "start": "1562799",
    "end": "1568880"
  },
  {
    "text": "cash the hard drive has more than 4,000 times as much RAM as my Commodore 64",
    "start": "1568880",
    "end": "1577240"
  },
  {
    "text": "had here's a ryzen 9 stats um if you sum these things up see",
    "start": "1579360",
    "end": "1585679"
  },
  {
    "text": "now uh when I first gave this talk someone pointed out to me that there's only 128 megabytes of usable cache",
    "start": "1585679",
    "end": "1592080"
  },
  {
    "text": "because if something's an L1 then it's also an L3 but that's not the point the CPU has 145 megabytes of cache on",
    "start": "1592080",
    "end": "1602320"
  },
  {
    "text": "die uh this was a screenshot randomly taken from my laptop it has 32 gigs of RAM at any given random moment I happen",
    "start": "1602360",
    "end": "1610279"
  },
  {
    "text": "to have 14 gigabytes of RAM allocated to Cache by Windows I mean you know it",
    "start": "1610279",
    "end": "1616640"
  },
  {
    "text": "dynamically adjusts the these things it keeps as much in cash as it can but we're caching all the things at all the",
    "start": "1616640",
    "end": "1625000"
  },
  {
    "text": "layers so it becomes not just complicated but it also becomes risky with things like side Channel attacks",
    "start": "1626559",
    "end": "1633760"
  },
  {
    "text": "and meltdown and Spectre and cash contention data corruption we've got",
    "start": "1633760",
    "end": "1641000"
  },
  {
    "text": "cash vulnerabilities it's not",
    "start": "1641000",
    "end": "1646080"
  },
  {
    "text": "good so it's complicated risky and",
    "start": "1646080",
    "end": "1653799"
  },
  {
    "text": "expensive this is a ryzen Zen 3",
    "start": "1658360",
    "end": "1665120"
  },
  {
    "text": "die it's almost easier to point out the things that aren't",
    "start": "1667440",
    "end": "1672640"
  },
  {
    "text": "cash in your current CPU um I have another little overlay",
    "start": "1672640",
    "end": "1679279"
  },
  {
    "text": "here but there's something I just noticed closer yesterday this little green blob can you see where my pointer",
    "start": "1679279",
    "end": "1686360"
  },
  {
    "text": "is on each of the cores that's related to cache and this blob over here that's",
    "start": "1686360",
    "end": "1692679"
  },
  {
    "text": "kind of pink up in the upper corner that's related to cach and this little green blob in each one of the cores is",
    "start": "1692679",
    "end": "1700240"
  },
  {
    "text": "related to cash that's in each of the cores do you",
    "start": "1700240",
    "end": "1706760"
  },
  {
    "text": "see this big giant Pink Chunk in the middle what is",
    "start": "1706760",
    "end": "1712720"
  },
  {
    "text": "that that's cash that's cash that's the L3 cash each",
    "start": "1712720",
    "end": "1720640"
  },
  {
    "text": "core set of cores has its own L2 and L1 caches it is well over 50% of the cost",
    "start": "1720640",
    "end": "1730039"
  },
  {
    "text": "of producing a CPU is",
    "start": "1730039",
    "end": "1734880"
  },
  {
    "text": "cash",
    "start": "1736399",
    "end": "1739399"
  },
  {
    "text": "so let's take a linked list and pretend that we either have no cash or perfect",
    "start": "1749720",
    "end": "1756760"
  },
  {
    "text": "cash this is um the capital L list it's a very very simple linked list",
    "start": "1756760",
    "end": "1762760"
  },
  {
    "text": "representation that I created uh that is iterable so there is some C+ Plus+ in",
    "start": "1762760",
    "end": "1767880"
  },
  {
    "text": "the talk I lied it's a tiny tiny bit of C++ here I do have a const uh uh excuse",
    "start": "1767880",
    "end": "1773240"
  },
  {
    "text": "me I have AR ranged for Loop over the elements of my list and I compiled it to 6502 assembly",
    "start": "1773240",
    "end": "1780600"
  },
  {
    "text": "as one does of course this um I do have links to all",
    "start": "1780600",
    "end": "1786519"
  },
  {
    "text": "this stuff in a moment if anyone wants to check this out on their own all right",
    "start": "1786519",
    "end": "1792120"
  },
  {
    "text": "who said there they they can read 6502 assembly okay",
    "start": "1792120",
    "end": "1797840"
  },
  {
    "text": "all right so uh this is just that Loop of going through all of the",
    "start": "1797840",
    "end": "1805720"
  },
  {
    "text": "elements uh in this list and I I tried to comment it as best",
    "start": "1805720",
    "end": "1812120"
  },
  {
    "text": "as I could we um load the pointers of the current element",
    "start": "1812120",
    "end": "1818960"
  },
  {
    "text": "or load the pointer of the of the list node get the pointer to value on line",
    "start": "1818960",
    "end": "1824880"
  },
  {
    "text": "six then we call that do thing function which I explicitly made it out of line",
    "start": "1824880",
    "end": "1830600"
  },
  {
    "text": "so that we could actually see this call to the do thing function um and then it increments the",
    "start": "1830600",
    "end": "1837960"
  },
  {
    "text": "pointer and loads the next offset value from the next node to get the next",
    "start": "1837960",
    "end": "1843039"
  },
  {
    "text": "pointer and then it Loops back through right because that's how a linked list",
    "start": "1843039",
    "end": "1848120"
  },
  {
    "text": "works I should have people stand up and demonstrate a linked list shouldn't I sorry that's to my students um that from",
    "start": "1848120",
    "end": "1856200"
  },
  {
    "text": "from uh Monday and Tuesday but each node has a pointer to the next element in the",
    "start": "1856200",
    "end": "1861320"
  },
  {
    "text": "linked list right so it's having to do this pointer in Direction on each",
    "start": "1861320",
    "end": "1867399"
  },
  {
    "text": "element and this is small succinct code but there's a I counted how many cycles",
    "start": "1867519",
    "end": "1874039"
  },
  {
    "text": "it takes to execute because I can on a 6502 I know exactly how many cycles it's",
    "start": "1874039",
    "end": "1879880"
  },
  {
    "text": "going to take it's going to take between 49 and 64 cycles per per Loop iteration",
    "start": "1879880",
    "end": "1888399"
  },
  {
    "text": "um now I'm really calling you out here does anyone know what this five or six",
    "start": "1888399",
    "end": "1893600"
  },
  {
    "text": "Cycles is about two or four Cycles is about yeah go for",
    "start": "1893600",
    "end": "1900440"
  },
  {
    "text": "it carry from the calculation of the address which is the yeah crossing a page boundary is the other yes right so",
    "start": "1903919",
    "end": "1911519"
  },
  {
    "text": "it's if it has to like go page bound like more than",
    "start": "1911519",
    "end": "1919480"
  },
  {
    "text": "256 or yeah so uh and there's also an extra cost if you",
    "start": "1919480",
    "end": "1925960"
  },
  {
    "text": "um uh if if your branch is successful then an extra cycle cost for",
    "start": "1925960",
    "end": "1933760"
  },
  {
    "text": "that so I wanted to highlight these because the possibility of actually",
    "start": "1934279",
    "end": "1940799"
  },
  {
    "text": "having to pay that extra cost of of going to a next page is uh relatively",
    "start": "1940799",
    "end": "1946279"
  },
  {
    "text": "High I think with linked list all right so this is just a span a span is a",
    "start": "1946279",
    "end": "1953840"
  },
  {
    "text": "pointer into a contiguous array of data and I'm iterating over all of those",
    "start": "1953840",
    "end": "1961639"
  },
  {
    "text": "elements and and so it's worth I think noting that it is like exactly the same",
    "start": "1961880",
    "end": "1968399"
  },
  {
    "text": "number of instructions in this optimize 6502 assembly here but we're now talking",
    "start": "1968399",
    "end": "1975279"
  },
  {
    "text": "43 to 57 cycles per iteration and a uh",
    "start": "1975279",
    "end": "1980960"
  },
  {
    "text": "far fewer instructions that have that actual non-deterministic uh at the time of the",
    "start": "1980960",
    "end": "1987159"
  },
  {
    "text": "function execution um extra cost of of doing a page",
    "start": "1987159",
    "end": "1993960"
  },
  {
    "text": "boundary linked list versus contiguous access the probability of page",
    "start": "1996799",
    "end": "2002919"
  },
  {
    "text": "boundaries like I said I think increases with the linked list which we might let's just you know for the sake of",
    "start": "2002919",
    "end": "2009639"
  },
  {
    "text": "argument here equate this to a cach Miss on Modern",
    "start": "2009639",
    "end": "2014638"
  },
  {
    "text": "Hardware contiguous axis has one less pointer IND Direction per access so we're talking 49 to 64 cycles for Linked",
    "start": "2015919",
    "end": "2023440"
  },
  {
    "text": "list versus 43 to 57 cycles per Loop iteration I just see what what really",
    "start": "2023440",
    "end": "2029440"
  },
  {
    "text": "got me like how I ended up here is thinking about the fact that I started",
    "start": "2029440",
    "end": "2035919"
  },
  {
    "text": "my career by saying well list is better because we don't pay these costs for inserts now we talk about cash effects",
    "start": "2035919",
    "end": "2042279"
  },
  {
    "text": "and Modern Hardware and everything some of that you know is true back then but",
    "start": "2042279",
    "end": "2047440"
  },
  {
    "text": "just the base case of I need to access this data if it's linear it's always",
    "start": "2047440",
    "end": "2053118"
  },
  {
    "text": "been faster 11 to 13% more efficient or more",
    "start": "2053119",
    "end": "2058960"
  },
  {
    "text": "with fewer page boundary Crossings and I do have an actual compiler explorer link to that that is the um the com the 6502",
    "start": "2058960",
    "end": "2069240"
  },
  {
    "text": "example so we used to know this we used to know that contiguous accesses were",
    "start": "2069240",
    "end": "2074560"
  },
  {
    "text": "better why did this is now this is my now we're at my hypothesis here we knew",
    "start": "2074560",
    "end": "2080960"
  },
  {
    "text": "this but we forgot it and had to relearn it so I'm trying to figure out when we",
    "start": "2080960",
    "end": "2086960"
  },
  {
    "text": "forgot this and why we had to learn it again so this is a very simplified selective timeline of computing history",
    "start": "2086960",
    "end": "2093839"
  },
  {
    "text": "that tries to prove my specific point let's just be honest right like it's not a complete timeline of computing history",
    "start": "2093839",
    "end": "2099760"
  },
  {
    "text": "here but in 1980 the commodor Vic 20 has 5 kilobytes of",
    "start": "2099760",
    "end": "2107040"
  },
  {
    "text": "SRAM um and at the time so okay so I've got two numbers for each of these prices",
    "start": "2107119",
    "end": "2112359"
  },
  {
    "text": "they're all in US Dollars scale will work the first number is how much RAM",
    "start": "2112359",
    "end": "2117800"
  },
  {
    "text": "actually cost at that particular time in history the second number is adjusted",
    "start": "2117800",
    "end": "2122839"
  },
  {
    "text": "for inflation they come the Vic 20 used SRAM",
    "start": "2122839",
    "end": "2128720"
  },
  {
    "text": "specifically because it simplified the design of the motherboard uh with Dam",
    "start": "2128720",
    "end": "2133880"
  },
  {
    "text": "with Dynamic Ram it needs a refresh which means you need a memory controller on the Vic 20 they didn't have a memory",
    "start": "2133880",
    "end": "2141920"
  },
  {
    "text": "controller available Dam controller available that they wanted to pay for so they used static RAM and only went with",
    "start": "2141920",
    "end": "2148079"
  },
  {
    "text": "5K of ram static Ram being much more expensive the dynamic Ram but it simplified the cost of the overall board",
    "start": "2148079",
    "end": "2154359"
  },
  {
    "text": "I have read the complete history of commodor by the way it's a three volume work I recommend it it's on YouTube but",
    "start": "2154359",
    "end": "2160160"
  },
  {
    "text": "it's quite the Tome um memory at the time adjusted for",
    "start": "2160160",
    "end": "2165400"
  },
  {
    "text": "inflation cost $24,000 per",
    "start": "2165400",
    "end": "2170880"
  },
  {
    "text": "megabyte 1982 the Conor 64 came out it had 64k of ram but we're in an",
    "start": "2172400",
    "end": "2179359"
  },
  {
    "text": "interesting very very brief moment in history here where my Ram was actually",
    "start": "2179359",
    "end": "2185359"
  },
  {
    "text": "twice as fast as my",
    "start": "2185359",
    "end": "2188720"
  },
  {
    "text": "CPU 1985 the 386 launched initially without a cache and it was a 12 mahz CPU",
    "start": "2191560",
    "end": "2198839"
  },
  {
    "text": "and 12 MHz System bus Ram was clocked at the same speed as the CPU at that",
    "start": "2198839",
    "end": "2205640"
  },
  {
    "text": "point 1986 my old hard drive the st225 can read faster than some system buses",
    "start": "2205640",
    "end": "2212280"
  },
  {
    "text": "and we talk about interleaving to slow down the drive so it matches the speed",
    "start": "2212280",
    "end": "2217520"
  },
  {
    "text": "of my CPU up to this point Ram is too",
    "start": "2217520",
    "end": "2222640"
  },
  {
    "text": "expensive so in 1985 it was about $850 per megabyte notice from 1980",
    "start": "2222640",
    "end": "2230240"
  },
  {
    "text": "$24,000 per megabyte to $850 per megabyte already but still too expensive",
    "start": "2230240",
    "end": "2236599"
  },
  {
    "text": "and our peripherals are too fast for our CPUs for some definition of too",
    "start": "2236599",
    "end": "2245279"
  },
  {
    "text": "fast around 86 to 992 things start to change um $300 for $850 per megabyte",
    "start": "2245599",
    "end": "2255319"
  },
  {
    "text": "1985 that's what the last side had on there 386 right carry over from the last side and 1986 Ram price is already down",
    "start": "2255319",
    "end": "2264560"
  },
  {
    "text": "to $529 per megabyte in 89 we've got our",
    "start": "2264560",
    "end": "2269800"
  },
  {
    "text": "first 486 running at 16 MHz and the system bus is still 16 MHz and RAM is",
    "start": "2269800",
    "end": "2275960"
  },
  {
    "text": "now down to $278 per megabyte and 90 down to",
    "start": "2275960",
    "end": "2283079"
  },
  {
    "text": "$107 per megabyte so what is that in 10 years from",
    "start": "2283079",
    "end": "2288319"
  },
  {
    "text": "$24,000 per megabyte to $100 per megabyte that's a huge",
    "start": "2288319",
    "end": "2295160"
  },
  {
    "text": "change and 92 we get our first like modern desktop processors where the CPU",
    "start": "2295160",
    "end": "2304160"
  },
  {
    "text": "is clocked at a slower noticeably slower speed than the system bus our CPU is now",
    "start": "2304160",
    "end": "2309359"
  },
  {
    "text": "faster than our memory um at $56 uh per megab byte now",
    "start": "2309359",
    "end": "2315839"
  },
  {
    "text": "we're down to and I say we kind of fell off the cliff here in the 93 to 2006 time frame",
    "start": "2315839",
    "end": "2324440"
  },
  {
    "text": "we've got the Pentium at 60 megahertz and as far as I can tell this is the first CPU that had separate data and",
    "start": "2324440",
    "end": "2332200"
  },
  {
    "text": "instruction caches and a a fairly considerable L1 cache if you consider it",
    "start": "2332200",
    "end": "2337640"
  },
  {
    "text": "wasn't that long ago the commodor 64 had 64k of main memory we've now got 16k of",
    "start": "2337640",
    "end": "2344319"
  },
  {
    "text": "L1 cache on our Pentium processor 93 um I did some research in the",
    "start": "2344319",
    "end": "2351160"
  },
  {
    "text": "internet archive and as far as I can tell the",
    "start": "2351160",
    "end": "2357119"
  },
  {
    "text": "first mention of the phrase cash friendly was in 1994 and it was showing",
    "start": "2357119",
    "end": "2363280"
  },
  {
    "text": "up in supercomputing literature old school supercomputing magazine",
    "start": "2363280",
    "end": "2368440"
  },
  {
    "text": "um see I didn't have a mention of java previously but my my my members of my",
    "start": "2369960",
    "end": "2376640"
  },
  {
    "text": "Meetup told me that I should mention Java here nothing personal to the one person in the room I know who's a Java",
    "start": "2376640",
    "end": "2382319"
  },
  {
    "text": "programmer um Java 1.0 came out and I remember anecdotally because I was",
    "start": "2382319",
    "end": "2387760"
  },
  {
    "text": "around in this time frame that's when I started University um that we kind of just expected CPUs are going to keep",
    "start": "2387760",
    "end": "2394480"
  },
  {
    "text": "getting faster and faster and faster and faster right you remember that era like",
    "start": "2394480",
    "end": "2399520"
  },
  {
    "text": "there's no end in sight soon we'll have 78 GHz laptops right that",
    "start": "2399520",
    "end": "2406119"
  },
  {
    "text": "was 96 Ram is now only $10 per",
    "start": "2406520",
    "end": "2411760"
  },
  {
    "text": "megabyte again down from $24,000 per",
    "start": "2411760",
    "end": "2416680"
  },
  {
    "text": "megabyte 1999 this is the first CPU to hit 1 gigahertz it's the Athlon",
    "start": "2416880",
    "end": "2424839"
  },
  {
    "text": "K75 had 28k of onai cash and the",
    "start": "2424839",
    "end": "2431520"
  },
  {
    "text": "uh System bus was way less than a gigahertz and the L2 cache in this",
    "start": "2431520",
    "end": "2438599"
  },
  {
    "text": "particular um device uh this particular chip the L2 cach was running at onethird",
    "start": "2438599",
    "end": "2445640"
  },
  {
    "text": "the CPU speed so now we actually have our cache that's slower than our CPU not",
    "start": "2445640",
    "end": "2450720"
  },
  {
    "text": "just our main memory 2005 the Athlon x64 X2 first dual",
    "start": "2450720",
    "end": "2460200"
  },
  {
    "text": "I owned one of those I had almost forgotten 2 gahz just",
    "start": "2460200",
    "end": "2466160"
  },
  {
    "text": "for the record yes that's 2,000 times faster than the Vic 20 was um then",
    "start": "2466160",
    "end": "2471640"
  },
  {
    "text": "Commodore excuse me then uh in 2005 herb Sutter wrote this article for Dr Do's",
    "start": "2471640",
    "end": "2477400"
  },
  {
    "text": "Journal it's called the free lunch is over do you remember",
    "start": "2477400",
    "end": "2482720"
  },
  {
    "text": "this we can no longer talk about CPUs getting infinitely faster we now have to",
    "start": "2482720",
    "end": "2490240"
  },
  {
    "text": "uh go to multicore basically um 2006 our Ram is down to 11",
    "start": "2490240",
    "end": "2499960"
  },
  {
    "text": "cents per megabyte that's",
    "start": "2499960",
    "end": "2505599"
  },
  {
    "text": "28,000 times cheaper 218,000 times cheaper than it was when I started my",
    "start": "2505760",
    "end": "2511359"
  },
  {
    "text": "timeline 26 years previously so this is my hypothesis that",
    "start": "2511359",
    "end": "2516520"
  },
  {
    "text": "at approximately 2005 we got lazy and we started relying on cash we said whatever",
    "start": "2516520",
    "end": "2521640"
  },
  {
    "text": "I can access memory however I want to it's fine it's fast everything takes care of the problem for",
    "start": "2521640",
    "end": "2528160"
  },
  {
    "text": "me this is a historical graph on this um I I had to truncate things but I mean",
    "start": "2528160",
    "end": "2535319"
  },
  {
    "text": "this isn't like logarithmic or anything this is like literally just what it did like memory was effectively infinite",
    "start": "2535319",
    "end": "2541559"
  },
  {
    "text": "cost and went to effectively zero cost over this time frame while cpu's speeds",
    "start": "2541559",
    "end": "2548839"
  },
  {
    "text": "were on a trajectory that looked like they were never going to end but our Ram",
    "start": "2548839",
    "end": "2554359"
  },
  {
    "text": "speed was actually at a much lower slope so our CPUs out fasting this out",
    "start": "2554359",
    "end": "2561720"
  },
  {
    "text": "outpacing the speed of our Ram while the cost of RAM is going to",
    "start": "2561720",
    "end": "2567119"
  },
  {
    "text": "zero Ram pric is toward zero CPU speeds trending towards",
    "start": "2567480",
    "end": "2573160"
  },
  {
    "text": "Infinity CPU Ram speed ratios were looking increasingly bad so we're",
    "start": "2573160",
    "end": "2578960"
  },
  {
    "text": "relying more and more on cash so we've gone from not needing",
    "start": "2578960",
    "end": "2584559"
  },
  {
    "text": "slash not being able to afford cash because our memory and peripherals were",
    "start": "2584559",
    "end": "2590800"
  },
  {
    "text": "faster than our CPU to absolutely fully relying on cash for anything resembling",
    "start": "2590800",
    "end": "2599040"
  },
  {
    "text": "reasonable performance I'm kind of curious if anyone now that I've like laid out my",
    "start": "2599040",
    "end": "2606400"
  },
  {
    "text": "timeline my hypothesis here does anyone want to argue with",
    "start": "2606400",
    "end": "2612440"
  },
  {
    "text": "me yeah go for",
    "start": "2612440",
    "end": "2615960"
  },
  {
    "text": "it well people F focusing on Big O notation instead of cash",
    "start": "2620559",
    "end": "2625880"
  },
  {
    "text": "friendliness uh do I think it played a role in this timeline",
    "start": "2625880",
    "end": "2632759"
  },
  {
    "text": "here linear access oh people forgetting that linear",
    "start": "2635079",
    "end": "2640119"
  },
  {
    "text": "access is better I think it I think it did play a role I did uh that's an",
    "start": "2640119",
    "end": "2645880"
  },
  {
    "text": "interesting point Victor has a comment there uh not related to this but another",
    "start": "2645880",
    "end": "2652280"
  },
  {
    "text": "factor that I think influenced history in terms of programming patterns yes uh",
    "start": "2652280",
    "end": "2657960"
  },
  {
    "text": "and that was the trend of functional programming languages uh which were very",
    "start": "2657960",
    "end": "2663520"
  },
  {
    "text": "much uh coming up in the early 90s from",
    "start": "2663520",
    "end": "2669280"
  },
  {
    "text": "the the the inheritance of con cells and just building up lists of right of notes",
    "start": "2669280",
    "end": "2677640"
  },
  {
    "text": "so that influenced also the some of the programming patterns that people saw in",
    "start": "2677640",
    "end": "2682920"
  },
  {
    "text": "the early 90s so Victor's comment was that the rise of popularity of",
    "start": "2682920",
    "end": "2688480"
  },
  {
    "text": "functional programming languages like yeah cons cter because it's small lists things out of small list making list of",
    "start": "2688480",
    "end": "2695280"
  },
  {
    "text": "list of lists of things had some impact here I I want to also just say I",
    "start": "2695280",
    "end": "2700480"
  },
  {
    "text": "think so I did a an interview not that long ago where someone said oh like we",
    "start": "2700480",
    "end": "2708119"
  },
  {
    "text": "we need to do X Y and Z like what what like um should what what what should you",
    "start": "2708119",
    "end": "2714319"
  },
  {
    "text": "do here in this code interview right and I said well uh given that it's hard to",
    "start": "2714319",
    "end": "2721319"
  },
  {
    "text": "directly predict what cash effects and whatever like I would you know consider consider using a flat map here and then",
    "start": "2721319",
    "end": "2727839"
  },
  {
    "text": "I would measure the difference and the person I was interviewing with was like no wrong answer you use a standard map",
    "start": "2727839",
    "end": "2735160"
  },
  {
    "text": "because of Big O and LSS and I'm like but what you had a your hand raised as",
    "start": "2735160",
    "end": "2741680"
  },
  {
    "text": "well",
    "start": "2741680",
    "end": "2743838"
  },
  {
    "text": "yeah uh that's when I first could find it in literature was 94",
    "start": "2749040",
    "end": "2754400"
  },
  {
    "text": "yeah I saw",
    "start": "2754400",
    "end": "2757880"
  },
  {
    "text": "okay so the comment uh from the audience here was around 94 as well you saw a self-modifying line drawing routine Co",
    "start": "2771400",
    "end": "2780119"
  },
  {
    "text": "self- modifying code for drawing a line and you said it was literally the last time you saw something like that because",
    "start": "2780119",
    "end": "2785160"
  },
  {
    "text": "they commented it would be screwing with your cach on your CPU is that correct",
    "start": "2785160",
    "end": "2790920"
  },
  {
    "text": "separate instruction dat yeah yeah separate instruction and data cache and yeah like some props to our Hardware",
    "start": "2790920",
    "end": "2796760"
  },
  {
    "text": "designers that that kind of thing even works at all right and they keep all the caches like consistent and everything",
    "start": "2796760",
    "end": "2802680"
  },
  {
    "text": "else but it uh besides that uh if we're if we I mean the branch prediction thing",
    "start": "2802680",
    "end": "2808920"
  },
  {
    "text": "which I just completely glossed over at the front of this you're really messing with your branch predictor if you're right in self modifying branching go C",
    "start": "2808920",
    "end": "2817079"
  },
  {
    "text": "don't do that right right when people thought it",
    "start": "2817079",
    "end": "2824040"
  },
  {
    "text": "was more efficient than doing branching uh",
    "start": "2824040",
    "end": "2830960"
  },
  {
    "text": "yeah right",
    "start": "2842920",
    "end": "2847720"
  },
  {
    "text": "so the comment uh again for the the video later uh was um back then in the",
    "start": "2867880",
    "end": "2874359"
  },
  {
    "text": "comer 64 you basically had to start with a hardware manual if you wanted to do anything and learn about the",
    "start": "2874359",
    "end": "2879640"
  },
  {
    "text": "architecture of your system when today you you don't do that basically right and no no one really starts from that",
    "start": "2879640",
    "end": "2886559"
  },
  {
    "text": "perspective is there another yeah",
    "start": "2886559",
    "end": "2894559"
  },
  {
    "text": "2005 right uh",
    "start": "2900000",
    "end": "2906760"
  },
  {
    "text": "so your argument is is is the fact that we are trying to figure out efficient multicore processes processing um maybe",
    "start": "2906760",
    "end": "2915720"
  },
  {
    "text": "pushed our thoughts about uh data access patterns and cash friendliness and whatever to the back",
    "start": "2915720",
    "end": "2921800"
  },
  {
    "text": "burner that might be true as well I have an anecdote about that as well",
    "start": "2921800",
    "end": "2927800"
  },
  {
    "text": "yeah",
    "start": "2934599",
    "end": "2937599"
  },
  {
    "text": "ah okay so you said fresh University",
    "start": "2942839",
    "end": "2948880"
  },
  {
    "text": "students will now tell you Vector should be your default but they can't really give you a good answer as to why yeah uh",
    "start": "2948880",
    "end": "2955720"
  },
  {
    "text": "so my anecdote which I did share with my students earlier because it came up um",
    "start": "2955720",
    "end": "2961000"
  },
  {
    "text": "as I around 90",
    "start": "2961000",
    "end": "2966160"
  },
  {
    "text": "8 era I managed to acquire a dual Pentium 2 it was like one of these slot",
    "start": "2966160",
    "end": "2971640"
  },
  {
    "text": "One deals so it was like like a lot um and uh nt4 at the time was absolutely",
    "start": "2971640",
    "end": "2979680"
  },
  {
    "text": "terrible about process scheduling so it would run like on one CPU and then when",
    "start": "2979680",
    "end": "2985400"
  },
  {
    "text": "it went to do a task switch it would say well this CPU is still busy so it would Swap this this whole task over to the",
    "start": "2985400",
    "end": "2991559"
  },
  {
    "text": "other CPU and then swap the whole task over to the other CPU again and you could watch watch it do this ping pong",
    "start": "2991559",
    "end": "2996640"
  },
  {
    "text": "on a long running task which was absolutely terrible for utilizing the cash on the CPU and I didn't fully",
    "start": "2996640",
    "end": "3003799"
  },
  {
    "text": "understand at the time why it was bad I just learned you know moving processes was bad like when I was reading like",
    "start": "3003799",
    "end": "3009520"
  },
  {
    "text": "Linux articles and stuff but I didn't know why okay",
    "start": "3009520",
    "end": "3016319"
  },
  {
    "text": "so uh that's where we last left okay um so CPU speeds have only doubled in the",
    "start": "3018359",
    "end": "3024440"
  },
  {
    "text": "last 17 years since I laugh off on this chart but we have many many more cores",
    "start": "3024440",
    "end": "3029799"
  },
  {
    "text": "interestingly Ram clocks are actually catching back up with our CPU speeds and",
    "start": "3029799",
    "end": "3035440"
  },
  {
    "text": "I have to say I don't really honestly understand enough about modern C uh memory architecture to know exactly what",
    "start": "3035440",
    "end": "3041720"
  },
  {
    "text": "that means but it's very very close to CPU bus speeds now um storage is now",
    "start": "3041720",
    "end": "3047760"
  },
  {
    "text": "attached directly to the system bus nvme hopefully we all have",
    "start": "3047760",
    "end": "3054440"
  },
  {
    "text": "nvme if seriously if you have a computer that doesn't have SSD or nvme in it and",
    "start": "3054440",
    "end": "3061480"
  },
  {
    "text": "you can afford it it is the it will change your life just swap out that hard drive I promise you it will I did this",
    "start": "3061480",
    "end": "3069280"
  },
  {
    "text": "for my nephew he moved in with us he had a gaming laptop that had a 7200 RPM disc",
    "start": "3069280",
    "end": "3075880"
  },
  {
    "text": "in it I'm like no no no no no slot the nvme thing's like 10 times faster all",
    "start": "3075880",
    "end": "3083680"
  },
  {
    "text": "right that's all the references for how I got to all this historical stuff if you want to look at that and argue about",
    "start": "3083680",
    "end": "3089640"
  },
  {
    "text": "it later so what do we do we assume every pointer and direction is a cash Miss thank you",
    "start": "3089640",
    "end": "3095079"
  },
  {
    "text": "Bjorn I have quoted you probably more times than anyone else uh because of",
    "start": "3095079",
    "end": "3100480"
  },
  {
    "text": "this specific statement so how do you write cash",
    "start": "3100480",
    "end": "3106640"
  },
  {
    "text": "friendly performant optimizable and vectorizable",
    "start": "3106640",
    "end": "3111880"
  },
  {
    "text": "code pretend like this is your data storage",
    "start": "3111880",
    "end": "3117359"
  },
  {
    "text": "I am not old enough to have used one of these it is it's not done it's not a",
    "start": "3121839",
    "end": "3127880"
  },
  {
    "text": "loop just for the record this is actually going",
    "start": "3127880",
    "end": "3131920"
  },
  {
    "text": "somewhere are you familiar with this device is a punched paper",
    "start": "3135280",
    "end": "3140319"
  },
  {
    "text": "tape it's uh reading into an lar actually so it's a relatively recent",
    "start": "3140319",
    "end": "3146559"
  },
  {
    "text": "video on YouTube it's like 10 years old or something um that is uh yeah just",
    "start": "3146559",
    "end": "3153200"
  },
  {
    "text": "just demonstrating paper tape reading you know what what just happened here what kind of what kind of random access",
    "start": "3153200",
    "end": "3159400"
  },
  {
    "text": "do we have to the data on that tape zero zero no Random",
    "start": "3159400",
    "end": "3165720"
  },
  {
    "text": "Access if we if I were to have missed this bite right here what would have",
    "start": "3165720",
    "end": "3172400"
  },
  {
    "text": "happened it's gone forever right all",
    "start": "3172400",
    "end": "3178160"
  },
  {
    "text": "right",
    "start": "3178160",
    "end": "3181160"
  },
  {
    "text": "this this is a Hollerith uh punch card sorder I have also not ever used one of",
    "start": "3185160",
    "end": "3191839"
  },
  {
    "text": "these just for the record um oh I guess it was actually IBM",
    "start": "3191839",
    "end": "3197480"
  },
  {
    "text": "called named at that point I am relatively reluctant to mention this",
    "start": "3197480",
    "end": "3204160"
  },
  {
    "text": "but I read a book recently called IBM and the Holocaust it is an incredibly depressing book to read just for the",
    "start": "3204160",
    "end": "3211319"
  },
  {
    "text": "record however there's lots of discussion about IBM punch card machines that come up in that book and so I",
    "start": "3211319",
    "end": "3218920"
  },
  {
    "text": "realized that there's a direct overlap here to the topic I was already thinking",
    "start": "3218920",
    "end": "3224119"
  },
  {
    "text": "about so back to BJ bej said um this we",
    "start": "3224119",
    "end": "3230960"
  },
  {
    "text": "want to Circle his main takeaway from this whole Where do I insert or what",
    "start": "3230960",
    "end": "3236359"
  },
  {
    "text": "kind of container do I use if I'm inserting and deleting a bunch of things was don't store data unnecessarily keep",
    "start": "3236359",
    "end": "3243280"
  },
  {
    "text": "data Compact and access memory in a predictable manner that's what we have to",
    "start": "3243280",
    "end": "3250160"
  },
  {
    "text": "do so how do we write cash friendly code pretend like you don't have a",
    "start": "3250160",
    "end": "3257280"
  },
  {
    "text": "cach and pretend like you can only read the data once that has been my takeaway",
    "start": "3257280",
    "end": "3262520"
  },
  {
    "text": "from all of these talks anding the historical perspective",
    "start": "3262520",
    "end": "3268318"
  },
  {
    "text": "here so how do these things actually help we have many CPUs actually how many CPUs do you have",
    "start": "3269040",
    "end": "3275880"
  },
  {
    "text": "how many CPUs is in your laptop right now 10 10 I think mine's 8 time two I",
    "start": "3275880",
    "end": "3283160"
  },
  {
    "text": "think I've got 16 logical CPUs on on this uh Athlon Aon radon a date myself",
    "start": "3283160",
    "end": "3292319"
  },
  {
    "text": "right there um they're still faster than our devices nvme very very fast slower than our",
    "start": "3292319",
    "end": "3301079"
  },
  {
    "text": "CPUs um but fortunately we do need to do some kind of processing on our data",
    "start": "3301079",
    "end": "3307520"
  },
  {
    "text": "right so if our goal is literally to just read the data as fast as possible we're still going to be faster than our",
    "start": "3307520",
    "end": "3314680"
  },
  {
    "text": "input and output devices today but if we're doing some kind of processing at all on the data even if it's just",
    "start": "3314680",
    "end": "3321319"
  },
  {
    "text": "shoving it into another storage device we're taking some time here so while we process our caching infrastructure is",
    "start": "3321319",
    "end": "3328000"
  },
  {
    "text": "going to prefetch and have that stuff waiting for us so we're we're still relying on the cach but we're pretending",
    "start": "3328000",
    "end": "3334880"
  },
  {
    "text": "like it's not there we're pretending like we just I have this Magnetic Tape we're reading from and everything will",
    "start": "3334880",
    "end": "3340799"
  },
  {
    "text": "sort itself out in the end so I think I ended a little bit early but that is who",
    "start": "3340799",
    "end": "3347400"
  },
  {
    "text": "I am Jason Turner um I do stuff if",
    "start": "3347400",
    "end": "3352440"
  },
  {
    "text": "anyone wants to talk to me later I have uh stickers up here and is there any",
    "start": "3352440",
    "end": "3357559"
  },
  {
    "text": "questions before we wrap this up no other questions I got you all",
    "start": "3357559",
    "end": "3364680"
  },
  {
    "text": "talking during the argue with me about the historical perspective part all right thank you very much",
    "start": "3364680",
    "end": "3371680"
  }
]