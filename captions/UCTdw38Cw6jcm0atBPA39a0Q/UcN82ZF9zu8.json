[
  {
    "text": "topic that I kind of uh discovered for myself uh over 20 years ago and I've",
    "start": "4920",
    "end": "12120"
  },
  {
    "text": "been telling this story before so bear with me if you've heard that before but every year I'm kind of expecting that I",
    "start": "12120",
    "end": "19160"
  },
  {
    "text": "would need to look for some some other topic to work on because I mean web app security that's that's not that hard I",
    "start": "19160",
    "end": "26240"
  },
  {
    "text": "think uh and therefore the situation should get better but the situation does",
    "start": "26240",
    "end": "31320"
  },
  {
    "text": "not get better for for obvious reasons uh and not so obvious reasons and um one",
    "start": "31320",
    "end": "36559"
  },
  {
    "text": "of the uh one of the trends in in web app security is that",
    "start": "36559",
    "end": "41719"
  },
  {
    "text": "the teams behind web browsers they they also understand that the situation is horrible and that supposedly we",
    "start": "41719",
    "end": "48719"
  },
  {
    "text": "developers you know can't get our stuff together there are still security issues so they are continuously adding security",
    "start": "48719",
    "end": "55920"
  },
  {
    "text": "features into into their software products so the idea of the talk now is",
    "start": "55920",
    "end": "61760"
  },
  {
    "text": "to give you a run through many of the uh security features in browsers many of",
    "start": "61760",
    "end": "67439"
  },
  {
    "text": "them uh HTTP headers but also some JavaScript apis and more so uh if if you",
    "start": "67439",
    "end": "74159"
  },
  {
    "text": "you know expect expect an an inspiring talk with wake suggestions what to do",
    "start": "74159",
    "end": "80280"
  },
  {
    "text": "next uh you may be wrong here but if you want to have an elaborate checklist of things to add to your web application to",
    "start": "80280",
    "end": "87920"
  },
  {
    "text": "increase the security posture uh of of your site then you're at the right place",
    "start": "87920",
    "end": "93640"
  },
  {
    "text": "and with that I'd like to start with an attack that's over 25 years old and the",
    "start": "93640",
    "end": "100759"
  },
  {
    "text": "attack has a term coined by the Internet Explorer team that's how old it is um",
    "start": "100759",
    "end": "106200"
  },
  {
    "text": "what is it yes it's crossy scripting now I went to CV details.com",
    "start": "106200",
    "end": "111920"
  },
  {
    "text": "um a website uh that kind of collects uh common viability numerations and also",
    "start": "111920",
    "end": "119039"
  },
  {
    "text": "creates nice chart how common place an web application risk or web application",
    "start": "119039",
    "end": "125759"
  },
  {
    "text": "attack is by enumerating uh the times that there is a a cve for that specific",
    "start": "125759",
    "end": "133200"
  },
  {
    "text": "threat now here is the chart for cross side scripting and I mean people people keep telling me yeah you know cross",
    "start": "133200",
    "end": "139480"
  },
  {
    "text": "scripting that's that's a problem solved but if you look at the chart I mean I",
    "start": "139480",
    "end": "145239"
  },
  {
    "text": "I'm not an expert but I do see some some uh some inre in numbers and if you look",
    "start": "145239",
    "end": "151319"
  },
  {
    "text": "at 2024 we are not even halfway through this year but if you double the current",
    "start": "151319",
    "end": "156400"
  },
  {
    "text": "numbers so I took this chart uh sometime last week we'll have a new record number uh maybe even Crossing 6,000 reported",
    "start": "156400",
    "end": "163640"
  },
  {
    "text": "crossed scripting cves uh this this year so the situation is horrendous and of",
    "start": "163640",
    "end": "169879"
  },
  {
    "text": "course many many Frameworks uh and uh especially Spa Technologies what they do",
    "start": "169879",
    "end": "176400"
  },
  {
    "text": "is they try to build in crossed scripting mitigations so even if you have no clue about security then you",
    "start": "176400",
    "end": "183480"
  },
  {
    "text": "have some level of protection but of course it's mandatory to have a clue about security to go from maybe 95%",
    "start": "183480",
    "end": "189920"
  },
  {
    "text": "protected to 100% protected and the the the actual reason why crossed scripting is such a big problem is the one sole",
    "start": "189920",
    "end": "197319"
  },
  {
    "text": "security feature we have in JavaScript the so-called same origin policy now I",
    "start": "197319",
    "end": "202360"
  },
  {
    "text": "don't like that term because when when we talk about origin uh at least I but I",
    "start": "202360",
    "end": "208319"
  },
  {
    "text": "mean English is not my first language so but I think about you know where something is coming from but no that's",
    "start": "208319",
    "end": "213920"
  },
  {
    "text": "that's that's wrong um they use origin here as a term defined by the internet",
    "start": "213920",
    "end": "219799"
  },
  {
    "text": "engineering task force and origin is a part of the URL it's the protocol the scheme and if it's not the default it's",
    "start": "219799",
    "end": "226439"
  },
  {
    "text": "the port and essentially the um the same origin policy states that JavaScript code can",
    "start": "226439",
    "end": "234000"
  },
  {
    "text": "only access things quote unquote that have the same origin origin as in the",
    "start": "234000",
    "end": "239079"
  },
  {
    "text": "ietf definition of origin which essentially means uh if you have an",
    "start": "239079",
    "end": "244720"
  },
  {
    "text": "iframe on your page and that has the same the URL in there has the same origin as the the outer URL then",
    "start": "244720",
    "end": "252040"
  },
  {
    "text": "JavaScript has has access to that that's a good thing but if we have crossed",
    "start": "252040",
    "end": "259120"
  },
  {
    "text": "scripting that means that someone injects us JavaScript code inline JavaScript code or JavaScript code",
    "start": "259120",
    "end": "264800"
  },
  {
    "text": "coming from somewhere else a script tag with SRC set to some third part party",
    "start": "264800",
    "end": "270080"
  },
  {
    "text": "server maybe under the attacker's control now even though that code lies",
    "start": "270080",
    "end": "275440"
  },
  {
    "text": "on a different server since it is injected into our page thanks to the same origin policy it has the same",
    "start": "275440",
    "end": "281880"
  },
  {
    "text": "privileges as our own JavaScript code it's like having a new developer on our team and that developer can pass code",
    "start": "281880",
    "end": "288919"
  },
  {
    "text": "reviews right that's what cross-site scripting is now I'm I assume that some of you would like to be in that position",
    "start": "288919",
    "end": "295840"
  },
  {
    "text": "but I think that's a that's a different story but in general cross script just means someone is adding code to our",
    "start": "295840",
    "end": "302600"
  },
  {
    "text": "application now uh as you've seen from from the chart crossed scripting has been there for a long time but somehow",
    "start": "302600",
    "end": "310240"
  },
  {
    "text": "the numbers are still going up although cross descripting defenses are common common knowledge I would say therefore",
    "start": "310240",
    "end": "317400"
  },
  {
    "text": "web browsers try to add protection to uh to their systems so the the older people",
    "start": "317400",
    "end": "324160"
  },
  {
    "text": "in the room maybe have seen this this Internet Explorer pop up right IE has",
    "start": "324160",
    "end": "330440"
  },
  {
    "text": "modified this page to help prevent H okay that's lawyer speak right so we",
    "start": "330440",
    "end": "335880"
  },
  {
    "text": "don't guarantee anything help prevent crossed scripting and indeed uh there were crossed scripting filters they",
    "start": "335880",
    "end": "342319"
  },
  {
    "text": "originated in IE8 uh great browser from a security perspective because really it's it's",
    "start": "342319",
    "end": "348520"
  },
  {
    "text": "sparked a lot of new approaches that other browsers then also included uh and",
    "start": "348520",
    "end": "354560"
  },
  {
    "text": "well all browsers except for Firefox essentially a filter that had to be fast otherwi wise users would complain and",
    "start": "354560",
    "end": "361280"
  },
  {
    "text": "should not provide uh or report any false positives because then users would complain so it was fast and not good so",
    "start": "361280",
    "end": "368599"
  },
  {
    "text": "these were the two design goals of that browser protection and therefore the protection was always",
    "start": "368599",
    "end": "374560"
  },
  {
    "text": "insufficient um essentially Firefox was right eventually IE and chrome Safari",
    "start": "374560",
    "end": "383599"
  },
  {
    "text": "old Edge New Edge they all removed that feature because there was something well",
    "start": "383599",
    "end": "390160"
  },
  {
    "text": "new it's not really new but uh it was kind of a replacement for that you know speculating filter it was something that",
    "start": "390160",
    "end": "396400"
  },
  {
    "text": "could give developers of web application control over uh the the execution",
    "start": "396400",
    "end": "403759"
  },
  {
    "text": "context so to speak of the JavaScript code in the browser so content security policy is a w3c initiative it originated",
    "start": "403759",
    "end": "412960"
  },
  {
    "text": "uh with several browser uh developers working together uh nowadays uh staff",
    "start": "412960",
    "end": "420080"
  },
  {
    "text": "from Google is is helming that um there's a version one which was a candidate recommendation 12 years ago so",
    "start": "420080",
    "end": "427440"
  },
  {
    "text": "really old old uh old idea actually um but then it was demoted to a working",
    "start": "427440",
    "end": "433319"
  },
  {
    "text": "node working Noe is like you know scribbling something on a piece of paper and then putting it in the trash that's what the working note is because version",
    "start": "433319",
    "end": "439840"
  },
  {
    "text": "two of uh content security policy became a w3c recommendation so a a standard in",
    "start": "439840",
    "end": "446919"
  },
  {
    "text": "2016 and that version two is has support everywhere all modern browsers have it",
    "start": "446919",
    "end": "453199"
  },
  {
    "text": "the only browser that doesn't have it is i1 but as I said all mod browsers have",
    "start": "453199",
    "end": "458240"
  },
  {
    "text": "it so so so all is good there is a new version three being worked on which adds interesting new features but that's as I",
    "start": "458240",
    "end": "465599"
  },
  {
    "text": "mentioned an effort uh that is helmed uh by folks from Google and uh it's still a",
    "start": "465599",
    "end": "473000"
  },
  {
    "text": "working graft therefore all browsers that are not based on chromium so everything but Chrome Samsung internet",
    "start": "473000",
    "end": "481159"
  },
  {
    "text": "browser Opera Edge um they are hesitant to implement those features because",
    "start": "481159",
    "end": "486680"
  },
  {
    "text": "things could just change uh on the spur of the moment and they won't take that risk right so they are waiting with",
    "start": "486680",
    "end": "493280"
  },
  {
    "text": "version three features that's why I only uh would recommend using version two um or at least um make sure that",
    "start": "493280",
    "end": "500919"
  },
  {
    "text": "your cter security policy is compatible with version two so that version two compliant browsers can support it now um",
    "start": "500919",
    "end": "507639"
  },
  {
    "text": "how how how does such a the security policy look like um I I'll just give you",
    "start": "507639",
    "end": "512680"
  },
  {
    "text": "an example you sent an HTTP header there are other options as well but that's the best bet you're sending HP header the",
    "start": "512680",
    "end": "518800"
  },
  {
    "text": "header is called content d security D policy and then you can have a value and",
    "start": "518800",
    "end": "524720"
  },
  {
    "text": "the value May consist of an arbitrary number of so-called directives directives are the things with the",
    "start": "524720",
    "end": "530440"
  },
  {
    "text": "hyphens in them so default SRC image SRC and each of those directive may have an",
    "start": "530440",
    "end": "536680"
  },
  {
    "text": "more or less arbitrary number of values Val are separated by spaces that's",
    "start": "536680",
    "end": "541839"
  },
  {
    "text": "that's basically the the BNF so to speak of of content security policy um and",
    "start": "541839",
    "end": "547240"
  },
  {
    "text": "even if you've never seen this before looking at that you immediately have a hunch what is going on here right so",
    "start": "547240",
    "end": "554480"
  },
  {
    "text": "default SRC basically says okay if if you have any resources on that current page you can only load it from self self",
    "start": "554480",
    "end": "562240"
  },
  {
    "text": "is a constant single quotes mean constants and means the current that's the Teran origin so only load stuff from",
    "start": "562240",
    "end": "571480"
  },
  {
    "text": "your own origin so if someone finds a cross scripting viability and ejects script SRC equals",
    "start": "571480",
    "end": "578839"
  },
  {
    "text": "HTTP third party attacker server. um SLB script.js that would not",
    "start": "578839",
    "end": "584920"
  },
  {
    "text": "be loaded because that's not self default SSC applies to any kind of resource but for specific types of",
    "start": "584920",
    "end": "591760"
  },
  {
    "text": "resources you can have specific directives for instance here is the image SRC directive and uh I don't think",
    "start": "591760",
    "end": "598480"
  },
  {
    "text": "you need much much fantasy to find out what that is referring to so if you load images on your page now you can only",
    "start": "598480",
    "end": "605120"
  },
  {
    "text": "load them from self and from hdps static example.com right so this is",
    "start": "605120",
    "end": "610880"
  },
  {
    "text": "this is really content security policy in a um in a nutshell so I have an an",
    "start": "610880",
    "end": "616720"
  },
  {
    "text": "Enterprise app here uh which I'm pretty fond of because it's using microservices",
    "start": "616720",
    "end": "622360"
  },
  {
    "text": "approach to uh to implement or Pride Great Value um and I I made that app",
    "start": "622360",
    "end": "629200"
  },
  {
    "text": "with which I mean as you see from the output is is super simple right we have the current time and you know we have",
    "start": "629200",
    "end": "634320"
  },
  {
    "text": "some awesome design uh in there but I made it that way so that everything that",
    "start": "634320",
    "end": "639959"
  },
  {
    "text": "can go wrong when implementing a Content security policy will go wrong right just",
    "start": "639959",
    "end": "645320"
  },
  {
    "text": "not to show you that content security policy is cumbersome no it's not if your application is built in a good way uh",
    "start": "645320",
    "end": "652040"
  },
  {
    "text": "but if you have a legacy application that's maybe you know shows its age then there might be some some uh some Loops",
    "start": "652040",
    "end": "659560"
  },
  {
    "text": "to jump through and I'll just you know show you uh what what needs to be done um the application is uh actually",
    "start": "659560",
    "end": "667639"
  },
  {
    "text": "implemented uh in a relatively simple fashion so I have a um I have an HTML",
    "start": "667639",
    "end": "675399"
  },
  {
    "text": "view here uh actually I'm I'm lifting the logo from uh from the venue where we are at from the Oslo Spectrum uh website",
    "start": "675399",
    "end": "683480"
  },
  {
    "text": "so I don't have to pay for pay for hosting right because I'm I'm stingy and also I thought you know I can I can up",
    "start": "683480",
    "end": "690480"
  },
  {
    "text": "the design a little bit by you know providing a little bit of color and and sizing it appropriately then I have the",
    "start": "690480",
    "end": "696480"
  },
  {
    "text": "placeholder for the output of the current time and then I'm loading a templating engine because Enterprise",
    "start": "696480",
    "end": "702200"
  },
  {
    "text": "applications do need templating engines and um then I'm loading some custom JavaScript code and uh that custom",
    "start": "702200",
    "end": "710240"
  },
  {
    "text": "JavaScript code essentially what it does is it is calling a microservice right",
    "start": "710240",
    "end": "715760"
  },
  {
    "text": "and then that microservice Returns the current time and then that current time is sent to the templating engine and",
    "start": "715760",
    "end": "721680"
  },
  {
    "text": "then the templating engine generates the HTML and then the HTML is injected into the page that's essentially what's",
    "start": "721680",
    "end": "728360"
  },
  {
    "text": "happening here so every 1,000 milliseconds uh a new request to my API",
    "start": "728360",
    "end": "736040"
  },
  {
    "text": "is sent we get the current time and then the uh the UI is uh is updated so that's",
    "start": "736040",
    "end": "744680"
  },
  {
    "text": "that's how uh things look like now if I'm if I if I'm naive and just say ah",
    "start": "744680",
    "end": "750279"
  },
  {
    "text": "you know I just work with a Content security policy here so uh we could just use default",
    "start": "750279",
    "end": "756959"
  },
  {
    "text": "SRC single quotes self right um which",
    "start": "756959",
    "end": "762440"
  },
  {
    "text": "just says Okay um load everything from the current origin only which you know",
    "start": "762440",
    "end": "767680"
  },
  {
    "text": "is a is a is a good start uh then uh if I refresh this we already see what what",
    "start": "767680",
    "end": "773240"
  },
  {
    "text": "has happened right the the image is gone the color is gone and most importantly",
    "start": "773240",
    "end": "778320"
  },
  {
    "text": "current time is smaller than before right which irritates me quite a bit oh yeah and and the current time isn't",
    "start": "778320",
    "end": "784160"
  },
  {
    "text": "there either um so what went wrong here and again if if you do it right content",
    "start": "784160",
    "end": "791279"
  },
  {
    "text": "security policy is if you ask me mandatory because it provides great cross scripting cross scripting abuse",
    "start": "791279",
    "end": "799040"
  },
  {
    "text": "protection I have to phrase this uh this carefully um but depending on the app",
    "start": "799040",
    "end": "806000"
  },
  {
    "text": "there might be some work involved to get the C security policy polic up and running it's easier than a new project",
    "start": "806000",
    "end": "811079"
  },
  {
    "text": "you just start with a Content security policy now what what went wrong here I mean there there are different reasons I",
    "start": "811079",
    "end": "817560"
  },
  {
    "text": "just would like to give you a glimpse in general it's of course a good idea to precisely know where your application is",
    "start": "817560",
    "end": "825160"
  },
  {
    "text": "loading resources from for business applications that's often easier because",
    "start": "825160",
    "end": "830800"
  },
  {
    "text": "maybe they're running in Internet so basically you have one origin only for publicly facing web apps that might be a",
    "start": "830800",
    "end": "837560"
  },
  {
    "text": "little bit different because you know the marketing team just while you were away for a week was sneaking in some",
    "start": "837560",
    "end": "843199"
  },
  {
    "text": "tracking pixels and then of course that means stuff is loaded from from a different origin so the content security",
    "start": "843199",
    "end": "849240"
  },
  {
    "text": "policy has to has to care for that or just marketing is wondering why you get",
    "start": "849240",
    "end": "854600"
  },
  {
    "text": "zero zero tracking uh but again different different discussion which you have to do internally now of course the",
    "start": "854600",
    "end": "861800"
  },
  {
    "text": "first glaring mistake is uh that oh I'm I'm loading the image from uh",
    "start": "861800",
    "end": "869839"
  },
  {
    "text": "from from a third party server that third party server is not part of our",
    "start": "869839",
    "end": "874920"
  },
  {
    "text": "content security policy because it's not self so we try to be as specific as possible so I'm allowing images from",
    "start": "874920",
    "end": "882320"
  },
  {
    "text": "self because I may have a fav icon and from everything within that folder right so that that would be would be a good",
    "start": "882320",
    "end": "888839"
  },
  {
    "text": "idea um and then if we try to reload the page again yeah the the image is there",
    "start": "888839",
    "end": "896320"
  },
  {
    "text": "but somehow the the beautiful golden rod color is is has gone still I'm getting",
    "start": "896320",
    "end": "901440"
  },
  {
    "text": "no time uh output so something is off and that leads me to the the the biggest",
    "start": "901440",
    "end": "907880"
  },
  {
    "text": "impact that a Content security policy may have uh at the at the content of of",
    "start": "907880",
    "end": "914759"
  },
  {
    "text": "your page and uh that is I mean what's what's the common denominator of the",
    "start": "914759",
    "end": "920040"
  },
  {
    "text": "things that do not work what doesn't work is the color possibly the size and",
    "start": "920040",
    "end": "926560"
  },
  {
    "text": "also the uh the size of the placeholder down there these are all inline Styles now by",
    "start": "926560",
    "end": "934360"
  },
  {
    "text": "default if you have a Content security policy that applies to stylesheets so",
    "start": "934360",
    "end": "940079"
  },
  {
    "text": "default SRC is set or there's a specific directive for stylesheets Guess once what it what it's called style SRC so if",
    "start": "940079",
    "end": "948000"
  },
  {
    "text": "one of those is set or both um then by default inline styles are disabled why are they disabled because",
    "start": "948000",
    "end": "956199"
  },
  {
    "text": "uh in Legacy browsers you could inject JavaScript code by stylesheets in modern browsers there are some hypothetical",
    "start": "956199",
    "end": "963480"
  },
  {
    "text": "proofs of Concepts where you can uh uh send send data from the page uh to to",
    "start": "963480",
    "end": "971800"
  },
  {
    "text": "somewhere else a key logger for instance I don't really believe in that because if you have a Content security policy it",
    "start": "971800",
    "end": "978000"
  },
  {
    "text": "just doesn't doesn't work but that there's a reason why why this was made this way so what does that mean well if",
    "start": "978000",
    "end": "984839"
  },
  {
    "text": "you have a modern application of course you don't have any inline Styles at all you have have your Styles in external",
    "start": "984839",
    "end": "990720"
  },
  {
    "text": "CSS files anyway uh but for older applications you may need to refactor",
    "start": "990720",
    "end": "997360"
  },
  {
    "text": "that um the other option or the other problem here is that the the JavaScript",
    "start": "997360",
    "end": "1004639"
  },
  {
    "text": "code um we are using is also of a very",
    "start": "1004639",
    "end": "1009920"
  },
  {
    "text": "very specific kind um and uh what the the JavaScript code here does is we are",
    "start": "1009920",
    "end": "1016240"
  },
  {
    "text": "calling set interval which isn't a problem right so this runs code uh every n milliseconds",
    "start": "1016240",
    "end": "1023800"
  },
  {
    "text": "and N is 1,000 here so once a second but we are providing the code as a string in",
    "start": "1023800",
    "end": "1029959"
  },
  {
    "text": "JavaScript that counts as a call to eval right so set interval set time out with",
    "start": "1029959",
    "end": "1035240"
  },
  {
    "text": "strings counts is this uh calling the eal function counts is this using new",
    "start": "1035240",
    "end": "1040720"
  },
  {
    "text": "function counts is this providing a uh sorting function as a string counts as",
    "start": "1040720",
    "end": "1046640"
  },
  {
    "text": "this so there are different uh different patterns this is also disabled so no inline",
    "start": "1046640",
    "end": "1052799"
  },
  {
    "text": "Styles no eval or similar in JavaScript and as a consequence of no inline Styles",
    "start": "1052799",
    "end": "1059280"
  },
  {
    "text": "also no inline JavaScript H and I mean let's look at the positive aspects",
    "start": "1059280",
    "end": "1066480"
  },
  {
    "text": "first if you have a Content security policy you can't if you have a cross scripting viability and attacker can't",
    "start": "1066480",
    "end": "1072320"
  },
  {
    "text": "inject script SRC HTTP other server.com well they could but the browser won't",
    "start": "1072320",
    "end": "1078120"
  },
  {
    "text": "load that res source so that Crosset scripting Vector closed it's gone if someone injects script alert one",
    "start": "1078120",
    "end": "1087080"
  },
  {
    "text": "yeah they can inject it but the code won't run because it's inline code so",
    "start": "1087080",
    "end": "1092360"
  },
  {
    "text": "crossed scripting solved thanks to browser support not thanks to our",
    "start": "1092360",
    "end": "1097559"
  },
  {
    "text": "Brilliance in making our application crossed scripting foolproof no the browser helped us",
    "start": "1097559",
    "end": "1103039"
  },
  {
    "text": "here but of course again Legacy applications what what what do you do and um I think um just to show you what",
    "start": "1103039",
    "end": "1110760"
  },
  {
    "text": "needs would need to be done let's have a look at uh at the values we can use for",
    "start": "1110760",
    "end": "1116440"
  },
  {
    "text": "those- SRC uh directives we can set it to Star well okay An Origin a u self",
    "start": "1116440",
    "end": "1123080"
  },
  {
    "text": "we've seen that and none so good news if you do script SRC that's the directive",
    "start": "1123080",
    "end": "1128320"
  },
  {
    "text": "for JavaScript code none then you won't have any crossy scripting issues you",
    "start": "1128320",
    "end": "1133720"
  },
  {
    "text": "also won't have any running JavaScript code in your application so this might be a downside depending on your applic",
    "start": "1133720",
    "end": "1139840"
  },
  {
    "text": "but still but of course there are some better things now how do you enable inline I mean enabling inline JavaScript",
    "start": "1139840",
    "end": "1147240"
  },
  {
    "text": "code means enabling Crosset scripting vulnerabilities that are present uh so",
    "start": "1147240",
    "end": "1152440"
  },
  {
    "text": "don't do that at all enabling inline Styles you know some Frameworks need that and at least in in in my usual",
    "start": "1152440",
    "end": "1160360"
  },
  {
    "text": "threat modeling uh that's not that big and issu so I accept it well it's not",
    "start": "1160360",
    "end": "1166400"
  },
  {
    "text": "called enable in line because that sounds so positive you have to think about what you're doing so the the value",
    "start": "1166400",
    "end": "1173120"
  },
  {
    "text": "has to be a prohibitive name so that people think twice before implementing that so that's why it's called unsafe",
    "start": "1173120",
    "end": "1179760"
  },
  {
    "text": "inline right so you have to type unsafe before you're re-enabling inline inline Styles don't do this for JavaScript just",
    "start": "1179760",
    "end": "1187919"
  },
  {
    "text": "do this for uh for stylesheets and only if we absolutely must well and then",
    "start": "1187919",
    "end": "1195960"
  },
  {
    "text": "unsafe eval to uh to Reen eval so we could we could try this out",
    "start": "1195960",
    "end": "1201280"
  },
  {
    "text": "real quick we have the time so let's go back to the content security policy and",
    "start": "1201280",
    "end": "1207120"
  },
  {
    "text": "then for stylesheets I enable self again because",
    "start": "1207120",
    "end": "1212760"
  },
  {
    "text": "you know I might have some CSS file and unsave Das inline because I can and",
    "start": "1212760",
    "end": "1219799"
  },
  {
    "text": "for JavaScript I also allow self and then",
    "start": "1219799",
    "end": "1226240"
  },
  {
    "text": "unsave eval now you may Wonder wait can't you just uh uh uh refactor your",
    "start": "1226240",
    "end": "1232480"
  },
  {
    "text": "code yeah I might but uh well we'll have a look at that so let's load it again and so now you see okay we still have",
    "start": "1232480",
    "end": "1241000"
  },
  {
    "text": "that uh that that graphic again the the the the styling Works everything but we",
    "start": "1241000",
    "end": "1248120"
  },
  {
    "text": "still got issues with the the the call to that to that endpoint and the display",
    "start": "1248120",
    "end": "1255080"
  },
  {
    "text": "of the time and there are several aspects to to that and there's one",
    "start": "1255080",
    "end": "1260360"
  },
  {
    "text": "problem and that problem is uh something you have to have on on On Your Horizon",
    "start": "1260360",
    "end": "1266720"
  },
  {
    "text": "there are several issues in here right so we don't have time to to discuss them all and fix everything but um I have a",
    "start": "1266720",
    "end": "1272960"
  },
  {
    "text": "third- party dependency here don't get me wrong uh that's I'm I'm not kind of you know uh complaining about that",
    "start": "1272960",
    "end": "1279840"
  },
  {
    "text": "specific templating engine that that that it's it's perfectly fine but just imagine the templating engine would be",
    "start": "1279840",
    "end": "1286240"
  },
  {
    "text": "used all over the place in your very complex application um that templating",
    "start": "1286240",
    "end": "1291440"
  },
  {
    "text": "engine is using new function internally so it is using eval now here in my",
    "start": "1291440",
    "end": "1297679"
  },
  {
    "text": "application I just could yank that out and do my own templating but uh if you can't in that case you really have to",
    "start": "1297679",
    "end": "1305000"
  },
  {
    "text": "enable evl again and then you have to really triple check whether all calls to evl and similar whether they only get",
    "start": "1305000",
    "end": "1312240"
  },
  {
    "text": "trusted data as a parameter here in my application that would work because I I have an endpoint that endpoint is under",
    "start": "1312240",
    "end": "1317960"
  },
  {
    "text": "my control the endpoint Returns the current time so that's digits and the colon so that that that would work in a",
    "start": "1317960",
    "end": "1324120"
  },
  {
    "text": "more complex application it's just much more difficult and you just have to be",
    "start": "1324120",
    "end": "1329600"
  },
  {
    "text": "aware of what your application is doing that's that's that's super important",
    "start": "1329600",
    "end": "1335880"
  },
  {
    "text": "where stuff is loaded from and if those dependencies do things that are not recommended uh any any longer right so",
    "start": "1335880",
    "end": "1343320"
  },
  {
    "text": "that that really is in a nutshell uh how content security policy kind of affects",
    "start": "1343320",
    "end": "1349840"
  },
  {
    "text": "an an application I mentioned it affects it in a good way because if there's a cross description viability it's hard to",
    "start": "1349840",
    "end": "1357279"
  },
  {
    "text": "exploit depends on how everything is set up but by all means try to implement it",
    "start": "1357279",
    "end": "1362440"
  },
  {
    "text": "but for a legacy application there might be more work and I mean the the elephant in the room is what if the Legacy",
    "start": "1362440",
    "end": "1369640"
  },
  {
    "text": "application has a lot of inline content especially inline JavaScript um we have",
    "start": "1369640",
    "end": "1374760"
  },
  {
    "text": "lot of net content obviously uh at this conference so uh some some older people in the room may have worked with uh",
    "start": "1374760",
    "end": "1381000"
  },
  {
    "text": "aspet web forms aspet web forms yeah laugh laugh for aspet web forms um spet",
    "start": "1381000",
    "end": "1387400"
  },
  {
    "text": "web forms uh what they did is they always output a specific block of JavaScript code the underscore uncore do",
    "start": "1387400",
    "end": "1393400"
  },
  {
    "text": "postp JavaScript functions yeah I see a few people nodding so you've been through this pain as well that's inline",
    "start": "1393400",
    "end": "1399480"
  },
  {
    "text": "code but you can't just do unsafe inline for for JavaScript code but how make do",
    "start": "1399480",
    "end": "1405799"
  },
  {
    "text": "we make this code running because that code was was Paramount for aspet web forms to work if you had a form on the",
    "start": "1405799",
    "end": "1412559"
  },
  {
    "text": "page there are two options uh one option is you uh you uh create a secret a",
    "start": "1412559",
    "end": "1419480"
  },
  {
    "text": "number used once and then in the content security policy you just use n nce",
    "start": "1419480",
    "end": "1425600"
  },
  {
    "text": "number once Dash I and then that random string of course it should be more",
    "start": "1425600",
    "end": "1431760"
  },
  {
    "text": "random and longer than abc1 123 but I only have that much space on the slide you put that in quent security policy",
    "start": "1431760",
    "end": "1437919"
  },
  {
    "text": "and instru the browser essentially okay wherever there is nons equals abc1 2",
    "start": "1437919",
    "end": "1444120"
  },
  {
    "text": "3 that code is allowed to run that inline code right so you can do that if",
    "start": "1444120",
    "end": "1450279"
  },
  {
    "text": "you control the script tag aspet web forms to stay with that example you",
    "start": "1450279",
    "end": "1456400"
  },
  {
    "text": "can't you don't control that specific scrip tag but there's a second option and that would work for aspet web forms",
    "start": "1456400",
    "end": "1463360"
  },
  {
    "text": "and of course in other scenarios if you don't control the script tag but you know exactly what the code will look",
    "start": "1463360",
    "end": "1468799"
  },
  {
    "text": "like because that underscore do Post method was predictable you just",
    "start": "1468799",
    "end": "1474600"
  },
  {
    "text": "calculate the hash of the content of that script tag and then you put the hash in the",
    "start": "1474600",
    "end": "1480279"
  },
  {
    "text": "content security policy something like this so you basically allow a specific",
    "start": "1480279",
    "end": "1485399"
  },
  {
    "text": "piece of code to run you can use sha 256 384 and 512 uh so a um at least as as of now a",
    "start": "1485399",
    "end": "1495000"
  },
  {
    "text": "collision with other valid JavaScript code is the probability is basically",
    "start": "1495000",
    "end": "1500520"
  },
  {
    "text": "zero um so you you you green light specific code only and that I think that",
    "start": "1500520",
    "end": "1507000"
  },
  {
    "text": "is that is a great outing for uh for legacy applications uh where you can",
    "start": "1507000",
    "end": "1513120"
  },
  {
    "text": "prevent at least some some kind of kind of refactoring and talking about um uh",
    "start": "1513120",
    "end": "1520120"
  },
  {
    "text": "before we before we finish off content security policy but you know it's such a complex thing and so so valuable so",
    "start": "1520120",
    "end": "1525240"
  },
  {
    "text": "that's why I spent uh quite an amount of time on that um especially for legacy applications",
    "start": "1525240",
    "end": "1530559"
  },
  {
    "text": "slapping on a Content security policy afterwards is is a good thing from a security perspective but maybe not such",
    "start": "1530559",
    "end": "1537120"
  },
  {
    "text": "a good thing uh from a ux perspective because you don't know whether you messed up whether you you know forgot",
    "start": "1537120",
    "end": "1542520"
  },
  {
    "text": "something and then on the production system somehow something does not work because the content security policy",
    "start": "1542520",
    "end": "1547960"
  },
  {
    "text": "makes the browser not load a resource or not run specific code so you want to",
    "start": "1547960",
    "end": "1553480"
  },
  {
    "text": "know if that happens and for that there's a reporting infrastructure there's a directive called report URI in",
    "start": "1553480",
    "end": "1559480"
  },
  {
    "text": "content security policy 3 that was renamed to report 2 but remember if you",
    "start": "1559480",
    "end": "1565480"
  },
  {
    "text": "only develop for Chrome feel free to use that but no we are using report URI so far um and that report URI uh directive",
    "start": "1565480",
    "end": "1574559"
  },
  {
    "text": "as a value just gets a URI and whenever there's a policy violations so a",
    "start": "1574559",
    "end": "1579799"
  },
  {
    "text": "resource can't be loaded thanks to content security policy or code won't run thanks to C security policy that URI",
    "start": "1579799",
    "end": "1587679"
  },
  {
    "text": "receives an a HTTP post request with information about that failed code or failed resource load uh as the payload",
    "start": "1587679",
    "end": "1596000"
  },
  {
    "text": "right so you get an API call when something goes wrong and I mean what are what are the only two",
    "start": "1596000",
    "end": "1603520"
  },
  {
    "text": "reasons I can't come up with more two reasons for policy violation reason number",
    "start": "1603520",
    "end": "1608640"
  },
  {
    "text": "one you forgot something right that tracking provider server that the",
    "start": "1608640",
    "end": "1613919"
  },
  {
    "text": "marketing team uh implemented last week and what's the second reason for policy violation you have a cross- scripting",
    "start": "1613919",
    "end": "1620520"
  },
  {
    "text": "vulnerability and someone tries to exploit it these are two things you want to know so yeah uh by all means uh use",
    "start": "1620520",
    "end": "1628279"
  },
  {
    "text": "the reporting directive and uh there's a a second header it's called C security",
    "start": "1628279",
    "end": "1633320"
  },
  {
    "text": "policy report only and it does exactly what the name suggests um it",
    "start": "1633320",
    "end": "1640159"
  },
  {
    "text": "uh reports a policy violation to that end point you set up but it doesn't",
    "start": "1640159",
    "end": "1645480"
  },
  {
    "text": "enforce the content security policy so your application runs as if there was no content security policy so if you slap a",
    "start": "1645480",
    "end": "1652120"
  },
  {
    "text": "Content security policy on an existing uh application on the production server use content security policy report only",
    "start": "1652120",
    "end": "1658240"
  },
  {
    "text": "at first and then you know let your customers use the application for a couple of weeks and then check whether",
    "start": "1658240",
    "end": "1665200"
  },
  {
    "text": "there are any policy violations if there are fix the policy or fix the code and if there are no more",
    "start": "1665200",
    "end": "1671640"
  },
  {
    "text": "violations enforce the content security policy so this works a great deal um",
    "start": "1671640",
    "end": "1678200"
  },
  {
    "text": "there is one kind of outlier here and that that is single page applications",
    "start": "1678200",
    "end": "1683279"
  },
  {
    "text": "because in single page applications uh a common common trend is",
    "start": "1683279",
    "end": "1688840"
  },
  {
    "text": "that uh everything runs in the browser so you load the spa framework The Spar framework then is comes from self so the",
    "start": "1688840",
    "end": "1696039"
  },
  {
    "text": "C of security policy doesn't protect you there and then for some reason there is dbased crossed scripting so the logic",
    "start": "1696039",
    "end": "1703679"
  },
  {
    "text": "takes data from I don't know maybe from the URL the hash I don't know applies it to the page boom you have crossed",
    "start": "1703679",
    "end": "1710679"
  },
  {
    "text": "scripting ah so what do you do against that and there is something that",
    "start": "1710679",
    "end": "1715840"
  },
  {
    "text": "eventually will will help us here for single page applications the basic sync for for cross scripting attacks is if",
    "start": "1715840",
    "end": "1723240"
  },
  {
    "text": "data is written to Inner HTML there are other options as well but the inner HTML property is basically where most of the",
    "start": "1723240",
    "end": "1730480"
  },
  {
    "text": "attacks happen you have some payload that payload is written into the Dom is interpreted as HTML and could be",
    "start": "1730480",
    "end": "1737320"
  },
  {
    "text": "JavaScript code right now there is something called a trusted types API bad news first if you",
    "start": "1737320",
    "end": "1745880"
  },
  {
    "text": "look at the standard the the people leading that effort they all work for for one company",
    "start": "1745880",
    "end": "1752799"
  },
  {
    "text": "the standard is not done yet so what does that mean Chrome uh Edge Opera they",
    "start": "1752799",
    "end": "1758559"
  },
  {
    "text": "support this other browsers don't yet still apply it because the those other",
    "start": "1758559",
    "end": "1765039"
  },
  {
    "text": "browsers will just ignore uh that feature and and it looks like this we use a Content security policy again and",
    "start": "1765039",
    "end": "1771240"
  },
  {
    "text": "there is a new directive called require trusted types 4 there's only one valid",
    "start": "1771240",
    "end": "1777039"
  },
  {
    "text": "value and that one valid value is script so essentially what that does is you",
    "start": "1777039",
    "end": "1782799"
  },
  {
    "text": "can't write strings to the inner HTML property it just uh it just won't work",
    "start": "1782799",
    "end": "1791279"
  },
  {
    "text": "um so uh actually I think I have an example here uh so let's just say say I",
    "start": "1791279",
    "end": "1798440"
  },
  {
    "text": "have here some text and I'd like to write this to in HTML so that works um",
    "start": "1798440",
    "end": "1805519"
  },
  {
    "text": "and uh essentially what uh this means that I",
    "start": "1805519",
    "end": "1811720"
  },
  {
    "text": "I could try Crosset scripting here so how about image SRC equals NDC on error",
    "start": "1811720",
    "end": "1817919"
  },
  {
    "text": "equals alert one right so so so you know script Kitty crossed scripting and",
    "start": "1817919",
    "end": "1823200"
  },
  {
    "text": "writing that to inter HTML means oh we had crossed scripting here now if you go",
    "start": "1823200",
    "end": "1828799"
  },
  {
    "text": "to the uh to the source code here and uh forgive me for just preparing this so we",
    "start": "1828799",
    "end": "1835600"
  },
  {
    "text": "do save some time if if I add this content security policy header this I can also use via meter tag uh which",
    "start": "1835600",
    "end": "1842679"
  },
  {
    "text": "which was faster here and reload this and if I tried to write something to in HTML now um it worked here when I output",
    "start": "1842679",
    "end": "1851320"
  },
  {
    "text": "the text but here when we have the uh the the rendered the rendered code it",
    "start": "1851320",
    "end": "1856679"
  },
  {
    "text": "did not work why because in the console um and I hope you can see that uh it",
    "start": "1856679",
    "end": "1863600"
  },
  {
    "text": "said fail to set the in HML property this document requires trusted HTML assignment yeah because thanks to",
    "start": "1863600",
    "end": "1870960"
  },
  {
    "text": "activating that trusted type mode I cannot write strings to H inner HTML I can only write trusted strings to Inner",
    "start": "1870960",
    "end": "1879159"
  },
  {
    "text": "HTML and yes of course you could create a lube and then convert every string into a trusted string but at least you",
    "start": "1879159",
    "end": "1884679"
  },
  {
    "text": "know this makes you think should I really write verbatim strings into into in HTML and the typical pattern uh which",
    "start": "1884679",
    "end": "1891279"
  },
  {
    "text": "you could then use would be this um so you could use the very very extent D",
    "start": "1891279",
    "end": "1896559"
  },
  {
    "text": "purify Library which has a sanitize method so you take some input and it just turns this into harmless HTML and",
    "start": "1896559",
    "end": "1903600"
  },
  {
    "text": "you can configure it so that instead of returning a harmless HTML string it returns a harmless trusted HTML string",
    "start": "1903600",
    "end": "1910799"
  },
  {
    "text": "right um and so if you do this uh so this would be the button on the right so",
    "start": "1910799",
    "end": "1915919"
  },
  {
    "text": "let's just try image SRC equals NDC again on error equals alert of two maybe",
    "start": "1915919",
    "end": "1923559"
  },
  {
    "text": "this time and uh now you see that Dom",
    "start": "1923559",
    "end": "1929120"
  },
  {
    "text": "purify kind of sanitized the input so it got rid of the JavaScript the events",
    "start": "1929120",
    "end": "1935080"
  },
  {
    "text": "Handler and then this was indeed written to in HTML I mean I have no image here called NDC but you you see that the",
    "start": "1935080",
    "end": "1941399"
  },
  {
    "text": "browser now tried to render an image okay and chromium base browsers only at",
    "start": "1941399",
    "end": "1947360"
  },
  {
    "text": "the moment but for single page applications this can also be a game changer to really get um Crosset",
    "start": "1947360",
    "end": "1952840"
  },
  {
    "text": "scripting uh under control so uh I encourage you uh to uh to take a",
    "start": "1952840",
    "end": "1961279"
  },
  {
    "text": "specific look at that and consider implementing it uh in your in your",
    "start": "1961279",
    "end": "1966559"
  },
  {
    "text": "applications there is another aspect and that was kind of embedded into the example here but I didn't point it out",
    "start": "1966559",
    "end": "1973080"
  },
  {
    "text": "and that's uh sub resource Integrity another browser security feature so you",
    "start": "1973080",
    "end": "1978559"
  },
  {
    "text": "can you if you load JavaScript from a CDN or if you have a cdci infrastructure",
    "start": "1978559",
    "end": "1983960"
  },
  {
    "text": "and want to make sure that uh no one injects in in in in in that uh in that",
    "start": "1983960",
    "end": "1989480"
  },
  {
    "text": "infrastructure injects some some alien code as part of the process um you can set the Integrity attribute when loading",
    "start": "1989480",
    "end": "1995919"
  },
  {
    "text": "resources like JavaScript to a hash of the expected content especially if you",
    "start": "1995919",
    "end": "2001519"
  },
  {
    "text": "pull JavaScript from a CDN if someone takes over this CDN they might be able to inject arbitrary code into your page",
    "start": "2001519",
    "end": "2009039"
  },
  {
    "text": "unless uh you tell them not to and uh you could see that right here so I was",
    "start": "2009039",
    "end": "2014200"
  },
  {
    "text": "I'm having two dependencies here bootstrap for the layout quote unquote and the D puf library and you see that I",
    "start": "2014200",
    "end": "2021120"
  },
  {
    "text": "just provide the Sha 512 hash for D purify and the sh 384 hash for for",
    "start": "2021120",
    "end": "2028639"
  },
  {
    "text": "bootstrap and so if someone something would change on that server I'm pulling",
    "start": "2028639",
    "end": "2034799"
  },
  {
    "text": "that from that Integrity uh Val you that hash would not match the actual content",
    "start": "2034799",
    "end": "2040720"
  },
  {
    "text": "of the page so things would not load super simple but super effective and of",
    "start": "2040720",
    "end": "2047919"
  },
  {
    "text": "course it's even better if you don't load anything from a third party CDN because then you have a single point of",
    "start": "2047919",
    "end": "2053358"
  },
  {
    "text": "failure there um but if you do at least uh with that you can make sure that you",
    "start": "2053359",
    "end": "2058878"
  },
  {
    "text": "get the content you are actually uh",
    "start": "2058879",
    "end": "2064079"
  },
  {
    "text": "expecting um the next thread I'd like to discuss is Cookie hijacking if you know",
    "start": "2064079",
    "end": "2070440"
  },
  {
    "text": "read on the web often it's medium articles about about threats especially about cross scripting threats uh",
    "start": "2070440",
    "end": "2076960"
  },
  {
    "text": "everyone says yeah with crossed scripting you can steal cookies now have good news and bad news in the same",
    "start": "2076960",
    "end": "2083679"
  },
  {
    "text": "sentence if you have crossed scripting cookie hijacking ain't a problem these",
    "start": "2083679",
    "end": "2088878"
  },
  {
    "text": "days it just isn't uh because cookies can be secured the bad news is if you",
    "start": "2088879",
    "end": "2094960"
  },
  {
    "text": "have cross scripting you still have problems lots of problems but cookie hijacking isn't it so cookies uh cannot",
    "start": "2094960",
    "end": "2101880"
  },
  {
    "text": "uh really be stolen I mean we have to protect our cookies because often they contain sensitive information such as a",
    "start": "2101880",
    "end": "2108079"
  },
  {
    "text": "session ID um so we need to protect them and there are ways to do that um the",
    "start": "2108079",
    "end": "2114440"
  },
  {
    "text": "original cookie specification that Netscape put up in 1994 I believe here's an archived",
    "start": "2114440",
    "end": "2121079"
  },
  {
    "text": "version um looked like this so this was taken verbatim from the spec so we have",
    "start": "2121079",
    "end": "2128320"
  },
  {
    "text": "set cookie as the HP header to set a cookie couple of metadata and the last one is the secure flag even then they",
    "start": "2128320",
    "end": "2135720"
  },
  {
    "text": "thought about maybe we don't want cookies to be stolen at least at transport so we can save them or secure",
    "start": "2135720",
    "end": "2142800"
  },
  {
    "text": "them at transport by using the secure flag secure flag says this cookie can",
    "start": "2142800",
    "end": "2147839"
  },
  {
    "text": "only be sent back and forth um if a",
    "start": "2147839",
    "end": "2153319"
  },
  {
    "text": "secure transport mechanism is used so that means https for our web application",
    "start": "2153319",
    "end": "2159200"
  },
  {
    "text": "so if if you have a cookie a session cookie and then someone goes to http colon dubd NDC ow.com that cookie will",
    "start": "2159200",
    "end": "2167240"
  },
  {
    "text": "not be sent because it's not https so cookie theft uh can pre prevented like",
    "start": "2167240",
    "end": "2173040"
  },
  {
    "text": "this so we can secure cookies at transport can we also secure cookies at rest because we have we have cross side",
    "start": "2173040",
    "end": "2179839"
  },
  {
    "text": "scripting right and uh if you have cross- scripting uh we can uh I don't",
    "start": "2179839",
    "end": "2185240"
  },
  {
    "text": "know um we can inject some JavaScript code and the JavaScript code then might",
    "start": "2185240",
    "end": "2191240"
  },
  {
    "text": "access document.cookie and we see oh wait there are zero",
    "start": "2191240",
    "end": "2196359"
  },
  {
    "text": "cookies but I'm pretty sure that the application is using cookies well because there's another thing originated",
    "start": "2196359",
    "end": "2202400"
  },
  {
    "text": "in I8 but now works in all browsers it's the HTTP only flag for cookies HTTP only",
    "start": "2202400",
    "end": "2211400"
  },
  {
    "text": "protects cookies from JavaScript seeing them and I mean in most if not all cases",
    "start": "2211400",
    "end": "2217680"
  },
  {
    "text": "there are zero reasons why JavaScript should be able to access cookies because that's an HTP feature that the browser",
    "start": "2217680",
    "end": "2224240"
  },
  {
    "text": "kind of uh manages uh together with the server and therefore JavaScript does not",
    "start": "2224240",
    "end": "2229359"
  },
  {
    "text": "need to see this just by applying that HTTP only flag JavaScript doesn't see that cookie the proof oft concept that",
    "start": "2229359",
    "end": "2235920"
  },
  {
    "text": "JavaScript can somehow get access to that cookie if the trace HTTP method is activated at the server but chances are",
    "start": "2235920",
    "end": "2243839"
  },
  {
    "text": "it isn't right so that is pretty pretty nice um and mod browsers also support a",
    "start": "2243839",
    "end": "2249520"
  },
  {
    "text": "relatively new feature cookie prefixes if the name of a cookie starts with theore uncore host um then it's",
    "start": "2249520",
    "end": "2257839"
  },
  {
    "text": "impossible to inject a cookie that sets the domain flag of that cookie which is",
    "start": "2257839",
    "end": "2262920"
  },
  {
    "text": "also a nice attack so that the cookie could then be sent somewhere else if the",
    "start": "2262920",
    "end": "2267960"
  },
  {
    "text": "name of the cookie is prefixed with underscore under secure then that cookie needs to have the secure flag if it",
    "start": "2267960",
    "end": "2275560"
  },
  {
    "text": "doesn't it's rejected right so by setting those two flags by",
    "start": "2275560",
    "end": "2280960"
  },
  {
    "text": "applying the secure header and by applying as the secure flag and by applying the HTP only the flag your",
    "start": "2280960",
    "end": "2287160"
  },
  {
    "text": "cookies have a solid security posture right and that's why cookie theft is is",
    "start": "2287160",
    "end": "2294839"
  },
  {
    "text": "not a problem the the the actual problem these days is if uh if single page applications do authentication and they",
    "start": "2294839",
    "end": "2301560"
  },
  {
    "text": "they have a token and the token is stored in local storage local storage is a JavaScript",
    "start": "2301560",
    "end": "2308000"
  },
  {
    "text": "API so if you have crossed scripting that value is gone that can't be protected like this still with a CED",
    "start": "2308000",
    "end": "2314480"
  },
  {
    "text": "security policy you might make it super hard to send the token to somewhere else",
    "start": "2314480",
    "end": "2319599"
  },
  {
    "text": "but but still right so um uh even for a single page applications don't uh don't",
    "start": "2319599",
    "end": "2325200"
  },
  {
    "text": "use local storage for your tokens loose use the BFF pattern for instance now we've seen that we can",
    "start": "2325200",
    "end": "2331119"
  },
  {
    "text": "secure cookies by uh making restricting them to secure connections um is there a",
    "start": "2331119",
    "end": "2337599"
  },
  {
    "text": "way to force the browser to use secure connections all over the place there are a couple of options uh the arguably best",
    "start": "2337599",
    "end": "2344400"
  },
  {
    "text": "option so far is called HTTP strict Transport Security it's an ietf standard",
    "start": "2344400",
    "end": "2351000"
  },
  {
    "text": "this time and uh manifests in an HTP header called strict-transport-security",
    "start": "2351000",
    "end": "2356319"
  },
  {
    "text": "which the server sends as a HTTP header and instructs the browser next time you",
    "start": "2356319",
    "end": "2362200"
  },
  {
    "text": "are talking to me right it's it's like bad parenting next time you're talking to me use",
    "start": "2362200",
    "end": "2368920"
  },
  {
    "text": "https and browsers comply um you have to set a",
    "start": "2368920",
    "end": "2374720"
  },
  {
    "text": "couple of options so for how long shall the browser comply half a year a year two years and should this also apply to",
    "start": "2374720",
    "end": "2382079"
  },
  {
    "text": "uh to all subdomains uh both are good options I would say and if that is set",
    "start": "2382079",
    "end": "2388400"
  },
  {
    "text": "and a user then try say if NDC ow.com would set that and uh a user tries to uh",
    "start": "2388400",
    "end": "2394119"
  },
  {
    "text": "uh Go to http colon and os.com the browser would automatically make an htps",
    "start": "2394119",
    "end": "2401000"
  },
  {
    "text": "request instead so if you do this only the very very first HTTP request could",
    "start": "2401000",
    "end": "2407040"
  },
  {
    "text": "be plain htttp unsecured all future requests will be https you don't want to",
    "start": "2407040",
    "end": "2413640"
  },
  {
    "text": "do this maybe on your local death system because you know Local Host certificates yada yada yada but on all publicly",
    "start": "2413640",
    "end": "2420800"
  },
  {
    "text": "available service that's what you want uh to use also web browsers these days",
    "start": "2420800",
    "end": "2428520"
  },
  {
    "text": "have a um have a built-in uh security um",
    "start": "2428520",
    "end": "2437280"
  },
  {
    "text": "mechanism uh in terms as there is a list of domains for which strict Transport",
    "start": "2437280",
    "end": "2443640"
  },
  {
    "text": "Security is enabled by default and here on that website you can",
    "start": "2443640",
    "end": "2449119"
  },
  {
    "text": "add your own domain to that list so with the next browser update a strict transfer security is already on so even",
    "start": "2449119",
    "end": "2455720"
  },
  {
    "text": "the very very first HTP this a secured one so just type in NC ole.com for",
    "start": "2455720",
    "end": "2462560"
  },
  {
    "text": "instance and they say yeah please add me well uh turns out something didn't",
    "start": "2462560",
    "end": "2468960"
  },
  {
    "text": "work when going to NDC oo.com so uh I know it wasn't me um but uh some",
    "start": "2468960",
    "end": "2476359"
  },
  {
    "text": "prerequisites have been met and I tried this before of course so uh and there's one prerequisite and also did not meet",
    "start": "2476359",
    "end": "2482160"
  },
  {
    "text": "maybe intentionally uh but if you meet those prerequisites you can set your own side on that list and then and it's",
    "start": "2482160",
    "end": "2487720"
  },
  {
    "text": "https forever which if you ask me is a fantastic",
    "start": "2487720",
    "end": "2493839"
  },
  {
    "text": "thing yeah oh did I misspell n DC also.com yeah why didn't",
    "start": "2493839",
    "end": "2500359"
  },
  {
    "text": "they get that domain I mean seriously cyber SARS oh I have to tell them thank",
    "start": "2500359",
    "end": "2505599"
  },
  {
    "text": "you very much yeah so one of the prerequisites is missing uh you have to provide a",
    "start": "2505599",
    "end": "2511960"
  },
  {
    "text": "directive in the header yes I want on that preload list and they didn't do that or didn't want it right not a",
    "start": "2511960",
    "end": "2517040"
  },
  {
    "text": "problem but uh yeah that's so that that is that is reason thanks uh thanks again another attack where people tell me ah",
    "start": "2517040",
    "end": "2524839"
  },
  {
    "text": "no one no one that's not happening anymore it's cross request forgery um but again looking at CV",
    "start": "2524839",
    "end": "2532000"
  },
  {
    "text": "details.com you see that chart goes here till 1,500 for cross scripting was 6,000",
    "start": "2532000",
    "end": "2537839"
  },
  {
    "text": "so right factor of four but still double the number here and you'll see we will get a new record here uh this this year",
    "start": "2537839",
    "end": "2545400"
  },
  {
    "text": "so cross request forgery uh is often uh going like this an attacker prompts your",
    "start": "2545400",
    "end": "2553319"
  },
  {
    "text": "browser to send an HTP request to an application you're already logged into that application have a session cookie",
    "start": "2553319",
    "end": "2559520"
  },
  {
    "text": "and the the the yeka redirects you basically there and on that request to",
    "start": "2559520",
    "end": "2564800"
  },
  {
    "text": "that other website all your cookies of that website of that application including the one with the session ID",
    "start": "2564800",
    "end": "2570200"
  },
  {
    "text": "are automatically sent that's how cookies work uh a little bit simplified",
    "start": "2570200",
    "end": "2575240"
  },
  {
    "text": "doing a request to NDC a sends all the NDC aal.com cookies alongside that",
    "start": "2575240",
    "end": "2580640"
  },
  {
    "text": "request right and so Crosser request 4G is is uh a dangerous thing the situation",
    "start": "2580640",
    "end": "2586520"
  },
  {
    "text": "got a little bit better yes I know the numbers don't show that but uh all of the Frameworks including ASP core they",
    "start": "2586520",
    "end": "2592920"
  },
  {
    "text": "have built-in crossed request for protection now even with uh uh ASP core",
    "start": "2592920",
    "end": "2598119"
  },
  {
    "text": "8 even for minimal apis there's a anti cross side request 4G middleware",
    "start": "2598119",
    "end": "2604400"
  },
  {
    "text": "um and you can you know prevent this with the use of uh of of uh onetime use",
    "start": "2604400",
    "end": "2610760"
  },
  {
    "text": "only tokens in in the forms etc etc but still web browser teams decided we need",
    "start": "2610760",
    "end": "2618800"
  },
  {
    "text": "to do something against this and what they came up with is something with a weird name so apologies for that it's",
    "start": "2618800",
    "end": "2624599"
  },
  {
    "text": "called samide cookies yeah it is called samide cookies but I would prefer that they called the",
    "start": "2624599",
    "end": "2632599"
  },
  {
    "text": "the the API so to speak we need to use cross site and not same site let me let let me explain um there is a new flag",
    "start": "2632599",
    "end": "2641040"
  },
  {
    "text": "well relatively new flag now for cookies it's called same site and the same site",
    "start": "2641040",
    "end": "2648800"
  },
  {
    "text": "flag dictates the cross-site behavior of those cookies confusing yeah I know so",
    "start": "2648800",
    "end": "2656359"
  },
  {
    "text": "what is a cross-side request in my browser I am on a.com maybe like attacker and from there I'm sending a",
    "start": "2656359",
    "end": "2663920"
  },
  {
    "text": "request to b.com by being redirected by submitting a form clicking on the link whatever in",
    "start": "2663920",
    "end": "2670960"
  },
  {
    "text": "the old days well for the last 30 years essentially um that request to b.com",
    "start": "2670960",
    "end": "2677200"
  },
  {
    "text": "would send all b.com cookies hypothetically allowing cross request forgery now with the same side flag you",
    "start": "2677200",
    "end": "2684319"
  },
  {
    "text": "can restrict that so when there's a crossy request a.com in the browser request to b.com then there are three",
    "start": "2684319",
    "end": "2691319"
  },
  {
    "text": "options I'll start with the last one none none means not not that the cookie is not sent no no that's why it's so",
    "start": "2691319",
    "end": "2697720"
  },
  {
    "text": "confusing none means no protection so the cookie is sent just like in",
    "start": "2697720",
    "end": "2703319"
  },
  {
    "text": "1994 lacks means for that Crosset request yeah cookies are sent but only",
    "start": "2703319",
    "end": "2708480"
  },
  {
    "text": "if it's a request that according to the rest principle doesn't change the state of the application get had like Google",
    "start": "2708480",
    "end": "2717480"
  },
  {
    "text": "search result page going to your site yeah if there's already a session open you may want to recognize the user so",
    "start": "2717480",
    "end": "2723640"
  },
  {
    "text": "that works it's a get request but for post put delete patch for those uh the",
    "start": "2723640",
    "end": "2732079"
  },
  {
    "text": "cookie not sent so if you have cross request forgery it may not be exploitable",
    "start": "2732079",
    "end": "2738119"
  },
  {
    "text": "because on that Forge request if it's a post request which is often the case",
    "start": "2738119",
    "end": "2743280"
  },
  {
    "text": "there's no cookie send alongside if the same side level has been set to LAX strict is even better strict means if",
    "start": "2743280",
    "end": "2750480"
  },
  {
    "text": "there's a cross side request the cookie is just not sent the cookie is just not sent even for a get request",
    "start": "2750480",
    "end": "2757839"
  },
  {
    "text": "and that can be a good defense and death uh strategy against cross request fory",
    "start": "2757839",
    "end": "2762880"
  },
  {
    "text": "so no excuse for not having this onetime token in your forms Etc but defense and death like quent security policy is",
    "start": "2762880",
    "end": "2769559"
  },
  {
    "text": "defense and death there's one catch though and that catches it's called same",
    "start": "2769559",
    "end": "2775440"
  },
  {
    "text": "site it's not same origin so what is same site same site is I think e tldd",
    "start": "2775440",
    "end": "2781359"
  },
  {
    "text": "plus one so it would be NDC oo.com or uh I don't know uh",
    "start": "2781359",
    "end": "2790160"
  },
  {
    "text": "google.co.uk so DDD NC ole.com api. NDC",
    "start": "2790160",
    "end": "2795280"
  },
  {
    "text": "oo.com and public bea. oo NDC oo.com they would",
    "start": "2795280",
    "end": "2801440"
  },
  {
    "text": "all be the same site so if you have a cross- out scripting vulnerability on beta. NC",
    "start": "2801440",
    "end": "2809680"
  },
  {
    "text": "oo.com that code could send an HTP request to api.",
    "start": "2810200",
    "end": "2815720"
  },
  {
    "text": "nca.com and since this is same considered same site cookies would be sent alongside",
    "start": "2815720",
    "end": "2821480"
  },
  {
    "text": "that request if uh uh no matter of the same site setting right so make sure you",
    "start": "2821480",
    "end": "2828359"
  },
  {
    "text": "have solid cross scripting protection on the whole site even on those forgotten",
    "start": "2828359",
    "end": "2833520"
  },
  {
    "text": "Legacy systems one more reason to you know precisely know uh no know your",
    "start": "2833520",
    "end": "2838720"
  },
  {
    "text": "assets the the assets you're using um there is another attack and uh that uh",
    "start": "2838720",
    "end": "2845359"
  },
  {
    "text": "is uh is is harder to pull off and that's why I think it's super uh super",
    "start": "2845359",
    "end": "2850400"
  },
  {
    "text": "dangerous and uh that is uh that is Click checking so click checking essentially means I have a page with a",
    "start": "2850400",
    "end": "2858200"
  },
  {
    "text": "button and uh I want the user to click on that button so it could be in an",
    "start": "2858200",
    "end": "2863839"
  },
  {
    "text": "internal system the user can delete something I can't but my Victim can so I",
    "start": "2863839",
    "end": "2870920"
  },
  {
    "text": "lure the user to a site or a web page where the application with the button is",
    "start": "2870920",
    "end": "2877280"
  },
  {
    "text": "in an iframe I make this invisible using CSS but the iframe is there and then if the",
    "start": "2877280",
    "end": "2883240"
  },
  {
    "text": "user clicks on the page the user actually clicks on the button in the ey frame uh and uh carrying out that that",
    "start": "2883240",
    "end": "2890599"
  },
  {
    "text": "action right um I have an example here but for the sake of time let's not look into that I think the the description uh",
    "start": "2890599",
    "end": "2897400"
  },
  {
    "text": "is is good enough here so the problem is that our",
    "start": "2897400",
    "end": "2902480"
  },
  {
    "text": "application can be loaded in an if frame in an iframe on another site right that is a problem but once again",
    "start": "2902480",
    "end": "2909960"
  },
  {
    "text": "browsers come to our rescue I mean you know we could write JavaScript code and find out are we in a frame or not but",
    "start": "2909960",
    "end": "2916280"
  },
  {
    "text": "let's just the browser do it once again I8 introduced something the X frame options HTTP header which basically says",
    "start": "2916280",
    "end": "2923760"
  },
  {
    "text": "so this page must not be loaded into um into an i frame uh or in a frame if it",
    "start": "2923760",
    "end": "2932240"
  },
  {
    "text": "is set to deny that means absolutely don't load it in if frame you can also",
    "start": "2932240",
    "end": "2937440"
  },
  {
    "text": "say same origin yeah loaded in if frame but only if the page with the iframe has",
    "start": "2937440",
    "end": "2942680"
  },
  {
    "text": "the same origin as the page in the if frame that's of course a little bit limiting so on NDC ael.com you would not",
    "start": "2942680",
    "end": "2949480"
  },
  {
    "text": "be able to load um something from widget. NDC ael.com in an i frame if you",
    "start": "2949480",
    "end": "2957280"
  },
  {
    "text": "need more flexibility ditch that header because we have a Content security policy now anyway right everyone will",
    "start": "2957280",
    "end": "2963040"
  },
  {
    "text": "have one after this talk and uh just set the frame answer this directive where you can basically provide a list of",
    "start": "2963040",
    "end": "2971200"
  },
  {
    "text": "Origins that may be loaded in in that uh in the diaph frame all right uh there",
    "start": "2971200",
    "end": "2977839"
  },
  {
    "text": "are a few more and uh what what I'd like to uh discover next is uh data leakage",
    "start": "2977839",
    "end": "2984960"
  },
  {
    "text": "via referer so there is this HTTP header referer written with one R because there",
    "start": "2984960",
    "end": "2990920"
  },
  {
    "text": "was a typo in the HTTP 0.9 specification and we are always backwards compatible right so that's why that head is always",
    "start": "2990920",
    "end": "2997559"
  },
  {
    "text": "misspelled uh but yeah right right uh typo right would be refer with dou r and",
    "start": "2997559",
    "end": "3003880"
  },
  {
    "text": "refer policy is a w3c almost well it's a",
    "start": "3003880",
    "end": "3009240"
  },
  {
    "text": "bit difficult it is a candidate recommendation so one step before a standard since",
    "start": "3009240",
    "end": "3015920"
  },
  {
    "text": "2017 but there's also an editor draft that was updated last last December so they're still discussing which features",
    "start": "3015920",
    "end": "3023880"
  },
  {
    "text": "which browser wants to implement or not so a lot of politics going on but the idea is like this the server sends an",
    "start": "3023880",
    "end": "3030599"
  },
  {
    "text": "HTP header uh refer A- policy and then basically says this referal header which",
    "start": "3030599",
    "end": "3037000"
  },
  {
    "text": "contains the your the current URL so if you click on a link on a.com to b.com",
    "start": "3037000",
    "end": "3042880"
  },
  {
    "text": "the referral header would contain the a.com URL and send it to b.com so uh if",
    "start": "3042880",
    "end": "3048640"
  },
  {
    "text": "you have an secret intrnet and have links to arbitrary websites in there the",
    "start": "3048640",
    "end": "3054760"
  },
  {
    "text": "URL of your secret internet interet might leak by clicking on those links thanks to the referral header so you can",
    "start": "3054760",
    "end": "3060640"
  },
  {
    "text": "basically say things like yeah um just set just set the referral",
    "start": "3060640",
    "end": "3066640"
  },
  {
    "text": "header if the target is the same origin as where we are currently at right and there there several other options not",
    "start": "3066640",
    "end": "3072680"
  },
  {
    "text": "all of them are supported in all browsers uh but things like origin or my favorite no referral I don't need the",
    "start": "3072680",
    "end": "3079040"
  },
  {
    "text": "referral the marketing team sometimes needs the referral to calculate the path through our application so maybe",
    "start": "3079040",
    "end": "3085400"
  },
  {
    "text": "something like same origin would work um uh and origin just send the origin but",
    "start": "3085400",
    "end": "3090720"
  },
  {
    "text": "not the the the full path so you can really kind of narrow down what is being",
    "start": "3090720",
    "end": "3096359"
  },
  {
    "text": "sent if something is sent at all and as as many of of those things we discussed",
    "start": "3096359",
    "end": "3102440"
  },
  {
    "text": "um I think it's uh it's very collo what I'm saying but I think how how does the",
    "start": "3102440",
    "end": "3107760"
  },
  {
    "text": "saying go a lot of bang for the buck right so often very little effort you",
    "start": "3107760",
    "end": "3113079"
  },
  {
    "text": "add a header relatively trivial to implement probably no side effects but",
    "start": "3113079",
    "end": "3118799"
  },
  {
    "text": "the security posture of your application just immediately got better with just you know half an hour of work and uh",
    "start": "3118799",
    "end": "3124480"
  },
  {
    "text": "referal policy one of those there are some other headers where you could debate how much uh uh how much gain you",
    "start": "3124480",
    "end": "3132160"
  },
  {
    "text": "get from them but still I'd like to mention a few of them so there's uh there was something called feature",
    "start": "3132160",
    "end": "3138280"
  },
  {
    "text": "policy which was an uh HTP header which",
    "start": "3138280",
    "end": "3143440"
  },
  {
    "text": "could restrict which apis the JavaScript code in an application was allowed to",
    "start": "3143440",
    "end": "3148480"
  },
  {
    "text": "use so whether for instance GE location was could be used or camera access or USB access stuff like that if you're a",
    "start": "3148480",
    "end": "3155960"
  },
  {
    "text": "big application but you can't control all of the content in the application this this might be an option this was no",
    "start": "3155960",
    "end": "3162280"
  },
  {
    "text": "depricated so I think Firefox still supports select parts of that and the",
    "start": "3162280",
    "end": "3167520"
  },
  {
    "text": "successor is called permissions plural policy where the syntax looks a little bit different uh but chromium browsers",
    "start": "3167520",
    "end": "3174079"
  },
  {
    "text": "only at the moment so it's nice to have but doesn't protect everything and uh",
    "start": "3174079",
    "end": "3179400"
  },
  {
    "text": "yeah so I think in in the end that the goal is that eventually there will be something called a document policy uh",
    "start": "3179400",
    "end": "3186720"
  },
  {
    "text": "but it will take some time until the web browser teams um have decided upon which",
    "start": "3186720",
    "end": "3193760"
  },
  {
    "text": "which route to go so again lots of politics little bit of stalling so while",
    "start": "3193760",
    "end": "3198799"
  },
  {
    "text": "this helps it doesn't help all of your users unless you just say uh chrome chrome is the way to go but I urge you",
    "start": "3198799",
    "end": "3205480"
  },
  {
    "text": "not not to do that for a variety of reasons I've seen Netcare versus iie I've seen Firefox versus IE I I don't",
    "start": "3205480",
    "end": "3212000"
  },
  {
    "text": "want to see that again but I'm seeing it there are a couple of other um",
    "start": "3212000",
    "end": "3218000"
  },
  {
    "text": "four-letter acronyms uh that manifest in hgp headers um and they start with cross",
    "start": "3218000",
    "end": "3224720"
  },
  {
    "text": "origin uh there are more than those three but just let's quickly look at those three because I think they sum up",
    "start": "3224720",
    "end": "3230480"
  },
  {
    "text": "nicely what what is possible uh so cross origin EMB better policy BAS basically",
    "start": "3230480",
    "end": "3237240"
  },
  {
    "text": "says Okay um if I have content on my site and I'm",
    "start": "3237240",
    "end": "3243200"
  },
  {
    "text": "embeding something or if I have contents on my site and that is embedded on another site I mean you you have seen an",
    "start": "3243200",
    "end": "3249480"
  },
  {
    "text": "example before I was stealing the uh the uh Oslo Spectrum logo and included it on",
    "start": "3249480",
    "end": "3256720"
  },
  {
    "text": "my web application they could have prevented that by saying no no no you you cannot directly uh include something",
    "start": "3256720",
    "end": "3264079"
  },
  {
    "text": "from from that website so it can set a policy and in that policy uh you can",
    "start": "3264079",
    "end": "3270520"
  },
  {
    "text": "basically say either okay everything is good or you need something called Corp that's the cross origin resource policy",
    "start": "3270520",
    "end": "3278200"
  },
  {
    "text": "so another HP that has be has to be set for the resource you're using and what",
    "start": "3278200",
    "end": "3283319"
  },
  {
    "text": "the cross origin and better policy also supports is reporting you've seen the",
    "start": "3283319",
    "end": "3288520"
  },
  {
    "text": "report URI directive when talking about content security policy well this is using this new report to uh directive",
    "start": "3288520",
    "end": "3296520"
  },
  {
    "text": "and a little bit different syntax but essentially if something goes wrong so if someone tries to include your content",
    "start": "3296520",
    "end": "3303400"
  },
  {
    "text": "then you may be informed uh thanks to that reporting infrastructure um you can",
    "start": "3303400",
    "end": "3309440"
  },
  {
    "text": "also have a cross origin opener policy so the idea is if a.com opens b.com in a",
    "start": "3309440",
    "end": "3316319"
  },
  {
    "text": "popup there is a or popup could also mean new tab right then the open page",
    "start": "3316319",
    "end": "3322440"
  },
  {
    "text": "might to some degree access the opening page where which uh was an attack that",
    "start": "3322440",
    "end": "3328079"
  },
  {
    "text": "once hit Instagram uh and uh therefore you could restrict that as well and say",
    "start": "3328079",
    "end": "3333319"
  },
  {
    "text": "okay if the open page has a different origin no no connection there uh",
    "start": "3333319",
    "end": "3338760"
  },
  {
    "text": "whatsoever whatsoever which uh which I think is is useful and as I already mentioned the cross",
    "start": "3338760",
    "end": "3345480"
  },
  {
    "text": "origin uh resource uh resource policy so if uh something can be included as a",
    "start": "3345480",
    "end": "3351440"
  },
  {
    "text": "resource or not I'd like to discuss one more uh h P",
    "start": "3351440",
    "end": "3356680"
  },
  {
    "text": "header that is kind of security related I find it useful but maybe that's my",
    "start": "3356680",
    "end": "3361760"
  },
  {
    "text": "developer heart or because I'm old that's clear Das site-",
    "start": "3361760",
    "end": "3366960"
  },
  {
    "text": "data I mean you know I have this laugh hate relationship with caching caching",
    "start": "3366960",
    "end": "3372480"
  },
  {
    "text": "on the server when the server controls it is great browser caching is uh is",
    "start": "3372480",
    "end": "3379359"
  },
  {
    "text": "cumbersome do you all have this disabled browser cache checkbox and the have1 12 developer tools on yeah I do that as",
    "start": "3379359",
    "end": "3385960"
  },
  {
    "text": "well but of course the end users don't do that um but with the clear Das site- data header you can if the server sense",
    "start": "3385960",
    "end": "3393680"
  },
  {
    "text": "that you can basically instruct the browser to purge certain data from that",
    "start": "3393680",
    "end": "3399319"
  },
  {
    "text": "site which is great because that really this this Ables uh some kind of caching",
    "start": "3399319",
    "end": "3404599"
  },
  {
    "text": "there is good browser support well uniform browser support for cookies and storage local storage uh session storage",
    "start": "3404599",
    "end": "3412880"
  },
  {
    "text": "um Chrome itself uh supports a few more few more options and",
    "start": "3412880",
    "end": "3420480"
  },
  {
    "text": "chromium based browsers um but basically for cookies and for storage that's pretty pretty neat and uh pretty",
    "start": "3420480",
    "end": "3427280"
  },
  {
    "text": "comfortable to use that if you're in the situation that you have to absolutely make sure that data is not cached or",
    "start": "3427280",
    "end": "3435640"
  },
  {
    "text": "data is is purged from cach yes and I know we have various caching HTP headers",
    "start": "3435640",
    "end": "3441319"
  },
  {
    "text": "uh we can use tricks like appending random stuff to the URI all good all good but um with clear side data this",
    "start": "3441319",
    "end": "3448559"
  },
  {
    "text": "can be made explicit well and finally there is this whole topic of authentication I mean",
    "start": "3448559",
    "end": "3455000"
  },
  {
    "text": "this this would be good for a talk of its own so you can easily fill over an hour with that I just want to mention",
    "start": "3455000",
    "end": "3460680"
  },
  {
    "text": "that because it's basically up and coming so we have the web or specification um and um I mean you may",
    "start": "3460680",
    "end": "3467880"
  },
  {
    "text": "have seen this right that if you have a UB key uh dongle right you can plug it into your machine then tap on it and",
    "start": "3467880",
    "end": "3474400"
  },
  {
    "text": "then you can log in against apption sometimes applications aggressively try to want you to use that as well and uh",
    "start": "3474400",
    "end": "3483119"
  },
  {
    "text": "and an upcoming standard and lots of application are nagging you at the moment to do this is to use pass Keys as",
    "start": "3483119",
    "end": "3489839"
  },
  {
    "text": "a kind of a digital credential in Le of passwords so people would like to get rid of passwords which don't get me",
    "start": "3489839",
    "end": "3497640"
  },
  {
    "text": "wrong is is totally fine I mean I I still have my reservations but again",
    "start": "3497640",
    "end": "3504079"
  },
  {
    "text": "this this this would be a talk for different uh day and time uh but uh if",
    "start": "3504079",
    "end": "3509799"
  },
  {
    "text": "if you're interested in that there's an very interesting discussion here what about P keys is good but is good but",
    "start": "3509799",
    "end": "3516240"
  },
  {
    "text": "which which what what the what the current implementation is basically lacking at what kind of inherent risk we",
    "start": "3516240",
    "end": "3521720"
  },
  {
    "text": "have especially when trusting one entity with uh with all of your pass keys so this just just as an inspiration for for",
    "start": "3521720",
    "end": "3528920"
  },
  {
    "text": "let's say further reading and with that I think uh we've gone through a lot of content I think you have a lot of uh",
    "start": "3528920",
    "end": "3535319"
  },
  {
    "text": "things to look at things to do things to read and uh there will be more during all of the remaining three days of the",
    "start": "3535319",
    "end": "3541839"
  },
  {
    "text": "conference so enjoy your time here enjoy the conference I'm here for any questions and with that thanks for your",
    "start": "3541839",
    "end": "3547640"
  },
  {
    "text": "kind attention and have a wonderful day here at NDC also thank you very much great to be back thank you",
    "start": "3547640",
    "end": "3555400"
  }
]