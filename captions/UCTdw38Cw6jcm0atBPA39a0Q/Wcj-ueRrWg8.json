[
  {
    "start": "0",
    "end": "32000"
  },
  {
    "text": "hi good morning nbc sydney today i'm going to talk about cash now",
    "start": "6799",
    "end": "13840"
  },
  {
    "text": "first up my name's anthony dang i'm from sydney but i actually live in the uk",
    "start": "13840",
    "end": "19680"
  },
  {
    "text": "and in the uk we don't pronounce it cache we pronounce it cache so",
    "start": "19680",
    "end": "25279"
  },
  {
    "text": "the title is a bit more funny now if you think about it anyway",
    "start": "25279",
    "end": "30960"
  },
  {
    "text": "to make sure everyone's awake let's just dive into some code now",
    "start": "30960",
    "end": "36160"
  },
  {
    "start": "32000",
    "end": "63000"
  },
  {
    "text": "what is wrong with this code yes",
    "start": "36160",
    "end": "41600"
  },
  {
    "text": "the random cache time now why on earth would a developer want to",
    "start": "41600",
    "end": "48079"
  },
  {
    "text": "put random cash in their application because they love pain that's why they",
    "start": "48079",
    "end": "54800"
  },
  {
    "text": "love pain developers really really really love when their applications run in an unpredictable way we love it we",
    "start": "54800",
    "end": "62399"
  },
  {
    "text": "love it and i've inherited a lot of a lot of different projects over the years and a lot of different problems",
    "start": "62399",
    "end": "69040"
  },
  {
    "text": "now when you want to do caching there are a few reasons maybe you have limited bandwidth or",
    "start": "69040",
    "end": "75360"
  },
  {
    "text": "availability maybe cost is a factor so in the case of say google maps api super expensive",
    "start": "75360",
    "end": "82240"
  },
  {
    "text": "probably want to save some money there blazing fast ux well if you want to try to squeeze every last millisecond out of",
    "start": "82240",
    "end": "88880"
  },
  {
    "text": "your application that's going to be great for your users seo google ranks you down if you uh if you",
    "start": "88880",
    "end": "96880"
  },
  {
    "text": "take longer than 200 milliseconds to respond so yeah you may want to add some caching to to get a bit faster there",
    "start": "96880",
    "end": "104479"
  },
  {
    "text": "poor performance now this is an interesting one if you think that cash is your first",
    "start": "104479",
    "end": "110799"
  },
  {
    "text": "port of call when it comes to when it comes to poor performance you really need to",
    "start": "110799",
    "end": "116479"
  },
  {
    "text": "think about your architecture because cash might actually cause more problems than you think",
    "start": "116479",
    "end": "122960"
  },
  {
    "text": "so here are some caching options you might want to cache at the proxy",
    "start": "123840",
    "end": "129440"
  },
  {
    "text": "level so something like cloudflare maybe a cdn maybe you want to cache at the",
    "start": "129440",
    "end": "135520"
  },
  {
    "text": "application where you uh at the point where you provide html where you're",
    "start": "135520",
    "end": "140560"
  },
  {
    "text": "rendering maybe you want to cache everything except for something",
    "start": "140560",
    "end": "145599"
  },
  {
    "text": "maybe you just want to catch some bit of html that's being rendered maybe you want to dot your program with",
    "start": "145599",
    "end": "152879"
  },
  {
    "text": "cache all around the methods how about an entire service layer",
    "start": "152879",
    "end": "159440"
  },
  {
    "text": "what about your data access layer how about caching external to your",
    "start": "159519",
    "end": "165599"
  },
  {
    "text": "application maybe some pre-indexing",
    "start": "165599",
    "end": "171120"
  },
  {
    "text": "how about a multi-layered solution how about browser cache",
    "start": "171120",
    "end": "179040"
  },
  {
    "text": "a good way to visualize issues when it comes to cache is with the cdn for for anyone that doesn't know about",
    "start": "180720",
    "end": "187120"
  },
  {
    "text": "cdns basically you upload some files and it automatically distributes your files",
    "start": "187120",
    "end": "192560"
  },
  {
    "text": "geographically close to your users so your users get a better user experience",
    "start": "192560",
    "end": "199519"
  },
  {
    "text": "let's take a look how we do this using microsoft azure",
    "start": "199519",
    "end": "204319"
  },
  {
    "text": "it's really simple you create a profile you give it a name",
    "start": "205200",
    "end": "210400"
  },
  {
    "text": "give it a resource group choose a location in this case australia",
    "start": "210879",
    "end": "216400"
  },
  {
    "text": "and a pricing model don't ask me what the other pricing models are i have no idea never tried",
    "start": "216400",
    "end": "221760"
  },
  {
    "text": "them okay now you have your profile and all you need to do is define an endpoint",
    "start": "221760",
    "end": "230319"
  },
  {
    "text": "just give it a name this is going to be in front of azure blob storage",
    "start": "231599",
    "end": "237519"
  },
  {
    "text": "and that's it now you could leave all the defaults and this will be fine for almost all of the",
    "start": "239360",
    "end": "245680"
  },
  {
    "text": "scenarios or you could configure it a little bit it has a few options so you can add some custom domains if",
    "start": "245680",
    "end": "252799"
  },
  {
    "text": "you want you can tweak the compression but out of the box it compresses",
    "start": "252799",
    "end": "258079"
  },
  {
    "text": "everything that you could probably need for most scenarios and there are a few rules as well so you can you can ignore",
    "start": "258079",
    "end": "264080"
  },
  {
    "text": "query strings if you wanted to and a couple others let's see how this cache works",
    "start": "264080",
    "end": "271840"
  },
  {
    "text": "in the real world so here's a koala coming from east australia all the way to the uk",
    "start": "271840",
    "end": "279759"
  },
  {
    "text": "and it's taking just a bit under five seconds to load this it's a big file",
    "start": "279759",
    "end": "286080"
  },
  {
    "text": "okay now let's go see the cdn",
    "start": "286080",
    "end": "291360"
  },
  {
    "text": "and reload and",
    "start": "293280",
    "end": "299280"
  },
  {
    "text": "it's under four seconds great okay under four seconds that's fantastic",
    "start": "299280",
    "end": "304720"
  },
  {
    "text": "we've just improved the user experience of our application we can now download files quicker so",
    "start": "304720",
    "end": "310960"
  },
  {
    "text": "let's see what happens when we want to update this cache",
    "start": "310960",
    "end": "316240"
  },
  {
    "text": "upload file just replace it",
    "start": "319840",
    "end": "325000"
  },
  {
    "text": "okay we'll go to the blob storage first",
    "start": "325919",
    "end": "329840"
  },
  {
    "text": "okay we have a lazier koala great okay let's take a look at the cdn",
    "start": "332639",
    "end": "341199"
  },
  {
    "text": "it's it's the previous caller what's going on okay maybe we just need to hard reload again just to see nope it's the",
    "start": "344000",
    "end": "350880"
  },
  {
    "text": "same koala so what's going on now the cdn's actually cache this",
    "start": "350880",
    "end": "356800"
  },
  {
    "text": "and if you're in trouble you can manually go into the portal and purge the cache",
    "start": "356800",
    "end": "362800"
  },
  {
    "text": "manually but is this really going to be a good solution",
    "start": "362800",
    "end": "368080"
  },
  {
    "text": "i mean a few moments ago this was a no code solution you don't have to do anything but now you're going to have to",
    "start": "368080",
    "end": "373280"
  },
  {
    "text": "think about when that cache times out now the important thing with caching is at",
    "start": "373280",
    "end": "380240"
  },
  {
    "start": "374000",
    "end": "616000"
  },
  {
    "text": "some point your content will be stale or your data and you have to realize okay for some",
    "start": "380240",
    "end": "385360"
  },
  {
    "text": "scenarios that can be okay but for others it's definitely not acceptable so in the case of legal documents or",
    "start": "385360",
    "end": "392240"
  },
  {
    "text": "medical yeah you don't really want your cash to to keep going for a long period of time",
    "start": "392240",
    "end": "399520"
  },
  {
    "text": "if you don't know how long the default cash time is for azure",
    "start": "399520",
    "end": "404560"
  },
  {
    "text": "be prepared it's seven days so you definitely need",
    "start": "404560",
    "end": "410080"
  },
  {
    "text": "to figure out a way to to clear this cache and this may involve going into the portal manually but it would be a",
    "start": "410080",
    "end": "416240"
  },
  {
    "text": "lot better if you could do this programmatically so they do have an api that can help um in the case of browser",
    "start": "416240",
    "end": "422400"
  },
  {
    "text": "caching if you're if your cdn is serving uh javascript or css a common way to",
    "start": "422400",
    "end": "428639"
  },
  {
    "text": "bust this cache is by uh is by having some sort of version number or good attached as a query string but then hang",
    "start": "428639",
    "end": "435919"
  },
  {
    "text": "on this used to be a no code solution and it was really lovely to set up but hang on i need to now deal with version",
    "start": "435919",
    "end": "442639"
  },
  {
    "text": "numbers a little bit of code to clear the cache when i need it to this can be quite problematic",
    "start": "442639",
    "end": "451319"
  },
  {
    "text": "cloudflare is a really really awesome developer experience",
    "start": "451680",
    "end": "457039"
  },
  {
    "text": "it it is it gives you all the power of that cdn but with a lot more options and",
    "start": "457039",
    "end": "462560"
  },
  {
    "text": "they really nailed the user interface for developers let's see how it works",
    "start": "462560",
    "end": "468639"
  },
  {
    "text": "so we're just going to add a page rule i have a domain called dang easy tech",
    "start": "471759",
    "end": "478160"
  },
  {
    "text": "and i want cloudfare cloudflare to cache every page",
    "start": "478160",
    "end": "483599"
  },
  {
    "text": "and i'm going to add some settings i'm going to say hey browser don't cache longer than four hours",
    "start": "483599",
    "end": "490639"
  },
  {
    "text": "cool i'm going to say yeah cache level let's cache everything that's coming out so",
    "start": "490840",
    "end": "497120"
  },
  {
    "text": "this will cache literally everything the html the files everything",
    "start": "497120",
    "end": "503680"
  },
  {
    "text": "and i'm going to say to the edge cache you know i don't want you to be seven days just make it two hours it'll be",
    "start": "504000",
    "end": "509039"
  },
  {
    "text": "fine all right and that's it that's literally it lovely lovely lovely developer",
    "start": "509039",
    "end": "515360"
  },
  {
    "text": "experience now let's see that in action",
    "start": "515360",
    "end": "521560"
  },
  {
    "text": "here is an umbraco website which is hosted on azure app services",
    "start": "523440",
    "end": "528560"
  },
  {
    "text": "now you have the public domain which is dang easy tech and there is an azure domain",
    "start": "528560",
    "end": "535440"
  },
  {
    "text": "which is an app cache demo okay i'm going to go and simulate an error on",
    "start": "535440",
    "end": "542160"
  },
  {
    "text": "the website so i'm going to throw an exception in the navigation and we'll see what happens",
    "start": "542160",
    "end": "549839"
  },
  {
    "text": "okay here is that azure site okay cool error great",
    "start": "552160",
    "end": "558399"
  },
  {
    "text": "and the live domain refresh okay the navigation's still working okay",
    "start": "558399",
    "end": "564240"
  },
  {
    "text": "that's that's good right right okay um what happens if cloudflare's cache times out at 3am",
    "start": "564240",
    "end": "572560"
  },
  {
    "text": "you left you left work to go home and you thought everything was fine but cloudflare was actually caching",
    "start": "572560",
    "end": "579600"
  },
  {
    "text": "the navigation when it was working so here we go again okay here's the error",
    "start": "579600",
    "end": "585440"
  },
  {
    "text": "right okay so you're working up at 3am your boss is saying hey fix the website",
    "start": "585440",
    "end": "590720"
  },
  {
    "text": "so you have to go in maybe you need to do another deployment maybe an app restart maybe some configuration change",
    "start": "590720",
    "end": "597200"
  },
  {
    "text": "okay so let's go to that azure domain again great okay",
    "start": "597200",
    "end": "603760"
  },
  {
    "text": "we fixed it now how about that live domain",
    "start": "603760",
    "end": "609040"
  },
  {
    "text": "cloudflare cached the error so what's happened",
    "start": "610079",
    "end": "615600"
  },
  {
    "text": "the problem about external cache solutions is yes it can hide downtime which can be",
    "start": "615600",
    "end": "622240"
  },
  {
    "start": "616000",
    "end": "780000"
  },
  {
    "text": "good for your users but it also hides errors it caches",
    "start": "622240",
    "end": "627440"
  },
  {
    "text": "hides the fact that you that you have an error so it will cache an error and it makes it hard to actually",
    "start": "627440",
    "end": "633200"
  },
  {
    "text": "clear out this cache so you're going to have to think okay even if i have two domains a public one",
    "start": "633200",
    "end": "639519"
  },
  {
    "text": "and a and a hidden one okay i now need to have something that polls or checks my website for any",
    "start": "639519",
    "end": "646560"
  },
  {
    "text": "crashed pages or crashed panels or widgets you can do this with something like",
    "start": "646560",
    "end": "652079"
  },
  {
    "text": "cypress or selenium but then you have to write a whole bunch of test code",
    "start": "652079",
    "end": "658000"
  },
  {
    "text": "that you may not normally need in uh in your qa process but but you you do to keep your website live",
    "start": "658000",
    "end": "666640"
  },
  {
    "text": "the other issue is the number of page rules so cloudflare gives you about a hundred um if you exceed this then you",
    "start": "666640",
    "end": "672480"
  },
  {
    "text": "need to start paying which can be a problem another issue is security and privacy",
    "start": "672480",
    "end": "678720"
  },
  {
    "text": "and this is something that people generally don't think about when they think of caching now here are two websites that are",
    "start": "678720",
    "end": "684800"
  },
  {
    "text": "frequent there's some information on these that i really don't want to be",
    "start": "684800",
    "end": "690320"
  },
  {
    "text": "accidentally cached and then available to the public um so for instance my email address",
    "start": "690320",
    "end": "696560"
  },
  {
    "text": "and private messages so if a developer has accidentally",
    "start": "696560",
    "end": "701600"
  },
  {
    "text": "cached something that they shouldn't then this brings up all types of security and privacy concerns so you",
    "start": "701600",
    "end": "708240"
  },
  {
    "text": "really have to think about only caching the things that you need to sometimes or at least excluding some",
    "start": "708240",
    "end": "714160"
  },
  {
    "text": "things if you want a really granular experience when it comes to",
    "start": "714160",
    "end": "719200"
  },
  {
    "text": "external caching then varnish is an option this is really similar to cloudflare but",
    "start": "719200",
    "end": "724480"
  },
  {
    "text": "it's a hosted linux solution so you have your own linux box you put this",
    "start": "724480",
    "end": "729600"
  },
  {
    "text": "this proxy in front of it and you have all these granular rules which gives you really really really crazy",
    "start": "729600",
    "end": "736399"
  },
  {
    "text": "ridiculous configuration and i'll tell you what else is crazy",
    "start": "736399",
    "end": "741920"
  },
  {
    "text": "the configuration file okay",
    "start": "741920",
    "end": "748399"
  },
  {
    "text": "so we have some cookie stuff uh some file extensions yeah",
    "start": "748399",
    "end": "755120"
  },
  {
    "text": "yep don't know what that is uh something is healthy no uh circuit",
    "start": "755760",
    "end": "760800"
  },
  {
    "text": "con what uh some status codes yeah so",
    "start": "760800",
    "end": "766560"
  },
  {
    "text": "only linux developers can understand something like this this uh like how do you even test that",
    "start": "766560",
    "end": "772639"
  },
  {
    "text": "this works like look how many if statements there are you're going to have to write code to make sure that this caching",
    "start": "772639",
    "end": "778240"
  },
  {
    "text": "configuration works now if you do want this granular control um",
    "start": "778240",
    "end": "783600"
  },
  {
    "start": "780000",
    "end": "849000"
  },
  {
    "text": "at the very least go with something like fastly because fastly is a hosted solution at least you don't have to worry about dealing with",
    "start": "783600",
    "end": "789839"
  },
  {
    "text": "your own linux server you still have the power of that config file but you basically just upload it and fastly takes care of it for you",
    "start": "789839",
    "end": "798240"
  },
  {
    "text": "all right time for the fun part coding time",
    "start": "799440",
    "end": "804639"
  },
  {
    "text": "now what is wrong with all these bits of code",
    "start": "811200",
    "end": "818560"
  },
  {
    "text": "hard coded cache time now why is hard coded cache time a problem i mean it's just a number right",
    "start": "821920",
    "end": "828560"
  },
  {
    "text": "and this is just 60 seconds 300 seconds okay",
    "start": "828560",
    "end": "834800"
  },
  {
    "text": "how do you turn it off like like seriously how do you turn this off if you have this all over your code",
    "start": "834800",
    "end": "841920"
  },
  {
    "text": "how do you turn it off you can't you have to go around changing all these numbers back down to zero",
    "start": "841920",
    "end": "849680"
  },
  {
    "start": "849000",
    "end": "1092000"
  },
  {
    "text": "or you might have some configuration but for the most part this is hard coded now",
    "start": "849680",
    "end": "855760"
  },
  {
    "text": "being able to turn off cash is as important as having the cash in the first place",
    "start": "855760",
    "end": "861440"
  },
  {
    "text": "and i cannot stress this enough you need to be able to turn off your cash at some point",
    "start": "861440",
    "end": "866959"
  },
  {
    "text": "now at some point you're going to have a weird quirk you're going to have maybe stale content",
    "start": "866959",
    "end": "873199"
  },
  {
    "text": "or a weird performance problem or an intermittent problem and you're going to wonder okay",
    "start": "873199",
    "end": "878560"
  },
  {
    "text": "maybe i should turn the cache off in this part of my code so that i can investigate",
    "start": "878560",
    "end": "884399"
  },
  {
    "text": "another issue when it comes to coding and cache is okay how does it clear",
    "start": "884399",
    "end": "889760"
  },
  {
    "text": "we already saw a scenario where you could clear cdn by going into the portal and",
    "start": "889760",
    "end": "896079"
  },
  {
    "text": "manually clearing it okay but you've just cached in memory how do you clear this you need to write some code to do",
    "start": "896079",
    "end": "902480"
  },
  {
    "text": "this and when does it clear okay here are some two numbers",
    "start": "902480",
    "end": "908519"
  },
  {
    "text": "3600 and 60. so if these are part of the same application",
    "start": "908519",
    "end": "914480"
  },
  {
    "text": "what is the end to end cache time it's it's just additive so it's",
    "start": "914480",
    "end": "920920"
  },
  {
    "text": "3660 seconds now if you have this scenario",
    "start": "920920",
    "end": "926720"
  },
  {
    "text": "this could be quite problematic because at some point something will time out it's 60 seconds someone's something will",
    "start": "926720",
    "end": "932160"
  },
  {
    "text": "time out a bit longer and it becomes difficult to figure out which one is actually causing a problem or solving",
    "start": "932160",
    "end": "939120"
  },
  {
    "text": "a problem the other issue is if you're caching like this",
    "start": "939120",
    "end": "944639"
  },
  {
    "text": "okay where are you caching if you're putting your code all around your solution it becomes very hard to",
    "start": "944639",
    "end": "950959"
  },
  {
    "text": "manage and then you have all these problems about interactions with the cache some of the timing out some of it not",
    "start": "950959",
    "end": "957040"
  },
  {
    "text": "the additive effects it gets really really difficult the other issue is",
    "start": "957040",
    "end": "963199"
  },
  {
    "text": "okay if you have cash how do you know if your application is performing well now",
    "start": "963199",
    "end": "970160"
  },
  {
    "text": "your application could start up pretty slow and i guess most developers have this experience yeah it starts slow the",
    "start": "970160",
    "end": "975839"
  },
  {
    "text": "first time but hey it's um it's on my machine it's slow the first time that it's fast",
    "start": "975839",
    "end": "981360"
  },
  {
    "text": "every other time right well if you turn your cash off maybe you'll realize that it's actually a lot slower",
    "start": "981360",
    "end": "987360"
  },
  {
    "text": "than you think it is and yeah you need to be able to turn off your cash to realize these issues",
    "start": "987360",
    "end": "996279"
  },
  {
    "text": "if you want to cache really close to the user when you're coding output caching is a really great idea",
    "start": "996720",
    "end": "1003600"
  },
  {
    "text": "uh it basically caches the rendered html so whatever whatever the user will get in terms of",
    "start": "1003600",
    "end": "1009680"
  },
  {
    "text": "html you're going to cache that and this is still in your application and in net there's a really elegant way",
    "start": "1009680",
    "end": "1016160"
  },
  {
    "text": "to do it all you do is add this this attribute output cache and you can have a cache",
    "start": "1016160",
    "end": "1021920"
  },
  {
    "text": "profile in this case it's just called cache one hour and you configure it in in the web config and this means you can",
    "start": "1021920",
    "end": "1028400"
  },
  {
    "text": "turn it off from the web config so it's a really nice solution the problem is if there's something on the page that",
    "start": "1028400",
    "end": "1034400"
  },
  {
    "text": "you don't want to cache then you're going to have to go with something else",
    "start": "1034400",
    "end": "1039839"
  },
  {
    "text": "so this is basically the same it's called donut caching so you're going to cache everything except that hole",
    "start": "1039839",
    "end": "1046640"
  },
  {
    "text": "so you're going to punch some holes in that cache same thing add an attribute it's pretty nice",
    "start": "1046640",
    "end": "1053760"
  },
  {
    "text": "and you can actually punch as many holes as you like",
    "start": "1053760",
    "end": "1058080"
  },
  {
    "text": "but then it kind of becomes swiss cheese uh swiss cheese caching",
    "start": "1059360",
    "end": "1064640"
  },
  {
    "text": "the inverse of this is donut whole cashew and",
    "start": "1064640",
    "end": "1069919"
  },
  {
    "text": "if i was going to choose i would say this one is probably my favorite because it's going to make me explicitly cash",
    "start": "1069919",
    "end": "1076720"
  },
  {
    "text": "what i want to cash i'm not going to accidentally cache something or i'll be less likely to cache something",
    "start": "1076720",
    "end": "1082080"
  },
  {
    "text": "accidentally because i'm explicitly caching just these bits of html that are coming out of",
    "start": "1082080",
    "end": "1087919"
  },
  {
    "text": "out of my controllers",
    "start": "1087919",
    "end": "1090880"
  },
  {
    "start": "1092000",
    "end": "1188000"
  },
  {
    "text": "now all of these html output caching options uh they do have a similar problem",
    "start": "1093679",
    "end": "1100080"
  },
  {
    "text": "the cache is not close to the problem and what do i mean by that",
    "start": "1100080",
    "end": "1105120"
  },
  {
    "text": "if if you're if you're dealing with a performance issue or or something that needs to be cached and",
    "start": "1105120",
    "end": "1111360"
  },
  {
    "text": "it's deeper in your application why are you caching so close to the user um if if your performance bottleneck is",
    "start": "1111360",
    "end": "1117840"
  },
  {
    "text": "in your service layer shouldn't you be caching out the service layer not the html if you have multiple problems",
    "start": "1117840",
    "end": "1123919"
  },
  {
    "text": "well isn't this going to just hide the fact that you have these problems and then those problems will potentially",
    "start": "1123919",
    "end": "1129760"
  },
  {
    "text": "come out at 3am or or some in opportune moment",
    "start": "1129760",
    "end": "1134799"
  },
  {
    "text": "so i would definitely prefer to cache closer to the problem",
    "start": "1134799",
    "end": "1141679"
  },
  {
    "text": "which brings me to method caching now this is something that's really common i see this all the time",
    "start": "1142559",
    "end": "1149039"
  },
  {
    "text": "you come across a method and you realize oh i've done it i've done a little bit of investigation and there's something",
    "start": "1149039",
    "end": "1154799"
  },
  {
    "text": "that's really expensive okay that thing right there i'm gonna wrap that in cash okay great",
    "start": "1154799",
    "end": "1160160"
  },
  {
    "text": "so the code starts to look like this and this is nice it's really easy to understand you",
    "start": "1160160",
    "end": "1166320"
  },
  {
    "text": "create a cash key you try to get a value from cash if it's not there you go do that",
    "start": "1166320",
    "end": "1171600"
  },
  {
    "text": "expensive thing and then you add that to cash and then you return the value",
    "start": "1171600",
    "end": "1176960"
  },
  {
    "text": "the next time this method runs you're just going to get it from cache okay great so you're thinking yes",
    "start": "1176960",
    "end": "1182880"
  },
  {
    "text": "yes i made the application faster okay cool but then hang on",
    "start": "1182880",
    "end": "1188799"
  },
  {
    "start": "1188000",
    "end": "1220000"
  },
  {
    "text": "this method is no longer single responsibility it's no longer really doing the thing",
    "start": "1188799",
    "end": "1194080"
  },
  {
    "text": "that it was doing before it's now getting that",
    "start": "1194080",
    "end": "1199200"
  },
  {
    "text": "that value and then adding it to cash and you're starting to really bake cash",
    "start": "1199200",
    "end": "1204799"
  },
  {
    "text": "into your business logic the problem about this type of pattern",
    "start": "1204799",
    "end": "1210400"
  },
  {
    "text": "that i find the most troubling is it's really really tempting to just repeat all around your code so you just",
    "start": "1210400",
    "end": "1217520"
  },
  {
    "text": "start sprinkling it everywhere like mozzarella cheese",
    "start": "1217520",
    "end": "1222799"
  },
  {
    "start": "1220000",
    "end": "1265000"
  },
  {
    "text": "and even though this melted cheese looks really really really delicious",
    "start": "1222799",
    "end": "1229039"
  },
  {
    "text": "if you think about how cash is baked into a solution it it becomes really problematic because",
    "start": "1229039",
    "end": "1236000"
  },
  {
    "text": "like i said before you you start getting interaction effects uh some cash times out some doesn't um and then you start",
    "start": "1236000",
    "end": "1243520"
  },
  {
    "text": "really getting problems with performance and intermittent bugs and and it just ends up being sticky and",
    "start": "1243520",
    "end": "1249440"
  },
  {
    "text": "it's not nice it's not nice like like melted cheese",
    "start": "1249440",
    "end": "1254720"
  },
  {
    "text": "and how do you turn it off again how do you turn this off",
    "start": "1254720",
    "end": "1260799"
  },
  {
    "text": "brings me to my favorite type of caching",
    "start": "1261280",
    "end": "1266320"
  },
  {
    "start": "1265000",
    "end": "1463000"
  },
  {
    "text": "i've been doing this for a while it is basically using dependency injection and interfaces to decouple",
    "start": "1266320",
    "end": "1273280"
  },
  {
    "text": "your cache from your business logic and it's really really really powerful because you can actually swap out",
    "start": "1273280",
    "end": "1279919"
  },
  {
    "text": "the implementation at startup of your application so i'll give you",
    "start": "1279919",
    "end": "1285200"
  },
  {
    "text": "some code to look at is an interface",
    "start": "1285200",
    "end": "1290799"
  },
  {
    "text": "yet value okay same method as before",
    "start": "1290799",
    "end": "1295679"
  },
  {
    "text": "here is a service which implements that interface and a cached proxy that also implements",
    "start": "1296640",
    "end": "1302720"
  },
  {
    "text": "that interface so we have two versions of our code now that implement this",
    "start": "1302720",
    "end": "1307760"
  },
  {
    "text": "interface this is great because at startup you can do something like",
    "start": "1307760",
    "end": "1312799"
  },
  {
    "text": "this you can say okay if the configuration has this enabled is",
    "start": "1312799",
    "end": "1319120"
  },
  {
    "text": "true then i'm going to insert the cached service the cached proxy into my application otherwise i'm",
    "start": "1319120",
    "end": "1326559"
  },
  {
    "text": "just going to use the slow one the great thing about this is you're not relying on just setting a",
    "start": "1326559",
    "end": "1333039"
  },
  {
    "text": "cash down to zero you're actually not using the cash at all as you can see",
    "start": "1333039",
    "end": "1338159"
  },
  {
    "text": "you're using dependency injection to not even have that cash in your application and this is what i mean",
    "start": "1338159",
    "end": "1344159"
  },
  {
    "text": "about decoupling that cache it's not even there if you don't want it to be and you can do this for all different services it doesn't have to be for for",
    "start": "1344159",
    "end": "1350720"
  },
  {
    "text": "just a single one and here's the code is that",
    "start": "1350720",
    "end": "1356159"
  },
  {
    "text": "that original method get something expensive and here's the cash proxy now",
    "start": "1356159",
    "end": "1361679"
  },
  {
    "text": "the cash key is something that's really powerful basically we are taking the class name",
    "start": "1361679",
    "end": "1368080"
  },
  {
    "text": "and the the method name and the id and we're turning that into the cash key and i'll",
    "start": "1368080",
    "end": "1373200"
  },
  {
    "text": "get to why that's powerful in a moment the uh the return is actually just a",
    "start": "1373200",
    "end": "1378640"
  },
  {
    "text": "shorthand like internally in this special specific cache library it's basically doing and the same if",
    "start": "1378640",
    "end": "1384080"
  },
  {
    "text": "statement except you're passing it a function you're actually passing it that",
    "start": "1384080",
    "end": "1389440"
  },
  {
    "text": "other services method which is really cool so internally it will just say hey um if",
    "start": "1389440",
    "end": "1395120"
  },
  {
    "text": "the cache doesn't exist then call that get value from example service",
    "start": "1395120",
    "end": "1400240"
  },
  {
    "text": "okay cool and then you can do something like this",
    "start": "1400240",
    "end": "1406000"
  },
  {
    "text": "when it comes to uh when it comes to clearing your cache so in this scenario i'm attaching to some sort of publish",
    "start": "1406000",
    "end": "1412720"
  },
  {
    "text": "event so content is being published and i'm doing a cache clear",
    "start": "1412720",
    "end": "1420159"
  },
  {
    "text": "which is by prefix now you can do this by regex if you want this is just doing a string match",
    "start": "1420159",
    "end": "1426400"
  },
  {
    "text": "now the reason this is powerful is because i am clearing everything that is",
    "start": "1426400",
    "end": "1432720"
  },
  {
    "text": "cached by this one class using this one line so everything everything in that",
    "start": "1432720",
    "end": "1437760"
  },
  {
    "text": "service is now being cleared and i can get more granular remember that cache key",
    "start": "1437760",
    "end": "1445039"
  },
  {
    "text": "now if i wanted to i can clear everything that's done by that service",
    "start": "1445039",
    "end": "1450080"
  },
  {
    "text": "and that method so everything everything cached by that method in that service can be cleared",
    "start": "1450080",
    "end": "1455919"
  },
  {
    "text": "or i can go straight for that one entity using the entire cache key",
    "start": "1455919",
    "end": "1461919"
  },
  {
    "start": "1463000",
    "end": "1605000"
  },
  {
    "text": "this does have a few drawbacks though the learning curve can be quite difficult especially if you're not used",
    "start": "1463679",
    "end": "1470000"
  },
  {
    "text": "to dependency injection the um the ioc initialization can feel a little bit",
    "start": "1470000",
    "end": "1476720"
  },
  {
    "text": "bloated because you are literally registering double the amount of",
    "start": "1476720",
    "end": "1482480"
  },
  {
    "text": "of classes there's also this issue of some methods might just pass through and",
    "start": "1482480",
    "end": "1489200"
  },
  {
    "text": "what i mean by that is at some point you will have uh you'll have a method which you don't",
    "start": "1489200",
    "end": "1494559"
  },
  {
    "text": "want cached you just don't um so the only solution to this is you don't use the cache library in that",
    "start": "1494559",
    "end": "1501360"
  },
  {
    "text": "cached in that cached proxy you just pass the method called through to the service",
    "start": "1501360",
    "end": "1508799"
  },
  {
    "text": "this can be okay for most scenarios but if you find that you have half or even a third of your of",
    "start": "1508799",
    "end": "1516080"
  },
  {
    "text": "your methods being passed through without cash well then you have to start thinking about your architecture because",
    "start": "1516080",
    "end": "1522960"
  },
  {
    "text": "it doesn't make sense to have a cached proxy if half things are not cached and of course there's no way to",
    "start": "1522960",
    "end": "1529440"
  },
  {
    "text": "manually clear your cache either not without i don't know an application restart",
    "start": "1529440",
    "end": "1535279"
  },
  {
    "text": "you could potentially create something like i don't know an api endpoint which is authenticated",
    "start": "1535279",
    "end": "1541360"
  },
  {
    "text": "that you can that you can hit or maybe some back office button but there's no real good way to manually",
    "start": "1541360",
    "end": "1548640"
  },
  {
    "text": "clear that cache if you want to get deeper into your",
    "start": "1548640",
    "end": "1554799"
  },
  {
    "text": "application you could look at data layer",
    "start": "1554799",
    "end": "1561600"
  },
  {
    "text": "now caching at the data layer can be quite hairy as you can see in this example",
    "start": "1561600",
    "end": "1567520"
  },
  {
    "text": "this code looks quite daunting but there is this familiar code here so if it's not in the cache then",
    "start": "1567520",
    "end": "1573679"
  },
  {
    "text": "go get it once you have it put it in the cache but at the data layer things become a",
    "start": "1573679",
    "end": "1578880"
  },
  {
    "text": "little bit more difficult to manage because you might have some concurrency thread safe issues",
    "start": "1578880",
    "end": "1587679"
  },
  {
    "text": "so you're going to get something context 1 is getting something context 2 updates that thing ok well",
    "start": "1588240",
    "end": "1594400"
  },
  {
    "text": "something's not right now these are out of date so now you have to start thinking okay i need to make sure that",
    "start": "1594400",
    "end": "1599760"
  },
  {
    "text": "my code can handle issues where you have concurrent read and writes",
    "start": "1599760",
    "end": "1606158"
  },
  {
    "start": "1605000",
    "end": "1656000"
  },
  {
    "text": "so you have all the same problems as before except you have this additional fun uh",
    "start": "1606240",
    "end": "1612159"
  },
  {
    "text": "challenge of potential data corruption so you have to be really careful when",
    "start": "1612159",
    "end": "1617200"
  },
  {
    "text": "you're dealing with repository level uh data layer level caching because it can cause a lot of problems",
    "start": "1617200",
    "end": "1623279"
  },
  {
    "text": "it also makes your application quite difficult to distribute because if you're dealing with cached",
    "start": "1623279",
    "end": "1628960"
  },
  {
    "text": "entities in your application well you're going to have to",
    "start": "1628960",
    "end": "1634320"
  },
  {
    "text": "you're going to have to somehow update every instance of that application to make sure that all of them have fetched",
    "start": "1634320",
    "end": "1639840"
  },
  {
    "text": "the new uh the new a bit of data from the database so you really have to think about your architecture and maybe even",
    "start": "1639840",
    "end": "1646640"
  },
  {
    "text": "your sql schema because if it's slow maybe the sql schema just needs to be",
    "start": "1646640",
    "end": "1652159"
  },
  {
    "text": "changed maybe cache is not the not the solution",
    "start": "1652159",
    "end": "1656320"
  },
  {
    "start": "1656000",
    "end": "1747000"
  },
  {
    "text": "if you want to say cashing to the next level you should look at redis now redis is",
    "start": "1658000",
    "end": "1664080"
  },
  {
    "text": "basically a key value store you throw some stuff up there and you can get it back really fast and it's",
    "start": "1664080",
    "end": "1669120"
  },
  {
    "text": "really really good alternative to to local memory because it's always going to be there you have a centralized place",
    "start": "1669120",
    "end": "1675120"
  },
  {
    "text": "that you put your cache and every instance of your application just goes there and get and gets",
    "start": "1675120",
    "end": "1680840"
  },
  {
    "text": "it but it does come at a cost now if you're just dealing with 200 meg",
    "start": "1680840",
    "end": "1688000"
  },
  {
    "text": "okay that's 20 bucks a month great 53 meg uh three gig sorry 53 gig well",
    "start": "1688000",
    "end": "1695039"
  },
  {
    "text": "that's 700 okay um that starts to get expensive",
    "start": "1695039",
    "end": "1700960"
  },
  {
    "text": "but then okay it gets even more expensive if you want the premium tier",
    "start": "1700960",
    "end": "1706320"
  },
  {
    "text": "nine thousand dollars per month for 120 gig that is eye watering um",
    "start": "1706320",
    "end": "1713440"
  },
  {
    "text": "you may be thinking why would i ever want to cash 120 gig do i really need to grab things that",
    "start": "1713440",
    "end": "1719120"
  },
  {
    "text": "quickly um okay big data",
    "start": "1719120",
    "end": "1724399"
  },
  {
    "text": "120 gig is nothing in big data it's normal um i'm dealing with clients where",
    "start": "1724399",
    "end": "1729520"
  },
  {
    "text": "100 gig is just the norm the smallest clients are in the tens of gigabytes",
    "start": "1729520",
    "end": "1735600"
  },
  {
    "text": "so you might have to think of different scenarios and different solutions different options",
    "start": "1735600",
    "end": "1742080"
  },
  {
    "text": "yeah 9000 is just it might be too much for your organization",
    "start": "1742080",
    "end": "1747760"
  },
  {
    "start": "1747000",
    "end": "1980000"
  },
  {
    "text": "so not only is cost an issue you actually have this extra bit of",
    "start": "1748559",
    "end": "1753760"
  },
  {
    "text": "infrastructure which has an sla okay 99.9",
    "start": "1753760",
    "end": "1759679"
  },
  {
    "text": "great that sounds good right well that's 43 minutes of potential downtime per month now",
    "start": "1759679",
    "end": "1767679"
  },
  {
    "text": "your application needs to deal with this if you have some logic in your application that does things if it can't",
    "start": "1767679",
    "end": "1773200"
  },
  {
    "text": "find the cache well you now have to deal with the fact that redis just might not even be there",
    "start": "1773200",
    "end": "1778559"
  },
  {
    "text": "it could just be gone not contactable for milliseconds seconds minutes your application just needs to",
    "start": "1778559",
    "end": "1785120"
  },
  {
    "text": "handle this and not do anything stupid",
    "start": "1785120",
    "end": "1789360"
  },
  {
    "text": "now this brings me to a multi-layered solution which i was",
    "start": "1791600",
    "end": "1796880"
  },
  {
    "text": "handed a few years ago and this was the bane of my existence this was so",
    "start": "1796880",
    "end": "1803760"
  },
  {
    "text": "painful i'll show you why there are four layers of cache",
    "start": "1803760",
    "end": "1810000"
  },
  {
    "text": "across three different servers three different virtual machines first virtual machine how to punish",
    "start": "1810000",
    "end": "1815679"
  },
  {
    "text": "instance okay that's fine second virtual machine had the website",
    "start": "1815679",
    "end": "1821039"
  },
  {
    "text": "with internal memory cache okay third virtual machine had varnish as",
    "start": "1821039",
    "end": "1827039"
  },
  {
    "text": "well and it also had an api endpoint and that api endpoint was a php website which had",
    "start": "1827039",
    "end": "1834240"
  },
  {
    "text": "random cache okay now if you look at the cash times",
    "start": "1834240",
    "end": "1840640"
  },
  {
    "text": "you have to think okay what was the actual cash time end to end",
    "start": "1840640",
    "end": "1845760"
  },
  {
    "text": "for this entire solution it was 26 hours and 10 minutes",
    "start": "1845760",
    "end": "1853520"
  },
  {
    "text": "even though even though the the um the api only has a 10 minute cash",
    "start": "1853520",
    "end": "1858720"
  },
  {
    "text": "time well that doesn't matter like look at the other cash times you have to add them all up",
    "start": "1858720",
    "end": "1863760"
  },
  {
    "text": "the other issue is how do you clear all of this cash in a synchronous way",
    "start": "1863760",
    "end": "1871120"
  },
  {
    "text": "painfully painfully painfully is the answer so think about it",
    "start": "1871279",
    "end": "1877200"
  },
  {
    "text": "how do you clear the varnish cache and the memory cache on the third server okay you could have",
    "start": "1877200",
    "end": "1884080"
  },
  {
    "text": "some sort of cron job hopefully that cache clears in the same millisecond",
    "start": "1884080",
    "end": "1889600"
  },
  {
    "text": "okay then you have to synchronize that with the windows server with which has also some memory cache",
    "start": "1889600",
    "end": "1895039"
  },
  {
    "text": "and then you have to synchronize that also with with the main varnish server um this",
    "start": "1895039",
    "end": "1900559"
  },
  {
    "text": "solution caused so much problems that um when we inherited this project the first",
    "start": "1900559",
    "end": "1906480"
  },
  {
    "text": "thing we did was rip out most of this cash we actually just turned off one of these varnish servers it was crazy",
    "start": "1906480",
    "end": "1913360"
  },
  {
    "text": "but what was the original problem what were the original developers trying to solve",
    "start": "1913360",
    "end": "1918399"
  },
  {
    "text": "the problem was actually inefficient sql queries but they added all these layers of cache",
    "start": "1918399",
    "end": "1924559"
  },
  {
    "text": "because they didn't realize that the sql queries needed fixing",
    "start": "1924559",
    "end": "1930639"
  },
  {
    "text": "this is what i would have done instead i would have imported the data",
    "start": "1931600",
    "end": "1936960"
  },
  {
    "text": "as they did but i wouldn't have left it there i would have had some sort of data preprocessor and i would have churned",
    "start": "1936960",
    "end": "1943519"
  },
  {
    "text": "that data and put it in some sort of easy quick to access search index such as azure search elasticsearch i might",
    "start": "1943519",
    "end": "1950799"
  },
  {
    "text": "have even put this in redis or a document db now the application doesn't even need to",
    "start": "1950799",
    "end": "1956480"
  },
  {
    "text": "know that this data is complex or how it even got there it just needs to know that it can get this in a quick",
    "start": "1956480",
    "end": "1962799"
  },
  {
    "text": "way now the web app doesn't even need cash at this point no live cash i mean you could add some cash if you wanted to to",
    "start": "1962799",
    "end": "1969279"
  },
  {
    "text": "improve a little bit of the usability um that's ultimately not required or at least not",
    "start": "1969279",
    "end": "1974320"
  },
  {
    "text": "required for the same reason that was there to begin with",
    "start": "1974320",
    "end": "1979600"
  },
  {
    "start": "1980000",
    "end": "2005000"
  },
  {
    "text": "but you have another problem because the more infrastructure you add the more potential downtime you can cause",
    "start": "1980799",
    "end": "1988000"
  },
  {
    "text": "even if you're so even if you're dealing with 99.95 slas well that's",
    "start": "1988000",
    "end": "1994480"
  },
  {
    "text": "21 minutes okay you add another one another piece of infrastructure that's 43 another piece of infrastructure",
    "start": "1994480",
    "end": "2001039"
  },
  {
    "text": "that's an hour and so on",
    "start": "2001039",
    "end": "2005720"
  },
  {
    "start": "2005000",
    "end": "2054000"
  },
  {
    "text": "so when it comes to multi-layered solutions firstly it's really hard to clear multiple layers simultaneously",
    "start": "2006159",
    "end": "2013279"
  },
  {
    "text": "you're going to have to write a lot of code and have some really clever ways to do this in a in a predictable way",
    "start": "2013279",
    "end": "2019679"
  },
  {
    "text": "and if you decide to add more infrastructure well like the more infrastructure that you add",
    "start": "2019679",
    "end": "2024799"
  },
  {
    "text": "increases the instability and the downtime of your application and if you want to do some pre-indexing",
    "start": "2024799",
    "end": "2030559"
  },
  {
    "text": "okay that sounds like a good solution right okay how do you make sure that your pre-index is up to date",
    "start": "2030559",
    "end": "2037279"
  },
  {
    "text": "what if the data is changing faster than you can pre-index okay well that becomes a problem then you may",
    "start": "2037279",
    "end": "2043519"
  },
  {
    "text": "actually have to start thinking of that the way you've modeled your data to begin with or how you even get that data",
    "start": "2043519",
    "end": "2050720"
  },
  {
    "text": "into your database",
    "start": "2050720",
    "end": "2054040"
  },
  {
    "start": "2054000",
    "end": "2219000"
  },
  {
    "text": "let's talk about browser caching now we've just talked about",
    "start": "2060480",
    "end": "2067200"
  },
  {
    "text": "all the problems when you have control over the infrastructure and the",
    "start": "2067200",
    "end": "2072960"
  },
  {
    "text": "application what if you don't control it what if it's somewhere else and you have no",
    "start": "2072960",
    "end": "2078079"
  },
  {
    "text": "control over it sainsbury's is a uk-based",
    "start": "2078079",
    "end": "2085599"
  },
  {
    "text": "supermarket and i had this problem on their website",
    "start": "2085599",
    "end": "2090320"
  },
  {
    "text": "okay oh yeah yeah i cleared my cash and cookies thanks",
    "start": "2092720",
    "end": "2097920"
  },
  {
    "text": "maybe it's not the cash and cookies maybe it's the local storage",
    "start": "2097920",
    "end": "2103119"
  },
  {
    "text": "okay",
    "start": "2103119",
    "end": "2105440"
  },
  {
    "text": "oh i caused an error damn okay let's try that again let's clear the cash and cookies",
    "start": "2108880",
    "end": "2114960"
  },
  {
    "text": "okay and everything and local storage and then it worked all right great but okay",
    "start": "2114960",
    "end": "2121359"
  },
  {
    "text": "how would the developer know that this occurred on my computer they might know they might have added a",
    "start": "2121359",
    "end": "2128320"
  },
  {
    "text": "whole bunch of logging mechanisms into the javascript that manipulated the local storage maybe",
    "start": "2128320",
    "end": "2135839"
  },
  {
    "text": "uh maybe they have some sort of polling that happens",
    "start": "2135839",
    "end": "2141040"
  },
  {
    "text": "so the application when it comes when i visit the website it throws uh it throws some information down",
    "start": "2141040",
    "end": "2148400"
  },
  {
    "text": "maybe maybe not maybe they never even knew about this maybe they just assumed that clearing my",
    "start": "2148400",
    "end": "2154079"
  },
  {
    "text": "cash and cookies would fix the problem here's another example",
    "start": "2154079",
    "end": "2159838"
  },
  {
    "text": "this is a really great tdd course by the way um if you want to learn tdd and you're a c-sharp developer i highly",
    "start": "2160000",
    "end": "2165520"
  },
  {
    "text": "recommend this course it's only 14.99 or 14 pounds 99",
    "start": "2165520",
    "end": "2172359"
  },
  {
    "text": "no it's not it's 59.99 [Music]",
    "start": "2172960",
    "end": "2192430"
  },
  {
    "text": "[Applause] [Music]",
    "start": "2195730",
    "end": "2203210"
  },
  {
    "text": "i'll buy that now you can't always control what your users",
    "start": "2204960",
    "end": "2210240"
  },
  {
    "text": "do which which can be a problem if you want to do some caching on the client side",
    "start": "2210240",
    "end": "2217760"
  },
  {
    "start": "2219000",
    "end": "2305000"
  },
  {
    "text": "if you're dealing with data driven applications and browser cache",
    "start": "2220560",
    "end": "2225839"
  },
  {
    "text": "then you may want to consider something like redis sorry not redis redux",
    "start": "2225839",
    "end": "2230880"
  },
  {
    "text": "if you're dealing with redux you probably don't want to cache all of that heavy data because redux gets",
    "start": "2230880",
    "end": "2237920"
  },
  {
    "text": "really slow the more data you add to it redux is more to do with the",
    "start": "2237920",
    "end": "2243839"
  },
  {
    "text": "ui state which means that you have to leverage your local storage okay",
    "start": "2243839",
    "end": "2249920"
  },
  {
    "text": "well now we have two layers of cache in the browser we've seen that multiple",
    "start": "2249920",
    "end": "2254960"
  },
  {
    "text": "layers can cause a few problems my preference would be to try to not use local storage",
    "start": "2254960",
    "end": "2261760"
  },
  {
    "text": "and redux at the same time if possible which means trying to do more rapid",
    "start": "2261760",
    "end": "2268800"
  },
  {
    "text": "small payload requests if doing this then you have to be a lot more careful and a lot more clever with",
    "start": "2268800",
    "end": "2275359"
  },
  {
    "text": "how that data gets gets acquired and passed over because if",
    "start": "2275359",
    "end": "2281599"
  },
  {
    "text": "you have a large data set and you're dealing with graphs and charts for instance well you can't necessarily just",
    "start": "2281599",
    "end": "2287200"
  },
  {
    "text": "leave out data so you have to be careful with what you're sending over maybe if the user",
    "start": "2287200",
    "end": "2292960"
  },
  {
    "text": "only sees a certain view when they're zoomed out then you send them that data and if they zoom in then you send them a bit more",
    "start": "2292960",
    "end": "2299040"
  },
  {
    "text": "but then you have to start thinking about different different ways of doing this",
    "start": "2299040",
    "end": "2304160"
  },
  {
    "start": "2305000",
    "end": "2357000"
  },
  {
    "text": "so when it comes to caching things on the browser you really need to think of okay how do i clear that how do i",
    "start": "2305920",
    "end": "2313760"
  },
  {
    "text": "clear it local storage cookies redux probably need to inject some javascript in there that does some polling well how",
    "start": "2313760",
    "end": "2320960"
  },
  {
    "text": "do you even know what uh whether there's going to be a problem for the user you're going to have to add some more logging some monitoring like it's just a",
    "start": "2320960",
    "end": "2327200"
  },
  {
    "text": "lot more code and you can't control what the user does as you've seen",
    "start": "2327200",
    "end": "2332320"
  },
  {
    "text": "the user can easily just mess around with local storage and clear cookies and whatnot",
    "start": "2332320",
    "end": "2337839"
  },
  {
    "text": "and if you're dealing with uh with data-driven applications well you need to think of okay that first big payload",
    "start": "2337839",
    "end": "2345119"
  },
  {
    "text": "size yeah that might be okay um but then you have to deal with uh putting that in local storage",
    "start": "2345119",
    "end": "2351440"
  },
  {
    "text": "might be it might be okay but then you get multiple layers of cache",
    "start": "2351440",
    "end": "2356160"
  },
  {
    "start": "2357000",
    "end": "2425000"
  },
  {
    "text": "okay we've talked about cloudflare cdns",
    "start": "2358320",
    "end": "2364320"
  },
  {
    "text": "html output caching html output caching except",
    "start": "2364320",
    "end": "2369599"
  },
  {
    "text": "with a donut hole html output caching just the whole uh caching just methods in your",
    "start": "2369599",
    "end": "2376000"
  },
  {
    "text": "application don't do that causes pain we've talked about using dependency",
    "start": "2376000",
    "end": "2382240"
  },
  {
    "text": "injection to cache at the service layer and decouple the cache from your business logic",
    "start": "2382240",
    "end": "2388800"
  },
  {
    "text": "we've talked about caching at the data access layer we've talked about",
    "start": "2388800",
    "end": "2394000"
  },
  {
    "text": "external cache using radix redis we've talked about pre-indexing",
    "start": "2394000",
    "end": "2399200"
  },
  {
    "text": "multi-layered solutions and browser caching now",
    "start": "2399200",
    "end": "2405040"
  },
  {
    "text": "would you have an end-to-end solution like this",
    "start": "2405280",
    "end": "2411839"
  },
  {
    "text": "maybe it's possible i mean you know where the payment points are",
    "start": "2411839",
    "end": "2417119"
  },
  {
    "text": "now there's pain points everywhere but you know where they are and you know how to deal with them",
    "start": "2417119",
    "end": "2422800"
  },
  {
    "text": "so my recommendations",
    "start": "2422800",
    "end": "2428000"
  },
  {
    "start": "2425000",
    "end": "2578000"
  },
  {
    "text": "when it comes to caching i recommend caching as a last resort and what i mean by this is",
    "start": "2428000",
    "end": "2433680"
  },
  {
    "text": "caching isn't normally the solution maybe you need to profile your code do some optimization uh do some sql",
    "start": "2433680",
    "end": "2440960"
  },
  {
    "text": "optimization maybe it's the infrastructure you may not need to do the caching to begin with",
    "start": "2440960",
    "end": "2446880"
  },
  {
    "text": "if you are going to do caching i would definitely prefer preprocessing and indexing because uh",
    "start": "2446880",
    "end": "2454000"
  },
  {
    "text": "you can do this this in isolation then your your live cache doesn't need to um",
    "start": "2454000",
    "end": "2459520"
  },
  {
    "text": "doesn't need to handle uh errors definitely definitely have a way to automatically",
    "start": "2459520",
    "end": "2465680"
  },
  {
    "text": "clear your cache when content or data changes definitely you want to time out the",
    "start": "2465680",
    "end": "2471760"
  },
  {
    "text": "cache automatically at some point because if that automatic cache doesn't time if that cache doesn't automatically",
    "start": "2471760",
    "end": "2479760"
  },
  {
    "text": "clear with your code then you want it to time out by itself so you want to be able to say oh no",
    "start": "2479760",
    "end": "2486560"
  },
  {
    "text": "for some reason the cache isn't clearing oh that's okay it'll clear in an hour anyway okay",
    "start": "2486560",
    "end": "2492640"
  },
  {
    "text": "and you also want to be able to do it manually and this might be an application restart if that's",
    "start": "2492640",
    "end": "2497680"
  },
  {
    "text": "acceptable for your users and your scenario uh definitely avoid caching everything",
    "start": "2497680",
    "end": "2503280"
  },
  {
    "text": "because in my experience if i cache everything at some point i'm going to cash something that i shouldn't and that",
    "start": "2503280",
    "end": "2509119"
  },
  {
    "text": "can cause privacy and security issues and that's just a real pain",
    "start": "2509119",
    "end": "2515200"
  },
  {
    "text": "definitely cash close to the problem if you know where the problem code is",
    "start": "2515200",
    "end": "2520240"
  },
  {
    "text": "then put the cash there don't don't cash away from it because if you're cashing far away from the problem you're just",
    "start": "2520240",
    "end": "2526400"
  },
  {
    "text": "going to hide other problems and they'll poke up pop up at some point and just cause some",
    "start": "2526400",
    "end": "2531440"
  },
  {
    "text": "pain definitely keep your caching solutions simple and obvious because at some point",
    "start": "2531440",
    "end": "2538079"
  },
  {
    "text": "another developer is going to come along and they need to be able to understand what your motivations were when you",
    "start": "2538079",
    "end": "2543760"
  },
  {
    "text": "implemented this cache multiple layers of cache definitely",
    "start": "2543760",
    "end": "2549280"
  },
  {
    "text": "cause multiple headaches so my personal preference is to keep the",
    "start": "2549280",
    "end": "2554560"
  },
  {
    "text": "number of layers down to one or two it would be super rare if i got higher",
    "start": "2554560",
    "end": "2559760"
  },
  {
    "text": "than that and remember there's no such thing as a perfect caching solution there's only",
    "start": "2559760",
    "end": "2565359"
  },
  {
    "text": "trade-offs and it really depends on your scenario what you're building the types of users and",
    "start": "2565359",
    "end": "2573800"
  },
  {
    "text": "you",
    "start": "2578640",
    "end": "2580720"
  }
]