[
  {
    "text": "all right let's get this thrill of the road my name is Ashley grant and I'm here to talk to you about JavaScript or",
    "start": "30",
    "end": "6509"
  },
  {
    "text": "Ekman script without any webpack transpilers or frameworks although there's a secret little bit of fun at",
    "start": "6509",
    "end": "13740"
  },
  {
    "text": "the end where I do use a transpiler but still no web pack or frameworks so let's",
    "start": "13740",
    "end": "22500"
  },
  {
    "text": "get started",
    "start": "22500",
    "end": "25310"
  },
  {
    "text": "so the agenda for today we're gonna be looking at my sweet jQuery app from 2012",
    "start": "30200",
    "end": "36739"
  },
  {
    "text": "it's an application that should look familiar in terms of the code base for all of us it's applications we've",
    "start": "36739",
    "end": "43400"
  },
  {
    "text": "written before it actually doesn't use any framework it's just a jQuery based application we're gonna look at that",
    "start": "43400",
    "end": "50600"
  },
  {
    "text": "then we're going to start learning about ES 2019 we're not going to learn about",
    "start": "50600",
    "end": "56030"
  },
  {
    "text": "web pack we're not going to learn about transpilers and we're not going to learn about frameworks all of the features",
    "start": "56030",
    "end": "61670"
  },
  {
    "text": "that we that we learn about today though we will use them natively in the browser and with that we will be awesome",
    "start": "61670",
    "end": "71380"
  },
  {
    "text": "so first let's get to that demo of the jQuery app so this is my awesome awesome",
    "start": "71380",
    "end": "83000"
  },
  {
    "text": "jQuery app this is its code you'll see that it has a lot of HTML and Here I am",
    "start": "83000",
    "end": "88369"
  },
  {
    "text": "using bootstrap for CSS because I'm not any good at that but down at the bottom you'll see that I load requirejs",
    "start": "88369",
    "end": "95149"
  },
  {
    "text": "and this should look familiar to all of us who have been doing web development for a few years you load requirejs you",
    "start": "95149",
    "end": "103280"
  },
  {
    "text": "configure requirejs and then load your application using requirejs now if we",
    "start": "103280",
    "end": "111320"
  },
  {
    "text": "look at the source code for this application well first off we have the",
    "start": "111320",
    "end": "117229"
  },
  {
    "text": "required j/s configuration that we are required to write for require j/s I come",
    "start": "117229",
    "end": "123920"
  },
  {
    "text": "in here I set up a base URL for where my application lives and some paths if I needed to I could shim in libraries I",
    "start": "123920",
    "end": "130970"
  },
  {
    "text": "don't need that for this application but in here in my actual application when I",
    "start": "130970",
    "end": "136520"
  },
  {
    "text": "want to write code I have to use a module format called AMD asynchronous",
    "start": "136520",
    "end": "141890"
  },
  {
    "text": "module definition format so when you when you write an application using this",
    "start": "141890",
    "end": "148670"
  },
  {
    "text": "this module format honestly I feel like it's it's finicky and I don't know it's",
    "start": "148670",
    "end": "155690"
  },
  {
    "text": "just not friendly it's not user friendly to me especially defining module names using strings and things like that",
    "start": "155690",
    "end": "163129"
  },
  {
    "text": "I'm just not fan of it the other things that we have in here I have a lot of jQuery I'm",
    "start": "163129",
    "end": "168920"
  },
  {
    "text": "setting up click event handlers I'm declaring some variables and then if we",
    "start": "168920",
    "end": "175340"
  },
  {
    "text": "come down into welcome we'll see some",
    "start": "175340",
    "end": "183439"
  },
  {
    "text": "VAR me equals this who's written something akin to this in their life as a JavaScript developer yes so there's",
    "start": "183439",
    "end": "190099"
  },
  {
    "text": "this application holds a lot of es5 style code in it but it does work it",
    "start": "190099",
    "end": "197930"
  },
  {
    "text": "runs very well here we go my first jQuery app I've got data binding set up",
    "start": "197930",
    "end": "203840"
  },
  {
    "text": "so you know if I want to change my name to Thomas as I type the data binding handles all of that this is all done",
    "start": "203840",
    "end": "210889"
  },
  {
    "text": "using jQuery and native JavaScript that was available since 2009 I have pages in",
    "start": "210889",
    "end": "219829"
  },
  {
    "text": "here so I can go and load this page that has all of the github users and it's a pretty simple application if I if I",
    "start": "219829",
    "end": "226430"
  },
  {
    "text": "click Submit here you'll see that my name comes up and going back to the",
    "start": "226430",
    "end": "232609"
  },
  {
    "text": "source code I just I want to show like how much jQuery there isn't here we have",
    "start": "232609",
    "end": "238280"
  },
  {
    "text": "something called an HTTP client if we look at that it's just a wrapper around jQuery so now that we have this",
    "start": "238280",
    "end": "246199"
  },
  {
    "text": "application let's talk about some of the ways that we can utilize es 2015 and up",
    "start": "246199",
    "end": "253329"
  },
  {
    "text": "to make this application better but only in ways that run natively in the browser",
    "start": "253329",
    "end": "262359"
  },
  {
    "text": "so yeah the browser can do what let's look at some of the things that today's",
    "start": "267770",
    "end": "272780"
  },
  {
    "text": "browsers that are shipping today can do natively the first thing is getting rid",
    "start": "272780",
    "end": "281060"
  },
  {
    "text": "of something called VAR in the in es5 and every version of JavaScript before",
    "start": "281060",
    "end": "286130"
  },
  {
    "text": "es 2015 when you wanted to declare a variable you had two options",
    "start": "286130",
    "end": "291349"
  },
  {
    "text": "you just didn't declare it you just started using it or you could use the VAR keyword to declare it but the",
    "start": "291349",
    "end": "298520"
  },
  {
    "text": "problem with this VAR keyword is it doesn't work like developers expect it",
    "start": "298520",
    "end": "305990"
  },
  {
    "text": "to if you come from a C or C++ Java c-sharp background you're used to",
    "start": "305990",
    "end": "312819"
  },
  {
    "text": "variables being declared inside of a set of curly braces and that variable only",
    "start": "312819",
    "end": "318800"
  },
  {
    "text": "lives inside of that set of curly braces and with VAR that only happened if you",
    "start": "318800",
    "end": "324349"
  },
  {
    "text": "were inside of a function if you're inside of an if statement and you declare a variable using var it's going",
    "start": "324349",
    "end": "330590"
  },
  {
    "text": "to be hoisted up to the top of whatever scope it can get whatever function scope",
    "start": "330590",
    "end": "335780"
  },
  {
    "text": "it is in so it just it wasn't good",
    "start": "335780",
    "end": "343340"
  },
  {
    "text": "unfortunately JavaScript developers had to live with this for 20 years and there was all kinds of ways we got around this",
    "start": "343340",
    "end": "349789"
  },
  {
    "text": "basically they all boiled down to wrap everything in functions and that's a bit",
    "start": "349789",
    "end": "355070"
  },
  {
    "text": "of a pain in the butt when you just want to write an if statement right thankfully with es2015",
    "start": "355070",
    "end": "361310"
  },
  {
    "text": "we got some new stuff we got let and Const these are keywords that work with",
    "start": "361310",
    "end": "367310"
  },
  {
    "text": "and to declare variables using block level scoping which means that if you",
    "start": "367310",
    "end": "373880"
  },
  {
    "text": "have curly braces if you have two pair of curly braces and you declare a variable inside of them that variable",
    "start": "373880",
    "end": "379969"
  },
  {
    "text": "will not exist outside of those curly braces let's look at how this can help solve problems that var has so here I",
    "start": "379969",
    "end": "388190"
  },
  {
    "text": "have a function just called foo it takes in an input checks to see if input is",
    "start": "388190",
    "end": "393680"
  },
  {
    "text": "greater than five if it is then inside of that if statement it declares a variable called output multiplies the",
    "start": "393680",
    "end": "401089"
  },
  {
    "text": "input by - and then outside the F statement it returns the value of output now I do",
    "start": "401089",
    "end": "407330"
  },
  {
    "text": "want to say that if you run in strict mode with es5 this will throw an error",
    "start": "407330",
    "end": "412400"
  },
  {
    "text": "okay but if you're not running in strict mode what will happen is when you run",
    "start": "412400",
    "end": "418040"
  },
  {
    "text": "and you call foo 7 you'll get an output of 14 okay because you declared output",
    "start": "418040",
    "end": "425300"
  },
  {
    "text": "it was hoisted out of that if statement the the declaration was was hoisted out",
    "start": "425300",
    "end": "431570"
  },
  {
    "text": "of that if statement to the top of this function which meant which means that this returned output is perfectly valid",
    "start": "431570",
    "end": "439150"
  },
  {
    "text": "okay but for me as a a recovering c-sharp developer C++ Java I look at",
    "start": "439150",
    "end": "445850"
  },
  {
    "text": "this and I say output should be undefined right right shouldn't it be",
    "start": "445850",
    "end": "450950"
  },
  {
    "text": "undefined at this point in my code I should get in it I should get an error thrown of some sort well thankfully now",
    "start": "450950",
    "end": "458900"
  },
  {
    "text": "if you use let or Const you do get an error with this exact same code just",
    "start": "458900",
    "end": "464660"
  },
  {
    "text": "swapping let in for VAR or Const in for var fixes this problem now we get",
    "start": "464660",
    "end": "472010"
  },
  {
    "text": "reference error output is undefined another nice thing in es2015 is that",
    "start": "472010",
    "end": "478190"
  },
  {
    "text": "you're no longer allowed if you're writing es2015 code you're",
    "start": "478190",
    "end": "484130"
  },
  {
    "text": "automatically in strict mode so using undeclared variables is not allowed anymore and so in this first code the",
    "start": "484130",
    "end": "494510"
  },
  {
    "text": "code on the left I'm running all of this code inside of Chrome's debugger or",
    "start": "494510",
    "end": "499700"
  },
  {
    "text": "sorry developer tools and because I did not use any es2015 features chrome",
    "start": "499700",
    "end": "506120"
  },
  {
    "text": "allowed me to be not in strict mode so it just allowed that to run and it was",
    "start": "506120",
    "end": "512090"
  },
  {
    "text": "happy with it over here though because I used let I'm just like that I'm into",
    "start": "512090",
    "end": "517789"
  },
  {
    "text": "strict mode and I'm not allowed to use on declared variables because with an undeclared variable technically that",
    "start": "517789",
    "end": "525380"
  },
  {
    "text": "return output might work in JavaScript also we no longer have hoisting and in",
    "start": "525380",
    "end": "533660"
  },
  {
    "text": "hoisting is where the var var whatever the name",
    "start": "533660",
    "end": "539000"
  },
  {
    "text": "of the variable is actually gets lifted up to the top of your function whether it's deep inside a bunch of if",
    "start": "539000",
    "end": "545149"
  },
  {
    "text": "statements and switch statements and loops and everything or it's in the second line of your code the JavaScript",
    "start": "545149",
    "end": "551600"
  },
  {
    "text": "engine would just say let's send that up to the top and so code like this was",
    "start": "551600",
    "end": "557089"
  },
  {
    "text": "perfectly valid because when this rant when this code runs what the JavaScript",
    "start": "557089",
    "end": "562399"
  },
  {
    "text": "engine will do is take var a move that up to the top it'll say var a but it",
    "start": "562399",
    "end": "568399"
  },
  {
    "text": "will not initialize the value like I'm doing here where I say var a equals five",
    "start": "568399",
    "end": "573529"
  },
  {
    "text": "so just put var a up there so that that code or that that variable has been",
    "start": "573529",
    "end": "578829"
  },
  {
    "text": "named and then it'll run a equals seven so a becomes seven then I'll run a",
    "start": "578829",
    "end": "584420"
  },
  {
    "text": "equals five so a becomes five and thus five gets logged out personally though",
    "start": "584420",
    "end": "591250"
  },
  {
    "text": "again c-sharp Java style developer I look at this and I say that code is",
    "start": "591250",
    "end": "597800"
  },
  {
    "text": "wrong I'm using a variable before I declare it why is that not throwing an error well thankfully in es2015 again a",
    "start": "597800",
    "end": "605410"
  },
  {
    "text": "is not defined when I say a equals seven I haven't declared a yet so by using let",
    "start": "605410",
    "end": "612050"
  },
  {
    "text": "and Const we get rid of these types of errors and these can be really per Nik ewis you know because that using var it",
    "start": "612050",
    "end": "620300"
  },
  {
    "text": "gets hoisted up to the top of your code maybe you're using the same variable in",
    "start": "620300",
    "end": "625640"
  },
  {
    "text": "two different the same variable name in two different places but insert it like in the second place you do something if",
    "start": "625640",
    "end": "631579"
  },
  {
    "text": "it hasn't been explicitly set but somehow it if it's explicitly getting set and you're like what is going on no",
    "start": "631579",
    "end": "638510"
  },
  {
    "text": "longer have that problem with let or Const now let and Const let declares a",
    "start": "638510",
    "end": "646370"
  },
  {
    "text": "variable that's value can change Const declares a variable that is constant",
    "start": "646370",
    "end": "652519"
  },
  {
    "text": "which I realize is a contradiction in terms but that's how it is now when you",
    "start": "652519",
    "end": "660140"
  },
  {
    "text": "declare a variable using Const and you set that variable equal to an object for",
    "start": "660140",
    "end": "667339"
  },
  {
    "text": "example you can still change properties on that object the properties of the object are",
    "start": "667339",
    "end": "674149"
  },
  {
    "text": "not constant it's just the value of your variable which in that case would be a",
    "start": "674149",
    "end": "679490"
  },
  {
    "text": "reference to that object that cannot change when I'm writing JavaScript code",
    "start": "679490",
    "end": "685070"
  },
  {
    "text": "I default to Const and I fall back to let and I never ever ever use VAR period",
    "start": "685070",
    "end": "693829"
  },
  {
    "text": "I have es Lent or TS Lent rules that will flag that as an error so that it",
    "start": "693829",
    "end": "699500"
  },
  {
    "text": "can never get into my code next classes",
    "start": "699500",
    "end": "706839"
  },
  {
    "text": "we always had a problem in JavaScript we're building classes was was difficult",
    "start": "706839",
    "end": "715310"
  },
  {
    "text": "because javascript is a prototypical language it uses prototype inheritance",
    "start": "715310",
    "end": "720380"
  },
  {
    "text": "and I don't know what that means as a c-sharp or Java whatever developer it",
    "start": "720380",
    "end": "726920"
  },
  {
    "text": "meant that declaring classes was really wonky and so with es 2015 they decided",
    "start": "726920",
    "end": "732500"
  },
  {
    "text": "to give us the class keyword under the covers this is just syntactic sugar it your code actually as far as the browser",
    "start": "732500",
    "end": "739820"
  },
  {
    "text": "can is concern gets transformed in to the old way of declaring classes but the",
    "start": "739820",
    "end": "746510"
  },
  {
    "text": "best part is it's always transformed correctly and I'll tell you what the code you're looking at on here at least",
    "start": "746510",
    "end": "753170"
  },
  {
    "text": "once when I've given this talk somebody told me I did it incorrectly and that was a problem with declaring classes in",
    "start": "753170",
    "end": "758500"
  },
  {
    "text": "es5 was I'm not sure if this is correct you know now a lot of us use something",
    "start": "758500",
    "end": "766760"
  },
  {
    "text": "like Babel or typescript to transpile classes into this syntax but here's the",
    "start": "766760",
    "end": "772579"
  },
  {
    "text": "thing that's not necessary the browser's natively understand all of",
    "start": "772579",
    "end": "779510"
  },
  {
    "text": "today's browsers natively understand what a class is remember every single",
    "start": "779510",
    "end": "785870"
  },
  {
    "text": "piece of code that you're seeing on here I ran in chrome and here's the thing I",
    "start": "785870",
    "end": "791899"
  },
  {
    "text": "didn't run this in Chrome yesterday I ran this code in October so this isn't",
    "start": "791899",
    "end": "798980"
  },
  {
    "text": "new this stuff's been around for a while I actually ran a did a",
    "start": "798980",
    "end": "804560"
  },
  {
    "text": "version of this talk in 2017 and the browser still including edge understood",
    "start": "804560",
    "end": "811970"
  },
  {
    "text": "the class syntax back then but so here we see I have moved from the old syntax",
    "start": "811970",
    "end": "819080"
  },
  {
    "text": "to the new I personally feel like the new syntax is a lot friendlier does everybody agree yeah",
    "start": "819080",
    "end": "824690"
  },
  {
    "text": "now if you're a functional developer and you think that the class sent at or the class keyword is is the worst thing to",
    "start": "824690",
    "end": "831470"
  },
  {
    "text": "ever happen to JavaScript that's cool that's fine nobody's forcing you to use",
    "start": "831470",
    "end": "836960"
  },
  {
    "text": "it don't use it I prefer this syntax because I think in classes so I'm gonna",
    "start": "836960",
    "end": "842330"
  },
  {
    "text": "declare a class and as you see though the old-school way of doing it which",
    "start": "842330",
    "end": "847340"
  },
  {
    "text": "apparently might be wrong works exactly the same as the new school way of doing it",
    "start": "847340",
    "end": "853000"
  },
  {
    "text": "now this is not es2015 but every",
    "start": "853000",
    "end": "858350"
  },
  {
    "text": "conference you go to you're gonna have somebody standing on a stage telling you you should never use jQuery ever again I",
    "start": "858350",
    "end": "865630"
  },
  {
    "text": "get it jQuery is still useful even in 2019 but it's not useful for the reason",
    "start": "866170",
    "end": "872390"
  },
  {
    "text": "most people think it is useful most people think of jQuery for I think",
    "start": "872390",
    "end": "878390"
  },
  {
    "text": "personally I think of two things widgets all those beautiful jQuery UI widgets or dealing with the Dom because",
    "start": "878390",
    "end": "887150"
  },
  {
    "text": "Dom is is unfriendly and for widgets yet it's still very useful I will say that",
    "start": "887150",
    "end": "893900"
  },
  {
    "text": "through the use of modern frameworks and everything or just modern code it's a",
    "start": "893900",
    "end": "899480"
  },
  {
    "text": "lot of times not necessarily there are vanilla j/s or frameworks specific versions of those widgets that are",
    "start": "899480",
    "end": "905600"
  },
  {
    "text": "better to use they don't use jQuery but",
    "start": "905600",
    "end": "910750"
  },
  {
    "text": "for just working with the Dom there is no need to use jQuery the Dom natively",
    "start": "910750",
    "end": "918050"
  },
  {
    "text": "has the api's for you so this is a simple decision tree for everybody in",
    "start": "918050",
    "end": "923240"
  },
  {
    "text": "here to remember in terms of whether or not you need jQuery I would say in here",
    "start": "923240",
    "end": "928520"
  },
  {
    "text": "if you're using a current version of bootstrap you got to use jQuery but that's going away as well bootstraps",
    "start": "928520",
    "end": "934490"
  },
  {
    "text": "getting rid of its need for jQuery this code right here there's no need to use jQuery use",
    "start": "934490",
    "end": "943010"
  },
  {
    "text": "document query selector all this has been in the browsers since ie 8 I think",
    "start": "943010",
    "end": "950720"
  },
  {
    "text": "this is not new this is available and if you don't like having to type out",
    "start": "950720",
    "end": "956930"
  },
  {
    "text": "document dot query selector all and you really prefer using a dollar sign just",
    "start": "956930",
    "end": "962810"
  },
  {
    "text": "say let dollar sign equal document dot query selector all you're golden now for",
    "start": "962810",
    "end": "973520"
  },
  {
    "text": "those of you in the back this might be a little bit difficult to read but here I have some jQuery code for setting up a",
    "start": "973520",
    "end": "980030"
  },
  {
    "text": "click handler for links on a page and then here I have the Dom native API for",
    "start": "980030",
    "end": "989030"
  },
  {
    "text": "how to do this now I will say that I personally think that the jQuery API for doing events is a lot friendlier than",
    "start": "989030",
    "end": "996050"
  },
  {
    "text": "the Dom native API but when you look at how big jQuery is in terms of download",
    "start": "996050",
    "end": "1002680"
  },
  {
    "text": "size versus just just writing out a little bit extra here I feel like it",
    "start": "1002680",
    "end": "1008140"
  },
  {
    "text": "becomes harder and harder to justify the friendlier syntax there so jQuery not",
    "start": "1008140",
    "end": "1016810"
  },
  {
    "text": "even once arrow functions arrow functions are awesome because they solve a fun another",
    "start": "1016810",
    "end": "1023590"
  },
  {
    "text": "fundamental problem with the JavaScript language which is that the this keyword",
    "start": "1023590",
    "end": "1030300"
  },
  {
    "text": "can be whatever a developer wants it to be there are ways to call functions",
    "start": "1030300",
    "end": "1035439"
  },
  {
    "text": "where you set what this is going to be and if you have written your function expecting this to be one thing and the",
    "start": "1035440",
    "end": "1043540"
  },
  {
    "text": "person who calls your function sets it to be something else your functions gonna fall apart",
    "start": "1043540",
    "end": "1048610"
  },
  {
    "text": "I bet this has happened to you before and thankfully with arrow functions this",
    "start": "1048610",
    "end": "1055150"
  },
  {
    "text": "problem goes away what arrow functions do is they take whatever this is in the lexical scope",
    "start": "1055150",
    "end": "1063460"
  },
  {
    "text": "that you write that function in so wherever you write this arrow function whatever this is at that",
    "start": "1063460",
    "end": "1069070"
  },
  {
    "text": "that code runs it takes this and makes sure that it stays as this inside of",
    "start": "1069070",
    "end": "1075370"
  },
  {
    "text": "your arrow function okay the other thing that they do is keep you from having to",
    "start": "1075370",
    "end": "1081640"
  },
  {
    "text": "write the word function repeatedly so that's nice let's look at some problems",
    "start": "1081640",
    "end": "1087280"
  },
  {
    "text": "with the classic style of writing a function and how this can be hard to figure out so I realize this is",
    "start": "1087280",
    "end": "1095170"
  },
  {
    "text": "difficult to see but it's a function that says hey what's this here I'll make it a little can everybody see this yeah",
    "start": "1095170",
    "end": "1102940"
  },
  {
    "text": "okay so hey what's this it'll log out this at the beginning of the function it has an inner function called are you",
    "start": "1102940",
    "end": "1109420"
  },
  {
    "text": "sure it logs out again what this is and calls that function so if I just call",
    "start": "1109420",
    "end": "1118510"
  },
  {
    "text": "from the console hey what's this what do you expect to be logged out first and",
    "start": "1118510",
    "end": "1124390"
  },
  {
    "text": "second in the global scope what is this",
    "start": "1124390",
    "end": "1130360"
  },
  {
    "text": "going to be set to at least if you're running in the browser it's gonna be set",
    "start": "1130360",
    "end": "1136210"
  },
  {
    "text": "to the window object okay so when I just from the console I call hey what's this",
    "start": "1136210",
    "end": "1142210"
  },
  {
    "text": "I would expect that this inside of my function is going to be the window",
    "start": "1142210",
    "end": "1148570"
  },
  {
    "text": "object but then what about inside of that child function is it still going to",
    "start": "1148570",
    "end": "1153910"
  },
  {
    "text": "be the window object or is it going to be like that function that hey what's",
    "start": "1153910",
    "end": "1161110"
  },
  {
    "text": "this function this is stuff that's hard to know inside of old school functions",
    "start": "1161110",
    "end": "1167140"
  },
  {
    "text": "so here we see that in this case it's always window right but what if I use",
    "start": "1167140",
    "end": "1173830"
  },
  {
    "text": "the dot call function that's available on any function to set what this is",
    "start": "1173830",
    "end": "1179800"
  },
  {
    "text": "going to be what do you expect this to be on the first line now this is aadi",
    "start": "1179800",
    "end": "1186640"
  },
  {
    "text": "audience-participation and it's fine if you're wrong in fact I hope you're wrong",
    "start": "1186640",
    "end": "1191850"
  },
  {
    "text": "so when I call hey what's this you and",
    "start": "1192270",
    "end": "1197740"
  },
  {
    "text": "passing in or using dot call that means that I'm setting this inside of that function",
    "start": "1197740",
    "end": "1202840"
  },
  {
    "text": "to be whatever I put here so in this case it's a string so I personally would expect that on the first line the first",
    "start": "1202840",
    "end": "1209980"
  },
  {
    "text": "console.log I would expect to see the string it me okay but then inside of",
    "start": "1209980",
    "end": "1215769"
  },
  {
    "text": "that child function what is this going to be is it going to be it me or is it",
    "start": "1215769",
    "end": "1221259"
  },
  {
    "text": "going to be the global this what do you think it's gonna be you're not sure as a",
    "start": "1221259",
    "end": "1229960"
  },
  {
    "text": "naive JavaScript developer I would given that I've just run it using the global",
    "start": "1229960",
    "end": "1235360"
  },
  {
    "text": "this and they were the same I might expect that they're gonna be the same but they're not when I call into are you",
    "start": "1235360",
    "end": "1242679"
  },
  {
    "text": "sure now this is still the global window object but this outside of that was not",
    "start": "1242679",
    "end": "1250240"
  },
  {
    "text": "and this is the type of code that will trip you up because I bet you most of",
    "start": "1250240",
    "end": "1256509"
  },
  {
    "text": "the time when you write code like this when you have a little child function you're expecting this to be the same",
    "start": "1256509",
    "end": "1262600"
  },
  {
    "text": "thing as it is inside the outer function well thankfully with arrow functions now",
    "start": "1262600",
    "end": "1267970"
  },
  {
    "text": "we get that okay so here the only thing I've changed is instead of declaring are",
    "start": "1267970",
    "end": "1273070"
  },
  {
    "text": "you sure as with the function keyword I'm using an arrow function and now when I call it globally it works exactly the",
    "start": "1273070",
    "end": "1280240"
  },
  {
    "text": "same but when I use dot call to set what this is going to be when I call hey",
    "start": "1280240",
    "end": "1286720"
  },
  {
    "text": "what's this this stays the same for both of them I think that this is you know",
    "start": "1286720",
    "end": "1293830"
  },
  {
    "text": "syntactic sugar that is super sweet because I'm able I now I could have done",
    "start": "1293830",
    "end": "1300490"
  },
  {
    "text": "this in the old way I could have used you know when I said are you sure inside of hey what's this I could have said are",
    "start": "1300490",
    "end": "1306639"
  },
  {
    "text": "you sure call this and I could have made sure it was the same but who's gonna",
    "start": "1306639",
    "end": "1311799"
  },
  {
    "text": "remember to do that I use arrow functions all the time one place that I",
    "start": "1311799",
    "end": "1318070"
  },
  {
    "text": "use arrow functions doesn't even have to do with this most of the time it's just",
    "start": "1318070",
    "end": "1323440"
  },
  {
    "text": "because it's a more terse syntax but is using promises now one thing with",
    "start": "1323440",
    "end": "1330730"
  },
  {
    "text": "promises is we have this new thing called fetch which is a native",
    "start": "1330730",
    "end": "1336909"
  },
  {
    "text": "API for making HTTP calls now in Jay in",
    "start": "1336909",
    "end": "1343389"
  },
  {
    "text": "jQuery or in a lot of old-school wrappers around the xml httprequest",
    "start": "1343389",
    "end": "1349119"
  },
  {
    "text": "api you would use callbacks and you would end up getting into something called callback hell so my slides are",
    "start": "1349119",
    "end": "1357759"
  },
  {
    "text": "out but now instead of using callbacks here like dollar get jason and then i",
    "start": "1357759",
    "end": "1364809"
  },
  {
    "text": "pass in a function okay and what's a problem with that I don't know what this is going to be when I write that now I",
    "start": "1364809",
    "end": "1371320"
  },
  {
    "text": "can use promises and I just say fetch a URL and then parse out the JSON and then",
    "start": "1371320",
    "end": "1377729"
  },
  {
    "text": "log it out and the cool thing is because I'm using arrow functions here if I were",
    "start": "1377729",
    "end": "1383559"
  },
  {
    "text": "inside of a function maybe inside of an instance of a class and I want to take the data that I pulled down from that",
    "start": "1383559",
    "end": "1389619"
  },
  {
    "text": "API I can say this dot my data equals data and it will automatically work the",
    "start": "1389619",
    "end": "1398080"
  },
  {
    "text": "way I expect it to but where where",
    "start": "1398080",
    "end": "1406389"
  },
  {
    "text": "promises and fetch really shine is when you have when you might be making",
    "start": "1406389",
    "end": "1411700"
  },
  {
    "text": "multiple dependent API calls I realize this doesn't happen too often this is often a sign of a overly chatty",
    "start": "1411700",
    "end": "1418659"
  },
  {
    "text": "API but let me ask you this if I want to use some of the data down like how do I",
    "start": "1418659",
    "end": "1428830"
  },
  {
    "text": "do this where you know I want to use some of this data somewhere else in my code I gotta like write callbacks and call func I don't know the promise based",
    "start": "1428830",
    "end": "1436479"
  },
  {
    "text": "API is so much friendlier here I just say dot then convert parse the Jason go",
    "start": "1436479",
    "end": "1442629"
  },
  {
    "text": "fetch the URI that I just got from that downloaded data do it again alright guys",
    "start": "1442629",
    "end": "1448419"
  },
  {
    "text": "now I'm gonna log out the data the other cool thing is that I don't have to worry about having a widescreen",
    "start": "1448419",
    "end": "1453970"
  },
  {
    "text": "monitor and like a 4k widescreen monitor because everything's going off the side",
    "start": "1453970",
    "end": "1459340"
  },
  {
    "text": "of the screen with fetch everything stays in one line we're sorry with promises everything",
    "start": "1459340",
    "end": "1465489"
  },
  {
    "text": "stays in one line not sure why my arrows",
    "start": "1465489",
    "end": "1471070"
  },
  {
    "text": "are out of order here's one though that is probably gonna blow your all of your",
    "start": "1471070",
    "end": "1476409"
  },
  {
    "text": "minds which are modules native es2015 modules work in the browser here we go",
    "start": "1476409",
    "end": "1486609"
  },
  {
    "text": "I've got a some module called main j/s that I loaded up how did I load it well",
    "start": "1486609",
    "end": "1492789"
  },
  {
    "text": "instead of saying script type equals JavaScript or whatever I say script type equals module and that tells the browser",
    "start": "1492789",
    "end": "1499529"
  },
  {
    "text": "go ahead and run this code using your module loader and all of the modern",
    "start": "1499529",
    "end": "1506739"
  },
  {
    "text": "browsers support this out of the box and so as you see here it loads it up and",
    "start": "1506739",
    "end": "1511960"
  },
  {
    "text": "I'm using import statements inside of main GA s and the browser knows how to parse those as well",
    "start": "1511960",
    "end": "1517839"
  },
  {
    "text": "natively there is one difference when you're using native modules compared to",
    "start": "1517839",
    "end": "1524679"
  },
  {
    "text": "if you've gotten used to using es2015 style modules but with a transpiler okay",
    "start": "1524679",
    "end": "1531580"
  },
  {
    "text": "you'll see here that with my import statements I'm including the dot j s",
    "start": "1531580",
    "end": "1536789"
  },
  {
    "text": "that is currently required when using native modules natively in the browser",
    "start": "1536789",
    "end": "1542619"
  },
  {
    "text": "you have to include the extension when you're using modules in say in an",
    "start": "1542619",
    "end": "1548589"
  },
  {
    "text": "environment that gets transpiled typically you don't have to include the extension if it is dot j s that's just",
    "start": "1548589",
    "end": "1555580"
  },
  {
    "text": "assumed so that is a little bit of a wrinkle for you to remember but we'll",
    "start": "1555580",
    "end": "1561039"
  },
  {
    "text": "look in a minute at how that might not be a wrinkle next up we have for loops",
    "start": "1561039",
    "end": "1568049"
  },
  {
    "text": "in JavaScript we have had a for in loop for quite a while the problem with the",
    "start": "1568049",
    "end": "1574839"
  },
  {
    "text": "for in loop is that it doesn't do what you would expect if you're used to a for",
    "start": "1574839",
    "end": "1580479"
  },
  {
    "text": "each loop for example in c-sharp they don't loop over what you're",
    "start": "1580479",
    "end": "1585940"
  },
  {
    "text": "expecting thankfully with es2015 we now have a for of loop that does loop over",
    "start": "1585940",
    "end": "1591639"
  },
  {
    "text": "what you're expecting now when I say it the for in loop does not loop over what you're expecting what do I mean well",
    "start": "1591639",
    "end": "1598779"
  },
  {
    "text": "here I have an array that just has two words in it hello and goodbye and I use a four in",
    "start": "1598779",
    "end": "1603820"
  },
  {
    "text": "loop to loop over the items in that array what do you expect I will see when",
    "start": "1603820",
    "end": "1610930"
  },
  {
    "text": "I run this code obviously I'm gonna see the word item show up twice but what",
    "start": "1610930",
    "end": "1616810"
  },
  {
    "text": "will be after that any guesses personally coming from C sharp with a",
    "start": "1616810",
    "end": "1624160"
  },
  {
    "text": "for each loop I would expect to see item hello item good bye right that's not",
    "start": "1624160",
    "end": "1629290"
  },
  {
    "text": "what happens when you run this you had item 0 item 1 because what a for in loop",
    "start": "1629290",
    "end": "1634540"
  },
  {
    "text": "does is iterate over the properties basically of an object and indexed",
    "start": "1634540",
    "end": "1639670"
  },
  {
    "text": "property or and the indexes of that object and that's not what I expect to",
    "start": "1639670",
    "end": "1645580"
  },
  {
    "text": "do this is workable I can use this but if I'm using this it's almost like why",
    "start": "1645580",
    "end": "1650830"
  },
  {
    "text": "not just use a for loop like an old C style for loop thankfully the for of loop works the way",
    "start": "1650830",
    "end": "1657970"
  },
  {
    "text": "I would expect it to so when I say for let item of array I get hello and",
    "start": "1657970",
    "end": "1665500"
  },
  {
    "text": "goodbye as I would have expected personally I would consider maybe",
    "start": "1665500",
    "end": "1671770"
  },
  {
    "text": "setting up a TS Lent or something because it's very seldom that you're gonna actually want to use the for in",
    "start": "1671770",
    "end": "1677560"
  },
  {
    "text": "loop unless you're in like a framework like you're writing a framework typically when you want to iterate over",
    "start": "1677560",
    "end": "1682750"
  },
  {
    "text": "an array like object you're gonna want to use the for of the other cool thing",
    "start": "1682750",
    "end": "1688240"
  },
  {
    "text": "with the for of is that it actually works with something called iterables and so you could conceivably have a for",
    "start": "1688240",
    "end": "1696250"
  },
  {
    "text": "of loop that goes on forever if you and i'm not going to get into that but look",
    "start": "1696250",
    "end": "1702100"
  },
  {
    "text": "it up look at a iterables in yes 2015 and it's a really cool feature next",
    "start": "1702100",
    "end": "1710820"
  },
  {
    "text": "string templates or template literals these are syntactic sugar plain and",
    "start": "1710820",
    "end": "1717310"
  },
  {
    "text": "simple but they're available to us now in the in the browser instead of",
    "start": "1717310",
    "end": "1722500"
  },
  {
    "text": "wrapping your string and either single or double quotes use a back tick like that and wherever you want to template",
    "start": "1722500",
    "end": "1729250"
  },
  {
    "text": "in values write an expression inside of a dollar sign curly brace now here's the",
    "start": "1729250",
    "end": "1735250"
  },
  {
    "text": "cool thing you can write Express inside of the dollar sign curly brace and that's what I just said right and",
    "start": "1735250",
    "end": "1741550"
  },
  {
    "text": "then I said it's the cool thing it's the cool thing because that means you you",
    "start": "1741550",
    "end": "1746950"
  },
  {
    "text": "can write arbitrary JavaScript code inside of there now I'm not saying you",
    "start": "1746950",
    "end": "1752350"
  },
  {
    "text": "should but conceivably you can do just about whatever you want inside of those those curly braces but the cool thing I",
    "start": "1752350",
    "end": "1762040"
  },
  {
    "text": "think of on a daily basis is the syntactic sugar of shortening up things like this hello you know named up first",
    "start": "1762040",
    "end": "1769240"
  },
  {
    "text": "name dot last that's my name being I'm being greeted now I just say hello dollar sign curly brace name dot first",
    "start": "1769240",
    "end": "1775510"
  },
  {
    "text": "space name dot dollar sign curly brace name dot last it's a lot tercer and I",
    "start": "1775510",
    "end": "1781780"
  },
  {
    "text": "think it's also a lot more readable than using string concatenation you can also",
    "start": "1781780",
    "end": "1788590"
  },
  {
    "text": "use it and actually here is a spot where I'm going to show you how you can write",
    "start": "1788590",
    "end": "1793870"
  },
  {
    "text": "arbitrary code inside of there so I have this add and log that here using the",
    "start": "1793870",
    "end": "1799510"
  },
  {
    "text": "old-school string concatenation way of doing things I wanted to add up these",
    "start": "1799510",
    "end": "1805030"
  },
  {
    "text": "two numbers or the two values that are passed in and then I wanted to write it out but because string concatenation",
    "start": "1805030",
    "end": "1812080"
  },
  {
    "text": "uses the plus sign I can't add those two numbers now maybe I could put them in",
    "start": "1812080",
    "end": "1817480"
  },
  {
    "text": "parentheses or something but that's that's one key but I can get rid of a line of code now by using string certain",
    "start": "1817480",
    "end": "1825280"
  },
  {
    "text": "template literals by interpolating in the X plus y and it actually adds those",
    "start": "1825280",
    "end": "1830860"
  },
  {
    "text": "two numbers forming in line in this code now a minute ago I talked about promises",
    "start": "1830860",
    "end": "1837790"
  },
  {
    "text": "using fetch but here's the cool thing if you don't like writing dot then",
    "start": "1837790",
    "end": "1844440"
  },
  {
    "text": "continuously if you look at that syntax and you're like that's yep that's so 2015 well we don't have to do",
    "start": "1844440",
    "end": "1852220"
  },
  {
    "text": "that anymore natively in the browsers we have a sink and a weight now the cool thing with async in a weight is that",
    "start": "1852220",
    "end": "1857980"
  },
  {
    "text": "they're built on top of promises and generators and that means that you can await a promise you can also do some",
    "start": "1857980",
    "end": "1865090"
  },
  {
    "text": "stuff with generators but most people don't end up writing generators but we all end up writing promises and so that",
    "start": "1865090",
    "end": "1870640"
  },
  {
    "text": "means that instead of saying fetch going out to the github API to get the users converting it from Jason or parsing out",
    "start": "1870640",
    "end": "1877840"
  },
  {
    "text": "the Jason and then logging out the the zeroth person's login we can await that",
    "start": "1877840",
    "end": "1884140"
  },
  {
    "text": "response and then I'm using something here I haven't talked about but this is I'm reaching into the first item in that",
    "start": "1884140",
    "end": "1891310"
  },
  {
    "text": "array and grabbing the login property out of it and this is a more more",
    "start": "1891310",
    "end": "1899490"
  },
  {
    "text": "syntactic sugar that JavaScript gives us nowadays and then I just log that that",
    "start": "1899490",
    "end": "1905980"
  },
  {
    "text": "login variable out that I declared by you and I'm awaiting both of these now I",
    "start": "1905980",
    "end": "1912640"
  },
  {
    "text": "do want to talk about the await keywords specifically in the console when you're",
    "start": "1912640",
    "end": "1918490"
  },
  {
    "text": "writing when you're writing code using async and await normal code you have to",
    "start": "1918490",
    "end": "1924130"
  },
  {
    "text": "put any any time you use the await keyword it has to be inside of a function that's been marked with the",
    "start": "1924130",
    "end": "1930430"
  },
  {
    "text": "async keyword so async function blah-de-blah and then you can await stuff inside of there that's a bit of a",
    "start": "1930430",
    "end": "1937810"
  },
  {
    "text": "pain in the butt when you're just wanting to do some quick code on the console unfortunately when chrome first",
    "start": "1937810",
    "end": "1944590"
  },
  {
    "text": "started supporting async and await natively you had to still do that on on the",
    "start": "1944590",
    "end": "1949990"
  },
  {
    "text": "console and I was really annoying but recently last summer I think they",
    "start": "1949990",
    "end": "1956410"
  },
  {
    "text": "stopped requiring that and now you can await things at the root in the console",
    "start": "1956410",
    "end": "1961720"
  },
  {
    "text": "and that's really awesome for someone like me writing out these demo pieces of",
    "start": "1961720",
    "end": "1966820"
  },
  {
    "text": "code and running them again every piece of code you see in this slide deck is",
    "start": "1966820",
    "end": "1973200"
  },
  {
    "text": "running natively in Chrome okay so they",
    "start": "1973200",
    "end": "1979990"
  },
  {
    "text": "the browser's support this stuff today edge supports this Safari Firefox they",
    "start": "1979990",
    "end": "1988750"
  },
  {
    "text": "all support these things natively and the new version of edge is built on top",
    "start": "1988750",
    "end": "1993850"
  },
  {
    "text": "of chromium which basically means that anything chrome supports the new edge supports as well",
    "start": "1993850",
    "end": "1999240"
  },
  {
    "text": "now you could start getting crazy with using all of this",
    "start": "1999240",
    "end": "2004260"
  },
  {
    "text": "um and use the the the thing I was talking about a minute ago is called object restructuring or array",
    "start": "2004260",
    "end": "2009390"
  },
  {
    "text": "destructuring and so here when I reached into this array and grabbed from the first item",
    "start": "2009390",
    "end": "2016470"
  },
  {
    "text": "the login property I when I reach into the array I'm using array D structuring",
    "start": "2016470",
    "end": "2023040"
  },
  {
    "text": "okay and then when I reached into that object inside the array I'm using object D structuring it just allows you to pull",
    "start": "2023040",
    "end": "2029880"
  },
  {
    "text": "properties or items out of arrays and immediately declare them as variables in your function and so I'm using that here",
    "start": "2029880",
    "end": "2037470"
  },
  {
    "text": "in this crazy code where I have a wrapped fetch and I'm just assuming I'm",
    "start": "2037470",
    "end": "2042930"
  },
  {
    "text": "always going to get Jason back so I have an async function called get Jason I",
    "start": "2042930",
    "end": "2048270"
  },
  {
    "text": "await the fetch and then I return await result Jason they actually the await is",
    "start": "2048270",
    "end": "2053520"
  },
  {
    "text": "not necessary there but I haven't updated the slide then I call that",
    "start": "2053520",
    "end": "2059638"
  },
  {
    "text": "function using this promise doll helper function promise that all is is a native",
    "start": "2059639",
    "end": "2066330"
  },
  {
    "text": "library function in promises that says I need you to create a promise that will",
    "start": "2066330",
    "end": "2072060"
  },
  {
    "text": "not resolve until all of these promises I'm passing to you have all resolved and",
    "start": "2072060",
    "end": "2077638"
  },
  {
    "text": "then I want you to pass me the result of all of those functions as an array of promise results so I await all of those",
    "start": "2077639",
    "end": "2087388"
  },
  {
    "text": "functions in one line and because I'm awaiting promised at all all of the",
    "start": "2087389",
    "end": "2092580"
  },
  {
    "text": "outputs of those functions they're no longer promises it's it's stripped out",
    "start": "2092580",
    "end": "2097740"
  },
  {
    "text": "the stripped off the promise and just giving me the data and so I'm reaching in I have two items in my array the",
    "start": "2097740",
    "end": "2104880"
  },
  {
    "text": "first one is a list of users the second one is a list of events from github and so on this first line here where's my so",
    "start": "2104880",
    "end": "2116040"
  },
  {
    "text": "on this line right here what I'm saying is I want to reach in I'm throwing away the first item in the array that",
    "start": "2116040",
    "end": "2122940"
  },
  {
    "text": "underscore that's not special JavaScript syntax it's just kind of a pattern for",
    "start": "2122940",
    "end": "2128280"
  },
  {
    "text": "saying I just I'm ignoring this item so I'm ignoring the first item in that array I'm going to the second item in",
    "start": "2128280",
    "end": "2134910"
  },
  {
    "text": "the array which is an object and I'm reaching and grabbing its login property and",
    "start": "2134910",
    "end": "2140640"
  },
  {
    "text": "declaring that as a local variable inside my function on the second line",
    "start": "2140640",
    "end": "2145740"
  },
  {
    "text": "the next line I'm reaching in this line right here I'm reaching in to the first",
    "start": "2145740",
    "end": "2152160"
  },
  {
    "text": "item in the array which has a repo property every event that happens in github happens on an event or sorry it",
    "start": "2152160",
    "end": "2159390"
  },
  {
    "text": "happens on a repo so I'm reaching into that repo property and I'm D structuring that repo property which hat is an",
    "start": "2159390",
    "end": "2167370"
  },
  {
    "text": "object itself and it has a name property so I'm grabbing that name property but",
    "start": "2167370",
    "end": "2173040"
  },
  {
    "text": "for my purposes I want to give that a different variable name so I'm changing the name of the name property to be repo",
    "start": "2173040",
    "end": "2179610"
  },
  {
    "text": "name when it becomes a variable and then I'm able to log out second login and event repo and the time I ran this code",
    "start": "2179610",
    "end": "2186870"
  },
  {
    "text": "that's what I got every time I run this code I'll get different results because the events stream is always happening",
    "start": "2186870",
    "end": "2195170"
  },
  {
    "text": "next let's talk about the rest operator here I'm using the rest operator with",
    "start": "2195260",
    "end": "2203550"
  },
  {
    "text": "arrays and what is the arrest operator it's this dot dot dot here and it basically it's just like the slide title",
    "start": "2203550",
    "end": "2210270"
  },
  {
    "text": "says it says give me the rest so I have an array of languages JavaScript HTML sequel c-sharp",
    "start": "2210270",
    "end": "2216570"
  },
  {
    "text": "now I'm gonna reach into that array using the structuring and the first item",
    "start": "2216570",
    "end": "2221760"
  },
  {
    "text": "in that array is gonna be a now a variable in my in my scope called languages or language for this talk and",
    "start": "2221760",
    "end": "2227640"
  },
  {
    "text": "then I want to take the rest of the items in that array that's where the name comes from the rest of the items in",
    "start": "2227640",
    "end": "2233550"
  },
  {
    "text": "that array and put them into a new array called other languages so that's that's",
    "start": "2233550",
    "end": "2240690"
  },
  {
    "text": "the rest object there and we'll look at hopefully in a minute we'll look at some",
    "start": "2240690",
    "end": "2246260"
  },
  {
    "text": "things you can do with that now this is array with this is the array rest",
    "start": "2246260",
    "end": "2251580"
  },
  {
    "text": "operator it works exactly the same with objects though you can have object rest",
    "start": "2251580",
    "end": "2258480"
  },
  {
    "text": "and object spread will look at spread in a second so here I have an object called",
    "start": "2258480",
    "end": "2263520"
  },
  {
    "text": "car and it has a couple of properties manufacturer all of that stuff and I",
    "start": "2263520",
    "end": "2268560"
  },
  {
    "text": "want to reach into that and pull out the properties that are special for an electric car and then put",
    "start": "2268560",
    "end": "2274260"
  },
  {
    "text": "everything else into an object called normal car stuff so I'm using again object D structuring and then the rest",
    "start": "2274260",
    "end": "2282030"
  },
  {
    "text": "operator for with the object so now I have a range variable battery capacity",
    "start": "2282030",
    "end": "2287070"
  },
  {
    "text": "right variable and then everything else inside of the normal car stuff object I",
    "start": "2287070",
    "end": "2293359"
  },
  {
    "text": "use this all the time both of the the rest operator object D structuring I",
    "start": "2293359",
    "end": "2301080"
  },
  {
    "text": "write code that looks like this all the time and when I switch back over to writing c-sharp code I miss it dearly so",
    "start": "2301080",
    "end": "2308849"
  },
  {
    "text": "that was the rest object or sorry the rest operator but there is another operator that looks exactly the same",
    "start": "2308849",
    "end": "2315420"
  },
  {
    "text": "that's called the spread operator and it kind of works in the opposite of the rest operator where the rest is taking",
    "start": "2315420",
    "end": "2322080"
  },
  {
    "text": "the rest of things and grabbing it up now with the spread operator I'm taking",
    "start": "2322080",
    "end": "2327570"
  },
  {
    "text": "everything and spreading it out it's like peanut butter I'm spreading this object out like peanut butter or spreading this array out like peanut",
    "start": "2327570",
    "end": "2333839"
  },
  {
    "text": "butter so here I've got my car object that I just had on the last slide but",
    "start": "2333839",
    "end": "2340260"
  },
  {
    "text": "now I want to give my car a name it's a Tesla all Tesla's have names so I say my car name Timmy and then dot",
    "start": "2340260",
    "end": "2348119"
  },
  {
    "text": "that dot car spreads all the properties from that my from that car object into",
    "start": "2348119",
    "end": "2355080"
  },
  {
    "text": "the my car object and Timmy is actually the name on my wife's car also here I'm",
    "start": "2355080",
    "end": "2361920"
  },
  {
    "text": "using console table maybe you haven't heard of that it's a nice way to represent an array or an object in the",
    "start": "2361920",
    "end": "2369320"
  },
  {
    "text": "console so what is a useful thing to do",
    "start": "2369320",
    "end": "2374990"
  },
  {
    "text": "with this spread operator well it's a great way to make copies of arrays or",
    "start": "2374990",
    "end": "2381240"
  },
  {
    "text": "objects you may have heard of what is it object dot assign is a new es2015",
    "start": "2381240",
    "end": "2387619"
  },
  {
    "text": "library feature or a library function that allows you to take all the",
    "start": "2387619",
    "end": "2392849"
  },
  {
    "text": "properties from one object and assign them to another object I find that using the spread operator in an object is a",
    "start": "2392849",
    "end": "2400530"
  },
  {
    "text": "much tercer and friendlier syntax for doing that and it",
    "start": "2400530",
    "end": "2405900"
  },
  {
    "text": "the same here this is an a really old SNL skit that Rob Schneider did making",
    "start": "2405900",
    "end": "2413490"
  },
  {
    "text": "copies it's probably weight before use you guys it's time anyways uh so here",
    "start": "2413490",
    "end": "2419970"
  },
  {
    "text": "I'm making make a copy of that names array and we see that first off they're",
    "start": "2419970",
    "end": "2426570"
  },
  {
    "text": "different arrays I'm using the strict equality operator there so they're not the same array but they have the same",
    "start": "2426570",
    "end": "2431820"
  },
  {
    "text": "properties are the same values now I have spent 40 minutes talking about",
    "start": "2431820",
    "end": "2441710"
  },
  {
    "text": "features that run natively in the browsers of today right",
    "start": "2441710",
    "end": "2447560"
  },
  {
    "text": "but what about IE right I'm showing you how to natively load modules using this",
    "start": "2447560",
    "end": "2453900"
  },
  {
    "text": "type equals module but we all know that IE has not received any updates in I",
    "start": "2453900",
    "end": "2460050"
  },
  {
    "text": "don't even know how long and you know that's a problem because well ie doesn't",
    "start": "2460050",
    "end": "2467790"
  },
  {
    "text": "know about promises ie doesn't know about async await ie doesn't know about templated literals the spread operators",
    "start": "2467790",
    "end": "2473430"
  },
  {
    "text": "the restaurant it doesn't know about any of that so can we have a tip for the",
    "start": "2473430",
    "end": "2479910"
  },
  {
    "text": "poor souls that are stuck supporting them here's the cool thing type know module on your script tags are",
    "start": "2479910",
    "end": "2488940"
  },
  {
    "text": "not type equals no module just no module that's a typo no module comes to the",
    "start": "2488940",
    "end": "2495630"
  },
  {
    "text": "rescue so when you have a script type equals module browsers that understand that",
    "start": "2495630",
    "end": "2501570"
  },
  {
    "text": "will load it okay but Internet Explorer has no idea what script type equals",
    "start": "2501570",
    "end": "2507510"
  },
  {
    "text": "module means so it's not gonna go and load and try to run the JavaScript in",
    "start": "2507510",
    "end": "2512570"
  },
  {
    "text": "script slash app slash main so that's that's great for us because it would",
    "start": "2512570",
    "end": "2518340"
  },
  {
    "text": "error out if it tried to run that this no module attribute has been added and",
    "start": "2518340",
    "end": "2523620"
  },
  {
    "text": "allows us to say to browsers that support modules don't run this but",
    "start": "2523620",
    "end": "2529440"
  },
  {
    "text": "Internet Explorer has no idea what no module means so it ignores it and it",
    "start": "2529440",
    "end": "2534510"
  },
  {
    "text": "says script source I know what that means I can load that JavaScript so here I'm using native modules if the",
    "start": "2534510",
    "end": "2542339"
  },
  {
    "text": "browser supports it otherwise I'm using requirejs and I have a legacy set up and",
    "start": "2542339",
    "end": "2549630"
  },
  {
    "text": "we're gonna look at a demo of how to use this in just a minute but first we're",
    "start": "2549630",
    "end": "2555029"
  },
  {
    "text": "gonna look at a demo where I did all of this by hand which is my es 2018 application the version of our jQuery",
    "start": "2555029",
    "end": "2562459"
  },
  {
    "text": "application that we looked at a minute ago so remember this is my jQuery app I",
    "start": "2562459",
    "end": "2567890"
  },
  {
    "text": "do stuff in here data binding works I go over here I see",
    "start": "2567890",
    "end": "2573689"
  },
  {
    "text": "my list of github users now I have a modern JavaScript app and you know it's",
    "start": "2573689",
    "end": "2578880"
  },
  {
    "text": "modern cuz it says so in the title it works exactly the same as I type stuff",
    "start": "2578880",
    "end": "2586199"
  },
  {
    "text": "in the data binding is working if I click Submit that works I try to change pages that works so it works exactly the",
    "start": "2586199",
    "end": "2594359"
  },
  {
    "text": "same but the underlying code base is all pure es 2018 code let's look at it so",
    "start": "2594359",
    "end": "2604859"
  },
  {
    "text": "instead of having you know main and jQuery and requirejs and all of that now",
    "start": "2604859",
    "end": "2611039"
  },
  {
    "text": "I have a scripts folder in my Lib I just",
    "start": "2611039",
    "end": "2616289"
  },
  {
    "text": "have this HTTP client that I wrote now to use fetch and I have main j/s where",
    "start": "2616289",
    "end": "2624749"
  },
  {
    "text": "now I'm using import statements I'm loading up things using Const I think",
    "start": "2624749",
    "end": "2631529"
  },
  {
    "text": "there might be a var that snuck in somewhere in here and then so I import",
    "start": "2631529",
    "end": "2636959"
  },
  {
    "text": "the two pages welcome and users let's look at users in users my activate now I",
    "start": "2636959",
    "end": "2645959"
  },
  {
    "text": "just it's an async function I just await get jason telling it to go to the users API",
    "start": "2645959",
    "end": "2651630"
  },
  {
    "text": "I use query selector on that ID users container and I set the enter HTML and",
    "start": "2651630",
    "end": "2658289"
  },
  {
    "text": "then here I'm using I created an empty string and that I'm concatenated on to that using the spread operator well I",
    "start": "2658289",
    "end": "2667409"
  },
  {
    "text": "called data dot map data is an array of jQuery",
    "start": "2667409",
    "end": "2673200"
  },
  {
    "text": "github users and I'm calling dot map on that I pass each item in that array to",
    "start": "2673200",
    "end": "2679559"
  },
  {
    "text": "the this generate HTML function which will take this inline template that I've",
    "start": "2679559",
    "end": "2690180"
  },
  {
    "text": "written and spit out the rendered HTML for each individual user and then I use",
    "start": "2690180",
    "end": "2696960"
  },
  {
    "text": "the spread operator to rip that array apart and it can when you use the concat",
    "start": "2696960",
    "end": "2706140"
  },
  {
    "text": "function on a string you can pass an N number of items in number of strings to it and so it doesn't I don't care how",
    "start": "2706140",
    "end": "2712710"
  },
  {
    "text": "many items are in the the data array previously I probably would have built",
    "start": "2712710",
    "end": "2719609"
  },
  {
    "text": "this using MapReduce and it would have been a lot jankier of a syntax I feel like this is a much friendlier syntax",
    "start": "2719609",
    "end": "2725730"
  },
  {
    "text": "for taking an array and and and concatenating it into a single array",
    "start": "2725730",
    "end": "2730950"
  },
  {
    "text": "there sorry a single string if we come back or if we go over to welcome J s I'm",
    "start": "2730950",
    "end": "2737700"
  },
  {
    "text": "now using a class instead of the janky old school style of programming classes",
    "start": "2737700",
    "end": "2745349"
  },
  {
    "text": "in JavaScript you'll see that instead of using in my activate function if we look",
    "start": "2745349",
    "end": "2753000"
  },
  {
    "text": "at in the jQuery application we look at welcome there's an activate function",
    "start": "2753000",
    "end": "2759740"
  },
  {
    "text": "somewhere right here you I use that VAR",
    "start": "2759740",
    "end": "2765540"
  },
  {
    "text": "me equals this but because I'm using a class a proper class this is going to be",
    "start": "2765540",
    "end": "2771900"
  },
  {
    "text": "what I expect it to be and then also because I'm using our arrow functions",
    "start": "2771900",
    "end": "2777450"
  },
  {
    "text": "for my event handlers this will be what I expected to be inside of those as well",
    "start": "2777450",
    "end": "2782520"
  },
  {
    "text": "and so we go back and look at look at",
    "start": "2782520",
    "end": "2789270"
  },
  {
    "text": "that code we see a much smaller amount of code being written in there but it",
    "start": "2789270",
    "end": "2796770"
  },
  {
    "text": "still runs exactly the same and as I showed you it works in chrome alright",
    "start": "2796770",
    "end": "2802079"
  },
  {
    "text": "and I'll show you in let's let's go to Firefox",
    "start": "2802079",
    "end": "2808460"
  },
  {
    "text": "load it up you'll notice the URL is the same everything works if I go to the",
    "start": "2808460",
    "end": "2815430"
  },
  {
    "text": "developer tools we'll see here that I'm debugging native modules here I did not",
    "start": "2815430",
    "end": "2824880"
  },
  {
    "text": "this is not Firefox nightly or anything I'm not using these special command line",
    "start": "2824880",
    "end": "2830340"
  },
  {
    "text": "flags this is just the version of Firefox you'll run today",
    "start": "2830340",
    "end": "2835530"
  },
  {
    "text": "what about edge and I'm not talking about well what the heck let's load the",
    "start": "2835530",
    "end": "2841680"
  },
  {
    "text": "edge beta let's look at that",
    "start": "2841680",
    "end": "2847110"
  },
  {
    "text": "modern GIS app boom works in the and I expected it to work in the new version",
    "start": "2847110",
    "end": "2853800"
  },
  {
    "text": "of edge because it's based on chromium which Chrome itself is based on now what",
    "start": "2853800",
    "end": "2859320"
  },
  {
    "text": "about edge so here I have my modern",
    "start": "2859320",
    "end": "2866400"
  },
  {
    "text": "JavaScript app it still works exactly the same if we come in here and look",
    "start": "2866400",
    "end": "2872550"
  },
  {
    "text": "we'll see in our debugger for some",
    "start": "2872550",
    "end": "2880740"
  },
  {
    "text": "reason it's not showing it's weird it",
    "start": "2880740",
    "end": "2886560"
  },
  {
    "text": "should be showing the import statements and everything for some reason they're not showing up but all of these browsers",
    "start": "2886560",
    "end": "2894000"
  },
  {
    "text": "support that script type equals module what browser doesn't support script type",
    "start": "2894000",
    "end": "2899370"
  },
  {
    "text": "equals module well at least on my machine it's Internet Explorer 11 so",
    "start": "2899370",
    "end": "2906690"
  },
  {
    "text": "let's look at 11 here I have my modern JavaScript app but",
    "start": "2906690",
    "end": "2913080"
  },
  {
    "text": "that is a lie this is actually the jQuery app running because if I go here",
    "start": "2913080",
    "end": "2921210"
  },
  {
    "text": "you'll see that I have this legacy folder and in here I just have a copy of my old jQuery app but in my index.html I",
    "start": "2921210",
    "end": "2931100"
  },
  {
    "text": "load up script type equals module to my new style code and then I use this I",
    "start": "2931100",
    "end": "2936840"
  },
  {
    "text": "have this legacy folder and I'm loading my old-school jQuery application so it works in both but I bet you're",
    "start": "2936840",
    "end": "2945490"
  },
  {
    "text": "probably thinking there's a problem there right I now have to somehow maintain two completely separate",
    "start": "2945490",
    "end": "2952630"
  },
  {
    "text": "applications one written like it's 2012 one written like it's 2019 right that's",
    "start": "2952630",
    "end": "2959859"
  },
  {
    "text": "a problem I don't know about you guys but I got enough trouble supporting one application a little long - especially",
    "start": "2959859",
    "end": "2966519"
  },
  {
    "text": "if they're the exact same UI and that's a problem that every time I'd give this",
    "start": "2966519",
    "end": "2971980"
  },
  {
    "text": "talk people would come up to me and say well well what am I supposed to do you know I part of the reason I use Babel or",
    "start": "2971980",
    "end": "2978250"
  },
  {
    "text": "typescript is to transpile away these things so my code works in old versions",
    "start": "2978250",
    "end": "2984480"
  },
  {
    "text": "are basically an Internet Explorer and I don't have to maintain multiple code",
    "start": "2984480",
    "end": "2989500"
  },
  {
    "text": "bases that's crazy nobody's gonna actually do that so I decided to look at that problem and what I came up with and",
    "start": "2989500",
    "end": "2997059"
  },
  {
    "text": "this is a very very simple application consists of a button and when you click",
    "start": "2997059",
    "end": "3002640"
  },
  {
    "text": "it it will prompt you are it'll say something to you and you click yes or no",
    "start": "3002640",
    "end": "3007890"
  },
  {
    "text": "or ok or cancel and it will tell you what you said so let's look at that this",
    "start": "3007890",
    "end": "3015960"
  },
  {
    "text": "kiss application running as you can see",
    "start": "3015960",
    "end": "3022140"
  },
  {
    "text": "here it's just called play I was playing around with this got this started or I got this working today so I'm gonna go",
    "start": "3022140",
    "end": "3028650"
  },
  {
    "text": "to Chrome and you can see my beautiful application and if I learn something I",
    "start": "3028650",
    "end": "3035369"
  },
  {
    "text": "say yes okay now let's look at the actual code for this application you'll see here I",
    "start": "3035369",
    "end": "3043529"
  },
  {
    "text": "have script type equals module and it points to source /mj s if I look at",
    "start": "3043529",
    "end": "3051450"
  },
  {
    "text": "source / main j/s this is an es2015 module I'm importing a function called",
    "start": "3051450",
    "end": "3059670"
  },
  {
    "text": "ask from ask a s and then I'm actually using that here and I don't know why",
    "start": "3059670",
    "end": "3067890"
  },
  {
    "text": "there's red squigglies there but ignore that and I'm set up an event listener on",
    "start": "3067890",
    "end": "3073440"
  },
  {
    "text": "that button and I when I click it it will call it a little wait ask and let's look at what asked is",
    "start": "3073440",
    "end": "3079050"
  },
  {
    "text": "doing because ask is a little bit of a helper code you might want to consider writing from time to time here I have a",
    "start": "3079050",
    "end": "3087210"
  },
  {
    "text": "a blocking synchronous call to the confirm a function that's built into the",
    "start": "3087210",
    "end": "3093330"
  },
  {
    "text": "browser the problem with the confirm function is that it stops and it waits but I want to write my other code so",
    "start": "3093330",
    "end": "3100350"
  },
  {
    "text": "that it can keep maybe running or something so I'm wrapping it in a promise and my promise resolves whenever",
    "start": "3100350",
    "end": "3107790"
  },
  {
    "text": "that button is clicked and I return the result of calling confirm but yeah it's",
    "start": "3107790",
    "end": "3115800"
  },
  {
    "text": "a very simple application I'll give you that but it's not position that this",
    "start": "3115800",
    "end": "3120960"
  },
  {
    "text": "code here won't run in Internet Explorer so if I want to take this code it's",
    "start": "3120960",
    "end": "3126360"
  },
  {
    "text": "JavaScript code if I want to take this code and run it and Internet Explorer what would I do what how would I how do",
    "start": "3126360",
    "end": "3135960"
  },
  {
    "text": "I take modern JavaScript code and allow it to run in older browsers say again",
    "start": "3135960",
    "end": "3144410"
  },
  {
    "text": "well yeah but I want to take this code I want to run this code really that's not",
    "start": "3144410",
    "end": "3151020"
  },
  {
    "text": "possible but we can use Babel to transpile modern code into code that the",
    "start": "3151020",
    "end": "3157200"
  },
  {
    "text": "older browsers will support now I can use babel and have it transpile everything and then i could have every",
    "start": "3157200",
    "end": "3163110"
  },
  {
    "text": "browser run that transpiled code and it'll probably run a little bit slower",
    "start": "3163110",
    "end": "3168690"
  },
  {
    "text": "because there's a lot of code that it has to inject for anna wait but i only",
    "start": "3168690",
    "end": "3175110"
  },
  {
    "text": "want that code to run if you're on Internet Explorer because everything else supports Brau sports modules and",
    "start": "3175110",
    "end": "3181560"
  },
  {
    "text": "async and await and promises and all of that natively but Internet Explorer does not support native brought modules it",
    "start": "3181560",
    "end": "3187590"
  },
  {
    "text": "doesn't support promises it doesn't know what a promise is and it obviously doesn't support a sink and a weight so",
    "start": "3187590",
    "end": "3194220"
  },
  {
    "text": "what I'm going to do is pull in Babel and I'm just going to configure it to do",
    "start": "3194220",
    "end": "3200100"
  },
  {
    "text": "a couple of things I'm just using the very basic preset that Babel gives us it's a default",
    "start": "3200100",
    "end": "3206790"
  },
  {
    "text": "preset I am telling it to transform my native modules to use AMD modules so that",
    "start": "3206790",
    "end": "3214170"
  },
  {
    "text": "requirejs can load them and then I'm using this module extension plug-in that I found that stripped that allows me to",
    "start": "3214170",
    "end": "3221640"
  },
  {
    "text": "strip out extensions from module names which was a lifesaver so here if it sees",
    "start": "3221640",
    "end": "3227850"
  },
  {
    "text": "an extension name of Jas it just makes that an empty string and so instead of",
    "start": "3227850",
    "end": "3233400"
  },
  {
    "text": "saying in ass in main Jas instead of saying import from dot slash ask Jas",
    "start": "3233400",
    "end": "3239940"
  },
  {
    "text": "that'll get transpiled into the required js4 dot slash ask now I can run this I",
    "start": "3239940",
    "end": "3248430"
  },
  {
    "text": "have in my package Jason I have a build",
    "start": "3248430",
    "end": "3255990"
  },
  {
    "text": "command Babel I'm just using the babel CLI in the real world you'll probably build up something a little bit more",
    "start": "3255990",
    "end": "3261290"
  },
  {
    "text": "complex than this maybe use webpack or something to do all this but I am doing",
    "start": "3261290",
    "end": "3266730"
  },
  {
    "text": "the absolute bare minimum necessary to make this all work so I tell it to",
    "start": "3266730",
    "end": "3272070"
  },
  {
    "text": "transpile the source directory spit it out to a directory called dist and i want you to bring on source maps",
    "start": "3272070",
    "end": "3278940"
  },
  {
    "text": "for me now in my index.html file i do a couple of things i load babbles",
    "start": "3278940",
    "end": "3287490"
  },
  {
    "text": "collection of polyfills this will bring things like promised into the browser so",
    "start": "3287490",
    "end": "3293190"
  },
  {
    "text": "that older browsers know how to work with those things then I load requirejs once that has loaded I'll load in a",
    "start": "3293190",
    "end": "3300600"
  },
  {
    "text": "config a very thin little config that I wrote for requirejs and then I tell it",
    "start": "3300600",
    "end": "3305610"
  },
  {
    "text": "to load the main module and notice that I say mean I don't say dist slash main",
    "start": "3305610",
    "end": "3311820"
  },
  {
    "text": "or source slash may I just say main now when Internet Explorer tries to run this",
    "start": "3311820",
    "end": "3319280"
  },
  {
    "text": "helps if I actually do it so I will I'll",
    "start": "3320720",
    "end": "3326010"
  },
  {
    "text": "say NPM run build",
    "start": "3326010",
    "end": "3329630"
  },
  {
    "text": "and riveting television it'll actually spit it out not sure why it's so slow",
    "start": "3333799",
    "end": "3342059"
  },
  {
    "text": "all right it's spat out those two files and so if I look in my distal dur I have a mangy a",
    "start": "3342059",
    "end": "3348540"
  },
  {
    "text": "s that definitely looks different now but it's an AMD style module remember I have",
    "start": "3348540",
    "end": "3355440"
  },
  {
    "text": "that a sink and a weight well that all gets turned into this generator style code who wants to write this by hand I",
    "start": "3355440",
    "end": "3361950"
  },
  {
    "text": "know I don't I'd rather use a sink and a weight apparently it has yeah yeah anyways so",
    "start": "3361950",
    "end": "3369540"
  },
  {
    "text": "this is what Internet Explorer is gonna run but the cool thing is that I have source maps turned on so an Internet",
    "start": "3369540",
    "end": "3376200"
  },
  {
    "text": "Explorer I can still see my important you know the actual code that I'm running so now if I start up the HTTP",
    "start": "3376200",
    "end": "3384869"
  },
  {
    "text": "server and I press f5 my little",
    "start": "3384869",
    "end": "3390720"
  },
  {
    "text": "application works the same in Internet Explorer as it did other the other way",
    "start": "3390720",
    "end": "3399450"
  },
  {
    "text": "now let me prove to you that this code out of the box my my script type equals",
    "start": "3399450",
    "end": "3404880"
  },
  {
    "text": "module stuff does not work natively I'm going to comment it all out come back",
    "start": "3404880",
    "end": "3411990"
  },
  {
    "text": "over here and nothing happens when I click the click Me button but because",
    "start": "3411990",
    "end": "3417930"
  },
  {
    "text": "I'm loading in all this requirejs stuff does work and here's the cool thing I",
    "start": "3417930",
    "end": "3425280"
  },
  {
    "text": "don't have two code bases to maintain have one application that gets",
    "start": "3425280",
    "end": "3430319"
  },
  {
    "text": "transpiled for old browsers and I doing minimal or no transpiration for modern",
    "start": "3430319",
    "end": "3436650"
  },
  {
    "text": "browsers think about you doing this you know maybe you have separate maybe you",
    "start": "3436650",
    "end": "3442680"
  },
  {
    "text": "are still using some cutting-edge features or you know you have JSX that you want to have transpiled all the time",
    "start": "3442680",
    "end": "3448410"
  },
  {
    "text": "but maybe you have to separate babel configs or two separate typescript configs I mean typescript you're always",
    "start": "3448410",
    "end": "3454140"
  },
  {
    "text": "going to have to use some type of transpiler because the browsers don't know how to run typescript but anyways",
    "start": "3454140",
    "end": "3459990"
  },
  {
    "text": "I'll push this code up to the github repo for this talk and let you have at",
    "start": "3459990",
    "end": "3465930"
  },
  {
    "text": "it I again what to say that I wrote this talk I wrote that code in the previous talk so it's not perfect so I will accept",
    "start": "3465930",
    "end": "3472430"
  },
  {
    "text": "pull requests if anybody wants to improve it so that is the modern",
    "start": "3472430",
    "end": "3477590"
  },
  {
    "text": "JavaScript app that I've written and that also brings this talk to an end",
    "start": "3477590",
    "end": "3484700"
  },
  {
    "text": "it's been fun there were some puns in there so it's been pun this is the repo I will be pushing the code - it might",
    "start": "3484700",
    "end": "3491750"
  },
  {
    "text": "not be until Friday that I get that pushed up there but it will be if you have questions you can send after the",
    "start": "3491750",
    "end": "3498230"
  },
  {
    "text": "talk you can tweet at me at Ashley M grant and I blog at irelia dot ninja I",
    "start": "3498230",
    "end": "3504710"
  },
  {
    "text": "don't blog too often but when I do it's amazing and you should read it so anyways thank you very much for coming",
    "start": "3504710",
    "end": "3511730"
  },
  {
    "text": "out any questions all right then I have",
    "start": "3511730",
    "end": "3518450"
  },
  {
    "text": "a question for you before you walked into this room raise your hand if you",
    "start": "3518450",
    "end": "3523940"
  },
  {
    "text": "knew that the browser could load native modules raise your hand if you knew that",
    "start": "3523940",
    "end": "3529340"
  },
  {
    "text": "the Browse yeah that's why I love giving this talk because everybody learns something in here so now you can go back",
    "start": "3529340",
    "end": "3535880"
  },
  {
    "text": "to work later this week or next week and tell everybody all about how awesome the",
    "start": "3535880",
    "end": "3540950"
  },
  {
    "text": "browsers are natively and you can start looking at your Babel or your typescript",
    "start": "3540950",
    "end": "3546560"
  },
  {
    "text": "config files and consider transpiling less stuff especially if you don't have",
    "start": "3546560",
    "end": "3554330"
  },
  {
    "text": "to support Internet Explorer you should be transpiling very very little let the browser's natively run code so thank you",
    "start": "3554330",
    "end": "3563510"
  },
  {
    "text": "[Applause]",
    "start": "3563510",
    "end": "3568619"
  }
]