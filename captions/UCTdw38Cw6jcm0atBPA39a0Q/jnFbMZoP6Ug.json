[
  {
    "start": "0",
    "end": "49000"
  },
  {
    "text": "my name is droll helper I am a Microsoft specialist working for AWS",
    "start": "719",
    "end": "7560"
  },
  {
    "text": "and my job is basically to work with customers on moving Microsoft related",
    "start": "7560",
    "end": "12780"
  },
  {
    "text": "workloads or as we call them our projects to the AWS Cloud SQL Server windows and net I do a lot of",
    "start": "12780",
    "end": "22380"
  },
  {
    "text": "work with customers on modernizing and breaking things into microservices",
    "start": "22380",
    "end": "27740"
  },
  {
    "text": "and I also write a lot of.net code in fact I've been writing.net for almost 20",
    "start": "27740",
    "end": "33960"
  },
  {
    "text": "years who is writing.net code for a living okay that's good because we are going to",
    "start": "33960",
    "end": "40860"
  },
  {
    "text": "have code um and the story with microservices",
    "start": "40860",
    "end": "47520"
  },
  {
    "text": "is that it's very not reveal architecture to test because",
    "start": "47520",
    "end": "53579"
  },
  {
    "start": "49000",
    "end": "49000"
  },
  {
    "text": "the microservice is combined from multiple Parts multiple moving parts",
    "start": "53579",
    "end": "58680"
  },
  {
    "text": "that work together to create some value hopefully for customer so usually we'll start with the service",
    "start": "58680",
    "end": "65820"
  },
  {
    "text": "and that service will store information in a database",
    "start": "65820",
    "end": "70860"
  },
  {
    "text": "and that service has been called usually synchronously using HTTP rest calls glpc",
    "start": "70860",
    "end": "78299"
  },
  {
    "text": "or whatever you decide but does not work on its own a single",
    "start": "78299",
    "end": "83759"
  },
  {
    "text": "service is not a different from writing a monolith so that service is probably also calling another service",
    "start": "83759",
    "end": "90840"
  },
  {
    "text": "and those two Services together create something that is also stored in another",
    "start": "90840",
    "end": "95939"
  },
  {
    "text": "place in another table in another database maybe using a different technology",
    "start": "95939",
    "end": "101360"
  },
  {
    "text": "and this is all of that is still sick on his calls but from time to time with",
    "start": "101360",
    "end": "107939"
  },
  {
    "text": "cues and we put information for someone else a walker or another service to",
    "start": "107939",
    "end": "114180"
  },
  {
    "text": "consume do some processing and return a value or call something",
    "start": "114180",
    "end": "119399"
  },
  {
    "text": "else and probably this system does not run on your machine it can run on your",
    "start": "119399",
    "end": "125880"
  },
  {
    "text": "kubernetes cluster inside your data center or in the cloud so it doesn't",
    "start": "125880",
    "end": "132480"
  },
  {
    "text": "even exist on my machine because if I'm using the cloud why not use cloud services for example I can use Amazon S3",
    "start": "132480",
    "end": "139739"
  },
  {
    "text": "to store files install big information and now this architecture cannot exist",
    "start": "139739",
    "end": "145920"
  },
  {
    "text": "on my machine so it's it's more difficult to take it as it is and test it end to end and just to add a",
    "start": "145920",
    "end": "153300"
  },
  {
    "text": "little bit of complexity in most projects in which I worked with microservices you always have external",
    "start": "153300",
    "end": "159300"
  },
  {
    "text": "apis those are apis from another company that you consume to get information and",
    "start": "159300",
    "end": "165480"
  },
  {
    "text": "return data so all of that need to continue functioning all of that",
    "start": "165480",
    "end": "171480"
  },
  {
    "text": "need to work all of that need to be high quality and how do you test it",
    "start": "171480",
    "end": "177800"
  },
  {
    "text": "several places where I used to work the solution for this was let's hire a",
    "start": "177800",
    "end": "184200"
  },
  {
    "text": "lot of testers let's hire a test automation team and let them test",
    "start": "184200",
    "end": "189540"
  },
  {
    "text": "everything end to end all the time regression wise and that's a lot of work it's very",
    "start": "189540",
    "end": "196379"
  },
  {
    "text": "painful and it's not very effective and in the end of the day when you think of it the only one",
    "start": "196379",
    "end": "202980"
  },
  {
    "text": "responsible to the quality of their code is the actual development team because",
    "start": "202980",
    "end": "208620"
  },
  {
    "text": "once a development team has created this microservice they need to make sure that that service function according to the",
    "start": "208620",
    "end": "215220"
  },
  {
    "text": "requirements that service continue to function tomorrow after we change things add",
    "start": "215220",
    "end": "220799"
  },
  {
    "text": "features and we want to do that automatically because",
    "start": "220799",
    "end": "225959"
  },
  {
    "text": "as developers our job is basically to write code add value and not to keep on",
    "start": "225959",
    "end": "232319"
  },
  {
    "text": "testing what we do and as developers we need to focus on",
    "start": "232319",
    "end": "238260"
  },
  {
    "text": "the quality of our code it's not someone else's problem it is our problem so what can we do",
    "start": "238260",
    "end": "245659"
  },
  {
    "text": "as I said one solution I saw many many times is",
    "start": "245659",
    "end": "250799"
  },
  {
    "text": "writing end-to-end automation for trying to test all of the complexity of the",
    "start": "250799",
    "end": "257040"
  },
  {
    "text": "system with a bunch of UI automation getting things out of the database",
    "start": "257040",
    "end": "262919"
  },
  {
    "text": "running the whole system in the cloud or in your cluster and that's a problem because it does not",
    "start": "262919",
    "end": "270240"
  },
  {
    "start": "268000",
    "end": "268000"
  },
  {
    "text": "work it does not scale and basically because there's no Silver Bullet there's",
    "start": "270240",
    "end": "276180"
  },
  {
    "text": "no one test to rule them all we have different types of tests we have different ways of making sure our",
    "start": "276180",
    "end": "282479"
  },
  {
    "text": "application functions and it all starts with what we want to do what is our need",
    "start": "282479",
    "end": "288600"
  },
  {
    "text": "what we want to verify so starting from top to bottom we want",
    "start": "288600",
    "end": "294120"
  },
  {
    "text": "to make sure the whole system works all the micro Services calling databases external Services cloud services running",
    "start": "294120",
    "end": "300180"
  },
  {
    "text": "somewhere else we need to make sure all of that work second of all as a team that created a",
    "start": "300180",
    "end": "307259"
  },
  {
    "text": "service we want to make sure that that service work according to requirements and that service continued to function",
    "start": "307259",
    "end": "313259"
  },
  {
    "text": "all the time we do want to test specific interaction points for example I just wrote a very",
    "start": "313259",
    "end": "320280"
  },
  {
    "text": "complex database query using link or Entity framework and I want to make sure it works I'm using something outside of",
    "start": "320280",
    "end": "328259"
  },
  {
    "text": "my system and I want to make sure that that specific interaction works and finally we want to test our logic that's",
    "start": "328259",
    "end": "334320"
  },
  {
    "text": "the thing we write in basically and well the next picture you're probably familiar with",
    "start": "334320",
    "end": "340979"
  },
  {
    "text": "for logic what we do usually use called uni tests for interaction integration test service",
    "start": "340979",
    "end": "348539"
  },
  {
    "text": "service tests and end-to-end tests now this is the testing pyramid who will saw",
    "start": "348539",
    "end": "355560"
  },
  {
    "text": "heard talked about the testing pyramid before quite a few and it's not surprising I'll",
    "start": "355560",
    "end": "363720"
  },
  {
    "text": "recap the testing pyramid was created by my coin he talked about the fact that we",
    "start": "363720",
    "end": "370199"
  },
  {
    "text": "have different layers of tests different kind of tests and as you go up the pyramid you have less and less tests you",
    "start": "370199",
    "end": "375419"
  },
  {
    "text": "have a few thousand unit tests a few hundred integration tests and then the",
    "start": "375419",
    "end": "380520"
  },
  {
    "text": "numbers go down down until we get to end-to-end tests and there are good reasons for that but if you ever seen a",
    "start": "380520",
    "end": "387600"
  },
  {
    "text": "test pyramid you might know that this look a bit different uh the original test pyramid had only three",
    "start": "387600",
    "end": "394080"
  },
  {
    "text": "layers it had unit tests component tests end-to-end tests",
    "start": "394080",
    "end": "401280"
  },
  {
    "text": "um but I think that in microservices at least in my experience we used to start with a bunch of tests of different kinds",
    "start": "401280",
    "end": "407759"
  },
  {
    "text": "and slowly they separated until we got these four distinct layers and that's how I'm working right now because that's",
    "start": "407759",
    "end": "415139"
  },
  {
    "text": "the way I tend to think of them are those four distinct layers and we need all of them or at least some",
    "start": "415139",
    "end": "422460"
  },
  {
    "text": "of them depending on your project we'll get to that and the reason we want less and less tests as we go up is well as we go up",
    "start": "422460",
    "end": "431520"
  },
  {
    "text": "the scope increases the scope increases logically because end-to-end tests tests",
    "start": "431520",
    "end": "436800"
  },
  {
    "text": "the whole system and unit tests as a small part of your system and it's not that end-to-end test test",
    "start": "436800",
    "end": "444479"
  },
  {
    "text": "mode you just tests differently because usually with end-to-end test you get to test from one side of the system to the",
    "start": "444479",
    "end": "451740"
  },
  {
    "text": "other side of the system you don't test the small pulse the exceptional things uh the corner cases it's very hard to do",
    "start": "451740",
    "end": "458940"
  },
  {
    "text": "with end-to-end test if I want to test what happened when one of my services go down very hard to do with end-to-end",
    "start": "458940",
    "end": "465240"
  },
  {
    "text": "test I need to kill a service mid run we're doing it as very simple so I need",
    "start": "465240",
    "end": "470699"
  },
  {
    "text": "all the layers because the topmost layer tests very deep they test all the way",
    "start": "470699",
    "end": "476580"
  },
  {
    "text": "while the bottom layer tests very broad a lot of scenarios so I need both also runtime increases a unit test will",
    "start": "476580",
    "end": "484919"
  },
  {
    "text": "run for a few well not a few less than a second usually just memory small test end-to-end test can run a few minutes a",
    "start": "484919",
    "end": "492419"
  },
  {
    "text": "few minutes is a big deal if I have a test that runs for 10 minutes six of",
    "start": "492419",
    "end": "498300"
  },
  {
    "text": "those will run for an hour if I have a test with a ton for an hour I can run it at most six or eight times a day",
    "start": "498300",
    "end": "506520"
  },
  {
    "text": "it means that if I have a problem and I just fix that and I run my test I need to wait for an hour and if I didn't fix",
    "start": "506520",
    "end": "513180"
  },
  {
    "text": "the problem I'll find out after that need to fix again and run it again and there's a limit to what I can do it will",
    "start": "513180",
    "end": "519659"
  },
  {
    "text": "slow my development if I just relay rely on end-to-end tests and I've worked with companies that have only end-to-end",
    "start": "519659",
    "end": "526320"
  },
  {
    "text": "tests which takes seven hours to execute you can run it only once a day you don't want that you want the balance of all of",
    "start": "526320",
    "end": "533399"
  },
  {
    "text": "them and finally maintenance overhead the bigger the tests harder to maintain",
    "start": "533399",
    "end": "540660"
  },
  {
    "text": "it other to keep it running every small thing on the way can cause it to stop working also when the test fails very",
    "start": "540660",
    "end": "548100"
  },
  {
    "text": "hard to know why with the whole system finding out why something failed can take you up to a few hours you need to",
    "start": "548100",
    "end": "555720"
  },
  {
    "text": "start reading logs when a unit test fails you probably know immediately what went wrong so we need all of those we",
    "start": "555720",
    "end": "563040"
  },
  {
    "text": "need all those kind of tests in order to make sure that the system functions and we need to know about that as quickly as",
    "start": "563040",
    "end": "568920"
  },
  {
    "text": "possible now no matter which test I write I want it to have at least three things going",
    "start": "568920",
    "end": "575519"
  },
  {
    "text": "for it first of all need to be readable and maintainable a unit test that is not",
    "start": "575519",
    "end": "580860"
  },
  {
    "text": "readable is worthless basically the next time I'll see a unit test or any test",
    "start": "580860",
    "end": "586680"
  },
  {
    "text": "is when it fails and if it's not readable I won't know why and I won't see it as soon as I write it well",
    "start": "586680",
    "end": "593700"
  },
  {
    "text": "usually I do but the next time I'll see it could be in a few weeks month years and I need to understand what happens",
    "start": "593700",
    "end": "599880"
  },
  {
    "text": "there maintenable also means that I need to be able to fix the problem as quickly",
    "start": "599880",
    "end": "605160"
  },
  {
    "text": "as I can and there's a lot of sessions including my own about how to write maintainable",
    "start": "605160",
    "end": "611339"
  },
  {
    "text": "readable tests we'll not focus on that entirely today a test need to be deterministic which means when I run the",
    "start": "611339",
    "end": "617820"
  },
  {
    "text": "test a thousand times I'll get a thousand times exactly the same results it can change between runs one test",
    "start": "617820",
    "end": "624540"
  },
  {
    "text": "cannot affect another test if I run the test in any order",
    "start": "624540",
    "end": "630300"
  },
  {
    "text": "I'll get the same results if I run it on my machine on my fellow developer machine or in the build server I'll get",
    "start": "630300",
    "end": "637080"
  },
  {
    "text": "the same result and finally it needs to be simple to run there's a huge benefit in being able to",
    "start": "637080",
    "end": "645120"
  },
  {
    "text": "press a button and all your tests run from your machine now not all tests can do that for you",
    "start": "645120",
    "end": "650760"
  },
  {
    "text": "depending on your code depending on the type of test but you want everyone development team",
    "start": "650760",
    "end": "658860"
  },
  {
    "text": "to be able to run all the tests you want your build server to be able to run all your test and you need to be as simple",
    "start": "658860",
    "end": "664019"
  },
  {
    "text": "as possible that's it talking about asp.net core",
    "start": "664019",
    "end": "670140"
  },
  {
    "start": "667000",
    "end": "667000"
  },
  {
    "text": "now um granted you can write microservices any way you can c-sharp is a very",
    "start": "670140",
    "end": "676560"
  },
  {
    "text": "flexible language but usually we see at least those three layers does the",
    "start": "676560",
    "end": "682260"
  },
  {
    "text": "presentation layer being curled from outside it's the thing that comes before the controller getting the information",
    "start": "682260",
    "end": "689180"
  },
  {
    "text": "from the web into your code basically then there's the business layer when",
    "start": "689180",
    "end": "694620"
  },
  {
    "text": "where we write most of the code which is combined out of the logic the domain",
    "start": "694620",
    "end": "699779"
  },
  {
    "text": "objects I use controller in asp.net infrastructure to",
    "start": "699779",
    "end": "704820"
  },
  {
    "text": "make it work and hopefully a layer that calls other things other services databases and so on and beneath it we",
    "start": "704820",
    "end": "711839"
  },
  {
    "text": "have the technology we use to do that HTTP clients and Entity framework for example and outside of our code at the",
    "start": "711839",
    "end": "719399"
  },
  {
    "text": "bottom those are the external dependencies where I save my files the cues I use the databases that I call",
    "start": "719399",
    "end": "726180"
  },
  {
    "text": "other services all of that need to be tested in those four different tests and each test I",
    "start": "726180",
    "end": "734100"
  },
  {
    "text": "have as a purpose I have the thing I'm testing and have the things I keep outside of the test the thing I fake",
    "start": "734100",
    "end": "740880"
  },
  {
    "text": "away for my test basically or don't include so starting with Unitas you test the",
    "start": "740880",
    "end": "748440"
  },
  {
    "text": "simplification thing to talk about basically take units of work from your code",
    "start": "748440",
    "end": "754339"
  },
  {
    "text": "and instead of whatever calling that specific piece of code I'll add a unit",
    "start": "754339",
    "end": "760560"
  },
  {
    "text": "testing framework and I'll use a mocking framework to fake",
    "start": "760560",
    "end": "765600"
  },
  {
    "text": "all the dependencies I don't need in my test so I can focus solely on the logic",
    "start": "765600",
    "end": "772820"
  },
  {
    "text": "um always a lot of people in Oslo good for you",
    "start": "774480",
    "end": "781079"
  },
  {
    "text": "no it's really it's good for you you need to see right for you for you you don't write it for anyone else it makes",
    "start": "781079",
    "end": "786540"
  },
  {
    "text": "your development work easier unfortunately called test but it's not exactly tests",
    "start": "786540",
    "end": "792660"
  },
  {
    "text": "so there are tools for unit testing unit testing framework probably using any",
    "start": "792660",
    "end": "797700"
  },
  {
    "text": "unit X unit Ms test that's a big three there are others framework which we use",
    "start": "797700",
    "end": "803420"
  },
  {
    "text": "essentially to replace a real class with something that does absolutely nothing",
    "start": "803420",
    "end": "809040"
  },
  {
    "text": "unless I tell them to do it and you can have additional Tools in this case public code coverage not mandatory very",
    "start": "809040",
    "end": "816839"
  },
  {
    "text": "useful to find out if I forgot to test something um any interest will look something like",
    "start": "816839",
    "end": "822779"
  },
  {
    "start": "822000",
    "end": "822000"
  },
  {
    "text": "this most of you know what um this is X unit",
    "start": "822779",
    "end": "828000"
  },
  {
    "text": "and the unit has framework by the way has nothing to do with Unitas basically running methods that's what the unit",
    "start": "828000",
    "end": "833459"
  },
  {
    "text": "testing framework does it's a very nice way to run methods and you mark those methods with an",
    "start": "833459",
    "end": "840180"
  },
  {
    "text": "attribute and usually you give it a good name because once a test fails you want",
    "start": "840180",
    "end": "846000"
  },
  {
    "text": "to know why the test name will be the first thing you'll see and then you break it down and you can",
    "start": "846000",
    "end": "851940"
  },
  {
    "text": "write whatever you want inside a unit test but it is best practice known best",
    "start": "851940",
    "end": "857639"
  },
  {
    "text": "practice you have three parts a range where I set up everything in this case I'll create a fake shopping cart",
    "start": "857639",
    "end": "864480"
  },
  {
    "text": "repository my gateway to the database and tell it that when I'm asking for a",
    "start": "864480",
    "end": "870240"
  },
  {
    "text": "specific ID to return null not ideal but that means that it did it",
    "start": "870240",
    "end": "876779"
  },
  {
    "text": "was not found and then I'll create two real objects I use in this test now I use two little",
    "start": "876779",
    "end": "882720"
  },
  {
    "text": "objects because a unit is not a class and a class is not a unit not necessarily when you think about it in",
    "start": "882720",
    "end": "889860"
  },
  {
    "text": "this case it was not logical for me to test just the shopping cart controller that all it does is a bit of",
    "start": "889860",
    "end": "896339"
  },
  {
    "text": "verification I don't care about that in this specific test and calls the next class in line the manager obviously",
    "start": "896339",
    "end": "903240"
  },
  {
    "text": "managers in object oriented and does the actual logic I care about now I could",
    "start": "903240",
    "end": "908760"
  },
  {
    "text": "have broken that to two different tests but those tests at least one of them would be very trivial and probably just",
    "start": "908760",
    "end": "916139"
  },
  {
    "text": "test that I called with those parameters and those parameters were passed to the next one in line and this is internal",
    "start": "916139",
    "end": "922139"
  },
  {
    "text": "logic and internal logic we don't test because if you test the way you wrote the code it means that when you change",
    "start": "922139",
    "end": "928380"
  },
  {
    "text": "the way you wrote your code your test will fail and we don't want that we want it to fail only for bugs so we don't",
    "start": "928380",
    "end": "934800"
  },
  {
    "text": "test internally now finding what the unit of work is yeah not always trivial",
    "start": "934800",
    "end": "940139"
  },
  {
    "text": "and we can talk about it for another hour but my rule of the time is a unit",
    "start": "940139",
    "end": "946980"
  },
  {
    "text": "test and it's too trivial and relied heavily on internal walking on the way I",
    "start": "946980",
    "end": "952079"
  },
  {
    "text": "wrote my code I probably need to increase my scope add more classes and",
    "start": "952079",
    "end": "957180"
  },
  {
    "text": "if I don't if it's very complex to set everything up probably I'm testing too",
    "start": "957180",
    "end": "962339"
  },
  {
    "text": "much need to reduce that and that's something you go you go with you you find that if you run with unit test in a",
    "start": "962339",
    "end": "968880"
  },
  {
    "text": "project for a certain amount of time you'll notice those things then we have the act act is the play",
    "start": "968880",
    "end": "974459"
  },
  {
    "text": "button runs half in fine by ID and then assert check that something happened a",
    "start": "974459",
    "end": "980160"
  },
  {
    "text": "simple unit test and that's okay those are unit tests",
    "start": "980160",
    "end": "985860"
  },
  {
    "text": "though data test logic we fake away everything that is not logic you can fake other things that's another",
    "start": "985860",
    "end": "991260"
  },
  {
    "text": "conversation for another time and then we get to the more interesting",
    "start": "991260",
    "end": "996779"
  },
  {
    "text": "and more uh complex problems which are integration tests integration tests are",
    "start": "996779",
    "end": "1003500"
  },
  {
    "text": "still using a unit testing framework but the objective is different we don't want",
    "start": "1003500",
    "end": "1008959"
  },
  {
    "text": "to test our logic we want to test our logic that calls something else something outside the scope of our",
    "start": "1008959",
    "end": "1014600"
  },
  {
    "text": "control for example a database a queue a service a third party API",
    "start": "1014600",
    "end": "1022040"
  },
  {
    "text": "and in the beginning I used to test that end to end in the scenario level and then",
    "start": "1022040",
    "end": "1027319"
  },
  {
    "text": "slowly I found out that that's not the best way to do that and I prefer just to test the layer that calls that external",
    "start": "1027319",
    "end": "1033860"
  },
  {
    "text": "dependency because we'll get to testing the whole service later on",
    "start": "1033860",
    "end": "1039678"
  },
  {
    "text": "and this is an example of integration test which looks exactly like a unit",
    "start": "1039679",
    "end": "1044900"
  },
  {
    "start": "1040000",
    "end": "1040000"
  },
  {
    "text": "test so what makes it an integration test well the thing that makes it integration test is the fact that I'm I'm creating a",
    "start": "1044900",
    "end": "1053780"
  },
  {
    "text": "real connection to the database and I'm calling a real database and you can see that in the test and that's perfect",
    "start": "1053780",
    "end": "1059179"
  },
  {
    "text": "because when this test fails you don't really care how I connect it to that database you just know that I have a",
    "start": "1059179",
    "end": "1065720"
  },
  {
    "text": "problem in the logic of how I'm writing and reading in this specific test I'm creating two shopping carts and when I",
    "start": "1065720",
    "end": "1072080"
  },
  {
    "text": "call find all get them all back the more complex things I can write but that's good enough for now",
    "start": "1072080",
    "end": "1079960"
  },
  {
    "text": "obviously that's not the only test I'll need more and more and more especially in the points where I'm doing",
    "start": "1080000",
    "end": "1085760"
  },
  {
    "text": "non-trivial things because with automatic testing it's all about balance",
    "start": "1085760",
    "end": "1091340"
  },
  {
    "text": "we are not being paid to write those tests we write them for our benefit to make sure that the code from yesterday",
    "start": "1091340",
    "end": "1096980"
  },
  {
    "text": "walk into MO and that will write in the right code as well so I'm trying to find the places",
    "start": "1096980",
    "end": "1102440"
  },
  {
    "text": "where there will be a problem where there will be an issue I'm not trying to test every integration point in every",
    "start": "1102440",
    "end": "1107960"
  },
  {
    "text": "way especially not the trivial ones but I do want to test the things I'm not",
    "start": "1107960",
    "end": "1113360"
  },
  {
    "text": "certain about maybe I'm using a very complex code inside maybe I'm using a",
    "start": "1113360",
    "end": "1119720"
  },
  {
    "text": "service that I'm not 100 sure works exactly as I expect it to be and if I'll",
    "start": "1119720",
    "end": "1125000"
  },
  {
    "text": "fake it away I probably will cheat Myself by expecting something to happen and in the real world something else",
    "start": "1125000",
    "end": "1131120"
  },
  {
    "text": "will happen will occur but in order for this to work I need to do something and that something is basically in the",
    "start": "1131120",
    "end": "1138080"
  },
  {
    "text": "beginning of the test that database was created we'll talk about that",
    "start": "1138080",
    "end": "1143539"
  },
  {
    "text": "and then I'll take the connection sling for that database so I can use it in my test and also make sure that in the end",
    "start": "1143539",
    "end": "1150559"
  },
  {
    "text": "of the test and that is suppose with X you need to use this pose to clean things between tests",
    "start": "1150559",
    "end": "1156080"
  },
  {
    "text": "I'll need to make sure that I clean up afterwards I'm not leaving anything for the next test to fail on or to expect to",
    "start": "1156080",
    "end": "1163400"
  },
  {
    "text": "happen because I don't want one test to affect another test and with the integration test it's",
    "start": "1163400",
    "end": "1170120"
  },
  {
    "text": "harder than with unit test because integration tests are more complex",
    "start": "1170120",
    "end": "1175660"
  },
  {
    "text": "you have external dependencies by definition that's something you don't have full control on that's something",
    "start": "1175660",
    "end": "1182240"
  },
  {
    "text": "that you need to somehow accommodate there's something that you need to",
    "start": "1182240",
    "end": "1188000"
  },
  {
    "text": "create that's something you need to clean up that's something you need to initialize and that setup takes time and",
    "start": "1188000",
    "end": "1194480"
  },
  {
    "text": "effort a lot of effort around making sure that your test runs all the time in",
    "start": "1194480",
    "end": "1200059"
  },
  {
    "text": "the same way with something that is outside of your code it's harder it's more difficult to do it",
    "start": "1200059",
    "end": "1206480"
  },
  {
    "text": "correctly and it takes more time it makes the test slower from a couple of",
    "start": "1206480",
    "end": "1212120"
  },
  {
    "text": "seconds which doesn't sound much but again 10 seconds times 6 tests equals a",
    "start": "1212120",
    "end": "1217760"
  },
  {
    "text": "minute so means 600 tests you know do me the math",
    "start": "1217760",
    "end": "1225500"
  },
  {
    "text": "um so we make sure that we only test what we really care about because those tests",
    "start": "1225500",
    "end": "1231380"
  },
  {
    "text": "will be slower and we have the shared State because by definition we're using something outside of our code so one",
    "start": "1231380",
    "end": "1237020"
  },
  {
    "text": "test could accidentally trip another test make it fail or even worse make it",
    "start": "1237020",
    "end": "1242360"
  },
  {
    "text": "pass and then you have the test that sometime passes sometimes fails but depending on",
    "start": "1242360",
    "end": "1248360"
  },
  {
    "text": "what order you executed your code and usually with those tests some developers were not necessarily developers we try",
    "start": "1248360",
    "end": "1255500"
  },
  {
    "text": "to run them again everything is fine and so either you go home happy or you",
    "start": "1255500",
    "end": "1260600"
  },
  {
    "text": "start to do binary search find out which test effect which test that's a painful I did it more than once very painful",
    "start": "1260600",
    "end": "1267919"
  },
  {
    "text": "thing to do very hard to do correctly takes a lot of time so you don't want you want to avoid this short State as",
    "start": "1267919",
    "end": "1274280"
  },
  {
    "text": "much as you can and that's a problem because in most cases in a lot of places that you have a lot of data in your",
    "start": "1274280",
    "end": "1280700"
  },
  {
    "text": "database and you need to initialize it it takes a long time and you get to a point in which you run your test on your",
    "start": "1280700",
    "end": "1287240"
  },
  {
    "text": "development machine on your build a server uh but on the other hand you have",
    "start": "1287240",
    "end": "1292880"
  },
  {
    "text": "a database somewhere else some Central database that everybody calls from different places different tests and",
    "start": "1292880",
    "end": "1298039"
  },
  {
    "text": "then you have a problem now it's a problem that you can solve in many ways one way one company I worked",
    "start": "1298039",
    "end": "1305240"
  },
  {
    "text": "with way way in the past a long time ago what they",
    "start": "1305240",
    "end": "1311179"
  },
  {
    "text": "decided is that those integration tests will only do reading and not writing because they couldn't guarantee that if",
    "start": "1311179",
    "end": "1319159"
  },
  {
    "text": "I run for my machine and someone else will run for me this machine we won't accidentally cause a problem",
    "start": "1319159",
    "end": "1324980"
  },
  {
    "text": "and remember there's also a build server so if the build is running in the background I'm trying to run the test on",
    "start": "1324980",
    "end": "1330860"
  },
  {
    "text": "my machine I might ship the build as well so that's a problematic thing to do and there are database technologies that",
    "start": "1330860",
    "end": "1337940"
  },
  {
    "text": "are very hard to deploy on your machines either because of Licensing or because they are very complex to run on your",
    "start": "1337940",
    "end": "1343820"
  },
  {
    "text": "machine all your database schema is very complex very hard to recreate from scratch each",
    "start": "1343820",
    "end": "1349340"
  },
  {
    "text": "and every time and there are ways around it restoring your database before your test is one of them another is why not",
    "start": "1349340",
    "end": "1355760"
  },
  {
    "text": "run the database in a machine if you can and if you can run it at best on your machine",
    "start": "1355760",
    "end": "1361299"
  },
  {
    "text": "even better run it inside Docker because with asp.net core I know one thing most",
    "start": "1361299",
    "end": "1366919"
  },
  {
    "text": "of you have Docker for Windows and your machine right we have Docker for windows installed",
    "start": "1366919",
    "end": "1372080"
  },
  {
    "text": "so use it in your tests Docker is an excellent way to set up infrastructure run a test and then throw it away and",
    "start": "1372080",
    "end": "1379039"
  },
  {
    "text": "it's very simple to do the bunch of nougata packages and project in GitHub to do that or you can do what I did",
    "start": "1379039",
    "end": "1387679"
  },
  {
    "start": "1386000",
    "end": "1386000"
  },
  {
    "text": "just run Docker right before running and mongodb is a very easy database to set",
    "start": "1387679",
    "end": "1393860"
  },
  {
    "text": "up before running your test that's the Constructor wheel well I'll run Docker",
    "start": "1393860",
    "end": "1398960"
  },
  {
    "text": "with the image I need with the data I need and then when I get to the test the",
    "start": "1398960",
    "end": "1404059"
  },
  {
    "text": "code from before I'll get the database connection string start running as if",
    "start": "1404059",
    "end": "1409340"
  },
  {
    "text": "I'm running unit as knowing that this database is already up and running very important when you do that is two",
    "start": "1409340",
    "end": "1416480"
  },
  {
    "text": "things first of all in the end of the test run when you finish running all of your tests",
    "start": "1416480",
    "end": "1423140"
  },
  {
    "text": "make sure you clean up you don't want the second run to leave things behind",
    "start": "1423140",
    "end": "1428600"
  },
  {
    "text": "that's first of all so you need to clean everything up after you finish running all of your tests you don't want to",
    "start": "1428600",
    "end": "1434419"
  },
  {
    "text": "restart a Docker image each and every time that your test will take minutes",
    "start": "1434419",
    "end": "1440059"
  },
  {
    "text": "you just want to set up once and then clean up when you've done and sometimes if you think if you stop",
    "start": "1440059",
    "end": "1448580"
  },
  {
    "text": "your test run mid run you'll need to do that manually but that's okay well we know how to write Docker stop",
    "start": "1448580",
    "end": "1455659"
  },
  {
    "text": "and another thing you need in between your tests and that's in the test Suite",
    "start": "1455659",
    "end": "1461299"
  },
  {
    "text": "that's the code we saw before you need to make sure that after each test or before each test you clean up",
    "start": "1461299",
    "end": "1468740"
  },
  {
    "text": "everything or at least return it to the initial State here it's very simple I just drop all the tables",
    "start": "1468740",
    "end": "1474500"
  },
  {
    "text": "and that way I can make sure that one test does not affect another test and I run on my machine or on the build",
    "start": "1474500",
    "end": "1480440"
  },
  {
    "text": "server no one else runs with this database so I just reduce a big chunk of",
    "start": "1480440",
    "end": "1486740"
  },
  {
    "text": "the shares State dependency the only shell state I'm remaining I have here is basically the fact that I can't run the",
    "start": "1486740",
    "end": "1493820"
  },
  {
    "text": "same test that use that database in parallel which I might want to do but then maybe",
    "start": "1493820",
    "end": "1499640"
  },
  {
    "text": "I need to break the test differently to do that",
    "start": "1499640",
    "end": "1503500"
  },
  {
    "start": "1504000",
    "end": "1504000"
  },
  {
    "text": "okay what about cloud services you know I work for AWS I have to talk about cloud services at least a little",
    "start": "1504860",
    "end": "1512179"
  },
  {
    "text": "let's say I'm using a queue in AWS I have many ways to do queues one of them sqs simple queue service AWS everything",
    "start": "1512179",
    "end": "1518960"
  },
  {
    "text": "simple or elastic or both so simple queue Services have a test it will call",
    "start": "1518960",
    "end": "1524779"
  },
  {
    "text": "one server that's available here message another service will take that message and do whatever",
    "start": "1524779",
    "end": "1531500"
  },
  {
    "text": "so basically the left side on my machine right side on the cloud and the other",
    "start": "1531500",
    "end": "1538159"
  },
  {
    "text": "service well we don't need it right now we are testing integration tests I don't need the rest of the line just need to",
    "start": "1538159",
    "end": "1543440"
  },
  {
    "text": "what I'm testing just the scope the I need to reduce the scope in order to have a more maintainable deterministic",
    "start": "1543440",
    "end": "1548900"
  },
  {
    "text": "test so one way is to do exactly that I'll keep the queue in the cloud I'll make",
    "start": "1548900",
    "end": "1555860"
  },
  {
    "text": "sure there's a queue there when the test starts I'll set everything up I'll run my test with the cloud",
    "start": "1555860",
    "end": "1562760"
  },
  {
    "text": "and then in the end of the head run make sure there's nothing left afterwards",
    "start": "1562760",
    "end": "1568880"
  },
  {
    "text": "clean up after myself I don't want to pay for something I'm not using",
    "start": "1568880",
    "end": "1574360"
  },
  {
    "text": "um and that's okay that's one way to do that not the only way because these days",
    "start": "1574700",
    "end": "1580100"
  },
  {
    "text": "at least I know myself I use quite a lot of I call them local AWS Services you",
    "start": "1580100",
    "end": "1587299"
  },
  {
    "text": "have projects many projects right the service name in GitHub you'll find people the old something that mimics",
    "start": "1587299",
    "end": "1593779"
  },
  {
    "text": "that service that you can run either in your code or in docker and work with for",
    "start": "1593779",
    "end": "1599600"
  },
  {
    "text": "example with Q there's go AWS that will does a very good impression it looks",
    "start": "1599600",
    "end": "1604820"
  },
  {
    "text": "exactly like using a queue you just need to point it to the thing that runs inside your Docker inside your machine",
    "start": "1604820",
    "end": "1610820"
  },
  {
    "text": "and you don't need to run with the cloud you can run just on your machine and you",
    "start": "1610820",
    "end": "1616340"
  },
  {
    "text": "don't have a still State and if two people run the same time not accidentally hurt each other another way",
    "start": "1616340",
    "end": "1622039"
  },
  {
    "text": "to accommodate for the fact that we're running in the cloud is probably to use a unique identifiers I'll create one",
    "start": "1622039",
    "end": "1628700"
  },
  {
    "text": "Queue at the timestamp a good or something for that test pass it to the test in order to connect another test",
    "start": "1628700",
    "end": "1635240"
  },
  {
    "text": "running in parallel will create a different view with another name and that is also a possibility also",
    "start": "1635240",
    "end": "1641120"
  },
  {
    "text": "something you can do um and you use test pictures just like we",
    "start": "1641120",
    "end": "1646700"
  },
  {
    "text": "saw with the database if you work with the cloud in the setup you want to create a table this is the dynamodb",
    "start": "1646700",
    "end": "1653620"
  },
  {
    "text": "object database AWS interpretation so you create a table you run your test",
    "start": "1653620",
    "end": "1660559"
  },
  {
    "text": "you destroy the table add timestamp or grid and make sure that",
    "start": "1660559",
    "end": "1666380"
  },
  {
    "text": "no one else create the same name for your table while you're running or or use Docker you should use Docker",
    "start": "1666380",
    "end": "1673460"
  },
  {
    "text": "start create a table using AWS dynamodb local that's a project you can run in",
    "start": "1673460",
    "end": "1678559"
  },
  {
    "text": "Docker that guys that looks and behave like dynamodb in the cloud",
    "start": "1678559",
    "end": "1684320"
  },
  {
    "text": "and exactly run the same test setup whatever you need create a new table start walking finish walking clean the",
    "start": "1684320",
    "end": "1691039"
  },
  {
    "text": "table in the end of the day dock a stop Docker remove",
    "start": "1691039",
    "end": "1695980"
  },
  {
    "text": "now the the spawn comes to using each of those uh",
    "start": "1696260",
    "end": "1701299"
  },
  {
    "text": "um options the first if I'm using a real service obviously it's more accurate yeah no",
    "start": "1701299",
    "end": "1709760"
  },
  {
    "start": "1704000",
    "end": "1704000"
  },
  {
    "text": "matter whatever you're running locally it could be one of the many options it will never be exactly like the service",
    "start": "1709760",
    "end": "1717760"
  },
  {
    "text": "some of them don't have the full functionality all of them don't have identification for example because",
    "start": "1717760",
    "end": "1724520"
  },
  {
    "text": "they're running your machine they're not authorizing you but it means that you might pay money if",
    "start": "1724520",
    "end": "1731360"
  },
  {
    "text": "you run enough tests that we talk in in the hundreds and thousands but it does happen in bigger companies and you get",
    "start": "1731360",
    "end": "1737720"
  },
  {
    "text": "latency because you call in the cloud back and forth all the time the challenge is what happens when two",
    "start": "1737720",
    "end": "1743779"
  },
  {
    "text": "people run in the same time we talked about that on the other end running on your machine",
    "start": "1743779",
    "end": "1749179"
  },
  {
    "text": "very consistent because I have full control I took the control put it in my machine doctor start Run Dock stop",
    "start": "1749179",
    "end": "1756620"
  },
  {
    "text": "it's very fast well it's faster but mostly for business logic so",
    "start": "1756620",
    "end": "1763880"
  },
  {
    "text": "something to comment on you don't need to test AWS Services they walk you need to test",
    "start": "1763880",
    "end": "1770240"
  },
  {
    "text": "integration the interaction with them so testing only business logic probably good enough",
    "start": "1770240",
    "end": "1776299"
  },
  {
    "text": "okay and the same for every third party or additional tool you're using",
    "start": "1776299",
    "end": "1783020"
  },
  {
    "text": "uh it's partial and always initialization again with Docker that's the way we do that",
    "start": "1783020",
    "end": "1789740"
  },
  {
    "start": "1789000",
    "end": "1789000"
  },
  {
    "text": "and that's how I do integration tests when I can I use Docker there are a lot of projects for some of those tools that",
    "start": "1789740",
    "end": "1796700"
  },
  {
    "text": "you can run directly from your code and you make sure that you get as much control as you can because those tests",
    "start": "1796700",
    "end": "1803899"
  },
  {
    "text": "are very fragile because they depend on environment which brings us to default the option",
    "start": "1803899",
    "end": "1809840"
  },
  {
    "text": "service level test here I want to test the whole service one service top to bottom controller all",
    "start": "1809840",
    "end": "1816740"
  },
  {
    "text": "the way to what when I exit the service basically again I can do that with the",
    "start": "1816740",
    "end": "1821960"
  },
  {
    "text": "unit testing framework because the unit testing framework has nothing to do with unit tests it's just running code",
    "start": "1821960",
    "end": "1828140"
  },
  {
    "text": "running methods um but the question with service tests",
    "start": "1828140",
    "end": "1833659"
  },
  {
    "text": "is what do I fake and what do I keep for example let's say I have that",
    "start": "1833659",
    "end": "1838880"
  },
  {
    "text": "mongodb database from before do I want to create a real mongodb database or do",
    "start": "1838880",
    "end": "1844399"
  },
  {
    "text": "I want to use something to replace it and that's something can be all the",
    "start": "1844399",
    "end": "1851120"
  },
  {
    "text": "options we just saw in in with the integration in unit tests or you can say well the database is a",
    "start": "1851120",
    "end": "1857120"
  },
  {
    "text": "big part of my service Why not start one",
    "start": "1857120",
    "end": "1862159"
  },
  {
    "text": "using docker why not have it installed beforehand and that's a valid point",
    "start": "1862159",
    "end": "1869480"
  },
  {
    "text": "the only thing to think although is if I am doing that just remember that I",
    "start": "1869480",
    "end": "1875840"
  },
  {
    "text": "already did those integration tests in the perfect world and if I already did those integration tests I don't need to",
    "start": "1875840",
    "end": "1881720"
  },
  {
    "text": "retest everything already tested in integration because the objective here is not the actual integration but the whole service",
    "start": "1881720",
    "end": "1888320"
  },
  {
    "text": "I want to make sure that if I execute something from call from outside to my service will go all the way through the",
    "start": "1888320",
    "end": "1895159"
  },
  {
    "text": "service and return whatever I needed to return I don't test the database in this case I just test the return value or the",
    "start": "1895159",
    "end": "1902000"
  },
  {
    "text": "methods being called outside to someone else so it's a bit different and you",
    "start": "1902000",
    "end": "1907100"
  },
  {
    "text": "shouldn't have the same tests just with all the service as you had before with unit test and integration tests because",
    "start": "1907100",
    "end": "1913399"
  },
  {
    "text": "that's just wasting your time and your time is more valuable than doing the same thing over and over again",
    "start": "1913399",
    "end": "1921100"
  },
  {
    "text": "um another good thing with the sp.net core is testost anyone here ever used testost",
    "start": "1921440",
    "end": "1928419"
  },
  {
    "text": "I just found out after I did two projects where I did it manually test was essentially it's a nugget package",
    "start": "1928419",
    "end": "1935480"
  },
  {
    "text": "you added part of asp.net core they manage it basically allow you from your",
    "start": "1935480",
    "end": "1942260"
  },
  {
    "text": "code from your test well you can do it not for me test you can do it from any piece of code start your service and I",
    "start": "1942260",
    "end": "1948140"
  },
  {
    "text": "use it now all the time I use it because I will start my service for my code this is the code I have before running the",
    "start": "1948140",
    "end": "1954380"
  },
  {
    "text": "test in my test feature initialize it will start a service and the nice thing",
    "start": "1954380",
    "end": "1961039"
  },
  {
    "text": "it will give me a client already wired to use that service I can use that",
    "start": "1961039",
    "end": "1967399"
  },
  {
    "text": "client that's an HTTP client regular HTTP client already pointing to the localhost whatever Port that this",
    "start": "1967399",
    "end": "1975080"
  },
  {
    "text": "service was created in saves a lot of time because I used to do that manually",
    "start": "1975080",
    "end": "1980179"
  },
  {
    "text": "and once I have this client usually what I do I'll wrap it with another class and",
    "start": "1980179",
    "end": "1985520"
  },
  {
    "text": "add all the different capabilities or if I already written a client Library just",
    "start": "1985520",
    "end": "1991520"
  },
  {
    "text": "pass this HTTP client to it so I can call the method just like the actual other services that is going are going",
    "start": "1991520",
    "end": "1998600"
  },
  {
    "text": "to cover my code and I call it from outside using HTTP this way and I set it with my test now there are",
    "start": "1998600",
    "end": "2007120"
  },
  {
    "text": "other services and this is this slide the other services I don't want yet",
    "start": "2007120",
    "end": "2012340"
  },
  {
    "text": "I want to fake away all the services and there are very good projects to take mimic HTTP services",
    "start": "2012340",
    "end": "2022019"
  },
  {
    "text": "wiremock.net is one of them the other one is called mock server and essentially the way they walk is that I",
    "start": "2022679",
    "end": "2029620"
  },
  {
    "text": "set an expectation beforehand I'll tell that service when you get this call this",
    "start": "2029620",
    "end": "2034960"
  },
  {
    "text": "is what you need to return and then for my test my my unit test",
    "start": "2034960",
    "end": "2040779"
  },
  {
    "text": "Infamous test I will call my service that I just set up with the client I just created",
    "start": "2040779",
    "end": "2047799"
  },
  {
    "text": "and that service my service will call that fake service because I fixed that",
    "start": "2047799",
    "end": "2053138"
  },
  {
    "text": "with my configuration it will call it and get a return and get all the results",
    "start": "2053139",
    "end": "2058240"
  },
  {
    "text": "back so my service now works in a controlled way where I fake every other service in my",
    "start": "2058240",
    "end": "2064540"
  },
  {
    "text": "microservice architecture in that specific test and most of those Flex servers also",
    "start": "2064540",
    "end": "2071440"
  },
  {
    "text": "enable me to assert that a specific call was made or not made if that's what I",
    "start": "2071440",
    "end": "2078280"
  },
  {
    "text": "need to do I want to check that if a plus b happened then it was called it",
    "start": "2078280",
    "end": "2084158"
  },
  {
    "text": "called a different service that need to continue performing some operation and in fact service very easy to set up",
    "start": "2084159",
    "end": "2091540"
  },
  {
    "text": "from your code you don't need to exit code no Docker involved and this is how I set it up uh it's a",
    "start": "2091540",
    "end": "2100060"
  },
  {
    "text": "mock provider service with wire mock wire mock is one option",
    "start": "2100060",
    "end": "2106180"
  },
  {
    "text": "mock server is another one you can form your code and by the way it's not",
    "start": "2106180",
    "end": "2111280"
  },
  {
    "text": "only.net all of those as libraries for different languages and then you can say something like this",
    "start": "2111280",
    "end": "2117940"
  },
  {
    "text": "I want to set that a product is missing so if someone calls my API in that specific URL I can say with parameters",
    "start": "2117940",
    "end": "2125020"
  },
  {
    "text": "with query string with body whatever um then this is a response you're",
    "start": "2125020",
    "end": "2131020"
  },
  {
    "text": "supposed to return now when my test will run the real service I'm testing will call it and get",
    "start": "2131020",
    "end": "2137380"
  },
  {
    "text": "that response back so I can test my microservice infrastructure without actually setting",
    "start": "2137380",
    "end": "2144760"
  },
  {
    "text": "my whole infrastructure in place yeah very beneficial because if the test fails I",
    "start": "2144760",
    "end": "2151119"
  },
  {
    "text": "know exactly who to blame that service has nothing to do with the other services",
    "start": "2151119",
    "end": "2156339"
  },
  {
    "text": "um very easy to set up and tear down relatively fast very simple to use if you ever use the",
    "start": "2156339",
    "end": "2163720"
  },
  {
    "text": "mocking framework the same with the URLs basically",
    "start": "2163720",
    "end": "2168660"
  },
  {
    "text": "the problem with service level tests they become very hard to read very hard",
    "start": "2169240",
    "end": "2174460"
  },
  {
    "text": "to maintain because you need to set up a lot of things in and you can accommodate with that you can create uh and I've",
    "start": "2174460",
    "end": "2181780"
  },
  {
    "text": "talked about that in the past you can create Factor methods that's one option",
    "start": "2181780",
    "end": "2187240"
  },
  {
    "text": "you can create builders to create your different objects you can do a lot of",
    "start": "2187240",
    "end": "2193300"
  },
  {
    "text": "things up to a point but still you need to do quite a lot and it's this is a relatively small simple test",
    "start": "2193300",
    "end": "2201420"
  },
  {
    "text": "and if you can't immediately understand what it does perfectly logical because",
    "start": "2201420",
    "end": "2206560"
  },
  {
    "text": "it's too long and I needed to break it into two parts just to put all the code and if you really look inside you'll see",
    "start": "2206560",
    "end": "2212920"
  },
  {
    "text": "that I didn't write all the code because it's too confusing to do that",
    "start": "2212920",
    "end": "2218160"
  },
  {
    "text": "basic and please ignore the test name that's not a good test name I ran out of space",
    "start": "2218160",
    "end": "2224440"
  },
  {
    "text": "um basically I'm I need to initialize everything I need to set things up I'm",
    "start": "2224440",
    "end": "2230680"
  },
  {
    "text": "using a real database in this case because that's what I decided to do I'm calling a client but I encapsulated it",
    "start": "2230680",
    "end": "2237280"
  },
  {
    "text": "so everything you see has underscore server that's my class calling using the client to call that server so there's",
    "start": "2237280",
    "end": "2244119"
  },
  {
    "text": "quite a lot of code in the back walking That You Don't See and it's still too long so what can I do with very long",
    "start": "2244119",
    "end": "2251380"
  },
  {
    "text": "tests well I can try to reduce that because you don't care about most of",
    "start": "2251380",
    "end": "2256780"
  },
  {
    "text": "what's happening in this test we want to understand what is the scenario I'm testing what I did and what I expect to",
    "start": "2256780",
    "end": "2264280"
  },
  {
    "text": "happen right arrange act set very hard to see when you have very complex setup and you can encapsulate some of it but",
    "start": "2264280",
    "end": "2272920"
  },
  {
    "text": "at some point you start reducing the readability of the test because if I would have set the whole system in the",
    "start": "2272920",
    "end": "2279640"
  },
  {
    "text": "background no one will know what I'm doing I had one client 15 years ago that we talked",
    "start": "2279640",
    "end": "2286540"
  },
  {
    "text": "about shortening his test a bit and I told him some of this in initialization boilerplate code you don't need to see",
    "start": "2286540",
    "end": "2292660"
  },
  {
    "text": "it in your test uh went back as a consultant I used to come once a week there claim after a week all the tests",
    "start": "2292660",
    "end": "2299380"
  },
  {
    "text": "were three lines exactly three lines a setup environment test the system check",
    "start": "2299380",
    "end": "2304540"
  },
  {
    "text": "results and each and every one of them got 20 different parameters to pass in",
    "start": "2304540",
    "end": "2309579"
  },
  {
    "text": "that's unreadable impossible to maintain you don't want that so what can you do",
    "start": "2309579",
    "end": "2315700"
  },
  {
    "text": "well I found out some that as a tool that was created for something completely different that is very",
    "start": "2315700",
    "end": "2322300"
  },
  {
    "text": "beneficial of helping me focus on what matters in the test and that's bdd",
    "start": "2322300",
    "end": "2327460"
  },
  {
    "start": "2327000",
    "end": "2327000"
  },
  {
    "text": "Frameworks anyone here use the BBD framework in the past one two three four",
    "start": "2327460",
    "end": "2332740"
  },
  {
    "text": "five six seven eight nine ten okay not bad spec flow anyone",
    "start": "2332740",
    "end": "2339460"
  },
  {
    "text": "OK yeah I'm using that quite a lot bdd Phi anyone okay I'll talk about that so bdd",
    "start": "2339460",
    "end": "2347020"
  },
  {
    "text": "framework essentially we split the test into two major parts well we'll break it into multiple files but two parts first",
    "start": "2347020",
    "end": "2353740"
  },
  {
    "text": "part is the finishing of different individual steps building blocks those",
    "start": "2353740",
    "end": "2359260"
  },
  {
    "text": "building blocks this is spec flow are essentially methods with this attribute before",
    "start": "2359260",
    "end": "2365140"
  },
  {
    "text": "that tells the text that this method represents the part of the story of this method the",
    "start": "2365140",
    "end": "2371740"
  },
  {
    "text": "first one I have a customer of want some type with a address",
    "start": "2371740",
    "end": "2379180"
  },
  {
    "text": "and those parameters will be passed magically here that's backflow problem and the second method the customer asked",
    "start": "2379180",
    "end": "2386140"
  },
  {
    "text": "to calculate how much we need to pay basically and again here we don't have anything in the coupon and a bunch of",
    "start": "2386140",
    "end": "2393460"
  },
  {
    "text": "fields happen in the background now writing this code enable me to write the second part which is the specification",
    "start": "2393460",
    "end": "2400359"
  },
  {
    "text": "which is this code and this is a more readable and it's exactly the same test",
    "start": "2400359",
    "end": "2406300"
  },
  {
    "text": "I showed you with the unit testing framework now spec flow all of those work inside the unit testing framework",
    "start": "2406300",
    "end": "2412359"
  },
  {
    "text": "that's what runs it but they add another layer that helped me understand what the test does it's you get all the",
    "start": "2412359",
    "end": "2419380"
  },
  {
    "text": "information you need you know exactly what type of customer what type of coupon what I'm doing what's the result what's the number I expect",
    "start": "2419380",
    "end": "2426339"
  },
  {
    "text": "and if this test failed I get a very good error message and exactly what the problem is",
    "start": "2426339",
    "end": "2431520"
  },
  {
    "text": "uh but you don't know how I'm running it because they don't care you know if you",
    "start": "2431520",
    "end": "2436900"
  },
  {
    "text": "need to debug the test you'll debug the test but most of the time you just want to know that this worked and if that's",
    "start": "2436900",
    "end": "2442359"
  },
  {
    "text": "this does not work if for example we'd get a thousand and a hundred in the end of the day that fast and I know there's",
    "start": "2442359",
    "end": "2449020"
  },
  {
    "text": "a problem with free shipping coupon okay hopefully a bunch of units will",
    "start": "2449020",
    "end": "2454359"
  },
  {
    "text": "fail as well um and by using a bdd framework I can make",
    "start": "2454359",
    "end": "2459820"
  },
  {
    "text": "sure that I can read the test easily now not all developers like",
    "start": "2459820",
    "end": "2466859"
  },
  {
    "text": "this separating of concerns writing the steps on one end and writing the feature",
    "start": "2466859",
    "end": "2473859"
  },
  {
    "text": "file this is a feature file and on the other end and I get it it feels like doing the same thing twice and for that",
    "start": "2473859",
    "end": "2481300"
  },
  {
    "text": "as a framework you should you can should try called bddify with enable you to",
    "start": "2481300",
    "end": "2486579"
  },
  {
    "text": "write this specification in C sharp in your code but you still hide how you do the",
    "start": "2486579",
    "end": "2492940"
  },
  {
    "text": "different steps but by writing it in English it forces you not to go overboard and",
    "start": "2492940",
    "end": "2501040"
  },
  {
    "text": "and the things that code in the background will do exactly what you expected to do uh because it's very hard",
    "start": "2501040",
    "end": "2508480"
  },
  {
    "text": "to cheat yourself basically and write one thing and then do something completely different yeah and it's",
    "start": "2508480",
    "end": "2514480"
  },
  {
    "text": "debuggable and fair supported there's extension for visual studio to run spec flow",
    "start": "2514480",
    "end": "2520079"
  },
  {
    "text": "contact highlighting and it's a good way the higher the most copy testing you test the bigger your range part will be",
    "start": "2520079",
    "end": "2527260"
  },
  {
    "text": "you need to initialize more of your system and so it's your test will become very big very long we then to end test",
    "start": "2527260",
    "end": "2534579"
  },
  {
    "text": "you definitely want that because this is basically a description of a feature this is a requirement written in sort of",
    "start": "2534579",
    "end": "2541839"
  },
  {
    "text": "English well we don't talk this way but we can read it and you can even show it to your",
    "start": "2541839",
    "end": "2547839"
  },
  {
    "text": "customer or your product manager and say does that behave as you expect now",
    "start": "2547839",
    "end": "2553240"
  },
  {
    "text": "ideally those tools were created for the product manager to write the specification and then developer",
    "start": "2553240",
    "end": "2558579"
  },
  {
    "text": "Implement them it happens from time to time but not all product managers like",
    "start": "2558579",
    "end": "2564880"
  },
  {
    "text": "to write this way um but it's still beneficial in order to",
    "start": "2564880",
    "end": "2570160"
  },
  {
    "text": "get your test under control to have a concise way of explaining exactly what we're doing it will also",
    "start": "2570160",
    "end": "2575680"
  },
  {
    "text": "force you to Define your service because once you write those tests you'll notice if your service does things that you",
    "start": "2575680",
    "end": "2582400"
  },
  {
    "text": "didn't expect it to do if you edit code because it was convenient that has nothing to do in this case",
    "start": "2582400",
    "end": "2588540"
  },
  {
    "text": "with the shopping cart okay I'll start seeing words that are",
    "start": "2588540",
    "end": "2594640"
  },
  {
    "text": "not shopping cart I'll know myself is doing something outside of the scope if that service is called shopping cart",
    "start": "2594640",
    "end": "2600760"
  },
  {
    "text": "service okay and then we get to end-to-end test now end-to-end test",
    "start": "2600760",
    "end": "2607359"
  },
  {
    "text": "a lot of people don't like to talk about them I get it and to attest complex very",
    "start": "2607359",
    "end": "2613599"
  },
  {
    "text": "automation very hard to keep on running takes a lot of time to fix when they fail and find out the problem",
    "start": "2613599",
    "end": "2619839"
  },
  {
    "text": "for that reason a lot of companies have a dedicated job",
    "start": "2619839",
    "end": "2625060"
  },
  {
    "text": "for automation testing automation QA query automation so on",
    "start": "2625060",
    "end": "2630240"
  },
  {
    "text": "because it requires more work and you can do that without understanding",
    "start": "2630240",
    "end": "2635500"
  },
  {
    "text": "actually how it was implemented because it has informed outside you don't touch",
    "start": "2635500",
    "end": "2641560"
  },
  {
    "text": "anything inside your code you run services in the control system probably",
    "start": "2641560",
    "end": "2647020"
  },
  {
    "text": "those services will call other services you might choose to fake services but you do that outside of your code",
    "start": "2647020",
    "end": "2653319"
  },
  {
    "text": "so it can be handled by someone which is not a developing team depending on the company some believe that a single team",
    "start": "2653319",
    "end": "2660819"
  },
  {
    "text": "does everything perfectly valid and then the automation is part of the team job",
    "start": "2660819",
    "end": "2665920"
  },
  {
    "text": "and some believe that that's a different department a different specialty different someone well it's up to you it",
    "start": "2665920",
    "end": "2672940"
  },
  {
    "text": "takes more to maintain it takes a longer effort to create they run longer and",
    "start": "2672940",
    "end": "2678040"
  },
  {
    "text": "that's why we write less of those and by the time we got here passing for unit testing regression",
    "start": "2678040",
    "end": "2684460"
  },
  {
    "text": "tests and scenario test probably don't need as much end-to-end tests we just need a few test the major flows for your",
    "start": "2684460",
    "end": "2692920"
  },
  {
    "text": "system don't test all of them because you already tested your logic you already tested your services you don't",
    "start": "2692920",
    "end": "2698800"
  },
  {
    "text": "need to do that yet again in a very difficult to do the way test the things",
    "start": "2698800",
    "end": "2703900"
  },
  {
    "text": "you really care about where the most value for your company exists and this",
    "start": "2703900",
    "end": "2709720"
  },
  {
    "text": "is the end-to-end test and in fact I done more than one project where we had",
    "start": "2709720",
    "end": "2715300"
  },
  {
    "text": "zero end-to-end tests uh we didn't need them it depends on the size of the team",
    "start": "2715300",
    "end": "2721480"
  },
  {
    "text": "usually also me if one team creates the whole system or different teams create this huge system together",
    "start": "2721480",
    "end": "2728579"
  },
  {
    "text": "but you do need to consider them only after you're already done your homework already done the rest of those tests",
    "start": "2728579",
    "end": "2737319"
  },
  {
    "text": "as far as structure inside your code you want unit test integration test and a",
    "start": "2737319",
    "end": "2742599"
  },
  {
    "text": "service test to be with that service compile with it deploy run with it in",
    "start": "2742599",
    "end": "2748359"
  },
  {
    "text": "your build on your machine um and I can to end test end-to-end test",
    "start": "2748359",
    "end": "2753880"
  },
  {
    "text": "you can decide because end-to-end tests usually don't run on your machine you need to deploy first and then run so",
    "start": "2753880",
    "end": "2761260"
  },
  {
    "text": "basically what you'll have in your continuous integration is build tests",
    "start": "2761260",
    "end": "2767920"
  },
  {
    "text": "all of the tests up to service level test deploy then run the end-to-end test",
    "start": "2767920",
    "end": "2774160"
  },
  {
    "text": "if that's what you need all of those I do I did",
    "start": "2774160",
    "end": "2779319"
  },
  {
    "text": "find it very useful to distinct between unit test and integration tests for me",
    "start": "2779319",
    "end": "2785400"
  },
  {
    "text": "so I'll write the file name for where I host the test with either unit test or",
    "start": "2785400",
    "end": "2791020"
  },
  {
    "text": "integration test just so I'll know which is which because once you do your",
    "start": "2791020",
    "end": "2797440"
  },
  {
    "text": "job properly you won't notice in a glance if a test is integration test will be a unit test and I don't want to",
    "start": "2797440",
    "end": "2803500"
  },
  {
    "text": "mix them I want the ability to run only interest on integration test I want the ability to to do whatever filtering I",
    "start": "2803500",
    "end": "2811900"
  },
  {
    "text": "want yeah and that's basically the project structure and that brings us to a more complete",
    "start": "2811900",
    "end": "2818319"
  },
  {
    "text": "list of testing tools so with test Runners unit test is the is the base you can use bdd Frameworks if you do",
    "start": "2818319",
    "end": "2824800"
  },
  {
    "text": "end-to-end tests probably you need browser or UI automation as well with faking mocking framework is the",
    "start": "2824800",
    "end": "2830560"
  },
  {
    "text": "start but you'll get pretty fast for mocking the whole services for other services",
    "start": "2830560",
    "end": "2836520"
  },
  {
    "text": "and local Services if you use a cloud or Sanford party a lot of companies that",
    "start": "2836520",
    "end": "2842319"
  },
  {
    "text": "provide third-party apis do provide those and if not I I did use the fake",
    "start": "2842319",
    "end": "2848140"
  },
  {
    "text": "HTTP service to do that for me and finally well statistics is up to you that's an endless list this is a very",
    "start": "2848140",
    "end": "2853900"
  },
  {
    "text": "short one um code coverage Visual Studio has code coverage built in if you use the",
    "start": "2853900",
    "end": "2859480"
  },
  {
    "text": "professional Enterprise editions uh dot cover from jetbrains your build can have",
    "start": "2859480",
    "end": "2866200"
  },
  {
    "text": "static analysis additional reporting it's an endless list whatever you add",
    "start": "2866200",
    "end": "2871900"
  },
  {
    "text": "just make sure it adds value and that people look at it and are aware of it if",
    "start": "2871900",
    "end": "2877240"
  },
  {
    "text": "you just said that I know Sono Cube and it found a bunch of critical problems someone need to address that someone",
    "start": "2877240",
    "end": "2884079"
  },
  {
    "text": "needs to be aware of that but other than that those this is a very short list of",
    "start": "2884079",
    "end": "2889420"
  },
  {
    "text": "what I use in.net which brings us to a tool I didn't talk about anyone here ever use Pact p-a-c-t",
    "start": "2889420",
    "end": "2897700"
  },
  {
    "text": "excellent two people for a very good reason we shall explain pact is meant to",
    "start": "2897700",
    "end": "2904240"
  },
  {
    "text": "reduce the overhead of doing end-to-end tests especially when different Services belong to different teams",
    "start": "2904240",
    "end": "2910000"
  },
  {
    "text": "because the big problem we have with different microservices is when someone",
    "start": "2910000",
    "end": "2915060"
  },
  {
    "text": "accidentally or intentionally changes the contract the messages I call from",
    "start": "2915060",
    "end": "2920560"
  },
  {
    "text": "one service to the other either directly or for a queue and pact is created for the HTTP part",
    "start": "2920560",
    "end": "2928119"
  },
  {
    "text": "and the idea with pact is that during the arrange set I'll use it just like",
    "start": "2928119",
    "end": "2933460"
  },
  {
    "text": "with the mock server HTTP server I'll set expectation what this call is being made this is what you need to return",
    "start": "2933460",
    "end": "2940560"
  },
  {
    "text": "HTTP wise and that will create a contract that is saved by Pact in files",
    "start": "2940560",
    "end": "2947260"
  },
  {
    "text": "and then I'll run my test call it it will get the information you need from pact and everybody's happy and",
    "start": "2947260",
    "end": "2953500"
  },
  {
    "text": "I'll get the results but that's the other side of the the different team another team will go to pact and pact",
    "start": "2953500",
    "end": "2960220"
  },
  {
    "text": "will create unit tests well unit testing framework Quran tests to run against their service according",
    "start": "2960220",
    "end": "2968200"
  },
  {
    "text": "to the expectation I just set up in the different team so I needed a central spark server that both team calls one",
    "start": "2968200",
    "end": "2976060"
  },
  {
    "text": "creates how they expect to call the other one and the other one running that is test to make sure that this line is",
    "start": "2976060",
    "end": "2983800"
  },
  {
    "text": "not broken it's a very cool idea unfortunately getting back to work requires a lot of work on your behalf",
    "start": "2983800",
    "end": "2991900"
  },
  {
    "text": "and you need to be aware of that and it makes a lot of sense when you",
    "start": "2991900",
    "end": "2998500"
  },
  {
    "text": "have multiple teams each doing his own service but there's a way to accommodate for that in many projects just having a",
    "start": "2998500",
    "end": "3005760"
  },
  {
    "text": "client Library responsibility of that service team being distributed to other services for",
    "start": "3005760",
    "end": "3012359"
  },
  {
    "text": "your nuget is good enough it might be good enough if you find out",
    "start": "3012359",
    "end": "3017460"
  },
  {
    "text": "that you get a lot of problems because contracts are always getting broken you need to find a way to fix that it can be",
    "start": "3017460",
    "end": "3023280"
  },
  {
    "text": "done either in code or for contract testing this kind of tools if it's",
    "start": "3023280",
    "end": "3028619"
  },
  {
    "text": "interesting for you Google it try it out it's a very interesting tool to use",
    "start": "3028619",
    "end": "3034579"
  },
  {
    "text": "but if you're doing tdd and you expect it to immediately update and then send the test on the other end you'll be",
    "start": "3034579",
    "end": "3041599"
  },
  {
    "text": "sadly surprised like I was because it wasn't meant for that two different teams working individually isolated from",
    "start": "3041599",
    "end": "3049319"
  },
  {
    "text": "one another that's that's the reason it was created and not one developer right in test one end getting running on the",
    "start": "3049319",
    "end": "3055800"
  },
  {
    "text": "other end immediately so going back to the picture we had in",
    "start": "3055800",
    "end": "3061140"
  },
  {
    "start": "3058000",
    "end": "3058000"
  },
  {
    "text": "the beginning so I have this system it has cloud services it has multi-services calling",
    "start": "3061140",
    "end": "3066960"
  },
  {
    "text": "always so what to attest how they test logic I'll write unit as each service",
    "start": "3066960",
    "end": "3072240"
  },
  {
    "text": "logic should be tested by unit test then the interaction where it matters",
    "start": "3072240",
    "end": "3078359"
  },
  {
    "text": "where have the more complex code or calling non-trivial services for",
    "start": "3078359",
    "end": "3083400"
  },
  {
    "text": "non-trivial API or during something which is critical to my product then I want to write those integration tests",
    "start": "3083400",
    "end": "3089700"
  },
  {
    "text": "because they are harder to maintain and service test for each service",
    "start": "3089700",
    "end": "3094980"
  },
  {
    "text": "where I get to choose what I fake and what I live and finally end-to-end tests but not",
    "start": "3094980",
    "end": "3101400"
  },
  {
    "text": "necessarily for the whole application and all the scenarios just what is basically left out what I'm not testing",
    "start": "3101400",
    "end": "3107339"
  },
  {
    "text": "or tend to break or it's very important to the organization should be useful",
    "start": "3107339",
    "end": "3113400"
  },
  {
    "text": "with end-to-end tests and this is basically what the testing",
    "start": "3113400",
    "end": "3118920"
  },
  {
    "text": "strategy should look like now it looks like a lot of work putting that end-to-end test aside for a",
    "start": "3118920",
    "end": "3124559"
  },
  {
    "text": "minute just once you get the hang of it right in uni test well most of you wrote run",
    "start": "3124559",
    "end": "3131040"
  },
  {
    "text": "unit test all the time getting your the first test with the integration tests usually the other getting everything set",
    "start": "3131040",
    "end": "3137040"
  },
  {
    "text": "up correctly but then you just write more and more tests and services which",
    "start": "3137040",
    "end": "3142200"
  },
  {
    "text": "are relatively simple to write again because you already know what to do with all your dependencies that's the",
    "start": "3142200",
    "end": "3148500"
  },
  {
    "text": "output uh can be very fast and I've been part of teams that managed to do that as part",
    "start": "3148500",
    "end": "3155400"
  },
  {
    "text": "of the development offered without decreasing our speed our agility yeah",
    "start": "3155400",
    "end": "3162300"
  },
  {
    "text": "basically um because it's just like with Unitas in the beginning this is how that it takes",
    "start": "3162300",
    "end": "3167880"
  },
  {
    "text": "a while to understand how to do that correctly and they tend to break but then once you get the hang of it you",
    "start": "3167880",
    "end": "3173339"
  },
  {
    "text": "keep on running writing more code in modest and more code and more tests the same for each and every level it's not a",
    "start": "3173339",
    "end": "3179280"
  },
  {
    "text": "lot of work once you know how to do it and once you try it for a few days",
    "start": "3179280",
    "end": "3186119"
  },
  {
    "text": "um well that's that's it for me I'll be",
    "start": "3186119",
    "end": "3191220"
  },
  {
    "text": "happy to answer any question but before that if you want to learn more about dotnet on AWS as I'm part of that we",
    "start": "3191220",
    "end": "3199859"
  },
  {
    "text": "have a nice developer Center where you can dial three books there and um",
    "start": "3199859",
    "end": "3205640"
  },
  {
    "text": "training that you can use and we also have a Boothill if you want to hear more",
    "start": "3205640",
    "end": "3211319"
  },
  {
    "text": "and if you have any questions I think we have five minutes I'll be happy to answer any",
    "start": "3211319",
    "end": "3217920"
  },
  {
    "text": "question you have um yes with the white yeah",
    "start": "3217920",
    "end": "3225020"
  },
  {
    "text": "you have to speak louder though because my hearing is not that good",
    "start": "3227160",
    "end": "3232160"
  },
  {
    "text": "okay load testing why does come to play okay well uh load testing is a different uh",
    "start": "3232740",
    "end": "3239640"
  },
  {
    "text": "thing all together yeah probably done on the whole system or at",
    "start": "3239640",
    "end": "3245880"
  },
  {
    "text": "least a functioning part of the system running in the actual environment not on your development machine",
    "start": "3245880",
    "end": "3252500"
  },
  {
    "text": "you can do those automatically but usually in most cases you want to do",
    "start": "3252500",
    "end": "3257940"
  },
  {
    "text": "that you know in a well thought of event",
    "start": "3257940",
    "end": "3263420"
  },
  {
    "text": "here I only talk about talked about correctness and not necessarily non-functional requirement that's it you",
    "start": "3263420",
    "end": "3269339"
  },
  {
    "text": "know security as well you can there are tools for that as well so it comes in a different place now",
    "start": "3269339",
    "end": "3277859"
  },
  {
    "text": "um with load testing uh um it's not that you don't necessarily need",
    "start": "3277859",
    "end": "3284040"
  },
  {
    "text": "it but it depends on your project I did a project that had 10 concurrent users",
    "start": "3284040",
    "end": "3289260"
  },
  {
    "text": "you know we use the solid foundation here probably would work",
    "start": "3289260",
    "end": "3295260"
  },
  {
    "text": "um so we didn't need as much load testing but if you want to accommodate a million users well you need load testing but you",
    "start": "3295260",
    "end": "3302700"
  },
  {
    "text": "need to plan for that you need the infrastructure in place if you have Auto scaling you need that",
    "start": "3302700",
    "end": "3308640"
  },
  {
    "text": "and everything in place and then probably you'll run it you know and look at it it won't run in the background",
    "start": "3308640",
    "end": "3314579"
  },
  {
    "text": "every night unless you put a report there but that's a different story altogether",
    "start": "3314579",
    "end": "3321119"
  },
  {
    "text": "I had another question in the back anyone",
    "start": "3321119",
    "end": "3326480"
  },
  {
    "text": "okay yes well the question was what about smoke",
    "start": "3327119",
    "end": "3332339"
  },
  {
    "text": "tests where did they come into play no uh something I I should have",
    "start": "3332339",
    "end": "3337680"
  },
  {
    "text": "emphasize more the names I gave those tests are not necessarily the names everyone uses I call them unit test",
    "start": "3337680",
    "end": "3345359"
  },
  {
    "text": "integration tests um service tests and renters smoke tests is a way to define a test",
    "start": "3345359",
    "end": "3353280"
  },
  {
    "text": "that I run to make sure that everything or a canary test you know nothing breaks immediately when I run it most of the",
    "start": "3353280",
    "end": "3360839"
  },
  {
    "text": "time we are talking about end-to-end test in this case because I want to deploy and run the tests on my wherever my environment is",
    "start": "3360839",
    "end": "3368460"
  },
  {
    "text": "make sure everything works and by definition that I'm not a full Suite but",
    "start": "3368460",
    "end": "3374099"
  },
  {
    "text": "something that checks the major parts so it's very similar to end-to-end test in this case",
    "start": "3374099",
    "end": "3380099"
  },
  {
    "text": "um if you write unit test you shouldn't Define them as smoke tests you need unit test for your logic basically but",
    "start": "3380099",
    "end": "3388460"
  },
  {
    "text": "it's not always possible or not a very good way to spend your time especially",
    "start": "3388460",
    "end": "3394079"
  },
  {
    "text": "coming to an existing project and then you pick the places where you care about",
    "start": "3394079",
    "end": "3399599"
  },
  {
    "text": "where you change things or where you get a lot of problems so you can call that smoke test as well",
    "start": "3399599",
    "end": "3406640"
  },
  {
    "text": "if you want but those names are changed depending on the book you read the site",
    "start": "3406640",
    "end": "3412020"
  },
  {
    "text": "you visit the speaker you talk to you know those names are not absolute just keep that in mind",
    "start": "3412020",
    "end": "3418140"
  },
  {
    "text": "any other questions anymore yes",
    "start": "3418140",
    "end": "3423318"
  },
  {
    "text": "do I see problem with having Services indication tests well basically no and do whatever well some projects it's more",
    "start": "3428040",
    "end": "3435240"
  },
  {
    "text": "logical than others especially if you have less logic in your service level for example you get data from the",
    "start": "3435240",
    "end": "3442619"
  },
  {
    "text": "database show it on a website there's no real logic in between it's not logical",
    "start": "3442619",
    "end": "3447660"
  },
  {
    "text": "to start writing unit test negation tests you know maybe your queries are trivial and and the database for example in my",
    "start": "3447660",
    "end": "3455280"
  },
  {
    "text": "service test most of the time I do have a database there in place because it's easier than Faking It Away",
    "start": "3455280",
    "end": "3460559"
  },
  {
    "text": "do whatever is simpler for you and make uh make sense in your project you might end up in a project that has no",
    "start": "3460559",
    "end": "3466859"
  },
  {
    "text": "integration test or no unit tests that happens depending on your logic you know",
    "start": "3466859",
    "end": "3472020"
  },
  {
    "text": "you have to spend time where it makes sense basically you're welcome",
    "start": "3472020",
    "end": "3477059"
  },
  {
    "text": "uh well uh yes um if you have any more questions I'll be here I'll be here tomorrow",
    "start": "3477059",
    "end": "3483720"
  },
  {
    "text": "uh you can come and ask whatever you want yeah thank you for the time I know it's late [Applause]",
    "start": "3483720",
    "end": "3494659"
  }
]