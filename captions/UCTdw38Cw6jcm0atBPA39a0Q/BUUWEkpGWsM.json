[
  {
    "start": "0",
    "end": "73000"
  },
  {
    "text": "okay i think we're going to to start soon uh so yeah let's make everything turn on and",
    "start": "5759",
    "end": "14240"
  },
  {
    "text": "let's start it okay okay so uh welcome everyone it's great to be",
    "start": "14240",
    "end": "21359"
  },
  {
    "text": "here and actually in place for a physical meeting uh for the physical work uh",
    "start": "21359",
    "end": "26880"
  },
  {
    "text": "lecture uh it's been two years uh of crazy times and yeah",
    "start": "26880",
    "end": "32719"
  },
  {
    "text": "i'm really happy that i can finally deliver it as it was before in a physical way",
    "start": "32719",
    "end": "37760"
  },
  {
    "text": "today we are going to talk about software engineering and basically what it's about and what are",
    "start": "37760",
    "end": "43920"
  },
  {
    "text": "the trade-offs that we as architects as designers sometimes developers um basically face every day",
    "start": "43920",
    "end": "52320"
  },
  {
    "text": "uh actually provided this talk online it was created uh as being meant as an",
    "start": "52320",
    "end": "57440"
  },
  {
    "text": "online talk for zoom for the last two years so um we have we have some challenges also",
    "start": "57440",
    "end": "63920"
  },
  {
    "text": "regarding the delivery but this is a surprise you will see it a bit later so let's start",
    "start": "63920",
    "end": "70400"
  },
  {
    "text": "uh let's start with the art of the software design basically",
    "start": "70400",
    "end": "75840"
  },
  {
    "start": "73000",
    "end": "73000"
  },
  {
    "text": "um designing a software is hard because basically if you are designer architect you should",
    "start": "75840",
    "end": "82159"
  },
  {
    "text": "comply and address the requirements of of your customers right",
    "start": "82159",
    "end": "87680"
  },
  {
    "text": "but it depends whom are you going to talk in the company you will get different requirements and different",
    "start": "87680",
    "end": "93040"
  },
  {
    "text": "ideas how the product should look like right if you're talking to managers they have their own requirements and",
    "start": "93040",
    "end": "99280"
  },
  {
    "text": "constraints if you're talking to developers they have a different point of view on this one right development",
    "start": "99280",
    "end": "104720"
  },
  {
    "text": "team test team and business analysis have different",
    "start": "104720",
    "end": "110399"
  },
  {
    "text": "requirements for the same product and sometimes even conflicting ones so you cannot easily deliver something that",
    "start": "110399",
    "end": "115759"
  },
  {
    "text": "actually looks like a product right but as a basically as an architect your",
    "start": "115759",
    "end": "123759"
  },
  {
    "text": "role is to gather feedback from all of the parties and try to look at this from",
    "start": "123759",
    "end": "129440"
  },
  {
    "text": "the top level view and and find some solutions and resolve all of the conflicts",
    "start": "129440",
    "end": "136720"
  },
  {
    "text": "also looking from the big picture helps you to actually identify stuff that those customers stakeholders do not see",
    "start": "136720",
    "end": "143840"
  },
  {
    "text": "because they are living in their own small sometimes small",
    "start": "143840",
    "end": "148879"
  },
  {
    "text": "field of experience or or basically influence for on the project right so they can see all of those simple blocks",
    "start": "149360",
    "end": "155599"
  },
  {
    "text": "but you don't see the whole picture that this stands on something something really terrible and that should be are",
    "start": "155599",
    "end": "161280"
  },
  {
    "text": "there replaced or made stronger or fixed right",
    "start": "161280",
    "end": "166879"
  },
  {
    "text": "so as an architect you have to be able to see all the picture and to be able to identify",
    "start": "166879",
    "end": "172239"
  },
  {
    "text": "potential problems that others do not see and even if you see a problem",
    "start": "172239",
    "end": "178879"
  },
  {
    "start": "177000",
    "end": "177000"
  },
  {
    "text": "and have some idea how to fix it it turns out that sometimes you have two",
    "start": "178879",
    "end": "184000"
  },
  {
    "text": "or three different ways to do it but all of them are easy to implement but to spend much more time to actually",
    "start": "184000",
    "end": "190080"
  },
  {
    "text": "decide which one to choose because there is no good solution no golden ballad in many cases",
    "start": "190080",
    "end": "196879"
  },
  {
    "text": "and actually today we are going to talk about such cases where it's really hard to choose a correct solution because if",
    "start": "196879",
    "end": "202640"
  },
  {
    "text": "there is only one great solution just go and do it of course there may be some other constraints or other trade-offs",
    "start": "202640",
    "end": "208159"
  },
  {
    "text": "like for example time resources people resources right something is not",
    "start": "208159",
    "end": "213840"
  },
  {
    "text": "enough something since the traffic is lacking then you have to make some trade-offs right we have to deliver in a month we",
    "start": "213840",
    "end": "218959"
  },
  {
    "text": "have to cut some stuff right but today we are just talking about the technology not about other",
    "start": "218959",
    "end": "224720"
  },
  {
    "text": "resources that we may have to actually include in our analysis",
    "start": "224720",
    "end": "231040"
  },
  {
    "text": "so let's talk about the design only so during the rest of the talk i will",
    "start": "231040",
    "end": "237120"
  },
  {
    "text": "put you in the product architectures you are going to make votes you are going to actually",
    "start": "237120",
    "end": "242720"
  },
  {
    "text": "provide your feedback and and make decisions as an architect so i hope that",
    "start": "242720",
    "end": "248080"
  },
  {
    "text": "everyone took their black voting pen from different keynote for devoting do you have it",
    "start": "248080",
    "end": "255599"
  },
  {
    "text": "i think you are not heavy so unfortunately we will use an alternative then",
    "start": "255599",
    "end": "261840"
  },
  {
    "text": "alternative this one so",
    "start": "261919",
    "end": "267040"
  },
  {
    "text": "i hope this one will work a bit better than during the keynote at this fair",
    "start": "267040",
    "end": "272160"
  },
  {
    "text": "of course i love to kill a lot sorry but but please scan your code the code and",
    "start": "272160",
    "end": "277280"
  },
  {
    "text": "enjoy i see the counter growing we have two persons joined or right now but i",
    "start": "277280",
    "end": "282560"
  },
  {
    "text": "hope to have much more if you cannot come there is a link aha",
    "start": "282560",
    "end": "288800"
  },
  {
    "text": "slide.com tradeoff like this talk and during the talk i will ask you",
    "start": "288800",
    "end": "294800"
  },
  {
    "text": "questions maybe not right now but during the talk and you will be able to vote on",
    "start": "294800",
    "end": "300160"
  },
  {
    "text": "this subject specific subject oh i hope that's nothing wrong",
    "start": "300160",
    "end": "307759"
  },
  {
    "text": "yeah counter is growing we have 40 persons already joined is decreasing",
    "start": "308639",
    "end": "314080"
  },
  {
    "text": "you go up",
    "start": "314080",
    "end": "316638"
  },
  {
    "text": "okay so yeah please and join if you will not be able",
    "start": "319280",
    "end": "324880"
  },
  {
    "text": "to join yourself i will join the room in the meantime i will show this maybe one more time before the question actually will be asked but let's go to the first",
    "start": "324880",
    "end": "332960"
  },
  {
    "text": "um first concern we are going to talk about strings",
    "start": "332960",
    "end": "338800"
  },
  {
    "text": "as you may be aware of we have different plantations of strings in the standard libraries",
    "start": "338800",
    "end": "343919"
  },
  {
    "text": "the implementation in gcc looks as follows basically all the strings looks the same they have pointer",
    "start": "343919",
    "end": "350400"
  },
  {
    "start": "344000",
    "end": "344000"
  },
  {
    "text": "size and capacity but you're probably aware of that there is some optimization being applied to a string design called",
    "start": "350400",
    "end": "356400"
  },
  {
    "text": "small strike optimization right small string application is a buffer that",
    "start": "356400",
    "end": "361600"
  },
  {
    "text": "is used instead of the allocation for small small content gcc chose such a",
    "start": "361600",
    "end": "367440"
  },
  {
    "text": "design basically they are for 64-bit architecture their string is",
    "start": "367440",
    "end": "373680"
  },
  {
    "text": "as the 32 bytes of data",
    "start": "373680",
    "end": "379600"
  },
  {
    "text": "they have pointer size capacity and some padding because their buffer is 16 characters long with zero at the end so",
    "start": "379600",
    "end": "385759"
  },
  {
    "text": "you have 15 characters for data so actually you are having some unnecessary padding for",
    "start": "385759",
    "end": "392880"
  },
  {
    "text": "for a case where there is no string basically we have dynamic allocation",
    "start": "392880",
    "end": "398160"
  },
  {
    "text": "um this actually has some benefits because it means that only capacity is affected by the buffer",
    "start": "398240",
    "end": "405199"
  },
  {
    "text": "so if you wherever you want to get pointer size begging and indexing operator so basically work on data",
    "start": "405199",
    "end": "411599"
  },
  {
    "text": "you don't have any branches this is member that you get right away without any checking in which mode the",
    "start": "411599",
    "end": "417840"
  },
  {
    "text": "string is right now only in case you want to check capacity so maybe do some pushback or whatever",
    "start": "417840",
    "end": "423919"
  },
  {
    "text": "to take the capacity then the branch has to be taken to find out how do i find the capacity is it the",
    "start": "423919",
    "end": "429919"
  },
  {
    "text": "value stored here or just 15 fixed size of the array",
    "start": "429919",
    "end": "435440"
  },
  {
    "text": "right but there are alternatives for example llvm",
    "start": "435440",
    "end": "440639"
  },
  {
    "text": "llvm is 24 bytes so it's smaller better for for example for cash right for",
    "start": "440639",
    "end": "446560"
  },
  {
    "text": "instruction friendliness again capacity size pointer",
    "start": "446560",
    "end": "452000"
  },
  {
    "text": "and they chose to actually to have the buffer for and near the entire structure",
    "start": "452000",
    "end": "459039"
  },
  {
    "text": "the first byte is just to select the mode if i'm in this mode in or here zero",
    "start": "459039",
    "end": "464080"
  },
  {
    "text": "means that we are in sso and there is a zero at the end so in 24 bytes of",
    "start": "464080",
    "end": "470479"
  },
  {
    "text": "type they chose to have 22 characters of data for a small string buffer this",
    "start": "470479",
    "end": "478479"
  },
  {
    "text": "is efficient from the size point of view but on the other hand um",
    "start": "478479",
    "end": "484639"
  },
  {
    "text": "every member function that works on members have to check in which mode we are",
    "start": "484639",
    "end": "490800"
  },
  {
    "text": "because we don't know how to get capacity how to get size how to get pointer unless we know which mode we are in",
    "start": "490800",
    "end": "496879"
  },
  {
    "text": "so you have branches everywhere which affects probably a bit runtime of course we have great branch predictors",
    "start": "496879",
    "end": "502879"
  },
  {
    "text": "but still probably you can expect that there will be something slower",
    "start": "502879",
    "end": "507840"
  },
  {
    "text": "and probably you're aware of about third implementation it's really similar it's fully from",
    "start": "507919",
    "end": "513760"
  },
  {
    "text": "facebook they are actually smart enough to make 23 characters here",
    "start": "513760",
    "end": "520080"
  },
  {
    "text": "and and it's possible to just have entire structure as a buffer in this case",
    "start": "520080",
    "end": "527440"
  },
  {
    "text": "the trick is done here uh basically with this last byte but that basically serves as a size or zero",
    "start": "528800",
    "end": "536399"
  },
  {
    "text": "the trick is done in that fact that actually this is not a size but inverse of size so it's capacity minus size so if you are out of",
    "start": "536399",
    "end": "543440"
  },
  {
    "text": "data out of buffer your maximum size this is zero because there is no more capacity",
    "start": "543440",
    "end": "549839"
  },
  {
    "text": "so inverse is inverse capacity let's say",
    "start": "550720",
    "end": "555360"
  },
  {
    "text": "so this may look even better than lvm right and it's really hard to find out which",
    "start": "557920",
    "end": "564080"
  },
  {
    "text": "other or those are are better because both of those are great companies all of these have cells",
    "start": "564080",
    "end": "569680"
  },
  {
    "text": "and it seems there is no golden ballot to find it also i find a few quotes that are interesting that i would like to share",
    "start": "569680",
    "end": "575360"
  },
  {
    "text": "with you about the design especially this there are quotes from llvm outdoors the hover head",
    "start": "575360",
    "end": "581600"
  },
  {
    "text": "this is a long time iso committee member and also the author of student chrono one of the best libraries i know",
    "start": "581600",
    "end": "589040"
  },
  {
    "text": "and he said that the major design of llvm's approach was to minimize size of",
    "start": "589200",
    "end": "594959"
  },
  {
    "text": "while making the internal buffer as large as possible basically the rational is to make speed",
    "start": "594959",
    "end": "600880"
  },
  {
    "text": "of move construction move assignment as fast as possible because if you have less data move is faster because move is just copy",
    "start": "600880",
    "end": "607040"
  },
  {
    "text": "of those pointers and sizes right so having like gcc having being",
    "start": "607040",
    "end": "612160"
  },
  {
    "text": "like 8 bytes more it's longer to do a move",
    "start": "612160",
    "end": "617160"
  },
  {
    "text": "also as an answer to um facebook design which may be looked",
    "start": "619200",
    "end": "624560"
  },
  {
    "text": "seems to be more smart and because they have additional character there the answer is well that's clever however",
    "start": "624560",
    "end": "631920"
  },
  {
    "text": "if lipstick has adopts this it would require lipstick blacklist to give up one of the characteristics that i like",
    "start": "631920",
    "end": "637920"
  },
  {
    "text": "a default constructed string is all zero bits which is a really cheap to default construct",
    "start": "637920",
    "end": "644320"
  },
  {
    "text": "just zero in the memory like mam set or whatever static erase memory is default constructed strings you don't have to",
    "start": "644399",
    "end": "650720"
  },
  {
    "text": "set anything during default construction like inverse size",
    "start": "650720",
    "end": "655680"
  },
  {
    "text": "and that's also a valid concern here",
    "start": "657760",
    "end": "662240"
  },
  {
    "text": "right so having those three features please try to find your favorite one",
    "start": "663760",
    "end": "670800"
  },
  {
    "text": "and where we are we are going to find out which would be your choice if you were architect with all this knowledge",
    "start": "670800",
    "end": "677600"
  },
  {
    "text": "to find out which one will work the best for you right gc size is the biggest one lvm and 40 is",
    "start": "677600",
    "end": "684560"
  },
  {
    "text": "smaller so move is cheaper small buffer size",
    "start": "684560",
    "end": "690160"
  },
  {
    "text": "and fully is the biggest one move performance first branches",
    "start": "690160",
    "end": "696320"
  },
  {
    "text": "only on capacity here everywhere in both cases default construction",
    "start": "696320",
    "end": "701680"
  },
  {
    "text": "all zero fast",
    "start": "701680",
    "end": "704560"
  },
  {
    "text": "so what would you choose coming back here if you are didn't join please join",
    "start": "709920",
    "end": "717320"
  },
  {
    "text": "and we are going to make a vote now we have 30 seconds",
    "start": "718800",
    "end": "726320"
  },
  {
    "text": "let's see",
    "start": "726480",
    "end": "729720"
  },
  {
    "text": "hmm it's the first thing you still have 15 seconds to vote",
    "start": "733760",
    "end": "739720"
  },
  {
    "text": "yeah so it seems that our favorite in this room is llvms approach i like it",
    "start": "751760",
    "end": "757279"
  },
  {
    "text": "really much also maybe because i quoted hard everyone knows this is done by howard so it has to be great",
    "start": "757279",
    "end": "764079"
  },
  {
    "text": "but but yeah this also all of them are great designs and it's really hard as you can see to",
    "start": "764079",
    "end": "769440"
  },
  {
    "text": "find the golden ballot so as i said sometimes you know how to implement stuff but it may take a long time to decide which one to choose",
    "start": "769440",
    "end": "776079"
  },
  {
    "text": "right so this was just a warm-up we are going to talk about some stuff for entire talk",
    "start": "776079",
    "end": "782240"
  },
  {
    "text": "but thank you for voting please keep your phones connected because there will be more votes",
    "start": "782240",
    "end": "787760"
  },
  {
    "text": "soon another interesting concern",
    "start": "787760",
    "end": "794320"
  },
  {
    "text": "different variants of exception safety let's consider such simple code we have",
    "start": "794320",
    "end": "800720"
  },
  {
    "text": "established connections and in let's say port is represented by end so we have some",
    "start": "800720",
    "end": "806000"
  },
  {
    "text": "first port and the last port so some range of ports you want to establish from 1 to 20 for example right",
    "start": "806000",
    "end": "811680"
  },
  {
    "text": "and it may flow so you have exception exception handling here",
    "start": "811680",
    "end": "816560"
  },
  {
    "text": "also we have a structured connection connection that takes support stores the port here and if something bad happened",
    "start": "816959",
    "end": "823279"
  },
  {
    "text": "we are freaking exception right and returning port as in this member",
    "start": "823279",
    "end": "828720"
  },
  {
    "text": "here nothing fancy here is just that construction may not",
    "start": "828720",
    "end": "834160"
  },
  {
    "text": "succeed we have vector of connections",
    "start": "834160",
    "end": "839760"
  },
  {
    "text": "and we have established connection the function tag this that takes the first port and the last port so the range of",
    "start": "840160",
    "end": "845519"
  },
  {
    "text": "the ports to um to set up we're having retro encounter set to 10",
    "start": "845519",
    "end": "850959"
  },
  {
    "text": "and we are checking if connection is empty so we actually didn't do anything yet or we failed to set up the first one",
    "start": "850959",
    "end": "857199"
  },
  {
    "text": "or basically the last one in our connections is different from the last so we didn't finish the process",
    "start": "857199",
    "end": "863839"
  },
  {
    "text": "we are trying to add a new connection as you've seen it basically may fail",
    "start": "863839",
    "end": "869519"
  },
  {
    "text": "during construction right and we have some retro number so we can",
    "start": "869519",
    "end": "874880"
  },
  {
    "text": "retrying stuff you know in a while loop right alternatively when the counter is down",
    "start": "874880",
    "end": "881360"
  },
  {
    "text": "we are considering that we failed and we are throwing the exception out of this even in the for footer",
    "start": "881360",
    "end": "887600"
  },
  {
    "text": "processing by outer means simple enough",
    "start": "887600",
    "end": "893440"
  },
  {
    "text": "right and as connection is as simple as this one connection and plays back",
    "start": "893440",
    "end": "901440"
  },
  {
    "text": "right it is as simple because actually it provides exception safety guarantees",
    "start": "901519",
    "end": "906720"
  },
  {
    "text": "what is the exception safety guarantee of this of this call",
    "start": "906720",
    "end": "912360"
  },
  {
    "text": "we have four of them right we are going to talk about them soon this is strong exception safety",
    "start": "918320",
    "end": "924399"
  },
  {
    "start": "924000",
    "end": "924000"
  },
  {
    "text": "right um the question is even though probably most of you realize that we have four exception safety guarantees",
    "start": "924399",
    "end": "931440"
  },
  {
    "text": "because when i ask that during interview people know about it when i ask during workshops people know about them but what was the last time",
    "start": "931440",
    "end": "937920"
  },
  {
    "text": "when you actually thought about exception safety writing your own code",
    "start": "937920",
    "end": "942560"
  },
  {
    "text": "what was the last time you reviewed the exception safety of your algorithm how often do you analyze exception safety of your custom class assignment",
    "start": "943360",
    "end": "949920"
  },
  {
    "text": "operator which is really easy to be broken and in case of exactly",
    "start": "949920",
    "end": "955600"
  },
  {
    "text": "exception safety which accepted safety",
    "start": "955600",
    "end": "961920"
  },
  {
    "text": "the latest library utility you've written provides did you ever ask those questions to you",
    "start": "961920",
    "end": "967839"
  },
  {
    "text": "writing some code right even though",
    "start": "967839",
    "end": "972880"
  },
  {
    "text": "we know about them that there are four of them right",
    "start": "972880",
    "end": "978320"
  },
  {
    "text": "basically no throw so far no except function that never flows no exception quality means basically anything can",
    "start": "978320",
    "end": "983440"
  },
  {
    "text": "happen like exceptions uh maybe maybe front and then you have memory leaks and crashes",
    "start": "983440",
    "end": "990399"
  },
  {
    "text": "resource leaks and so on and between them you have also basically strong right basically strong means that",
    "start": "990399",
    "end": "997759"
  },
  {
    "text": "if exception happens the state of the program is like this function was never called",
    "start": "997759",
    "end": "1003839"
  },
  {
    "text": "if the function did something out to this point it has to undo stuff it's like a transaction either",
    "start": "1003839",
    "end": "1010480"
  },
  {
    "text": "everything is done or nothing is done so if there are some side effects those have those has to be restored",
    "start": "1010480",
    "end": "1016320"
  },
  {
    "text": "the state of the program should not change with basic exception safety guarantee you have",
    "start": "1016320",
    "end": "1022399"
  },
  {
    "text": "two basic program is in the valid state but maybe you have to do some cleanup",
    "start": "1022399",
    "end": "1027918"
  },
  {
    "text": "manually right and this what you have to do actually is documented by specific product you are using what is the state",
    "start": "1027919",
    "end": "1035600"
  },
  {
    "text": "after the exception my",
    "start": "1035600",
    "end": "1040640"
  },
  {
    "start": "1038000",
    "end": "1038000"
  },
  {
    "text": "basically experience from doing workshops for quite a long while already is that that even if dramatically we",
    "start": "1040640",
    "end": "1046959"
  },
  {
    "text": "know what our exception safety grant is we often ignore them in our production",
    "start": "1046959",
    "end": "1052240"
  },
  {
    "text": "code just don't think about this writing our code and they would like to raise your con right you raise your awareness here",
    "start": "1052240",
    "end": "1058960"
  },
  {
    "text": "to this um subject because this is one really important one right",
    "start": "1058960",
    "end": "1064000"
  },
  {
    "text": "we actually expect standard library to be strong exception safe if it was not everyone will complain",
    "start": "1064000",
    "end": "1070400"
  },
  {
    "text": "that it is something that you cannot use imagine that something very provides only basic one",
    "start": "1070400",
    "end": "1076400"
  },
  {
    "start": "1073000",
    "end": "1073000"
  },
  {
    "text": "so our ad connection instead of just employees back forces us to do something like this",
    "start": "1076400",
    "end": "1081440"
  },
  {
    "text": "if connections are not empty uh look for the last iterator do the previous one because this is the last",
    "start": "1081440",
    "end": "1087440"
  },
  {
    "text": "one that we actually expected to push right and check if it's dirty it's not set up",
    "start": "1087440",
    "end": "1092880"
  },
  {
    "text": "correctly right if it's dirty if it was not able to be set up correctly it's some garbage there you have to erase it",
    "start": "1092880",
    "end": "1098960"
  },
  {
    "text": "and then try to and place it back again would you like to write code like this one",
    "start": "1098960",
    "end": "1104559"
  },
  {
    "text": "for every pushback",
    "start": "1104559",
    "end": "1108120"
  },
  {
    "text": "these are different effects of being strong exceptions safe",
    "start": "1110480",
    "end": "1115120"
  },
  {
    "text": "but when your go will go home to your projects please see through assignment operators for example if they are strong",
    "start": "1115840",
    "end": "1122160"
  },
  {
    "text": "exception safe if you provide similar user friendliness to your users then strong that's not the library does",
    "start": "1122160",
    "end": "1129200"
  },
  {
    "text": "because we don't want to write code like this one right",
    "start": "1129200",
    "end": "1134320"
  },
  {
    "text": "this is something for you to take as a homework also for me right because we don't",
    "start": "1134320",
    "end": "1140240"
  },
  {
    "text": "uh use them analyze them that often as we should",
    "start": "1140240",
    "end": "1146159"
  },
  {
    "text": "and there is one big exception the standard library from that that i know at least",
    "start": "1146240",
    "end": "1151679"
  },
  {
    "text": "this is called variant variant is another engineering tradeoff and we are going to basically discuss",
    "start": "1151679",
    "end": "1156880"
  },
  {
    "text": "this right now variant in standard has values by exception state",
    "start": "1156880",
    "end": "1162160"
  },
  {
    "text": "it's a special state that basically can be reached only via exception because by default variants cannot be",
    "start": "1162160",
    "end": "1168480"
  },
  {
    "text": "empty there's not no such thing like a like an empty variant but variant also in standard cannot",
    "start": "1168480",
    "end": "1175280"
  },
  {
    "text": "allocate memory so everything is stored in place in the in the buffer of the variant right so consider you have",
    "start": "1175280",
    "end": "1180559"
  },
  {
    "text": "variant of type a and b instead of switch in in case of switching from from a to b",
    "start": "1180559",
    "end": "1187039"
  },
  {
    "text": "first you have to destroy destroy a right we are destroying a trying to create b",
    "start": "1187039",
    "end": "1192480"
  },
  {
    "text": "and what happens if b fails to create how to restore the previous state and provide strong associated grantees if a",
    "start": "1192480",
    "end": "1199440"
  },
  {
    "text": "is already destructed right",
    "start": "1199440",
    "end": "1204960"
  },
  {
    "text": "so in this case it's not possible in such case we are ending up in value less",
    "start": "1204960",
    "end": "1210000"
  },
  {
    "text": "by exception state how you can handle this for example let's let's assume that you have two",
    "start": "1210000",
    "end": "1215919"
  },
  {
    "text": "sockets one basic like just os one that's always there and maybe one fast that basically requires you to have",
    "start": "1215919",
    "end": "1221520"
  },
  {
    "text": "kernel bypass drivers installed right and you have variant of those two",
    "start": "1221520",
    "end": "1228000"
  },
  {
    "text": "you have some protest function that basically at the very beginning tries to switch a circuit to a fast one",
    "start": "1228720",
    "end": "1233919"
  },
  {
    "text": "it may fail so in the exception you have to check if it's values by exception and actually if it is because there was",
    "start": "1233919",
    "end": "1240640"
  },
  {
    "text": "an exception you have to reset socket to a basic one because something failed to set up as fast socket for you processing",
    "start": "1240640",
    "end": "1248159"
  },
  {
    "text": "this is the penalty of providing basic essentiality guarantee only not a strong one",
    "start": "1248159",
    "end": "1254080"
  },
  {
    "text": "so you may say stud variant is broken right there are also alternatives that provide",
    "start": "1254080",
    "end": "1259840"
  },
  {
    "text": "strong associated guarantee boost variant provides never empty guarantee",
    "start": "1259840",
    "end": "1266559"
  },
  {
    "start": "1261000",
    "end": "1261000"
  },
  {
    "text": "how come how how it's possible this is how it stated in documentation",
    "start": "1266799",
    "end": "1271919"
  },
  {
    "text": "in case of a potentially flowing copy constructor copy construct the content of the left",
    "start": "1271919",
    "end": "1276960"
  },
  {
    "text": "hand side to the backup heap that i just created so variant does",
    "start": "1276960",
    "end": "1282799"
  },
  {
    "text": "then if more allocation does a buffer and copy construct actual content there",
    "start": "1282799",
    "end": "1289760"
  },
  {
    "text": "so you have memory location cost and copy construction cost right consider this an array of thousand",
    "start": "1289760",
    "end": "1295520"
  },
  {
    "text": "elements then we are destroying something that's in the variant",
    "start": "1295520",
    "end": "1301840"
  },
  {
    "text": "copy constructing content of the right hand side to our variant and basically if there is an exception",
    "start": "1301840",
    "end": "1309039"
  },
  {
    "text": "we copy the backup back again hoping that it will actually succeed",
    "start": "1309039",
    "end": "1314960"
  },
  {
    "text": "because maybe it doesn't have to in the event of success they allocate",
    "start": "1314960",
    "end": "1320799"
  },
  {
    "text": "the point data pointer by backup right so we are freeing the memory so this is the cost of providing strong",
    "start": "1320799",
    "end": "1327360"
  },
  {
    "text": "conservative warranty to variant right it's easier to use",
    "start": "1327360",
    "end": "1332559"
  },
  {
    "text": "you don't have to care about that state but it requires dynamic allocation it requires some copying it's slower on",
    "start": "1332559",
    "end": "1339679"
  },
  {
    "text": "some platforms it may not be no go like like embedded platforms they cannot afford the dynamic location",
    "start": "1339679",
    "end": "1345360"
  },
  {
    "text": "so you'll not be able to use variant there moreover boost variant does not provide",
    "start": "1345360",
    "end": "1351840"
  },
  {
    "text": "allocator support so you cannot say how you want to allocate this memory",
    "start": "1351840",
    "end": "1358280"
  },
  {
    "text": "and now again we have to choose stood variant basic exception safety only you have to make cleanup and check for the state",
    "start": "1361440",
    "end": "1368720"
  },
  {
    "text": "after after the after the switch of or assigning your data but never allocates",
    "start": "1368720",
    "end": "1374720"
  },
  {
    "text": "memory fast can be used in embedded and constrained environments boost variant",
    "start": "1374720",
    "end": "1380640"
  },
  {
    "text": "easy to use slower and maybe sometimes no go in some",
    "start": "1380640",
    "end": "1386840"
  },
  {
    "text": "solutions let's see what's your opinion in the room",
    "start": "1386840",
    "end": "1393400"
  },
  {
    "text": "and did it broke i don't see anything happening",
    "start": "1406640",
    "end": "1411039"
  },
  {
    "text": "strange",
    "start": "1413200",
    "end": "1416200"
  },
  {
    "text": "i see like six pieces of persons only reconnecting what happened oh okay we have uh this was a surprise so we cannot",
    "start": "1419520",
    "end": "1425840"
  },
  {
    "text": "cheat nice feature oh actually it probably disconnected for",
    "start": "1425840",
    "end": "1431520"
  },
  {
    "text": "him for a moment and probably i should have some wire maybe or maybe there are too many",
    "start": "1431520",
    "end": "1436559"
  },
  {
    "text": "persons with wi-fi in this room actually actively using it i don't know but it seems that",
    "start": "1436559",
    "end": "1443520"
  },
  {
    "text": "um we did a good choice in the standard community right iso committee",
    "start": "1443520",
    "end": "1448960"
  },
  {
    "text": "we it seems that we have um the design",
    "start": "1448960",
    "end": "1454880"
  },
  {
    "text": "that's actually preferred by most of the room which is encouraging as a committee member thank you for",
    "start": "1454880",
    "end": "1460400"
  },
  {
    "text": "for basically acknowledging our work we are doing our best but yes as you can see it's never easy",
    "start": "1460400",
    "end": "1468640"
  },
  {
    "text": "of course there are easy answers but sometimes it's really hard to provide something that's",
    "start": "1468640",
    "end": "1474400"
  },
  {
    "text": "and basically will satisfy everyone okay let's try the next one next one",
    "start": "1474400",
    "end": "1480720"
  },
  {
    "text": "actually will be from my point of view because i would like to use you as guinea pigs and provide me feedback from",
    "start": "1480720",
    "end": "1487440"
  },
  {
    "text": "my library probably you've heard me or seen some talks of of me on",
    "start": "1487440",
    "end": "1492960"
  },
  {
    "text": "about the mpv library it's a physical units library that i write it was intended to be encoded in class 23 but",
    "start": "1492960",
    "end": "1499520"
  },
  {
    "text": "because of those crazy times at least we have to worry to 26 i hope but if it will not be in the standard",
    "start": "1499520",
    "end": "1506240"
  },
  {
    "text": "still i think it's a fine library so i encourage you to test it and and use it",
    "start": "1506240",
    "end": "1511679"
  },
  {
    "text": "but still i have two problems that we would like to poll you today because again it's hard to find out",
    "start": "1511679",
    "end": "1518000"
  },
  {
    "text": "what's the best solution but first let's do some introduction for those that are not in the subject",
    "start": "1518000",
    "end": "1524480"
  },
  {
    "text": "basically what's a quantity quantity is a property of an amended body and substance where the property has a magnitude that can be expressed by means",
    "start": "1524480",
    "end": "1531520"
  },
  {
    "text": "of a number and some reference reference can be a measurement unit",
    "start": "1531520",
    "end": "1537360"
  },
  {
    "text": "right so for example 103 kilometers of length this is a quantity",
    "start": "1537360",
    "end": "1543200"
  },
  {
    "text": "right 70 kilometers per hour of speed right those are quantities so number",
    "start": "1543200",
    "end": "1549279"
  },
  {
    "text": "uh and unit and sometimes also connected some dimension because sometimes unit can be",
    "start": "1549279",
    "end": "1555600"
  },
  {
    "text": "used in different dimensions different things",
    "start": "1555600",
    "end": "1559679"
  },
  {
    "text": "so quantity class template in my library right now looks as follows we have",
    "start": "1560640",
    "end": "1566400"
  },
  {
    "text": "dimension unit of this dimension and representation by default double",
    "start": "1566400",
    "end": "1572240"
  },
  {
    "text": "so if you want to instantiate it you have to provide units and no like using namespaces",
    "start": "1572240",
    "end": "1577679"
  },
  {
    "text": "declarations you have to specify units quantity of unix is qsi dim length because you want",
    "start": "1577679",
    "end": "1583520"
  },
  {
    "text": "to have quantity of length and units asu is a cyclometer with",
    "start": "1583520",
    "end": "1589360"
  },
  {
    "text": "the default double if you want to provide your custom your custom representation it's even longer",
    "start": "1589360",
    "end": "1595360"
  },
  {
    "text": "as you can see it's quite quite variables and that bothers me right it's easy to understand but if you're",
    "start": "1595360",
    "end": "1601840"
  },
  {
    "text": "not using those i'm using the namespace you need asqsi it's actually quite long",
    "start": "1601840",
    "end": "1606880"
  },
  {
    "text": "to type so we are looking for some alternatives for something that will make",
    "start": "1606880",
    "end": "1612480"
  },
  {
    "text": "this easier and faster to to work with so solution number one dimension",
    "start": "1612480",
    "end": "1619039"
  },
  {
    "text": "specifically assets we have alias for length that's basically the quantity of the length",
    "start": "1619039",
    "end": "1624880"
  },
  {
    "text": "speed quantity of them speed which saves us a bit of typing so it looks like this",
    "start": "1624880",
    "end": "1630720"
  },
  {
    "text": "unit's asq as i length kilometer speed in kilometer per hour",
    "start": "1630720",
    "end": "1636320"
  },
  {
    "text": "it's already better shorter benefits chip to standardize because it",
    "start": "1636320",
    "end": "1641760"
  },
  {
    "text": "has to provide it only per dimensions not per units there are like limited number of dimensions in si for example like 150 or",
    "start": "1641760",
    "end": "1649279"
  },
  {
    "text": "whatever right fast to compile because those areas templates alias templates are the",
    "start": "1649279",
    "end": "1654720"
  },
  {
    "text": "fastest to compile work works both for literals and regular variables by this i mean they can",
    "start": "1654720",
    "end": "1661120"
  },
  {
    "text": "provide a compile-time known value here as as well as like function argument runtime argument it works",
    "start": "1661120",
    "end": "1669720"
  },
  {
    "text": "cos still quite bad variables right it's still quite long and space has to be repeated",
    "start": "1669840",
    "end": "1676559"
  },
  {
    "text": "for a unit so we have nice space for for alias and then for you in the same prefix which is",
    "start": "1676559",
    "end": "1683200"
  },
  {
    "text": "probably suboptimal class temperature deduction for ls templates does not work here",
    "start": "1683200",
    "end": "1689360"
  },
  {
    "text": "um because there are some additional parameters so we cannot deduce for example representation type from the initializer",
    "start": "1689360",
    "end": "1696760"
  },
  {
    "text": "so maybe solution number two uh these are called unit specifically",
    "start": "1697279",
    "end": "1702320"
  },
  {
    "text": "assets so you provide the unit alias for each unit not only for each dimension",
    "start": "1702320",
    "end": "1708000"
  },
  {
    "text": "so we say that using km is length of kilometer in the presentation the presentation is",
    "start": "1709039",
    "end": "1714240"
  },
  {
    "text": "provided here as parameter by default double and the same for kilometer per hour",
    "start": "1714240",
    "end": "1721960"
  },
  {
    "start": "1723000",
    "end": "1723000"
  },
  {
    "text": "this we can type something like that i just did here using direction the directive here and i have a side length",
    "start": "1724000",
    "end": "1729840"
  },
  {
    "text": "kilometer default double as i speed kilometer per hour of integer",
    "start": "1729840",
    "end": "1735760"
  },
  {
    "text": "with c plus 20 cluster bracket deduction this actually works this one will deduce double",
    "start": "1735760",
    "end": "1741520"
  },
  {
    "text": "from the initializer this one will deduce integer",
    "start": "1741520",
    "end": "1745679"
  },
  {
    "text": "and it's possible possible possible to be more tears if desire because sometimes um like km or camp preparation it's not",
    "start": "1749840",
    "end": "1758320"
  },
  {
    "text": "um it's better to describe here so you may write prefix what you are",
    "start": "1758320",
    "end": "1763760"
  },
  {
    "text": "dealing with or just be like like uds short one in this case",
    "start": "1763760",
    "end": "1770880"
  },
  {
    "text": "which can be a benefit if everyone knows exactly what s m or",
    "start": "1771520",
    "end": "1777360"
  },
  {
    "text": "other letter you are using means in the specific domain or function because in you're doing you",
    "start": "1777360",
    "end": "1783120"
  },
  {
    "text": "can do this per function not for entire project right",
    "start": "1783120",
    "end": "1787600"
  },
  {
    "text": "pros fast to compile because still these are issues words both for uterus and regular",
    "start": "1788480",
    "end": "1793520"
  },
  {
    "text": "variables the same as previously user can choose to either use a long or third version of it",
    "start": "1793520",
    "end": "1798960"
  },
  {
    "text": "cons quite expensive to standardize right because it has provided for every",
    "start": "1798960",
    "end": "1804320"
  },
  {
    "text": "unit of every dimension so this counts in thousands probably right now",
    "start": "1804320",
    "end": "1811679"
  },
  {
    "text": "so let's see into the third solution that we have by the way all of them are working correctly in my library right",
    "start": "1813120",
    "end": "1819120"
  },
  {
    "text": "now in parallel and i promise you with whatever you choose i will show you today tomorrow during my talk this will be default one",
    "start": "1819120",
    "end": "1825520"
  },
  {
    "text": "that i chose during the the presentation tomorrow so please choose wisely and i have to work to the evening to switch my my talk",
    "start": "1825520",
    "end": "1832559"
  },
  {
    "text": "to the one that you choose today so we'll see if actually you made a good choice how it looks like in real life",
    "start": "1832559",
    "end": "1840799"
  },
  {
    "text": "um quantity references they're provided only for name units only so we have",
    "start": "1840799",
    "end": "1846799"
  },
  {
    "text": "reference this is a new type that basically encapsulates length and unit and we state this is kilometer",
    "start": "1846799",
    "end": "1853600"
  },
  {
    "text": "time and hour hour this these are variables not aliases",
    "start": "1853600",
    "end": "1858799"
  },
  {
    "text": "right like like objects and if you want to provide some",
    "start": "1858799",
    "end": "1866000"
  },
  {
    "start": "1863000",
    "end": "1863000"
  },
  {
    "text": "um speed or length you type it in the well-known form maybe from boost units",
    "start": "1866000",
    "end": "1872320"
  },
  {
    "text": "if you if you are familiar with this one right you are using multiply number by a unit",
    "start": "1872320",
    "end": "1878399"
  },
  {
    "text": "and you end up with a length of kilometer and double um if you want to have speed you have to",
    "start": "1878399",
    "end": "1883760"
  },
  {
    "text": "type it this way if you forget about braces actually in our project it will not",
    "start": "1883760",
    "end": "1889440"
  },
  {
    "text": "compile because we basically uh assume that we want to be safe",
    "start": "1889440",
    "end": "1896879"
  },
  {
    "text": "so you cannot divide a quantity because it will decide 70 kilometers and you want to divide 70 kilometer by reference which is not",
    "start": "1897919",
    "end": "1904399"
  },
  {
    "text": "allowed right so if you have to create a reference from those and then multiply by number",
    "start": "1904399",
    "end": "1910320"
  },
  {
    "text": "this is for safety but you have to put those braces sometimes those parentheses it is also possible to define your",
    "start": "1910320",
    "end": "1917760"
  },
  {
    "text": "custom quantity references easily you just spend my specified kilometer per hour",
    "start": "1917760",
    "end": "1923120"
  },
  {
    "text": "it's dead and then use it and this is all you have to do to specify new derived unit",
    "start": "1923120",
    "end": "1931600"
  },
  {
    "text": "pros medium effort to standardize because it's provided for named units only there's less name units than all of",
    "start": "1933679",
    "end": "1939360"
  },
  {
    "text": "the units in nsi there are only like meters seconds and then some maybe prefix versions of those",
    "start": "1939360",
    "end": "1944799"
  },
  {
    "text": "but only at probably mostly for for the base quantities and some direct ones like",
    "start": "1944799",
    "end": "1951200"
  },
  {
    "text": "joule vat but others are just derived from those",
    "start": "1951200",
    "end": "1956480"
  },
  {
    "text": "uh words both for literals and regular variables again easy to compose custom references",
    "start": "1956480",
    "end": "1961600"
  },
  {
    "text": "for unnamed direct units as i shown you on the previous screen cons slower to compile because those are",
    "start": "1961600",
    "end": "1967120"
  },
  {
    "text": "actually class tempo associations rather than just alias sometimes awkward to type",
    "start": "1967120",
    "end": "1972880"
  },
  {
    "text": "20 meters per second divided by 10 meters per second square a lot of parenthesis",
    "start": "1972880",
    "end": "1980320"
  },
  {
    "text": "there are a lot of objects with short names that often shadow uses local variables because those are objects not",
    "start": "1980399",
    "end": "1985840"
  },
  {
    "text": "types do you have an already an object or argument of the function called m t n",
    "start": "1985840",
    "end": "1992159"
  },
  {
    "text": "probably you have right so you have collisions if you include those in the same namespace",
    "start": "1992159",
    "end": "1998398"
  },
  {
    "text": "sometimes hard to understand if you have also one one letter arguments like distance and time then",
    "start": "1998799",
    "end": "2004880"
  },
  {
    "text": "what does the d times m means what is the argument what is the the uh",
    "start": "2004880",
    "end": "2011600"
  },
  {
    "text": "the unit here is it a tone or or time",
    "start": "2011600",
    "end": "2017360"
  },
  {
    "text": "right",
    "start": "2017360",
    "end": "2019840"
  },
  {
    "text": "solution number four user defined literals so something that we know already from from chrono",
    "start": "2023840",
    "end": "2029360"
  },
  {
    "text": "right it's even harder to standardize because it provides two versions for integrals",
    "start": "2029360",
    "end": "2035279"
  },
  {
    "text": "and floating points for each unit in the system",
    "start": "2035279",
    "end": "2041600"
  },
  {
    "text": "so if there was thousands right now is twice as much",
    "start": "2041600",
    "end": "2046600"
  },
  {
    "start": "2048000",
    "end": "2048000"
  },
  {
    "text": "but the use case is quite quite fine in our case we have to use this queue prefix actually we're using underscore q",
    "start": "2049200",
    "end": "2056079"
  },
  {
    "text": "prefix this is what we will have in the standard if you are allowed to get rid of this underscore before queue",
    "start": "2056079",
    "end": "2061520"
  },
  {
    "text": "but we have to use cube because otherwise we will have some collisions with what's also already there",
    "start": "2061520",
    "end": "2067358"
  },
  {
    "text": "so some of the units already collide with um literals for some maf",
    "start": "2067359",
    "end": "2073839"
  },
  {
    "text": "descriptions that are used for subway cc so you have to use this cube prefix",
    "start": "2073839",
    "end": "2080320"
  },
  {
    "text": "compatibility is too toronto there's an easy to understand but there's a long list of problems this",
    "start": "2080320",
    "end": "2085520"
  },
  {
    "text": "is the slowest to compile the most expensive standardized two instances per every unit",
    "start": "2085520",
    "end": "2092480"
  },
  {
    "text": "it works only for literals not for common variables right you cannot put function argument before literal",
    "start": "2092480",
    "end": "2100000"
  },
  {
    "text": "so it's only for compile-time non-constants so mostly either physical constants",
    "start": "2100000",
    "end": "2105760"
  },
  {
    "text": "or unit tests this is where you're using constants in your code in other cases you are dealing with",
    "start": "2105760",
    "end": "2111280"
  },
  {
    "text": "arguments so this tends to be useless and you are left with this long",
    "start": "2111280",
    "end": "2116960"
  },
  {
    "text": "thing that we started with",
    "start": "2116960",
    "end": "2120000"
  },
  {
    "text": "no control over the representation type it's either in 64 or long double you cannot have short car",
    "start": "2123839",
    "end": "2131040"
  },
  {
    "text": "if you are dealing with small values right on embedded platform is the longest possible because this is",
    "start": "2131040",
    "end": "2136560"
  },
  {
    "text": "what how udls work either this one or this one it also cannot be disambiguated with the",
    "start": "2136560",
    "end": "2142720"
  },
  {
    "text": "same wooden space for example we have centimeter both in the si system and cgs",
    "start": "2142720",
    "end": "2148320"
  },
  {
    "text": "system if you in class both you will have a collision",
    "start": "2148320",
    "end": "2154400"
  },
  {
    "text": "which centimeter you wanted to use",
    "start": "2154400",
    "end": "2158520"
  },
  {
    "text": "because uds can cannot be prefixed with the namespace name",
    "start": "2159680",
    "end": "2164559"
  },
  {
    "start": "2166000",
    "end": "2166000"
  },
  {
    "text": "so also of course we could provide all of them like we have in our library right now right boston",
    "start": "2166560",
    "end": "2173200"
  },
  {
    "text": "basis standardization takes time and probably it will be not accepted in this case",
    "start": "2173200",
    "end": "2178320"
  },
  {
    "text": "but they will ask me to make a choice so i'm asking you to make a choice for me",
    "start": "2178320",
    "end": "2183520"
  },
  {
    "text": "sorry because it's hard uh timing is needed to discuss this in",
    "start": "2183520",
    "end": "2188640"
  },
  {
    "text": "working groups in iso committee prepare the ic specification implement in various implementations gcc clank everyone has to implement this right and",
    "start": "2188640",
    "end": "2194800"
  },
  {
    "text": "then you have to teach it and learn for every one of you right this is a long process the more",
    "start": "2194800",
    "end": "2200400"
  },
  {
    "text": "complicated it is the longer it takes",
    "start": "2200400",
    "end": "2204960"
  },
  {
    "start": "2205000",
    "end": "2205000"
  },
  {
    "text": "so just to compare on one slide dimension ideas you need ideas in terms version",
    "start": "2205839",
    "end": "2213599"
  },
  {
    "text": "sorry in the longer version in the third version so that those has two different options",
    "start": "2213599",
    "end": "2218720"
  },
  {
    "text": "uh quantity preferences references and uds",
    "start": "2218720",
    "end": "2223920"
  },
  {
    "text": "so you can find your favorite also i haven't a long table of all of the features that we",
    "start": "2225040",
    "end": "2231040"
  },
  {
    "text": "discussed the bold one with blue is basically is basically the better one",
    "start": "2231040",
    "end": "2237359"
  },
  {
    "text": "so literals and variables support and previous user provided present representation type explicit control",
    "start": "2237359",
    "end": "2242800"
  },
  {
    "text": "over representation type readability possibility to resolve ambiguity hard to resolve shadowing issues controlled",
    "start": "2242800",
    "end": "2249040"
  },
  {
    "text": "verbosity easy composition of direct units implementation and standardization effort and compile time performance",
    "start": "2249040",
    "end": "2257400"
  },
  {
    "text": "so i hope that you are ready to make a choice and let's come back to our voting",
    "start": "2258400",
    "end": "2263599"
  },
  {
    "text": "platform and let's try to find out what's your favorite",
    "start": "2263599",
    "end": "2269800"
  },
  {
    "text": "hmm it seems they have a lot of work to do today in vienna because previous groups always wanted to",
    "start": "2287920",
    "end": "2293040"
  },
  {
    "text": "have quantity references okay so tomorrow we see each other with",
    "start": "2293040",
    "end": "2298160"
  },
  {
    "text": "unique specifically in our presentation see you there",
    "start": "2298160",
    "end": "2303920"
  },
  {
    "text": "all right and the last thing that i wanted to discuss with you didn't casting facility",
    "start": "2307760",
    "end": "2314079"
  },
  {
    "text": "maybe you've seen my talks about this one there's a really great thing that i really proud of but also it turned out",
    "start": "2314079",
    "end": "2319359"
  },
  {
    "text": "that it may expose some problems what this is about basically it allows us to have really",
    "start": "2319359",
    "end": "2326880"
  },
  {
    "text": "nice user experience if you're typing something like this average speed you're dividing length and",
    "start": "2326880",
    "end": "2333200"
  },
  {
    "text": "time returning speed",
    "start": "2333200",
    "end": "2337760"
  },
  {
    "text": "actually the type that you are getting here is a really nice one if you have right ever speed 140",
    "start": "2338240",
    "end": "2343920"
  },
  {
    "text": "kilometers to hours you will get 70 kilometer per hour this is something that that's printed",
    "start": "2343920",
    "end": "2350560"
  },
  {
    "text": "because it knows that actually the type here of s is",
    "start": "2350560",
    "end": "2356560"
  },
  {
    "text": "the dimensional speed kilometer per hour because of the done casting facility",
    "start": "2356560",
    "end": "2364560"
  },
  {
    "text": "it's the unique feature for all of the libraries that are there because",
    "start": "2364560",
    "end": "2370240"
  },
  {
    "text": "based on the ingredients like dividing length by time it doesn't provide me a type called uh",
    "start": "2370240",
    "end": "2377359"
  },
  {
    "text": "like exponent of length divided to the first exponent of left divided by exponent of",
    "start": "2377359",
    "end": "2383440"
  },
  {
    "text": "of of time it does it under the hood but basically",
    "start": "2383440",
    "end": "2388880"
  },
  {
    "text": "it knows that user provided a nicely named name for it dimension speed",
    "start": "2388880",
    "end": "2395760"
  },
  {
    "text": "it also knows that if i divide kilometer per hour so i end up with some crazy ratio with some",
    "start": "2395760",
    "end": "2402320"
  },
  {
    "text": "thirty six hundred uh divided by by by something",
    "start": "2402320",
    "end": "2407520"
  },
  {
    "text": "or oh kilometers by by seconds right 300 seconds that actually it's also not a ratio of",
    "start": "2407520",
    "end": "2414160"
  },
  {
    "text": "some strange ratio but it's named by the user kilometer per hour i want to see this type",
    "start": "2414160",
    "end": "2420079"
  },
  {
    "text": "in the error log in the debugger right rather than end up with",
    "start": "2420079",
    "end": "2425520"
  },
  {
    "text": "something made up by the library from the ingredients because this is what other libraries do",
    "start": "2425520",
    "end": "2432000"
  },
  {
    "text": "in order to do so i have to inject two additional classes it's crtp design pattern so the type",
    "start": "2433119",
    "end": "2440560"
  },
  {
    "text": "defined here goes here as the first argument the type defined here goes here's the first argument so curiosity",
    "start": "2440560",
    "end": "2446720"
  },
  {
    "text": "recording template parameter idiom i will not go through the design right now i've applied this i just discussed",
    "start": "2446720",
    "end": "2453440"
  },
  {
    "text": "the design on other talks but the problem is that this may break one definition rule",
    "start": "2453440",
    "end": "2461119"
  },
  {
    "start": "2455000",
    "end": "2455000"
  },
  {
    "text": "one definition rule basically tells that for translation unit only one definition can appear in entire transaction unit",
    "start": "2461280",
    "end": "2467440"
  },
  {
    "text": "right it's simple for program basically it's similar but different",
    "start": "2467440",
    "end": "2473920"
  },
  {
    "start": "2470000",
    "end": "2470000"
  },
  {
    "text": "for program it means that if you have non-inline function variable basically there should be only one definition if it does inline function",
    "start": "2473920",
    "end": "2480160"
  },
  {
    "text": "variable it has to actually be visible in every transition you need because it has to be inline so you have to see the definition",
    "start": "2480160",
    "end": "2487280"
  },
  {
    "text": "right and for classes it requires that it appears only in one translation units",
    "start": "2487280",
    "end": "2493040"
  },
  {
    "text": "uh where basically you'll be using this one but",
    "start": "2493040",
    "end": "2498400"
  },
  {
    "text": "this is the plus plus c plus always has some buts doesn't bother you",
    "start": "2498400",
    "end": "2503520"
  },
  {
    "text": "there could be more than one definition in the program as long as each definition appears in the same in a different transition you need because in",
    "start": "2504160",
    "end": "2509599"
  },
  {
    "text": "the same you cannot provide more than one if the fusion consists of the same sequence of tokens so it's lexically the",
    "start": "2509599",
    "end": "2515920"
  },
  {
    "text": "same it's even not semantically the same but lexically the same and some other things",
    "start": "2515920",
    "end": "2523760"
  },
  {
    "text": "otherwise the behavior is undefined so how it basically",
    "start": "2523760",
    "end": "2529119"
  },
  {
    "start": "2528000",
    "end": "2528000"
  },
  {
    "text": "affects us here let's assume that we have this our function average speed that divides stuff prints it and the",
    "start": "2529119",
    "end": "2535119"
  },
  {
    "text": "returns s right and we have this function every speed",
    "start": "2535119",
    "end": "2541119"
  },
  {
    "text": "here included with the ink clad and you also include the definition of speed so we know exactly",
    "start": "2541119",
    "end": "2546720"
  },
  {
    "text": "what speed was kilometer per hour and that's why we see this nice on basically output here and also we see",
    "start": "2546720",
    "end": "2552960"
  },
  {
    "text": "this nice type in the debugger error lock but another assertion in our program calls exactly the same function",
    "start": "2552960",
    "end": "2559599"
  },
  {
    "text": "with the same argument and does not include speed with this",
    "start": "2559599",
    "end": "2565680"
  },
  {
    "text": "our doncasting facility cannot see the definition provided by the user the type like dimension speed or",
    "start": "2565680",
    "end": "2573119"
  },
  {
    "text": "kilometer per hour is never provided to the compiler so it cannot generate it from facility",
    "start": "2573119",
    "end": "2579200"
  },
  {
    "text": "so it means that we just broke one definition rule because the same function the same definition provides two",
    "start": "2579200",
    "end": "2584960"
  },
  {
    "text": "different outputs it's defined differently even the returns different type",
    "start": "2584960",
    "end": "2590640"
  },
  {
    "text": "to the user so it looks bad right",
    "start": "2591280",
    "end": "2597200"
  },
  {
    "text": "but on their hands this is how some customization points behave already let's consider structure a structure b",
    "start": "2597200",
    "end": "2603440"
  },
  {
    "start": "2598000",
    "end": "2598000"
  },
  {
    "text": "it has a value and a pointer to a and you have some streaming operator to print it",
    "start": "2603440",
    "end": "2609520"
  },
  {
    "text": "file one we define the swap what it means to swap b's we decide that in case of b we just want",
    "start": "2609520",
    "end": "2615760"
  },
  {
    "text": "to swap the values not the pointers maybe some cache whatever we don't we don't care",
    "start": "2615760",
    "end": "2621119"
  },
  {
    "text": "it's broken but let's it's basically this is what our implementation we have in insulation here one two one",
    "start": "2621119",
    "end": "2628960"
  },
  {
    "text": "two a one a one so we have one one two two right i really are doing ranger swap after",
    "start": "2628960",
    "end": "2634160"
  },
  {
    "text": "range swap we just swapped the values from the first element and second is like it was during",
    "start": "2634160",
    "end": "2639520"
  },
  {
    "text": "initialization so swap works right and now you have seven",
    "start": "2639520",
    "end": "2645920"
  },
  {
    "text": "seconds basically a unit that does exactly the same but doesn't provide swap customization point",
    "start": "2645920",
    "end": "2653680"
  },
  {
    "text": "and provides different output the same problem with 2 swap",
    "start": "2654400",
    "end": "2659520"
  },
  {
    "text": "the same problem will be stood begging for example if you have custom overload of begging and default implementation",
    "start": "2659520",
    "end": "2665680"
  },
  {
    "text": "provided by stud stood size stood data a lot of those",
    "start": "2665680",
    "end": "2672560"
  },
  {
    "text": "all customization points with default implementation will have similar behavior and you have those already in standard",
    "start": "2672560",
    "end": "2679838"
  },
  {
    "text": "however not all of the transmission points are bad like this because for example if you are not defining",
    "start": "2686400",
    "end": "2691760"
  },
  {
    "text": "streaming operator for your types they try to print it here will fail",
    "start": "2691760",
    "end": "2699119"
  },
  {
    "text": "right because there is no default implementation how to stream a type",
    "start": "2699119",
    "end": "2704480"
  },
  {
    "text": "so most customization points or many of them will just not compile if you don't provide definition so in our code if you",
    "start": "2704480",
    "end": "2710480"
  },
  {
    "text": "don't provide speed we may chose to not compile do not provide a default implementation",
    "start": "2710480",
    "end": "2715520"
  },
  {
    "text": "that's a valid choice so",
    "start": "2715520",
    "end": "2720880"
  },
  {
    "start": "2719000",
    "end": "2719000"
  },
  {
    "text": "solutions keep it as it is we can say that the doncasting facility is great it",
    "start": "2720880",
    "end": "2726319"
  },
  {
    "text": "basically helps a lot in in basically in the user experience during analog analysis debugging and",
    "start": "2726319",
    "end": "2733359"
  },
  {
    "text": "actually this the whole purpose of this library is to generate errors during compilation",
    "start": "2733359",
    "end": "2739599"
  },
  {
    "text": "there's no no need for other other needs than this one find your errors so you want to be able to analyze those",
    "start": "2739599",
    "end": "2745200"
  },
  {
    "text": "errors nicely uh by but but we will have to document",
    "start": "2745200",
    "end": "2750640"
  },
  {
    "text": "the fact that basically the same physical system definition will have to be provided in all translation units",
    "start": "2750640",
    "end": "2756319"
  },
  {
    "text": "because otherwise if you have two headers in one wrestling unit another one three headers you may have different results and break one definition rule so",
    "start": "2756319",
    "end": "2763520"
  },
  {
    "text": "you have to have the same set of systems provided in every unit so maybe some headers setting my systems and include",
    "start": "2763520",
    "end": "2769920"
  },
  {
    "text": "the same header in advertising you need right should help",
    "start": "2769920",
    "end": "2776319"
  },
  {
    "text": "we can create a module that is called si and it will immediately include all of the si at once it is pre-compiled by the",
    "start": "2776319",
    "end": "2781839"
  },
  {
    "text": "compiler because right now it takes a lot of time sorry but this library was basically designed with modules in mind",
    "start": "2781839",
    "end": "2788400"
  },
  {
    "text": "so it will compile once and just reuse later on but still it may have some problems if we will mix si and cgs for example",
    "start": "2788400",
    "end": "2796319"
  },
  {
    "text": "in one tracing it will just import uh si into a second will import si and cgs and we may have some some",
    "start": "2796319",
    "end": "2803520"
  },
  {
    "text": "strange behaviors second solution",
    "start": "2803520",
    "end": "2809200"
  },
  {
    "start": "2807000",
    "end": "2807000"
  },
  {
    "text": "compare the mirror when the resulting dimension is something that is undefined by the user",
    "start": "2809200",
    "end": "2814319"
  },
  {
    "text": "right so we end up with something like this in the error lock and in the debugger",
    "start": "2814319",
    "end": "2819359"
  },
  {
    "text": "unknown dimension of exponent length one is pointed time minus one this is something similar to speed right but",
    "start": "2819359",
    "end": "2825520"
  },
  {
    "text": "it's not provided speed because compiler doesn't know about this type",
    "start": "2825520",
    "end": "2831119"
  },
  {
    "text": "so we assume that everything has to be predefined however it means that some temporary",
    "start": "2831119",
    "end": "2837280"
  },
  {
    "text": "calculations in our code will not compile in many cases we when we are splitting",
    "start": "2837280",
    "end": "2842640"
  },
  {
    "text": "some long mathematical operation to subpart we don't care what's the what's the the",
    "start": "2842640",
    "end": "2849680"
  },
  {
    "text": "quantity here we heard the speed the speed but here we just suggest something temporary you're not going to print it",
    "start": "2849680",
    "end": "2855920"
  },
  {
    "text": "we're not going to produce the user this is just temporary calculation and then after square",
    "start": "2855920",
    "end": "2861119"
  },
  {
    "text": "rooting this one we know that speed again right",
    "start": "2861119",
    "end": "2866319"
  },
  {
    "text": "and if that doesn't seem bad this is even worse right because this is the same",
    "start": "2866319",
    "end": "2873040"
  },
  {
    "text": "equation the same result has to be provided for here and that will not be allowed",
    "start": "2873040",
    "end": "2878160"
  },
  {
    "text": "because it will result in a type that is not known not known",
    "start": "2878240",
    "end": "2882880"
  },
  {
    "text": "so we will be forced to provide some strange unrealistic quantities just to make some",
    "start": "2885200",
    "end": "2891760"
  },
  {
    "text": "temporaries work correctly so i think that may constraint library",
    "start": "2891760",
    "end": "2897680"
  },
  {
    "text": "too much and solution number three get rid of this facility",
    "start": "2897680",
    "end": "2904559"
  },
  {
    "text": "this is also by choice the user should be responsible for providing a specific type so we may",
    "start": "2904559",
    "end": "2910319"
  },
  {
    "text": "decide that this operation returns us this one unknown dimension exponent",
    "start": "2910319",
    "end": "2916640"
  },
  {
    "text": "length exponent time and this is the result and then you can implicitly",
    "start": "2916640",
    "end": "2922960"
  },
  {
    "start": "2919000",
    "end": "2919000"
  },
  {
    "text": "basically convert this to something provided by the user explicitly and then it will print correctly it will",
    "start": "2922960",
    "end": "2929280"
  },
  {
    "text": "be provided by the by the compiler error correctly because this is strong type provided by the user explicitly casted",
    "start": "2929280",
    "end": "2934880"
  },
  {
    "text": "here and in order for the user to do so the user has to provide this header right",
    "start": "2934880",
    "end": "2941960"
  },
  {
    "text": "it also simplifies this decision effort because convincing this the the",
    "start": "2945359",
    "end": "2951359"
  },
  {
    "text": "committee that it's good may be challenging even though as user we claim this that's",
    "start": "2951359",
    "end": "2956880"
  },
  {
    "text": "great however this function will not be that",
    "start": "2956880",
    "end": "2962400"
  },
  {
    "text": "easy to solve we cannot address this function that we are analyzing all the time because if we divide length by time",
    "start": "2962400",
    "end": "2970640"
  },
  {
    "text": "we end up with this unknown dimension and we cannot print the speed we'll print it as unknown dimension",
    "start": "2970640",
    "end": "2977760"
  },
  {
    "text": "so you end up with something that basically will be some ratio of of some value not kilometers per hour",
    "start": "2977760",
    "end": "2984960"
  },
  {
    "text": "it will be written in meters per second it will be pretend in the base the base units of the dimensions that are",
    "start": "2984960",
    "end": "2990240"
  },
  {
    "text": "provided rather than in kilometers per hour",
    "start": "2990240",
    "end": "2995240"
  },
  {
    "text": "it's not only about printing right just to make it straight it's about compilation errors it's about debugging experience",
    "start": "2998000",
    "end": "3005040"
  },
  {
    "text": "so again we have three choices to make",
    "start": "3008559",
    "end": "3013839"
  },
  {
    "text": "let's see what's your preference here",
    "start": "3014800",
    "end": "3018400"
  },
  {
    "text": "oh you want me to suffer in the committee i see",
    "start": "3024400",
    "end": "3029160"
  },
  {
    "text": "oh it's interesting wow i was afraid",
    "start": "3045200",
    "end": "3052240"
  },
  {
    "text": "so hopefully i don't have anything to do because i i leave the status quo right now",
    "start": "3053440",
    "end": "3059040"
  },
  {
    "text": "but it was dangerously close to to to make the compile tomorrow",
    "start": "3059040",
    "end": "3064079"
  },
  {
    "text": "yeah this is a wise solution a lot of cultivation point decided to do so right but all others",
    "start": "3064079",
    "end": "3069440"
  },
  {
    "text": "basically will behave the same so be aware of this this is one decision one difference rule one definition of",
    "start": "3069440",
    "end": "3074800"
  },
  {
    "text": "violation if you have customization points and for your own types they should be visible",
    "start": "3074800",
    "end": "3080559"
  },
  {
    "text": "everywhere when you're dealing with those types so the best would be to basically define them in the same header than the type",
    "start": "3080559",
    "end": "3086319"
  },
  {
    "text": "if you cannot because this is some i don't know qt type and you are doing this in your own",
    "start": "3086319",
    "end": "3092000"
  },
  {
    "text": "library you cannot put the same header then be really careful that every time you you deal with this qt type you're",
    "start": "3092000",
    "end": "3097599"
  },
  {
    "text": "also including your customization point header right because otherwise you'll have exactly the same problems for",
    "start": "3097599",
    "end": "3103440"
  },
  {
    "text": "customization points that provide the default behavior because this is nothing different this is just a customization point",
    "start": "3103440",
    "end": "3111720"
  },
  {
    "text": "okay so to summarize first of all thank you for the feedback",
    "start": "3114480",
    "end": "3120880"
  },
  {
    "text": "i really appreciate that i will provide the the slides tomorrow as as expected as as required by the",
    "start": "3120880",
    "end": "3127520"
  },
  {
    "text": "white audience here and and yeah let's summarize this stuff designing is hard",
    "start": "3127520",
    "end": "3135039"
  },
  {
    "start": "3135000",
    "end": "3135000"
  },
  {
    "text": "different customers have different various expectations experience costs and constraints",
    "start": "3136000",
    "end": "3141119"
  },
  {
    "text": "and by this also basically um mean you guys here actually i did",
    "start": "3141119",
    "end": "3146319"
  },
  {
    "text": "this time this type this talk three times already for different audiences and i always get different results",
    "start": "3146319",
    "end": "3152400"
  },
  {
    "text": "depending on the or the audience on the and i don't know uh time of day we are maybe the fact that we just ate",
    "start": "3152400",
    "end": "3159599"
  },
  {
    "text": "lunch affected us right",
    "start": "3159599",
    "end": "3166200"
  },
  {
    "text": "often there is no golden ballot solution as you can as you saw all of those solutions were valid that we discussed today",
    "start": "3166319",
    "end": "3172160"
  },
  {
    "text": "and you have to make some choices anyway and there is sometimes no possibility to make all of them like parallel solutions",
    "start": "3172160",
    "end": "3177920"
  },
  {
    "text": "we cannot have two strings in standard library right a bit bigger if it's a bit smaller",
    "start": "3177920",
    "end": "3185040"
  },
  {
    "text": "simple lesson that takes time we have infinite resources right",
    "start": "3187839",
    "end": "3193359"
  },
  {
    "text": "and actually copy it make made it my much worse i hope that cpr 23 will be much bigger",
    "start": "3193359",
    "end": "3199839"
  },
  {
    "text": "that it will be actually because of copied times",
    "start": "3199839",
    "end": "3204319"
  },
  {
    "text": "also in order to improve the quality of the language in the future as things will be",
    "start": "3205920",
    "end": "3211520"
  },
  {
    "text": "later on may be standardized please if you are dealing with physical units",
    "start": "3211520",
    "end": "3217119"
  },
  {
    "text": "library or linear algebra or any other subject that is meant to be standardized soon please provide your feedback please",
    "start": "3217119",
    "end": "3223359"
  },
  {
    "text": "try our libraries right we need your feedback we need to make sure that it works for your domain that you have all",
    "start": "3223359",
    "end": "3228720"
  },
  {
    "text": "the requirements are fulfilled we need to have your information which solution would you prefer",
    "start": "3228720",
    "end": "3234720"
  },
  {
    "text": "because later on we will just go to the committee will say this is what what we have for five years no one said it's bad",
    "start": "3234720",
    "end": "3240559"
  },
  {
    "text": "so let's standardize this one because it seems as stable and good solution and if you will not",
    "start": "3240559",
    "end": "3245760"
  },
  {
    "text": "be interested in this before later you will maybe suffer or will have some some",
    "start": "3245760",
    "end": "3251280"
  },
  {
    "text": "some problem stating that basically we provided something that's stupid that doesn't work and it's broken right",
    "start": "3251280",
    "end": "3257839"
  },
  {
    "text": "we do it in our best effort mostly in our free time we feel that that's ready",
    "start": "3257839",
    "end": "3263760"
  },
  {
    "text": "but we need some some basically feedback from you from the production from from the community that it works for you",
    "start": "3263760",
    "end": "3271040"
  },
  {
    "text": "not everyone who's writing like leap from the library that has thousands of users so victor actually had easy tasks",
    "start": "3271040",
    "end": "3278160"
  },
  {
    "text": "to do i had a lot of feedback right i actually feel that that library like mp",
    "start": "3278160",
    "end": "3284160"
  },
  {
    "text": "units it's harder especially that it requires class plus 20. so not everyone can try it right now",
    "start": "3284160",
    "end": "3290480"
  },
  {
    "text": "linear algebra guys probably also do not have much feedback but those will be part of the standard probably maybe",
    "start": "3290480",
    "end": "3296880"
  },
  {
    "text": "because we may just end up with in conan which is also fine but if we understand that we want to",
    "start": "3296880",
    "end": "3302160"
  },
  {
    "text": "make it as good as possible because we are really bad in fixing our mistakes in standard we cannot break apis we cannot",
    "start": "3302160",
    "end": "3308160"
  },
  {
    "text": "break apis we cannot provide the v2 version easily right when we find out after figures that",
    "start": "3308160",
    "end": "3314160"
  },
  {
    "text": "something can be improved i can always release version 2.0 or 3.0 at my library on github break stuff and",
    "start": "3314160",
    "end": "3320720"
  },
  {
    "text": "don't care and make five guys that basically can't break stuff make them happy because they have better features",
    "start": "3320720",
    "end": "3326000"
  },
  {
    "text": "with standard this is not possible we have to do that right at the very beginning from from start",
    "start": "3326000",
    "end": "3331680"
  },
  {
    "text": "that's why we need feedback right away naming is hard that's always the problem with designing",
    "start": "3331680",
    "end": "3338240"
  },
  {
    "text": "that namic is the hardest part of it and if you would like to provide some",
    "start": "3338240",
    "end": "3344000"
  },
  {
    "text": "feedback if you would like to try please go to units github io slash units",
    "start": "3344000",
    "end": "3350079"
  },
  {
    "text": "and there is a great documentation at least i think it's great as for simple standard projects",
    "start": "3350079",
    "end": "3356160"
  },
  {
    "text": "and and you will find all information there also we have integrated gitpod lately which is just great you can just",
    "start": "3357359",
    "end": "3363359"
  },
  {
    "text": "click and in a few seconds you are with fully set up environments to work with",
    "start": "3363359",
    "end": "3368640"
  },
  {
    "text": "so so you can also try this one thank you do you have any questions",
    "start": "3368640",
    "end": "3377559"
  },
  {
    "text": "yes and experts because i assume that",
    "start": "3377760",
    "end": "3385599"
  },
  {
    "text": "the experts are more likely to give detailed feedback",
    "start": "3385599",
    "end": "3390720"
  },
  {
    "text": "so yeah so the question is how do i avoid the feedback from experts and beginners juniors in programming because",
    "start": "3395760",
    "end": "3401920"
  },
  {
    "text": "expert players can provide better feedback but actually there is more juniors and more and more people with let's say average",
    "start": "3401920",
    "end": "3408400"
  },
  {
    "text": "knowledge of class plus not iso c plus community level experts right those who have probably a lot of opinions and",
    "start": "3408400",
    "end": "3413680"
  },
  {
    "text": "probably great opinions but those products are for you not for them",
    "start": "3413680",
    "end": "3419680"
  },
  {
    "text": "right i don't want to create a program that can be only handled properly without any issues with that and errors by iso committee members",
    "start": "3419680",
    "end": "3426319"
  },
  {
    "text": "right this is for community it has to be easy to use it has to be friendly to use it has to be",
    "start": "3426319",
    "end": "3431760"
  },
  {
    "text": "hard to to abuse right and and and that's why we we we we ask",
    "start": "3431760",
    "end": "3438240"
  },
  {
    "text": "you we're coming for feedback to everyone if you are moving to speedpass 20 compiler",
    "start": "3438240",
    "end": "3444000"
  },
  {
    "text": "and and or just want to play with in godbolt because goldberg also has mp units try it",
    "start": "3444000",
    "end": "3449920"
  },
  {
    "text": "and provide feedback how it works i understand that it's going to be maybe used in your project now or even in five",
    "start": "3449920",
    "end": "3455440"
  },
  {
    "text": "years from now yeah it sucks but but but this is this is the reality",
    "start": "3455440",
    "end": "3461119"
  },
  {
    "text": "that c plus 20 will be for for many of you after some time but even though if you are in the",
    "start": "3461119",
    "end": "3466880"
  },
  {
    "text": "subject in the domain please try it and find it out and maybe use this as an opportunity to say well if you move at",
    "start": "3466880",
    "end": "3473280"
  },
  {
    "text": "upgrade our compiler we could use this great library right",
    "start": "3473280",
    "end": "3478318"
  },
  {
    "text": "so yeah other questions",
    "start": "3481119",
    "end": "3485319"
  },
  {
    "text": "if not thank you very much i will be here see you tomorrow with the uh",
    "start": "3489920",
    "end": "3495359"
  },
  {
    "text": "aliases on on physically stock thank you very much",
    "start": "3495359",
    "end": "3501880"
  },
  {
    "text": "[Music]",
    "start": "3506680",
    "end": "3509750"
  },
  {
    "text": "you",
    "start": "3513119",
    "end": "3515200"
  }
]