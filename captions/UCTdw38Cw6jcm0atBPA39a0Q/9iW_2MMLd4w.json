[
  {
    "text": "good afternoon welcome to the last day uh you made it this far and you're still",
    "start": "5440",
    "end": "10679"
  },
  {
    "text": "attending sessions that means you must still have some energy left to learn uh which is great I hope uh something",
    "start": "10679",
    "end": "18080"
  },
  {
    "text": "useful will come out of this session for you uh and I know we all just ate lunch so you might be a little sleepy after",
    "start": "18080",
    "end": "24080"
  },
  {
    "text": "this so I'll try and keep it really interesting today we're going to talk about how to build a distributed uh how",
    "start": "24080",
    "end": "30119"
  },
  {
    "text": "to not build a distributed monolith or in other words how to avoid doing microservices completely wrong I want to",
    "start": "30119",
    "end": "37079"
  },
  {
    "text": "start out by telling you a little bit of a story I'm a consultant uh I am one of",
    "start": "37079",
    "end": "43200"
  },
  {
    "text": "the owners of a consulting company called trail head and we help our clients build custom software",
    "start": "43200",
    "end": "49360"
  },
  {
    "text": "applications and very frequently we'll have clients come to us like we did recently uh that have built what they",
    "start": "49360",
    "end": "56039"
  },
  {
    "text": "call a microservices application and often times they'll come to us kind of right at the end of the project just",
    "start": "56039",
    "end": "62719"
  },
  {
    "text": "before it's supposed to launch and they'll say something like this client told us which is uh we have a little bit",
    "start": "62719",
    "end": "68840"
  },
  {
    "text": "of a performance issue with just a couple of the end points that we'd like you to get your help to fix before we go",
    "start": "68840",
    "end": "75040"
  },
  {
    "text": "live uh so with this client that came to us recently that was also the case and",
    "start": "75040",
    "end": "82200"
  },
  {
    "text": "we started looking at their code and started looking at the architecture of the system that they had",
    "start": "82200",
    "end": "87720"
  },
  {
    "text": "built and it didn't take us very long to realize that what they had built was not at all microservices what they had built",
    "start": "87720",
    "end": "94280"
  },
  {
    "text": "was actually a distributed monolith now if you're not familiar with this term",
    "start": "94280",
    "end": "100040"
  },
  {
    "text": "already I hope you are by the end of the talk today this is the bad guy this is the villain in our story today the",
    "start": "100040",
    "end": "107159"
  },
  {
    "text": "distributed monolith that's why I put it in this scary font are you all",
    "start": "107159",
    "end": "112360"
  },
  {
    "text": "scared uh this is far from the only time this has happened this has happened so many times uh with clients coming and",
    "start": "112360",
    "end": "118759"
  },
  {
    "text": "saying we built this micro mic service it's not working well and then we look at it and say oh this isn't microservices at all this is a mess and",
    "start": "118759",
    "end": "126840"
  },
  {
    "text": "uh it happen so many times that I started thinking I need to start collecting and sharing this information",
    "start": "126840",
    "end": "132640"
  },
  {
    "text": "with the world uh so that's what I'm doing here this is the talk that I created based on that",
    "start": "132640",
    "end": "138959"
  },
  {
    "text": "inspiration I'm going to talk about a bunch of things today but the main thing we're going to talk about is I'm going to share with you the 10 most common",
    "start": "138959",
    "end": "146000"
  },
  {
    "text": "mistakes that I see our clients making when they try to build micros services and end up building something much worse",
    "start": "146000",
    "end": "153200"
  },
  {
    "text": "called a distributed monolith hopefully this will help you avoid making these same mistakes a little bit about me",
    "start": "153200",
    "end": "160440"
  },
  {
    "text": "before I get started my name is Jonathan Tower I go by J for short uh as I",
    "start": "160440",
    "end": "166400"
  },
  {
    "text": "mentioned I'm a founding partner and principal consultant at Trailhead we do custom application development",
    "start": "166400",
    "end": "172400"
  },
  {
    "text": "Consulting uh you can contact me at all these places online if you're interested in getting connected afterwards I've",
    "start": "172400",
    "end": "178560"
  },
  {
    "text": "also got this GitHub l link here which will take you to these slides if you're interested in looking at these again",
    "start": "178560",
    "end": "183799"
  },
  {
    "text": "later I'll also post these on the slack Channel if you're on that I'm also a Microsoft MVP uh nine years in a row",
    "start": "183799",
    "end": "192799"
  },
  {
    "text": "foret uh started out in asp.net and then uh that got merged and now I'm ONN net",
    "start": "192799",
    "end": "199640"
  },
  {
    "text": "and uh one other thing I just wanted to mention on this slide I'll show this slide again at the end if you want to",
    "start": "199640",
    "end": "204760"
  },
  {
    "text": "get any of this information again but something special I like to offer to anyone that comes to one of my talks is",
    "start": "204760",
    "end": "210200"
  },
  {
    "text": "a free consultation I know we'll have some time for Q&A hopefully afterwards here if you want to come up and talk to",
    "start": "210200",
    "end": "216720"
  },
  {
    "text": "me afterwards you're welcome to do that too sometimes maybe we're a little too embarrassed about the problems that",
    "start": "216720",
    "end": "222640"
  },
  {
    "text": "we're having with our software and we're not uh don't feel free to do that in public or maybe there's something",
    "start": "222640",
    "end": "228280"
  },
  {
    "text": "proprietary or some context that you need to give me first uh if you want to do a free 30 minute session with me and",
    "start": "228280",
    "end": "235439"
  },
  {
    "text": "we can talk through what you're facing uh be happy to do that you can go to this bitly link or this QR code and uh",
    "start": "235439",
    "end": "242159"
  },
  {
    "text": "sign up for free all right so before we get started with the 10 most common mistakes that I",
    "start": "242159",
    "end": "248640"
  },
  {
    "text": "see let's make sure we're talking about the same thing with some definitions so let's start with the definition of a",
    "start": "248640",
    "end": "254920"
  },
  {
    "text": "monolith monolith is a traditional architecture of software development if you've been doing this for very long",
    "start": "254920",
    "end": "261079"
  },
  {
    "text": "you've probably built many monolith applications before it's easy to get",
    "start": "261079",
    "end": "267120"
  },
  {
    "text": "confused nowadays uh there's so many talks even at conferences as good as NDC",
    "start": "267120",
    "end": "272639"
  },
  {
    "text": "there'll be a lot of talks about microservices and it's this buzzword and you start to get the impression that",
    "start": "272639",
    "end": "278639"
  },
  {
    "text": "everything should be a microservice and nothing should be a monolith and hopefully the one thing I really want to",
    "start": "278639",
    "end": "284680"
  },
  {
    "text": "convince you of today in this talk is that that is not the case that monoliths can be good too in fact we've been",
    "start": "284680",
    "end": "291080"
  },
  {
    "text": "building scalable monoliths for decades now before microservices was ever an",
    "start": "291080",
    "end": "296160"
  },
  {
    "text": "option they're actually much easier to build than microservices are uh they're",
    "start": "296160",
    "end": "301520"
  },
  {
    "text": "actually also better at something called Data latency which is basically how long it takes from when you enter the data to",
    "start": "301520",
    "end": "307800"
  },
  {
    "text": "when it's available stored and available for the whole application to use so",
    "start": "307800",
    "end": "313240"
  },
  {
    "text": "there's a lot of pluses to a monolith uh there are disadvantages as well one of them is that if you want to",
    "start": "313240",
    "end": "320840"
  },
  {
    "text": "make a change to a monolith even if you're changing something small like the name of a button or the word that shows",
    "start": "320840",
    "end": "326600"
  },
  {
    "text": "on a button that requires you to change the whole application right we've all had this before where maybe there's",
    "start": "326600",
    "end": "332680"
  },
  {
    "text": "misspelling in one of our applications and you need to update it while you have to rebuild the entire application and it",
    "start": "332680",
    "end": "339560"
  },
  {
    "text": "has to go through your release Pipeline and you have to update the entire application just to change that one",
    "start": "339560",
    "end": "344600"
  },
  {
    "text": "button so that's kind of a downside to the monolith that does uh also mean that",
    "start": "344600",
    "end": "350560"
  },
  {
    "text": "there's more tight coupling between the components of a monolith which means it's possible to write some code that",
    "start": "350560",
    "end": "356319"
  },
  {
    "text": "brings down the entire thing right if you have a class that's used in every single part of your application uh you",
    "start": "356319",
    "end": "362800"
  },
  {
    "text": "can imagine like a logger or something like that you can imagine that if you put some bad code in there that that",
    "start": "362800",
    "end": "368440"
  },
  {
    "text": "would bring down your entire application and then uh finally one of the disadvantages is that you have to",
    "start": "368440",
    "end": "375680"
  },
  {
    "text": "use the same technology stack when you're doing a a monolith you have to build the entire thing using the same",
    "start": "375680",
    "end": "381120"
  },
  {
    "text": "stack of Technology because the whole thing is uh built and deployed together you also uh this really works",
    "start": "381120",
    "end": "388919"
  },
  {
    "text": "best if you have a small team that is all working on the same thing and it doesn't work as well if you're trying to",
    "start": "388919",
    "end": "395560"
  },
  {
    "text": "have a huge team with lots of different people focused in just specific areas working in just their specific areas of",
    "start": "395560",
    "end": "402880"
  },
  {
    "text": "expertise what's a typical monolith is going to look something like this it's going to have clients that are",
    "start": "402880",
    "end": "408120"
  },
  {
    "text": "connecting to a mid middle tier uh part of the application and then some sort of a data store like a relational database",
    "start": "408120",
    "end": "414639"
  },
  {
    "text": "or a nosql database this is your typical application architecture",
    "start": "414639",
    "end": "420000"
  },
  {
    "text": "one of the common reasons that I get that people say that they're using the microservices architecture is because",
    "start": "420000",
    "end": "427400"
  },
  {
    "text": "they want their application to be scalable now that is true that microservices are more scalable in some",
    "start": "427400",
    "end": "434720"
  },
  {
    "text": "ways than monoliths but monoliths are scalable too and you probably all know this I'm probably repeating information",
    "start": "434720",
    "end": "441240"
  },
  {
    "text": "that you know already but you can scale up a monolithic application by adding more processor cores more memory you can",
    "start": "441240",
    "end": "449039"
  },
  {
    "text": "also scale up the database portion the same way right you can make a more beefy server or virtual server to run your",
    "start": "449039",
    "end": "456039"
  },
  {
    "text": "application and you can scale it up that way you can also scale horizontally when you're doing a monolith this is most",
    "start": "456039",
    "end": "463360"
  },
  {
    "text": "commonly done with things like load balancing on the middle tier or if you're talking about on the back end",
    "start": "463360",
    "end": "469360"
  },
  {
    "text": "storage you're going to use something like data sharding where you're splitting your data up and storing it",
    "start": "469360",
    "end": "475199"
  },
  {
    "text": "into different data stores depending uh based on one key or other like your user",
    "start": "475199",
    "end": "480560"
  },
  {
    "text": "ID or your customer ID or something like that that uh is a good key to kind of",
    "start": "480560",
    "end": "485720"
  },
  {
    "text": "split your data up based off of so there's lots of ways to scale a",
    "start": "485720",
    "end": "491680"
  },
  {
    "text": "monolithic application uh and I want to underscore that just because I hear that reason so much and it ends up often times uh as I",
    "start": "491680",
    "end": "499360"
  },
  {
    "text": "talk more to those people I'll find out that it's the only reason that they built microservices and it turns out",
    "start": "499360",
    "end": "505879"
  },
  {
    "text": "it's actually not a good fit for their needs there's actually a couple different kinds of monoliths uh",
    "start": "505879",
    "end": "512640"
  },
  {
    "text": "hopefully you've been hearing me say this already that monoliths aren't always bad so there is something that I",
    "start": "512640",
    "end": "518800"
  },
  {
    "text": "call a modular monolith this is hopefully the type of application you've had the chance to work on before where",
    "start": "518800",
    "end": "525560"
  },
  {
    "text": "you can go into the code you can change things really easily you don't have to change things in five places to make one",
    "start": "525560",
    "end": "531200"
  },
  {
    "text": "simple change uh changing something in one place doesn't break something in another place right it's basically a",
    "start": "531200",
    "end": "537560"
  },
  {
    "text": "well-designed modularly created low coupling monolith it's still",
    "start": "537560",
    "end": "543720"
  },
  {
    "text": "a monolith if you have to compile the whole thing together and the whole thing goes through one devops pipeline to be",
    "start": "543720",
    "end": "550000"
  },
  {
    "text": "released it's still a monolith if you have to uh release the entire application just to update one part of",
    "start": "550000",
    "end": "555680"
  },
  {
    "text": "it but it could be a really well-designed monolith and therefore it would be a modular monolith now there's",
    "start": "555680",
    "end": "560800"
  },
  {
    "text": "another kind of monolith which is I think the one that we all think of when we hear that word monolith which I call",
    "start": "560800",
    "end": "567519"
  },
  {
    "text": "the ball of mud monolith you know you've worked on one of these before if you go into the code to try",
    "start": "567519",
    "end": "573959"
  },
  {
    "text": "and make a change over here and then you find out from QA or from your users that you broke five things over here uh if",
    "start": "573959",
    "end": "580959"
  },
  {
    "text": "you know that you're working on a ball of mud monolith if every time you make a change you break things that you don't",
    "start": "580959",
    "end": "586519"
  },
  {
    "text": "realize you're breaking and your customers your end users are mad at you all the time because there always seems",
    "start": "586519",
    "end": "592640"
  },
  {
    "text": "like you're making the system worse instead of better it's probably because it's a poorly designed monolith now that",
    "start": "592640",
    "end": "598680"
  },
  {
    "text": "doesn't mean that microservices is a bad fit for you if you're on a ball of mud monolith you might be a better fit uh",
    "start": "598680",
    "end": "605079"
  },
  {
    "text": "for that project to go to a modular monolith architecture and it might be a better fit to go to microservices by the",
    "start": "605079",
    "end": "611440"
  },
  {
    "text": "end of this talk I hope you will have an easier time identifying those",
    "start": "611440",
    "end": "616880"
  },
  {
    "text": "situations next definition I want to cover is microservices themselves now I",
    "start": "616880",
    "end": "622360"
  },
  {
    "text": "think there's a very interesting definition of this that Google uses internally for their teams they refer to",
    "start": "622360",
    "end": "628480"
  },
  {
    "text": "the definition of microservices as both the architecture and organizational",
    "start": "628480",
    "end": "633760"
  },
  {
    "text": "approach to software development notice that it's both an architecture and an",
    "start": "633760",
    "end": "639160"
  },
  {
    "text": "organizational approach why do I want to underscore that because I bet all of us",
    "start": "639160",
    "end": "644480"
  },
  {
    "text": "before I said that think of microservices primarily as an architectural approach right but it's",
    "start": "644480",
    "end": "652040"
  },
  {
    "text": "very important I think to realize that not only is it an architectural approach but it also requires you to reorganize",
    "start": "652040",
    "end": "658200"
  },
  {
    "text": "your team your processes to actually fit microservices the rest of the definition",
    "start": "658200",
    "end": "664079"
  },
  {
    "text": "Google uses internally is uh the it's a kind of software approach and team",
    "start": "664079",
    "end": "669959"
  },
  {
    "text": "organization that leads to software composed of small Loosely coupled services that communicate with each",
    "start": "669959",
    "end": "676480"
  },
  {
    "text": "other through well-defined messages and are owned by small",
    "start": "676480",
    "end": "682240"
  },
  {
    "text": "self-contained teams so that's back to that organizational structure that I mentioned right small",
    "start": "682240",
    "end": "689560"
  },
  {
    "text": "self-contained teams there's a lot of benefits to microservices if you have a",
    "start": "689560",
    "end": "695200"
  },
  {
    "text": "well-designed microservice and part of your application gets a lot more traffic",
    "start": "695200",
    "end": "700360"
  },
  {
    "text": "than another part of your application you can scale up just that one part of your application so that's more like a",
    "start": "700360",
    "end": "706200"
  },
  {
    "text": "targeted scalability or Precision scalability it's also possible to take part of your application down for",
    "start": "706200",
    "end": "712480"
  },
  {
    "text": "maintenance while another part stays up and completely operational imagine you have part of your application that's",
    "start": "712480",
    "end": "718399"
  },
  {
    "text": "taking order orders maybe you do millions of orders an hour and you don't want to lose money uh by taking that",
    "start": "718399",
    "end": "725279"
  },
  {
    "text": "down for maintenance but you have other parts of the application that need to be updated more frequently maybe like user",
    "start": "725279",
    "end": "730639"
  },
  {
    "text": "profiles needs to be updated occasionally well you don't want to take down your ability to take orders in the",
    "start": "730639",
    "end": "736959"
  },
  {
    "text": "middle of the day just so you can update the user profile part of your application so micros services are",
    "start": "736959",
    "end": "743480"
  },
  {
    "text": "really great at that uh of course I mentioned before different technology Stacks that's possible",
    "start": "743480",
    "end": "749399"
  },
  {
    "text": "in microservices I don't see a lot of teams doing this but you could imagine that maybe part of your team is more",
    "start": "749399",
    "end": "755320"
  },
  {
    "text": "familiar with Java that's okay you can be friends with them anyway right maybe",
    "start": "755320",
    "end": "760360"
  },
  {
    "text": "part of your team's more into net those are obviously the cool people on your team uh maybe someone is into you know",
    "start": "760360",
    "end": "766600"
  },
  {
    "text": "something cool like rust uh or go but you could have different parts of your",
    "start": "766600",
    "end": "772120"
  },
  {
    "text": "organization that has different expertises and they could build their part of the application in in whatever",
    "start": "772120",
    "end": "777839"
  },
  {
    "text": "technology stack is is the best fit for their part of the business and then also I mentioned the",
    "start": "777839",
    "end": "783839"
  },
  {
    "text": "team organization so if you're doing microservices it makes a lot of sense to have separate teams who are each focused",
    "start": "783839",
    "end": "790120"
  },
  {
    "text": "on different microservices and they become experts in that part of the business and really there's very little",
    "start": "790120",
    "end": "796360"
  },
  {
    "text": "need for them to cross over into other parts of the business uh so then the villain of our",
    "start": "796360",
    "end": "803360"
  },
  {
    "text": "story The distributed monolith what is a distributed monolith well nobody set out hopefully to build a",
    "start": "803360",
    "end": "810440"
  },
  {
    "text": "distributed monolith but what you when you get a distributed monolith usually it's because you set out to build",
    "start": "810440",
    "end": "816320"
  },
  {
    "text": "microservices but you created them in a way that were tightly coupled and when you deployed a tightly coupled",
    "start": "816320",
    "end": "822959"
  },
  {
    "text": "application in a distributed way it became much worse than if it was just a monolith or obviously if it was a pure",
    "start": "822959",
    "end": "831639"
  },
  {
    "text": "microservices this is what a typical uh distributed monolith is going to look",
    "start": "831639",
    "end": "836759"
  },
  {
    "text": "like uh I'm sorry this is what a typical microservice architecture is going to look like uh a typical distributed",
    "start": "836759",
    "end": "844639"
  },
  {
    "text": "monolith architecture is going to look just the same except because you're setting out to build microservices but",
    "start": "844639",
    "end": "851279"
  },
  {
    "text": "it's going to fail in the sense that all of the services are going to be talking to each other maybe they're going to be",
    "start": "851279",
    "end": "856759"
  },
  {
    "text": "accessing each other's databases maybe they're going to be sending synchronous HTTP rest calls to each other uh all of",
    "start": "856759",
    "end": "864680"
  },
  {
    "text": "these types of things create coupling between these applications and we're going to talk about a lot of examples of",
    "start": "864680",
    "end": "870560"
  },
  {
    "text": "this as we're going into detail uh now I specifically left the event bus off of",
    "start": "870560",
    "end": "876199"
  },
  {
    "text": "this slide but I want to show you that most people who set out to do microservices will include an event bus",
    "start": "876199",
    "end": "882480"
  },
  {
    "text": "because they will have read on a blog or something that you're supposed to have some sort of an event bus or a queue and",
    "start": "882480",
    "end": "889320"
  },
  {
    "text": "so they will include it but then because they're sort of used to building a monolith they know how to have one",
    "start": "889320",
    "end": "895120"
  },
  {
    "text": "module call another module and so they'll write their code the way that you would write WR a monolith and they'll just have one service calling",
    "start": "895120",
    "end": "902120"
  },
  {
    "text": "another maybe the most popular way I've ever seen a microservice built is this",
    "start": "902120",
    "end": "908240"
  },
  {
    "text": "one I love to show the slide because once I get to this point most people are tracking with me and I get so many",
    "start": "908240",
    "end": "915160"
  },
  {
    "text": "smiles when I put this slide up because I think uh people come up to me afterwards and say this is what my",
    "start": "915160",
    "end": "920560"
  },
  {
    "text": "company is building right now it's uh microservices but the DBA when we told him we were building microservice he",
    "start": "920560",
    "end": "927199"
  },
  {
    "text": "said Over My Dead Body right and I can give dbas a little bit",
    "start": "927199",
    "end": "933040"
  },
  {
    "text": "of credit for that because they've been trained their entire careers and their entire education not to repeat data",
    "start": "933040",
    "end": "940079"
  },
  {
    "text": "right normalize data don't have multiple copies of data don't try and synchronize data all the time try and get it all",
    "start": "940079",
    "end": "946880"
  },
  {
    "text": "into one place put it into nice normalized tables with perfect relationships between each other and",
    "start": "946880",
    "end": "952279"
  },
  {
    "text": "they're trying to protect that right so you come to them and say hey we're going to do microservices and they say well in",
    "start": "952279",
    "end": "958680"
  },
  {
    "text": "that middle tier you can do whatever kind of crazy architecture you want but you're not touching my database right so",
    "start": "958680",
    "end": "964440"
  },
  {
    "text": "this is what I see frequently at companies and they end up saying look what we'll do is you can just put",
    "start": "964440",
    "end": "970399"
  },
  {
    "text": "everything in the database and I'll set it up the way that I normally would and all these different applications can",
    "start": "970399",
    "end": "975519"
  },
  {
    "text": "call it and that'll that'll be microservices what we're going to look at today how this creates a lot of",
    "start": "975519",
    "end": "981399"
  },
  {
    "text": "coupling between these applications that makes them a distributed monolith so if you organize these a little bit on a",
    "start": "981399",
    "end": "987680"
  },
  {
    "text": "graph the ball of mud monolith is monolithic physically it's deployed as a",
    "start": "987680",
    "end": "993160"
  },
  {
    "text": "single piece but it's also logically monolithic everything is tied together so tight you can't really separate",
    "start": "993160",
    "end": "999279"
  },
  {
    "text": "things you can't update things easily the modular monolith which is a perfectly great architecture it's more",
    "start": "999279",
    "end": "1006440"
  },
  {
    "text": "modular modular in the way that it's logically organized but it's deployed as a single piece so it's still physically",
    "start": "1006440",
    "end": "1013639"
  },
  {
    "text": "monolithic the distributed monolith is what you get when you try to create create",
    "start": "1013639",
    "end": "1019440"
  },
  {
    "text": "microservices but you end up creating them in a logically monolithic way with all the code referencing all the other",
    "start": "1019440",
    "end": "1025400"
  },
  {
    "text": "services and so you end up with it being physically distributed but still logically it's",
    "start": "1025400",
    "end": "1031720"
  },
  {
    "text": "monolithic and then you end up with true microservices up there in the corner where you've got it both physically",
    "start": "1031720",
    "end": "1037959"
  },
  {
    "text": "distributed and logically modular so let's now that we're all on",
    "start": "1037959",
    "end": "1043600"
  },
  {
    "text": "the same page hopefully about those terms let's jump into these 10 most common mistakes that I've seen companies",
    "start": "1043600",
    "end": "1049640"
  },
  {
    "text": "make over and over again the first one maybe this one won't",
    "start": "1049640",
    "end": "1055320"
  },
  {
    "text": "surprise you at this point in the stock but number one is assuming that microservices are always",
    "start": "1055320",
    "end": "1061360"
  },
  {
    "text": "best there's uh some great books out there about microservices maybe you've",
    "start": "1061360",
    "end": "1066600"
  },
  {
    "text": "read some of them Sam Newman from the UK has created one that's really excellent",
    "start": "1066600",
    "end": "1071720"
  },
  {
    "text": "he says in that book that if you're going to do microservices you should have a really good reason is what he says now he goes into more detail to",
    "start": "1071720",
    "end": "1078760"
  },
  {
    "text": "describe some of the reasons that he thinks are valuable reasons but uh I've kind of outlined a few uh a few of the",
    "start": "1078760",
    "end": "1085720"
  },
  {
    "text": "downsides here if if uh you're trying to do um if you're trying to do",
    "start": "1085720",
    "end": "1090960"
  },
  {
    "text": "microservices just because you're looking for something that uh is scalable while monoliths can be scalable",
    "start": "1090960",
    "end": "1096720"
  },
  {
    "text": "we talked about that already microservices are really hard to do based on my unscientific survey of our",
    "start": "1096720",
    "end": "1103360"
  },
  {
    "text": "clients who've come to us looking for help I would say over 90% of microservice projects are actually some",
    "start": "1103360",
    "end": "1109640"
  },
  {
    "text": "kind of a distributed monolith nowadays it's such a buzzword but nobody's really been doing",
    "start": "1109640",
    "end": "1115200"
  },
  {
    "text": "microservices for 10 years or anything like that so probably there's nobody on your team who says oh I've built dozens",
    "start": "1115200",
    "end": "1122280"
  },
  {
    "text": "of successful microservices I know exactly what to do so you're trying to figure it out and when you try and figure it out you very likely if you",
    "start": "1122280",
    "end": "1129600"
  },
  {
    "text": "haven't been to my talk will make some of these 10 mistakes and it's very easy to end up in the wrong place and then",
    "start": "1129600",
    "end": "1136480"
  },
  {
    "text": "finally uh the wrong reasons to create a distributed monolith so what are some good reasons I",
    "start": "1136480",
    "end": "1143600"
  },
  {
    "text": "talked a little bit about independent scalability so scaling different parts of the application talked a little bit",
    "start": "1143600",
    "end": "1148960"
  },
  {
    "text": "about independent deployability if you have to be able to take parts of the application down frequently while you're",
    "start": "1148960",
    "end": "1154679"
  },
  {
    "text": "leaving other parts up I attended a devops talk a while back with a an",
    "start": "1154679",
    "end": "1160000"
  },
  {
    "text": "Amazon engineer he was talking about at the time for amazon.com the e-commerce",
    "start": "1160000",
    "end": "1165600"
  },
  {
    "text": "site they were doing tens of thousands of updates to the website every day tens",
    "start": "1165600",
    "end": "1171880"
  },
  {
    "text": "of thousands of releases happening in a day now if you had a monolith you",
    "start": "1171880",
    "end": "1177400"
  },
  {
    "text": "basically your application would be down all day right like a lot of my builds take four or five minutes and then it takes another minute or two to do the",
    "start": "1177400",
    "end": "1183679"
  },
  {
    "text": "release you couldn't even do 10,000 in a day if it takes that long your application would be down all day long",
    "start": "1183679",
    "end": "1189440"
  },
  {
    "text": "right they need to at Amazon they need to be able to do independent deployability they need to be able to",
    "start": "1189440",
    "end": "1194480"
  },
  {
    "text": "update parts of the application without taking any of the rest of it down because they would lose millions in you",
    "start": "1194480",
    "end": "1199960"
  },
  {
    "text": "know 50 seconds if they were down right uh isolating the surface area of failure",
    "start": "1199960",
    "end": "1205880"
  },
  {
    "text": "if you have part of your application that takes orders or it's where the money comes from for your business you",
    "start": "1205880",
    "end": "1211760"
  },
  {
    "text": "probably want to make sure that that is as isolated as possible from all the other systems you might want to have",
    "start": "1211760",
    "end": "1216880"
  },
  {
    "text": "cues uh event driven de you know development going on behind the scenes so that it can take orders even if all",
    "start": "1216880",
    "end": "1223240"
  },
  {
    "text": "the other systems are down for a whole day and just cue them up so that's something that you can do much easier",
    "start": "1223240",
    "end": "1229520"
  },
  {
    "text": "with microservices and then I mentioned it a couple times but independent teams if you have 60 developers or 100",
    "start": "1229520",
    "end": "1237039"
  },
  {
    "text": "developers and they're all working on a very large application but they're all kind of focused in different areas of",
    "start": "1237039",
    "end": "1242679"
  },
  {
    "text": "that application well then it makes a lot of sense for that team to work on a",
    "start": "1242679",
    "end": "1248520"
  },
  {
    "text": "microservice there's a big trade-off with microservices which if you only remember one thing from this talk I want",
    "start": "1248520",
    "end": "1255000"
  },
  {
    "text": "it uh to be the last thing which is that microservices aren't always the right thing for every",
    "start": "1255000",
    "end": "1260760"
  },
  {
    "text": "project if you only remember two have it be this one microservices are inherently",
    "start": "1260760",
    "end": "1267600"
  },
  {
    "text": "bad at immediate consistency they have something called eventual consistency",
    "start": "1267600",
    "end": "1273720"
  },
  {
    "text": "they're very good if they're designed well at something called High availability so microservices someone",
    "start": "1273720",
    "end": "1279640"
  },
  {
    "text": "can trip over the power cord in the server room and bring down one of the microservices and all of the other ones",
    "start": "1279640",
    "end": "1285240"
  },
  {
    "text": "are still fine someone can write some bad code and deploy it to one of the microservices all of the other",
    "start": "1285240",
    "end": "1290679"
  },
  {
    "text": "microservices will still run but because of that distributed nature of a microservices architecture all of the",
    "start": "1290679",
    "end": "1297440"
  },
  {
    "text": "different applications are going to get data updated to them eventually that's that eventual consistency monoliths",
    "start": "1297440",
    "end": "1305320"
  },
  {
    "text": "usually will have a single data store or at least a single data store per uh per",
    "start": "1305320",
    "end": "1310440"
  },
  {
    "text": "like data Shard and because of that they'll have a immediate consistency as",
    "start": "1310440",
    "end": "1316240"
  },
  {
    "text": "soon as you finish the database trans trans action of writing then everything in the application is aware of that new",
    "start": "1316240",
    "end": "1322640"
  },
  {
    "text": "data that's been written to the database they can now read those updates right so",
    "start": "1322640",
    "end": "1328320"
  },
  {
    "text": "if you want High availability microservices might be the right architecture for you if you want eventual I'm sorry immediate consistency",
    "start": "1328320",
    "end": "1335520"
  },
  {
    "text": "then monoliths might be the right architecture for you I mentioned this when I was showing you what the typical",
    "start": "1335520",
    "end": "1342559"
  },
  {
    "text": "architecture looks like for a distributed monolith but very commonly I see the data store the database being",
    "start": "1342559",
    "end": "1350039"
  },
  {
    "text": "shared between the different microservices another one that you might have not thought of though is the data",
    "start": "1350039",
    "end": "1355320"
  },
  {
    "text": "models themselves the models that represent that data those data stores so imagine you have this",
    "start": "1355320",
    "end": "1361919"
  },
  {
    "text": "scenario where you're building uh what you intend to be microservices you have",
    "start": "1361919",
    "end": "1367080"
  },
  {
    "text": "all these different services but they're sharing a database and service one over here has a team that says you know we",
    "start": "1367080",
    "end": "1373320"
  },
  {
    "text": "need to make a breaking change to this table in the database but it's our table it belongs to our microservice so we",
    "start": "1373320",
    "end": "1380400"
  },
  {
    "text": "should be able to make breaking changes to it because we can update the code and we can deploy those changes all together",
    "start": "1380400",
    "end": "1386360"
  },
  {
    "text": "so they go ahead and break something in the in the schema of this",
    "start": "1386360",
    "end": "1391960"
  },
  {
    "text": "database now even if you set out to not share databases as soon as as share",
    "start": "1391960",
    "end": "1397039"
  },
  {
    "text": "tables even as soon as you have the same database uh I guarantee it'll happen",
    "start": "1397039",
    "end": "1402760"
  },
  {
    "text": "I've seen so many projects start out where they said well we'll each have our own schema in the database and we'll",
    "start": "1402760",
    "end": "1408760"
  },
  {
    "text": "have different logins with different security and what ends up happening is somebody gets lazy and says I really need that table and I don't want to wait",
    "start": "1408760",
    "end": "1415960"
  },
  {
    "text": "for an event to publish the information from one service to another I'm just",
    "start": "1415960",
    "end": "1421320"
  },
  {
    "text": "going to I'm like already connected to this database I'm just going to do a real quick select statement and get that",
    "start": "1421320",
    "end": "1426880"
  },
  {
    "text": "information right from the database it'll definitely happen if you allow everybody to connect to the same",
    "start": "1426880",
    "end": "1432039"
  },
  {
    "text": "database so what happens when team one breaks the schema well team five over",
    "start": "1432039",
    "end": "1437679"
  },
  {
    "text": "here didn't know about it and maybe team one didn't know that team five was cheating",
    "start": "1437679",
    "end": "1443240"
  },
  {
    "text": "and looking at the schema of a table that belonged to team one so now",
    "start": "1443240",
    "end": "1448640"
  },
  {
    "text": "microservice 5 just broke so is this High availability is this independent",
    "start": "1448640",
    "end": "1454279"
  },
  {
    "text": "applications no right it's very easy when you're sharing a database to accidentally break things so what do we",
    "start": "1454279",
    "end": "1460640"
  },
  {
    "text": "want it to look like we want it to look like this every application has its own database if they need to share information they should do that through",
    "start": "1460640",
    "end": "1467919"
  },
  {
    "text": "uh asynchronous method like an event bus this is the you know quote unquote right",
    "start": "1467919",
    "end": "1473240"
  },
  {
    "text": "way to do microservices that will not create coupling between these different",
    "start": "1473240",
    "end": "1478600"
  },
  {
    "text": "microservices let's look at a example of data models as well so imagine you're",
    "start": "1478600",
    "end": "1484000"
  },
  {
    "text": "writing all of your code in C for all of these microservices and you're used to doing monoliths so a lot of your",
    "start": "1484000",
    "end": "1490360"
  },
  {
    "text": "applications you'll have these like massive uh Visual Studio Solutions with 20 50 Pro projects in them right",
    "start": "1490360",
    "end": "1498399"
  },
  {
    "text": "and you're used to doing things that way so when you start creating microservices you do the same you create a class",
    "start": "1498399",
    "end": "1503760"
  },
  {
    "text": "library and it has all of your uh model data models in it and everyone can",
    "start": "1503760",
    "end": "1510320"
  },
  {
    "text": "access that that's kind of how you would normally do it in a monolith well in microservices that should probably be actually separate libraries one for each",
    "start": "1510320",
    "end": "1517840"
  },
  {
    "text": "and I know that Al sort of like the DBA I was talking about earlier that sounds like it's breaking all the rules that",
    "start": "1517840",
    "end": "1523120"
  },
  {
    "text": "you've learned over the years about how to design good architecture uh right everyone's learned dry don't repeat",
    "start": "1523120",
    "end": "1529080"
  },
  {
    "text": "yourself in good coding and uh if you're doing microservices correctly you probably do need to repeat yourself so",
    "start": "1529080",
    "end": "1536039"
  },
  {
    "text": "imagine this scenario I just stayed in a hotel since I'm visiting from the US imagine that the hotel I stayed in has",
    "start": "1536039",
    "end": "1542760"
  },
  {
    "text": "microservices for all their their different parts of their business they want to be able to take reservations all",
    "start": "1542760",
    "end": "1548520"
  },
  {
    "text": "the time because they want to uh they don't want that part to go down so it's maybe it's a good fit for microservices",
    "start": "1548520",
    "end": "1555039"
  },
  {
    "text": "for them to use this and they've got maintenance and housekeeping and maybe some other microservices in",
    "start": "1555039",
    "end": "1560919"
  },
  {
    "text": "there they've got obviously a hotel room object is going to be a really important one in their data model so right now all",
    "start": "1560919",
    "end": "1568440"
  },
  {
    "text": "of those services are sharing that same model for their uh hotel room data it's got information in it like is it",
    "start": "1568440",
    "end": "1575159"
  },
  {
    "text": "occupied currently it's got how many beds are in there it's got how long it takes to clean uh maybe it has like a",
    "start": "1575159",
    "end": "1582000"
  },
  {
    "text": "related entity that's like a child entity that's like the repair history in that room uh or maintenance requests or",
    "start": "1582000",
    "end": "1588880"
  },
  {
    "text": "something like that so now what happens if the",
    "start": "1588880",
    "end": "1594279"
  },
  {
    "text": "housekeeping service says you know we don't really care how many seconds it",
    "start": "1594279",
    "end": "1600640"
  },
  {
    "text": "takes to clean a room we care how many minutes so we're going to go ahead and update that from a float to an INT be a",
    "start": "1600640",
    "end": "1607559"
  },
  {
    "text": "little bit less accurate but it's plenty enough accuracy for us to know how long",
    "start": "1607559",
    "end": "1613440"
  },
  {
    "text": "to plan for every room to be cleaned so they make that change well if everyone's",
    "start": "1613440",
    "end": "1618480"
  },
  {
    "text": "sharing the same data model before they do an update to their system everyone",
    "start": "1618480",
    "end": "1624080"
  },
  {
    "text": "else is going to have to do an update to their system because now they have the wrong type that's not going to match uh",
    "start": "1624080",
    "end": "1630480"
  },
  {
    "text": "the model is not going to match their data stores because maybe all these other microservices are still using a",
    "start": "1630480",
    "end": "1636640"
  },
  {
    "text": "float for that minutes to clean property so because of this what you actually want to do is you want to split these",
    "start": "1636640",
    "end": "1644399"
  },
  {
    "text": "data models up ideally you would put the data in only the place that it's needed",
    "start": "1644399",
    "end": "1650559"
  },
  {
    "text": "and then copy it to all the other places through events uh if other places need",
    "start": "1650559",
    "end": "1655760"
  },
  {
    "text": "that information as well so in this example I have the hotel room under",
    "start": "1655760",
    "end": "1661720"
  },
  {
    "text": "reservations whether it's occupied and the number of beds I have a",
    "start": "1661720",
    "end": "1666840"
  },
  {
    "text": "different hotel room under maintenance that just has the repair history and I have a different hotel room under",
    "start": "1666840",
    "end": "1672840"
  },
  {
    "text": "housekeeping with just the minutes to clean so you might already be asking like well what about those examples Jay",
    "start": "1672840",
    "end": "1680080"
  },
  {
    "text": "where there's data that all of these applications need so here's an example",
    "start": "1680080",
    "end": "1685720"
  },
  {
    "text": "let's say you have an admin service that's like your backend administrative interface where people can do things",
    "start": "1685720",
    "end": "1692159"
  },
  {
    "text": "like creating new hotel rooms maybe there's been an ex expansion to the hotel and there's now some new rooms",
    "start": "1692159",
    "end": "1697880"
  },
  {
    "text": "that you want to add to your hotel so you go into your admin module and you",
    "start": "1697880",
    "end": "1704000"
  },
  {
    "text": "hit this service that adds a new hotel room it stores in the admin module the",
    "start": "1704000",
    "end": "1709519"
  },
  {
    "text": "admin module then will create a event let's say it's like a hotel room created",
    "start": "1709519",
    "end": "1716000"
  },
  {
    "text": "event that it will publish onto the queue or bus and then anybody that has",
    "start": "1716000",
    "end": "1721200"
  },
  {
    "text": "subscribed to that event will get that event and DEP depending on what technology you use down here for your",
    "start": "1721200",
    "end": "1726480"
  },
  {
    "text": "event bus you can make it so that even if these other services are down for maintenance that they will get this when",
    "start": "1726480",
    "end": "1732320"
  },
  {
    "text": "they come back online they will get these events you can you know make guaranteed delivery so so all of these",
    "start": "1732320",
    "end": "1738000"
  },
  {
    "text": "subscribers will get this information and they can now update",
    "start": "1738000",
    "end": "1743200"
  },
  {
    "text": "their own copies of this data to say I now know about hotel room",
    "start": "1743200",
    "end": "1748240"
  },
  {
    "text": "124 uh last you know the last I knew that the hotel rooms only went up to 123",
    "start": "1748240",
    "end": "1754000"
  },
  {
    "text": "and now I know about hotel room 124 I'll go ahead and create a record for those in my part of the system as well so",
    "start": "1754000",
    "end": "1760880"
  },
  {
    "text": "that's kind of how you would do it with the event bus and without sharing your",
    "start": "1760880",
    "end": "1766039"
  },
  {
    "text": "data models mistake number three is microservices that are too",
    "start": "1766039",
    "end": "1772080"
  },
  {
    "text": "big hopefully many of you are already familiar with DDD or domain driven design and development uh if you are not",
    "start": "1772080",
    "end": "1780200"
  },
  {
    "text": "this is a great book that you can use to get started learning about it it's a",
    "start": "1780200",
    "end": "1785240"
  },
  {
    "text": "large and fairly complicated topic so we don't really have time to talk about it in a lot of detail today but I do want",
    "start": "1785240",
    "end": "1792799"
  },
  {
    "text": "to mention that if you're trying to figure out where do I draw the lines between different micro services and",
    "start": "1792799",
    "end": "1798080"
  },
  {
    "text": "what goes in this one what goes in that one what you really want to use is this concept of bounded contexts which comes",
    "start": "1798080",
    "end": "1806760"
  },
  {
    "text": "from domain driven design it's uh pretty tricky and it takes some time to get",
    "start": "1806760",
    "end": "1812080"
  },
  {
    "text": "used to so I recommend starting with this there's also some other great books about it that um I'm sure you'll be",
    "start": "1812080",
    "end": "1817960"
  },
  {
    "text": "recommended on Amazon as soon as you add this to your cart I have a simple rule since we don't",
    "start": "1817960",
    "end": "1823640"
  },
  {
    "text": "have time to get into you know two hours of domain driven design and development cont uh stuff right now my simple rule",
    "start": "1823640",
    "end": "1831480"
  },
  {
    "text": "is that you're trying to create the smallest possible micro service without creating chatty communication between",
    "start": "1831480",
    "end": "1839159"
  },
  {
    "text": "your services now I'll give you an example of this after my next problem which maybe",
    "start": "1839159",
    "end": "1846240"
  },
  {
    "text": "predictably is microservices that are too small so let's imagine an example",
    "start": "1846240",
    "end": "1852240"
  },
  {
    "text": "where you have been to a conference they talked about microservices you said I'm",
    "start": "1852240",
    "end": "1857519"
  },
  {
    "text": "going to microservice everything from now on I'm micros servicing all the things and what what's more micro than a",
    "start": "1857519",
    "end": "1864840"
  },
  {
    "text": "single endpoint per service right I'm not going to make all these mistakes that Jay was talking about I'm GNA make",
    "start": "1864840",
    "end": "1871080"
  },
  {
    "text": "the micest service I can so I'm going to even have my user login endpoint be one",
    "start": "1871080",
    "end": "1878440"
  },
  {
    "text": "service and my password reset be a different service doesn't get more micro than that right well what is the problem",
    "start": "1878440",
    "end": "1885360"
  },
  {
    "text": "with this every time logs into that system you they might fail and you want",
    "start": "1885360",
    "end": "1891880"
  },
  {
    "text": "to maybe keep count of how many times they failed if they fail five times in",
    "start": "1891880",
    "end": "1897000"
  },
  {
    "text": "10 minutes maybe you want to force them to password reset well that means that",
    "start": "1897000",
    "end": "1902240"
  },
  {
    "text": "every time someone logs in and fails that information has to be synchronized between these two systems it also means",
    "start": "1902240",
    "end": "1909519"
  },
  {
    "text": "that they might fail really fast and it might take a couple minutes for that information to get over to the other",
    "start": "1909519",
    "end": "1914880"
  },
  {
    "text": "system so they might be locked out of their account and then have to wait to reset their password until that system",
    "start": "1914880",
    "end": "1921639"
  },
  {
    "text": "finds out about it so basically you're creating this kind of chattiness between these two services or even if you're",
    "start": "1921639",
    "end": "1928639"
  },
  {
    "text": "using an event bus there's a lot of events going into that event bus and a lot of um subscribers to those events",
    "start": "1928639",
    "end": "1935399"
  },
  {
    "text": "basically anytime something happens in one the other one cares about it anytime it happens in this one that one cares",
    "start": "1935399",
    "end": "1941399"
  },
  {
    "text": "about it too so that's too chatty I think that's clearly too chatty so",
    "start": "1941399",
    "end": "1947399"
  },
  {
    "text": "somewhere right in the middle is kind of what you're aiming for for the right the right place to break up your",
    "start": "1947399",
    "end": "1953760"
  },
  {
    "text": "microservices if you have too much inner service communication you're going to have a very slow application with a lot",
    "start": "1953760",
    "end": "1960480"
  },
  {
    "text": "of data latency and if you have your service size too big well then you really don't",
    "start": "1960480",
    "end": "1966919"
  },
  {
    "text": "have microservices eventually if they get big enough they just become a monolith again right so somewhere in the",
    "start": "1966919",
    "end": "1973240"
  },
  {
    "text": "middle is kind of where you want to set that line the fifth problem that I see is a",
    "start": "1973240",
    "end": "1979200"
  },
  {
    "text": "lot of people starting a green field project as microservices why is that a problem well",
    "start": "1979200",
    "end": "1984840"
  },
  {
    "text": "Greenfield microservices is actually harder than Brownfield microservices if you're not familiar",
    "start": "1984840",
    "end": "1991279"
  },
  {
    "text": "with those terms Greenfield basically mean starting from scratch or starting a new project and Brownfield is migrating",
    "start": "1991279",
    "end": "1997240"
  },
  {
    "text": "something existing the reason why it's harder is four things number one you have if you",
    "start": "1997240",
    "end": "2004480"
  },
  {
    "text": "have existing code even if it's a monolith even if it's a bad monolith you",
    "start": "2004480",
    "end": "2010080"
  },
  {
    "text": "have all of the relationships already documented on how the different parts of the application works you could even do",
    "start": "2010080",
    "end": "2016600"
  },
  {
    "text": "maybe an object diagram or a database diagram and see very clear places where you could actually break your",
    "start": "2016600",
    "end": "2023600"
  },
  {
    "text": "microservices apart if you've ever done a database uh relationship diagram you've seen all those relationship",
    "start": "2023600",
    "end": "2030080"
  },
  {
    "text": "arrows between all the database tables you know that there'll be like a little clump of tables that have lots of",
    "start": "2030080",
    "end": "2035799"
  },
  {
    "text": "interaction with each other and then there'll be like maybe one line that'll go up to this group over here right that one line is kind of your indication that",
    "start": "2035799",
    "end": "2042760"
  },
  {
    "text": "oh this might be a good place to break these microservices up if there's an existing system there's also someone to",
    "start": "2042760",
    "end": "2049040"
  },
  {
    "text": "talk to hopefully if they haven't left the company from having to maintain a ball of mud",
    "start": "2049040",
    "end": "2055118"
  },
  {
    "text": "monolith uh there's someone to talk to that knows how the system works also the system already Works maybe it doesn't",
    "start": "2055119",
    "end": "2061839"
  },
  {
    "text": "work great but what's the number one thing that stops us from doing a good",
    "start": "2061839",
    "end": "2067200"
  },
  {
    "text": "job with software engineering time right there's always",
    "start": "2067200",
    "end": "2073960"
  },
  {
    "text": "deadlines uh has anyone ever had a project where the their boss said you can get this done whenever you want no",
    "start": "2073960",
    "end": "2081158"
  },
  {
    "text": "no so what's really great about having a system that already works even if it's not great maybe it's slow maybe it's not",
    "start": "2081159",
    "end": "2087919"
  },
  {
    "text": "ideal in some ways but it works it buys you time to do microservices carefully",
    "start": "2087919",
    "end": "2093040"
  },
  {
    "text": "so that you don't make some of these mistakes that we're talking about and then the last last one I think is a really important one it's the ability to",
    "start": "2093040",
    "end": "2099800"
  },
  {
    "text": "have a baseline to compare to you're trying to migrate to microservices theoretically because you're trying to",
    "start": "2099800",
    "end": "2105640"
  },
  {
    "text": "make a better system than the system that you had before and if you're trying to migrate to microservices wouldn't it",
    "start": "2105640",
    "end": "2111160"
  },
  {
    "text": "be nice to have a system that you could actually measure against to say are we making something better or are we",
    "start": "2111160",
    "end": "2117119"
  },
  {
    "text": "actually making something worse uh and that's something that you have when you're doing a Brownfield",
    "start": "2117119",
    "end": "2123599"
  },
  {
    "text": "migration there's a bunch of different approaches the Brownfield migration if you've been in any of the other talks",
    "start": "2123599",
    "end": "2129480"
  },
  {
    "text": "about microservices I know they've mentioned some of these the Strangler fig pattern is often put forward as the",
    "start": "2129480",
    "end": "2135560"
  },
  {
    "text": "best one which I would agree with it actually comes from this really crazy plant that's in I think Australia that",
    "start": "2135560",
    "end": "2142440"
  },
  {
    "text": "starts growing in the tops of trees and it shoots these Vines down the trees when the vines get to the ground",
    "start": "2142440",
    "end": "2148880"
  },
  {
    "text": "they'll go into the ground and they'll wrap around the trees roots and they'll actually choke that tree off so it",
    "start": "2148880",
    "end": "2154640"
  },
  {
    "text": "doesn't get the water or nutrients that it needs from the ground anymore eventually that tree dies and it just is",
    "start": "2154640",
    "end": "2160800"
  },
  {
    "text": "like a backbone for the vine so that it can get access to the sun which is up",
    "start": "2160800",
    "end": "2166880"
  },
  {
    "text": "high so it's kind of a violent slow motion violent example but it's actually a really good analogy for how you can do",
    "start": "2166880",
    "end": "2173839"
  },
  {
    "text": "a migration gradually from a legacy application to a modern application if",
    "start": "2173839",
    "end": "2179560"
  },
  {
    "text": "you create a facade layer you could imagine this being like an API Gateway or something you can start with a very",
    "start": "2179560",
    "end": "2186079"
  },
  {
    "text": "small application and a very large Legacy application maybe it's 100% Legacy and 0% modern and you can",
    "start": "2186079",
    "end": "2194040"
  },
  {
    "text": "gradually move endpoints from one to the other rewrite them in the modern application all that time you're",
    "start": "2194040",
    "end": "2200480"
  },
  {
    "text": "updating your facade your maybe your API Gateway so that the client applications",
    "start": "2200480",
    "end": "2205599"
  },
  {
    "text": "are never aware of any of these changes it all looks exactly the same to them",
    "start": "2205599",
    "end": "2210839"
  },
  {
    "text": "and everything continues to work the way it did before but eventually you finish migrating and this buys you the time to",
    "start": "2210839",
    "end": "2216839"
  },
  {
    "text": "basically put your application uh out with updates to it",
    "start": "2216839",
    "end": "2222040"
  },
  {
    "text": "right away without having to finish the whole thing and might you know wait three years while you're migrating it to",
    "start": "2222040",
    "end": "2229400"
  },
  {
    "text": "microservices problem number six is creating coupling through cross cutting concerns some of the common cross",
    "start": "2229400",
    "end": "2236760"
  },
  {
    "text": "cutting concerns that microservices have are all of the security or authorization",
    "start": "2236760",
    "end": "2243640"
  },
  {
    "text": "and authentication related things logging is a common one if you're going to debug a microservices application",
    "start": "2243640",
    "end": "2251160"
  },
  {
    "text": "where a user interacts with this microservice which updates its database and publishes an event to a bus and then",
    "start": "2251160",
    "end": "2258240"
  },
  {
    "text": "three things subscribe to that event and they update something in their database you can imagine if something goes wrong",
    "start": "2258240",
    "end": "2264400"
  },
  {
    "text": "it's going to be really hard to figure out if you don't have really good logging it's going to be hard to figure out what happened so logging is very",
    "start": "2264400",
    "end": "2271119"
  },
  {
    "text": "important but it's also very difficult to do it in a way that doesn't create coupling between those microservices and",
    "start": "2271119",
    "end": "2276560"
  },
  {
    "text": "and then the last one is configuration so my general advice with this is to not reinvent the wheel uh",
    "start": "2276560",
    "end": "2284359"
  },
  {
    "text": "I've given this talk maybe 20 times in the last two years and almost every time",
    "start": "2284359",
    "end": "2289680"
  },
  {
    "text": "someone has come up to me afterwards and said we're doing microservices and we created our own event",
    "start": "2289680",
    "end": "2296160"
  },
  {
    "text": "bus uh my first response to that is that's really cool you probably should",
    "start": "2296160",
    "end": "2301440"
  },
  {
    "text": "not create your own event bus no offense I'm sure you're great engineer uh but",
    "start": "2301440",
    "end": "2306599"
  },
  {
    "text": "these problems have been solved they seem really interesting and cool to solve uh it's the type of thing that",
    "start": "2306599",
    "end": "2311640"
  },
  {
    "text": "would get an engineer very excited to say oo I know how to do that I know how to do publish And subscribe and I'll",
    "start": "2311640",
    "end": "2317160"
  },
  {
    "text": "write events into a database and I can do this to make sure that guaranteed delivery works I guarantee you will not",
    "start": "2317160",
    "end": "2324000"
  },
  {
    "text": "do as good a job as Kafka or Azure event bus or any of the other services that",
    "start": "2324000",
    "end": "2329520"
  },
  {
    "text": "exist out there that already do this same thing for logging there's a logging Library called seek",
    "start": "2329520",
    "end": "2335040"
  },
  {
    "text": "seq that is built for doing distributed logging it's built to be Loosely coupled",
    "start": "2335040",
    "end": "2341599"
  },
  {
    "text": "fault tolerant it can queue up events even if the storage uh the place it's",
    "start": "2341599",
    "end": "2347400"
  },
  {
    "text": "storing the logs goes offline it can store them for a while and then uh write them when that the log becomes available",
    "start": "2347400",
    "end": "2354160"
  },
  {
    "text": "again and most importantly their technology it's technology agnostic which means you're not tying in all of",
    "start": "2354160",
    "end": "2360960"
  },
  {
    "text": "your teams to some particular technology stack by saying oh we created our own logger class in C",
    "start": "2360960",
    "end": "2367440"
  },
  {
    "text": "now everybody has to write their microservice in C right uh or we created",
    "start": "2367440",
    "end": "2372800"
  },
  {
    "text": "it in whatever language but put it in new now you have to do it in net you can't write it in some other",
    "start": "2372800",
    "end": "2378040"
  },
  {
    "text": "language so uh don't reinvent the wheel when it comes to these cross cutting concerns uh there similarly are things",
    "start": "2378040",
    "end": "2385119"
  },
  {
    "text": "out there for authentication and authorization I'm sure you've heard of ooth and those types of things uh and",
    "start": "2385119",
    "end": "2392720"
  },
  {
    "text": "logging I recommend seek and there's other services out out there for configuration as",
    "start": "2392720",
    "end": "2398200"
  },
  {
    "text": "well number seven is the use of synchronous communication this is",
    "start": "2398200",
    "end": "2403880"
  },
  {
    "text": "maybe maybe the worst one uh so I told you that story at the beginning of a",
    "start": "2403880",
    "end": "2410359"
  },
  {
    "text": "client that was uh coming to us with a microservices application that was",
    "start": "2410359",
    "end": "2415839"
  },
  {
    "text": "performing poorly their biggest problem was this problem they also had a bunch of the other ones we talked about but",
    "start": "2415839",
    "end": "2421720"
  },
  {
    "text": "this was the main reason why their system per performed so po so poorly",
    "start": "2421720",
    "end": "2427599"
  },
  {
    "text": "so just give you an example here imagine you have a ORD service and a customer service these are in separate",
    "start": "2427599",
    "end": "2433480"
  },
  {
    "text": "microservices from each other your orders endpoint wants to take an order it might get a customer ID and it needs",
    "start": "2433480",
    "end": "2440960"
  },
  {
    "text": "to look up that customer's billing address and mailing address and whatever other information you need for the order",
    "start": "2440960",
    "end": "2448160"
  },
  {
    "text": "so it's really tempting to do something like this where you start out the order you say oh I need to look up that",
    "start": "2448160",
    "end": "2454560"
  },
  {
    "text": "customer I'm going to do a HTTP call or a call to this database to get that",
    "start": "2454560",
    "end": "2460480"
  },
  {
    "text": "customer data while you're obviously waiting for that customer data the ORD service is",
    "start": "2460480",
    "end": "2466400"
  },
  {
    "text": "blocked and then that customer data comes back in an ideal situation that customer idea uh ID is found and that",
    "start": "2466400",
    "end": "2473000"
  },
  {
    "text": "customer comes back and you can process the order now if you're only having one concurrent user this works great and so",
    "start": "2473000",
    "end": "2480800"
  },
  {
    "text": "usually when you're developing and you're testing this on your development environment no problem",
    "start": "2480800",
    "end": "2487119"
  },
  {
    "text": "imagine what happens when this service either goes down for maintenance or has some sort of an issue or slows down",
    "start": "2487119",
    "end": "2494040"
  },
  {
    "text": "significantly because of load now your order service is blocked maybe forever",
    "start": "2494040",
    "end": "2500720"
  },
  {
    "text": "if it's if the service is if the customer service is down maybe it's just blocked for a lot longer time because",
    "start": "2500720",
    "end": "2506440"
  },
  {
    "text": "the customer's service has gotten busy this is actually what happened in that",
    "start": "2506440",
    "end": "2512359"
  },
  {
    "text": "application I was telling you about and it basically leads to this situation",
    "start": "2512359",
    "end": "2517520"
  },
  {
    "text": "where if you have arrows between all of your services where every service is relying on several other services and",
    "start": "2517520",
    "end": "2524359"
  },
  {
    "text": "one goes down on purpose or on accident then all the ones that rely on that are",
    "start": "2524359",
    "end": "2529560"
  },
  {
    "text": "now either slow or down and then the all the ones that rely on that become slow or go down and pretty soon you have",
    "start": "2529560",
    "end": "2536640"
  },
  {
    "text": "nothing working anymore this is exactly what happened in that application I was telling you about one single service",
    "start": "2536640",
    "end": "2544040"
  },
  {
    "text": "would get slow and it didn't matter which one it was it could be anyone whatever one you started hitting the most uh we started doing some load",
    "start": "2544040",
    "end": "2550680"
  },
  {
    "text": "testing on that application we would just hit any one service we would randomly hit one with some load and all",
    "start": "2550680",
    "end": "2557280"
  },
  {
    "text": "of the other ones would slow down within about 30 seconds and it was because of this situation everybody was waiting for",
    "start": "2557280",
    "end": "2563720"
  },
  {
    "text": "everybody else and so this is obviously not really a microservice because these",
    "start": "2563720",
    "end": "2568800"
  },
  {
    "text": "are not independent from each other at all so there's obviously lots of great",
    "start": "2568800",
    "end": "2574880"
  },
  {
    "text": "alternatives to synchronous commun Communication asynchronous Service bus or cues are an important way to do that",
    "start": "2574880",
    "end": "2582000"
  },
  {
    "text": "uh it's probably the the best way to do it another one is through polling it's an option that you can use there's also",
    "start": "2582000",
    "end": "2589200"
  },
  {
    "text": "a pattern called the circuit breaker pattern uh I would recommend this is maybe like the worst case scenario if",
    "start": "2589200",
    "end": "2594440"
  },
  {
    "text": "you absolutely have to call from one service to another service synchronously",
    "start": "2594440",
    "end": "2600240"
  },
  {
    "text": "you can at least use a circuit breaker pattern the idea of the circuit breaker pattern is you write some code that wraps around that call and it keeps",
    "start": "2600240",
    "end": "2607839"
  },
  {
    "text": "track of failures so if there are five failures in a minute calling service X",
    "start": "2607839",
    "end": "2614480"
  },
  {
    "text": "then that rapper class will actually shut down and say all calls from to service X are going to be disabled from",
    "start": "2614480",
    "end": "2621079"
  },
  {
    "text": "now I'm just going to return an error every time which then at least speeds up your application it starts getting",
    "start": "2621079",
    "end": "2626680"
  },
  {
    "text": "errors back right away instead of having to wait for service X to",
    "start": "2626680",
    "end": "2632160"
  },
  {
    "text": "respond problem number eight is a really nefarious one and that is actually",
    "start": "2632160",
    "end": "2639480"
  },
  {
    "text": "coupling your microservices to each other through the events that they've published this might even not seem",
    "start": "2639480",
    "end": "2646640"
  },
  {
    "text": "possible to you at first blush but I've seen this happen so basically the idea",
    "start": "2646640",
    "end": "2653280"
  },
  {
    "text": "is that your services should actually publish events that say uh you know hey",
    "start": "2653280",
    "end": "2658400"
  },
  {
    "text": "this just happened in this service if anybody else who cares about that can do something about it here's some data",
    "start": "2658400",
    "end": "2664079"
  },
  {
    "text": "related to that event uh well what happens later when the service that's",
    "start": "2664079",
    "end": "2669760"
  },
  {
    "text": "publishing that event decides they need to make a change to that event right well now there's a potential to break",
    "start": "2669760",
    "end": "2676920"
  },
  {
    "text": "all those services that were subscribed to it so there's some very basic rules that you'll find published a lot of",
    "start": "2676920",
    "end": "2683079"
  },
  {
    "text": "different places that talk about what to do to make sure your events uh don't",
    "start": "2683079",
    "end": "2689240"
  },
  {
    "text": "break one of them the first one is rule number one uh no new required fields",
    "start": "2689240",
    "end": "2696680"
  },
  {
    "text": "so don't create a new field that's required on an event all optional Fields if they're new",
    "start": "2696680",
    "end": "2704599"
  },
  {
    "text": "so once a once a event has been published the first time from then on any Fields after that have to be",
    "start": "2704599",
    "end": "2710640"
  },
  {
    "text": "optional with a documented default second rule is anybody subscribing to",
    "start": "2710640",
    "end": "2716440"
  },
  {
    "text": "something that sees an unrecognized field should just ignore it but keep processing right so like well that's a",
    "start": "2716440",
    "end": "2723440"
  },
  {
    "text": "new field I don't know what that means because When I Was Written I that didn't",
    "start": "2723440",
    "end": "2728640"
  },
  {
    "text": "exist so I don't know what to do with it I'm just going to ignore it but if I'm going to publish an event about what I",
    "start": "2728640",
    "end": "2734400"
  },
  {
    "text": "just did I'm going to take that data and I'm going to forward it on in my event so that everyone else who might know",
    "start": "2734400",
    "end": "2741000"
  },
  {
    "text": "what that means knows what to do about it rule number three consumers of",
    "start": "2741000",
    "end": "2746440"
  },
  {
    "text": "optional Fields use the default values when they're missing right so if you get a data uh field on an event that you",
    "start": "2746440",
    "end": "2753920"
  },
  {
    "text": "weren't written to know what it means you're going to pass it on but you're also going to use the default values uh",
    "start": "2753920",
    "end": "2760480"
  },
  {
    "text": "which should be published in the event and then the last one is if you cannot",
    "start": "2760480",
    "end": "2765839"
  },
  {
    "text": "satisfy all three of those rules you need to do a new event that maybe has a new required field the solution to that",
    "start": "2765839",
    "end": "2773240"
  },
  {
    "text": "is to create a new type of event which means that you might have to publish two events now uh going back to my hotel",
    "start": "2773240",
    "end": "2780000"
  },
  {
    "text": "example every time a new room is added maybe you've got a room created one and",
    "start": "2780000",
    "end": "2786400"
  },
  {
    "text": "room created two right because now there's one that has some new required fields that some Services know about and",
    "start": "2786400",
    "end": "2793559"
  },
  {
    "text": "some don't I often get a question about how do you handle like this creates a big mess it seems like how do you handle",
    "start": "2793559",
    "end": "2800200"
  },
  {
    "text": "this if you do true microservices and you have actual separate teams working on them my recommendation is to have",
    "start": "2800200",
    "end": "2807960"
  },
  {
    "text": "sort of like a event Council that has a representative or a project lead or",
    "start": "2807960",
    "end": "2813920"
  },
  {
    "text": "Chief Architect or whatever from each of those teams that meets on a regular basis and talks about these events maybe",
    "start": "2813920",
    "end": "2820000"
  },
  {
    "text": "a day comes where you publish a new event and you can tell everybody about it maybe they want to put that in their backlog to uh handle that event with",
    "start": "2820000",
    "end": "2827920"
  },
  {
    "text": "some of that new data in there or maybe the day comes when an old event that you were publishing isn't subscribed to by",
    "start": "2827920",
    "end": "2834440"
  },
  {
    "text": "anyone anymore because it's been replaced and you can actually turn that off that's something that you would find",
    "start": "2834440",
    "end": "2840640"
  },
  {
    "text": "out in in an event Council where you go uh maybe once a month and everybody talks about what events are being",
    "start": "2840640",
    "end": "2847160"
  },
  {
    "text": "published in there problem number nine is not automating the build and release cycle",
    "start": "2847160",
    "end": "2853520"
  },
  {
    "text": "you wouldn't believe how many companies maybe maybe you would uh still don't have automated cicd pipelines but when",
    "start": "2853520",
    "end": "2861760"
  },
  {
    "text": "we have a client come to us and say we're considering microservices this is one of the first questions we'll ask",
    "start": "2861760",
    "end": "2867079"
  },
  {
    "text": "them the very first one is why do you want to do microservices and making sure they have a very good reason the second",
    "start": "2867079",
    "end": "2873880"
  },
  {
    "text": "question is do you have automated uh build and releases because if you don't",
    "start": "2873880",
    "end": "2880200"
  },
  {
    "text": "you're kind of avoiding the whole benefit of microservices which is the ability to update these things",
    "start": "2880200",
    "end": "2885760"
  },
  {
    "text": "frequently and independently and if you're doing it manually that's very time consuming and it's very prone to",
    "start": "2885760",
    "end": "2892520"
  },
  {
    "text": "error human error especially with things like configuration or you know releasing to the wrong environment at the wrong",
    "start": "2892520",
    "end": "2898760"
  },
  {
    "text": "time you want to have all of this stuff automated first before you even think about implementing",
    "start": "2898760",
    "end": "2904319"
  },
  {
    "text": "microservices the last last one which I've alluded to several several times throughout the talk is uh mismatched",
    "start": "2904319",
    "end": "2910960"
  },
  {
    "text": "teams I mentioned that Google defines microservices architecture as both an",
    "start": "2910960",
    "end": "2916319"
  },
  {
    "text": "architecture and a team organization and uh you might be familiar with something called Conway's",
    "start": "2916319",
    "end": "2923559"
  },
  {
    "text": "law Conway's law to paraphrase it basically says that a team that builds a",
    "start": "2923559",
    "end": "2929240"
  },
  {
    "text": "system will build a system that looks an awful lot like that team uh the common example that's always",
    "start": "2929240",
    "end": "2936960"
  },
  {
    "text": "given it's a bit of an oldfashioned example but it's if you give four teams the job of writing a compiler they'll",
    "start": "2936960",
    "end": "2943079"
  },
  {
    "text": "write a four pass compiler nobody's going to volunteer and say well the work our team did isn't really necessary",
    "start": "2943079",
    "end": "2950040"
  },
  {
    "text": "because it mostly overlaps with the work the other teams did so go ahead and just throw away what we wrote and just use",
    "start": "2950040",
    "end": "2956079"
  },
  {
    "text": "yours uh if you have four teams you're probably going to get four stages to your compilation process the same",
    "start": "2956079",
    "end": "2963119"
  },
  {
    "text": "applies to Modern applications if you're building microservices but you're building it with one team I can almost",
    "start": "2963119",
    "end": "2970200"
  },
  {
    "text": "guarantee that somebody is going to fall for the temptation to put data in a",
    "start": "2970200",
    "end": "2975480"
  },
  {
    "text": "shared database or connect directly through a synchronous HTTP call or connect directly to another database or",
    "start": "2975480",
    "end": "2983440"
  },
  {
    "text": "something like that because everybody knows the whole application everybody works on the whole",
    "start": "2983440",
    "end": "2989400"
  },
  {
    "text": "application this is really just not a good fit for microservices if you have",
    "start": "2989400",
    "end": "2994640"
  },
  {
    "text": "one team of five or six people and that's it for your whole organization it probably doesn't make a",
    "start": "2994640",
    "end": "3000960"
  },
  {
    "text": "lot of sense to do microservices unless each person is doing their own totally independently of each other and that",
    "start": "3000960",
    "end": "3007760"
  },
  {
    "text": "doesn't make a lot of sense so I would say if that's what your team looks like probably microservices automatically are",
    "start": "3007760",
    "end": "3013839"
  },
  {
    "text": "not the right fit for you you want your team to look more like this if you're doing microservices you want to have a",
    "start": "3013839",
    "end": "3019040"
  },
  {
    "text": "team for each microservice now I'm not a purist it doesn't have to be 100% like this you might have two micro services",
    "start": "3019040",
    "end": "3025920"
  },
  {
    "text": "that are a little smaller and they can be kind of grouped together and assigned to a single team but the idea is that",
    "start": "3025920",
    "end": "3032640"
  },
  {
    "text": "every team has their microservice or microservices that they're in charge of",
    "start": "3032640",
    "end": "3037680"
  },
  {
    "text": "and there's really not a lot of cross contamination between those all right so that brings us to the",
    "start": "3037680",
    "end": "3045040"
  },
  {
    "text": "end of my list of 10 things so hopefully what you walked away what you're going to walk away from this with is that",
    "start": "3045040",
    "end": "3051480"
  },
  {
    "text": "monoliths can be good too you can actually scale those if you need to microservices are great for the right",
    "start": "3051480",
    "end": "3058119"
  },
  {
    "text": "type of applications but if you don't have a really good reason to use them",
    "start": "3058119",
    "end": "3063559"
  },
  {
    "text": "they're very dangerous and there's a very good chance you'll build a distributed monolith even if you think microservices",
    "start": "3063559",
    "end": "3071240"
  },
  {
    "text": "could be a good fit if this is a brand new application consider building it as a monolith first and then migrating it",
    "start": "3071240",
    "end": "3077280"
  },
  {
    "text": "at some point in the future there's a lot of advantages to using that process if you have a single team that's",
    "start": "3077280",
    "end": "3085119"
  },
  {
    "text": "small probably a monolith is the best fit for you if you have a large team where it would make sense for it to be split up",
    "start": "3085119",
    "end": "3091520"
  },
  {
    "text": "into little groups then maybe microservices is a good fit for that team and then finally when you are",
    "start": "3091520",
    "end": "3097920"
  },
  {
    "text": "implementing microservices hopefully you remember some of these 10 common mistakes that I showed you uh to make",
    "start": "3097920",
    "end": "3104400"
  },
  {
    "text": "sure that you don't fall into those same traps so that brings us to the end of my",
    "start": "3104400",
    "end": "3109480"
  },
  {
    "text": "content and we've still got a few minutes left so uh I know there's some microphones in the back and I'd be happy",
    "start": "3109480",
    "end": "3116359"
  },
  {
    "text": "to take any questions that anyone is willing to say out loud in front of",
    "start": "3116359",
    "end": "3122839"
  },
  {
    "text": "everyone any questions I can",
    "start": "3122839",
    "end": "3126839"
  },
  {
    "text": "answer you can just raise your hand or Y there's the microphone is",
    "start": "3128000",
    "end": "3134480"
  },
  {
    "text": "ready any questions I answered everyone's questions so perfectly in my talk that you don't have any questions",
    "start": "3138319",
    "end": "3146880"
  },
  {
    "text": "all right well if you think of something and you want to chat afterwards I'll be up here for a little bit uh before I",
    "start": "3146880",
    "end": "3152480"
  },
  {
    "text": "have to hop on a Train to Lisbon but uh you can also reach out to me at any of",
    "start": "3152480",
    "end": "3158160"
  },
  {
    "text": "these places or feel free to use this to join me for my office hours I'd be happy to chat with you at some time that's",
    "start": "3158160",
    "end": "3164640"
  },
  {
    "text": "convenient for both of our time zones thanks so much for coming to the talk today I hope it was useful for",
    "start": "3164640",
    "end": "3170060"
  },
  {
    "text": "[Applause] you",
    "start": "3170060",
    "end": "3177240"
  }
]