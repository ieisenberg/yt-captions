[
  {
    "text": "so hi everyone hello hello my name is Michael and I'm a graphical TC so I'm a",
    "start": "6279",
    "end": "15080"
  },
  {
    "text": "member of the technical steering committee which creates the graphco specification and I'm one of the main",
    "start": "15080",
    "end": "20720"
  },
  {
    "text": "authors of the composite schema specification that we are at the moment",
    "start": "20720",
    "end": "26240"
  },
  {
    "text": "working on and today we're going to talk about uh the distributed graph",
    "start": "26240",
    "end": "32160"
  },
  {
    "text": "Quil um what distributed graph Quil is uh what we mean there and if you need it",
    "start": "32160",
    "end": "38600"
  },
  {
    "text": "we will discover so let's talk a bit about graph",
    "start": "38600",
    "end": "45840"
  },
  {
    "text": "qu so back in 2015 in 2016 around that",
    "start": "45840",
    "end": "50960"
  },
  {
    "text": "corner I was actually Contracting for a Swiss insurance company and they were redoing the whole",
    "start": "50960",
    "end": "58680"
  },
  {
    "text": "stack so they started out and they wanted to build a new customer portal",
    "start": "58680",
    "end": "64040"
  },
  {
    "text": "and the backend services for this same customer portal they also had plans for",
    "start": "64040",
    "end": "69720"
  },
  {
    "text": "a mobile application so uh we were a tasked with designing this backend",
    "start": "69720",
    "end": "75360"
  },
  {
    "text": "service that can serve both of these clients our front end Engineers Back",
    "start": "75360",
    "end": "81479"
  },
  {
    "text": "Then Came uh from a react conference where they just announced graph quare",
    "start": "81479",
    "end": "86840"
  },
  {
    "text": "that graph will come out and Facebook open Source basically uh graph as a",
    "start": "86840",
    "end": "94399"
  },
  {
    "text": "specification so the front end Engineers were pretty sold on graphql because it",
    "start": "94399",
    "end": "100200"
  },
  {
    "text": "completely changed the interaction that we have with our backends graphql was designed from the",
    "start": "100200",
    "end": "107600"
  },
  {
    "text": "first moment for frontend engineers so for building",
    "start": "107600",
    "end": "112759"
  },
  {
    "text": "UI uh on top of this back end and the paradigma shift that we had",
    "start": "112759",
    "end": "119479"
  },
  {
    "text": "in Gra fql was about that we are no longer thinking thinking about the",
    "start": "119479",
    "end": "124880"
  },
  {
    "text": "technical complexities that we have with getting data fetching data there's",
    "start": "124880",
    "end": "130399"
  },
  {
    "text": "actually no fetching data if you're building a graphql app you're more concerned with components and data",
    "start": "130399",
    "end": "137200"
  },
  {
    "text": "contracts what data each component needs and that's really built into the graph",
    "start": "137200",
    "end": "143640"
  },
  {
    "text": "quare specification so one of these core components that are designed for",
    "start": "143640",
    "end": "149040"
  },
  {
    "text": "frontend engineer is is actually the fragment the fragment is our primitive",
    "start": "149040",
    "end": "154519"
  },
  {
    "text": "for composition it allows us to compose data fragments as we can compose uh UI",
    "start": "154519",
    "end": "162080"
  },
  {
    "text": "components actually the fragment is the data contract for a UI component so if",
    "start": "162080",
    "end": "168800"
  },
  {
    "text": "we for instance look at this uh react component not everybody has to like react but it's a good example then you",
    "start": "168800",
    "end": "175800"
  },
  {
    "text": "can see up there we have collocated with actually our data visualization ation code the fragment so there's no code",
    "start": "175800",
    "end": "183799"
  },
  {
    "text": "that actually fetches data there's just the requirement this component needs this data to work and",
    "start": "183799",
    "end": "192000"
  },
  {
    "text": "then in the lower part I just have the HTML code or kind of HTML code that uses",
    "start": "192000",
    "end": "198200"
  },
  {
    "text": "the data from this data fragment and that means I can compile this component",
    "start": "198200",
    "end": "203840"
  },
  {
    "text": "and I know it will work I never Define anywhere in my application how this data",
    "start": "203840",
    "end": "209280"
  },
  {
    "text": "is fetched there's one place but in my components I never deal with the fetching of",
    "start": "209280",
    "end": "215640"
  },
  {
    "text": "data so as we build our application from components right stack components",
    "start": "215640",
    "end": "222640"
  },
  {
    "text": "together we by accident actually create a graph qu query we're not writing a",
    "start": "222640",
    "end": "228319"
  },
  {
    "text": "graph qu query and fetching data we're actually building components stacking them together and by accident this graph",
    "start": "228319",
    "end": "235120"
  },
  {
    "text": "qu query happens and this graph qu query is actually stacked data",
    "start": "235120",
    "end": "241280"
  },
  {
    "text": "fragments together so let me show you that so here I",
    "start": "241280",
    "end": "247000"
  },
  {
    "text": "actually have the same application I could run that let's see if",
    "start": "247000",
    "end": "252840"
  },
  {
    "text": "the if the web is fast",
    "start": "252840",
    "end": "258040"
  },
  {
    "text": "enough I was warned that the Wi-Fi is not so fast but",
    "start": "258199",
    "end": "263360"
  },
  {
    "text": "you can see so this application let's do it again it has a single graph request",
    "start": "263360",
    "end": "268520"
  },
  {
    "text": "that we can see here for all the data I have here and I didn't write the the code to fetch this",
    "start": "268520",
    "end": "275919"
  },
  {
    "text": "query I just stacked components together here for instance I have the gainers list there I have a losers list I have",
    "start": "275919",
    "end": "282680"
  },
  {
    "text": "your charts and up there a ticker so if I drill into that",
    "start": "282680",
    "end": "289360"
  },
  {
    "text": "request see let me",
    "start": "290120",
    "end": "296560"
  },
  {
    "text": "quickly grab that",
    "start": "296560",
    "end": "301080"
  },
  {
    "text": "so I'm copying that here as a curl command and then we",
    "start": "301720",
    "end": "307160"
  },
  {
    "text": "can paste that in",
    "start": "307160",
    "end": "314080"
  },
  {
    "text": "that then I can see that actually My Graph to looks like the structure of my",
    "start": "314080",
    "end": "319479"
  },
  {
    "text": "components and let me actually Zoom a bit in so you can see better so up here",
    "start": "319479",
    "end": "324600"
  },
  {
    "text": "I have for instance the ticker fragment that is all the data that the ticker requires",
    "start": "324600",
    "end": "330160"
  },
  {
    "text": "or down here the feature fragment for the uh for the diagrams and then I have",
    "start": "330160",
    "end": "335840"
  },
  {
    "text": "this Spotlight fragment and I can have a look at the spotline fragment which is here which has the gainers and loser",
    "start": "335840",
    "end": "341479"
  },
  {
    "text": "fragment for the gainers and losers list and then I can drill in and see and to",
    "start": "341479",
    "end": "347199"
  },
  {
    "text": "my smallest component what the data requirements um are so graph tol",
    "start": "347199",
    "end": "352880"
  },
  {
    "text": "completely re revolutionizes how we think about data in the front end",
    "start": "352880",
    "end": "359960"
  },
  {
    "text": "and also from the backend side we don't think about uh providing you certain",
    "start": "359960",
    "end": "365400"
  },
  {
    "text": "requests for certain client use cases we're thinking about the business model",
    "start": "365400",
    "end": "371319"
  },
  {
    "text": "as a whole so we have this unified API where each client can hook up to and",
    "start": "371319",
    "end": "377280"
  },
  {
    "text": "just Define the data requirements and we automatically resolve them so we are thinking about types about what types",
    "start": "377280",
    "end": "384560"
  },
  {
    "text": "mean in our model like what is user type what is reviews type and then the client",
    "start": "384560",
    "end": "390440"
  },
  {
    "text": "applications can require data from these uh from these types so graph lets us",
    "start": "390440",
    "end": "397199"
  },
  {
    "text": "model in interface to our core business domain and that is one of the great",
    "start": "397199",
    "end": "405199"
  },
  {
    "text": "changes that you have in a predicament shift and that also back at this Swiss",
    "start": "405199",
    "end": "410240"
  },
  {
    "text": "company completely revolutionized the the relationship between front and and back and Engineers",
    "start": "410240",
    "end": "416599"
  },
  {
    "text": "because it uh essentially removed the tension in the communication so was not",
    "start": "416599",
    "end": "421800"
  },
  {
    "text": "no longer these these iterations where the front engineer had a requirement and had to wait for the backend engineer to",
    "start": "421800",
    "end": "428039"
  },
  {
    "text": "come up with a solution for that and then uh just just to realize that it was",
    "start": "428039",
    "end": "433599"
  },
  {
    "text": "not how he meant it or he or she meant it and then we had to redo this cycle",
    "start": "433599",
    "end": "438919"
  },
  {
    "text": "until the front engineer was happy so that doesn't exist anymore because now",
    "start": "438919",
    "end": "444599"
  },
  {
    "text": "you're sitting together with your front end engineers and thinking about the business cases and design the model how",
    "start": "444599",
    "end": "449840"
  },
  {
    "text": "it should be and then we just Define the requirements for our component and",
    "start": "449840",
    "end": "455240"
  },
  {
    "text": "everything is resolved and fundamentally graph is a monolith that's also how",
    "start": "455240",
    "end": "462199"
  },
  {
    "text": "Facebook started a big monolith that defines your business",
    "start": "462199",
    "end": "469759"
  },
  {
    "text": "model and while that is a good thing actually in the beginning when we started with the project with two teams",
    "start": "469759",
    "end": "476159"
  },
  {
    "text": "front end and back end uh that only goes so far right uh in the beginning we",
    "start": "476159",
    "end": "483960"
  },
  {
    "text": "could move so fast because we could refactor everything like we wanted to",
    "start": "483960",
    "end": "489599"
  },
  {
    "text": "and uh just buil this application until we added more and more developers today",
    "start": "489599",
    "end": "495520"
  },
  {
    "text": "the same company the same department works with 90 developers on this project",
    "start": "495520",
    "end": "500639"
  },
  {
    "text": "90 developers on a single data graph on a single monolith is not that fun",
    "start": "500639",
    "end": "511080"
  },
  {
    "text": "so we essentially started out at defining our dis business layer and",
    "start": "511080",
    "end": "517279"
  },
  {
    "text": "putting on that a sin layer of graph and as I said as we started moving adding",
    "start": "517279",
    "end": "524200"
  },
  {
    "text": "more teams we started having problems in our iteration speed essentially",
    "start": "524200",
    "end": "530680"
  },
  {
    "text": "refactorings from one team bled into the other like when we wanted to upgrade the",
    "start": "530680",
    "end": "536080"
  },
  {
    "text": "net version that also affected the other team when we we wanted to change types",
    "start": "536080",
    "end": "541240"
  },
  {
    "text": "introducing types that also affected the other teams and that we that meant we always had to wait for each",
    "start": "541240",
    "end": "548760"
  },
  {
    "text": "other so this was not an ideal s situation and actually then tended us to",
    "start": "548760",
    "end": "555920"
  },
  {
    "text": "move slower and be less flexible it was basically difficult to",
    "start": "555920",
    "end": "561440"
  },
  {
    "text": "scale and we don't mean scale in the sense of uh throughput for requests",
    "start": "561440",
    "end": "568200"
  },
  {
    "text": "because Facebook they also have monolith they showed that you can actually scale with the graphical monolith for 500",
    "start": "568200",
    "end": "575440"
  },
  {
    "text": "million users right so that was not the not the problem it was a problem of",
    "start": "575440",
    "end": "580480"
  },
  {
    "text": "scaling these projects for more Developers for more teams and that's exactly when you should think about",
    "start": "580480",
    "end": "587640"
  },
  {
    "text": "Distributing your architecture so you can make space for teams so they can own",
    "start": "587640",
    "end": "593640"
  },
  {
    "text": "certain aspects of your back end so we started thinking how we built",
    "start": "593640",
    "end": "601839"
  },
  {
    "text": "graph Quil and that was uh maybe 2016 uh end of",
    "start": "601839",
    "end": "607200"
  },
  {
    "text": "2016 uh we started to think how we can make graph more flexible and we came up with an",
    "start": "607200",
    "end": "614240"
  },
  {
    "text": "architecture where we used graph essentially as a Gateway as a Gateway",
    "start": "614240",
    "end": "619440"
  },
  {
    "text": "for Downstream services so we moved basically the business logic from net",
    "start": "619440",
    "end": "625720"
  },
  {
    "text": "assemblies into services that we then hooked up to our graph server so instead",
    "start": "625720",
    "end": "631680"
  },
  {
    "text": "of having the uh logic directly implemented in graphql we moved them a",
    "start": "631680",
    "end": "638000"
  },
  {
    "text": "bit outside and by doing that allowing more teams to own certain things of our",
    "start": "638000",
    "end": "644639"
  },
  {
    "text": "graph still you have the problem that you have the Gateway and you have to make up the types so you have still",
    "start": "644639",
    "end": "651120"
  },
  {
    "text": "blocking issues here where you have to wait for one another over time this solution was",
    "start": "651120",
    "end": "659639"
  },
  {
    "text": "refined and we introduced a more professional solution where we had these",
    "start": "659639",
    "end": "664880"
  },
  {
    "text": "Downstream graph gril Services uh which were stitched into our solution in the",
    "start": "664880",
    "end": "671279"
  },
  {
    "text": "graph gr ecosystem we called that schema stitching and there was a for first baby",
    "start": "671279",
    "end": "676440"
  },
  {
    "text": "steps towards uh a proper distributed system so in this case you had all the",
    "start": "676440",
    "end": "683279"
  },
  {
    "text": "configuration code in your graph quare Gateway and you would stitch in these Downstream graph quare services",
    "start": "683279",
    "end": "691000"
  },
  {
    "text": "yeah as I said round end of 2016 2017 17 and there were a lot of solutions that",
    "start": "691000",
    "end": "697480"
  },
  {
    "text": "came out uh there were from atlassian uh a solution Apollo",
    "start": "697480",
    "end": "703160"
  },
  {
    "text": "Federation uh we had our own solution in net and uh everybody was building",
    "start": "703160",
    "end": "708680"
  },
  {
    "text": "something the problem here is that there was no open standard and uh so you couldn't use this",
    "start": "708680",
    "end": "716639"
  },
  {
    "text": "cool Gateway from this company and stack it together with a composition or a Telemetry solution from the other there",
    "start": "716639",
    "end": "722680"
  },
  {
    "text": "was basically no operability and that started to be a problem uh and also like around patent",
    "start": "722680",
    "end": "731079"
  },
  {
    "text": "issues that came up some companies patented their Solutions so you weren't even allowed to be compatible with",
    "start": "731079",
    "end": "738040"
  },
  {
    "text": "them so that was a time when um around let's say two years ago when we reached",
    "start": "738040",
    "end": "744920"
  },
  {
    "text": "out to a couple of open- source companies to bend together to create an",
    "start": "744920",
    "end": "750279"
  },
  {
    "text": "open standard and we had a good reception like companies like IBM AWS",
    "start": "750279",
    "end": "755839"
  },
  {
    "text": "haura The Guild and others just joined forces with us to create a new",
    "start": "755839",
    "end": "763800"
  },
  {
    "text": "specification and um like since January",
    "start": "763880",
    "end": "768959"
  },
  {
    "text": "uh we are having that in the open we are in the open working on the composite schema",
    "start": "768959",
    "end": "774880"
  },
  {
    "text": "specification uh that is owned by the graph Foundation and that's what I'm",
    "start": "774880",
    "end": "780480"
  },
  {
    "text": "going to show you today I'm showing you the first bits of it also in a net Gateway so there will be code not just",
    "start": "780480",
    "end": "787839"
  },
  {
    "text": "talking um the main ideas behind that approach",
    "start": "787839",
    "end": "794680"
  },
  {
    "text": "is that we want to embrace graph not like the previous iterations that we did",
    "start": "794680",
    "end": "800399"
  },
  {
    "text": "uh when I was Contracting at this company or that others started doing with schema stitching or appolo",
    "start": "800399",
    "end": "806800"
  },
  {
    "text": "Federation we really wanted to embrace what graph is and create an open source stunner that sits right on top of the",
    "start": "806800",
    "end": "813680"
  },
  {
    "text": "graph specification we want to allow any schema that you build as a graph qu",
    "start": "813680",
    "end": "821120"
  },
  {
    "text": "Source schema that we could use to build such a distributed system and we want to support all the graphical Enterprise",
    "start": "821120",
    "end": "827760"
  },
  {
    "text": "patterns and um use cases that you have there so when we when we look at that",
    "start": "827760",
    "end": "835360"
  },
  {
    "text": "picture what I showed around uh schema stitching then we wanted to formalize that more so",
    "start": "835360",
    "end": "843120"
  },
  {
    "text": "we introduced first some terms here like the uh Gateway schema that is a",
    "start": "843120",
    "end": "848560"
  },
  {
    "text": "composite schema a schema that is made up of several Downstream source",
    "start": "848560",
    "end": "855160"
  },
  {
    "text": "schemas and Behind These Source schemas can again be microservice or whatever you want to have there the important",
    "start": "855160",
    "end": "862040"
  },
  {
    "text": "thing is that we want to empower your team to build this schema in isolation",
    "start": "862040",
    "end": "869240"
  },
  {
    "text": "but together with others so the idea is that each team each organizational unit",
    "start": "869240",
    "end": "875480"
  },
  {
    "text": "can own part of the graph each Source schema is part of the whole the approach",
    "start": "875480",
    "end": "881720"
  },
  {
    "text": "is meant to be collaborative collaborative means that we as the company have an um common understanding",
    "start": "881720",
    "end": "890399"
  },
  {
    "text": "of what the semantics are in our schema what that means is just we want to have a common understanding what the user is",
    "start": "890399",
    "end": "896920"
  },
  {
    "text": "what an order is um what a product is because every aspect of this graph is",
    "start": "896920",
    "end": "905120"
  },
  {
    "text": "composable and that means if we have two types across two subgraphs or across two",
    "start": "905120",
    "end": "911079"
  },
  {
    "text": "Source schemas like for instance a source schema's account and a source schema",
    "start": "911079",
    "end": "916480"
  },
  {
    "text": "reviews then these types if I have a user on both these subgraphs is the same",
    "start": "916480",
    "end": "922880"
  },
  {
    "text": "type semantically the user is the same and that means we can merge that",
    "start": "922880",
    "end": "930000"
  },
  {
    "text": "I can have the same fields on both subgraphs these are called overlaps and I can use them to optimize query",
    "start": "930000",
    "end": "936199"
  },
  {
    "text": "planning and things like that so these types are essentially merged into a",
    "start": "936199",
    "end": "941560"
  },
  {
    "text": "single composed type this is our this is an object composite",
    "start": "941560",
    "end": "948880"
  },
  {
    "text": "type as I said we have overlaps like IDE name exist on both graphs and I can use",
    "start": "948880",
    "end": "954600"
  },
  {
    "text": "to uh use that for efficient fetching of this data I also have data that is",
    "start": "954600",
    "end": "960360"
  },
  {
    "text": "specific to a certain service is owned by a team like birth date and username",
    "start": "960360",
    "end": "966360"
  },
  {
    "text": "is is owned by the accounts team where reviews is owned by the reviews",
    "start": "966360",
    "end": "972240"
  },
  {
    "text": "team and it's evolvable and that means each team can evolve the type system on",
    "start": "972240",
    "end": "977920"
  },
  {
    "text": "their own so the accounts team for instance can introduce here a note field where",
    "start": "977920",
    "end": "984880"
  },
  {
    "text": "they want to put in notes um and just deploy Dey that without disturbing the",
    "start": "984880",
    "end": "991560"
  },
  {
    "text": "Rev team or asking the Rev team if they could add that they just can deploy it the schema is composed and we have a new",
    "start": "991560",
    "end": "999560"
  },
  {
    "text": "composite type here but if there is any issue like maybe the Rev team already has such a",
    "start": "999560",
    "end": "1006560"
  },
  {
    "text": "field but with a different scaler then we get compiled time warnings compil Time errors that prevent",
    "start": "1006560",
    "end": "1014759"
  },
  {
    "text": "us from even going into the uh cicd pipeline because that is not mergeable",
    "start": "1014759",
    "end": "1021000"
  },
  {
    "text": "and then we can again it's a collaborative approach we can go to the other team and say okay you have this",
    "start": "1021000",
    "end": "1026678"
  },
  {
    "text": "type or this field does it mean the same and can we get to in common",
    "start": "1026679",
    "end": "1033319"
  },
  {
    "text": "understanding of this field this approach is explicit that means we are not guessing things uh we",
    "start": "1033319",
    "end": "1040558"
  },
  {
    "text": "are we are using interfaces and directives to see how these things fit",
    "start": "1040559",
    "end": "1046520"
  },
  {
    "text": "together let's actually have a look at it let me get rid of",
    "start": "1046520",
    "end": "1054480"
  },
  {
    "text": "this okay so this is a basic setup where I have a couple of subgraphs accounts",
    "start": "1054679",
    "end": "1060720"
  },
  {
    "text": "pricing products reviews shipping and I have a Gateway here the Gateway is done",
    "start": "1060720",
    "end": "1068080"
  },
  {
    "text": "that means there's no configuration needed we can just start it so I'm going to do that net",
    "start": "1068080",
    "end": "1077600"
  },
  {
    "text": "run and then then we start basically the Gateway the Gateway is hot reload that",
    "start": "1077600",
    "end": "1083760"
  },
  {
    "text": "means as soon as I'm doing something in the downstream Services it will reflect in the",
    "start": "1083760",
    "end": "1089520"
  },
  {
    "text": "Gateway and then I have here Downstream Services one advantage of a distributed",
    "start": "1089520",
    "end": "1096240"
  },
  {
    "text": "architecture is that I can have different Technologies in my Downstream Services maybe one team wants to use",
    "start": "1096240",
    "end": "1103799"
  },
  {
    "text": "node and create a graph server in node then this is fine I mean if every team",
    "start": "1103799",
    "end": "1109679"
  },
  {
    "text": "in our company uses a different technology stack might not be a good idea but if you have two might be okay",
    "start": "1109679",
    "end": "1117320"
  },
  {
    "text": "manageable and even uh wanted because then you can hire from different um",
    "start": "1117320",
    "end": "1124080"
  },
  {
    "text": "different areas of uh expertise so in this case I have here",
    "start": "1124080",
    "end": "1130159"
  },
  {
    "text": "the accounts node service it's a typically uh typical y node service if you uses the yoga server here uh and has",
    "start": "1130159",
    "end": "1139080"
  },
  {
    "text": "basically in memory data it's a simple demo server here that's my graph schema",
    "start": "1139080",
    "end": "1145039"
  },
  {
    "text": "and I can compose that now into that gateway to compose that into this",
    "start": "1145039",
    "end": "1150159"
  },
  {
    "text": "Gateway I can use the fusion command line here and just say",
    "start": "1150159",
    "end": "1155840"
  },
  {
    "text": "compose the uh account subgraph into my",
    "start": "1155840",
    "end": "1162200"
  },
  {
    "text": "Gateway and then this Gateway immediately is configured so I have to",
    "start": "1162200",
    "end": "1167440"
  },
  {
    "text": "do nothing anymore I can just just go to the graph C route here um and I'm",
    "start": "1167440",
    "end": "1172880"
  },
  {
    "text": "greeted here by banana Kpop get rid of that and I can immediately explore the schema in this instance I have a single",
    "start": "1172880",
    "end": "1180320"
  },
  {
    "text": "query type and actually let me move zoom in and you can see this schema has a",
    "start": "1180320",
    "end": "1186559"
  },
  {
    "text": "query type it has a user field user by ID user by name and a user field so my",
    "start": "1186559",
    "end": "1192760"
  },
  {
    "text": "Downstream service is not yet running um and that's okay I could still",
    "start": "1192760",
    "end": "1198720"
  },
  {
    "text": "query it uh I will get an error if I want to query now the users here for",
    "start": "1198720",
    "end": "1204400"
  },
  {
    "text": "instance let's do that uh I will get an error and users cannot be resoled",
    "start": "1204400",
    "end": "1210840"
  },
  {
    "text": "because the downstream service is not there but this is okay the Gateway is resilient If part of the data is not",
    "start": "1210840",
    "end": "1216520"
  },
  {
    "text": "there it could still yield partial data in this instance I just have one service so I just get nothing but if you have",
    "start": "1216520",
    "end": "1224520"
  },
  {
    "text": "multiple things and one thing gets down graft is built to serve partial results",
    "start": "1224520",
    "end": "1231480"
  },
  {
    "text": "so the Gateway is also built to serve partial results here okay let's uh start actually our",
    "start": "1231480",
    "end": "1239080"
  },
  {
    "text": "our uh Downstream service this is a node service here so I'm starting that and",
    "start": "1239080",
    "end": "1245559"
  },
  {
    "text": "actually let me also start all the others so I don't have to go back here this is net",
    "start": "1245559",
    "end": "1251520"
  },
  {
    "text": "service this is also a net service I walk you a bit through as we go along so",
    "start": "1251520",
    "end": "1257559"
  },
  {
    "text": "don't worry um shipping. net",
    "start": "1257559",
    "end": "1262919"
  },
  {
    "text": "run okay so I started all the downstream services and now from the Gateway",
    "start": "1262919",
    "end": "1269440"
  },
  {
    "text": "perspective I can go back here if I create that again so I get immediately the data that I asked for this is now",
    "start": "1269440",
    "end": "1277520"
  },
  {
    "text": "distributed this is coming from my Downstream service it's nothing nothing special at this point because it's just",
    "start": "1277520",
    "end": "1284279"
  },
  {
    "text": "uh forwarding the request essentially I also can have a look at what is actually",
    "start": "1284279",
    "end": "1289320"
  },
  {
    "text": "happening here in my system by actually asking for the query plan up here we",
    "start": "1289320",
    "end": "1294720"
  },
  {
    "text": "have a query plan tab can enable that Rerun my query and you can see at the",
    "start": "1294720",
    "end": "1301000"
  },
  {
    "text": "moment we are fetching from accounts and then we composing the result so nothing special so the next thing is let's add",
    "start": "1301000",
    "end": "1308679"
  },
  {
    "text": "some other data that adds some more complexity here for instance let's add",
    "start": "1308679",
    "end": "1313919"
  },
  {
    "text": "the reviews uh the idea here is that is a shop we have users and then we have for",
    "start": "1313919",
    "end": "1321760"
  },
  {
    "text": "instance reviews that are product reviews reviews about the product in our web shop and these reviews can be",
    "start": "1321760",
    "end": "1327880"
  },
  {
    "text": "written by users these are authors so this should ideally integrate",
    "start": "1327880",
    "end": "1334760"
  },
  {
    "text": "so we can run the fusion composition here for the reviews service run that go",
    "start": "1334760",
    "end": "1343760"
  },
  {
    "text": "back to our Gateway just refresh the schema here and then we can see we have now not only",
    "start": "1343760",
    "end": "1351000"
  },
  {
    "text": "queries we also have mutations for instance I can write a review I can in real time subscribe to the review",
    "start": "1351000",
    "end": "1358720"
  },
  {
    "text": "service and get all the reviews that are newly published in real time or I can",
    "start": "1358720",
    "end": "1365080"
  },
  {
    "text": "now query my system and when I go now here to my user type you can see here",
    "start": "1365080",
    "end": "1370799"
  },
  {
    "text": "this is users that's what we quered just now but now I also have here the reviews",
    "start": "1370799",
    "end": "1376360"
  },
  {
    "text": "that are the reviews of which my user is the author it's integrated into my",
    "start": "1376360",
    "end": "1383640"
  },
  {
    "text": "type and if I go into in there I can see I can again page through that I get the",
    "start": "1383640",
    "end": "1389520"
  },
  {
    "text": "uh get the review here the author and everything is fine so let's try that out",
    "start": "1389520",
    "end": "1396520"
  },
  {
    "text": "so we going for the username and then we're getting the reviews and from the",
    "start": "1396520",
    "end": "1402360"
  },
  {
    "text": "reviews uh I'm getting maybe the body let start simple so I'm running that",
    "start": "1402360",
    "end": "1410159"
  },
  {
    "text": "and now there's something surprising because we're only fetching from the review service we still getting the",
    "start": "1410159",
    "end": "1416480"
  },
  {
    "text": "users right but when we looked before I said",
    "start": "1416480",
    "end": "1422919"
  },
  {
    "text": "something about overlap so each micro or domain service can have overlapping data",
    "start": "1422919",
    "end": "1428440"
  },
  {
    "text": "and you're doing that to optimize data fetching so in this case we know actually that who's the author of The",
    "start": "1428440",
    "end": "1435200"
  },
  {
    "text": "revage that we have and we detected that the name we can actually serve from our review service so we still can just do",
    "start": "1435200",
    "end": "1442600"
  },
  {
    "text": "it with one hop so we get all the data that we need to fulfill this",
    "start": "1442600",
    "end": "1447880"
  },
  {
    "text": "request with the revie service so we fetch from the revie service then we compose the moment I have here some data",
    "start": "1447880",
    "end": "1456240"
  },
  {
    "text": "that is only on the account service like the birth date from the user we actually",
    "start": "1456240",
    "end": "1461440"
  },
  {
    "text": "fetching from more than one subgraph so we are first still going to reviews because that's the biggest Chunk we",
    "start": "1461440",
    "end": "1467520"
  },
  {
    "text": "going to get and then we are merging that with data from the account service we can also look in detail",
    "start": "1467520",
    "end": "1474919"
  },
  {
    "text": "what's happening so this is a data some users don't have reviews and some Road",
    "start": "1474919",
    "end": "1481000"
  },
  {
    "text": "reviews and if I go down here this is the query plan actually which has here",
    "start": "1481000",
    "end": "1486240"
  },
  {
    "text": "the query that we are that we are running and it also has the query parts that we have so this is a sequence we",
    "start": "1486240",
    "end": "1494240"
  },
  {
    "text": "first go to the review service fetch from there the base query but we are",
    "start": "1494240",
    "end": "1500600"
  },
  {
    "text": "over fetching here a bit and we are over fetching by the user ID I didn't ask here for the user ID but we are fetching",
    "start": "1500600",
    "end": "1506960"
  },
  {
    "text": "it nonetheless in our Gateway and then we are batching it in a single request",
    "start": "1506960",
    "end": "1513399"
  },
  {
    "text": "to the account service Gathering all the data merging the result sets and then",
    "start": "1513399",
    "end": "1518679"
  },
  {
    "text": "delivering the data to our front end so let's take that a bit",
    "start": "1518679",
    "end": "1526320"
  },
  {
    "text": "further and look at actually add more complex",
    "start": "1526320",
    "end": "1532480"
  },
  {
    "text": "scenarios one second where am I there okay so naturally I can compose",
    "start": "1532840",
    "end": "1540919"
  },
  {
    "text": "more things into that for instance I can compose here the products catalog into",
    "start": "1540919",
    "end": "1547480"
  },
  {
    "text": "it and if I do that I just get Now product information here so refresh the",
    "start": "1547480",
    "end": "1553039"
  },
  {
    "text": "schema so I could look into what product now this review is about and see what",
    "start": "1553039",
    "end": "1559799"
  },
  {
    "text": "the name for this product is and when I go here into the reviews",
    "start": "1559799",
    "end": "1565200"
  },
  {
    "text": "you can see now I have the what the review is about the body but I'm also",
    "start": "1565200",
    "end": "1570840"
  },
  {
    "text": "having what the product is the review is about right and if I look into my query plan I can see now it's uh getting more",
    "start": "1570840",
    "end": "1578039"
  },
  {
    "text": "and more complex as we are gathering the data across my company right first I go",
    "start": "1578039",
    "end": "1584760"
  },
  {
    "text": "to reviews I compose that result then in parallel are fetching from products and",
    "start": "1584760",
    "end": "1590960"
  },
  {
    "text": "accounts compose that again together and have this distributed result the query",
    "start": "1590960",
    "end": "1596279"
  },
  {
    "text": "plan actually makes it much more efficient as as if you were doing that",
    "start": "1596279",
    "end": "1601600"
  },
  {
    "text": "manually because we have one request still for our client we have this Advantage there's no over and under",
    "start": "1601600",
    "end": "1608080"
  },
  {
    "text": "fetching from our client side the client still doesn't care about the complexities about this distributed",
    "start": "1608080",
    "end": "1614080"
  },
  {
    "text": "system for them it's a monolith for them they just have this single model of your",
    "start": "1614080",
    "end": "1620480"
  },
  {
    "text": "business and they just say for this component I need the reviews for this component I need the user and behind",
    "start": "1620480",
    "end": "1627399"
  },
  {
    "text": "that we find out the most efficient way to get all this data and to deliver it",
    "start": "1627399",
    "end": "1633880"
  },
  {
    "text": "to your users okay so let's do one more thing",
    "start": "1633880",
    "end": "1639840"
  },
  {
    "text": "and then I can actually show you a bit how these graphical server look like and we can also look at real time data and",
    "start": "1639840",
    "end": "1645760"
  },
  {
    "text": "stuff like that okay so I have another service here and",
    "start": "1645760",
    "end": "1650919"
  },
  {
    "text": "that is the shipping service so we're going to look at that in more detail but let's me let me first compose it just as",
    "start": "1650919",
    "end": "1659360"
  },
  {
    "text": "is and so this shipping service is actually",
    "start": "1659399",
    "end": "1665600"
  },
  {
    "text": "about an algorithm it doesn't actually have data it just has an algorithm that",
    "start": "1665600",
    "end": "1671399"
  },
  {
    "text": "calculates how long the shipping for product is depending on the area where you live in it's totally fake but uh",
    "start": "1671399",
    "end": "1680440"
  },
  {
    "text": "it's a good story so let's say we want to we want to",
    "start": "1680440",
    "end": "1686440"
  },
  {
    "text": "estimate when our product uh could be shipped to our location so we have now",
    "start": "1686440",
    "end": "1691799"
  },
  {
    "text": "this field delivery estimate here and this field delivery estimate",
    "start": "1691799",
    "end": "1697120"
  },
  {
    "text": "has here zip code I could put that in whatever and then I also need like the",
    "start": "1697120",
    "end": "1704640"
  },
  {
    "text": "size and weight of my product actually the size and weight of my product is",
    "start": "1704640",
    "end": "1711399"
  },
  {
    "text": "known by the product catalog so I have here a field Dimension and this field Dimension has the size and weight of my",
    "start": "1711399",
    "end": "1720640"
  },
  {
    "text": "product so I as a front engineer am not interested in this data at all I just",
    "start": "1721559",
    "end": "1727399"
  },
  {
    "text": "want to know the delivery estimate and the the designer of the",
    "start": "1727399",
    "end": "1732760"
  },
  {
    "text": "subgraph actually exposed that this algorithm needs size and weight to calculate that so now I could either run",
    "start": "1732760",
    "end": "1740519"
  },
  {
    "text": "two queries here and then put that in which would not be good or I could give",
    "start": "1740519",
    "end": "1746799"
  },
  {
    "text": "my Downstream service actually some metadata to explain these requirements",
    "start": "1746799",
    "end": "1753840"
  },
  {
    "text": "so I could go in here and introduce let make that a bit",
    "start": "1753840",
    "end": "1761200"
  },
  {
    "text": "bigger introduce a new schema file",
    "start": "1761200",
    "end": "1766720"
  },
  {
    "text": "and then I could provide metadata in graphql we have the extend syntax so",
    "start": "1772080",
    "end": "1777399"
  },
  {
    "text": "typically we have here the schema you can see there's a delivery estimate we have this guy here that's a product and",
    "start": "1777399",
    "end": "1784320"
  },
  {
    "text": "we want to extend that with some metadata so in graphc we can extend our product so I'm extending that",
    "start": "1784320",
    "end": "1793200"
  },
  {
    "text": "and then I can add metadata to my arguments so I could for for instance",
    "start": "1793200",
    "end": "1798559"
  },
  {
    "text": "say that we require the size here this is a graph Quil directive metadata that",
    "start": "1798559",
    "end": "1804799"
  },
  {
    "text": "I can provide to the composition process of the schema merging so I'm saying here",
    "start": "1804799",
    "end": "1810080"
  },
  {
    "text": "okay this field is a requirement to another service in my",
    "start": "1810080",
    "end": "1815640"
  },
  {
    "text": "distributed system and it actually needs the dimension of the product so this",
    "start": "1815640",
    "end": "1820880"
  },
  {
    "text": "requirement is relative to the type I'm extending here and I'm I can express",
    "start": "1820880",
    "end": "1826360"
  },
  {
    "text": "that I need the dimension and the size here and I need here",
    "start": "1826360",
    "end": "1832039"
  },
  {
    "text": "the the weight and the actual thing I want to have the user control off is just the",
    "start": "1832039",
    "end": "1839440"
  },
  {
    "text": "zip the zip code and nothing else so this way I can still design my",
    "start": "1839440",
    "end": "1848279"
  },
  {
    "text": "graph quare type in C uh as if it's a normal method then I add some metadata",
    "start": "1848279",
    "end": "1855279"
  },
  {
    "text": "here and what happens that my public API is actually that we no longer have",
    "start": "1855279",
    "end": "1864159"
  },
  {
    "text": "here any arguments so let me show you that so when we go to products",
    "start": "1864159",
    "end": "1870679"
  },
  {
    "text": "here and uh we go here to our delivery estimate you can see that we have only a",
    "start": "1870679",
    "end": "1876840"
  },
  {
    "text": "single argument because the other arguments are actually internal requirements to data from another",
    "start": "1876840",
    "end": "1884120"
  },
  {
    "text": "service and that means that when I run this",
    "start": "1884799",
    "end": "1889919"
  },
  {
    "text": "that it gets a bit bigger and what we are essentially doing here now and let's",
    "start": "1890559",
    "end": "1896000"
  },
  {
    "text": "have a look at the detail is we first fetch from reviews then in parall Fetch",
    "start": "1896000",
    "end": "1901840"
  },
  {
    "text": "from products and accounts and then feed in the data and you can see feed in here",
    "start": "1901840",
    "end": "1908039"
  },
  {
    "text": "the product Dimension that is fed into my shipping uh graph to resolve the",
    "start": "1908039",
    "end": "1915080"
  },
  {
    "text": "shipping estimates and that basically without any programming of",
    "start": "1915080",
    "end": "1920360"
  },
  {
    "text": "complex data resolver um workflows or anything we just analyze that as compile",
    "start": "1920360",
    "end": "1926279"
  },
  {
    "text": "time if it doesn't stick fit together we would have a compile time error but with",
    "start": "1926279",
    "end": "1931880"
  },
  {
    "text": "minimal configuration and let's quickly have a",
    "start": "1931880",
    "end": "1937639"
  },
  {
    "text": "look at the result here so you can see we have the delivery estimate here and",
    "start": "1937639",
    "end": "1942679"
  },
  {
    "text": "if we dive into our textural representation of the um qu plan we can",
    "start": "1942679",
    "end": "1949760"
  },
  {
    "text": "see here we're doing this over fetch you can see this requires Fusion export",
    "start": "1949760",
    "end": "1955720"
  },
  {
    "text": "three fusion export 3 down here is a product ID to get the products and then",
    "start": "1955720",
    "end": "1961320"
  },
  {
    "text": "we provide this task provides uh two and three which are actually the size and",
    "start": "1961320",
    "end": "1967480"
  },
  {
    "text": "weight so we are over fetching from the product graph that and then we are feeding that into the last data fetch",
    "start": "1967480",
    "end": "1975080"
  },
  {
    "text": "from Shipping awesome okay let me show you one more",
    "start": "1975080",
    "end": "1980480"
  },
  {
    "text": "thing and that is actually um real time data because like I said this approach",
    "start": "1980480",
    "end": "1987240"
  },
  {
    "text": "allows you to use any graph gra feature that there is and that contains a real time graph gra and so far you didn't see",
    "start": "1987240",
    "end": "1995600"
  },
  {
    "text": "me at any time doing any configuration because the schema of your subgraph that",
    "start": "1995600",
    "end": "2001200"
  },
  {
    "text": "is the configuration and if there is anything complex like requires or provides then I can annotate that just",
    "start": "2001200",
    "end": "2008440"
  },
  {
    "text": "for this type everything else is infert from the types because we have a semantical understanding between the",
    "start": "2008440",
    "end": "2015799"
  },
  {
    "text": "team members what the user means in each of these subgraphs okay so let me just quickly go",
    "start": "2015799",
    "end": "2024120"
  },
  {
    "text": "here to the demo files no this one demo two",
    "start": "2024120",
    "end": "2032120"
  },
  {
    "text": "okay yeah so I have here a motation that's a a simple graph motation",
    "start": "2032120",
    "end": "2038120"
  },
  {
    "text": "basically doing a change to my subsystem I can run that and then I get",
    "start": "2038120",
    "end": "2045120"
  },
  {
    "text": "an error because this product ID doesn't exist so let's quickly grab a product ID",
    "start": "2045120",
    "end": "2051200"
  },
  {
    "text": "that exists uh this",
    "start": "2051200",
    "end": "2058598"
  },
  {
    "text": "one and we going to feed that in",
    "start": "2059480",
    "end": "2063878"
  },
  {
    "text": "here okay the author ID also doesn't exist so I'm quickly fetching also the",
    "start": "2064639",
    "end": "2069878"
  },
  {
    "text": "author ID so I'm taking this",
    "start": "2069879",
    "end": "2077200"
  },
  {
    "text": "one let's feed that in and then we can then we can do a",
    "start": "2080440",
    "end": "2085839"
  },
  {
    "text": "graph qu mutation you can see that is a mutation here the ID changes a bit uh so",
    "start": "2085839",
    "end": "2091919"
  },
  {
    "text": "basically we adding here these um data so if I query that I actually can see I",
    "start": "2091919",
    "end": "2098200"
  },
  {
    "text": "have now data here this guy now wrote a couple of",
    "start": "2098200",
    "end": "2103359"
  },
  {
    "text": "mutations I can also hook now with real time data into that and really query",
    "start": "2103359",
    "end": "2109000"
  },
  {
    "text": "things as they come in so I'm opening here a different a version of banana",
    "start": "2109000",
    "end": "2116680"
  },
  {
    "text": "Kpop and I'm hooking into the same Gateway let me just get",
    "start": "2116680",
    "end": "2124079"
  },
  {
    "text": "that okay and then let me quickly get here the subscription this is a",
    "start": "2124079",
    "end": "2131160"
  },
  {
    "text": "graph qu subscription that is essentially a query which is raised and",
    "start": "2131160",
    "end": "2136400"
  },
  {
    "text": "executed every time something new comes in you can see when I execute that I'm",
    "start": "2136400",
    "end": "2142079"
  },
  {
    "text": "subscribed here to new uh reviews nothing actually happens because nothing",
    "start": "2142079",
    "end": "2147960"
  },
  {
    "text": "uh is added to the system at this point let me just move that over so I",
    "start": "2147960",
    "end": "2154319"
  },
  {
    "text": "can raise that so but in the moment I do this uh request here and I could also do",
    "start": "2154319",
    "end": "2160400"
  },
  {
    "text": "some other let's add some more data here you can see in real time that the data",
    "start": "2160400",
    "end": "2166040"
  },
  {
    "text": "comes in this is also with the same distribution engine just in real time I",
    "start": "2166040",
    "end": "2171119"
  },
  {
    "text": "didn't configure that because the Gateway will inspect your Downstream Services no matter which technology note",
    "start": "2171119",
    "end": "2178720"
  },
  {
    "text": "rust whatever we will inspect what graph communication protocol they are",
    "start": "2178720",
    "end": "2184400"
  },
  {
    "text": "implementing and there are a couple of like by default we are setting that to",
    "start": "2184400",
    "end": "2189599"
  },
  {
    "text": "Auto here but it could be graphical over web soet graphical over SS um or the",
    "start": "2189599",
    "end": "2195240"
  },
  {
    "text": "Legacy Apollo web socket protocol or soon grpc",
    "start": "2195240",
    "end": "2201760"
  },
  {
    "text": "streams and then we are querying your systems in muton okay I'm hooking off",
    "start": "2202359",
    "end": "2209680"
  },
  {
    "text": "that so the composite schema spec is having a distributed configuration so",
    "start": "2209680",
    "end": "2217960"
  },
  {
    "text": "each subgraph the schema of each subgraph is part of the",
    "start": "2217960",
    "end": "2223200"
  },
  {
    "text": "configuration and that means I don't have to care about yl files or whatever I'm basically writing my schema I'm",
    "start": "2223200",
    "end": "2229920"
  },
  {
    "text": "writing my graph quare server in net in node and whatever and the output the schema file that is my",
    "start": "2229920",
    "end": "2237560"
  },
  {
    "text": "configuration it's declarative with declarative I mean these directives that I can slap on like the require directive",
    "start": "2237560",
    "end": "2245040"
  },
  {
    "text": "I can say actually this is not an argument this is requirement to data from another service the composition is",
    "start": "2245040",
    "end": "2251359"
  },
  {
    "text": "done on build time so when I compile my project I know if it's if it's going to work in production they can also just",
    "start": "2251359",
    "end": "2258839"
  },
  {
    "text": "download the production configuration and compile against that or any other",
    "start": "2258839",
    "end": "2264280"
  },
  {
    "text": "stage so one of the most important things about this specification is is open it's an open source specification",
    "start": "2264280",
    "end": "2271560"
  },
  {
    "text": "under the graph Foundation the graph Foundation is part of the Linux foundation and that means it's MIT so",
    "start": "2271560",
    "end": "2278319"
  },
  {
    "text": "there's no patent issues or whatever every open source uh developer can implement it if if they uh he or she",
    "start": "2278319",
    "end": "2286119"
  },
  {
    "text": "want to do that they can go ahead do that any company can provide tooling to it and tooling is",
    "start": "2286119",
    "end": "2294318"
  },
  {
    "text": "interoperable these Source schemas these Downstream Services can be part of a",
    "start": "2295760",
    "end": "2301599"
  },
  {
    "text": "single overall schema or stand on their own they can also I have a meeting",
    "start": "2301599",
    "end": "2309079"
  },
  {
    "text": "and don't worry um they can also be a part of",
    "start": "2309079",
    "end": "2314880"
  },
  {
    "text": "multiple subgraphs as long as the semantical understanding what the user or what these entities are is the same",
    "start": "2314880",
    "end": "2322520"
  },
  {
    "text": "as I said we embracing or graphical features subscriptions defer stream and what have you there and we",
    "start": "2322520",
    "end": "2330240"
  },
  {
    "text": "are using overlapping data let's just reflect on query",
    "start": "2330240",
    "end": "2335880"
  },
  {
    "text": "planning again so I showed you bit the query planning that's a simple query planning we're working on something that",
    "start": "2335880",
    "end": "2341440"
  },
  {
    "text": "is called PG that is profile guided optimization in the qu planning meaning",
    "start": "2341440",
    "end": "2347880"
  },
  {
    "text": "that uh we actually collect uh Telemetry over what you're doing what the impact",
    "start": "2347880",
    "end": "2353599"
  },
  {
    "text": "is to your Downstream system and then we are looking at what is more efficient to",
    "start": "2353599",
    "end": "2359520"
  },
  {
    "text": "do so we quickly give you the the cheapest Crow plan then we analyze in",
    "start": "2359520",
    "end": "2364760"
  },
  {
    "text": "the back end uh depending on open Telemetry events what the impact is to your",
    "start": "2364760",
    "end": "2370839"
  },
  {
    "text": "Downstream system and then we are issuing if it's not the most efficient query plan that you have a new query",
    "start": "2370839",
    "end": "2377680"
  },
  {
    "text": "plan that uh has less impact on your Downstream system the first query plan",
    "start": "2377680",
    "end": "2383520"
  },
  {
    "text": "that we do is basically the one with the least amount of hops to Downstream services but in some cases it could be",
    "start": "2383520",
    "end": "2391880"
  },
  {
    "text": "faster to fetch from more services because we're hitting better indexes or whatever",
    "start": "2391880",
    "end": "2398160"
  },
  {
    "text": "uh there is the case and that is all also built into the tooling that we have",
    "start": "2398160",
    "end": "2404200"
  },
  {
    "text": "and this is uh is all part of the hot chocolate uh graph server let me quickly",
    "start": "2404200",
    "end": "2410240"
  },
  {
    "text": "show you H where are we H sorry I put it here",
    "start": "2410240",
    "end": "2417400"
  },
  {
    "text": "on my second screen okay that is like let's do that",
    "start": "2417400",
    "end": "2423560"
  },
  {
    "text": "and see if we can show it Wi-Fi is not the best so let's quickly",
    "start": "2423560",
    "end": "2430319"
  },
  {
    "text": "give it a second so we have a complete cockpit that you can hook up your gateway into banana",
    "start": "2430319",
    "end": "2438720"
  },
  {
    "text": "cpop unfortunately not",
    "start": "2440079",
    "end": "2443880"
  },
  {
    "text": "anymore ah there thank",
    "start": "2446119",
    "end": "2451800"
  },
  {
    "text": "you let's see no oh",
    "start": "2455359",
    "end": "2461520"
  },
  {
    "text": "yes they some they on the Wi-Fi mess with your certificates here I don't",
    "start": "2461720",
    "end": "2469400"
  },
  {
    "text": "know so let's",
    "start": "2469400",
    "end": "2472920"
  },
  {
    "text": "tether if not I have screenshots don't worry there it",
    "start": "2483280",
    "end": "2489119"
  },
  {
    "text": "is okay so you get this overview over to your graph how your graph is actually",
    "start": "2489119",
    "end": "2494599"
  },
  {
    "text": "performing what queries are going through what cins um your graph has you",
    "start": "2494599",
    "end": "2500480"
  },
  {
    "text": "can dive in into the performance St specifics according to graph and you can",
    "start": "2500480",
    "end": "2505720"
  },
  {
    "text": "also control what query plans are we executing how is the pressure on each of these subgraphs you can even get an",
    "start": "2505720",
    "end": "2514079"
  },
  {
    "text": "analytics around um what field data is uh expensive for instance I can dive",
    "start": "2514079",
    "end": "2520839"
  },
  {
    "text": "into the account subgraph and actually have a look at what the impact is for",
    "start": "2520839",
    "end": "2526760"
  },
  {
    "text": "certain Fields so what are the top fields that cost in My Graph so all this",
    "start": "2526760",
    "end": "2533400"
  },
  {
    "text": "is uh is part of the uh hot chocolate server you can also control here the",
    "start": "2533400",
    "end": "2539839"
  },
  {
    "text": "stages as I said you could compile against your different stages this is all up to you and the coolest thing",
    "start": "2539839",
    "end": "2547680"
  },
  {
    "text": "as this is an open specification you can use any competitors tooling on top of that and inter interchange them okay",
    "start": "2547680",
    "end": "2556160"
  },
  {
    "text": "let's go back to the slides yeah as I said we baked open t in",
    "start": "2556160",
    "end": "2562760"
  },
  {
    "text": "so we approach the open tet Community to have a better semantic specification for",
    "start": "2562760",
    "end": "2568160"
  },
  {
    "text": "graph quare and uh that is basically what we are building our tooling um on",
    "start": "2568160",
    "end": "2573960"
  },
  {
    "text": "top on let's hop over that so there's also a nice article by AWS",
    "start": "2573960",
    "end": "2581240"
  },
  {
    "text": "over the the composite scheme of spec or in particular our Gateway they used that",
    "start": "2581240",
    "end": "2587680"
  },
  {
    "text": "to aggregate actually the AWS amplify ABS the AWS UNG services and uh um you",
    "start": "2587680",
    "end": "2596559"
  },
  {
    "text": "can have a read they found out that it's one of the easiest approaches that you can do and like I showed you there's IBM",
    "start": "2596559",
    "end": "2604680"
  },
  {
    "text": "AWS haura all going in to support this specification so you can also move with",
    "start": "2604680",
    "end": "2612559"
  },
  {
    "text": "your setups from one to the other implementation or even do your own so with this I'm done uh if you want",
    "start": "2612559",
    "end": "2620280"
  },
  {
    "text": "to follow me these are my contact details otherwise I'm open for",
    "start": "2620280",
    "end": "2626079"
  },
  {
    "text": "questions so how's your GPC",
    "start": "2626079",
    "end": "2631520"
  },
  {
    "text": "support so it's on the back burner uh I hope this uh year this first half of",
    "start": "2631520",
    "end": "2637680"
  },
  {
    "text": "this year we're going to have that like grpc support in general is only",
    "start": "2637680",
    "end": "2643200"
  },
  {
    "text": "interesting in the sense of um a composite schema to a subgraph like",
    "start": "2643200",
    "end": "2650319"
  },
  {
    "text": "it's not useful from client to the server itself and what we found out is",
    "start": "2650319",
    "end": "2656119"
  },
  {
    "text": "that the streaming is actually uh the most compelling thing there um if you",
    "start": "2656119",
    "end": "2661160"
  },
  {
    "text": "use actually Gip between your browser and the Gateway it's faster than with",
    "start": "2661160",
    "end": "2666200"
  },
  {
    "text": "grpc but between composite schema and Source schema is where you get the improve",
    "start": "2666200",
    "end": "2672599"
  },
  {
    "text": "improvements with grpc and yeah we we have that planned for the first half of the year but it's dodgy at the",
    "start": "2672599",
    "end": "2681440"
  },
  {
    "text": "moment any other yeah hi yeah um you mentioned when it's",
    "start": "2681480",
    "end": "2690200"
  },
  {
    "text": "like uh when the Gateway is building a query plan that it's able to kind of semantically determine which service",
    "start": "2690200",
    "end": "2697079"
  },
  {
    "text": "yeah go to get the data I was wondering like your example was like say between the account service and the review",
    "start": "2697079",
    "end": "2703400"
  },
  {
    "text": "service it seems quite likely that you might have a scenario where say your review service only contains data about",
    "start": "2703400",
    "end": "2708680"
  },
  {
    "text": "users that have reviews yeah is there a way that you can override that query plan and say like the account service",
    "start": "2708680",
    "end": "2714319"
  },
  {
    "text": "has to be the source of Truth for the user nodes yes you can you can give hints like with more directives I didn't",
    "start": "2714319",
    "end": "2721440"
  },
  {
    "text": "want to put too much uh configuration like um you can get away with a lot",
    "start": "2721440",
    "end": "2727720"
  },
  {
    "text": "without most of the time configuration but uh for instance with the required uh",
    "start": "2727720",
    "end": "2733200"
  },
  {
    "text": "I put this hint in so um you need to resolve data there and you can also say",
    "start": "2733200",
    "end": "2739119"
  },
  {
    "text": "like my entity resolver to get the entity's identity you have to go here",
    "start": "2739119",
    "end": "2744240"
  },
  {
    "text": "you have to go to accounts get first the user even if you don't need data there just to make sure this user exists you",
    "start": "2744240",
    "end": "2751200"
  },
  {
    "text": "have to go there yeah cool thank you can I ask another question yeah um something that was Ed in the hot chocolate schema",
    "start": "2751200",
    "end": "2758960"
  },
  {
    "text": "stitching impation was um you could have like a nested object in your stitching",
    "start": "2758960",
    "end": "2765640"
  },
  {
    "text": "query so you could say like um a resolver on a certain type is achieved",
    "start": "2765640",
    "end": "2770800"
  },
  {
    "text": "by going to this node in another service and then going to a sub node of that",
    "start": "2770800",
    "end": "2776160"
  },
  {
    "text": "will it still be possible to do that in Fusion or would you have to define the kind of owning type in both",
    "start": "2776160",
    "end": "2782040"
  },
  {
    "text": "Services you have to because they are composite types like uh the the the the",
    "start": "2782040",
    "end": "2787599"
  },
  {
    "text": "idea is really that you have a broken graph essentially you don't necessarily have to have a C Class you just have to",
    "start": "2787599",
    "end": "2795000"
  },
  {
    "text": "have this type so we understand the semantics it doesn't mean this type has",
    "start": "2795000",
    "end": "2800200"
  },
  {
    "text": "to actually exist as an instance but you have to to tell us this thing that you",
    "start": "2800200",
    "end": "2805880"
  },
  {
    "text": "have there it goes into this type so you kind of declare it but it could also be",
    "start": "2805880",
    "end": "2811079"
  },
  {
    "text": "just in the graphql schema file that it just exists there so when you say it",
    "start": "2811079",
    "end": "2816200"
  },
  {
    "text": "doesn't have to exist as an instance yeah you could the server could know that it can just create one of these",
    "start": "2816200",
    "end": "2821839"
  },
  {
    "text": "nodes without needing to resolve anything and then we would create a sort of thing and just say Okay this it's",
    "start": "2821839",
    "end": "2829240"
  },
  {
    "text": "just so the the the idea is like with schema stitching it was very much uh",
    "start": "2829240",
    "end": "2834720"
  },
  {
    "text": "like you're writing a function and that is very unstable where now the semantics",
    "start": "2834720",
    "end": "2840160"
  },
  {
    "text": "between types is very clear and we know how to compose them it's much clearer",
    "start": "2840160",
    "end": "2845559"
  },
  {
    "text": "and also um it has a Rippling effect like with schema stitching it's just one",
    "start": "2845559",
    "end": "2851040"
  },
  {
    "text": "file uh one field where you point to something whereas if you integrate it in",
    "start": "2851040",
    "end": "2856160"
  },
  {
    "text": "the type anywhere where this type sits it suddenly extends and in both directions like reviews for instance",
    "start": "2856160",
    "end": "2862520"
  },
  {
    "text": "suddenly you have the reviews on the user but you have also the user as an author on the reviews like these kinds",
    "start": "2862520",
    "end": "2868400"
  },
  {
    "text": "of things are now much easier because you can can essentially say this is my type and the",
    "start": "2868400",
    "end": "2874400"
  },
  {
    "text": "composition there also like just um so this specification is still stage zero",
    "start": "2874400",
    "end": "2882200"
  },
  {
    "text": "so we are heavily operate iterating on it together with Apollo Apollo is also",
    "start": "2882200",
    "end": "2888400"
  },
  {
    "text": "part on the people who are working on that uh so um maybe Apollo 3 is based on",
    "start": "2888400",
    "end": "2894960"
  },
  {
    "text": "this uh the specification our product is Fusion but there are others that are",
    "start": "2894960",
    "end": "2900319"
  },
  {
    "text": "also working with us on that so you can already have a look at what this",
    "start": "2900319",
    "end": "2905599"
  },
  {
    "text": "contains for instance if I go here to the source schema you can already see for instance this",
    "start": "2905599",
    "end": "2911559"
  },
  {
    "text": "require uh directive but there are also others like override provides uh",
    "start": "2911559",
    "end": "2918440"
  },
  {
    "text": "internal um sharable or the is directed to give",
    "start": "2918440",
    "end": "2924079"
  },
  {
    "text": "semantics so just so there's a lot more that you can hint the schema composition",
    "start": "2924079",
    "end": "2929839"
  },
  {
    "text": "the more complex you think is so you can gear it towards certain certain subgraphs or certain source schemas to",
    "start": "2929839",
    "end": "2936960"
  },
  {
    "text": "say fetch this thing here like the one I told you is this entity resol so I can",
    "start": "2936960",
    "end": "2943000"
  },
  {
    "text": "make very clear this is the entity resolver to get person so only source",
    "start": "2943000",
    "end": "2949240"
  },
  {
    "text": "schemas that have this entity resolver attribute on that's where you can get that cool yeah it looks really cool",
    "start": "2949240",
    "end": "2956240"
  },
  {
    "text": "thank you other",
    "start": "2956240",
    "end": "2962160"
  },
  {
    "text": "questions no then you can hit me up at the conference if you have more question if there's something you want to",
    "start": "2963920",
    "end": "2970799"
  },
  {
    "text": "ask uh and with this we are done thank you",
    "start": "2970799",
    "end": "2976440"
  }
]