[
  {
    "text": "if you here but the thing with elm and Phoenix and collaboration music than this is in fact that room",
    "start": "7610",
    "end": "14250"
  },
  {
    "text": "so before we again make a confession I gave this talk at a liquor comp earlier this year and I have a sort of a problem",
    "start": "14250",
    "end": "21150"
  },
  {
    "text": "I have a lengthy history of talking about languages other than the one that a given conference is focused on so for instance at ancient city Ruby I've",
    "start": "21150",
    "end": "27840"
  },
  {
    "text": "talked about elixir in 2014 and at lexicon that year I talked about Java sort of and at lexicon Palast year I",
    "start": "27840",
    "end": "34829"
  },
  {
    "text": "talked about angular and building your own language so lexicon this year I talked about home and so we'll also",
    "start": "34829",
    "end": "39989"
  },
  {
    "text": "cover lecture and ex2 but will spend more time on philosophy then we will focus on like difficult code on the",
    "start": "39989",
    "end": "46200"
  },
  {
    "text": "elixir side but you'll see stuff so let's talk about collaboration like what",
    "start": "46200",
    "end": "51330"
  },
  {
    "text": "it is the easiest way to describe it is you have multiple parties that are working on something together they're viewing some shared state together in",
    "start": "51330",
    "end": "58620"
  },
  {
    "text": "this case we're doing collaborative music but the fundamentals are the important things so here that shared States called a thing that Alice and Bob",
    "start": "58620",
    "end": "64650"
  },
  {
    "text": "are interacting with but of course could be a document or game simulation or database tables but realistically",
    "start": "64650",
    "end": "70650"
  },
  {
    "text": "probably unless you're building a database after they shouldn't be thinking about them as database tables or yeah in this case it's music so",
    "start": "70650",
    "end": "78420"
  },
  {
    "text": "that's the motivation and I'm going to walk through sort of how we'll cover it so we're gonna have like a speed reading",
    "start": "78420",
    "end": "83429"
  },
  {
    "text": "of the history and the fundamentals of collaboration on the web I already talked about how it's fundamentally just",
    "start": "83429",
    "end": "88950"
  },
  {
    "text": "multiple parties working on some shared state you'll note that that sentence does not mention the word like WebSockets or real-time or the web or",
    "start": "88950",
    "end": "96329"
  },
  {
    "text": "anything like that so Phoenix is a framework for lecture if you're not familiar and it gives us this abstraction called channels and people",
    "start": "96329",
    "end": "102840"
  },
  {
    "text": "generally say channels how you mean WebSockets and that's not really right so I want to kind of talk about that very briefly so the point is a lot of",
    "start": "102840",
    "end": "109770"
  },
  {
    "text": "people said ah now it's easy to do collaborative stuff but and it used to be hard because now we can do WebSockets with channels and the point is you don't",
    "start": "109770",
    "end": "116520"
  },
  {
    "text": "need WebSockets for collaboration and phoenix channels aren't just WebSockets there's lots of transports and you don't",
    "start": "116520",
    "end": "123359"
  },
  {
    "text": "need to be on the web to write collaborative software and collaborative software doesn't need to be real-time and it doesn't need to do ajaxy things",
    "start": "123359",
    "end": "128640"
  },
  {
    "text": "at all but for Ajax existed I had a I basically had this like zero with hidden iframe",
    "start": "128640",
    "end": "134160"
  },
  {
    "text": "that I used for something Ajax II like it was blocking but it was blocking somewhere else so nobody cares I had",
    "start": "134160",
    "end": "139200"
  },
  {
    "text": "like a queue of them and I just spun out messages to them and let them do things this is what for xmlhttprequest but it worked and it",
    "start": "139200",
    "end": "145350"
  },
  {
    "text": "worked roughly the same way but only because browsers were terribly insecure anyway so the point is that work just",
    "start": "145350",
    "end": "151050"
  },
  {
    "text": "fine back then this was in I don't know is like a year before the sort of Ajax",
    "start": "151050",
    "end": "156620"
  },
  {
    "text": "blog post came out and also normal crud dress interfaces are also collaboration",
    "start": "156620",
    "end": "162570"
  },
  {
    "text": "they involve a lot of header overhead for repetitive face to be requests you're collaborating on a shared like",
    "start": "162570",
    "end": "167580"
  },
  {
    "text": "database probably in any credit app right so crud is collaboration you're",
    "start": "167580",
    "end": "173010"
  },
  {
    "text": "all changing some shared state that you can see but you didn't traditionally have a great way to basically send updates to the client so push out",
    "start": "173010",
    "end": "178260"
  },
  {
    "text": "connected clients some updates about what's happened so part of the importance of sending clients",
    "start": "178260",
    "end": "183570"
  },
  {
    "text": "notifications is sending clients notifications that's kind of part of part of what makes things feel like in a",
    "start": "183570",
    "end": "188640"
  },
  {
    "text": "real time collaborative and what's nice is that phoenix channels make it easy to do collaboration but they do it by",
    "start": "188640",
    "end": "194910"
  },
  {
    "text": "providing this nice abstraction that could have existed before WebSockets or any of sort of newer technologies my",
    "start": "194910",
    "end": "201390"
  },
  {
    "text": "whole point in going through all that is I wanted to just point out it's the abstraction that matters back in 1990 in",
    "start": "201390",
    "end": "210000"
  },
  {
    "text": "1998 we had TLS we could have done HTTP streaming with TLS and at least for one",
    "start": "210000",
    "end": "216660"
  },
  {
    "text": "half of the communication that's exactly has exactly the same performance characteristics as WebSockets so like",
    "start": "216660",
    "end": "222150"
  },
  {
    "text": "you could have built the stuff that people are building in Phoenix now you in theory could have built right in 1998 and mostly been okay but there were that",
    "start": "222150",
    "end": "230220"
  },
  {
    "text": "made people building this sort of awesome stuff that's easy to build in phoenix pectin and that's because there weren't great abstractions we had like",
    "start": "230220",
    "end": "236820"
  },
  {
    "text": "comet but not in 98 anyway so the point is the abstraction makes it possible to",
    "start": "236820",
    "end": "242970"
  },
  {
    "text": "do lots of fun stuff and the thing I'm doing today is one of those things and phoenix channels are a great abstraction over this real-time communication so if",
    "start": "242970",
    "end": "251160"
  },
  {
    "text": "you happen to be telling people why phoenix is awesome please don't talk about the WebSockets part talk about the channels bit i guess so",
    "start": "251160",
    "end": "258450"
  },
  {
    "text": "i'm going to tell you a really dumb story that gives a good insight into what it means to think properly about building collaborative software just so",
    "start": "258450",
    "end": "266460"
  },
  {
    "text": "you can also see how not to do it so we had a custom I worked ran a consultancy for like a decade and we had a potential customer get in touch with us because a",
    "start": "266460",
    "end": "272790"
  },
  {
    "text": "guy we'd worked with before knew he saw them like driving off a cliff and he couldn't",
    "start": "272790",
    "end": "279419"
  },
  {
    "text": "convince them himself but he said okay well like just spend a few minutes talking to Josh and telling him what you're doing and so he got the guy on",
    "start": "279419",
    "end": "285539"
  },
  {
    "text": "the phone to me and he said I don't know why I tried to told me to call you but you know let me tell you were doing and it turned out that they were basically",
    "start": "285539",
    "end": "292139"
  },
  {
    "text": "building like collaborative software but with no abstraction around what collaboration meant and they were gonna run into a huge problem because it turns",
    "start": "292139",
    "end": "297660"
  },
  {
    "text": "out you have conflicts and they weren't going to deal with them so yeah so he said to me on the phone well we have",
    "start": "297660",
    "end": "303150"
  },
  {
    "text": "this one small bug maybe this is what he's talking about so has this ever been actually an accurate statement like in ever anytime",
    "start": "303150",
    "end": "309539"
  },
  {
    "text": "it's not there's not a small bug so didn't rate they didn't know that their problem was hairy at all they thought we",
    "start": "309539",
    "end": "315509"
  },
  {
    "text": "have this one tiny bug when we're done we can ship this thing we worked on for six months and I told them no you actually have to throw it all the way so",
    "start": "315509",
    "end": "321509"
  },
  {
    "text": "once they explained what they were doing I realized like no you've completely modeled this wrong and like you they",
    "start": "321509",
    "end": "327720"
  },
  {
    "text": "basically hired a very cheap contractors to do it and they just got something done so there's always being dramatic",
    "start": "327720",
    "end": "333840"
  },
  {
    "text": "when I told them that it was never going to work the way they'd built it because this is not a distributed system you're",
    "start": "333840",
    "end": "338970"
  },
  {
    "text": "being a little when you're being dramatic we just have a couple of people on the internet doing stuff together but",
    "start": "338970",
    "end": "346260"
  },
  {
    "text": "that's kind of the point so anyway it was a couple people that were interacting with like the shared bit of state related to like just quoting a",
    "start": "346260",
    "end": "353090"
  },
  {
    "text": "solar panel installation like plan right so it was essentially a sales pipeline",
    "start": "353090",
    "end": "359490"
  },
  {
    "text": "for solar panel installers it worked perfectly except for any time there were conflicts and then like who knew who won",
    "start": "359490",
    "end": "366060"
  },
  {
    "text": "right and they would get out of sync and there was no real good way for them to sort of solve it but ultimately I was able to help them",
    "start": "366060",
    "end": "372479"
  },
  {
    "text": "get a solid product but the point is you have to think about these things and just like we're going to use WebSockets and collaboration is not a good way to",
    "start": "372479",
    "end": "378180"
  },
  {
    "text": "think about them so you have to build systems that are designed their own collaboration from the get-go if you're going to have a happy time and I wrote a",
    "start": "378180",
    "end": "384810"
  },
  {
    "text": "lot about like academic things that I'm honestly not qualified to tell people about like Leslie Lamport and total",
    "start": "384810",
    "end": "389940"
  },
  {
    "text": "ordering and happened before and time stamps and vector clocks and all that stuff but I would I would probably",
    "start": "389940",
    "end": "396360"
  },
  {
    "text": "butcher it but I'm still glad to talk about it just not on this stage anyway I",
    "start": "396360",
    "end": "401550"
  },
  {
    "text": "do read about this stuff a lot anyway so the point is these are like the sorts of",
    "start": "401550",
    "end": "406560"
  },
  {
    "text": "things that you need to be thinking about when you're going to build collaborative software you're not you're going to have you're",
    "start": "406560",
    "end": "412080"
  },
  {
    "text": "going to run into problem so like a really solid example is in a chat log so the stereotypical example for Phoenix",
    "start": "412080",
    "end": "417330"
  },
  {
    "text": "Webb Phoenix channels is let's real chat and the way we do it is we have a forum we have some JavaScript and you type the",
    "start": "417330",
    "end": "423720"
  },
  {
    "text": "thing you press ENTER and it puts it on your DOM and then it sends out a message to the channel and then anybody that",
    "start": "423720",
    "end": "428760"
  },
  {
    "text": "receives the channel message also puts the same message on their Dom but like you can look at this and say okay well",
    "start": "428760",
    "end": "434190"
  },
  {
    "text": "like there's no guarantee about the ordering being the same like on these two browsers based on the way that's done so that's problematic so the whole",
    "start": "434190",
    "end": "443100"
  },
  {
    "text": "point is it's about your you should think of a chat log as like this collaborative thing like we have this log and we're all collaborating on this",
    "start": "443100",
    "end": "449460"
  },
  {
    "text": "thing and so if we are then it should be the same and so if it's not the same then in chat you can probably get away",
    "start": "449460",
    "end": "455580"
  },
  {
    "text": "with it for the most part but it's still wrong anyway so we can move on from",
    "start": "455580",
    "end": "462300"
  },
  {
    "text": "there and talk about an application that I built in elm in Phoenix and I'll show it off in a little bit it exists as a kind of introduction to doing real-time",
    "start": "462300",
    "end": "469170"
  },
  {
    "text": "collaboration with these two amazing tools I think both Elliman and elixir and Phoenix are really really nice",
    "start": "469170",
    "end": "475830"
  },
  {
    "text": "I call this think a looter and you can find it on github at Nooter that's my nickname because I was 14 once I thought",
    "start": "475830",
    "end": "481230"
  },
  {
    "text": "it was hilarious and then a collude er as in collusion alright so it's an app that has two",
    "start": "481230",
    "end": "487200"
  },
  {
    "text": "parts there's the elm piece which is the front end and this is actually where I built the app initially I did all the",
    "start": "487200",
    "end": "493980"
  },
  {
    "text": "data modeling do all the planning and then there's a Phoenix piece which is an umbrella app which if you don't know",
    "start": "493980",
    "end": "499110"
  },
  {
    "text": "Phoenix just means that it's multiple applications that kind of sit under one mega repo and work together and the",
    "start": "499110",
    "end": "505230"
  },
  {
    "text": "Phoenix part is just a really thin shim for the Phoenix channels which are kind of like that that collaborative",
    "start": "505230",
    "end": "511700"
  },
  {
    "text": "abstraction to send in messages to what's known as let me just ask like who",
    "start": "511700",
    "end": "517770"
  },
  {
    "text": "here knows in much or much about elixir Erlang who knows nothing about elixir Lane okay so in lecture knurling there",
    "start": "517770",
    "end": "525420"
  },
  {
    "text": "are these things called gem servers and they basically are like these sort of processes that run on their own that",
    "start": "525420",
    "end": "531540"
  },
  {
    "text": "have you can send the messages and they have like some state that they can manage and so you can represent things",
    "start": "531540",
    "end": "537900"
  },
  {
    "text": "that live collaboratively with gin servers and so have this gin server protocol that represents like a song because you're all working",
    "start": "537900",
    "end": "543960"
  },
  {
    "text": "collaboratively on the same song so there's one actor living and you're all sending in messages and he's talking to all of you and then the actual web piece because",
    "start": "543960",
    "end": "552210"
  },
  {
    "text": "that's all non web right that's just software and then there's the web piece that just like makes it easy to send messages in and out of it from which is",
    "start": "552210",
    "end": "559140"
  },
  {
    "text": "I think a thing that we don't do enough separation of like the business layer from like the web layer and I always",
    "start": "559140",
    "end": "565740"
  },
  {
    "text": "want to encourage people to do that because your web interface should just like literally just to be a web",
    "start": "565740",
    "end": "571020"
  },
  {
    "text": "interface into an application that's running anyway so that's sort of how this ends up being modeled I'll talk more about that later so I'm on a bit of",
    "start": "571020",
    "end": "578610"
  },
  {
    "text": "crusade to bring these two worlds together I think they're both really amazing apart and they're doubly amazing",
    "start": "578610",
    "end": "583860"
  },
  {
    "text": "together and so when I was actually getting in-depth into this project I tweeted out something that just was you know sort of",
    "start": "583860",
    "end": "590460"
  },
  {
    "text": "passionate about at the time that expressed how I felt pretty well and so said yeah elm and MDL which is a",
    "start": "590460",
    "end": "597060"
  },
  {
    "text": "material design library for Elm and Phoenix is like the closest I've ever felt to come to having actual superpowers and that's just because I",
    "start": "597060",
    "end": "604620"
  },
  {
    "text": "built something that going into I thought might be moderately complicated to like get exactly right all the UX",
    "start": "604620",
    "end": "610170"
  },
  {
    "text": "concerns and then it just wasn't at all complicated and it worked first try and that happens plenty but in this",
    "start": "610170",
    "end": "615180"
  },
  {
    "text": "particular case I was concerned about it so it was like how I always dreamt programming could be if only it weren't",
    "start": "615180",
    "end": "621390"
  },
  {
    "text": "awful a lot of the time anyway so I am a full-on fanboy for elixir Phoenix and",
    "start": "621390",
    "end": "626730"
  },
  {
    "text": "elm that's because they make my life as a programmer fantastic so if you take nothing else away from the talk fiddle",
    "start": "626730",
    "end": "632850"
  },
  {
    "text": "with one or both of these and if you really want to go hog wold make them work together because it's not hard and I'll show you",
    "start": "632850",
    "end": "638900"
  },
  {
    "text": "so I'll demo that app pretty soon now but first I want to talk about them what it does is who here knows anything at",
    "start": "638900",
    "end": "645360"
  },
  {
    "text": "all about Elm okay so about half the people of C know or know about elm and haven't so I'm gonna give you a",
    "start": "645360",
    "end": "651270"
  },
  {
    "text": "high-level overview of how your elm applications work so this is like an elm",
    "start": "651270",
    "end": "656280"
  },
  {
    "text": "application in general and so that a little bit in the middle you can think of it the run time and you as the programmer provide basically these these",
    "start": "656280",
    "end": "663000"
  },
  {
    "text": "green boxes you provide you also provide the types of what your model is like your applications model and put your",
    "start": "663000",
    "end": "668700"
  },
  {
    "text": "messages your messages would be like all the things that can happen in my application so you have your knit where",
    "start": "668700",
    "end": "675150"
  },
  {
    "text": "you say like this is the initial state of the world you have your update which will be handed by the runtime both any messages",
    "start": "675150",
    "end": "680790"
  },
  {
    "text": "that come in and the current state of the model and then you'll like return a new model and you might have that second",
    "start": "680790",
    "end": "686519"
  },
  {
    "text": "command message is side effects so like things that you want to happen in the world maybe you want an HTTP request to",
    "start": "686519",
    "end": "692010"
  },
  {
    "text": "happen or something to go off a WebSocket and then that'll like come back into runtime and now your model has",
    "start": "692010",
    "end": "698160"
  },
  {
    "text": "been replaced with the new model that you spit out and then you have the view which takes the model as its argument",
    "start": "698160",
    "end": "704070"
  },
  {
    "text": "and produces something that that HTML message is hTML is the type that's",
    "start": "704070",
    "end": "709139"
  },
  {
    "text": "provided and message like is the message type that you describe so it's parameterised over that basically means it can emit the messages that you've",
    "start": "709139",
    "end": "715889"
  },
  {
    "text": "defined that's that's all that means it's just a type so anyway the model goes through the view function and produces some HTML that can produce",
    "start": "715889",
    "end": "722910"
  },
  {
    "text": "messages and so that's for like when the user Sally here in the bottom right does stuff but then also stuff can happen",
    "start": "722910",
    "end": "729810"
  },
  {
    "text": "that is not user initiated right so like the ticking of time or something comes in on a WebSocket basically things that",
    "start": "729810",
    "end": "734970"
  },
  {
    "text": "the user didn't do but still happened and those are subscriptions so you set up subscriptions and they also produce",
    "start": "734970",
    "end": "740459"
  },
  {
    "text": "messages so you Matt you have subscriptions that say like hey when stuff comes down on the WebSocket take the raw data like decode it this way and",
    "start": "740459",
    "end": "747089"
  },
  {
    "text": "then create a message that uses that decoded thing and send that into my update function anyway so that's sort of",
    "start": "747089",
    "end": "753079"
  },
  {
    "text": "the whole of Elm and it may seem complicated but in fact it is not very complicated at all when you get into it",
    "start": "753079",
    "end": "758639"
  },
  {
    "text": "all right so you totally understand Dell now here is the Elm side of kelud err",
    "start": "758639",
    "end": "765139"
  },
  {
    "text": "it's not like the most amazing saying here but this is the Elm application that I built uses Web Audio in",
    "start": "765960",
    "end": "771690"
  },
  {
    "text": "background and this is not doing anything calamity this is just like differently is producing JavaScript when",
    "start": "771690",
    "end": "778080"
  },
  {
    "text": "we make script intersecting you can take notes and all that jazz so the reason that I felt like I had superpowers is",
    "start": "778080",
    "end": "784020"
  },
  {
    "text": "because I've wanted to build something like that for a long time but I want to put any time into it like it's not like it was important to my life it was just",
    "start": "784020",
    "end": "789930"
  },
  {
    "text": "a thing that I wanted to do because I have a lot of I have like some games that I want to build that need that is a sort of fundamental building block but",
    "start": "789930",
    "end": "797340"
  },
  {
    "text": "like I knew the JavaScript part was going to be terrible and that I would be miserable and the collaboration story",
    "start": "797340",
    "end": "802530"
  },
  {
    "text": "was awful before I dealt with phoenix channels and i didn't really want to do it and so what i could have built i",
    "start": "802530",
    "end": "809310"
  },
  {
    "text": "could have built that at any time since 98 but i was unwilling to go through the trouble and since these things are",
    "start": "809310",
    "end": "814410"
  },
  {
    "text": "awesome i was not only willing to go through the trouble i was excited about doing it I did it about I could have realistically done in a few hours",
    "start": "814410",
    "end": "820320"
  },
  {
    "text": "I did over a couple of days because I was kind of taking notes as I went because I produce a training for people",
    "start": "820320",
    "end": "827150"
  },
  {
    "text": "anyway so let's look at how the elm app itself is built all Elm apps tend to look the same at the top level roughly",
    "start": "827150",
    "end": "833640"
  },
  {
    "text": "not even russet like almost all of them look like this or some minor minor variant so here we've got a program we",
    "start": "833640",
    "end": "840690"
  },
  {
    "text": "say hey I'm going to produce a program that's all that thing at the top means that's like telling the the runtime how to wire stuff up I give it my initial",
    "start": "840690",
    "end": "847350"
  },
  {
    "text": "stuff and so the init on the left that sort of thing in parentheses is a 2-tuple",
    "start": "847350",
    "end": "852420"
  },
  {
    "text": "so the thing on the left is my initial model I don't think I should have necessarily called it in it in this case",
    "start": "852420",
    "end": "858360"
  },
  {
    "text": "but and then the second part is what are my initial like outbound messages or outbound commands rather that I want the",
    "start": "858360",
    "end": "863430"
  },
  {
    "text": "wrong time to do tit for me then we have my update which is just here's the function once you have a message here's",
    "start": "863430",
    "end": "868740"
  },
  {
    "text": "the function to route it through along with my model then I tell it how to render the view and then I give it a list of subscriptions and these actually",
    "start": "868740",
    "end": "874590"
  },
  {
    "text": "are dependent on the model you can do some neat stuff because of that it's not too important right now though let's",
    "start": "874590",
    "end": "879870"
  },
  {
    "text": "talk about the model we have some types we should talk about first song is a dictionary with integer keys and tracks",
    "start": "879870",
    "end": "886440"
  },
  {
    "text": "for values realistically this might should be an array but I didn't want to",
    "start": "886440",
    "end": "891540"
  },
  {
    "text": "have to worry about like what happens if something like went out from under me because I there's not a really good",
    "start": "891540",
    "end": "898470"
  },
  {
    "text": "reason actually to have had that concerned by the point is that I did model it as a dictionary with a new yorkese it's not broken so I didn't",
    "start": "898470",
    "end": "904560"
  },
  {
    "text": "wanna go fix it so this is the data structure that represents like all of the stuff that you saw in the UI or the",
    "start": "904560",
    "end": "909839"
  },
  {
    "text": "song part of what you saw in the UI track is just a record it contains a note so like what note do I play on this",
    "start": "909839",
    "end": "915180"
  },
  {
    "text": "line of that interface and it also contains some slots and those are all the things that can either be on or off",
    "start": "915180",
    "end": "920610"
  },
  {
    "text": "and so when the sort of playhead goes through them if they're on it produces the note specified and then slots again",
    "start": "920610",
    "end": "926519"
  },
  {
    "text": "is a dictionary with integer keys of boolean so like is the slot on or not that's all that means",
    "start": "926519",
    "end": "933560"
  },
  {
    "text": "so then there's the model there's a whole lot of fields at the top here up through song that are completely",
    "start": "934490",
    "end": "940380"
  },
  {
    "text": "irrelevant to anything except for setting up the initial kind of music part on the JavaScript side so we'll completely ignore them and actually some",
    "start": "940380",
    "end": "946709"
  },
  {
    "text": "of those should like not be there anyway they still need to be there but then we have like our song we know what the current note is and that's just like the",
    "start": "946709",
    "end": "952440"
  },
  {
    "text": "pass through the that's where the playhead is essentially we have the total notes this is a silly field that",
    "start": "952440",
    "end": "958019"
  },
  {
    "text": "ultimately shouldn't need but again I haven't needed to remove it yet so not that important whether or not reposed",
    "start": "958019",
    "end": "963620"
  },
  {
    "text": "what beats per minute we're playing at that mvl bit is just stuff that is used",
    "start": "963620",
    "end": "969000"
  },
  {
    "text": "by the material design library that I use sort of to manage internal state and then we have these last two bits and I'm",
    "start": "969000",
    "end": "974970"
  },
  {
    "text": "going to get to them a little bit in more detail later but like when you saw the modal come up where we were changing the note on the track this says like",
    "start": "974970",
    "end": "982410"
  },
  {
    "text": "track being edited you may be editing a track if you are it'll be in just some integer which represents the key in the",
    "start": "982410",
    "end": "989670"
  },
  {
    "text": "in the dict for that track that you're editing orally nothing if you're not currently editing one and then a chosen",
    "start": "989670",
    "end": "994889"
  },
  {
    "text": "note you know it's like a multi-step flow so I represented sort of that wizard as these two pieces of data kind",
    "start": "994889",
    "end": "1001610"
  },
  {
    "text": "of mixed together which is the part that's not great so the chosen note was like when you pick the first part of the wizard so it may be a string or maybe",
    "start": "1001610",
    "end": "1008600"
  },
  {
    "text": "nothing anyway so that's the type of the model and this is an instance of the",
    "start": "1008600",
    "end": "1015800"
  },
  {
    "text": "model so it's just a record of that type that has reasonable starting values it's all that first bit up till song gets",
    "start": "1015800",
    "end": "1021319"
  },
  {
    "text": "filled in by the JavaScript on the other side and a few things I have an initial song it's super basic it's empty with",
    "start": "1021319",
    "end": "1027350"
  },
  {
    "text": "two tracks starting point for the playhead is zero total notes is some number it's not important",
    "start": "1027350",
    "end": "1033250"
  },
  {
    "text": "we are playing we have 128 beats per minute we have an initial material model and then we're not editing a track and",
    "start": "1033250",
    "end": "1038890"
  },
  {
    "text": "there's no chosen note in the wizard so I pre populate the song as just two tracks each with a fifth octave a note",
    "start": "1038890",
    "end": "1045670"
  },
  {
    "text": "and 20 false slots right so this is if you haven't seen elm code this is fairly",
    "start": "1045670",
    "end": "1051460"
  },
  {
    "text": "straight forward elm code right several notes as an integer it happens to be twenty initial song we start out with an empty dict we insert with key zero a",
    "start": "1051460",
    "end": "1058990"
  },
  {
    "text": "track and we insert with key one a track and then a track is MIDI note 69 which",
    "start": "1058990",
    "end": "1064450"
  },
  {
    "text": "is the fifth octave a there's last two bits aren't terribly important because I don't let you edit them and then the",
    "start": "1064450",
    "end": "1069940"
  },
  {
    "text": "track slots okay so I have like zero through total notes minus one so I have 20 of these things and that lifts up",
    "start": "1069940",
    "end": "1075700"
  },
  {
    "text": "fold L right it's just folding across that initial list and accumulating into an empty dict a new dict with that slot",
    "start": "1075700",
    "end": "1082390"
  },
  {
    "text": "ID and false so that one a little bit I probably could have made a little bit",
    "start": "1082390",
    "end": "1087520"
  },
  {
    "text": "clearer but it's not confusing to me anyway it's kind of important to be able",
    "start": "1087520",
    "end": "1092740"
  },
  {
    "text": "to do stuff to your model and this is where updates come in so elm is an immutable language because otherwise I wouldn't use it so how do you change",
    "start": "1092740",
    "end": "1099490"
  },
  {
    "text": "something in an immutable language so we're not confused right it's the same thing as I mentioned our language in",
    "start": "1099490",
    "end": "1105370"
  },
  {
    "text": "service or elixir gin servers they have they're the same situation elixir darling or immutable languages so like",
    "start": "1105370",
    "end": "1110440"
  },
  {
    "text": "the whole trick is you have an initial state and when a message comes in you produce a new thing that represents the",
    "start": "1110440",
    "end": "1116320"
  },
  {
    "text": "new state and then your function basically like wraps that and passes it on to the next piece which is generally a loop so you don't change anything you",
    "start": "1116320",
    "end": "1122860"
  },
  {
    "text": "just call yourself with different arguments and then you have tail call optimization and things are okay and things don't blow up anyway so just a",
    "start": "1122860",
    "end": "1129790"
  },
  {
    "text": "little primer on how that works in both genders and now I'm glad to talk about it more detail later so you can dig your",
    "start": "1129790",
    "end": "1135700"
  },
  {
    "text": "application is constantly folding or like reducing over incoming events through this update function using the",
    "start": "1135700",
    "end": "1142210"
  },
  {
    "text": "initial model as the initial State that's all that this whole trick is or going to give message as if you know it",
    "start": "1142210",
    "end": "1148090"
  },
  {
    "text": "looks are like a gen server cast and update is like the handle cast function so what kind of things happen in our",
    "start": "1148090",
    "end": "1153280"
  },
  {
    "text": "apps this is the whole list it's awful and big and flat and seems overwhelming if you just look at it it's kind of a",
    "start": "1153280",
    "end": "1158890"
  },
  {
    "text": "grab bag of different stuff I'll break it out into some smaller pieces and we'll talk about those so this is the",
    "start": "1158890",
    "end": "1164140"
  },
  {
    "text": "Web Audio that this is just some piece that I created from an exist open-source project that did the initial sort of web audio setup because I didn't",
    "start": "1164140",
    "end": "1169660"
  },
  {
    "text": "want to figure it out from the get-go and it was already done and it seemed great so that's why I said this part wasn't terribly important because they're just in JavaScript on the other",
    "start": "1169660",
    "end": "1175810"
  },
  {
    "text": "side that interacts with these updates and these messages and like sets the stage so that you can play music nicely",
    "start": "1175810",
    "end": "1180880"
  },
  {
    "text": "like loads in a sound font as one example and starts a web audio object so",
    "start": "1180880",
    "end": "1187870"
  },
  {
    "text": "not hugely important but what happens ultimately is we find out if we can use",
    "start": "1187870",
    "end": "1192970"
  },
  {
    "text": "OGG we go load the sound file we ask to load the sound fonts we're told whether or not that worked we ask it to play",
    "start": "1192970",
    "end": "1198070"
  },
  {
    "text": "notes etc these go reports into the JavaScript runtime which you can ports are like how you do Interop and that's",
    "start": "1198070",
    "end": "1206470"
  },
  {
    "text": "sort of how this works in a lecture there's also ports it's the same thing I guess how you doing off with other things one really cool part of ports is",
    "start": "1206470",
    "end": "1214690"
  },
  {
    "text": "that since this is a strongly typed language they do something that they call border control in elm which makes",
    "start": "1214690",
    "end": "1219880"
  },
  {
    "text": "sure that the data you can't send anything across report that the port doesn't know how to deal with so if you",
    "start": "1219880",
    "end": "1225730"
  },
  {
    "text": "have a board that says I turn a string into messages and you say ah hi yes I'm going to send a one across that port it",
    "start": "1225730",
    "end": "1230920"
  },
  {
    "text": "stops on the JavaScript side so that's the board of control right there's you never on the Elm side have to deal with anything being like maybe not the right",
    "start": "1230920",
    "end": "1237880"
  },
  {
    "text": "shape like if you're running JavaScript adversely guarantee you have 8 million lines in your codebase they're like well",
    "start": "1237880",
    "end": "1243070"
  },
  {
    "text": "I told people to give me an integer here but what if they gave me an array of three Nils or something stupid right so",
    "start": "1243070",
    "end": "1248770"
  },
  {
    "text": "anyway so all this stuff basically lets us make noise in the browser so we want",
    "start": "1248770",
    "end": "1255130"
  },
  {
    "text": "to talk to Phoenix so we have a message that tells us hey I'd like you to",
    "start": "1255130",
    "end": "1260200"
  },
  {
    "text": "connect the socket and then we say hey I got a message back and this is managed by a library that I use and then receive",
    "start": "1260200",
    "end": "1267220"
  },
  {
    "text": "state says like here's your new state your new model that the server gave us and it's just a json encoded value when",
    "start": "1267220",
    "end": "1273370"
  },
  {
    "text": "we get it from JavaScript and then we do decoding into our actual types on our side anyway I did write there's in in",
    "start": "1273370",
    "end": "1283030"
  },
  {
    "text": "Phoenix channels there's also distinct called presence so you can know who's on the same channel as you",
    "start": "1283030",
    "end": "1288070"
  },
  {
    "text": "I wrote support for it but I don't use it here here yet I would expect ultimately to like be able to say these are the three people that are playing",
    "start": "1288070",
    "end": "1293980"
  },
  {
    "text": "with a song with you okay so the actual app that you have that's doing stuff not the other bits we talked about playing",
    "start": "1293980",
    "end": "1299260"
  },
  {
    "text": "music or talking to fee but the part that you know we saw standalone is this right so we have the",
    "start": "1299260",
    "end": "1305440"
  },
  {
    "text": "ticking of time represented to like that just tells us hey the app ticked like do",
    "start": "1305440",
    "end": "1311200"
  },
  {
    "text": "whatever the next step is we have check note which just lets you pass for a",
    "start": "1311200",
    "end": "1316630"
  },
  {
    "text": "given track ID and slot ID whether you want it to be on or off we have set note",
    "start": "1316630",
    "end": "1322750"
  },
  {
    "text": "which lets you choose for it is badly named let you basically say this track should be a third octave a or a d7 or",
    "start": "1322750",
    "end": "1329470"
  },
  {
    "text": "something and MIDI note is its own type we have add track which says like I'd like another line in the sort of song we",
    "start": "1329470",
    "end": "1336790"
  },
  {
    "text": "have set BPM which is how you change the beats per minute toggle Paul's turns it off are on set",
    "start": "1336790",
    "end": "1342310"
  },
  {
    "text": "editing track choose a note and choose off divert all three kind of combined part of that wizard that we saw and that's a bad model I'll talk about that",
    "start": "1342310",
    "end": "1348250"
  },
  {
    "text": "further i delivering this to the update function the drives all this so can i better read this again so this is not",
    "start": "1348250",
    "end": "1355630"
  },
  {
    "text": "unusual like in elm it's encouraged to have these big flat update functions just because in practice it's not",
    "start": "1355630",
    "end": "1362820"
  },
  {
    "text": "problematic there's a lot of code here it's not complicated to work with this code like I've never ever ever gone into",
    "start": "1362820",
    "end": "1369310"
  },
  {
    "text": "this code base and gone like now what does this part like it's really really straightforward so we'll walk through it",
    "start": "1369310",
    "end": "1374410"
  },
  {
    "text": "in much smaller chunks because legibility okay so like initialize audio context just says like we send the thing",
    "start": "1374410",
    "end": "1380110"
  },
  {
    "text": "out a port that says like please make an object for me in JavaScript and then response all your context is then",
    "start": "1380110",
    "end": "1385240"
  },
  {
    "text": "telling me oh cool you have one here this request dog enabled that just lets me know whether or not I should use the",
    "start": "1385240",
    "end": "1391050"
  },
  {
    "text": "auxiliary soundfont request load fonts you tell them like here's where the",
    "start": "1391050",
    "end": "1396400"
  },
  {
    "text": "fonts are please go get them and then it tells us whether it worked or not and then request play note says hey right",
    "start": "1396400",
    "end": "1401560"
  },
  {
    "text": "now like play this note that's it and then there's very thin JavaScript on the other side that knows how to deal with all this it's maybe 40 lines of code and",
    "start": "1401560",
    "end": "1408070"
  },
  {
    "text": "could probably be less and then I get find out whether I played the note or not on so they don't give a crap like it",
    "start": "1408070",
    "end": "1414040"
  },
  {
    "text": "works so bad I could care and then toggle Paul's right all this does it",
    "start": "1414040",
    "end": "1419080"
  },
  {
    "text": "takes our model and it says like take the pause field and set it to the opposite of what it is right and then",
    "start": "1419080",
    "end": "1425110"
  },
  {
    "text": "that bang empty list thing so the return value of this let me go back to here so",
    "start": "1425110",
    "end": "1431560"
  },
  {
    "text": "I the talking about syntax because I'm sorry other people here have not seen ohm there's an update function that takes",
    "start": "1431560",
    "end": "1438290"
  },
  {
    "text": "two arguments message and model and returns a third saying and the types the",
    "start": "1438290",
    "end": "1444530"
  },
  {
    "text": "type of message is this upper case message type of model is a separate case model and those are just things that I defined and then it returns this to",
    "start": "1444530",
    "end": "1451460"
  },
  {
    "text": "topple write the model and then some commands that are that will be mapped back into messages so that's that's what",
    "start": "1451460",
    "end": "1457640"
  },
  {
    "text": "the return value is so here you see I'm returning two tuples and that's seems reasonable right because that's the sort of thing I'm supposed to return when you",
    "start": "1457640",
    "end": "1463370"
  },
  {
    "text": "come over here I've got this other thing I'm doing with it's like bang at the list and all that is is some shorthand",
    "start": "1463370",
    "end": "1468470"
  },
  {
    "text": "people get confused when they see it because they should it's not like well-documented often it just says like",
    "start": "1468470",
    "end": "1473630"
  },
  {
    "text": "here's my model and also I don't want to do anything or here's my model and here's my list of commands but that way you don't have to write a two tupple",
    "start": "1473630",
    "end": "1479780"
  },
  {
    "text": "because it would be like three lines long if you want to follow coding standards anyway so it's it's silly",
    "start": "1479780",
    "end": "1484850"
  },
  {
    "text": "shorthand all right so then we have like tick sub which is a list of",
    "start": "1484850",
    "end": "1489950"
  },
  {
    "text": "subscriptions so it takes our model it says if we're paused then I'm not going to like do anything when times passing",
    "start": "1489950",
    "end": "1497200"
  },
  {
    "text": "but if we're not paused then every minute times the interval for the model",
    "start": "1497200",
    "end": "1502820"
  },
  {
    "text": "which is one over the beats per minute we're going to send a tick so basically that just sends ticks at the appropriate timing based on the BPM setting and then",
    "start": "1502820",
    "end": "1510350"
  },
  {
    "text": "when we tick I don't care about the time like that's what that underscore means so there tick also gives me like here's",
    "start": "1510350",
    "end": "1515600"
  },
  {
    "text": "the time but I don't care about the time at all I just care that we ticked so I take our model and I pass it through that's a pipe you'll see these in both",
    "start": "1515600",
    "end": "1522080"
  },
  {
    "text": "the licks R and L m and all it does is it passes in this case the last argument to that function is passed as the thing",
    "start": "1522080",
    "end": "1529760"
  },
  {
    "text": "that you're piping through it in lick sirs case it's the first argument but those there's various reasons for them to be different so I have this update",
    "start": "1529760",
    "end": "1537200"
  },
  {
    "text": "notes function I'm just passing through to the model and all it does it says hey take the current note incremented by 1",
    "start": "1537200",
    "end": "1543680"
  },
  {
    "text": "and in modulo total it's right because we want to wrap back around and then we have our command that takes our model",
    "start": "1543680",
    "end": "1548900"
  },
  {
    "text": "and request some notes to be played and so what we do is we go through the get notes function that says like here's where the playhead is what note should",
    "start": "1548900",
    "end": "1554810"
  },
  {
    "text": "be played right now based on the state of the system and then go ahead and map that through a list of commands that ask JavaScript to play that note check note",
    "start": "1554810",
    "end": "1563000"
  },
  {
    "text": "just takes the model and updates the song I updating the track with the checked",
    "start": "1563000",
    "end": "1569640"
  },
  {
    "text": "slot but whatever you checked and then it actually call this check note function which actually is sending stuff",
    "start": "1569640",
    "end": "1579630"
  },
  {
    "text": "out over the over the WebSocket piece over the Phoenix Channel so that's maybe moderately confusing but basically I get",
    "start": "1579630",
    "end": "1586380"
  },
  {
    "text": "my new model and then I'm like well I check the note and here's like the new stuff and here's what to tell people I checked",
    "start": "1586380",
    "end": "1592140"
  },
  {
    "text": "similarly with set note which sets the the note for the track I do the same thing I update my model and then I have",
    "start": "1592140",
    "end": "1597450"
  },
  {
    "text": "the set note function that's just like produces the outbound message for the Phoenix channels ad track fairly",
    "start": "1597450",
    "end": "1604020"
  },
  {
    "text": "straightforward you take the dictionary you insert a new track with the new track ID which will be the size of the",
    "start": "1604020",
    "end": "1609150"
  },
  {
    "text": "of the model or the size of the song which will be you know n plus 1 the length and then we we have ad track",
    "start": "1609150",
    "end": "1617580"
  },
  {
    "text": "again which does the thing it tells the Phoenix channel like I've added a track and then set editing track and choose",
    "start": "1617580",
    "end": "1624630"
  },
  {
    "text": "note just update those two bits for the wizard for changing stuff so that was",
    "start": "1624630",
    "end": "1631110"
  },
  {
    "text": "maybe lengthy but like it's a relatively complicated application and we went through all of the things that it can do in not only five seven minutes so I like",
    "start": "1631110",
    "end": "1638850"
  },
  {
    "text": "that it's pretty great I don't end up with a smooth of an architecture when I just like craps and JavaScript into an",
    "start": "1638850",
    "end": "1644940"
  },
  {
    "text": "editor I guess I haven't covered everything because there's also the choose octave piece this is the awful",
    "start": "1644940",
    "end": "1650730"
  },
  {
    "text": "piece this is actually up till now things were moderately okay like you see stuff and things seem cool but then like",
    "start": "1650730",
    "end": "1656340"
  },
  {
    "text": "when you're finished with the wizard this is the code to UM actually change the note for a given thing and there",
    "start": "1656340",
    "end": "1661890"
  },
  {
    "text": "ways I could have like made it made it smaller with like if maybe that with the default in the case of a nothing but",
    "start": "1661890",
    "end": "1668840"
  },
  {
    "text": "that wouldn't be the right solution the right solution is to model the thing differently and I'll talk about that later again but ultimately like we",
    "start": "1668840",
    "end": "1674880"
  },
  {
    "text": "assuming that our state was reasonable for to route because we could receive",
    "start": "1674880",
    "end": "1679920"
  },
  {
    "text": "this choose octave message technically without having attractive to be edited just based on our model there's no way",
    "start": "1679920",
    "end": "1685530"
  },
  {
    "text": "in the UI presently to produce those messages but there could be and so that's sort of why this is modeled",
    "start": "1685530",
    "end": "1690690"
  },
  {
    "text": "terribly but anyway we do end up updating it and we tell people that we updated it and then when we connect to",
    "start": "1690690",
    "end": "1698310"
  },
  {
    "text": "the socket we use this phoenix channel library to go ahead neck to the socket which returns us this so we start off with this channel so in",
    "start": "1698310",
    "end": "1704750"
  },
  {
    "text": "theory I don't have it wired up this way but in theory you could I got my server",
    "start": "1704750",
    "end": "1710000"
  },
  {
    "text": "supports arbitrarily many songs so like if you just looked at the URL and like took a good and like made it a shareable",
    "start": "1710000",
    "end": "1715670"
  },
  {
    "text": "URL then it'll support multiple songs being edited at the same time so that's what the channel name is is just",
    "start": "1715670",
    "end": "1721370"
  },
  {
    "text": "whatever whatever would be after the slash but it's hard code in this case and then we have like an initial phoenix socket so the phoenix socket in this",
    "start": "1721370",
    "end": "1728360"
  },
  {
    "text": "case that phoenix socket in it is just like data right it's not doing anything",
    "start": "1728360",
    "end": "1734180"
  },
  {
    "text": "it's just data and then what we do is we pass both those things through this phoenix about socket joint so we say",
    "start": "1734180",
    "end": "1739970"
  },
  {
    "text": "take this phoenix socket init which is data representing a socket and tell it",
    "start": "1739970",
    "end": "1745340"
  },
  {
    "text": "to join this collusion channel but it's not doing anything it's just returning well here's what the sockets data would look like afterwards and here's like a",
    "start": "1745340",
    "end": "1750560"
  },
  {
    "text": "command that you should send back out to the runtime if you want that to happen so i collect both of those and then i",
    "start": "1750560",
    "end": "1755930"
  },
  {
    "text": "also add this on collusion state so like when i get a new state from the server",
    "start": "1755930",
    "end": "1761020"
  },
  {
    "text": "pass it through my receive state message like our map it through this it's actually a function receive state that",
    "start": "1761020",
    "end": "1766820"
  },
  {
    "text": "takes a single argument that is like the model or a song rather and so it says",
    "start": "1766820",
    "end": "1771830"
  },
  {
    "text": "like when that happens given this collision channel name mapping into",
    "start": "1771830",
    "end": "1777020"
  },
  {
    "text": "receive state and it just gets a JSON value and we deal with it later anyway and then we update our socket the data",
    "start": "1777020",
    "end": "1783530"
  },
  {
    "text": "piece because otherwise it would get out of sync with what it should be and we use command map to send out the messages",
    "start": "1783530",
    "end": "1789440"
  },
  {
    "text": "to the runtime and command map says like there's this Phoenix piece that knows how to deal with all these messages that",
    "start": "1789440",
    "end": "1794570"
  },
  {
    "text": "I don't know how to deal with they're like sort of opaque to me and so all I do is I mapped them into a my message",
    "start": "1794570",
    "end": "1799940"
  },
  {
    "text": "type which is Phoenix message and I just hand them over to that update function when I get them and it'll take care of",
    "start": "1799940",
    "end": "1805670"
  },
  {
    "text": "like making stuff good now I have to think about it there's a lot of stuff that worked this way anyway when I do",
    "start": "1805670",
    "end": "1811160"
  },
  {
    "text": "receive a state ID decode it with a song decoder and if there was an error decoding the song then I just like don't",
    "start": "1811160",
    "end": "1816320"
  },
  {
    "text": "do anything but I happen to have put something out of the console but if there wasn't there the decoding the song I replace our song entirely with it so",
    "start": "1816320",
    "end": "1822410"
  },
  {
    "text": "like my entire collaboration strategy at this point is throw away all of our local song and replace it with this new",
    "start": "1822410",
    "end": "1827810"
  },
  {
    "text": "one any time we get a new one and for a small number of people this is fine but the point is I thought about it",
    "start": "1827810",
    "end": "1833889"
  },
  {
    "text": "anyway and so when we get the Phoenix message thing we just pass it through this Phoenix dot socket dot update and",
    "start": "1833889",
    "end": "1839320"
  },
  {
    "text": "whatever it gives us back we replace as our socket data and then we send out any commands that it told us that we should",
    "start": "1839320",
    "end": "1845379"
  },
  {
    "text": "send and again we map them back so that when the command comes back it's sort of wrapped by our Phoenix message type so",
    "start": "1845379",
    "end": "1850690"
  },
  {
    "text": "that we know to send it back to this component this is perhaps like maybe confusing if it's the first time you've",
    "start": "1850690",
    "end": "1856000"
  },
  {
    "text": "seen but it's not it's not confusing in practice anyway so that's all the update",
    "start": "1856000",
    "end": "1861340"
  },
  {
    "text": "stuff and we covered all kinds of stuff there between using an external UI library that kept internal state to",
    "start": "1861340",
    "end": "1867340"
  },
  {
    "text": "using like this Phoenix thing that keeps internal state to deal with Phoenix to doing all of our stuff to doing setup for music so there was a whole buncha",
    "start": "1867340",
    "end": "1873279"
  },
  {
    "text": "stuff that's happening but ended up being like five pages of code and all of the things were like two three lines",
    "start": "1873279",
    "end": "1878350"
  },
  {
    "text": "right so with the exception of that one terrible and anyway so let's look at the",
    "start": "1878350",
    "end": "1883899"
  },
  {
    "text": "view all the view does again to take your model and produce HTML that can produce messages and so here we have",
    "start": "1883899",
    "end": "1888909"
  },
  {
    "text": "your body which is the core of it and it takes our model I'm using this LM CSS thing to produce some Styles that's not",
    "start": "1888909",
    "end": "1894820"
  },
  {
    "text": "hugely important it's just a few minor things so I'd send those in just into the dom there with a style node just so",
    "start": "1894820",
    "end": "1902289"
  },
  {
    "text": "they'll apply you can sort of see here how you see divs and then you have a list of things that's a list of",
    "start": "1902289",
    "end": "1908320"
  },
  {
    "text": "attributes and then you have another list of things that's a list of children that's how all of the HTML stuff works in elm and then we have five pieces that",
    "start": "1908320",
    "end": "1916330"
  },
  {
    "text": "I've broken off into functions of their own view metadata view top controls view song editor view dialogue and view connection and so that's the sound a map",
    "start": "1916330",
    "end": "1922149"
  },
  {
    "text": "to the actual UI that you saw a second ago so that top fits the metadata then we have the top control the song editor the the dialogue you don't see unless",
    "start": "1922149",
    "end": "1928840"
  },
  {
    "text": "it's being shown and then the view connection button and so I just wanted to walk through those so this is all",
    "start": "1928840",
    "end": "1935139"
  },
  {
    "text": "that is right I have the current note and I show the models current note as a string I have paused whether or not it's paused and I just turn that into a",
    "start": "1935139",
    "end": "1940720"
  },
  {
    "text": "string so that's straightforward enough the top controls this BPM and I've actually modified this a little bit in",
    "start": "1940720",
    "end": "1946000"
  },
  {
    "text": "the demo that I'll be showing you but in general we have like this pause button and then we have this thing to edit the BPM and it's a little bit convoluted",
    "start": "1946000",
    "end": "1953590"
  },
  {
    "text": "honestly the button that render mdl bit this is because of the way that this material design library I use works it's",
    "start": "1953590",
    "end": "1960490"
  },
  {
    "text": "not hard to use but it's definitely not the best thing to show someone who hasn't cmlc known before and be like",
    "start": "1960490",
    "end": "1965799"
  },
  {
    "text": "look how easy this is because it's a little bit more complicated than it should be anyway but it's also like",
    "start": "1965799",
    "end": "1971230"
  },
  {
    "text": "is really nice so again on that text view so a button that on click emits a pataga paused message right and then if",
    "start": "1971230",
    "end": "1979000"
  },
  {
    "text": "they're like a laser one would assume whatever there we go and then on input",
    "start": "1979000",
    "end": "1987030"
  },
  {
    "text": "we set BPM we parse this string as an integer and then like if it was an",
    "start": "1987030",
    "end": "1992440"
  },
  {
    "text": "invalid string like you entered the word I don't know tofu that's not a number right so then",
    "start": "1992440",
    "end": "1999490"
  },
  {
    "text": "it turns it into 128 so it doesn't parse an integer it turns into 128 then it passes that 3 to set BPM and that's the",
    "start": "1999490",
    "end": "2005520"
  },
  {
    "text": "message that gets emitted anytime you change the input and then the song editor itself we have track rows so what",
    "start": "2005520",
    "end": "2011850"
  },
  {
    "text": "I do here is I take the song which again is a dictionary of tracks and I fold them through this function with I start",
    "start": "2011850",
    "end": "2019050"
  },
  {
    "text": "off with like this empty list because these are going to be the children of this table so start off here I fold the",
    "start": "2019050",
    "end": "2025679"
  },
  {
    "text": "dictionary of tracks through and I take the accumulator which starts off as this",
    "start": "2025679",
    "end": "2030929"
  },
  {
    "text": "and then I add on the list that has that the result of the view track function",
    "start": "2030929",
    "end": "2035940"
  },
  {
    "text": "with the model the track ID and the track and then the fold is going to get the track ID the track and the accumulator because I'm folding through",
    "start": "2035940",
    "end": "2042809"
  },
  {
    "text": "dictionary right so this is the key as the value of this accumulator anyway so that's how that works and then I",
    "start": "2042809",
    "end": "2049350"
  },
  {
    "text": "basically have this table and I just show the track rows as its children so that's like all of these are just that one tiny like value and then I have the",
    "start": "2049350",
    "end": "2056669"
  },
  {
    "text": "add track button that emits an Ontrack function our message and then viewing a single track which is the function that",
    "start": "2056669",
    "end": "2062730"
  },
  {
    "text": "we mapped over here right we would kind of pretend that this existed well here it is so it gets the model it gets the",
    "start": "2062730",
    "end": "2068280"
  },
  {
    "text": "track ID and it gets the track Binga and produces HTML and so we have like we",
    "start": "2068280",
    "end": "2076260"
  },
  {
    "text": "take the track slots we turn them into a list we map that list overview track cell which is this",
    "start": "2076260",
    "end": "2081480"
  },
  {
    "text": "function we'll see in a second we tell it what the current note is because it needs to be able to draw this black line if it is the current note and we tell",
    "start": "2081480",
    "end": "2088378"
  },
  {
    "text": "them what track idea is dealing with and so then we like add all of those track cells we add after this one initial TD",
    "start": "2088379",
    "end": "2094830"
  },
  {
    "text": "which is the view track metadata which is where you change the net thing and the reason I'm going through all this is",
    "start": "2094830",
    "end": "2099960"
  },
  {
    "text": "just to show you like it's real a complicated application but it's pretty understandable in all of its small parts and that's kind of a thing that always happens with them it's very",
    "start": "2099960",
    "end": "2106380"
  },
  {
    "text": "easy to understand in the small viewing attracts cell that's what one of these little squares is basically we have some",
    "start": "2106380",
    "end": "2113460"
  },
  {
    "text": "more styles right the current note if it's the current note so this class list will apply whatever this classes if this",
    "start": "2113460",
    "end": "2119609"
  },
  {
    "text": "is true and it won't if it's false so it'll be checked if it's on and it'll be current note of its current note so if its current note it'll have that black",
    "start": "2119609",
    "end": "2125369"
  },
  {
    "text": "bar on the right if it's checked it'll be red and then it's just a",
    "start": "2125369",
    "end": "2130440"
  },
  {
    "text": "checkbox that I've styled a particular way and then I say whether or not is checked and then when you click it it will get checked obviously and when you",
    "start": "2130440",
    "end": "2136230"
  },
  {
    "text": "check it it's going to emit this check note that knows the track ID in the slot ID that you just checked so that gets routed back up to our update function",
    "start": "2136230",
    "end": "2141539"
  },
  {
    "text": "then we deal with it viewing the track metadata we have this like MIDI table and we like basically figure out what",
    "start": "2141539",
    "end": "2147599"
  },
  {
    "text": "model what note you're showing and we share that as text and then when you click it it's going to start it's going to set editing track which will tell",
    "start": "2147599",
    "end": "2154049"
  },
  {
    "text": "trigger the dialogue to show this is the dialogue that so if the track is if there's no track being edited then like",
    "start": "2154049",
    "end": "2159509"
  },
  {
    "text": "the dialogue would show this about function but you actually don't ever open the dialogue without that anyway so you know whatever sees that but if there",
    "start": "2159509",
    "end": "2165690"
  },
  {
    "text": "is a track ID then when you show the dialogue it'll view the note the track notes user and then this is the track",
    "start": "2165690",
    "end": "2171059"
  },
  {
    "text": "notes user right it says like pick the note and so if you've chosen a note then you'll pick an octave next but if you",
    "start": "2171059",
    "end": "2176759"
  },
  {
    "text": "haven't chosen a note then you'll pick a note and so that's how these two things happen and then finally when you pick",
    "start": "2176759",
    "end": "2182279"
  },
  {
    "text": "the note we will just like emit that",
    "start": "2182279",
    "end": "2187319"
  },
  {
    "text": "message wherever it is but you shoot close on click that's a close pick the",
    "start": "2187319",
    "end": "2192329"
  },
  {
    "text": "note of the note buttons themselves have that sorry they're right over here now I don't show them anyway the note buttons",
    "start": "2192329",
    "end": "2198210"
  },
  {
    "text": "know what message is to emit and octave dialogue looks the same this is terrible anyway and then we have this view",
    "start": "2198210",
    "end": "2204779"
  },
  {
    "text": "connection right so if you're connected then it doesn't show anything it shows an empty div but if you're not connected it says hey click this I'll connect the socket and that will talk to the Phoenix",
    "start": "2204779",
    "end": "2211769"
  },
  {
    "text": "piece so that's the whole of the Elle map location it was a long discussion but you've seen a giant o map giant you've seen a relatively complex LF",
    "start": "2211769",
    "end": "2218039"
  },
  {
    "text": "ocation now then we have the Phoenix side of things and so I wanted to start off with like a preface I'm kind of dumb",
    "start": "2218039",
    "end": "2225930"
  },
  {
    "text": "I used to think I was smart but then it turns out now so I'm going to show you why that is I'm always telling people",
    "start": "2225930",
    "end": "2231509"
  },
  {
    "text": "like in the rails community or elsewhere like rails is not your app Phoenix is not your app right I've mentioned it earlier right it's just",
    "start": "2231509",
    "end": "2237270"
  },
  {
    "text": "this wrapper around your app so the some people do things like they take a",
    "start": "2237270",
    "end": "2242760"
  },
  {
    "text": "database before they have written any line of code that seems dumb to me I don't think you need persistence yet you",
    "start": "2242760",
    "end": "2248580"
  },
  {
    "text": "don't have anything anyway so imagine my dismay because I found myself doing this and these are Phoenix generators but",
    "start": "2248580",
    "end": "2253980"
  },
  {
    "text": "basically I just generated a model which already says like we're going to store this thing in the database we're going to have some tracks I don't need a",
    "start": "2253980",
    "end": "2259920"
  },
  {
    "text": "relational model for this there's a song like I don't need to do any joins I don't need to do any analysis of this",
    "start": "2259920",
    "end": "2265020"
  },
  {
    "text": "it's a freaking song and so I started off here and this was dumb and I",
    "start": "2265020",
    "end": "2272119"
  },
  {
    "text": "ultimately realized it was dumb because I tell other people that is dumb and so this commit existed but I very quickly",
    "start": "2272119",
    "end": "2278400"
  },
  {
    "text": "got rid of it my point though is the song is just this giant blob it's not relational data so why was I using a",
    "start": "2278400",
    "end": "2283859"
  },
  {
    "text": "relational database I killed this with fire and I replaced it with this so this is an umbrella F it has two pieces it has collusions which is the part that",
    "start": "2283859",
    "end": "2290760"
  },
  {
    "text": "deals with these collaborative songs existing conceptually and then we have the web piece which is like oh wouldn't",
    "start": "2290760",
    "end": "2296190"
  },
  {
    "text": "be nice if I could interact with them from the web so these are both OTP applications if you know what a lick if you know what those are but basically",
    "start": "2296190",
    "end": "2302550"
  },
  {
    "text": "there are these separate applications you can start and they happen to interact with each other anyway so we",
    "start": "2302550",
    "end": "2308580"
  },
  {
    "text": "have no TP app that runs some gen servers to manage state I'm going to go through this part fairly quickly but this is the exact same state as before",
    "start": "2308580",
    "end": "2314670"
  },
  {
    "text": "just I poured it very mechanically from Elm to elixir I'm going to build a thing that can do this automatically but",
    "start": "2314670",
    "end": "2321510"
  },
  {
    "text": "there's not yet extant software that gives you the abstract syntax tree for",
    "start": "2321510",
    "end": "2326849"
  },
  {
    "text": "home code so I did this by hand this all looks like if you squint it looks the",
    "start": "2326849",
    "end": "2331950"
  },
  {
    "text": "same so we have a song it has this like dictionary of tracks we have two initial",
    "start": "2331950",
    "end": "2337740"
  },
  {
    "text": "tracks right you've seen this before there's that initial slot note 69 and then we create 20 of them right again",
    "start": "2337740",
    "end": "2345300"
  },
  {
    "text": "there's our sort of update function no we can zoom in and it's a normal gen server and if you look basically we say",
    "start": "2345300",
    "end": "2351330"
  },
  {
    "text": "okay like so where's the song that you're trying to talk about so I say start link and I give you a name and if",
    "start": "2351330",
    "end": "2356460"
  },
  {
    "text": "it doesn't exist then we start one if it does exist then we just return whatever it was and pretend like we started it",
    "start": "2356460",
    "end": "2362420"
  },
  {
    "text": "here's our server and so this is just like the the gen server so you can ask",
    "start": "2362420",
    "end": "2368220"
  },
  {
    "text": "it what track there are you can ask how many there are you can ask for the total slots and you can get the value of a given slot it's",
    "start": "2368220",
    "end": "2374370"
  },
  {
    "text": "fairly straightforward stuff and these are all these are doing is just calling out so this is the public API and the way this works is you have your process",
    "start": "2374370",
    "end": "2380430"
  },
  {
    "text": "that's running somewhere else and then this is like the functions that you call and they use gen server call to talk to",
    "start": "2380430",
    "end": "2385500"
  },
  {
    "text": "your process and get data back so the actual implementations of those on the server side or still in there sorry",
    "start": "2385500",
    "end": "2392250"
  },
  {
    "text": "these are this is more of the public API so you can like set a slot set a no data track get the state get the state is we",
    "start": "2392250",
    "end": "2399390"
  },
  {
    "text": "use that a lot and so this is the implementation of all that it's not that",
    "start": "2399390",
    "end": "2404550"
  },
  {
    "text": "exciting you basically are just doing the same thing we saw on the Elm side just with these elixir data structures they're almost you know all of the",
    "start": "2404550",
    "end": "2410520"
  },
  {
    "text": "things you can do to modify the song exist in both places and so then let's",
    "start": "2410520",
    "end": "2416910"
  },
  {
    "text": "see here yeah so this is just a little bit more that didn't fit on that I guess",
    "start": "2416910",
    "end": "2422090"
  },
  {
    "text": "so it's somewhat lengthy but it really is everything we do for the whole song so like it's like maybe three pages of",
    "start": "2422090",
    "end": "2427650"
  },
  {
    "text": "code at most if you have a big font so it's not crazy for like a collaborative song tool and so then this is we have",
    "start": "2427650",
    "end": "2435120"
  },
  {
    "text": "the gem server we'd like to be able to modify it when you make changes in your own application so we want changes that you make in the UI to like change this",
    "start": "2435120",
    "end": "2440910"
  },
  {
    "text": "thing that's running somewhere but of course it's not running in a web server yet so what we want to do is we want to wrap it with channels and so this is the",
    "start": "2440910",
    "end": "2448560"
  },
  {
    "text": "general idea these provide an interface to send messages in from the web piece",
    "start": "2448560",
    "end": "2453710"
  },
  {
    "text": "so this is a quick channel that lets us send messages I have this kind of",
    "start": "2453710",
    "end": "2458730"
  },
  {
    "text": "refresh rate where I send the state regardless like I send it every second regardless I don't have to do that part",
    "start": "2458730",
    "end": "2464130"
  },
  {
    "text": "I just happen to it's dumb and you shouldn't do it if you're doing this anyway so when someone joins a channel",
    "start": "2464130",
    "end": "2470430"
  },
  {
    "text": "it basically says you know they join collusion : some name foo bar is the",
    "start": "2470430",
    "end": "2475980"
  },
  {
    "text": "default one and what it'll do is it'll start a collusion or start one of these songs with the ID foo bar and if it's re",
    "start": "2475980",
    "end": "2481920"
  },
  {
    "text": "running and just get the running one back so some ones are connected to it it gets their you know they're both working on the same state now but if they're not",
    "start": "2481920",
    "end": "2488010"
  },
  {
    "text": "they'll start a new one and then they'll send this push state message to itself so that's just so that it can finish this function and like come back to",
    "start": "2488010",
    "end": "2494700"
  },
  {
    "text": "handling the next message which is the piece to push the state and then we return it state and that state is we",
    "start": "2494700",
    "end": "2500730"
  },
  {
    "text": "take it's the socket we had not only the state but anyway we assigned the ID and the process ID into",
    "start": "2500730",
    "end": "2507600"
  },
  {
    "text": "the socket just so we can look them up easier later there's just kind of some local stuff you could places you can",
    "start": "2507600",
    "end": "2514410"
  },
  {
    "text": "store stuff when someone sends us a track ad we send inclusion server ad",
    "start": "2514410",
    "end": "2519630"
  },
  {
    "text": "track and then we tell everybody about it broadcast state and then we reply cool and we update our socket we didn't",
    "start": "2519630",
    "end": "2525600"
  },
  {
    "text": "change anything but we returned our socket is it's a new socket when somebody checks a note again we just",
    "start": "2525600",
    "end": "2531150"
  },
  {
    "text": "defer to this function that knows how to check the note we tell everybody about it and then we say okay similarly they",
    "start": "2531150",
    "end": "2537750"
  },
  {
    "text": "set a note same deal I mean we're just calling a function do a thing telling everybody else how it happened and then we're done and you could do more",
    "start": "2537750",
    "end": "2544500"
  },
  {
    "text": "interesting stuff than just broadcast the state you could like specifically send this note was checked but it's",
    "start": "2544500",
    "end": "2549900"
  },
  {
    "text": "really easy like with a few number of people that make sense in one of these things they just tell everybody like here's the whole new state right now but",
    "start": "2549900",
    "end": "2555720"
  },
  {
    "text": "you can be somewhat the point is that's where you would be smarter if you wanted to make a smarter server and then push",
    "start": "2555720",
    "end": "2561720"
  },
  {
    "text": "state basically every refresh records great seconds every second we push the state to everybody regardless of whether",
    "start": "2561720",
    "end": "2567540"
  },
  {
    "text": "somebody's doing anything just in case something went wrong and as well as being overly defensive I didn't need to do it it definitely does not cause a",
    "start": "2567540",
    "end": "2573030"
  },
  {
    "text": "problem and then broadcast state just tells everything ssin that tells everybody what the state is so that's",
    "start": "2573030",
    "end": "2580260"
  },
  {
    "text": "like the whole everything so this on the one hand it was kind of deep on the other hand it's really kind of cool app",
    "start": "2580260",
    "end": "2586020"
  },
  {
    "text": "and I don't know we looked at maybe eight pages of code so not that much so",
    "start": "2586020",
    "end": "2591960"
  },
  {
    "text": "here this should work you have a laptop out anybody has a laptop out visit that",
    "start": "2591960",
    "end": "2598400"
  },
  {
    "text": "you can pull it up on the phone I have not taken any efforts to make it nice and it's a table so it should work but I",
    "start": "2598400",
    "end": "2605130"
  },
  {
    "text": "doubt you're going to have the best of times and so then let me get out of here",
    "start": "2605130",
    "end": "2610280"
  },
  {
    "text": "like this no how do you have that okay so I'm going to refresh and we should",
    "start": "2610280",
    "end": "2615420"
  },
  {
    "text": "all be on the same thing part like that",
    "start": "2615420",
    "end": "2620730"
  },
  {
    "text": "you can see it anything that bitly /m - Kluber it's running so",
    "start": "2620730",
    "end": "2635450"
  },
  {
    "text": "slow I'm going to take that off just so I can increase the beast a minute also it runs it uh because it didn't",
    "start": "2635450",
    "end": "2641930"
  },
  {
    "text": "have a focus the browser was not like preferring it so as a it was running slower than it should anyway and move",
    "start": "2641930",
    "end": "2648050"
  },
  {
    "text": "this over there [Music] so you should be able to go there and",
    "start": "2648050",
    "end": "2653880"
  },
  {
    "text": "change the song I'm not going to touch the thing because we were able to go to [Music] yes or let me change that URL for like",
    "start": "2653880",
    "end": "2660720"
  },
  {
    "text": "the nicer world hi goodbye last gesture dangerous",
    "start": "2660720",
    "end": "2666000"
  },
  {
    "text": "[Music]",
    "start": "2666000",
    "end": "2672920"
  },
  {
    "text": "now you will be running at a different beats per minute that's not thinking I'd continue the song itself insisted on did",
    "start": "2672920",
    "end": "2678720"
  },
  {
    "text": "you give up [Music] it doesn't show the reason for that",
    "start": "2678720",
    "end": "2688220"
  },
  {
    "text": "[Music] oh but regeneration exactly never put",
    "start": "2688220",
    "end": "2693630"
  },
  {
    "text": "the button to come back the next event [Music] but someone's doing something I need",
    "start": "2693630",
    "end": "2700520"
  },
  {
    "text": "do [Music] and after this part down here was",
    "start": "2700520",
    "end": "2706700"
  },
  {
    "text": "contributed by a [Music]",
    "start": "2706700",
    "end": "2719530"
  },
  {
    "text": "anyway doesn't say a crazy amount of code and it's nice and it's not",
    "start": "2719530",
    "end": "2726900"
  },
  {
    "text": "the magical at all and I can make the whole in writing really two parts always",
    "start": "2726900",
    "end": "2732650"
  },
  {
    "text": "just by writing a sign for this one still different generalizable",
    "start": "2732650",
    "end": "2738820"
  },
  {
    "text": "[Music] you would want to use a subversive nature",
    "start": "2738820",
    "end": "2744940"
  },
  {
    "text": "[Music] in the",
    "start": "2744940",
    "end": "2750380"
  },
  {
    "text": "I feel like this is like the part where you have a crazy single day",
    "start": "2750380",
    "end": "2757060"
  },
  {
    "text": "[Music]",
    "start": "2757060",
    "end": "2764080"
  },
  {
    "text": "in [Music]",
    "start": "2764080",
    "end": "2770880"
  },
  {
    "text": "that's the same [Music]",
    "start": "2771140",
    "end": "2776300"
  },
  {
    "text": "anyway so that is that is the the whole of the thing that I built but I wanted to go through just sort of how nicely it",
    "start": "2776300",
    "end": "2782100"
  },
  {
    "text": "was - how nice it was to do that sort of thing in in Elmen elixir and again like I could have done this in a couple of",
    "start": "2782100",
    "end": "2787920"
  },
  {
    "text": "hours not like Tooting my own horn here it's just like it's not actually complicated it's complicated if it's the first time you're seeing both elemental",
    "start": "2787920",
    "end": "2793890"
  },
  {
    "text": "looks at the same time for sure anyway but I mentioned a few things about how",
    "start": "2793890",
    "end": "2799230"
  },
  {
    "text": "this was done and I think I have like ten minutes left first of all does anybody have any questions because otherwise I'll end up burning too much time with this next",
    "start": "2799230",
    "end": "2804660"
  },
  {
    "text": "piece all right so I'll talk through how this is done",
    "start": "2804660",
    "end": "2811160"
  },
  {
    "text": "so there's this thing like making invalid things unrepresentable or make",
    "start": "2811160",
    "end": "2816240"
  },
  {
    "text": "impossible States impossible this concept and this is where I failed at that so I have in my model I had this",
    "start": "2816240",
    "end": "2821370"
  },
  {
    "text": "track being edited it's a maybe integer and I have the chosen it which is maybe string what these are representing is",
    "start": "2821370",
    "end": "2826460"
  },
  {
    "text": "conceptually like a three step flow through a sort of a wizard so I could",
    "start": "2826460",
    "end": "2831720"
  },
  {
    "text": "have modeled these as a union type where like the first one was not editing and",
    "start": "2831720",
    "end": "2837900"
  },
  {
    "text": "the second one was editing track integer and the third one was editing tract integer with no note and the fourth one",
    "start": "2837900",
    "end": "2845100"
  },
  {
    "text": "would have been like non-existent right because that's actually another message that I met but the point is then I",
    "start": "2845100",
    "end": "2850560"
  },
  {
    "text": "would've had a union type I would had only a single value to cover this and I wouldn't be dealing with like this essentially this matrix of like all the",
    "start": "2850560",
    "end": "2857610"
  },
  {
    "text": "possible maybe states because these are really these are the same thing they're like parts of the same idea but I'm",
    "start": "2857610",
    "end": "2863400"
  },
  {
    "text": "tracking them separately because like because I'm using them as maybe is I have this awful like waterfall of",
    "start": "2863400",
    "end": "2870870"
  },
  {
    "text": "badness where I have to check to see like is it a nothing is that a just thing and so like this is how I could",
    "start": "2870870",
    "end": "2876720"
  },
  {
    "text": "have modelled it right no chooser where wizard would be pending you'd have track being edited int and you would have chosen note where you have the track",
    "start": "2876720",
    "end": "2882480"
  },
  {
    "text": "that's already being in an edited you know about that and the string which is the note you chose and then I could have",
    "start": "2882480",
    "end": "2888720"
  },
  {
    "text": "tracted as a single thing in my model and then I would have just started out in the pending state so the point is anywhere anywhere you have and this you",
    "start": "2888720",
    "end": "2896070"
  },
  {
    "text": "know whether in your L you're an Elmer Haskell or any anything where you have multiple bits of data that are like",
    "start": "2896070",
    "end": "2904020"
  },
  {
    "text": "maybes but are used in conjunction with each other you really have something like this almost certainly you have like you can",
    "start": "2904020",
    "end": "2910500"
  },
  {
    "text": "model it instead like this and then you can I would never have this code right this code is the only reason this code",
    "start": "2910500",
    "end": "2916740"
  },
  {
    "text": "is awful is because I didn't encode it properly now the code would be like are we pending then we do this our editing a",
    "start": "2916740",
    "end": "2922859"
  },
  {
    "text": "tract and we do this we're choosing a note we do this and here we like have to kind of derive that based on the state",
    "start": "2922859",
    "end": "2929130"
  },
  {
    "text": "of these maybes so the point is the code would be like two lines of code instead of 18 here 7 of 12 so it would look like",
    "start": "2929130",
    "end": "2936599"
  },
  {
    "text": "this right set editing track would set its track being edited choose a note",
    "start": "2936599",
    "end": "2942660"
  },
  {
    "text": "would say look if we are in the track being edited States and we do something otherwise we don't do anything anyway so",
    "start": "2942660",
    "end": "2948660"
  },
  {
    "text": "the this code is obviously I think everyone will agree that this code is simpler than this code they're not",
    "start": "2948660",
    "end": "2953910"
  },
  {
    "text": "simpler quicker to read minimum anyway so that's just the point I wanted to make about making impossible States",
    "start": "2953910",
    "end": "2961079"
  },
  {
    "text": "impossible right you can if you take the time to encode things into your types then you can build better code faster",
    "start": "2961079",
    "end": "2968220"
  },
  {
    "text": "that's like easier to read and says more about what it is right it wasn't maybe chosen note it wasn't like those two",
    "start": "2968220",
    "end": "2974069"
  },
  {
    "text": "things if the idea was like we have a wizard it has this state as this trains like very ordered steps and so instead",
    "start": "2974069",
    "end": "2981660"
  },
  {
    "text": "of making people like figure that out in their head by reading the code and being like oh this is how we use these 2 maybes together well you just say",
    "start": "2981660",
    "end": "2987059"
  },
  {
    "text": "there's a wizard here the state to have anyway so that's all I have thanks for listening and if you don't get anything",
    "start": "2987059",
    "end": "2992819"
  },
  {
    "text": "else out of this I'd love to convince you to play with either Phoenix or elm and ideally them together anyway thanks",
    "start": "2992819",
    "end": "3002859"
  }
]