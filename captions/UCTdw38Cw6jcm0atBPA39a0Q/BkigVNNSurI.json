[
  {
    "text": "okay hi welcome hey Norwegians",
    "start": "0",
    "end": "5700"
  },
  {
    "text": "hi welcome [Music] hey",
    "start": "5700",
    "end": "11000"
  },
  {
    "text": "um how many of you know the TV show the long way around",
    "start": "12420",
    "end": "17420"
  },
  {
    "text": "almost no one I thought it's a brilliant joke um so it's basically",
    "start": "17940",
    "end": "24420"
  },
  {
    "text": "um about two guys one of them is you and McGregor you know Obi-Wan Kenobi and",
    "start": "24420",
    "end": "29519"
  },
  {
    "text": "they take the bicycle from London to Los Angeles but they're going eastwards",
    "start": "29519",
    "end": "34980"
  },
  {
    "text": "okay so they're choosing the longest possible route they could find to get to their goal and when you look at oauth",
    "start": "34980",
    "end": "43020"
  },
  {
    "text": "and this thing called proof of possession tokens it feels exactly the same way okay so proof possession is a",
    "start": "43020",
    "end": "48960"
  },
  {
    "text": "security feature of oauth and if you don't know what it means don't worry we're gonna explain it and if you know what it means you probably know oh",
    "start": "48960",
    "end": "54420"
  },
  {
    "text": "that's kind of complicated and um and it took almost 10 years right I mean",
    "start": "54420",
    "end": "60660"
  },
  {
    "text": "oauth was 2011-ish or something and uh and now 10 years later that we finally",
    "start": "60660",
    "end": "66840"
  },
  {
    "text": "have a workable solution to this thing called proof possession tokens uh which you know",
    "start": "66840",
    "end": "72900"
  },
  {
    "text": "close the gap I think in the whole security model of oauth okay so that's kind of like um",
    "start": "72900",
    "end": "80580"
  },
  {
    "text": "the the topic um so I'm here with my good friend Steiner",
    "start": "80580",
    "end": "86159"
  },
  {
    "text": "um hello we uh we work together um on on that and and other things",
    "start": "86159",
    "end": "94979"
  },
  {
    "text": "um and many of that is directly related so if you're from Norway to you know to to how",
    "start": "94979",
    "end": "102119"
  },
  {
    "text": "things work in Norway um actually by the way the most important link here is the link to the",
    "start": "102119",
    "end": "107880"
  },
  {
    "text": "slides so you know all the slides are uploaded already so you know no need to",
    "start": "107880",
    "end": "112979"
  },
  {
    "text": "take pictures all the time of the of the slides and they're all there for you and you can um",
    "start": "112979",
    "end": "118619"
  },
  {
    "text": "um download them okay so yeah so I'm basically uh it feels like for since my whole life",
    "start": "118619",
    "end": "124380"
  },
  {
    "text": "I'm talking about this kind of um but the last 15 years or so I've been",
    "start": "124380",
    "end": "129959"
  },
  {
    "text": "working on over the connect and you know wrote a token server or free or maybe",
    "start": "129959",
    "end": "136739"
  },
  {
    "text": "more um and you know it's kind of like and near India to my heart topic and who",
    "start": "136739",
    "end": "143640"
  },
  {
    "text": "are you Steiner yeah hi I'm stainless I hope none of you thought that the topic was about concealing in drugs that could",
    "start": "143640",
    "end": "152040"
  },
  {
    "text": "also be a sort of interpretation so uh anyway I'm staying light I I've",
    "start": "152040",
    "end": "157319"
  },
  {
    "text": "I used to be a developer so I uh don't do a lot of development anymore but I",
    "start": "157319",
    "end": "163019"
  },
  {
    "text": "work for the health sector and I've been doing that for many years now uh so the reason why we are talking about oauth in",
    "start": "163019",
    "end": "169620"
  },
  {
    "text": "the health sector is because they are actually modernizing a lot of",
    "start": "169620",
    "end": "175680"
  },
  {
    "text": "the technology and they're starting to use new modern uh or semi-modern ways of",
    "start": "175680",
    "end": "183540"
  },
  {
    "text": "authentication and securing services so um yeah so the reason we met is basically",
    "start": "183540",
    "end": "190140"
  },
  {
    "text": "because of this big project you're doing in Norway about uh kind of modernizing the health sector",
    "start": "190140",
    "end": "197640"
  },
  {
    "text": "right and part of that is moving to overworth and openly connect and and all of these Technologies",
    "start": "197640",
    "end": "203159"
  },
  {
    "text": "um and you know like when oauth was designed 10 years ago or so",
    "start": "203159",
    "end": "209040"
  },
  {
    "text": "probably they didn't anticipate that it became the would become the popular right so the the original use case of",
    "start": "209040",
    "end": "215040"
  },
  {
    "text": "like you know like the classic canonical use case of how can you connect a third party to your Google calendar kind of",
    "start": "215040",
    "end": "220860"
  },
  {
    "text": "thing yeah was nice but now it's used in healthcare in banking in the military",
    "start": "220860",
    "end": "226340"
  },
  {
    "text": "and basically everywhere right and um so there's this movement towards a higher",
    "start": "226340",
    "end": "232379"
  },
  {
    "text": "security oauth version so to speak so so you have the base RCS and then lots of",
    "start": "232379",
    "end": "237540"
  },
  {
    "text": "stuff layers on top of that and there are multiple uh independent initiatives",
    "start": "237540",
    "end": "243420"
  },
  {
    "text": "worldwide that try to create a more secure profile for oauth right and some",
    "start": "243420",
    "end": "248940"
  },
  {
    "text": "of them you can see here psd2 is that the per the payment service directive too which is a you know like a banking",
    "start": "248940",
    "end": "254099"
  },
  {
    "text": "thing um fappy which stands for financial apis or they'll later rename it to financial",
    "start": "254099",
    "end": "260579"
  },
  {
    "text": "grade apis yeah something that needs as much security as the finance industry so to speak",
    "start": "260579",
    "end": "267000"
  },
  {
    "text": "um in in the states there's stuff going on about Enterprise profiles of oauth and one of the missing",
    "start": "267000",
    "end": "273479"
  },
  {
    "text": "pieces was always proof of position exactly yeah and that's why we're here yes okay",
    "start": "273479",
    "end": "279900"
  },
  {
    "text": "so um yeah so just a quick agenda so you can",
    "start": "279900",
    "end": "285120"
  },
  {
    "text": "still leave the room if you think that's boring or something um we want to quickly talk about the status quo which is better tokens in",
    "start": "285120",
    "end": "291360"
  },
  {
    "text": "oauth and what are they missing and what approved possession tokens in in contrast give you some history",
    "start": "291360",
    "end": "297380"
  },
  {
    "text": "reasons why stuff is happening now right and then we're going to talk about the",
    "start": "297380",
    "end": "302940"
  },
  {
    "text": "two technologies that you could use today to to implement this feature okay",
    "start": "302940",
    "end": "308580"
  },
  {
    "text": "so who is using Olaf everyone does exactly right and that's",
    "start": "308580",
    "end": "314880"
  },
  {
    "text": "how it works right you get a token from an hour of authorization server and then you send the token to the API to call",
    "start": "314880",
    "end": "321180"
  },
  {
    "text": "the API easy and that was exactly the design goal of oauth to make it as easy",
    "start": "321180",
    "end": "326400"
  },
  {
    "text": "as possible right um but there's this little thing here called Pera tokens yeah and what Bearer",
    "start": "326400",
    "end": "333419"
  },
  {
    "text": "tokens means is that whoever owns the token can call the API so in",
    "start": "333419",
    "end": "339300"
  },
  {
    "text": "other words the only thing that you need to call the API is is having that token",
    "start": "339300",
    "end": "345000"
  },
  {
    "text": "right um again it works right but it kind of",
    "start": "345000",
    "end": "351000"
  },
  {
    "text": "assumes um an Ideal World it assumes that every single piece in that oau of conversation",
    "start": "351000",
    "end": "357300"
  },
  {
    "text": "is perfectly secure right the authorization server does not leak the token the client does not leak",
    "start": "357300",
    "end": "364139"
  },
  {
    "text": "the token the transport is perfectly secure from eavesdropping men in the middle attacks uh you're not as I said",
    "start": "364139",
    "end": "371699"
  },
  {
    "text": "leaking tokens into log files or URLs or you know because anyone who could access",
    "start": "371699",
    "end": "377039"
  },
  {
    "text": "that could take the token and call the API and impersonate the client right",
    "start": "377039",
    "end": "383520"
  },
  {
    "text": "um or even uh if if you never thought about this what about the API the API even you",
    "start": "383520",
    "end": "391139"
  },
  {
    "text": "know like you're sending the token to the API the API could take the token turn around and call another API using",
    "start": "391139",
    "end": "396180"
  },
  {
    "text": "the token right because all it needs is the being the bearer of the token that's",
    "start": "396180",
    "end": "402479"
  },
  {
    "text": "where the name comes from ma'am um and that seems a little bit risky",
    "start": "402479",
    "end": "410340"
  },
  {
    "text": "yeah so um who has done W security",
    "start": "410340",
    "end": "415940"
  },
  {
    "text": "yeah um I did right and a lot of it and uh",
    "start": "416280",
    "end": "422400"
  },
  {
    "text": "I actually could even remember how it worked while writing the talk um and that that's from 2004. that",
    "start": "422400",
    "end": "428460"
  },
  {
    "text": "that's kind of like before the oauth wave right and if you read those specifications I mean that was serious",
    "start": "428460",
    "end": "434580"
  },
  {
    "text": "Enterprise stuff right IBM Microsoft Sun very sign I mean that these specs were",
    "start": "434580",
    "end": "440639"
  },
  {
    "text": "no place for humor I can tell you yeah no chokes in those specs yeah",
    "start": "440639",
    "end": "446639"
  },
  {
    "text": "um and they've their job was to write specs to secure the Enterprise right and",
    "start": "446639",
    "end": "452759"
  },
  {
    "text": "right from the start they assume the Enterprise needs a lot of security and also seeing that it's from 2004 uh",
    "start": "452759",
    "end": "460500"
  },
  {
    "text": "imagine 2004 TLS was not widely deployed",
    "start": "460500",
    "end": "466199"
  },
  {
    "text": "right especially not in the Enterprise yeah",
    "start": "466199",
    "end": "471419"
  },
  {
    "text": "so yeah so that their mission was to to create something secure so just to give",
    "start": "471419",
    "end": "476639"
  },
  {
    "text": "you a quick rundown um of how double a proof possession worked in W security oh yeah and I",
    "start": "476639",
    "end": "482880"
  },
  {
    "text": "forgot maybe to define the term proof possession basically what they mean with proof of possession is is that unlike a",
    "start": "482880",
    "end": "488580"
  },
  {
    "text": "bearer token only the client that requested the token in the first place can actually use the token",
    "start": "488580",
    "end": "495180"
  },
  {
    "text": "okay so in the proof for session scenario if if an attacker would get the token from the wire or from a log file",
    "start": "495180",
    "end": "501240"
  },
  {
    "text": "they would not be able to use that token so how does it work yeah um and you will see that there's a",
    "start": "501240",
    "end": "506819"
  },
  {
    "text": "common pattern here regardless of which technology we're looking at they almost look similar yeah but um",
    "start": "506819",
    "end": "512520"
  },
  {
    "text": "a little bit different so um in W security and that is 15",
    "start": "512520",
    "end": "519240"
  },
  {
    "text": "20 years ago okay almost the way this worked is the client generated a secret okay a key okay and",
    "start": "519240",
    "end": "527700"
  },
  {
    "text": "then the client made a WS trust request if you remember WS trust yeah the good stuff",
    "start": "527700",
    "end": "533279"
  },
  {
    "text": "um to the STS and encrypted that secret with the public key of the STS so now",
    "start": "533279",
    "end": "539519"
  },
  {
    "text": "even if you could read the wire you could not see the secret because it was encrypted with the public key of the SDS",
    "start": "539519",
    "end": "545100"
  },
  {
    "text": "now what the STS did then is it responded with a saml token",
    "start": "545100",
    "end": "550140"
  },
  {
    "text": "and that saml token contained the secret that got sent by the client of course",
    "start": "550140",
    "end": "555300"
  },
  {
    "text": "you cannot just send a saml token over the wire now because the wire is insecure by definition so the saml token",
    "start": "555300",
    "end": "560580"
  },
  {
    "text": "needs to be encrypted with the public key of the XML web service yeah okay cool and then the last thing",
    "start": "560580",
    "end": "567899"
  },
  {
    "text": "would be that the client is now calling the service sends along the encrypted",
    "start": "567899",
    "end": "573180"
  },
  {
    "text": "sample token and signs the XML envelope or body or parts of it or you know there",
    "start": "573180",
    "end": "579360"
  },
  {
    "text": "are many variations with the secret okay so now the service is expected to",
    "start": "579360",
    "end": "585959"
  },
  {
    "text": "decrypt the thermal token get the secret out of the symbol token and then validate the signature of the XML",
    "start": "585959",
    "end": "592560"
  },
  {
    "text": "envelope and only if they match up the client has proven that it's the same client that asked for the token in the",
    "start": "592560",
    "end": "599279"
  },
  {
    "text": "first place right now",
    "start": "599279",
    "end": "604440"
  },
  {
    "text": "what was the big problem here with this approach cryptography",
    "start": "604440",
    "end": "609899"
  },
  {
    "text": "right because the client needed to know up front the public key of the STS",
    "start": "609899",
    "end": "615839"
  },
  {
    "text": "the STS needed to know up front the public key of the XML web service right",
    "start": "615839",
    "end": "621360"
  },
  {
    "text": "the whole Key Management became a nightmare yeah and now throw in key rotation have",
    "start": "621360",
    "end": "628260"
  },
  {
    "text": "you ever seen key rotation in the wild yeah there's a reason for that because it's",
    "start": "628260",
    "end": "634800"
  },
  {
    "text": "hard okay so now imagine everyone here would would rotate Keys every year 10 days",
    "start": "634800",
    "end": "641040"
  },
  {
    "text": "right uh all of that overhead so this uh while this so did anyone do WCF",
    "start": "641040",
    "end": "648600"
  },
  {
    "text": "poor souls yeah you had like a long config file with tons of public keys in",
    "start": "648600",
    "end": "655260"
  },
  {
    "text": "there right and they were not just regular public keys they were x509 certificates of course because that was",
    "start": "655260",
    "end": "660300"
  },
  {
    "text": "the thing by the time right they had you had to throw in a pki and you know some other stuff Okay cool so that's how it",
    "start": "660300",
    "end": "667320"
  },
  {
    "text": "works and you know in theory that did work yeah um but still this was going over plain text",
    "start": "667320",
    "end": "674339"
  },
  {
    "text": "HTTP right so lots of opportunity to mess around with packages and replace",
    "start": "674339",
    "end": "680640"
  },
  {
    "text": "signatures and blah so particularly another spec on top of that called WS",
    "start": "680640",
    "end": "685680"
  },
  {
    "text": "secure conversation to make it even more complicated which basically meant that there was a negotiation phase in the beginning where",
    "start": "685680",
    "end": "692100"
  },
  {
    "text": "they created a session key and anyways you know it it did work",
    "start": "692100",
    "end": "700560"
  },
  {
    "text": "if you could guarantee that the client stack and the server stack are the same like wsf for example but that that was",
    "start": "700560",
    "end": "707700"
  },
  {
    "text": "far from being interoperable of course okay so then came oauth what about oauth",
    "start": "707700",
    "end": "714360"
  },
  {
    "text": "um actually over of 1.0 had the very best intentions uh the guy who wrote the spec",
    "start": "714360",
    "end": "719820"
  },
  {
    "text": "Aaron hammer he looked at w security he hated WS",
    "start": "719820",
    "end": "725820"
  },
  {
    "text": "security uh there were some interviews where he often says like the spec is as bad as WS security",
    "start": "725820",
    "end": "733380"
  },
  {
    "text": "um so um but so so he hated XML he hated soap he hated all of that stuff but he",
    "start": "733380",
    "end": "738420"
  },
  {
    "text": "liked the idea of binding the token to the client so there he made a signature",
    "start": "738420",
    "end": "744839"
  },
  {
    "text": "bound tokens that default and pretty much the only option of 1.0 now now if you look at the spec",
    "start": "744839",
    "end": "753779"
  },
  {
    "text": "for over 1.0 here's the section 3.4 signatures",
    "start": "753779",
    "end": "758820"
  },
  {
    "text": "okay and it talks about how how to create a signature first you need to create a string then you need to",
    "start": "758820",
    "end": "764700"
  },
  {
    "text": "normalize that string it looks a little bit like this and then you need to",
    "start": "764700",
    "end": "769980"
  },
  {
    "text": "create a base URI you need to canonicalize that URI you need to put in the parameters and the query strings you",
    "start": "769980",
    "end": "775860"
  },
  {
    "text": "sort them by alphabet and and so on and 10 pages later you end up",
    "start": "775860",
    "end": "781560"
  },
  {
    "text": "with this okay um and five pages later you end up with",
    "start": "781560",
    "end": "787860"
  },
  {
    "text": "that and then you have to do it for every single API call okay so while this was possible with you",
    "start": "787860",
    "end": "795540"
  },
  {
    "text": "know um it was complicated yeah",
    "start": "795540",
    "end": "801079"
  },
  {
    "text": "um so when um over of two got became a",
    "start": "802019",
    "end": "808500"
  },
  {
    "text": "thing right so o of one became popular but many people said the signature part",
    "start": "808500",
    "end": "814200"
  },
  {
    "text": "is too hard what can we do about it right so what did oauth 2.1 do so and the other thing",
    "start": "814200",
    "end": "820800"
  },
  {
    "text": "is of course yeah um Aaron Hammer was the only spec writer so he could do whatever he wants yeah he",
    "start": "820800",
    "end": "826440"
  },
  {
    "text": "wrote that spec that was his um security Vision how it should work",
    "start": "826440",
    "end": "831600"
  },
  {
    "text": "but in all of two companies came in backpack you know like all of the XML web guys came back like Microsoft and",
    "start": "831600",
    "end": "837480"
  },
  {
    "text": "IBM and Google and everybody thought like oh yeah that's good but it's too hard",
    "start": "837480",
    "end": "843000"
  },
  {
    "text": "can we fix the signature thing how about we remove it",
    "start": "843000",
    "end": "848360"
  },
  {
    "text": "okay so basically um in 0 of 2 they removed all of the",
    "start": "848519",
    "end": "855060"
  },
  {
    "text": "signature stuff from the spec again and came with a new idea",
    "start": "855060",
    "end": "860459"
  },
  {
    "text": "called Barrel tokens okay so what about we don't do this again it's a couple of years later right TLS is now pretty much",
    "start": "860459",
    "end": "867600"
  },
  {
    "text": "a given so you don't have to fight against the fact that your transport is insecure so they said okay why maybe oh",
    "start": "867600",
    "end": "874139"
  },
  {
    "text": "maybe better tokens are good enough yeah and Aaron if you ever followed that",
    "start": "874139",
    "end": "880500"
  },
  {
    "text": "history he hated that he actually a couple of uh years later",
    "start": "880500",
    "end": "885899"
  },
  {
    "text": "he withdrew his name from the RFC document",
    "start": "885899",
    "end": "893339"
  },
  {
    "text": "okay so he said no I'm not I'm not giving my name away for an",
    "start": "893339",
    "end": "898620"
  },
  {
    "text": "Enterprise version of oauth where the big players simplify it up to a point where it's too",
    "start": "898620",
    "end": "905279"
  },
  {
    "text": "dumb to be secure okay he was a bit over exaggerating maybe but on paper Bearer tokens are",
    "start": "905279",
    "end": "913620"
  },
  {
    "text": "less secured and signature bound tokens I mean that's just the fact of life yeah and he made a big thing about him",
    "start": "913620",
    "end": "920579"
  },
  {
    "text": "leaving oauth he created things like this laughs",
    "start": "920579",
    "end": "927720"
  },
  {
    "text": "um he had a really popular talk at the conference um where he coined a new hashtag that",
    "start": "928680",
    "end": "935279"
  },
  {
    "text": "you should use on the internet and you know ultimately he left",
    "start": "935279",
    "end": "942600"
  },
  {
    "text": "okay so that's that um one last thing he did before he left",
    "start": "942600",
    "end": "949500"
  },
  {
    "text": "he said okay I demand one thing you are gonna split up the overalls back into",
    "start": "949500",
    "end": "955320"
  },
  {
    "text": "two specifications one is how to acquire a token and one is how to use a token",
    "start": "955320",
    "end": "960660"
  },
  {
    "text": "okay and if you only know today that you're going to do Bearer then in the",
    "start": "960660",
    "end": "965760"
  },
  {
    "text": "future I want you to create another spec called proof possession usage",
    "start": "965760",
    "end": "971360"
  },
  {
    "text": "and it never happened okay so that's 2012 yeah and that spec was never",
    "start": "971579",
    "end": "978180"
  },
  {
    "text": "created afterwards ma'am um there were some attempts to to add proof",
    "start": "978180",
    "end": "986279"
  },
  {
    "text": "of possession to oauth um a couple of years later there was a spec how to do a server to client key",
    "start": "986279",
    "end": "992940"
  },
  {
    "text": "distribution and and that that's the easy part right but the hard part is then once you have that token how do you",
    "start": "992940",
    "end": "999899"
  },
  {
    "text": "bind it to the client cryptographically and guess what they came up with a method for signing HTTP",
    "start": "999899",
    "end": "1006920"
  },
  {
    "text": "requests and if I would open that spec up it would pretty much look the same as o of 1.0 like take the URL take the",
    "start": "1006920",
    "end": "1012680"
  },
  {
    "text": "parameters take the body canonicalize it sign it blah blah blah blah okay and",
    "start": "1012680",
    "end": "1019699"
  },
  {
    "text": "there were fundamental problems there like you couldn't do HTTP streaming for example because how would you sign a stream for example and other things yeah",
    "start": "1019699",
    "end": "1026780"
  },
  {
    "text": "so it didn't happen okay uh the only thing that that was left was",
    "start": "1026780",
    "end": "1032000"
  },
  {
    "text": "a spec that's basically said let's let's imagine we would have proof of possession how would the Json web token",
    "start": "1032000",
    "end": "1039260"
  },
  {
    "text": "look like but we don't have it so I don't know um but let's let's put it out there okay uh",
    "start": "1039260",
    "end": "1046880"
  },
  {
    "text": "everybody was hoping given the fundamental problems with that like streaming and other things that",
    "start": "1046880",
    "end": "1053059"
  },
  {
    "text": "maybe we could solve the problem at the transport layer right that's where when they came up with another attempt a",
    "start": "1053059",
    "end": "1058640"
  },
  {
    "text": "couple of years later called token binding does anyone remember token binding it was basically",
    "start": "1058640",
    "end": "1064880"
  },
  {
    "text": "an extension to the TLs protocol that you could basically embed a a unique TLS",
    "start": "1064880",
    "end": "1071120"
  },
  {
    "text": "Channel key into the token and then bind the token to the TLs Channel",
    "start": "1071120",
    "end": "1076220"
  },
  {
    "text": "it worked wonderfully it did work up until",
    "start": "1076220",
    "end": "1081860"
  },
  {
    "text": "Google decided to not implement it so now you have to ask yourself how",
    "start": "1081860",
    "end": "1088039"
  },
  {
    "text": "useful is a web standard if the biggest browser is not going to support it right so that was that did they actually",
    "start": "1088039",
    "end": "1095299"
  },
  {
    "text": "keep a version of that in the edge for a while or in the Microsoft",
    "start": "1095299",
    "end": "1100600"
  },
  {
    "text": "it was removed from chromium yeah right even that page is not online anymore",
    "start": "1100600",
    "end": "1105919"
  },
  {
    "text": "that's archive.org is your friend if you're searching for all of that it's all gone basically but basically what",
    "start": "1105919",
    "end": "1112039"
  },
  {
    "text": "the guy says is well we have this token binding feature here it's not getting enough traction so I'm just going to",
    "start": "1112039",
    "end": "1117559"
  },
  {
    "text": "remove it that's it right many speculations why Google did that they never gave an",
    "start": "1117559",
    "end": "1123620"
  },
  {
    "text": "official explanation uh I guess they had their reasons performance was one of them we heard",
    "start": "1123620",
    "end": "1129860"
  },
  {
    "text": "that the performance of you know like let's say you are a company that that relies on that your web web page shows",
    "start": "1129860",
    "end": "1138440"
  },
  {
    "text": "up as quickly as possible in every browser on the world like a search page for example",
    "start": "1138440",
    "end": "1144380"
  },
  {
    "text": "and that is now more complicated and now it takes like a half a second longer maybe we don't want that anyways that's",
    "start": "1144380",
    "end": "1151039"
  },
  {
    "text": "a pure speculation okay um good so that was off the table as well",
    "start": "1151039",
    "end": "1157820"
  },
  {
    "text": "huh and now a couple of years later what happened is this RP thing right so far P",
    "start": "1157820",
    "end": "1163520"
  },
  {
    "text": "stands for as it did stand for uh Financial apis Yeah so basically the idea was okay now",
    "start": "1163520",
    "end": "1170120"
  },
  {
    "text": "Banks start using oauth we need something more secure than the standard oauth and funnily enough right people",
    "start": "1170120",
    "end": "1177140"
  },
  {
    "text": "said okay in if you want to um basically they said like Banks must Implement far",
    "start": "1177140",
    "end": "1182240"
  },
  {
    "text": "P or psd2 by the end of was it 2020 or 2019 I think it was September 2019 yes",
    "start": "1182240",
    "end": "1188840"
  },
  {
    "text": "and you weren't allowed to play if you didn't so so basically what they said is and the only way to be far Peak",
    "start": "1188840",
    "end": "1194059"
  },
  {
    "text": "compliant is you have to use proof possession tokens which didn't exist",
    "start": "1194059",
    "end": "1200679"
  },
  {
    "text": "okay so for that that's a slide from a guy Ned sakamura you know famous guy in",
    "start": "1200679",
    "end": "1206600"
  },
  {
    "text": "the area he says okay and in far P we all going to move everything to prove possession now",
    "start": "1206600",
    "end": "1212179"
  },
  {
    "text": "so that's kind of like when we started thinking about the the ramifications for the health industry",
    "start": "1212179",
    "end": "1218059"
  },
  {
    "text": "right yes and the thing is I mean health is uh you know primarily about helping",
    "start": "1218059",
    "end": "1223580"
  },
  {
    "text": "the patients uh but the other perspective is protecting the patients and some of that information is quite",
    "start": "1223580",
    "end": "1230720"
  },
  {
    "text": "sensitive and it can be used in many different scenarios I mean information about mental health for instance could",
    "start": "1230720",
    "end": "1237200"
  },
  {
    "text": "be a nice leverage if you're doing like negotiations about the fishing rights in",
    "start": "1237200",
    "end": "1242720"
  },
  {
    "text": "the Northern parts of Norway I know you know you can imagine uh so the thing is for health when we start working",
    "start": "1242720",
    "end": "1249260"
  },
  {
    "text": "together we uh we had a couple of uh like new implementations coming",
    "start": "1249260",
    "end": "1256360"
  },
  {
    "text": "some of them are tied to prescriptions which is by default you know something",
    "start": "1256360",
    "end": "1261860"
  },
  {
    "text": "you'd want to protect really well but there are other examples as well it's",
    "start": "1261860",
    "end": "1266900"
  },
  {
    "text": "like the national service for registering deaf uh if you're able to",
    "start": "1266900",
    "end": "1274700"
  },
  {
    "text": "kill someone by using the API uh you know that would that would be bad basically so yeah and",
    "start": "1274700",
    "end": "1284539"
  },
  {
    "text": "you fought better tokens are not good enough for them [Laughter]",
    "start": "1284539",
    "end": "1290539"
  },
  {
    "text": "so the thing is what do you do well you have bear tokens back in the days there",
    "start": "1290539",
    "end": "1295940"
  },
  {
    "text": "weren't a lot of support for cryptography for instance it was difficult to do this in in browsers",
    "start": "1295940",
    "end": "1301039"
  },
  {
    "text": "Etc so uh instead of you know in in lack of uh",
    "start": "1301039",
    "end": "1306620"
  },
  {
    "text": "good Alternatives you do other types of mitigations you you know we for instance set the the lifetime of the token to",
    "start": "1306620",
    "end": "1315140"
  },
  {
    "text": "like one minute perhaps you know make sure that it's uh Bound in audience Etc it's uh mitigations mitigation",
    "start": "1315140",
    "end": "1323840"
  },
  {
    "text": "techniques yeah in in absence of the technology basically yes but you can",
    "start": "1323840",
    "end": "1330020"
  },
  {
    "text": "imagine whoever wrote an oauth space system in his life knows that a one minute token lifetime is",
    "start": "1330020",
    "end": "1336440"
  },
  {
    "text": "is not drivable to implement right especially at scale right when you have multiple people needing to refresh them",
    "start": "1336440",
    "end": "1342080"
  },
  {
    "text": "and store them and manage them and and so on so yeah so one minute is yeah",
    "start": "1342080",
    "end": "1347900"
  },
  {
    "text": "I I have many customers even in the not so critical space which have 10 minute access tokens for example for exactly",
    "start": "1347900",
    "end": "1354020"
  },
  {
    "text": "the same reason because they you know they want to mitigate the the risk when they leak somehow especially if they",
    "start": "1354020",
    "end": "1360080"
  },
  {
    "text": "install the software on untrusted networks like customer networks where they don't control you know they don't",
    "start": "1360080",
    "end": "1365179"
  },
  {
    "text": "go to reverse proxies they don't control firewalls and they're logging and it's not end-to-end encrypted it's only point",
    "start": "1365179",
    "end": "1370880"
  },
  {
    "text": "to point in these networks typically yeah mobile mobile applications same same problem yes so but the interesting is now now",
    "start": "1370880",
    "end": "1379640"
  },
  {
    "text": "that the banks needed it right so you you could only play that",
    "start": "1379640",
    "end": "1385220"
  },
  {
    "text": "the PSD psd2 game in the EU if you implemented that but you couldn't",
    "start": "1385220",
    "end": "1390919"
  },
  {
    "text": "implement it because there was no technology for that so now the banks you know money actually you know Banks",
    "start": "1390919",
    "end": "1398059"
  },
  {
    "text": "equals money the money came in and the pressure on the big vendors and on the ietf and so on and basically okay they",
    "start": "1398059",
    "end": "1405860"
  },
  {
    "text": "said okay we need to stop Gap solution now something that we can deploy immediately with existing technology and not invent",
    "start": "1405860",
    "end": "1413720"
  },
  {
    "text": "something new right and that's when they basically okay what could we do",
    "start": "1413720",
    "end": "1419000"
  },
  {
    "text": "and that's where this spec came along it's basically reusing Mutual TLS",
    "start": "1419000",
    "end": "1426860"
  },
  {
    "text": "okay so the Assumption was that in many banks you already have pki and TLS and",
    "start": "1426860",
    "end": "1433520"
  },
  {
    "text": "smart cards and client certificates and all of that stuff does already exist",
    "start": "1433520",
    "end": "1438860"
  },
  {
    "text": "right and we can and you know some some smart people the offers here they figure out okay we can use mtls to um to",
    "start": "1438860",
    "end": "1447140"
  },
  {
    "text": "basically provide a mechanism as it says to bind access tokens to a client's Mutual TLS certificate and oauth",
    "start": "1447140",
    "end": "1454820"
  },
  {
    "text": "protected resources okay so that was kind of like this the solution that no one was happy with but",
    "start": "1454820",
    "end": "1461299"
  },
  {
    "text": "could be produced in a very short amount of time ma'am so how does Mitchell TLS work",
    "start": "1461299",
    "end": "1468020"
  },
  {
    "text": "has anyone ever implemented mtls like for real right it's complicated right it's a",
    "start": "1468020",
    "end": "1475159"
  },
  {
    "text": "complicated Beast that the best um the best uh explainer video that I found on the internet is this one here",
    "start": "1475159",
    "end": "1482620"
  },
  {
    "text": "[Applause] [Laughter]",
    "start": "1489640",
    "end": "1494540"
  },
  {
    "text": "okay but in essence in mtls you have a client certificate and you have a server",
    "start": "1496940",
    "end": "1502039"
  },
  {
    "text": "certificate right the server certificate is to authenticate the server and then afterwards the client certificate is used to authenticate the client and",
    "start": "1502039",
    "end": "1508820"
  },
  {
    "text": "after successful negotiation they have a shared secret that they can use then to encrypt and sign the traffic okay so yes",
    "start": "1508820",
    "end": "1516020"
  },
  {
    "text": "this does exist it's proven technology it is deployed in some spaces um so yeah so let's let's see how proof",
    "start": "1516020",
    "end": "1523580"
  },
  {
    "text": "possession would work with mtls so you know it's very similar yeah the client",
    "start": "1523580",
    "end": "1529159"
  },
  {
    "text": "creates an x509 certificate and a private key or here there is already one like you know maybe even even on some",
    "start": "1529159",
    "end": "1535700"
  },
  {
    "text": "Hardware device for example you know there are so many options with mtls but the idea is this okay so like the client",
    "start": "1535700",
    "end": "1541400"
  },
  {
    "text": "has it has an x549 insert then he opens an mtls channel so he does mutual authentication with the STS he sends",
    "start": "1541400",
    "end": "1548059"
  },
  {
    "text": "along the x509 certificate once that is validated the token server",
    "start": "1548059",
    "end": "1554500"
  },
  {
    "text": "can create the hash of the certificate which is a unique identifier and then",
    "start": "1554500",
    "end": "1560960"
  },
  {
    "text": "embed the hash into the access token okay so basically what that means is now",
    "start": "1560960",
    "end": "1567020"
  },
  {
    "text": "that the client has proven to know the private key that belongs to the hash of the public key",
    "start": "1567020",
    "end": "1573559"
  },
  {
    "text": "okay and then the client just opens another channel to the API using the",
    "start": "1573559",
    "end": "1578900"
  },
  {
    "text": "same x509 certificate doing mtls right and then the API has the third from the",
    "start": "1578900",
    "end": "1586100"
  },
  {
    "text": "transport Channel it has the access token with the hash he hashes the transport Channel third compares the",
    "start": "1586100",
    "end": "1591620"
  },
  {
    "text": "hashes if they are the same the client has proven that he knows the secret and if an attacker would steal the thing",
    "start": "1591620",
    "end": "1599000"
  },
  {
    "text": "he would miss the x509 certificate which is you know only known to the client and then this wouldn't work",
    "start": "1599000",
    "end": "1606500"
  },
  {
    "text": "okay um if you wonder how such an access token",
    "start": "1606500",
    "end": "1611659"
  },
  {
    "text": "looks like it's um like this right there there's some JWT stuff and that there's a special claim that they introduced",
    "start": "1611659",
    "end": "1618080"
  },
  {
    "text": "it's called CNF or confirmation yeah and the confirmation means how how can the",
    "start": "1618080",
    "end": "1623779"
  },
  {
    "text": "client confirm that he knows the secret and that means x509 thumbprint insha",
    "start": "1623779",
    "end": "1630080"
  },
  {
    "text": "256. okay and that's the hash of the the sha256 hash of the of the x509",
    "start": "1630080",
    "end": "1638179"
  },
  {
    "text": "certificate how many.net developers are in the room",
    "start": "1638179",
    "end": "1643279"
  },
  {
    "text": "okay most of you um guess what that's the only code that is needed to create an x509 certificate",
    "start": "1643279",
    "end": "1648559"
  },
  {
    "text": "on the Fly I'm not saying it's pretty quote but you know it's boilerplate code yeah",
    "start": "1648559",
    "end": "1654080"
  },
  {
    "text": "and in case you wonder what what this number means this number means client certificate",
    "start": "1654080",
    "end": "1659420"
  },
  {
    "text": "[Laughter] it's an oid right some people love them",
    "start": "1659420",
    "end": "1665320"
  },
  {
    "text": "so um you know I mean since you have some time I I can quickly show you that um",
    "start": "1665320",
    "end": "1671000"
  },
  {
    "text": "so here's a version of identity server that is using mtls and you see once if",
    "start": "1671000",
    "end": "1678559"
  },
  {
    "text": "you have mtls then in your Discovery document that doesn't use a element here",
    "start": "1678559",
    "end": "1683960"
  },
  {
    "text": "called mtls endpoint aliases and they point to the mtls versions of the",
    "start": "1683960",
    "end": "1689059"
  },
  {
    "text": "standard oau of endpoints on your token server right so here's the token endpoint revocation introspection and",
    "start": "1689059",
    "end": "1694220"
  },
  {
    "text": "device authorization in this case um so",
    "start": "1694220",
    "end": "1699679"
  },
  {
    "text": "and you see also that typically you have to have to deploy mtls on a different domain right and they're just all all",
    "start": "1699679",
    "end": "1705380"
  },
  {
    "text": "sorts of complexity here definitely going on at the infrastructure level um",
    "start": "1705380",
    "end": "1710840"
  },
  {
    "text": "and then on the client side you first generate that certificate right that",
    "start": "1710840",
    "end": "1716059"
  },
  {
    "text": "that's the code I just showed you yeah that's this thing and then you request the token",
    "start": "1716059",
    "end": "1721880"
  },
  {
    "text": "and basically all you need to do when while requesting the token I love that projector really nice",
    "start": "1721880",
    "end": "1727580"
  },
  {
    "text": "um is to to basically bind the client certificate to your HTTP client right so",
    "start": "1727580",
    "end": "1733520"
  },
  {
    "text": "here we basically create the Handler put the third onto the transport and then we",
    "start": "1733520",
    "end": "1739159"
  },
  {
    "text": "use that HTTP client to request the token yeah that's how you do mtls internet",
    "start": "1739159",
    "end": "1744740"
  },
  {
    "text": "um then then you have the token and then you can call the service right and when calling",
    "start": "1744740",
    "end": "1752299"
  },
  {
    "text": "the service you're doing the same thing you are getting a decline use the same X1 x509 third you add the access token",
    "start": "1752299",
    "end": "1758779"
  },
  {
    "text": "and then you're calling the API right so if I would run that it's not very exciting like all my demos",
    "start": "1758779",
    "end": "1765620"
  },
  {
    "text": "that there's a token yeah yeah but you can see that that's the",
    "start": "1765620",
    "end": "1771080"
  },
  {
    "text": "access token coming back from the token server and you might not have seen this before here that that's the CNF claim I",
    "start": "1771080",
    "end": "1776899"
  },
  {
    "text": "mentioned earlier and that is now binding the access token to the client certificate okay and then on on the API",
    "start": "1776899",
    "end": "1785419"
  },
  {
    "text": "side of course you need to validate this and in in.net world you would probably have a middleware running after the",
    "start": "1785419",
    "end": "1791539"
  },
  {
    "text": "authentication that looks at the third looks at the token compares the two values and only if they match the call",
    "start": "1791539",
    "end": "1796880"
  },
  {
    "text": "gets through okay",
    "start": "1796880",
    "end": "1800620"
  },
  {
    "text": "so that's mtls as I said it if your company is already",
    "start": "1803120",
    "end": "1811100"
  },
  {
    "text": "having a working mtls infrastructure it's pretty easy to pull off because",
    "start": "1811100",
    "end": "1816320"
  },
  {
    "text": "they already know how that works right you have your pki and and all of that yeah",
    "start": "1816320",
    "end": "1821419"
  },
  {
    "text": "um the other thing that especially banks that like is that that this is not some new hipster stuff yeah it's like mtlers",
    "start": "1821419",
    "end": "1829640"
  },
  {
    "text": "and pki right I mean these are the things we do for 20 years now and they work yeah",
    "start": "1829640",
    "end": "1834860"
  },
  {
    "text": "um and yeah and I mean I give them that it's quite nice that there's a wider",
    "start": "1834860",
    "end": "1840380"
  },
  {
    "text": "range of special Hardware out there to support this like smart cards and uh um",
    "start": "1840380",
    "end": "1845440"
  },
  {
    "text": "hsms and you know all of that specialized Hardware the cons are exactly the opposite of",
    "start": "1845440",
    "end": "1851299"
  },
  {
    "text": "that right if you don't have that up and running it's really hard to get it up and running the learning curve is quite",
    "start": "1851299",
    "end": "1856520"
  },
  {
    "text": "steep yeah again pki and so on and especially for scenarios where you want to secure mobile applications right",
    "start": "1856520",
    "end": "1862460"
  },
  {
    "text": "whether the mobile application is somewhere on the internet and you want to guarantee that from that somewhere",
    "start": "1862460",
    "end": "1867740"
  },
  {
    "text": "place you open an mtls channel to your company server good luck",
    "start": "1867740",
    "end": "1874220"
  },
  {
    "text": "okay um oh yeah and actually you know like for the for the the spa people out there this doesn't work in browsers at all",
    "start": "1874220",
    "end": "1880700"
  },
  {
    "text": "right so it would not help in any way for that kind of scenario",
    "start": "1880700",
    "end": "1887360"
  },
  {
    "text": "so what's the alternative uh there's a new spec yeah it's basically",
    "start": "1887360",
    "end": "1895940"
  },
  {
    "text": "um in instead of trying to do this at the transport level it's trying to do it at the application Level meaning you",
    "start": "1895940",
    "end": "1903140"
  },
  {
    "text": "don't need the mtls pki blah blah blah blah stuff uh up and running okay it's",
    "start": "1903140",
    "end": "1908179"
  },
  {
    "text": "called depop it is in the last draft so the final call as they call it in in the",
    "start": "1908179",
    "end": "1913340"
  },
  {
    "text": "ITF so it's going to be released very soon and um yeah so you know before I hand",
    "start": "1913340",
    "end": "1920899"
  },
  {
    "text": "over to Steiner to show you all the nitty-gritty details um guess what I mean for most parts of",
    "start": "1920899",
    "end": "1927500"
  },
  {
    "text": "my career I I got away with just free icons for my PowerPoint slides the client the token server and the API",
    "start": "1927500",
    "end": "1934039"
  },
  {
    "text": "right um but you know same idea right the client generates a key",
    "start": "1934039",
    "end": "1939919"
  },
  {
    "text": "um and then it signs something special called the proof token and we'll show you how that proof token Works um in a",
    "start": "1939919",
    "end": "1945860"
  },
  {
    "text": "second and then you know you do a token request send the proof token along and the STS replies with an access token and",
    "start": "1945860",
    "end": "1953659"
  },
  {
    "text": "the proof token is signed so they put the hash of the public key into the",
    "start": "1953659",
    "end": "1959240"
  },
  {
    "text": "access token okay same idea just that you don't have to use x509 certificates really yeah and",
    "start": "1959240",
    "end": "1966200"
  },
  {
    "text": "then when you call the API you are sending along the access token create a new proof token using the same key pair",
    "start": "1966200",
    "end": "1972260"
  },
  {
    "text": "and again the API has both artifacts now and they compare the hashes and if they",
    "start": "1972260",
    "end": "1977720"
  },
  {
    "text": "match you know uh that that's good so Steiner how does that work yeah",
    "start": "1977720",
    "end": "1984380"
  },
  {
    "text": "uh so yeah just to to say it this is a really you",
    "start": "1984380",
    "end": "1991399"
  },
  {
    "text": "know big thing we're really looking forward to to start using this and and the thing is that Dominic was talking",
    "start": "1991399",
    "end": "1997399"
  },
  {
    "text": "about was that when Mutual TLS arrived everyone was you know well we finally",
    "start": "1997399",
    "end": "2003279"
  },
  {
    "text": "got the what we call sender constraining of tokens in place we can start using and uh their first",
    "start": "2003279",
    "end": "2010659"
  },
  {
    "text": "experiences was with the dialogue The Selection dialogues the user had to in browsers in browsers terrible terrible",
    "start": "2010659",
    "end": "2018580"
  },
  {
    "text": "and the ITF guy said whoa we can't use it and that's why they came up with a depop",
    "start": "2018580",
    "end": "2024220"
  },
  {
    "text": "spec so it's designed to be simple but of course it's you know to a certain",
    "start": "2024220",
    "end": "2030039"
  },
  {
    "text": "degree nothing is simple in this world but uh the thing is that it's uh it lets us",
    "start": "2030039",
    "end": "2038860"
  },
  {
    "text": "so I think the the the term uh sender Coast training is uh the best sort of",
    "start": "2038860",
    "end": "2044740"
  },
  {
    "text": "description you can use you're you're still achieving the same thing as you did with a mutual TLS you can straining",
    "start": "2044740",
    "end": "2052780"
  },
  {
    "text": "the token to one client so okay so",
    "start": "2052780",
    "end": "2058240"
  },
  {
    "text": "this is uh a request uh that's a pretty much a standard oauth",
    "start": "2058240",
    "end": "2063820"
  },
  {
    "text": "token request yeah yeah with one added artifact here and that's this one is it",
    "start": "2063820",
    "end": "2068980"
  },
  {
    "text": "the the the no I I don't have to oh okay good I can point instead okay so this is",
    "start": "2068980",
    "end": "2074858"
  },
  {
    "text": "this is one new thing so uh it's a new HTTP header where you put the depop",
    "start": "2074859",
    "end": "2081700"
  },
  {
    "text": "proof so remember you you uh you left the client uh generate the depop proof uh",
    "start": "2081700",
    "end": "2088599"
  },
  {
    "text": "and uh you put it in the not the authorization header but the depop",
    "start": "2088599",
    "end": "2093760"
  },
  {
    "text": "header it's a new thing uh and here you see the example of uh depop",
    "start": "2093760",
    "end": "2101740"
  },
  {
    "text": "proof uh there are some new uh claims here",
    "start": "2101740",
    "end": "2107080"
  },
  {
    "text": "um make special notes of these two the HTM States the method that this",
    "start": "2107080",
    "end": "2114700"
  },
  {
    "text": "token will be used for so you can say post or you know put or whatever",
    "start": "2114700",
    "end": "2120820"
  },
  {
    "text": "and the h t u is the URL that the token uh will be valid for",
    "start": "2120820",
    "end": "2128079"
  },
  {
    "text": "so all these are things that sort of narrow the scope of course in addition you have the jti which you will use to",
    "start": "2128079",
    "end": "2136240"
  },
  {
    "text": "make sure that the depop proof isn't used several times so a jti is basically",
    "start": "2136240",
    "end": "2142420"
  },
  {
    "text": "stands for short ID and it's a random number right it's basically used for replay attacks so that a server should",
    "start": "2142420",
    "end": "2149020"
  },
  {
    "text": "not accept the same jti in a given time window exactly",
    "start": "2149020",
    "end": "2154240"
  },
  {
    "text": "so this portion is also quite interesting this is where you have the public key it's a jwk format",
    "start": "2154240",
    "end": "2160859"
  },
  {
    "text": "and this is what the authorization server will use when it does its",
    "start": "2160859",
    "end": "2167500"
  },
  {
    "text": "calculations on its side yeah public key unique ID HTTP method",
    "start": "2167500",
    "end": "2174460"
  },
  {
    "text": "and HTTP URL so all these are registered in the Iana so it's a uh now and you know and the idea is that",
    "start": "2174460",
    "end": "2182800"
  },
  {
    "text": "that jwk is the public key of the key pair that the client generated and the",
    "start": "2182800",
    "end": "2188380"
  },
  {
    "text": "signature on the proof token proved that the client knows the private key yeah right",
    "start": "2188380",
    "end": "2194640"
  },
  {
    "text": "next one yeah so here you get uh",
    "start": "2195099",
    "end": "2201760"
  },
  {
    "text": "an example of what it looks like when it's uh generated this let's see this CNF claim uh contains the",
    "start": "2201760",
    "end": "2209500"
  },
  {
    "text": "JK difficult to pronounce and it's a hash",
    "start": "2209500",
    "end": "2215260"
  },
  {
    "text": "of the thumbprint uh I I love this and it's the basics before URL encoding of the jwkshar 256",
    "start": "2215260",
    "end": "2223119"
  },
  {
    "text": "front print of the public key yeah yeah you know it's obvious yeah",
    "start": "2223119",
    "end": "2229420"
  },
  {
    "text": "I talked to Dominic and I was afraid because my you know you have to have a very highly exercised tongue to be able",
    "start": "2229420",
    "end": "2236020"
  },
  {
    "text": "to pronounce it like Dominic did so I can't yeah all right so this is basically the same as you know the same claim as we had in",
    "start": "2236020",
    "end": "2242680"
  },
  {
    "text": "mutual DLS so it's uh it already it already exists there uh it's not it's not hard you know I",
    "start": "2242680",
    "end": "2249579"
  },
  {
    "text": "mean it's it's a simple addition um so I guess we can perhaps go to the",
    "start": "2249579",
    "end": "2255339"
  },
  {
    "text": "next one yeah and then when the client calls the API",
    "start": "2255339",
    "end": "2261520"
  },
  {
    "text": "you will do the regular stuff you'll have an authorization well actually not not exactly the regular one",
    "start": "2261520",
    "end": "2268359"
  },
  {
    "text": "because remember that always had Bearer in oauth it it's a new token type now",
    "start": "2268359",
    "end": "2273460"
  },
  {
    "text": "it's a depop token yes and what that means is it's an access token bound to a proof token yeah",
    "start": "2273460",
    "end": "2279940"
  },
  {
    "text": "and it's it's of course it's bound both ways so the depop token is a debuff",
    "start": "2279940",
    "end": "2286119"
  },
  {
    "text": "proof is bound to the access token and the X token is bound to the debug proof right so when the client now makes an",
    "start": "2286119",
    "end": "2291400"
  },
  {
    "text": "API call he needs to generate a proof token every single time for every call I mean keep that in mind right if it's not",
    "start": "2291400",
    "end": "2297640"
  },
  {
    "text": "coming for free um but this proof token basically looks pretty much the same right but as",
    "start": "2297640",
    "end": "2304599"
  },
  {
    "text": "Steiner just said yeah the access token contains the hash of the public key",
    "start": "2304599",
    "end": "2309820"
  },
  {
    "text": "which is binding the access token to the proof token and the proof token contains the hash of",
    "start": "2309820",
    "end": "2315820"
  },
  {
    "text": "the access token yeah so it's bound in both directions and now you see you have the htu which",
    "start": "2315820",
    "end": "2323800"
  },
  {
    "text": "is also kind of interesting when you do the first depop proof it's it points to",
    "start": "2323800",
    "end": "2329740"
  },
  {
    "text": "the Token endpoint well this one points to the API endpoint",
    "start": "2329740",
    "end": "2336400"
  },
  {
    "text": "so it's uh I mean this looks familiar I guess nothing nothing",
    "start": "2336400",
    "end": "2341920"
  },
  {
    "text": "too weird about it so a couple of comments here I think yeah is first of all",
    "start": "2341920",
    "end": "2347079"
  },
  {
    "text": "you know like the reason why many of these earlier specs failed was because they were so complicated right because",
    "start": "2347079",
    "end": "2352300"
  },
  {
    "text": "you had to sign the complete HTTP request and the body and the parameters and you know and so on so here they",
    "start": "2352300",
    "end": "2359859"
  },
  {
    "text": "deliberately only sign a subset of the of the HTTP request okay to not make it",
    "start": "2359859",
    "end": "2367060"
  },
  {
    "text": "overly complicated they're not selling the body for example right and and we have security people in the room is that a problem",
    "start": "2367060",
    "end": "2374280"
  },
  {
    "text": "so in theory right you could you could say huh um I could exchange the body with the",
    "start": "2375339",
    "end": "2380560"
  },
  {
    "text": "same post request to the same API endpoint and the proof token would still be valid right",
    "start": "2380560",
    "end": "2385960"
  },
  {
    "text": "why doesn't that work well it's bound to do it no no no what I",
    "start": "2385960",
    "end": "2391540"
  },
  {
    "text": "mean here is that's where the jti comes in right also API of course needs to",
    "start": "2391540",
    "end": "2396880"
  },
  {
    "text": "make sure that he will never see the same jti twice yeah so replay detection",
    "start": "2396880",
    "end": "2403660"
  },
  {
    "text": "it must be done okay and how how long should your replay",
    "start": "2403660",
    "end": "2408820"
  },
  {
    "text": "detection cache be what do you think how many hours or days of jtis do you need to check",
    "start": "2408820",
    "end": "2417000"
  },
  {
    "text": "pun well there is no expiration time right",
    "start": "2417760",
    "end": "2422800"
  },
  {
    "text": "it only has the IAT claim the issued ad claim which tells them when was the token created and now every API can",
    "start": "2422800",
    "end": "2430240"
  },
  {
    "text": "create their own policy in saying I'm only accepting tokens which are not older than a minute",
    "start": "2430240",
    "end": "2436540"
  },
  {
    "text": "for example right and for that minute you're keeping your jti cache so that you can make sure that you don't",
    "start": "2436540",
    "end": "2443440"
  },
  {
    "text": "see replayed proof tokens actually another piece of information",
    "start": "2443440",
    "end": "2451000"
  },
  {
    "text": "which is kind of interesting is that Microsoft actually has been using depop for a while in their products like Azure",
    "start": "2451000",
    "end": "2458560"
  },
  {
    "text": "uh yeah you know Microsoft is the company that likes to take pre-release specs yeah changes them a little bit",
    "start": "2458560",
    "end": "2466500"
  },
  {
    "text": "and and use them in their products exactly yeah so uh but that's that's also the",
    "start": "2466500",
    "end": "2473380"
  },
  {
    "text": "interesting thing is that they actually discovered some misusage of this pattern the or this mechanism so uh they had to",
    "start": "2473380",
    "end": "2482079"
  },
  {
    "text": "do some extensions based on their uh experiences and um you know so now they've sort of",
    "start": "2482079",
    "end": "2488740"
  },
  {
    "text": "fill the fill the gaps with the in the spec so yeah so I mean again this year",
    "start": "2488740",
    "end": "2495960"
  },
  {
    "text": "assumes you're using TLS so the transport is secure already right it it says You must sign the HTTP method and",
    "start": "2495960",
    "end": "2503200"
  },
  {
    "text": "you must sign the HTTP URL but the spec also says you can sign more parts of the HTTP request if you want to",
    "start": "2503200",
    "end": "2510579"
  },
  {
    "text": "right but then you're now getting again into the whole discussion of does the HTTP request on the client side look the",
    "start": "2510579",
    "end": "2516880"
  },
  {
    "text": "same as on the receiving end if the if there is a reverse proxy who shuffles around the query string parameters and",
    "start": "2516880",
    "end": "2522700"
  },
  {
    "text": "you know you can do it you can make it more complicated but the consensus is that this is signing enough yeah yeah",
    "start": "2522700",
    "end": "2530980"
  },
  {
    "text": "and we're happy about because at a certain point it looked like they were going to add a lot of stuff to it but they",
    "start": "2530980",
    "end": "2537700"
  },
  {
    "text": "managed to keep it simple enough I think so the point is what's the next slide here",
    "start": "2537700",
    "end": "2544380"
  },
  {
    "text": "you don't really use that on the API site because access tokens are used several times",
    "start": "2553960",
    "end": "2560099"
  },
  {
    "text": "sure using this the apis",
    "start": "2560099",
    "end": "2565180"
  },
  {
    "text": "uh the Replay for proof for for proof tokens not not for Access tokens yeah",
    "start": "2565180",
    "end": "2573599"
  },
  {
    "text": "oh yeah you have to you have to implement it yeah you have to at least have a policy for",
    "start": "2574900",
    "end": "2582579"
  },
  {
    "text": "um the freshness like what's the oldest issued ad you would accept right",
    "start": "2582579",
    "end": "2588700"
  },
  {
    "text": "um yeah so um quick quick thing um you know these days I'm not writing that",
    "start": "2588700",
    "end": "2593740"
  },
  {
    "text": "much code anymore but between Christmas and uh New Year's",
    "start": "2593740",
    "end": "2599319"
  },
  {
    "text": "Eve I found some time to do to prototype this yeah um the client-side at least so um",
    "start": "2599319",
    "end": "2608440"
  },
  {
    "text": "so basically the way in in.net you the easiest way in.net I found to retrofit",
    "start": "2608440",
    "end": "2614440"
  },
  {
    "text": "this to an existing system is uh you know what uh what an um HTTP message",
    "start": "2614440",
    "end": "2621400"
  },
  {
    "text": "Handler is in.net.net the HTTP client has an",
    "start": "2621400",
    "end": "2626680"
  },
  {
    "text": "extensibility infrastructure called an HP message Handler and you know the the idea is this here the client creates the",
    "start": "2626680",
    "end": "2633460"
  },
  {
    "text": "key pair okay in this case an RSA key it could be an an elliptic curve by the way",
    "start": "2633460",
    "end": "2639400"
  },
  {
    "text": "these are the only ones you allowed to use symmetric keys are forbidden which is good yeah",
    "start": "2639400",
    "end": "2644500"
  },
  {
    "text": "um and then you're basically just putting that key pair into your HTTP message Handler and then you're using",
    "start": "2644500",
    "end": "2650500"
  },
  {
    "text": "the method changer to make your outbound HTTP request and then this will basically for every outgoing request it",
    "start": "2650500",
    "end": "2657040"
  },
  {
    "text": "will create the proof token and send it along to the recipient okay",
    "start": "2657040",
    "end": "2663160"
  },
  {
    "text": "um and then on the receiving end so to speak right so imagine starting here is",
    "start": "2663160",
    "end": "2668380"
  },
  {
    "text": "the API right on on the receiving end you would extract the proof token from",
    "start": "2668380",
    "end": "2673780"
  },
  {
    "text": "the incoming request by extracting the header called depop",
    "start": "2673780",
    "end": "2678880"
  },
  {
    "text": "and then you know I am getting called why I get and this is My URL and that's",
    "start": "2678880",
    "end": "2684880"
  },
  {
    "text": "the access token that came along right and now you would validate all these things together and only if that returns",
    "start": "2684880",
    "end": "2690460"
  },
  {
    "text": "true so to speak it's a valid request so you would have to calculate right",
    "start": "2690460",
    "end": "2695560"
  },
  {
    "text": "calculate that's what the library would do yeah exactly so so um you you need to change your code to",
    "start": "2695560",
    "end": "2702160"
  },
  {
    "text": "implement that that technique right but I think this is a an okay way to do it because the impact",
    "start": "2702160",
    "end": "2709599"
  },
  {
    "text": "is not that big right the only impact you have or have to think about is uh what's the lifetime of your key material",
    "start": "2709599",
    "end": "2715480"
  },
  {
    "text": "do you wanna you know like what's your notion of a session so to speak I guess yeah",
    "start": "2715480",
    "end": "2721599"
  },
  {
    "text": "okay um so what's the summary what do you think",
    "start": "2721599",
    "end": "2729000"
  },
  {
    "text": "well uh I I said I haven't programmed for a long time but I actually did a",
    "start": "2729000",
    "end": "2736140"
  },
  {
    "text": "JavaScript implementation of uh depop a while ago and I was able to do it which",
    "start": "2736140",
    "end": "2742839"
  },
  {
    "text": "kind of says something because um yeah so I think it's you know it's uh",
    "start": "2742839",
    "end": "2749260"
  },
  {
    "text": "it's the way to do it for browser-based client clients I think it's a very good",
    "start": "2749260",
    "end": "2754300"
  },
  {
    "text": "uh solution for like native apps or desktop style apps as well but of course",
    "start": "2754300",
    "end": "2760300"
  },
  {
    "text": "it's it's more complicated it's it's you know in you need to handle",
    "start": "2760300",
    "end": "2765819"
  },
  {
    "text": "your keys you need to to do stuff in a safe way uh but the you know the the big big",
    "start": "2765819",
    "end": "2773020"
  },
  {
    "text": "benefit of this is you don't need the infrastructure you don't need to have all the setup uh and the you know the",
    "start": "2773020",
    "end": "2779859"
  },
  {
    "text": "the regular things that comes with initial TLS the only downside is that right now there is no commercial product",
    "start": "2779859",
    "end": "2785200"
  },
  {
    "text": "that exists that implements it yeah that's the nature of the spec you know",
    "start": "2785200",
    "end": "2790960"
  },
  {
    "text": "not being finalized uh we are working on it and we're going to release it you know mid next year I guess",
    "start": "2790960",
    "end": "2797920"
  },
  {
    "text": "um so yeah it's new technology right um it's it's been out there for a while and a",
    "start": "2797920",
    "end": "2804339"
  },
  {
    "text": "couple of companies have implemented like private implementations like Microsoft and some other so it works right but it's it's you know you",
    "start": "2804339",
    "end": "2810760"
  },
  {
    "text": "couldn't use it today right so you couldn't walk out of the room and say like okay I'm going to use depop",
    "start": "2810760",
    "end": "2815859"
  },
  {
    "text": "because you won't find the implementation of it at least in.net okay that maybe in in other places they",
    "start": "2815859",
    "end": "2821619"
  },
  {
    "text": "they do that right so I can add actually oh and the last thing because you mentioned browsers",
    "start": "2821619",
    "end": "2827319"
  },
  {
    "text": "yeah don't think depop will secure your JavaScript yeah no",
    "start": "2827319",
    "end": "2832700"
  },
  {
    "text": "[Laughter] um depop and they specifically say that",
    "start": "2832700",
    "end": "2838540"
  },
  {
    "text": "right at the beginning of the spec it's not a mitigation technique for cross-site scripting right and I'm doing Philips doing a talk",
    "start": "2838540",
    "end": "2845680"
  },
  {
    "text": "tomorrow morning and I'm doing a talk afterwards about the back and for front-end pattern and all of the things that people can do in the browser you",
    "start": "2845680",
    "end": "2851859"
  },
  {
    "text": "should come there if you are interested in why this is not the solution to that yeah",
    "start": "2851859",
    "end": "2857680"
  },
  {
    "text": "so the just a quick side note here as well so we work for the these are my",
    "start": "2857680",
    "end": "2863619"
  },
  {
    "text": "colleagues here we work for the for the Norwegian Health Network as consultants and we are actually mandating the far B",
    "start": "2863619",
    "end": "2871780"
  },
  {
    "text": "2.0 as technical uh security profile for using open ID connect and oauth and",
    "start": "2871780",
    "end": "2880720"
  },
  {
    "text": "we don't have support for Center constraining we do actually because we",
    "start": "2880720",
    "end": "2885819"
  },
  {
    "text": "use Dominic's product but it's uh so we do have neutral TLs but it's very very difficult to to do so we do",
    "start": "2885819",
    "end": "2893319"
  },
  {
    "text": "require it but we can't support it as well it will take a while but uh it's it's",
    "start": "2893319",
    "end": "2900220"
  },
  {
    "text": "good intentions I think that's the most important thing okay so I guess I get my final words here uh you know",
    "start": "2900220",
    "end": "2907540"
  },
  {
    "text": "better tokens as we now know have certain security properties right I mean the sky hasn't fallen yet yeah because",
    "start": "2907540",
    "end": "2914200"
  },
  {
    "text": "of Bearer tokens yeah so it I mean everybody is using them yeah",
    "start": "2914200",
    "end": "2919839"
  },
  {
    "text": "um it's not that you know there are risks that you can mitigate with things like token lifetimes and and other stuff",
    "start": "2919839",
    "end": "2926440"
  },
  {
    "text": "yeah but uh I'm not saying every single application out there now needs per approved possession tokens",
    "start": "2926440",
    "end": "2933220"
  },
  {
    "text": "okay it doesn't come for free that's my main point yeah it's not that you just flip a switch and suddenly everything is",
    "start": "2933220",
    "end": "2940000"
  },
  {
    "text": "uh is even more secure yeah you've seen that you have the choice between mtls which has complexity ID uh transport",
    "start": "2940000",
    "end": "2946720"
  },
  {
    "text": "layer you have the choice of depop which has complexity at the application layer and you need to make up your mind I I",
    "start": "2946720",
    "end": "2952720"
  },
  {
    "text": "guess at the end of the day as security guys always like to say it's a matter of",
    "start": "2952720",
    "end": "2957880"
  },
  {
    "text": "your thread model okay any questions",
    "start": "2957880",
    "end": "2964740"
  },
  {
    "text": "so we have a question there",
    "start": "2967060",
    "end": "2970859"
  },
  {
    "text": "or any vendor support that can make Bible to store tokens",
    "start": "2976480",
    "end": "2982540"
  },
  {
    "text": "using Depot nope",
    "start": "2982540",
    "end": "2986319"
  },
  {
    "text": "nope nope nope no please please go to this gentleman's talk tomorrow morning and",
    "start": "2987640",
    "end": "2994180"
  },
  {
    "text": "he'll tell you exactly why in in a 60 Minute format",
    "start": "2994180",
    "end": "2999060"
  },
  {
    "text": "yeah this doesn't change anything the browser is still",
    "start": "2999640",
    "end": "3004640"
  },
  {
    "text": "no no no no no no it's a structural problem that you can't solve in the",
    "start": "3005940",
    "end": "3011099"
  },
  {
    "text": "browser basically",
    "start": "3011099",
    "end": "3013819"
  },
  {
    "text": "yeah but if the browser could generate the uh",
    "start": "3019020",
    "end": "3024500"
  },
  {
    "text": "yeah sure",
    "start": "3024500",
    "end": "3028500"
  },
  {
    "text": "yeah to exercise",
    "start": "3031260",
    "end": "3036440"
  },
  {
    "text": "you're anyway [Laughter]",
    "start": "3039020",
    "end": "3046700"
  },
  {
    "text": "off the Record",
    "start": "3046700",
    "end": "3050000"
  },
  {
    "text": "laughs I promising that the girls are good",
    "start": "3051720",
    "end": "3058440"
  },
  {
    "text": "actually attached the heat up header to uh requested or something yeah but that would not solve the code the code",
    "start": "3058440",
    "end": "3064980"
  },
  {
    "text": "injection problem if the browser would do it for you then the attacker injecting the code into your application can do it as well",
    "start": "3064980",
    "end": "3072559"
  },
  {
    "text": "like that client and it's the same if you have cookies I'm not saying the point to be honest",
    "start": "3074900",
    "end": "3081780"
  },
  {
    "text": "yeah it's it's and as I said that there were revisions of the spec where",
    "start": "3081780",
    "end": "3087900"
  },
  {
    "text": "they thought they could solve the problem then they got told better partly by Philip and now the specs says very",
    "start": "3087900",
    "end": "3095880"
  },
  {
    "text": "clearly this is not um a counter measure for crosstalk",
    "start": "3095880",
    "end": "3101460"
  },
  {
    "text": "scripting if you have cross-scripting attacks depop will not solve that problem",
    "start": "3101460",
    "end": "3107059"
  },
  {
    "text": "yeah",
    "start": "3116280",
    "end": "3118280"
  },
  {
    "text": "yeah it's yes",
    "start": "3122059",
    "end": "3127740"
  },
  {
    "text": "no I mean it depends right replay care",
    "start": "3127920",
    "end": "3133559"
  },
  {
    "text": "maintaining replay caches at scale is hard right there are some products on the",
    "start": "3133559",
    "end": "3140099"
  },
  {
    "text": "server side that make it easier but ultimately you will always have a little latency between the moment you're",
    "start": "3140099",
    "end": "3145200"
  },
  {
    "text": "storing the GTI and the moment it will be available for someone else to check right so again it probably must so but",
    "start": "3145200",
    "end": "3152040"
  },
  {
    "text": "on top of that you have issued ads times and on top of that you had TLS you know",
    "start": "3152040",
    "end": "3157220"
  },
  {
    "text": "so these three things together kind of give you a much better",
    "start": "3157220",
    "end": "3163380"
  },
  {
    "text": "place but yeah we replay caching at Cloud scale is hard right",
    "start": "3163380",
    "end": "3171019"
  },
  {
    "text": "questions you can but for the same argument as",
    "start": "3171240",
    "end": "3177900"
  },
  {
    "text": "people say let's check the access tokens at the Gateway level yeah you can do it there are pros and cons for that I think",
    "start": "3177900",
    "end": "3183660"
  },
  {
    "text": "but that would not solve the the distributed caching problem",
    "start": "3183660",
    "end": "3190640"
  },
  {
    "text": "[Music] because it's up to the a to the receiver",
    "start": "3193860",
    "end": "3200040"
  },
  {
    "text": "to decide on their own but [Music] requirements um they didn't want to do a",
    "start": "3200040",
    "end": "3207359"
  },
  {
    "text": "so they did want to make it prescriptive right because now if they would have an expiration date then the token server",
    "start": "3207359",
    "end": "3213180"
  },
  {
    "text": "would decide about the policy of the API right what's the point yeah so it that's",
    "start": "3213180",
    "end": "3220140"
  },
  {
    "text": "why they said okay let's only put the creation date in there and the receiver decides what what's a good creation date",
    "start": "3220140",
    "end": "3227160"
  },
  {
    "text": "and what's the bad one",
    "start": "3227160",
    "end": "3230058"
  },
  {
    "text": "[Music] oh yeah in the Azure portal",
    "start": "3235740",
    "end": "3244619"
  },
  {
    "text": "Azure portal for example yeah I mean they're still you know storing access tokens in the browser and",
    "start": "3244619",
    "end": "3250920"
  },
  {
    "text": "it's kind of sensitive data as well right if somebody can control yourself I mean that you know I",
    "start": "3250920",
    "end": "3256500"
  },
  {
    "text": "mean so the browser-based applications are not really a good example because they they're all insecure at some point",
    "start": "3256500",
    "end": "3262380"
  },
  {
    "text": "yeah but um yeah I mean everywhere where it's about a lot of money",
    "start": "3262380",
    "end": "3267780"
  },
  {
    "text": "right or sensitive data like health health pii",
    "start": "3267780",
    "end": "3273480"
  },
  {
    "text": "you know but um so the I guess the the trade-off here is",
    "start": "3273480",
    "end": "3279480"
  },
  {
    "text": "right um ICD pop especially important for public clients",
    "start": "3279480",
    "end": "3285599"
  },
  {
    "text": "you know like like let's say your mobile application running on your phone right where you are using an untrusted Network",
    "start": "3285599",
    "end": "3292020"
  },
  {
    "text": "to call an API everywhere between your phone and and the API somebody could",
    "start": "3292020",
    "end": "3297720"
  },
  {
    "text": "today intercept better tokens potentially right depop would help tremendously with that because the the",
    "start": "3297720",
    "end": "3304200"
  },
  {
    "text": "mobile app will generate the key pair only they know the key pair right would get the token do the depot thing would",
    "start": "3304200",
    "end": "3310140"
  },
  {
    "text": "be much more secure right for server to server communication you know I mean that's already happening",
    "start": "3310140",
    "end": "3316319"
  },
  {
    "text": "in a data center so you can layer depop on top of that to get even more security and some regulations require it right",
    "start": "3316319",
    "end": "3323220"
  },
  {
    "text": "but for me The Sweet Spot for depop to be honest is is a native mobile applications",
    "start": "3323220",
    "end": "3330859"
  },
  {
    "text": "yes um we didn't mention that because we didn't want to make it too complicated but um at the same time the refresh",
    "start": "3338160",
    "end": "3344220"
  },
  {
    "text": "tokens are getting bound to the deeper proof as well so basically you have to show this uh when you're refreshing the",
    "start": "3344220",
    "end": "3350520"
  },
  {
    "text": "token you have to show again that you know the private key that was used in the initial token request before you can",
    "start": "3350520",
    "end": "3357359"
  },
  {
    "text": "get the refresh token for public clients at least yeah",
    "start": "3357359",
    "end": "3362720"
  },
  {
    "text": "please",
    "start": "3363359",
    "end": "3365779"
  },
  {
    "text": "[Music] us a large scale of provider",
    "start": "3370550",
    "end": "3376619"
  },
  {
    "text": "our main mitigation for not having proof of recession is",
    "start": "3376619",
    "end": "3383180"
  },
  {
    "text": "short-lived tokens uh the price of what we have effect to",
    "start": "3383180",
    "end": "3391680"
  },
  {
    "text": "having short-lipped tokens it's a lot of complexity in the",
    "start": "3391680",
    "end": "3396900"
  },
  {
    "text": "ecosystem you see over the so",
    "start": "3396900",
    "end": "3402540"
  },
  {
    "text": "introducing this will the security part is wrong but it's also",
    "start": "3402540",
    "end": "3411540"
  },
  {
    "text": "taking down the complexity the overall complexity you know all the clients all",
    "start": "3411540",
    "end": "3416700"
  },
  {
    "text": "the apis a lot but you're getting new complexity",
    "start": "3416700",
    "end": "3422339"
  },
  {
    "text": "somewhere else",
    "start": "3422339",
    "end": "3424940"
  },
  {
    "text": "okay oh question",
    "start": "3427800",
    "end": "3431240"
  },
  {
    "text": "yeah that's a good question yeah so that that goes back to my point of saying like if it's a server to server",
    "start": "3440300",
    "end": "3446280"
  },
  {
    "text": "communication already which would be the BFF right and they are happening in the same Data Center and you know then maybe",
    "start": "3446280",
    "end": "3453900"
  },
  {
    "text": "I maybe I wouldn't do it unless you live in a space where it's regulated",
    "start": "3453900",
    "end": "3459000"
  },
  {
    "text": "yeah yeah it's I mean a lot of those types of decisions need to be based on",
    "start": "3459000",
    "end": "3465660"
  },
  {
    "text": "risk assessment yeah but maybe I'm wrong and I just realized it's recorded yeah so I don't know",
    "start": "3465660",
    "end": "3470890"
  },
  {
    "text": "[Laughter] uh you know",
    "start": "3470890",
    "end": "3476660"
  },
  {
    "text": "it's a threat modeling thing to be honest and that's not even a joke",
    "start": "3477059",
    "end": "3482000"
  },
  {
    "text": "okay then thanks for your time see you around",
    "start": "3484020",
    "end": "3489619"
  },
  {
    "text": "oh",
    "start": "3494040",
    "end": "3496460"
  }
]