[
  {
    "text": "we weren't just moving to the cloud we were splitting up the monolith we were splitting up a mono repo um and we're",
    "start": "2320",
    "end": "7680"
  },
  {
    "text": "converting to .NET Core so we're doing a lot all in the one go but our main reasons why we wanted to do this was to",
    "start": "7680",
    "end": "14320"
  },
  {
    "text": "improve developer experience to improve build times to improve uh test run times and for me as",
    "start": "14320",
    "end": "23439"
  },
  {
    "text": "a dev the thing I really care about is time it takes to get your code merged and into production so we were doing",
    "start": "23439",
    "end": "29039"
  },
  {
    "text": "daily releases and they uh I wouldn't say manual it's a whole automated process but it's a custom process that",
    "start": "29039",
    "end": "35280"
  },
  {
    "text": "we wrote so we wanted to get rid of that as well observability we wanted to know what was slow we wanted better logs we",
    "start": "35280",
    "end": "42079"
  },
  {
    "text": "want better metrics we wanted better error viewing errors and stuff uh we wanted to embrace cloud",
    "start": "42079",
    "end": "48719"
  },
  {
    "text": "services so we wanted to be able to do dynamic scaling as I said before we were massively overprovisioned for peak load",
    "start": "48719",
    "end": "55039"
  },
  {
    "text": "time we want to be able to scale down when we didn't need it uh we wanted uh multi-reion for performance reasons and",
    "start": "55039",
    "end": "61920"
  },
  {
    "text": "we wanted to be able to uh spin up a new cloud service if we needed a new database before we'd have to provision a",
    "start": "61920",
    "end": "67680"
  },
  {
    "text": "new server a couple of servers um install the software keep it up to date patching blah blah blah in cloud you can",
    "start": "67680",
    "end": "73600"
  },
  {
    "text": "say give me database and you get a database awesome and Rome to Rio uh a big uh two",
    "start": "73600",
    "end": "80159"
  },
  {
    "text": "big concerns security and performance so we wanted um code to be more secure we",
    "start": "80159",
    "end": "85200"
  },
  {
    "text": "wanted the app to be more secure we wanted to read only containers we wanted infrastructure as code so we could spin",
    "start": "85200",
    "end": "90640"
  },
  {
    "text": "up uh the whole site if we wanted to and performance we didn't want to",
    "start": "90640",
    "end": "96159"
  },
  {
    "text": "slow down our site performance is a big big deal for Runtorio we have lots and lots of pages we want them to be indexed",
    "start": "96159",
    "end": "101520"
  },
  {
    "text": "by Google very quickly so in this talk I'm going to talk about our strategy uh talk about",
    "start": "101520",
    "end": "110200"
  },
  {
    "text": "decoupling HTTP then the actual migration and what the outcomes",
    "start": "110200",
    "end": "115960"
  },
  {
    "text": "were so let's get started with the strategy so here's a plan of attack this is our monolith which I've just invented",
    "start": "115960",
    "end": "123040"
  },
  {
    "text": "four different services uh logical components I should say not services logical components as an example so uh",
    "start": "123040",
    "end": "129759"
  },
  {
    "text": "we had a lot more than this we have a lot more and some of these you know I just made these up we have as an example",
    "start": "129759",
    "end": "135040"
  },
  {
    "text": "we might have four different components logical components for our app pricing trip building SEO and translations we do",
    "start": "135040",
    "end": "141200"
  },
  {
    "text": "a lot of SEO and trip building is the actual algorithm that calculates how to get from here to here to here",
    "start": "141200",
    "end": "147760"
  },
  {
    "text": "so our strategy big picture-wise is to um move that code out to a separate",
    "start": "147760",
    "end": "154599"
  },
  {
    "text": "service slap an API layer over the top pull out all that trip building code",
    "start": "154599",
    "end": "161840"
  },
  {
    "text": "logic move it to a different service put an API layer over the top change the monolith to call that API and then get",
    "start": "161840",
    "end": "167920"
  },
  {
    "text": "rid of that code that make sense did I go through that too quickly because that'll then reduce the size of a monolith it'll get",
    "start": "167920",
    "end": "174400"
  },
  {
    "text": "a part of the code running in the cloud i'll explain how we do all that in a sec uh and then keep moving stuff more and",
    "start": "174400",
    "end": "181200"
  },
  {
    "text": "more stuff into the cloud as smaller services um and then hopefully end up with a much smaller monolith that we",
    "start": "181200",
    "end": "187120"
  },
  {
    "text": "then bung into the cloud as well so to take an example uh so how are",
    "start": "187120",
    "end": "194720"
  },
  {
    "text": "we actually going to do this from C point of view we started with our Rome 30 web application which is net",
    "start": "194720",
    "end": "201040"
  },
  {
    "text": "framework and the first step was to grab the trip building logic find the trip building",
    "start": "201040",
    "end": "206959"
  },
  {
    "text": "logic in all of that code and move it out to a .NET standard project .NET standard 2.0 we're running .NET",
    "start": "206959",
    "end": "212480"
  },
  {
    "text": "Framework 4.7 so move that all out to a .NET standard project and have as much all",
    "start": "212480",
    "end": "218080"
  },
  {
    "text": "the trip building code in the uh trip building project then build a .NET 9 uh small API",
    "start": "218080",
    "end": "226640"
  },
  {
    "text": "application that references the same code and then that becomes our new",
    "start": "226640",
    "end": "232840"
  },
  {
    "text": "service you'll notice that the line uh connecting Rome to web to trip builder",
    "start": "232840",
    "end": "237920"
  },
  {
    "text": "still exists so ah and then actually call the API from the",
    "start": "237920",
    "end": "243319"
  },
  {
    "text": "monolith you'll notice that that arrow still exists this means we can do both at the same time so we call the API to",
    "start": "243319",
    "end": "249680"
  },
  {
    "text": "build our trip we get back the result we also do the trip building inside Romeo web and we compare the two results and",
    "start": "249680",
    "end": "255840"
  },
  {
    "text": "make sure that they're uh giving the same results if they're not we know there's something wrong with frame 3 web or something wrong with the trip builder",
    "start": "255840",
    "end": "262079"
  },
  {
    "text": "API because the .NET standard code it's literally the same code so it was a",
    "start": "262079",
    "end": "267440"
  },
  {
    "text": "really nice approach because it means we could just gradually move our code into the uh run through a trip builder net",
    "start": "267440",
    "end": "273280"
  },
  {
    "text": "standard project we could do this daily we could keep deploying the monolith to production and the monolith in",
    "start": "273280",
    "end": "278479"
  },
  {
    "text": "production will be using the trip new trip building code it's the same code so we really wanted to avoid the huge big",
    "start": "278479",
    "end": "285120"
  },
  {
    "text": "bang approach and this lets us get there for our very first service we did we did do the big bang approach because the",
    "start": "285120",
    "end": "291840"
  },
  {
    "text": "amount of code was only like sort of 50 files compared to the trip building which is you know heaps bigger um and of",
    "start": "291840",
    "end": "298400"
  },
  {
    "text": "course as soon as people then want to start making changes to that code while you're migrating it it's a nightmare don't do that uh so we did it all in the",
    "start": "298400",
    "end": "305919"
  },
  {
    "text": "monolith we did it all in the uh monor repo",
    "start": "305919",
    "end": "311520"
  },
  {
    "text": "so that's all well and good from uh and then uh and then once we're all happy that it's all good sever the link from",
    "start": "311520",
    "end": "318080"
  },
  {
    "text": "Rome 3 web to trip building and call the API for",
    "start": "318080",
    "end": "323680"
  },
  {
    "text": "everything so how we actually going to do this from a coding point of",
    "start": "325000",
    "end": "330639"
  },
  {
    "text": "view at the class level here's our code application code calls a trip building",
    "start": "331080",
    "end": "336800"
  },
  {
    "text": "code i just invented three classes that calls route builder that calls route finder we want to move the bottom three",
    "start": "336800",
    "end": "342720"
  },
  {
    "text": "classes into a new .NET standard project what you need to do is start at",
    "start": "342720",
    "end": "347759"
  },
  {
    "text": "the bottom of the dependency tree so routeinder isn't referencing anything else so it's easy to grab that class",
    "start": "347759",
    "end": "354400"
  },
  {
    "text": "move it into your .NET standard project and then add a reference from your .NET web .net framework project and reference",
    "start": "354400",
    "end": "360639"
  },
  {
    "text": "a route finder class as part of doing that uh you need to upgrade the code to .NET standard which wasn't too hard for",
    "start": "360639",
    "end": "367360"
  },
  {
    "text": "us uh but thirdarty dependencies need to make sure any Nougat packages that are Windows only oh we wanted to run on",
    "start": "367360",
    "end": "373360"
  },
  {
    "text": "Linux as well uh but any projects that are referenced that are not net standard that needs to be",
    "start": "373360",
    "end": "380120"
  },
  {
    "text": "fixed so then we move uh slowly move everything else into that project trying",
    "start": "380120",
    "end": "385199"
  },
  {
    "text": "to work out where the dependencies are and slowly moving them all into uh your .NET standard project this is all done",
    "start": "385199",
    "end": "391680"
  },
  {
    "text": "in the in the uh monor repo and then like I said before we're going to then",
    "start": "391680",
    "end": "397120"
  },
  {
    "text": "add our trip builder APIN net 9 application and reference that common",
    "start": "397120",
    "end": "402800"
  },
  {
    "text": "project and I think I said this before as well make the HTTP call down to there and get rid of that",
    "start": "403960",
    "end": "410120"
  },
  {
    "text": "link so that's all well and good from uh just moving files around but files might",
    "start": "410120",
    "end": "416560"
  },
  {
    "text": "have some code that's got something to do with trip building and some might not so um if we keep it all within a a monor",
    "start": "416560",
    "end": "424280"
  },
  {
    "text": "repo what see the problem that you will inevitably have is that if there's code",
    "start": "424280",
    "end": "429440"
  },
  {
    "text": "that's referencing that trip building code even if it's calling the API there will inevitably there'll be some",
    "start": "429440",
    "end": "434479"
  },
  {
    "text": "coupling that's creeping back in that's calling code that's inside your trip builder uh project or within even within",
    "start": "434479",
    "end": "440880"
  },
  {
    "text": "the API project so we want to get to this state where we've got our separate monor repo we've got our trip building",
    "start": "440880",
    "end": "447520"
  },
  {
    "text": "repo that's completely separate but the problem is is this link here and I'm",
    "start": "447520",
    "end": "452560"
  },
  {
    "text": "really good at PowerPoint animations and all that so I was trying to illustrate the point how uh that pipe that arrow is",
    "start": "452560",
    "end": "459039"
  },
  {
    "text": "actually massive uh and lots and lots of connections they're all the ones you're going to have to gradually get rid of",
    "start": "459039",
    "end": "464639"
  },
  {
    "text": "that was terrible on purpose in case you're wondering uh right so this is where things start kind of getting",
    "start": "464639",
    "end": "470720"
  },
  {
    "text": "difficult so in reality we may think we have something like this our application code",
    "start": "470720",
    "end": "476479"
  },
  {
    "text": "that's referencing our three classes and uh we're in a monor repo so what always",
    "start": "476479",
    "end": "482319"
  },
  {
    "text": "ends up happening is there's more and more apps they get added to your monor repo and they start referencing more and more classes and code inside your monor",
    "start": "482319",
    "end": "489960"
  },
  {
    "text": "repo and you got lots and lots of apps lots of things pointing towards different classes but we want to move all this out to a completely separate",
    "start": "489960",
    "end": "496240"
  },
  {
    "text": "repo so all the code that's reusing that stuff they need to go via the API or they need there's a couple of different",
    "start": "496240",
    "end": "502240"
  },
  {
    "text": "approaches we can use to fix this problem so um I think I've worked out about five or six different approaches",
    "start": "502240",
    "end": "508080"
  },
  {
    "text": "that we found most useful uh techniques you can use to sever these",
    "start": "508080",
    "end": "513240"
  },
  {
    "text": "dependencies first one if it's an app that hopefully people don't care about or forgotten about or no longer using",
    "start": "513240",
    "end": "519839"
  },
  {
    "text": "delete it the amount of times we posted and said \"Hey is anyone using this class anyone using this program you know this",
    "start": "519839",
    "end": "526480"
  },
  {
    "text": "functionality and people go I think we really need it delete it uh it just saves so much effort when it comes to",
    "start": "526480",
    "end": "532399"
  },
  {
    "text": "porting um and it's you know it's always in source control you can always recover it you never need to recover it but yeah",
    "start": "532399",
    "end": "540160"
  },
  {
    "text": "so delete is a big one duplicate it if you need some of the route finding logic",
    "start": "540160",
    "end": "545519"
  },
  {
    "text": "in Rome's rear web you could duplicate it that's an option hopefully it'll send",
    "start": "545519",
    "end": "551200"
  },
  {
    "text": "a shiver up the back the spine of every developer who doesn't want to duplicate code and knows how horrible it is but if",
    "start": "551200",
    "end": "556480"
  },
  {
    "text": "we're going to move off these two things they're two completely separate teams if it's simple code if it's just doing",
    "start": "556480",
    "end": "561760"
  },
  {
    "text": "nothing not business logic code if it doesn't matter there might be two different copies of it running in two different places not the worst thing in",
    "start": "561760",
    "end": "568399"
  },
  {
    "text": "the world you can duplicate it i know it might sound horrible but",
    "start": "568399",
    "end": "574240"
  },
  {
    "text": "you can do it it's an option what's our next option uh we can",
    "start": "574240",
    "end": "582000"
  },
  {
    "text": "turn it into a NuGet package so if we do actually want to version that logic if",
    "start": "582000",
    "end": "587760"
  },
  {
    "text": "there's some logic that's in the route finding logic that doesn't just need to be in Rome 3 web in our web application",
    "start": "587760",
    "end": "594080"
  },
  {
    "text": "but it needs to be in our trip building application and it's legitimate logic you might want to turn it into a new get",
    "start": "594080",
    "end": "599200"
  },
  {
    "text": "package uh there's a lot of downsides to this it means now you got to worry about backwards compatibility you got to be",
    "start": "599200",
    "end": "605360"
  },
  {
    "text": "worried about semantic versioning and um publishing new versions and trying to make sure people are kept up to date but",
    "start": "605360",
    "end": "612320"
  },
  {
    "text": "it can work it's really great for utility code it's fine if there's um",
    "start": "612320",
    "end": "617600"
  },
  {
    "text": "you're not worried that there's going to be different apps in production using different versions of that code that's",
    "start": "617600",
    "end": "622959"
  },
  {
    "text": "how we kind of look at it if it is going to be a problem chuck it into the API and slip",
    "start": "622959",
    "end": "630000"
  },
  {
    "text": "an API endpoint layer over the top of it uh this can be quite handy um and this",
    "start": "630000",
    "end": "637040"
  },
  {
    "text": "question really comes down to do you want that route finding logic does it actually belong in the business domain",
    "start": "637040",
    "end": "642079"
  },
  {
    "text": "of trip building or does it belong in somewhere else should it be there or not and if it's going to be reused by other",
    "start": "642079",
    "end": "651079"
  },
  {
    "text": "applications the other option that that sometimes doesn't occur to people is just to ask the question well actually",
    "start": "651079",
    "end": "656240"
  },
  {
    "text": "does that route finding logic actually belong in uh trip building at all maybe it's business-wise it's it's not the",
    "start": "656240",
    "end": "663200"
  },
  {
    "text": "right domain and it actually just needs to be moved back into Rome for web and the trip building logic needs to be",
    "start": "663200",
    "end": "668320"
  },
  {
    "text": "changed to not do route finding anymore so that's about your main",
    "start": "668320",
    "end": "673600"
  },
  {
    "text": "options uh and a couple of different solutions uh then there's the uh the",
    "start": "673600",
    "end": "679279"
  },
  {
    "text": "joys of when you might see this problem you've got round route.cs you start digging through the code how many people",
    "start": "679279",
    "end": "684880"
  },
  {
    "text": "have seen this ratfinder 2.cs that's a copy and there's about five lines that are different um I know I said dry isn't",
    "start": "684880",
    "end": "692480"
  },
  {
    "text": "the worst thing in the world but if it's in the same project you know not cool uh if that happens you might want to then",
    "start": "692480",
    "end": "698320"
  },
  {
    "text": "consider trying to merge it together slapping an enum over the top and saying \"Well in this case we want to use this one in this case we want to use this",
    "start": "698320",
    "end": "706560"
  },
  {
    "text": "one.\" Just cool going too fast all good making sense cool so uh let's actually",
    "start": "707320",
    "end": "714800"
  },
  {
    "text": "look down at the code level so that was all looking at classes but let's look at some code and how we're going to split that up so let's say this is our code",
    "start": "714800",
    "end": "723120"
  },
  {
    "text": "that uh builds a trip vastly simplified but it's doing three things it's calculating routes um it is working out",
    "start": "723120",
    "end": "730959"
  },
  {
    "text": "the price and then working out the description but for our trip building let's say in this example we don't want",
    "start": "730959",
    "end": "736959"
  },
  {
    "text": "to actually do pricing in our trip building we want to keep that in the monolith so that logic doesn't really",
    "start": "736959",
    "end": "742320"
  },
  {
    "text": "belong there um and I've had a close look at the calculate description function and the calculate description",
    "start": "742320",
    "end": "749279"
  },
  {
    "text": "doesn't depend on the pricing so in this case we can go okay cool let's move the",
    "start": "749279",
    "end": "754959"
  },
  {
    "text": "uh all the route building and the description building uh to happen first and let's do the price building at the",
    "start": "754959",
    "end": "762120"
  },
  {
    "text": "end so what if we did that it would look something like that build all the routes without pricing and then do the pricing",
    "start": "762120",
    "end": "769839"
  },
  {
    "text": "do a loop uh and then of course this does uh",
    "start": "769839",
    "end": "777040"
  },
  {
    "text": "beg a problem i won't get into that one yet uh and then we've got our that",
    "start": "777040",
    "end": "782800"
  },
  {
    "text": "function then becomes our API code so we had the um build routes without pricing",
    "start": "782800",
    "end": "789200"
  },
  {
    "text": "that's the stuff that is actually the route building here's the function as oh we saw that before three slides ago",
    "start": "789200",
    "end": "794959"
  },
  {
    "text": "calculate routes do the descriptions and return the trip that's now our API",
    "start": "794959",
    "end": "801000"
  },
  {
    "text": "code we can now move that to a separate class we can move that out to our .NET standard",
    "start": "801000",
    "end": "808160"
  },
  {
    "text": "project there we go we can move it out to a new class um hopefully it's static and it's not referencing other things as",
    "start": "811240",
    "end": "816480"
  },
  {
    "text": "well then we got to work out what to do with them if they are but we got another problem that's just the actual logic but",
    "start": "816480",
    "end": "823279"
  },
  {
    "text": "we're returning returning a route so we have a problem with our route has uh",
    "start": "823279",
    "end": "828560"
  },
  {
    "text": "pricing flights trains and descriptions and for our trip building we don't want",
    "start": "828560",
    "end": "833600"
  },
  {
    "text": "to have to do anything to do with pricing so we don't want to have this price object in the route class but we",
    "start": "833600",
    "end": "838959"
  },
  {
    "text": "need to move that route class in the .NET standard project so this is a technique that we",
    "start": "838959",
    "end": "844959"
  },
  {
    "text": "use really extensively and really heavily which is to move the route uh into the and it standard projects call",
    "start": "844959",
    "end": "851360"
  },
  {
    "text": "it route without pricing and subclass it and in the monolith uh inherit from it",
    "start": "851360",
    "end": "856639"
  },
  {
    "text": "and add the properties that the monolith might need and we use this really extensively and it was actually a really",
    "start": "856639",
    "end": "862240"
  },
  {
    "text": "nice pattern it worked really well uh we tried lots of different ways to kind of work a way around this problem to help",
    "start": "862240",
    "end": "867760"
  },
  {
    "text": "move stuff into a separate project that's decoupled this is a really good approach",
    "start": "867760",
    "end": "874560"
  },
  {
    "text": "um and then what's great then is that because we have our nice classes uh with",
    "start": "875320",
    "end": "881519"
  },
  {
    "text": "the uh the pricing without pricing they become our DTO's so we can reuse these",
    "start": "881519",
    "end": "887519"
  },
  {
    "text": "existing classes that are here i wouldn't recommend it because we had lots of other code in the monolith and",
    "start": "887519",
    "end": "892639"
  },
  {
    "text": "trip building dependent on lots of other properties so um build some nice DTO's",
    "start": "892639",
    "end": "898480"
  },
  {
    "text": "and then map from your DTO's to your business",
    "start": "898480",
    "end": "903519"
  },
  {
    "text": "objects and we've pretty much got almost all of our code here to call the API um",
    "start": "903720",
    "end": "909360"
  },
  {
    "text": "we've got our function that's in .NET standard it's returning DTO's it's got a nicely uh it's the domain is right and",
    "start": "909360",
    "end": "918000"
  },
  {
    "text": "we can even change our code to start using these DTO's in the monolith while we're doing the trip building in the",
    "start": "918000",
    "end": "923920"
  },
  {
    "text": "monolith and we'll kind of simulate what will happen when we actually call the API and use the DTOS we can all do it",
    "start": "923920",
    "end": "929279"
  },
  {
    "text": "sort of uh in the monolith deploy that daily find out uh pros and cons find",
    "start": "929279",
    "end": "935440"
  },
  {
    "text": "bugs fix them all up as we go uh so yeah interfaces super helpful",
    "start": "935440",
    "end": "942000"
  },
  {
    "text": "for us definitely recommend them sorry subclassing interfaces as well if you've got a big class and it's got heaps of",
    "start": "942000",
    "end": "947680"
  },
  {
    "text": "functions but some of them don't belong in your new domain um you can hide them",
    "start": "947680",
    "end": "953040"
  },
  {
    "text": "behind using interfaces really really handy we use heaps of access modifiers setting things as private and protected",
    "start": "953040",
    "end": "960000"
  },
  {
    "text": "so that we knew that they were no longer accessed by uh the monolith and you can",
    "start": "960000",
    "end": "966000"
  },
  {
    "text": "do the same thing via extension methods which we briefly investigated wouldn't recommend it not really their kind of",
    "start": "966000",
    "end": "971519"
  },
  {
    "text": "intended use um I think their intended use is normally for when you don't really have access to the code um and it",
    "start": "971519",
    "end": "979440"
  },
  {
    "text": "just wasn't a good fit so I wouldn't recommend them all right so HTTP so we've got to",
    "start": "979440",
    "end": "986480"
  },
  {
    "text": "the point where we've got all of our separate code in uh .NET Standard we've built our",
    "start": "986480",
    "end": "991959"
  },
  {
    "text": "um there's our code and we started calling our API",
    "start": "991959",
    "end": "998000"
  },
  {
    "text": "there's a problem here with this code if fetch let's say we've also created another API which is fetch pricing and",
    "start": "998000",
    "end": "1005199"
  },
  {
    "text": "that's actually now fetching it from the API probably should be await by the way ah by the way if you're having an await",
    "start": "1005199",
    "end": "1010800"
  },
  {
    "text": "function please please postfix the name of the function with um async please",
    "start": "1010800",
    "end": "1017199"
  },
  {
    "text": "please do that uh some people just have the name of the function and then you can't tell that it's an async function it should end with the word async yes",
    "start": "1017199",
    "end": "1022720"
  },
  {
    "text": "please do that thank you very much and brand uh so if you're fetching a price from an API and you've retrofitted this",
    "start": "1022720",
    "end": "1028319"
  },
  {
    "text": "code to call the API whereas beforehand it was all just doing it in a separate function you've now um for every route",
    "start": "1028319",
    "end": "1035199"
  },
  {
    "text": "you're calling your API architecturally not cool i mean performance- wise not cool um instead of doing that you want",
    "start": "1035199",
    "end": "1041918"
  },
  {
    "text": "to just call it once and calculate it for multiple routes but um we found that",
    "start": "1041919",
    "end": "1047520"
  },
  {
    "text": "trying to sort of just pull out existing code chuck it just wrap an API layer over the top and previously the code",
    "start": "1047520",
    "end": "1055200"
  },
  {
    "text": "would never expect that function call to not work because now it's been called over HTTP it might it might fail there",
    "start": "1055200",
    "end": "1062880"
  },
  {
    "text": "might be so many more problems whereas uh there was no case of oh what happens when fetching pricing doesn't work so",
    "start": "1062880",
    "end": "1069440"
  },
  {
    "text": "trying to retrofit that to your code is can be really difficult so in that case you'd want to get rid of that loop alto",
    "start": "1069440",
    "end": "1075600"
  },
  {
    "text": "together send over all of the routes calculate all the prices send it back next problem that we came across",
    "start": "1075600",
    "end": "1083679"
  },
  {
    "text": "heavily bandwidth problems so let's say this is our DTO we've got an array of",
    "start": "1083679",
    "end": "1089280"
  },
  {
    "text": "all routes and then we've added a couple of sort of little helper properties so we've got dot first route which is the",
    "start": "1089280",
    "end": "1095520"
  },
  {
    "text": "first item in the list last route and then we've got a little uh expensive routes functionality which is is that",
    "start": "1095520",
    "end": "1103720"
  },
  {
    "text": "lazily might be lazy and when you hit that it's going to return all of that so that's great when you're um or running",
    "start": "1103720",
    "end": "1111120"
  },
  {
    "text": "it within your monolith in your application and this is all happening in memory and it's all using pointers so",
    "start": "1111120",
    "end": "1116799"
  },
  {
    "text": "adding new items here you're not consuming any more uh memory io apart from the pointer um but if you're going",
    "start": "1116799",
    "end": "1123280"
  },
  {
    "text": "to be sending this object now over the wire suddenly you're serializing your collection you're serializing first",
    "start": "1123280",
    "end": "1129200"
  },
  {
    "text": "route last route and expensive routes this was a big problem for us we had to really go through um all of our existing",
    "start": "1129200",
    "end": "1137640"
  },
  {
    "text": "uh models that we converted to DTO's calculated properties make sure that they work out if they belong which place",
    "start": "1137640",
    "end": "1145120"
  },
  {
    "text": "they belong or if at all if you could just get rid of them and maybe they don't that logic actually shouldn't really be in your in your DTO class at",
    "start": "1145120",
    "end": "1152120"
  },
  {
    "text": "all move it out somewhere else um so we had to go through the process sometimes",
    "start": "1152120",
    "end": "1158240"
  },
  {
    "text": "of normalizing data as I said before if you're now suddenly returning all of this stuff um you might be returning uh",
    "start": "1158240",
    "end": "1166160"
  },
  {
    "text": "lots of duplicate data because adding a pointer is cheap so your location object",
    "start": "1166160",
    "end": "1171200"
  },
  {
    "text": "might have a pointer to um a geo position that has a name and then you have other things that also point",
    "start": "1171200",
    "end": "1176880"
  },
  {
    "text": "towards other geo positions as I just made that class up um and so your JSON",
    "start": "1176880",
    "end": "1182799"
  },
  {
    "text": "might be a lot bigger than it actually needs to be so you want to start introducing IDs for those things and normalizing those things um we did this",
    "start": "1182799",
    "end": "1190320"
  },
  {
    "text": "for a few of our APIs um in other cases",
    "start": "1190320",
    "end": "1195360"
  },
  {
    "text": "a JSON wasn't a good fit for APIs returning way too much data so we investigated or we ended up using uh was",
    "start": "1195360",
    "end": "1202880"
  },
  {
    "text": "it Protobuff i think it was yep protobuff uh there's lots of other binary serializations but that worked for us uh so we're doing it from well",
    "start": "1202880",
    "end": "1210320"
  },
  {
    "text": "the service already supported Protobuff so that made sense so yeah uh now that you've",
    "start": "1210320",
    "end": "1217039"
  },
  {
    "text": "converted uh your code out to be in a separate service and you're calling it via",
    "start": "1217039",
    "end": "1222520"
  },
  {
    "text": "HTTP previously if it was just a function call it would work most of the time",
    "start": "1222520",
    "end": "1227600"
  },
  {
    "text": "but now you're doing it over HTTP and it's easy to kind of think to yourself ah it's all running in the same uh cloud",
    "start": "1227600",
    "end": "1234720"
  },
  {
    "text": "it's all running in the same you know service or the services right next to it in the same location 99% of the time my",
    "start": "1234720",
    "end": "1239919"
  },
  {
    "text": "calls are going to work right yeah they might it's surprising how often you just get failures for seemingly no reason or",
    "start": "1239919",
    "end": "1246559"
  },
  {
    "text": "weird response codes uh timeouts were a big issue for us uh and you really need",
    "start": "1246559",
    "end": "1252799"
  },
  {
    "text": "to um test locally your timeout logic uh specifically innet the way it can handle",
    "start": "1252799",
    "end": "1259960"
  },
  {
    "text": "timeouts is depending on the HTTP client that you're using it's different and it does it in different ways in so many",
    "start": "1259960",
    "end": "1266320"
  },
  {
    "text": "different ways uh it might be the connection timing out it might be the call that's timing out uh and you need to test it all make sure it's all",
    "start": "1266320",
    "end": "1272720"
  },
  {
    "text": "handled well the cancellation tokens I think um what was that guy's name did anyone go to that talk the async await",
    "start": "1272720",
    "end": "1279039"
  },
  {
    "text": "talk that was on just before me yes no that was a great talk go back and watch",
    "start": "1279039",
    "end": "1284720"
  },
  {
    "text": "that if you're doing async you can wait um you want to add in your retry logic",
    "start": "1284720",
    "end": "1290640"
  },
  {
    "text": "if a call fails sometimes just a call will just fail you get back a 500 or a",
    "start": "1290640",
    "end": "1295720"
  },
  {
    "text": "503 you might just better wait one second and call it again and it'll just work uh that actually became invaluable",
    "start": "1295720",
    "end": "1301679"
  },
  {
    "text": "we had to go through all of our source code and stick in retry logic for all of our HTTP calls circuit breakers people",
    "start": "1301679",
    "end": "1308000"
  },
  {
    "text": "do circuit breakers yes yes maybe so um",
    "start": "1308000",
    "end": "1313120"
  },
  {
    "text": "if you're calling your service a lot you're making 100 calls a second if it dies and you keep hitting it all those",
    "start": "1313120",
    "end": "1319760"
  },
  {
    "text": "requests are going to batch up and if you try to bring it back up um without spinning them all up in time and you",
    "start": "1319760",
    "end": "1324799"
  },
  {
    "text": "keep sending it requests it might not be able to start up and recover in time so if your uh application that's calling",
    "start": "1324799",
    "end": "1331039"
  },
  {
    "text": "your service uh detects that the whole thing is just failing constantly we set up a bunch of different thresholds",
    "start": "1331039",
    "end": "1336799"
  },
  {
    "text": "depending on the service uh you want to stop calling it so you can give it time to scale up and start back up again uh",
    "start": "1336799",
    "end": "1343200"
  },
  {
    "text": "that was actually really invaluable we had to go through all of that and stick in circuit breakers",
    "start": "1343200",
    "end": "1348520"
  },
  {
    "text": "everywhere cing I mean it solves a lot of problems but it causes hundred other problems but um if you're calling an API",
    "start": "1348520",
    "end": "1355280"
  },
  {
    "text": "and a lot of the time uh you're calling it with the same inputs if it's deterministic you can add a 30-cond",
    "start": "1355280",
    "end": "1360799"
  },
  {
    "text": "delay 30 second cache uh can really increase your performance um but you yeah there's lots of pros and cons to",
    "start": "1360799",
    "end": "1367960"
  },
  {
    "text": "cation and then async uh has anyone had to so when you're making a HTTP call now",
    "start": "1367960",
    "end": "1374480"
  },
  {
    "text": "it should be an async call right so previously it probably wasn't so if your function that's been called all the way",
    "start": "1374480",
    "end": "1380880"
  },
  {
    "text": "down here is now an async call you have to go all the way up your chain you're going to have to go all up your tree make every single damn thing async away",
    "start": "1380880",
    "end": "1387679"
  },
  {
    "text": "who has done that yes yes lots of hands up we can all meet up together and have a cry and a hug because it is painful",
    "start": "1387679",
    "end": "1395440"
  },
  {
    "text": "horrible difficult work but it needs to be done um we found that running in the cloud we prefer to have lots of smaller",
    "start": "1395440",
    "end": "1402880"
  },
  {
    "text": "um services so instead of having like um 10 servers that have eight CPUs prefer",
    "start": "1402880",
    "end": "1408480"
  },
  {
    "text": "to have 20 services with four CPUs and you're kind of living life on the edge a little bit before we were massively",
    "start": "1408480",
    "end": "1414200"
  },
  {
    "text": "overprovisioned but now um you really need to make sure you're keeping close",
    "start": "1414200",
    "end": "1419440"
  },
  {
    "text": "look of of your threads uh we had lots and lots of thread pooling uh thread starvation issues and we had to go",
    "start": "1419440",
    "end": "1426000"
  },
  {
    "text": "through all of our code and make sure async is being used done all the way up the chain so anyone had to fix async",
    "start": "1426000",
    "end": "1432400"
  },
  {
    "text": "over sync issues doing it in the constructor and h horrific um but you're",
    "start": "1432400",
    "end": "1437520"
  },
  {
    "text": "going to you have to do it there's just no two ways about it uh there's lots of people that post on how to do async over",
    "start": "1437520",
    "end": "1443039"
  },
  {
    "text": "sync just don't do it um there's a guy uh John Clearary is that his name is the",
    "start": "1443039",
    "end": "1448400"
  },
  {
    "text": "guru on async await he's the guru if you see anything posted by him sorry what's his name steven Clearary steven Clearary",
    "start": "1448400",
    "end": "1454960"
  },
  {
    "text": "he's the guy wrote the O'Reilly book I think um if you see anything posted by him on how to use async and await listen",
    "start": "1454960",
    "end": "1461919"
  },
  {
    "text": "to him he's the guy whereas there's lots of people who sort of say \"Ah you can just do this it'll be fine.\" But no listen to Steven Clear he's he's awesome",
    "start": "1461919",
    "end": "1470480"
  },
  {
    "text": "so a bunch of net uh specific stuff i mean some of that other stuff was but will probably apply even if you're not",
    "start": "1470480",
    "end": "1476240"
  },
  {
    "text": "doing .NET uh we found that using the new HTTP client was pretty much mandatory uh previously we were using uh",
    "start": "1476240",
    "end": "1484000"
  },
  {
    "text": "what's the old one called web request and I think there's an older HTTP client there's a couple of different ones the",
    "start": "1484000",
    "end": "1489600"
  },
  {
    "text": ".NET framework ones but using the new HTTP client uh we just had to move to it",
    "start": "1489600",
    "end": "1494960"
  },
  {
    "text": "uh it caters for lots of things that just don't really aren't that much of a problem if you're calling another",
    "start": "1494960",
    "end": "1500720"
  },
  {
    "text": "service that's just not running in the cloud it does a lot of uh DNS things and",
    "start": "1500720",
    "end": "1506320"
  },
  {
    "text": "security issues and uh we had to go through all of our code and convert it all to use the new HTTP client which in",
    "start": "1506320",
    "end": "1513760"
  },
  {
    "text": ".NET framework is a bit of a nightmare because to create a new HTTP client they",
    "start": "1513760",
    "end": "1518799"
  },
  {
    "text": "want you to use dependency injection and Net framework and dependency injection was never really designed so we really",
    "start": "1518799",
    "end": "1525200"
  },
  {
    "text": "had to go through and make all that work uh definitely worth doing um I can't actually remember how we did it what",
    "start": "1525200",
    "end": "1531120"
  },
  {
    "text": "what do we do we you create the what's that thing called the service client what's that thing called service",
    "start": "1531120",
    "end": "1536559"
  },
  {
    "text": "collection service collection you create new instance of your service collection at startup and then you can provision new ones i should say I've got a couple",
    "start": "1536559",
    "end": "1541760"
  },
  {
    "text": "of Rome guys here that are legends that did a lot of this work so I'm just looking them whenever I get stuck which",
    "start": "1541760",
    "end": "1546960"
  },
  {
    "text": "is nice thanks guys um reference comparisons so if you had a",
    "start": "1546960",
    "end": "1552240"
  },
  {
    "text": "function that's returning some objects you might be able to check if those objects are duplicates and it work fine if you're now calling an API and getting",
    "start": "1552240",
    "end": "1558880"
  },
  {
    "text": "back those objects the references aren't going to work but you're not going to be able to c catch that problem at compile",
    "start": "1558880",
    "end": "1564880"
  },
  {
    "text": "time everything will compile it'll run but the reference just won't match so we this b this bit us quite a few times so",
    "start": "1564880",
    "end": "1572400"
  },
  {
    "text": "you'll need to go through your code look for equals equals and if there's two objects just have a closer look at it on",
    "start": "1572400",
    "end": "1578720"
  },
  {
    "text": "a similar uh similar line get hash code works differently in .NET core as it does in .NET framework doesn't just give",
    "start": "1578720",
    "end": "1584960"
  },
  {
    "text": "different results it gives uh it works differently it'll give different results even while the on separate runs of the",
    "start": "1584960",
    "end": "1591679"
  },
  {
    "text": "application that bit us as well uh and then because they're running on Linux time zones just watch your time zones",
    "start": "1591679",
    "end": "1597679"
  },
  {
    "text": "lots of issues with time zones uh they were all I think they're all actually fixed in .NET 6 um but yeah you still",
    "start": "1597679",
    "end": "1606159"
  },
  {
    "text": "got to watch them because time zone names are different as they are in Linux as they are on Windows um .NET really",
    "start": "1606159",
    "end": "1611279"
  },
  {
    "text": "takes care of a lot of that now but if you had custom code which of course we did to look at time zone names it ain't",
    "start": "1611279",
    "end": "1616720"
  },
  {
    "text": "going to work all right how am I doing for time i'm doing good cool migration so uh we",
    "start": "1616720",
    "end": "1623679"
  },
  {
    "text": "moved to Kubernetes uh believe it or not we moved to GCP does anyone use GCP",
    "start": "1623679",
    "end": "1629840"
  },
  {
    "text": "apart from Rio people a couple of people cool um works fine yeah no complaints um",
    "start": "1629840",
    "end": "1636080"
  },
  {
    "text": "we ended up using uh for our monolith when it was just very very small and it",
    "start": "1636080",
    "end": "1641520"
  },
  {
    "text": "just had our legacy.NET framework stuff in it we ran that in uh we are running",
    "start": "1641520",
    "end": "1647200"
  },
  {
    "text": "that in Kubernetes as Windows containers that was pretty painful in GCP but I mean Windows containers are just painful",
    "start": "1647200",
    "end": "1653440"
  },
  {
    "text": "full stop uh you can't really blame Google for that uh so as part of moving to Kubernetes we",
    "start": "1653440",
    "end": "1659279"
  },
  {
    "text": "had to implement health check and readiness checks really important to get them right net core has a library to do",
    "start": "1659279",
    "end": "1666000"
  },
  {
    "text": "readiness checks we didn't know this so of course we wrote our own and then because you think how hard can it be you",
    "start": "1666000",
    "end": "1671200"
  },
  {
    "text": "just return okay if you know it gets hit right but it does some there's some weird things around receiving signals",
    "start": "1671200",
    "end": "1676799"
  },
  {
    "text": "that we ended up implementing oursel and then we found out net core has a readiness library that does that for you as well so check that out i can't",
    "start": "1676799",
    "end": "1682720"
  },
  {
    "text": "remember what it's called but just Google it you'll find it one of the big things other big things we had to do was",
    "start": "1682720",
    "end": "1688000"
  },
  {
    "text": "to change our uh service to load in the reference data after the application has",
    "start": "1688000",
    "end": "1693840"
  },
  {
    "text": "started up so this is a Kubernetes thing um but we found that if you start up",
    "start": "1693840",
    "end": "1700159"
  },
  {
    "text": "your app and it takes 2 or 3 minutes to start up Kubernetes would just kill it it would just refuse to wait that long",
    "start": "1700159",
    "end": "1706480"
  },
  {
    "text": "for your um health check to say it's okay so we had to change all of our apps to start up not load in any reference",
    "start": "1706480",
    "end": "1714480"
  },
  {
    "text": "data or not do lots of stuff at startup but then change the readiness probe to",
    "start": "1714480",
    "end": "1719600"
  },
  {
    "text": "return I'm not ready load all the startup data and then once all the startup data is loaded turn on the",
    "start": "1719600",
    "end": "1725120"
  },
  {
    "text": "readiness probe that worked really really well that was a really great pattern um but of course it means means",
    "start": "1725120",
    "end": "1731360"
  },
  {
    "text": "changing your app quite a lot if you're already doing that at startup uh Kubernetes seems to be designed",
    "start": "1731360",
    "end": "1737360"
  },
  {
    "text": "around environment variables for handling environment specific stuff .net framework was never really designed to do that so we had to kind of retrofit",
    "start": "1737360",
    "end": "1744080"
  },
  {
    "text": "all of that in there as well uh we wanted to run in uh readonly containers",
    "start": "1744080",
    "end": "1751039"
  },
  {
    "text": "we had lots of code that was accessing the disk and in Kubernetes land your Docker um container might just be killed",
    "start": "1751039",
    "end": "1757279"
  },
  {
    "text": "at any point in time so writing to disk is not cool so we did our best to get rid of it all uh would recommend that",
    "start": "1757279",
    "end": "1766480"
  },
  {
    "text": "uh I kind of mentioned this before so uh we ran one new smaller service in the",
    "start": "1766960",
    "end": "1772320"
  },
  {
    "text": "cloud we started with a really small one and learn got that live learned a lot",
    "start": "1772320",
    "end": "1777440"
  },
  {
    "text": "from that um when it was a I guess for all these previous ones I've been talking about uh internal services that",
    "start": "1777440",
    "end": "1784320"
  },
  {
    "text": "our monolith is going to call they're not actually public facing but if it was a public facing API um we mirrored",
    "start": "1784320",
    "end": "1791120"
  },
  {
    "text": "traffic to that API um and just sent it production traffic",
    "start": "1791120",
    "end": "1796640"
  },
  {
    "text": "and ignored the response but you know production traffic is a weird and wonderful world you never know what",
    "start": "1796640",
    "end": "1802000"
  },
  {
    "text": "you're going to get there's no um substitution for it so that was really handy in helping us find um stability",
    "start": "1802000",
    "end": "1807840"
  },
  {
    "text": "problems scaling problems errors stuff like that uh a real nightmare to do",
    "start": "1807840",
    "end": "1812880"
  },
  {
    "text": "actually um we ended up using something called Envoy I think is what we used for",
    "start": "1812880",
    "end": "1820480"
  },
  {
    "text": "doing that and it worked really well i should say that um we have two S surres",
    "start": "1820480",
    "end": "1826159"
  },
  {
    "text": "that did a heap of this work and they were awesome and they're both absolute legends and they're not here today which is a real shame because they deserve so",
    "start": "1826159",
    "end": "1832399"
  },
  {
    "text": "much of the glory um but yes pay your SRS SR are worth just every dollar you can throw at them they're great uh so",
    "start": "1832399",
    "end": "1839360"
  },
  {
    "text": "yeah we just sent mirrored traffic 1% of traffic uh to the monolith compared the results make sure it was giving back the",
    "start": "1839360",
    "end": "1844960"
  },
  {
    "text": "same results once we were happy with it slowly ramp up the traffic",
    "start": "1844960",
    "end": "1850320"
  },
  {
    "text": "uh as we receive a lot of traffic we wanted to do lots and lots of performance testing um for stability and",
    "start": "1850320",
    "end": "1855840"
  },
  {
    "text": "and for performance so making sure that we're not making things worse uh what we figured is that it's we were running",
    "start": "1855840",
    "end": "1862640"
  },
  {
    "text": "pretty much the same code um as what was in .NET framework and in the monolith but we're running it in .NET Core and we",
    "start": "1862640",
    "end": "1869840"
  },
  {
    "text": "found we got like a 10 20% increase purely because it's just running on .NET core or .NET 9 or 8 or whatever it was",
    "start": "1869840",
    "end": "1877240"
  },
  {
    "text": "um and so that was awesome so that we were hoping that that would sort of offset the overhead of calling the API",
    "start": "1877240",
    "end": "1883520"
  },
  {
    "text": "and all of the HTTP and the bandwidth and all of that and it did rinse and",
    "start": "1883520",
    "end": "1891440"
  },
  {
    "text": "repeat couple of other handy hints that I hope are handy um .NET Core needs",
    "start": "1892279",
    "end": "1897840"
  },
  {
    "text": "definitely at least two virtual CPUs to be happy for the garbage collection initially we were running on one vCP or",
    "start": "1897840",
    "end": "1902960"
  },
  {
    "text": "maybe even half a virtual CPU which is dumb um it's just never going to work so I think we're running on four for most",
    "start": "1902960",
    "end": "1909600"
  },
  {
    "text": "things now and it's much nicer yep don't try to be cheap or don't try to keep them too small uh this was a very very",
    "start": "1909600",
    "end": "1917600"
  },
  {
    "text": "hard earned lesson uh thread starvation looks really weird so we had lots of",
    "start": "1917600",
    "end": "1923840"
  },
  {
    "text": "issues with thread starvation when we hadn't fixed our async and await code and the app was well threads were being",
    "start": "1923840",
    "end": "1930799"
  },
  {
    "text": "starved your apps your threads just start piling up but within our code it looked like um our HTTP call HTTP calls",
    "start": "1930799",
    "end": "1939200"
  },
  {
    "text": "going out were timing out but it was because our code was um starved of threads to resume to receive the",
    "start": "1939200",
    "end": "1945200"
  },
  {
    "text": "response back uh and so yeah look at your number of threads you you need your",
    "start": "1945200",
    "end": "1951440"
  },
  {
    "text": "um your monitoring so you can look at your number of threads in your service and work out what your and as soon as you see it start to go out like that",
    "start": "1951440",
    "end": "1957760"
  },
  {
    "text": "that's your problem uh I did another talk on performance profiling and optimization a month or two ago at DDD",
    "start": "1957760",
    "end": "1965679"
  },
  {
    "text": "we talk about a lot of these issues so go look that one up it's on YouTube it's pretty good uh garbage collection",
    "start": "1965679",
    "end": "1973360"
  },
  {
    "text": "problems we had lots of garbage collection problems um we could have we",
    "start": "1973360",
    "end": "1978480"
  },
  {
    "text": "did do a big pass through of our code to try to fix obvious performance issues we still found that for um metrics like P99",
    "start": "1978480",
    "end": "1986399"
  },
  {
    "text": "there were still quite a lot of times where the uh some requests were just really really slow and it was because",
    "start": "1986399",
    "end": "1992080"
  },
  {
    "text": "the garbage collection was running we found that for our more heavyduty algorithmic code CPU intensive code uh",
    "start": "1992080",
    "end": "1999679"
  },
  {
    "text": "we turn off the readiness probe when we're about to do a garbage collection and garbage collection was taken like 3",
    "start": "1999679",
    "end": "2006320"
  },
  {
    "text": "5 seconds um and that worked really well once you've got enough instances running you can you can do that and get away",
    "start": "2006320",
    "end": "2011919"
  },
  {
    "text": "with it not a great solution i know they've made a lot of changes with .NET 9 has anyone moved from .NET 8 to .NET 9",
    "start": "2011919",
    "end": "2019600"
  },
  {
    "text": "and seen a difference in their garbage collection patterns if so I'd love to talk to you and to try to get to the",
    "start": "2019600",
    "end": "2025600"
  },
  {
    "text": "bottom of that and see if we can hopefully that'll solve some of our issues uh I've talked about thread",
    "start": "2025600",
    "end": "2031240"
  },
  {
    "text": "starvation problems uh and we also found quite a few sort of obscure code paths",
    "start": "2031240",
    "end": "2037039"
  },
  {
    "text": "if somebody was planning a trip from one location to another location where there was a lot of transit or there was just a",
    "start": "2037039",
    "end": "2042559"
  },
  {
    "text": "lot of something that we didn't really expect they would slow down and yeah running in the cloud and running in",
    "start": "2042559",
    "end": "2047840"
  },
  {
    "text": "smaller containers you're kind of living life on the edge you want to get your CPU utilization up quite high um and but",
    "start": "2047840",
    "end": "2054398"
  },
  {
    "text": "if you find one that's really slow that's now chewing up all the CPU you get into trouble so we spent a lot of time chasing down some requests that",
    "start": "2054399",
    "end": "2060960"
  },
  {
    "text": "were slow and fixing those up",
    "start": "2060960",
    "end": "2065000"
  },
  {
    "text": "all right so ripping off the band-aid so once we'd moved off sort of moved the majority of our services into GCP at",
    "start": "2066879",
    "end": "2074638"
  },
  {
    "text": "some stage we needed to go uh we've done as much as we can what's left in our",
    "start": "2074639",
    "end": "2080720"
  },
  {
    "text": "monolith is .NET framework code that doesn't receive a lot of traffic but we still need it there um it's not worth",
    "start": "2080720",
    "end": "2088158"
  },
  {
    "text": "spending months uh porting it or rewriting it um so we converted that to",
    "start": "2088159",
    "end": "2093358"
  },
  {
    "text": "uh so we use Windows containers for that anyone use Windows containers anyone use Windows containers okay you're all very",
    "start": "2093359",
    "end": "2099119"
  },
  {
    "text": "lucky people um I mean it's completely fair on Microsoft and Windows was never designed to do it it's a miracle that it",
    "start": "2099119",
    "end": "2106480"
  },
  {
    "text": "works at all and it did actually work really really well the application ran just exactly the same in a Windows",
    "start": "2106480",
    "end": "2112400"
  },
  {
    "text": "container as it did on our bare metal servers so it was cool it was a really good solution uh so we did actually do",
    "start": "2112400",
    "end": "2118960"
  },
  {
    "text": "it uh it was a little bit terrifying i think we made the switch at the start of this year i submitted this talk in",
    "start": "2118960",
    "end": "2124720"
  },
  {
    "text": "November so I wasn't actually sure if we would actually get it done by then and if I was just going to be you know spouting full load of nonsense but we",
    "start": "2124720",
    "end": "2130079"
  },
  {
    "text": "have actually done it um here's an example of the CPU so the uh the blue is",
    "start": "2130079",
    "end": "2136720"
  },
  {
    "text": "the .NET framework monolith and then the purple sorry if you're color blind or",
    "start": "2136720",
    "end": "2142000"
  },
  {
    "text": "something is uh the .NET core uh version of it and you can see as we so this is",
    "start": "2142000",
    "end": "2149280"
  },
  {
    "text": "running 50% 50% uh of traffic is going to still run through a web and 50% is",
    "start": "2149280",
    "end": "2154960"
  },
  {
    "text": "going to the net core version but you can see the CPU usage for the .NET um core version is what it's like a a fifth",
    "start": "2154960",
    "end": "2162640"
  },
  {
    "text": "or something over .NET framework one really really cool so there's just been so many performance optimizations in net",
    "start": "2162640",
    "end": "2170000"
  },
  {
    "text": "core and obviously framework is legacy now that it just really really made it was worth doing it um we did get the",
    "start": "2170000",
    "end": "2177440"
  },
  {
    "text": "performance down which is great uh average response time as seen by Google has dropped which was awesome it was up",
    "start": "2177440",
    "end": "2183119"
  },
  {
    "text": "pretty high where we're in the middle of things especially um calling lots of APIs from our legacy data center to GCP",
    "start": "2183119",
    "end": "2191599"
  },
  {
    "text": "that was quite slow of course um but we have got it down so it is possible uh",
    "start": "2191599",
    "end": "2197359"
  },
  {
    "text": "and we got autoscaling working which is very nice these two different services um yeah our uh our peak time is",
    "start": "2197359",
    "end": "2205839"
  },
  {
    "text": "America's middle of the day or something like that so our peak time is like our 1:00 a.m of course so you can see it",
    "start": "2205839",
    "end": "2211440"
  },
  {
    "text": "sort of scaling up at night time and then scaling down how am I doing for time how much",
    "start": "2211440",
    "end": "2217440"
  },
  {
    "text": "time have I got left can someone yell out i've got a timer here but I don't know when I started",
    "start": "2217440",
    "end": "2223760"
  },
  {
    "text": "10 minutes roughly 20 yeah 10 okay cool outcomes uh while doing this we moved",
    "start": "2223760",
    "end": "2231119"
  },
  {
    "text": "all of our services to uh continuous delivery and far out it's good um at my",
    "start": "2231119",
    "end": "2237520"
  },
  {
    "text": "last place that I worked I we still had uh things were done manually and it took a month to do a release and it was a",
    "start": "2237520",
    "end": "2243280"
  },
  {
    "text": "total nightmare when I came to run to rear releases were done daily and I'm like \"Yeah this is awesome daily releases.\" And then now that we've moved",
    "start": "2243280",
    "end": "2249680"
  },
  {
    "text": "all our services to uh continuous delivery soon as you merge it deploys to production now that I've gone back to uh",
    "start": "2249680",
    "end": "2256400"
  },
  {
    "text": "when we went back to the monolith daily releases I'm like oh man daily releases are horrible uh so yeah moving we moved",
    "start": "2256400",
    "end": "2263040"
  },
  {
    "text": "all these services to continuous delivery and it's really good it is worth doing website is faster yeah",
    "start": "2263040",
    "end": "2269200"
  },
  {
    "text": "smaller services are much easier to work on so uh with the trip building logic we",
    "start": "2269200",
    "end": "2274800"
  },
  {
    "text": "we are still in the process of completely decoupling it um but it is completely separate most of it 99% of it",
    "start": "2274800",
    "end": "2282640"
  },
  {
    "text": "and we have handed it off to another team who have been able to really work on that make lots of changes and not worry about breaking the rest of the",
    "start": "2282640",
    "end": "2288960"
  },
  {
    "text": "code uh and doing continuous delivery yeah it's really cool uh of course it's .NET core so you can develop on a Mac i",
    "start": "2288960",
    "end": "2295760"
  },
  {
    "text": "mean how many people use Macs how many people develop on a Mac how many people develop on Windows windows everyone yes",
    "start": "2295760",
    "end": "2302720"
  },
  {
    "text": "i saw one Mac guy um yes so you can develop on a Mac if you want to uh now",
    "start": "2302720",
    "end": "2309520"
  },
  {
    "text": "I'm not not going to lie to you hosting in the cloud much more expensive much much more expensive we're hoping it'll",
    "start": "2309520",
    "end": "2315119"
  },
  {
    "text": "be cheaper but you know it was not cheaper but we have saved so much time",
    "start": "2315119",
    "end": "2320960"
  },
  {
    "text": "in terms of um troubleshooting and maintaining and patching our bare metal production servers we've saved heaps of",
    "start": "2320960",
    "end": "2328400"
  },
  {
    "text": "time i'm sure the costs I mean I haven't talked to the finance guy or anything but I'm sure the the costs outweigh the",
    "start": "2328400",
    "end": "2334720"
  },
  {
    "text": "uh the costs of hosting in the cloud if you look at developer productivity and just how much time we spent troubleshooting it if a server goes down",
    "start": "2334720",
    "end": "2341200"
  },
  {
    "text": "or creating another bare metal server or whatever observability in net core is",
    "start": "2341200",
    "end": "2346800"
  },
  {
    "text": "awesome uh we use data dog i love it i think it's absolute best uh if you can move to data dog or something equivalent",
    "start": "2346800",
    "end": "2353520"
  },
  {
    "text": "go for it yeah really really cool and then of course the big big downside at moving uh breaking up your monolith into",
    "start": "2353520",
    "end": "2360400"
  },
  {
    "text": "multiple services you've added a lot more complexity so it's really nice it does mean that one team has worked on",
    "start": "2360400",
    "end": "2366320"
  },
  {
    "text": "can then work on that one service and deploy that and change that as often as they like but you know distributed",
    "start": "2366320",
    "end": "2372000"
  },
  {
    "text": "architecture uh it does add a lot of complexity only once or twice I have thought to myself man it'd be nice if",
    "start": "2372000",
    "end": "2378320"
  },
  {
    "text": "all this code was still in one place and I could just make the one change and deploy everything you know uh yes",
    "start": "2378320",
    "end": "2383520"
  },
  {
    "text": "definitely a thing um so learnings if I look back at the last this has probably",
    "start": "2383520",
    "end": "2389440"
  },
  {
    "text": "taken how long has it taken two two years three years three years I reckon um it was really really difficult anyone",
    "start": "2389440",
    "end": "2395920"
  },
  {
    "text": "say tells you this is going to be really easy is lying or just hasn't done it before or doesn't know um it was really",
    "start": "2395920",
    "end": "2401680"
  },
  {
    "text": "really difficult um the success of any really really big project I think the number one factor is do you have",
    "start": "2401680",
    "end": "2407599"
  },
  {
    "text": "management support so we were incredibly lucky that our engineering manager was fully 100% behind behind us and gave us",
    "start": "2407599",
    "end": "2414800"
  },
  {
    "text": "all the support we needed and was great but if you don't have that boy you're going to struggle good luck to you um a",
    "start": "2414800",
    "end": "2421520"
  },
  {
    "text": "good S sur is worth any amount of money sre are the best hire SRE i thought I was an S sur until I actually met one",
    "start": "2421520",
    "end": "2427920"
  },
  {
    "text": "and talked to a few and I am not an SR uh so hire hire some good SR and they",
    "start": "2427920",
    "end": "2433119"
  },
  {
    "text": "are great um sometimes listening to them talk I'm like \"Yep I have no idea what you're talking about",
    "start": "2433119",
    "end": "2438560"
  },
  {
    "text": "uh yeah and running on the cloud is yeah a bit like living life on the edge i kind of mentioned that one before um",
    "start": "2438560",
    "end": "2444880"
  },
  {
    "text": "another one that I've kind of noticed in the past six months or a year is um now",
    "start": "2444880",
    "end": "2450400"
  },
  {
    "text": "that we've sort of moved broken up our monolith into separate services um",
    "start": "2450400",
    "end": "2455440"
  },
  {
    "text": "getting people developers to think in terms of um not breaking uh the API",
    "start": "2455440",
    "end": "2461760"
  },
  {
    "text": "contract and maintaining backwards compatibility um it's a big change so in the past you'd sort of have your we had",
    "start": "2461760",
    "end": "2467599"
  },
  {
    "text": "a big uh monolith and big monor repo hit compile or you hit run and it works um now you got to think about um well do we",
    "start": "2467599",
    "end": "2474400"
  },
  {
    "text": "want to break compatibility do we need a new endpoint how do we uh what what about our data i haven't even talked",
    "start": "2474400",
    "end": "2479920"
  },
  {
    "text": "about data that's a whole another issue but getting devs to think in terms of moving from a monolith to services is",
    "start": "2479920",
    "end": "2487440"
  },
  {
    "text": "a big part of the work um and so we spent a lot of time educating people on how things we we want them to work",
    "start": "2487440",
    "end": "2495160"
  },
  {
    "text": "now another thing that's kind of overlooked is it's easy to kind of go \"Ah great we've converted everything to",
    "start": "2495160",
    "end": "2501599"
  },
  {
    "text": ".NET Core it runs faster there's lots of technical benefits of .NET Core it runs on Linux great.\" Um but there's heaps of",
    "start": "2501599",
    "end": "2508319"
  },
  {
    "text": "non- tech benefits for a business and using a modern tech stack it's great for",
    "start": "2508319",
    "end": "2513359"
  },
  {
    "text": "like employee morale i mean who wants to work on .NET Framework anymore um and it makes hiring a lot easier people want to",
    "start": "2513359",
    "end": "2520000"
  },
  {
    "text": "work on newer tech um and yeah it's easy to kind of overlook these things when",
    "start": "2520000",
    "end": "2525599"
  },
  {
    "text": "some managers might kind of go uh you nerds just want to do that because all you care about is latest technology but",
    "start": "2525599",
    "end": "2531200"
  },
  {
    "text": "it can actually really help the business as well that's a lot um there is a blog",
    "start": "2531200",
    "end": "2538400"
  },
  {
    "text": "post uh not a blog post a big article up on the site but if you just Google run through splitting up the monolith it's",
    "start": "2538400",
    "end": "2544160"
  },
  {
    "text": "there uh I go into a bit more detail on some of these topics so that's it thanks for having me",
    "start": "2544160",
    "end": "2552359"
  },
  {
    "text": "just one more thing I did think of uh we got two people other people from Romeo here co and Tom stand up aiden stand up",
    "start": "2555040",
    "end": "2560960"
  },
  {
    "text": "uh these guys stand up stand up set up stand up turn around these guys were extremely instrumental in doing um a lot",
    "start": "2560960",
    "end": "2567040"
  },
  {
    "text": "of the cloud stuff so if you don't want to talk to me or if I'm busy talk to these guys they know everything that I know they did heaps of the work as well",
    "start": "2567040",
    "end": "2573760"
  },
  {
    "text": "and were extremely helpful as well so thanks guys",
    "start": "2573760",
    "end": "2579160"
  }
]