[
  {
    "text": "welcome to technics and creating great cross-platform apps so I just want to set this thing to",
    "start": "9889",
    "end": "15889"
  },
  {
    "text": "start with about kind of the context of this talk and what we used to think",
    "start": "15889",
    "end": "21650"
  },
  {
    "text": "about as applications kind of started out on just the iPhone right just small mobile apps probably just consuming an",
    "start": "21650",
    "end": "27410"
  },
  {
    "text": "API and some content but since then apps have gotten wider and wider right we",
    "start": "27410",
    "end": "32418"
  },
  {
    "text": "have devices like tablets which you know but more attuned to like creating",
    "start": "32419",
    "end": "38239"
  },
  {
    "text": "content and since then things like Windows as well as Mac OS now have an",
    "start": "38239",
    "end": "43250"
  },
  {
    "text": "app store you have more more complex larger applications and now we're also seeing things on TVs like Apple TV Xbox",
    "start": "43250",
    "end": "51770"
  },
  {
    "text": "and sometimes even more esoteric devices such as hololens so we've got this kind of wider range of apps we want to",
    "start": "51770",
    "end": "58820"
  },
  {
    "text": "devices we're gonna target apps towards also this ends up meaning we want to probably target multiple platforms",
    "start": "58820",
    "end": "65590"
  },
  {
    "text": "depending on if you're mobile you're probably looking at just Apple and Android and if you're kind of hitting a",
    "start": "65590",
    "end": "70850"
  },
  {
    "text": "more wider range devices like desktops and TVs you're probably also gonna want to bring Windows into that so xamarin as",
    "start": "70850",
    "end": "77390"
  },
  {
    "text": "a tool sets probably one of the best ways to do this in terms of hitting all of those sort of frameworks and devices",
    "start": "77390",
    "end": "83799"
  },
  {
    "text": "and we're gonna comment a bit of what was ever as quickly just to get a bit of a recap but also we're gonna look at",
    "start": "83799",
    "end": "91520"
  },
  {
    "text": "something around mvvm so this is a presentation model pattern and what I",
    "start": "91520",
    "end": "97789"
  },
  {
    "text": "found is as applications get larger and larger the view models team to kind of bring that code in and we're gonna look",
    "start": "97789",
    "end": "105139"
  },
  {
    "text": "at some ways about how we can sort of reduce complexity within these apps so that's kind of the basically the gist of",
    "start": "105139",
    "end": "111770"
  },
  {
    "text": "this talk we're gonna look at a quick recap on xamarin mvvm you know just make sure we're all got a good baseline of",
    "start": "111770",
    "end": "117499"
  },
  {
    "text": "what we want to talk about we're gonna look at what's new and B is 2017 for sharing code some are new tools and",
    "start": "117499",
    "end": "122810"
  },
  {
    "text": "techniques there and then the world just to the stalk which is around how we can reduce the immortal complexity as there",
    "start": "122810",
    "end": "129560"
  },
  {
    "text": "are apps get larger as they move from just consuming an API and more that sort of content creation so Who am I",
    "start": "129560",
    "end": "137420"
  },
  {
    "text": "my name is Nigel Sampson I'm a tickly to push pay a payments company in Auckland New Zealand I'm the project lead on",
    "start": "137420",
    "end": "144200"
  },
  {
    "text": "calibre micro which is a crop cross-platform in the in framework funny enough and I'm an MVP for Windows",
    "start": "144200",
    "end": "150530"
  },
  {
    "text": "platform dev there's my Twitter and github panels if you want to catch up with me later on so let's get into this",
    "start": "150530",
    "end": "157150"
  },
  {
    "text": "what is xamarin zamarons a tall set which lets you work on Android iOS and",
    "start": "157150",
    "end": "164780"
  },
  {
    "text": "now MacOS as well using c-sharp with the hummus it's in API access and full",
    "start": "164780",
    "end": "170150"
  },
  {
    "text": "native performance so what does this actually mean it means you're actually targeting the actual API is the",
    "start": "170150",
    "end": "175340"
  },
  {
    "text": "underlying API is on those platforms using a c-sharp a good example of this is this so here we're using objective-c",
    "start": "175340",
    "end": "183110"
  },
  {
    "text": "to set the background image on a button top ones Objective C one C sharp they're",
    "start": "183110",
    "end": "189380"
  },
  {
    "text": "roughly similar different brackets they look pretty much the same the really cool thing about this means is that if",
    "start": "189380",
    "end": "195650"
  },
  {
    "text": "you're looking for a problem and you're working with xamarin you can just sort of look up the answer for normal iOS and then so mentally convert",
    "start": "195650",
    "end": "203150"
  },
  {
    "text": "that Objective C into C sharp it's not that particularly difficult this does mean though that you end up writing for",
    "start": "203150",
    "end": "210740"
  },
  {
    "text": "that app for that platform directly but you can share code using you know more kind of patterns",
    "start": "210740",
    "end": "218830"
  },
  {
    "text": "so what does this lead us to in terms of architectures if we want a charge of",
    "start": "224250",
    "end": "229630"
  },
  {
    "text": "sort of a tradition we're gonna write this three times we end up with a sort of a siloed approach like this we're",
    "start": "229630",
    "end": "234820"
  },
  {
    "text": "gonna write one app in Objective C when F and Java one happen c-sharp and we're not going to share any code we're gonna",
    "start": "234820",
    "end": "240520"
  },
  {
    "text": "write the same bug probably three times as a test of three times and chances are not fixed for that many fix to it fix it",
    "start": "240520",
    "end": "247360"
  },
  {
    "text": "two and a half times zeroing gives us something like this we hack we can we're",
    "start": "247360",
    "end": "252760"
  },
  {
    "text": "still running three separate user interfaces we were writing them natively and targeting the appropriate patterns",
    "start": "252760",
    "end": "259239"
  },
  {
    "text": "and user interfaces for those platforms but we're now sharing our application and business services across all of them",
    "start": "259239",
    "end": "264880"
  },
  {
    "text": "we write at once we can test it once we can unit test it in a beauty of air doing it this way is that this code is",
    "start": "264880",
    "end": "269980"
  },
  {
    "text": "guaranteed to be platform agnostic which means it's very easy to unit tests we don't have to worry about sending out",
    "start": "269980",
    "end": "275530"
  },
  {
    "text": "GPS dealing with file systems because that's probably gonna be dependency injected in and it also means that we",
    "start": "275530",
    "end": "283660"
  },
  {
    "text": "can easily move it across to even more platforms if needs to be but that's kind",
    "start": "283660",
    "end": "290229"
  },
  {
    "text": "of half the battle in my opinion in this top layer is more code there's stuff we can share there",
    "start": "290229",
    "end": "296919"
  },
  {
    "text": "it's sort of extract and reuse this is what we call the view model in patterns like presentation model from Martin",
    "start": "296919",
    "end": "303580"
  },
  {
    "text": "Fowler which came out of what he talks about a while ago but it's sort of been popularized more as in vvn now this is a",
    "start": "303580",
    "end": "310210"
  },
  {
    "text": "pet in and extract state and behavior from your user interface into classes we're gonna call view models this means",
    "start": "310210",
    "end": "317229"
  },
  {
    "text": "that they're cross-platform it means they're testable what do I mean by this so we all think of this sort of",
    "start": "317229",
    "end": "323380"
  },
  {
    "text": "canonical login page we have a username we have a password we have a button to login right",
    "start": "323380",
    "end": "329020"
  },
  {
    "text": "we don't want user to click the button until they login and so sorry until the into these name and password but when",
    "start": "329020",
    "end": "334240"
  },
  {
    "text": "they click that button we want to check to see if those credentials are valid if they aren't valid we want to show mirror",
    "start": "334240",
    "end": "340240"
  },
  {
    "text": "message if not take them on to the next page that state and behavior is common across all your platforms",
    "start": "340240",
    "end": "345940"
  },
  {
    "text": "why write that three times why not extract it from that user interface right at once test it once and bind it",
    "start": "345940",
    "end": "353080"
  },
  {
    "text": "to that user and this gives us a pattern that looks much like this we now have our view models",
    "start": "353080",
    "end": "360190"
  },
  {
    "text": "extracted from our user interface we have a shim of what you'd call the sort",
    "start": "360190",
    "end": "365560"
  },
  {
    "text": "of the platform specific stuff talking to the GPS the filesystem push notifications and the like we also have",
    "start": "365560",
    "end": "371170"
  },
  {
    "text": "a shared application services so take a look I see what this looks like so I",
    "start": "371170",
    "end": "378790"
  },
  {
    "text": "have this example view model here looks much like I just talked about we have a",
    "start": "378790",
    "end": "384970"
  },
  {
    "text": "username and password which the user is which is being used by the user we have",
    "start": "384970",
    "end": "390490"
  },
  {
    "text": "a computed property here called can login it's only true when user name and password are entered with a message we",
    "start": "390490",
    "end": "397540"
  },
  {
    "text": "can sit back to the user a simple login method Bracey checks other credentials valid if",
    "start": "397540",
    "end": "403180"
  },
  {
    "text": "not just by a message otherwise go on to the next page our interactions here",
    "start": "403180",
    "end": "410050"
  },
  {
    "text": "around the navigation as well as youth indication adiprene are being injected",
    "start": "410050",
    "end": "415780"
  },
  {
    "text": "by dependencies so this means we can easily test this we can look at our you",
    "start": "415780",
    "end": "421330"
  },
  {
    "text": "know tests I can quickly and easily test hey given various combinations user and password can use a login and using mocks",
    "start": "421330",
    "end": "431650"
  },
  {
    "text": "if I say these credentials are valid and I login on a view model verify weaving",
    "start": "431650",
    "end": "438520"
  },
  {
    "text": "on to the next page so this means that I've extracted the state and behavior for this login page out into a separate",
    "start": "438520",
    "end": "444280"
  },
  {
    "text": "class I can share across all my platforms and unit tests it really simply from the user interface side this",
    "start": "444280",
    "end": "452140"
  },
  {
    "text": "is xamarin forms which is essentially a UI abstraction layer layer of across all the platforms I'm binding my username",
    "start": "452140",
    "end": "459070"
  },
  {
    "text": "and password on entry text boxes so it's properties and I'm using the caliber micro feature here we run essentially",
    "start": "459070",
    "end": "465940"
  },
  {
    "text": "attaching that login method to the button one of the features of Caliburn is that once when I bind this login",
    "start": "465940",
    "end": "471880"
  },
  {
    "text": "method to the button it'll look for another property called can login and bind that to the visib in able of the",
    "start": "471880",
    "end": "479290"
  },
  {
    "text": "button so that means as your idea chain is because this is a two-way binding as I change username and password can login",
    "start": "479290",
    "end": "486550"
  },
  {
    "text": "changes but suddenly lights up and they can click login and underneath that an error",
    "start": "486550",
    "end": "491800"
  },
  {
    "text": "message when something goes wrong this is a really simple sort of example about how we can write sort of stay tuned",
    "start": "491800",
    "end": "497830"
  },
  {
    "text": "behavior for classes that's cross-platform and easily sharable so",
    "start": "497830",
    "end": "507970"
  },
  {
    "text": "there's a lot of really good in movie in frameworks up there a few of them sort of almost based here in Australia",
    "start": "507970",
    "end": "514150"
  },
  {
    "text": "Michael Redland works on fresh mvvm I think he's around this year and Geoffrey",
    "start": "514150",
    "end": "519909"
  },
  {
    "text": "Huntley he works on reactive UI and he'll be doing talk later today of course I wouldn't be remiss in",
    "start": "519909",
    "end": "526270"
  },
  {
    "text": "mentioning calibre my car which is the one I work on so there are some new",
    "start": "526270",
    "end": "531580"
  },
  {
    "text": "options in vs 2017 these are ones around how we can share code across more",
    "start": "531580",
    "end": "536980"
  },
  {
    "text": "platforms I just want to talk about them for a bit the obvious example here is dotnet standard this is my kind of like",
    "start": "536980",
    "end": "544270"
  },
  {
    "text": "my favorite ordering this is my sort of general approach I want you to stop that standard if I can",
    "start": "544270",
    "end": "549430"
  },
  {
    "text": "it'll work my way down portable class libraries they've been around for quite a while and actually now with three",
    "start": "549430",
    "end": "558370"
  },
  {
    "text": "served on extended to Microsoft are sort of officially deprecating portable class libraries as sort of an approach towards",
    "start": "558370",
    "end": "564910"
  },
  {
    "text": "sharing code I'll go into a bit more about this standard in a minute multi targeting is the other one it's a new",
    "start": "564910",
    "end": "570910"
  },
  {
    "text": "tool set that came out with vs 2017 and it lets you basically use I've put on",
    "start": "570910",
    "end": "578140"
  },
  {
    "text": "the same line as shared projects because it works the same way in sort of your approach to writing code and shared",
    "start": "578140",
    "end": "584770"
  },
  {
    "text": "files it's been around since Visual Studio has been around and with its pros and cons so what does dotnet standard",
    "start": "584770",
    "end": "593339"
  },
  {
    "text": "there are whole talks on this so I'll try and cut a little bit into it but",
    "start": "593339",
    "end": "598420"
  },
  {
    "text": "donít standard isn't a library it's a standard in the same way that 802 11 is",
    "start": "598420",
    "end": "604600"
  },
  {
    "text": "a standard for Wi-Fi Microsoft published some standards these are basically lists of api's that a",
    "start": "604600",
    "end": "612730"
  },
  {
    "text": "version of a runtime must implement to say it implements that standard now",
    "start": "612730",
    "end": "618800"
  },
  {
    "text": "what that means is you can now when you create a new project instead of using",
    "start": "618800",
    "end": "623959"
  },
  {
    "text": "portable class libraries we pick which frameworks you want and when a new framework comes out you have to wait for",
    "start": "623959",
    "end": "629330"
  },
  {
    "text": "other authors to basically open up their projects clicking your checkbox pushed and you get instead you pick a dotnet",
    "start": "629330",
    "end": "637040"
  },
  {
    "text": "standard version this means that your code if it's written against that standard will run against any version of",
    "start": "637040",
    "end": "645320"
  },
  {
    "text": "any framework that implements that standard the standards are always additive they never removed",
    "start": "645320",
    "end": "651170"
  },
  {
    "text": "so anything that influenced 1.5 will also point 1 4 1 3 1 2 etc which is",
    "start": "651170",
    "end": "656810"
  },
  {
    "text": "quite useful it also means that if you target 1.6 say straight away or 2.0 when",
    "start": "656810",
    "end": "663620"
  },
  {
    "text": "new versions of frameworks come out they actually implement no standards your code will all suddenly automatically",
    "start": "663620",
    "end": "669050"
  },
  {
    "text": "work on there without you having to do any more work which is quite cool what",
    "start": "669050",
    "end": "674480"
  },
  {
    "text": "you kind of end up having to do as authors is looking at a matrix like this which looks particularly complicated but",
    "start": "674480",
    "end": "680630"
  },
  {
    "text": "we're just seeing the darling Senate versions across the top and the various flavors of framework down the bottom and",
    "start": "680630",
    "end": "686810"
  },
  {
    "text": "we can see where they get implemented so we can see here that you know pull for",
    "start": "686810",
    "end": "691940"
  },
  {
    "text": "framework 4 6 2 implements tonic standard 1.5 and what you can use basically it was work out what things",
    "start": "691940",
    "end": "698209"
  },
  {
    "text": "you want to target and therefore what version is the docket standard you can use across all these things so multi",
    "start": "698209",
    "end": "706459"
  },
  {
    "text": "targeting with the new SDK tools that came out from Microsoft basically on the",
    "start": "706459",
    "end": "713899"
  },
  {
    "text": "last sort of six months we have some new project types and you have the CS projects on lots more one of the things",
    "start": "713899",
    "end": "720649"
  },
  {
    "text": "that has is a target framework element which basically says this is the framework I want to target you can",
    "start": "720649",
    "end": "725959"
  },
  {
    "text": "manually edit that file say target frameworks and put in a semicolon separated list of these frameworks",
    "start": "725959",
    "end": "734139"
  },
  {
    "text": "what this ends up with is essentially when I build this project I don't get a",
    "start": "735589",
    "end": "741420"
  },
  {
    "text": "single dll output now I get three folders in my bender bug one for each of",
    "start": "741420",
    "end": "746670"
  },
  {
    "text": "these frameworks in three separate dll's I get one one project is now doing",
    "start": "746670",
    "end": "752129"
  },
  {
    "text": "multiple outputs targeting different frameworks so why is this useful it",
    "start": "752129",
    "end": "758579"
  },
  {
    "text": "means that rather than having to write potentially in dotnet standard assembly and dependency inject code in you can",
    "start": "758579",
    "end": "765660"
  },
  {
    "text": "write one project there actually targets the actual frameworks themselves and uses things that are appropriate just",
    "start": "765660",
    "end": "772740"
  },
  {
    "text": "for that framework if you do that however just write in some code that in this case I'm taking one for 1945 and",
    "start": "772740",
    "end": "779850"
  },
  {
    "text": "Windows 10 if I wrote some Windows 10 the specific code in there and I hope build two of those outputs are going to",
    "start": "779850",
    "end": "785730"
  },
  {
    "text": "fail horribly so I need to do things like build definitions and you know if",
    "start": "785730",
    "end": "791160"
  },
  {
    "text": "DIF around that bit of Windows 10 code but for certain circumstances it",
    "start": "791160",
    "end": "796860"
  },
  {
    "text": "actually makes a lot more sense we're going to a couple of examples of that let's take a look so I'm gonna actually",
    "start": "796860",
    "end": "802889"
  },
  {
    "text": "use the the caliber micro code here as an example it's this first example the",
    "start": "802889",
    "end": "809459"
  },
  {
    "text": "top one caliber micro a core is a dotnet standard assembly so if I right click on",
    "start": "809459",
    "end": "814860"
  },
  {
    "text": "that this is a really cool new feature in 2017 I can actually edit the project",
    "start": "814860",
    "end": "821670"
  },
  {
    "text": "file without unloading it which is really handy so this is actually a bit",
    "start": "821670",
    "end": "828660"
  },
  {
    "text": "more work this is actually the entire project for all this code the CS files",
    "start": "828660",
    "end": "835769"
  },
  {
    "text": "are automatically included you don't have to actually define them in your arm CS proj which means that if you've got",
    "start": "835769",
    "end": "842160"
  },
  {
    "text": "two devs working on the project which conflicts won't happen as much which is really quite cool most of the stuff",
    "start": "842160",
    "end": "849749"
  },
  {
    "text": "isn't actually needed you can actually get rid of most of this but the important part here is this target framework where I'm saying I'm targeting",
    "start": "849749",
    "end": "855629"
  },
  {
    "text": "Don it's the end at one point on because the core of caliber Micro is actually quite simple means I can target 1.0 and",
    "start": "855629",
    "end": "861990"
  },
  {
    "text": "basically run it almost anywhere just really quite useful the next part here is",
    "start": "861990",
    "end": "868390"
  },
  {
    "text": "this platform code so this code runs and actually targets the Zemel platforms",
    "start": "868390",
    "end": "873550"
  },
  {
    "text": "across multiple frameworks Windows 10 xamarin and so on seven forms and",
    "start": "873550",
    "end": "880600"
  },
  {
    "text": "actually what WPF as well so we have our sort of shared code stuff that works everywhere and then in here I have some",
    "start": "880600",
    "end": "889320"
  },
  {
    "text": "platform-specific code so if I edit this project you can see on the top line I'm",
    "start": "889320",
    "end": "904390"
  },
  {
    "text": "targeting lots of different frameworks I'm saying Windows bills I want me to build something for tunning it's not",
    "start": "904390",
    "end": "909670"
  },
  {
    "text": "it's in one for nineteen four five windows 10 mono Android or xamarin Android and xamarin iOS",
    "start": "909670",
    "end": "915850"
  },
  {
    "text": "I have some common properties defined for all of this but then I can start to",
    "start": "915850",
    "end": "922829"
  },
  {
    "text": "do some stuff that you'd kind of define only four different frameworks so in",
    "start": "922829",
    "end": "928750"
  },
  {
    "text": "this case I'm doing some defined constants and so when the target frame work is done it four five to find a",
    "start": "928750",
    "end": "934930"
  },
  {
    "text": "constant net when it's Android define Android so it's this lets me put if",
    "start": "934930",
    "end": "940149"
  },
  {
    "text": "Android in my code and kind of conditionally come pile around that and",
    "start": "940149",
    "end": "946060"
  },
  {
    "text": "then there's obviously some properties here that I've just specific to those platforms down here what I do is I",
    "start": "946060",
    "end": "956920"
  },
  {
    "text": "remove everything that's in the platform code so basically everything by default all those setup files automatically get",
    "start": "956920",
    "end": "963160"
  },
  {
    "text": "included into all target frameworks that's not what I want I don't want one of the code that's in that mono android",
    "start": "963160",
    "end": "968589"
  },
  {
    "text": "folder being compiled into Windows 10 so I remove it I remove everything in the platform's code and then I do a none",
    "start": "968589",
    "end": "975519"
  },
  {
    "text": "include this is a bit of a hack but it means that it always means that all the files always show up in my solution",
    "start": "975519",
    "end": "982329"
  },
  {
    "text": "Explorer and they won't get built I can then go down here and say when compiling",
    "start": "982329",
    "end": "988360"
  },
  {
    "text": "four four five do the references I need to do into four there and then I include",
    "start": "988360",
    "end": "993970"
  },
  {
    "text": "everything in the WPF all the back end so essentially now when I could build for dotnet four five I'm building for",
    "start": "993970",
    "end": "1000899"
  },
  {
    "text": "everything main folder plus everything in that platform folder excluding all the other platforms when I build this I get four",
    "start": "1000899",
    "end": "1012000"
  },
  {
    "text": "five different assemblies all targeting the appropriate frameworks all able to use platform specific code so if I look",
    "start": "1012000",
    "end": "1019470"
  },
  {
    "text": "in something like the convention manager you know I can have this conditional",
    "start": "1019470",
    "end": "1026610"
  },
  {
    "text": "code in here doing different stuff on different platforms but for the most part the code",
    "start": "1026610",
    "end": "1032428"
  },
  {
    "text": "is sort of 89 percent shared and it's not worth the effort to trying to sort of dependency injection of stuff in so",
    "start": "1032429",
    "end": "1037860"
  },
  {
    "text": "this is a really good approach if you're doing a lot of work that's quite close to the middle in terms of user interface",
    "start": "1037860",
    "end": "1043640"
  },
  {
    "text": "but want to share a lot of that code between them so let's get into the meat",
    "start": "1043640",
    "end": "1053669"
  },
  {
    "text": "of this talk so what I really wanted to kind of talk about here was this idea that as we target larger platforms you",
    "start": "1053669",
    "end": "1062100"
  },
  {
    "text": "know we're targeting things like desktops and TVs we're building apps that are content consumption but content",
    "start": "1062100",
    "end": "1067230"
  },
  {
    "text": "creation our apps get more complicated now when we write larger and larger code",
    "start": "1067230",
    "end": "1073080"
  },
  {
    "text": "bases there tends to be sort of cut points we find where code is the easiest to add and it kind of accumulates we see",
    "start": "1073080",
    "end": "1080850"
  },
  {
    "text": "this in MVC in the controller layer right the controllers tend to be the",
    "start": "1080850",
    "end": "1085860"
  },
  {
    "text": "easiest place to edit code those controllers get bigger and bigger and bigger we call this MD pattern that",
    "start": "1085860",
    "end": "1091080"
  },
  {
    "text": "controller if you want to go read up on it just to have a quick search for on Google and search the Thomas the Tank",
    "start": "1091080",
    "end": "1097380"
  },
  {
    "text": "Engine memes and you'll eventually find some stuff around sort of in VC Fat Controller in the mvvm in an application",
    "start": "1097380",
    "end": "1104940"
  },
  {
    "text": "whereas this tends to be the view model if you want em to get bigger and bigger as it's kind of the easiest place to add",
    "start": "1104940",
    "end": "1110309"
  },
  {
    "text": "code and often I find I see people if you're building applications where this",
    "start": "1110309",
    "end": "1115679"
  },
  {
    "text": "sort of shared user interface you know there's nothing up in the top left the top right of the screen which is common across all screens we find that people",
    "start": "1115679",
    "end": "1124890"
  },
  {
    "text": "want to kind of stick that into base classes you know base view model that all your classes inherit from they can",
    "start": "1124890",
    "end": "1131340"
  },
  {
    "text": "share that behavior and all as well this just means that your coat is harder",
    "start": "1131340",
    "end": "1136630"
  },
  {
    "text": "to test you got more setup work to do and it can be a bit more complicated so let's sort of look at ways we can sort",
    "start": "1136630",
    "end": "1142960"
  },
  {
    "text": "of tackle this so one thing I want to do",
    "start": "1142960",
    "end": "1157810"
  },
  {
    "text": "to start with is introduce a couple of concepts and I think navigations office sometimes the easiest way to talk about",
    "start": "1157810",
    "end": "1163720"
  },
  {
    "text": "this in most platforms we have a control that sort of deals with navigation in",
    "start": "1163720",
    "end": "1170890"
  },
  {
    "text": "iOS it's the UI navigation controller in Windows something like a frame most in",
    "start": "1170890",
    "end": "1177280"
  },
  {
    "text": "the VM frameworks wrap that control in our class navigation service and expose",
    "start": "1177280",
    "end": "1183280"
  },
  {
    "text": "that as an interface out to your view models typically what happens then is your view models can then tell that",
    "start": "1183280",
    "end": "1188290"
  },
  {
    "text": "navigation to us go to this new view and then the view can use something like a",
    "start": "1188290",
    "end": "1193300"
  },
  {
    "text": "view model locator find the appropriate view model for that view instantiate it activate it and all as well this leads",
    "start": "1193300",
    "end": "1201850"
  },
  {
    "text": "us to a problem though our view models we don't want to talk about views we want our view models sort of abstract",
    "start": "1201850",
    "end": "1207880"
  },
  {
    "text": "from the view itself and also we don't a reference that view because you typically want their view model in a",
    "start": "1207880",
    "end": "1213670"
  },
  {
    "text": "shared piece shared documents telling us Emily and actually can't talk to the view directly this leads us to kind of",
    "start": "1213670",
    "end": "1220090"
  },
  {
    "text": "stream based navigation or URI based navigation we were referencing that view",
    "start": "1220090",
    "end": "1225490"
  },
  {
    "text": "virus strength often some frameworks we end up sort of registering differently used with strings and then saying hey go",
    "start": "1225490",
    "end": "1231940"
  },
  {
    "text": "to this view which can make things a bit more arm refactor unfriendly what I",
    "start": "1231940",
    "end": "1238210"
  },
  {
    "text": "really want to do is target few models I'm gonna say full this view model I'm",
    "start": "1238210",
    "end": "1243790"
  },
  {
    "text": "gonna go to this other view model with some parameters so this is kinda main",
    "start": "1243790",
    "end": "1249100"
  },
  {
    "text": "concept here of view first versus view model first so view first in the sense",
    "start": "1249100",
    "end": "1255310"
  },
  {
    "text": "that we're telling the underlying control go to this view as that view changes we react to it create a new view",
    "start": "1255310",
    "end": "1262270"
  },
  {
    "text": "model and carry on with its view model first what we want to make changes to our view",
    "start": "1262270",
    "end": "1268210"
  },
  {
    "text": "models and have used interface update to reflect it this is the kind of core gist",
    "start": "1268210",
    "end": "1273580"
  },
  {
    "text": "of what we want to do here make changes in our view models update to reflect the views so I talked initially about you",
    "start": "1273580",
    "end": "1282100"
  },
  {
    "text": "know pushing stuff into base classes and called cross shared behavior we already don't do the sorry we already do this",
    "start": "1282100",
    "end": "1288910"
  },
  {
    "text": "you know user interface it's alright if we've got something that's up in the top left to top right of our screens we",
    "start": "1288910",
    "end": "1294040"
  },
  {
    "text": "don't write do that interface across all of our screens we do it once and some sort of user control or a fragment and",
    "start": "1294040",
    "end": "1302130"
  },
  {
    "text": "reuse it across all that screens we should do this with our view models as well we should favor composition of our view",
    "start": "1302130",
    "end": "1308620"
  },
  {
    "text": "models rather than inheritance structures don't have a hierarchy of view models that represent sort of the",
    "start": "1308620",
    "end": "1315280"
  },
  {
    "text": "flavors of your screens compose them together and how does this work so this",
    "start": "1315280",
    "end": "1321520"
  },
  {
    "text": "is a demo we're gonna look at later on which is essentially is to github browser we have a shell view model that",
    "start": "1321520",
    "end": "1328240"
  },
  {
    "text": "basically deals with creating the application and sort of structuring a few things the menu view model on the",
    "start": "1328240",
    "end": "1334690"
  },
  {
    "text": "right that's responsible for sort of basically looking at github building up a menu and we have some repository",
    "start": "1334690",
    "end": "1340930"
  },
  {
    "text": "details and issues list we can switch between the shell view model shouldn't have any responsibility in terms of",
    "start": "1340930",
    "end": "1347590"
  },
  {
    "text": "talking to github itself the repository details are issues lest should the shell",
    "start": "1347590",
    "end": "1352810"
  },
  {
    "text": "should only be responsible for switching between these user these views this means that you know while we have four",
    "start": "1352810",
    "end": "1360520"
  },
  {
    "text": "view models for the single screen it means that we can break this up into sort of neatly testable parts and we can",
    "start": "1360520",
    "end": "1369280"
  },
  {
    "text": "do this because we have a view locator given a view model by convention we can find the view for it most frameworks as",
    "start": "1369280",
    "end": "1377500"
  },
  {
    "text": "I said have a view model locator they go dead away given this menu view we can",
    "start": "1377500",
    "end": "1382600"
  },
  {
    "text": "find it you mean you view model what we want is the other way around giving them if you want to find them in your view so",
    "start": "1382600",
    "end": "1390880"
  },
  {
    "text": "how does this work in practice well our shell dig middle is going to have a property of a type menu view",
    "start": "1390880",
    "end": "1396670"
  },
  {
    "text": "model called menu we're binding this to a Content control so this is a sort of windows mo but this works and",
    "start": "1396670",
    "end": "1402820"
  },
  {
    "text": "xamarin forms as well using a Content view we're going to bind some attached property here what this does is",
    "start": "1402820",
    "end": "1410529"
  },
  {
    "text": "essentially tells the framework hey I've given you a mini view model go find the appropriate view for this view",
    "start": "1410529",
    "end": "1417190"
  },
  {
    "text": "model instantiate it and certain to this content control this means that our shell view model all that has to do is",
    "start": "1417190",
    "end": "1423820"
  },
  {
    "text": "expose the property now shell viewed only has to say this is where it goes it",
    "start": "1423820",
    "end": "1429009"
  },
  {
    "text": "doesn't have to know at all how that menu actually looks or works we can do",
    "start": "1429009",
    "end": "1435759"
  },
  {
    "text": "this with multiple views for the same view model as well and the patterns we see around this are things like master",
    "start": "1435759",
    "end": "1441429"
  },
  {
    "text": "details where we have a list on the left which is a sort of a master view of that",
    "start": "1441429",
    "end": "1447519"
  },
  {
    "text": "uh that page and then we have the sort of one once it's been selected we have the view on the right which is the",
    "start": "1447519",
    "end": "1452619"
  },
  {
    "text": "details so how can we do this we can add some stuff around context so we can add",
    "start": "1452619",
    "end": "1458289"
  },
  {
    "text": "a context to our selection same sort of thing which means we can go from order details view model to order details with",
    "start": "1458289",
    "end": "1466600"
  },
  {
    "text": "a master view so it's take a look at some of these things",
    "start": "1466600",
    "end": "1472289"
  },
  {
    "text": "so we have a really quick demo here which I'm just going to show the start of we have essentially our shell here",
    "start": "1479480",
    "end": "1487740"
  },
  {
    "text": "which doesn't doesn't do much at the moment we have our menu where I can",
    "start": "1487740",
    "end": "1493530"
  },
  {
    "text": "select a repo and see its title and",
    "start": "1493530",
    "end": "1499590"
  },
  {
    "text": "readme etc if we look at our shell view",
    "start": "1499590",
    "end": "1507210"
  },
  {
    "text": "model it doesn't do much the moment right all it has is a a menu view model",
    "start": "1507210",
    "end": "1517309"
  },
  {
    "text": "it has a active screen and that's it our",
    "start": "1517730",
    "end": "1524630"
  },
  {
    "text": "shell view doesn't do much either we have our split view control so I'm",
    "start": "1524630",
    "end": "1530850"
  },
  {
    "text": "doing all this in Windows 10 just because it's easier to demo this all works cross-platform xamarin forms and",
    "start": "1530850",
    "end": "1536820"
  },
  {
    "text": "the like so this all works on Android and iOS as well it's just that this is the easiest way to demo this code so we",
    "start": "1536820",
    "end": "1542220"
  },
  {
    "text": "have our content control here inside the pain of that split view and I'm binding that to the menu so the framework here",
    "start": "1542220",
    "end": "1549390"
  },
  {
    "text": "has taken that menu view model working out what's the appropriate menu view and instance you ain't pushing that into the",
    "start": "1549390",
    "end": "1555450"
  },
  {
    "text": "the content control further down here I have another content control which is",
    "start": "1555450",
    "end": "1560880"
  },
  {
    "text": "down to the active screen in much the same way and I have some buttons here to",
    "start": "1560880",
    "end": "1565970"
  },
  {
    "text": "shift between the details in the issues list which we can go ahead and implement right now",
    "start": "1565970",
    "end": "1572600"
  },
  {
    "text": "so I'm gonna create my view details method and all that needs to do is set",
    "start": "1576980",
    "end": "1585990"
  },
  {
    "text": "the active screen to the details of your",
    "start": "1585990",
    "end": "1591780"
  },
  {
    "text": "model also for our issues",
    "start": "1591780",
    "end": "1597320"
  },
  {
    "text": "considered like so sir our issues and details were created up here in the constructor so these are syn Cheetos",
    "start": "1604910",
    "end": "1611340"
  },
  {
    "text": "child view models we talked about these are the things that have the the functionality to go to github look at",
    "start": "1611340",
    "end": "1616680"
  },
  {
    "text": "the repo details and look up the issues list and all they're doing is changing the active screen which is this property",
    "start": "1616680",
    "end": "1624180"
  },
  {
    "text": "here which we know is bound to that main content control so if I spin this up",
    "start": "1624180",
    "end": "1630799"
  },
  {
    "text": "let it compile what we get is again our",
    "start": "1639900",
    "end": "1645520"
  },
  {
    "text": "shell viewmodel not really caring about how those user",
    "start": "1645520",
    "end": "1653800"
  },
  {
    "text": "interfaces are displayed or even how they're actually working at all we can test this we can test the shell really",
    "start": "1653800",
    "end": "1659170"
  },
  {
    "text": "quickly in the fact that we can call this a view issues method and then assert that the current screen is that",
    "start": "1659170",
    "end": "1665590"
  },
  {
    "text": "it shows view model what's really important about this sub is pick one",
    "start": "1665590",
    "end": "1672220"
  },
  {
    "text": "here I can now switch between issues and details just by clicking them so it's",
    "start": "1672220",
    "end": "1679930"
  },
  {
    "text": "really important right because in that first example I talked about that meaning you've been exposed as a menu view model and then looking for that",
    "start": "1679930",
    "end": "1686920"
  },
  {
    "text": "Minu view that was sort of singularly tight we're only exposing a menu of your",
    "start": "1686920",
    "end": "1693040"
  },
  {
    "text": "model in this shell example yeah I'm",
    "start": "1693040",
    "end": "1698230"
  },
  {
    "text": "exposing a narrative screen is just of type screen and I'm switching it between two types between our repository details",
    "start": "1698230",
    "end": "1704260"
  },
  {
    "text": "view model and an issues list view model the framework is working out what the appropriate view for that view model at",
    "start": "1704260",
    "end": "1710500"
  },
  {
    "text": "runtime and we get this quick nice and easy switch",
    "start": "1710500",
    "end": "1716640"
  },
  {
    "text": "in our issues list we get much the same",
    "start": "1718380",
    "end": "1725100"
  },
  {
    "text": "thing leave a list view on the left we're binding it to inserting the",
    "start": "1725100",
    "end": "1732480"
  },
  {
    "text": "appropriate view for that thing on a view model list and we're sitting the context to the master view again then",
    "start": "1732480",
    "end": "1740549"
  },
  {
    "text": "the main content of the screen we're doing that again with the active item so this is the thing that the user is selected and we sit in the context with",
    "start": "1740549",
    "end": "1748530"
  },
  {
    "text": "details view and we're binding the active item to the selected item on that list box what this thing gives us",
    "start": "1748530",
    "end": "1758059"
  },
  {
    "text": "as we select something here that listbox two-way binds to the active item in the",
    "start": "1764780",
    "end": "1770490"
  },
  {
    "text": "view model we then use it basically insert that view for the view model into",
    "start": "1770490",
    "end": "1776130"
  },
  {
    "text": "the other side of the user interface but with a different context this means that we can have two separate views over here",
    "start": "1776130",
    "end": "1784850"
  },
  {
    "text": "you have a details view and a master",
    "start": "1784850",
    "end": "1790140"
  },
  {
    "text": "view for that same view model and we can",
    "start": "1790140",
    "end": "1796530"
  },
  {
    "text": "switch between them as we need to this is quite good for you as a suit for master details but there's a lot of it other scenarios we can do this we can",
    "start": "1796530",
    "end": "1803730"
  },
  {
    "text": "take this even further in our issue list",
    "start": "1803730",
    "end": "1809970"
  },
  {
    "text": "view so at the bottom I have a combo box here which is essentially just a view",
    "start": "1809970",
    "end": "1815730"
  },
  {
    "text": "selector I want to go and into my list box",
    "start": "1815730",
    "end": "1821030"
  },
  {
    "text": "turn the take remove that context and I can go set a binding on this to that",
    "start": "1821030",
    "end": "1828600"
  },
  {
    "text": "view selector and the path is the",
    "start": "1828600",
    "end": "1834080"
  },
  {
    "text": "selected items context so I'm just",
    "start": "1834080",
    "end": "1839130"
  },
  {
    "text": "finding a list of views to that view selector and now",
    "start": "1839130",
    "end": "1845809"
  },
  {
    "text": "we have dynamic context selection for this so an example you'd think about",
    "start": "1853700",
    "end": "1860489"
  },
  {
    "text": "doing this is if you were in sort of Windows Explorer right we know when you have a drop-down where you want to pick between sort of details view versus",
    "start": "1860489",
    "end": "1868969"
  },
  {
    "text": "expanded view of us as a quartet cetera so if I go in here switch over to the list I have a combo box down here where",
    "start": "1868969",
    "end": "1878279"
  },
  {
    "text": "I can switch between different views really easily but it's by dynamically binding that context which up as that",
    "start": "1878279",
    "end": "1885149"
  },
  {
    "text": "context changes of the you locator switch spins back into actions is well given this view model and giving this",
    "start": "1885149",
    "end": "1891479"
  },
  {
    "text": "new context what's the user interface for it again this means that we can do some really",
    "start": "1891479",
    "end": "1899099"
  },
  {
    "text": "simple stuff in that idea a shell view model doesn't care about github doesn't",
    "start": "1899099",
    "end": "1906869"
  },
  {
    "text": "even need to know about it our issues list our SUV model simply defines what's",
    "start": "1906869",
    "end": "1913559"
  },
  {
    "text": "needed to show that issue list sorry issue and the issue a list view",
    "start": "1913559",
    "end": "1919529"
  },
  {
    "text": "model itself is the only thing that really cares about going to github and",
    "start": "1919529",
    "end": "1924839"
  },
  {
    "text": "getting those issues we've broken down our code into about four separate view models all are independently testable",
    "start": "1924839",
    "end": "1930649"
  },
  {
    "text": "independently testable sorry and all cross-platform",
    "start": "1930649",
    "end": "1936019"
  },
  {
    "text": "so a lot of immune frameworks have this idea of being navigational we're right",
    "start": "1942390",
    "end": "1948460"
  },
  {
    "text": "as you go to a view model it says hey I've been navigated to or I've been navigated from this works really well",
    "start": "1948460",
    "end": "1955780"
  },
  {
    "text": "for this idea of signal screen view models if you have a view model that encompasses your entire screen and",
    "start": "1955780",
    "end": "1962380"
  },
  {
    "text": "you're just shifting from view model to view model then this works really well when you're composing your view models",
    "start": "1962380",
    "end": "1968560"
  },
  {
    "text": "together when you're building up largest trees of the models that are all managing each other then simply meaning",
    "start": "1968560",
    "end": "1974020"
  },
  {
    "text": "navigational wear isn't enough these view models need to have life cycle they need to know when they're being",
    "start": "1974020",
    "end": "1979330"
  },
  {
    "text": "displayed on screen when they're not being displayed on screen this isn't just navigation aware because they can",
    "start": "1979330",
    "end": "1984580"
  },
  {
    "text": "come right come back if needs be a good example of that is the master list we",
    "start": "1984580",
    "end": "1990730"
  },
  {
    "text": "talked showed before as we select a an item in that list we need to better know",
    "start": "1990730",
    "end": "1997060"
  },
  {
    "text": "that hey I've been selected I'm now being shown in this larger part on the right now this life cycle needs to be",
    "start": "1997060",
    "end": "2004650"
  },
  {
    "text": "managed by something and typically in most frameworks like this it's called a conductor this conductor is conducting",
    "start": "2004650",
    "end": "2011730"
  },
  {
    "text": "the the sort of behavior in the life cycle of its child view models and we",
    "start": "2011730",
    "end": "2017400"
  },
  {
    "text": "can think about this like the navigation service itself is simply a conductor it's essentially moving between view",
    "start": "2017400",
    "end": "2023640"
  },
  {
    "text": "models conducting that behavior and it's saying hey I've been navigated from you'll be navigated to and the like and",
    "start": "2023640",
    "end": "2031740"
  },
  {
    "text": "that's really important and we'll show why in a couple minutes once we've got",
    "start": "2031740",
    "end": "2036930"
  },
  {
    "text": "this tree of view models we want to keep them decoupled right we don't want to",
    "start": "2036930",
    "end": "2044190"
  },
  {
    "text": "basically have to pass references from like the menu you saw when I press click on the menu item the repository di was",
    "start": "2044190",
    "end": "2050340"
  },
  {
    "text": "updated we don't want to have to hit though have those tightly coupled together and we can use patterns such as",
    "start": "2050340",
    "end": "2056100"
  },
  {
    "text": "mediator of Integra Gatien or messenger to do it and almost all frameworks sorry",
    "start": "2056100",
    "end": "2062250"
  },
  {
    "text": "like this have some sort of built-in functionality which we can take a look",
    "start": "2062250",
    "end": "2068520"
  },
  {
    "text": "at so we can see here you know this example we have a menu v-model it's pushing",
    "start": "2068520",
    "end": "2075100"
  },
  {
    "text": "messages to our event aggregator and the event aggregator is then pushing them on",
    "start": "2075100",
    "end": "2080830"
  },
  {
    "text": "to the repository details and issues list means that our view models only need to paint on that event aggregator",
    "start": "2080830",
    "end": "2085898"
  },
  {
    "text": "they don't need to depend on each other they're not tightly coupled and it means that we can sort of make use of this by",
    "start": "2085899",
    "end": "2094388"
  },
  {
    "text": "pushing messages in from other places that mimic the same thing as clicking something on the menu view we don't need",
    "start": "2094389",
    "end": "2099820"
  },
  {
    "text": "to care about that which is quite good so let's take a look at these in a bit of depth okay",
    "start": "2099820",
    "end": "2114220"
  },
  {
    "text": "so we have our issues list view model it",
    "start": "2114220",
    "end": "2121330"
  },
  {
    "text": "doesn't do much but it inherits from a thing called conductor collection one active so this essentially means that it",
    "start": "2121330",
    "end": "2128260"
  },
  {
    "text": "maintains a collection of child items in this case issue view models and only one of them is acted at one time right so",
    "start": "2128260",
    "end": "2134950"
  },
  {
    "text": "you can think of this as being really analogous to master details you know we have a little glimmer collection one of them is active at one point and really",
    "start": "2134950",
    "end": "2142240"
  },
  {
    "text": "this just means that we have in the base class an items collection of type of",
    "start": "2142240",
    "end": "2149230"
  },
  {
    "text": "verbal collection issue view model and we have an active item of the same type",
    "start": "2149230",
    "end": "2158350"
  },
  {
    "text": "same sort",
    "start": "2158350",
    "end": "2161070"
  },
  {
    "text": "our issues viewmodel inherent some screen so it has a couple of special",
    "start": "2164880",
    "end": "2172589"
  },
  {
    "text": "interfaces one it's called I activate one is called I deactivate what this",
    "start": "2172589",
    "end": "2178499"
  },
  {
    "text": "means is that we can then override and talk about code that happens when you're",
    "start": "2178499",
    "end": "2185549"
  },
  {
    "text": "activated this is code that happens when you're deactivated so we can Alice",
    "start": "2185549",
    "end": "2200940"
  },
  {
    "text": "essentially write code that says when that issue of you model is selected run some stuff when it's kind of something",
    "start": "2200940",
    "end": "2208380"
  },
  {
    "text": "else is selected deactivate the old view model and run some code there what we want to do here now is load the issues",
    "start": "2208380",
    "end": "2215809"
  },
  {
    "text": "for this i sorry load the comments for this view model so i'm going to hear it",
    "start": "2215809",
    "end": "2221069"
  },
  {
    "text": "from something called on initialize and",
    "start": "2221069",
    "end": "2228690"
  },
  {
    "text": "what this essentially is is the first",
    "start": "2228690",
    "end": "2234329"
  },
  {
    "text": "activation so initialize happens on first activation only the view model camisa was subsequently deactivated and",
    "start": "2234329",
    "end": "2239940"
  },
  {
    "text": "then reactivated but for the most part we only want to run sort of get the comments once and once once we've loaded",
    "start": "2239940",
    "end": "2247109"
  },
  {
    "text": "them into memory store the moment so your model if we then come back to this issue we don't have to go back and get the comments again so we can run kind of",
    "start": "2247109",
    "end": "2253829"
  },
  {
    "text": "like first activation only so we can get the comments",
    "start": "2253829",
    "end": "2258950"
  },
  {
    "text": "and then add them to the collection of",
    "start": "2264599",
    "end": "2269710"
  },
  {
    "text": "comments we've already got here take a comment so we want to select we need to",
    "start": "2269710",
    "end": "2280560"
  },
  {
    "text": "await this given a comment build a new",
    "start": "2280560",
    "end": "2288819"
  },
  {
    "text": "comment view model based off that comment and spin this up what this means",
    "start": "2288819",
    "end": "2298420"
  },
  {
    "text": "is when we select that issue in the view model the conductor that issue ListView model will tell that child issue less",
    "start": "2298420",
    "end": "2305560"
  },
  {
    "text": "issue item sorry that it's been activated because it's the first time activation that on initialize will be",
    "start": "2305560",
    "end": "2311200"
  },
  {
    "text": "called we can get the comments so",
    "start": "2311200",
    "end": "2316290"
  },
  {
    "text": "against it some comments loaded now at the bottom and it means that when we click somewhere else we go here and then",
    "start": "2333060",
    "end": "2338830"
  },
  {
    "text": "come back to this one those comments were already loaded we don't have to worry about going back and getting them again so this is I this is this really",
    "start": "2338830",
    "end": "2345550"
  },
  {
    "text": "strong idea of about adding lifecycle to your view models not just being navigational we're not just saying hey",
    "start": "2345550",
    "end": "2351369"
  },
  {
    "text": "you're now visible but as they come sort of in and out as these things get visible and not visible then we can do a",
    "start": "2351369",
    "end": "2359320"
  },
  {
    "text": "bit more with them let's look at this event aggregator I mean you view model",
    "start": "2359320",
    "end": "2370230"
  },
  {
    "text": "thing we're selecting from on the left is depending on this event aggregator",
    "start": "2370230",
    "end": "2375810"
  },
  {
    "text": "and all it's doing is when we select the repository we're constructing a new",
    "start": "2375810",
    "end": "2382690"
  },
  {
    "text": "message",
    "start": "2382690",
    "end": "2385170"
  },
  {
    "text": "and this message is just really a simple detail of actual repo details the owner",
    "start": "2388360",
    "end": "2393580"
  },
  {
    "text": "in the name and we are then publishing",
    "start": "2393580",
    "end": "2398950"
  },
  {
    "text": "it on the current thread of the event aggregator so it's all we're doing all the message cares about is that sorry",
    "start": "2398950",
    "end": "2405190"
  },
  {
    "text": "the menu cares about is when you select something I publish which makes it really testable right you don't need to worry about if I'm wanting to unit test",
    "start": "2405190",
    "end": "2412000"
  },
  {
    "text": "this menu view model when I click this like repo make sure the issue details",
    "start": "2412000",
    "end": "2417340"
  },
  {
    "text": "show up from the unit test point of view it's just when you call select repo verify up messages published on the",
    "start": "2417340",
    "end": "2424180"
  },
  {
    "text": "integra gator you know we can break these tests by sort of separating the view models in the user interface we",
    "start": "2424180",
    "end": "2430750"
  },
  {
    "text": "also make the tests easier as well our repo details view model which cares",
    "start": "2430750",
    "end": "2437860"
  },
  {
    "text": "about this a game depends on AB interrogator but also implements",
    "start": "2437860",
    "end": "2444970"
  },
  {
    "text": "interface called I handle repo selected message this means then you know it's",
    "start": "2444970",
    "end": "2450850"
  },
  {
    "text": "capable of handling these messages and on construction it's calling subscribe this on Tracy says subscribe to messages",
    "start": "2450850",
    "end": "2459790"
  },
  {
    "text": "on the view model and based on the interfaces I implement you can tell what",
    "start": "2459790",
    "end": "2465190"
  },
  {
    "text": "messages I care about and all that implement all that interface does sorry",
    "start": "2465190",
    "end": "2471820"
  },
  {
    "text": "is heaven I handle I'm sorry a handle method called repositories taking that",
    "start": "2471820",
    "end": "2477190"
  },
  {
    "text": "message in and we can then respond to it get the details and populate them appropriately and if you model so again",
    "start": "2477190",
    "end": "2484360"
  },
  {
    "text": "this makes it really easy it's a unit test in that now on the repo details you model I can just call that handle method",
    "start": "2484360",
    "end": "2491260"
  },
  {
    "text": "myself in the unit test passed the message in and verify that the living water reacted appropriately to that",
    "start": "2491260",
    "end": "2497380"
  },
  {
    "text": "message so we've decoupled that menu view model from our repo details view model and made them a lot more testable and a lot",
    "start": "2497380",
    "end": "2504190"
  },
  {
    "text": "more decoupled as well",
    "start": "2504190",
    "end": "2507359"
  },
  {
    "text": "what we can then do is take advantage of this by sitting publishing message from",
    "start": "2509240",
    "end": "2514440"
  },
  {
    "text": "other places that essentially simulate the things in as menu clerks so what",
    "start": "2514440",
    "end": "2520230"
  },
  {
    "text": "I've done as I've registered this app as a protocol handler so click a URL it",
    "start": "2520230",
    "end": "2528020"
  },
  {
    "text": "opens up the app with URI got some code in here that's parsing this protocol so",
    "start": "2528020",
    "end": "2533790"
  },
  {
    "text": "it's just in DC owner name so I can say given a link in DC slash and Hydra",
    "start": "2533790",
    "end": "2541230"
  },
  {
    "text": "Samson slash talks open up that repository and what I can do here",
    "start": "2541230",
    "end": "2549599"
  },
  {
    "text": "this is the code that's essentially passing that protocol when it comes in it says all right here's the or I posit",
    "start": "2549599",
    "end": "2555960"
  },
  {
    "text": "get that stuff out and work out whether it's successful I can then in my application here get a",
    "start": "2555960",
    "end": "2563820"
  },
  {
    "text": "reference to the event aggregator via the container because I'm in the main",
    "start": "2563820",
    "end": "2570089"
  },
  {
    "text": "route I can then take a message",
    "start": "2570089",
    "end": "2581609"
  },
  {
    "text": "construct a new repository selected message based on the owner and the name",
    "start": "2581609",
    "end": "2587520"
  },
  {
    "text": "that I've positive that URI and then I can again we'll publish on the UI thread",
    "start": "2587520",
    "end": "2596510"
  },
  {
    "text": "that message",
    "start": "2596630",
    "end": "2600049"
  },
  {
    "text": "so now we're essentially because we've decoupled that menu from the repository details it means that anything can tell",
    "start": "2605790",
    "end": "2612540"
  },
  {
    "text": "that details to switch repos right we can now have things like your I protocols we can have other parts of our",
    "start": "2612540",
    "end": "2618720"
  },
  {
    "text": "user interface that are completely and utterly far away from their details say",
    "start": "2618720",
    "end": "2624810"
  },
  {
    "text": "hey switch context switch different repo which means you can have buttons buried down in sides potentially issues so if",
    "start": "2624810",
    "end": "2631560"
  },
  {
    "text": "you imagine those issue comments had links towards other other repos all that",
    "start": "2631560",
    "end": "2637560"
  },
  {
    "text": "child view model that issues view model right at the bottom can do so the whole application switch context is this",
    "start": "2637560",
    "end": "2643260"
  },
  {
    "text": "publish that message it doesn't need to know about that she'll at all it just needs to know about the integra Gator",
    "start": "2643260",
    "end": "2648510"
  },
  {
    "text": "and that message type so we spend this up",
    "start": "2648510",
    "end": "2653750"
  },
  {
    "text": "as again we changing things we're clicking things on the menu we're",
    "start": "2660190",
    "end": "2666040"
  },
  {
    "text": "publishing that message the repo details is listen to that message in all as well",
    "start": "2666040",
    "end": "2671160"
  },
  {
    "text": "and if I open a sample HTML file here if",
    "start": "2671160",
    "end": "2676569"
  },
  {
    "text": "we just quickly look at the source we can see that it's linking to that protocol we talked about when I click",
    "start": "2676569",
    "end": "2684310"
  },
  {
    "text": "the button we switched over to that repo now right we've got that activation from",
    "start": "2684310",
    "end": "2692079"
  },
  {
    "text": "the URI we're publishing on a message on the integra Gator our repair details response to it and all as well in the",
    "start": "2692079",
    "end": "2699700"
  },
  {
    "text": "sense that we didn't need to kind of further complicate a shell or our repo details it just kind of works in the",
    "start": "2699700",
    "end": "2706420"
  },
  {
    "text": "fact that we can sort of publish those mythic messages separately",
    "start": "2706420",
    "end": "2712588"
  },
  {
    "text": "so what a recover here we talked about the fact that xamarin MVM is a great",
    "start": "2719299",
    "end": "2726769"
  },
  {
    "text": "tool set for for building cross-platform applications across multiple frameworks a course re across multiple sort of",
    "start": "2726769",
    "end": "2733759"
  },
  {
    "text": "devices right we can target everything from phones like iOS all the way up to Xbox and more esoteric devices such as",
    "start": "2733759",
    "end": "2740359"
  },
  {
    "text": "hololens we can use something like nvvm to further extract state and behavior",
    "start": "2740359",
    "end": "2746269"
  },
  {
    "text": "out of our user interface and share it using cross-platform techniques in a way",
    "start": "2746269",
    "end": "2751549"
  },
  {
    "text": "that it's easily unit testable more maintainable and oftenly cross-platform",
    "start": "2751549",
    "end": "2757630"
  },
  {
    "text": "we've seen some new things in visual studio 2017 around techniques to share",
    "start": "2757630",
    "end": "2763609"
  },
  {
    "text": "code across platforms using dotnet standard as a way to now write coding standards rather than sort of ad-hoc",
    "start": "2763609",
    "end": "2770449"
  },
  {
    "text": "selecting platforms using portable class libraries and as that goes forward means",
    "start": "2770449",
    "end": "2775969"
  },
  {
    "text": "that you can be able to write code to target you that sort of automatically light up our new instances of frameworks",
    "start": "2775969",
    "end": "2781849"
  },
  {
    "text": "like Tizen or even as existing",
    "start": "2781849",
    "end": "2787039"
  },
  {
    "text": "frameworks rip their versions your code will suddenly work if they're targeting standards you're already using it also",
    "start": "2787039",
    "end": "2794959"
  },
  {
    "text": "means that we as app application authors we don't have to wait for new and",
    "start": "2794959",
    "end": "2802339"
  },
  {
    "text": "existing framework developers to sort of spin their project up took a new box in",
    "start": "2802339",
    "end": "2807619"
  },
  {
    "text": "portable class libraries and published in you get that was one of the biggest problems I had a previous job I was",
    "start": "2807619",
    "end": "2814159"
  },
  {
    "text": "working on sort of early release Microsoft platform stuff so we were getting weekly builds from from",
    "start": "2814159",
    "end": "2820099"
  },
  {
    "text": "Microsoft the trouble was that nothing worked Nannie or the normal open source libraries you wanted to work with",
    "start": "2820099",
    "end": "2826099"
  },
  {
    "text": "actually targeted that platform because it didn't exist yet and literally all you had to do was open that project tick",
    "start": "2826099",
    "end": "2832130"
  },
  {
    "text": "the box in portable class library rebuild and worked if it's targeting darling standard you won't have to do",
    "start": "2832130",
    "end": "2838849"
  },
  {
    "text": "that essentially all these frameworks as long as that new new version of that framework implements our standard all",
    "start": "2838849",
    "end": "2845659"
  },
  {
    "text": "that code was automatically there for you you don't have to wait for things",
    "start": "2845659",
    "end": "2850699"
  },
  {
    "text": "like JSON dotnet now support what's Windows 10 or anything like that as long as it is long as Jason got net",
    "start": "2850699",
    "end": "2857330"
  },
  {
    "text": "targets that standard any 300 minutes that standard will work we saw stuff like multi targeting so",
    "start": "2857330",
    "end": "2864530"
  },
  {
    "text": "this is a essentially just a revision on shared files right it's before a few",
    "start": "2864530",
    "end": "2870890"
  },
  {
    "text": "Platzer I played with shared projects you know we had one shared project which had all the code and we had about three",
    "start": "2870890",
    "end": "2875960"
  },
  {
    "text": "or four head projects with reference to shared and when you built each of those sort of copy and paste at the cut across",
    "start": "2875960",
    "end": "2881180"
  },
  {
    "text": "and got the output now with multi targeting we have one project that can",
    "start": "2881180",
    "end": "2887780"
  },
  {
    "text": "actually build multiple different outputs which is really useful if you're kind of building that close to the",
    "start": "2887780",
    "end": "2892790"
  },
  {
    "text": "middle code that really has to touch platform specific things but for the",
    "start": "2892790",
    "end": "2897860"
  },
  {
    "text": "most part is reasonably shared we looked at navigation and this idea of view",
    "start": "2897860",
    "end": "2904040"
  },
  {
    "text": "first versus view model first so do that we want to use view model first instead that we want changes in",
    "start": "2904040",
    "end": "2910850"
  },
  {
    "text": "our view models changes in the composition of our view models to ultimately update the user interface rather than the way around this means",
    "start": "2910850",
    "end": "2918380"
  },
  {
    "text": "that we can better test the behavior of our view models better decouple the",
    "start": "2918380",
    "end": "2923540"
  },
  {
    "text": "behavior of view models and it means that sorry that we can sort of bitter",
    "start": "2923540",
    "end": "2932090"
  },
  {
    "text": "break down these view models and share them across teams and sit in terms of being able to say write the stiff you",
    "start": "2932090",
    "end": "2938240"
  },
  {
    "text": "work on menu this work on a positive details and the contract between them is that message we looked at conductors and",
    "start": "2938240",
    "end": "2945350"
  },
  {
    "text": "life cycle and this is this idea that view models shouldn't just have this idea of hey I've been navigated to but",
    "start": "2945350",
    "end": "2952280"
  },
  {
    "text": "more this is the concept of activation and deactivation such that when you're composing an entire tree together you",
    "start": "2952280",
    "end": "2959090"
  },
  {
    "text": "can cut a better manage what's happening all the code for this is up on github",
    "start": "2959090",
    "end": "2965420"
  },
  {
    "text": "that's URL some of its spirit across a",
    "start": "2965420",
    "end": "2970730"
  },
  {
    "text": "few different projects but it's all there we encourage you to take a look at it",
    "start": "2970730",
    "end": "2976180"
  },
  {
    "text": "do you have any questions jump back to that you can take photos yep yep so the",
    "start": "2978299",
    "end": "2999549"
  },
  {
    "text": "code I wrote for this is just Uwe basically just for defending my purposes that it's really easy to do my long I don't Windows box all the stuff I",
    "start": "2999549",
    "end": "3006720"
  },
  {
    "text": "showed there like that view model where I'm binding and doing view injection works and xamarin forms using Caliburn",
    "start": "3006720",
    "end": "3012809"
  },
  {
    "text": "as well all right so we can I've got a blog post up that shows doing that master details on Zimmerman forms which",
    "start": "3012809",
    "end": "3019890"
  },
  {
    "text": "means it works across Android iOS anyway that seven forms runs and to be honest like the behavior here around sort of",
    "start": "3019890",
    "end": "3027119"
  },
  {
    "text": "detect having a view model locator and injecting views while built into the box",
    "start": "3027119",
    "end": "3033869"
  },
  {
    "text": "in Caliburn isn't particularly complicated to write and could be added to it almost in here any framework you want and really isn't even like you apps",
    "start": "3033869",
    "end": "3042480"
  },
  {
    "text": "specific right you can do this in JavaScript reasonably easily as well I think a lot of frameworks already took this idea of breaking down these big",
    "start": "3042480",
    "end": "3050069"
  },
  {
    "text": "screens into components or few models based on with your own JavaScript or thing that's pretty no one makes sense I",
    "start": "3050069",
    "end": "3058079"
  },
  {
    "text": "can just seen you some links later on if you want zimmern forms do you thing else",
    "start": "3058079",
    "end": "3066859"
  },
  {
    "text": "yep so the advice was so the question was in this sort of framework how would",
    "start": "3078470",
    "end": "3084660"
  },
  {
    "text": "you handle different sort of device specifics essentially like asking permissions for cameras and so on so",
    "start": "3084660",
    "end": "3091380"
  },
  {
    "text": "typically what happens is we jump back to an architecture diagram it's",
    "start": "3091380",
    "end": "3102660"
  },
  {
    "text": "typically what we see is that code tends to live in this kind of layer here right so it's platform-specific code you have to write against those specific api's",
    "start": "3102660",
    "end": "3109140"
  },
  {
    "text": "you then kind of wrap it up in an interface and then sort of expose it by",
    "start": "3109140",
    "end": "3115260"
  },
  {
    "text": "the container to these appropriate applications for your view models in your other application services you've",
    "start": "3115260",
    "end": "3122340"
  },
  {
    "text": "got an example of that somewhere",
    "start": "3122340",
    "end": "3125450"
  },
  {
    "text": "yeah so this is a that first cross platforming me the example I talked about so this is an example of like a",
    "start": "3136990",
    "end": "3143859"
  },
  {
    "text": "navigation service on Android the sense that it's working out what the current activity is were switching activities as",
    "start": "3143859",
    "end": "3151570"
  },
  {
    "text": "it goes and that's exposing this application navigation service and it's",
    "start": "3151570",
    "end": "3157869"
  },
  {
    "text": "written in that's inside the sort of the android project in this case and then",
    "start": "3157869",
    "end": "3164910"
  },
  {
    "text": "the application itself is registering",
    "start": "3164910",
    "end": "3174010"
  },
  {
    "text": "that application service into the navigation service into the container and therefore any of you want or can kind of use it and work with it directly",
    "start": "3174010",
    "end": "3180250"
  },
  {
    "text": "and other projects come along and just implement that service so you are always going to have some code which is sort of",
    "start": "3180250",
    "end": "3187390"
  },
  {
    "text": "platform specific you're always going to need that in terms of is it with camera work with GPS and so on the idea is if",
    "start": "3187390",
    "end": "3194320"
  },
  {
    "text": "you wrap it up in GPU inside an interface means that you can kind of test against it without having to put it",
    "start": "3194320",
    "end": "3199960"
  },
  {
    "text": "on on the simulator or actually on the device because if you're using things like automated UI tests those things",
    "start": "3199960",
    "end": "3207790"
  },
  {
    "text": "need to be a slower and more fragile more code yet you can kind of put in",
    "start": "3207790",
    "end": "3213070"
  },
  {
    "text": "these gray boxes means that it by nature it's cross platform which means you can unit test it without the platform being",
    "start": "3213070",
    "end": "3219339"
  },
  {
    "text": "there and therefore you know you get that speed of sort of live unit testing if you want vs 2017 or two standard unit",
    "start": "3219339",
    "end": "3226540"
  },
  {
    "text": "testing without having to spin up simulators or actual devices anything",
    "start": "3226540",
    "end": "3231970"
  },
  {
    "text": "else excellent thank you",
    "start": "3231970",
    "end": "3237280"
  },
  {
    "text": "I'll be around outside if you want your questions [Applause]",
    "start": "3237280",
    "end": "3245550"
  }
]