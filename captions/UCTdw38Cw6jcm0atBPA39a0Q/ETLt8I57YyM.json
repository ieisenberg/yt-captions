[
  {
    "text": "is that a thumbs up well yes I guess that's a thumbs up hello welcome all uh I am Jamie and this is bioinformatic",
    "start": "2040",
    "end": "9240"
  },
  {
    "text": "algorithms using F-sharp and I will be going between PowerPoint and code let me apologize for my",
    "start": "9240",
    "end": "16139"
  },
  {
    "text": "PowerPoint skills it's not particularly strong better in the code uh real quick I'm from the United States I live in",
    "start": "16139",
    "end": "22619"
  },
  {
    "text": "Denver Colorado data scientist right now uh my nine to five job my five to nine",
    "start": "22619",
    "end": "28740"
  },
  {
    "text": "job I did a lot of community building helping out with visual studio and data platform Microsoft so as an MVP",
    "start": "28740",
    "end": "36300"
  },
  {
    "text": "uh no longer doing that because I'm actually volunteering at two labs in the Denver Colorado area wet lab and that's",
    "start": "36300",
    "end": "43980"
  },
  {
    "text": "what you see biologists with pipettes and Petri dishes and going through biosamples that's this lab at CU anshuts",
    "start": "43980",
    "end": "52559"
  },
  {
    "text": "and then I'm also a volunteer at the dry lab which is data scientists like myself looking at the results of those",
    "start": "52559",
    "end": "58320"
  },
  {
    "text": "experiments and that's at uh University of Colorado at Denver CU Denver uh",
    "start": "58320",
    "end": "63480"
  },
  {
    "text": "Boulder excuse me Boulder and I'm also a coffee farmer so it's if that interests you",
    "start": "63480",
    "end": "69000"
  },
  {
    "text": "uh real quick this is NDC developer conference uh are you all developers and",
    "start": "69000",
    "end": "75900"
  },
  {
    "text": "then software engineers and that's who I'm talking to yeah any uh data scientists I can't uh no by information",
    "start": "75900",
    "end": "84600"
  },
  {
    "text": "okay well maybe I'll convince one or two of you to convert on over any coffee farmers",
    "start": "84600",
    "end": "91020"
  },
  {
    "text": "any coffee any coffee lovers yes yes just have you know that as the price of",
    "start": "91020",
    "end": "96900"
  },
  {
    "text": "coffee increases it really doesn't come to the farmers uh I guess Starbucks needs their money uh and today we are",
    "start": "96900",
    "end": "103560"
  },
  {
    "text": "going to talk about functional bioinformatic algorithms and this is when I shift it over to start doing",
    "start": "103560",
    "end": "108780"
  },
  {
    "text": "bioinformatics about three years ago I sort of taught myself I went to the local University the local uni took",
    "start": "108780",
    "end": "115320"
  },
  {
    "text": "biology classes I already knew the software engineering piece of it for many years and I took some online",
    "start": "115320",
    "end": "120960"
  },
  {
    "text": "classes and there's this wonderful book by uh company and pisner called",
    "start": "120960",
    "end": "126119"
  },
  {
    "text": "bioinformatics uh algorithms there it is and uh if you are interested in this",
    "start": "126119",
    "end": "132239"
  },
  {
    "text": "topic I'd strongly encourage you to buy that book and work through it it's a fantastic book when I got to the dry lab",
    "start": "132239",
    "end": "139560"
  },
  {
    "text": "the layer lab I was assigned to a project uh not doing DNA and RNA which",
    "start": "139560",
    "end": "145260"
  },
  {
    "text": "we'll talk about in a little bit but doing Mass spectrometry data looking at proteins and breaking down proteins so that's the code on the right it's called",
    "start": "145260",
    "end": "151440"
  },
  {
    "text": "hype search um and we're trying to cure type 1 diabetes using hype search looking at",
    "start": "151440",
    "end": "157800"
  },
  {
    "text": "hybrid or uh yeah hybrid peptides uh so real quick before we jump into the",
    "start": "157800",
    "end": "164519"
  },
  {
    "text": "code which I know you all want to do I'm going to take about 10 minutes to show you some biology to give you some",
    "start": "164519",
    "end": "169980"
  },
  {
    "text": "experience in the domain if you've taken Biology in high school this should be a fairly",
    "start": "169980",
    "end": "175379"
  },
  {
    "text": "basic review the central dogma posted by was it Watson or creek I can't remember",
    "start": "175379",
    "end": "181620"
  },
  {
    "text": "which one that DNA makes RNA which turns around and makes proteins and you me",
    "start": "181620",
    "end": "187560"
  },
  {
    "text": "living things are collections of proteins so I'm going to hit run on this this I",
    "start": "187560",
    "end": "192959"
  },
  {
    "text": "found this that I studied it at the bottom this YouTube and I think the graphics on YouTube for a lot of",
    "start": "192959",
    "end": "198780"
  },
  {
    "text": "these things are fantastic in the last several years but inside every cell which you're all made of most cells have nucleuses",
    "start": "198780",
    "end": "205500"
  },
  {
    "text": "and inside there there are chroma Stones which are the drawer for keeping all your DNA in order and then when you",
    "start": "205500",
    "end": "211860"
  },
  {
    "text": "unwrap it you can see that it's actually I'm going to hit pause for a second it's a sugar",
    "start": "211860",
    "end": "218040"
  },
  {
    "text": "phosphate backbone that's what those blue strings are it's double helix and then they're joined by for",
    "start": "218040",
    "end": "224879"
  },
  {
    "text": "um uh they're they're joined by four uh um for lack of better word",
    "start": "224879",
    "end": "231180"
  },
  {
    "text": "um uh hydrogen hydroxyl no they're not hydroxyls I",
    "start": "231180",
    "end": "237000"
  },
  {
    "text": "can't remember their exact word but there are four things um ana and guanine thymine and cytosine",
    "start": "237000",
    "end": "243840"
  },
  {
    "text": "and in a DNA they always pair together because it's a double helix so this red",
    "start": "243840",
    "end": "249840"
  },
  {
    "text": "here might be an A and then that would then be a t the green and then over here this would be a c and that always pairs",
    "start": "249840",
    "end": "256019"
  },
  {
    "text": "with the G so if you know one side of a DNA you certainly know the other side",
    "start": "256019",
    "end": "261299"
  },
  {
    "text": "too because they always pair inside your DNA which you have about",
    "start": "261299",
    "end": "266940"
  },
  {
    "text": "four billion of those base pairs there are certain sections the gene region and that actually turns around",
    "start": "266940",
    "end": "273000"
  },
  {
    "text": "and a certain enzyme called RNA polymerase takes it splits it apart takes all these free",
    "start": "273000",
    "end": "280620"
  },
  {
    "text": "um uh molecules Giants them together and makes RNA the only real difference is",
    "start": "280620",
    "end": "286500"
  },
  {
    "text": "that t is replaced by U and that becomes messenger RNA one thing that and that's something that",
    "start": "286500",
    "end": "293040"
  },
  {
    "text": "affects us in my lab very we're very much interested in is that that RNA then gets cut splice moved around a little",
    "start": "293040",
    "end": "299520"
  },
  {
    "text": "bit some post-processing as you were gets kicked out of the nucleus this messenger RNA and then there's yet",
    "start": "299520",
    "end": "306780"
  },
  {
    "text": "another enzyme coming along the ribosome and that's going to then",
    "start": "306780",
    "end": "312060"
  },
  {
    "text": "take the free uh other pieces another kind of RNA",
    "start": "312060",
    "end": "318720"
  },
  {
    "text": "that carries an amino acid and three notice three uh of the the the",
    "start": "318720",
    "end": "325880"
  },
  {
    "text": "pieces and they match on and then you'll see that the amino acids chained together",
    "start": "326520",
    "end": "333479"
  },
  {
    "text": "and after a certain point the amino acids stop chaining together",
    "start": "333479",
    "end": "338539"
  },
  {
    "text": "and you have a it folds together and it turns into protein you do enough at",
    "start": "338720",
    "end": "344520"
  },
  {
    "text": "scale and you have you and me so that's the central dogma and that's how it all works this is important to",
    "start": "344520",
    "end": "350039"
  },
  {
    "text": "know because we are going to be working with DNA there's another really cool video that I",
    "start": "350039",
    "end": "356460"
  },
  {
    "text": "want to show uh here no not that one it's about 10 seconds long but here's",
    "start": "356460",
    "end": "363060"
  },
  {
    "text": "another representation by a gentleman named Drew Barry I love his work I could sit and look at his work all day what's",
    "start": "363060",
    "end": "370139"
  },
  {
    "text": "striking to me is how fast right now in your body you're transcribing this DNA",
    "start": "370139",
    "end": "375419"
  },
  {
    "text": "to RNA to make your proteins with all those free bases flowing around and I use the word base to describe every",
    "start": "375419",
    "end": "381600"
  },
  {
    "text": "single one of those actgs um so that's what it looks like it's your speed right now",
    "start": "381600",
    "end": "389000"
  },
  {
    "text": "so how does this in fact computer scientists or data software engineers well",
    "start": "390600",
    "end": "397500"
  },
  {
    "text": "if it's an atcg we can represent it as strings in fact much of bioinformatics",
    "start": "397500",
    "end": "402660"
  },
  {
    "text": "is string manipulation so if you work on a project you're most likely going to have strings a lot of",
    "start": "402660",
    "end": "408660"
  },
  {
    "text": "strings really long strings and we can use strings to represent DNA",
    "start": "408660",
    "end": "414240"
  },
  {
    "text": "RNA or amino acids and you can see here on the screen how DNA has act and G RNA",
    "start": "414240",
    "end": "421500"
  },
  {
    "text": "has the ACU and G and then amino acids have their use letters to designate the different amino acids and I believe",
    "start": "421500",
    "end": "427800"
  },
  {
    "text": "there's like 23 maybe 25 amino acids that are in the human body living that",
    "start": "427800",
    "end": "433440"
  },
  {
    "text": "make up you so it's fairly fine it's uh so the question is what can you do with",
    "start": "433440",
    "end": "438539"
  },
  {
    "text": "these strings Well you certainly can compare them and I'm a natural language processor NLP engineer in the NLP Tech",
    "start": "438539",
    "end": "445259"
  },
  {
    "text": "lead so we do things like the hemming distance to compare two strings we also combine them to make bigger strings we",
    "start": "445259",
    "end": "450720"
  },
  {
    "text": "cut them apart to make substrings we reverse them we do a lot of wonderful things with strings and that's what we'll be doing today",
    "start": "450720",
    "end": "457259"
  },
  {
    "text": "so you might be asking well where do I get these strings on the top left that's an aluminum",
    "start": "457259",
    "end": "462840"
  },
  {
    "text": "machine that's a short read sequencer so they take the biomaterial they pre-process it they run it through the",
    "start": "462840",
    "end": "468180"
  },
  {
    "text": "machine and they um they amplify it and they multiply it they take a really long",
    "start": "468180",
    "end": "473400"
  },
  {
    "text": "piece of your DNA or a DNA not necessarily yours trade into little pieces and then you multiply it and then",
    "start": "473400",
    "end": "479099"
  },
  {
    "text": "out comes the results that's called short read sequencing the least of a challenge on the post-processing side because now you",
    "start": "479099",
    "end": "484800"
  },
  {
    "text": "have all these all these small pieces that you'd have to recombine back together to figure out what you're doing",
    "start": "484800",
    "end": "490319"
  },
  {
    "text": "the advantage it's really fast the Human Genome Project this is called next-gen sequencing I don't know if they started",
    "start": "490319",
    "end": "496740"
  },
  {
    "text": "with next-gen or they evolved into it but that's the way they started of evaluating your our human's DNA as well",
    "start": "496740",
    "end": "504479"
  },
  {
    "text": "as other living animals organisms in the middle that's Oxford nanopore that's a long read sequence that they",
    "start": "504479",
    "end": "512039"
  },
  {
    "text": "have a little hole and they string the DNA they cut it apart and they string one line through it and it reads each",
    "start": "512039",
    "end": "517260"
  },
  {
    "text": "time the advantage you can make really long strings so you have a much higher",
    "start": "517260",
    "end": "522300"
  },
  {
    "text": "accuracy the disadvantage it's slow so a lot of companies actually combine both short read and long read sequencing",
    "start": "522300",
    "end": "530100"
  },
  {
    "text": "in the bottom right is the kind of machine that I use that's a mass spectrometer that's what went off the rails and Half",
    "start": "530100",
    "end": "535800"
  },
  {
    "text": "Light video game uh we take proteins we take some biosamples we break it down in",
    "start": "535800",
    "end": "542339"
  },
  {
    "text": "the wet lab and then we send it through and then we get these strings back again it's much like the short read sequencing we then have to figure out how to",
    "start": "542339",
    "end": "548160"
  },
  {
    "text": "reassemble what we just saw so when we build these strings on the",
    "start": "548160",
    "end": "554760"
  },
  {
    "text": "short read sequencing and then on the um on the uh the mass spectrometer there's a couple different ways we build strings",
    "start": "554760",
    "end": "561000"
  },
  {
    "text": "we do a de novo sequencing which is we take them all together and we try to figure them out put them together like a",
    "start": "561000",
    "end": "567120"
  },
  {
    "text": "really big crossword puzzle it's actually more like a jigsaw puzzle that you put together in the dark",
    "start": "567120",
    "end": "573899"
  },
  {
    "text": "in a closet with a lot of the pieces multiplied that you don't need",
    "start": "573899",
    "end": "580200"
  },
  {
    "text": "and there's no Edge pieces that's the Nova sequencing some really cool algorithms to help",
    "start": "580200",
    "end": "586320"
  },
  {
    "text": "along that secondarily once you have a reference assembly a dictionary approach",
    "start": "586320",
    "end": "591839"
  },
  {
    "text": "you have all these pieces you apply them to the dictionary and try to extend out and saying do I match do I match do I",
    "start": "591839",
    "end": "597060"
  },
  {
    "text": "match constantly going back to the dictionary as you extend out the strings a lot of people do hybrid sequencing too",
    "start": "597060",
    "end": "605220"
  },
  {
    "text": "so real quick oh this does not show huh so apparently when I'm not so I've",
    "start": "605220",
    "end": "611459"
  },
  {
    "text": "had some problems with PowerPoint I know I'm the first one ever I'm going to try to run this from here a slideshow play",
    "start": "611459",
    "end": "618480"
  },
  {
    "text": "from current slide let me see can you see that okay yeah so",
    "start": "618480",
    "end": "623820"
  },
  {
    "text": "I'm going to give you five pieces of DNA that came out of maybe a short read sequencer and I'm going to help you and",
    "start": "623820",
    "end": "630600"
  },
  {
    "text": "say that there's no duplication how would you assemble that to make a single string",
    "start": "630600",
    "end": "635940"
  },
  {
    "text": "I will tell you that two out of the three letters are overlapping and you can see which of the five pieces",
    "start": "635940",
    "end": "645000"
  },
  {
    "text": "doesn't have an overlap on the right two sides of all the four others and that would be the I believe",
    "start": "645000",
    "end": "651600"
  },
  {
    "text": "I don't know what just happened oh goodness",
    "start": "651600",
    "end": "657019"
  },
  {
    "text": "I can't make fun of Microsoft in these presentations right one second while I rebuild this",
    "start": "657360",
    "end": "663839"
  },
  {
    "text": "oh no all right let's try this let's I don't know how many times I've",
    "start": "663839",
    "end": "668880"
  },
  {
    "text": "practiced this and it didn't that never happened all right so let's see if this happens okay so we have TAA we know it's the",
    "start": "668880",
    "end": "675839"
  },
  {
    "text": "beginning one because there's no other of the remaining four they don't end with ta and then we can take the first",
    "start": "675839",
    "end": "681899"
  },
  {
    "text": "one that starts with a a and then the next one that starts with a t TG then GT and so we know our string",
    "start": "681899",
    "end": "690300"
  },
  {
    "text": "that's the full amount of our string so that's the way we piece these things these jigsaw has together pieces together in the dark we can also do a",
    "start": "690300",
    "end": "697380"
  },
  {
    "text": "dictionary where we have a reference genome and then we just say okay where does a t fit into this then atg",
    "start": "697380",
    "end": "704820"
  },
  {
    "text": "Etc you just sort of match it all together and then you get your results",
    "start": "704820",
    "end": "710100"
  },
  {
    "text": "what I do with hype search on the mass spectrometry data is we do something called seed and extent where we take",
    "start": "710100",
    "end": "717000"
  },
  {
    "text": "uh we have a reference genome and we take the first fragment then we take the",
    "start": "717000",
    "end": "722399"
  },
  {
    "text": "next fragment we see we can get some overlaps so we've now gone from three to four and then to five to six to seven and then we also have pieces that are",
    "start": "722399",
    "end": "729300"
  },
  {
    "text": "laying around that don't fit the reference genome at all or reference assembly at all what does that mean well actually we're",
    "start": "729300",
    "end": "735480"
  },
  {
    "text": "really interested in that and then we turn around and try to do de novo on that because that's what we think might be the cause of type 1 diabetes or",
    "start": "735480",
    "end": "743399"
  },
  {
    "text": "actually and it could very well be any immune autoimmune system where the body is generating something that it doesn't",
    "start": "743399",
    "end": "748560"
  },
  {
    "text": "recognize and so it's attacking the area that's generating those particular peptides",
    "start": "748560",
    "end": "754260"
  },
  {
    "text": "so that's seen an exams the lab and all the academic articles",
    "start": "754260",
    "end": "760920"
  },
  {
    "text": "I've read all the people I've worked with when they look at code code is something that gets in their way",
    "start": "760920",
    "end": "766260"
  },
  {
    "text": "their PHD types their biologists who are learning to code they could really benefit from all of your experience as",
    "start": "766260",
    "end": "771779"
  },
  {
    "text": "software engineers they all do imperative code I'm trying to convince them that maybe functional",
    "start": "771779",
    "end": "777180"
  },
  {
    "text": "is actually a better way of thinking about it I'm hoping to convince you but a lot of think of a lot of Loops think",
    "start": "777180",
    "end": "782639"
  },
  {
    "text": "of a lot of mutation think of a lot of spaghetti code the code base quickly glows goes like this it fans out and so",
    "start": "782639",
    "end": "789000"
  },
  {
    "text": "it becomes very hard to maintain when I came into the lab that was one of the things we talked about is how we can move from functional imperatives code to",
    "start": "789000",
    "end": "796019"
  },
  {
    "text": "functional code now some of you are probably c-sharp developers it's a net predominant conference",
    "start": "796019",
    "end": "802200"
  },
  {
    "text": "love dot uh love c-sharp but um any effort I've seen to try to do object orients and principles design",
    "start": "802200",
    "end": "808680"
  },
  {
    "text": "patterns inheritance all those sort of things don't really work with this kind of scientific Computing so please",
    "start": "808680",
    "end": "814260"
  },
  {
    "text": "it's fun to do but I would say look more at imperative and functional style in C sharp if you're bound to determine most",
    "start": "814260",
    "end": "821160"
  },
  {
    "text": "Labs use Python and or R and then maybe some scripting languages",
    "start": "821160",
    "end": "826980"
  },
  {
    "text": "so I presented this paper or this presentation at NDC and I said we're",
    "start": "826980",
    "end": "832800"
  },
  {
    "text": "going to do the um the read alignment problem in fact have switched it to the origin of replication problem because I",
    "start": "832800",
    "end": "838980"
  },
  {
    "text": "think it's a little bit more accessible in addition if you remember that book that I referenced in the beginning",
    "start": "838980",
    "end": "845639"
  },
  {
    "text": "they um they made that chapter one so I'm like oh so if you read the book you",
    "start": "845639",
    "end": "850740"
  },
  {
    "text": "can see the code that they wrote and the sort of their ideas and then we can see it from a functional point of view the",
    "start": "850740",
    "end": "856019"
  },
  {
    "text": "origin replication problem is this you all are made of cells I'm made of cells too um we need to cells die all the time we",
    "start": "856019",
    "end": "863820"
  },
  {
    "text": "need to regrow those cells so cell division is very important what happens is you have a single cell inside the",
    "start": "863820",
    "end": "868860"
  },
  {
    "text": "nucleus remember you have that DNA it uncoils it gets cut in a certain place",
    "start": "868860",
    "end": "874680"
  },
  {
    "text": "when it gets cut another enzyme comes in and then splits it apart and then creates another set of DNA from the",
    "start": "874680",
    "end": "881339"
  },
  {
    "text": "template so it cuts it and works in two directions for two strands we now have four strands they go out and become the",
    "start": "881339",
    "end": "886980"
  },
  {
    "text": "two daughter cells with the two nucleuses with the complete copy most of the time it's a complete exact copy we",
    "start": "886980",
    "end": "893459"
  },
  {
    "text": "do get mutations though when it does that compensate does that calculation or that process",
    "start": "893459",
    "end": "900360"
  },
  {
    "text": "um so that's something to think about but I wanted to show you just another quick video if I can",
    "start": "900360",
    "end": "906600"
  },
  {
    "text": "so this is really cool again this is uh what's his name Drew Barry and I could sit and look at this all day one",
    "start": "906600",
    "end": "912839"
  },
  {
    "text": "important thing and for our artist coding in a couple minutes is that we read DNA from one end to the other end",
    "start": "912839",
    "end": "919139"
  },
  {
    "text": "the five Prime end to the three prime end I believe the five and the three represent the number of free carbon atoms sticking off the end of it but we",
    "start": "919139",
    "end": "926040"
  },
  {
    "text": "can only read in One Direction so when we split it one's five to three one's three to five well it's easy reading",
    "start": "926040",
    "end": "931800"
  },
  {
    "text": "five to three you just have to match on like it's doing down there in the bottom the top one that's three to five has to",
    "start": "931800",
    "end": "937800"
  },
  {
    "text": "go up a little bit you can see that green thing that sort of circles it around writes it back and then does it",
    "start": "937800",
    "end": "943440"
  },
  {
    "text": "again and again and again and it does four billion base pairs I don't know how long it takes not that long at all to",
    "start": "943440",
    "end": "949800"
  },
  {
    "text": "divide a cell the human cell so you can imagine the speed on which it's doing this it's pretty amazing",
    "start": "949800",
    "end": "957000"
  },
  {
    "text": "all right so that split when it first cuts the DNA is",
    "start": "957000",
    "end": "965519"
  },
  {
    "text": "really important that's called the origin of replication or worry and the reason why it's important is if we are",
    "start": "965519",
    "end": "971639"
  },
  {
    "text": "going to do any modification of the GMO or if genomes modify if it modifies in there inside that area",
    "start": "971639",
    "end": "978779"
  },
  {
    "text": "well then the body doesn't recognize the cut it there and so if you make any modification let's say you do a point",
    "start": "978779",
    "end": "984060"
  },
  {
    "text": "mutation that cures cancer hypothetically if you go in there and you modify in that box that DNA box",
    "start": "984060",
    "end": "991740"
  },
  {
    "text": "well that one cell does not is now cancer resistant but it cannot propagate and it cannot go throughout the body so",
    "start": "991740",
    "end": "998699"
  },
  {
    "text": "you've just solved one problem but you've introduced another so it's really important for scientists to understand",
    "start": "998699",
    "end": "1004160"
  },
  {
    "text": "where this happens it's been a problem for them for quite some time so they did a Brute Force mechanism",
    "start": "1004160",
    "end": "1011000"
  },
  {
    "text": "as an NLP engineer I would love to think that DNA is color coded it's not I would",
    "start": "1011000",
    "end": "1016279"
  },
  {
    "text": "love to think that it uses a dictionary or a different set of letters to say yeah this is the origin of replication it does not we have absolutely no idea",
    "start": "1016279",
    "end": "1023660"
  },
  {
    "text": "when we started we had absolutely no idea where the body said okay this is where",
    "start": "1023660",
    "end": "1028880"
  },
  {
    "text": "you'd cut how did it know where to cut exactly so scientists like I said did Brute",
    "start": "1028880",
    "end": "1034579"
  },
  {
    "text": "Force they took a smaller organism so instead of the four billion base pairs in a human they might have started with",
    "start": "1034579",
    "end": "1039798"
  },
  {
    "text": "a simple virus or simple bacteria maybe a million total base pairs maybe even a hundred thousand base pairs in the",
    "start": "1039799",
    "end": "1045980"
  },
  {
    "text": "entire genome and they started knocking it out they found a piece of it and they cut it out now this is sort of a brute",
    "start": "1045980",
    "end": "1051440"
  },
  {
    "text": "force method crispr cast 9 obviously you can be much more sophisticated now but work with me here this is the problem",
    "start": "1051440",
    "end": "1057799"
  },
  {
    "text": "they had to solve so scientists went through a very simple organism and they started cutting out pieces of the DNA",
    "start": "1057799",
    "end": "1063740"
  },
  {
    "text": "and they said okay when did replication stop so they started there then maybe there then maybe there",
    "start": "1063740",
    "end": "1069200"
  },
  {
    "text": "so we are going to look at cholera which is only 1.1 million base pairs and that",
    "start": "1069200",
    "end": "1075860"
  },
  {
    "text": "box the scientists determined was about 300 base pairs long and the next thought is okay so in a",
    "start": "1075860",
    "end": "1082580"
  },
  {
    "text": "simple organism this is the way the box is is there something in there that we can then use to extrapolate the Box in a",
    "start": "1082580",
    "end": "1089480"
  },
  {
    "text": "human that has 5 billion base pairs versus trying to knock out you know certain pieces of 5 billion",
    "start": "1089480",
    "end": "1095179"
  },
  {
    "text": "that's very expensive and time consuming that's where a bioinfermentation can",
    "start": "1095179",
    "end": "1100280"
  },
  {
    "text": "come and help find a needle in a haystack so this is the example that company and pisner used this is an Edgar Allan Poe",
    "start": "1100280",
    "end": "1107539"
  },
  {
    "text": "story called The Gold bug and I'm giving you a cipher it's a bunch of letters that represent or characters that",
    "start": "1107539",
    "end": "1113900"
  },
  {
    "text": "represent other letters we'll assume that it's English what's the most common letter in the English",
    "start": "1113900",
    "end": "1119720"
  },
  {
    "text": "language used e and that would be then making that",
    "start": "1119720",
    "end": "1125600"
  },
  {
    "text": "assumption an eight what's the most common word used in the English language",
    "start": "1125600",
    "end": "1132620"
  },
  {
    "text": "that's right so let's assume that semicolon is a t 4 is an h and 8 is an e and then from",
    "start": "1132620",
    "end": "1140419"
  },
  {
    "text": "there we can sort of build out this Rosetta Stone to understand what that message was now we're not going to do",
    "start": "1140419",
    "end": "1145460"
  },
  {
    "text": "that for this message but we are going to do it with DNA from cholera and see if we",
    "start": "1145460",
    "end": "1151460"
  },
  {
    "text": "can apply it to the human body so yeah it's sort of like Wheel of Fortune",
    "start": "1151460",
    "end": "1156559"
  },
  {
    "text": "um the scientists told us okay in cholera that 300 base pair box",
    "start": "1156559",
    "end": "1163340"
  },
  {
    "text": "we that that's what we know can you tell us bioinfermentation anything special about this can you derive a dictionary",
    "start": "1163340",
    "end": "1170120"
  },
  {
    "text": "there's only four characters there's no white spaces and actually as a NLP engineer I was",
    "start": "1170120",
    "end": "1177320"
  },
  {
    "text": "really excited when I first came to us I'm like this is cool because this is I can do this stuff right I have all these cool dictionaries no I don't none of the",
    "start": "1177320",
    "end": "1183440"
  },
  {
    "text": "dictionaries that I know of could really help because there's no white space you have no idea how many",
    "start": "1183440",
    "end": "1188780"
  },
  {
    "text": "um characters each word might be to then identify what kind of patterns you see so I think bioinformatics has it hard",
    "start": "1188780",
    "end": "1195559"
  },
  {
    "text": "just to as an example you just read bioinformatics had it hard and you thought okay there's four words",
    "start": "1195559",
    "end": "1201559"
  },
  {
    "text": "or four tokens in that sentence well it turns out if I split it another way there's actually six perfectly valuable",
    "start": "1201559",
    "end": "1208160"
  },
  {
    "text": "words actually five perfectly valid words and attic might be misspelled and there's always error in our DNA when we",
    "start": "1208160",
    "end": "1213559"
  },
  {
    "text": "read it out so it's a kind of a comparable thing so a little bit harder",
    "start": "1213559",
    "end": "1219740"
  },
  {
    "text": "so I'm going to give you a little bit of dictionary and we're going to get into code I promise when we say words in a sentence those",
    "start": "1219740",
    "end": "1226640"
  },
  {
    "text": "also sometimes NLP Engineers talk about tokens we're going to call those kmers",
    "start": "1226640",
    "end": "1232760"
  },
  {
    "text": "and if the word like the is three characters long we're going to call that a three mer",
    "start": "1232760",
    "end": "1238580"
  },
  {
    "text": "if a word like here four characters long we're going to call that a former",
    "start": "1238580",
    "end": "1243799"
  },
  {
    "text": "if the word is two we're going to call it a tumor yeah",
    "start": "1243799",
    "end": "1249860"
  },
  {
    "text": "um so in this example you can see I gave I have a a six character",
    "start": "1249860",
    "end": "1256280"
  },
  {
    "text": "string and I'm going to say okay we're going to start with a Kamer a tumor and what is",
    "start": "1256280",
    "end": "1262460"
  },
  {
    "text": "the most frequent word and in this case it would be a a because if you go here there's an A A then",
    "start": "1262460",
    "end": "1267919"
  },
  {
    "text": "there's another a there's another a and then there's an A T and A TG okay",
    "start": "1267919",
    "end": "1274220"
  },
  {
    "text": "so let's do this for reals when we start pattern counting this is",
    "start": "1274220",
    "end": "1280940"
  },
  {
    "text": "the kind of code that you will see all over the place on the left is the pseudo code on the right is perfectly valid",
    "start": "1280940",
    "end": "1286580"
  },
  {
    "text": "python I'm not going to tell you if there's an error in the logic but you can see there's mutability there's four each's there's if statements uh I don't",
    "start": "1286580",
    "end": "1294500"
  },
  {
    "text": "know if anyone's familiar with the expression triangle of Doom or Pyramid of Doom when you have so many if-nested statements that your code looks like a",
    "start": "1294500",
    "end": "1300919"
  },
  {
    "text": "huge uh pyramid going the wrong way that's what you see a lot of and that's what I'm trying to avoid by using a",
    "start": "1300919",
    "end": "1306799"
  },
  {
    "text": "functional style in F sharp so just we're going to keep this model in our head and then we're going to see how F sharp solves these problems",
    "start": "1306799",
    "end": "1314059"
  },
  {
    "text": "and to do that we're going to learn some F sharp does anyone use F sharp besides me oh okay cool great great uh the rest",
    "start": "1314059",
    "end": "1321799"
  },
  {
    "text": "of you I'm going to give you a five minute introduction to F sharp any F sharpers feel free to interrupt or",
    "start": "1321799",
    "end": "1327679"
  },
  {
    "text": "expound on what I'm going to say um I am going to get out of here I'm going to visual studio code so just",
    "start": "1327679",
    "end": "1335179"
  },
  {
    "text": "understand if you're not familiar with F sharp that everything is either data and function there's no design patterns there's no curly braces there's no",
    "start": "1335179",
    "end": "1341720"
  },
  {
    "text": "return statements there's none of this boilerplate code decoration code it's just it's if it's data great if it's not",
    "start": "1341720",
    "end": "1348500"
  },
  {
    "text": "data it's a function if it's a function great it's not a function it's data that's it",
    "start": "1348500",
    "end": "1353600"
  },
  {
    "text": "every function is defined with a let if it's named and white space is important much like python",
    "start": "1353600",
    "end": "1359960"
  },
  {
    "text": "so if you're a curly bracer a JavaScript person you do have to understand that where the white space is go into your",
    "start": "1359960",
    "end": "1367159"
  },
  {
    "text": "functions that is important and the last line of every F sharp function is the return value there's no",
    "start": "1367159",
    "end": "1372320"
  },
  {
    "text": "return keyword so if you look at line six seven and eight excuse me and can people can see",
    "start": "1372320",
    "end": "1378200"
  },
  {
    "text": "that okay I hope okay good I've seen 90 heads that is a function called add one add one takes in a single parameter I'm",
    "start": "1378200",
    "end": "1385159"
  },
  {
    "text": "calling it X notice I'm not giving it a type because the computer and you are smart enough to figure out that it's an",
    "start": "1385159",
    "end": "1390440"
  },
  {
    "text": "integer based on your usage inside the function and I'm adding one to it so I'm going to send this down to this uh the",
    "start": "1390440",
    "end": "1397159"
  },
  {
    "text": "rebel read evaluate print Loop if you came to my talk six years ago at NDC Oslo",
    "start": "1397159",
    "end": "1402620"
  },
  {
    "text": "you would have seen me demonstrate what the rebel does and all its Glory but for now I'm just going to use it and you can",
    "start": "1402620",
    "end": "1408500"
  },
  {
    "text": "see at the bottom it creates a function named add one takes an X which is an integer and returns an integer so if I",
    "start": "1408500",
    "end": "1415760"
  },
  {
    "text": "send intend to add one I get 11. I'm sending to add one add three I'm",
    "start": "1415760",
    "end": "1424039"
  },
  {
    "text": "going to get four the next piece is I'm going to create a",
    "start": "1424039",
    "end": "1429799"
  },
  {
    "text": "sequence of one to ten okay and then I'm going to then I'm",
    "start": "1429799",
    "end": "1436100"
  },
  {
    "text": "going to apply a function to each item of that sequence of one to ten that's what seek.map does you have 10 items",
    "start": "1436100",
    "end": "1444260"
  },
  {
    "text": "it's just going to go to each one and apply the same function and the item that you have in that original sequence",
    "start": "1444260",
    "end": "1450080"
  },
  {
    "text": "of 10 is the input parameter over here on the right",
    "start": "1450080",
    "end": "1455539"
  },
  {
    "text": "is another function so seek.map is actually something called a high ordered function where we pass a function into",
    "start": "1455539",
    "end": "1461960"
  },
  {
    "text": "the function that's took my when I came from C sharp to F sharp that was really hard for me to wrap my head around I'm like no data",
    "start": "1461960",
    "end": "1468740"
  },
  {
    "text": "goes into a function and R sharp says yeah data can go into a function but honestly you can pass a function",
    "start": "1468740",
    "end": "1474620"
  },
  {
    "text": "into it and so whatever function you pass into it I'm going to then execute for you so in this case I passed in an",
    "start": "1474620",
    "end": "1481159"
  },
  {
    "text": "anonymous function a Lambda defined by that fun keyword fund takes a single value X and then",
    "start": "1481159",
    "end": "1487940"
  },
  {
    "text": "adds one to it it's exactly the same thing that add one does up here on line seven",
    "start": "1487940",
    "end": "1493039"
  },
  {
    "text": "and then when I do seek map it's going to apply to each of the items on that list two three four five",
    "start": "1493039",
    "end": "1500539"
  },
  {
    "text": "if you want I can do something like add 10 to that",
    "start": "1500539",
    "end": "1505419"
  },
  {
    "text": "11 12 13. so if you've gotten this far you're done",
    "start": "1505940",
    "end": "1511460"
  },
  {
    "text": "everything else is easy and we can go to the DNA I promise you when I took that list of one to ten I",
    "start": "1511460",
    "end": "1518659"
  },
  {
    "text": "can also do that seek.map but instead of doing a Lambda I'm going to add one to it again I'm just going to call a name",
    "start": "1518659",
    "end": "1524299"
  },
  {
    "text": "function and it does exactly the same thing you don't have to pass some parameters or anything it already knows",
    "start": "1524299",
    "end": "1530179"
  },
  {
    "text": "why we love F sharp is that we can then chain functions together Powershell folks probably are",
    "start": "1530179",
    "end": "1537260"
  },
  {
    "text": "very familiar with this too you take a function you run it you then take the results and you apply it to another",
    "start": "1537260",
    "end": "1542600"
  },
  {
    "text": "function and then another function you just keep piping along you can run each one independently",
    "start": "1542600",
    "end": "1548179"
  },
  {
    "text": "and so I can take my list of one to ten I am then going to add one like I did",
    "start": "1548179",
    "end": "1553340"
  },
  {
    "text": "before so two three four five I'm then going to say okay I only want the evens and then I'm going to square it",
    "start": "1553340",
    "end": "1560360"
  },
  {
    "text": "and then I'm going to pass it to a final function which is not a high ordered function it's just sum up everything in that list",
    "start": "1560360",
    "end": "1566000"
  },
  {
    "text": "so 220. okay I'm seeing some knobbing heads the F",
    "start": "1566000",
    "end": "1571400"
  },
  {
    "text": "sharp people are familiar with this the C sharp people might be a little bit out of sorts but I guarantee you as we",
    "start": "1571400",
    "end": "1578059"
  },
  {
    "text": "use this it becomes very familiar and intuitive what yes sir",
    "start": "1578059",
    "end": "1583580"
  },
  {
    "text": "foreign yes that's right that's this character",
    "start": "1583580",
    "end": "1590000"
  },
  {
    "text": "right here this thing right here you mean yep it pipes",
    "start": "1590000",
    "end": "1595159"
  },
  {
    "text": "so here we have our list of one to ten and we're going to apply another function called windowed which I absolutely love for a lot of my",
    "start": "1595159",
    "end": "1601400"
  },
  {
    "text": "bioinformatics work this takes that sequence and just runs a window down it and combines together so we have an",
    "start": "1601400",
    "end": "1607460"
  },
  {
    "text": "array or a list of a list so that first list is one and two then two and three three and four I want to do a window",
    "start": "1607460",
    "end": "1613880"
  },
  {
    "text": "maybe not of two but I want to do a four and so you can see one two three four",
    "start": "1613880",
    "end": "1619279"
  },
  {
    "text": "two three four five etc etc cool that's the ls all the F sharp you need",
    "start": "1619279",
    "end": "1625159"
  },
  {
    "text": "to know we are now ready to tackle biology um so if you remember we did that",
    "start": "1625159",
    "end": "1631100"
  },
  {
    "text": "pattern count uh code and I'm not going to go back to it to",
    "start": "1631100",
    "end": "1636799"
  },
  {
    "text": "refer to it but this is what we're going to do we need to count up how often",
    "start": "1636799",
    "end": "1642740"
  },
  {
    "text": "certain a pattern happens within a string the string might be four billion base",
    "start": "1642740",
    "end": "1648200"
  },
  {
    "text": "pairs but let's start more modestly of 20. so what we're going to do is we're going to make a function of course we",
    "start": "1648200",
    "end": "1653600"
  },
  {
    "text": "always make functions in F sharp we're going to pass in the text and then we're going to pass in the pattern so if I have a text of 20 characters",
    "start": "1653600",
    "end": "1661159"
  },
  {
    "text": "long of DNA well I know the alphabet's either a c t or G let's say I want to",
    "start": "1661159",
    "end": "1667640"
  },
  {
    "text": "know the pattern c a t cat sorry dog lovers DNA only has cats so we can count",
    "start": "1667640",
    "end": "1675020"
  },
  {
    "text": "how many times the word cat shows up in this string so we write that window",
    "start": "1675020",
    "end": "1680120"
  },
  {
    "text": "window going down we then say oh I hate this but when we",
    "start": "1680120",
    "end": "1686000"
  },
  {
    "text": "do a windowed it takes us you do a window to a string it takes it and makes the um the results now an array of",
    "start": "1686000",
    "end": "1692179"
  },
  {
    "text": "characters so I'm going to bring it back together to make it a string so I can then match it to the pattern down here hey the pattern that I just",
    "start": "1692179",
    "end": "1698720"
  },
  {
    "text": "sent in doesn't match any of those windows and if the answer is yes tell me how many",
    "start": "1698720",
    "end": "1704840"
  },
  {
    "text": "so here's some text how many times does cat show up anyone know",
    "start": "1704840",
    "end": "1710059"
  },
  {
    "text": "if I put 5 000 characters up there you wouldn't know but this function or a cat can tell you",
    "start": "1710059",
    "end": "1716419"
  },
  {
    "text": "pretty quickly that it's two okay",
    "start": "1716419",
    "end": "1722679"
  },
  {
    "text": "so let's do this a little bit at scale let's take a make a dictionary of 1.1",
    "start": "1723620",
    "end": "1728659"
  },
  {
    "text": "million base pairs oh I'm sorry I make the string join again which is that remember that cholera",
    "start": "1728659",
    "end": "1735340"
  },
  {
    "text": "genome that we're going to look at so there's 1.1 million uh length string",
    "start": "1735340",
    "end": "1741559"
  },
  {
    "text": "how many times does a cat show up in there 4 341 times",
    "start": "1741559",
    "end": "1749000"
  },
  {
    "text": "okay with what the function does okay with how we built it I'm seeing",
    "start": "1749000",
    "end": "1754039"
  },
  {
    "text": "nodding heads so we can move on what I want to do now is show you the next",
    "start": "1754039",
    "end": "1761419"
  },
  {
    "text": "piece so we now now have we now can count how often something happens inside a",
    "start": "1761419",
    "end": "1766760"
  },
  {
    "text": "string we then want to do our word count to see what's the most popular word because maybe the most popular",
    "start": "1766760",
    "end": "1773240"
  },
  {
    "text": "sets of words in that box of the origin can give us some Clues",
    "start": "1773240",
    "end": "1779299"
  },
  {
    "text": "so that's the way they presented the code this is where I gave up and went straight to F sharp I'm like this is nonsense this is 33 lines of code and",
    "start": "1779299",
    "end": "1785419"
  },
  {
    "text": "all you're doing is counting words so let me show you how we do it in F sharp",
    "start": "1785419",
    "end": "1791720"
  },
  {
    "text": "up here at the top I have a function called frequent words and I'll review it for you in a second I",
    "start": "1791720",
    "end": "1798380"
  },
  {
    "text": "just want to send it down to the rebel we pass in the text and we pass in the K remember that Kamer so we can pass in",
    "start": "1798380",
    "end": "1804860"
  },
  {
    "text": "two three four five show me for maybe all all words that are five characters",
    "start": "1804860",
    "end": "1810919"
  },
  {
    "text": "long what's the most popular one in that group of uh in that sequence of dnas so",
    "start": "1810919",
    "end": "1817279"
  },
  {
    "text": "I'm putting a function inside a function a sub function we're going ahead and using our window front again",
    "start": "1817279",
    "end": "1823520"
  },
  {
    "text": "we're then going to map it to a string because they were arrays of characters we're then going to use another function called count by that just says okay",
    "start": "1823520",
    "end": "1830960"
  },
  {
    "text": "count the number of occurrences we see",
    "start": "1830960",
    "end": "1836360"
  },
  {
    "text": "it's very much like a group by if you're familiar with SQL or if you're using a link right so I just want to count by the ID",
    "start": "1836360",
    "end": "1843740"
  },
  {
    "text": "and then I want to flip it around and sort it by descending there is a data structure much like in",
    "start": "1843740",
    "end": "1849679"
  },
  {
    "text": "Python called the Tuple or a tuple depending on what part of the world you're from and so when I do the count",
    "start": "1849679",
    "end": "1855320"
  },
  {
    "text": "by it says okay AAA 4 c a t six",
    "start": "1855320",
    "end": "1861279"
  },
  {
    "text": "TTT three right it's a it's a paired so all I'm",
    "start": "1861279",
    "end": "1866720"
  },
  {
    "text": "doing when I do the sort by descending I say okay give me the highest number one and put me up there and then I take the",
    "start": "1866720",
    "end": "1874220"
  },
  {
    "text": "first one the head of that list and I get that number oh sorry",
    "start": "1874220",
    "end": "1879260"
  },
  {
    "text": "did I not oh yeah I know why I and then I I'm sorry I shouldn't run that as a sub function I then find the most",
    "start": "1879260",
    "end": "1886279"
  },
  {
    "text": "popular number and then I say okay go back and find in that groupings anyone with that same",
    "start": "1886279",
    "end": "1892520"
  },
  {
    "text": "number so in case we have a tie for the most common combinations",
    "start": "1892520",
    "end": "1898159"
  },
  {
    "text": "we can handle that so that's five to fourteen that's nine lines of code I",
    "start": "1898159",
    "end": "1903320"
  },
  {
    "text": "find it very intuitive when I read it how it's handled and I can throw away 33 lines of python code which makes me feel",
    "start": "1903320",
    "end": "1909320"
  },
  {
    "text": "really good so I am going to take the origin remember before how they did The Knockout to identify it for cholera I'm",
    "start": "1909320",
    "end": "1916460"
  },
  {
    "text": "going to take that and I'm going to stick it into a value called Ori and it's 541 base pairs",
    "start": "1916460",
    "end": "1923299"
  },
  {
    "text": "long I am then going to make a list three to nine and that'll be my k and I'm going",
    "start": "1923299",
    "end": "1929360"
  },
  {
    "text": "ahead and I'm going to set call frequent words to find out the most frequent words",
    "start": "1929360",
    "end": "1934460"
  },
  {
    "text": "for this if you can see that on the bottom I hope you can the most frequent word",
    "start": "1934460",
    "end": "1942260"
  },
  {
    "text": "for a threemer is TGA I guess maybe not surprisingly",
    "start": "1942260",
    "end": "1948380"
  },
  {
    "text": "the next freak for a former it's a TGA so they just stuck an A on it then",
    "start": "1948380",
    "end": "1954140"
  },
  {
    "text": "surprisingly for a Fiverr they're not it doesn't build off that TGA and you can see the counts as it",
    "start": "1954140",
    "end": "1960620"
  },
  {
    "text": "descents which intuitively makes sense the smaller the word the more likely it's going to show up in those 540 or",
    "start": "1960620",
    "end": "1966500"
  },
  {
    "text": "541. so TGA shows up 21 times and then 12 times",
    "start": "1966500",
    "end": "1971720"
  },
  {
    "text": "anyone see anything interesting about this list as you go down it any analysts out there",
    "start": "1971720",
    "end": "1979520"
  },
  {
    "text": "or people who like to do crossword puzzles or finding commonalities or outliers",
    "start": "1979520",
    "end": "1985039"
  },
  {
    "text": "the answer is nine if you you notice this is not a linear descent it's actually a log nine should",
    "start": "1985039",
    "end": "1991880"
  },
  {
    "text": "probably show up once if once instead we're showing four different patterns",
    "start": "1991880",
    "end": "1998059"
  },
  {
    "text": "and they're showing up three times each that's a lot",
    "start": "1998059",
    "end": "2003100"
  },
  {
    "text": "so some what's up with this nymer is there something more we should investigate",
    "start": "2003100",
    "end": "2008380"
  },
  {
    "text": "and the answer is yes so what we can do is that code again is I want to show you",
    "start": "2008380",
    "end": "2015820"
  },
  {
    "text": "yeah I can show you from here something called the reverse complement which in America when you give someone a",
    "start": "2015820",
    "end": "2022539"
  },
  {
    "text": "reverse complement you're actually insulting them and using complementary words as an NLP person I love it but",
    "start": "2022539",
    "end": "2028539"
  },
  {
    "text": "remember we unfolded that DNA we Unwound it we and it got cut apart into two",
    "start": "2028539",
    "end": "2034000"
  },
  {
    "text": "strands I've just shown you one strand but there's another strand right the reverse and the complement so for",
    "start": "2034000",
    "end": "2041380"
  },
  {
    "text": "this example a t g c g Etc it has a reverse complement you can see it",
    "start": "2041380",
    "end": "2046600"
  },
  {
    "text": "underneath so going back to that first nimer that we thought was interesting",
    "start": "2046600",
    "end": "2051700"
  },
  {
    "text": "the we come back to the end the far right and we say G well that's remember it's it's complementary pair for a G is",
    "start": "2051700",
    "end": "2057878"
  },
  {
    "text": "always a c that'll be the first position then the a it's complementary pair a t That'll be in the second position",
    "start": "2057879",
    "end": "2064540"
  },
  {
    "text": "etc etc and we build it out and there's that pesky cat again just if you do some basic statistics",
    "start": "2064540",
    "end": "2071020"
  },
  {
    "text": "remember I ran through that random of 1.1 million the chances of a a nine mer showing up",
    "start": "2071020",
    "end": "2077740"
  },
  {
    "text": "three times in that at 500 base pair box is about one in thirteen hundred",
    "start": "2077740",
    "end": "2084398"
  },
  {
    "text": "but we actually have a reverse complement so it's showing up six times and that's one divided by a lot I can't",
    "start": "2084399",
    "end": "2090700"
  },
  {
    "text": "remember them it's it's off the charts so let's go look take a look at that and see if there's um something in the code",
    "start": "2090700",
    "end": "2096398"
  },
  {
    "text": "that'll show us of those four uh nymers which one oh oh good this one crashed",
    "start": "2096399",
    "end": "2103000"
  },
  {
    "text": "too [Laughter] uh one second I'm sorry",
    "start": "2103000",
    "end": "2108940"
  },
  {
    "text": "Microsoft all right good we that didn't crash so here's the reverse complement and um I",
    "start": "2108940",
    "end": "2114940"
  },
  {
    "text": "should show you one more thing yeah okay thank you um this is the code for the reverse",
    "start": "2114940",
    "end": "2120280"
  },
  {
    "text": "complement the pseudo code makes sense you reverse the string and then you take the complementary base pair",
    "start": "2120280",
    "end": "2126040"
  },
  {
    "text": "so I'm going to go back here and oh yeah",
    "start": "2126040",
    "end": "2131579"
  },
  {
    "text": "so it was showing but I don't know what it's doing",
    "start": "2131740",
    "end": "2137859"
  },
  {
    "text": "restart and update updates what in the world and now it's trying to start Visual",
    "start": "2137859",
    "end": "2142960"
  },
  {
    "text": "Studio which does anyone use Visual Studio yeah a couple still all right we're",
    "start": "2142960",
    "end": "2148240"
  },
  {
    "text": "gonna stay in vs code so finding the reverse complement I think is fairly uh straightforward",
    "start": "2148240",
    "end": "2154420"
  },
  {
    "text": "we come up here and we make a function for it",
    "start": "2154420",
    "end": "2158578"
  },
  {
    "text": "and we take this character array and I do a little bit of productive coding I make it all lower in variant and I turn",
    "start": "2159820",
    "end": "2165579"
  },
  {
    "text": "into a character array then I go ahead and map it so this is actually complement reverse sorry reverse the",
    "start": "2165579",
    "end": "2170740"
  },
  {
    "text": "reverse complement so if it's an a make it a t if it's a c make it a g Etc then I do seek dot reverse I turn it back",
    "start": "2170740",
    "end": "2177280"
  },
  {
    "text": "into array so the reverse complement of atg of course is our cat again",
    "start": "2177280",
    "end": "2184000"
  },
  {
    "text": "so let's do that frequent words now and we're going to throw in not just reading it from five to three this end we're",
    "start": "2184000",
    "end": "2189760"
  },
  {
    "text": "going to read it from the other end back five to three and see how many we get",
    "start": "2189760",
    "end": "2195960"
  },
  {
    "text": "make this a little bit bigger so TG let's start with the three more",
    "start": "2204099",
    "end": "2210820"
  },
  {
    "text": "TGA shows up again the 25 times its reverse complement is TCA and it shows",
    "start": "2210820",
    "end": "2216400"
  },
  {
    "text": "up 17 times so that on the Strand is 42 times",
    "start": "2216400",
    "end": "2222460"
  },
  {
    "text": "same thing with four five six seven eight and nine check out this nymer now",
    "start": "2222460",
    "end": "2227740"
  },
  {
    "text": "this and this are reverse complements to each other and they're both showing up three",
    "start": "2227740",
    "end": "2233320"
  },
  {
    "text": "times so it'll remember that six divided by one divided by the chances of uh a",
    "start": "2233320",
    "end": "2240220"
  },
  {
    "text": "nymer showing up six times in a 500 base pair spring is astronomical that's what we're seeing we're also we can throw out",
    "start": "2240220",
    "end": "2246820"
  },
  {
    "text": "the other one because it's three and one so there's only four that's again a big number but if we're looking for the the",
    "start": "2246820",
    "end": "2253660"
  },
  {
    "text": "th e back to our Cipher we want the most popular word and in the case this nimer",
    "start": "2253660",
    "end": "2260619"
  },
  {
    "text": "that's showing up six times that's it okay so now let's see what we can do about",
    "start": "2260619",
    "end": "2266859"
  },
  {
    "text": "this um oh Visual Studio",
    "start": "2266859",
    "end": "2272200"
  },
  {
    "text": "quit no is Powerpoint dead on me oh no good",
    "start": "2272200",
    "end": "2278740"
  },
  {
    "text": "so we now think okay we have this nimer that's this long nymer that's we have a",
    "start": "2278740",
    "end": "2284619"
  },
  {
    "text": "we have a set of base pairs that are nine nine long and we see it pretty frequently in this box of 500 but how",
    "start": "2284619",
    "end": "2292000"
  },
  {
    "text": "often does it show up in the full 1.1 million um the Genome of the cholera and they call",
    "start": "2292000",
    "end": "2300400"
  },
  {
    "text": "the clump finding that's fine but basically we're going to go through all 1.1 million base pairs with that nimer",
    "start": "2300400",
    "end": "2307599"
  },
  {
    "text": "on each section and see how often it shows up and we have to assume that we don't know",
    "start": "2307599",
    "end": "2314220"
  },
  {
    "text": "that it's 541 the box or we'll assume it's roughly that so we'll just divide",
    "start": "2314220",
    "end": "2319540"
  },
  {
    "text": "it up into 500 groups to see okay if this origin of replication of 500 base pairs in the first zero through four",
    "start": "2319540",
    "end": "2326740"
  },
  {
    "text": "three four ninety nine how often does it show off and we can just keep it going down like that that's the intention behind the clump",
    "start": "2326740",
    "end": "2332980"
  },
  {
    "text": "finding so",
    "start": "2332980",
    "end": "2337140"
  },
  {
    "text": "make sure I'm okay on time good so what we're going to do is where that pattern count again same",
    "start": "2339640",
    "end": "2346180"
  },
  {
    "text": "code as before this is the same text and you'll get the same result with our cat showing up twice",
    "start": "2346180",
    "end": "2352660"
  },
  {
    "text": "we're then going to basically take substrings to see if that substring appears or not",
    "start": "2352660",
    "end": "2359800"
  },
  {
    "text": "and if it does return to me this is going to say at index 12 for a 3mer what",
    "start": "2359800",
    "end": "2365680"
  },
  {
    "text": "do you get in this case cat there's a really cool feature of F sharp called the option type",
    "start": "2365680",
    "end": "2371800"
  },
  {
    "text": "um right here on line 20 you can see that I returned some if I have an index out of range kind of problem",
    "start": "2371800",
    "end": "2377920"
  },
  {
    "text": "I just return none there's no concept really of null I mean we have to have null and F sharp to deal",
    "start": "2377920",
    "end": "2383320"
  },
  {
    "text": "with the rest of the.net ecosystem but we really don't use it so it just cuts down the amount of Errors significantly",
    "start": "2383320",
    "end": "2389380"
  },
  {
    "text": "when we start using some and none types and you can think of it as a wrapper like the Amazon box with the cool thing",
    "start": "2389380",
    "end": "2395680"
  },
  {
    "text": "inside the Box will say there's something inside you open it up if the Box comes and it says None well you don't have to open it up because there's",
    "start": "2395680",
    "end": "2401260"
  },
  {
    "text": "nothing in there so we that's our way we're going to find that certain clump",
    "start": "2401260",
    "end": "2407200"
  },
  {
    "text": "and then we're going to pass in the text and we're going to break it apart so in this case remember that I had about 20",
    "start": "2407200",
    "end": "2412480"
  },
  {
    "text": "characters I broke it into groups of three substrings of three I can then go through those substrings",
    "start": "2412480",
    "end": "2418359"
  },
  {
    "text": "and say oh is anything in there and so",
    "start": "2418359",
    "end": "2423400"
  },
  {
    "text": "remember I broke that up into three this will say okay I'm looking for cat over",
    "start": "2423400",
    "end": "2429099"
  },
  {
    "text": "here how often does cat show up and more importantly where does it show up so Cat shows up twice it shows up in",
    "start": "2429099",
    "end": "2437320"
  },
  {
    "text": "index or number four zero one two three four yup uh where is that",
    "start": "2437320",
    "end": "2442599"
  },
  {
    "text": "c-a-t I'm sorry it shows up in seven uh it shows up in Clump number four",
    "start": "2442599",
    "end": "2450280"
  },
  {
    "text": "zero one two three four and it shows up in Clump number seven",
    "start": "2450280",
    "end": "2455320"
  },
  {
    "text": "but we can search and make that Clump even bigger and then search within it so",
    "start": "2455320",
    "end": "2460359"
  },
  {
    "text": "I made the clump the full length of that and if I run it it's going to show up in position it's going to show up in the",
    "start": "2460359",
    "end": "2466359"
  },
  {
    "text": "only one zero and there's two examples of it so not only can I look for clumps but I can look inside the clump to find",
    "start": "2466359",
    "end": "2471940"
  },
  {
    "text": "my pattern in this case the nimer so I'm going to pull in the entire genome",
    "start": "2471940",
    "end": "2478780"
  },
  {
    "text": "I'm going to assume that the origin of replication is about 500 characters long and I'm going to go ahead and break",
    "start": "2478780",
    "end": "2485260"
  },
  {
    "text": "those into 500. so 1.1 million divided by 500 is 2 000",
    "start": "2485260",
    "end": "2491500"
  },
  {
    "text": "something we'll see in a second and I'm going to then remember this was the first side",
    "start": "2491500",
    "end": "2497680"
  },
  {
    "text": "right the atg one the cat's on the other side coming back so we're just going to look for this one to start we're going",
    "start": "2497680",
    "end": "2503260"
  },
  {
    "text": "to search the clumps and oh sorry and see what we get",
    "start": "2503260",
    "end": "2510000"
  },
  {
    "text": "so 500 into 1.1 million is 2217.",
    "start": "2510579",
    "end": "2517240"
  },
  {
    "text": "how many of those had zero of that example and the answer is 2201.",
    "start": "2517240",
    "end": "2525220"
  },
  {
    "text": "so this pattern is not period in the entire genome it's only appearing in 16",
    "start": "2525220",
    "end": "2531700"
  },
  {
    "text": "of the 2000 boxes hmm",
    "start": "2531700",
    "end": "2536800"
  },
  {
    "text": "and so let's take a look at those and",
    "start": "2536800",
    "end": "2542760"
  },
  {
    "text": "you can see here at index 304 the 304th clump so you multiply it by",
    "start": "2542859",
    "end": "2548560"
  },
  {
    "text": "500 you know exactly the area on the genome there is two examples of it and then a couple ones",
    "start": "2548560",
    "end": "2554859"
  },
  {
    "text": "and since I started by descending we know the most common place is number 304. so let's take the reverse complement of",
    "start": "2554859",
    "end": "2562060"
  },
  {
    "text": "it and do the same thing",
    "start": "2562060",
    "end": "2566338"
  },
  {
    "text": "uh it didn't run one second please",
    "start": "2572200",
    "end": "2576359"
  },
  {
    "text": "304 again and there's three of them why I don't think six showed up versus five is because it was actually 500 and",
    "start": "2581140",
    "end": "2587319"
  },
  {
    "text": "something was the origin of replication and one might have run over to the end so when we divided by 500",
    "start": "2587319",
    "end": "2592960"
  },
  {
    "text": "but here I am as a bioinformatician going to the biologist saying hey your origin of replication",
    "start": "2592960",
    "end": "2599020"
  },
  {
    "text": "Don't Run 2 200 experiments to knock out each one to see where it goes go to 304 times 500 whatever number that",
    "start": "2599020",
    "end": "2606640"
  },
  {
    "text": "is knock out that 500 and see if the the cell doesn't replicate so we have just found the needle in the",
    "start": "2606640",
    "end": "2613599"
  },
  {
    "text": "haystack for the biologists pretty cool huh we've now searched a genome of an entire well of a living",
    "start": "2613599",
    "end": "2620500"
  },
  {
    "text": "creature or it's a bacteria um and we found where it replicates or",
    "start": "2620500",
    "end": "2628540"
  },
  {
    "text": "where it divides to replicate but there's more the cool part of F sharp is I hate",
    "start": "2628540",
    "end": "2635319"
  },
  {
    "text": "dealing with strings because I think strings can be fragile to work with you always have to process the strings",
    "start": "2635319",
    "end": "2641680"
  },
  {
    "text": "you have to check the variant the culture of it etc etc F sharp has a wonderful type system",
    "start": "2641680",
    "end": "2647859"
  },
  {
    "text": "there's a good book called domain modeling made functional by Scott voschlin pick that one up too if you're",
    "start": "2647859",
    "end": "2653440"
  },
  {
    "text": "interested I am going to now make a type act and G",
    "start": "2653440",
    "end": "2658839"
  },
  {
    "text": "that's the entire universe of what it can be and I'm going to do that reverse complement again but I'm just going to",
    "start": "2658839",
    "end": "2664540"
  },
  {
    "text": "turn it from strings into an array of DNA",
    "start": "2664540",
    "end": "2672280"
  },
  {
    "text": "notice the amount of code drops significantly in addition if a string came in with the letter G sorry what's a",
    "start": "2672280",
    "end": "2679060"
  },
  {
    "text": "good letter r it wouldn't hit the type system so the compiler would get complained about it it's pretty cool",
    "start": "2679060",
    "end": "2685599"
  },
  {
    "text": "so highly recommend using the type system to your advantage and looking at that book there's not a lot of like",
    "start": "2685599",
    "end": "2692319"
  },
  {
    "text": "object-oriented programming I noticed there's a lot of stuff that goes on and when you start using the type system",
    "start": "2692319",
    "end": "2697440"
  },
  {
    "text": "there's very little but it's enough to sort of make sure that your code is right don't need unit tests either that way",
    "start": "2697440",
    "end": "2705640"
  },
  {
    "text": "uh one other thing we do is we know that the data comes in is sometimes",
    "start": "2705640",
    "end": "2711160"
  },
  {
    "text": "there's differences between reality and when the mass spectrometer or the the Oxford nanospore maybe not the Oxford",
    "start": "2711160",
    "end": "2717700"
  },
  {
    "text": "the aluminum machine um throw some errors at you so usually we don't just look at an exact match we",
    "start": "2717700",
    "end": "2724960"
  },
  {
    "text": "look at a close enough match so this is called the hemming distance so if I take",
    "start": "2724960",
    "end": "2730359"
  },
  {
    "text": "um one uh former like a cat and then I take another one called gcat",
    "start": "2730359",
    "end": "2736060"
  },
  {
    "text": "and I ask what the Hamming distance is it's going to say three and we get some if there was no match it would be none",
    "start": "2736060",
    "end": "2741700"
  },
  {
    "text": "or if the data was malformed uh the code itself I think is fairly straightforward if you've been staying with me you",
    "start": "2741700",
    "end": "2747880"
  },
  {
    "text": "basically check to see you've gotten two arrays of strings coming or you have two strings coming in you check their length",
    "start": "2747880",
    "end": "2753520"
  },
  {
    "text": "if they're not the same length you throw it away so I can't do a hemming distance if they are the same you make them both",
    "start": "2753520",
    "end": "2760480"
  },
  {
    "text": "character arrays and you zip them together just like this and then you filter to see if the one side matches",
    "start": "2760480",
    "end": "2766720"
  },
  {
    "text": "the other side and then just tell me how many where the match happens so that's really handy because when we",
    "start": "2766720",
    "end": "2772839"
  },
  {
    "text": "do the pattern counts most of the time we're not ex we're not looking for an exact match we're looking for a close",
    "start": "2772839",
    "end": "2778240"
  },
  {
    "text": "enough match 90 match and with the hemming distance you can just say okay what's my distance and then What's the",
    "start": "2778240",
    "end": "2783520"
  },
  {
    "text": "total and then the 75 percent three or four for example good enough and that's really for the biologists to decide",
    "start": "2783520",
    "end": "2790119"
  },
  {
    "text": "um so there's some pattern counts same kind of thing here we're going to look for that same",
    "start": "2790119",
    "end": "2795280"
  },
  {
    "text": "um uh nymer again in the entire 1.1 million",
    "start": "2795280",
    "end": "2801099"
  },
  {
    "text": "but this time I want to do this Heming distance of all nine right there's eight of them total remember six were in the",
    "start": "2801099",
    "end": "2807940"
  },
  {
    "text": "box or five were in the box and three were spread out and then we can also say okay but what",
    "start": "2807940",
    "end": "2813280"
  },
  {
    "text": "about eight well now we have 224 examples so if we didn't get the box immedially identified we might have to",
    "start": "2813280",
    "end": "2819220"
  },
  {
    "text": "go up into 204 224 excuse me and if we want to go out be off by two letters for",
    "start": "2819220",
    "end": "2824619"
  },
  {
    "text": "example there's 2420 of them so that's what we use the hemming distance for for use use it pretty",
    "start": "2824619",
    "end": "2830980"
  },
  {
    "text": "frequently one last thing I want to talk about and I think I have a couple minutes left",
    "start": "2830980",
    "end": "2836260"
  },
  {
    "text": "yeah I've got a couple I want to talk about another great thing of F sharp",
    "start": "2836260",
    "end": "2844900"
  },
  {
    "text": "and it's a library that out there called parallel so when you start dealing with large",
    "start": "2844900",
    "end": "2851619"
  },
  {
    "text": "volumes of string it can be pretty resource intensive compute intensive",
    "start": "2851619",
    "end": "2857319"
  },
  {
    "text": "big data so I don't like writing code that just",
    "start": "2857319",
    "end": "2862540"
  },
  {
    "text": "supports using more than one core on my machine I'd rather it just use it automatically",
    "start": "2862540",
    "end": "2867819"
  },
  {
    "text": "and F sharp does it pretty much automatically so here we are I'm going to make",
    "start": "2867819",
    "end": "2874200"
  },
  {
    "text": "how many is that that's 10 million I'm making a string of 10",
    "start": "2874200",
    "end": "2879400"
  },
  {
    "text": "million letters base pairs you can tell it's taking a little bit The Machine's complaining about it",
    "start": "2879400",
    "end": "2885880"
  },
  {
    "text": "we're still clocking and then I'm going to send in our pattern count again",
    "start": "2885880",
    "end": "2892260"
  },
  {
    "text": "and let's give it a second to generate those 10 million and I wonder if I'm presenting it it",
    "start": "2893859",
    "end": "2899560"
  },
  {
    "text": "should usually take about 10 seconds in fact taking us longer it's concerning",
    "start": "2899560",
    "end": "2905500"
  },
  {
    "text": "foreign there we go",
    "start": "2905500",
    "end": "2910960"
  },
  {
    "text": "so I'm going to turn on the timer remember our pattern again and remember this is an arbitrary 10 million base",
    "start": "2910960",
    "end": "2917680"
  },
  {
    "text": "pair string I'm going to then run it to see how long it takes",
    "start": "2917680",
    "end": "2924720"
  },
  {
    "text": "and it should take eight seconds yeah 8.7 seconds",
    "start": "2926800",
    "end": "2932140"
  },
  {
    "text": "I'm going to copy it down here and then I'm going to go up here oh I'm sorry",
    "start": "2932140",
    "end": "2937420"
  },
  {
    "text": "I ruined my ruined my aha because I didn't change it from the last time that's the way it normally should run",
    "start": "2937420",
    "end": "2942760"
  },
  {
    "text": "and we'll see how long it takes",
    "start": "2942760",
    "end": "2945960"
  },
  {
    "text": "again it should take a little bit longer than eight seconds",
    "start": "2948220",
    "end": "2953880"
  },
  {
    "text": "yeah 8.9 seconds um depending on how you run it and how the",
    "start": "2954819",
    "end": "2959980"
  },
  {
    "text": "single processor because there's always a context switch between the processors but my my point",
    "start": "2959980",
    "end": "2966640"
  },
  {
    "text": "is that to change it from using one core which is what we've been doing so far",
    "start": "2966640",
    "end": "2971980"
  },
  {
    "text": "to all the cores that are available to me I add a letter there's no other code out there that I need to and worry about",
    "start": "2971980",
    "end": "2978940"
  },
  {
    "text": "there's no mutexes or things like that I just use pseek which means parallel seek",
    "start": "2978940",
    "end": "2984099"
  },
  {
    "text": "so it's a really effective way particularly when we use a larger uh strings to plow through it quickly and",
    "start": "2984099",
    "end": "2991180"
  },
  {
    "text": "so that's I love it because I get the speed without having to write the code I can write the code that actually is",
    "start": "2991180",
    "end": "2998200"
  },
  {
    "text": "more algorithmic than just trying to make things faster so",
    "start": "2998200",
    "end": "3005300"
  },
  {
    "text": "let me come down to here so why do I think F sharp is better I",
    "start": "3005880",
    "end": "3011520"
  },
  {
    "text": "think it's a great language because you don't have code for code's sake so it has a high noise to Signal ratio",
    "start": "3011520",
    "end": "3018240"
  },
  {
    "text": "and it's very easy to sit down with a biologist and talk in F-sharp to them particularly when you use the type",
    "start": "3018240",
    "end": "3024599"
  },
  {
    "text": "system and that error reduction they talked about earlier a big problem in Academia",
    "start": "3024599",
    "end": "3030240"
  },
  {
    "text": "is that reproducibility of research you pick up a a journal of XYZ Journal",
    "start": "3030240",
    "end": "3038700"
  },
  {
    "text": "of bioinformatics let's say well bioinformatics actually came to solve the problem a journal of biology open it up and there's an article that does some",
    "start": "3038700",
    "end": "3044940"
  },
  {
    "text": "kind of analytical work most recent research I think says about",
    "start": "3044940",
    "end": "3050220"
  },
  {
    "text": "30 of those articles no one can figure out how to reproduce it think about that the next time you get",
    "start": "3050220",
    "end": "3055980"
  },
  {
    "text": "your coveted shot I think but it's true that the reason that software engineers and",
    "start": "3055980",
    "end": "3062520"
  },
  {
    "text": "functional languages can help here is a lot of the the code itself",
    "start": "3062520",
    "end": "3068040"
  },
  {
    "text": "because of immutability a couple of other things and also good software engineering techniques like Source",
    "start": "3068040",
    "end": "3073260"
  },
  {
    "text": "control things like that we can make experiments more reproducible which I think will really",
    "start": "3073260",
    "end": "3079740"
  },
  {
    "text": "benefit everyone in the long run so that's what I have for you today I",
    "start": "3079740",
    "end": "3085559"
  },
  {
    "text": "want to mention that like I said I got into curing type 1 diabetes through the lab because it's affected my family",
    "start": "3085559",
    "end": "3091140"
  },
  {
    "text": "personally some of you might be affected or families affected by other diseases like cancer and you're interested and",
    "start": "3091140",
    "end": "3097440"
  },
  {
    "text": "want to use your skills well I'm not telling you to leave your nine to five job that'd be cool but if you are interested in your five to nine job and",
    "start": "3097440",
    "end": "3105359"
  },
  {
    "text": "you're interested in trying to help out the world make a little better please contact me I can tell you how to sort of",
    "start": "3105359",
    "end": "3111000"
  },
  {
    "text": "get involved there's different research groups out there that really need software engineering help and it's a lot of fun",
    "start": "3111000",
    "end": "3117180"
  },
  {
    "text": "so if you really like building algorithms I showed you a fairly simple algorithm today um it's a it's a fantastic way to sort",
    "start": "3117180",
    "end": "3123839"
  },
  {
    "text": "of help and give back and it's pretty cool like you know I'm at a dinner party and people say hey what are you doing",
    "start": "3123839",
    "end": "3128940"
  },
  {
    "text": "I'm like oh you know I build a phone app hey I'm trying to cure cancer well then they want to talk to you so you know",
    "start": "3128940",
    "end": "3134099"
  },
  {
    "text": "there's that social thing too uh all this code is available for you on GitHub you can take a picture of it",
    "start": "3134099",
    "end": "3139920"
  },
  {
    "text": "there and again come up talk to me email me tweet me and I'm happy to talk to you about that or coffee farming thank you",
    "start": "3139920",
    "end": "3147270"
  },
  {
    "text": "[Applause]",
    "start": "3147270",
    "end": "3153210"
  }
]