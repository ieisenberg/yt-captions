[
  {
    "start": "0",
    "end": "52000"
  },
  {
    "text": "hi everyone good morning thank you for waking up this morning and coming out to",
    "start": "4500",
    "end": "9930"
  },
  {
    "text": "listen to a talk on JavaScript if you have used a view before can you raise",
    "start": "9930",
    "end": "17430"
  },
  {
    "text": "your hand Oh awesome I didn't realize there were that many fellow view developers here so as much as I love you",
    "start": "17430",
    "end": "26760"
  },
  {
    "text": "I know that it's not right for everyone so I would like you at least by the end",
    "start": "26760",
    "end": "31800"
  },
  {
    "text": "of this talk to just at least consider using view or trying it out giving it a",
    "start": "31800",
    "end": "38160"
  },
  {
    "text": "shot in your next application oh and first of all I want to thank NDC",
    "start": "38160",
    "end": "43920"
  },
  {
    "text": "for inviting me here and arranging my travel this has been a really great conference so far my name is Gwen I am",
    "start": "43920",
    "end": "53940"
  },
  {
    "start": "52000",
    "end": "52000"
  },
  {
    "text": "from the United States if you couldn't tell by my accent I am a software developer and consultant there and",
    "start": "53940",
    "end": "60510"
  },
  {
    "text": "recently I have kind of transitioned into more of a content creator gone the",
    "start": "60510",
    "end": "66180"
  },
  {
    "text": "whole YouTube route so you can find me under faraday academy i also publish a",
    "start": "66180",
    "end": "71490"
  },
  {
    "text": "lot of content for free code camp so i have a three hour long view tutorial so if you're really excited about view you",
    "start": "71490",
    "end": "77939"
  },
  {
    "text": "can check that out on youtube after this as well and you can pretty much search me go ahead a and find me anywhere",
    "start": "77939",
    "end": "84930"
  },
  {
    "text": "online it's not a common name",
    "start": "84930",
    "end": "88430"
  },
  {
    "text": "so what we're gonna cover today we're gonna talk briefly about some of the",
    "start": "90940",
    "end": "97310"
  },
  {
    "start": "91000",
    "end": "91000"
  },
  {
    "text": "view basics about why people who use view Jayesh about the design patterns",
    "start": "97310",
    "end": "102890"
  },
  {
    "text": "behind view Jas and then get into features about the exciting upcoming",
    "start": "102890",
    "end": "108670"
  },
  {
    "text": "view 3.0 release I was hoping it would be released prior to this talk but at",
    "start": "108670",
    "end": "115280"
  },
  {
    "text": "least we have the alpha version out which has been out for about three weeks now and then we'll go into some of the",
    "start": "115280",
    "end": "122300"
  },
  {
    "text": "future of you what's coming up and then if you have any questions we can talk",
    "start": "122300",
    "end": "127700"
  },
  {
    "text": "about that at the end so what is view",
    "start": "127700",
    "end": "135850"
  },
  {
    "start": "131000",
    "end": "131000"
  },
  {
    "text": "view calls itself a progressive framework it kind of coined this term",
    "start": "135850",
    "end": "141550"
  },
  {
    "text": "used in this way at least it is extremely lightweight and you can use it",
    "start": "141550",
    "end": "148640"
  },
  {
    "text": "all the way from being a tiny library importing it through a CDN and until a",
    "start": "148640",
    "end": "155690"
  },
  {
    "text": "large-scale framework companies like gitlab and other large companies especially in China are using UJS it is",
    "start": "155690",
    "end": "164870"
  },
  {
    "text": "a web framework and it uses a virtual Dom very similar to react so that's what",
    "start": "164870",
    "end": "173630"
  },
  {
    "text": "it is in a nutshell and I think to really understand the design of you it's important to know a little bit about the",
    "start": "173630",
    "end": "178880"
  },
  {
    "text": "history as well so view j/s was started as a side project by someone named Devin",
    "start": "178880",
    "end": "185000"
  },
  {
    "start": "180000",
    "end": "180000"
  },
  {
    "text": "you back in 2013 he had been a developer at Google worked heavily with angular",
    "start": "185000",
    "end": "190489"
  },
  {
    "text": "and then decided he wanted a lightweight framework that would be easy for",
    "start": "190489",
    "end": "195530"
  },
  {
    "text": "prototyping applications so he launched view in 2014",
    "start": "195530",
    "end": "201019"
  },
  {
    "text": "actually February 3rd so the universe eree is coming up soon and then in 2016 you know the community",
    "start": "201019",
    "end": "208910"
  },
  {
    "text": "especially in China had been booming at that time 2.0 came out in 2016 and then",
    "start": "208910",
    "end": "214700"
  },
  {
    "text": "this year we're going to see 3.0 and you can see that the whole ecosystem has",
    "start": "214700",
    "end": "220220"
  },
  {
    "text": "evolved over the same time period with view router state management view X and view CLI coming",
    "start": "220220",
    "end": "227890"
  },
  {
    "text": "out with version after version over the last three four years as well so the",
    "start": "227890",
    "end": "233830"
  },
  {
    "text": "important parts of the history are created in 2014 it became popular in",
    "start": "233830",
    "end": "239470"
  },
  {
    "text": "China first and is now spreading into the west over the last few years it's used by the largest Chinese companies",
    "start": "239470",
    "end": "246070"
  },
  {
    "text": "Alibaba and Baidu which is probably part of the huge growth of our the initial",
    "start": "246070",
    "end": "251560"
  },
  {
    "text": "growth of UJS and it started exploding in 2017 we saw a lot of growth over the",
    "start": "251560",
    "end": "257620"
  },
  {
    "text": "last two years and were excited about the growth in 2020 as well so yeah so in",
    "start": "257620",
    "end": "267130"
  },
  {
    "text": "the West people still some people still to consider view to be a small framework",
    "start": "267130",
    "end": "272880"
  },
  {
    "text": "javascript is the most popular when you look at any online survey of developers",
    "start": "272880",
    "end": "279220"
  },
  {
    "text": "javascript is by far the most popular language for professional developers I think there's a lot of crossover because",
    "start": "279220",
    "end": "286030"
  },
  {
    "text": "people use JavaScript and something else but it didn't register or review jeaious",
    "start": "286030",
    "end": "293710"
  },
  {
    "text": "didn't register as one of the most popular frameworks until about 2018",
    "start": "293710",
    "end": "298870"
  },
  {
    "text": "mostly because the respondents for all these surveys are mostly from the west so view jeaious really wasn't",
    "start": "298870",
    "end": "304210"
  },
  {
    "text": "popularized in the west and didn't have a large user base until maybe 2018 and",
    "start": "304210",
    "end": "310360"
  },
  {
    "text": "then you can see the state of jay s survey that's come out over the last few years in 2016 most people hadn't heard",
    "start": "310360",
    "end": "317410"
  },
  {
    "text": "of it or hadn't used Vijay s and that's just grown astronomically to now where",
    "start": "317410",
    "end": "322510"
  },
  {
    "text": "less than like 0.1% of developers having or JavaScript developers haven't heard",
    "start": "322510",
    "end": "328870"
  },
  {
    "text": "of UJS so why are all these people using Vijay s the number one reason people",
    "start": "328870",
    "end": "335320"
  },
  {
    "text": "state that they use Vijay s is the low learning curve is that it's extremely accessible they can use web technologies",
    "start": "335320",
    "end": "342850"
  },
  {
    "text": "they already know the default syntax for view is just using HTML with some",
    "start": "342850",
    "end": "349510"
  },
  {
    "text": "templating and JavaScript that's it and you can use CSS by default",
    "start": "349510",
    "end": "354980"
  },
  {
    "text": "like I said before it's it's a progressive lightweight framework you can use as much or as little as you want",
    "start": "354980",
    "end": "361470"
  },
  {
    "text": "of it it stays out of your way it's also extremely flexible and you can use it to",
    "start": "361470",
    "end": "368730"
  },
  {
    "text": "quickly build a prototype from just one small page that you want to use to a",
    "start": "368730",
    "end": "374130"
  },
  {
    "text": "large scale application so I'm gonna compare it with a little a little bit",
    "start": "374130",
    "end": "381600"
  },
  {
    "text": "with other frameworks and show kind of where the influence behind view came from so a lot of times when you see a",
    "start": "381600",
    "end": "390480"
  },
  {
    "text": "comparison it's like oh the stars on github or you know this is the weekly downloads but you see like the top ten",
    "start": "390480",
    "end": "396960"
  },
  {
    "text": "most popular frameworks all have tens of thousands of stars and downloads and",
    "start": "396960",
    "end": "403680"
  },
  {
    "text": "what is it the new metric everyone's comparing is the developer tool installs to see how many developers are actually",
    "start": "403680",
    "end": "410910"
  },
  {
    "text": "using it I think view had well over a million in the last year so really you",
    "start": "410910",
    "end": "416550"
  },
  {
    "text": "could look at any of the top ten frameworks and choose any one by these metrics so there are a lot more",
    "start": "416550",
    "end": "422060"
  },
  {
    "text": "important things to compare frameworks based off of so when you look at the",
    "start": "422060",
    "end": "427350"
  },
  {
    "text": "design decisions of a framework there's a spectrum from a no opinion framework",
    "start": "427350",
    "end": "434190"
  },
  {
    "text": "which we call like a micro framework or a library and react falls in this area",
    "start": "434190",
    "end": "440010"
  },
  {
    "text": "where it gives you a very specific set of functions that you can use it just",
    "start": "440010",
    "end": "446310"
  },
  {
    "text": "handles rendering your view from the JavaScript and then state management routing just about everything else you",
    "start": "446310",
    "end": "452910"
  },
  {
    "text": "can possibly do in an application is handled by another library so it's not opinionated at all about what you use",
    "start": "452910",
    "end": "459620"
  },
  {
    "text": "and on the other end you have the batteries included frameworks or",
    "start": "459620",
    "end": "464940"
  },
  {
    "text": "frameworks that do a lot of stuff for you so it's a much higher learning curve but you know at the same time you're",
    "start": "464940",
    "end": "472650"
  },
  {
    "text": "getting a lot of extra features and there's always that trade-off so there's",
    "start": "472650",
    "end": "477810"
  },
  {
    "start": "477000",
    "end": "477000"
  },
  {
    "text": "a trade-off between having a beginner friendly API versus being able to scale",
    "start": "477810",
    "end": "482960"
  },
  {
    "text": "opinionated tooling versus how broad use case for a lot of users across",
    "start": "482960",
    "end": "488020"
  },
  {
    "text": "the framework there's also flexibility versus speed",
    "start": "488020",
    "end": "493360"
  },
  {
    "text": "there's primitives like you see in react you get down on the low level or there's",
    "start": "493360",
    "end": "500200"
  },
  {
    "text": "lots of abstractions on the more batteries included frameworks but you can also develop faster or more quickly",
    "start": "500200",
    "end": "506850"
  },
  {
    "text": "and then there's always the trade-off your users are requesting more features but that adds more bloat so to all of",
    "start": "506850",
    "end": "514240"
  },
  {
    "text": "these things view kind of falls in the middle it's not as lightweight as a",
    "start": "514240",
    "end": "521289"
  },
  {
    "text": "library even though it's a very small package but also it's not as opinionated",
    "start": "521290",
    "end": "529420"
  },
  {
    "text": "it lets you be more flexible than something like angular or ember",
    "start": "529420",
    "end": "536519"
  },
  {
    "text": "yeah so when you look at the influence that view Jay s when the VJ s syntax and",
    "start": "539600",
    "end": "546560"
  },
  {
    "start": "541000",
    "end": "541000"
  },
  {
    "text": "design got from angular you can see that it borrowed the concept of directives",
    "start": "546560",
    "end": "554980"
  },
  {
    "text": "referencing the directive highlighted the ng bind highlighted in red there",
    "start": "554980",
    "end": "560270"
  },
  {
    "text": "from angular and also got the concept of two-way data-binding how do you keep",
    "start": "560270",
    "end": "565430"
  },
  {
    "text": "your application state and sync with your Dom the opinionated ecosystem so",
    "start": "565430",
    "end": "571940"
  },
  {
    "text": "when you look at view Jas there's a documented like official way to do",
    "start": "571940",
    "end": "577700"
  },
  {
    "text": "almost everything not almost everything but a lot of things that you would do in an application like state management",
    "start": "577700",
    "end": "584330"
  },
  {
    "text": "router all those things are officially controlled and documented by the core",
    "start": "584330",
    "end": "589940"
  },
  {
    "text": "team but you're free to also use something else if you want and then",
    "start": "589940",
    "end": "595400"
  },
  {
    "text": "using templates so view Jas is templating system uses that same double",
    "start": "595400",
    "end": "602150"
  },
  {
    "text": "mustache mustache syntax from angular and then there's also the concept of",
    "start": "602150",
    "end": "609230"
  },
  {
    "text": "dependency injection in view which is also you'll also have access to it in",
    "start": "609230",
    "end": "616970"
  },
  {
    "text": "view 3 which is coming out and then there was also a heavy react influence",
    "start": "616970",
    "end": "622070"
  },
  {
    "start": "619000",
    "end": "619000"
  },
  {
    "text": "so the timing of UJS is released in 2014 was after angular and react so view has",
    "start": "622070",
    "end": "629540"
  },
  {
    "text": "a lot of benefit to be able to see these other frameworks see how they worked and",
    "start": "629540",
    "end": "635840"
  },
  {
    "text": "then be responsive to how they could create a better framework based off of that so view did implement a virtual Dom",
    "start": "635840",
    "end": "645310"
  },
  {
    "text": "just like react they used composable components so basically you break",
    "start": "645310",
    "end": "654380"
  },
  {
    "text": "everything up into the smallest component that you can and you import them all into each other to create an",
    "start": "654380",
    "end": "660320"
  },
  {
    "text": "application it makes logic and view which is something everyone said was so weird at",
    "start": "660320",
    "end": "665450"
  },
  {
    "text": "first but now everyone seems to love so you can render your",
    "start": "665450",
    "end": "671850"
  },
  {
    "text": "or your view from your JavaScript and mix those two elements in the same file",
    "start": "671850",
    "end": "678089"
  },
  {
    "text": "so you have your Dom or your view in the same file with the logic that acts upon",
    "start": "678089",
    "end": "683579"
  },
  {
    "text": "that view it also remained flexible so flexibility is one of the best things to",
    "start": "683579",
    "end": "691050"
  },
  {
    "text": "have a vibrant community because you have a lot of contributors that are putting their time and effort into",
    "start": "691050",
    "end": "697139"
  },
  {
    "text": "building tools and libraries that go along with that framework because there's a lot of solutions that are",
    "start": "697139",
    "end": "703290"
  },
  {
    "text": "needed if if you have a lighter-weight framework so it kept that flexibility",
    "start": "703290",
    "end": "709889"
  },
  {
    "text": "you like react has and then one of my favorite things that you inherited is",
    "start": "709889",
    "end": "715759"
  },
  {
    "text": "from jQuery so why is jQuery the number",
    "start": "715759",
    "end": "720839"
  },
  {
    "text": "one most popular library of all time by far it's still used by a large",
    "start": "720839",
    "end": "726779"
  },
  {
    "text": "percentage of websites if you see it's cached all over the place it's because",
    "start": "726779",
    "end": "733170"
  },
  {
    "text": "it made hard things simple it's not because it was crazy computer science",
    "start": "733170",
    "end": "738930"
  },
  {
    "text": "Eeyore did this wild thing it just made things simple and if you look at the naming conventions of jQuery it was",
    "start": "738930",
    "end": "746610"
  },
  {
    "text": "exactly what you think it might be if you couldn't remember because we learned so many different libraries and tools we",
    "start": "746610",
    "end": "752189"
  },
  {
    "text": "can't remember the entire API of everything but with jQuery if you tried",
    "start": "752189",
    "end": "757620"
  },
  {
    "text": "to think like oh how do I show this particular thing on a page it would be thing dot show if you wanted to hide it",
    "start": "757620",
    "end": "764430"
  },
  {
    "text": "it was thing dot hide it was extremely easy to use and you know for Ajax calls",
    "start": "764430",
    "end": "771480"
  },
  {
    "text": "and Dom traversal it became the most popular library because it was way",
    "start": "771480",
    "end": "776579"
  },
  {
    "text": "easier than the other options available so when you look at view you'll notice",
    "start": "776579",
    "end": "782160"
  },
  {
    "text": "that things are simply named and they put a lot of time and energy into how",
    "start": "782160",
    "end": "788459"
  },
  {
    "text": "they name things and how humans would respond and think about the naming of that and it's really interesting maybe",
    "start": "788459",
    "end": "795630"
  },
  {
    "text": "after this you can listen to the views on view podcast some of the core team members are on there and they talked",
    "start": "795630",
    "end": "800819"
  },
  {
    "text": "about specifically why they named things the way they did and",
    "start": "800819",
    "end": "805830"
  },
  {
    "text": "you so when I first saw you my reaction",
    "start": "805830",
    "end": "810900"
  },
  {
    "text": "was kind of what you know it's this combination of all these different frameworks so my friend told me about it",
    "start": "810900",
    "end": "817170"
  },
  {
    "text": "and I looked at it and I was like no this is weird you know I'm gonna stick with react at the time so I ended up",
    "start": "817170",
    "end": "824420"
  },
  {
    "text": "picking it up again maybe he's like eight months later I started to really",
    "start": "824420",
    "end": "829440"
  },
  {
    "text": "use it and then I thought okay so I think because I hadn't enjoyed my time",
    "start": "829440",
    "end": "835170"
  },
  {
    "text": "using angular 1 so I saw directives and immediately I was kind of against using",
    "start": "835170",
    "end": "840390"
  },
  {
    "text": "it but then I realized that view was very kind of nicely designed easy to use",
    "start": "840390",
    "end": "847950"
  },
  {
    "text": "and I was also running so I've been running a group that teaches people had a code for about four and a half years",
    "start": "847950",
    "end": "854430"
  },
  {
    "text": "and teaching certain concepts especially when I was teaching Redux and some other concepts it was extremely hard to",
    "start": "854430",
    "end": "860250"
  },
  {
    "text": "explain and when I explained view to people it's much easier for them to grasp because a lot of them come from an",
    "start": "860250",
    "end": "865830"
  },
  {
    "text": "HTML background and they can use web technologies that they're used to so in",
    "start": "865830",
    "end": "874290"
  },
  {
    "start": "873000",
    "end": "873000"
  },
  {
    "text": "views design I'm going to talk a little bit about the design and also about the",
    "start": "874290",
    "end": "882410"
  },
  {
    "text": "design of the ecosystem so views users",
    "start": "882410",
    "end": "887520"
  },
  {
    "text": "are very diverse and if you look at who view was designed for it didn't come out",
    "start": "887520",
    "end": "893640"
  },
  {
    "text": "of a company of course so it's really come out of the needs of the different",
    "start": "893640",
    "end": "898680"
  },
  {
    "text": "people using it and what they are using it for not just what a specific company used it for and then it was kind of open",
    "start": "898680",
    "end": "905430"
  },
  {
    "text": "sourced as an afterthought or as some kind of marketing technique so there are",
    "start": "905430",
    "end": "913320"
  },
  {
    "text": "a lot of beginners who get into view because it's very accessible you can just import the CDN and then",
    "start": "913320",
    "end": "920400"
  },
  {
    "text": "start using it there's also a large number of users now which is interesting",
    "start": "920400",
    "end": "926130"
  },
  {
    "text": "they're adding interactivity to legacy applications so there are there's tons of jQuery and you know playing",
    "start": "926130",
    "end": "933120"
  },
  {
    "text": "JavaScript all over the web so if you want to update that what do you do you",
    "start": "933120",
    "end": "938880"
  },
  {
    "text": "know even if you react which is extremely lightweight you have the default syntax JSX",
    "start": "938880",
    "end": "945960"
  },
  {
    "text": "and then you need babble and you need all these other things which is much heavier you can just import and just use",
    "start": "945960",
    "end": "951660"
  },
  {
    "text": "in your HTML and start transitioning",
    "start": "951660",
    "end": "956540"
  },
  {
    "text": "one-off projects rapid prototyping it's very good for that medium scale projects",
    "start": "957110",
    "end": "963360"
  },
  {
    "text": "and then large scale projects and with view 3s update I think it really focused",
    "start": "963360",
    "end": "969120"
  },
  {
    "text": "on how can they help large scale users better organize their code so I think it",
    "start": "969120",
    "end": "976290"
  },
  {
    "text": "was really they're kind of solidifying themselves as something not just for beginners and lightweight applications",
    "start": "976290",
    "end": "982650"
  },
  {
    "text": "but also for enterprise applications so since view was designed for the",
    "start": "982650",
    "end": "987750"
  },
  {
    "text": "community that uses it I think it's important to see the demographics of people who code professionally so when",
    "start": "987750",
    "end": "995430"
  },
  {
    "start": "992000",
    "end": "992000"
  },
  {
    "text": "you look like the Stack Overflow survey from 2019 there were over eighty thousand respondents it's by far the",
    "start": "995430",
    "end": "1001610"
  },
  {
    "text": "largest developer survey and you can notice that every year and all these surveys show that developers and",
    "start": "1001610",
    "end": "1008620"
  },
  {
    "text": "especially professional coders skew heavily young and heavily inexperienced",
    "start": "1008620",
    "end": "1014860"
  },
  {
    "text": "so if you're from a company if you're doing hiring and you get to choose a",
    "start": "1014860",
    "end": "1020150"
  },
  {
    "text": "tech tech stack then it's really important to think who am I going to be hiring how easy is it going to be to",
    "start": "1020150",
    "end": "1026630"
  },
  {
    "text": "onboard this person with only one or two years of experience you know what technologies am I going to have to teach",
    "start": "1026630",
    "end": "1032750"
  },
  {
    "text": "them am I going to have to teach them not just a library but you know 50 other",
    "start": "1032750",
    "end": "1037850"
  },
  {
    "text": "tools that go along with that in an ecosystem so it's important to think about the approach ability and when you",
    "start": "1037850",
    "end": "1045079"
  },
  {
    "text": "look at view like I said before you can just import it via a CDN and start using it so if you see you just refer you just",
    "start": "1045079",
    "end": "1055640"
  },
  {
    "text": "have a plain Dom element you give it some kind of marker like an ID and then",
    "start": "1055640",
    "end": "1063080"
  },
  {
    "text": "you reference that ID in a view instance pass it an options object and then you",
    "start": "1063080",
    "end": "1070040"
  },
  {
    "text": "can display the data inside of the double curly braces",
    "start": "1070040",
    "end": "1075299"
  },
  {
    "text": "anything inside of there will be parsed as JavaScript and you can just start using view J s and linking your state to",
    "start": "1075299",
    "end": "1083260"
  },
  {
    "text": "your Dom so view also has an excellent",
    "start": "1083260",
    "end": "1088960"
  },
  {
    "start": "1085000",
    "end": "1085000"
  },
  {
    "text": "CLI if you used react in 2015 then maybe",
    "start": "1088960",
    "end": "1095799"
  },
  {
    "text": "you know of the headache that it was I remember learning web pack and Babel and",
    "start": "1095799",
    "end": "1101169"
  },
  {
    "text": "setup and all these different things just to build an application and there was that mean that went around that you",
    "start": "1101169",
    "end": "1108190"
  },
  {
    "text": "know this person writing like complex algorithms on a greased board or a chalk",
    "start": "1108190",
    "end": "1113529"
  },
  {
    "text": "board and it was just to make a HelloWorld application so it was so difficult to set up but fortunately with",
    "start": "1113529",
    "end": "1119799"
  },
  {
    "text": "view all you have to do is install the CLI and then there's two things you can do from there so you can run view UI",
    "start": "1119799",
    "end": "1128250"
  },
  {
    "text": "which will actually bring up a GUI our graphical user interface",
    "start": "1128250",
    "end": "1134230"
  },
  {
    "text": "for you to bootstrap your projects so you can add a new project and then it",
    "start": "1134230",
    "end": "1140980"
  },
  {
    "text": "takes you through a wizard so you can you know choose all the options like the naming what packages you want to install",
    "start": "1140980",
    "end": "1148539"
  },
  {
    "text": "what features do are you going to add testing and state management and routing and all that other stuff and it'll install it for you and you can open this",
    "start": "1148539",
    "end": "1155919"
  },
  {
    "text": "up at any time when you're building your application just click one button you don't even have to look through npm you",
    "start": "1155919",
    "end": "1161799"
  },
  {
    "text": "can just add a package through here and then there's also the command-line",
    "start": "1161799",
    "end": "1168610"
  },
  {
    "text": "interface with view create which takes you through basically the same wizard so",
    "start": "1168610",
    "end": "1174460"
  },
  {
    "text": "you can add all of your different features and then it will bootstrap your whole application the great thing is",
    "start": "1174460",
    "end": "1180549"
  },
  {
    "text": "that it just works out of the box more like angular and ember",
    "start": "1180549",
    "end": "1186450"
  },
  {
    "start": "1187000",
    "end": "1187000"
  },
  {
    "text": "and then oh yeah and so when you start from the",
    "start": "1188550",
    "end": "1198320"
  },
  {
    "text": "CLI it's going to set up similar to react in other frameworks it sets up",
    "start": "1198320",
    "end": "1204790"
  },
  {
    "text": "basically a bootstrapped application where you have these components and inside your components it",
    "start": "1204790",
    "end": "1212690"
  },
  {
    "text": "uses regular HTML markup to differentiate the parts of your component so it has yeah so it has a",
    "start": "1212690",
    "end": "1224720"
  },
  {
    "text": "style tag where you can put your CSS or sass or whatever you want in there and",
    "start": "1224720",
    "end": "1230950"
  },
  {
    "text": "then it has a script tag where you put your JavaScript and then I think the",
    "start": "1230950",
    "end": "1236120"
  },
  {
    "text": "most interesting part is the template tag so html5 actually released this template tag because it wanted people to",
    "start": "1236120",
    "end": "1243440"
  },
  {
    "text": "start composing their HTML files together and not have these 5,000 line",
    "start": "1243440",
    "end": "1248900"
  },
  {
    "text": "long HTML files anymore so I don't think this was heavily used before view j/s I",
    "start": "1248900",
    "end": "1256640"
  },
  {
    "text": "remember looking at it like 5 or 6 years ago thinking you know what can we do with this it would be great there was a",
    "start": "1256640",
    "end": "1262550"
  },
  {
    "text": "framework that used this and so what's nice about that is it just uses the same",
    "start": "1262550",
    "end": "1268070"
  },
  {
    "text": "web standards that already exists and puts them inside view also template tags",
    "start": "1268070",
    "end": "1273980"
  },
  {
    "text": "don't render to the Dom as another element they're just there as a wrapper",
    "start": "1273980",
    "end": "1279610"
  },
  {
    "text": "yeah and then just like react and other any other framework really you can",
    "start": "1281930",
    "end": "1288380"
  },
  {
    "text": "import components into your other components and then compose them and",
    "start": "1288380",
    "end": "1294860"
  },
  {
    "text": "render them together make a tree of components and then like I said before",
    "start": "1294860",
    "end": "1302630"
  },
  {
    "start": "1302000",
    "end": "1302000"
  },
  {
    "text": "you uses tool a data binding I think it is a very intuitive system so you have a",
    "start": "1302630",
    "end": "1311360"
  },
  {
    "text": "data object in your JavaScript and then you want to bind it to your HTML you use",
    "start": "1311360",
    "end": "1317750"
  },
  {
    "text": "a directive v-model and then your DOM stays in sync with your JavaScript and",
    "start": "1317750",
    "end": "1325130"
  },
  {
    "text": "then you can do whatever you want with that value",
    "start": "1325130",
    "end": "1329290"
  },
  {
    "text": "yeah and then if you want to display it in the Dom use the double mustache syntax and you can display that value or",
    "start": "1333390",
    "end": "1340710"
  },
  {
    "text": "use it in any of your methods another huge part of you is that it focuses on",
    "start": "1340710",
    "end": "1348450"
  },
  {
    "text": "reactivity so if you look at regular JavaScript it's not reactive and you",
    "start": "1348450",
    "end": "1354809"
  },
  {
    "text": "have to do a lot of work to make it reactive for example if you want to find",
    "start": "1354809",
    "end": "1360540"
  },
  {
    "text": "the total of an element so here I'm adding cat toys and cat treats equals 20",
    "start": "1360540",
    "end": "1367710"
  },
  {
    "text": "for the first time but what if I add two more cat toys so now the total should be",
    "start": "1367710",
    "end": "1376080"
  },
  {
    "text": "26 but since javascript is not reactive by default the total that if you print out",
    "start": "1376080",
    "end": "1382169"
  },
  {
    "text": "the total variable again it's still 24 so it doesn't update",
    "start": "1382169",
    "end": "1388100"
  },
  {
    "text": "fortunately view handles this under the hood so it gives you reactivity",
    "start": "1388100",
    "end": "1397860"
  },
  {
    "text": "out-of-the-box so for example if you look in the upper right hand corner you",
    "start": "1397860",
    "end": "1403559"
  },
  {
    "text": "can see how this prints out and by the way all these slides",
    "start": "1403559",
    "end": "1412760"
  },
  {
    "text": "I guess I didn't put a link there but I'll put a link there after all these slides I tweeted them out and they have",
    "start": "1414680",
    "end": "1420860"
  },
  {
    "text": "jsfiddle links at the bottom so you can go and play around with the code but",
    "start": "1420860",
    "end": "1428110"
  },
  {
    "text": "basically if you click on one of these two buttons it will add one to the",
    "start": "1428110",
    "end": "1434360"
  },
  {
    "text": "number in the cart and then it will update that number because if you see",
    "start": "1434360",
    "end": "1442430"
  },
  {
    "text": "the computed object so anything inside the computed object any variable that's inside one of those methods view is",
    "start": "1442430",
    "end": "1448730"
  },
  {
    "text": "automatically watching if that variable updates and then it's going to rerun",
    "start": "1448730",
    "end": "1453980"
  },
  {
    "text": "that method for you and recalculate the total for you another great thing about",
    "start": "1453980",
    "end": "1463040"
  },
  {
    "text": "view is that the web heavily depends on animations now so if you look at any",
    "start": "1463040",
    "end": "1471440"
  },
  {
    "text": "modern website really things don't just appear and disappear just like they don't in real life so view actually",
    "start": "1471440",
    "end": "1480080"
  },
  {
    "text": "handles animations or gives you a way to handle animations very easily you can",
    "start": "1480080",
    "end": "1485360"
  },
  {
    "text": "wrap anything you want to animate inside a traditional transition component give it the type of animation that you want",
    "start": "1485360",
    "end": "1491780"
  },
  {
    "text": "and this includes routing sub routing you know things that appear and disappear from the page like modal's and",
    "start": "1491780",
    "end": "1498620"
  },
  {
    "text": "you basically say like oh you want to fade it in and out it gives you 6 CSS",
    "start": "1498620",
    "end": "1504620"
  },
  {
    "text": "classes to handle different parts of the transition so you can customize it as much as you want and then just wrap it",
    "start": "1504620",
    "end": "1512720"
  },
  {
    "text": "in the tag and it gives you the transition functionality by default and",
    "start": "1512720",
    "end": "1518150"
  },
  {
    "text": "there are many different built-in animations and you can also use custom ones if you want another part of use",
    "start": "1518150",
    "end": "1526180"
  },
  {
    "text": "composability is how it uses slots so",
    "start": "1526180",
    "end": "1533080"
  },
  {
    "text": "slots are a way that's been developed to compose templates together so it's not",
    "start": "1533080",
    "end": "1540830"
  },
  {
    "text": "just importing you know it's easy to import JavaScript functions into one another but what if you want to reuse",
    "start": "1540830",
    "end": "1546860"
  },
  {
    "text": "this a templating logic and nest different parts of the template in different areas",
    "start": "1546860",
    "end": "1553660"
  },
  {
    "text": "so with slots as you can see the example I can pass in or I have the template on",
    "start": "1553660",
    "end": "1560240"
  },
  {
    "text": "top in red and this is for a page and then I have a header section so I can",
    "start": "1560240",
    "end": "1566840"
  },
  {
    "text": "put something default in there but you can see in blue is where I use that",
    "start": "1566840",
    "end": "1572240"
  },
  {
    "text": "template and then I can pass in using",
    "start": "1572240",
    "end": "1577400"
  },
  {
    "text": "the V slot directive I can pass in some markup to put inside the header slot or",
    "start": "1577400",
    "end": "1584050"
  },
  {
    "text": "inside the footer slot or if I don't mark anything as being inside a specific slot it's just going to go into the",
    "start": "1584050",
    "end": "1590960"
  },
  {
    "text": "default unlabeled slot and I really like the term slot because naturally when you think of something named slot you think",
    "start": "1590960",
    "end": "1597440"
  },
  {
    "text": "oh they have to put something inside of that so that's another example of use awesome naming conventions",
    "start": "1597440",
    "end": "1605710"
  },
  {
    "text": "and so this is actually my favorite part about view I think is that it handles",
    "start": "1609410",
    "end": "1617420"
  },
  {
    "start": "1614000",
    "end": "1614000"
  },
  {
    "text": "complex forms very nicely so any framework can really you know handle",
    "start": "1617420",
    "end": "1623360"
  },
  {
    "text": "some user input and selection checkboxes that kind of stuff but for forms that",
    "start": "1623360",
    "end": "1628490"
  },
  {
    "text": "have variable number of inputs like this",
    "start": "1628490",
    "end": "1633560"
  },
  {
    "text": "one that I built so basically users can create as many sections as they want and then as many",
    "start": "1633560",
    "end": "1641920"
  },
  {
    "text": "resources or projects as they want inside of every section so basically",
    "start": "1641920",
    "end": "1647630"
  },
  {
    "text": "it's that the way the data is displayed it's an array of objects nested inside",
    "start": "1647630",
    "end": "1653840"
  },
  {
    "text": "of another array of objects and how do you handle that in terms of mapping your form state to what the user is inputting",
    "start": "1653840",
    "end": "1663980"
  },
  {
    "text": "if you've used react before I remember the first time I tried to handle something like this and unbelievably I",
    "start": "1663980",
    "end": "1671360"
  },
  {
    "text": "was at a consulting agency and we handled it doing something like dollar sign dot something dot something dot",
    "start": "1671360",
    "end": "1676610"
  },
  {
    "text": "something dot something and it was extremely inefficient and so then we started using Redux forms which was",
    "start": "1676610",
    "end": "1682400"
  },
  {
    "text": "awesome and worked really well but it was complicated and view handles this by",
    "start": "1682400",
    "end": "1688460"
  },
  {
    "text": "default so what view does is you can use a",
    "start": "1688460",
    "end": "1694779"
  },
  {
    "text": "simple v4 directive to loop over the form inputs the number of form inputs",
    "start": "1694779",
    "end": "1702220"
  },
  {
    "text": "that you have in your Dom the user can add one remove one it will be added or",
    "start": "1702220",
    "end": "1707409"
  },
  {
    "text": "removed from the array in state then it's looped over it in the Dom and then",
    "start": "1707409",
    "end": "1712889"
  },
  {
    "text": "you can v-model based off of either the index in an array or the key in an",
    "start": "1712889",
    "end": "1720340"
  },
  {
    "text": "object and it can just loop over those and it automatically Maps it to that",
    "start": "1720340",
    "end": "1725559"
  },
  {
    "text": "index or that dom's and it makes making crud operations on a variable number of",
    "start": "1725559",
    "end": "1731710"
  },
  {
    "text": "form inputs very very intuitive to use so the exciting part let's talk about",
    "start": "1731710",
    "end": "1739110"
  },
  {
    "text": "view three and to talk about view three",
    "start": "1739110",
    "end": "1744880"
  },
  {
    "text": "and what's new the major new change in v3 was a new API that came out called",
    "start": "1744880",
    "end": "1751480"
  },
  {
    "text": "the composition API so to understand why it was needed let's look at the API from",
    "start": "1751480",
    "end": "1759610"
  },
  {
    "start": "1757000",
    "end": "1757000"
  },
  {
    "text": "you know v1 v2 so the options API and",
    "start": "1759610",
    "end": "1765130"
  },
  {
    "text": "this is just a screenshot of a component that I had it was basically all these",
    "start": "1765130",
    "end": "1771460"
  },
  {
    "text": "different sections you put your data all your data was together all your methods",
    "start": "1771460",
    "end": "1776740"
  },
  {
    "text": "were together and everything was was organized by type all data a lifecycle",
    "start": "1776740",
    "end": "1783789"
  },
  {
    "text": "stuff all props all methods together all of your reactive or computed functions",
    "start": "1783789",
    "end": "1792070"
  },
  {
    "text": "were all together the problem with this was even though it looks really nice",
    "start": "1792070",
    "end": "1798490"
  },
  {
    "text": "when you have small components it's so intuitive it's really nice to get started and that's you know one of the",
    "start": "1798490",
    "end": "1804190"
  },
  {
    "text": "features that brings a lot of people into view but then when you start to scale your components it's actually it",
    "start": "1804190",
    "end": "1812260"
  },
  {
    "text": "actually ends up looking like this so you have your search logic and data and",
    "start": "1812260",
    "end": "1818320"
  },
  {
    "text": "everything all over the place in the file and then you have your cart stuff all over the place and they're kind of",
    "start": "1818320",
    "end": "1823870"
  },
  {
    "text": "mixed together you some search methods here and some cart methods and then you have some cart data",
    "start": "1823870",
    "end": "1830350"
  },
  {
    "text": "and search data together and it's hard to navigate so what people you know have",
    "start": "1830350",
    "end": "1835930"
  },
  {
    "text": "been doing for the last so many years in the single page application frameworks is they'll make a new component so you",
    "start": "1835930",
    "end": "1842740"
  },
  {
    "text": "make a new component you break up the Dom and also some of the logic you can",
    "start": "1842740",
    "end": "1847810"
  },
  {
    "text": "put into the other component the problem is it doesn't always work very well sometimes you want to keep that logic",
    "start": "1847810",
    "end": "1854230"
  },
  {
    "text": "together and you also shouldn't need the extra overhead of having a whole other",
    "start": "1854230",
    "end": "1860890"
  },
  {
    "text": "component just because you want to arrange your logic differently there",
    "start": "1860890",
    "end": "1866140"
  },
  {
    "text": "have been some imperfect solutions in view in the past and this new functional",
    "start": "1866140",
    "end": "1874240"
  },
  {
    "text": "composition API is kind of where everything came to so the composition",
    "start": "1874240",
    "end": "1882190"
  },
  {
    "start": "1875000",
    "end": "1875000"
  },
  {
    "text": "API is like I said a functional API that's a new way to organize your code",
    "start": "1882190",
    "end": "1888610"
  },
  {
    "text": "by feature it organizes all your logic for example the data for your store or",
    "start": "1888610",
    "end": "1895690"
  },
  {
    "text": "the data for your cart will go with the logic for your cart and the methods and the computed and the Watchers and the",
    "start": "1895690",
    "end": "1902620"
  },
  {
    "text": "lifecycle hooks for that one feature will all be organized together this it's",
    "start": "1902620",
    "end": "1908920"
  },
  {
    "text": "intuitive because it's also how we organize our web applications now if you",
    "start": "1908920",
    "end": "1914080"
  },
  {
    "text": "you know have a folder of components in your funand application it's it's a",
    "start": "1914080",
    "end": "1920650"
  },
  {
    "text": "folder for that feature or that part of the page it's not all your data in one",
    "start": "1920650",
    "end": "1927070"
  },
  {
    "text": "place and all your view in one place it doesn't work like that",
    "start": "1927070",
    "end": "1932190"
  },
  {
    "text": "so you basically create a setup function inside the same the same options object",
    "start": "1932190",
    "end": "1938770"
  },
  {
    "text": "that you normally use inside components you have a new method the set up method and you can access low-level View api's",
    "start": "1938770",
    "end": "1950940"
  },
  {
    "text": "from that object or you can import them from view and use them inside of that",
    "start": "1950940",
    "end": "1956170"
  },
  {
    "text": "object so here I'm just importing riff API from",
    "start": "1956170",
    "end": "1962010"
  },
  {
    "text": "view but basically what it does is turn this 0 in the blue there into a reactive",
    "start": "1962010",
    "end": "1971750"
  },
  {
    "text": "object which is saved in the numb items variable and then I have the add item",
    "start": "1971750",
    "end": "1977840"
  },
  {
    "text": "method which acts on the num items variable and I return the function and",
    "start": "1977840",
    "end": "1984300"
  },
  {
    "text": "the variable from the setup function anything I returned from the setup function can be used normally in my",
    "start": "1984300",
    "end": "1990480"
  },
  {
    "text": "template and in the rest of my component",
    "start": "1990480",
    "end": "1994220"
  },
  {
    "text": "so this allows me to organize my code by",
    "start": "1996380",
    "end": "2001430"
  },
  {
    "text": "feature because I can put my data anywhere I want I don't have to just have it in one data object I can put my",
    "start": "2001430",
    "end": "2007760"
  },
  {
    "text": "methods anywhere I want not just some one methods object etc",
    "start": "2007760",
    "end": "2012850"
  },
  {
    "start": "2017000",
    "end": "2017000"
  },
  {
    "text": "so you can look at those examples on jsfiddle if you want so of course you don't want to keep all",
    "start": "2017080",
    "end": "2023900"
  },
  {
    "text": "of this inside one component you that's",
    "start": "2023900",
    "end": "2030170"
  },
  {
    "text": "why there's basically what they call a composition functions so you can take",
    "start": "2030170",
    "end": "2035840"
  },
  {
    "text": "all of these low-level api's and import them into any JavaScript file from view",
    "start": "2035840",
    "end": "2041900"
  },
  {
    "text": "make a function like here I have used cart function and use search function if",
    "start": "2041900",
    "end": "2048320"
  },
  {
    "text": "if you come from react then you might recognize this syntax with hooks it's",
    "start": "2048320",
    "end": "2053408"
  },
  {
    "text": "kind of similar how it works here so basically you have the used cart and use",
    "start": "2053409",
    "end": "2058490"
  },
  {
    "text": "search functions and you can use them inside your setup function you pass any",
    "start": "2058490",
    "end": "2064638"
  },
  {
    "text": "kind of reactive elements into them or you can just use those reactive elements",
    "start": "2064639",
    "end": "2071090"
  },
  {
    "text": "from the file where the function is created and then you return the bindings",
    "start": "2071090",
    "end": "2078858"
  },
  {
    "text": "from those functions and they are explicitly named so you know where",
    "start": "2078859",
    "end": "2085040"
  },
  {
    "text": "something is coming from in your component there's no confusion like there used to be with some former",
    "start": "2085040",
    "end": "2091250"
  },
  {
    "text": "solutions like mix-ins inside of you and there's no namespace conflicts unless",
    "start": "2091250",
    "end": "2097760"
  },
  {
    "text": "you create it yourself so in review of",
    "start": "2097760",
    "end": "2103720"
  },
  {
    "start": "2101000",
    "end": "2101000"
  },
  {
    "text": "what composition is there composable functions that you use inside of a setup",
    "start": "2103720",
    "end": "2110420"
  },
  {
    "text": "method it gives you logical organization",
    "start": "2110420",
    "end": "2116980"
  },
  {
    "text": "by feature there is much better code reuse so if you've used view in the past",
    "start": "2116980",
    "end": "2124040"
  },
  {
    "text": "you probably know you're writing the same thing in multiple components at least when you're creating production",
    "start": "2124040",
    "end": "2129109"
  },
  {
    "text": "level applications so now you can abstract away the logic for the feature and just import it it's easier to",
    "start": "2129109",
    "end": "2137000"
  },
  {
    "text": "maintain if you're on a team it's easier to onboard people and typescript users",
    "start": "2137000",
    "end": "2143090"
  },
  {
    "text": "can rejoice because now everything has been built from the ground up in",
    "start": "2143090",
    "end": "2148160"
  },
  {
    "text": "typescript I know people were kind of frustrated with that so there was kind of a quasi",
    "start": "2148160",
    "end": "2155350"
  },
  {
    "text": "working class based syntax that people were using which has which is not which",
    "start": "2155350",
    "end": "2164870"
  },
  {
    "text": "is not a part of view 3.0 because this compositional functional API works very",
    "start": "2164870",
    "end": "2171980"
  },
  {
    "text": "well with typescript it's just functions and variables and it works and even if",
    "start": "2171980",
    "end": "2177740"
  },
  {
    "text": "you're not using typescript you still get the intellisense the auto completion all of those features of typescript",
    "start": "2177740",
    "end": "2183590"
  },
  {
    "text": "because view is now built from the ground up in typescript which is awesome and it works really well with tooling",
    "start": "2183590",
    "end": "2192980"
  },
  {
    "text": "and then there's no extra compute or component instances which is bad for",
    "start": "2192980",
    "end": "2200780"
  },
  {
    "text": "performance and it's often only so unlike this reddit thread that appeared",
    "start": "2200780",
    "end": "2209150"
  },
  {
    "text": "a few months ago or a few weeks ago that said oh no everything's deprecated you",
    "start": "2209150",
    "end": "2214340"
  },
  {
    "text": "know it's kind of like a game of telephone and it's often only the the options API is not going away this is",
    "start": "2214340",
    "end": "2221240"
  },
  {
    "text": "just a new API and you can choose if you want to use this new API if you want to",
    "start": "2221240",
    "end": "2226280"
  },
  {
    "text": "use the old API or if you want to use basically both api's some of the cons to",
    "start": "2226280",
    "end": "2233660"
  },
  {
    "start": "2231000",
    "end": "2231000"
  },
  {
    "text": "the new api complexity it's definitely an more advanced syntax so beginners",
    "start": "2233660",
    "end": "2240470"
  },
  {
    "text": "won't probably be using it and there's lots of new API methods this is just",
    "start": "2240470",
    "end": "2246080"
  },
  {
    "text": "some of them so part of the update and view was to give you access to all of",
    "start": "2246080",
    "end": "2251690"
  },
  {
    "text": "these API methods which it does but then you have to learn all of these new API",
    "start": "2251690",
    "end": "2257330"
  },
  {
    "text": "methods and with all of these additions",
    "start": "2257330",
    "end": "2262370"
  },
  {
    "text": "with this new API you know it basically adds more code more I don't want to call",
    "start": "2262370",
    "end": "2271010"
  },
  {
    "text": "it bloat but it makes it a bigger package for view so what view did",
    "start": "2271010",
    "end": "2276520"
  },
  {
    "text": "is it says we're gonna remove any unused API methods for option for the options",
    "start": "2276520",
    "end": "2282880"
  },
  {
    "text": "API or composition API so if you aren't using a feature in view basically your",
    "start": "2282880",
    "end": "2290170"
  },
  {
    "text": "bundle size is going to be smaller because it's not going to be included in your final bundle so the final bundle as",
    "start": "2290170",
    "end": "2297550"
  },
  {
    "text": "promised last year will be about 10 kilobytes gzipped plus any additional",
    "start": "2297550",
    "end": "2303250"
  },
  {
    "text": "features and libraries that you use which is very awesome and then in the",
    "start": "2303250",
    "end": "2312760"
  },
  {
    "text": "view 3.0 update they said you have access to all of the low-level api x'",
    "start": "2312760",
    "end": "2319630"
  },
  {
    "text": "you have custom rendering if you have used react you know that react native",
    "start": "2319630",
    "end": "2325090"
  },
  {
    "text": "can render to any platform and now you have access to that inside of UJS you",
    "start": "2325090",
    "end": "2331420"
  },
  {
    "text": "can access the rendering functions so if you use the components with the template",
    "start": "2331420",
    "end": "2338740"
  },
  {
    "text": "by default you can just use it I guess you can just use the DOM and everything",
    "start": "2338740",
    "end": "2345580"
  },
  {
    "text": "by default or you can drop down to the lower level and because it gets compiled into a render function for the virtual",
    "start": "2345580",
    "end": "2352630"
  },
  {
    "text": "DOM and you can access that now and you can also access the reactivity system",
    "start": "2352630",
    "end": "2359560"
  },
  {
    "text": "and manually say hey I want this element or this piece of data to be reactive and",
    "start": "2359560",
    "end": "2365560"
  },
  {
    "text": "you can set it as reactive yourself instead of just letting view kind of handle all the magic under the hood for",
    "start": "2365560",
    "end": "2372340"
  },
  {
    "text": "you and then there's also dependency injection there's a new API for that in",
    "start": "2372340",
    "end": "2381220"
  },
  {
    "text": "view 3 and much more so yeah those are",
    "start": "2381220",
    "end": "2387790"
  },
  {
    "text": "examples of the reactivity that you can just import from view into your",
    "start": "2387790",
    "end": "2393100"
  },
  {
    "text": "functions or components speed is another big upgrade in view 3 which is not",
    "start": "2393100",
    "end": "2398740"
  },
  {
    "start": "2395000",
    "end": "2395000"
  },
  {
    "text": "surprising because every time a framework comes out with a new braking version it's always faster they always",
    "start": "2398740",
    "end": "2405340"
  },
  {
    "text": "say it's so there's actually a new change detection system built into view",
    "start": "2405340",
    "end": "2411589"
  },
  {
    "text": "so with Dom updates basically with the virtual Dom it looks through the whole",
    "start": "2411589",
    "end": "2419240"
  },
  {
    "text": "virtual Dom in the components that changed and figures out what changed well now it's modified it to update or",
    "start": "2419240",
    "end": "2427730"
  },
  {
    "text": "to not look through as much of the component because it's smarter and it knows which of the part of the component",
    "start": "2427730",
    "end": "2433160"
  },
  {
    "text": "might have changed it was basically a whole virtual Dom rewrite more compiled",
    "start": "2433160",
    "end": "2440660"
  },
  {
    "text": "time optimizations it's about six times faster now these are the metrics that the view team and Evan you came out with",
    "start": "2440660",
    "end": "2448490"
  },
  {
    "text": "so it'll be interesting when view 3 is actually released when people test it",
    "start": "2448490",
    "end": "2453760"
  },
  {
    "text": "which parts are you know six times faster which parts are two times faster",
    "start": "2453760",
    "end": "2458869"
  },
  {
    "text": "etc and I'm not really the one to talk to about all the low level optimizations",
    "start": "2458869",
    "end": "2465170"
  },
  {
    "text": "but Evan you gave a great talk on all the optimizations that happened in v3",
    "start": "2465170",
    "end": "2471589"
  },
  {
    "text": "and you can look at that there and then the ecosystem for view so if you look at",
    "start": "2471589",
    "end": "2482780"
  },
  {
    "start": "2480000",
    "end": "2480000"
  },
  {
    "text": "one of the design decisions of the view framework that I think was wonderful is that there are a lot of tools that are",
    "start": "2482780",
    "end": "2489980"
  },
  {
    "text": "managed by the core team so they're very well documented there's an official way",
    "start": "2489980",
    "end": "2495109"
  },
  {
    "text": "to use them and to include them in your application and they're included and configurable in the CLI because they're",
    "start": "2495109",
    "end": "2501980"
  },
  {
    "text": "maintained and they have standards arranged by the core team so one of them",
    "start": "2501980",
    "end": "2507020"
  },
  {
    "text": "is state management view X there's routing which is view router and then",
    "start": "2507020",
    "end": "2513830"
  },
  {
    "text": "dev tools view dev tools which is just amazing because it puts view ax dev",
    "start": "2513830",
    "end": "2521210"
  },
  {
    "text": "tools with traversing your component looking at component state with",
    "start": "2521210",
    "end": "2527380"
  },
  {
    "text": "application events just everything is together in one dev tools interface there's the view CLI test",
    "start": "2527380",
    "end": "2536410"
  },
  {
    "text": "which works very well with just and other testing frameworks",
    "start": "2536410",
    "end": "2541500"
  },
  {
    "text": "internationalization and then many other",
    "start": "2541500",
    "end": "2546509"
  },
  {
    "text": "reposes they have like a hundred and six repos under the court team some of them are examples and many of them are tools",
    "start": "2546509",
    "end": "2553839"
  },
  {
    "text": "like these so one big reason you know back in 2016 or 2017 2018 people were",
    "start": "2553839",
    "end": "2562329"
  },
  {
    "start": "2557000",
    "end": "2557000"
  },
  {
    "text": "saying oh don't use view for anything major because there's not enough",
    "start": "2562329",
    "end": "2567549"
  },
  {
    "text": "community support and you still see that in comparisons of like reactive you to",
    "start": "2567549",
    "end": "2572589"
  },
  {
    "text": "angular its says that oh there's not as much community support in VJ s and that",
    "start": "2572589",
    "end": "2580869"
  },
  {
    "text": "was true a few years ago most of the community support was in China which is by far views largest user base but now",
    "start": "2580869",
    "end": "2589450"
  },
  {
    "text": "that's no longer true and you see that we have or sorry view jeaious has comparable tools to all the other major",
    "start": "2589450",
    "end": "2597099"
  },
  {
    "text": "frameworks in server-side rendering very confusingly there's nuts next and nest",
    "start": "2597099",
    "end": "2604059"
  },
  {
    "text": "and the because people want to if you don't know what server-side rendering is",
    "start": "2604059",
    "end": "2610299"
  },
  {
    "text": "it's basically for optimization seo and",
    "start": "2610299",
    "end": "2615579"
  },
  {
    "text": "better user experience so there's a comparable tool next",
    "start": "2615579",
    "end": "2621250"
  },
  {
    "text": "there's grid some Gadsby and I think Scully I've never used it but I just",
    "start": "2621250",
    "end": "2626799"
  },
  {
    "text": "looked it up for angular which is for the stack which is a static site",
    "start": "2626799",
    "end": "2632319"
  },
  {
    "text": "generator if you use grid sum and gatsby i've used both and they're extremely similar a lot of these tools are almost",
    "start": "2632319",
    "end": "2638380"
  },
  {
    "text": "identical just ported from one framework to another accessibility I think it's",
    "start": "2638380",
    "end": "2643900"
  },
  {
    "text": "the best in view I haven't found another alternative to view tencel's because I",
    "start": "2643900",
    "end": "2651549"
  },
  {
    "text": "don't have all of these area and all of the other accessibility optimizations",
    "start": "2651549",
    "end": "2656920"
  },
  {
    "text": "memorized so I feel like I have to look them up anytime I need to use them but with the utensils I can just wrap a modal or whatever other component I want",
    "start": "2656920",
    "end": "2665289"
  },
  {
    "text": "inside of utensils and it gives me all these accessibility features by default",
    "start": "2665289",
    "end": "2672799"
  },
  {
    "text": "yeah and then there are so many UI component libraries you can't even count the UI component libraries that exist",
    "start": "2673310",
    "end": "2679230"
  },
  {
    "text": "for every different framework and then native mobile so very excitingly native",
    "start": "2679230",
    "end": "2686070"
  },
  {
    "text": "script view came out in 1.0 a year ago and it's I've used it it's basically",
    "start": "2686070",
    "end": "2693840"
  },
  {
    "text": "it's a it's a really good tool to make native feeling mobile apps basically it",
    "start": "2693840",
    "end": "2702600"
  },
  {
    "text": "works similarly to react native except native script has 100 100% on native",
    "start": "2702600",
    "end": "2709830"
  },
  {
    "text": "hardware API coverage by default which is the same if you use native script JavaScript or native script angular or",
    "start": "2709830",
    "end": "2715050"
  },
  {
    "text": "any of those and then there's also weeks which is used by Alibaba which is a huge",
    "start": "2715050",
    "end": "2721110"
  },
  {
    "text": "company in China but I haven't used it so I think I would be remiss if I didn't",
    "start": "2721110",
    "end": "2728550"
  },
  {
    "start": "2726000",
    "end": "2726000"
  },
  {
    "text": "quickly talk about the view documentation it's full of code samples it's very easy",
    "start": "2728550",
    "end": "2734730"
  },
  {
    "text": "to read it's made for humans not all documentation is it has advanced use",
    "start": "2734730",
    "end": "2741330"
  },
  {
    "text": "cases too there's an excellent cookbook with examples of how you should use what",
    "start": "2741330",
    "end": "2747860"
  },
  {
    "text": "explanations of how things work on a deeper level it's basically what every",
    "start": "2747860",
    "end": "2755400"
  },
  {
    "text": "piece of documentation kind of aspires to be in the view Docs so even if you're",
    "start": "2755400",
    "end": "2760410"
  },
  {
    "text": "not going to use view I think you should definitely check out the view documentation oh did I I went all the",
    "start": "2760410",
    "end": "2768750"
  },
  {
    "text": "way back ok so what's coming out in the future so view 3.0 is coming out in the",
    "start": "2768750",
    "end": "2776370"
  },
  {
    "text": "next few months they said the end of q1 I believe so we already have view alpha",
    "start": "2776370",
    "end": "2781530"
  },
  {
    "text": "so if you want to use in almost ready API you can go ahead and try it out you",
    "start": "2781530",
    "end": "2788370"
  },
  {
    "text": "can also try the a the composition API they made a library for you to use it in view 2.0 if you want to try it right now",
    "start": "2788370",
    "end": "2796250"
  },
  {
    "text": "of course all the core libraries are going to come out at the same time to match the new view 3.0 release",
    "start": "2796250",
    "end": "2802720"
  },
  {
    "text": "and the view niversary will be on February 3rd so if you follow everyone",
    "start": "2802720",
    "end": "2809080"
  },
  {
    "text": "on Twitter in the view space then it's a big to-do so if you want to learn more",
    "start": "2809080",
    "end": "2815410"
  },
  {
    "text": "about view you can check out my 3-hour tutorial where I get is just basically coding for three hours in view I'm",
    "start": "2815410",
    "end": "2822370"
  },
  {
    "text": "coming out with another one as soon as they release the official version of you 3 if you want to know more about the",
    "start": "2822370",
    "end": "2829030"
  },
  {
    "text": "design of the framework look I've been used talks on YouTube or as blog posts",
    "start": "2829030",
    "end": "2834360"
  },
  {
    "text": "Sara Dresner gives a lot of she's part of the VJ escort team she is probably",
    "start": "2834360",
    "end": "2840580"
  },
  {
    "text": "the best view teacher and talks a lot about animations and SVG's accessibility",
    "start": "2840580",
    "end": "2848400"
  },
  {
    "text": "there's if you want to see examples of how view Jas is used in the real world they have a great cookbook the 4 view",
    "start": "2848400",
    "end": "2857050"
  },
  {
    "text": "courses view school run by the core team and then there's also views official",
    "start": "2857050",
    "end": "2865690"
  },
  {
    "text": "framework comparison so it actually gives you a big document with comparing",
    "start": "2865690",
    "end": "2872380"
  },
  {
    "text": "all the different framework so if you want to see why view might be better or different than another framework you can",
    "start": "2872380",
    "end": "2878410"
  },
  {
    "text": "look at that and it especially compares react because those are the two that are kind of pitted against each other most",
    "start": "2878410",
    "end": "2885160"
  },
  {
    "text": "frequently and then there is an excellent view podcast called views on",
    "start": "2885160",
    "end": "2891970"
  },
  {
    "text": "view and they have so many episodes about the view community and tooling and",
    "start": "2891970",
    "end": "2896980"
  },
  {
    "text": "everything and they do a really good job on that podcast so yeah so thank you for",
    "start": "2896980",
    "end": "2903430"
  },
  {
    "text": "coming and we have about 10 minutes so if you want to ask any questions",
    "start": "2903430",
    "end": "2911820"
  },
  {
    "text": "yeah I use them and Visual Studio code",
    "start": "2916640",
    "end": "2922140"
  },
  {
    "text": "so it the support I'd say it's very good it's the same as any other JavaScript",
    "start": "2922140",
    "end": "2928830"
  },
  {
    "text": "framework you get syntax highlighting they have good view snippets there's",
    "start": "2928830",
    "end": "2937070"
  },
  {
    "text": "tooling and stuff I haven't used the developer tools there because I use the",
    "start": "2937070",
    "end": "2942270"
  },
  {
    "text": "view dev tools in the browser",
    "start": "2942270",
    "end": "2945410"
  },
  {
    "text": "all right so thank you for coming if you want to talk to me after I could talk all day about view and JavaScript and",
    "start": "2949490",
    "end": "2956180"
  },
  {
    "text": "such so yeah thanks for coming",
    "start": "2956180",
    "end": "2960250"
  }
]