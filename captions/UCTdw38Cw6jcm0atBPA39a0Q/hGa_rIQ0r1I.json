[
  {
    "text": "I guess we're probably going to get started uh as is always the case with the last session of the day it's far too",
    "start": "7759",
    "end": "14080"
  },
  {
    "text": "much fun networking and having chats out there and I hope you're all you've all been having fun to a large extent I have",
    "start": "14080",
    "end": "20519"
  },
  {
    "text": "uh I would argue that uh getting this talk ready was was less of the fun part",
    "start": "20519",
    "end": "26199"
  },
  {
    "text": "and I'll tell you why I've given this as a workshop a number of times and um has anybody ever been to that Workshop good",
    "start": "26199",
    "end": "32840"
  },
  {
    "text": "because you're going to get thoroughly bored no uh so the NDC crew said to me look",
    "start": "32840",
    "end": "38239"
  },
  {
    "text": "you submited this workshop and and we like it but we'd really love for you to give this as a talk instead and I",
    "start": "38239",
    "end": "43399"
  },
  {
    "text": "thought challenge accepted now the thing with with with the the thing is with speaking is you need to find words the",
    "start": "43399",
    "end": "50239"
  },
  {
    "text": "thing is with workshops is that I like to get people in a room and actually get their their hands on the code and really",
    "start": "50239",
    "end": "56520"
  },
  {
    "text": "dive into it and feel what they're doing and we're going to be going through some Concepts today uh that I really like you to be coding so you can actually see it",
    "start": "56520",
    "end": "63359"
  },
  {
    "text": "happening there's the magic of making it happen that you don't get when you're watching a talk so to the largest extent",
    "start": "63359",
    "end": "68400"
  },
  {
    "text": "possible I hope I've managed to bring the the life of what would be a workshop into this talk uh if not I",
    "start": "68400",
    "end": "75119"
  },
  {
    "text": "apologize an events uh so who is this clown standing in front of you at the moment if you",
    "start": "75119",
    "end": "81200"
  },
  {
    "text": "haven't met me before uh I've been even if you have met me before I've been coding since I was 12 uh I have been",
    "start": "81200",
    "end": "87320"
  },
  {
    "text": "breaking software since I was 15 uh my Mom and Dad both regularly used to break our Windows machine at home this is in",
    "start": "87320",
    "end": "94360"
  },
  {
    "text": "the days of Windows 3.1 and dos 2 something I don't even know what um so I actually wrote tools to stop them",
    "start": "94360",
    "end": "100960"
  },
  {
    "text": "breaking Windows uh I've been advocating for security and privacy since I was 18 and not long after that I started running",
    "start": "100960",
    "end": "106880"
  },
  {
    "text": "Tech events I managed to set my hair on fire at a tech Festival when I was 40 so things seemed to be going",
    "start": "106880",
    "end": "113159"
  },
  {
    "text": "downhill if you want to find out more about that you can tweet me or you can",
    "start": "113159",
    "end": "120119"
  },
  {
    "text": "what's that one called Blue you can Blue Sky me is Blue Sky a noun yet should be",
    "start": "121000",
    "end": "126439"
  },
  {
    "text": "you can Sky me at bendor uh also I work you I don't know",
    "start": "126439",
    "end": "134280"
  },
  {
    "text": "if you saw Phil's talk ear today here and I both work at Sona um Sona is basically a a company that helps you",
    "start": "134280",
    "end": "139640"
  },
  {
    "text": "write more clean more uh quality code we've got a number of tools like an ID plugin that's totally free and open",
    "start": "139640",
    "end": "145879"
  },
  {
    "text": "source that'll show you where you're writing really complex code and if you do that then the next developer who looks at your code is going to hate you",
    "start": "145879",
    "end": "151560"
  },
  {
    "text": "so don't make people hate you write clean code try out the Sona products uh they're great but this talk is nothing",
    "start": "151560",
    "end": "157120"
  },
  {
    "text": "about that so I'll move swiftly along um so what I want to do is I want to have a chat not with you I mean I do why you're",
    "start": "157120",
    "end": "165519"
  },
  {
    "text": "here let's have a chat it's all good if you got any questions or any point by the way just raise your hand and Shout at me uh but I want to have a chat with",
    "start": "165519",
    "end": "172280"
  },
  {
    "text": "people online I want to send a message to Alice and for Alice to be able to reply to me and I want Alice to be able",
    "start": "172280",
    "end": "177840"
  },
  {
    "text": "to reply to me in her own window so I thought let's write a chat app fairly simple fairly",
    "start": "177840",
    "end": "183400"
  },
  {
    "text": "straightforward uh the problem is that in most situations and somebody was saying to me do you remember icq do you",
    "start": "183400",
    "end": "189239"
  },
  {
    "text": "remember messenger all those things most of these aren't very secure whoever controls a database of the chat can read",
    "start": "189239",
    "end": "196640"
  },
  {
    "text": "the database of the chat so this is a uh not just an example this an actual screenshot of that",
    "start": "196640",
    "end": "202480"
  },
  {
    "text": "conversation uh at the start of what would be the workshop and you can see there Ben sent Palace a message you can",
    "start": "202480",
    "end": "207799"
  },
  {
    "text": "see what the messages are so whoever has access to the database and this isn't just going to be the database administrator or somebody was talking",
    "start": "207799",
    "end": "214599"
  },
  {
    "text": "earlier about um access control and how people get trusted it's like oh no no",
    "start": "214599",
    "end": "221000"
  },
  {
    "text": "Michael he's fine I trust him to have full admin rights to the database but the problem is that it's never the the",
    "start": "221000",
    "end": "227120"
  },
  {
    "text": "people that you trust that you need to be worried about it's the fact that their credentials can get compromised or",
    "start": "227120",
    "end": "233120"
  },
  {
    "text": "maybe they uh the the recipient of a fishing attack and they accidentally open access to systems so Michael yes",
    "start": "233120",
    "end": "240519"
  },
  {
    "text": "he's trustworthy but he clicked on that email Michael so there are going to be a whole lot of people who could",
    "start": "240519",
    "end": "246120"
  },
  {
    "text": "potentially get access to this and let's say for example we don't want that so we want to implement some kind of endtoend",
    "start": "246120",
    "end": "253079"
  },
  {
    "text": "encryption so being the uh the developer I am I thought you know what I'm going to ask chat gbt to use Dar to generate",
    "start": "253079",
    "end": "259759"
  },
  {
    "text": "an image to help you all understand exactly what endtoend encryption is about so I said draw a diagram that describes how N2 encryption",
    "start": "259759",
    "end": "267160"
  },
  {
    "text": "Works can you imagine how well this went",
    "start": "267160",
    "end": "271720"
  },
  {
    "text": "so unless you have any questions that's the end of the",
    "start": "274120",
    "end": "278199"
  },
  {
    "text": "talk I'll put this up again at the end just for fun all right so here's how end to end actually end to end encryption",
    "start": "280880",
    "end": "287400"
  },
  {
    "text": "actually works we've got Alice and we've got Bob has anybody here ever looked into any kind of crypto stuff",
    "start": "287400",
    "end": "292680"
  },
  {
    "text": "cryptography not crypto the other one that we don't want to talk about there's Alice and Bob Alice and Bob are the",
    "start": "292680",
    "end": "298680"
  },
  {
    "text": "traditional characters that we have in uh in encryption where Alice wants to send Bob a message so we have Alice and",
    "start": "298680",
    "end": "304479"
  },
  {
    "text": "Bob not sure about Bob he looks dodgy but anyway Alice wants to send a message she wants to say hi so she sends it to",
    "start": "304479",
    "end": "310759"
  },
  {
    "text": "the server and the server stores the word high which then Bob can read by accessing that from the database but the",
    "start": "310759",
    "end": "316680"
  },
  {
    "text": "problem we have now is that a third party can come along and grab a laptop of some sort and plug it in and hack it",
    "start": "316680",
    "end": "322440"
  },
  {
    "text": "in usually this character would be",
    "start": "322440",
    "end": "326120"
  },
  {
    "text": "called Carol or Charlie however in this case this is Phil Nash Phil Nash is going to come along",
    "start": "327960",
    "end": "334319"
  },
  {
    "text": "he's going to hack the system he's now reading our messages and we don't want Phil to know cuz we're planning a Secret Surprise tonight uh we're going to do",
    "start": "334319",
    "end": "340680"
  },
  {
    "text": "karaoke but don't tell him uh for those of you who don't know Phil's running the karaoke tonight so",
    "start": "340680",
    "end": "345840"
  },
  {
    "text": "stick around for that all right so what are we going to do we're going to generate a public and a private Keir and",
    "start": "345840",
    "end": "351479"
  },
  {
    "text": "this is what we call asymmetric encryption in that symmetric encryption is basically like I want to encrypt this",
    "start": "351479",
    "end": "356600"
  },
  {
    "text": "data with this pass phrase now I have to tell you the pass phrase and you can decrypt it problem is how do I get that pass phas to you in a secure manner if",
    "start": "356600",
    "end": "363880"
  },
  {
    "text": "we can meet face to face then sure but if I email it to you who has access to your email it gets tricky asymmetric",
    "start": "363880",
    "end": "370520"
  },
  {
    "text": "encryption allows me to generate a public key and a private key for you to generate a public key and a private key",
    "start": "370520",
    "end": "376240"
  },
  {
    "text": "and as the name suggests you can then share your public key with everyone you have to keep the private key",
    "start": "376240",
    "end": "382639"
  },
  {
    "text": "private so we have the the yellow key there that's the public key and then we got the shield locked one that's the private key that's the one we're not",
    "start": "382639",
    "end": "388199"
  },
  {
    "text": "going to share around but Alice can send uh her private key to Bob and Bob can",
    "start": "388199",
    "end": "393919"
  },
  {
    "text": "send public key I'm going to do this by the way I always get confused in my head between public and private when I'm actually talking Alice sends her public",
    "start": "393919",
    "end": "401240"
  },
  {
    "text": "key to Bob and Bob sends his public key to Alice and now Alice can actually grab the public key that Bob's just provided",
    "start": "401240",
    "end": "408319"
  },
  {
    "text": "and use that to encrypt the message so this is now encrypted with just Bob's public key now she can still decrypt it with",
    "start": "408319",
    "end": "415120"
  },
  {
    "text": "her private key but also once this now goes to the server it's encrypted data can't really decrypt it Charlie or Phil",
    "start": "415120",
    "end": "423599"
  },
  {
    "text": "has now lost access to this it's now an encrypted data blob and there's nothing to see there is plenty to see but you",
    "start": "423599",
    "end": "429280"
  },
  {
    "text": "can't decipher it without one of the private keys that was used to encrypt the data in the first place so now when",
    "start": "429280",
    "end": "435960"
  },
  {
    "text": "Bob gets the the message to his client his device whatever he's using to read this chat he gets this encrypted bit of",
    "start": "435960",
    "end": "442520"
  },
  {
    "text": "data which now he can't read either but he can use his private key and use that to decrypt the message again and get the",
    "start": "442520",
    "end": "448479"
  },
  {
    "text": "original message back clear as matter cool now the advantage with this",
    "start": "448479",
    "end": "455639"
  },
  {
    "text": "is you can actually do this multiple ways you can have multiple private keys",
    "start": "455639",
    "end": "460800"
  },
  {
    "text": "that are used to encrypt a single message and then any of those public key",
    "start": "460800",
    "end": "467159"
  },
  {
    "text": "you can use multiple public keys to encrypt a single message and then any of the private Keys associated with those",
    "start": "467159",
    "end": "472879"
  },
  {
    "text": "public keys will be able to decrypt the message it's like those security things",
    "start": "472879",
    "end": "477960"
  },
  {
    "text": "you've probably seen the memes of a um like when you go to a boat yard or you've got access to uh a shared yard in",
    "start": "477960",
    "end": "485840"
  },
  {
    "text": "in the complex where you live you'll have a chain of padlocks locking something together any one padlock that",
    "start": "485840",
    "end": "490960"
  },
  {
    "text": "get unlocked can break that chain hopefully they'll lock it up again as opposed to having like in parallel 20",
    "start": "490960",
    "end": "498319"
  },
  {
    "text": "padlocks where all of them need to be unlocked so in this case you only need one of the private keys to unlock the",
    "start": "498319",
    "end": "504039"
  },
  {
    "text": "message so next thing we would be looking at right now is tools for asymmetric encryption anybody here",
    "start": "504039",
    "end": "510720"
  },
  {
    "text": "implemented asymmetric encryption or any kind of encryption in their tools cool little bit so I won't ask you",
    "start": "510720",
    "end": "519719"
  },
  {
    "text": "for names then I'll just uh bring this up here are a handful not all of them but a handful of",
    "start": "519719",
    "end": "524959"
  },
  {
    "text": "popular uh modules or libraries for cryptography itself not necessarily",
    "start": "524959",
    "end": "531880"
  },
  {
    "text": "um a particular implementation or protocol but cryptography itself uh you'll see there are three here uh net",
    "start": "531880",
    "end": "537920"
  },
  {
    "text": "pgp open pgp and and open pgp PHP oh g p pgp g PG these are all",
    "start": "537920",
    "end": "547200"
  },
  {
    "text": "protocols or implementations of a form of cryptography called pgp or pretty good privacy uh G PG was the open source",
    "start": "547200",
    "end": "555600"
  },
  {
    "text": "and uh reimplementation of pgp and all of these other ones that I just mentioned use pgp which is a way of",
    "start": "555600",
    "end": "562120"
  },
  {
    "text": "encrypting and traditionally was used for encrypting emails so if you've ever had systems in the past where you can",
    "start": "562120",
    "end": "568000"
  },
  {
    "text": "upload your pgp key uh to encrypt messages uh if anybody here uses proton mail for example that will automatically",
    "start": "568000",
    "end": "574519"
  },
  {
    "text": "create in fact proton mail uses open PG PJs to generate public private keys and",
    "start": "574519",
    "end": "579959"
  },
  {
    "text": "to encrypt messages and to share those around uh so these are all particular",
    "start": "579959",
    "end": "585079"
  },
  {
    "text": "implementations the others bansy Castle P cryptodome these are implementations of cryptography libraries they don't",
    "start": "585079",
    "end": "590880"
  },
  {
    "text": "actually do pgp themselves but you could use them to implement pgp I'm a strong proponent of never",
    "start": "590880",
    "end": "597240"
  },
  {
    "text": "rolling your own crypto so I would probably say let's not do that in this particular case so let's get rid of those um because we're not actually",
    "start": "597240",
    "end": "603399"
  },
  {
    "text": "going to implement them go PG while it is a pgp implementation uh is not actually a library but it can be used",
    "start": "603399",
    "end": "609720"
  },
  {
    "text": "directly by things like C uh or or anything that can uh communicate via system connection to uh underlying",
    "start": "609720",
    "end": "616880"
  },
  {
    "text": "application sitting on the the computer that you're running your application on um so we're basically left with three",
    "start": "616880",
    "end": "623480"
  },
  {
    "text": "in fact this Sho amongst you will realize that I've actually dimmed out a whole different set of three uh these",
    "start": "623480",
    "end": "629120"
  },
  {
    "text": "three three are the ones that actually work in web so in this particular case we've got a web chat uh net pgp is not",
    "start": "629120",
    "end": "634680"
  },
  {
    "text": "going to help you with a JavaScript application uh if you had a backend then sure use one of the others uh if you've",
    "start": "634680",
    "end": "641279"
  },
  {
    "text": "got a a backend Services doing the encryption for you but we're actually going to be doing the encryption in the browser some of you might be thinking",
    "start": "641279",
    "end": "648200"
  },
  {
    "text": "was that a good idea the answer is no and yes and maybe we'll come to that as",
    "start": "648200",
    "end": "653519"
  },
  {
    "text": "well uh the browser obviously being an untrustworthy device within the",
    "start": "653519",
    "end": "658760"
  },
  {
    "text": "ecosystem of your application because you have no idea what's running on it so we got these three options um lip sodium",
    "start": "658760",
    "end": "664959"
  },
  {
    "text": "is actually a C library but if you use web assembly you can use lip sodium lip",
    "start": "664959",
    "end": "671440"
  },
  {
    "text": "sodium from within your browser and that's kind of cool option uh web crypto API and subtle crypto are actually the",
    "start": "671440",
    "end": "677040"
  },
  {
    "text": "crypto things that are built into the browser they're not quite as easy to deal with when it comes to um open pgp",
    "start": "677040",
    "end": "684600"
  },
  {
    "text": "based encryption uh whereas open pgp JS as the name suggest is JavaScript",
    "start": "684600",
    "end": "690279"
  },
  {
    "text": "library that will actually do open pgp now there's no reason why you couldn't choose to use something like",
    "start": "690279",
    "end": "696120"
  },
  {
    "text": "the web crypto crypto API and encrypt the data and send that around that way uh the reason why I chose open pgp is",
    "start": "696120",
    "end": "702959"
  },
  {
    "text": "because it is pretty much a standard for communications encryption and if you",
    "start": "702959",
    "end": "708399"
  },
  {
    "text": "wanted to in the future allow another system uh another client for example to interact with your data or to uh",
    "start": "708399",
    "end": "715760"
  },
  {
    "text": "distribute uh Federate the the system having a standard that is well known and",
    "start": "715760",
    "end": "720839"
  },
  {
    "text": "has been around for 30 something years I'm pretty sure it's been around since the 80s um is probably the better way to",
    "start": "720839",
    "end": "727040"
  },
  {
    "text": "go so we're going to go with open PG PJs in this particular case not to say the others aren't going to do what you want",
    "start": "727040",
    "end": "734279"
  },
  {
    "text": "but for this because it's it's a react application um and it's in the browser we're going to use open pgp JS so we're",
    "start": "734279",
    "end": "741399"
  },
  {
    "text": "going to use this to in to all the messages that are in the system so in order to do that there are",
    "start": "741399",
    "end": "747920"
  },
  {
    "text": "a number of steps we need to take first thing we need to do is generate a key pair for everybody who's using the application now op PG PJs will allow you",
    "start": "747920",
    "end": "754399"
  },
  {
    "text": "to do that and we'll have a look at some of the code uh in order to make sure that the demo fails do not fail me don't",
    "start": "754399",
    "end": "759720"
  },
  {
    "text": "worry it's just going to be code in in slides but we'll step through the important parts of uh of how we",
    "start": "759720",
    "end": "765199"
  },
  {
    "text": "implement this and how it then provides all the functionality that we need but the first step is to generate a Keir and",
    "start": "765199",
    "end": "771160"
  },
  {
    "text": "for every user you're going to need a public private key pair and they are generated together because they are intrinsically linked to each other you",
    "start": "771160",
    "end": "777040"
  },
  {
    "text": "have to use the public key to encrypt things for the private key to decrypt so",
    "start": "777040",
    "end": "782839"
  },
  {
    "text": "we do that then we need to store the keys somewhere and this is a touchy subject when it comes to the web uh but",
    "start": "782839",
    "end": "789120"
  },
  {
    "text": "we'll we'll discuss a little bit about where's good and where's bad and why that is and how we can mitigate issues and and risks uh in order to encrypt the",
    "start": "789120",
    "end": "797399"
  },
  {
    "text": "message remember we needed all the public keys so we're going to need to find a way of getting all of those public keys from all the people in the",
    "start": "797399",
    "end": "802519"
  },
  {
    "text": "chat room and then once we've got all those keys we can encrypt the message with all the public Keys we just retrieved",
    "start": "802519",
    "end": "809959"
  },
  {
    "text": "can anybody spot a logic error in doing this every time somebody logs in or has any other",
    "start": "809959",
    "end": "817800"
  },
  {
    "text": "questions is it like seven messages or is it one",
    "start": "817800",
    "end": "823639"
  },
  {
    "text": "message with seven potential keys so the question was is it seven messages or one message with seven potential Keys great",
    "start": "823639",
    "end": "829839"
  },
  {
    "text": "question it's actually going to be one message one payload but it's encrypted using all those seven keys at the same",
    "start": "829839",
    "end": "835000"
  },
  {
    "text": "time so that one message and we'll see an example of what the actual pgp encrypted message looks like but that",
    "start": "835000",
    "end": "840279"
  },
  {
    "text": "one message can be decrypted with any of the private Keys um but it's still a single message",
    "start": "840279",
    "end": "845959"
  },
  {
    "text": "comput is it computationally heavy uh I mean yes because we're",
    "start": "845959",
    "end": "852600"
  },
  {
    "text": "encrypting scale uh how will it scale so if and that's awesome so if you wanted",
    "start": "852600",
    "end": "858560"
  },
  {
    "text": "to do this for a chat room with a thousand people that's obviously going to be a higher cost of of scale the",
    "start": "858560",
    "end": "865240"
  },
  {
    "text": "amount of computation that's required to do that um to be honest nowaday computers are actually pretty fast when",
    "start": "865240",
    "end": "871320"
  },
  {
    "text": "this stuff's running in the browser um browsers are pretty efficient at running JavaScript and getting this done I",
    "start": "871320",
    "end": "877160"
  },
  {
    "text": "wouldn't be too worried if you're looking at millions of recipients for one message then maybe it's time to re",
    "start": "877160",
    "end": "882199"
  },
  {
    "text": "architect and find a different way of encrypting things in that case what you could do is actually use symmetric encryption to use a known passphrase for",
    "start": "882199",
    "end": "889560"
  },
  {
    "text": "encrypting and decrypting which is much faster and then you encrypt the pass phrase with the public keys and then you",
    "start": "889560",
    "end": "896839"
  },
  {
    "text": "only have to decrypt the pass phrase which is a much small smaller like that' be 40 60 characters whatever you wanted",
    "start": "896839",
    "end": "901880"
  },
  {
    "text": "to use as a secure pass phase nobody actually needs to know that you just randomly generate it you encrypt the data you asymmetrically encrypt the",
    "start": "901880",
    "end": "909240"
  },
  {
    "text": "passphrase you store both so there are ways of of improving performance for sure",
    "start": "909240",
    "end": "915160"
  },
  {
    "text": "yes",
    "start": "915160",
    "end": "918160"
  },
  {
    "text": "of that's a very very good point so if you were to give me your public key via",
    "start": "927000",
    "end": "932440"
  },
  {
    "text": "a third party then there's no way for um me to know that it's actually your public key uh in that situation there's",
    "start": "932440",
    "end": "940199"
  },
  {
    "text": "so two two sides that answer first of all we'll know very quickly if it's the wrong public key because you will not be",
    "start": "940199",
    "end": "945920"
  },
  {
    "text": "able to read the message because it's not associated with your private key but there is now somebody else whose key I",
    "start": "945920",
    "end": "951360"
  },
  {
    "text": "do have that's true now what normally happens with pgp uh or any kind of public private key",
    "start": "951360",
    "end": "958560"
  },
  {
    "text": "public key sharing mechanism uh there has anybody ever been to a pgp key signing",
    "start": "958560",
    "end": "964399"
  },
  {
    "text": "session no I'm showing my age so this happened quite a lot in the early 2000s",
    "start": "964399",
    "end": "969440"
  },
  {
    "text": "where You' actually physically meet up with people and you would share a piece of paper with them and you'd have some ID and somebody would look at the ID and",
    "start": "969440",
    "end": "976279"
  },
  {
    "text": "they'd look at you and they' say yep that matches and then they would say is this your your public key and you'd say",
    "start": "976279",
    "end": "981680"
  },
  {
    "text": "yes it is and then I would initial it so I know that I've cited it and I've seen the ID and the ID back uh so then I",
    "start": "981680",
    "end": "987040"
  },
  {
    "text": "would go home and I would get onto my lap laptop and I would pull down basic because it's associated with an email",
    "start": "987040",
    "end": "992240"
  },
  {
    "text": "address I would pull down the EMA the key for your email address and I'd find the one that matches and I would painstakingly check every single",
    "start": "992240",
    "end": "997680"
  },
  {
    "text": "character in later versions I could actually copy and paste how you copy and paste from a piece of paper in the year",
    "start": "997680",
    "end": "1003519"
  },
  {
    "text": "2000 it's a very interesting question um but there are ways of doing that now",
    "start": "1003519",
    "end": "1008839"
  },
  {
    "text": "because that is associated with email addresses you can actually have public key Stores um this is very common in the",
    "start": "1008839",
    "end": "1015480"
  },
  {
    "text": "identity space where you want to um grab a key from an identity provider in order",
    "start": "1015480",
    "end": "1020639"
  },
  {
    "text": "to verify that the Json web token you've received is actually signed by that and you would go to the provider's website",
    "start": "1020639",
    "end": "1027558"
  },
  {
    "text": "uh to a wellknown address and grab the key that way and there are similar ways of doing that so there are ways of doing",
    "start": "1027559",
    "end": "1033678"
  },
  {
    "text": "it now if I was to accept your public key from you then that's my problem for",
    "start": "1033679",
    "end": "1039480"
  },
  {
    "text": "not verifying it yours as well so there is like there's still a human element to this I would always want to make sure",
    "start": "1039480",
    "end": "1045038"
  },
  {
    "text": "that I get your public key from you whatever mechanism that is and I could that would still be fine by email you",
    "start": "1045039",
    "end": "1050600"
  },
  {
    "text": "could email me your public key and in fact if you're already using public private key encryption for your email",
    "start": "1050600",
    "end": "1056640"
  },
  {
    "text": "then your key your public key is actually sent with most emails because it's part of the signature as well because your emails will be signed even",
    "start": "1056640",
    "end": "1062000"
  },
  {
    "text": "if they're not encrypted but that's probably another whole hours talk so uh any other questions before I move",
    "start": "1062000",
    "end": "1069640"
  },
  {
    "text": "on I'm liking this excellent Okay cool so we're going to encrypt the message with all the public Keys we'll get one",
    "start": "1069640",
    "end": "1075600"
  },
  {
    "text": "encrypted message back and we'll store that in the database however next time I log in it's going to generate a new public private key pair for me which we",
    "start": "1075600",
    "end": "1081840"
  },
  {
    "text": "don't want so let's first of all check to see whether I have a public private key pair already so that's the first step if I've already logged in once",
    "start": "1081840",
    "end": "1088360"
  },
  {
    "text": "before I'm going to have that so if I don't have it then uh if I do then I can skip the storing the keys part and all",
    "start": "1088360",
    "end": "1093919"
  },
  {
    "text": "the rest of it and go straight to encrypting the message and sending it back to the server but then of course I've got to decrypt the message as well",
    "start": "1093919",
    "end": "1100559"
  },
  {
    "text": "so we're going to decrypt the private key private Keys generally have a pass phrase associated with them so you'd",
    "start": "1100559",
    "end": "1106520"
  },
  {
    "text": "have to provide the pass phrase in order to CED so this is essentially a a it's",
    "start": "1106520",
    "end": "1111799"
  },
  {
    "text": "not symmetric encryption per se but it it is that single pass phrase like that",
    "start": "1111799",
    "end": "1117280"
  },
  {
    "text": "is a secret you have to keep in in essence it's almost like the key is something you have and the past phrase is something you know so it's almost",
    "start": "1117280",
    "end": "1124760"
  },
  {
    "text": "probably get away with saying is it's multiactor I don't know uh you can create private keys without a pass",
    "start": "1124760",
    "end": "1131000"
  },
  {
    "text": "raas don't that's all I have to say on that matter it does make it harder for the",
    "start": "1131000",
    "end": "1137760"
  },
  {
    "text": "end user now because now that going to have and there's going to be a QR code soon so you can actually like type",
    "start": "1137760",
    "end": "1143280"
  },
  {
    "text": "messages into an actual chat but you you can have a username and password your credentials for getting into the chat system to identify yourself but then",
    "start": "1143280",
    "end": "1149039"
  },
  {
    "text": "you've also got to have a passphrase for unlocking your your um public your private key and how you message that and",
    "start": "1149039",
    "end": "1155640"
  },
  {
    "text": "the user experience of that can be tricky because now I've got two passwords that I've got to remember and one that I have to keep very",
    "start": "1155640",
    "end": "1162159"
  },
  {
    "text": "secret uh so now that I've got decry the private key I can actually load messages from the server which are all ideally encrypted and then I can use my private",
    "start": "1162159",
    "end": "1168960"
  },
  {
    "text": "key to to decrypt all the messages that have been encrypted with my public key there's a message in there that has not",
    "start": "1168960",
    "end": "1174799"
  },
  {
    "text": "been encrypted with my public key maybe it's because I wasn't a member of the chat when it was sent then I won't be",
    "start": "1174799",
    "end": "1180720"
  },
  {
    "text": "able to decrypt that one so you get a little bit of like Assurance that somebody jumps into the chat can't read all all messages but maybe you want them",
    "start": "1180720",
    "end": "1187640"
  },
  {
    "text": "to and we'll look at that too so let's talk about storing keys can anybody suggest good ideas and bad ideas",
    "start": "1187640",
    "end": "1195840"
  },
  {
    "text": "where would you store a uh a key in a web",
    "start": "1195840",
    "end": "1201480"
  },
  {
    "text": "application give me the bad ideas first let's get cookies yes perfect definitely storing them",
    "start": "1201480",
    "end": "1207640"
  },
  {
    "text": "cookies local storage yes there's a few of",
    "start": "1207640",
    "end": "1213840"
  },
  {
    "text": "them in the URL oh I don't have that one I'm going to have to add that one in perfect I like it the the advantage with",
    "start": "1213840",
    "end": "1219840"
  },
  {
    "text": "stowing with the URL is then you can bookmark it and then you can come straight back in you never have to provide your P Rays again I like it",
    "start": "1219840",
    "end": "1226600"
  },
  {
    "text": "perfect um there are some here that just obviously aren't going to work for a web",
    "start": "1226600",
    "end": "1232159"
  },
  {
    "text": "application um Hardware security modules you I think you can kind of do that",
    "start": "1232159",
    "end": "1238360"
  },
  {
    "text": "through through through some kind of way um but I mean we're going to get rid of",
    "start": "1238360",
    "end": "1244440"
  },
  {
    "text": "cookies and loal storage for starters because I think everybody agrees that's a really bad idea right all you need is a um a malicious browser add-on or a",
    "start": "1244440",
    "end": "1252280"
  },
  {
    "text": "cross-site scripting attack to get access to those fairly readily there aren't any perfect places to store it",
    "start": "1252280",
    "end": "1257360"
  },
  {
    "text": "I'll let you know now but those are definitely the worst uh the next one we're going to get rid of is uh on disk and operating key",
    "start": "1257360",
    "end": "1264240"
  },
  {
    "text": "chain and key store mainly because that's not something you really have access to in a web",
    "start": "1264240",
    "end": "1270279"
  },
  {
    "text": "application there is no server dis you could create an API to store it but now",
    "start": "1270279",
    "end": "1275880"
  },
  {
    "text": "you're sending that to your API and now you've got the sensitive data in transit and ideally we don't want",
    "start": "1275880",
    "end": "1282240"
  },
  {
    "text": "that um the Hardware security module there is actually um I don't know the",
    "start": "1282240",
    "end": "1287480"
  },
  {
    "text": "the projects complete or just underway at the moment but there is a um a project ongoing at the moment to link um",
    "start": "1287480",
    "end": "1295279"
  },
  {
    "text": "Tink which is I can't remember it's a c module for",
    "start": "1295279",
    "end": "1300960"
  },
  {
    "text": "uh connecting to the hardware module um to provide that through WM to JavaScript",
    "start": "1300960",
    "end": "1306919"
  },
  {
    "text": "so that technically you could have a hardware module plugged into a server somewhere ideally when you trust and",
    "start": "1306919",
    "end": "1312559"
  },
  {
    "text": "essentially you're kind of making an API call to a hardware module to retrieve a",
    "start": "1312559",
    "end": "1317600"
  },
  {
    "text": "key but that's all sorts of complicated and it doesn't actually solve the problem with getting the key into a browser environment you still have to",
    "start": "1317600",
    "end": "1324520"
  },
  {
    "text": "store it somewhere then right unless you're making that call every time it's still going to be in memory somehow at that point so I'm going to get rid of",
    "start": "1324520",
    "end": "1330080"
  },
  {
    "text": "that one too complicated no real benefits to it um web crypto would be a really cool",
    "start": "1330080",
    "end": "1336480"
  },
  {
    "text": "one it would be a really cool one uh the only problem is is that it itself is a",
    "start": "1336480",
    "end": "1343360"
  },
  {
    "text": "form of crypto you can store keys in web crypto um but only the keys that are generated by web crypto we're generating",
    "start": "1343360",
    "end": "1349440"
  },
  {
    "text": "our own Keys what you could do is you could take the the private key and then you can use the web crypto API in the",
    "start": "1349440",
    "end": "1355279"
  },
  {
    "text": "browser to encrypt the web crypto key to store in the web crypto data",
    "start": "1355279",
    "end": "1360960"
  },
  {
    "text": "store and I think you can probably all agree that that's about as ridiculous as using the HSM uh module through WM in",
    "start": "1360960",
    "end": "1367840"
  },
  {
    "text": "that it doesn't actually provide us that much more because we're still going to be pulling it out at some point uh which",
    "start": "1367840",
    "end": "1373240"
  },
  {
    "text": "leaves us with Cloud Key Management Services and databases which to a certain extent once you're looking at a",
    "start": "1373240",
    "end": "1378559"
  },
  {
    "text": "a front-end web application are the same because either way you're gonna have to connect to them somehow and provide them some kind of credentials to say give me",
    "start": "1378559",
    "end": "1385080"
  },
  {
    "text": "the key Cloud Key Management Services are going to be more secure but at the end of the day it's",
    "start": "1385080",
    "end": "1391400"
  },
  {
    "text": "still the same mechanism from a front-end application again backend application will be different yes so the",
    "start": "1391400",
    "end": "1397679"
  },
  {
    "text": "user would authenticate be authorized and then the application would make a back end apice",
    "start": "1397679",
    "end": "1405600"
  },
  {
    "text": "to yes so to rephrase not to rephrase to repeat I don't know it's not going to be",
    "start": "1414400",
    "end": "1420000"
  },
  {
    "text": "the same words uh the user authenticates and then does some kind of API call to a back end based on that authentication to",
    "start": "1420000",
    "end": "1426679"
  },
  {
    "text": "retrieve the key uh and in fact two clicks behind so we're on",
    "start": "1426679",
    "end": "1432720"
  },
  {
    "text": "database in fact there are uh there's an alternative option to this in that some most identity providers will actually",
    "start": "1432720",
    "end": "1438799"
  },
  {
    "text": "allow you to store arbitary data against the user which is kind of like a database right so what you could even do",
    "start": "1438799",
    "end": "1445159"
  },
  {
    "text": "is depending on the identity provider you're using is you can allow a user to log in create an account and then that",
    "start": "1445159",
    "end": "1450320"
  },
  {
    "text": "identity provider will provide a Json web token back to you which you would normally use to make that API API call",
    "start": "1450320",
    "end": "1455400"
  },
  {
    "text": "but what if that Json web token already contained the public and private Keys now you are trusting the identity",
    "start": "1455400",
    "end": "1461960"
  },
  {
    "text": "provider now to store those public private keys but to a certain extent I would say that that's probably a more s",
    "start": "1461960",
    "end": "1468120"
  },
  {
    "text": "Sol solution than a regular database provider because their entire core purpose is to store and secure",
    "start": "1468120",
    "end": "1474559"
  },
  {
    "text": "identities and credentials so I would probably trust that maybe two of a%c",
    "start": "1474559",
    "end": "1479960"
  },
  {
    "text": "more there was a hand up on the",
    "start": "1479960",
    "end": "1483679"
  },
  {
    "text": "back if our threat model includes cross-side scripting attacks aren't we stuffed no matter what we do",
    "start": "1487080",
    "end": "1493399"
  },
  {
    "text": "yes so if you're actually going to be doing this I would recommend uh rather than doing it in in a web application",
    "start": "1493399",
    "end": "1499960"
  },
  {
    "text": "and web applications are really easy ways of doing uh workshops right cuz you get your hands on the code I'm not",
    "start": "1499960",
    "end": "1506120"
  },
  {
    "text": "saying that the solution here is 100% perfect but I would argue that it's probably like 98 99% perfect it depends",
    "start": "1506120",
    "end": "1512200"
  },
  {
    "text": "on uh how much of a a Target you are if it's just for you and your friends sure take this and run with it if you're not",
    "start": "1512200",
    "end": "1518480"
  },
  {
    "text": "actually that worried about what happens if somebody gets my keys for an experimentation and learning about uh",
    "start": "1518480",
    "end": "1524480"
  },
  {
    "text": "cryptography if you wanted to be hypers secure and you basically um trying to communicate with a a large",
    "start": "1524480",
    "end": "1532760"
  },
  {
    "text": "uh entity that has the power and resources to really Target you then absolutely go for a a secure backend",
    "start": "1532760",
    "end": "1539360"
  },
  {
    "text": "model where the keys are kept on a server and not in in a runtime environment running",
    "start": "1539360",
    "end": "1546120"
  },
  {
    "text": "in an insecure application on somebody else's computer absolutely um again RIS risk",
    "start": "1546120",
    "end": "1554399"
  },
  {
    "text": "calculations uh are always an interesting question when it comes to security um but the the principle would remain",
    "start": "1554399",
    "end": "1562480"
  },
  {
    "text": "the only thing you would gain by moving it out of the web application and into a server-based application is securing the",
    "start": "1562480",
    "end": "1569559"
  },
  {
    "text": "keys better but the way that you encrypt the um the practices of of uh encrypting",
    "start": "1569559",
    "end": "1576039"
  },
  {
    "text": "for multiple people key Generation all of those things would still be exactly the same it's just hosted on a different machine host on the machine they have",
    "start": "1576039",
    "end": "1582360"
  },
  {
    "text": "more trust in but again I would argue depending on where that machine is they have trust in who has access to that",
    "start": "1582360",
    "end": "1588919"
  },
  {
    "text": "if you really are worried about a let's say it's a a country level entity that",
    "start": "1588919",
    "end": "1595080"
  },
  {
    "text": "is really trying to Target you you think they're not going to be able to access to that machine this is where the fear uncertainty and doubt comes in",
    "start": "1595080",
    "end": "1603639"
  },
  {
    "text": "M all right so we're going to store in database uh in this case we're going to",
    "start": "1603679",
    "end": "1608799"
  },
  {
    "text": "store it in the the the metadata of the user that comes back so the first thing we want to do is check to see if the",
    "start": "1608799",
    "end": "1614520"
  },
  {
    "text": "user's got a keypad so quite simply um I'm sure most of you can follow this if the user doesn't have user metadata in",
    "start": "1614520",
    "end": "1620279"
  },
  {
    "text": "there which is where this particular identity provider stores uh extra information that you want to about a",
    "start": "1620279",
    "end": "1625640"
  },
  {
    "text": "particular user uh if it doesn't exist then we're going to return this is basically a loop in your react anybody",
    "start": "1625640",
    "end": "1631480"
  },
  {
    "text": "here not do react so basically there's there's let's call this an event loop it's not really",
    "start": "1631480",
    "end": "1637919"
  },
  {
    "text": "but essentially this code is running anytime some of the variables change it's going to rerun this um so when the",
    "start": "1637919",
    "end": "1644039"
  },
  {
    "text": "user is not logged in this isn't going to exist and it's going to okay say okay well let's not do anything we're exiting early basically it's not that there's a",
    "start": "1644039",
    "end": "1649760"
  },
  {
    "text": "failure just we exting early once the user is authenticated and there is a user object and there is a user metadata",
    "start": "1649760",
    "end": "1656840"
  },
  {
    "text": "element in the user array or the object and that has keys then we're going to return those keys or store those keys in",
    "start": "1656840",
    "end": "1664360"
  },
  {
    "text": "in state essentially in memory and return so now we have the keys from the user so this is to your point uh the",
    "start": "1664360",
    "end": "1673080"
  },
  {
    "text": "first point of concern that we have it's stored in memory there's still a possibility that",
    "start": "1673080",
    "end": "1678159"
  },
  {
    "text": "is going to be some kind of malicious code running through cross-site scripting or through malicious add-on in the browser that's going to be able to",
    "start": "1678159",
    "end": "1683279"
  },
  {
    "text": "iterate through the whole memory dump basically and say find me something that looks like a key it's a lot harder",
    "start": "1683279",
    "end": "1690000"
  },
  {
    "text": "though than just iterating through cookies or local storage so we're making it harder it's uh it's the Swiss Cheese",
    "start": "1690000",
    "end": "1696559"
  },
  {
    "text": "model right every layer makes you a little bit more",
    "start": "1696559",
    "end": "1701759"
  },
  {
    "text": "secure uh once we have the keys or maybe we don't have the keys we're going to try and get a pass phase from the user",
    "start": "1701960",
    "end": "1708200"
  },
  {
    "text": "so there's a bit of jsx basically if we don't have the past phrase yet we're going to ask them for the past phrase and we're going to set that again in",
    "start": "1708200",
    "end": "1713399"
  },
  {
    "text": "memory so now we have a private key stored in memory and a p phras stored in memory and I'm quivering a little more",
    "start": "1713399",
    "end": "1719200"
  },
  {
    "text": "but again it's an example so let's say we do have the P phrase uh but we don't have any keys we're going to start",
    "start": "1719200",
    "end": "1725279"
  },
  {
    "text": "generating them so that happens elsewhere but we're just going to display some text saying generating keys so the user doesn't get confused and",
    "start": "1725279",
    "end": "1731360"
  },
  {
    "text": "then once we have the keys we're going to start loading the messages and display them to the user and in order to be able to decrypt those we pass the",
    "start": "1731360",
    "end": "1737760"
  },
  {
    "text": "keys through that'll be the public and the private key and the passphrase so that we can actually use the private key",
    "start": "1737760",
    "end": "1743200"
  },
  {
    "text": "to decrypt the messages that come back from the server so how do we generate the key",
    "start": "1743200",
    "end": "1751480"
  },
  {
    "text": "pair uh there's a function called generate Keys takes a nickname and the email so the identity most identity",
    "start": "1751480",
    "end": "1758159"
  },
  {
    "text": "providers when you get a Jason response um if you're not familiar with Json is basic uh with J Json web tokens rather",
    "start": "1758159",
    "end": "1764880"
  },
  {
    "text": "it's basically a payload in Json that describes the entity that's logged in it has a whole lot of claims about this",
    "start": "1764880",
    "end": "1770559"
  },
  {
    "text": "person and the claim might be that my nickname is Ben and my email is ben.com of course we have the pass phrase",
    "start": "1770559",
    "end": "1776799"
  },
  {
    "text": "already so we're basically going to pass these into the generate Keys function so we can generate again because pgp keys",
    "start": "1776799",
    "end": "1783360"
  },
  {
    "text": "are based on email addresses going to generate those uh in order to generate those",
    "start": "1783360",
    "end": "1788720"
  },
  {
    "text": "we're basically going to use the open pgp function from the or um yeah function from the open pgp module uh",
    "start": "1788720",
    "end": "1796000"
  },
  {
    "text": "we're going to pass those in that's copy being pasted from their website so don't worry about that too much but it's",
    "start": "1796000",
    "end": "1801200"
  },
  {
    "text": "really rudimentary and simple to get this working uh once we have those keys we're",
    "start": "1801200",
    "end": "1806600"
  },
  {
    "text": "going to save them so set keys we're going to save them into state in memory but we're also going to call this endpoint uh in this particular case",
    "start": "1806600",
    "end": "1813399"
  },
  {
    "text": "we're using netlify so I've got a netlify endpoint but what it actually does is it talks to the identity provider because there's a an API secret",
    "start": "1813399",
    "end": "1820840"
  },
  {
    "text": "between the two we don't want that in the browser so we've got an API endpoint that connects to the identity provider and says hey take for this for this user",
    "start": "1820840",
    "end": "1827360"
  },
  {
    "text": "ID with this subject uh store the access token and store the",
    "start": "1827360",
    "end": "1832399"
  },
  {
    "text": "keys sorry use this this access token uh for authentication to store the the keys",
    "start": "1832399",
    "end": "1837519"
  },
  {
    "text": "as the data so now the identity provider has my public and private",
    "start": "1837519",
    "end": "1843320"
  },
  {
    "text": "keys for however comfortable that makes you feel grimacing up here Phil is excited",
    "start": "1843320",
    "end": "1850799"
  },
  {
    "text": "because he's the one trying to access our messages he's like I know exactly where I'm going first yeah all right so",
    "start": "1850799",
    "end": "1857080"
  },
  {
    "text": "checkpoint this is where we're at at the moment we've discovered whether a user has keys already we've decided that in case that they haven't we're going to",
    "start": "1857080",
    "end": "1863000"
  },
  {
    "text": "generate the key pair and store them next thing is retrieving other people's keys so in this particular case",
    "start": "1863000",
    "end": "1870559"
  },
  {
    "text": "uh as well as storing public private keys in uh with the identity provider",
    "start": "1870559",
    "end": "1876840"
  },
  {
    "text": "that save Keys was also pushing just the public Keys",
    "start": "1876840",
    "end": "1882760"
  },
  {
    "text": "into the database whose name I've just forgotten superbase uh um so we're storing that in",
    "start": "1883360",
    "end": "1888880"
  },
  {
    "text": "there so now we have a collection of all public keys in superbase we can make this call here from superbase select",
    "start": "1888880",
    "end": "1894519"
  },
  {
    "text": "star uh from Keys who here has used superbase",
    "start": "1894519",
    "end": "1900919"
  },
  {
    "text": "before who here has used any kind of rest based database anything appear here scare you",
    "start": "1900919",
    "end": "1909559"
  },
  {
    "text": "yet there's no authentication on this",
    "start": "1912840",
    "end": "1918039"
  },
  {
    "text": "say again must be fire must be Firebase no it's super",
    "start": "1919159",
    "end": "1924518"
  },
  {
    "text": "base public keys don't need to be stored securely so we're okay thank you so",
    "start": "1925919",
    "end": "1931320"
  },
  {
    "text": "we're going to go to super base and say give me all your keys and then we're going to call the encrypt message with public key function which we will have a",
    "start": "1931320",
    "end": "1938039"
  },
  {
    "text": "look at uh now there it is uh which basically takes",
    "start": "1938039",
    "end": "1943120"
  },
  {
    "text": "a message and armored public keys so in pgp par I guess",
    "start": "1943120",
    "end": "1948440"
  },
  {
    "text": "uh keys are armored which means that they are um in such a format that they can be stored without uh risk of uh same",
    "start": "1948440",
    "end": "1956919"
  },
  {
    "text": "kind of thing as you if you're base base 64 you're all encoding a piece of text stick in a database or to send to an API",
    "start": "1956919",
    "end": "1964440"
  },
  {
    "text": "endpoint it basically armors those uh to make it easier to transport around because usually they're they're binary",
    "start": "1964440",
    "end": "1970799"
  },
  {
    "text": "uh so it creates the text version um or actually I think it's the other way around they are the binary version and",
    "start": "1970799",
    "end": "1976519"
  },
  {
    "text": "you need the text version my brain is fting too late in the day anyway so it's in a format that is not",
    "start": "1976519",
    "end": "1981919"
  },
  {
    "text": "usually used in order to use those keys uh the the read key is used uh it takes",
    "start": "1981919",
    "end": "1988399"
  },
  {
    "text": "that and it pushes that into the public Keys array so now we have an array of public keys that we can actually use to",
    "start": "1988399",
    "end": "1993919"
  },
  {
    "text": "encrypt the data there's no P tray stuff going on here because they're the public",
    "start": "1993919",
    "end": "1999559"
  },
  {
    "text": "keys so then what we do is call the open pgp encrypt we pass in the message itself that we want to encrypt and then",
    "start": "1999559",
    "end": "2005279"
  },
  {
    "text": "the array of all the public keys that we're going to use to encrypt it so again to your point single message goes in single message comes out and then we",
    "start": "2005279",
    "end": "2011880"
  },
  {
    "text": "return that it is all abstracted away we don't need to care about it anymore",
    "start": "2011880",
    "end": "2017480"
  },
  {
    "text": "um so we can now uh use that one function to encrypt the message and also",
    "start": "2017480",
    "end": "2022559"
  },
  {
    "text": "the sender so encrypting both parts and this plays into a little bit of uh plausible deniability if somebody does",
    "start": "2022559",
    "end": "2029039"
  },
  {
    "text": "get access to the database You could argue that maybe it's okay to store the names in plain text and then just",
    "start": "2029039",
    "end": "2034279"
  },
  {
    "text": "encrypt the actual messages but I would argue that names are also sensitive information because they could actually identify you",
    "start": "2034279",
    "end": "2040559"
  },
  {
    "text": "Bob could be any Bob in the world but if the the uh identifier was an email address then that specifically uh",
    "start": "2040559",
    "end": "2047960"
  },
  {
    "text": "implicates somebody in taking part in a conversation whatever that conversation is we don't know but we know they were part of",
    "start": "2047960",
    "end": "2053000"
  },
  {
    "text": "it so we're going to encrypt both uh so here's where we're up to now",
    "start": "2053000",
    "end": "2058679"
  },
  {
    "text": "we stored the keys we've retrieved the other public keys and we've encrypted the message with the public Keys yes",
    "start": "2058679",
    "end": "2067320"
  },
  {
    "text": "so with a an encrypted message can you derive from that which public keys were used to encrypted or is it completely",
    "start": "2071320",
    "end": "2076800"
  },
  {
    "text": "opaque it's completely opaque were you going to did I get the question",
    "start": "2076800",
    "end": "2083679"
  },
  {
    "text": "wrong right yeah so all the public keys that were used the private the associative the associated private Keys",
    "start": "2086320",
    "end": "2092679"
  },
  {
    "text": "would be the ones that can decrypt it but you can't tell from the message which public keys were used therefore you can't apply which private Keys uh",
    "start": "2092679",
    "end": "2099599"
  },
  {
    "text": "the only way you know is to try and decrypt it and see if it fails yeah so another form of plausible",
    "start": "2099599",
    "end": "2105040"
  },
  {
    "text": "deniability in that all right so now we want to decrypt",
    "start": "2105040",
    "end": "2110240"
  },
  {
    "text": "the messages we've got a database full of illegible stuff and we want Bob to be able to see the message High",
    "start": "2110240",
    "end": "2115960"
  },
  {
    "text": "because communication is hard I think I'll probably need a more elaborate communication example hi's good we'll",
    "start": "2115960",
    "end": "2122560"
  },
  {
    "text": "we'll do that so remember this B here we had before uh we called the messages in that third line there and we passed in",
    "start": "2122560",
    "end": "2128760"
  },
  {
    "text": "uh the keys and the pass phrase if we look at what's going on in messages we've again got this event Loop style",
    "start": "2128760",
    "end": "2134880"
  },
  {
    "text": "thing uh the use effect so what we're going to do is we're going to go to superbase and we're going to select star from",
    "start": "2134880",
    "end": "2141160"
  },
  {
    "text": "messages any concerns with that",
    "start": "2141160",
    "end": "2148520"
  },
  {
    "text": "H so again it is publicly accessible so yes you could determine how often messages were sent but the sender and",
    "start": "2152160",
    "end": "2159680"
  },
  {
    "text": "the message themselves are still encrypted so there's nothing you can really glean in terms of who took part",
    "start": "2159680",
    "end": "2165440"
  },
  {
    "text": "or what the conversation was but you can see when conversation happened I guess you could encrypt the",
    "start": "2165440",
    "end": "2170880"
  },
  {
    "text": "time stamp as well so we're going to grab those messages we're going to set them into",
    "start": "2170880",
    "end": "2177160"
  },
  {
    "text": "the the interstate we're going to remember what messages we have and then down here we're just going to run through and iterate through those",
    "start": "2177160",
    "end": "2184160"
  },
  {
    "text": "messages in order to display them to the user but of course they're still encrypted so",
    "start": "2184160",
    "end": "2190400"
  },
  {
    "text": "when we go into the message component which is called for every single message that's in there we're",
    "start": "2190400",
    "end": "2196440"
  },
  {
    "text": "going to get the message the private key and the pass phrase and then we're going to call uh",
    "start": "2196440",
    "end": "2202359"
  },
  {
    "text": "decrypt message with private key we're going to pass in this the Val the encrypted version of sender we're going",
    "start": "2202359",
    "end": "2207480"
  },
  {
    "text": "to pass in the private key and the pass phrase and then once that comes back we're going to set the value to result",
    "start": "2207480",
    "end": "2212880"
  },
  {
    "text": "now remember I said if you can't decrypt it's just going to fail so in that case we're just going to set the center to",
    "start": "2212880",
    "end": "2219319"
  },
  {
    "text": "blank because we can't decrypt it and then we're going to do the same with a message and if that doesn't come through",
    "start": "2219319",
    "end": "2224760"
  },
  {
    "text": "then we're going to set that to blank this is slightly abbreviated for the purpose of the slides because",
    "start": "2224760",
    "end": "2229800"
  },
  {
    "text": "otherwise the text gets really tiny um in the in the working version we'll have a look at in a second uh there's a",
    "start": "2229800",
    "end": "2236760"
  },
  {
    "text": "little bit more to this I actually have a value of is this information censored so I've got a censored true false in",
    "start": "2236760",
    "end": "2241960"
  },
  {
    "text": "there so if I can't decrypt the information the app will actually say uh message cannot be decrypt red or",
    "start": "2241960",
    "end": "2247880"
  },
  {
    "text": "something to that effect so you can actually provide information like there was a message but you can't read it of course you could choose depending on how",
    "start": "2247880",
    "end": "2254240"
  },
  {
    "text": "you write the application to say well there was a message but you can't read it so we're not even going to show it to you so you're not even aware of a",
    "start": "2254240",
    "end": "2259319"
  },
  {
    "text": "previous conversation you could go either way on that depending on how you implement",
    "start": "2259319",
    "end": "2264599"
  },
  {
    "text": "it uh so let's have a look at the third party in the conversation again uh this is the database preview that we saw",
    "start": "2264599",
    "end": "2271280"
  },
  {
    "text": "before Ben and Alysa Ben I keep calling on Bob and Ben and Alysa chatting because that's my demo",
    "start": "2271280",
    "end": "2277920"
  },
  {
    "text": "Bob is absconded somewhere I don't know so this is the chat conversation before and this is the chat conversation",
    "start": "2277920",
    "end": "2283400"
  },
  {
    "text": "afterwards and if we drill in and look at just one of those this is what a pgp message looks like so as you can tell",
    "start": "2283400",
    "end": "2289599"
  },
  {
    "text": "we're going to be using a lot more data so if you want I mean obviously",
    "start": "2289599",
    "end": "2294880"
  },
  {
    "text": "we've got Gip compression over HTTP calls and all that so it's not going to be that much worse but it's still",
    "start": "2294880",
    "end": "2300680"
  },
  {
    "text": "worse um so this is what a message looks like and from this you cannot deduce who sent it who encrypted it who can read it",
    "start": "2300680",
    "end": "2307760"
  },
  {
    "text": "what the content is I don't even know if this one is the sender or the message",
    "start": "2307760",
    "end": "2314520"
  },
  {
    "text": "uh so the question now comes and we've alluded to this a couple of times what how do you then add somebody to the",
    "start": "2314520",
    "end": "2319839"
  },
  {
    "text": "conversation because if we look back at this one here let's say Phil actually joins the the chat these messages here",
    "start": "2319839",
    "end": "2326240"
  },
  {
    "text": "were only encrypted with mine and Alice's uh public keys so we're the only",
    "start": "2326240",
    "end": "2331400"
  },
  {
    "text": "ones are decrypted nobody else can so what happens if you want to add somebody to the conversation uh after messages",
    "start": "2331400",
    "end": "2337720"
  },
  {
    "text": "have already been sent Phil is absolutely right I just give him my private key",
    "start": "2337720",
    "end": "2345359"
  },
  {
    "text": "no no I told you he was the the the bad one I'm going to permanently change my",
    "start": "2345359",
    "end": "2350520"
  },
  {
    "text": "slides to Phil any so conversation so this is what it currently looks like this is Phil",
    "start": "2350520",
    "end": "2357560"
  },
  {
    "text": "Phil can't read the messages this is the situation we were at the beginning right when we first went through how end to",
    "start": "2357560",
    "end": "2363200"
  },
  {
    "text": "end encryption Works once it got encrypted Alice char or Phil",
    "start": "2363200",
    "end": "2369160"
  },
  {
    "text": "or what was the other C Carol one one of the the people who",
    "start": "2369160",
    "end": "2374599"
  },
  {
    "text": "weren't supposed to read the messages I'm not going to talk call them attackers sometimes the the C character as the attacker but they're just third",
    "start": "2374599",
    "end": "2380880"
  },
  {
    "text": "parties to the conversation who shouldn't be able to read it but in this particular case Phil's joined the chat uh",
    "start": "2380880",
    "end": "2388079"
  },
  {
    "text": "and we say hi Phil oh Charlie and Phil can now see the message that's cool cuz",
    "start": "2388280",
    "end": "2394920"
  },
  {
    "text": "Phil Charlie has generated a public private key pair and shared the public key with uh superbase in this case or",
    "start": "2394920",
    "end": "2401319"
  },
  {
    "text": "the server and then next time a message gets sent Alice or Bob whoever sent the",
    "start": "2401319",
    "end": "2407040"
  },
  {
    "text": "message said give me all the public keys and that now included Phil's public key so now Phil can read the message but he",
    "start": "2407040",
    "end": "2412839"
  },
  {
    "text": "can't read the first two messages can anybody suggest a way that we can solve",
    "start": "2412839",
    "end": "2418920"
  },
  {
    "text": "that Sy symmetric key encryption approach",
    "start": "2422319",
    "end": "2428319"
  },
  {
    "text": "right so if you had a common key for encrypting all the messages then you could just encrypt that one key and then",
    "start": "2430160",
    "end": "2435800"
  },
  {
    "text": "every party to the conversation could decrypt that one key and then use that for encrypting all of the messages I",
    "start": "2435800",
    "end": "2441880"
  },
  {
    "text": "would argue that you would probably actually want to over engineer and have a symmetric encryption that rotates",
    "start": "2441880",
    "end": "2448319"
  },
  {
    "text": "which means you've also got to have a history of symmetric encryption um and you can",
    "start": "2448319",
    "end": "2453839"
  },
  {
    "text": "use uh block data storage I don't want to use the blockchaining cuz it's not blockchain",
    "start": "2453839",
    "end": "2460480"
  },
  {
    "text": "but you can like encrypt one payload inside another so that you can then roll that back uh so that you can have",
    "start": "2460480",
    "end": "2467280"
  },
  {
    "text": "certain messages with one key phrase and then when somebody joins the conversation you can change the phrase the pass phrase but you can also allow",
    "start": "2467280",
    "end": "2473920"
  },
  {
    "text": "them to see their pass phas so you've then got optional uh like you can add somebody to",
    "start": "2473920",
    "end": "2479079"
  },
  {
    "text": "the chat and say this person can see previous messages and you can add somebody else and say this person can't see previous messages you'd probably",
    "start": "2479079",
    "end": "2484680"
  },
  {
    "text": "want to keep that kind of control um there's actually an easier way though I mean easier uh one that doesn't require",
    "start": "2484680",
    "end": "2492200"
  },
  {
    "text": "a technical change yes okay oh you might",
    "start": "2492200",
    "end": "2498240"
  },
  {
    "text": "I could be wrong but could could their because Bob still has his private",
    "start": "2498240",
    "end": "2503319"
  },
  {
    "text": "key and he can decrypt it you could have like a mesh topology and",
    "start": "2503319",
    "end": "2509839"
  },
  {
    "text": "then uh Bob would generate a new um key",
    "start": "2509839",
    "end": "2515160"
  },
  {
    "text": "pair and then add Charlie in that way is that you're pretty close Okay uh when",
    "start": "2515160",
    "end": "2521040"
  },
  {
    "text": "you started with I'm probably wrong you're not um you would use one of the existing members of the conversation",
    "start": "2521040",
    "end": "2526880"
  },
  {
    "text": "though if Alice grabs one of the encrypted messages and then decrypts it",
    "start": "2526880",
    "end": "2532400"
  },
  {
    "text": "using her public key her private key then grabs the three keys and re-encrypts it sends that back to the",
    "start": "2532400",
    "end": "2539000"
  },
  {
    "text": "server as soon as that happens Phil can read the message or Charlie and then simly at the same time cuz you you've",
    "start": "2539000",
    "end": "2545960"
  },
  {
    "text": "got multiple people connected the time right and just keep popping things off send me everything that has not been encrypted for Charlie yet and meanwhile",
    "start": "2545960",
    "end": "2552720"
  },
  {
    "text": "Bob grabs another one of the messages decrypts it finds out says hey Alice re-encrypts it with the extra key as",
    "start": "2552720",
    "end": "2557760"
  },
  {
    "text": "well now adds that back onto the server and now Charlie can read all the messages so you don't really need to create new key pairs but you're right in",
    "start": "2557760",
    "end": "2564640"
  },
  {
    "text": "that you would use the the graph of other members within the chat already to",
    "start": "2564640",
    "end": "2569800"
  },
  {
    "text": "decrypt and then reencrypt the information nice that Mak",
    "start": "2569800",
    "end": "2575880"
  },
  {
    "text": "sense s so this is the fun part uh this is not a malicious QR",
    "start": "2575880",
    "end": "2582119"
  },
  {
    "text": "code if it was I wouldn't tell [Music] you so um I'll leave that up for a bit",
    "start": "2582119",
    "end": "2589559"
  },
  {
    "text": "in case you want to grab that basically what that's going to load up is I've got this application running in git pod and",
    "start": "2589559",
    "end": "2596480"
  },
  {
    "text": "I've opened that up so you should be able to get access the first thing that you'll see is a login uh instead of logging in because you don't have one",
    "start": "2596480",
    "end": "2602640"
  },
  {
    "text": "yet click on the sign up link uh or I think there's a log with Google as well um but email and password I will be",
    "start": "2602640",
    "end": "2609960"
  },
  {
    "text": "um purging that's the word I was looking for uh all data out of my identity",
    "start": "2609960",
    "end": "2615839"
  },
  {
    "text": "providers it's not working it's not working let's find out why it's not",
    "start": "2615839",
    "end": "2622960"
  },
  {
    "text": "working so it should what can go wrong because uh my",
    "start": "2622960",
    "end": "2628680"
  },
  {
    "text": "workspace closed so I'll start this again but I what I will be doing is is",
    "start": "2628680",
    "end": "2634559"
  },
  {
    "text": "uh if you do choose to log in with email and password that will go into my demo identity provider space but I'll Purge",
    "start": "2634559",
    "end": "2640760"
  },
  {
    "text": "that all afterwards I promise not to spam you um let's install netlify CLI",
    "start": "2640760",
    "end": "2647880"
  },
  {
    "text": "again shouldn't take too long and hopefully I think it usually keeps the same URL so the same QR code should",
    "start": "2647880",
    "end": "2655359"
  },
  {
    "text": "work anybody have any lift music",
    "start": "2662480",
    "end": "2667400"
  },
  {
    "text": "all right let's go to start and nfy",
    "start": "2668000",
    "end": "2675079"
  },
  {
    "text": "Dev not this one that one make public all right do you want to give that",
    "start": "2677400",
    "end": "2683079"
  },
  {
    "text": "another try working yes so you should see",
    "start": "2683079",
    "end": "2692200"
  },
  {
    "text": "something like",
    "start": "2692200",
    "end": "2696200"
  },
  {
    "text": "after you've logged in something like",
    "start": "2700800",
    "end": "2706720"
  },
  {
    "text": "this now in fact what you should probably actually see is something that just",
    "start": "2709440",
    "end": "2715200"
  },
  {
    "text": "says my clothes are falling off Shimmy Shimmy",
    "start": "2715240",
    "end": "2722680"
  },
  {
    "text": "that's weird it says [Laughter] [Music]",
    "start": "2728079",
    "end": "2733960"
  },
  {
    "text": "what okay don't sign up with Google I signed gole he signed up with Google",
    "start": "2733960",
    "end": "2739200"
  },
  {
    "text": "it's your it worked on my machine Google okay I'm just going to move this over CU",
    "start": "2739200",
    "end": "2744520"
  },
  {
    "text": "I think it's jangling against my uh sorry for this at home it's going to",
    "start": "2744520",
    "end": "2750200"
  },
  {
    "text": "be terrible for you I I have a necklace on and it's probably bashing against that",
    "start": "2750200",
    "end": "2758640"
  },
  {
    "text": "there we go that's better um so I'm guessing Phil you saw two",
    "start": "2758920",
    "end": "2767240"
  },
  {
    "text": "messages saying you cannot read this message uh Stuart can't read Phil's uh although still can read Phil's",
    "start": "2767240",
    "end": "2774880"
  },
  {
    "text": "second message Bobby T who's Bobby",
    "start": "2774880",
    "end": "2779880"
  },
  {
    "text": "tables excellent if I had chocolate I'd be throwing at you right now",
    "start": "2780119",
    "end": "2786119"
  },
  {
    "text": "Ben can't type",
    "start": "2788160",
    "end": "2792760"
  },
  {
    "text": "oh yeah I got that one too it",
    "start": "2793440",
    "end": "2800838"
  },
  {
    "text": "means is can you actually am I I can hear me touching the microphone but I",
    "start": "2802720",
    "end": "2807800"
  },
  {
    "text": "can't hear me through the speakers anymore is it loud enough okay good um",
    "start": "2807800",
    "end": "2813040"
  },
  {
    "text": "yeah so working n app although I I've got a a bug to",
    "start": "2813040",
    "end": "2819119"
  },
  {
    "text": "debug um what I would probably imagine is who's who's the person that sent a",
    "start": "2819119",
    "end": "2824599"
  },
  {
    "text": "message after I said hi all that can't be decrypted no one spooky either that or nobody's",
    "start": "2824599",
    "end": "2832079"
  },
  {
    "text": "admitting to it because they just want to freak me out what I suspect might have happened is that maybe the uh the",
    "start": "2832079",
    "end": "2838680"
  },
  {
    "text": "call to save to super base didn't actually go through there might have been a network error in which case the",
    "start": "2838680",
    "end": "2844240"
  },
  {
    "text": "public key isn't there uh or the call to receive the public Keys isn't there I",
    "start": "2844240",
    "end": "2849599"
  },
  {
    "text": "don't know something's going wrong give a",
    "start": "2849599",
    "end": "2857960"
  },
  {
    "text": "try hey recognize that it's",
    "start": "2860440",
    "end": "2865760"
  },
  {
    "text": "pass well no it's a demo now you know my pass",
    "start": "2865760",
    "end": "2873839"
  },
  {
    "text": "phrase well that's not going to work with your private key though is",
    "start": "2874400",
    "end": "2880040"
  },
  {
    "text": "it it could also be a a conference Network issue no still can't be",
    "start": "2882200",
    "end": "2888480"
  },
  {
    "text": "decrypted anyway whoever sent those messages keep it to yourselves you you have unlocked",
    "start": "2888480",
    "end": "2895640"
  },
  {
    "text": "an achievement I didn't even realize existed",
    "start": "2895640",
    "end": "2900319"
  },
  {
    "text": "congratulations all right so security considerations carry on chatting on the",
    "start": "2900680",
    "end": "2905960"
  },
  {
    "text": "app if you want to uh security considerations we've already spoken about um in this particular case we are",
    "start": "2905960",
    "end": "2912240"
  },
  {
    "text": "retrieving information from uh superbase hases any nobody had to used superbase",
    "start": "2912240",
    "end": "2917520"
  },
  {
    "text": "before this is the information we're getting out and if you sign up for a superbase account for the first time and you haven't configured your security",
    "start": "2917520",
    "end": "2923480"
  },
  {
    "text": "settings you'll have this orange bar at the top of your screen that basically says you're allowing Anonymous access to your",
    "start": "2923480",
    "end": "2929200"
  },
  {
    "text": "table but we've al already discussed that all the information is either a public key or ostensibly encrypt without",
    "start": "2929200",
    "end": "2937880"
  },
  {
    "text": "the private key right ostensibly let let's agree that there is no computer powerful enough ever in the world to",
    "start": "2937880",
    "end": "2943440"
  },
  {
    "text": "reverse engineer this so it should be safe right maybe think of a reason why I'm",
    "start": "2943440",
    "end": "2949280"
  },
  {
    "text": "asking this question in a very pointed manner suggesting that there's something we've",
    "start": "2949280",
    "end": "2954799"
  },
  {
    "text": "missed something about the",
    "start": "2957480",
    "end": "2961119"
  },
  {
    "text": "ID you can basically insert",
    "start": "2962960",
    "end": "2967760"
  },
  {
    "text": "you could insert unlimited amount of data in your table yes you could there is a cost risk I guess in the fact that",
    "start": "2968040",
    "end": "2974440"
  },
  {
    "text": "you could essentially do a either deny service attack on me or cause me to have",
    "start": "2974440",
    "end": "2979599"
  },
  {
    "text": "to pay so much money because you've just uploaded 25 terabytes of data into one of",
    "start": "2979599",
    "end": "2985160"
  },
  {
    "text": "my but there is there's a worse one arguably it's pretty bad but there is a",
    "start": "2985160",
    "end": "2990760"
  },
  {
    "text": "worse one I'm allowed to read from the the table right so that I can get all the",
    "start": "2990760",
    "end": "2997440"
  },
  {
    "text": "messages out and the keys out I can write to the table so I can create a new hey modify modify which basically means",
    "start": "2997440",
    "end": "3004960"
  },
  {
    "text": "that nobody can read it but you can also delete I don't want somebody going through and say just delete everything",
    "start": "3004960",
    "end": "3010119"
  },
  {
    "text": "from the table uh so in this particular case because we're using superbase we would just change the security",
    "start": "3010119",
    "end": "3016240"
  },
  {
    "text": "permission settings on this to say by default public are allowed to just read and insert but they can't update they",
    "start": "3016240",
    "end": "3022920"
  },
  {
    "text": "can't delete",
    "start": "3022920",
    "end": "3026558"
  },
  {
    "text": "so key takeaways from this have you had fun that's the only takeaway really",
    "start": "3028200",
    "end": "3034400"
  },
  {
    "text": "there are a few others um securing private keys with a pass phrase I mentioned this the beginning you can create a private key without a pass",
    "start": "3034400",
    "end": "3040799"
  },
  {
    "text": "phrase don't there are I will admit there are a small Corner case number of examples where you might have a reason",
    "start": "3040799",
    "end": "3048000"
  },
  {
    "text": "to do that and that would possibly be in a scenario such as you're doing encryption that is only ever going to",
    "start": "3048000",
    "end": "3053160"
  },
  {
    "text": "get touched by systems as opposed to humans Within an environment you control and Trust fully and in that case you",
    "start": "3053160",
    "end": "3060040"
  },
  {
    "text": "might want to just secure things more in transit than you normally would over htps or TLS if you want to to send data",
    "start": "3060040",
    "end": "3068920"
  },
  {
    "text": "and know that there's definitely no way you can decrypt it unless you have the private key which you have specifically put onto these machines you can tell",
    "start": "3068920",
    "end": "3075559"
  },
  {
    "text": "where I'm going with this like it's a very minute uh number of instances where I can think of where you would want to",
    "start": "3075559",
    "end": "3081520"
  },
  {
    "text": "have a passphrases private key don't do it unless you've got a very good reason if you do have a very good reason tell",
    "start": "3081520",
    "end": "3087000"
  },
  {
    "text": "me what it is because I would like to add that to my repertoire of knowledge uh safe storage of private",
    "start": "3087000",
    "end": "3092240"
  },
  {
    "text": "keys this was this was a fun one because there isn't really a way of doing this in a web context there are certainly",
    "start": "3092240",
    "end": "3097880"
  },
  {
    "text": "ways of making it more secure and if you can't secure the the uh the private key fully then hopefully",
    "start": "3097880",
    "end": "3105280"
  },
  {
    "text": "you're securing the passphrase if you're not securing either of those then I mean you're buggered basically",
    "start": "3105280",
    "end": "3113119"
  },
  {
    "text": "but there are other things you can put in place to to mitigate this uh Safe Handling of pass phrases same as",
    "start": "3113119",
    "end": "3119319"
  },
  {
    "text": "the last only a different piece of data Access Control to encrypted data rest we looked at how we uh we secured superbase",
    "start": "3119319",
    "end": "3126240"
  },
  {
    "text": "a little more to make sure that only what we anticipated public actions to do",
    "start": "3126240",
    "end": "3132480"
  },
  {
    "text": "uh the other thing I like by the way about having public right access to that database is yes you can you can write",
    "start": "3132480",
    "end": "3138319"
  },
  {
    "text": "dirty data into it and aens is not really going to create any problems because all the app's going to do is try",
    "start": "3138319",
    "end": "3143720"
  },
  {
    "text": "and decrypt it and it'll fail and it'll say could not decrypt this message um but the other thing I like",
    "start": "3143720",
    "end": "3149839"
  },
  {
    "text": "about it is it adds even more onto that plausible deniability because you could secure it using the Json web token that came from",
    "start": "3149839",
    "end": "3156960"
  },
  {
    "text": "the identity provider and configure the database to say accept any access tokens that are issued by this identity",
    "start": "3156960",
    "end": "3164319"
  },
  {
    "text": "provider but now the database has logs of who wrote which piece of data so I don't want that so more PL more",
    "start": "3164319",
    "end": "3171640"
  },
  {
    "text": "plausible deniability on top we've gone through how to re-encrypt uh data and would want to do that to provide",
    "start": "3171640",
    "end": "3178040"
  },
  {
    "text": "information to people who joined a conversation later on uh and again I want to emphasize don't roll your own",
    "start": "3178040",
    "end": "3183079"
  },
  {
    "text": "crypto it's not worth it uh unless you are actually super mathematical and this",
    "start": "3183079",
    "end": "3188559"
  },
  {
    "text": "is your job and you write crypto stuff all day absolutely go for it it's your job I'm not going to stop you uh I would",
    "start": "3188559",
    "end": "3194280"
  },
  {
    "text": "also like to thank you very much for creating the tools that we use so we don't get ourselves into trouble if you",
    "start": "3194280",
    "end": "3201119"
  },
  {
    "text": "don't know how to write a cryptographic algorithm don't uh swiss cheese model I've",
    "start": "3201119",
    "end": "3206599"
  },
  {
    "text": "mentioned a couple of times we're adding lots of layers in here to try and keep us as secure as possible uh the next",
    "start": "3206599",
    "end": "3212119"
  },
  {
    "text": "slice of cheese would be use a back end uh and most importantly drunk people",
    "start": "3212119",
    "end": "3217160"
  },
  {
    "text": "with fire extinguishers are largely unhelpful in times of peril I learned that at the age of 40 as",
    "start": "3217160",
    "end": "3222720"
  },
  {
    "text": "well I'll tell you more about that afterwards uh during during drinks because I believe uh in the next 15",
    "start": "3222720",
    "end": "3228119"
  },
  {
    "text": "minutes or so we're going to be applied with alcohol I imagine so I'd like to",
    "start": "3228119",
    "end": "3233599"
  },
  {
    "text": "thank you very much for your time I hope it's been enjoyable I've been Ben there's a a QR code and the URL to the",
    "start": "3233599",
    "end": "3240480"
  },
  {
    "text": "actual Workshop if you want to do it it is a pace yourself do yourself Workshop that's the option there and together",
    "start": "3240480",
    "end": "3247440"
  },
  {
    "text": "with what we've spoken about today that fills in the gaps of what I would normally be talking about during the",
    "start": "3247440",
    "end": "3252680"
  },
  {
    "text": "workshop so feel free to give it a try message me again uh Ben de on Twitter my DMs are open thank you for your",
    "start": "3252680",
    "end": "3261000"
  },
  {
    "text": "[Applause] time and of course I'm happy to take any more questions if there are",
    "start": "3261580",
    "end": "3268520"
  },
  {
    "text": "anyt ly as a function of the number of public Keys say again does the cipher",
    "start": "3268520",
    "end": "3275799"
  },
  {
    "text": "text length vary as a function of the number of public keys that it is signed",
    "start": "3275799",
    "end": "3280839"
  },
  {
    "text": "with Ah that's a really good question um I would imagine it",
    "start": "3280839",
    "end": "3287599"
  },
  {
    "text": "would I'm just thinking right if you had a situation where you wanted to determine the size of a group and you're",
    "start": "3288640",
    "end": "3294400"
  },
  {
    "text": "a third party actor like a nation state and the things signed with five Keys versus 20 Keys versus a th keys to",
    "start": "3294400",
    "end": "3301119"
  },
  {
    "text": "determine the size of the problem you're dealing",
    "start": "3301119",
    "end": "3305040"
  },
  {
    "text": "with so just to fill in for the people at home um gentleman in the back was",
    "start": "3311880",
    "end": "3317319"
  },
  {
    "text": "saying you don't know the length of the message so the question is if you if you look at the length of the actual",
    "start": "3317319",
    "end": "3323200"
  },
  {
    "text": "encrypted data can you infer anything from that in terms of the group size and the commentary was if you have a",
    "start": "3323200",
    "end": "3328720"
  },
  {
    "text": "really small message encrypted for many people it might look the same size as a very long message encrypted for a few people I think you also mentioned",
    "start": "3328720",
    "end": "3335039"
  },
  {
    "text": "padding and I think there is a a padding mechanism in that so that it's harder to",
    "start": "3335039",
    "end": "3340480"
  },
  {
    "text": "guess now if you knew that an average length of a message uh let's say for example you were using this to encrypt",
    "start": "3340480",
    "end": "3346280"
  },
  {
    "text": "SMS I don't know why you would or tweets and you know that an average length of a message is 89 characters CU it's up to",
    "start": "3346280",
    "end": "3352839"
  },
  {
    "text": "140 but the average is usually 89 you could probably infer from that but probably only in blocks because of that",
    "start": "3352839",
    "end": "3358440"
  },
  {
    "text": "padding that goes in there as well so I",
    "start": "3358440",
    "end": "3364160"
  },
  {
    "text": "guess you could uh if that was a great concern to you you could also Implement",
    "start": "3364160",
    "end": "3369280"
  },
  {
    "text": "a similar aspect to uh seeding a hash you could add a whole lot of variable",
    "start": "3369280",
    "end": "3374920"
  },
  {
    "text": "data at the beginning and in your application you can say ignore everything up to the null character and",
    "start": "3374920",
    "end": "3380440"
  },
  {
    "text": "then the rest of it is message and you could have a variable length you could add your own variable length padding to the message to add even more",
    "start": "3380440",
    "end": "3386760"
  },
  {
    "text": "uh noise make it harder for people to guess what's going on or I'd also wonder perhaps you split it up into frames so",
    "start": "3386760",
    "end": "3393280"
  },
  {
    "text": "you know one single message only has up to x uh characters that you split up over multiple messages totally you could",
    "start": "3393280",
    "end": "3399520"
  },
  {
    "text": "definitely do that lots of different ways you could add onto this for even more security I like the frames",
    "start": "3399520",
    "end": "3406240"
  },
  {
    "text": "idea cool all right if there's nobody else uh I'm going to stick around anyway for the",
    "start": "3406240",
    "end": "3412119"
  },
  {
    "text": "next couple of minutes but if there's nobody else go outside have fun I'll see you at the party and don't forget to come back is it it's room one right room",
    "start": "3412119",
    "end": "3418480"
  },
  {
    "text": "one for the karaoke there is conflicting information it's one of these rooms for the karaoke but don't miss it it's going to be",
    "start": "3418480",
    "end": "3424039"
  },
  {
    "text": "amazing",
    "start": "3424039",
    "end": "3427039"
  }
]