[
  {
    "start": "0",
    "end": "207000"
  },
  {
    "text": "okay so you know the last couple of years I was involved in an in a big",
    "start": "4540",
    "end": "10269"
  },
  {
    "text": "project for the Norwegian government to basically replace their old you know infrastructure with something",
    "start": "10269",
    "end": "17080"
  },
  {
    "text": "token-based basically openly connect in Olaf and so on so as part of that project I created this internal training",
    "start": "17080",
    "end": "24340"
  },
  {
    "text": "to raise awareness of you know security challenges or you know security features",
    "start": "24340",
    "end": "30970"
  },
  {
    "text": "or security you know problems you might run into so what this slight lag is it's",
    "start": "30970",
    "end": "35980"
  },
  {
    "text": "basically like a subset of that training so I picked out like them some more",
    "start": "35980",
    "end": "42039"
  },
  {
    "text": "common problems and maybe some less common problems to basically raise the awareness with you as well",
    "start": "42039",
    "end": "48489"
  },
  {
    "text": "and then hopefully encourage you afterwards to to go start reading these documents because obviously there is",
    "start": "48489",
    "end": "54549"
  },
  {
    "text": "much much more to learn about this than what I can tell you in in 60 minutes so",
    "start": "54549",
    "end": "60609"
  },
  {
    "text": "but I have to warn you right when you start digging into this meta then you're",
    "start": "60609",
    "end": "67420"
  },
  {
    "text": "gonna gonna have to read things like this right it's a career font right you know that's where the fun stops here so",
    "start": "67420",
    "end": "76060"
  },
  {
    "text": "very serious lucky lady have a PDF version for you right so when you when",
    "start": "76060",
    "end": "81430"
  },
  {
    "text": "you click that you really hope give me something something nicer",
    "start": "81430",
    "end": "87330"
  },
  {
    "text": "apparently the internet doesn't work so I can I can't show you the PDF version",
    "start": "87330",
    "end": "92340"
  },
  {
    "text": "apparently but the news is the spoiler alert would be a use the same font okay",
    "start": "92340",
    "end": "98860"
  },
  {
    "text": "so doesn't really help yeah and you know",
    "start": "98860",
    "end": "103960"
  },
  {
    "text": "and that all goes back basically you know that whole procedure of RFC must be written in text files and so on that all",
    "start": "103960",
    "end": "109930"
  },
  {
    "text": "goes back basically you know the IETF work was is the company that specify the",
    "start": "109930",
    "end": "114940"
  },
  {
    "text": "Internet in the first place so basically all of these documents must really be backwards compatible to the very first",
    "start": "114940",
    "end": "119980"
  },
  {
    "text": "browser you have ahead did you know the very first browser you ever had",
    "start": "119980",
    "end": "125040"
  },
  {
    "text": "it's called links right it's a text-based browser you can see it also",
    "start": "125040",
    "end": "130450"
  },
  {
    "text": "doesn't work because there is no internet but if you",
    "start": "130450",
    "end": "135620"
  },
  {
    "text": "would open the document in that project would look exactly the same as in Chrome so that 30 years of backwards",
    "start": "135620",
    "end": "140930"
  },
  {
    "text": "compatibility and they even had dark mode back in the day so I think you know that's pretty good",
    "start": "140930",
    "end": "146740"
  },
  {
    "text": "luckily for the rest of the talk I don't need internet ok so my name is Dominic",
    "start": "146740",
    "end": "154400"
  },
  {
    "text": "and you know I'm I'm a security consultant and I also work on this thing",
    "start": "154400",
    "end": "159920"
  },
  {
    "text": "called identity server which is an open-source implementation of oak MIDI connector no off so I get to implement",
    "start": "159920",
    "end": "165890"
  },
  {
    "text": "these protocols because you know that all started as a hobby project really because I thought you know you can only really claim you know how the protocols",
    "start": "165890",
    "end": "172010"
  },
  {
    "text": "work when you implement them yourself and that's what I did so",
    "start": "172010",
    "end": "177800"
  },
  {
    "text": "oh yeah and maybe together important thing is if you if you want to have two slides I downloaded them to this thing",
    "start": "177800",
    "end": "184100"
  },
  {
    "text": "called speaker tech comm slash lease privilege and then you can get the slides from there and many other slides okay so then that",
    "start": "184100",
    "end": "191210"
  },
  {
    "text": "the rough agenda is I want to give you a little bit of an overview where to go to if you're looking for security guidance",
    "start": "191210",
    "end": "196700"
  },
  {
    "text": "thought for these protocols then I want to as I said pick out some some concrete issues and solutions and then in the end",
    "start": "196700",
    "end": "203300"
  },
  {
    "text": "we're going to talk about what's going to happen with OAuth in the future so but first give you some context",
    "start": "203300",
    "end": "209980"
  },
  {
    "start": "207000",
    "end": "207000"
  },
  {
    "text": "basically web based authentication protocols the way we know them today all",
    "start": "209980",
    "end": "216020"
  },
  {
    "text": "had their start in 2005 and the very first protocol that really you know invented this pattern of you know you",
    "start": "216020",
    "end": "222620"
  },
  {
    "text": "have a browser you send the user somewhere that something sends you something back and that's your authentication or the token exchange",
    "start": "222620",
    "end": "228110"
  },
  {
    "text": "what's called sam'l to P right it's an old protocol as you can say it's like 15 years old",
    "start": "228110",
    "end": "233870"
  },
  {
    "text": "but it was only an authentication protocol because it didn't solve anything like access to API is or",
    "start": "233870",
    "end": "239660"
  },
  {
    "text": "delegating identity to api's do you know what because API is didn't exist by the time then the the first protocol that",
    "start": "239660",
    "end": "247820"
  },
  {
    "text": "actually took on this problem was called OAuth 1.0 again that's a long time ago",
    "start": "247820",
    "end": "252980"
  },
  {
    "text": "it made some assumptions that are probably not true anymore today it involved some pretty you know heavy",
    "start": "252980",
    "end": "259820"
  },
  {
    "text": "crypto it was very complicated to use for you know many people so the IETF",
    "start": "259820",
    "end": "265490"
  },
  {
    "text": "started this thing called a Worf 2.0 in 2012 which was a simplification of the old",
    "start": "265490",
    "end": "270860"
  },
  {
    "text": "over of 1.0 protocol and part of that simplification was basically less crypto",
    "start": "270860",
    "end": "276620"
  },
  {
    "text": "simplified flows - but to be honest also less security if you look at the security properties between 1.0 and 2.0",
    "start": "276620",
    "end": "284590"
  },
  {
    "text": "basically because they invented this thing called para tokens you know where basically you know if you have two token",
    "start": "284590",
    "end": "292010"
  },
  {
    "text": "you can talk to an API without cryptographic binding to the client that",
    "start": "292010",
    "end": "297760"
  },
  {
    "text": "requested the token in the first place so to be honest and maybe some of you have followed the trauma around that",
    "start": "298390",
    "end": "304250"
  },
  {
    "text": "that the spec offer of o of 2.0 he was so upset with the IETF you know taking",
    "start": "304250",
    "end": "309890"
  },
  {
    "text": "features and features and features a way to make it more easy to use that half a half a year before the spec was done he",
    "start": "309890",
    "end": "316400"
  },
  {
    "text": "just left and made this really popular talk on the Internet you can search for",
    "start": "316400",
    "end": "323090"
  },
  {
    "text": "it by putting the word or wharf and some of your favorite swear words in one sentence and you're going to find it but",
    "start": "323090",
    "end": "329300"
  },
  {
    "text": "part of that legacy from him is that he demanded that there must be a threat",
    "start": "329300",
    "end": "334820"
  },
  {
    "text": "model right because there are you can even if you implement a spec word by",
    "start": "334820",
    "end": "340880"
  },
  {
    "text": "words you can implement it in an insecure way so there must be an additional document on top that",
    "start": "340880",
    "end": "346040"
  },
  {
    "text": "basically looks at all of the security properties looks at the all of the attack scenarios that you know that you",
    "start": "346040",
    "end": "353210"
  },
  {
    "text": "could think of and you know tell people how to fix them but obviously since this document was written at the same time as",
    "start": "353210",
    "end": "360140"
  },
  {
    "text": "the protocol itself there was no no experience yet how will people use the protocol however people attacked a",
    "start": "360140",
    "end": "366560"
  },
  {
    "text": "protocol right so the threat model is if you think the OAuth spec is boring that",
    "start": "366560",
    "end": "372710"
  },
  {
    "text": "fret model is not much more exciting to be honest yeah because it you know as I said they didn't really know how that",
    "start": "372710",
    "end": "381290"
  },
  {
    "text": "thing will be broken in the future so there was that there's no actionable guidance here really it's just basically this could go wrong and this could go",
    "start": "381290",
    "end": "387740"
  },
  {
    "text": "wrong it just could go wrong and you have to fix it somehow okay so then you",
    "start": "387740",
    "end": "392930"
  },
  {
    "text": "know many other protocols came down the line actually someone recently just counted the pages of all of the",
    "start": "392930",
    "end": "399249"
  },
  {
    "text": "documents of all of the specs and realized it's double the size double the number of pages than Warren piece okay",
    "start": "399249",
    "end": "406209"
  },
  {
    "text": "so which you then decide which one is more exciting to read and now we saw oh",
    "start": "406209",
    "end": "414009"
  },
  {
    "text": "of being used in in places where we probably or where in 2012 nobody anticipated it going like financial",
    "start": "414009",
    "end": "420879"
  },
  {
    "text": "industry healthcare sector you know high-value scenarios and guess what as more high-value the scenarios get a more",
    "start": "420879",
    "end": "428139"
  },
  {
    "text": "creative attacker scared to find the problems right so there was like a",
    "start": "428139",
    "end": "434319"
  },
  {
    "text": "demand of giving us something better than just a raw threat model so if they started coming up with what they called",
    "start": "434319",
    "end": "440349"
  },
  {
    "text": "PC peace and PC P stands for best current practice okay and it's good that",
    "start": "440349",
    "end": "445509"
  },
  {
    "text": "the word current is in there because obviously as older as the document gets the current is you know it's less current right I'm still they're all you",
    "start": "445509",
    "end": "452769"
  },
  {
    "text": "know pretty new ish and the idea of that PCP was to give you as a developer real",
    "start": "452769",
    "end": "459009"
  },
  {
    "text": "actionable guidance like if you're doing this then you wanted to implement exactly like this because that's the",
    "start": "459009",
    "end": "464379"
  },
  {
    "text": "recommendation okay so that's the very first PCP that came out was the one for native apps that's been released in 2017",
    "start": "464379",
    "end": "472139"
  },
  {
    "text": "and very soon there will be a couple of new PC piece one is called Leo of two",
    "start": "472139",
    "end": "478179"
  },
  {
    "text": "security topics which is more like a general thing that update applies to all applications and the one that many many",
    "start": "478179",
    "end": "485019"
  },
  {
    "text": "people have been waiting for is called OAuth 2 for browser-based application for example because as we know that's",
    "start": "485019",
    "end": "490209"
  },
  {
    "text": "the most problematic type of client to secure and basically what this talk is about is to give you an overview of",
    "start": "490209",
    "end": "496809"
  },
  {
    "text": "these PCPs how they hang together and as I said hopefully encourage you to read",
    "start": "496809",
    "end": "502719"
  },
  {
    "text": "them because as I said yes more more to learn so yeah so basically we have to fret model like the mother of all BCPs",
    "start": "502719",
    "end": "509649"
  },
  {
    "text": "if you like we have 200 of two security best current practice and on top we have",
    "start": "509649",
    "end": "514990"
  },
  {
    "text": "two very specific ones if you're writing native apps or browser-based applications and the one thing they",
    "start": "514990",
    "end": "520419"
  },
  {
    "text": "sneaked in recently is two more what is about using chasing depth tokens with OAuth because you know in the beginning",
    "start": "520419",
    "end": "527350"
  },
  {
    "text": "ooofff did not specify a concrete token format they just said use a token right",
    "start": "527350",
    "end": "532630"
  },
  {
    "text": "but it's very common these days to use JSON web tokens for this so that's talking about this and they do these two",
    "start": "532630",
    "end": "539170"
  },
  {
    "text": "specs kind of go hand-in-hand together okay so how does an OAuth open ID connect",
    "start": "539170",
    "end": "546130"
  },
  {
    "text": "based system look like something like this right we have front end we have back ends we have backends for backends",
    "start": "546130",
    "end": "551200"
  },
  {
    "text": "wherever an arrow goes to there needs to be some authentication right so it turns",
    "start": "551200",
    "end": "557290"
  },
  {
    "text": "out omadi Connect is the less critical problem here because it's not giving you access to something it's only about",
    "start": "557290",
    "end": "563470"
  },
  {
    "text": "representing identity but whenever an arrow arrives at a Web API right that is",
    "start": "563470",
    "end": "570400"
  },
  {
    "text": "basically where potentially the right well there are access tokens used if they get stolen or you know somehow",
    "start": "570400",
    "end": "577390"
  },
  {
    "text": "misused then you can access resources maybe you know not legitimately",
    "start": "577390",
    "end": "583290"
  },
  {
    "text": "so but if you strip down this picture it really always looks like this right",
    "start": "583290",
    "end": "588460"
  },
  {
    "start": "586000",
    "end": "586000"
  },
  {
    "text": "everyo off based system looks like this you have a client which is the application you have a resource owner which I typically call the user you have",
    "start": "588460",
    "end": "595690"
  },
  {
    "text": "a resource server which is typically an API and you have to sync all the authorization server which is the thing that issues your tokens issues tokens to",
    "start": "595690",
    "end": "603010"
  },
  {
    "text": "the client I should be very specific to access the resource ok so if you think",
    "start": "603010",
    "end": "610180"
  },
  {
    "text": "about a security of such a system it's the first thing you should probably think about this who is gonna attack it",
    "start": "610180",
    "end": "616270"
  },
  {
    "text": "or what kind of a checker can we expect and you know what excuse me I've found the cheesiest symbol for an attacker on",
    "start": "616270",
    "end": "623920"
  },
  {
    "start": "621000",
    "end": "621000"
  },
  {
    "text": "the internet so I think that's how they look like I've never met one but I think that's how they look like so the very",
    "start": "623920",
    "end": "631060"
  },
  {
    "text": "temp the very first type of attack you should think about is basically if your infrastructure is compromised right",
    "start": "631060",
    "end": "637450"
  },
  {
    "text": "maybe you're not using TLS which would be a very big failure or maybe you have",
    "start": "637450",
    "end": "643300"
  },
  {
    "text": "TLS and it's compromised somehow reverse proxy is you know root certificates whatever or maybe even worth your DNS",
    "start": "643300",
    "end": "649930"
  },
  {
    "text": "infrastructure is compromised and to be honest with you that pretty much game over right that is something as",
    "start": "649930",
    "end": "655780"
  },
  {
    "text": "developers that we can't fix that that has to be done at the infrastructure level the next one that we probably",
    "start": "655780",
    "end": "662830"
  },
  {
    "text": "can't fix as you know developers is if the endpoints being compromised I mean you have to ask yourself okay why are they being",
    "start": "662830",
    "end": "668620"
  },
  {
    "text": "compromised somebody wrote bad code that with this attack model the reason they",
    "start": "668620",
    "end": "674290"
  },
  {
    "text": "are compromised it's not because of the protocols that's the idea right somebody found some other vulnerability on the",
    "start": "674290",
    "end": "679390"
  },
  {
    "text": "server or something they could compromise the API they could compromise the token service or maybe declined now",
    "start": "679390",
    "end": "685690"
  },
  {
    "text": "again that's not really what we want to talk about today a very interesting attack model which is",
    "start": "685690",
    "end": "692350"
  },
  {
    "text": "in my opinion like the battleground of the future is basically if attackers can",
    "start": "692350",
    "end": "698050"
  },
  {
    "text": "register additional infrastructure yes maybe they can bring up rogue clients or",
    "start": "698050",
    "end": "703540"
  },
  {
    "text": "rogue api's or rogue authorization servers into the system and even worse",
    "start": "703540",
    "end": "708550"
  },
  {
    "text": "maybe take they can register the rogue client with the legitimate authorization server or have the legitimate client",
    "start": "708550",
    "end": "715450"
  },
  {
    "text": "talk to the rogue authorization server you know these kinds of combinations where you know still the protocol might",
    "start": "715450",
    "end": "722380"
  },
  {
    "text": "be completely spec compliant but you are now hitting a scenario that you haven't thought about and this might confuse you",
    "start": "722380",
    "end": "728320"
  },
  {
    "text": "yeah and that is what we see these days with very targeted attacks yeah when somebody is specifically targets a",
    "start": "728320",
    "end": "733930"
  },
  {
    "text": "certain company that is you know that's where many things go on but sadly enough",
    "start": "733930",
    "end": "741930"
  },
  {
    "text": "like the 80% of all the vulnerabilities are just implementation mistakes right",
    "start": "741930",
    "end": "748200"
  },
  {
    "text": "basically the idea is that an attacker can read but not modify the content of",
    "start": "748200",
    "end": "753850"
  },
  {
    "text": "the authorization request or response and that might be because we have open redirect us in our code yeah we have we",
    "start": "753850",
    "end": "760120"
  },
  {
    "text": "are leaking data yeah maybe in log files maybe in the browser history maybe in in proxies maybe you have something on the",
    "start": "760120",
    "end": "767500"
  },
  {
    "text": "phone that intercepts the call backs between applications and so on that is by far the most common problem we see",
    "start": "767500",
    "end": "773770"
  },
  {
    "text": "and the good news is they are all just programming errors and we can fix them okay good so this these pcps have been",
    "start": "773770",
    "end": "783730"
  },
  {
    "text": "around for a while and no one really took too much attention and unless one",
    "start": "783730",
    "end": "788770"
  },
  {
    "text": "very respected colleague of mine tossed and polished it wrote a blog post he",
    "start": "788770",
    "end": "794080"
  },
  {
    "text": "said like you should stop using the or of implicit grant and he made it very clear by scary",
    "start": "794080",
    "end": "800060"
  },
  {
    "text": "people say like if you don't your health records might be leaked or someone is initiating payment from your bank",
    "start": "800060",
    "end": "806120"
  },
  {
    "text": "account yeah and you can only imagine what happened next day right I got",
    "start": "806120",
    "end": "812150"
  },
  {
    "text": "emails and phone calls from companies and customers saying hey have you read this blog post there's a new vulnerability in OAuth and you last week",
    "start": "812150",
    "end": "821000"
  },
  {
    "text": "you recommended us using the OAuth implicit flow are you aware of that and",
    "start": "821000",
    "end": "826100"
  },
  {
    "text": "I had to do a lot of explaining saying this is not a new vulnerability right",
    "start": "826100",
    "end": "832010"
  },
  {
    "text": "from the start if you would have read the threat model of OAuth it says the implicit flow is a simplified model made for simplified",
    "start": "832010",
    "end": "839300"
  },
  {
    "text": "clients which were called by the time JavaScript runs right and it's",
    "start": "839300",
    "end": "844670"
  },
  {
    "text": "error-prone you can protect against the weaknesses of the implicit flow but you have to write code for that and you have",
    "start": "844670",
    "end": "851300"
  },
  {
    "text": "to understand those weaknesses yeah so long story short this blog post started",
    "start": "851300",
    "end": "856610"
  },
  {
    "text": "the whole thing and now the idea is that the implicit flow will be deprecated okay just to recap very quickly what's",
    "start": "856610",
    "end": "862970"
  },
  {
    "start": "858000",
    "end": "858000"
  },
  {
    "text": "the implicit flow it's basically as I said a simplified version of OAuth that was built for browsers that did not",
    "start": "862970",
    "end": "868970"
  },
  {
    "text": "support cross-origin Ajax calls right because in 2012 we didn't of course by the time so we couldn't do cross-origin",
    "start": "868970",
    "end": "875690"
  },
  {
    "text": "Ajax calls so they send around the tokens on the URL okay that was the only",
    "start": "875690",
    "end": "882440"
  },
  {
    "start": "879000",
    "end": "879000"
  },
  {
    "text": "thing that was working as you can imagine that this is error-prone this can leak data if you don't protect",
    "start": "882440",
    "end": "888050"
  },
  {
    "text": "against it but now in 2020 we do have",
    "start": "888050",
    "end": "893540"
  },
  {
    "text": "cross-origin Ajax calls and there's no need anymore to use this simplified version of it so don't use it anymore okay don't use it while we are you know",
    "start": "893540",
    "end": "902600"
  },
  {
    "text": "and you know that's the summary of the reasons I just told you it's error-prone while we are at deprecating flows the",
    "start": "902600",
    "end": "910520"
  },
  {
    "text": "next flow that has been deprecated is the so called password trend you know the password trend is this approach",
    "start": "910520",
    "end": "917390"
  },
  {
    "text": "where you collect the clutter that the users credentials in the front end then send the credit to the server and then",
    "start": "917390",
    "end": "925070"
  },
  {
    "text": "you get a token back or the the real name is the resource owner password",
    "start": "925070",
    "end": "930230"
  },
  {
    "text": "grant now as they call it this one is also outdated for a couple of reasons",
    "start": "930230",
    "end": "936720"
  },
  {
    "text": "right I mean the more you educate your users to type in passwords in different places",
    "start": "936720",
    "end": "941790"
  },
  {
    "text": "research shows the more they are prone for you know falling for phishing attacks for example because they just",
    "start": "941790",
    "end": "947040"
  },
  {
    "text": "have to type in the password so often then we don't think about it anymore right but if you only have this one",
    "start": "947040",
    "end": "952050"
  },
  {
    "text": "place that you asked for passwords and that it's not happening that frequently then maybe you think about why do I have",
    "start": "952050",
    "end": "957570"
  },
  {
    "text": "to type in my password here maybe that's not a legitimate place to do that yeah also you know that flow is not",
    "start": "957570",
    "end": "965670"
  },
  {
    "text": "compatible with any of the modern authentication techniques like Fido and two-factor authentication and Federation",
    "start": "965670",
    "end": "971190"
  },
  {
    "text": "and so on so yeah stop stop using that the nice thing",
    "start": "971190",
    "end": "977820"
  },
  {
    "text": "about deprecating flows that you know where may be useful eight years ago but",
    "start": "977820",
    "end": "985710"
  },
  {
    "text": "are not that useful anymore today is is to it drastically simplifies an OAuth based",
    "start": "985710",
    "end": "992070"
  },
  {
    "text": "system right so one year ago if you would have asked me which flow do I have to use for an application type that",
    "start": "992070",
    "end": "998400"
  },
  {
    "text": "would kind of be like your decision matrix right but now with deprecation of",
    "start": "998400",
    "end": "1003500"
  },
  {
    "text": "all of these flows actually it becomes very easy okay so the consensus is that",
    "start": "1003500",
    "end": "1010610"
  },
  {
    "start": "1007000",
    "end": "1007000"
  },
  {
    "text": "we really only need two flows because we really only write two types of",
    "start": "1010610",
    "end": "1016130"
  },
  {
    "text": "applications one is a non-interactive application which is just machine to machine communication we have a flow for",
    "start": "1016130",
    "end": "1022370"
  },
  {
    "text": "that called the client credential flow and the other one is an interactive application basically meaning a user is",
    "start": "1022370",
    "end": "1027890"
  },
  {
    "text": "involved sits in front of a computer for all of these types of scenarios we have",
    "start": "1027890",
    "end": "1033949"
  },
  {
    "text": "this thing called the authorization code flow which has been around for a very long time guess what your authorization code flow on its own is vulnerable to",
    "start": "1033950",
    "end": "1040610"
  },
  {
    "text": "something which I'll show you in a second that's why there is a thing on top called pixie as the cool kids call",
    "start": "1040610",
    "end": "1046400"
  },
  {
    "text": "it which stands for proof key for code exchange and I'm gonna show you in a second term how that works okay so let's",
    "start": "1046400",
    "end": "1054200"
  },
  {
    "start": "1054000",
    "end": "1054000"
  },
  {
    "text": "start with the machine-to-machine scenario because that's the simpler one to you know to understand it's very simple you have a client you have the",
    "start": "1054200",
    "end": "1061040"
  },
  {
    "text": "token service you have an API the client authenticates with the token service you know by using client ID and seek",
    "start": "1061040",
    "end": "1067130"
  },
  {
    "text": "it asks for access to a resource which is typically an API and if that is all",
    "start": "1067130",
    "end": "1072350"
  },
  {
    "text": "the cheat he gets back an access token and then uses that access token to call the API right that's as easy as it is",
    "start": "1072350",
    "end": "1079210"
  },
  {
    "text": "the first thing I want to put your attention to is client secrets right so again you know of client secret is an",
    "start": "1079210",
    "end": "1085640"
  },
  {
    "text": "abstraction yeah it says the client uses some sort of secret now to authenticate with the server and obviously the most",
    "start": "1085640",
    "end": "1092450"
  },
  {
    "text": "simplest secret that at least many people think is what they call a shared secret right so basically the client has",
    "start": "1092450",
    "end": "1098390"
  },
  {
    "start": "1096000",
    "end": "1096000"
  },
  {
    "text": "has a value the server has a value the client sends it over the wire right and if they match the client is reclaims to",
    "start": "1098390",
    "end": "1105590"
  },
  {
    "text": "be obviously a shared secret is not really a secret right because you shared it yeah but that's another story I guess",
    "start": "1105590",
    "end": "1112240"
  },
  {
    "text": "but shared secrets only look easier on the outside once you build a real system",
    "start": "1112240",
    "end": "1118520"
  },
  {
    "text": "of shared secrets right configuration management is hard you have to think about key rotation because maybe you",
    "start": "1118520",
    "end": "1124250"
  },
  {
    "text": "don't want to keep the same secret for all the time how do you store them how do you deal with them at development",
    "start": "1124250",
    "end": "1129560"
  },
  {
    "text": "time how you make sure they don't end up in your github account right all these things make make shared secrets harder",
    "start": "1129560",
    "end": "1137360"
  },
  {
    "text": "to use if you have to use them make sure they have a high entropy like goo it for",
    "start": "1137360",
    "end": "1142730"
  },
  {
    "text": "example you know random strings I mean these are in essence they are passwords for machines right machines don't need",
    "start": "1142730",
    "end": "1148460"
  },
  {
    "text": "easy to remember passwords they can use hard to remember passwords never ever",
    "start": "1148460",
    "end": "1153710"
  },
  {
    "text": "store them in clear text on your server you always use non-reversible encryption or also called hashing em so that if",
    "start": "1153710",
    "end": "1160310"
  },
  {
    "text": "somebody actually compromises your server database they don't get like a list of all of your client secrets that",
    "start": "1160310",
    "end": "1165470"
  },
  {
    "text": "should not happen ma'am since they are high entropy you don't have to provide things like stretching algorithms right",
    "start": "1165470",
    "end": "1171320"
  },
  {
    "text": "you only do that for passwords for humans because they are typically bad if",
    "start": "1171320",
    "end": "1177410"
  },
  {
    "text": "you have the luxury of moving away from that go to asymmetric keys right public",
    "start": "1177410",
    "end": "1182630"
  },
  {
    "text": "private key pairs where the client has the private key the server has the public here the server does not need to",
    "start": "1182630",
    "end": "1189950"
  },
  {
    "text": "store any secret at all because public keys are not secret the client creates some data typically a JSON web token",
    "start": "1189950",
    "end": "1196760"
  },
  {
    "text": "signs that token with the private key sends that json web token over the wire",
    "start": "1196760",
    "end": "1202110"
  },
  {
    "text": "no secret goes over the wire right only the signed artifact so to speak so that",
    "start": "1202110",
    "end": "1207570"
  },
  {
    "text": "that's much better yeah again if you if someone has access to your network for example it they won't see those secrets",
    "start": "1207570",
    "end": "1212909"
  },
  {
    "text": "yeah and the most common ways of doing that today is the signed shots you know",
    "start": "1212909",
    "end": "1220259"
  },
  {
    "text": "chasing laptop as I just said or using mutual TLS yes a mutual TLS has kind of like a renascence the last years it was",
    "start": "1220259",
    "end": "1227850"
  },
  {
    "text": "really hard to deploy you know when people think oh yeah CAS and PKI and so",
    "start": "1227850",
    "end": "1232889"
  },
  {
    "text": "on this has all gotten much much easier these days so you know maybe you want to reconsider mutual TLS the nice thing",
    "start": "1232889",
    "end": "1239730"
  },
  {
    "text": "about mutual TLS is it provides us with a mechanism to buy into the token to the",
    "start": "1239730",
    "end": "1244799"
  },
  {
    "start": "1244000",
    "end": "1244000"
  },
  {
    "text": "client right so I said in the beginning there are tokens are a simplified",
    "start": "1244799",
    "end": "1249869"
  },
  {
    "text": "version of a token where whoever has the token like it's it's like money you find on the street right if I find some money",
    "start": "1249869",
    "end": "1256139"
  },
  {
    "text": "I can use it that's a pair of token there is a credit card it's more like pound to the owner but if a picture or a",
    "start": "1256139",
    "end": "1261809"
  },
  {
    "text": "signature or a pin maybe right same same analogy if you're using neutral TLS",
    "start": "1261809",
    "end": "1268919"
  },
  {
    "text": "that's really powerful because when the client asks for a token using the mutual TLS connection the server can read the",
    "start": "1268919",
    "end": "1276619"
  },
  {
    "text": "thumbprint of the client certificate can embed the value of that function into the access token and when then the",
    "start": "1276619",
    "end": "1283259"
  },
  {
    "text": "client opens the connection to the API he will use the same client certificate so what the API can do is read the",
    "start": "1283259",
    "end": "1289950"
  },
  {
    "text": "thumbprint from the TLS connection compare a value in the token and only if they match the client has proven that he",
    "start": "1289950",
    "end": "1295710"
  },
  {
    "text": "was the client that asked for the token in the first place and even attack I would be able to steal that token",
    "start": "1295710",
    "end": "1301529"
  },
  {
    "text": "leaking whatever he would not have that private key so he couldn't use the token right so that's the way to go okay",
    "start": "1301529",
    "end": "1309529"
  },
  {
    "text": "talking about chasing up tokens ma'am they've become massively massively",
    "start": "1309860",
    "end": "1315809"
  },
  {
    "text": "popular right so as I said when Olaf was specified chasing laptops didn't even exist right",
    "start": "1315809",
    "end": "1321779"
  },
  {
    "text": "but over the last five years or so you know they became widely available Jason is the you know data format of",
    "start": "1321779",
    "end": "1327899"
  },
  {
    "text": "choice I guess chasing their token libraries are available everywhere I'm so people started using chasing their tokens all",
    "start": "1327899",
    "end": "1334350"
  },
  {
    "text": "a place right in oak MediConnect we have identity tokens we have access token to know off we have lockout tokens we have",
    "start": "1334350",
    "end": "1340440"
  },
  {
    "text": "security events and then people come up with all kinds of you know you know basically di-did the nice thing about",
    "start": "1340440",
    "end": "1345929"
  },
  {
    "text": "chasing web tokens is it's a way to protect a JSON object so if you want to",
    "start": "1345929",
    "end": "1351000"
  },
  {
    "text": "express anything as a JSON object but need like integrity protection and authenticity chasing their tokens are",
    "start": "1351000",
    "end": "1357510"
  },
  {
    "text": "the way to go that's a very typical chase in-depth rogen right it's a header a payload and so on they are kind of",
    "start": "1357510",
    "end": "1364200"
  },
  {
    "text": "like they're a victim of their own popularity kind of yeah because that's from the oak MediConnect",
    "start": "1364200",
    "end": "1371130"
  },
  {
    "text": "back yeah they they use a JSON web token to send as a logout token so these are",
    "start": "1371130",
    "end": "1376140"
  },
  {
    "text": "the validation steps you have to do yeah so let's have a look validate the signature okay make sense validate the",
    "start": "1376140",
    "end": "1381750"
  },
  {
    "text": "token contains a sub claim it's a big claim okay make sense verify that the token does not contain a nonce claim so",
    "start": "1381750",
    "end": "1388950"
  },
  {
    "text": "that's that's weird right so the reason why they have that in there is because if that token would contain a nonce",
    "start": "1388950",
    "end": "1394830"
  },
  {
    "text": "claim it would be indistinguishable from an identity token so somebody could send an identity token to the lockout",
    "start": "1394830",
    "end": "1400799"
  },
  {
    "text": "endpoint and they will lock out even if he doesn't have a lookout token right so and the problem with that is that they",
    "start": "1400799",
    "end": "1408030"
  },
  {
    "text": "all look pretty much the same all right so if you start if you're using M JSON",
    "start": "1408030",
    "end": "1413250"
  },
  {
    "text": "web tokens then you should start using what they call typed JSON web tokens yeah so you see the type the the type",
    "start": "1413250",
    "end": "1420929"
  },
  {
    "text": "claim or value you see at the top normally this just says JWT right but",
    "start": "1420929",
    "end": "1427140"
  },
  {
    "text": "the new spec says if if this token is a is an access token call it 80 plus JWT",
    "start": "1427140",
    "end": "1433710"
  },
  {
    "text": "and that is roughly around the same idea as content types or you know hypermedia",
    "start": "1433710",
    "end": "1439470"
  },
  {
    "text": "types in the web so whenever you come up with a token or a thing that you want to",
    "start": "1439470",
    "end": "1444510"
  },
  {
    "text": "represent as a JSON web token come up with a type so that the recipient can actually check that value make sure hate",
    "start": "1444510",
    "end": "1451110"
  },
  {
    "text": "is this really what I'm expecting and not something that is also adjacent their token and look just very similar",
    "start": "1451110",
    "end": "1456240"
  },
  {
    "text": "to what I'm expecting okay so starting with the latest version of identity server for example all of our access",
    "start": "1456240",
    "end": "1461669"
  },
  {
    "text": "tokens look like this they have 280 plus JWT on top and I would encourage your doing the same",
    "start": "1461669",
    "end": "1467420"
  },
  {
    "text": "if you have your own tokens okay let's switch our attention to interactive",
    "start": "1467420",
    "end": "1472970"
  },
  {
    "start": "1470000",
    "end": "1470000"
  },
  {
    "text": "applications which are much easier to attack because they are more complicated so if the application is interactive",
    "start": "1472970",
    "end": "1479960"
  },
  {
    "text": "there will be always like a two's two-part process right one is the the interactive part that helped it's",
    "start": "1479960",
    "end": "1485570"
  },
  {
    "text": "happening in the browser where you know a user can see some sort of UI and then the non interactive part where on the",
    "start": "1485570",
    "end": "1491240"
  },
  {
    "text": "back-channel you're getting the tokens now proud of a crate right because they",
    "start": "1491240",
    "end": "1496280"
  },
  {
    "text": "can show UI and they follow redirects right but processes are very problematic why well because they show UI and they",
    "start": "1496280",
    "end": "1503600"
  },
  {
    "text": "follow redirects yeah sometimes to the wrong place yeah and that's exactly the",
    "start": "1503600",
    "end": "1508670"
  },
  {
    "text": "problem here but you know I'll you know in a nutshell the way this works is if",
    "start": "1508670",
    "end": "1515120"
  },
  {
    "text": "you open the front channel connection wire the browser that actually authorized request that goes to the",
    "start": "1515120",
    "end": "1520550"
  },
  {
    "text": "token server the talks ever shows the UI and everything that's needed then when that is done the token service returns",
    "start": "1520550",
    "end": "1526790"
  },
  {
    "text": "the so called authorization code back to the client application then the client application opens the back-channel",
    "start": "1526790",
    "end": "1532250"
  },
  {
    "text": "communication to turn that code into tokens okay so that the client sends the",
    "start": "1532250",
    "end": "1538160"
  },
  {
    "text": "code the secret and so on and then ultimately gets back his access token so yeah that's you know the way this flow",
    "start": "1538160",
    "end": "1544250"
  },
  {
    "text": "works now the spec says you know you can",
    "start": "1544250",
    "end": "1551390"
  },
  {
    "text": "imagine that this this callback here coming from the server back here is pretty much sensitive right because that",
    "start": "1551390",
    "end": "1557780"
  },
  {
    "text": "that delivers the artifact back to your client application and the spec says very very clearly you have to whitelist",
    "start": "1557780",
    "end": "1566060"
  },
  {
    "text": "these what I call redirect you arise and when the client asks for that or sends",
    "start": "1566060",
    "end": "1572840"
  },
  {
    "text": "you that URI you have to do and accepts a string matching between what you have registered in your database and what the",
    "start": "1572840",
    "end": "1579560"
  },
  {
    "text": "client wants and if they don't match don't accept it okay that's what the spec says very clear yeah guess what",
    "start": "1579560",
    "end": "1587330"
  },
  {
    "text": "people do you know is that really necessary can't be make it more you know",
    "start": "1587330",
    "end": "1593120"
  },
  {
    "start": "1588000",
    "end": "1588000"
  },
  {
    "text": "like more flexible for example and these are two things I saw in real life yeah for example have to the redirect URI",
    "start": "1593120",
    "end": "1600290"
  },
  {
    "text": "being star at my app calm so we can use any sub domain in indebt DNS namespace right why",
    "start": "1600290",
    "end": "1607220"
  },
  {
    "text": "would that be problematic well generally speaking right the more flexibility you",
    "start": "1607220",
    "end": "1613850"
  },
  {
    "text": "allow the bigger your attack surface gets where tokens or codes can be delivered to where you have an",
    "start": "1613850",
    "end": "1620300"
  },
  {
    "text": "implementation flaw if you only have this one endpoint that has only one purpose in life is handling the callback",
    "start": "1620300",
    "end": "1628310"
  },
  {
    "text": "then you can you know check that code much better than having any endpoint on any subdomain okay that actually",
    "start": "1628310",
    "end": "1636110"
  },
  {
    "text": "happened last year to you know a EA Electronic Arts so what they did was you know some EA developer went to Asha",
    "start": "1636110",
    "end": "1642530"
  },
  {
    "text": "created a website that that was called 1 2 3 and Asha websites dotnet right then this was done it was the new peelings",
    "start": "1642530",
    "end": "1648770"
  },
  {
    "text": "site stir then at EA someone made a DNS entry to point billing dot EA dot-com to",
    "start": "1648770",
    "end": "1654770"
  },
  {
    "text": "one to free as a website's dotnet right that's what they call custom domains or custom host names are saying yeah all is",
    "start": "1654770",
    "end": "1661850"
  },
  {
    "text": "good now after a year they decided to remove the peeling website and move it somewhere else so they shut down the",
    "start": "1661850",
    "end": "1667850"
  },
  {
    "text": "Asha website but no one removed the DNS entry so now there was a DNS entry",
    "start": "1667850",
    "end": "1674450"
  },
  {
    "text": "hanging there that points to a non-existent website you can query a DNS server and all they had to do was",
    "start": "1674450",
    "end": "1679970"
  },
  {
    "text": "register one to free it Asia web sites dotnet which which was still free by the time and then you can run code under the",
    "start": "1679970",
    "end": "1686210"
  },
  {
    "text": "EA domain right that's called subdomain takeover you know it sounds funny but it's it's",
    "start": "1686210",
    "end": "1693440"
  },
  {
    "text": "pretty effective yes so don't do that ma'am yet the other thing I've seen in",
    "start": "1693440",
    "end": "1699320"
  },
  {
    "text": "real life is it's some site or comm slash star ok we fix the DNS name but",
    "start": "1699320",
    "end": "1705140"
  },
  {
    "text": "any page on that server will do that exactly happened to actually get up and Facebook and some other big companies so",
    "start": "1705140",
    "end": "1711920"
  },
  {
    "text": "basically some some pretty smart guy found that out he basically sent out emails pointing to",
    "start": "1711920",
    "end": "1717760"
  },
  {
    "text": "a URL on that site let's imagine it's facebook.com slash my Facebook page ok",
    "start": "1717760",
    "end": "1725750"
  },
  {
    "text": "so he send out his emails people were clicking it they came to Facebook they probably were locked in already so they",
    "start": "1725750",
    "end": "1731090"
  },
  {
    "text": "didn't see their login page it just sent the code directly to that callback you it was this attackers page and guess",
    "start": "1731090",
    "end": "1737960"
  },
  {
    "text": "what he did on that page he posted a picture that came from a server that he",
    "start": "1737960",
    "end": "1743420"
  },
  {
    "start": "1741000",
    "end": "1741000"
  },
  {
    "text": "controls okay so now the browser arrives at the page he loads the images he goes",
    "start": "1743420",
    "end": "1749690"
  },
  {
    "text": "out to evil calm what is the browser sending a referral",
    "start": "1749690",
    "end": "1756590"
  },
  {
    "text": "header right and on that referer header is the original URL which has the code and now",
    "start": "1756590",
    "end": "1763520"
  },
  {
    "text": "all the guy had to do is look at his log files of his depth server and he got all of the codes that were produced as part",
    "start": "1763520",
    "end": "1769700"
  },
  {
    "text": "of the authentication process that's pretty cool right yeah you have to give",
    "start": "1769700",
    "end": "1774920"
  },
  {
    "text": "him respect for that I think now you say why is this dangerous why didn't you",
    "start": "1774920",
    "end": "1780260"
  },
  {
    "text": "just say I need to have a client secret to be able to turn that code back into a token yeah do you there's another attack",
    "start": "1780260",
    "end": "1789470"
  },
  {
    "text": "which is called authorization code injection so the idea is yes you are",
    "start": "1789470",
    "end": "1794480"
  },
  {
    "start": "1790000",
    "end": "1790000"
  },
  {
    "text": "right that the attacker himself cannot turn a code into a token because he's missing the client secret but what if he",
    "start": "1794480",
    "end": "1801530"
  },
  {
    "text": "now has harvested those those codes okay and now he goes to the legitimate website starts the authentication",
    "start": "1801530",
    "end": "1807860"
  },
  {
    "text": "process right and on the way back he injects the stolen code what will the",
    "start": "1807860",
    "end": "1814760"
  },
  {
    "text": "client do well he will happily take that stolen code use his client ID and secret and turn it into tokens right and now",
    "start": "1814760",
    "end": "1821929"
  },
  {
    "text": "I'm locked in as the victim makes sense",
    "start": "1821929",
    "end": "1827290"
  },
  {
    "text": "yeah that's also pretty clever",
    "start": "1827290",
    "end": "1832370"
  },
  {
    "text": "this attack was became published after the initial a Wharf spec so the authorization code flow has no",
    "start": "1832370",
    "end": "1838700"
  },
  {
    "text": "protection against this yeah so they have added an additional thing as I said called proof key for code exchange or",
    "start": "1838700",
    "end": "1844340"
  },
  {
    "start": "1843000",
    "end": "1843000"
  },
  {
    "text": "pixie and basically it's a simple extension to the code flow which which solves the problem so the idea is the",
    "start": "1844340",
    "end": "1850250"
  },
  {
    "text": "client before he starts the authorization request he creates a random number that's a secret that only the client knows he writes a random",
    "start": "1850250",
    "end": "1856550"
  },
  {
    "text": "number and then he hashes that random number so that the random number is called the code verifier the hashed",
    "start": "1856550",
    "end": "1862280"
  },
  {
    "text": "version is called the code challenge so now he's sending the hashed version of that number to the authorized request",
    "start": "1862280",
    "end": "1868999"
  },
  {
    "text": "okay so the code comes back right and then on the back channel he's sending",
    "start": "1868999",
    "end": "1874820"
  },
  {
    "text": "the clear text version of the random number so now the server has both the hashed version and the clear text",
    "start": "1874820",
    "end": "1880340"
  },
  {
    "text": "version so he hashes the clear text version if the hashes match the prod that the client has proven that he's the",
    "start": "1880340",
    "end": "1886519"
  },
  {
    "text": "same client on the front channel as he is on the back channel okay so now if I would now come with my",
    "start": "1886519",
    "end": "1891710"
  },
  {
    "text": "stolen code that stolen code would have a different code challenge associated",
    "start": "1891710",
    "end": "1896720"
  },
  {
    "text": "with it than the one I'm gonna generate they will not match for the server will reject the request okay so you have to",
    "start": "1896720",
    "end": "1903649"
  },
  {
    "text": "use that if using authorization code flow because that's the only way to fix the problem well that's the most common",
    "start": "1903649",
    "end": "1908749"
  },
  {
    "text": "way to fix the problem let's put it this way okay so let's pick C so as a summary now",
    "start": "1908749",
    "end": "1916330"
  },
  {
    "start": "1914000",
    "end": "1914000"
  },
  {
    "text": "always do exact matching of URLs never allow any flexibility don't think you",
    "start": "1916330",
    "end": "1923239"
  },
  {
    "text": "are clever because you can use regular expressions okay we all know we all failed with that at some point in our",
    "start": "1923239",
    "end": "1929599"
  },
  {
    "text": "career right where we thought I can master them beware of open who directors don't build",
    "start": "1929599",
    "end": "1935989"
  },
  {
    "text": "build pages that somehow forward traffic to another thing based on input right that's called an open director that",
    "start": "1935989",
    "end": "1942320"
  },
  {
    "text": "might leak your data always use pick C always use content security policy",
    "start": "1942320",
    "end": "1947830"
  },
  {
    "text": "[Music] immediately invalidate authorization codes after they've been used make them",
    "start": "1947830",
    "end": "1953269"
  },
  {
    "text": "one-time-only tokens and you know what a very simple and effective thing is use refer a policy is to make sure that your",
    "start": "1953269",
    "end": "1959299"
  },
  {
    "text": "browser doesn't send referral headers right that's just a simple fix that could have saved Facebook of course okay",
    "start": "1959299",
    "end": "1968379"
  },
  {
    "text": "now let's look at something which is much more advanced than I just showed you okay that is actually that blew my",
    "start": "1968379",
    "end": "1975649"
  },
  {
    "start": "1969000",
    "end": "1969000"
  },
  {
    "text": "mind the very first time I saw it and I had to read it like five times to understand it it's called a mix up",
    "start": "1975649",
    "end": "1980989"
  },
  {
    "text": "attack yeah and the idea of that mix of attack is is that your client application trusts more than one",
    "start": "1980989",
    "end": "1987229"
  },
  {
    "text": "external provider okay that might be the client itself it might be your Federation gauge where you're running",
    "start": "1987229",
    "end": "1992450"
  },
  {
    "text": "okay so let's say you allow registration of providers maybe you're running a",
    "start": "1992450",
    "end": "1998419"
  },
  {
    "text": "software as a service product and the customer can self-register their own authentication",
    "start": "1998419",
    "end": "2004420"
  },
  {
    "text": "system because they want to get single sign-on right so now you have multiple things here and maybe one of them is not",
    "start": "2004420",
    "end": "2009640"
  },
  {
    "text": "so trusted as the other yeah so they call it the attacker authorization server and honest authorization server",
    "start": "2009640",
    "end": "2016930"
  },
  {
    "text": "okay so this very first very end of the mix-up attack is you know has some has",
    "start": "2016930",
    "end": "2023290"
  },
  {
    "text": "some assumptions but it basically works like this you know the user clicks a",
    "start": "2023290",
    "end": "2028300"
  },
  {
    "text": "link he wants to log in with the honest STS now the attacker somehow has access to the network and he can on the fly",
    "start": "2028300",
    "end": "2035230"
  },
  {
    "text": "change that to login with the attack IIST yes okay so now the client will say",
    "start": "2035230",
    "end": "2041800"
  },
  {
    "text": "ok he clicked the attacker SDS link and then we'll send him back a redirect back to the attacker STS on the way back the",
    "start": "2041800",
    "end": "2048730"
  },
  {
    "text": "attacker switches back that thing to do a redirect to the honest test yes okay",
    "start": "2048730",
    "end": "2054129"
  },
  {
    "text": "so is it already hurting yeah I hope so here now the the browser will may do a",
    "start": "2054130",
    "end": "2061990"
  },
  {
    "text": "redirect to the honest STS will authenticate he will get back a code the",
    "start": "2061990",
    "end": "2067450"
  },
  {
    "text": "code will travel back to the client where does the client now think he has to send his client ID in secret to to",
    "start": "2067450",
    "end": "2076480"
  },
  {
    "text": "the attacker STS okay and now the attack is TS can just use the code in the secret and so on to get",
    "start": "2076480",
    "end": "2082690"
  },
  {
    "text": "a token no now you might say huh that means he has network access right",
    "start": "2082690",
    "end": "2089590"
  },
  {
    "text": "and if he has network access maybe ten this is not my biggest problem and yeah I agree if partially the next variant of",
    "start": "2089590",
    "end": "2097120"
  },
  {
    "text": "that requires no network access okay it's a little bit different so in this",
    "start": "2097120",
    "end": "2102610"
  },
  {
    "text": "case imagine the attacker has registered in STS which looks like something that somebody wants to use yeah so they click",
    "start": "2102610",
    "end": "2109240"
  },
  {
    "text": "the wrong button in the UI for the attack is TS right so the redirect goes",
    "start": "2109240",
    "end": "2115000"
  },
  {
    "text": "to the attacker STS okay that looks good now the attacker STS turns around changes his client ID",
    "start": "2115000",
    "end": "2121690"
  },
  {
    "text": "and and redirect URI in everything and forwards the call to the honest test yes so now the user sees the real login page",
    "start": "2121690",
    "end": "2129610"
  },
  {
    "text": "of the real thing he fought he's talking to so now the honest STS comes back to",
    "start": "2129610",
    "end": "2134650"
  },
  {
    "text": "client and where does the client send a client that he in secret to the attacker",
    "start": "2134650",
    "end": "2142359"
  },
  {
    "text": "yes okay so yes that is nothing made up that really happened okay",
    "start": "2142359",
    "end": "2148920"
  },
  {
    "text": "the good news is yeah if you are using a good framework okay you are properly",
    "start": "2148920",
    "end": "2155650"
  },
  {
    "start": "2154000",
    "end": "2154000"
  },
  {
    "text": "secure already but let you know I've reviewed so many hand-rolled or of",
    "start": "2155650",
    "end": "2160960"
  },
  {
    "text": "implementations in my life that definitely were not secured against this attack but basically that the fix is",
    "start": "2160960",
    "end": "2166990"
  },
  {
    "text": "pretty simple das needs to always remember where he's going to he needs to have a s specific",
    "start": "2166990",
    "end": "2173650"
  },
  {
    "text": "callback URLs but that only can process the this specific a s and then make sure",
    "start": "2173650",
    "end": "2179619"
  },
  {
    "text": "they match okay so if you're using HP nerdcore for example they have a built-in countermeasure and to be honest",
    "start": "2179619",
    "end": "2185710"
  },
  {
    "start": "2184000",
    "end": "2184000"
  },
  {
    "text": "this was built even before the attack was known so maybe it's a bit like secure by accident maybe not maybe",
    "start": "2185710",
    "end": "2191440"
  },
  {
    "text": "someone was really forth looking that's even in in katana already yeah so it's",
    "start": "2191440",
    "end": "2197559"
  },
  {
    "text": "it's it's actually around for a long time the way this works in a spinnaker is that each external provider must have",
    "start": "2197559",
    "end": "2205359"
  },
  {
    "text": "a unique name and a unique callback URL okay so when they now do the authorized",
    "start": "2205359",
    "end": "2210849"
  },
  {
    "text": "request out to the provider they basically create the challenge then they create a correlation ID which is a",
    "start": "2210849",
    "end": "2217390"
  },
  {
    "text": "random number and then they encrypt and sign that correlation ID on the state",
    "start": "2217390",
    "end": "2222579"
  },
  {
    "text": "parameter so it basically round trips back and forth and then they create an cookie which is called correlation",
    "start": "2222579",
    "end": "2229150"
  },
  {
    "text": "thought authorizations of a name dot correlation idea okay so now the",
    "start": "2229150",
    "end": "2235180"
  },
  {
    "text": "callback comes back from that external system so basically it's on the AAS one",
    "start": "2235180",
    "end": "2240490"
  },
  {
    "text": "specific callback it still has the correlation ID on the state so they unprotect that string right they get the",
    "start": "2240490",
    "end": "2248230"
  },
  {
    "text": "correlation ID and then they make sure there is a cookie that has exactly dis name and if this cookie doesn't exist",
    "start": "2248230",
    "end": "2254619"
  },
  {
    "text": "you know that the initiation of the request and the response where four different authorization servers okay and",
    "start": "2254619",
    "end": "2260950"
  },
  {
    "text": "then they're going to throw an exception something like correlation failed you probably all have seen that error in the ethnic or correlation failed",
    "start": "2260950",
    "end": "2267610"
  },
  {
    "text": "and that's what you get so yeah that's how what you would need to do if you're building your own little framework and",
    "start": "2267610",
    "end": "2272620"
  },
  {
    "text": "as I said it's built into a spinet core okay let's switch gears a little bit to",
    "start": "2272620",
    "end": "2278410"
  },
  {
    "text": "public lines you know public lines are clients in a wharf speak which are not on a server which can't store a secret",
    "start": "2278410",
    "end": "2285130"
  },
  {
    "text": "they don't have a secret right they are deployed to a phone or to a browser side its Chavez script basically yeah in",
    "start": "2285130",
    "end": "2291370"
  },
  {
    "text": "other words you can't authenticate the client you can't rely on the client secret protection for your authorization",
    "start": "2291370",
    "end": "2296650"
  },
  {
    "text": "code and so on so forth yeah and that would be typically as I said native apps are browser-based apps so the first",
    "start": "2296650",
    "end": "2304030"
  },
  {
    "start": "2303000",
    "end": "2303000"
  },
  {
    "text": "anti-pattern is this right native login dialogues I know some native developers",
    "start": "2304030",
    "end": "2310030"
  },
  {
    "text": "have this urge to create a native log in dialogues don't do it if you don't trust",
    "start": "2310030",
    "end": "2315490"
  },
  {
    "text": "my advice then tell everyone this is using a deprecated flow it's you think the password flow right which are just",
    "start": "2315490",
    "end": "2320740"
  },
  {
    "text": "deprecated 20 minutes ago so don't use it for the reasons I mentioned earlier okay obviously did the recommended flow",
    "start": "2320740",
    "end": "2329680"
  },
  {
    "start": "2328000",
    "end": "2328000"
  },
  {
    "text": "for native apps is because you're not in the browser you open a browser right it's that easy",
    "start": "2329680",
    "end": "2335040"
  },
  {
    "text": "so that browser goes to your normal login page with your you know all of your code you're logging and auditing",
    "start": "2335040",
    "end": "2340450"
  },
  {
    "text": "and your Federation and two-factor and whatever you have which is you know it's",
    "start": "2340450",
    "end": "2345790"
  },
  {
    "text": "basically you're making you're making sure your authentication related code is in one place and not in five apps spread",
    "start": "2345790",
    "end": "2351880"
  },
  {
    "text": "around yeah when you can make it even better by using the so called system",
    "start": "2351880",
    "end": "2358360"
  },
  {
    "text": "browser right so many UI frameworks have the concept of a vet view which is basically a browser inside your",
    "start": "2358360",
    "end": "2364060"
  },
  {
    "text": "application without the chrome around yeah don't do that yeah it's bad it's a",
    "start": "2364060",
    "end": "2370480"
  },
  {
    "text": "people can't see where they are people cannot inspect the certificate if they really want to maybe perfect managers",
    "start": "2370480",
    "end": "2377590"
  },
  {
    "text": "won't work but the real reason why you want to use the system browser is because this browser shares the cookie",
    "start": "2377590",
    "end": "2383620"
  },
  {
    "text": "container with all of your other authentication stage right so if you're already logged in to let's say Google",
    "start": "2383620",
    "end": "2389440"
  },
  {
    "text": "then you get single sign-on with Google inside the native app without having to type in the password again because the",
    "start": "2389440",
    "end": "2395260"
  },
  {
    "text": "cookies are still there right and as we know the less often you have to type a",
    "start": "2395260",
    "end": "2400360"
  },
  {
    "text": "password there the better from a security point of view okay so yes that's the recommended flow",
    "start": "2400360",
    "end": "2406540"
  },
  {
    "text": "for native apps using exactly the same flow I've just shown you which is causation code flow with pixie now you",
    "start": "2406540",
    "end": "2412540"
  },
  {
    "text": "might ask yourself are no client secret that the code is even more vulnerable here and again that's what pixie saves",
    "start": "2412540",
    "end": "2419620"
  },
  {
    "text": "us from right because even if the client does not have a static secret which is no secret anyways right it has a per",
    "start": "2419620",
    "end": "2427720"
  },
  {
    "text": "request secret write the code challenge and the code verify they create a per request secret and if somebody can",
    "start": "2427720",
    "end": "2434440"
  },
  {
    "text": "intercept that code he doesn't know the random number he still cannot turn that code back into tokens and that's exactly",
    "start": "2434440",
    "end": "2440500"
  },
  {
    "text": "what we want okay as I said there are a couple of approaches here we have the",
    "start": "2440500",
    "end": "2447160"
  },
  {
    "start": "2442000",
    "end": "2442000"
  },
  {
    "text": "system browser we have private browsers and so on as if you can always use the system browser then there are a couple",
    "start": "2447160",
    "end": "2454120"
  },
  {
    "text": "of ways how you handle the callback you know with custom uri schemes may be my preferred one is what we called",
    "start": "2454120",
    "end": "2460480"
  },
  {
    "text": "claimed HTTP https you arise it's basically you know you've seen that before maybe when you open a link to",
    "start": "2460480",
    "end": "2466720"
  },
  {
    "text": "let's say Amazon and you have installed the Amazon app on the phone instead instead of opening the browser it opens",
    "start": "2466720",
    "end": "2472270"
  },
  {
    "text": "the app and that's why and that's because on that link there is an XML file that is signed with your Apple",
    "start": "2472270",
    "end": "2478540"
  },
  {
    "text": "Developer certificate which says hey when you get a link to that open the Amazon app instead if it is installed on",
    "start": "2478540",
    "end": "2484420"
  },
  {
    "text": "the machine and that's how you can nicely do the callback from the browser back to your application okay yeah this",
    "start": "2484420",
    "end": "2494800"
  },
  {
    "start": "2493000",
    "end": "2493000"
  },
  {
    "text": "is a set as part of the talk I'm sorry browser-based applications okay everybody does sparse right they had a",
    "start": "2494800",
    "end": "2501660"
  },
  {
    "text": "hotness I guess and unfortunately there",
    "start": "2501660",
    "end": "2506710"
  },
  {
    "text": "what have most hard hardest to secure type of application and you know the",
    "start": "2506710",
    "end": "2513250"
  },
  {
    "text": "problem is not the spa or the or or the protocol or whatever the problem is the browser right you're ultimately you're",
    "start": "2513250",
    "end": "2520150"
  },
  {
    "text": "running your application in a shared execution environment with you know multiple applications that take",
    "start": "2520150",
    "end": "2525190"
  },
  {
    "text": "advantage of the shared state that the browser provides and there's a whole class of attacks that you know have the",
    "start": "2525190",
    "end": "2532360"
  },
  {
    "text": "word cross in front right for cross scripting cross-site request forgery because basically one application",
    "start": "2532360",
    "end": "2539020"
  },
  {
    "text": "attacks the other trying to take advantage of the shared state in the browser right so you know fundamentally",
    "start": "2539020",
    "end": "2546670"
  },
  {
    "text": "there are two different ways to secure Espace either one is using a credential type that the browser natively",
    "start": "2546670",
    "end": "2552510"
  },
  {
    "text": "understands like a cookie for example or you're using something explicit which could be an OAuth access token right it",
    "start": "2552510",
    "end": "2559869"
  },
  {
    "text": "turns out the cookie has the cross-site request forgery problem and the access token has to cross-site scripting",
    "start": "2559869",
    "end": "2565390"
  },
  {
    "text": "problem so you choose which problem you prefer ma'am funnily enough yeah the so",
    "start": "2565390",
    "end": "2573580"
  },
  {
    "text": "yeah so basically we were asking for this PCP for a long time like can we have an O or for web applications PCP",
    "start": "2573580",
    "end": "2582190"
  },
  {
    "text": "just like we have for the native one and the ITF was tracking their feet for a long time because they knew they kind of",
    "start": "2582190",
    "end": "2588369"
  },
  {
    "text": "opened Pandora's box here right because it in the end it will come out it's not oh of it's the browser yeah",
    "start": "2588369",
    "end": "2595869"
  },
  {
    "text": "so funnily enough the or for browser-based apps PCP is the first or spec I ever read",
    "start": "2595869",
    "end": "2603220"
  },
  {
    "text": "that says and maybe you don't need to use OAuth oh yeah and their assumption",
    "start": "2603220",
    "end": "2608950"
  },
  {
    "text": "is this most applications out there yeah they kind of look like this right you",
    "start": "2608950",
    "end": "2614560"
  },
  {
    "text": "have a domain you have a browser front end you have a back-end API and they",
    "start": "2614560",
    "end": "2620349"
  },
  {
    "text": "might run on the same site okay so you can secure the communication between the",
    "start": "2620349",
    "end": "2625599"
  },
  {
    "text": "two with cookies okay you still might use an external identity system that's",
    "start": "2625599",
    "end": "2630640"
  },
  {
    "text": "totally fine yeah you still might have to call some external API but 90% of the",
    "start": "2630640",
    "end": "2636430"
  },
  {
    "text": "communication is same site right so you can actually use the cookie and apply",
    "start": "2636430",
    "end": "2642369"
  },
  {
    "text": "some sort of anti fitori protection to it yeah now the PCP makes the assumption that",
    "start": "2642369",
    "end": "2649720"
  },
  {
    "text": "this anti-fur tree protection will be a same site cookies right that's this new",
    "start": "2649720",
    "end": "2655119"
  },
  {
    "start": "2654000",
    "end": "2654000"
  },
  {
    "text": "newish feature in in browsers it's called same side cookies that basically",
    "start": "2655119",
    "end": "2660190"
  },
  {
    "text": "makes sure that you know when you get a cookie from domain one that the browser will only send that cookie back to",
    "start": "2660190",
    "end": "2666940"
  },
  {
    "text": "domain one if the sender's come from the same site okay a site is by the way not an origin right and origin is",
    "start": "2666940",
    "end": "2672890"
  },
  {
    "text": "very strict with protocol DNS name and port let us say the site basically means it's the top-level DNS registrar name so",
    "start": "2672890",
    "end": "2681250"
  },
  {
    "text": "API dot my apt or command app what my apt of comm would be on the same side so",
    "start": "2681250",
    "end": "2686600"
  },
  {
    "text": "that would work okay MVC has only four three protection built-in for many many",
    "start": "2686600",
    "end": "2692720"
  },
  {
    "text": "many years actually since day day one I think yeah but you have to write code for that with the same side cookie it's",
    "start": "2692720",
    "end": "2699530"
  },
  {
    "text": "more like a processing and you probably also know that the internet will get more secure next week or broken as some",
    "start": "2699530",
    "end": "2706460"
  },
  {
    "text": "people call it when Google decides to",
    "start": "2706460",
    "end": "2712460"
  },
  {
    "text": "change the default value for same side cookies right so up to up to today you have to opt into same side protection",
    "start": "2712460",
    "end": "2719620"
  },
  {
    "text": "starting next week chrome will basically treat every cookie that does not opt-out",
    "start": "2719620",
    "end": "2724750"
  },
  {
    "text": "automatically as the same side cookie which means it will not travel across site borders anymore and if you haven't",
    "start": "2724750",
    "end": "2731570"
  },
  {
    "text": "tested your web app you should do it very soon it's gonna be for for February",
    "start": "2731570",
    "end": "2737360"
  },
  {
    "text": "okay so ultimately ultimately the PCP distinguishes between these two",
    "start": "2737360",
    "end": "2743300"
  },
  {
    "text": "scenarios here one they call JavaScript apps with with a back-end and one is",
    "start": "2743300",
    "end": "2748760"
  },
  {
    "text": "called JavaScript apps without a back-end yeah and I am to be honest I'm not really happy about about this",
    "start": "2748760",
    "end": "2755260"
  },
  {
    "text": "classification I think it should be rather a question like do you want to store your tokens on the server or do",
    "start": "2755260",
    "end": "2760520"
  },
  {
    "text": "you want to store your tokens on the client right if you are running you know on the server you might have a better",
    "start": "2760520",
    "end": "2766190"
  },
  {
    "text": "feeling because they are away from the browser away from your cross-site scripting attacks but you're pretty much",
    "start": "2766190",
    "end": "2771340"
  },
  {
    "text": "limited by what cookies can do and if you're starting to do a lot of cross-site API calls the cookie won't",
    "start": "2771340",
    "end": "2776780"
  },
  {
    "text": "help you yeah but if you're storing them in the browser you now have you know you have to be very careful with cross-site",
    "start": "2776780",
    "end": "2782150"
  },
  {
    "text": "scripting but it's it's more flexible right so there are different threat models I guess and there's no",
    "start": "2782150",
    "end": "2788420"
  },
  {
    "text": "one-size-fits-all answer here I'm a consultant I would say it depends right but yeah but the real question you have",
    "start": "2788420",
    "end": "2795470"
  },
  {
    "text": "to ask yourself is you know am i protected enough against cross-site",
    "start": "2795470",
    "end": "2800900"
  },
  {
    "text": "scripting or not if don't have to feelin you you know you can deal with that maybe storing all of your tokens in the browser you know can",
    "start": "2800900",
    "end": "2808219"
  },
  {
    "text": "be problematic that doesn't mean you are safe from cross-site scripting with both approaches here I'm just saying it's a",
    "start": "2808219",
    "end": "2813979"
  },
  {
    "text": "different threat model right and you have to you have to think about that okay now yeah I mentioned that also in",
    "start": "2813979",
    "end": "2823069"
  },
  {
    "start": "2822000",
    "end": "2822000"
  },
  {
    "text": "you know think about refresh token storage in browsers right there is some guidance here as well and one of the",
    "start": "2823069",
    "end": "2829849"
  },
  {
    "text": "interesting things that you can bind your refresh token lifetime to the session lifetime for example that might help you but yeah again much more",
    "start": "2829849",
    "end": "2837289"
  },
  {
    "text": "information in these documents that you should read now what's next right so I've now gave you an excerpt of these",
    "start": "2837289",
    "end": "2845689"
  },
  {
    "start": "2841000",
    "end": "2841000"
  },
  {
    "text": "documents right and you that kind of implies there's more yeah so you might think now huh you know that sounds all",
    "start": "2845689",
    "end": "2854390"
  },
  {
    "text": "very you know risky and so on and guess what else just even like there are academic research papers that found even",
    "start": "2854390",
    "end": "2860359"
  },
  {
    "text": "more problems yeah so do the IETF is working on that right it turns out to",
    "start": "2860359",
    "end": "2867589"
  },
  {
    "text": "cut a long story short the most vulnerable part of Oh Wharf is still the browser right I'm you know I mentioned",
    "start": "2867589",
    "end": "2873589"
  },
  {
    "text": "that they follow redirects they show you I right that's what makes them powerful and dangerous and it turns out in the",
    "start": "2873589",
    "end": "2880400"
  },
  {
    "text": "grand scheme the problem the biggest problem are the authorized request right the initial requests why out of browser",
    "start": "2880400",
    "end": "2887869"
  },
  {
    "text": "front channel to the authorization server so there are a couple of new specs up to even just work the work has",
    "start": "2887869",
    "end": "2894769"
  },
  {
    "text": "started on this okay part the IETF is",
    "start": "2894769",
    "end": "2899959"
  },
  {
    "text": "not like the fastest moving company on the planet as you probably know so this",
    "start": "2899959",
    "end": "2905089"
  },
  {
    "text": "will take many many years right but in the meantime what I think is a real possibility is that we're gonna have",
    "start": "2905089",
    "end": "2911299"
  },
  {
    "text": "oh of 2.1 first so what is 2.1 it's pretty much what I what I told you about",
    "start": "2911299",
    "end": "2916400"
  },
  {
    "text": "yeah like deprecated flows only two code flow with pixie already duke language engine slow some of the other things and",
    "start": "2916400",
    "end": "2923949"
  },
  {
    "text": "one orbit or two additional specs they are working on right now is and they say",
    "start": "2923949",
    "end": "2929269"
  },
  {
    "text": "like hey if the authorized request is the biggest problem can we make that better",
    "start": "2929269",
    "end": "2934750"
  },
  {
    "text": "okay and you authorize requests remember that's the thing where you why other browser send all of all of these",
    "start": "2934750",
    "end": "2939849"
  },
  {
    "text": "parameters to the authorization server and they can be you know tweaked by someone or handcrafted and can probably",
    "start": "2939849",
    "end": "2946869"
  },
  {
    "text": "be used to you know to do something that you didn't intend to do so what about we turned the other thing into this what's",
    "start": "2946869",
    "end": "2954760"
  },
  {
    "text": "that it's clearly a chasing web token right because there are two dots in it",
    "start": "2954760",
    "end": "2960630"
  },
  {
    "text": "yeah of course yeah and this chase in depth token basically",
    "start": "2960630",
    "end": "2966670"
  },
  {
    "text": "is the query string just as a chasing up token it's signed right look at that it",
    "start": "2966670",
    "end": "2973720"
  },
  {
    "text": "is a type yes the date they take their own guidance so yeah that's that's an",
    "start": "2973720",
    "end": "2981670"
  },
  {
    "text": "interesting idea right depending on how big these tokens get you might have problems with URL length descriptions",
    "start": "2981670",
    "end": "2988000"
  },
  {
    "text": "and so on so there's another spec that sits on top of that which i think is just a brilliant idea how about this you",
    "start": "2988000",
    "end": "2994330"
  },
  {
    "text": "don't do the authorize request at all as the first thing you first open a back-channel communication to your token",
    "start": "2994330",
    "end": "3000510"
  },
  {
    "text": "server you authenticate the client however strong you can authenticate the client and then on that back channel the",
    "start": "3000510",
    "end": "3007530"
  },
  {
    "text": "client pushes the authorization request parameters to the server and then the",
    "start": "3007530",
    "end": "3013290"
  },
  {
    "text": "server stores them and returns that client back a reference to them okay",
    "start": "3013290",
    "end": "3019920"
  },
  {
    "text": "that's all happening on the back channel so now on the front Channel now the client will use that reference to make",
    "start": "3019920",
    "end": "3027450"
  },
  {
    "text": "the authorized request okay so no more front channel harmed during the process",
    "start": "3027450",
    "end": "3034619"
  },
  {
    "text": "so to speak right all of the stuff is happening on the back channel that's what you get on the front channel no one",
    "start": "3034619",
    "end": "3040230"
  },
  {
    "text": "really well no one today as we know it can tamper with these things I'm pretty sure there will be clever people who",
    "start": "3040230",
    "end": "3045990"
  },
  {
    "text": "find different ways of that but yeah that's basically where it's heading to right get rid of the front channel or at",
    "start": "3045990",
    "end": "3052710"
  },
  {
    "text": "least make it much more secure that spec is called pushed authorization requests",
    "start": "3052710",
    "end": "3057810"
  },
  {
    "text": "yeah and respect before it's called chasing JWT secured authorize requests",
    "start": "3057810",
    "end": "3063780"
  },
  {
    "text": "now so they kind of go hand in hand did this one is really really nice you know",
    "start": "3063780",
    "end": "3068910"
  },
  {
    "text": "we have support for Charles today and Carson hopefully during dead-dead year",
    "start": "3068910",
    "end": "3074810"
  },
  {
    "text": "okay so what's the summary here is that depressing to you things like hey why do",
    "start": "3074810",
    "end": "3080610"
  },
  {
    "text": "I have to use a wharf at all it seems very insecure right so many vulnerabilities and so on and my answer",
    "start": "3080610",
    "end": "3087870"
  },
  {
    "text": "is yes you should use a wharf because you know that the beauty of having a speck and a standard is is that you're",
    "start": "3087870",
    "end": "3093600"
  },
  {
    "text": "having a pre vetted threat model right many people wrote work on the standards",
    "start": "3093600",
    "end": "3098700"
  },
  {
    "text": "many people try to break it yeah if you think like no I'm gonna write my own",
    "start": "3098700",
    "end": "3103890"
  },
  {
    "text": "protocol there will be one person who wrote the protocol and probably only one person who broke it right that's you and",
    "start": "3103890",
    "end": "3110370"
  },
  {
    "text": "I think that's better yeah so you know to summarize that some things we can't fix which is",
    "start": "3110370",
    "end": "3116460"
  },
  {
    "text": "infrastructure stuff some things can be easily fixed right get rid of your referrals get rid of your open with",
    "start": "3116460",
    "end": "3121740"
  },
  {
    "text": "directors get rid of your leaking stuff right some frets will be always hard to",
    "start": "3121740",
    "end": "3127980"
  },
  {
    "text": "mitigate right if if an attacker wants to specifically attack your company",
    "start": "3127980",
    "end": "3133110"
  },
  {
    "text": "they're gonna analyze how your stuff works and find your weaknesses right it's more like a an assassination than a",
    "start": "3133110",
    "end": "3140730"
  },
  {
    "text": "drive-by shooting kind of thing yeah so yes I think still you should all use",
    "start": "3140730",
    "end": "3146070"
  },
  {
    "text": "OAuth I think I think we we have some things challenges I would like to condom yeah and we can fix them and but it's",
    "start": "3146070",
    "end": "3154170"
  },
  {
    "text": "getting better every day so thank you for that don't I always forget we have",
    "start": "3154170",
    "end": "3159900"
  },
  {
    "text": "stickers if you want to stick out there outside it is a big sign saying identity server you can have because they are and",
    "start": "3159900",
    "end": "3166140"
  },
  {
    "text": "besides that thank you for your time [Applause]",
    "start": "3166140",
    "end": "3178260"
  }
]