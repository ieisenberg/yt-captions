[
  {
    "text": "comfortable okay so in this talk I'm going to introduce you to multimodal search and how you can integrate it into",
    "start": "5200",
    "end": "11480"
  },
  {
    "text": "your application so by the end of this talk you'll be able to understand how",
    "start": "11480",
    "end": "16680"
  },
  {
    "text": "this works and potentially Even build it right and I'll give you code behind the demo as well",
    "start": "16680",
    "end": "24480"
  },
  {
    "text": "so what's happening in this um this quick little demo is basically I'm passing in a a string of text and it's",
    "start": "39680",
    "end": "46480"
  },
  {
    "text": "searching over multimedia files for me and you'd think that it's searching over the metadata of the multimedia file",
    "start": "46480",
    "end": "52079"
  },
  {
    "text": "right the description or something like that but that's not actually what's happening it's act the database actually",
    "start": "52079",
    "end": "57760"
  },
  {
    "text": "understands the content of the video the audio file the images and it matches",
    "start": "57760",
    "end": "62800"
  },
  {
    "text": "with the string text that I've got there and it pulls up the most relevant multimedia and the point of this talk is",
    "start": "62800",
    "end": "68720"
  },
  {
    "text": "to explain how how this is happening and what's going on behind the hood right and how Vector databases and and machine",
    "start": "68720",
    "end": "74560"
  },
  {
    "text": "learning models are involved and making this come",
    "start": "74560",
    "end": "78960"
  },
  {
    "text": "together all right just playing that again one second",
    "start": "79600",
    "end": "84799"
  },
  {
    "text": "okay cool so a little bit about me uh first my background is in machine learning um before I was at we8 I was a",
    "start": "84799",
    "end": "90880"
  },
  {
    "text": "data scientist and now I'm working as a a machine learning developer Advocate at we8 and we8 is an open source Vector",
    "start": "90880",
    "end": "97880"
  },
  {
    "text": "database provider and um probably the one most important thing",
    "start": "97880",
    "end": "103119"
  },
  {
    "text": "to know about me is that I'm super passionate about Ai and I don't think it's going to kill us all right this could be famous last words but uh I",
    "start": "103119",
    "end": "111000"
  },
  {
    "text": "don't I don't think so okay so I'd like to start my talks",
    "start": "111000",
    "end": "116560"
  },
  {
    "text": "off uh with this so could I get a show of hands of how many people know what a vector database is how it works have you",
    "start": "116560",
    "end": "122079"
  },
  {
    "text": "used it before it's hard to see with the the lights but I think it's about 105% I",
    "start": "122079",
    "end": "128599"
  },
  {
    "text": "think I saw like six seven hands okay so I'll start off with the basics and um I",
    "start": "128599",
    "end": "134480"
  },
  {
    "text": "ran a workshop yesterday so if you're at the workshop this will be 5 10 minutes of repetition but after that we'll get",
    "start": "134480",
    "end": "140440"
  },
  {
    "text": "to new stuff so how do Vector databases work so I'll start off with the",
    "start": "140440",
    "end": "146519"
  },
  {
    "text": "commonality of what we already understand so everybody here probably understand how normal databases work you",
    "start": "146519",
    "end": "151680"
  },
  {
    "text": "can do all sorts of crud operations their task is to essentially store data for the long term this is true for a",
    "start": "151680",
    "end": "158160"
  },
  {
    "text": "vector database as well right the single thing that's different about a vector database is that you do retrieval and",
    "start": "158160",
    "end": "164440"
  },
  {
    "text": "search in a vector database using this fuzzy concept of similarity and the similarity is similar",
    "start": "164440",
    "end": "171280"
  },
  {
    "text": "to how how humans would do retrieval right if I went to a library and I asked the librarian can you bring me out books",
    "start": "171280",
    "end": "177560"
  },
  {
    "text": "that have to do with civil engineering they would be able to recognize books um that that are relevant for me and bring",
    "start": "177560",
    "end": "184120"
  },
  {
    "text": "those out right so this is what I mean by similarity here but I'll try to Define it further let's say you've got a a",
    "start": "184120",
    "end": "191440"
  },
  {
    "text": "database of documents here I'm just showing you two right and you go in and",
    "start": "191440",
    "end": "196599"
  },
  {
    "text": "you do search and retrieval over these documents and let's let's consider two",
    "start": "196599",
    "end": "201760"
  },
  {
    "text": "scenarios right first of all we do traditional keyword search so in my uh search bar I type in the word Python and",
    "start": "201760",
    "end": "208599"
  },
  {
    "text": "it doesn't come back with anything because there is no keyword match in my uh in my database so fundamentally the",
    "start": "208599",
    "end": "215200"
  },
  {
    "text": "problem here is that the database doesn't understand what I mean by the query by by the word python uh I might",
    "start": "215200",
    "end": "221680"
  },
  {
    "text": "as well mean the uh the animal right and so the context is not understood nor",
    "start": "221680",
    "end": "228599"
  },
  {
    "text": "does it understand the content of the stored documents either right uh if I was to ask a human they would be able to",
    "start": "228599",
    "end": "234680"
  },
  {
    "text": "retrieve the second programming language for data scientists for me uh and they would know that I'm not referring to the animal referring to the programming",
    "start": "234680",
    "end": "240680"
  },
  {
    "text": "language and so that is what we want to move towards with Vector databases we'd",
    "start": "240680",
    "end": "245840"
  },
  {
    "text": "like to be able to do this kind of magical concept of semantic search where the database knows what it stores as",
    "start": "245840",
    "end": "252120"
  },
  {
    "text": "well as what we're asking for so it understands the uh the context of what I what I want to know right what I want to",
    "start": "252120",
    "end": "258359"
  },
  {
    "text": "retrieve and so with a vector database this is possible because it understands that the keyword there python is",
    "start": "258359",
    "end": "264520"
  },
  {
    "text": "semantically similar uh to a programming language or data scientist and it retrieves that even though there is no",
    "start": "264520",
    "end": "269720"
  },
  {
    "text": "no exact string match so for a normal uh SQL database",
    "start": "269720",
    "end": "275800"
  },
  {
    "text": "the queries would look something like this right let's say you're interested in major European cities you could do",
    "start": "275800",
    "end": "280880"
  },
  {
    "text": "this now this is a bit of an exaggeration you could kind of optimize this and get get better but I wanted to",
    "start": "280880",
    "end": "286120"
  },
  {
    "text": "make my point so uh let's just put in all the regular Expressions there so",
    "start": "286120",
    "end": "291160"
  },
  {
    "text": "this will bring you back some of the flavors of mentions of uh major European cities in your in your database the",
    "start": "291160",
    "end": "297440"
  },
  {
    "text": "equivalent query for a vector database would look something like this and what I want to point out there is the",
    "start": "297440",
    "end": "302639"
  },
  {
    "text": "highlighted text here major European city and so if you run this query you'll get back anything that's even",
    "start": "302639",
    "end": "308759"
  },
  {
    "text": "semantically relevant to Major European cities you don't have to spell out all of the different synonyms and different",
    "start": "308759",
    "end": "315160"
  },
  {
    "text": "ways of saying the exact same thing because it does this semantic matching of uh of what you mean and it retrieves",
    "start": "315160",
    "end": "321199"
  },
  {
    "text": "that for you so I want to go into how this magic",
    "start": "321199",
    "end": "326880"
  },
  {
    "text": "uh works right so really what a vector database is doing is on the on the top",
    "start": "326880",
    "end": "332280"
  },
  {
    "text": "left hand there I've got all of my data this can be emails this can be images video audio files those are going to be",
    "start": "332280",
    "end": "338960"
  },
  {
    "text": "fed into a machine learning model we'll talk about the machine learning model in a second but the point of the machine learning model is to convert our data",
    "start": "338960",
    "end": "345880"
  },
  {
    "text": "from Human understandable format to machine understandable format and these are the vectors right so these can be",
    "start": "345880",
    "end": "352639"
  },
  {
    "text": "anywhere from 300 dimensional vectors to 3,000 dimensional vectors and they capture the meaning of the data uh and",
    "start": "352639",
    "end": "359759"
  },
  {
    "text": "encode it in floating Point format essentially and the cool thing about",
    "start": "359759",
    "end": "365600"
  },
  {
    "text": "these machine learning models is that the vector uh representations of the data that they generate retain the",
    "start": "365600",
    "end": "372400"
  },
  {
    "text": "semantics of the of the data and so what this means is that let's say I've got some mapping out of my vectors onto onto",
    "start": "372400",
    "end": "379479"
  },
  {
    "text": "Vector space here I'm showing threedimensional but this is probably at least 200 dimensional at most around",
    "start": "379479",
    "end": "385400"
  },
  {
    "text": "4,000 dimensional uh with a lot of the companies that are working in the space but what I mean by retaining the",
    "start": "385400",
    "end": "391080"
  },
  {
    "text": "semantics of the data is that if you look at the the the word cat dog the image of the cat the green data points",
    "start": "391080",
    "end": "398639"
  },
  {
    "text": "the vector projections are closed together uh for those data points right so each one each one of these vectors is",
    "start": "398639",
    "end": "405199"
  },
  {
    "text": "a Green Dot here and similar data points cluster together right so you've got your quadrant or region of animals pets",
    "start": "405199",
    "end": "412479"
  },
  {
    "text": "you've got your quadrant of fruits and and so on and so forth and this is pretty critical uh in order for Vector",
    "start": "412479",
    "end": "419080"
  },
  {
    "text": "databases to work so the way I like to think about it is the machine learning model is essentially similar to a a Dey",
    "start": "419080",
    "end": "425960"
  },
  {
    "text": "decimal classification system uh one that you would find in the library right so depending on what book you're",
    "start": "425960",
    "end": "431160"
  },
  {
    "text": "searching for you go to this classification system if it's about civil engineering it'll tell you what",
    "start": "431160",
    "end": "436759"
  },
  {
    "text": "location in the library this uh this uh book should be placed right if it's",
    "start": "436759",
    "end": "441840"
  },
  {
    "text": "about architecture or if it's about um Cuisine it'll be located in a different",
    "start": "441840",
    "end": "447360"
  },
  {
    "text": "location and so this type of ml model tells you where every data point should",
    "start": "447360",
    "end": "453759"
  },
  {
    "text": "live in in this Vector space so effectively a vector database is basically like a gigantic library that",
    "start": "453759",
    "end": "460199"
  },
  {
    "text": "houses all of your data object and the vector search engine is a superhuman librarian who you take your queries to",
    "start": "460199",
    "end": "467319"
  },
  {
    "text": "they understand your queries they understand the context of everything that's stored in the database and they do this uh super human retrieval of",
    "start": "467319",
    "end": "474840"
  },
  {
    "text": "objects that are relevant to your query and so this concept of numbers",
    "start": "474840",
    "end": "480639"
  },
  {
    "text": "representing meaning is uh shouldn't be foreign to a lot of people we use this every day and the most simplest form of",
    "start": "480639",
    "end": "486919"
  },
  {
    "text": "this is uh in the form of RGB colors right we have three uh color channels and a number for each representing the",
    "start": "486919",
    "end": "493599"
  },
  {
    "text": "intensity of that uh of the r or the G or the B captures the the color as",
    "start": "493599",
    "end": "498759"
  },
  {
    "text": "well and so similarly similar to how you can cluster colors together so you've got your quadrant or region of red",
    "start": "498759",
    "end": "505639"
  },
  {
    "text": "greens yellows you can capture the semantics of uh of any type of document really and to",
    "start": "505639",
    "end": "512399"
  },
  {
    "text": "demonstrate that what I've done here I'll show you a demo where I've taken 100,000 Wikipedia articles and I've",
    "start": "512399",
    "end": "519000"
  },
  {
    "text": "structured them and then I'm going to do retrieval based on those okay so now we've set up our",
    "start": "519000",
    "end": "526080"
  },
  {
    "text": "Vector space of data points so we can take all of our data objects and we can project them into this Vector space uh",
    "start": "526080",
    "end": "532399"
  },
  {
    "text": "via the translation using a machine learning model now when it comes to Vector search",
    "start": "532399",
    "end": "537720"
  },
  {
    "text": "all we have to do is essentially take the query from the user project that same query into Vector space and that",
    "start": "537720",
    "end": "544399"
  },
  {
    "text": "becomes that pink dot over there and the question is now so this query is in the",
    "start": "544399",
    "end": "549760"
  },
  {
    "text": "same language as the data so this could be text this could be audio whatever whatever you'd like right whatever the",
    "start": "549760",
    "end": "555200"
  },
  {
    "text": "user is interested in searching for and now the magic of vector search is essentially which green points fall in",
    "start": "555200",
    "end": "562560"
  },
  {
    "text": "the proximity of the pinkpoint right if they if they want to do five nearest neighbors retrieval you take the five",
    "start": "562560",
    "end": "569680"
  },
  {
    "text": "closest Green Dots to the Pink Dot and those become your candidates that you return back to the user and that's all Vector search really",
    "start": "569680",
    "end": "576959"
  },
  {
    "text": "is there's some kind of engineering details around how to make this scalable up to billions or trillions of objects",
    "start": "576959",
    "end": "582760"
  },
  {
    "text": "where you don't do Brute Force search over every single uh data object but um those are those are just engineering",
    "start": "582760",
    "end": "588959"
  },
  {
    "text": "details we can we can simply understand it as retrieving objects that are close to the query object there um and there's",
    "start": "588959",
    "end": "595120"
  },
  {
    "text": "all sorts of different metrics that you can use here but um for our purpose we can just measure it as the ukian",
    "start": "595120",
    "end": "600640"
  },
  {
    "text": "distance so the the shortest distance between the green dots and the pink dot over",
    "start": "600640",
    "end": "605839"
  },
  {
    "text": "there so in short just summarizing everything that we've talked about so far the entire Vector database Vector",
    "start": "606440",
    "end": "612519"
  },
  {
    "text": "search pipeline looks kind of like this you start off with your machine learning model which we'll call the encoder",
    "start": "612519",
    "end": "618040"
  },
  {
    "text": "because it encodes data into uh into um vectors your data comes in it generates",
    "start": "618040",
    "end": "625240"
  },
  {
    "text": "vectors so every data object gets a vector associated with it so in the vector database you'll have both your",
    "start": "625240",
    "end": "630560"
  },
  {
    "text": "data object along with the corresponding Vector object stored so that goes into your uh Vector database and then the",
    "start": "630560",
    "end": "637279"
  },
  {
    "text": "user comes along with a query which is in the same format as your data that data goes through the exact same",
    "start": "637279",
    "end": "643320"
  },
  {
    "text": "encoding pathway through the machine learning model you get your uh query vector and that gets projected into your",
    "start": "643320",
    "end": "649560"
  },
  {
    "text": "vector database into Vector space and outcome a list of candidates that match as close as possible to your uh",
    "start": "649560",
    "end": "655680"
  },
  {
    "text": "candidate query and so I I want to show you guys this demo of 100,000 Wikipedia articles",
    "start": "655680",
    "end": "663760"
  },
  {
    "text": "I won't show the entire setup of of how I got this set up but um I'll show the the fundamentals of vector search and",
    "start": "663760",
    "end": "670200"
  },
  {
    "text": "and encode okay so Vector search is also known as semantic search because you're",
    "start": "670200",
    "end": "675279"
  },
  {
    "text": "searching across semantics uh sometimes also known as neural search because we're using neural network and deep",
    "start": "675279",
    "end": "681000"
  },
  {
    "text": "learning models to project our queries and our data objects into this Vector space um there's there's some other",
    "start": "681000",
    "end": "687279"
  },
  {
    "text": "names for it as well but you know depending on what field people are coming from they call it uh differently",
    "start": "687279",
    "end": "693399"
  },
  {
    "text": "but really the the mo the most important thing to understand in this function here is uh this concept of near text and",
    "start": "693399",
    "end": "699279"
  },
  {
    "text": "this is the query that I want to pass in right this is what I was referring to earlier this can be any natural language",
    "start": "699279",
    "end": "704959"
  },
  {
    "text": "uh sentence that uh that you're interested in searching for everything else is really just handling the",
    "start": "704959",
    "end": "710839"
  },
  {
    "text": "metadata of my uh of my object so in this particular database um I have Wikipedia articles I've got the text for",
    "start": "710839",
    "end": "717000"
  },
  {
    "text": "that Wikipedia article I've got the title the URL the views and then I'm also passing in I'm asking the vector",
    "start": "717000",
    "end": "723200"
  },
  {
    "text": "database for this concept of distance which will tell me how far away an object is from my from my search query",
    "start": "723200",
    "end": "729920"
  },
  {
    "text": "so if I'm searching for a cute fluffy kitten then um a car will be far away",
    "start": "729920",
    "end": "735480"
  },
  {
    "text": "but a dog might be closer together so you can uh measure exactly how far away or how close uh to your query a data",
    "start": "735480",
    "end": "742160"
  },
  {
    "text": "point is using this concept of distance and then you actually run the uh run the query so you're connected to a client",
    "start": "742160",
    "end": "748760"
  },
  {
    "text": "currently the database is running uh in the cloud and in the other demo that I'll show you I've actually got it",
    "start": "748760",
    "end": "754320"
  },
  {
    "text": "running locally but in this particular instance I've got it running in the cloud and I'll connect to it and I'll query uh my particular collection and",
    "start": "754320",
    "end": "761320"
  },
  {
    "text": "then uh I'll get back three objects that are uh that are the closest right and I've got a function here that just",
    "start": "761320",
    "end": "767199"
  },
  {
    "text": "prints things out nicely and then now you can simply go in and search for any",
    "start": "767199",
    "end": "772360"
  },
  {
    "text": "type of uh query right this is exactly the query there's no uh there's no kind of uh reprocessing that happens behind",
    "start": "772360",
    "end": "779199"
  },
  {
    "text": "the scenes this query goes exactly into the machine learning model and that spits out a vector and it returns me",
    "start": "779199",
    "end": "786320"
  },
  {
    "text": "back three out of the 100,000 objects that are in my Vector database that are the most semantically similar to this uh",
    "start": "786320",
    "end": "792040"
  },
  {
    "text": "to this query and now I don't need to do exact word matching I don't need to do any of that because it effectively it's",
    "start": "792040",
    "end": "799600"
  },
  {
    "text": "understanding the meaning of the query and matching uh across meaning so it's doing semantic search here and so you",
    "start": "799600",
    "end": "804880"
  },
  {
    "text": "can see here that you get quite relevant things you can look at the distance as well uh depending on that so here you you get",
    "start": "804880",
    "end": "812079"
  },
  {
    "text": "the closest object the second closest and the third closest object as well uh the other interesting thing that",
    "start": "812079",
    "end": "818040"
  },
  {
    "text": "I haven't told you about this model is that it's actually multilingual so it understands more than 100 languages and",
    "start": "818040",
    "end": "824360"
  },
  {
    "text": "what that means is you can pass your query in in pretty much any language and it'll still be able to get relevant",
    "start": "824360",
    "end": "830040"
  },
  {
    "text": "results so here I'm searching up for a good movies in Hindi and because I've got 100,000 Wikipedia articles there's",
    "start": "830040",
    "end": "836320"
  },
  {
    "text": "something in my database about uh movies and and this works pretty well as well",
    "start": "836320",
    "end": "842279"
  },
  {
    "text": "and so the flexibility of a vector database really is if you have a machine learning model that's trained on uh on",
    "start": "842279",
    "end": "848839"
  },
  {
    "text": "multimodal data or multilingual data your user can come along and use that as a search query as well because it knows",
    "start": "848839",
    "end": "855079"
  },
  {
    "text": "how to translate that concept into into a vector um a couple more examples this is",
    "start": "855079",
    "end": "860959"
  },
  {
    "text": "vacation spots in farsy so I get back relevant results here as well and then this is great",
    "start": "860959",
    "end": "867839"
  },
  {
    "text": "action movies in Chinese and so this code is all available I'll",
    "start": "867839",
    "end": "873560"
  },
  {
    "text": "uh I'll send you guys the details if you'd like to play around with it uh there's a lot more to this notebook uh showing you all sorts of different",
    "start": "873560",
    "end": "879320"
  },
  {
    "text": "searches that you can do with Vector databases so I'd recommend if uh people are interested you can have a",
    "start": "879320",
    "end": "885279"
  },
  {
    "text": "look okay so the story that we've told so far",
    "start": "885279",
    "end": "890720"
  },
  {
    "text": "includes searching over text uh multilingual text uh with Vector databases and this can scale easily up",
    "start": "890720",
    "end": "897000"
  },
  {
    "text": "to hundreds of uh Millions billions uh of of objects there's customers that are using this at the uh 10 billion scale",
    "start": "897000",
    "end": "904759"
  },
  {
    "text": "and um currently we're trying to push it towards the trillion object scale so that is really where a vector database",
    "start": "904759",
    "end": "910480"
  },
  {
    "text": "comes into play if you're searching over a thousand objects 10,000 objects you probably don't need a vector database if",
    "start": "910480",
    "end": "916639"
  },
  {
    "text": "you're if you're hitting 100 million objects or a billion objects that's where things will significantly slow down to a point where you won't be able",
    "start": "916639",
    "end": "922839"
  },
  {
    "text": "to get real-time performance and that's where a vector database comes in um the other place where a vector database",
    "start": "922839",
    "end": "928079"
  },
  {
    "text": "comes in is if you need to search over multimedia right so the example that I showed you at the beginning of the talk",
    "start": "928079",
    "end": "933519"
  },
  {
    "text": "where I was putting in uh different phrases and it was retrieving for me audio files video files image files if",
    "start": "933519",
    "end": "941160"
  },
  {
    "text": "you want to search over multimedia this is also another great application of vector data",
    "start": "941160",
    "end": "947079"
  },
  {
    "text": "bases so to motivate a little bit about searching over multimedia and how we enable this with Vector databases let me",
    "start": "947079",
    "end": "953560"
  },
  {
    "text": "start to talk about what multimodal models are and this is really the the main point of this talk here",
    "start": "953560",
    "end": "960360"
  },
  {
    "text": "so about uh last year I'm originally from Toronto so uh last year in Toronto we had a",
    "start": "960360",
    "end": "967440"
  },
  {
    "text": "debate uh between a bunch of leaders in the AI field and the point of the the",
    "start": "967440",
    "end": "972839"
  },
  {
    "text": "thing that they were debating was whether or not AI would be would pose an existential threat and then they they",
    "start": "972839",
    "end": "978279"
  },
  {
    "text": "failed to put a time limit on it so they didn't say whether it was 5 years or 10 years or 50 years but I'd like to pose",
    "start": "978279",
    "end": "984600"
  },
  {
    "text": "the same question to people here right so who here thinks that AI poses the next existential existential threat and",
    "start": "984600",
    "end": "991040"
  },
  {
    "text": "I'll put a a time frame on it we'll just say 10 years so can I get a show of",
    "start": "991040",
    "end": "996759"
  },
  {
    "text": "hands only one person very optimistic here I I'm in the same boat actually I",
    "start": "997360",
    "end": "1005639"
  },
  {
    "text": "don't know so right now we're in this exponential growth phase so it's very hard to predict things but I don't know",
    "start": "1005639",
    "end": "1011519"
  },
  {
    "text": "where we are right now it doesn't it doesn't seem that this is the case right and so one of the arguments that was",
    "start": "1011519",
    "end": "1017880"
  },
  {
    "text": "made for people that didn't think that this was the case was was this right if",
    "start": "1017880",
    "end": "1024760"
  },
  {
    "text": "we were in this uh if we were in danger of uh being uh overtaken by AGI uh why",
    "start": "1024760",
    "end": "1031438"
  },
  {
    "text": "don't we currently have ai that can do any of these things that are trivially easy for humans right and so we start",
    "start": "1031439",
    "end": "1037720"
  },
  {
    "text": "off with something that's probably the most difficult for humans driving and then we go down the list where things",
    "start": "1037720",
    "end": "1044000"
  },
  {
    "text": "get easier right cooking a meal walking naturally you can even things uh you can even name things that are easier than",
    "start": "1044000",
    "end": "1049600"
  },
  {
    "text": "this we don't have ai we don't have robots that can do this and the reason",
    "start": "1049600",
    "end": "1054840"
  },
  {
    "text": "why a lot of people think that this is the case is explained using this Paradox",
    "start": "1054840",
    "end": "1060120"
  },
  {
    "text": "right so if you read the things on the left hand side for AI all of these things are super easy these are problems",
    "start": "1060120",
    "end": "1066679"
  },
  {
    "text": "that are essentially solved you can do all sorts of calculus you can do power iterations you can do it can play Chess",
    "start": "1066679",
    "end": "1072280"
  },
  {
    "text": "at superhuman levels um you can translate language better than any human can and AI has already solved this",
    "start": "1072280",
    "end": "1078240"
  },
  {
    "text": "problem and these are things that are very difficult to teach humans to do on the right hand side though you've got",
    "start": "1078240",
    "end": "1084600"
  },
  {
    "text": "all of these things that are insanely difficult for AI which are trivially easy for us right the basic senses",
    "start": "1084600",
    "end": "1092039"
  },
  {
    "text": "walking running these are things that are that are uh that we don't really need to pay attention to we we take for",
    "start": "1092039",
    "end": "1099720"
  },
  {
    "text": "granted and so the question is why and one answer one potential Avenue here is",
    "start": "1099720",
    "end": "1106559"
  },
  {
    "text": "multimodality humans are multimodal creatures and multimodality enables this",
    "start": "1106559",
    "end": "1112480"
  },
  {
    "text": "right list of things and before we imbue our AI with multimodality it can't",
    "start": "1112480",
    "end": "1118120"
  },
  {
    "text": "really get access to these things that are trivially easy for us right so the the solution here is to think about how",
    "start": "1118120",
    "end": "1124400"
  },
  {
    "text": "humans learn and so I've got a I've got a son who's about a year and three",
    "start": "1124400",
    "end": "1129799"
  },
  {
    "text": "months now and I just observe him and and look at what he does and a lot of learning is not really lingual right",
    "start": "1129799",
    "end": "1136720"
  },
  {
    "text": "it's multimodal he touches things he likes to put things in his mouth he he looks at the texture of things he'll",
    "start": "1136720",
    "end": "1143000"
  },
  {
    "text": "he'll feel things and he'll smell things he likes to smell things as well he only says about five words right and the last",
    "start": "1143000",
    "end": "1149039"
  },
  {
    "text": "word he uh Learned was Baba uh and the first word he learned was mama right but",
    "start": "1149039",
    "end": "1154679"
  },
  {
    "text": "um I don't hold it against him the difficult things in life they take time right the important things as well",
    "start": "1154679",
    "end": "1163080"
  },
  {
    "text": "so essentially the basis here is that the foundation of human learning is built on multimodal uh reasoning and",
    "start": "1163080",
    "end": "1170120"
  },
  {
    "text": "then you have lingual uh lingual tasks that build on top of this Foundation right so now he's learning words but",
    "start": "1170120",
    "end": "1177520"
  },
  {
    "text": "he's learning words that are affiliated that are connected with a lot of non- lingual Concepts right he he knows what",
    "start": "1177520",
    "end": "1183640"
  },
  {
    "text": "a cat looks like he knows what a dog looks like and then he identifies that that thing is called a cat or a dog and",
    "start": "1183640",
    "end": "1189559"
  },
  {
    "text": "so this is the reasoning behind multimodal models why we need to think about multimedia we need to be able to",
    "start": "1189559",
    "end": "1196280"
  },
  {
    "text": "reason over multimedia so really the promise of multimodal models as far as Vector",
    "start": "1196280",
    "end": "1202120"
  },
  {
    "text": "databases are concerned is not only do we need to be able to encode and capture the meaning of text",
    "start": "1202120",
    "end": "1209280"
  },
  {
    "text": "on the on the top left hand side but we need to be able to do that with images with audio with video as well right and",
    "start": "1209280",
    "end": "1216679"
  },
  {
    "text": "for now some of the leading models that allow us to do this are separate right",
    "start": "1216679",
    "end": "1222080"
  },
  {
    "text": "they don't there there isn't one universal model that performs well that understands all these different",
    "start": "1222080",
    "end": "1227280"
  },
  {
    "text": "multimedia formats but you'll have a state-of-the-art image model and then you'll have a separate state-of-the-art",
    "start": "1227280",
    "end": "1232640"
  },
  {
    "text": "Auto uh Audio model and a separate one that understands video but this is good",
    "start": "1232640",
    "end": "1237720"
  },
  {
    "text": "enough for now right this is what we're using in the app that I showed at the uh at the beginning here and what these",
    "start": "1237720",
    "end": "1243039"
  },
  {
    "text": "effectively do for you is give you the ability to convert this data into into",
    "start": "1243039",
    "end": "1248720"
  },
  {
    "text": "vectors and because the initial data formats are very semantically similar they're are all about lines the",
    "start": "1248720",
    "end": "1255640"
  },
  {
    "text": "corresponding vectors are also quite similar right there might be a little bit of plus minus here but they're all",
    "start": "1255640",
    "end": "1261400"
  },
  {
    "text": "effectively about the the same topic right and so if you were to do Vector search all of these four data points",
    "start": "1261400",
    "end": "1267720"
  },
  {
    "text": "these four green dots corresponding to the input format here would be clustered together would be relatively in uh in",
    "start": "1267720",
    "end": "1274120"
  },
  {
    "text": "close proximity right and so this is the the promise of uh multimodal",
    "start": "1274120",
    "end": "1280919"
  },
  {
    "text": "models there's even work and and this is not public right now there's a this is the spun out of Google but there's work",
    "start": "1280919",
    "end": "1287799"
  },
  {
    "text": "where you can itiz smell right so if you take different molecules they they built up this odor",
    "start": "1287799",
    "end": "1293440"
  },
  {
    "text": "map of things that smell uh different ways and they showed that they can project different molecules into this",
    "start": "1293440",
    "end": "1300279"
  },
  {
    "text": "Vector space of odors and you can even capture",
    "start": "1300279",
    "end": "1305400"
  },
  {
    "text": "smell and so the promise of multimodal models is we might have one unified",
    "start": "1305720",
    "end": "1310799"
  },
  {
    "text": "Vector space before we had text that was clustered together but now you can take pretty much any modality on the bottom",
    "start": "1310799",
    "end": "1317440"
  },
  {
    "text": "there starting off with langu images audio video and you can project them all into the same Vector space right so you",
    "start": "1317440",
    "end": "1324080"
  },
  {
    "text": "can have images and text and audio and video that live in the same Vector space",
    "start": "1324080",
    "end": "1330000"
  },
  {
    "text": "and this is pretty critical because if you can project data points into the same Vector space then you can retrieve",
    "start": "1330000",
    "end": "1335360"
  },
  {
    "text": "them as well based on this concept of proximity right and these are models that exist uh",
    "start": "1335360",
    "end": "1341720"
  },
  {
    "text": "even today right and this is what what I'm using in the application that I showed earlier so you could this enables the",
    "start": "1341720",
    "end": "1349039"
  },
  {
    "text": "first thing that it enables it enables a lot of things but it enables any to any search right and what I mean by that is",
    "start": "1349039",
    "end": "1354559"
  },
  {
    "text": "you can pass in any one of these uh data points as queries one of these four data points as queries and it you can project",
    "start": "1354559",
    "end": "1362279"
  },
  {
    "text": "these into the same Vector space and each one of these will generate a pink dot for you and you can then retrieve",
    "start": "1362279",
    "end": "1368320"
  },
  {
    "text": "out the closest multimedia that is uh that that is located near to that uh",
    "start": "1368320",
    "end": "1373640"
  },
  {
    "text": "Pink Dot and this is effectively what's happening behind the scenes in that multimedia Search application that I'm showing you and this is what I meant",
    "start": "1373640",
    "end": "1380400"
  },
  {
    "text": "when I said that it's not searching over the metadata of those Concepts it's actually taking those uh multimedia",
    "start": "1380400",
    "end": "1385760"
  },
  {
    "text": "files projecting them into Vector space using a vector database taking your queries and then doing retrieval uh I've",
    "start": "1385760",
    "end": "1392919"
  },
  {
    "text": "only showed you the text to any search in the in the earlier example but in the",
    "start": "1392919",
    "end": "1399279"
  },
  {
    "text": "actual demo that I'll show in a second here I'll even do image queries video queries and audio",
    "start": "1399279",
    "end": "1405960"
  },
  {
    "text": "queries there 's a lot of other functionality that this enables as well so the the model that I'm using here is",
    "start": "1407240",
    "end": "1413039"
  },
  {
    "text": "from Facebook and if anybody if anybody's interested that that's where uh it comes from but you can do this",
    "start": "1413039",
    "end": "1419640"
  },
  {
    "text": "cross modal retrieval so the humans are really good at this if I play you the sound of a car honking you'll get the",
    "start": "1419640",
    "end": "1425039"
  },
  {
    "text": "image of a car in your mind automatically you'll get the image of it driving away as well right if I play you",
    "start": "1425039",
    "end": "1430679"
  },
  {
    "text": "a train horn you'll be able to do this uh multimodal retrieval automatically in your mind but now you can have uh apps",
    "start": "1430679",
    "end": "1437400"
  },
  {
    "text": "that can do this as well you can do embedding space arithmetic so you can say I have this image of a",
    "start": "1437400",
    "end": "1442880"
  },
  {
    "text": "pigeon and I have this sound of a motor revving what image do these Concepts uh",
    "start": "1442880",
    "end": "1448679"
  },
  {
    "text": "look like right and then you get back that uh image on the right hand side and all this seems uh really magical but all",
    "start": "1448679",
    "end": "1456080"
  },
  {
    "text": "of this is possible with the technology that we have right now you can even do this uh concept of",
    "start": "1456080",
    "end": "1461960"
  },
  {
    "text": "multimodal generation so you pass in an audio file and you say generate me a uh",
    "start": "1461960",
    "end": "1467000"
  },
  {
    "text": "a image that captures the semantics of this uh audio file and the goal here we don't have",
    "start": "1467000",
    "end": "1475240"
  },
  {
    "text": "this right now but the goal is that if we can do all sorts of multimodal retrieval then eventually we'll be able",
    "start": "1475240",
    "end": "1481159"
  },
  {
    "text": "to do multimodal reasoning and this is what humans are really good at where I don't have to give you all the different",
    "start": "1481159",
    "end": "1488200"
  },
  {
    "text": "senses of if a tiger is coming at you just seeing it is enough right hearing it is enough to know that you're in danger I don't have to give you all the",
    "start": "1488200",
    "end": "1494640"
  },
  {
    "text": "modalities for you to uh for you to understand that you're in trouble so really what people think they want",
    "start": "1494640",
    "end": "1501760"
  },
  {
    "text": "are large language models but I would argue what people",
    "start": "1501760",
    "end": "1507240"
  },
  {
    "text": "really want what they really need are large multimodal models they need models that are not just masters of",
    "start": "1507240",
    "end": "1513760"
  },
  {
    "text": "language but models that can understand image audio video as well and so here let me show you the the",
    "start": "1513760",
    "end": "1521600"
  },
  {
    "text": "demo of the application that um I showed earlier so here this is the the base",
    "start": "1521600",
    "end": "1527520"
  },
  {
    "text": "demo that I uh that I showed it's taking the text string here vectorizing it and retrieving anything that's in my",
    "start": "1527520",
    "end": "1533919"
  },
  {
    "text": "database that's uh semantically related to to this this is all running locally by the",
    "start": "1533919",
    "end": "1539640"
  },
  {
    "text": "way on my on my Mac both the machine learning model the vector database everything is running locally so here if",
    "start": "1539640",
    "end": "1545960"
  },
  {
    "text": "I search for city car I get back images",
    "start": "1545960",
    "end": "1551280"
  },
  {
    "text": "[Music] videos audio here as well and you can do all sorts of",
    "start": "1551280",
    "end": "1557120"
  },
  {
    "text": "searches you can you can also pass in an image as a query so I'll show you that example here so let's say we do",
    "start": "1557120",
    "end": "1563919"
  },
  {
    "text": "something like this this becomes my input",
    "start": "1563919",
    "end": "1568120"
  },
  {
    "text": "query then it retrieves for me other images if there were so here I'm limiting it to uh four uh four objects",
    "start": "1569360",
    "end": "1576600"
  },
  {
    "text": "returned so it only returns uh images for me here you do another",
    "start": "1576600",
    "end": "1583600"
  },
  {
    "text": "one gives back mircat this fox that probably know their Mir cats in the",
    "start": "1584240",
    "end": "1589840"
  },
  {
    "text": "database and then I'll also show you uh audio search here as well right so if we",
    "start": "1589840",
    "end": "1594880"
  },
  {
    "text": "if we play let's say this",
    "start": "1594880",
    "end": "1599039"
  },
  {
    "text": "audio so if that audio goes in as a query I get this audio file I get uh",
    "start": "1600159",
    "end": "1606880"
  },
  {
    "text": "this video file back and So currently without Vector",
    "start": "1606880",
    "end": "1612360"
  },
  {
    "text": "search how people do this is exactly by using metadata they'll describe what's going on in the video and they'll uh",
    "start": "1612360",
    "end": "1618360"
  },
  {
    "text": "return it if if uh it matches but in order to do that with multimedia input",
    "start": "1618360",
    "end": "1623640"
  },
  {
    "text": "queries as well you have to describe the multimedia queries you can't just pass in the audio file you have to have a descriptor for the audio file you have",
    "start": "1623640",
    "end": "1630080"
  },
  {
    "text": "to have metadata for the query along with metadata for everything that's already in the database right yes",
    "start": "1630080",
    "end": "1635320"
  },
  {
    "text": "question the input of the image all of the other inputs when",
    "start": "1635320",
    "end": "1642640"
  },
  {
    "text": "through vectorization yes the input didn't go through it it still went",
    "start": "1642640",
    "end": "1648799"
  },
  {
    "text": "directly to the was a direct quer against the vector database no so the input also went through the vectorizer",
    "start": "1648799",
    "end": "1654559"
  },
  {
    "text": "and it generated a vector and the things that came out were just the green dots the objects that were close to the",
    "start": "1654559",
    "end": "1660519"
  },
  {
    "text": "vector of the query so this is the the key concept so the flexibility of a vector database is that any uh you can",
    "start": "1660519",
    "end": "1668200"
  },
  {
    "text": "use any model and whatever modalities whatever multimedia data that that model",
    "start": "1668200",
    "end": "1673720"
  },
  {
    "text": "understands now becomes fair game for your data for your queries or anything like that right",
    "start": "1673720",
    "end": "1679840"
  },
  {
    "text": "yes oh go ahead if you do like a language query yeah it still goes",
    "start": "1679840",
    "end": "1685960"
  },
  {
    "text": "through yes exactly exactly Yeah question your quer is mul a video",
    "start": "1685960",
    "end": "1696080"
  },
  {
    "text": "with that's a very good question so currently you you could do that so you",
    "start": "1696600",
    "end": "1702679"
  },
  {
    "text": "could say I have audio and I have a video for it you vectorize them separately and then you take take the",
    "start": "1702679",
    "end": "1708440"
  },
  {
    "text": "average of the corresponding two vectors but by default it doesn't handle that right now this is actually something",
    "start": "1708440",
    "end": "1715279"
  },
  {
    "text": "that we're working on now and we're thinking about releasing this month actually yeah that's a good",
    "start": "1715279",
    "end": "1721320"
  },
  {
    "text": "question so you could even do video search but I won't show the video search component because the the machine",
    "start": "1721320",
    "end": "1726640"
  },
  {
    "text": "learning model is running on my system and the inference takes a while to generate the vector for that video as well um but uh I've got video here as",
    "start": "1726640",
    "end": "1734640"
  },
  {
    "text": "well that you can try out so this entire app is open SCE and I'll show you where that where you can play around with it",
    "start": "1734640",
    "end": "1740760"
  },
  {
    "text": "as well if you guys are",
    "start": "1740760",
    "end": "1743519"
  },
  {
    "text": "interested okay so what I want to talk about now are just some of the applications of",
    "start": "1745919",
    "end": "1753320"
  },
  {
    "text": "multimodal models and and Vector databases together one thing let me do",
    "start": "1753320",
    "end": "1759320"
  },
  {
    "text": "here let's talk a little bit",
    "start": "1759320",
    "end": "1766320"
  },
  {
    "text": "about this so there's two applications that I want",
    "start": "1766320",
    "end": "1772240"
  },
  {
    "text": "to talk about uh that I think are the most pressing there's already work that's going on in both of these uh the",
    "start": "1772240",
    "end": "1778720"
  },
  {
    "text": "first one is multimodal uh recommender systems e-commerce recommender systems and so I think this is a field that will",
    "start": "1778720",
    "end": "1785320"
  },
  {
    "text": "get revolutionized as a result of having multimodal models under models that understand different types of media so",
    "start": "1785320",
    "end": "1792679"
  },
  {
    "text": "to demonstrate this to you if I just ask you what type of burger you like right currently how things work work is you",
    "start": "1792679",
    "end": "1799240"
  },
  {
    "text": "describe it to me I encode the your your uh your preferences using text and I",
    "start": "1799240",
    "end": "1805720"
  },
  {
    "text": "return to you other burgers that are described the same way right so you you describe it to me in a text string and",
    "start": "1805720",
    "end": "1812000"
  },
  {
    "text": "that's how currently a lot of uh a lot of systems are doing this some more advanced systems actually",
    "start": "1812000",
    "end": "1819039"
  },
  {
    "text": "use images as well right so they'll ask you in words and maybe they'll say okay there are these these Five Burgers click",
    "start": "1819039",
    "end": "1825120"
  },
  {
    "text": "on the one that you like the most and they'll capture your preference through images as well but you could also",
    "start": "1825120",
    "end": "1831200"
  },
  {
    "text": "capture preference by smell right so what type of smell do you like how does it sound so because you have the ability",
    "start": "1831200",
    "end": "1838080"
  },
  {
    "text": "to encode all of these modalities why not recommend off of those modalities as well right so all of these kind of",
    "start": "1838080",
    "end": "1846120"
  },
  {
    "text": "multimodal multi sensory inputs become the identity of what you like and you",
    "start": "1846120",
    "end": "1852159"
  },
  {
    "text": "can also encode nutritional facts by the way there are there are Labs that are working on encoding tables and",
    "start": "1852159",
    "end": "1858120"
  },
  {
    "text": "generating uh vectors out of these and now that Vector represents the ideal the",
    "start": "1858120",
    "end": "1864200"
  },
  {
    "text": "perfect burger for you and you can do this Vector search Vector retrieval of if I have my space of of all the",
    "start": "1864200",
    "end": "1870240"
  },
  {
    "text": "products that are on my menu I can project this and retrieve back the three most popular items for you and recommend",
    "start": "1870240",
    "end": "1877039"
  },
  {
    "text": "them to you right and there's also work done around multimedia Vector so this goes back to the question that was asked",
    "start": "1877039",
    "end": "1882880"
  },
  {
    "text": "earlier there's nothing that's restraining you from only generating one vector you could have The Taste Vector",
    "start": "1882880",
    "end": "1889399"
  },
  {
    "text": "in in one in one object there you could have the image Vector separately and you can do this multi uh multimedia",
    "start": "1889399",
    "end": "1896159"
  },
  {
    "text": "multiquery retrieval system and this kind of sounds Fantastical like it",
    "start": "1896159",
    "end": "1901559"
  },
  {
    "text": "doesn't exist but there's a lot of uh Labs that are actually using this right now so I'll show you one example from",
    "start": "1901559",
    "end": "1907880"
  },
  {
    "text": "Amazon but uh Facebook is doing this eBay is doing the same thing um they're",
    "start": "1907880",
    "end": "1913799"
  },
  {
    "text": "all working on on technology that allows you to to do this retrieval based on uh multimedia",
    "start": "1913799",
    "end": "1919559"
  },
  {
    "text": "preferences and the reason why they're interested in doing this is because if you can encode what a person likes",
    "start": "1919559",
    "end": "1926159"
  },
  {
    "text": "across these modalities you can identify what a customer likes more uniquely because now it's not just how it's",
    "start": "1926159",
    "end": "1931559"
  },
  {
    "text": "described but what it looks like uh what it smells like potentially right because",
    "start": "1931559",
    "end": "1936760"
  },
  {
    "text": "you have these multi uh you have these multi- sensory uh encodings to to represent what a person",
    "start": "1936760",
    "end": "1943279"
  },
  {
    "text": "likes it also allows you to uniquely compare relevance between products and this is one of the main reasons why",
    "start": "1943279",
    "end": "1950000"
  },
  {
    "text": "Amazon chose to work on this project that I'll show you because you can compare across modalities it's not just",
    "start": "1950000",
    "end": "1956760"
  },
  {
    "text": "description to description but it's also description to the way it looks um to the way it",
    "start": "1956760",
    "end": "1962159"
  },
  {
    "text": "feels and then the main aspect here so if you go into Amazon and you say I want",
    "start": "1962159",
    "end": "1968840"
  },
  {
    "text": "something that looks like this couch without uh multimedia search you would",
    "start": "1968840",
    "end": "1974720"
  },
  {
    "text": "get back other things that are similarly you sit on the thing in the middle you can also sit on the things on the left hand side but it's not exactly what you",
    "start": "1974720",
    "end": "1981240"
  },
  {
    "text": "asked for if you're able to do multimedia search then you get back exactly what you want right things that",
    "start": "1981240",
    "end": "1988279"
  },
  {
    "text": "not just are described the same way but also look the same right so you can do better retrieval better uh more relevant",
    "start": "1988279",
    "end": "1995039"
  },
  {
    "text": "search in your uh in your applications and so this is a paper from Amazon there's another one that I've",
    "start": "1995039",
    "end": "2001399"
  },
  {
    "text": "linked here from uh from Facebook that if you're interested in you can have a look at as well and the second application that",
    "start": "2001399",
    "end": "2008159"
  },
  {
    "text": "that I want to talk about uh has to do with multimodal retrieval augmented generation how many people here know",
    "start": "2008159",
    "end": "2013799"
  },
  {
    "text": "what retrieval augmented generation is a little bit okay so let me describe it to you um this is a concept that was",
    "start": "2013799",
    "end": "2022039"
  },
  {
    "text": "relatively Unknown about a year ago but everybody is talking about it uh in the machine learning world and uh in the um",
    "start": "2022039",
    "end": "2028240"
  },
  {
    "text": "in the vector database world and I feel like as we get as we get more accustomed to this more people from different",
    "start": "2028240",
    "end": "2034480"
  },
  {
    "text": "fields will will know about this concept It's relatively simple it just sounds difficult but the concept is let's say",
    "start": "2034480",
    "end": "2041519"
  },
  {
    "text": "you have a large language model and you ask it a question this is how the majority of people use large language",
    "start": "2041519",
    "end": "2047519"
  },
  {
    "text": "models you go to chat GPT you ask in a qu you you ask a prompt and it gives you an",
    "start": "2047519",
    "end": "2052760"
  },
  {
    "text": "answer what retrieval augmented generation does is it basically",
    "start": "2052760",
    "end": "2058599"
  },
  {
    "text": "says if I ask a question and you have no context of of what I'm asking about let's say I ask about I I work for",
    "start": "2058599",
    "end": "2065398"
  },
  {
    "text": "Microsoft or I work for IBM or something like that and I ask about the company policies and they're not uh publicly",
    "start": "2065399",
    "end": "2071800"
  },
  {
    "text": "open so the model was never trained on those uh data points right it doesn't know about the the the private kind of",
    "start": "2071800",
    "end": "2079118"
  },
  {
    "text": "um documents the Enterprise documents that are privy that the employees are",
    "start": "2079119",
    "end": "2084358"
  },
  {
    "text": "privy to so what you do is you give a vector database access to those personal documents you do internal retrieval and",
    "start": "2084359",
    "end": "2092079"
  },
  {
    "text": "then you say these are the most relevant uh documents that you should read before you answer my question right so",
    "start": "2092079",
    "end": "2099200"
  },
  {
    "text": "effectively what you do in this in this concept of rag is you say I've filtered",
    "start": "2099200",
    "end": "2105200"
  },
  {
    "text": "through all of my personal documents and I've retrieved the two or three that are the most relevant for you to know before",
    "start": "2105200",
    "end": "2110839"
  },
  {
    "text": "you can answer this question and if you didn't have these documents you wouldn't be able to answer my question so I kind",
    "start": "2110839",
    "end": "2116920"
  },
  {
    "text": "of stuff my uh stuff my prompt stuff my question with relevant information relevant filter documents and then I say",
    "start": "2116920",
    "end": "2124119"
  },
  {
    "text": "now you can read over this stuff and this will give you context and you can answer my question and so it gives you",
    "start": "2124119",
    "end": "2130440"
  },
  {
    "text": "customized responses without having to train the model on all of this data and",
    "start": "2130440",
    "end": "2135599"
  },
  {
    "text": "this is what a lot of uh chat Bots now are are using that uh almost every company is uh is",
    "start": "2135599",
    "end": "2141560"
  },
  {
    "text": "deploying and this is effectively what retrieval augmented generation is it's called retrieval augmented generation",
    "start": "2141560",
    "end": "2147040"
  },
  {
    "text": "because you're retrieving from a database and then you're augmenting generation from a language model it's",
    "start": "2147040",
    "end": "2153280"
  },
  {
    "text": "it's generating text using that retrieved uh retrieved context it's the",
    "start": "2153280",
    "end": "2158319"
  },
  {
    "text": "equivalent of going to a library and doing research before writing a paper or writing uh writing something out uh and",
    "start": "2158319",
    "end": "2165440"
  },
  {
    "text": "this is commonly what humans do up until now uh language models uh didn't do this",
    "start": "2165440",
    "end": "2171400"
  },
  {
    "text": "they would have to kind of remember everything from their from their memory and then pull it out and then uh and",
    "start": "2171400",
    "end": "2177040"
  },
  {
    "text": "then give you a co coherent response it turns out that that's very difficult especially when you've been trained on the entirety of the internet so it's a",
    "start": "2177040",
    "end": "2183480"
  },
  {
    "text": "lot easier if you make their jobs Easier by just saying these are the three things that are the most relevant just",
    "start": "2183480",
    "end": "2189119"
  },
  {
    "text": "read over these and and answer the question so this is practically a very good uh way to get your language models",
    "start": "2189119",
    "end": "2195200"
  },
  {
    "text": "to work it reduces hallucinations it um it increases the quality of answers as",
    "start": "2195200",
    "end": "2200440"
  },
  {
    "text": "well you're kind of curbing the creativity of the model but increasing the Practical uh use cases of the model",
    "start": "2200440",
    "end": "2207280"
  },
  {
    "text": "at the same time so from our perspective how does",
    "start": "2207280",
    "end": "2213160"
  },
  {
    "text": "this work for uh for our Vector search pipeline everything stays exactly the",
    "start": "2213160",
    "end": "2218359"
  },
  {
    "text": "same all of my private documents all of my private data goes into an encoder vectors come out that get stored in my",
    "start": "2218359",
    "end": "2224720"
  },
  {
    "text": "Vector database the user comes by and asks a question and it retrieves the five or 10 or three most relevant",
    "start": "2224720",
    "end": "2231480"
  },
  {
    "text": "documents but now instead of retrie returning those documents back to the user what I do is send that over to a",
    "start": "2231480",
    "end": "2238520"
  },
  {
    "text": "large language model to use as context so those can be stuffed into the query",
    "start": "2238520",
    "end": "2244599"
  },
  {
    "text": "or the prompt for the language model and it now reads over them before it has to answer the question so the workflow looks something",
    "start": "2244599",
    "end": "2251599"
  },
  {
    "text": "like this let's say you've got a billion documents however many documents you have in your vector database you take",
    "start": "2251599",
    "end": "2258359"
  },
  {
    "text": "the same prompt that you would ask chat GPT you give it to the vector database and you say give me anything that you",
    "start": "2258359",
    "end": "2264480"
  },
  {
    "text": "think is relevant to answer this question from across my billions of documents and just give me the top three",
    "start": "2264480",
    "end": "2269599"
  },
  {
    "text": "things that you think are are semantically related so you get out these filtered relevant documents and",
    "start": "2269599",
    "end": "2275160"
  },
  {
    "text": "then now that you have your question and the relevant information at both in hand",
    "start": "2275160",
    "end": "2280920"
  },
  {
    "text": "you go to and the important thing about this Vector database is that it's scales",
    "start": "2280920",
    "end": "2286000"
  },
  {
    "text": "right um You and I can probably retrieve from a PDF if we have one PDF the",
    "start": "2286000",
    "end": "2291599"
  },
  {
    "text": "relevant context and this is what a lot of people were doing before this but if I've got thousands of PDFs I can't",
    "start": "2291599",
    "end": "2297240"
  },
  {
    "text": "really do this let alone millions or billions right so this is why doing uh retrieval with a vector database is um",
    "start": "2297240",
    "end": "2303760"
  },
  {
    "text": "is pretty scalable technically you don't need a vector database do this retrieval you can use any type of database you can use",
    "start": "2303760",
    "end": "2310200"
  },
  {
    "text": "a relational non-relational database this is why companies like mongodb are also uh doing uh retrieval augmented",
    "start": "2310200",
    "end": "2317400"
  },
  {
    "text": "generation but the reason why a vector database works the best is because the database speaks the same language that",
    "start": "2317400",
    "end": "2324319"
  },
  {
    "text": "the uh that the language model is uh proficient at right it the database can be queried with English and it just so",
    "start": "2324319",
    "end": "2330000"
  },
  {
    "text": "happens that the language model is a master of speaking that same language so it's kind of a a match that uh that",
    "start": "2330000",
    "end": "2336720"
  },
  {
    "text": "works really well in that regard okay so now that we have our filter document and we have the question",
    "start": "2336720",
    "end": "2343800"
  },
  {
    "text": "in hand we can take both of those to the language model and it generates our customized",
    "start": "2343800",
    "end": "2350440"
  },
  {
    "text": "response and so the next step of this if we think about all of the multimodal",
    "start": "2350440",
    "end": "2355960"
  },
  {
    "text": "retrieval and the app that I showed earlier is why would you just stop at text documents right I talk to a lot of",
    "start": "2355960",
    "end": "2362119"
  },
  {
    "text": "companies and they have PDFs they have diagrams they have uh charts they have images they want to retrieve as well and",
    "start": "2362119",
    "end": "2370520"
  },
  {
    "text": "now we're getting these models that not just understand language but also understand images and text as well and",
    "start": "2370520",
    "end": "2376240"
  },
  {
    "text": "we have these tools in between that can parse uh images and and text from PDFs",
    "start": "2376240",
    "end": "2382599"
  },
  {
    "text": "and that you can store them separately in your database so then the natural question",
    "start": "2382599",
    "end": "2388480"
  },
  {
    "text": "becomes why would you just stop at textual context right a PDF can have",
    "start": "2388480",
    "end": "2393560"
  },
  {
    "text": "images and can have all sorts of modalities so then you if you just have",
    "start": "2393560",
    "end": "2399319"
  },
  {
    "text": "a model that can vectorize all of that modality then you can actually retrieve those modalities as well right and this",
    "start": "2399319",
    "end": "2405640"
  },
  {
    "text": "is the example that I showed earlier where let's say you've got images audio video all in the database you can now",
    "start": "2405640",
    "end": "2412560"
  },
  {
    "text": "send the same prompt let's say you're asking about how to cook a burger or something like that and you go in and",
    "start": "2412560",
    "end": "2418960"
  },
  {
    "text": "you have the recipe here as well but you've got images of of burgers as well and you can retrieve those and then if",
    "start": "2418960",
    "end": "2424880"
  },
  {
    "text": "you have a large multimodal model now not a language model but one that understands images you can send it the",
    "start": "2424880",
    "end": "2432680"
  },
  {
    "text": "image along with the uh the text prompt as well and you can get it to reason",
    "start": "2432680",
    "end": "2438240"
  },
  {
    "text": "over the image and direct it with your text as well and this is essentially the concept",
    "start": "2438240",
    "end": "2445160"
  },
  {
    "text": "of augmenting your generation not with not just text but also images and and",
    "start": "2445160",
    "end": "2450760"
  },
  {
    "text": "audio and and video and a lot of companies are going towards this now with um Google announcing things like",
    "start": "2450760",
    "end": "2456480"
  },
  {
    "text": "Gemini which understands audio Al it also understands uh images as well open",
    "start": "2456480",
    "end": "2462040"
  },
  {
    "text": "AI announcing gp4 Vision there's a open source models that can also do this so",
    "start": "2462040",
    "end": "2467240"
  },
  {
    "text": "it's only it's only a limited time before this comes to apps all around us",
    "start": "2467240",
    "end": "2473680"
  },
  {
    "text": "so the last demo that I want to show people here is a large multimodal demo and this one is pretty recent this was",
    "start": "2473680",
    "end": "2479880"
  },
  {
    "text": "released I believe just it might be this week or late last week this is a model",
    "start": "2479880",
    "end": "2485040"
  },
  {
    "text": "called lava it's a a language uh Vision assistant model and it",
    "start": "2485040",
    "end": "2490240"
  },
  {
    "text": "understands both text and images and it can generate text so you pass in an image text it will output text for you",
    "start": "2490240",
    "end": "2498560"
  },
  {
    "text": "and the reason why this is relevant is because if you have a tool to do retrieval of these modalities if you can",
    "start": "2498560",
    "end": "2504240"
  },
  {
    "text": "search for images and text and you have a reasoning engine that can take in text and uh images these make a very Dynamic",
    "start": "2504240",
    "end": "2512000"
  },
  {
    "text": "pair right so the last demo that I want to show people here is um this lava demo",
    "start": "2512000",
    "end": "2518319"
  },
  {
    "text": "and this is also publicly available online so you can play with this so a couple of images that I that I prepped",
    "start": "2518319",
    "end": "2524680"
  },
  {
    "text": "here and these work quite well actually so let me let's do this one first so",
    "start": "2524680",
    "end": "2531760"
  },
  {
    "text": "this is a diagram here let me zoom into that let's go full",
    "start": "2531760",
    "end": "2539359"
  },
  {
    "text": "screen here okay so it's just the diagram and then I'll ask it",
    "start": "2539359",
    "end": "2547920"
  },
  {
    "text": "okay so ask it describe what you see in the image and I want you to imagine as if I retrieve that from some database",
    "start": "2549000",
    "end": "2555400"
  },
  {
    "text": "here I just kind of dragged and dropped it but really the the pipeline would be retrieving something relevant and then",
    "start": "2555400",
    "end": "2561240"
  },
  {
    "text": "going in and um and doing this multimodal reasoning and the difference between the",
    "start": "2561240",
    "end": "2567960"
  },
  {
    "text": "previous version of this and the one that was released uh this week is that this one reasons really well over words",
    "start": "2567960",
    "end": "2574319"
  },
  {
    "text": "flowcharts it can follow logic as well",
    "start": "2574319",
    "end": "2579119"
  },
  {
    "text": "so it can actually follow all the logic it understands the yes and NOS the The Logical flow over the diagram as",
    "start": "2582280",
    "end": "2590119"
  },
  {
    "text": "well and if you pair this with tools that can",
    "start": "2592960",
    "end": "2598440"
  },
  {
    "text": "unstructed ifs for you you've essentially got agents that can read",
    "start": "2598440",
    "end": "2603960"
  },
  {
    "text": "over PDFs for you and and reason over them right and this works quite well the other one",
    "start": "2603960",
    "end": "2609599"
  },
  {
    "text": "that I want to show you here is let's say we take I took a screenshot of of",
    "start": "2609599",
    "end": "2614680"
  },
  {
    "text": "this app just the top part here and I wanted to see if it could generate code for me um just the front end code for",
    "start": "2614680",
    "end": "2622400"
  },
  {
    "text": "that and I was testing it last night and it works pretty well so let's see this",
    "start": "2622400",
    "end": "2628720"
  },
  {
    "text": "um let's see can you write code for",
    "start": "2629040",
    "end": "2635559"
  },
  {
    "text": "the website the image let's see if it performs",
    "start": "2635559",
    "end": "2642640"
  },
  {
    "text": "here it was able to work pretty well last night so let's",
    "start": "2644280",
    "end": "2649440"
  },
  {
    "text": "see and this is not even the most powerful uh language Vision model that we have this is probably the most",
    "start": "2654079",
    "end": "2661200"
  },
  {
    "text": "powerful open source model that we have right now",
    "start": "2661200",
    "end": "2665960"
  },
  {
    "text": "the most uh interesting thing I found out found about this is not not that it could generate this code but at the end",
    "start": "2667640",
    "end": "2674400"
  },
  {
    "text": "it also tells you you know this is just the front end there's no back end attached to this so if you click the buttons it won't actually do anything it",
    "start": "2674400",
    "end": "2681559"
  },
  {
    "text": "understands the context of of what's going on as",
    "start": "2681559",
    "end": "2685800"
  },
  {
    "text": "well just take some time I I don't think the server that this is launched on is the most powerful but yeah this is uh",
    "start": "2688359",
    "end": "2696359"
  },
  {
    "text": "this is a effectively what I wanted to talk about let's give it some time I'll go back here that really just",
    "start": "2696359",
    "end": "2706440"
  },
  {
    "text": "uh ends my talk if you guys wanted if you're interested in this technology check us out uh if you have any",
    "start": "2706440",
    "end": "2712000"
  },
  {
    "text": "questions for me I'll take those now but you can also connect with me uh online and all of the demos that I showed uh in",
    "start": "2712000",
    "end": "2719440"
  },
  {
    "text": "the talk you can grab them from here so I'll just post these uh right now so if",
    "start": "2719440",
    "end": "2725200"
  },
  {
    "text": "you want you can you can have access to them all the demos are are linked here as well all right folks um any questions I",
    "start": "2725200",
    "end": "2732440"
  },
  {
    "text": "think this is done yeah it is done",
    "start": "2732440",
    "end": "2737040"
  },
  {
    "text": "okay questions yes um can you replace a let's say you Vector",
    "start": "2738720",
    "end": "2746400"
  },
  {
    "text": "article out you got something new yeah and repl if you if the document changes yes",
    "start": "2746400",
    "end": "2754400"
  },
  {
    "text": "so because a database is exact that you can do all you can do any crud operation",
    "start": "2754400",
    "end": "2759880"
  },
  {
    "text": "you can update the vector with the new object so you say this object that used to have this Vector is now updated",
    "start": "2759880",
    "end": "2766520"
  },
  {
    "text": "project this into the new space and now get a new Vector representation for it so you can do all sorts of and all the",
    "start": "2766520",
    "end": "2772280"
  },
  {
    "text": "crud operations are constant time you can do them in real time whether you're scaling up from 10 objects to a billion",
    "start": "2772280",
    "end": "2778240"
  },
  {
    "text": "objects it doesn't matter uh yeah when tring all the",
    "start": "2778240",
    "end": "2784160"
  },
  {
    "text": "different for the mul uh things M how do you make simar objects simar vectors",
    "start": "2784160",
    "end": "2793119"
  },
  {
    "text": "yeah this is I could imagine something being rot one of the dimensions yes yeah this is a great question so this is one",
    "start": "2793119",
    "end": "2798839"
  },
  {
    "text": "of the details that I didn't want to or or that I didn't include for this particular talk but how they how you",
    "start": "2798839",
    "end": "2804319"
  },
  {
    "text": "actually train these models is you take all of the different models so you can have a text model that is a master of",
    "start": "2804319",
    "end": "2810920"
  },
  {
    "text": "its craft it understands text and then you take an image model that is a state-of-the-art image understanding model and you can have each one for its",
    "start": "2810920",
    "end": "2817680"
  },
  {
    "text": "own modality so let's say you have six modalities you'll have six uh unique models they all project into separate",
    "start": "2817680",
    "end": "2824640"
  },
  {
    "text": "vectors the problem is those vectors cannot be cannot be plotted together even if they're all 3D or 300 Dimension",
    "start": "2824640",
    "end": "2831839"
  },
  {
    "text": "if you put them in the same Vector space a lion and the description of a lion might be all the way in different locations so the training process to",
    "start": "2831839",
    "end": "2839000"
  },
  {
    "text": "string together these models includes uh what are positive and negative samples so in the training process you tell the",
    "start": "2839000",
    "end": "2846599"
  },
  {
    "text": "model this is the image representation of a lion this is the word representation of a lion pull those two concepts together",
    "start": "2846599",
    "end": "2853800"
  },
  {
    "text": "in Vector space and this is let's say a burger push that away from the lion right and so this pushing and pulling of",
    "start": "2853800",
    "end": "2860200"
  },
  {
    "text": "positive and negative examples makes it so that by the time the model is ready and you're doing this multimodal",
    "start": "2860200",
    "end": "2865319"
  },
  {
    "text": "retrieval it uh has uh objects or concepts that are closer together clustered in Vector",
    "start": "2865319",
    "end": "2872599"
  },
  {
    "text": "space uh yeah question uh yeah so how easy would it be to migrate to the model",
    "start": "2872599",
    "end": "2879559"
  },
  {
    "text": "your existing database you you would have to roriz all of your data in that model it's it's similar to asking a",
    "start": "2879559",
    "end": "2887480"
  },
  {
    "text": "question in a language let's say you have all of your data in English and then you want to migrate it to French",
    "start": "2887480",
    "end": "2893440"
  },
  {
    "text": "you would have to translate all of your data into French and then you would have to translate your queries into French as",
    "start": "2893440",
    "end": "2898920"
  },
  {
    "text": "well right so the the model is essentially translating if you use one model your vectors speak the language of",
    "start": "2898920",
    "end": "2904559"
  },
  {
    "text": "that model in order to bring out another model you would essentially have to translate all of your data into that model's language and then now you can",
    "start": "2904559",
    "end": "2910839"
  },
  {
    "text": "query it so this is this is the one thing that you would have to do yes question are those models aware",
    "start": "2910839",
    "end": "2918240"
  },
  {
    "text": "of time you say between this dat",
    "start": "2918240",
    "end": "2923520"
  },
  {
    "text": "and can I say to the model what about events happened last year specific of",
    "start": "2923520",
    "end": "2929920"
  },
  {
    "text": "the yeah the models are not aware of time um so these large language models have some concept of time but these",
    "start": "2929920",
    "end": "2937960"
  },
  {
    "text": "embedding models these models that translate data into vectors are not aware of time uh but fortunately we",
    "start": "2937960",
    "end": "2943599"
  },
  {
    "text": "don't need them to be because a vector database cap kind of accounts for that by doing filtered search so a vector",
    "start": "2943599",
    "end": "2950079"
  },
  {
    "text": "database does Vector search does the semantic search but you can also have filter search on top of that so you can",
    "start": "2950079",
    "end": "2956880"
  },
  {
    "text": "say I've got my data objects and my Vector objects but I also have a bunch of metadata fields and I want to filter",
    "start": "2956880",
    "end": "2963680"
  },
  {
    "text": "I want to say only look over the last 6 months worth of data so you can go from a th000 objects down to five objects",
    "start": "2963680",
    "end": "2970640"
  },
  {
    "text": "that happened in the last uh 6 months and then retrieve the most relevant concept from there right so we have this",
    "start": "2970640",
    "end": "2977359"
  },
  {
    "text": "pre-filtered search that happens in Vector databases where uh we don't really need the models to handle this",
    "start": "2977359",
    "end": "2983319"
  },
  {
    "text": "type of um spatial we them exactly exactly it's a Sim the data events of",
    "start": "2983319",
    "end": "2990359"
  },
  {
    "text": "human history yeah happens during we will have to give them some",
    "start": "2990359",
    "end": "2997119"
  },
  {
    "text": "metadata exactly and the metadata is not even the model doesn't even know that there's metadata the vector database",
    "start": "2997119",
    "end": "3003760"
  },
  {
    "text": "filters and then selects candidates that it does Vector search over afterwards right so it's only really us the the",
    "start": "3003760",
    "end": "3010440"
  },
  {
    "text": "programmers that know that I need to filter with respect to this metadata so for example if a if a customer is",
    "start": "3010440",
    "end": "3016119"
  },
  {
    "text": "clicking around and they're interested in buying shoes if I do Vector search this is one of the fuzzy things about",
    "start": "3016119",
    "end": "3021640"
  },
  {
    "text": "Vector search you even if you have nothing related to the query you might get back object that are the closest",
    "start": "3021640",
    "end": "3028440"
  },
  {
    "text": "right because it has to return back five objects you might get shirts back so one",
    "start": "3028440",
    "end": "3033760"
  },
  {
    "text": "one thing to do in production is do filtering and say only look at objects of this category and then within objects",
    "start": "3033760",
    "end": "3040799"
  },
  {
    "text": "of that category recommend to me five of the most similar so you can kind of tame the the wildness of semantic search with",
    "start": "3040799",
    "end": "3048760"
  },
  {
    "text": "filtered search as well using this concept yes you always have the uh the",
    "start": "3048760",
    "end": "3056400"
  },
  {
    "text": "dat",
    "start": "3056400",
    "end": "3058640"
  },
  {
    "text": "Ur yeah so the vector database only ever stores the vector and all of the data is",
    "start": "3062559",
    "end": "3070119"
  },
  {
    "text": "stored on disk so the vector database runs in memory and it's quite Ram hungry",
    "start": "3070119",
    "end": "3076079"
  },
  {
    "text": "all the other uh data objects whether it's video audio uh they're all stored on disk and they're",
    "start": "3076079",
    "end": "3082520"
  },
  {
    "text": "separate yeah how is looking up the dist between all the St vectors so fast",
    "start": "3082520",
    "end": "3089119"
  },
  {
    "text": "because I would imagine have to meas all the yeah",
    "start": "3089119",
    "end": "3094520"
  },
  {
    "text": "exactly if you're doing Brute Force search you that's exactly what you have to do you you come in with your query",
    "start": "3094520",
    "end": "3100000"
  },
  {
    "text": "you come in with the pink dot and you calculate the distance from the pink dot to every other Green Dot every other",
    "start": "3100000",
    "end": "3105040"
  },
  {
    "text": "object that you have and that's prohibitively slow because you would have to do as many computations as the",
    "start": "3105040",
    "end": "3111559"
  },
  {
    "text": "number of objects in your database and it's even slower because it depends on the dimensionality of the vector if it's",
    "start": "3111559",
    "end": "3116839"
  },
  {
    "text": "a 4,000 dimensional Vector it'll be slower um so how we scale that up is an engineering problem and what we do is we",
    "start": "3116839",
    "end": "3123079"
  },
  {
    "text": "make smart choices about what we want to compare to so we let's say we have it's",
    "start": "3123079",
    "end": "3128359"
  },
  {
    "text": "almost like thinking about traveling if you want to if you want to go to London",
    "start": "3128359",
    "end": "3133599"
  },
  {
    "text": "if you want to come to this conference you're not going to say I want to look up all sorts of different locations I'm",
    "start": "3133599",
    "end": "3140200"
  },
  {
    "text": "going to do this uh far away comparison first and then if I say okay the conference is located in this proximity",
    "start": "3140200",
    "end": "3147079"
  },
  {
    "text": "I can do really quick uh comparisons and distance uh calculations to the",
    "start": "3147079",
    "end": "3152599"
  },
  {
    "text": "important locations here I don't have to do comparisons in like um I don't know us or something like that right and so",
    "start": "3152599",
    "end": "3158760"
  },
  {
    "text": "effectively the um the algorithm that's running underneath is prioritizing there's a hierarchy of these are the",
    "start": "3158760",
    "end": "3165240"
  },
  {
    "text": "most important distances to calculate these other ones are not important in this particular case and then based on",
    "start": "3165240",
    "end": "3170480"
  },
  {
    "text": "the ones that are important you you eliminate a bunch of possibilities so that now rather than comparing to",
    "start": "3170480",
    "end": "3176880"
  },
  {
    "text": "everything you're only ever comparing to a exponentially small amount of possibilities and this is what allows it",
    "start": "3176880",
    "end": "3183200"
  },
  {
    "text": "to scale otherwise if you had a billion objects you would be sitting here all day and for one search",
    "start": "3183200",
    "end": "3189400"
  },
  {
    "text": "right yes so like a simplistic example that would just be like if you have a",
    "start": "3189400",
    "end": "3194720"
  },
  {
    "text": "vector that is you know 4.3 you're only going to look at objects that have uh",
    "start": "3194720",
    "end": "3201680"
  },
  {
    "text": "that particular Dimension plus or minus you know one or5 of that and then do the same",
    "start": "3201680",
    "end": "3207400"
  },
  {
    "text": "with each Dimension but individually and then you do full yes exactly you can",
    "start": "3207400",
    "end": "3214000"
  },
  {
    "text": "think of it that way the intuition behind it is is very similar to that so you're effectively looking at different",
    "start": "3214000",
    "end": "3220280"
  },
  {
    "text": "regions of vectors and you're saying because the query lives in this region you don't even have to compare to other",
    "start": "3220280",
    "end": "3226079"
  },
  {
    "text": "regions you've got enough candidate objects within that region to do comparisons with",
    "start": "3226079",
    "end": "3232640"
  },
  {
    "text": "right there's a hand up there yeah yeah I'm just trying to understand so something like IM I'm like getb",
    "start": "3232640",
    "end": "3242400"
  },
  {
    "text": "values that what do you use",
    "start": "3242400",
    "end": "3248359"
  },
  {
    "text": "Tex yeah so actually the vectors are not the RGB values one way to understand how",
    "start": "3248359",
    "end": "3254520"
  },
  {
    "text": "the numbers in code meaning is through RGB values but what the vectors are are",
    "start": "3254520",
    "end": "3259839"
  },
  {
    "text": "these are outputs from these machine learning models and the Machine learning models have been trained to do some end",
    "start": "3259839",
    "end": "3265000"
  },
  {
    "text": "level task right let's say I train a machine learning model to differentiate between a cat and a dog and the model",
    "start": "3265000",
    "end": "3271240"
  },
  {
    "text": "get becomes an expert at differentiating the the furriness of a cat and the the whiskers of a dog so on and so forth",
    "start": "3271240",
    "end": "3277359"
  },
  {
    "text": "right so when you give it an image it becomes an expert at extracting or",
    "start": "3277359",
    "end": "3282720"
  },
  {
    "text": "learning features about that image and those numbers those features are encoded as these numbers we don't really",
    "start": "3282720",
    "end": "3288920"
  },
  {
    "text": "understand exactly what each feature is for in the case of RGB we know exactly what the r channel is right it's the",
    "start": "3288920",
    "end": "3294599"
  },
  {
    "text": "intensity of the red but in in the vectors that I showed here we don't really know what the First Dimension is",
    "start": "3294599",
    "end": "3301280"
  },
  {
    "text": "uh related to what the 2000 Dimension is related to all we know is that because",
    "start": "3301280",
    "end": "3307000"
  },
  {
    "text": "this model has been trained end to end to classify and it can classify very",
    "start": "3307000",
    "end": "3312079"
  },
  {
    "text": "accurately its internal representation of this data must be accurate and we just use that internal representation so",
    "start": "3312079",
    "end": "3318599"
  },
  {
    "text": "we can't really understand or connect the vector representations to to real world Concepts yeah asking more like",
    "start": "3318599",
    "end": "3325480"
  },
  {
    "text": "what chose oh okay yeah so okay so for Words effectively how we uh how we uh",
    "start": "3325480",
    "end": "3332400"
  },
  {
    "text": "extract um the vector representation for this is you can give it two sentences",
    "start": "3332400",
    "end": "3337960"
  },
  {
    "text": "let's say you have a sentence about a salad and then you have a second sentence about a burger and you have a",
    "start": "3337960",
    "end": "3344039"
  },
  {
    "text": "third sentence about um I don't know Big Ben or something like that right and then you do this positive negative pulling in uh in um in in word space so",
    "start": "3344039",
    "end": "3352240"
  },
  {
    "text": "you can capture you can encode all words using indices and you reject them into Vector space and then you say okay the",
    "start": "3352240",
    "end": "3358359"
  },
  {
    "text": "salad and the burger are similar so pull those together and the and big Ben is further away so push that apart but",
    "start": "3358359",
    "end": "3365200"
  },
  {
    "text": "effectively you're just encoding words as into an index and then you're turning",
    "start": "3365200",
    "end": "3370480"
  },
  {
    "text": "those into representations yes how would you",
    "start": "3370480",
    "end": "3376200"
  },
  {
    "text": "validate the outputs of a vector search like how can you be sure this is",
    "start": "3376200",
    "end": "3381839"
  },
  {
    "text": "actually closest thing make yeah so understandable for users",
    "start": "3381839",
    "end": "3387079"
  },
  {
    "text": "one way to do that there's a lot of benchmarks that already tell you that this is a retrieval task if I give you",
    "start": "3387079",
    "end": "3393039"
  },
  {
    "text": "this query I know for sure that these are the most relevant objects to return because they're human labeled and let's",
    "start": "3393039",
    "end": "3399559"
  },
  {
    "text": "say you have a uh an embedding model you have a vector model and you pass it your own data you you test it with these",
    "start": "3399559",
    "end": "3406079"
  },
  {
    "text": "benchmarks to see how how what accuracy it's getting right what recall is it getting if it's really bad you don't",
    "start": "3406079",
    "end": "3411160"
  },
  {
    "text": "want to use it because you already know that the benchmarks are the ground truths right this is how you can quantify this is how at least in the",
    "start": "3411160",
    "end": "3417559"
  },
  {
    "text": "field people State this is the best embedding model because it has the best performance on these",
    "start": "3417559",
    "end": "3422720"
  },
  {
    "text": "benchmarks and there's uh both image benchmarks there's uh text benchmarks as",
    "start": "3422720",
    "end": "3429760"
  },
  {
    "text": "well right okay awesome thank you",
    "start": "3430559",
    "end": "3435440"
  },
  {
    "text": "everybody maybe I can take a picture here as well second",
    "start": "3437000",
    "end": "3442559"
  }
]