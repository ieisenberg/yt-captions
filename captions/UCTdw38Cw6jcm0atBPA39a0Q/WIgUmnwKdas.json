[
  {
    "start": "0",
    "end": "219000"
  },
  {
    "text": "okay good afternoon everyone can you all hear me okay great I cannot see a single thing now that lights been turned on",
    "start": "60",
    "end": "6379"
  },
  {
    "text": "that's quite insane okay welcome to my talk this afternoon on protecting",
    "start": "6379",
    "end": "11610"
  },
  {
    "text": "encryption keys we've Microsoft Azure key vault so my name is Stephen haunts and I've had",
    "start": "11610",
    "end": "17190"
  },
  {
    "text": "quite interesting career working for many different companies in lots of different verticals but these days I am",
    "start": "17190",
    "end": "22529"
  },
  {
    "text": "now independent so I do a lot of in-person training writing books as well as teaching for pro sites and I was to",
    "start": "22529",
    "end": "28980"
  },
  {
    "text": "do some consulting for a blockchain consultancy in the UK called block 3 but",
    "start": "28980",
    "end": "33989"
  },
  {
    "text": "spend most of my time going around training people these days so today this is loosely what we're going to look at",
    "start": "33989",
    "end": "40260"
  },
  {
    "text": "we're going to talk about the threat of data breaches we're going to do a little very quick high-level cryptography overview then we're going to talk about",
    "start": "40260",
    "end": "46980"
  },
  {
    "text": "different key management options that are in place these days and then we're going to talk in a bit more detail about",
    "start": "46980",
    "end": "52260"
  },
  {
    "text": "Azure key votes and then I'm going to show you some different patterns and practices you can use when using key",
    "start": "52260",
    "end": "57390"
  },
  {
    "text": "votes or hardware security modules and we'll be doing some code demos for that so hopefully the Wi-Fi gods are going to",
    "start": "57390",
    "end": "63000"
  },
  {
    "text": "be kind to me this afternoon okay so",
    "start": "63000",
    "end": "68490"
  },
  {
    "text": "first of all let's talk about the threat of data breaches now I've got a website here it's a company called breach level",
    "start": "68490",
    "end": "74369"
  },
  {
    "text": "index and I quite enjoy showing this because they have some really good stats on their homepage so as you can see here",
    "start": "74369",
    "end": "80850"
  },
  {
    "text": "since 2013 and I believe these are us-based statistics there's been nine point seven billion records stolen or",
    "start": "80850",
    "end": "87600"
  },
  {
    "text": "compromised to date now that number doesn't really surprise me or shock me you know we hear about data breaches",
    "start": "87600",
    "end": "92930"
  },
  {
    "text": "pretty much every day in the news the bit that does shock me is the line that's underneath it that says only 4%",
    "start": "92930",
    "end": "99240"
  },
  {
    "text": "of those data breaches were secure breaches when it means by that is the data was encrypted so even though the",
    "start": "99240",
    "end": "104759"
  },
  {
    "text": "data was stolen it was practically useless to anyone who got hold of it so that's quite a low number so we want to",
    "start": "104759",
    "end": "111270"
  },
  {
    "text": "get that number a lot higher which is why I spend a lot of time talking about cryptography in dotnet specifically and",
    "start": "111270",
    "end": "116310"
  },
  {
    "text": "hoping people who have as your key volts but the source hasn't you know the stats have broken down at the bottom of the",
    "start": "116310",
    "end": "122280"
  },
  {
    "text": "page I mean nine point seven billion is a large number so that equates to about five million records every day two",
    "start": "122280",
    "end": "128220"
  },
  {
    "text": "hundred and ten thousand every hour three and a half thousand every minute or about 58 records a second have been stolen so",
    "start": "128220",
    "end": "134930"
  },
  {
    "text": "that's quite a shocking set of numbers so what about the effects of data breaches so as an organization there's",
    "start": "134930",
    "end": "141980"
  },
  {
    "text": "some quite bad consequences that can come from data breaches so it can lead to a lot of reputational damage which",
    "start": "141980",
    "end": "147650"
  },
  {
    "text": "can then come to a lot of loss of sales as people go elsewhere you lose your customers and also you can get legal",
    "start": "147650",
    "end": "154730"
  },
  {
    "text": "action from your customers and other companies as well as very high compliance costs especially if you work around card payments with PCI DSS or any",
    "start": "154730",
    "end": "162739"
  },
  {
    "text": "other regulatory bodies and it could also potentially compromise the safety of your customers so as an organization",
    "start": "162739",
    "end": "168560"
  },
  {
    "text": "the frets are quite bad and there's a high certainty of financial financial",
    "start": "168560",
    "end": "175970"
  },
  {
    "text": "stipulation against you but also as an individual as a private citizen this",
    "start": "175970",
    "end": "181220"
  },
  {
    "text": "some quite bad consequences as well so we're having our personal data stolen you know names addresses phone numbers",
    "start": "181220",
    "end": "186709"
  },
  {
    "text": "quite personal details about us this can lead to identity theft and impersonation which can then in turn lead to a loss of",
    "start": "186709",
    "end": "193700"
  },
  {
    "text": "financial loss of money through financial theft but the side fingers",
    "start": "193700",
    "end": "199880"
  },
  {
    "text": "data breaches are inevitable so we need to kind of change our mindset you know we're never going to get away from the idea of data breaches we just need to",
    "start": "199880",
    "end": "206120"
  },
  {
    "text": "try and protect ourselves better and hope we can get the criminals to move on somewhere else so it's not a case of if",
    "start": "206120",
    "end": "211130"
  },
  {
    "text": "you're gonna get breached it's more a case of when you get breached and I think that's a good kind of mindset to prepare yourself when you're building",
    "start": "211130",
    "end": "216500"
  },
  {
    "text": "your software solutions it's very easy just to focus on perimeter security you",
    "start": "216500",
    "end": "222079"
  },
  {
    "start": "219000",
    "end": "219000"
  },
  {
    "text": "might say I've got really high tech intrusion detection systems I've got firewalls you know so my company must be",
    "start": "222079",
    "end": "227420"
  },
  {
    "text": "good and it is good to do that sort of thing I'm not saying don't do that but what if you've got threats from within your",
    "start": "227420",
    "end": "232640"
  },
  {
    "text": "company what she's got some rogue people in operations who have access to your production databases I mean what you",
    "start": "232640",
    "end": "238700"
  },
  {
    "text": "gonna do about those people because typically a lot of data especially databases might be encrypted at rest and",
    "start": "238700",
    "end": "244730"
  },
  {
    "text": "that's a good thing so sequel server on a during encrypts at rest I think cosmos DB does as well if you've got someone in",
    "start": "244730",
    "end": "250700"
  },
  {
    "text": "your company who has access to those systems what's to stop them from just you know select starring out of all your tables copying that data into a",
    "start": "250700",
    "end": "256519"
  },
  {
    "text": "spreadsheet and then walking off of it so what we need to do is we need to start looking at other ways that we can protect our data by being a bit more",
    "start": "256519",
    "end": "262910"
  },
  {
    "text": "specific we roll a low level or record level encryption this is even more relevant today now",
    "start": "262910",
    "end": "268850"
  },
  {
    "text": "that we've got things like GDP are in full force so if you get caught up in the day to preach and the fines for GDP",
    "start": "268850",
    "end": "275600"
  },
  {
    "text": "are can be quite high against your organization so part of the regulations",
    "start": "275600",
    "end": "281000"
  },
  {
    "text": "on GDP is about the safe storage of datas that's what kind of what the main theme of slay is is giving that extra level of safe storage to your data in",
    "start": "281000",
    "end": "287570"
  },
  {
    "text": "your organization I've worked for many different companies and I've taken the",
    "start": "287570",
    "end": "292850"
  },
  {
    "text": "company names off because he's been filmed but now I've worked for various different internet banks in the UK and",
    "start": "292850",
    "end": "297950"
  },
  {
    "text": "the typical sort of data protection and encryption work that we do there would be things like a secure pin number",
    "start": "297950",
    "end": "303650"
  },
  {
    "text": "storage and secure pin viewers for the websites doing typical you know hashing",
    "start": "303650",
    "end": "308780"
  },
  {
    "text": "or salted hashing of passwords it's just saying that a lot of people are very familiar with these days and integrating with hardware security modules you know",
    "start": "308780",
    "end": "316160"
  },
  {
    "text": "of all sort of things in you know retail finance but we're dealing with a lot of customers debit cards so that's involved",
    "start": "316160",
    "end": "321230"
  },
  {
    "text": "the safe storage and handling of customers card numbers these are very typical things you might have to do if",
    "start": "321230",
    "end": "326420"
  },
  {
    "text": "you work in retail or retail finance as well as HSM or hardware security module integration I've also done a lot of work",
    "start": "326420",
    "end": "334730"
  },
  {
    "text": "around insurance claims management as well so you know similar sort of theme you know we've got lots of passwords",
    "start": "334730",
    "end": "340190"
  },
  {
    "text": "being stored typical things like record level multi tenant record level encryption as well as integration with",
    "start": "340190",
    "end": "346790"
  },
  {
    "text": "magicky volts I've also done a lot of work in healthcare as well where we've had to safely encrypt patient records",
    "start": "346790",
    "end": "353840"
  },
  {
    "text": "Softee they to get stolen about patients and you've got a history of their illnesses and the drugs have been",
    "start": "353840",
    "end": "359060"
  },
  {
    "text": "prescribed that can be very embarrassing because it's very very personal data now a lot of these companies that I've",
    "start": "359060",
    "end": "364820"
  },
  {
    "text": "worked for and probably very similar to what people within the room work for or have one thing in common in that they",
    "start": "364820",
    "end": "370160"
  },
  {
    "text": "are all regular regulated regulatory environments so in the UK where I'm from we have something called the FCA",
    "start": "370160",
    "end": "375770"
  },
  {
    "text": "the financial conduct authority so they govern a lot of our financial and insurance companies but then you've got",
    "start": "375770",
    "end": "381770"
  },
  {
    "text": "PCI DSS which I'm sure a lot of people are familiar with which is all around the legislation around the car to safety",
    "start": "381770",
    "end": "388240"
  },
  {
    "text": "payment card safety and around health in the NHS so really storing people's",
    "start": "388240",
    "end": "394580"
  },
  {
    "text": "personal data in this day and age is quite a high stakes game but not just for large companies even for small startups now we have",
    "start": "394580",
    "end": "401160"
  },
  {
    "text": "things like gdpr which kind of sets in stone you know the expectations of what we do with customer data it really is a",
    "start": "401160",
    "end": "407880"
  },
  {
    "text": "high-stakes game if we get it wrong then the consequences could be quite bad for our companies so as software developers",
    "start": "407880",
    "end": "413520"
  },
  {
    "text": "we have quite a lot of control over making sure they're being not caught short so before we look at as UK volt",
    "start": "413520",
    "end": "419970"
  },
  {
    "text": "more specifically I want to do a very quick primer if you quit toe and I quit",
    "start": "419970",
    "end": "426300"
  },
  {
    "text": "to things like the four pillars of cryptography so we have confidentiality integrity authentication and",
    "start": "426300",
    "end": "433140"
  },
  {
    "text": "non-repudiation so these are kind of that the four core pillars of cryptography or modern cryptography now",
    "start": "433140",
    "end": "438600"
  },
  {
    "text": "in.net and a lot of other languages we typically solve them using these primitives so we have AES and RSA which",
    "start": "438600",
    "end": "445050"
  },
  {
    "text": "are two encryption algorithms one symmetric ones asymmetric integrity we have things like char 256 or char one",
    "start": "445050",
    "end": "452310"
  },
  {
    "text": "md5 char free it's lots of different Givens we can use for integrity for fence occasion we have things like hash",
    "start": "452310",
    "end": "458670"
  },
  {
    "text": "message authentication codes which could be based on different hashing algorithms like char 256 but the key difference is",
    "start": "458670",
    "end": "464850"
  },
  {
    "text": "when you hash your data you actually provide an encryption key so the person who wants to create a hash do you your",
    "start": "464850",
    "end": "472530"
  },
  {
    "text": "recipient wants to create the same hash they need to be in possession of that key and then we have non-repudiation which is something we sold with digital",
    "start": "472530",
    "end": "479100"
  },
  {
    "text": "signatures so norm of you d--ation is all about not being able to deny that a contract has been signed for example so",
    "start": "479100",
    "end": "485070"
  },
  {
    "text": "if I if one of you signs a contract with me that says I will pay you $5,000 for completing some work and we sign that",
    "start": "485070",
    "end": "491460"
  },
  {
    "text": "and have it witnessed you can't then turn around later on and say no actually it was $8,000 you supposed to pay me and",
    "start": "491460",
    "end": "496770"
  },
  {
    "text": "we go well no it's not we've got a contract so you can't repeat was in the document that's kind of what",
    "start": "496770",
    "end": "502410"
  },
  {
    "text": "non-repudiation and digital signatures help us with typically we can use all of these different primitives together to",
    "start": "502410",
    "end": "508080"
  },
  {
    "text": "do what's called hybrid encryption and we're going to touch on a few of these concepts today when we look at some of the demos so if encryption it's broadly",
    "start": "508080",
    "end": "515729"
  },
  {
    "text": "broken down into two areas so we have symmetric encryption and asymmetric encryption symmetric we typically use algorithms",
    "start": "515729",
    "end": "522780"
  },
  {
    "text": "like AES DES or Triple DES but if you're building a new system you really want to",
    "start": "522780",
    "end": "528450"
  },
  {
    "text": "go straight to a es now this works by having a single key you that same key for both encryption and",
    "start": "528450",
    "end": "534389"
  },
  {
    "text": "decryption asymmetric cryptography slightly different so he might use things like RSA and this works with a",
    "start": "534389",
    "end": "541290"
  },
  {
    "text": "split key pair so the keys mathematically linked but you have a private key in a public key so your",
    "start": "541290",
    "end": "546300"
  },
  {
    "text": "private key you keep secret that's yours you never let anyone else have it but your public key you can give to anyone",
    "start": "546300",
    "end": "551970"
  },
  {
    "text": "else so if someone wants to encrypt some data and send it to you they request your public key encrypts it with that",
    "start": "551970",
    "end": "557579"
  },
  {
    "text": "public key send you the data and then you use your private key to decrypt that data now there's pros and cons to pay",
    "start": "557579",
    "end": "565769"
  },
  {
    "text": "for these different types of algorithms so things like IES you know symmetric encryption algorithms they're fast",
    "start": "565769",
    "end": "571410"
  },
  {
    "text": "they're very algorithmic in the way they work and they get they to split it down into blocks and perform very algorithmic operations which is what computers are",
    "start": "571410",
    "end": "577739"
  },
  {
    "text": "very good at but the problem is those encryption keys are very hard to share between different people so if I'm using",
    "start": "577739",
    "end": "583499"
  },
  {
    "text": "AES and I want to give my key to one of you how do I do it do I give it to an USB stick probably not a great idea",
    "start": "583499",
    "end": "589589"
  },
  {
    "text": "don't email it to you terrible idea don't stick it on a server again not a very good idea so getting that key from",
    "start": "589589",
    "end": "596399"
  },
  {
    "text": "point A to point B is very difficult whereas things like RSA on the other",
    "start": "596399",
    "end": "601559"
  },
  {
    "text": "hands the RSA algorithm is actually very slow it's all based around modulus arithmetic and it's things that are",
    "start": "601559",
    "end": "606899"
  },
  {
    "text": "harder for computers to do so therefore it's a lot slower so you've got a performance penalty but it does make the",
    "start": "606899",
    "end": "612540"
  },
  {
    "text": "key showing pop them easier because as we said you have to split key pair one you keep secrets one you can give to anyone actually makes the key showing",
    "start": "612540",
    "end": "619290"
  },
  {
    "text": "aspect slightly easier now in dotnet just shy of hands if I can see is",
    "start": "619290",
    "end": "625889"
  },
  {
    "text": "everyone net developers in here ok pretty much nice view that's cool so in",
    "start": "625889",
    "end": "632009"
  },
  {
    "text": "dotnet you'd use things like AES crypto service provider for doing IES encryption and you might use RSA crypto",
    "start": "632009",
    "end": "637860"
  },
  {
    "text": "service provider for doing RSA encryption so it's a very very high-level primer of some of the things",
    "start": "637860",
    "end": "643559"
  },
  {
    "text": "that we're going to be looking at later so let's now look at key management options so there's various different",
    "start": "643559",
    "end": "649290"
  },
  {
    "text": "ways in which you can store keys and probably the worst way he's doing this which is flat files on a file system",
    "start": "649290",
    "end": "654649"
  },
  {
    "text": "nice it seems laughable to include a slide doing that but I've worked for two companies where when I've gone on to",
    "start": "654649",
    "end": "659970"
  },
  {
    "text": "some of their servers there's a folder on D Drive called keys and into XML files sitting in there",
    "start": "659970",
    "end": "665420"
  },
  {
    "text": "which are their master RSA encryption keys which is quite shocking but you don't want to do that because anyone",
    "start": "665420",
    "end": "671810"
  },
  {
    "text": "breaks into that server they've got your keys that's very bad so the one that we have most familiar with is certificate you know things like",
    "start": "671810",
    "end": "678350"
  },
  {
    "text": "x.509 certificates Kerberos etc and these are a very well-known proven well",
    "start": "678350",
    "end": "683570"
  },
  {
    "text": "tested way of installing Keys on systems they hope you provide your identity of who it's been issued to or where it's",
    "start": "683570",
    "end": "689690"
  },
  {
    "text": "been issued from there lies the public key verification you can install them directly onto servers and they know",
    "start": "689690",
    "end": "695780"
  },
  {
    "text": "they're very robust and proven which is great they're some of the benefits are that generally there's minimal involvement for the end-user so if",
    "start": "695780",
    "end": "702410"
  },
  {
    "text": "you're installing an enterprise system your end-users don't have to get involved with how the keys are installed",
    "start": "702410",
    "end": "708020"
  },
  {
    "text": "you can generally automate it these days you know when you need any additional hardware they're very easy to manage and",
    "start": "708020",
    "end": "714260"
  },
  {
    "text": "I pretty much supported by every system out there whether it's you know a Mac Windows servers Linux servers they're",
    "start": "714260",
    "end": "719750"
  },
  {
    "text": "very well supported but there's a level we can go that's better than that which is to use something called a hardware",
    "start": "719750",
    "end": "724940"
  },
  {
    "text": "security module now hardware security module is a one or two you vacuity device to which you put in a data center",
    "start": "724940",
    "end": "731020"
  },
  {
    "text": "typically you might buy two and have them in different data centers so you can synchronize between the two now",
    "start": "731020",
    "end": "737300"
  },
  {
    "text": "hardware security module is designed to be completely tamper proof so if you try and hack into it or if you try and",
    "start": "737300",
    "end": "742550"
  },
  {
    "start": "738000",
    "end": "738000"
  },
  {
    "text": "remove the case then it will detect this and it will wipe itself and you have to send it back to the manufacturer and it",
    "start": "742550",
    "end": "747950"
  },
  {
    "text": "does this with things like you know pressure sensors heat sensors light sensors they'll cover the chips all in",
    "start": "747950",
    "end": "753590"
  },
  {
    "text": "like a hard resin so you can't get into the chips so they're designed to be secure and we typically use these to",
    "start": "753590",
    "end": "759800"
  },
  {
    "text": "store you know very important master keys or certificates but it's a problem with hardware security modules in it",
    "start": "759800",
    "end": "765890"
  },
  {
    "text": "that typically for most companies a lot of smaller companies they are very cost prohibitive I mean these things can cost",
    "start": "765890",
    "end": "771800"
  },
  {
    "text": "you know anyway after nine fifty thousand dollars and up so for small companies it really isn't saying that",
    "start": "771800",
    "end": "777140"
  },
  {
    "text": "you could use but we have an alternative option and that's to use a jacuz vault",
    "start": "777140",
    "end": "785470"
  },
  {
    "text": "so as your key vault is an abstraction over a series of hardware security",
    "start": "785470",
    "end": "790610"
  },
  {
    "text": "modules that Microsoft provides us and it allows us to safeguard our keys secrets and certificates",
    "start": "790610",
    "end": "796900"
  },
  {
    "text": "now Asha uses this hardware this is the phallus end shield hardware security module I expect it's",
    "start": "796900",
    "end": "803410"
  },
  {
    "text": "quite expensive I went onto their websites try and get a price and it wanted me to phone them to have a conversation so to me that says",
    "start": "803410",
    "end": "808990"
  },
  {
    "text": "expensive because they're not telling me the price upfront but Microsoft thankfully for us have gone out and",
    "start": "808990",
    "end": "815020"
  },
  {
    "text": "bought lots of them and he's stored them all over their data centers around the world that is two ways in which hazard",
    "start": "815020",
    "end": "821470"
  },
  {
    "text": "ki volt can work with it's kind of two primary modes we have software and hardware now regardless of which mode",
    "start": "821470",
    "end": "828190"
  },
  {
    "text": "you use your master keys are always stored on the HSM hardware so they're always Hardware protected but in the",
    "start": "828190",
    "end": "833800"
  },
  {
    "text": "software version any encryption decryption operations you do they'll be done on computer games inside Asha but",
    "start": "833800",
    "end": "839740"
  },
  {
    "text": "they will use those protected keys but the hardware version or your encryption and decryption options will actually",
    "start": "839740",
    "end": "845589"
  },
  {
    "text": "happen on the hardware itself and as you can imagine is but there's a cost difference between the two so typical",
    "start": "845589",
    "end": "851080"
  },
  {
    "text": "recommendation is that for your development and test environments you'd use a software version because it's gonna be a lot cheaper for you but then",
    "start": "851080",
    "end": "857500"
  },
  {
    "text": "for your production environment which is where you really need the best hardware you can get that's when you'll use the",
    "start": "857500",
    "end": "862839"
  },
  {
    "text": "hardware version of Aashiqui volts programmatically it's absolutely no difference between the two once you set them up no there's no code differences",
    "start": "862839",
    "end": "869709"
  },
  {
    "text": "which is great so let's have a quick look at some of the costs just to give you an idea of what its might cost you",
    "start": "869709",
    "end": "877830"
  },
  {
    "text": "some of the techniques I'm gonna show you later will help you get that cost down to virtually zero so for non key",
    "start": "877830",
    "end": "885820"
  },
  {
    "text": "operations so for non encryption operations you're looking at between two",
    "start": "885820",
    "end": "891130"
  },
  {
    "text": "different tiers you've got standard and premium pricing tiers so you're looking at about three cents per 10,000 operations so it's not that expensive",
    "start": "891130",
    "end": "897520"
  },
  {
    "text": "really certificate operations if you want to do certificate renewal request that's going to cost you four dollars",
    "start": "897520",
    "end": "902800"
  },
  {
    "text": "and then using that certificate is free cents or free US cents per 10,000",
    "start": "902800",
    "end": "908080"
  },
  {
    "text": "operations now for the software encryption option if you're using RSA",
    "start": "908080",
    "end": "913900"
  },
  {
    "text": "2048 which is the standard encryption key size on as your key volts again across both pricing tiers you're looking",
    "start": "913900",
    "end": "920650"
  },
  {
    "text": "at about three cents per 10,000 operations so again it's it's quite cost effective now they have got higher",
    "start": "920650",
    "end": "927730"
  },
  {
    "text": "strength RSA keys in preview at the moment which is you free if using the software version but there will be a cost associated to",
    "start": "927730",
    "end": "934569"
  },
  {
    "text": "those when they come out now if you're using the hardware version of the HSM",
    "start": "934569",
    "end": "940139"
  },
  {
    "text": "then you can't use the standard pricing - you have to use the premiums here so",
    "start": "940139",
    "end": "945399"
  },
  {
    "text": "for the standard default size key of 2048 bits you're looking at about a dollar per key and then again 3 cents",
    "start": "945399",
    "end": "952449"
  },
  {
    "text": "per 10,000 operations the higher strength keys it's a tiered pricing",
    "start": "952449",
    "end": "957819"
  },
  {
    "text": "model so your first 250 keys will cost you five dollars per key and then the price staggers to get lower the more you",
    "start": "957819",
    "end": "963249"
  },
  {
    "text": "use so just to give you a kind of a rough impression of what the price is whereas if you sort go and buy one of",
    "start": "963249",
    "end": "969399"
  },
  {
    "text": "these devices you could be looking you know fifty sixty thousand dollars or higher now one key thing to remember is",
    "start": "969399",
    "end": "976839"
  },
  {
    "text": "that once you put a key in two key volt it never comes out again so you never get to see the raw key ever now you can",
    "start": "976839",
    "end": "982989"
  },
  {
    "start": "979000",
    "end": "979000"
  },
  {
    "text": "go into the azure portal and backup the key but the backup you get will be a fully encrypted version of the key so",
    "start": "982989",
    "end": "989290"
  },
  {
    "text": "you can never actually see the original key nurse deliberate unfortunately in",
    "start": "989290",
    "end": "994389"
  },
  {
    "text": "the time we've got we actually can't go through the full setup process could haven't got enough time to do that but the documentation provided by Microsoft",
    "start": "994389",
    "end": "1000540"
  },
  {
    "text": "is actually very good they've done a really good job of documentation for this so link on the screen there or if",
    "start": "1000540",
    "end": "1005730"
  },
  {
    "text": "you just go to google and type as your key volt getting started and that will run you through the processes it's not",
    "start": "1005730",
    "end": "1011249"
  },
  {
    "text": "that complicated but broadly what you're looking at if you're using PowerShell to set this up is you create a resource",
    "start": "1011249",
    "end": "1016559"
  },
  {
    "text": "group or we use an existing resource group you create the key vault you specify the resource group the region",
    "start": "1016559",
    "end": "1022739"
  },
  {
    "text": "you want it set up in and if you want the hardware or software variants and then from there in the port's where you",
    "start": "1022739",
    "end": "1028199"
  },
  {
    "text": "can actually create keys upload secrets etc once that's done you have full blade",
    "start": "1028199",
    "end": "1033928"
  },
  {
    "text": "access to it in the portal like you would with any other asset in Asia so you can administer it monitor it from",
    "start": "1033929",
    "end": "1039000"
  },
  {
    "text": "there now if you want to programmatically access the key vault you've got a few extra steps you need to",
    "start": "1039000",
    "end": "1044819"
  },
  {
    "text": "do now first of all you need to go into Azure Active Directory emerge to your application and then that will give you",
    "start": "1044819",
    "end": "1051000"
  },
  {
    "text": "your application ID and shared secret that you need to present I know many of",
    "start": "1051000",
    "end": "1056070"
  },
  {
    "text": "you mentioned azure ad anomaly fills people full of dread but actually the the process is actually fairly straightforward",
    "start": "1056070",
    "end": "1062480"
  },
  {
    "text": "now there's kind of two things that we going to be looking at story in on the key vault today so first of all we've got keys so they're RSA encryption keys",
    "start": "1062630",
    "end": "1069660"
  },
  {
    "start": "1063000",
    "end": "1063000"
  },
  {
    "text": "and then the other thing is secrets now secrets are effectively two small pieces of text that you can store in the key",
    "start": "1069660",
    "end": "1076320"
  },
  {
    "text": "volt and then the key vault will actually handle the encryption of those for you so that could be things like database connection strings app IDs for",
    "start": "1076320",
    "end": "1083970"
  },
  {
    "text": "or API keys for other systems using so anything you don't necessarily want to check into github or TFS you can store",
    "start": "1083970",
    "end": "1091290"
  },
  {
    "text": "in as your key vault this effectively a key key value pair store now the source",
    "start": "1091290",
    "end": "1097410"
  },
  {
    "text": "code we're gonna be looking at today is all available here on github I've released a hundred MIT license you can",
    "start": "1097410",
    "end": "1104580"
  },
  {
    "text": "just take it use it remix it do what you want with it so if you're looking to get off and running Micky vault quickly just",
    "start": "1104580",
    "end": "1109800"
  },
  {
    "text": "take what's what's in there if you want now the thing you have to do when you set it up is you install the Microsoft",
    "start": "1109800",
    "end": "1116700"
  },
  {
    "text": "Azure key volts you get a package and that gives you everything you need it's not net standard 1.6 compliant so it",
    "start": "1116700",
    "end": "1123690"
  },
  {
    "text": "works with net core hence why I'm presenting on a Mac but it works class you know Windows Linux and everything",
    "start": "1123690",
    "end": "1129480"
  },
  {
    "text": "else that dotnet core or dotnet framework currently runs on so let's",
    "start": "1129480",
    "end": "1134910"
  },
  {
    "text": "look at an azure key vault hello world and let's hope the Wi-Fi gods are going to be kind to me this afternoon so I've",
    "start": "1134910",
    "end": "1142020"
  },
  {
    "text": "got a key vault already prepared and I've got a simple project here called simple encrypt and decrypt this is going",
    "start": "1142020",
    "end": "1148620"
  },
  {
    "text": "to be our hello world of a jaqui volts so what I've done as I created the",
    "start": "1148620",
    "end": "1155010"
  },
  {
    "text": "interface and I've just abstract here to out the operations that we're actually going to use for the key vault just to make things a bit more readable and then",
    "start": "1155010",
    "end": "1161370"
  },
  {
    "text": "from there I've created a key volts and class you know I've just hacked in the client secret there and the key won't",
    "start": "1161370",
    "end": "1167730"
  },
  {
    "text": "address they don't I've implemented you know things like create key which literally just calls down to the azure",
    "start": "1167730",
    "end": "1174600"
  },
  {
    "text": "class library provided by Microsoft and then there's a base class so it's just",
    "start": "1174600",
    "end": "1179610"
  },
  {
    "text": "handles things like setting up the JSON web keys so all this will happen behind the scenes for you as I say feel free to",
    "start": "1179610",
    "end": "1186870"
  },
  {
    "text": "take it and use it yourself so let's look at the code so first of all I'm gonna initialize a key volts then I'm",
    "start": "1186870",
    "end": "1193140"
  },
  {
    "text": "going to create a key called Steven horn C's key and then gonna encrypt a piece of data",
    "start": "1193140",
    "end": "1198410"
  },
  {
    "text": "so we've got hello world because he wouldn't be computer science without hello world I'm going cryptic and",
    "start": "1198410",
    "end": "1204200"
  },
  {
    "text": "decrypt it display the text and then I'm going to clear up after myself and delete the key so let's take the Wi-Fi works today so",
    "start": "1204200",
    "end": "1218270"
  },
  {
    "text": "I'm creating the key and once we've done that we get a URI returned to us it's a",
    "start": "1218270",
    "end": "1225740"
  },
  {
    "text": "bit difficult to see but see URI which is effectively the ID you're going to use for that key so whenever you want to encrypt anything you give it that ID so",
    "start": "1225740",
    "end": "1232520"
  },
  {
    "text": "I want you to use this key set so we",
    "start": "1232520",
    "end": "1237919"
  },
  {
    "text": "have our string now I'm going to do the encrypt operation so I turn that string into a byte array I just come down here",
    "start": "1237919",
    "end": "1244870"
  },
  {
    "text": "call one method on the client library and then that data is sent back as a",
    "start": "1244870",
    "end": "1252470"
  },
  {
    "text": "byte array so that's how encrypted data then if I want to go in the cryptic straight away again I'll just call the",
    "start": "1252470",
    "end": "1258799"
  },
  {
    "text": "decrypt Smurfs it on the client library and that's going to return a byte array with our decrypted data so if I convert",
    "start": "1258799",
    "end": "1265730"
  },
  {
    "text": "those both two strings be hard to see there see I use your imagination there's",
    "start": "1265730",
    "end": "1271250"
  },
  {
    "text": "a lot of gobbledygook in that variable there she's our encrypted data and then you can see where we've decrypted it",
    "start": "1271250",
    "end": "1276289"
  },
  {
    "text": "straight away so it says hello world so we've taken a piece of data we've encrypted it and we've decrypted it",
    "start": "1276289",
    "end": "1282169"
  },
  {
    "text": "straight away so we've tested the azure keyboards working for us this afternoon and I'm just going to delete my key",
    "start": "1282169",
    "end": "1289059"
  },
  {
    "text": "because I like to keep things tidy okay",
    "start": "1289059",
    "end": "1295720"
  },
  {
    "text": "right effective slides now in my time",
    "start": "1298460",
    "end": "1305340"
  },
  {
    "text": "using key volts there's been various you know patterns and practices that me and my teams that worked with before who've sort of recognized so I want to present",
    "start": "1305340",
    "end": "1312450"
  },
  {
    "text": "some of those to you this morning it's afternoon and we've got six patterns",
    "start": "1312450",
    "end": "1319080"
  },
  {
    "text": "open to explore some multiple environments configuration of secrets local key wrapping key versioning",
    "start": "1319080",
    "end": "1324169"
  },
  {
    "text": "password protection and digital signing so first of all we talked about multiple",
    "start": "1324169",
    "end": "1330720"
  },
  {
    "text": "environments and that the key thing I want to stress here is that you if",
    "start": "1330720",
    "end": "1336509"
  },
  {
    "text": "you're creating a key vault never use the same key vault between your test environments in your production environments so the key vault used for",
    "start": "1336509",
    "end": "1343139"
  },
  {
    "text": "production you need to tree is one of the most important assets in your organization so you never want to share",
    "start": "1343139",
    "end": "1349019"
  },
  {
    "text": "the same one between tests and dev know what you could do is you could have one key vault that you use for all of your",
    "start": "1349019",
    "end": "1355230"
  },
  {
    "text": "testing environments that's absolutely fine I've seen people do that before and then have a separate one for production or if you like to script your",
    "start": "1355230",
    "end": "1362129"
  },
  {
    "text": "environments and you do infrastructure as code then you might as well go and create you know a new key volper environments but the important thing is",
    "start": "1362129",
    "end": "1369990"
  },
  {
    "text": "never share keys from your production environment 24 are free environments that's just a generally very bad idea",
    "start": "1369990",
    "end": "1375299"
  },
  {
    "text": "okay so the next one is configuration is secrets so we've mentioned before that",
    "start": "1375299",
    "end": "1381269"
  },
  {
    "start": "1377000",
    "end": "1377000"
  },
  {
    "text": "you can store secrets on the key vault and secrets are blobs of text up to 25k in size and it's kind of like a key",
    "start": "1381269",
    "end": "1388110"
  },
  {
    "text": "value pair store so you give it an identifier and the text you just tell the key vault to store it for you you",
    "start": "1388110",
    "end": "1393779"
  },
  {
    "text": "don't even have to provide encryption keys it's all managed behind the scenes and by key vault",
    "start": "1393779",
    "end": "1399379"
  },
  {
    "text": "so typical things you might use these for are connection strings you know the",
    "start": "1399379",
    "end": "1404610"
  },
  {
    "text": "connection strings for your databases or cosmos DB Mo's will store them in here so no one else can read them and API",
    "start": "1404610",
    "end": "1411330"
  },
  {
    "text": "keys various cache connection strings or just generally anything that's confidential that you don't want any",
    "start": "1411330",
    "end": "1418049"
  },
  {
    "text": "other developer or anyone to have access to now the secrets are versioned in key",
    "start": "1418049",
    "end": "1424309"
  },
  {
    "text": "volts if you have a secret called my secret and you write it twice and you'll get two versions in the key volt and then you can refer to them by version",
    "start": "1424309",
    "end": "1430700"
  },
  {
    "text": "number if you want to so there is a versioning ability there if you so need it so let's look at how to do that in",
    "start": "1430700",
    "end": "1437690"
  },
  {
    "text": "code and the good thing is I think we're showing today is actually very simple to do which is good yeah she removes the",
    "start": "1437690",
    "end": "1445190"
  },
  {
    "text": "barrier to entry if you want to incorporate any of these so what I'm",
    "start": "1445190",
    "end": "1453590"
  },
  {
    "text": "gonna do here is I'm gonna create a secret called Steven haunts his secrets my secret is mary had a little lamb' I'm",
    "start": "1453590",
    "end": "1459769"
  },
  {
    "text": "going to store that into the key vault and I'm going to retrieve it straight away so we should be able to receive the same piece of text back so just quickly",
    "start": "1459769",
    "end": "1465950"
  },
  {
    "text": "validate that that works",
    "start": "1465950",
    "end": "1468850"
  },
  {
    "text": "okay so I called set secret and again I get a URI back for that secret which we",
    "start": "1479230",
    "end": "1485590"
  },
  {
    "text": "can store if we need it but then if I say get C great but passing my original sort of ID which I provided I can then",
    "start": "1485590",
    "end": "1492880"
  },
  {
    "text": "retrieve that secret hope you see we've received a text back mary had a little",
    "start": "1492880",
    "end": "1499240"
  },
  {
    "text": "lamb so we now know that that works that's good it's just a few lines of code to do that",
    "start": "1499240",
    "end": "1505648"
  },
  {
    "text": "the next pattern is local key wrapping and this is where things can get quite interesting and quite powerful for us",
    "start": "1513130",
    "end": "1520630"
  },
  {
    "start": "1514000",
    "end": "1514000"
  },
  {
    "text": "now I've done an encryption operation on a jerky vial to a hardware security module we generally quite slow says",
    "start": "1522010",
    "end": "1528410"
  },
  {
    "text": "Network latency and it's generally quite a slow operation so you don't to be doing you know thousands of them all in",
    "start": "1528410",
    "end": "1533600"
  },
  {
    "text": "one go because it is a slow operation so we want to use a hybrid solution - generally what that will look like is if",
    "start": "1533600",
    "end": "1539809"
  },
  {
    "text": "you want to allow encryption locally using AES because it's fast and flexible and can do it client site but the key",
    "start": "1539809",
    "end": "1546020"
  },
  {
    "text": "that we use with AES we want to protect that in the HSM so what we're going to do is we're going to encrypt it using",
    "start": "1546020",
    "end": "1551090"
  },
  {
    "text": "one of the keys on HSM and then we can store that encrypted key just in our database if it gets compromised and",
    "start": "1551090",
    "end": "1557510"
  },
  {
    "text": "stolen then we know that that key has been protected by more powerful RSA key in the azure key vault and the good",
    "start": "1557510",
    "end": "1565220"
  },
  {
    "text": "thing about this is is if you're you know careful with how you do this so you have a session going into a Web API you",
    "start": "1565220",
    "end": "1570800"
  },
  {
    "text": "might recover and decrypt your AES session key at the beginning and then you might do you know hundreds of",
    "start": "1570800",
    "end": "1576830"
  },
  {
    "text": "encryption or decryption operations but really all you're being charged for is that one time that you recover the AES",
    "start": "1576830",
    "end": "1583670"
  },
  {
    "text": "key all the other encryption operations that you do locally I'm going to cost you anything financially this is a",
    "start": "1583670",
    "end": "1589550"
  },
  {
    "text": "really good way of keeping your cost down on Azure so let's take a look at",
    "start": "1589550",
    "end": "1595400"
  },
  {
    "text": "how that works",
    "start": "1595400",
    "end": "1597820"
  },
  {
    "text": "so in this project phone so I've got a few other helpers so I've got a method",
    "start": "1606210",
    "end": "1611610"
  },
  {
    "text": "for generating a random number this is how we're going to create our a es key we do that using our ng crypto service",
    "start": "1611610",
    "end": "1617940"
  },
  {
    "text": "provider it's effectively a critter graphically secure random number generator we pass in a length between 32",
    "start": "1617940",
    "end": "1624299"
  },
  {
    "text": "for 32 bytes or 256 bits and then we just tell it to fill the array full of",
    "start": "1624299",
    "end": "1630210"
  },
  {
    "text": "random data so that's how we're going to generate our encryption keys for AES then I also have a file here called AES",
    "start": "1630210",
    "end": "1638399"
  },
  {
    "text": "encryption and that literally does a standard AES encryption operation in",
    "start": "1638399",
    "end": "1643529"
  },
  {
    "text": "nets using AES crypto service provider so we have the encrypt operation and the",
    "start": "1643529",
    "end": "1650789"
  },
  {
    "text": "decrypt operation quite straightforward in how they works so if we're looking at encryption we pass in a byte array of",
    "start": "1650789",
    "end": "1656279"
  },
  {
    "text": "our data that we want to encrypt we pass in a key which is photo to bytes but we",
    "start": "1656279",
    "end": "1661320"
  },
  {
    "text": "also have this thing called an initialization vector which is 16 bytes of entropy that you pass into a AES",
    "start": "1661320",
    "end": "1666419"
  },
  {
    "text": "which kind of helps it kick-start the encryption process you need to store that initialization vector but it's not",
    "start": "1666419",
    "end": "1672029"
  },
  {
    "text": "a secret key it's just saying you need to store so let's look at what this looks like so again we're going to",
    "start": "1672029",
    "end": "1681210"
  },
  {
    "text": "create a key in the key volt then I'm going to generate a local key so this",
    "start": "1681210",
    "end": "1686519"
  },
  {
    "text": "will be a 32 byte key I'm going to use with AES I encrypt that key using the",
    "start": "1686519",
    "end": "1692309"
  },
  {
    "text": "key volts so I've now protected it and now if we imagine that we know we go and save that key off in a database",
    "start": "1692309",
    "end": "1697320"
  },
  {
    "text": "somewhere now become back in maybe for a web api or something and we want to do",
    "start": "1697320",
    "end": "1702840"
  },
  {
    "text": "some encryption using that key so the first thing we need to do is to decrypt it with the key volt so we can't use",
    "start": "1702840",
    "end": "1708029"
  },
  {
    "text": "that key until we've decrypted it we generate our initialization vector which again is just a random number that's 16",
    "start": "1708029",
    "end": "1714659"
  },
  {
    "text": "bytes in length and then we do an encrypt and decrypt using AES this is",
    "start": "1714659",
    "end": "1720509"
  },
  {
    "text": "having travelling client-side there's no calls out to the key volt at that point this is all happening locally and then",
    "start": "1720509",
    "end": "1726929"
  },
  {
    "text": "we can view we can view that encrypted text so let's run it",
    "start": "1726929",
    "end": "1732350"
  },
  {
    "text": "on equipment key so I've created my",
    "start": "1734480",
    "end": "1741840"
  },
  {
    "text": "local key which is 32 bytes in length I'm now protecting out with a jerky volt",
    "start": "1741840",
    "end": "1748320"
  },
  {
    "text": "so what we have in this byte array here is completely encrypted so you can convert that to a base64 string store it",
    "start": "1748320",
    "end": "1755130"
  },
  {
    "text": "in your database so now we want to do an encryption operation so first of all we",
    "start": "1755130",
    "end": "1760140"
  },
  {
    "text": "have to recover that key so I'm going to decrypt it using the key vault then I'm",
    "start": "1760140",
    "end": "1766020"
  },
  {
    "text": "going to create my initialization vector now I've got some later on to encrypt so I've got a string here that says make a",
    "start": "1766020",
    "end": "1771990"
  },
  {
    "text": "top-secret stuff we're going clip that so we come into our AES operation",
    "start": "1771990",
    "end": "1779570"
  },
  {
    "text": "encrypt it pull back the byte array we've an encrypted data in and that's now encrypted so now just prove this",
    "start": "1781190",
    "end": "1787860"
  },
  {
    "text": "work so I'm going to decrypt it straight away convert those to text so if we look in the encrypted text folder variable we",
    "start": "1787860",
    "end": "1796320"
  },
  {
    "text": "can see we have our encrypted data might be a bit hard to read on the screen but it is there and then in decrypted data",
    "start": "1796320",
    "end": "1803790"
  },
  {
    "text": "we have the string mega top-secret stuff so the key thing about what we've done there then I mean this is a very simple",
    "start": "1803790",
    "end": "1810210"
  },
  {
    "text": "example but we've used the key vault once to recover the key and then we could go off and do you know a thousand",
    "start": "1810210",
    "end": "1815700"
  },
  {
    "text": "10,000 encryption operations if you wanted to we've only been charged for that one time that we recover the key",
    "start": "1815700",
    "end": "1821360"
  },
  {
    "text": "now if you're in a very high volume transaction volume company that could",
    "start": "1821360",
    "end": "1827070"
  },
  {
    "text": "make quite a big saving for you",
    "start": "1827070",
    "end": "1830330"
  },
  {
    "text": "okay",
    "start": "1832940",
    "end": "1835899"
  },
  {
    "text": "it's an example where I've used this and there's quite an interesting usage pattern so I'll tell you about it today",
    "start": "1840440",
    "end": "1846120"
  },
  {
    "text": "I work for one company where we are doing an online claims management system for insurance companies whereas software",
    "start": "1846120",
    "end": "1852330"
  },
  {
    "text": "as a service provider and it was a platform that was all hosted in Asia and we could not onboard different insurance",
    "start": "1852330",
    "end": "1857910"
  },
  {
    "text": "companies and then when they log into it or their customers log into it they act as different tenants they get their own",
    "start": "1857910",
    "end": "1863370"
  },
  {
    "text": "brand in their own colour schemes and styling so it looks like their own system even though it's our SAS products on the back end now we know we have",
    "start": "1863370",
    "end": "1872090"
  },
  {
    "text": "logically you know one deployed application and we could have you know hundreds of insurance companies all using it now each of those insurance",
    "start": "1872090",
    "end": "1879900"
  },
  {
    "start": "1879000",
    "end": "1879000"
  },
  {
    "text": "companies when we onboard them they'll get their own master key set up in Azure key volt for them so if we had any",
    "start": "1879900",
    "end": "1885780"
  },
  {
    "text": "insurance companies would set up ten keys one per insurance company then what we'd do is using that key wrapping",
    "start": "1885780",
    "end": "1891930"
  },
  {
    "text": "technique we just looked at we'd use AES so you do individual record level encryption of all the personal",
    "start": "1891930",
    "end": "1897600"
  },
  {
    "text": "information for their customers but that encryption key that we use with ies was protected by their master key in the key",
    "start": "1897600",
    "end": "1904290"
  },
  {
    "text": "holds so what this meant is that even though all the insurance company's data was stored together in one big database",
    "start": "1904290",
    "end": "1909540"
  },
  {
    "text": "or set of databases we actually had partitioning via encryption key in the",
    "start": "1909540",
    "end": "1914820"
  },
  {
    "text": "data so insurance company ie would have all their PII data encrypted but their key assurance company be referred their",
    "start": "1914820",
    "end": "1921390"
  },
  {
    "text": "private information protective of their key so if any of those tables ever got stolen and leaked we'll be quite",
    "start": "1921390",
    "end": "1927540"
  },
  {
    "text": "confident we could class that as a secure data breach because they can't identify any people because it's all",
    "start": "1927540",
    "end": "1932610"
  },
  {
    "text": "encrypted so essentially it looks a bit like this so we had the claims platform",
    "start": "1932610",
    "end": "1938070"
  },
  {
    "text": "in the blue box there each insurer had their own set of keys in the key vaults and it's somewhere we'd have like a",
    "start": "1938070",
    "end": "1943470"
  },
  {
    "text": "mapping table in our systems who would have a tenant ID which is the ID that uniquely identifies that insurance",
    "start": "1943470",
    "end": "1948840"
  },
  {
    "text": "company without the key ID which was the URI - the key in the key vaults and then",
    "start": "1948840",
    "end": "1954060"
  },
  {
    "text": "would have an encrypted AES session key that sits in a database so if we wanted to do a an operation on insurance",
    "start": "1954060",
    "end": "1960780"
  },
  {
    "text": "company ones customer data would first have to look at their tenant ID find",
    "start": "1960780",
    "end": "1966420"
  },
  {
    "text": "their key ID bring the key down well send that AES encrypted key to key volt to be decrypted with their",
    "start": "1966420",
    "end": "1972690"
  },
  {
    "text": "and then we could do local encryption/decryption of their data I just offer it's an interesting use case",
    "start": "1972690",
    "end": "1978509"
  },
  {
    "text": "and it's saying that it is quite common especially for SAS systems these days where you have multiple tenants so as",
    "start": "1978509",
    "end": "1985950"
  },
  {
    "text": "you said the advantages are the local encryption operations are faster you decrypt the key on the hsm story in",
    "start": "1985950",
    "end": "1990960"
  },
  {
    "text": "memory so that reduces Network hops and latency and that actually makes it easy to rotate keys as well so if you imagine",
    "start": "1990960",
    "end": "1997590"
  },
  {
    "text": "that you've got a security officer at your company and they may say that you have to change your master encryption",
    "start": "1997590",
    "end": "2002869"
  },
  {
    "text": "keys every six months for example now if you is using that equip ssin key in",
    "start": "2002869",
    "end": "2007940"
  },
  {
    "text": "Azure to encrypt say a million records in your database when you go and change that encryption key wave you got to do",
    "start": "2007940",
    "end": "2013940"
  },
  {
    "text": "you've got to go and be encrypts all of that data but using this key wrapping system that we've used here the only",
    "start": "2013940",
    "end": "2020029"
  },
  {
    "text": "thing you'd have to re-encrypt when you change that key is that local AES session key so you don't have to go mean encrypt all",
    "start": "2020029",
    "end": "2026840"
  },
  {
    "text": "of your data because the AES key is still the same you're just encrypting it with a new master key so actually makes doing key rotation",
    "start": "2026840",
    "end": "2032720"
  },
  {
    "text": "very easy okay so the next what pattern",
    "start": "2032720",
    "end": "2038779"
  },
  {
    "start": "2037000",
    "end": "2037000"
  },
  {
    "text": "is the idea around key versioning now the idea of changing keys is a bit like how you might change your locks on your",
    "start": "2038779",
    "end": "2045200"
  },
  {
    "text": "house so if you have a potential break in or someone tries to break into your house the first thing you're going to do",
    "start": "2045200",
    "end": "2051378"
  },
  {
    "text": "is probably change the keys what so change the locks so it's kind of like the digital equivalent of changing locks",
    "start": "2051379",
    "end": "2058210"
  },
  {
    "text": "now I think we just looked at now so you know it might have key version 1.0 and we use that to encrypt our keys but then",
    "start": "2058210",
    "end": "2066138"
  },
  {
    "text": "if we rotate the key we end up with key version 1.1 and we then really so that's",
    "start": "2066139",
    "end": "2071839"
  },
  {
    "text": "kind of what we just talked about a moment ago but also because of the key versioning attributes in Asia key vault",
    "start": "2071839",
    "end": "2078408"
  },
  {
    "text": "it means a few rights or if you tell it to create a new key of the same ID I",
    "start": "2078409",
    "end": "2083419"
  },
  {
    "text": "will actually create a second version of the key memory for you so it will maintain the history of the keys if you want it to now an area where I've used",
    "start": "2083419",
    "end": "2089779"
  },
  {
    "text": "this before is I do boats at one company and we bought what's called a PCI DSS card token vault now what this is is a",
    "start": "2089779",
    "end": "2097579"
  },
  {
    "text": "system that runs on a separate network and we had a system in there which is designed to protect and encrypts credit",
    "start": "2097579",
    "end": "2104240"
  },
  {
    "text": "card numbers now the way we had this system and we worked with a PCI auditor to help build this is that we had a roll in there so",
    "start": "2104240",
    "end": "2111480"
  },
  {
    "text": "say for every 1000 cards you encrypt we generates a new key so looking at the",
    "start": "2111480",
    "end": "2117450"
  },
  {
    "text": "diagram there we've got you know a bunch of operations which are done using key version 1 we then add a new key key",
    "start": "2117450",
    "end": "2123450"
  },
  {
    "text": "version 1.2 and then all subsequent cards that are entered into the system with don with key 1.1 and we'd keep on",
    "start": "2123450",
    "end": "2129210"
  },
  {
    "text": "incrementing the key that way so it's just another another way in which you can think of using the key vaults okay",
    "start": "2129210",
    "end": "2141300"
  },
  {
    "start": "2139000",
    "end": "2139000"
  },
  {
    "text": "so the key vault can actually help us with some password protection ideas as well now generally when your offense",
    "start": "2141300",
    "end": "2148260"
  },
  {
    "text": "case systems users on our systems we use passwords now we all know as professionals our passwords aren't very",
    "start": "2148260",
    "end": "2154050"
  },
  {
    "text": "good but they're not really gonna go anywhere because it is still one of the easiest ways for our employees and sort",
    "start": "2154050",
    "end": "2161070"
  },
  {
    "text": "of families to access their machines so let's look through you know a different scale of ways of dealing with",
    "start": "2161070",
    "end": "2166950"
  },
  {
    "text": "passwords from worst to best so obviously the first one is plaintext passwords that's how you don't want to",
    "start": "2166950",
    "end": "2173520"
  },
  {
    "text": "do that's very bad hence the shocked face on the screen there so the next one",
    "start": "2173520",
    "end": "2179430"
  },
  {
    "text": "on from that is to do hash passwords now this is where you literally get the password you might create say a sha-256",
    "start": "2179430",
    "end": "2185190"
  },
  {
    "text": "hash of that password then you store in the database so does anyone do that at the moment a couple of hands so it's",
    "start": "2185190",
    "end": "2193530"
  },
  {
    "text": "been something that's been done for a long time but it is susceptible to some problems so you can do a brute force",
    "start": "2193530",
    "end": "2198690"
  },
  {
    "text": "attack against those passwords or you could do what's called a rainbow or dictionary table attack and this is",
    "start": "2198690",
    "end": "2203790"
  },
  {
    "text": "where you have huge multi gigabytes dictionaries of pretty much every part",
    "start": "2203790",
    "end": "2209070"
  },
  {
    "text": "of a combination you can think of and the subsequent hashes so using tools like hash Katz which you can download",
    "start": "2209070",
    "end": "2214500"
  },
  {
    "text": "for free off the internet and a lot of these password dictionary files which you can also download for free actually",
    "start": "2214500",
    "end": "2219600"
  },
  {
    "text": "makes it quite easy to recover passwords as a good example if you ever try a demo this to anyone there's a website here",
    "start": "2219600",
    "end": "2226050"
  },
  {
    "text": "called crack station net so what you do here in the grey box someone's pasted a password you type in the CAPTCHA hit",
    "start": "2226050",
    "end": "2233430"
  },
  {
    "text": "crack password it works out there's a sha-256 hash and at the password is secret 69 this is",
    "start": "2233430",
    "end": "2240460"
  },
  {
    "text": "quite a good website that you can use to demo to people how bad Jam or hash passwords are so the next best one on",
    "start": "2240460",
    "end": "2247630"
  },
  {
    "text": "from that is to do what's called a salted hash of a password does anyone do that currently sit fear a few hands up",
    "start": "2247630",
    "end": "2256180"
  },
  {
    "start": "2249000",
    "end": "2249000"
  },
  {
    "text": "so this is coming out the next step that you can do and the salt is effectively a",
    "start": "2256180",
    "end": "2261819"
  },
  {
    "text": "large random number that you might generate using that random number generator so we've played with before you append it on to your password and",
    "start": "2261819",
    "end": "2268329"
  },
  {
    "text": "then you hash the password and then you store the password and that salt in your database now you could also use a hash",
    "start": "2268329",
    "end": "2276069"
  },
  {
    "text": "Mac as well a hash message authentication code is another wife during it so you pass in the password",
    "start": "2276069",
    "end": "2281200"
  },
  {
    "text": "you want to hash and then the key that you pass into that H Mac he's actually the salt so that's another technique you can use now again this is better than",
    "start": "2281200",
    "end": "2288339"
  },
  {
    "text": "doing standard hashing of passwords but what it doesn't help us with is the fact that we've seen such rapid advancement",
    "start": "2288339",
    "end": "2295539"
  },
  {
    "text": "in graphics processors on computers the people are using GPUs and tools our hash Katz try and crack passwords now you may",
    "start": "2295539",
    "end": "2301930"
  },
  {
    "text": "have a salted hash password that's perfectly secure now but who knows what graphics cards and GPS will be like in",
    "start": "2301930",
    "end": "2307390"
  },
  {
    "text": "five years time you just can't predict it so what we want to do is you want to look at another way of hashing passwords",
    "start": "2307390",
    "end": "2313450"
  },
  {
    "text": "but we algorithmically slowed down the whole encryption process and we do that by using what's called a password-based",
    "start": "2313450",
    "end": "2318849"
  },
  {
    "text": "key derivation function which is what we use in dock nets or something like B",
    "start": "2318849",
    "end": "2323859"
  },
  {
    "text": "quits now bcrypt isn't supported in dotnet there's open source implementations but password-based key",
    "start": "2323859",
    "end": "2329440"
  },
  {
    "text": "derivation functions are and they're very simple in how they work so we have a password which we pass him we have a",
    "start": "2329440",
    "end": "2336220"
  },
  {
    "text": "salt which we pass in just like before but they have another parameter called number of iterations so if you pass in",
    "start": "2336220",
    "end": "2342760"
  },
  {
    "text": "10 it's going to repeatedly hash out password 10 times if you pass in 50,000 or do at 50,000 times and the reason we",
    "start": "2342760",
    "end": "2349900"
  },
  {
    "text": "do this is we're trying to slow down the encryption process so if a GPU and a taller hash cat can say test there are",
    "start": "2349900",
    "end": "2356529"
  },
  {
    "text": "five billion password combinations a second you can probably slow that down so they can only try say 100 passwords a",
    "start": "2356529",
    "end": "2362049"
  },
  {
    "text": "second so it just makes it infinitely more complex in to crack those passwords",
    "start": "2362049",
    "end": "2367420"
  },
  {
    "text": "now to do this in.net is very straightforward there's a class called RFC two eight nine eight derive bias",
    "start": "2367420",
    "end": "2373079"
  },
  {
    "text": "it's not the most obvious of classes but the way it works is very simple so you",
    "start": "2373079",
    "end": "2378099"
  },
  {
    "text": "just instantiate it give it your password as a byte array the salt number of iterations and then you call get bias",
    "start": "2378099",
    "end": "2384390"
  },
  {
    "text": "now in this instance we're returning 20 bytes that's because this particular function under the covers uses char 1",
    "start": "2384390",
    "end": "2391059"
  },
  {
    "text": "now char 1 only returns 160 bytes as a hash function as f as a hash code which",
    "start": "2391059",
    "end": "2396940"
  },
  {
    "text": "is 20 bytes in length now the number of iterations as we said affects the speed",
    "start": "2396940",
    "end": "2403480"
  },
  {
    "text": "of the hashing process so you've got an example on the screen here you know hundred iterations might take two",
    "start": "2403480",
    "end": "2408579"
  },
  {
    "text": "milliseconds hundred thousand iterations might take an ad one and a half seconds or five hundred thousand marks 897",
    "start": "2408579",
    "end": "2415089"
  },
  {
    "text": "seconds now as an application designer or an architect you need to work out what's an acceptable weight to impose on",
    "start": "2415089",
    "end": "2423430"
  },
  {
    "text": "your users so some systems you know you might log in and you might notice there's like a couple of second delay",
    "start": "2423430",
    "end": "2428859"
  },
  {
    "text": "it's probably because they're doing this or a bcrypt operation behind the covers so you think we're good you know that's",
    "start": "2428859",
    "end": "2435309"
  },
  {
    "text": "kind of one of the best ways of storing passwords currently does anyone use password-based key derivation functions and they're few there or bcrypt or",
    "start": "2435309",
    "end": "2442089"
  },
  {
    "text": "anything like that a few people so that's a really good way of doing it but using as your key volts there's another",
    "start": "2442089",
    "end": "2448960"
  },
  {
    "text": "little trick we can do which just gives us that extra little of protection so this is the process we've just looked",
    "start": "2448960",
    "end": "2455559"
  },
  {
    "text": "at with a pass to a basic key derivation function so say we're in hashing our",
    "start": "2455559",
    "end": "2463089"
  },
  {
    "text": "password and we're doing it a thousand iterations for example four then what we could do we could perform one extra hash",
    "start": "2463089",
    "end": "2470650"
  },
  {
    "text": "afterwards or hash Mac where we pass in a key which has been protected using",
    "start": "2470650",
    "end": "2475750"
  },
  {
    "text": "Azure keyboards now what this means is that if anyone ever wants to generate that same hash code they have to be able",
    "start": "2475750",
    "end": "2482230"
  },
  {
    "text": "to recover that keys in the key vault so if anyone steals your password table the",
    "start": "2482230",
    "end": "2488049"
  },
  {
    "text": "hackers have first got to know try and work out what that key is to recover the hash Mac and then once they've done that",
    "start": "2488049",
    "end": "2494380"
  },
  {
    "text": "and then needs to try and break the iterated hash now you know even if they do manage to somehow guess the",
    "start": "2494380",
    "end": "2501250"
  },
  {
    "text": "my key which is not impossible all they're gonna see is a load of gibberish anyways and they're not gonna see a",
    "start": "2501250",
    "end": "2506440"
  },
  {
    "text": "meaningful password so this actually makes it really robust so let's let's",
    "start": "2506440",
    "end": "2515200"
  },
  {
    "text": "take a look at that in action",
    "start": "2515200",
    "end": "2518070"
  },
  {
    "text": "oops",
    "start": "2524470",
    "end": "2527470"
  },
  {
    "text": "so in our demo projects here I've got a few more helpers so we've got one here",
    "start": "2530190",
    "end": "2535240"
  },
  {
    "text": "called H Mac and that just does a standards HVAC operation in dotnet just a few lines of code so we instantiate",
    "start": "2535240",
    "end": "2542290"
  },
  {
    "text": "the H max sha-256 class we give it a key which is a byte array we use photo to bytes in our case give it a date you",
    "start": "2542290",
    "end": "2549580"
  },
  {
    "text": "want to be hash to call compute hash and you get your hash code back as a byte array that's quite straightforward the",
    "start": "2549580",
    "end": "2555670"
  },
  {
    "text": "password based Kyoto a key derivation function as you've already seen it's very easy to use again just a few lines",
    "start": "2555670",
    "end": "2561040"
  },
  {
    "text": "of code so we can use that help for as well so if we now go to our example code",
    "start": "2561040",
    "end": "2569100"
  },
  {
    "text": "so first of all I'm going to create a new key in the key volts and then gonna",
    "start": "2569100",
    "end": "2574180"
  },
  {
    "text": "generate a local key just like we did before with the key wrap in so this is just 32 bytes of random data and then",
    "start": "2574180",
    "end": "2581410"
  },
  {
    "text": "I'm going to encrypt that key with the key volt again same as what we looked up before so we could then go and store that key in our database to recover",
    "start": "2581410",
    "end": "2587620"
  },
  {
    "text": "later so now he wants a hash of password so we come back in we decrypt the keys",
    "start": "2587620",
    "end": "2593800"
  },
  {
    "text": "in the key volts we create a password so we've got a password here we love Troy hunts we create a salt which is photo 2",
    "start": "2593800",
    "end": "2600910"
  },
  {
    "text": "by it's within hash it using our password-based key derivation function so I'm using 20,000 iterations here",
    "start": "2600910",
    "end": "2607620"
  },
  {
    "text": "that's a local operation there's no key volt involved there once we've done that",
    "start": "2607620",
    "end": "2613090"
  },
  {
    "text": "we then create the hash Mac of it using that decrypted key from the key volts so",
    "start": "2613090",
    "end": "2620560"
  },
  {
    "text": "let's run that [Music]",
    "start": "2620560",
    "end": "2624820"
  },
  {
    "text": "so I'm gonna create my key it gives us the key ID back pray our random number",
    "start": "2631510",
    "end": "2639760"
  },
  {
    "text": "32 bytes I'm now going to encrypt that with key volts so what we have stored in",
    "start": "2639760",
    "end": "2645520"
  },
  {
    "text": "here is our key encrypted with RSA using the key on the keyboards we can convert",
    "start": "2645520",
    "end": "2650859"
  },
  {
    "text": "it to a base64 string put it into a database at that point so now let's",
    "start": "2650859",
    "end": "2655930"
  },
  {
    "text": "assume someone's come back and they want to hash a password using our system so first of all we have to recover that key",
    "start": "2655930",
    "end": "2662290"
  },
  {
    "text": "and we do that with the key vault so we decrypt the key we have our password we generate our salt we then go",
    "start": "2662290",
    "end": "2671140"
  },
  {
    "text": "and run the iterated hash so I've got a byte array of our password there we've",
    "start": "2671140",
    "end": "2677290"
  },
  {
    "text": "got the salts I've got the number of rounds or iterations which is 20,000 in",
    "start": "2677290",
    "end": "2682570"
  },
  {
    "text": "our case and we hash the password so now",
    "start": "2682570",
    "end": "2692109"
  },
  {
    "text": "we've done that no typically that's where a lot of people might stop and then just store the results of that hash in the database but we're now going to",
    "start": "2692109",
    "end": "2699250"
  },
  {
    "text": "create a hash Mac so we pass in that already hash password and the key which",
    "start": "2699250",
    "end": "2705369"
  },
  {
    "text": "we've already recovered from the key vault me then me then hash it",
    "start": "2705369",
    "end": "2712830"
  },
  {
    "text": "so if we display those on the screen then I her easy that is to read but the",
    "start": "2715170",
    "end": "2722220"
  },
  {
    "text": "top one you've got the original hash password so that was done with the password-based key derivation function it's 20 bytes in length fences for",
    "start": "2722220",
    "end": "2728430"
  },
  {
    "text": "shorter hash but now an interest in property now that we've created that cetra hash back at the password",
    "start": "2728430",
    "end": "2733800"
  },
  {
    "text": "afterwards we actually get a much longer hash off the back of it actually it's a",
    "start": "2733800",
    "end": "2739320"
  },
  {
    "text": "much more secure hashing it is longer and harder to brute-force especially they need to recover that key",
    "start": "2739320",
    "end": "2744480"
  },
  {
    "text": "first",
    "start": "2744480",
    "end": "2746780"
  },
  {
    "text": "so further people that might try and steal our password table this is actually really bad for them so they",
    "start": "2756150",
    "end": "2761770"
  },
  {
    "text": "can't even begin to start trying to break through the password-based key derivation function until they're first managed to recover the hash of that hash",
    "start": "2761770",
    "end": "2770080"
  },
  {
    "text": "Mac which I can't do because the key is in quick typically volt so if you're using a default key sizing as your key",
    "start": "2770080",
    "end": "2775840"
  },
  {
    "text": "volt there's 2048 bits of RSA key that's going to give them a very very hard time",
    "start": "2775840",
    "end": "2783750"
  },
  {
    "text": "now because we're doing because we're using kevo obviously making a call to kevo is not noise instant operation",
    "start": "2784650",
    "end": "2792280"
  },
  {
    "start": "2785000",
    "end": "2785000"
  },
  {
    "text": "there is an area of latency on there so as an application designer you need to work out where you're going to use this",
    "start": "2792280",
    "end": "2797770"
  },
  {
    "text": "would you use it for all of your standard users on your system you may feel that yes you want to or you may",
    "start": "2797770",
    "end": "2802840"
  },
  {
    "text": "think well actually this might only be worth using for administrators or CP users on our systems it's kind of up to",
    "start": "2802840",
    "end": "2808420"
  },
  {
    "text": "your way decide to use it it does give you that kind of extra extra bit of security so the final person I want to",
    "start": "2808420",
    "end": "2815290"
  },
  {
    "text": "look at then is using the key volts do digital signatures as we said in our",
    "start": "2815290",
    "end": "2822250"
  },
  {
    "text": "four pillars of cryptography digital signatures are satisfied while they satisfy the non-repudiation",
    "start": "2822250",
    "end": "2828100"
  },
  {
    "text": "pillar of cryptography this is where we can use it so effectively 'don trying to about sign contracts so has anyone used",
    "start": "2828100",
    "end": "2834280"
  },
  {
    "text": "to service out DocuSign before only a handful people so docu sounds a good",
    "start": "2834280",
    "end": "2840250"
  },
  {
    "text": "analogy for this so it's it's a system where you can upload a PDF of a contract there may be some job contracts are you",
    "start": "2840250",
    "end": "2845620"
  },
  {
    "text": "buying a house you'd go on there you do like a fake weird electronic signature but then it creates a digital signature",
    "start": "2845620",
    "end": "2852430"
  },
  {
    "text": "behind the scenes so if ever you want to dispute what's on that contract and take it to court which has happened many",
    "start": "2852430",
    "end": "2859150"
  },
  {
    "text": "times you can't disprove what's in that contract because you've already signed it it's been electronically signed so",
    "start": "2859150",
    "end": "2864550"
  },
  {
    "text": "this is the same principle so a digital signature is a mathematical technique used to validate your authenticity and",
    "start": "2864550",
    "end": "2871540"
  },
  {
    "start": "2867000",
    "end": "2867000"
  },
  {
    "text": "integrity of a message software or digital document now when we create digital signatures as free sort of main",
    "start": "2871540",
    "end": "2877990"
  },
  {
    "text": "operations that we need so first of all ways key generation we've already seen how to do that we've done that in pretty",
    "start": "2877990",
    "end": "2883540"
  },
  {
    "text": "much every demo we've looked at this afternoon you need a signing algorithm and you need a verification",
    "start": "2883540",
    "end": "2889210"
  },
  {
    "text": "algorithm both of which provided by a Shiki volts by default now the way it",
    "start": "2889210",
    "end": "2895540"
  },
  {
    "text": "works is when you want to create a digital signature of a piece of data because it's using RSA behind the scenes",
    "start": "2895540",
    "end": "2901090"
  },
  {
    "text": "there's a limit to how much you can actually pass into Additional Secretary and one goes you can't pass him more",
    "start": "2901090",
    "end": "2906820"
  },
  {
    "text": "than the length of the key so typically what you do is you'd have your document you know it could be a PDF you create a",
    "start": "2906820",
    "end": "2913060"
  },
  {
    "text": "hash of that document first so you get like a smaller hash back like a to fake it to you by hash and you then create a",
    "start": "2913060",
    "end": "2918610"
  },
  {
    "text": "digital signature of that hash so if you look at this picture here so we've got",
    "start": "2918610",
    "end": "2923740"
  },
  {
    "text": "the guy Bob at the top there he wants to create digital signature and he uses his private key to create that signature",
    "start": "2923740",
    "end": "2929490"
  },
  {
    "text": "there's a key difference there so when you encrypt with RSA you encrypt if your recipients public key then decrypt with",
    "start": "2929490",
    "end": "2935830"
  },
  {
    "text": "there they decrypt with their private key any digital signature sees you have way rounds you as the originator are",
    "start": "2935830",
    "end": "2942130"
  },
  {
    "text": "using your private key to create the signature then if the recipient wants to validate their signature they do that",
    "start": "2942130",
    "end": "2947350"
  },
  {
    "text": "with your public key so that's how they know that document came from you because you're the only person in possession of that private key now normally if he's",
    "start": "2947350",
    "end": "2955240"
  },
  {
    "text": "doing this in dotnet without as your key volt these are the two classes that you'd want to use so we've got RSA pkcs1",
    "start": "2955240",
    "end": "2960430"
  },
  {
    "text": "signature formatter and RSA pkcs1 signature D formatter brilliant pieces",
    "start": "2960430",
    "end": "2967060"
  },
  {
    "text": "of API naming there but those are the two classes we typically use but using our G key volts it does digital",
    "start": "2967060",
    "end": "2973600"
  },
  {
    "text": "signatures by default for us so we don't need to use those classes so let's have",
    "start": "2973600",
    "end": "2978820"
  },
  {
    "text": "a look at that",
    "start": "2978820",
    "end": "2981240"
  },
  {
    "text": "this is our last demo okay so the only",
    "start": "2988940",
    "end": "2998030"
  },
  {
    "text": "additional helper method I've got in this project is a standard sha-256 hash there's any additional bit of code we",
    "start": "2998030",
    "end": "3004510"
  },
  {
    "text": "need so like before we're going to",
    "start": "3004510",
    "end": "3010089"
  },
  {
    "text": "create a new key because each of these demos creates the keys and deletes them at the end just to keep them self contained so we create the key now we",
    "start": "3010089",
    "end": "3016960"
  },
  {
    "text": "have a document that we want to create a signature for in this case it's a string but you could be loading up a file so we",
    "start": "3016960",
    "end": "3023260"
  },
  {
    "text": "have a string there then what I do is I create a standard sha-256 hash of that",
    "start": "3023260",
    "end": "3029319"
  },
  {
    "text": "string and then once I've got that hash I've called it document digest here I then call the sign operation on the key",
    "start": "3029319",
    "end": "3037089"
  },
  {
    "text": "volts I tell it what key we're using that's the key ID that was returned here I give it the hash of that document and",
    "start": "3037089",
    "end": "3043390"
  },
  {
    "text": "it creates a signature then if I want to verify it I'll just call verify I'll give it the key ID the original",
    "start": "3043390",
    "end": "3049270"
  },
  {
    "text": "hash and the signature we just created and it will return true or false true we trust that signature false we don't so",
    "start": "3049270",
    "end": "3056050"
  },
  {
    "text": "we want to discard it so let's run that",
    "start": "3056050",
    "end": "3062190"
  },
  {
    "text": "so create the key create our documents",
    "start": "3063609",
    "end": "3069670"
  },
  {
    "text": "create a hash of the documents create our digital signature then we verify",
    "start": "3069670",
    "end": "3077150"
  },
  {
    "text": "straight away now it should say true here because we've literally just created the signature so that's that's comeback as tree it's not let's run it",
    "start": "3077150",
    "end": "3084740"
  },
  {
    "text": "again",
    "start": "3084740",
    "end": "3087010"
  },
  {
    "text": "creating a new key take a shove our document and create the signature now",
    "start": "3093540",
    "end": "3100470"
  },
  {
    "text": "when we send the signature to our recipients we're gonna send the original documents we're gonna send the hash it",
    "start": "3100470",
    "end": "3105840"
  },
  {
    "text": "we generated I'm making to send the signature so three things that we send to our recipient tonight let's pretends",
    "start": "3105840",
    "end": "3111390"
  },
  {
    "text": "that we're you know some dodgy hacker we've intercepted the message as it's",
    "start": "3111390",
    "end": "3117330"
  },
  {
    "text": "gone we've changed a document which means the hash will change so let's just you know change this hash so it's",
    "start": "3117330",
    "end": "3122760"
  },
  {
    "text": "invalid now if we call verify that hash",
    "start": "3122760",
    "end": "3128880"
  },
  {
    "text": "isn't going to match the signature or the signature it's not going to match that hash so we should get false back which we can I don't if you can read",
    "start": "3128880",
    "end": "3135120"
  },
  {
    "text": "that on there but take my word for it it says false so that's how easy it is to",
    "start": "3135120",
    "end": "3140250"
  },
  {
    "text": "do digital signatures in a jerky vault it literally is just a few lines of code so as I said before it really does lower",
    "start": "3140250",
    "end": "3146610"
  },
  {
    "text": "the barrier to entry for using a lot of these things okay so those are the six",
    "start": "3146610",
    "end": "3161940"
  },
  {
    "text": "patterns that wanted to talk about and they give us quite a lot of flexibility so let's just summarize what we've looked at today so we started off by",
    "start": "3161940",
    "end": "3169050"
  },
  {
    "text": "saying you know data breaches are getting worse they're not getting any better but the sheer number you know",
    "start": "3169050",
    "end": "3175230"
  },
  {
    "text": "doesn't really surprise me anymore it's going to happen it's going to carry on happening but the bit that was worrying is the fact that it says on",
    "start": "3175230",
    "end": "3181350"
  },
  {
    "text": "there only four percent of data breaches were secure so we want to get that number higher and there's software",
    "start": "3181350",
    "end": "3186900"
  },
  {
    "text": "developers I think we're in the best place to try and do that so data breaches are inevitable you know you",
    "start": "3186900",
    "end": "3193500"
  },
  {
    "start": "3191000",
    "end": "3191000"
  },
  {
    "text": "want you want to go with the mindset that it's not if you're gonna get breached it's when you're going to get breached if you go in thinking that it's",
    "start": "3193500",
    "end": "3199170"
  },
  {
    "text": "going to happen you can start protecting yourself better from it so our favor",
    "start": "3199170",
    "end": "3204510"
  },
  {
    "text": "technique and obviously the reason we're here in this talk is talk about hazuki volts so this lets us safeguard keys",
    "start": "3204510",
    "end": "3210270"
  },
  {
    "text": "secrets and certificates it uses you know certified hardware security modules",
    "start": "3210270",
    "end": "3215670"
  },
  {
    "text": "based on the Fallas and shield hardware so Microsoft has gone to the effort of",
    "start": "3215670",
    "end": "3220860"
  },
  {
    "text": "buying all of that hardware for us and we just effectively leasing it for not a lot of money",
    "start": "3220860",
    "end": "3226530"
  },
  {
    "text": "now the set before is very easy to set up we didn't have a chance to go into the setup because we only have an hour today but the documentation is very very",
    "start": "3226530",
    "end": "3233560"
  },
  {
    "text": "good so if you want to have a play around with this and you've got an Ashes subscription just run through the instructions there and it will get you",
    "start": "3233560",
    "end": "3239440"
  },
  {
    "text": "up and running now the main patterns that we looked at today so we talked about the idea of multiple environments",
    "start": "3239440",
    "end": "3245350"
  },
  {
    "text": "so you don't want to share your production as your kevo with your test environments just the same as you",
    "start": "3245350",
    "end": "3251410"
  },
  {
    "text": "wouldn't want to expose your you know you shouldn't be exposing data from your production databases in your test environments so you want to create",
    "start": "3251410",
    "end": "3257590"
  },
  {
    "text": "separate instances of the software based as your key vault for dev and test and",
    "start": "3257590",
    "end": "3262720"
  },
  {
    "text": "u18 we looked at the fact that you can store secrets in key vault so just think",
    "start": "3262720",
    "end": "3268840"
  },
  {
    "text": "of it as a key value store database where the values are encrypted using master keys in the key volt so great for",
    "start": "3268840",
    "end": "3275560"
  },
  {
    "text": "configuration strings connection strings passwords API keys or anything there's",
    "start": "3275560",
    "end": "3281410"
  },
  {
    "text": "classes confidential in your system so then we looked at local key wrapping",
    "start": "3281410",
    "end": "3287500"
  },
  {
    "text": "this is one of the techniques where we can really lower the cost d'etre financial cost of using Azure this is",
    "start": "3287500",
    "end": "3293320"
  },
  {
    "text": "all about using the key volt to protect AES keys but then using those AES keys",
    "start": "3293320",
    "end": "3298540"
  },
  {
    "text": "we can do local encryption operations where we're not actually calling out to the key vault so it really you know",
    "start": "3298540",
    "end": "3303610"
  },
  {
    "text": "gives us the benefit the speed and flexibility of AES but then we have the benefit of using RSA on a protected key",
    "start": "3303610",
    "end": "3309880"
  },
  {
    "text": "vault to protect those keys then we look at the idea of key versioning so if you",
    "start": "3309880",
    "end": "3315220"
  },
  {
    "text": "do want to make use of multiple versions of the same key you can do so you just write the key with the same name twice",
    "start": "3315220",
    "end": "3320620"
  },
  {
    "text": "and you get a new version and you can access all those previous versions then",
    "start": "3320620",
    "end": "3326020"
  },
  {
    "text": "we looked at the ideas that you can actually use a key volt to help you if password protection so we looked at password-based key derivation functions",
    "start": "3326020",
    "end": "3332260"
  },
  {
    "text": "I mean then looks at how you can actually do an authenticated hash of that hashed password using a key that's",
    "start": "3332260",
    "end": "3340090"
  },
  {
    "text": "protected by the key volt saying you might want to use for like administrator or CPS or accounts in your software but it really gives you a good",
    "start": "3340090",
    "end": "3347740"
  },
  {
    "text": "extra level of protection on your passwords and then we ended up by looking at digital signatures and how",
    "start": "3347740",
    "end": "3354040"
  },
  {
    "text": "you can use the key volt to give just few lines of code create digital signatures and verify signatures for us",
    "start": "3354040",
    "end": "3360870"
  },
  {
    "text": "so as I mentioned before all of that code we've locked out is available on github there feel free to take it and",
    "start": "3360870",
    "end": "3367030"
  },
  {
    "text": "use it it's under the MIT license so you can do what you want with it but if it breaks it's not my fault",
    "start": "3367030",
    "end": "3372510"
  },
  {
    "text": "but you know if you do want to experiment with this this will get you off and running really really quickly and then you can refactor the code and",
    "start": "3372510",
    "end": "3378190"
  },
  {
    "text": "do what you want with it and anyone here have access to pro will sites call quite",
    "start": "3378190",
    "end": "3384880"
  },
  {
    "text": "a few people so I've got some courses that might help so if you're interested in more of doing you know understanding",
    "start": "3384880",
    "end": "3390370"
  },
  {
    "text": "what you can do with cryptography and net off done a fairly in-depth course about four hours long called practical",
    "start": "3390370",
    "end": "3395680"
  },
  {
    "text": "cryptography and darknets this really takes you on a deep dive of what all the individual primitives are in net and how",
    "start": "3395680",
    "end": "3401560"
  },
  {
    "text": "to use them all together then I've got another course which you see in the background there called enterprise data",
    "start": "3401560",
    "end": "3406570"
  },
  {
    "text": "encryption we've as you revealed this is kind of like a high-level introduction to key volt so it doesn't go into as",
    "start": "3406570",
    "end": "3411820"
  },
  {
    "text": "much depth as what we covered today but it covers some of the some of the topics we talked about and then if anyone's",
    "start": "3411820",
    "end": "3417640"
  },
  {
    "text": "interested in how block chains work I've also got a course called blockchain",
    "start": "3417640",
    "end": "3422800"
  },
  {
    "text": "principles and practices where by the end of the course you will actually build a basic blockchain implementation",
    "start": "3422800",
    "end": "3428410"
  },
  {
    "text": "in c-sharp so using crypto primitives in dotnet so it's a good fun kind of computer science",
    "start": "3428410",
    "end": "3434920"
  },
  {
    "text": "level type course but it's really useful when you're sitting in a boardroom of CEOs they say I want a blockchain you",
    "start": "3434920",
    "end": "3440320"
  },
  {
    "text": "know if you watch that course you'll actually understand what one is you would have built one final plaque I",
    "start": "3440320",
    "end": "3446410"
  },
  {
    "text": "promise I write a lot of books I've written only books in the gentle introduction series they're all available on Amazon so there there was",
    "start": "3446410",
    "end": "3453010"
  },
  {
    "text": "paperbacks and Kindle and that's it thank you very much for coming along afternoon it's a really good turnout so",
    "start": "3453010",
    "end": "3459190"
  },
  {
    "text": "thank you and I'm around for the rest of the conference",
    "start": "3459190",
    "end": "3464290"
  },
  {
    "text": "is anyone going to pop confer tomorrow night's the party yeah so popcorn",
    "start": "3464290",
    "end": "3469480"
  },
  {
    "text": "absolutely fantastic I'm one of the speakers so I apologize for that now so we we get to do a five minute really",
    "start": "3469480",
    "end": "3475450"
  },
  {
    "text": "silly talk whilst you had a lot of beer it's always good fun so come along to that and support us in that that'd be",
    "start": "3475450",
    "end": "3482020"
  },
  {
    "text": "great thank you oh if you can remember to vote on your way out as well",
    "start": "3482020",
    "end": "3487110"
  },
  {
    "text": "green means you're awesome and that the amber and red cars don't",
    "start": "3487110",
    "end": "3492549"
  },
  {
    "text": "anything so just put the green one in thank you",
    "start": "3492549",
    "end": "3498119"
  }
]