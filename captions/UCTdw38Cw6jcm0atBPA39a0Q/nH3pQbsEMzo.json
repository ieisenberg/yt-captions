[
  {
    "text": "okay I guess this is go time so I would",
    "start": "9219",
    "end": "14869"
  },
  {
    "text": "like to thank everybody for coming to see this talk I didn't know what to expect so I was talking to people in the",
    "start": "14869",
    "end": "22400"
  },
  {
    "text": "front row maybe people in the back didn't hear me talking about that um I've never done an NDC before and I",
    "start": "22400",
    "end": "28849"
  },
  {
    "text": "didn't realize like I saw it thought oh there's all these tracks right it's gonna be like totally fragmented and",
    "start": "28849",
    "end": "34879"
  },
  {
    "text": "like probably not gonna be a lot of people and then the room packs out so oh well",
    "start": "34879",
    "end": "40250"
  },
  {
    "text": "my name is Jeremy Wagner hello I'm an independent web performance consultant",
    "start": "40250",
    "end": "45920"
  },
  {
    "text": "author and speaker and I live in Minnesota which is a lot like Norway",
    "start": "45920",
    "end": "51710"
  },
  {
    "text": "it's very cold the people are not as",
    "start": "51710",
    "end": "56899"
  },
  {
    "text": "nice they always we have this thing in Minnesota it's called Minnesota pass above I totally threw the joke it's been",
    "start": "56899",
    "end": "63559"
  },
  {
    "text": "a soda nice but it's more passive-aggressive and like Norway is like super cool and I'm so excited to be",
    "start": "63559",
    "end": "69440"
  },
  {
    "text": "here I'm so like just like psyched to be in a place like Norway it's really been",
    "start": "69440",
    "end": "75890"
  },
  {
    "text": "a fantastic couple days and I can't wait to see the more of it so anyway I'm battling so that's how you",
    "start": "75890",
    "end": "81320"
  },
  {
    "text": "can tell them nerves so this talk is based on a series of articles that I'm",
    "start": "81320",
    "end": "87590"
  },
  {
    "text": "writing for a list apart called autonomously responsible JavaScript and",
    "start": "87590",
    "end": "92689"
  },
  {
    "text": "part two of this series was just released last week and more parts will",
    "start": "92689",
    "end": "99350"
  },
  {
    "text": "be published as the year goes on I'm definitely doing a third might do a fourth don't think I'll do a fifth",
    "start": "99350",
    "end": "104990"
  },
  {
    "text": "unless I could be convinced that might be going a little too far so a lot of",
    "start": "104990",
    "end": "110450"
  },
  {
    "text": "the stuff you're gonna see is a sort of talk rendition of that content so if you",
    "start": "110450",
    "end": "116030"
  },
  {
    "text": "miss some key things in this talk I mean for once slides will be and URLs will be",
    "start": "116030",
    "end": "121640"
  },
  {
    "text": "up later at the end of the talk and I'll post the slide deck and stuff but if you just kind of want to like read the article version of this The Reader's",
    "start": "121640",
    "end": "128000"
  },
  {
    "text": "Digest version you can check out parts one and two on a list apart a quick question how many people here have",
    "start": "128000",
    "end": "133340"
  },
  {
    "text": "actually heard of this article series or have seen it awesome that's actually great so like",
    "start": "133340",
    "end": "139430"
  },
  {
    "text": "you're all you all are gonna like get exposed to this so I was kind of happy that like nobody's heard of it so a list",
    "start": "139430",
    "end": "146239"
  },
  {
    "text": "of part may not be an in DC crowd kind of thing but it's a great publication you should definitely check it out",
    "start": "146239",
    "end": "151250"
  },
  {
    "text": "there's tons of great articles ok so to start I'd like to talk about a word I stumbled on years ago that word is",
    "start": "151250",
    "end": "158260"
  },
  {
    "text": "affection as' and the word itself is unusual and that it's this kind of",
    "start": "158260",
    "end": "163730"
  },
  {
    "text": "gold-plated adjective it's not really easily slipped into a freewheeling conversation like you can't sit down at",
    "start": "163730",
    "end": "170030"
  },
  {
    "text": "a pub and be like you know that was really specs of you like feeling what are you talking about like who's this guy but it does have relevance in the",
    "start": "170030",
    "end": "179329"
  },
  {
    "text": "context of our work so the words factious refers to a set of behaviors",
    "start": "179329",
    "end": "184670"
  },
  {
    "text": "which are deterministic and pre-programmed in it it relates the",
    "start": "184670",
    "end": "190670"
  },
  {
    "text": "context that it is in the context of animals and animal behavior so it refers",
    "start": "190670",
    "end": "196010"
  },
  {
    "text": "to repetitive almost like factory-installed behavior right like it's on some kind of instinctual",
    "start": "196010",
    "end": "202250"
  },
  {
    "text": "firmware that you can't really update and it's also a word that's really hard to say if your mouth is numb from a",
    "start": "202250",
    "end": "208489"
  },
  {
    "text": "visit to the dentist or in my case if you've had a couple of pints and let me says hey say specialist and it's like I",
    "start": "208489",
    "end": "214310"
  },
  {
    "text": "don't want to say that right now because I don't think I can so anyway the origin",
    "start": "214310",
    "end": "221180"
  },
  {
    "text": "of the words factious as you could guess can be found in the root word sex which",
    "start": "221180",
    "end": "226910"
  },
  {
    "text": "is a genus of thread wasted solitary digging wasps and I promise you that",
    "start": "226910",
    "end": "236150"
  },
  {
    "text": "this is a talk about JavaScript and not entomology as interesting as entomology might be to me and maybe to some of you",
    "start": "236150",
    "end": "242900"
  },
  {
    "text": "out there although I would not blame anyone for being unenthusiastic about wasps so digging wasps are as you would",
    "start": "242900",
    "end": "251989"
  },
  {
    "text": "expect more sexist than any other creature on earth hence sex they don't act simply in",
    "start": "251989",
    "end": "259130"
  },
  {
    "text": "deterministic or pre-programmed ways they do that but they can also be easily",
    "start": "259130",
    "end": "264289"
  },
  {
    "text": "manipulated in their deterministic behavior and be totally unaware of it by",
    "start": "264289",
    "end": "269960"
  },
  {
    "text": "the way these wasps will provision their larvae with these paralyzed crickets right and",
    "start": "269960",
    "end": "275840"
  },
  {
    "text": "when they bring the prey back to the nest they have this weird routine before dragging the cricket to the nest the",
    "start": "275840",
    "end": "281390"
  },
  {
    "text": "wasp will leave it outside and then go into the nest to inspect it now this is",
    "start": "281390",
    "end": "286910"
  },
  {
    "text": "behavior that seems like super thoughtful at first like that's really thoughtful for an insect but it really",
    "start": "286910",
    "end": "291920"
  },
  {
    "text": "is quite mindless it's totally mindless as you can tell because if an observer moves the cricket to another spot before",
    "start": "291920",
    "end": "298430"
  },
  {
    "text": "the wasp or Hugh merges the wasp once again we'll set the cricket back to where it was before and it will go back",
    "start": "298430",
    "end": "305150"
  },
  {
    "text": "and inspect the nest again and this cycle can go on and on endlessly without",
    "start": "305150",
    "end": "310220"
  },
  {
    "text": "the wasp ever realizing what's going on until either the wasp or the person gets",
    "start": "310220",
    "end": "316190"
  },
  {
    "text": "tired of art well or the person perishes I mean that could be like a metal album title right there anyway so I didn't",
    "start": "316190",
    "end": "325070"
  },
  {
    "text": "come all this way to imply that web developers are mindless we do know what",
    "start": "325070",
    "end": "331010"
  },
  {
    "text": "we're doing where we are not specialist but there are decisions involved in our",
    "start": "331010",
    "end": "338360"
  },
  {
    "text": "work that we make with almost without questioning it sometimes right so a good",
    "start": "338360",
    "end": "343760"
  },
  {
    "text": "example of this is at the start of developing a new project we'll open a terminal window and then we'll install",
    "start": "343760",
    "end": "350300"
  },
  {
    "text": "ourselves a familiar framework and then possibly a client-side router for the framework and then possibly a state",
    "start": "350300",
    "end": "357950"
  },
  {
    "text": "management tool for the framework of course and all the while we're unaware",
    "start": "357950",
    "end": "364910"
  },
  {
    "text": "maybe not unaware of but perhaps we've even made peace with the overhead that these conveniences bring and I'm not",
    "start": "364910",
    "end": "370520"
  },
  {
    "text": "here to like you know crap all over your developer conveniences like I use them to write like they help us be more",
    "start": "370520",
    "end": "377180"
  },
  {
    "text": "efficient but we have to think more critically about how we apply these things and when they're appropriate",
    "start": "377180",
    "end": "383380"
  },
  {
    "text": "incidentally have you ever opened a node modules folder okay it's a place that if",
    "start": "383380",
    "end": "391040"
  },
  {
    "text": "a map was drawn of it in the 1400s it would have like these fanciful illustrations of sea serpents with stern",
    "start": "391040",
    "end": "397190"
  },
  {
    "text": "warnings like here be dragons yarr and it's a place we don't go unless we need",
    "start": "397190",
    "end": "402289"
  },
  {
    "text": "to I mean like if we're debugging a mod or something's gone off the rails and you kind of have to like oh god that's",
    "start": "402289",
    "end": "408560"
  },
  {
    "text": "like you know emptying a cistern you know I like you but that's not this I",
    "start": "408560",
    "end": "414050"
  },
  {
    "text": "mean it's not to say we don't know what's in one NPM package but when you're installing a bunch of them it's difficult to know what's in all of them",
    "start": "414050",
    "end": "420530"
  },
  {
    "text": "and how much but even so node modules isn't this black box even if it seems like it at times tools like bundle",
    "start": "420530",
    "end": "427640"
  },
  {
    "text": "phobia here can help us to understand not only what's in a package but also how much it can affect the performance",
    "start": "427640",
    "end": "432860"
  },
  {
    "text": "of the stuff that we built and that's worth knowing because in the last seven years or so and before that even the",
    "start": "432860",
    "end": "440240"
  },
  {
    "text": "median amount of JavaScript we serve has increased and I know you'll have a question about the dip and I'll answer",
    "start": "440240",
    "end": "446480"
  },
  {
    "text": "it after the talk but half the sites you visit today will send 375 kilobytes or",
    "start": "446480",
    "end": "453410"
  },
  {
    "text": "less of JavaScript and the other half will send more sometimes a lot more 25%",
    "start": "453410",
    "end": "460250"
  },
  {
    "text": "of web sites will send around 650 kilobytes of JavaScript or more and 10%",
    "start": "460250",
    "end": "465560"
  },
  {
    "text": "of web sites will serve one megabyte or more of compressed javascript remember",
    "start": "465560",
    "end": "470960"
  },
  {
    "text": "that word compressed because these graphs are generated from data provided by the HTTP archive which among other",
    "start": "470960",
    "end": "477740"
  },
  {
    "text": "things tracks the transfer size the over the wire size of JavaScript which is almost",
    "start": "477740",
    "end": "483530"
  },
  {
    "text": "not always but almost always compressed and while compression is essential to",
    "start": "483530",
    "end": "489440"
  },
  {
    "text": "loading performance which we know is all important we all understand loading performance and why that needs to be fast it doesn't change one simple fact",
    "start": "489440",
    "end": "497240"
  },
  {
    "text": "about runtime performance which is that on arrival one megabyte of compressed JavaScript gets decompressed to three",
    "start": "497240",
    "end": "504110"
  },
  {
    "text": "megabytes of JavaScript about right just assuming a rule of thirds which browsers",
    "start": "504110",
    "end": "509540"
  },
  {
    "text": "must parse compile and execute and that takes time if you're using high end",
    "start": "509540",
    "end": "514820"
  },
  {
    "text": "devices on low latency and high bandwidth connections you won't notice this at all but the slowest web sites",
    "start": "514820",
    "end": "520969"
  },
  {
    "text": "but that's the bubble we as developers tend to live in I mean a lot of us have high end devices and unless we're",
    "start": "520970",
    "end": "526610"
  },
  {
    "text": "performance minded and a lot of us are you know I'm kind of a performance specialist so I'm a little obsessive",
    "start": "526610",
    "end": "532730"
  },
  {
    "text": "about it but unless your performance mind and you're not gonna really take notice of this problem until it begins to",
    "start": "532730",
    "end": "539260"
  },
  {
    "text": "affect you personally or it can be made real to you in some way and that's just human behavior but on median mobile",
    "start": "539260",
    "end": "546700"
  },
  {
    "text": "hardware such as this affordable but slower moto G for Android phone chewing",
    "start": "546700",
    "end": "551830"
  },
  {
    "text": "through megabytes of JavaScript makes for a really frustrating experience and I would recommend to anybody to go onto",
    "start": "551830",
    "end": "557800"
  },
  {
    "text": "Amazon or wherever you buy things and buy yourself a cheap Android phone I have one at home it's an Android go from",
    "start": "557800",
    "end": "564310"
  },
  {
    "text": "no it's yeah it's an Android Go phone it's a Nokia 2 and it's it's a real exercise in patience and it's easy to",
    "start": "564310",
    "end": "571780"
  },
  {
    "text": "brush aside the long tail of devices of like that moto g4 and assume that those who use what we make are on high-end",
    "start": "571780",
    "end": "578110"
  },
  {
    "text": "devices and the good chunk of them may well be but the bigger picture of the",
    "start": "578110",
    "end": "583600"
  },
  {
    "text": "device is accessing the web is tends to be different than the assumptions we make right for example take this graph",
    "start": "583600",
    "end": "589720"
  },
  {
    "text": "based on analytics from a blog I host for a friend on guitars and related accessories this site receives",
    "start": "589720",
    "end": "596140"
  },
  {
    "text": "significant traffic from mobile devices all over the world with a very long tail",
    "start": "596140",
    "end": "601900"
  },
  {
    "text": "of unusual or not typical devices that I couldn't fit individually on this graph",
    "start": "601900",
    "end": "608110"
  },
  {
    "text": "and you can see it's under other Android so that long tail is something you need",
    "start": "608110",
    "end": "615070"
  },
  {
    "text": "to pay attention to because when other devices our networks or both are slow",
    "start": "615070",
    "end": "620800"
  },
  {
    "text": "the web becomes less usable and more frustrating and at the bottom of this",
    "start": "620800",
    "end": "626200"
  },
  {
    "text": "webpage test timeline is a main thread activity indicator when it's green the",
    "start": "626200",
    "end": "631720"
  },
  {
    "text": "user is able to interact with the page but when it's red the device is unable to do anything can't do anything the",
    "start": "631720",
    "end": "638500"
  },
  {
    "text": "main thread is totally occupied browser FPS is created to zero and users are waiting for a hanging device to respond",
    "start": "638500",
    "end": "644410"
  },
  {
    "text": "the device is unusable in this case four to four sometimes even six seconds at a",
    "start": "644410",
    "end": "649810"
  },
  {
    "text": "time and you pair that with a slow Network and you can imagine how tiresome the web really becomes to use on this",
    "start": "649810",
    "end": "656440"
  },
  {
    "text": "sort of median mobile hardware and when we're serving just pockets of JavaScript so we're not building collectively I'm",
    "start": "656440",
    "end": "664420"
  },
  {
    "text": "not like saying you I'm saying collectively a lot of us just aren't building a lot of",
    "start": "664420",
    "end": "670960"
  },
  {
    "text": "experiences that can work in all of the places they might need to and",
    "start": "670960",
    "end": "676530"
  },
  {
    "text": "understanding constraints is key to writing good software some of the best video games ever made or one megabyte a",
    "start": "676530",
    "end": "684610"
  },
  {
    "text": "lot of times depending on the on the platform like NES games far less than that and these these people who created",
    "start": "684610",
    "end": "692590"
  },
  {
    "text": "these games had a lot of vision as we have a lot of vision for the things that we want to do and they understood the",
    "start": "692590",
    "end": "697720"
  },
  {
    "text": "constraints that they needed to work within but their constraints to be fair",
    "start": "697720",
    "end": "702790"
  },
  {
    "text": "to us their constraints were fixed to the systems that they produced games for if you made an SNES game everybody",
    "start": "702790",
    "end": "710800"
  },
  {
    "text": "basically had an SNES right that was the constraint it was very like everybody",
    "start": "710800",
    "end": "716080"
  },
  {
    "text": "has one this is what we know hard constraints are not fixed they can be",
    "start": "716080",
    "end": "721660"
  },
  {
    "text": "wildly different from person to person in a way that makes our job much more difficult than than their job even if",
    "start": "721660",
    "end": "729220"
  },
  {
    "text": "their work is more memorable our work is harder way harder to do but that doesn't",
    "start": "729220",
    "end": "734560"
  },
  {
    "text": "mean we can't make truly great experiences on the web that work for everyone and everywhere so let's talk",
    "start": "734560",
    "end": "741640"
  },
  {
    "text": "about how we can turn that specialist nasai and I specialist nurse for the good of the web and for the people who",
    "start": "741640",
    "end": "748710"
  },
  {
    "text": "use what we choose to put on it all right there's a wonderful expression I",
    "start": "748710",
    "end": "754960"
  },
  {
    "text": "came across this year a little while ago it goes paint the picture not the frame it comes",
    "start": "754960",
    "end": "762400"
  },
  {
    "text": "from an article by Eric Bailey about accessibility in UX it's an another a list apart article you could tell I have",
    "start": "762400",
    "end": "768070"
  },
  {
    "text": "my my preferences for my for my publications the implication of paint",
    "start": "768070",
    "end": "775180"
  },
  {
    "text": "the picture not the frame is that we should focus on what we want our websites to do for people right and that",
    "start": "775180",
    "end": "782200"
  },
  {
    "text": "we should not subvert their expectations for how things should work by changing externally consistent behaviors an",
    "start": "782200",
    "end": "789070"
  },
  {
    "text": "external consistency is something we expect in many facets of our lives like",
    "start": "789070",
    "end": "794670"
  },
  {
    "text": "founded like the fixtures in our houses the light switches the faucets things like that an example of when at least on",
    "start": "794670",
    "end": "801790"
  },
  {
    "text": "the web of when external consistency is disrupted might be a website that changes the",
    "start": "801790",
    "end": "807070"
  },
  {
    "text": "appearance of a scrollbar in a way that isn't consistent with the person's",
    "start": "807070",
    "end": "812530"
  },
  {
    "text": "expectations that may be a decision that impedes people in ways we didn't expect",
    "start": "812530",
    "end": "819870"
  },
  {
    "text": "or perhaps more importantly how when we fail to use semantic hTML we create",
    "start": "819870",
    "end": "826240"
  },
  {
    "text": "experiences that are difficult for those who rely on assistive technology so this isn't just a performance thing it's also",
    "start": "826240",
    "end": "831640"
  },
  {
    "text": "kind of an accessibility thing when I talk about responsible JavaScript so paint the picture not the frame is also",
    "start": "831640",
    "end": "837670"
  },
  {
    "text": "this really wry way of saying that we shouldn't reinvent things the browser already does very well like buttons and",
    "start": "837670",
    "end": "843520"
  },
  {
    "text": "forms right and more often than not those things need to just be you know just need to be used correctly or in",
    "start": "843520",
    "end": "850000"
  },
  {
    "text": "some cases just need to be used in the first place so I apologize for this",
    "start": "850000",
    "end": "855280"
  },
  {
    "text": "because I know it's not exactly the most readable but there will be a video and I will put the slide deck up but this is a",
    "start": "855280",
    "end": "862380"
  },
  {
    "text": "example email subscription signup react component right looks probably pretty",
    "start": "862380",
    "end": "868930"
  },
  {
    "text": "familiar if you're if you're into react and you do that thing the email signup form is a stateful component that has a",
    "start": "868930",
    "end": "876790"
  },
  {
    "text": "one field a label for that field in the submit button and they're all constrained within one div now I'm sure",
    "start": "876790",
    "end": "883000"
  },
  {
    "text": "you have some very strong opinions about what's wrong with this code provided",
    "start": "883000",
    "end": "888160"
  },
  {
    "text": "it's readable depending on the distance and I apologize but what I will tell you is that the",
    "start": "888160",
    "end": "894550"
  },
  {
    "text": "solution to what might be wrong with this doesn't require more JavaScript it actually requires quite a bit less so",
    "start": "894550",
    "end": "901480"
  },
  {
    "text": "let's dig in and take a look at this form JSX there are three big thing big",
    "start": "901480",
    "end": "906910"
  },
  {
    "text": "things that are wrong here and the first one is that a form it's not a form unless it uses a form tag and dibs are",
    "start": "906910",
    "end": "915760"
  },
  {
    "text": "not intrinsically flawed they lack semantic meaning by design they're supposed to be that way they're",
    "start": "915760",
    "end": "921580"
  },
  {
    "text": "conveniences for us for structuring markup but this is a form forms should",
    "start": "921580",
    "end": "928240"
  },
  {
    "text": "always use a form element okay all right now I feel like I'm like really",
    "start": "928240",
    "end": "934300"
  },
  {
    "text": "lecturing so I'm sorry I've I'm American I'm not just I'm sorry but",
    "start": "934300",
    "end": "941260"
  },
  {
    "text": "this is a form okay and when we - when we label form fields a label element should be used with a four attribute",
    "start": "941260",
    "end": "947620"
  },
  {
    "text": "that corresponds to an ID on an input element and that that's important",
    "start": "947620",
    "end": "953680"
  },
  {
    "text": "because it lets a set lets assistive technologies know that a label corresponds to a specific input and",
    "start": "953680",
    "end": "959980"
  },
  {
    "text": "tying labels to inputs with semantic hTML actually helps all people interact better with forms not just those on",
    "start": "959980",
    "end": "966160"
  },
  {
    "text": "assistive technology you can click on a label element and make that hit area for that field much bigger it actually you",
    "start": "966160",
    "end": "972760"
  },
  {
    "text": "know reduces the chance that you're going to miss that so it's actually a good thing to do for everyone and three",
    "start": "972760",
    "end": "978120"
  },
  {
    "text": "while dibs can be coded and styled to behave and styled and to behave you know",
    "start": "978120",
    "end": "984490"
  },
  {
    "text": "and and so on to look like buttons don't do that doing so robs a button of any semantic",
    "start": "984490",
    "end": "991480"
  },
  {
    "text": "meaning it would otherwise have if it was just and here's a bonus a button",
    "start": "991480",
    "end": "997630"
  },
  {
    "text": "elements default behavior within a form element is to submit that form and this",
    "start": "997630",
    "end": "1003000"
  },
  {
    "text": "makes it more fault tolerant for solution you know of more fault tolerant solution for when not if JavaScript",
    "start": "1003000",
    "end": "1010410"
  },
  {
    "text": "fails to run because your JavaScript might run really well most places but there might be somebody who's behind",
    "start": "1010410",
    "end": "1015870"
  },
  {
    "text": "some weird proxy or whatever and you know if it totally depends on JavaScript it's gonna break buddy it's just gonna",
    "start": "1015870",
    "end": "1022470"
  },
  {
    "text": "break so now let's look at this JSX if it were to refactor to be more accessible this is the refactored form",
    "start": "1022470",
    "end": "1029160"
  },
  {
    "text": "markup and every part of it now has semantic meaning that assistive technologies can use which means it's",
    "start": "1029160",
    "end": "1034800"
  },
  {
    "text": "more helpful to people and also it will continue to work if javascript is unavailable assuming of course that the",
    "start": "1034800",
    "end": "1041250"
  },
  {
    "text": "component is rendered on the servers that's kind of an important part also note how the submit event handler has",
    "start": "1041250",
    "end": "1048240"
  },
  {
    "text": "been moved to the button from the buttons on click event to the forms on submit event and this is helpful for",
    "start": "1048240",
    "end": "1054660"
  },
  {
    "text": "when we want to intercept a form submit event if we want to enhance this forms behavior with client-side JavaScript if",
    "start": "1054660",
    "end": "1060330"
  },
  {
    "text": "we want to layer on write and additionally we remove the validate email function we use an email input",
    "start": "1060330",
    "end": "1066570"
  },
  {
    "text": "type in combination with a required attribute to leverage the browser own email field validation which most",
    "start": "1066570",
    "end": "1073139"
  },
  {
    "text": "browsers like 97% of browsers in the wild do this including IE 11 I believe now here's the final component code in",
    "start": "1073139",
    "end": "1080519"
  },
  {
    "text": "its entirety which we refactored refactored from a stateful component to a stateless component and there's a",
    "start": "1080519",
    "end": "1087029"
  },
  {
    "text": "performance boost here because state look stateless components don't extend Reax component class they're not classes",
    "start": "1087029",
    "end": "1093029"
  },
  {
    "text": "at all it's just like a like a closure like you know like a function or like an",
    "start": "1093029",
    "end": "1098519"
  },
  {
    "text": "arrow function and what's good about this is that the transpiled an optimized output for this component will now be",
    "start": "1098519",
    "end": "1104279"
  },
  {
    "text": "significantly smaller usually like one to one-and-a-half K per component if you have a lot of components worth going",
    "start": "1104279",
    "end": "1109919"
  },
  {
    "text": "through and like refactoring and like removing you know lifes you know if doesn't use life cycle methods or state",
    "start": "1109919",
    "end": "1115740"
  },
  {
    "text": "might it's worth refactoring in additionally because email validation is now handled on the client we can remove",
    "start": "1115740",
    "end": "1122220"
  },
  {
    "text": "JavaScript the JavaScript that once did this for us the vast majority of browser browsers already provide this",
    "start": "1122220",
    "end": "1128070"
  },
  {
    "text": "functionality and of course should always sanitize your inputs on the server I'm not saying rely on the client",
    "start": "1128070",
    "end": "1134909"
  },
  {
    "text": "alone to validate your input we all know that's probably not a good thing but",
    "start": "1134909",
    "end": "1140340"
  },
  {
    "text": "where possible you should move your front-end validation logic to the server rather than forcing the client to load",
    "start": "1140340",
    "end": "1145889"
  },
  {
    "text": "code to do something that the browser can already do for us on the client and of course external consistency in",
    "start": "1145889",
    "end": "1153480"
  },
  {
    "text": "semantics aren't strictly limited to HTML and CSS and JavaScript we expect",
    "start": "1153480",
    "end": "1159059"
  },
  {
    "text": "browsers than themselves to behave in certain ways and one of the most common sub versions of expected be of expected",
    "start": "1159059",
    "end": "1165149"
  },
  {
    "text": "browser behaviors is the single page application or the s.p.a and now I might be wandering into dangerous territory",
    "start": "1165149",
    "end": "1171179"
  },
  {
    "text": "just saying what I just said but as it as a disclaimer my personal inclination",
    "start": "1171179",
    "end": "1177509"
  },
  {
    "text": "is to avoid building sites as s pas and this isn't because I hate them or I don't personally benefit from them and",
    "start": "1177509",
    "end": "1183929"
  },
  {
    "text": "the apps that I use or I don't understand them or don't even think that they could be beneficial it's just that",
    "start": "1183929",
    "end": "1189659"
  },
  {
    "text": "well the navigation behavior they replace is one that browsers already do",
    "start": "1189659",
    "end": "1195690"
  },
  {
    "text": "so well and it's a problem that's been thought of and solved by browser vendors very thoughtfully very carefully even if",
    "start": "1195690",
    "end": "1203399"
  },
  {
    "text": "sink even if that that navigation is synchronous and loading a client-side",
    "start": "1203399",
    "end": "1208620"
  },
  {
    "text": "router can be begging for trouble because when we reimplementation behavior in JavaScript accessibility can",
    "start": "1208620",
    "end": "1216060"
  },
  {
    "text": "become a casualty in that effort there's a whole host of things that we end up reinventing or worse yet we miss them",
    "start": "1216060",
    "end": "1222210"
  },
  {
    "text": "all together history must be managed tabindex and scrolling position must be accounted for navigation cancelling can",
    "start": "1222210",
    "end": "1229740"
  },
  {
    "text": "fail and so on there's probably a bunch of stuff here that if I dived into the spec I could like come up with a whole",
    "start": "1229740",
    "end": "1235050"
  },
  {
    "text": "laundry list of things that you have to think about and so even if we get client-side routing just absolutely",
    "start": "1235050",
    "end": "1240330"
  },
  {
    "text": "perfect rendering performance is affected if that content is not first by",
    "start": "1240330",
    "end": "1245490"
  },
  {
    "text": "the server if you have the client do everything there's going to be some some you know a little bit of weight in here",
    "start": "1245490",
    "end": "1251310"
  },
  {
    "text": "like I mean think there might be a spinner there but a spinner is not really meaningful other than to tell",
    "start": "1251310",
    "end": "1256770"
  },
  {
    "text": "people for hang on something's coming and furthermore when we fail to send",
    "start": "1256770",
    "end": "1263880"
  },
  {
    "text": "markup on the server the content of the app is potentially inaccessible if and remember sometimes when JavaScript fails",
    "start": "1263880",
    "end": "1271350"
  },
  {
    "text": "to run when we serve content from the server I'll okay I'll concede we lose a bit of",
    "start": "1271350",
    "end": "1277920"
  },
  {
    "text": "snappiness but we regain that external consistency that people expect out of browsers and that's not to say that we",
    "start": "1277920",
    "end": "1284550"
  },
  {
    "text": "can never use client-side routers if you provide server-side versions of all your client-side routes people will have a",
    "start": "1284550",
    "end": "1291000"
  },
  {
    "text": "way at least to access any part of your site as long as they have a network connection or Service Worker and then if",
    "start": "1291000",
    "end": "1299940"
  },
  {
    "text": "components are attached to server-side markup the process known as client-side hydration people receive a progressively",
    "start": "1299940",
    "end": "1305520"
  },
  {
    "text": "enhanced experience and that's really good that gives us the freedom to try different things for example perhaps",
    "start": "1305520",
    "end": "1311160"
  },
  {
    "text": "only the authenticated portion of your app can be a single page application and like the UH Norfolk on authenticated",
    "start": "1311160",
    "end": "1317730"
  },
  {
    "text": "portions can be normal synchronous navigation or you could design your application I like this idea I'm",
    "start": "1317730",
    "end": "1323670"
  },
  {
    "text": "experimenting with it a little bit you can tie in your application so that people could opt into client-side",
    "start": "1323670",
    "end": "1329370"
  },
  {
    "text": "routing without making any assumptions you give them the externally consistent behaviors by default and if they want it",
    "start": "1329370",
    "end": "1335700"
  },
  {
    "text": "maybe they can opt into it preferences or something like that or you try something like link prefetching",
    "start": "1335700",
    "end": "1342600"
  },
  {
    "text": "which is possible at the markup shown here link prefetching can seriously boost loading performance and navigation",
    "start": "1342600",
    "end": "1349710"
  },
  {
    "text": "performance because you're fetching page HTML you're fetching documents in advance this prefetching is also done on",
    "start": "1349710",
    "end": "1356040"
  },
  {
    "text": "a low priority thread so it doesn't contend for bandwidth with other resources while the page is loading it's",
    "start": "1356040",
    "end": "1362340"
  },
  {
    "text": "not gonna slow other things down especially if you wait till after the load event to do these things but it's",
    "start": "1362340",
    "end": "1369060"
  },
  {
    "text": "not perfect I concede some if you've played with link prefetching you know that it can potentially waste people's data and",
    "start": "1369060",
    "end": "1376020"
  },
  {
    "text": "that's something to be mindful of but it does provide a nearly instantaneous navigation experience as people go from",
    "start": "1376020",
    "end": "1382710"
  },
  {
    "text": "page to page whether it's pages on your server or elsewhere on the web which is cool but",
    "start": "1382710",
    "end": "1389520"
  },
  {
    "text": "to address the possibility of wasted data the Google Chrome team offers a really small library for prefetching",
    "start": "1389520",
    "end": "1395490"
  },
  {
    "text": "pages as they scroll into the viewport and it only does so when the main browser thread is idle if network",
    "start": "1395490",
    "end": "1401730"
  },
  {
    "text": "quality is good and if the user hasn't stated a preference for reduced data usage using Chrome's data saver feature",
    "start": "1401730",
    "end": "1409160"
  },
  {
    "text": "but that's still too risky I have one solution I've come up with is a very",
    "start": "1409160",
    "end": "1414450"
  },
  {
    "text": "small script called DNS trade honest which pre pre fetches DNS information for outbound links as they scroll into",
    "start": "1414450",
    "end": "1420960"
  },
  {
    "text": "the viewport so it's not as doesn't go as far as loading a document but it'll do that that DNS lookup speculatively",
    "start": "1420960",
    "end": "1427110"
  },
  {
    "text": "and reduce that a little bit I'm thinking about acting adding some like pre connect stuff into it later it's not",
    "start": "1427110",
    "end": "1434520"
  },
  {
    "text": "as effective as link prefetching but it is less risky since DNS lookups are fairly small",
    "start": "1434520",
    "end": "1439620"
  },
  {
    "text": "for example cloud flares public DNS resolver issues request packets over UDP",
    "start": "1439620",
    "end": "1445200"
  },
  {
    "text": "that are like under half a kilobyte usually so it's pretty small pretty cheap speculation and the script is like",
    "start": "1445200",
    "end": "1450750"
  },
  {
    "text": "compressed as like 600 bytes or something so while we're on the subject of wasted data one of the biggest",
    "start": "1450750",
    "end": "1457110"
  },
  {
    "text": "offenders are images that load but go unseen and it's such a problem that we often lean on JavaScript to lazy load",
    "start": "1457110",
    "end": "1463890"
  },
  {
    "text": "this content think images and video and iframes and all that stuff and most lazy loaders are actually really quite small",
    "start": "1463890",
    "end": "1469920"
  },
  {
    "text": "I have a solution called y'all dot J s which is the most southern thing I've ever said y'all J s for",
    "start": "1469920",
    "end": "1477360"
  },
  {
    "text": "example is roughly one-and-a-half kilobytes uncompressed though some alternatives can be quite a bit bigger",
    "start": "1477360",
    "end": "1483450"
  },
  {
    "text": "for regardless of size no JavaScript solution can be as robust as a native",
    "start": "1483450",
    "end": "1490559"
  },
  {
    "text": "browser solution to wit Chrome has recently shipped native lazy loading and native lazy loading adds an additional",
    "start": "1490559",
    "end": "1496649"
  },
  {
    "text": "loading attribute to image and iframe elements it takes one of three values it's Auto eager and lazy and Auto does",
    "start": "1496649",
    "end": "1504210"
  },
  {
    "text": "what chrome did prior to native lazy loading and which basically means it'll load them normally you know it's the",
    "start": "1504210",
    "end": "1510239"
  },
  {
    "text": "default but if browser if browser heuristics are optimized in the future they may intelligently defer the loading",
    "start": "1510239",
    "end": "1517139"
  },
  {
    "text": "of assets depending on network conditions might not be something they're doing now but it's a possibility it's something that might happen a",
    "start": "1517139",
    "end": "1522960"
  },
  {
    "text": "setting of eager though will ensure that the content is loaded no matter what on paint like as soon as it's requested and",
    "start": "1522960",
    "end": "1529289"
  },
  {
    "text": "of course the setting of lazy shown here ensures that the content the image or",
    "start": "1529289",
    "end": "1534659"
  },
  {
    "text": "the iframe is loaded lazily and so when the loading attribute is set to lazy for images chrome will issue a range request",
    "start": "1534659",
    "end": "1541470"
  },
  {
    "text": "for the first two kilobytes of an image and it does that so we can get the dimensions of that image so it can",
    "start": "1541470",
    "end": "1547799"
  },
  {
    "text": "properly size the the image placeholder so you don't get that horrible a you know jumpy layout like you know you're",
    "start": "1547799",
    "end": "1553559"
  },
  {
    "text": "gonna tap and then like it moves so that you know won't happen and then the",
    "start": "1553559",
    "end": "1559980"
  },
  {
    "text": "content is loaded in full as it nears the viewport as lazy loading tends to do so because not every browser supports",
    "start": "1559980",
    "end": "1566460"
  },
  {
    "text": "this some work is necessary to make sure that all browsers get a similar experience but you could conclude that",
    "start": "1566460",
    "end": "1572100"
  },
  {
    "text": "only browsers that's support native lazy loading should receive that benefit while others get a less enhanced but",
    "start": "1572100",
    "end": "1578340"
  },
  {
    "text": "still perfectly functional experience and that's progressive enhancement at its core it's a fine decision I actually",
    "start": "1578340",
    "end": "1583350"
  },
  {
    "text": "like it if I was building a new app I might actually just consider letting browsers that don't support it just have",
    "start": "1583350",
    "end": "1589440"
  },
  {
    "text": "that's what they get but you may already be lazy loading images with JavaScript so you're gonna want to retain those",
    "start": "1589440",
    "end": "1595259"
  },
  {
    "text": "benefits right you don't take something away from somebody who has already been benefiting from it like they're using",
    "start": "1595259",
    "end": "1600480"
  },
  {
    "text": "Firefox and you know you want to make sure that they still get the good stuff so this markup shows how the comment attribute pattern used by many",
    "start": "1600480",
    "end": "1606809"
  },
  {
    "text": "JavaScript lazy loading solutions can coexist in the same element with the loading attribute unfortunately OOP sorry unfortunately in",
    "start": "1606809",
    "end": "1614730"
  },
  {
    "text": "this case the placeholder will be lazy loaded not the final image sources as we expect so we have to do some feature",
    "start": "1614730",
    "end": "1620640"
  },
  {
    "text": "checking and you can see if we check the HTML image elements HTML image element",
    "start": "1620640",
    "end": "1626100"
  },
  {
    "text": "objects prototype for the loading attribute we can decide what we want to do if native lazy loading is the thing",
    "start": "1626100",
    "end": "1632450"
  },
  {
    "text": "or if it's not and if we can't use native lazy loading we can find all the image elements with a loading attribute",
    "start": "1632450",
    "end": "1638390"
  },
  {
    "text": "value of lazy and immediately populate the proper source or srcset attributes",
    "start": "1638390",
    "end": "1643530"
  },
  {
    "text": "with the final sources and just let the browser do its native lazy loading thing",
    "start": "1643530",
    "end": "1648539"
  },
  {
    "text": "if we can't though then we can fall back to a native lazy loading solution we could dynamically import if we wanted to",
    "start": "1648539",
    "end": "1654600"
  },
  {
    "text": "not load that you know uselessly for browsers that support native lazy loading of course these things are",
    "start": "1654600",
    "end": "1661289"
  },
  {
    "text": "always more complex than what they first seem so if you're involving stuff like picture elements or like you're doing",
    "start": "1661289",
    "end": "1666809"
  },
  {
    "text": "trying to like a lazy load video which is not a candidate for native lazy loading yet you know it gets really kind",
    "start": "1666809",
    "end": "1674280"
  },
  {
    "text": "of weird especially when you start mixing in all these different image sizes and like you know image candidates",
    "start": "1674280",
    "end": "1679890"
  },
  {
    "text": "and stuff so fortunately the Smashing Magazine article in hybridized lazy loading by Andrew Andreev or litchi",
    "start": "1679890",
    "end": "1686220"
  },
  {
    "text": "shows you how you can manage both of these things both native and JavaScript lazy loading with thought and care so I",
    "start": "1686220",
    "end": "1693870"
  },
  {
    "text": "may seem like I'm droning on and on about the stuff that the browser gives us for free but the point remains the browser does give us a lot for free so",
    "start": "1693870",
    "end": "1700980"
  },
  {
    "text": "let's use that free stuff whenever we can't we like free stuff at conferences let's use browser free stuff right so we",
    "start": "1700980",
    "end": "1707010"
  },
  {
    "text": "can focus on the harder problems right of web development the really hard stuff now javascript isn't to blame for the",
    "start": "1707010",
    "end": "1714330"
  },
  {
    "text": "woes of the web it's how we use javascript so in and how the responsible",
    "start": "1714330",
    "end": "1720000"
  },
  {
    "text": "use of it starts with understanding one idea and that is the tools are not infallible the tools don't do the work",
    "start": "1720000",
    "end": "1726600"
  },
  {
    "text": "for you and you know they do some of it but you still have to make some critical decisions right very few things are",
    "start": "1726600",
    "end": "1732539"
  },
  {
    "text": "rarely set-and-forget there's one tool many of us depend on when we need javascript that you know",
    "start": "1732539",
    "end": "1737760"
  },
  {
    "text": "the es6 that we write to work everywhere and that tool is babble and while we realize and appreciate everything babble does for us we",
    "start": "1737760",
    "end": "1743610"
  },
  {
    "text": "sometimes fail to see the things it can do to harm performance and Babel is not something to idly slap into project so",
    "start": "1743610",
    "end": "1750900"
  },
  {
    "text": "even though we do that sometimes I've I've done it we but we have to know how",
    "start": "1750900",
    "end": "1756090"
  },
  {
    "text": "it works with the es6 that we write and we have to know how to configure it best for our applications while we benefit",
    "start": "1756090",
    "end": "1762360"
  },
  {
    "text": "from babbles defaults they may not always produce code that's optimal for our constraints like your constraints my",
    "start": "1762360",
    "end": "1768450"
  },
  {
    "text": "constraints everyone and you know these defaults are designed to be safe but not necessarily the most optimal those who",
    "start": "1768450",
    "end": "1775290"
  },
  {
    "text": "use what we put on the web benefit from Babel because it broadens the compatibility and they're each of our",
    "start": "1775290",
    "end": "1780390"
  },
  {
    "text": "apps we can reach more people provide reasonably similar experiences across platforms but those users would benefit",
    "start": "1780390",
    "end": "1786990"
  },
  {
    "text": "if we could Trent if we could transpire a less code because the way Babel trans",
    "start": "1786990",
    "end": "1792060"
  },
  {
    "text": "files or transforms our source code sometimes adds more to our production code than we might realize so let's take",
    "start": "1792060",
    "end": "1800280"
  },
  {
    "text": "this example logger function which accepts a message and a level parameter that gets passed the console object the",
    "start": "1800280",
    "end": "1806130"
  },
  {
    "text": "second parameter specifies the log level this corresponds to a console method like log warn or air the default is log",
    "start": "1806130",
    "end": "1813680"
  },
  {
    "text": "default parameters are very convenient but Babel often transforms them with",
    "start": "1813680",
    "end": "1818790"
  },
  {
    "text": "excessive amounts of code and on top of that this transform is repeated in every instance the default parameters used so",
    "start": "1818790",
    "end": "1825240"
  },
  {
    "text": "if you use them a lot in your client-side code there's an opportunity right there to ship less JavaScript and",
    "start": "1825240",
    "end": "1832380"
  },
  {
    "text": "I can't you know if we can't avoid babel all together and we can't always JSX right we should consider compensating",
    "start": "1832380",
    "end": "1840030"
  },
  {
    "text": "for stuff like this if if performance is is a real big big priority and this is",
    "start": "1840030",
    "end": "1845040"
  },
  {
    "text": "especially true for writing libraries that people install like if people are mass consuming like with y'all J's",
    "start": "1845040",
    "end": "1850320"
  },
  {
    "text": "people are fair amount of people install it I've noticed and you know I'm like okay let's see what I can do to get that",
    "start": "1850320",
    "end": "1856980"
  },
  {
    "text": "is teeny-tiny as possible because I want everyone to like benefit from that as much as possible we can mitigate this",
    "start": "1856980",
    "end": "1863520"
  },
  {
    "text": "translation costs by removing the default parameter and you just replace it with an or check so when a parameter",
    "start": "1863520",
    "end": "1868860"
  },
  {
    "text": "is omitted at call time it the value of that parameters on to find makes sense so when we want to",
    "start": "1868860",
    "end": "1875309"
  },
  {
    "text": "assign a default to an optional parameter we perform a check where the left side of the or is the parameter",
    "start": "1875309",
    "end": "1881279"
  },
  {
    "text": "itself and the right side is the default now this means that if the parameter is not supplied the right side of the or",
    "start": "1881279",
    "end": "1887070"
  },
  {
    "text": "condition is used which is the default but this isn't bulletproof if you have a parameter whose default is like truthy",
    "start": "1887070",
    "end": "1894149"
  },
  {
    "text": "or boolean true you might have to do like a ternary or like an N type operator thing to perform a different",
    "start": "1894149",
    "end": "1900629"
  },
  {
    "text": "kind of check because if you supply a falsie or boolean false value the default will always take precedence if",
    "start": "1900629",
    "end": "1907049"
  },
  {
    "text": "it if the default is true so not to harp on that there's just one such parameter",
    "start": "1907049",
    "end": "1914039"
  },
  {
    "text": "it's one such feature that gets transpiled by babel in some environments to transpile es6 classes - and those are",
    "start": "1914039",
    "end": "1919859"
  },
  {
    "text": "great it's a REIT in my opinion some people have beef with them I like them I think it's a reasonable amount of sugar",
    "start": "1919859",
    "end": "1925049"
  },
  {
    "text": "to turn that prototype pattern to something that more closely resembles classes as they exist in other languages",
    "start": "1925049",
    "end": "1931619"
  },
  {
    "text": "but they have a cost and if you can't read it don't worry it's not really important for you to read it's just just",
    "start": "1931619",
    "end": "1938429"
  },
  {
    "text": "no that's a lot of code for an es6 class transpilation and as you can see there's a lot of that code so it can run",
    "start": "1938429",
    "end": "1945239"
  },
  {
    "text": "everywhere and if you want to mitigate this you have a couple options you could use the prototype pattern okay I mean if",
    "start": "1945239",
    "end": "1952109"
  },
  {
    "text": "you're really familiar with it maybe that's the way to go or you could use Babel runtime in concert with like babel",
    "start": "1952109",
    "end": "1958409"
  },
  {
    "text": "plug-in transformer in time which can deduplicate some of this code and some of the helpers that battle adds or three",
    "start": "1958409",
    "end": "1965009"
  },
  {
    "text": "if your list of supported platforms is limited to like modern evergreen browsers you could remove babel all",
    "start": "1965009",
    "end": "1970080"
  },
  {
    "text": "together from your tool chain and if you can do this that's probably your best option however if your app makes use of",
    "start": "1970080",
    "end": "1975720"
  },
  {
    "text": "JSX yeah kind of got a need like something to transpile that syntax because JSX isn't supported by browsers",
    "start": "1975720",
    "end": "1983029"
  },
  {
    "text": "so it's how we write how we write our es6 isn't the only thing to consider",
    "start": "1983029",
    "end": "1988259"
  },
  {
    "text": "that when we use babel we have to know how to configure it and suboptimal babel configurations are tough because even if",
    "start": "1988259",
    "end": "1993960"
  },
  {
    "text": "you're experienced in using it and there's a lot to miss you know there's just a lot to miss or you could misunderstand something and poly filling",
    "start": "1993960",
    "end": "2001820"
  },
  {
    "text": "is something we use Babel a lot for if you're familiar with Babel preset end snippet may look a little familiar but",
    "start": "2001820",
    "end": "2008330"
  },
  {
    "text": "it is worth taking a second look at this used built-ins option which we use in concert with core js2 polyfill features",
    "start": "2008330",
    "end": "2015650"
  },
  {
    "text": "which are you know based on a browsers list query when this option is set to entry we have to ensure that core",
    "start": "2015650",
    "end": "2021410"
  },
  {
    "text": "jeaious itself is an entry point in our app and doing this adds more polyfills",
    "start": "2021410",
    "end": "2026630"
  },
  {
    "text": "to production code than we might need and you can see here that the main bundle of this example app is about 117",
    "start": "2026630",
    "end": "2032120"
  },
  {
    "text": "K and thinking it's not that big you're right it's not that big as far as as apps go but the majority of it is",
    "start": "2032120",
    "end": "2038179"
  },
  {
    "text": "polyfills so if we make a simple change and we changed the value of use built-ins from",
    "start": "2038179",
    "end": "2043220"
  },
  {
    "text": "entry to usage we're ensuring that babel only adds polyfills based on the features that it detects in the code",
    "start": "2043220",
    "end": "2049128"
  },
  {
    "text": "that we write so depending on your project this could have a profound effect on how much JavaScript you ship in the case of the example app we go",
    "start": "2049129",
    "end": "2056210"
  },
  {
    "text": "from 117 km to about 68 and a half 68 and a half K and that's like a 40%",
    "start": "2056210",
    "end": "2062148"
  },
  {
    "text": "reduction from a one-line change there's another configuration flag and preset",
    "start": "2062149",
    "end": "2067490"
  },
  {
    "text": "and that deserves our attention which activates something called loose mode loose mode is when babel takes your es6",
    "start": "2067490",
    "end": "2073280"
  },
  {
    "text": "and applies transform to it transforms to it that adhere less strictly the ACMA scripts standards and because the",
    "start": "2073280",
    "end": "2079398"
  },
  {
    "text": "transforms aren't spec compliant they're quite a bit smaller and they will still work in most situations and loose",
    "start": "2079399",
    "end": "2085340"
  },
  {
    "text": "transforms can be applied by enabling the loose flag which is false by default here's an example app or loose",
    "start": "2085340",
    "end": "2091550"
  },
  {
    "text": "transforms aren't enabled same as before 68 and a half K could be smaller though now here's that same app with loose",
    "start": "2091550",
    "end": "2097970"
  },
  {
    "text": "transforms enabled it's 18% smaller and the app still works as before although it'll be a touch faster now but loose",
    "start": "2097970",
    "end": "2106220"
  },
  {
    "text": "mode isn't bulletproof this post by axel Roush Meyer advises against them but",
    "start": "2106220",
    "end": "2111980"
  },
  {
    "text": "whether that advice pertains to your project really just depends write the criticism against loose mode is that if",
    "start": "2111980",
    "end": "2118340"
  },
  {
    "text": "you move from yes like transpile es6 code to untranslatable out you could",
    "start": "2118340",
    "end": "2125180"
  },
  {
    "text": "have some compatibility issues but in my opinion if the savings are worth it you can always tackle these potential issues",
    "start": "2125180",
    "end": "2131450"
  },
  {
    "text": "and a sprint like later on if you decide later on you want to draw Babel chances",
    "start": "2131450",
    "end": "2136880"
  },
  {
    "text": "are good though that you'll be using Babel for some as JavaScript continues to evolve and if",
    "start": "2136880",
    "end": "2142340"
  },
  {
    "text": "your again if you're using JSX you're not very likely to really pull that out of your tool chain another way",
    "start": "2142340",
    "end": "2148400"
  },
  {
    "text": "that the serve less code to users involves a technique called differential serving and it's a method of serving one",
    "start": "2148400",
    "end": "2154670"
  },
  {
    "text": "of two bundles to your users based on their browser and their capabilities bundle one would be for those on legacy",
    "start": "2154670",
    "end": "2160640"
  },
  {
    "text": "browsers that's the one you're probably already shipping to every browser it contains all the transforms and the",
    "start": "2160640",
    "end": "2165650"
  },
  {
    "text": "polyfills necessary for your stuff to run everywhere but bundle two would be for those on modern browsers these",
    "start": "2165650",
    "end": "2171650"
  },
  {
    "text": "evergreen nice pine smelling browsers that update themselves you know this",
    "start": "2171650",
    "end": "2177350"
  },
  {
    "text": "bundle would have little to no transforms or polyfills depending on what language features you're using and",
    "start": "2177350",
    "end": "2183350"
  },
  {
    "text": "the benefit is that sites loaded on modern browsers will be able to function with substantially less code and not",
    "start": "2183350",
    "end": "2188390"
  },
  {
    "text": "sacrifice new features it's just simply reducing the amount of code by by applying less transforms to it so of",
    "start": "2188390",
    "end": "2195920"
  },
  {
    "text": "course we need a way to load these separate bundles and what you see here is the way we've always loaded JavaScript this pattern shown here is",
    "start": "2195920",
    "end": "2202550"
  },
  {
    "text": "how we can differentially load JavaScript though the first script tag loads a bundle meant for modern browsers and adding type equals module means the",
    "start": "2202550",
    "end": "2209720"
  },
  {
    "text": "script will get picked up by modern browsers and because legacy browsers don't understand that type attribute",
    "start": "2209720",
    "end": "2215180"
  },
  {
    "text": "value in theory I'll come back to this in theory they'll ignore it the second",
    "start": "2215180",
    "end": "2220700"
  },
  {
    "text": "script tag shows how we would load the legacy bundle and what you see here is the no module attribute it isn't",
    "start": "2220700",
    "end": "2228110"
  },
  {
    "text": "understood by legacy browsers so they just go for whatever and they just gloss over it and they just download the stuff anyway",
    "start": "2228110",
    "end": "2233450"
  },
  {
    "text": "but no module is understand by modern bro or understood by modern browsers which will decline to download scripts",
    "start": "2233450",
    "end": "2239780"
  },
  {
    "text": "that bear that attribute now configuring your tool chain to differentially serve code is another matter all-together but it's doable",
    "start": "2239780",
    "end": "2247160"
  },
  {
    "text": "you'll need to create two separate babel configs one for each bundle you you intend to generate and this babel",
    "start": "2247160",
    "end": "2254360"
  },
  {
    "text": "configuration here shows a typical config like you'd see in a lot of projects we're targeting older browsers we've specifies used built in usage to",
    "start": "2254360",
    "end": "2261290"
  },
  {
    "text": "selectively add polyfills we need now this is a configuration for general for generating bundles for modern browsers",
    "start": "2261290",
    "end": "2268160"
  },
  {
    "text": "and you'll notice that use built-ins is gone that's because this configuration would be for a project",
    "start": "2268160",
    "end": "2273619"
  },
  {
    "text": "snow polyfills because modern browsers don't need them the code base in this in this case isn't it's using features that",
    "start": "2273619",
    "end": "2279769"
  },
  {
    "text": "already exist in modern browsers therefore they don't need to be polyfilled and we've removed the browser's list query and instead",
    "start": "2279769",
    "end": "2285289"
  },
  {
    "text": "supplied an option named es modules set to true and under the hood what this does is this translates to a browser",
    "start": "2285289",
    "end": "2291289"
  },
  {
    "text": "browsers list query string that includes all browsers which understand es6",
    "start": "2291289",
    "end": "2297440"
  },
  {
    "text": "modules and that's super convenient because if a browser supports es6 modules it also supports other modern",
    "start": "2297440",
    "end": "2304369"
  },
  {
    "text": "features think stuff like async/await arrow functions spread syntax you know",
    "start": "2304369",
    "end": "2310279"
  },
  {
    "text": "all that good stuff and then here's how both of these configurations can live together Babel allows us to group",
    "start": "2310279",
    "end": "2316339"
  },
  {
    "text": "multiple configs under an env object and our bundler configuration we can point to these separate configurations so a",
    "start": "2316339",
    "end": "2323420"
  },
  {
    "text": "web pack this is probably how you use Babel loader to match scripts to ensure that they get processed now note that",
    "start": "2323420",
    "end": "2329630"
  },
  {
    "text": "EMV names setting this points directly to the configuration in the EMV object",
    "start": "2329630",
    "end": "2335710"
  },
  {
    "text": "from the previous slide and then using web packs Multi compiler mode which just",
    "start": "2335710",
    "end": "2340819"
  },
  {
    "text": "allows you to export multiple configurations in an array you can create a wholly separate config to",
    "start": "2340819",
    "end": "2346609"
  },
  {
    "text": "generate a modern version of your bundled code and then in the modern fork of your web pack config you can then",
    "start": "2346609",
    "end": "2352940"
  },
  {
    "text": "point to the client modern Babel config to generate a smaller version of that code for modern browsers and the size",
    "start": "2352940",
    "end": "2359329"
  },
  {
    "text": "differences between legacy and modern bundles depends on the project some projects may only seem marginal gains",
    "start": "2359329",
    "end": "2364910"
  },
  {
    "text": "the tune of like 5 to 10% some projects may seem much bigger gains you know for",
    "start": "2364910",
    "end": "2370880"
  },
  {
    "text": "example we applied it to some components at a client for mine some of them were reduced by almost 90% that's a typical I",
    "start": "2370880",
    "end": "2377599"
  },
  {
    "text": "would say more often than not it's like between 30 and 50% with no change in",
    "start": "2377599",
    "end": "2382670"
  },
  {
    "text": "functionality this is a web pack bundle analysis of an example Apps legacy bundle and it's already pretty small at",
    "start": "2382670",
    "end": "2389599"
  },
  {
    "text": "around 68 K it's the same one I've been showing but with differential serving we go from small to like nano like",
    "start": "2389599",
    "end": "2396619"
  },
  {
    "text": "teeny-tiny and deliver this app to modern browsers in like just 40 percent of the size of its legacy counterparts",
    "start": "2396619",
    "end": "2404109"
  },
  {
    "text": "like you can just get that for free it's free I mean wouldn't you do that at your job",
    "start": "2404109",
    "end": "2409460"
  },
  {
    "text": "that's pretty awesome and even better when we serve scripts with type equals module this is the fun part we're in",
    "start": "2409460",
    "end": "2415370"
  },
  {
    "text": "Chrome at least we're invoking a stricter and therefore and therefore faster parser JavaScript parser and this",
    "start": "2415370",
    "end": "2423380"
  },
  {
    "text": "means that you're not only shipping less code but you're shipping a version of it that Chrome will like rip through a little bit more quickly because stricter",
    "start": "2423380",
    "end": "2429800"
  },
  {
    "text": "parsers are less tolerant of errors it doesn't have to like spend time trying to compensate for things that you might",
    "start": "2429800",
    "end": "2435590"
  },
  {
    "text": "have messed up and it will just it'll chew through it a little bit quicker and that's great but remember that type",
    "start": "2435590",
    "end": "2441320"
  },
  {
    "text": "equals module no module pattern we talked about turns out an IE and edge up",
    "start": "2441320",
    "end": "2448010"
  },
  {
    "text": "to version 18 although not in the new version which is now chromium and then",
    "start": "2448010",
    "end": "2456200"
  },
  {
    "text": "some versions of Safari although not the latest versions of Safari there's a little bit of a problem depending on the",
    "start": "2456200",
    "end": "2462020"
  },
  {
    "text": "browser both bundles can be downloaded and in the worst case scenario both bundles can also be parsed compiled and",
    "start": "2462020",
    "end": "2469010"
  },
  {
    "text": "executed you're like thanks a lot Jeremy thanks for nothing you got my hopes up and you - them well ok hang on this is",
    "start": "2469010",
    "end": "2475490"
  },
  {
    "text": "where you have to make a judgment call perhaps the majority of your users are on are on modern browsers and you might",
    "start": "2475490",
    "end": "2482900"
  },
  {
    "text": "just think well maybe I don't care about like I 11 anymore maybe they just don't care about it you",
    "start": "2482900",
    "end": "2488740"
  },
  {
    "text": "know maybe you allow them to take the hit or do you try to find a workaround",
    "start": "2488740",
    "end": "2493970"
  },
  {
    "text": "so that everybody gets on the most optimal experience that they can possibly get well it's your app so it's",
    "start": "2493970",
    "end": "2500960"
  },
  {
    "text": "your call but if double downloads are unacceptable to you and they are unacceptable to me there's another way",
    "start": "2500960",
    "end": "2507260"
  },
  {
    "text": "though it is a workaround it's not a nice standard e-type solution and this",
    "start": "2507260",
    "end": "2512990"
  },
  {
    "text": "workaround you can create a script element and infer type equals module support by checking to see if the",
    "start": "2512990",
    "end": "2518000"
  },
  {
    "text": "browser supports the know module attribute and if it does we can inject a script that points to a modern bundle if",
    "start": "2518000",
    "end": "2523520"
  },
  {
    "text": "it doesn't we can inject a script that points to a legacy bundle I've used this pattern for a recent client of mine",
    "start": "2523520",
    "end": "2529400"
  },
  {
    "text": "which is a large electronics retailer and it sure scripts get delivered without double downloads and it's",
    "start": "2529400",
    "end": "2534800"
  },
  {
    "text": "working in production right now pretty well this is important for them because their in-store kiosks use IE 11",
    "start": "2534800",
    "end": "2541520"
  },
  {
    "text": "and it will continue to for this foreseeable future for them performance is crucial in the setting so it was just",
    "start": "2541520",
    "end": "2547910"
  },
  {
    "text": "double downloads and potential double parsing was just not an acceptable outcome for them so we found a way to",
    "start": "2547910",
    "end": "2553430"
  },
  {
    "text": "solve that and everyone's happy and less JavaScript yay so of course I can't do",
    "start": "2553430",
    "end": "2560900"
  },
  {
    "text": "all this talking about first-party javascript without mentioning third-party JavaScript at least for a minute and thirty third-party javascript",
    "start": "2560900",
    "end": "2567980"
  },
  {
    "text": "is like a huge problem and for some it's a bigger problem than our than our App code and this is a visualization by",
    "start": "2567980",
    "end": "2573920"
  },
  {
    "text": "Patrick hull so I set his name correctly of the performance impact of third-party code grouped by organization and this",
    "start": "2573920",
    "end": "2581119"
  },
  {
    "text": "analysis is done on data gathered from the HTTP archive which tracks data and",
    "start": "2581119",
    "end": "2586310"
  },
  {
    "text": "performance data for like 4 million origins and sites and the the message here is simple every third party utility",
    "start": "2586310",
    "end": "2592630"
  },
  {
    "text": "advertising partner tag manager and so on and so on and so on has a performance",
    "start": "2592630",
    "end": "2600020"
  },
  {
    "text": "cost and aside from the overhead that third parties add one of the most damaging things that they do to",
    "start": "2600020",
    "end": "2605360"
  },
  {
    "text": "performance is that every unique origin requires a separate connection to be open to it and this is a three-part",
    "start": "2605360",
    "end": "2610910"
  },
  {
    "text": "process you have to do DNS lookup to find a server IP connection that has to be opened up I mean if it's over UDP on",
    "start": "2610910",
    "end": "2617330"
  },
  {
    "text": "quic that's pretty fast or HTTP 3 if they call it now that's pretty quick it's not horrible but like the web is",
    "start": "2617330",
    "end": "2623750"
  },
  {
    "text": "still a lot of TCP and that takes a while and most of the time we have to open a TLS connection because security",
    "start": "2623750",
    "end": "2631040"
  },
  {
    "text": "you know that's practically the default now I rarely see unsecured stuff in the wild anymore and this latency adds up to a lot of",
    "start": "2631040",
    "end": "2638540"
  },
  {
    "text": "time people spend waiting for pages to become interactive and the more third parties we had two sites the more that",
    "start": "2638540",
    "end": "2644090"
  },
  {
    "text": "this is felt the more this is multiplied and if you want to get a quick idea of how many third party servers are part of",
    "start": "2644090",
    "end": "2650150"
  },
  {
    "text": "your overall performance picture you can go on the network panel in chrome dev tools and you can filter out by domain",
    "start": "2650150",
    "end": "2655910"
  },
  {
    "text": "so in this case like in CNN we just filter out all of the non cnn.com domains and you can also turn on third-party badging as you can see GP",
    "start": "2655910",
    "end": "2663290"
  },
  {
    "text": "TAS has this little DC means it's from double-click Google's ad serving program it helps you identify these things a",
    "start": "2663290",
    "end": "2669560"
  },
  {
    "text": "little bit more easily and using Google Fonts as an example here's how a single third party can impact",
    "start": "2669560",
    "end": "2675200"
  },
  {
    "text": "Harmons in this webpagetest timeline a relatively small site is being held up from fully loading and painting text",
    "start": "2675200",
    "end": "2681890"
  },
  {
    "text": "because the browser is forced to wait while fonts download from google fonts and you'll notice that DNS TCP and TLS",
    "start": "2681890",
    "end": "2688670"
  },
  {
    "text": "time for two domains really holds up the show fonts don't begin start to be don't",
    "start": "2688670",
    "end": "2694820"
  },
  {
    "text": "begin to download until like 4.5 seconds in and they finished over five and a half seconds and for a small site that's",
    "start": "2694820",
    "end": "2700310"
  },
  {
    "text": "a really long time to be waiting for web fonts which block the rendering of text by default things people can't even read",
    "start": "2700310",
    "end": "2706520"
  },
  {
    "text": "anything and then the solution here to this is to self host if you can when you self host third-party resources you",
    "start": "2706520",
    "end": "2712339"
  },
  {
    "text": "would eliminate connection latency to other origins by eliminating them entirely here you can see that the only",
    "start": "2712339",
    "end": "2717859"
  },
  {
    "text": "connection we open is to the primary origin and this is one we can't avoid I mean your stuff has to live somewhere right but by cutting google fonts out of",
    "start": "2717859",
    "end": "2725510"
  },
  {
    "text": "the picture and self hosting those resources we can get fonts downloaded on the client inside of three-and-a-half seconds and that's a big improvement and",
    "start": "2725510",
    "end": "2732320"
  },
  {
    "text": "the cypher auditing your third-party code and eliminating what you truly don't need and you should be doing that",
    "start": "2732320",
    "end": "2738849"
  },
  {
    "text": "you can extend the idea of self hosting third party assets to most things and the benefits of doing this are huge",
    "start": "2738849",
    "end": "2745130"
  },
  {
    "text": "especially where javascript is concerned Optimizely is a very popular client-side AV testing framework I'm not crazy about",
    "start": "2745130",
    "end": "2752089"
  },
  {
    "text": "it but my clients use it and it's clearly useful to them I think it would be ideal to do server-side a be testing",
    "start": "2752089",
    "end": "2758480"
  },
  {
    "text": "instead but that's not always possible and so in this case study Casper mattress was able to reduce start time",
    "start": "2758480",
    "end": "2764930"
  },
  {
    "text": "by 1.7 or start render time by 1.7 seconds by self hosting optimize Lee's",
    "start": "2764930",
    "end": "2770270"
  },
  {
    "text": "JavaScript it was an involved process to accomplish this but the results were clearly worth it to them because it's",
    "start": "2770270",
    "end": "2775819"
  },
  {
    "text": "money for them right the sooner we get this loading its money money money and so self host as much of that third-party",
    "start": "2775819",
    "end": "2781280"
  },
  {
    "text": "code as you reasonably can but if you can't you can do resource since you could like do DNS prefetch to do a look",
    "start": "2781280",
    "end": "2788150"
  },
  {
    "text": "ahead on a third-party host or a pre connect to actually initiate an early connection to a host and you would put",
    "start": "2788150",
    "end": "2794089"
  },
  {
    "text": "this in your HTML head well before the browser would ever discover those resources it doesn't take it's not as",
    "start": "2794089",
    "end": "2800030"
  },
  {
    "text": "good as self hosting those assets but it does take some of the sting out of that and it's a relatively easy thing to do",
    "start": "2800030",
    "end": "2806089"
  },
  {
    "text": "and of course this leads us into a discussion about what it to be accommodating when we deploy",
    "start": "2806089",
    "end": "2812299"
  },
  {
    "text": "something to the web we have to be a steward of that thing right and we have",
    "start": "2812299",
    "end": "2817819"
  },
  {
    "text": "to try our level best to make it is usable for as many people as possible because you don't know who's gonna",
    "start": "2817819",
    "end": "2823909"
  },
  {
    "text": "access it you don't know who's gonna find your content useful you don't know who wants to get your product right so",
    "start": "2823909",
    "end": "2829939"
  },
  {
    "text": "in the United States many developers live in large cities which are typically well served by low latency high",
    "start": "2829939",
    "end": "2834949"
  },
  {
    "text": "bandwidth broadband connections and mobile internet connections like LTE and coming up 5g but a large portion of the",
    "start": "2834949",
    "end": "2842569"
  },
  {
    "text": "country's population lives in remote or underserved areas where this just isn't the case and this article by the MIT",
    "start": "2842569",
    "end": "2848089"
  },
  {
    "text": "Technology Review revealed that 58% of households in the Cleveland metropolitan",
    "start": "2848089",
    "end": "2853669"
  },
  {
    "text": "area with incomes under $20,000 a year had no broadband access at all and these",
    "start": "2853669",
    "end": "2859519"
  },
  {
    "text": "are people who rely on like mobile internet connections with like data caps right and you know they need this",
    "start": "2859519",
    "end": "2866479"
  },
  {
    "text": "because we're becoming an increasingly internet dependent society I mean it's it's a requirement of living almost it's",
    "start": "2866479",
    "end": "2872900"
  },
  {
    "text": "like I should be like a human right but even more striking as this passage where Pew Research finds that fully one-third",
    "start": "2872900",
    "end": "2880279"
  },
  {
    "text": "of Americans don't have an internet connection faster than dial-up in their own homes like think about that I doubt",
    "start": "2880279",
    "end": "2887449"
  },
  {
    "text": "this was written in late 2016 I highly doubt this has improved significantly since this article is",
    "start": "2887449",
    "end": "2893150"
  },
  {
    "text": "written the infrastructure just isn't there yet to bring these people into the 21st century this is a broadband map of",
    "start": "2893150",
    "end": "2899269"
  },
  {
    "text": "Buffalo County Wisconsin the state just east of where I live in Minnesota it is a microcosm of what rural brant",
    "start": "2899269",
    "end": "2906949"
  },
  {
    "text": "broadband is like in America and if you happen to live near a population center and have the money broadband is an",
    "start": "2906949",
    "end": "2913640"
  },
  {
    "text": "option for you but once you start getting out in the sticks broadband starts to look less and less like an",
    "start": "2913640",
    "end": "2919640"
  },
  {
    "text": "option until in some places it's just not an option at all so the two foundational elements of network",
    "start": "2919640",
    "end": "2926150"
  },
  {
    "text": "performance are latency and bandwidth so if you're serving a lot of assets in your site's sufficiently high latency or",
    "start": "2926150",
    "end": "2931459"
  },
  {
    "text": "low bandwidth makes your site functionally inaccessible thankfully there's a technology supported in Chrome",
    "start": "2931459",
    "end": "2936919"
  },
  {
    "text": "which is used by the VAT well I wouldn't say the vast but like a very large majority of users on the web",
    "start": "2936919",
    "end": "2942510"
  },
  {
    "text": "and this technology is called client hints client hints are a feature that help developers to know the",
    "start": "2942510",
    "end": "2948480"
  },
  {
    "text": "characteristic of characteristics of both a person's device and the network that it's connected to and there are a",
    "start": "2948480",
    "end": "2954120"
  },
  {
    "text": "lot of client hints a lot of them but there are three I feel that are really useful that I want to talk about today a",
    "start": "2954120",
    "end": "2960540"
  },
  {
    "text": "little bit and that's our TT downlink and ECT RT T or round-trip time is the",
    "start": "2960540",
    "end": "2969390"
  },
  {
    "text": "approximate latency a user is experiencing in milliseconds downlink as",
    "start": "2969390",
    "end": "2974940"
  },
  {
    "text": "you might guess is the approximate downstream bandwidth in kilobits per second an ECT or effective connection",
    "start": "2974940",
    "end": "2983400"
  },
  {
    "text": "type as it stands for is an enumerated string determined by the browser after it evaluates the RT t and the downlink",
    "start": "2983400",
    "end": "2989280"
  },
  {
    "text": "values and then tries to coarsely categorize the speed of a connection",
    "start": "2989280",
    "end": "2994320"
  },
  {
    "text": "with 4G being the highest now that doesn't necessarily mean it correlates to 4G it just means this is at least as",
    "start": "2994320",
    "end": "3001070"
  },
  {
    "text": "fast as what we think 4G should be so it could be like cable could be like fiber",
    "start": "3001070",
    "end": "3006520"
  },
  {
    "text": "but it's useful right it attempts to categorize this and that's useful for us because all of these hints can help us",
    "start": "3006520",
    "end": "3012290"
  },
  {
    "text": "to tailor experiences to send less stuff to people on slow connections we can opt into specific hint hints with the except",
    "start": "3012290",
    "end": "3019910"
  },
  {
    "text": "CH HTTP request header and you can see here those are the hints we want to opt",
    "start": "3019910",
    "end": "3025040"
  },
  {
    "text": "into separated by commas and we can tell the client how long we want these hints to be accessible to the client with",
    "start": "3025040",
    "end": "3030470"
  },
  {
    "text": "except CH lifetime and the above example we persist these client hints for a day but you can supply whatever works right",
    "start": "3030470",
    "end": "3037010"
  },
  {
    "text": "like a long value is not going to be harmful so you can access these hints in a server-side language or like in a",
    "start": "3037010",
    "end": "3042920"
  },
  {
    "text": "serviceworker even like PHP as we see here and when they come when they come through his request headers and here you",
    "start": "3042920",
    "end": "3049040"
  },
  {
    "text": "can see that we initialize this variable with the default of 4G and we do this in case a browser comes along that doesn't",
    "start": "3049040",
    "end": "3055010"
  },
  {
    "text": "support client hints so they will be assumed like the fastest connection",
    "start": "3055010",
    "end": "3060740"
  },
  {
    "text": "speed we you know we do this because we want to deliver the ideal experience to people who don't support client hints",
    "start": "3060740",
    "end": "3067520"
  },
  {
    "text": "because we just don't know right then we check to see if the ECT hint has been sent as a request header and if it has",
    "start": "3067520",
    "end": "3074090"
  },
  {
    "text": "we start that headers value in the ECT very and using this information we can shape experiences we can we can adapt them to",
    "start": "3074090",
    "end": "3082369"
  },
  {
    "text": "the shifting conditions of the network or even the device accessing them because there are device specific things like device memory you could decide I",
    "start": "3082369",
    "end": "3088339"
  },
  {
    "text": "want to send less JavaScript if a device only has a gig of memory right that's useful parsing and compiling and",
    "start": "3088339",
    "end": "3095240"
  },
  {
    "text": "executing takes memory and processing so this is a powerful technology you can create lighter more focused experiences",
    "start": "3095240",
    "end": "3102440"
  },
  {
    "text": "for people who need it the most and an example above we decide that a person will only see a data intensive carousel",
    "start": "3102440",
    "end": "3109430"
  },
  {
    "text": "if they're on a reasonably fast connection and if a user is on a slow connection we lighten the experience for",
    "start": "3109430",
    "end": "3114440"
  },
  {
    "text": "them and the focus is increased on content that's critical to them this is by the way this is easy to sell the",
    "start": "3114440",
    "end": "3119809"
  },
  {
    "text": "product stakeholders because everybody gets what they want right because most people are reasonable they want to help",
    "start": "3119809",
    "end": "3126019"
  },
  {
    "text": "people out you'd be like well the default can be the ideal but maybe we could like check for slower connections",
    "start": "3126019",
    "end": "3132140"
  },
  {
    "text": "and maybe adapt it a little bit and this works I like to call this adaptive performance I think it's a fantastic way",
    "start": "3132140",
    "end": "3137210"
  },
  {
    "text": "of compromising between the ideal that you wanted to build and what the user",
    "start": "3137210",
    "end": "3143089"
  },
  {
    "text": "needs in order to make to use the thing that you put out there and it works here",
    "start": "3143089",
    "end": "3148640"
  },
  {
    "text": "are two versions of the same site it's a central Wisconsin logging company I sort",
    "start": "3148640",
    "end": "3154579"
  },
  {
    "text": "of anonymized it it's actually the client name is different and so they're not actually called sky timber the",
    "start": "3154579",
    "end": "3161509"
  },
  {
    "text": "version on the left has like custom fonts and a carousel and like accordions for like a QA and a lot of JavaScript to",
    "start": "3161509",
    "end": "3167599"
  },
  {
    "text": "run all of this stuff but it's pretty much inaccessible for people on a slow",
    "start": "3167599",
    "end": "3173029"
  },
  {
    "text": "connection and their clients live in like the middle of nowhere like Wisconsin like it's really difficult in",
    "start": "3173029",
    "end": "3181430"
  },
  {
    "text": "some of those spaces for them to access this 90 seconds on 2g but using client",
    "start": "3181430",
    "end": "3187249"
  },
  {
    "text": "hints we can distill this experience as you see on the right for those who are on slow connections we can remove those",
    "start": "3187249",
    "end": "3193549"
  },
  {
    "text": "things that may not be as crucial to like what users need the information that they need and for our trouble those",
    "start": "3193549",
    "end": "3199489"
  },
  {
    "text": "people will have something they can access quickly even if bandwidth is lacking and latency is very high we're",
    "start": "3199489",
    "end": "3204589"
  },
  {
    "text": "talking like what five requests 12 12 kilobytes it's like five seconds over 2g if you're used to a slow",
    "start": "3204589",
    "end": "3210200"
  },
  {
    "text": "experience five seconds is reasonably snappy right I get throttled every time I traffic and I'm just sitting here in",
    "start": "3210200",
    "end": "3215930"
  },
  {
    "text": "Norway don't come on come on I wish everyone was using client hints so if",
    "start": "3215930",
    "end": "3221510"
  },
  {
    "text": "you're interested in knowing more I did a talk at full-stack fest in Barcelona last year that goes into this like in depth it's all the client hints and all",
    "start": "3221510",
    "end": "3227990"
  },
  {
    "text": "the stuff about it you can check that out but if you're not into videos I'm more of like a person",
    "start": "3227990",
    "end": "3233210"
  },
  {
    "text": "that likes to like kind of digest stuff at my own pace and read articles I did write an article for Google web fundamentals about it it goes into a",
    "start": "3233210",
    "end": "3239359"
  },
  {
    "text": "similar depth okay so in closing I want",
    "start": "3239359",
    "end": "3244820"
  },
  {
    "text": "to hit on what I think is an important point and that is we need to first",
    "start": "3244820",
    "end": "3250579"
  },
  {
    "text": "understand what it is that people want from what we're putting on the web meaning what do we want them to do when",
    "start": "3250579",
    "end": "3258589"
  },
  {
    "text": "they get to a given website what's our goal how can we help them and then we need to work backward from that we don't",
    "start": "3258589",
    "end": "3265670"
  },
  {
    "text": "we shouldn't front-load some of our assumptions that you know architecture",
    "start": "3265670",
    "end": "3271010"
  },
  {
    "text": "with like all of these tools assuming that these tools are going to give us like the best result we have to think about what the user wants and work",
    "start": "3271010",
    "end": "3276650"
  },
  {
    "text": "backward and decide what the appropriate path is and that would be a good thing",
    "start": "3276650",
    "end": "3283010"
  },
  {
    "text": "if we would do more of that but as I understand any person in almost any profession just loves their tools and I",
    "start": "3283010",
    "end": "3289280"
  },
  {
    "text": "get it I love tools they're great they they allow us to build things like that",
    "start": "3289280",
    "end": "3295730"
  },
  {
    "text": "you know faster and like more complex and all that kind of stuff but like unlike the auto mechanic who works in",
    "start": "3295730",
    "end": "3302270"
  },
  {
    "text": "your car the tools we choose to do the work at least the production dependencies we choose to use have a",
    "start": "3302270",
    "end": "3309560"
  },
  {
    "text": "direct and felt impact like they're sort of bundled in and the user has to like bear the cost of those tools like the",
    "start": "3309560",
    "end": "3316130"
  },
  {
    "text": "mechanic doesn't throw a ton of wrenches in the back of my car when he's done I don't feel that but like we feel we feel",
    "start": "3316130",
    "end": "3322250"
  },
  {
    "text": "it like as users when we when we use too much of this stuff we don't always need to burden them with the entire tool",
    "start": "3322250",
    "end": "3328220"
  },
  {
    "text": "chest or the whole tool shed even sometimes it makes more sense to like step back and use tools that are smaller",
    "start": "3328220",
    "end": "3335750"
  },
  {
    "text": "and more focused on the work and that is to say that your experience as a developer is important I agree",
    "start": "3335750",
    "end": "3343579"
  },
  {
    "text": "with that I don't want you to think I'm I'm like crapping on all of the stuff that we use that stuff is important but",
    "start": "3343579",
    "end": "3349819"
  },
  {
    "text": "it is never more important than the user experience that's that's the purpose you",
    "start": "3349819",
    "end": "3355819"
  },
  {
    "text": "need to serve is the user experience and if your excitement for a certain set of tools causes you to build things that no",
    "start": "3355819",
    "end": "3362390"
  },
  {
    "text": "longer annika bleah and effectively serve those purposes it's high time to",
    "start": "3362390",
    "end": "3367549"
  },
  {
    "text": "reevaluate them look at your analytics find out where your users are coming from get a get a real user metrics",
    "start": "3367549",
    "end": "3374049"
  },
  {
    "text": "library and find out how people are accessing your site like real people what are their impacts and start making",
    "start": "3374049",
    "end": "3380150"
  },
  {
    "text": "changes but thankfully the ecosystem gives us a lot of options without",
    "start": "3380150",
    "end": "3386269"
  },
  {
    "text": "sacrificing developer experience entirely you can always find smaller",
    "start": "3386269",
    "end": "3391309"
  },
  {
    "text": "options that will be felt less by the people who use what you create as a I'm a big fan of pre-act by the way it is",
    "start": "3391309",
    "end": "3398739"
  },
  {
    "text": "100 almost 100 percent API compatible with react new version is going to be using hooks and all that stuff that we",
    "start": "3398739",
    "end": "3404719"
  },
  {
    "text": "like and it's like it's a tenth of the size and that's huge right and you can",
    "start": "3404719",
    "end": "3409940"
  },
  {
    "text": "always add react later on if you needed to but time and time again if you look you can find alternatives to commonly",
    "start": "3409940",
    "end": "3415910"
  },
  {
    "text": "use libraries and frameworks and so hopefully you can use less Java Script use it more responsibly and with care my",
    "start": "3415910",
    "end": "3424039"
  },
  {
    "text": "hope my hope my fervent hope is that over time we can learn to do more with",
    "start": "3424039",
    "end": "3430489"
  },
  {
    "text": "less JavaScript and this may be a fool's hope or maybe even recognize when we",
    "start": "3430489",
    "end": "3435739"
  },
  {
    "text": "don't need JavaScript so we can create resilient fault tolerant sites that are",
    "start": "3435739",
    "end": "3442400"
  },
  {
    "text": "faster and more accessible for everyone everywhere because that's what people deserve thank you",
    "start": "3442400",
    "end": "3450099"
  },
  {
    "text": "smooth move i dribbled all over myself",
    "start": "3458220",
    "end": "3463290"
  },
  {
    "text": "so we have like two minutes and people are getting up yeah I don't know if",
    "start": "3463290",
    "end": "3471880"
  },
  {
    "text": "we're gonna have time for Q&A if people need to get to where they're going although there's 20 minutes in between",
    "start": "3471880",
    "end": "3478570"
  },
  {
    "text": "if you have various pointed specific questions I'll be roaming around I don't",
    "start": "3478570",
    "end": "3485560"
  },
  {
    "text": "want to cut the legs off of this I just don't want to hold anyone else up or the person who's coming on after me so thank",
    "start": "3485560",
    "end": "3492490"
  },
  {
    "text": "you",
    "start": "3492490",
    "end": "3494610"
  }
]