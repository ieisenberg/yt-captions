[
  {
    "start": "0",
    "end": "39000"
  },
  {
    "text": "alright let's get started good afternoon everyone my name's Rob Moore my name is",
    "start": "8370",
    "end": "13930"
  },
  {
    "text": "Matt Davis and we're principal consultants at ratified so they're gonna be talking to you about something that we call micro testing now the easiest",
    "start": "13930",
    "end": "21310"
  },
  {
    "text": "way for us or probably the simplest way for us to describe what it is is the tagline here so we're trying to be a bit",
    "start": "21310",
    "end": "26380"
  },
  {
    "text": "smarter about how we test by embracing simplicity and continuous improvement at",
    "start": "26380",
    "end": "31689"
  },
  {
    "text": "least we thought that was the easiest way but earlier I was talking to Andrew best there and he described it to me as pragmatic testing so let's run with that",
    "start": "31689",
    "end": "38470"
  },
  {
    "text": "yeah so yep a fair number of you are probably wondering what's micro testing why did you call it",
    "start": "38470",
    "end": "45250"
  },
  {
    "start": "39000",
    "end": "127000"
  },
  {
    "text": "that because we made it up it has a completely made-up term we came up with it last year when we put this talk",
    "start": "45250",
    "end": "51340"
  },
  {
    "text": "forward for a yo conference at that time typically even now if you look at the agenda for NDC there's a lot of talks",
    "start": "51340",
    "end": "57850"
  },
  {
    "text": "about micro services we kind of just wanted to jump on the bandwagon but a little bit more seriously we've",
    "start": "57850",
    "end": "64930"
  },
  {
    "text": "been finding with the sort of practices and techniques I guess that we've been using the approaches we've been using",
    "start": "64930",
    "end": "70240"
  },
  {
    "text": "for testing over the last couple of years that we've been writing less tests and spending less time testing but",
    "start": "70240",
    "end": "76990"
  },
  {
    "text": "actually getting more out of it and getting the same or better confidence so it's kind of a strangely appropriate",
    "start": "76990",
    "end": "82359"
  },
  {
    "text": "title anyway yeah and as consultants we get to see a whole heap of different",
    "start": "82359",
    "end": "87939"
  },
  {
    "text": "testing strategies we get to see just about everything under the Sun we get a lot of opportunity to do research into",
    "start": "87939",
    "end": "93429"
  },
  {
    "text": "this stuff ourselves and we we get to play around and try to write some of this stuff ourselves and what we find",
    "start": "93429",
    "end": "99729"
  },
  {
    "text": "just in looking a lot of what's out there is just like a complete garbage there's awful awful testing and we've",
    "start": "99729",
    "end": "106780"
  },
  {
    "text": "written a lot of it we've written most of it we can't make any excuses so what we want to try and do as a part of this",
    "start": "106780",
    "end": "113049"
  },
  {
    "text": "talk is to try and share some of the lessons learned try and chest and practical advice and tips for how to do",
    "start": "113049",
    "end": "118149"
  },
  {
    "text": "some of this stuff in a better way yeah and I guess leveraging some of the experiences we've had over the last",
    "start": "118149",
    "end": "123340"
  },
  {
    "text": "couple of years and some of our successes and failures and stuff yeah so we've decided to break this talk up into",
    "start": "123340",
    "end": "130690"
  },
  {
    "start": "127000",
    "end": "242000"
  },
  {
    "text": "a number of chapters first chapter is about confidence and you'll understand why as we go through this chapter is",
    "start": "130690",
    "end": "137290"
  },
  {
    "text": "really easy and so we're basically going to you all about why the testing pyramid is the answer to all of our questions",
    "start": "137290",
    "end": "142440"
  },
  {
    "text": "it's gonna say all the testing pyramid so this is the testing pyramid you might",
    "start": "142440",
    "end": "147510"
  },
  {
    "text": "remember this from under your days in university or your early days learning about this stuff as a developer you've",
    "start": "147510",
    "end": "152730"
  },
  {
    "text": "got a relatively high ratio of unit tests down the bottom a smaller ratio of integration or service level tests above",
    "start": "152730",
    "end": "159510"
  },
  {
    "text": "that and an even smaller level of UI level or user facing tests and to be",
    "start": "159510",
    "end": "164820"
  },
  {
    "text": "honest we completely fundamentally disagree with this for a whole heap of reasons so it makes us really sad so",
    "start": "164820",
    "end": "170880"
  },
  {
    "text": "we've got a sad face there the testing pyramid mandates that you do everything according to a very rigid structure it",
    "start": "170880",
    "end": "177000"
  },
  {
    "text": "says that you're going to have this many of this type of tests this many of this other type of tests and it forces you to",
    "start": "177000",
    "end": "183600"
  },
  {
    "text": "I guess try and figure out what these like names for things even mean I mean hands up if you've ever had an argument",
    "start": "183600",
    "end": "190170"
  },
  {
    "text": "with someone over whether or not a test is a unit test or an integration test right yeah wait that time that you spent",
    "start": "190170",
    "end": "195690"
  },
  {
    "text": "is a waste you could have been spending that time delivering value rather than arguing if something's a unit or an integration test true yeah that's it",
    "start": "195690",
    "end": "202440"
  },
  {
    "text": "delivers value yeah and the other thing to consider is that this testing pyramid",
    "start": "202440",
    "end": "207930"
  },
  {
    "text": "doesn't take into account the concept of what we call speed versus confidence absolutely so when we talk about speed",
    "start": "207930",
    "end": "214739"
  },
  {
    "text": "versus confidence what we mean is speed is you've got some sort of test suite how long does it take from starting the",
    "start": "214739",
    "end": "221130"
  },
  {
    "text": "test suite to when you find out according to that suite of tests whether or not there are any bugs in your",
    "start": "221130",
    "end": "226440"
  },
  {
    "text": "software that's the speed and then confidence is once you've run that suite of tests how confident are you that",
    "start": "226440",
    "end": "232320"
  },
  {
    "text": "there's a bug in your code or put another way how confident are you to click a button to push your code to",
    "start": "232320",
    "end": "237810"
  },
  {
    "text": "production how confident are you to let your product don't push a button to go to production absolutely so if we look",
    "start": "237810",
    "end": "244799"
  },
  {
    "start": "242000",
    "end": "448000"
  },
  {
    "text": "at trying to graph I guess speed versus confidence and we look at say manual testing or automated UI testing these",
    "start": "244799",
    "end": "251940"
  },
  {
    "text": "execute the full production stack of the system on behind like a simulator like",
    "start": "251940",
    "end": "257549"
  },
  {
    "text": "what an end-user would do so you get a lot of confidence from running these types of tests but relatively speaking",
    "start": "257549",
    "end": "263940"
  },
  {
    "text": "they're very very slow if you compare that to your traditional unit tests they typically Iran in process in memory they",
    "start": "263940",
    "end": "271289"
  },
  {
    "text": "take a few milliseconds to but the amount of confidence that those tests give you is relatively very small",
    "start": "271289",
    "end": "277020"
  },
  {
    "text": "because you're only testing a tiny part of your code and quite often you're mocking out production implementation",
    "start": "277020",
    "end": "283080"
  },
  {
    "text": "details now if you take one of these unit tests you add in some real data base calls you've now got out of process",
    "start": "283080",
    "end": "289380"
  },
  {
    "text": "communication it's an order of magnitude slower but there's a whole class of errors that you will now pick up in your",
    "start": "289380",
    "end": "295590"
  },
  {
    "text": "tests around things like does the sequel work are your data based migrations correct does your RM correctly hydrate",
    "start": "295590",
    "end": "301770"
  },
  {
    "text": "your entities etc etc now if we try to graph these what we kind of finding out",
    "start": "301770",
    "end": "306990"
  },
  {
    "text": "here is this seems to be an inversely proportional relationship between speed and confidence now if we come back to",
    "start": "306990",
    "end": "313710"
  },
  {
    "text": "the testing pyramid there's nothing in here about speed or confidence it's just",
    "start": "313710",
    "end": "318840"
  },
  {
    "text": "a very rigid structure and on that point of a rigid structure the reason why that's such a problem is pretty evident",
    "start": "318840",
    "end": "326160"
  },
  {
    "text": "when we I mean we always have a lot of experience going between different clients we see a lots of different circumstances one of the things that we",
    "start": "326160",
    "end": "333090"
  },
  {
    "text": "notice is between different teams or between different companies there's a lot of scenarios where your approach to testing should be very different so say",
    "start": "333090",
    "end": "340320"
  },
  {
    "text": "you've got the Juno rocket by NASA now if someone's kind of like messed up some",
    "start": "340320",
    "end": "345720"
  },
  {
    "text": "code in that and then the rocket explodes how many years have you wasted right and that's why I'm gonna care if I",
    "start": "345720",
    "end": "351570"
  },
  {
    "text": "have to pump a few more million dollars in to get really good test coverage on that yeah and it absolutely makes sense",
    "start": "351570",
    "end": "356790"
  },
  {
    "text": "to do that in that scenario on the other hand if you've got say like an admin system that's used by like two people",
    "start": "356790",
    "end": "362010"
  },
  {
    "text": "who sit next to you it might be enough to just have one you are test that just sits over the whole thing and you just kind of say that's enough if anything",
    "start": "362010",
    "end": "368820"
  },
  {
    "text": "goes wrong these people are just kind of bare and available and it's actually not much effort to sort that out horen no UI",
    "start": "368820",
    "end": "374130"
  },
  {
    "text": "test at all yeah and that's actually a really good example the admin system of an example where even within one system",
    "start": "374130",
    "end": "380940"
  },
  {
    "text": "different features in that system will have different against confidence levels that make sense and different I guess",
    "start": "380940",
    "end": "387390"
  },
  {
    "text": "amounts of testing that make sense so admin system over here we don't need much tests over here you've got a bank",
    "start": "387390",
    "end": "394200"
  },
  {
    "text": "with a mortgage application form if you mess that up and users can't actually fill that out you're potentially losing",
    "start": "394200",
    "end": "400080"
  },
  {
    "text": "millions of dollars you're going to put a bit more rigor into the mortgage application form now",
    "start": "400080",
    "end": "407340"
  },
  {
    "text": "Jimmy Bogart has a really good talk that he did an NDC oslo 2013 called holistic testing highly encourage you to watch it",
    "start": "407340",
    "end": "414240"
  },
  {
    "text": "he introduces this as his testing pyramid in that talk now",
    "start": "414240",
    "end": "419250"
  },
  {
    "text": "I really like this so what he says is you know have a high proportion of fast tests a slightly slower proportion of",
    "start": "419250",
    "end": "426060"
  },
  {
    "text": "slow tests and even slower as slower smaller proportion of slow as hell tests this is good it takes us a step in the",
    "start": "426060",
    "end": "432420"
  },
  {
    "text": "right direction because at least now we're talking about our speed of feedback which is really important but it still doesn't go far enough in our",
    "start": "432420",
    "end": "438180"
  },
  {
    "text": "opinion because it's still very rigid and it doesn't talk about confidence hmm so you might be wondering what's the",
    "start": "438180",
    "end": "444060"
  },
  {
    "text": "testing pyramid that we use what do I do yeah oh there we go oh is the testing",
    "start": "444060",
    "end": "449760"
  },
  {
    "start": "448000",
    "end": "539000"
  },
  {
    "text": "pyramid it's supposed to be on this slide is it under here Damian where's our testing pyramid do you have it no so",
    "start": "449760",
    "end": "455850"
  },
  {
    "text": "is it hang on",
    "start": "455850",
    "end": "460130"
  },
  {
    "text": "so make it burn basically yeah so as we",
    "start": "461360",
    "end": "466890"
  },
  {
    "text": "kind of said we completely disagree with the idea of having a testing pyramid it locks you into a pretty rigid structure so let's just get rid of it and let's",
    "start": "466890",
    "end": "474090"
  },
  {
    "text": "come up with something individualized based on what we need to do so then you might be wondering okay we've thrown out the testing period how are we gonna",
    "start": "474090",
    "end": "480690"
  },
  {
    "text": "decide what kind of tests to write it was gonna be lost they're gonna be walking around in a daze of confusion yes yep absolutely but I guess what it",
    "start": "480690",
    "end": "488790"
  },
  {
    "text": "comes back down to for us is what's the most important thing to think about if you're trying to decide cool this is a",
    "start": "488790",
    "end": "495060"
  },
  {
    "text": "feature I'm writing what kind of test should I write how should I test this should I even test it at all etc",
    "start": "495060",
    "end": "502520"
  },
  {
    "text": "cool so to start to make a decision around some of these things we've got a",
    "start": "502520",
    "end": "508500"
  },
  {
    "text": "really good quote here from Jimmy who from the same talk that Rob mentioned and what he's basically saying here is",
    "start": "508500",
    "end": "514890"
  },
  {
    "text": "that the goal of testing isn't actually to test its to come up with a level of",
    "start": "514890",
    "end": "520169"
  },
  {
    "text": "confidence that our app is going to work it's just a means to an end you can have all sorts of different levels of code",
    "start": "520169",
    "end": "525600"
  },
  {
    "text": "coverage but you could have a hundred percent and it doesn't necessarily mean that your apps going to be successful it's it's completely unrelated its",
    "start": "525600",
    "end": "532830"
  },
  {
    "text": "confidence that's important rather than a level of code coverage so let's really drive that home the goal of testing it's",
    "start": "532830",
    "end": "540600"
  },
  {
    "start": "539000",
    "end": "572000"
  },
  {
    "text": "not to test so if you're kind of finding yourself writing a feature and then just you just",
    "start": "540600",
    "end": "546690"
  },
  {
    "text": "without thinking you just start running a test because that's what we do we just write tests does that test give you any value you",
    "start": "546690",
    "end": "552899"
  },
  {
    "text": "should stop and think about that in our opinion the goal of testing should be to get enough confidence enough being a",
    "start": "552899",
    "end": "559860"
  },
  {
    "text": "really important word in that sentence as quickly as possible because type feedback loops are really good they",
    "start": "559860",
    "end": "564930"
  },
  {
    "text": "speed up our teams we know that deliver developer velocity is typically something most companies care a lot about",
    "start": "564930",
    "end": "571550"
  },
  {
    "text": "so that leads us on to talking about speed of release I would make the",
    "start": "571550",
    "end": "576870"
  },
  {
    "start": "572000",
    "end": "720000"
  },
  {
    "text": "assertion that you're probably not going to release your software until you have some sort of minimum confidence level in",
    "start": "576870",
    "end": "582300"
  },
  {
    "text": "that software if you think that the software is buggy in some way you're probably not going to deploy it to production it doesn't make any snow on",
    "start": "582300",
    "end": "588870"
  },
  {
    "text": "all your users to leave you right exactly so we've kind of come up with this completely arbitrary graph",
    "start": "588870",
    "end": "594620"
  },
  {
    "text": "looking at the amount of automated test coverage that you have versus speed of",
    "start": "594620",
    "end": "600810"
  },
  {
    "text": "release now I guess this is just based on what we've seen in a number of companies that we've mean - on one hand",
    "start": "600810",
    "end": "608430"
  },
  {
    "text": "if you don't have any automated test coverage at all you probably got a team that has a fear of refactoring and",
    "start": "608430",
    "end": "614850"
  },
  {
    "text": "obviously that means you're probably going to get technical debt build-up and that's going to slow you down you're probably relying on a lot of manual",
    "start": "614850",
    "end": "621329"
  },
  {
    "text": "regression testing very slow doesn't actually pick up all the bugs and they're probably going to be a lot",
    "start": "621329",
    "end": "627180"
  },
  {
    "text": "of regression so you probably going to be spending a lot of time fixing bugs all of these things slow us down this low down our speed of release but on the",
    "start": "627180",
    "end": "634199"
  },
  {
    "text": "other end of the scale what we often see is people going the opposite and testing",
    "start": "634199",
    "end": "639360"
  },
  {
    "text": "everything to the nth degree and putting these huge UI testing you know test",
    "start": "639360",
    "end": "644490"
  },
  {
    "text": "Suites frameworks that are really brittle and give us low confidence and",
    "start": "644490",
    "end": "650010"
  },
  {
    "text": "have things like intermittently failing tests or they will spend a lot of time",
    "start": "650010",
    "end": "655829"
  },
  {
    "text": "running tests we've been into companies that have like 24 hour test runs that's a crazy crazy feedback loop together",
    "start": "655829",
    "end": "661829"
  },
  {
    "text": "good to get feedback to get it's pretty disillusioned with the whether or not they're actually giving you any value at all and exactly and because they're",
    "start": "661829",
    "end": "668220"
  },
  {
    "text": "spending a lot of time testing to the nth degree for every single feature they're spending a lot of time writing",
    "start": "668220",
    "end": "673800"
  },
  {
    "text": "tests hmm sometimes like orders of magnitude more time writing tests than",
    "start": "673800",
    "end": "679320"
  },
  {
    "text": "actually writing the feature now as we said in some circumstances that's appropriate think about the Juno rocket",
    "start": "679320",
    "end": "685410"
  },
  {
    "text": "but to be honest these days a lot of companies really care about speed of release and there's a whole heap of you",
    "start": "685410",
    "end": "690960"
  },
  {
    "text": "know added benefits that you get if you release software quickly so this is something that's probably pretty important to think about",
    "start": "690960",
    "end": "697490"
  },
  {
    "text": "so the main things that we want to put as takeaways for this section is that we",
    "start": "697490",
    "end": "703080"
  },
  {
    "text": "really want to consider speed and confidence when we're writing our tests we really think that the testing pyramid",
    "start": "703080",
    "end": "708840"
  },
  {
    "text": "is too rigid for our purposes and we want to come up with something custom based on each application that we're doing and confidence is really the most",
    "start": "708840",
    "end": "715620"
  },
  {
    "text": "important thing to think about when we're trying to come up with our testing strategy absolutely so we kind of talked",
    "start": "715620",
    "end": "721950"
  },
  {
    "start": "720000",
    "end": "964000"
  },
  {
    "text": "a bit about what we don't like now how do we figure out what we do do so we've",
    "start": "721950",
    "end": "727590"
  },
  {
    "text": "got a we've got a bit of a quote here which we just try and apply to everything we do which is challenge",
    "start": "727590",
    "end": "732750"
  },
  {
    "text": "yourself to start simple and inspect and adapt and the really important word here is challenge because as I'm sure you've",
    "start": "732750",
    "end": "738870"
  },
  {
    "text": "come across before it's really easy to come up with something super simple it's amazing it's super clean and then you go",
    "start": "738870",
    "end": "745230"
  },
  {
    "text": "I know six months down the track and it's become this complex monster so the other thing of course is quite often you",
    "start": "745230",
    "end": "751740"
  },
  {
    "text": "tell someone to start simple and then they start by shaving a yak and have this crazy thing so by really challenging yourself you're more likely",
    "start": "751740",
    "end": "757710"
  },
  {
    "text": "to actually start with something said yeah so if we go on what we've got is I",
    "start": "757710",
    "end": "763230"
  },
  {
    "text": "guess three rules that we try and apply what I'm trying to come up with a testing strategy the first of those",
    "start": "763230",
    "end": "768810"
  },
  {
    "text": "rules is to try and challenge ourselves to set a minimum confidence level that's absolutely as low as possible and",
    "start": "768810",
    "end": "774590"
  },
  {
    "text": "there's a few key things there setting that confidence level minimum as low as",
    "start": "774590",
    "end": "779790"
  },
  {
    "text": "possible is really important and if you think about going to you're like a typical product owner and saying to them",
    "start": "779790",
    "end": "785100"
  },
  {
    "text": "hey we want to accept a level of confidence that's not a hundred percent we want to accept the fact there might be some bugs you're probably like your",
    "start": "785100",
    "end": "792300"
  },
  {
    "text": "first reaction is going to be like that they're going to go crazy they're not gonna like you much at all despite the fact of course that you know and there's",
    "start": "792300",
    "end": "798120"
  },
  {
    "text": "always gonna be bugs but that aside is yeah but they want to think that you're doing something that's a hundred percent",
    "start": "798120",
    "end": "803130"
  },
  {
    "text": "confidence right something else that's really important to them and this might require a bit of recoating a bit of",
    "start": "803130",
    "end": "808440"
  },
  {
    "text": "training is that the speed of release on a lower minimum level of confidence can be a lot higher so it's just something",
    "start": "808440",
    "end": "814740"
  },
  {
    "text": "to balance up whether that move quickly that inversely proportional relationship another thing to keep in mind with this is if your team's using techniques like",
    "start": "814740",
    "end": "821220"
  },
  {
    "text": "continuous delivery if there is a bug that team can fix it pretty quickly so that kind of offsets that risk in most",
    "start": "821220",
    "end": "828000"
  },
  {
    "text": "circumstances yeah the second thing that we're trying to think about is how do we come up with a testing strategy that",
    "start": "828000",
    "end": "834060"
  },
  {
    "text": "meets that minimum level of confidence as quickly as we can so this is where we start to apply a lot of software",
    "start": "834060",
    "end": "840420"
  },
  {
    "text": "development practices to test and that's something that we can quite often forget we can quite often end up with tests",
    "start": "840420",
    "end": "846150"
  },
  {
    "text": "that aren't refactored and don't have a lot of thought put into them but it's something that's really really important and the last thing is making sure that",
    "start": "846150",
    "end": "853530"
  },
  {
    "text": "we're actually adapting that over time it can we've been to a lot of places where it's really easy to fall into the",
    "start": "853530",
    "end": "859140"
  },
  {
    "text": "trap of ending up testing your app the same way a year down the track and so",
    "start": "859140",
    "end": "865320"
  },
  {
    "text": "many lessons you can learn based on what happens so it's just really important to think about how we adapt this over time",
    "start": "865320",
    "end": "870980"
  },
  {
    "text": "so these we kind of started this chapter with the business right so where does",
    "start": "870980",
    "end": "877020"
  },
  {
    "text": "the business come into this that setting of a minimum confidence level as low as possible that's actually a business",
    "start": "877020",
    "end": "883020"
  },
  {
    "text": "decision and a lot of people who look at testing think that automated testing is",
    "start": "883020",
    "end": "888090"
  },
  {
    "text": "purely a software development thing it's not figuring out how what's that level of confidence that users are going to",
    "start": "888090",
    "end": "893730"
  },
  {
    "text": "tolerate what's the risk that we're going to tolerate it's very much something that your product owner should typically try and decide what's your",
    "start": "893730",
    "end": "899820"
  },
  {
    "text": "communication mechanism with your end-users you know is it really tight and you can kind of deal with the fact that on the end of a bug but it's okay",
    "start": "899820",
    "end": "906420"
  },
  {
    "text": "we've got it covered without fixed in an hour you know it this changes the dynamic of what that minimum confidence",
    "start": "906420",
    "end": "911550"
  },
  {
    "text": "level is yeah that creating a testing strategy that makes that minimum level of confidence",
    "start": "911550",
    "end": "917400"
  },
  {
    "text": "as quickly as possible that's very much a technical thing that's that's where we can shine as well we can come up with",
    "start": "917400",
    "end": "922560"
  },
  {
    "text": "something that really hits that confidence as quickly as possible by really applying everything we know how to do and the last point there about",
    "start": "922560",
    "end": "930000"
  },
  {
    "text": "adjusting the testing strategy over time that should very much be something that everyone is involved in that should be",
    "start": "930000",
    "end": "936150"
  },
  {
    "text": "it's something that we're really taking into account when we do out retrospectives when we're trying to continuously improve is how do we apply",
    "start": "936150",
    "end": "942880"
  },
  {
    "text": "like different metrics how do we figure out if we're actually improving this strategy some things you can look at is",
    "start": "942880",
    "end": "948220"
  },
  {
    "text": "look at how many bugs are getting into production like how confident are you when you're deploying how long does it",
    "start": "948220",
    "end": "953680"
  },
  {
    "text": "take from someone having an idea to that idea being in production yes there's all sorts of things you can really look at",
    "start": "953680",
    "end": "959290"
  },
  {
    "text": "and track and apply overtime to see if you're getting better at this stuff so that's really important we think definitely so let's say you you apply",
    "start": "959290",
    "end": "967090"
  },
  {
    "start": "964000",
    "end": "1086000"
  },
  {
    "text": "this technique you start off with a really simple testing strategy every time we build a feature let's just do",
    "start": "967090",
    "end": "972820"
  },
  {
    "text": "this type of test or something like that that's the fastest test we can write for a minimum confidence level so you might",
    "start": "972820",
    "end": "978190"
  },
  {
    "text": "wonder is that an oversimplification that doesn't sound like it's going to work in the real world well I'd say yes",
    "start": "978190",
    "end": "983890"
  },
  {
    "text": "or no sometimes we may well start with a testing strategy that simple but the whole point of what we're talking about",
    "start": "983890",
    "end": "990100"
  },
  {
    "text": "is you need to inspect and adapt over time the testing strategy is not going to stay that simple over time you're",
    "start": "990100",
    "end": "996070"
  },
  {
    "text": "going to figure out our we need to cover this type of thing because otherwise this sort of error seems to happen and then we're gonna add this sort of thing",
    "start": "996070",
    "end": "1002100"
  },
  {
    "text": "here the good thing about that is we're not applying a rigid structure and saying you have to test the same way everywhere we're being smarter about how",
    "start": "1002100",
    "end": "1008760"
  },
  {
    "text": "we test yeah and this is how you prevent it getting too complex as well sure it might start simple you also don't want",
    "start": "1008760",
    "end": "1013950"
  },
  {
    "text": "it to go too far the other way so absolutely sorry now that we know what",
    "start": "1013950",
    "end": "1019020"
  },
  {
    "text": "our testing strategy is going to be what we can do is we can hire all of the consultants and get them to write like a",
    "start": "1019020",
    "end": "1024660"
  },
  {
    "text": "hundred page report we're going to put them in a room with our enterprise architects they're going to start whiteboarding a synergistic testing",
    "start": "1024660",
    "end": "1031260"
  },
  {
    "text": "strategy and then what we're going to do no I don't do that okay well what we",
    "start": "1031260",
    "end": "1036510"
  },
  {
    "text": "actually want to do is we want to empower people right we want to empower people to be able to make these changes",
    "start": "1036510",
    "end": "1041569"
  },
  {
    "text": "we want to try and make these make this testing strategy not necessarily even",
    "start": "1041570",
    "end": "1047520"
  },
  {
    "text": "per project but sometimes per feature sometimes different depending on the different area of the system and we want",
    "start": "1047520",
    "end": "1052560"
  },
  {
    "text": "to make sure that we're adapting it over time that's the key stuff out of it please change your testing strategy over time based on how it goes don't keep it",
    "start": "1052560",
    "end": "1059250"
  },
  {
    "text": "static so main points out of this is that try and make that minimum",
    "start": "1059250",
    "end": "1064350"
  },
  {
    "text": "confidence level of business decision try and educate people on how to make that decision try and empower them and",
    "start": "1064350",
    "end": "1070140"
  },
  {
    "text": "give them right tools to make it effectively and really focus on how you can help I guess it meet that as quickly",
    "start": "1070140",
    "end": "1077490"
  },
  {
    "text": "as possible in a technical manner and and the last thing which I know is said a few times but really make sure that",
    "start": "1077490",
    "end": "1083429"
  },
  {
    "text": "you're continually improving it awesome okay so we're gonna change it take a bit",
    "start": "1083429",
    "end": "1089370"
  },
  {
    "start": "1086000",
    "end": "1251000"
  },
  {
    "text": "of a change of tact we're gonna look at a few different types of testing the first one is the funny type of testing",
    "start": "1089370",
    "end": "1095520"
  },
  {
    "text": "and I say funny because it's a weird word subcutaneous it takes a while to figure out how to pronounce that but I can do it fairly fluently now which is",
    "start": "1095520",
    "end": "1101760"
  },
  {
    "text": "good it's a weird word it's a medical word basically means under the skin and that'll make sense in a sec when Matt",
    "start": "1101760",
    "end": "1108299"
  },
  {
    "text": "explains what a subject is so I'm basically a subcutaneous test is testing not at the UI level but just underneath",
    "start": "1108299",
    "end": "1115830"
  },
  {
    "text": "it so if you've worked with MBC before for example that can be testing at the",
    "start": "1115830",
    "end": "1120870"
  },
  {
    "text": "NBC controller level it's whatever level is the first entry point into your code base you'll use real repositories real",
    "start": "1120870",
    "end": "1128100"
  },
  {
    "text": "data access real services behind that but make sure to mark out anything that's external to your system which",
    "start": "1128100",
    "end": "1134610"
  },
  {
    "text": "will typically just kind of add fragility and not give you a lot of confidence by testing and there's better ways of testing up if your system owns",
    "start": "1134610",
    "end": "1141330"
  },
  {
    "text": "the database and performs migrations on it it owns the database as part of your system don't mock the database out",
    "start": "1141330",
    "end": "1148970"
  },
  {
    "text": "so what we get out of this is a few different things we get a huge amount of confidence out of this type of test",
    "start": "1148970",
    "end": "1155340"
  },
  {
    "text": "because it's using the same code pads that you're actually using in production and you're taking away some of that",
    "start": "1155340",
    "end": "1161370"
  },
  {
    "text": "problem that we have when we're constantly marking out different features that exist you can refactor really easily I mean",
    "start": "1161370",
    "end": "1168659"
  },
  {
    "text": "hands up if you've ever broken like half of your test suite by refactoring something right like we have all the",
    "start": "1168659",
    "end": "1175200"
  },
  {
    "text": "time and the problem with that is when you do that and you then have to change all of your unit tests because they now",
    "start": "1175200",
    "end": "1180899"
  },
  {
    "text": "no longer work with your refactoring you're not getting any confidence from those tests they haven't assured you that you haven't broken the app because",
    "start": "1180899",
    "end": "1187169"
  },
  {
    "text": "you've just changed them yeah yeah you need to get a voice back dude",
    "start": "1187169",
    "end": "1193220"
  },
  {
    "text": "it's also not refracting at that point we're factoring is not changing tests or factoring is just changing",
    "start": "1193220",
    "end": "1198270"
  },
  {
    "text": "implementation details yeah if if we wanted our tests to break it should be if we've changed some a business rule",
    "start": "1198270",
    "end": "1204250"
  },
  {
    "text": "right that's that's where they add value that's where they're helping us so um what we're trying to aim to do here is",
    "start": "1204250",
    "end": "1209470"
  },
  {
    "text": "just reduce some of the mocking it doesn't work in all situations which we'll cover in a little bit but it certainly helps a lot in certain ones",
    "start": "1209470",
    "end": "1215549"
  },
  {
    "text": "another thing that you can do here which is kind of cool is combine this with the testing behavior and acceptance criteria",
    "start": "1215549",
    "end": "1221919"
  },
  {
    "text": "about the features you're trying to introduce and that lets you do really powerful things like add a subcutaneous",
    "start": "1221919",
    "end": "1228309"
  },
  {
    "text": "test for a certain type of acceptance criteria which you can then show to a product owner to give them a lot of",
    "start": "1228309",
    "end": "1234070"
  },
  {
    "text": "confidence that you're actually testing the sort of business rules that they want to see in the system and that helps",
    "start": "1234070",
    "end": "1239860"
  },
  {
    "text": "them make the decision that we kind of alluded to earlier and you can do a TDD and use that test to drive the",
    "start": "1239860",
    "end": "1245860"
  },
  {
    "text": "implementation of the feature so you can still do red green refactor with this type of testing hmm sorry they sound",
    "start": "1245860",
    "end": "1252730"
  },
  {
    "start": "1251000",
    "end": "1457000"
  },
  {
    "text": "pretty good right subcutaneous says they're pretty cool and certainly you know we've got to admit we've had a lot of success in using yeah so they're the",
    "start": "1252730",
    "end": "1260260"
  },
  {
    "text": "Silver Bullet we've all been looking for all right no no they're not okay there's no such thing in software as a Silver",
    "start": "1260260",
    "end": "1265600"
  },
  {
    "text": "Bullet yeah context is everything okay so in particular for instance there are",
    "start": "1265600",
    "end": "1271510"
  },
  {
    "text": "some disadvantages and some may be difficulties of using subcutaneous tests that you'll come across one of them is",
    "start": "1271510",
    "end": "1278080"
  },
  {
    "text": "if you've got really complex code maybe some sort of complex algorithm or something like that it's really hard to",
    "start": "1278080",
    "end": "1283510"
  },
  {
    "text": "drive that from that high level and get a reasonable amount of coverage of that something that makes sense in this",
    "start": "1283510",
    "end": "1288520"
  },
  {
    "text": "instance you get a combinatorial explosion but this is okay for two reasons firstly",
    "start": "1288520",
    "end": "1294940"
  },
  {
    "text": "sometimes you don't need that level of coverage of that code maybe a couple of happy passes all you need in which case",
    "start": "1294940",
    "end": "1301390"
  },
  {
    "text": "subcutaneous tests are great or if you do need that level of coverage then what",
    "start": "1301390",
    "end": "1307000"
  },
  {
    "text": "you do is great we do maybe one subcutaneous test if we even need two and then we decide for that code we're",
    "start": "1307000",
    "end": "1313510"
  },
  {
    "text": "gonna dive down to a lower level test which is much easier and doesn't have the common tutorial explosion problem",
    "start": "1313510",
    "end": "1319299"
  },
  {
    "text": "that's the whole point of what we're talking about we shouldn't use the same type of testing everywhere blindly we should make smart decisions",
    "start": "1319299",
    "end": "1325289"
  },
  {
    "text": "it can also be hard to know why something's broken so the whole thing about subcutaneous tests is you're",
    "start": "1325289",
    "end": "1330399"
  },
  {
    "text": "testing a fairly large proportion of your code with each test right so if something goes wrong can be sometimes",
    "start": "1330399",
    "end": "1335590"
  },
  {
    "text": "confusing to try to figure where it actually went wrong now there are some techniques that we can use to make that",
    "start": "1335590",
    "end": "1340840"
  },
  {
    "text": "easier and we're going to go through a few of them towards the end of the talk quite often what you will have as well",
    "start": "1340840",
    "end": "1346059"
  },
  {
    "text": "is you know given you you're testing the full stack of code that includes a fair number of cross-cutting concerns so if",
    "start": "1346059",
    "end": "1353139"
  },
  {
    "text": "you go and break something in a cross-cutting concern what you can find is that then that breaks say like 40",
    "start": "1353139",
    "end": "1358389"
  },
  {
    "text": "subcutaneous tests or something like that that can be quite confusing and disorienting to some people personally I",
    "start": "1358389",
    "end": "1364659"
  },
  {
    "text": "don't mind but I've come up with a fairly",
    "start": "1364659",
    "end": "1368248"
  },
  {
    "text": "thank you where I basically look at one of the broken tests ignore all of the others figure out what's wrong with that",
    "start": "1371999",
    "end": "1378940"
  },
  {
    "text": "test why did it break fix the problem rerun the whole test suite a bunch of them will now pass rinse and repeat",
    "start": "1378940",
    "end": "1384940"
  },
  {
    "text": "until there's no more read tests it's a fairly easy approach yeah and then the last one is saying that because we're",
    "start": "1384940",
    "end": "1391509"
  },
  {
    "text": "testing a reasonable amount of code the tests themselves are more complex and they're more complex in three ways if",
    "start": "1391509",
    "end": "1397659"
  },
  {
    "text": "you think about a range act assert the arrangement of your tests and figuring out all the test data to get it in the",
    "start": "1397659",
    "end": "1403360"
  },
  {
    "text": "right format probably a bit more complex what you're actually calling definitely more complex and then come",
    "start": "1403360",
    "end": "1409350"
  },
  {
    "text": "coincidentally what you're asserting probably also more complex now again we",
    "start": "1409350",
    "end": "1414820"
  },
  {
    "text": "have some techniques we can use to deal with this but essentially all that boils down to is using the same practices that",
    "start": "1414820",
    "end": "1420039"
  },
  {
    "text": "we use for our production code for our tests we should refactor tests and we should use patterns and practices in our",
    "start": "1420039",
    "end": "1426909"
  },
  {
    "text": "tests that we know lead to better tests again we're going to cover a few strategies towards the end of the talk",
    "start": "1426909",
    "end": "1432340"
  },
  {
    "text": "that will help with some of this so main things from this section is that",
    "start": "1432340",
    "end": "1437610"
  },
  {
    "text": "cool that's a that's an interesting new type of test it's definitely worth checking it out it's really good for",
    "start": "1437610",
    "end": "1443379"
  },
  {
    "text": "balancing that speed and confidence because it hits a fairly good balance in a lot of situations between both we find",
    "start": "1443379",
    "end": "1449259"
  },
  {
    "text": "that mocking implementation details leads to a lot of pain so try and avoid it where you can there are situations",
    "start": "1449259",
    "end": "1454840"
  },
  {
    "text": "where you need to do it absolutely so we wanted to talk a little bit about",
    "start": "1454840",
    "end": "1460059"
  },
  {
    "start": "1457000",
    "end": "1557000"
  },
  {
    "text": "unit tests so unit test is a bit of an overloaded terms we kind of alluded to",
    "start": "1460059",
    "end": "1465309"
  },
  {
    "text": "earlier what we've decided to call them just for the sake of this present is an implementation test so by this we're",
    "start": "1465309",
    "end": "1471670"
  },
  {
    "text": "referring to an in-memory test in process they're usually extremely quick you can run like 10,000 of them fairly",
    "start": "1471670",
    "end": "1477610"
  },
  {
    "text": "quickly but they give you that lower amount of confidence because you're you're generally only testing an",
    "start": "1477610",
    "end": "1483490"
  },
  {
    "text": "incredibly small part of a system and you don't necessarily know how well that works in with everything else they",
    "start": "1483490",
    "end": "1489250"
  },
  {
    "text": "inhibit your ability to painlessly refactor that break all your test situation but they're really really",
    "start": "1489250",
    "end": "1495190"
  },
  {
    "text": "useful in the right situations so if you've got a particularly particularly complex piece of code that you need to",
    "start": "1495190",
    "end": "1501730"
  },
  {
    "text": "that you really need to figure out if you're doing TDD for example a lot of feedback we heard and especially in the",
    "start": "1501730",
    "end": "1508870"
  },
  {
    "text": "area early era of T today was it gives us a lot of ability to more easily design our code in our heads before we",
    "start": "1508870",
    "end": "1515169"
  },
  {
    "text": "write it so that's kind of cool what you need to consider if you're following that kind of approach is actually once",
    "start": "1515169",
    "end": "1520630"
  },
  {
    "text": "you've come up with your test is it still delivering you the sort of value you want over time if it breaks very",
    "start": "1520630",
    "end": "1526540"
  },
  {
    "text": "very often if it breaks every few days you really need to look at it and go should we actually keep this test or should we delete it and a lot of people",
    "start": "1526540",
    "end": "1533470"
  },
  {
    "text": "are terrified of deleting tests right it's it's just something that's like not that familiar to us absolutely I mean",
    "start": "1533470",
    "end": "1539620"
  },
  {
    "text": "and then the other decision point is maybe it is worth keeping it and dealing with that pain because the fact that you",
    "start": "1539620",
    "end": "1544840"
  },
  {
    "text": "needed that test to drive that complex code in the first place might mean it's helpful later on as you're supporting",
    "start": "1544840",
    "end": "1550150"
  },
  {
    "text": "you your code and changing it it's there's no there's no there's no right answer so I think it has to be",
    "start": "1550150",
    "end": "1555880"
  },
  {
    "text": "contextual cool so next I want to talk a little bit",
    "start": "1555880",
    "end": "1560980"
  },
  {
    "start": "1557000",
    "end": "1682000"
  },
  {
    "text": "about UI tests UI automation this is something that we find is a struggle in",
    "start": "1560980",
    "end": "1566440"
  },
  {
    "text": "a lot of places this is something that causes people a lot of pain so automated your our tests just to like it'd be",
    "start": "1566440",
    "end": "1572380"
  },
  {
    "text": "clear I guess great in the right situation they give you a huge amount of confidence when they work so if you've",
    "start": "1572380",
    "end": "1579429"
  },
  {
    "text": "got a particular test that's clicking through a system as a user and it successfully clicks through that system",
    "start": "1579429",
    "end": "1585250"
  },
  {
    "text": "and gives you back the right output you've got a fair amount of confidence that someone coming along as a real user",
    "start": "1585250",
    "end": "1590350"
  },
  {
    "text": "and clicking through that system is going to get the same result so that's great the problem with them is that they're typically extremely slow and",
    "start": "1590350",
    "end": "1597250"
  },
  {
    "text": "they're typically extremely fragile so what we want to do here is think about",
    "start": "1597250",
    "end": "1602260"
  },
  {
    "text": "where we can apply the that gives us a lot of value and oftentimes that's in particularly complex you eyes if we're",
    "start": "1602260",
    "end": "1608309"
  },
  {
    "text": "talking about a really complex client-side application maybe where there's a lot going on these become really really useful and there's a few",
    "start": "1608309",
    "end": "1615120"
  },
  {
    "text": "other ways to get that same level of value so it's just important to think about the fact that there's a trade-off here or think about that that mortgage",
    "start": "1615120",
    "end": "1622200"
  },
  {
    "text": "application form scenarios those high-value scenarios where you need to know that that thing works according to",
    "start": "1622200",
    "end": "1628290"
  },
  {
    "text": "the end-users right in that case you make the trade-off you trade off some slow and fragile tests in return for the",
    "start": "1628290",
    "end": "1635490"
  },
  {
    "text": "high confidence you need in those parts of the system yeah but again that doesn't mean you apply that for every single feature across the whole system",
    "start": "1635490",
    "end": "1641880"
  },
  {
    "text": "only that one phone unless that makes sense so just just be smart about how you do these things what we can",
    "start": "1641880",
    "end": "1647610"
  },
  {
    "text": "typically find ourselves falling into a trap of a lot is over UI testing and ending up spending a lot of time trying",
    "start": "1647610",
    "end": "1652980"
  },
  {
    "text": "to sort out issues rather than delivering value now we're not covering it in this talk but one thing to note about automated UI testing is that you",
    "start": "1652980",
    "end": "1660270"
  },
  {
    "text": "know just like what we talked about with subcutaneous testing a few slides back using our patterns like refactoring and",
    "start": "1660270",
    "end": "1667169"
  },
  {
    "text": "and you know a lot of different software patents and all these objects page objects etc are really important for",
    "start": "1667169",
    "end": "1673200"
  },
  {
    "text": "automated UI chess so you can like a limit the fragility of them and then you're just dealing with weird things like when you upgrade Firefox selenium",
    "start": "1673200",
    "end": "1679650"
  },
  {
    "text": "webdriver doesn't work anymore and stuff like that yeah so the next thing we're going to talk about is just walking",
    "start": "1679650",
    "end": "1685350"
  },
  {
    "start": "1682000",
    "end": "1786000"
  },
  {
    "text": "through a potential scenario where we might walk into a client and and and how we might decide on a testing strategy",
    "start": "1685350",
    "end": "1692040"
  },
  {
    "text": "just to give you a bit of context for how this might go so context is really important here yeah so we've already",
    "start": "1692040",
    "end": "1698490"
  },
  {
    "text": "talked about different scenarios where different testing strategies make sense so to try to limit this this is a",
    "start": "1698490",
    "end": "1703950"
  },
  {
    "text": "typical scenario we might see some sort of small to medium line of business application across people different",
    "start": "1703950",
    "end": "1709890"
  },
  {
    "text": "industries doesn't really matter generally with a relatively small proportion of sort of complex",
    "start": "1709890",
    "end": "1714960"
  },
  {
    "text": "algorithmic sort of code not real-time or life whatever anything like that and a team using continuous delivery so they",
    "start": "1714960",
    "end": "1721799"
  },
  {
    "text": "can fix things pretty quickly right in that sort of context what we might end up with initially is something like this",
    "start": "1721799",
    "end": "1728130"
  },
  {
    "text": "we might say cool when we do a feature we'll do a happy path or maybe some important errand paths for subcutaneous",
    "start": "1728130",
    "end": "1733919"
  },
  {
    "text": "tests if we've got any API calls we'll been up an in-memory full-stack HTTP",
    "start": "1733919",
    "end": "1739020"
  },
  {
    "text": "server it's kind of similar in a lot of ways to subcutaneous tests because obviously there's no UI RF and for any",
    "start": "1739020",
    "end": "1745560"
  },
  {
    "text": "of those calls and then we'll use a small but judicious use depending on what makes sense in different parts of",
    "start": "1745560",
    "end": "1751410"
  },
  {
    "text": "the apps app sorry of things like convention test route tests integration tests you know implementation tests and",
    "start": "1751410",
    "end": "1759360"
  },
  {
    "text": "end-to-end tests if that makes sense if we're talking across multiple systems and you know maybe a few UI tests here",
    "start": "1759360",
    "end": "1764490"
  },
  {
    "text": "in there right convention tests in particular if you haven't looked into before really really awesome it's the",
    "start": "1764490",
    "end": "1770160"
  },
  {
    "text": "type of test where you write them once and you'll the test will automatically adapt to code that you add after that",
    "start": "1770160",
    "end": "1776550"
  },
  {
    "text": "and happy to chat about that more if you want it really is after you use reflection typically to look at your",
    "start": "1776550",
    "end": "1781620"
  },
  {
    "text": "code and make sure you're following Stoke patterns basically very powerful type of test",
    "start": "1781620",
    "end": "1787550"
  },
  {
    "start": "1786000",
    "end": "1984000"
  },
  {
    "text": "test outdoor convention all right yeah okay so what we're gonna do now is look",
    "start": "1789140",
    "end": "1795840"
  },
  {
    "text": "through some code so the code we're gonna show is kind of see sharpie and we've got it on there's a link at the",
    "start": "1795840",
    "end": "1802110"
  },
  {
    "text": "end so you can go and see the code and get the slide deck and this sort of stuff is possible in just about every language though so again like something",
    "start": "1802110",
    "end": "1809190"
  },
  {
    "text": "we can check out on T about if you've got kind of questions don't use something else we've used these techniques for instance in JavaScript",
    "start": "1809190",
    "end": "1814230"
  },
  {
    "text": "before pretty successfully so this part of the talk is basically going to be looking at okay we've we've got",
    "start": "1814230",
    "end": "1820320"
  },
  {
    "text": "subcutaneous testing you've said they're really good you've said there some disadvantages and some difficulties what",
    "start": "1820320",
    "end": "1825600"
  },
  {
    "text": "techniques do you use to try to overcome that so this is basically our learnings yeah cool yep alright",
    "start": "1825600",
    "end": "1834590"
  },
  {
    "text": "nice so the first thing that we're going to demonstrate is an implementation test",
    "start": "1834590",
    "end": "1839760"
  },
  {
    "text": "that you might typically see versus what a subcutaneous test version of it might look like so we're just using Visual",
    "start": "1839760",
    "end": "1846450"
  },
  {
    "text": "Studio code here so here's an example so we've got a student controller the",
    "start": "1846450",
    "end": "1851820"
  },
  {
    "text": "student controller takes a repository and in this case we're mocking it out this is in substitute syntax we've got a",
    "start": "1851820",
    "end": "1857880"
  },
  {
    "text": "test here that says that the index action should show students so what we're doing is we're setting up some expected students here and then we're",
    "start": "1857880",
    "end": "1864990"
  },
  {
    "text": "saying that the get all method on the student repository should return those expected students and then we make our",
    "start": "1864990",
    "end": "1870180"
  },
  {
    "text": "assertion so cool when we call the index action on the controller it should render the default view and it should",
    "start": "1870180",
    "end": "1875600"
  },
  {
    "text": "have a model where the view model count should be the same as the expected students and then the names should be what we expected them to be pretty",
    "start": "1875600",
    "end": "1882410"
  },
  {
    "text": "simple standard sort of stuff right you might then combine that with a test",
    "start": "1882410",
    "end": "1887690"
  },
  {
    "text": "that's testing just the student repository in this example we're saying that there's a real data base being spun",
    "start": "1887690",
    "end": "1893120"
  },
  {
    "text": "up in the background as well and then what we say here is that the get all method returns students in the database",
    "start": "1893120",
    "end": "1899000"
  },
  {
    "text": "order by name so we set up some expected students we loop through them and basically save them into the database we",
    "start": "1899000",
    "end": "1905690"
  },
  {
    "text": "call that get all method and then we check that what was returned matches what we expected ordered by name so this",
    "start": "1905690",
    "end": "1912770"
  },
  {
    "text": "is something that you might typically do we've certainly done this in the past now if we were to convert this directly",
    "start": "1912770",
    "end": "1919580"
  },
  {
    "text": "to a subcutaneous test without applying any of the other patterns that we normally use so there's gonna be a lot",
    "start": "1919580",
    "end": "1924830"
  },
  {
    "text": "of things in here that make me really uncomfortable that will do that just to show you then it might look something like this so in our test setup when we",
    "start": "1924830",
    "end": "1933080"
  },
  {
    "text": "new up the controller we're using a real student repository with a real database connection okay so we're not mocking any",
    "start": "1933080",
    "end": "1939170"
  },
  {
    "text": "of that stuff out it's just fall in to end what we're going to do is add the expected students into the database like",
    "start": "1939170",
    "end": "1945950"
  },
  {
    "text": "we did in that database test we're going to call that index map our method check",
    "start": "1945950",
    "end": "1951530"
  },
  {
    "text": "it default renders the default view and then pull out a reference to the view model that was passed to that view and then check that that view model had all",
    "start": "1951530",
    "end": "1958790"
  },
  {
    "text": "of its names in the right order so this is essentially a combination of those two tests we wrote before so now we only",
    "start": "1958790",
    "end": "1964430"
  },
  {
    "text": "have to write one test which is nice it tests a whole bunch of things and you know that that get all method is nowhere",
    "start": "1964430",
    "end": "1971000"
  },
  {
    "text": "in here at all that implementation detail that there's a get all method has disappeared we're going to replace that",
    "start": "1971000",
    "end": "1976070"
  },
  {
    "text": "with an API we could replace that with whatever we want it's still just work yep so it's pretty cool now there are a",
    "start": "1976070",
    "end": "1981470"
  },
  {
    "text": "few issues still with that but bear with us cool so we want to try and look at some",
    "start": "1981470",
    "end": "1986540"
  },
  {
    "start": "1984000",
    "end": "2147000"
  },
  {
    "text": "I guess patterns that we can apply to this stuff in order to to start cleaning this up even more one of the things that",
    "start": "1986540",
    "end": "1992360"
  },
  {
    "text": "I'm sure you've come across the forest behavior driven tests behavior driven tests in combination with subcutaneous",
    "start": "1992360",
    "end": "1998690"
  },
  {
    "text": "tests can be really powerful because they they give you a huge amount of confidence that the behave that you're",
    "start": "1998690",
    "end": "2004659"
  },
  {
    "text": "describing in your test matches what it is that you're actually testing and they give you a huge amount of focus I guess",
    "start": "2004659",
    "end": "2010839"
  },
  {
    "text": "as well in that you know fairly easily what it is that you want to test and and",
    "start": "2010839",
    "end": "2015849"
  },
  {
    "text": "you've got a fairly easy path to follow in that if you add a certain type of rule to the system you go ok cool we",
    "start": "2015849",
    "end": "2021999"
  },
  {
    "text": "make a decision at this point as to whether or not that makes sense as a test it gives you focus because you're",
    "start": "2021999",
    "end": "2027700"
  },
  {
    "text": "basically got a test there's talking about behavior and you're focusing on trying to implement the behavior as",
    "start": "2027700",
    "end": "2032950"
  },
  {
    "text": "opposed to where you're writing implementation tests where you're focusing on trying to write the implementation it's a very different",
    "start": "2032950",
    "end": "2038559"
  },
  {
    "text": "state of mind cool and I guess the last thing is that we find writing them in this fashion it makes them a lot easier",
    "start": "2038559",
    "end": "2044859"
  },
  {
    "text": "to read and a lot easier to write as well so worth having a look at so let's",
    "start": "2044859",
    "end": "2050589"
  },
  {
    "text": "have a look at a demo so if we convert this subcutaneous test that we just showed you to use in this case something",
    "start": "2050589",
    "end": "2057819"
  },
  {
    "text": "called test stack b25 there's a whole heap of other libraries this is just the one we typically use then starting to",
    "start": "2057819",
    "end": "2064240"
  },
  {
    "text": "look a little bit different now we're also using a pattern here called class / scenario so every test is a class as",
    "start": "2064240",
    "end": "2070450"
  },
  {
    "text": "opposed to having multiple tests in one class we actually find this is quite nice because what you typically find is",
    "start": "2070450",
    "end": "2075638"
  },
  {
    "text": "we'll use something else code organized by feature for the embassy app so you'll have like a features folder in the testing and then for each feature in",
    "start": "2075639",
    "end": "2081760"
  },
  {
    "text": "this case maybe it's students or something like that then in that folder they'll be like you know in this case it's the view existing students scenario",
    "start": "2081760",
    "end": "2088000"
  },
  {
    "text": "and then you might have successful registration of a student scenario and like you just have a list of them there it actually is quite nice from that",
    "start": "2088000",
    "end": "2094628"
  },
  {
    "text": "perspective but anyway again we're newing up the student controller with",
    "start": "2094629",
    "end": "2099789"
  },
  {
    "text": "the real dependency in a real database then we've got these different methods now so given existing students and then",
    "start": "2099789",
    "end": "2106029"
  },
  {
    "text": "in here we're just saving those students for the database like we did before when the user views the students so I was",
    "start": "2106029",
    "end": "2111670"
  },
  {
    "text": "calling that index method then the user user should see students order by name and we're putting that other logic we",
    "start": "2111670",
    "end": "2117460"
  },
  {
    "text": "had before now the nice thing about this and if you remember one of the disadvantages I said was it's hard to",
    "start": "2117460",
    "end": "2123880"
  },
  {
    "text": "know where something's wrong when the tests break in this instance especially",
    "start": "2123880",
    "end": "2129250"
  },
  {
    "text": "with a library like being a defy it kind of says hey this test broke with this exception in given existing students at",
    "start": "2129250",
    "end": "2136569"
  },
  {
    "text": "that point you've really strange where you need to look it's something to do with the data that you've put in the",
    "start": "2136569",
    "end": "2141780"
  },
  {
    "text": "database right so that's quite useful",
    "start": "2141780",
    "end": "2146630"
  },
  {
    "text": "another thing that we can look at doing so you would have seen in some of those examples where newing up a lot of stuff",
    "start": "2147320",
    "end": "2152970"
  },
  {
    "text": "right that's an implementation detail and a way that we can start to deal with some of those is by driving our tests",
    "start": "2152970",
    "end": "2159210"
  },
  {
    "text": "using the same dependency injection container that we're using in production if we're using a dependency injection container that lets us avoid those",
    "start": "2159210",
    "end": "2166830"
  },
  {
    "text": "newing up implementation details that we don't really need in a test it makes sure that we're using the same code",
    "start": "2166830",
    "end": "2172020"
  },
  {
    "text": "paths that we're actually using in production we kind of covered before that we're trying to avoid mocks where",
    "start": "2172020",
    "end": "2177510"
  },
  {
    "text": "we can but there are situations where you need to use them and this is a really easy way to substitute those in",
    "start": "2177510",
    "end": "2182880"
  },
  {
    "text": "and if you have to yeah and you don't have to worry about which component it is uses that mock you just say DUI",
    "start": "2182880",
    "end": "2187980"
  },
  {
    "text": "container here's the mock go and inject it wherever you need to it's quite cool now you'll see that this in particular",
    "start": "2187980",
    "end": "2194100"
  },
  {
    "text": "really starts to clean up our code so if we take this same step sorry tests and",
    "start": "2194100",
    "end": "2199560"
  },
  {
    "text": "we look at what it might look like if you introduce a DI container there's a whole bunch of stuff we've now changed one of them is we've now actually",
    "start": "2199560",
    "end": "2206040"
  },
  {
    "text": "introduced a base class called subcutaneous MVC scenario and we're passing in the type of controller the",
    "start": "2206040",
    "end": "2211470"
  },
  {
    "text": "reason why we do that is because now we don't need to new up the controller you can see here that that's setup method if",
    "start": "2211470",
    "end": "2217830"
  },
  {
    "text": "we go back to the BD defi example here all that's gone so this is actually in",
    "start": "2217830",
    "end": "2222870"
  },
  {
    "text": "reality and implementation detail the fact that the controller needs a student repository we shouldn't care about that if you then refactor your code base to",
    "start": "2222870",
    "end": "2228900"
  },
  {
    "text": "add the query pattern or whatever it is that you want to add our tests shouldn't break so the container allows us to do",
    "start": "2228900",
    "end": "2234870"
  },
  {
    "text": "that so by passing through the type the code inside of the base class will just resolve that controller from your",
    "start": "2234870",
    "end": "2240870"
  },
  {
    "text": "production di container and any dependencies it has and any mocks that you've registered so it's pretty cool",
    "start": "2240870",
    "end": "2246060"
  },
  {
    "text": "the rest of its pretty similar we set up the database with students we've now got a nice helper method here to execute the",
    "start": "2246060",
    "end": "2253470"
  },
  {
    "text": "controller action based on Orlando simply so that we don't need to have a private field for the action resume we",
    "start": "2253470",
    "end": "2258870"
  },
  {
    "text": "can just use the action result here just a nice little optimization but the rest of it's essentially exactly the same but",
    "start": "2258870",
    "end": "2265350"
  },
  {
    "text": "this is starting to look really nice now there's there's basically no implementation details which is pretty",
    "start": "2265350",
    "end": "2270780"
  },
  {
    "text": "cool okay so the next thing that I guess we",
    "start": "2270780",
    "end": "2279070"
  },
  {
    "start": "2275000",
    "end": "2507000"
  },
  {
    "text": "can look at is how we can deal with marks so as we kind",
    "start": "2279070",
    "end": "2284770"
  },
  {
    "text": "of said before in this type of test it's really important to mark external dependencies we really don't necessarily",
    "start": "2284770",
    "end": "2290800"
  },
  {
    "text": "want to be calling those where we can avoid it but m'p Roache we can kind of take in order",
    "start": "2290800",
    "end": "2296230"
  },
  {
    "text": "to help make this a little bit less painful where we do have to do it so something we've been trying to do is",
    "start": "2296230",
    "end": "2301750"
  },
  {
    "text": "hand rolling marks instead of using a marking librarian which is pretty crazy",
    "start": "2301750",
    "end": "2306790"
  },
  {
    "text": "but it does two things a it makes mocking a little bit more painful so and if you've got someone you the project",
    "start": "2306790",
    "end": "2313300"
  },
  {
    "text": "they're a little bit less likely to do it but the second thing is that you can codify certain behavior within your",
    "start": "2313300",
    "end": "2318880"
  },
  {
    "text": "marks that make your tests a lot more readable so if you've got code that you have to use in your tests when you're",
    "start": "2318880",
    "end": "2324610"
  },
  {
    "text": "doing a particular mark setting it up in some certain way you can provide a method that's just a part of that mark",
    "start": "2324610",
    "end": "2330730"
  },
  {
    "text": "that does that for you and then your tests don't need to duplicate that logic each time they do it so we'll show you",
    "start": "2330730",
    "end": "2336400"
  },
  {
    "text": "what that looks like okay so we're going to move on from this",
    "start": "2336400",
    "end": "2342840"
  },
  {
    "text": "student controller scenario for the rest of these so here's an example of an interface you",
    "start": "2342840",
    "end": "2350350"
  },
  {
    "text": "may have in your production system a date/time provider it's pretty standard sort of thing returns date/time offset",
    "start": "2350350",
    "end": "2355780"
  },
  {
    "text": "from an hour method and this might be what your production implementation looks like we're just returning date/time offset by UTC now pretty easy",
    "start": "2355780",
    "end": "2362370"
  },
  {
    "text": "this is what a simple hand roll MOC might look like when we construct the",
    "start": "2362370",
    "end": "2367780"
  },
  {
    "text": "MOC we grab a static value of now and then we just always return that that's",
    "start": "2367780",
    "end": "2373000"
  },
  {
    "text": "actually quite useful because it means that when you're using this thing in your production code that you're testing",
    "start": "2373000",
    "end": "2378760"
  },
  {
    "text": "then afterwards when you're doing assertions you can just resolve this out of the DI container call now and get the",
    "start": "2378760",
    "end": "2384370"
  },
  {
    "text": "same value that was used so it's easy to do sessions but we can be way better than this we can start doing the",
    "start": "2384370",
    "end": "2390250"
  },
  {
    "text": "codification of behavior that Matt was talking about so here's another example of what this could be now in this",
    "start": "2390250",
    "end": "2396670"
  },
  {
    "text": "example here we've got a couple of new constructors kind of interesting we've got one that takes the date/time offset",
    "start": "2396670",
    "end": "2402220"
  },
  {
    "text": "so that you can actually explicitly set the time that can be quite useful in certain scenarios we've also got a version with a string so that you can do",
    "start": "2402220",
    "end": "2408190"
  },
  {
    "text": "data-driven tests with attributes because they have to have static compile time constants so they have to be",
    "start": "2408190",
    "end": "2413319"
  },
  {
    "text": "strings but we can get even better than this we can do things like set now so now you",
    "start": "2413319",
    "end": "2419470"
  },
  {
    "text": "basically created a time machine yeah so you can resolve your static date/time provider from your test called dot set",
    "start": "2419470",
    "end": "2425559"
  },
  {
    "text": "now and change the time so you could do something like register a user and then set now to a different time and then",
    "start": "2425559",
    "end": "2431470"
  },
  {
    "text": "perform some other action and check the last modified date is different from the created date that's really easy to do in",
    "start": "2431470",
    "end": "2436960"
  },
  {
    "text": "that in that sort of instance even better move time forward by a timespan the code to do this if you if you didn't",
    "start": "2436960",
    "end": "2445329"
  },
  {
    "text": "have this nice codified method would look something like this provide so to provide something to your di container a",
    "start": "2445329",
    "end": "2452380"
  },
  {
    "text": "new static date/time provider and then resolve the current date time provider get the now value and add a time span to",
    "start": "2452380",
    "end": "2459339"
  },
  {
    "text": "it that's just like you start reading that and your brain melts you don't know what's going on it's not clear code it's not self documenting however if instead",
    "start": "2459339",
    "end": "2466660"
  },
  {
    "text": "you just had call resolved a static date/time provider cut called dot move time forward by time and hours one",
    "start": "2466660",
    "end": "2472619"
  },
  {
    "text": "awesome that's it's pretty obvious we just move time forward one hour much more readable right this is where our",
    "start": "2472619",
    "end": "2478750"
  },
  {
    "text": "factoring comes in then you can get even more crazy if you really want to and you can do stuff like this you can say cool",
    "start": "2478750",
    "end": "2484599"
  },
  {
    "text": "let's create a using block and then inside that using block let's temporarily change time by four hours",
    "start": "2484599",
    "end": "2490240"
  },
  {
    "text": "and then after the using block it'll be back what it was again you can do all kinds of cool stuff like that and this",
    "start": "2490240",
    "end": "2495279"
  },
  {
    "text": "is just one example using time right but you can do this with pretty much anything that you're mocking out which",
    "start": "2495279",
    "end": "2500500"
  },
  {
    "text": "is typically in a subcutaneous test test at least going to be external dependencies like time or API calls",
    "start": "2500500",
    "end": "2507960"
  },
  {
    "start": "2507000",
    "end": "2773000"
  },
  {
    "text": "cool so another couple of patterns that you might have come across before and so",
    "start": "2507960",
    "end": "2513009"
  },
  {
    "text": "the object mother pattern and the test are to build a pattern we've seen this a fair bit and something we've found is",
    "start": "2513009",
    "end": "2518440"
  },
  {
    "text": "that these two actually work really really well together they give you a huge amount of consistency and clarity",
    "start": "2518440",
    "end": "2524019"
  },
  {
    "text": "in how you set up data within your tests if you think about a typical test there's usually a fair bit at the top of",
    "start": "2524019",
    "end": "2530559"
  },
  {
    "text": "that test that's trying to figure out okay how do we set up this test in the right state so that everything just works especially in a subcutaneous test",
    "start": "2530559",
    "end": "2537460"
  },
  {
    "text": "whereas we before going on your arranged act an assert are all going to be more complex so you're quite often going to",
    "start": "2537460",
    "end": "2542749"
  },
  {
    "text": "be setting up reasonably complex chains of objects yeah so what we want to try and do here is figure out a way that we",
    "start": "2542749",
    "end": "2549109"
  },
  {
    "text": "can start to remove a lot of that duplication and complexity and make it really clear to someone who's reading the test exactly what we're doing with",
    "start": "2549109",
    "end": "2555859"
  },
  {
    "text": "our data set up and this is just one way to do that okay",
    "start": "2555859",
    "end": "2560979"
  },
  {
    "text": "so for this one we're going to take a slightly different tact we're not actually going to show you a subcutaneous test for this example we're",
    "start": "2560979",
    "end": "2567589"
  },
  {
    "text": "just going to show like your implementation tests that's fine it still demonstrates the value of these methods so in this case we've got given",
    "start": "2567589",
    "end": "2575239"
  },
  {
    "text": "demographic with state and age range when checking if hello when when checking if the demographic applies to a",
    "start": "2575239",
    "end": "2582049"
  },
  {
    "text": "member then return true only if the member conforms to all parameters it's a bit of a weird one but anyway that aside",
    "start": "2582049",
    "end": "2589359"
  },
  {
    "text": "essentially we've got some sort of domain where you've got a demographic it's got some properties in it like an age range and stuff like that and then",
    "start": "2589359",
    "end": "2595880"
  },
  {
    "text": "you've got members who you know they have like an address and the name and an age and all that sort of stuff and the demographic will check whether or not",
    "start": "2595880",
    "end": "2602449"
  },
  {
    "text": "but can you can sorry you can check whether or not a member applies to a demographic this is actually based on",
    "start": "2602449",
    "end": "2608059"
  },
  {
    "text": "code that we wrote for a client sorry is a real thing now this is where the",
    "start": "2608059",
    "end": "2613189"
  },
  {
    "text": "patterns show up so for the member we're gonna say object mother dot members dot",
    "start": "2613189",
    "end": "2618619"
  },
  {
    "text": "Fred right Fred's just a member we don't we don't care about this particular member we just need Fred we just need",
    "start": "2618619",
    "end": "2623660"
  },
  {
    "text": "Joey we need whatever right we just it's just a member but what we can then do is customize it and say call we want a",
    "start": "2623660",
    "end": "2630140"
  },
  {
    "text": "member in the state of state the one that was passed through in the data-driven test and we want a member that has the age of the age that was",
    "start": "2630140",
    "end": "2635989"
  },
  {
    "text": "passed through this is the combination so this bit here is the object mother we just get a prebuilt object or in this",
    "start": "2635989",
    "end": "2642229"
  },
  {
    "text": "case actually a prebuilt test data builder and then we customize it in this test trying to do that with just object",
    "start": "2642229",
    "end": "2649099"
  },
  {
    "text": "mother is gross now demographic we can say call we want object mother demographics top members",
    "start": "2649099",
    "end": "2655039"
  },
  {
    "text": "in W a the cool thing about that is you could probably use that in a bunch of places right it's probably something",
    "start": "2655039",
    "end": "2661309"
  },
  {
    "text": "that's quite standard to all of your tests you've just refactored some of your if you were just using test are to build a code so that you're not using",
    "start": "2661309",
    "end": "2668209"
  },
  {
    "text": "the same dot in state W a everywhere and then in this case we they say cool minimum age of 18 maximum age of 19 and",
    "start": "2668209",
    "end": "2675520"
  },
  {
    "text": "the demographic contains that member when the state is w a in the ages either 18 or 19 so this stuff then takes on a",
    "start": "2675520",
    "end": "2683530"
  },
  {
    "text": "mind of its own when you start looking at building lists of entities so in this",
    "start": "2683530",
    "end": "2688720"
  },
  {
    "text": "case we say cool we want a W a member and we want a list of three products the",
    "start": "2688720",
    "end": "2694390"
  },
  {
    "text": "first one has a campaign for all members so that one will apply to the member the second one has a campaign for a CT that",
    "start": "2694390",
    "end": "2701050"
  },
  {
    "text": "one won't apply because there in W a and the third one has a campaign in the state of the state to members and in",
    "start": "2701050",
    "end": "2708280"
  },
  {
    "text": "this case W a so the first one and the last one should apply and in this case",
    "start": "2708280",
    "end": "2713890"
  },
  {
    "text": "we're testing a query so we're saying given products with a variety of state rules when querying products for the",
    "start": "2713890",
    "end": "2719890"
  },
  {
    "text": "member then only return the products that apply to the member so when we execute that query we should only get",
    "start": "2719890",
    "end": "2725890"
  },
  {
    "text": "back the first product and the last product now if you think about what this might look like if you were using",
    "start": "2725890",
    "end": "2731770"
  },
  {
    "text": "constructors right in particular this product list you'll be like newing up three products and for each product",
    "start": "2731770",
    "end": "2738010"
  },
  {
    "text": "you're going to pass in a bunch of stuff like a name and other things and then you're also going to have to pass in a campaign which is probably on a domain",
    "start": "2738010",
    "end": "2743860"
  },
  {
    "text": "method because you probably wouldn't pass that into the constructor so like that codes just going to get huge and a lot of that stuff doesn't matter it",
    "start": "2743860",
    "end": "2749950"
  },
  {
    "text": "doesn't help you in understanding this test and what kind of data is actually essential for it to run if there's a lot",
    "start": "2749950",
    "end": "2755140"
  },
  {
    "text": "of noise like for instance the product name who cares this test is concerned with States the nice thing about this",
    "start": "2755140",
    "end": "2761590"
  },
  {
    "text": "pattern is you only put the data there that matters for this test you've removed a bunch of noise which makes the",
    "start": "2761590",
    "end": "2767080"
  },
  {
    "text": "test a lot easier to read it's awesome",
    "start": "2767080",
    "end": "2772110"
  },
  {
    "start": "2773000",
    "end": "3236000"
  },
  {
    "text": "cool so the last pattern that we want to talk about that can help you out in some of this stuff is approval test so",
    "start": "2773900",
    "end": "2779540"
  },
  {
    "text": "approval test it come up all the time in work that we do it's basically the idea",
    "start": "2779540",
    "end": "2784850"
  },
  {
    "text": "that you use the human brain as an approval mechanism instead of writing a whole people of different sessions and",
    "start": "2784850",
    "end": "2790220"
  },
  {
    "text": "the way that that works is you run some code you'll get the output of that sometimes it could be like a complex",
    "start": "2790220",
    "end": "2795500"
  },
  {
    "text": "piece of Jason you can do this with images you can do it with all sorts of things the first time that you come up",
    "start": "2795500",
    "end": "2801020"
  },
  {
    "text": "with the test you'll save that result to a file somewhere that just gets committed with the codebase and then in",
    "start": "2801020",
    "end": "2806300"
  },
  {
    "text": "subsequent runs of the test if that output changes the developers changed it gets a diff window with whatever happens",
    "start": "2806300",
    "end": "2813140"
  },
  {
    "text": "so you can pick up little differences in in that output that have changed unexpectedly or you can mark stuff as",
    "start": "2813140",
    "end": "2819980"
  },
  {
    "text": "okay if it changed and you did expect it and which in certain scenarios if you're trying to test like really complex",
    "start": "2819980",
    "end": "2826310"
  },
  {
    "text": "objects you can spend a long time writing assertions and keeping those up-to-date over time whereas this just",
    "start": "2826310",
    "end": "2831860"
  },
  {
    "text": "lets you do it automatically using whoever's making the change it's pretty cool like we said in the subcutaneous test scenario a range actor cert are all",
    "start": "2831860",
    "end": "2839930"
  },
  {
    "text": "probably a little bit more complex so this is a technique you can use to try to make that assertion bit a lot simpler",
    "start": "2839930",
    "end": "2845240"
  },
  {
    "text": "let's show you an example of that because it it really speaks for itself when you say it yeah if you guys haven't",
    "start": "2845240",
    "end": "2850730"
  },
  {
    "text": "heard of Approval test before by the way so maybe a third of you yeah so this",
    "start": "2850730",
    "end": "2855770"
  },
  {
    "text": "stuff blows people's minds when we show it okay essentially when you show images but we",
    "start": "2855770",
    "end": "2861680"
  },
  {
    "text": "don't want to do that for this demo yeah okay so we've got just let's say you're an ISP yeah and you've got a shopping",
    "start": "2861680",
    "end": "2868340"
  },
  {
    "text": "cart for users right and you want to test the scenario where the user comes to your shopping cart they say cool I",
    "start": "2868340",
    "end": "2873530"
  },
  {
    "text": "want mbm and I want fight and I want the international call option then what would happen in this case",
    "start": "2873530",
    "end": "2881030"
  },
  {
    "text": "we're saying cool is an MB M boy the NBN wide and international calls checkout",
    "start": "2881030",
    "end": "2886490"
  },
  {
    "text": "scenario and it's a subcutaneous MVC test for the checkout controller and so given the user has started a session so",
    "start": "2886490",
    "end": "2893000"
  },
  {
    "text": "we're just going to save object mother dot sessions default and given the user has added nvm voice and international",
    "start": "2893000",
    "end": "2899990"
  },
  {
    "text": "call bonus option so add to cart product store NBN quite international called bonus option and then save it so we save",
    "start": "2899990",
    "end": "2906830"
  },
  {
    "text": "that to the database they've done that previously given the user has provided their checkout details so we're just",
    "start": "2906830",
    "end": "2912229"
  },
  {
    "text": "gonna build a checkout view model gonna populate some random stuff in there like your name and credit card or whatever it",
    "start": "2912229",
    "end": "2917359"
  },
  {
    "text": "is that it has when the user checks out the cart so we call the index action on that controller we pass through the view",
    "start": "2917359",
    "end": "2922999"
  },
  {
    "text": "model then register the order so we'll pull the water out of the database and then normally you know you probably have",
    "start": "2922999",
    "end": "2928279"
  },
  {
    "text": "a bunch of assertions you check that the view model correctly got mapped to the database entity that got persisted but",
    "start": "2928279",
    "end": "2934189"
  },
  {
    "text": "then the really interesting part here is and send requests to the provisioning system so in this example let's imagine",
    "start": "2934189",
    "end": "2940670"
  },
  {
    "text": "you've got some sort of provisioning system that you send a JSON object to a message bar so HTTP API doesn't really",
    "start": "2940670",
    "end": "2946459"
  },
  {
    "text": "matter in this case we're going to resolve the mock provisioning system we're gonna call dot requests and and",
    "start": "2946459",
    "end": "2952579"
  },
  {
    "text": "that's something that would be this like codified behavior so basically that mock provisioning system would probably just stash away requests that come through to",
    "start": "2952579",
    "end": "2959569"
  },
  {
    "text": "it and in this case we're gonna say there's probably only one we assume there's only one so it's gonna get single just gonna get whatever's in",
    "start": "2959569",
    "end": "2964729"
  },
  {
    "text": "there and then we say requests dots should match approved this is using should be there's also something called approval",
    "start": "2964729",
    "end": "2970459"
  },
  {
    "text": "tests net and in a bunch of other languages what you would then see if you actually",
    "start": "2970459",
    "end": "2976999"
  },
  {
    "text": "let's look at the approved one which ones that one so that one yeah probes cool so this is an example of what we've",
    "start": "2976999",
    "end": "2982910"
  },
  {
    "text": "previously said is the correct thing to be in that request right so we've got a JSON object there's some products",
    "start": "2982910",
    "end": "2988789"
  },
  {
    "text": "there's one with an NBN with an against an address and we've got a username and the plan and you know we're gonna get 50",
    "start": "2988789",
    "end": "2995660"
  },
  {
    "text": "megabit that's pretty good it's better than the hotel absolutely 24 month contract there's a VoIP one and actually",
    "start": "2995660",
    "end": "3003579"
  },
  {
    "text": "mm-hmm there's actually meant to be another one here but let's say that you just saw the",
    "start": "3003579",
    "end": "3009160"
  },
  {
    "text": "international call plan you'll see why in a second and then we've got the customer details yeah now so you just",
    "start": "3009160",
    "end": "3014289"
  },
  {
    "text": "did some refactoring and you broke your test and you get a different note pop-up and what you see",
    "start": "3014289",
    "end": "3021209"
  },
  {
    "text": "is this oh we broke it so the great",
    "start": "3021209",
    "end": "3026499"
  },
  {
    "text": "thing about this right like like so let's take a step back for a second if you were going to try to assert this",
    "start": "3026499",
    "end": "3031660"
  },
  {
    "text": "with like typical assertions right look at that you would have just like hundreds of like this should equal this",
    "start": "3031660",
    "end": "3038079"
  },
  {
    "text": "this should equal this it's crazy right you're doing an assertion protest when this comes up the first time you get a",
    "start": "3038079",
    "end": "3044050"
  },
  {
    "text": "diff window you just look at it and make sure that it's right and you go accept this file done that's literally how fast",
    "start": "3044050",
    "end": "3050650"
  },
  {
    "text": "it is and then in a scenario like this we say what have we done we've broken it the international calls option isn't in",
    "start": "3050650",
    "end": "3057820"
  },
  {
    "text": "there for some reason don't know why that is but I know exactly where to look and this is where some of the power of",
    "start": "3057820",
    "end": "3063640"
  },
  {
    "text": "this stuff comes in right because if you had a whole heap of sessions it's like are this product wasn't there something like that like it's not as clear and",
    "start": "3063640",
    "end": "3070030"
  },
  {
    "text": "immediate as this this tells you where you need a look and look down here oh the work phone it's got the same value",
    "start": "3070030",
    "end": "3076330"
  },
  {
    "text": "as the home phone I bet that we've messed up the mapping for that view model it's a copy pasted accidentally did dive home phone rather you know yeah",
    "start": "3076330",
    "end": "3082510"
  },
  {
    "text": "but how many times you guys done that I do it all the time this stuff is really powerful and",
    "start": "3082510",
    "end": "3087570"
  },
  {
    "text": "really cool so the last demo that we're gonna show you is to try to put all of what we just",
    "start": "3087570",
    "end": "3093190"
  },
  {
    "text": "talked about together so we've got a bit of an example of a scenario that we actually wrote yep we actually wrote it",
    "start": "3093190",
    "end": "3099220"
  },
  {
    "text": "for one of our customers I mean it'd be modified but you get the idea that pretty much demonstrates all of the",
    "start": "3099220",
    "end": "3104590"
  },
  {
    "text": "patterns we just talked about okay here we go successful user",
    "start": "3104590",
    "end": "3110380"
  },
  {
    "text": "registration scenario this is a subcutaneous MVC test for the user registration controller given the valid",
    "start": "3110380",
    "end": "3117400"
  },
  {
    "text": "user registration data has been entered so we're going to say cool we want valid user user registration data from the",
    "start": "3117400",
    "end": "3123580"
  },
  {
    "text": "object mother we're going to execute the index action with that view model we're going to pull out the user that",
    "start": "3123580",
    "end": "3129040"
  },
  {
    "text": "hopefully is in our database then we're going to then the user should have been",
    "start": "3129040",
    "end": "3134560"
  },
  {
    "text": "redirected to the success page so we're checking that there the user should be persisted so the saved user shouldn't be",
    "start": "3134560",
    "end": "3140890"
  },
  {
    "text": "null and the user the users personal details should be correct now this is",
    "start": "3140890",
    "end": "3146080"
  },
  {
    "text": "using a library called should Lee which has some really nice syntax that allows you to perform multiple assertions where",
    "start": "3146080",
    "end": "3151480"
  },
  {
    "text": "if one of them is broken or multiple ones are broken is still going to run all of them and if multiple ones are broken it's going to show you all the",
    "start": "3151480",
    "end": "3157030"
  },
  {
    "text": "ones that were broken so this is like a nice way of doing multiple assertions rather than just this should be this this should be this and then the first",
    "start": "3157030",
    "end": "3162849"
  },
  {
    "text": "one that breaks means you don't run the others this one does it runs all of them it's really cool so we've basically checking here that the view model has",
    "start": "3162849",
    "end": "3169300"
  },
  {
    "text": "been correctly matched to the database it's quite powerful we're doing the same thing here for the postal address and",
    "start": "3169300",
    "end": "3174700"
  },
  {
    "text": "then here we're checking that the user was actually the bcrypt encrypted version now if any of you were in our",
    "start": "3174700",
    "end": "3181270"
  },
  {
    "text": "talk this morning you know you shouldn't do this and don't store passwords in your system okay bad",
    "start": "3181270",
    "end": "3187020"
  },
  {
    "text": "obviously yes and then here we're checking the created",
    "start": "3187020",
    "end": "3192070"
  },
  {
    "text": "and modified date should be set to now so we're resolving our I date/time provider and calling now and checking that it's what was in the database and",
    "start": "3192070",
    "end": "3198940"
  },
  {
    "text": "then we're checking is a registration email got sent so over here we're getting our mock email sending service we're pulling out the email that was",
    "start": "3198940",
    "end": "3205720"
  },
  {
    "text": "sent we're checking that the two address is exactly what we thought it should be we're checking the subjects correct and",
    "start": "3205720",
    "end": "3211990"
  },
  {
    "text": "then we can check with an approval test that the body of the email contain the content we expected we've tested a lot",
    "start": "3211990",
    "end": "3219400"
  },
  {
    "text": "in this test hopefully you can agree with me this is incredibly readable and if something goes wrong in any of these",
    "start": "3219400",
    "end": "3225970"
  },
  {
    "text": "bits it's actually pretty quick to figure out what's going on and then to go and resolve it this I think shows some of the real power of this testing",
    "start": "3225970",
    "end": "3232840"
  },
  {
    "text": "strategy or technique I should say so my strategy isn't so and I guess some questions to ask to",
    "start": "3232840",
    "end": "3239890"
  },
  {
    "start": "3236000",
    "end": "3275000"
  },
  {
    "text": "kind of leave you at the end of this talk is are you happy with the amount of speed of your test you happy with the",
    "start": "3239890",
    "end": "3245770"
  },
  {
    "text": "amount of confidence you're getting out of them you happy with the speed of feedback how can you go away and try to",
    "start": "3245770",
    "end": "3251350"
  },
  {
    "text": "make the testing that you're doing simpler you might want to do less of it you might want to do it apply a simpler",
    "start": "3251350",
    "end": "3256540"
  },
  {
    "text": "approach you might want to apply some of the refactoring or some of the patterns we've we've covered there's a whole heap of different ways that you can start to",
    "start": "3256540",
    "end": "3262270"
  },
  {
    "text": "simplify what you're doing and are you trying to think about how you're continuously improving your testing",
    "start": "3262270",
    "end": "3267550"
  },
  {
    "text": "strategy are there any takeaways you can you can make to try and go back and start brainstorming this stuff with the",
    "start": "3267550",
    "end": "3273070"
  },
  {
    "text": "people you work with nice so that's everything we want you to say if you want to get the slides or the code said",
    "start": "3273070",
    "end": "3279340"
  },
  {
    "start": "3275000",
    "end": "3509000"
  },
  {
    "text": "that URL and that's about it thank you thank you",
    "start": "3279340",
    "end": "3283350"
  },
  {
    "text": "sorry any questions",
    "start": "3285280",
    "end": "3288819"
  },
  {
    "text": "yeah",
    "start": "3310839",
    "end": "3313839"
  },
  {
    "text": "absolutely really happy that you asked thing Arish",
    "start": "3316270",
    "end": "3323079"
  },
  {
    "text": "yeah we should repeat it so for everyone that couldn't hear and for the video basically the question was if it's a",
    "start": "3323079",
    "end": "3329599"
  },
  {
    "text": "business decision what the minimum confidence level is and you've got a product owner that's not a technical person they're a little bit kind of",
    "start": "3329599",
    "end": "3335480"
  },
  {
    "text": "confused and they don't think it's their decision or they don't want to make the decision or they can't grasp the concept",
    "start": "3335480",
    "end": "3341329"
  },
  {
    "text": "that you know hey we might have a risk of having bugs you know come on so and",
    "start": "3341329",
    "end": "3346700"
  },
  {
    "text": "we had a we applied something to try and sort this problem out in one of our past projects we basically had a product",
    "start": "3346700",
    "end": "3352849"
  },
  {
    "text": "owner who was was saying that type of thing they're saying okay well I don't really want anything to do with the automated test that you're right I'd",
    "start": "3352849",
    "end": "3358490"
  },
  {
    "text": "just just kind of leave it it doesn't kind of help me make any decisions and what we did is we applied two of those",
    "start": "3358490",
    "end": "3364280"
  },
  {
    "text": "techniques so beta deify syntax and subcutaneous tests and each time we made a change to the system we just generated",
    "start": "3364280",
    "end": "3371000"
  },
  {
    "text": "a basically report of all the acceptance criteria that were added or removed or changed in the system and they had that",
    "start": "3371000",
    "end": "3378470"
  },
  {
    "text": "in front of them when they were looking at the button to deploy to production so they could actually use that to make a",
    "start": "3378470",
    "end": "3384500"
  },
  {
    "text": "really valid business decision as to whether or not people had added kind of too many tests hair don't care about",
    "start": "3384500",
    "end": "3389990"
  },
  {
    "text": "that one whether or not they hadn't added enough whether or not they'd added the wrong rules and that really informed",
    "start": "3389990",
    "end": "3395300"
  },
  {
    "text": "that and like helped them make the right decision if they didn't have that kind of thing in front of them we so often",
    "start": "3395300",
    "end": "3400790"
  },
  {
    "text": "ask like product owners hey you should be the ones who deploy to production but without something like that it's really",
    "start": "3400790",
    "end": "3406130"
  },
  {
    "text": "hard for them to make that decision in a safe way and they kind of end up like a little bit disillusioned with having to do that so that's just one approach that",
    "start": "3406130",
    "end": "3413030"
  },
  {
    "text": "you can try and take couple of points on that so in that case that video file library actually spits out HTML report",
    "start": "3413030",
    "end": "3419780"
  },
  {
    "text": "by default and what we did is we just hooked that up as a build artifact so for every like deployment you could kind",
    "start": "3419780",
    "end": "3426470"
  },
  {
    "text": "of go and see like the set of tests that we're running to shows all the given win then statements for each feature based",
    "start": "3426470",
    "end": "3431900"
  },
  {
    "text": "on per feature if that makes sense the other thing I'd probably say is that it's one of those things where it comes",
    "start": "3431900",
    "end": "3437720"
  },
  {
    "text": "down to education right so on day one yeah with the product donor like that they're not going to be able to make these decisions yeah I guess it's up to",
    "start": "3437720",
    "end": "3445400"
  },
  {
    "text": "the team to have a really good bi-directional relationship with them which any good agile team should have and and sort of slowly give them the",
    "start": "3445400",
    "end": "3453320"
  },
  {
    "text": "confidence and explain this stuff to them and and you know explain it in terms that they understand right if we",
    "start": "3453320",
    "end": "3459380"
  },
  {
    "text": "do this that means you might have this type of bug we can fix it within five minutes or ten minutes into production",
    "start": "3459380",
    "end": "3465650"
  },
  {
    "text": "or whatever it is are you comfortable with that if you put it in terms like that they typically understand it and",
    "start": "3465650",
    "end": "3471800"
  },
  {
    "text": "especially if you then say if we test it in this other way where that bug will never be possible it'll mean that it",
    "start": "3471800",
    "end": "3477290"
  },
  {
    "text": "takes us 50% because two days to do that yeah it takes this beauty' percent longer to develop this feature which one you know",
    "start": "3477290",
    "end": "3483860"
  },
  {
    "text": "how much is it worth it you know you put it in those terms that they understand then hopefully if you had the good relationship then you can kind of you",
    "start": "3483860",
    "end": "3489590"
  },
  {
    "text": "know it's not easy right and you can't do it from day one necessarily",
    "start": "3489590",
    "end": "3494200"
  },
  {
    "start": "3509000",
    "end": "3599000"
  },
  {
    "text": "yeah there's a couple of different question was if you have to integrate to your",
    "start": "3514690",
    "end": "3523280"
  },
  {
    "text": "database you may need to spin it up and down in every test if you have a thousand of those tests it can be quite slow first thing I'd say is if you go to",
    "start": "3523280",
    "end": "3530480"
  },
  {
    "text": "that top link and you look through that series in particular the one where I'm reviewing Jimmy bow guards video there's",
    "start": "3530480",
    "end": "3537950"
  },
  {
    "text": "a bunch of different techniques for isolating databases that I cover in there and some of them don't require you",
    "start": "3537950",
    "end": "3544280"
  },
  {
    "text": "to spin up or down a whole database every time so that's one thing and then a cold well that was one of one of those",
    "start": "3544280",
    "end": "3550520"
  },
  {
    "text": "things that you can do for example is you can use database transactions to give yourself very similar effect so",
    "start": "3550520",
    "end": "3556410"
  },
  {
    "text": "spin up a database in in basically an empty state bring it up to whatever schema level it needs to be at start a",
    "start": "3556410",
    "end": "3562650"
  },
  {
    "text": "transaction perform your test and then just tear down that transaction the end of the test which is significantly",
    "start": "3562650",
    "end": "3568260"
  },
  {
    "text": "faster there's a pretty small class of errors that you don't catch with that kind of approach but again that's kind",
    "start": "3568260",
    "end": "3573540"
  },
  {
    "text": "of a trade off if you've got a lot of that type of test then that might be a good thing to look at if you happen to",
    "start": "3573540",
    "end": "3578730"
  },
  {
    "text": "be using an entity framework by any chance that the bottom on this or cutaneous test presentation there's some code in that one that has that data",
    "start": "3578730",
    "end": "3585660"
  },
  {
    "text": "based test fixture class I was using my code examples for this talk and that one has that but in a way that you can have",
    "start": "3585660",
    "end": "3593220"
  },
  {
    "text": "difference between verify doing the work and sorry seeding doing the work and",
    "start": "3593220",
    "end": "3598740"
  },
  {
    "text": "verifying but they're all attached to the one transaction so something like clever little code in there that kind of",
    "start": "3598740",
    "end": "3603780"
  },
  {
    "text": "works that's the entity framework but you can do the same thing with like other things as well",
    "start": "3603780",
    "end": "3608720"
  },
  {
    "text": "yeah that's the other option that's certainly one of the ones you can do you just need to be careful then about the IDS you use in your tests and making",
    "start": "3613610",
    "end": "3620040"
  },
  {
    "text": "sure you're not Masumi like in the code samples I had we were doing things like call pulled the single thing out of this thing you can't do that then you have to",
    "start": "3620040",
    "end": "3626340"
  },
  {
    "text": "actually look by ID to grab the thing out but yeah that's another option absolutely",
    "start": "3626340",
    "end": "3631670"
  },
  {
    "text": "to be honest",
    "start": "3645560",
    "end": "3648920"
  },
  {
    "text": "okay so the first question was of you you've got like Donna 2.0 you can't use some of these cool libraries what do you",
    "start": "3655340",
    "end": "3660960"
  },
  {
    "text": "do I'll be honest I haven't you ever used like a project in like just years and years that's less than four so like",
    "start": "3660960",
    "end": "3668070"
  },
  {
    "text": "a good luck but I don't know I guess you know do the best you can right try to",
    "start": "3668070",
    "end": "3673200"
  },
  {
    "text": "find libraries that do support it or try to like yeah that's not in support so let's look",
    "start": "3673200",
    "end": "3680730"
  },
  {
    "text": "I mean little bit to be fair there's some of these techniques that you don't necessarily need libraries for so I'm",
    "start": "3680730",
    "end": "3686609"
  },
  {
    "text": "sure there's still some things that you can get that you can apply so the second was around async things",
    "start": "3686609",
    "end": "3693740"
  },
  {
    "text": "yep absolutely we just like to say that BT to file library that supports async for",
    "start": "3693740",
    "end": "3700200"
  },
  {
    "text": "instance so we just make the test like given whatever async and stuff and it would do in a weight or whatever",
    "start": "3700200",
    "end": "3707480"
  },
  {
    "text": "so the question was how can you involve testers because in",
    "start": "3726859",
    "end": "3732150"
  },
  {
    "text": "particular we're trying to set up data then testers are really good at and setting up great data to break things",
    "start": "3732150",
    "end": "3737460"
  },
  {
    "text": "right I could do literally a whole talk on the role of a tester and an agile team so I'm gonna have to try to done",
    "start": "3737460",
    "end": "3743760"
  },
  {
    "text": "that one day oh yeah okay number one developers and testers should work closely together so if",
    "start": "3743760",
    "end": "3750180"
  },
  {
    "text": "you're writing a like a subcutaneous test pair with your tester hey dude like",
    "start": "3750180",
    "end": "3755340"
  },
  {
    "text": "help me or not do necessarily it could be cold that's good no you know it could",
    "start": "3755340",
    "end": "3760440"
  },
  {
    "text": "be help me figure out what tests what test data I should set this up with and hey which which features do you think we",
    "start": "3760440",
    "end": "3767850"
  },
  {
    "text": "should test in this way or what should the BDD syntax be which which scenario should we run the tester has got a",
    "start": "3767850",
    "end": "3773820"
  },
  {
    "text": "really good mindset for that sort of thing sit down with them pair with them you're not separate people who are in the same team right and then another",
    "start": "3773820",
    "end": "3781530"
  },
  {
    "text": "scenario we had was we had some testers that learn how to write this type of",
    "start": "3781530",
    "end": "3786550"
  },
  {
    "text": "test and they were writing some of them as well yeah which was obviously a lucky scenario but there's there's definitely",
    "start": "3786550",
    "end": "3793270"
  },
  {
    "text": "a huge amount of value that they can add just by like sitting down next to you and working together on this stuff and",
    "start": "3793270",
    "end": "3798400"
  },
  {
    "text": "it's it may be a bit of a shift in mindset and again maybe a bit of training and recoating to what you've done in the past to get them like",
    "start": "3798400",
    "end": "3805090"
  },
  {
    "text": "they're helping out in that kind of way any other questions",
    "start": "3805090",
    "end": "3810510"
  },
  {
    "text": "yep so in the the question was do we use our domain to save objects in the test database from seeding our tests so yeah",
    "start": "3813150",
    "end": "3819910"
  },
  {
    "text": "absolutely in the tests that we just saw sorry in the code samples that we just shown we were absolutely doing that in",
    "start": "3819910",
    "end": "3825910"
  },
  {
    "text": "some circumstances we would absolutely do that and it works really well in other circumstances we might not want to",
    "start": "3825910",
    "end": "3831880"
  },
  {
    "text": "tie that because you could consider that in some ways to be an implementation detail and in which case you you kind of",
    "start": "3831880",
    "end": "3838630"
  },
  {
    "text": "the only problem with that is you kind of suffer the sort of like you'd have to call sake controllers for everything so",
    "start": "3838630",
    "end": "3844780"
  },
  {
    "text": "you'd have like a lot of duplication between the tests that has advantages and disadvantages right so it's about",
    "start": "3844780",
    "end": "3850150"
  },
  {
    "text": "being pragmatic quite often we find that works really well especially if you use object mother and test starter builder because object mother and test starter",
    "start": "3850150",
    "end": "3856810"
  },
  {
    "text": "builder actually give you a bit of a kind of abstraction layer between you",
    "start": "3856810",
    "end": "3861850"
  },
  {
    "text": "and your domain if that makes sense so you're not calling the constructor you can refactor constructors all that sort of stuff you've got constructor calls in",
    "start": "3861850",
    "end": "3868450"
  },
  {
    "text": "one place in your test starter builder for instance so we find that often alleviates most of the disadvantages are",
    "start": "3868450",
    "end": "3874270"
  },
  {
    "text": "tying it to date domain objects but you know be pragmatic right in some cases it doesn't make sense in other cases it",
    "start": "3874270",
    "end": "3879490"
  },
  {
    "text": "works like cool anymore maybe one last question cool nope great a practice laughter",
    "start": "3879490",
    "end": "3886840"
  },
  {
    "text": "thank you [Applause]",
    "start": "3886840",
    "end": "3892380"
  }
]