[
  {
    "text": "looks like it's 9: in the morning everybody seems to have recovered from jet lag or previous night or",
    "start": "5200",
    "end": "13960"
  },
  {
    "text": "um whatever you may have been up to thank you guys for joining me this morning we're going to talk about net in",
    "start": "13960",
    "end": "19480"
  },
  {
    "text": "a box containerizing net we're going to go through a lot of different things um",
    "start": "19480",
    "end": "25519"
  },
  {
    "text": "feel free to reach out and follow me on all the different platforms and socials my name is Chris a",
    "start": "25519",
    "end": "30640"
  },
  {
    "text": "I'm a senior customer engineer at Microsoft and I'm actually part of an organization called um cxp We're inside",
    "start": "30640",
    "end": "37680"
  },
  {
    "text": "of azure engineering and I'm on the fast trck for Azure team so I help a lot of customers build and deploy applications",
    "start": "37680",
    "end": "44440"
  },
  {
    "text": "to Azure uh security reliability scalability best practices we we follow",
    "start": "44440",
    "end": "50640"
  },
  {
    "text": "a lot of the Waf pillars so if you're building on Azure definitely go check out the well architected framework",
    "start": "50640",
    "end": "56000"
  },
  {
    "text": "there's a lot of great documentation there on how to configure Services how to build and employ your applications",
    "start": "56000",
    "end": "61559"
  },
  {
    "text": "through you know cost management reliability security performance and operational excellence I've been part of",
    "start": "61559",
    "end": "68280"
  },
  {
    "text": "teams that's written a lot of those guides so it's really good information um today we're going to talk",
    "start": "68280",
    "end": "75479"
  },
  {
    "text": "about some things you know we'll start out with just general software and architecture a",
    "start": "75479",
    "end": "81240"
  },
  {
    "text": "lot of times when we talk about containerizing applications scaling applications you have to make sure your",
    "start": "81240",
    "end": "86840"
  },
  {
    "text": "application can scale uh that's something some people forget um and we'll talk about why well",
    "start": "86840",
    "end": "93680"
  },
  {
    "text": "we'll go into containerization like I uh was telling people earlier this is probably like the third net end",
    "start": "93680",
    "end": "100320"
  },
  {
    "text": "containery talk here so I'm following Hanselman talking about some stuff",
    "start": "100320",
    "end": "105479"
  },
  {
    "text": "hopefully uh I can provide some different perspectives we're GNA specifically talk about net and",
    "start": "105479",
    "end": "111719"
  },
  {
    "text": "containers we got lots of demos to go through we're going to talk about um configuration of containers um some",
    "start": "111719",
    "end": "117439"
  },
  {
    "text": "different methods we can use for that we'll talk about a couple of different aspects as we layer it on uh I've got pipelines we can",
    "start": "117439",
    "end": "124360"
  },
  {
    "text": "talk about for GitHub and devops and then we'll have questions and if you have a question while we're going",
    "start": "124360",
    "end": "130119"
  },
  {
    "text": "feel free to raise your hand I don't mind um questions on the",
    "start": "130119",
    "end": "135360"
  },
  {
    "text": "fly so software you know a lot of people when they hear containers they just instantly",
    "start": "135360",
    "end": "141440"
  },
  {
    "text": "think microservices they're like we got to break it apart to a lot of loosely coupled Services we got to do all this",
    "start": "141440",
    "end": "148160"
  },
  {
    "text": "modularity and and are going to be easier to test and deploy and a lot of that is true it also can add complexity",
    "start": "148160",
    "end": "155440"
  },
  {
    "text": "for people that write monolithic applications as long as your code is very well structured and modular you",
    "start": "155440",
    "end": "161519"
  },
  {
    "text": "don't always have to go to microservices and split things apart but one reason you might want to go with microservices",
    "start": "161519",
    "end": "168440"
  },
  {
    "text": "is if you have different parts of your application that need to scale independently that have different",
    "start": "168440",
    "end": "174239"
  },
  {
    "text": "security boundaries maybe your order processing system needs to scale and grow dramatically but your friend",
    "start": "174239",
    "end": "181599"
  },
  {
    "text": "website doesn't like you have options and you can easily um turn those dials",
    "start": "181599",
    "end": "189280"
  },
  {
    "text": "with more control another thing you're going to hear a lot as soon as you hear containers a lot of people are going to",
    "start": "189280",
    "end": "194480"
  },
  {
    "text": "go Cloud native you know Cloud native comes up a lot whenever you talk about containers um you know a lot of these",
    "start": "194480",
    "end": "202920"
  },
  {
    "text": "applications are built on containers or they're built on past services so we've moved away in a lot of cases from cloud",
    "start": "202920",
    "end": "209040"
  },
  {
    "text": "native from using VMS from using individual servers to using uh platforms",
    "start": "209040",
    "end": "215680"
  },
  {
    "text": "and services on demand at scale that let you do a lot of Automation and",
    "start": "215680",
    "end": "221000"
  },
  {
    "text": "manageability infrastructure is code platform engineering these are things you hear a lot many Cloud native",
    "start": "221000",
    "end": "228080"
  },
  {
    "text": "applications do depend on containerization so you know one of the",
    "start": "228080",
    "end": "234159"
  },
  {
    "text": "big things around containers is these are buildin deployment patterns um you",
    "start": "234159",
    "end": "239239"
  },
  {
    "text": "know when we are deploying containers we are deploying them to scale you don't usually run one instance of a container",
    "start": "239239",
    "end": "246599"
  },
  {
    "text": "you want to run three four five 10 100 thousand instances of a",
    "start": "246599",
    "end": "251879"
  },
  {
    "text": "container so when you think about things like that at scale you start thinking about the software problems that come",
    "start": "251879",
    "end": "257959"
  },
  {
    "text": "with it um you know you want to be able to isolate things have repeatability and",
    "start": "257959",
    "end": "264280"
  },
  {
    "text": "um consistent testing you want to be able to work with all those various cloud services and be able to know",
    "start": "264280",
    "end": "270280"
  },
  {
    "text": "what's going on in your system so it starts going into monitoring and observability open Telemetry is a big",
    "start": "270280",
    "end": "277080"
  },
  {
    "text": "topic that comes up when you're talking about these type of scales now a lot of my customers I help",
    "start": "277080",
    "end": "284440"
  },
  {
    "text": "move to Containers maybe it's on app Services maybe it's AKs or kubernetes or",
    "start": "284440",
    "end": "289759"
  },
  {
    "text": "container apps the first thing I have them do is understand their dependencies especially if they're working in an",
    "start": "289759",
    "end": "295840"
  },
  {
    "text": "on-prem or server based environment if they're doing file access um how files work in containers is a",
    "start": "295840",
    "end": "303199"
  },
  {
    "text": "little different I'll talk about that authentication like some people on Prem are doing Windows off and if you're",
    "start": "303199",
    "end": "309160"
  },
  {
    "text": "doing a Linux container your authentication systems might have to change moving to more compliant standards like oidc and oaf um",
    "start": "309160",
    "end": "317680"
  },
  {
    "text": "understanding logging if you're just writing text to a file uh a lot of container applications will do standard",
    "start": "317680",
    "end": "323919"
  },
  {
    "text": "out or they'll use something like open Telemetry or an app insights or Azure monitor something where you have",
    "start": "323919",
    "end": "330479"
  },
  {
    "text": "observability into that platform other than just I wrote a log to a text file there's a lot of os dependent",
    "start": "330479",
    "end": "336800"
  },
  {
    "text": "components sometimes you know if you use certain libraries or device access and",
    "start": "336800",
    "end": "341960"
  },
  {
    "text": "you're trying to do like PDF parsing or you're trying to do um special models that maybe use Windows libraries or use",
    "start": "341960",
    "end": "350720"
  },
  {
    "text": "uh a certain you know property that's not available when you're in a container that's something to very well be aware",
    "start": "350720",
    "end": "357080"
  },
  {
    "text": "of and sometimes you have to rewrite your application or isolate parts of it to support um removing those",
    "start": "357080",
    "end": "364000"
  },
  {
    "text": "dependencies we'll talk about versions in a minute but I'm going to talk about net versions another thing is a lot of",
    "start": "364000",
    "end": "371440"
  },
  {
    "text": "times containers try to be stateless they handle the request they can process it without any sort of context or",
    "start": "371440",
    "end": "377360"
  },
  {
    "text": "information you know go look up what they need to do and return the result if you're having to do state you have to",
    "start": "377360",
    "end": "383680"
  },
  {
    "text": "maintain session you have to look at ways I mean there are some options from load balancers to do stick sessions but",
    "start": "383680",
    "end": "391039"
  },
  {
    "text": "managing session state in something like a redus or some sort of remote session store is something that you might need",
    "start": "391039",
    "end": "397560"
  },
  {
    "text": "to modify your application as you scale out if you have two or three instances of a application and it's stateful and",
    "start": "397560",
    "end": "404599"
  },
  {
    "text": "there's session and people bounce between them they can start losing their session losing their cart seeing other",
    "start": "404599",
    "end": "410280"
  },
  {
    "text": "people's information and so if your application is not ready to scale and handle that type of",
    "start": "410280",
    "end": "416960"
  },
  {
    "text": "traffic putting lots of instances of a container out cause problems that you",
    "start": "416960",
    "end": "422319"
  },
  {
    "text": "start seeing later on so being very aware of those type of things you know",
    "start": "422319",
    "end": "428039"
  },
  {
    "text": "how you're handling state how you're handling files how you're handling databases now I mentioned versions I I",
    "start": "428039",
    "end": "435599"
  },
  {
    "text": "just like calling this out because I think it's important this is the net support map let me go ahead and zoom",
    "start": "435599",
    "end": "443000"
  },
  {
    "text": "in we're right there in 24 the only ones that are currently supported are six and seven and eight",
    "start": "443000",
    "end": "450039"
  },
  {
    "text": "um seven ends in May support for.net 7 ends in May support for.net 6 ends in",
    "start": "450039",
    "end": "455479"
  },
  {
    "text": "November so um if you want continued security",
    "start": "455479",
    "end": "460720"
  },
  {
    "text": "patches and updates and optimizations to the framework to make things faster and",
    "start": "460720",
    "end": "466599"
  },
  {
    "text": "smaller starting to look at moving to eight is probably a priority if if you're not doing that already so just",
    "start": "466599",
    "end": "475039"
  },
  {
    "text": "wanted to call that out some of the features I'm going to show today only work in seven and eight they will not work in six and before so just something",
    "start": "475039",
    "end": "482720"
  },
  {
    "text": "to be aware of now I gave you a lot of things to watch out for when you're trying to",
    "start": "482720",
    "end": "487840"
  },
  {
    "text": "containerize something how do you find them a sometimes it's trial and error there is a project there's a tool out",
    "start": "487840",
    "end": "493919"
  },
  {
    "text": "there called appat which is the Azure migration and code assessment tool",
    "start": "493919",
    "end": "498960"
  },
  {
    "text": "there's a CLI version and a visual studio uh plugin that you can do and you",
    "start": "498960",
    "end": "504120"
  },
  {
    "text": "point it at your solution it will actually scan through your dependencies and scan through your code it will do a static analysis and if it identifies",
    "start": "504120",
    "end": "511080"
  },
  {
    "text": "things like those weird file accesses or login you know capabilities or you're doing certain um operations that maybe",
    "start": "511080",
    "end": "519360"
  },
  {
    "text": "aren't compatible in a container or in the cloud it will let you know and help prioritize them and call them out and",
    "start": "519360",
    "end": "525000"
  },
  {
    "text": "wear in the files you need to go fix them so if you're like trying to run your applications you start running into",
    "start": "525000",
    "end": "530680"
  },
  {
    "text": "problems appat um can give you a nice report and give you",
    "start": "530680",
    "end": "535800"
  },
  {
    "text": "prioritization we're going to get into some demos real soon guys so I'm just trying to lay some Theory down another",
    "start": "535800",
    "end": "542680"
  },
  {
    "text": "really good tool um is something called Dapper who's heard of",
    "start": "542680",
    "end": "548079"
  },
  {
    "text": "dapper cool who's using Dapper a lot less hands Okay who in the",
    "start": "548079",
    "end": "555120"
  },
  {
    "text": "day who back in the day with like server farms and like new IPS did service",
    "start": "555120",
    "end": "561440"
  },
  {
    "text": "discovery of some kind how do you know what the IP or the address of your databases or your ex service you would",
    "start": "561440",
    "end": "568760"
  },
  {
    "text": "have to do service Discovery um how do you handle State you know you would have to like point it at",
    "start": "568760",
    "end": "575120"
  },
  {
    "text": "a file system or do a drive mapping um or know about endpoints and it might vary if you're doing redis or",
    "start": "575120",
    "end": "582360"
  },
  {
    "text": "service bus or whatever what Dapper does is it gives you all these great components that are reusable that kind",
    "start": "582360",
    "end": "589760"
  },
  {
    "text": "of separate the implementation from the details so as you say I want a you know",
    "start": "589760",
    "end": "594880"
  },
  {
    "text": "a state store you can be backed by something like aure it could be backed",
    "start": "594880",
    "end": "600399"
  },
  {
    "text": "by something from another Cloud it doesn't matter the application code is kind of separated from the",
    "start": "600399",
    "end": "606079"
  },
  {
    "text": "implementation of those backend things and that kind of handles that same with like service Discovery same with like",
    "start": "606079",
    "end": "613399"
  },
  {
    "text": "cues there's all sorts of different components as you can see in the image like um that that you can leverage and",
    "start": "613399",
    "end": "620040"
  },
  {
    "text": "so it gives you these building blocks as you start looking at these containers and",
    "start": "620040",
    "end": "625120"
  },
  {
    "text": "services so let's actually talk a little bit deeper about containerization like I said I know number of people have talked about it already",
    "start": "625120",
    "end": "631920"
  },
  {
    "text": "but big difference between containers and VMS this this is something I like to show and talk about is you know when",
    "start": "631920",
    "end": "638920"
  },
  {
    "text": "you're running a VM there's a an operating system there's a kernel there there's all these libraries that are",
    "start": "638920",
    "end": "645120"
  },
  {
    "text": "there and you make a hypervisor it's just a piece of software that pretends to be hardware and so when you make a VM",
    "start": "645120",
    "end": "652720"
  },
  {
    "text": "you have a full virtualized Hardware you have a new OS on top of it you have new",
    "start": "652720",
    "end": "658279"
  },
  {
    "text": "libraries on top of it applications so it a lot of times these can be big these can measure in gigabytes which means",
    "start": "658279",
    "end": "664120"
  },
  {
    "text": "when you spin up a scale set or you spin up a VM or you try to scale that way it",
    "start": "664120",
    "end": "669800"
  },
  {
    "text": "can take minutes for those VMS to be allocated because it's pulling gigs of data across it's allocating compute to",
    "start": "669800",
    "end": "675480"
  },
  {
    "text": "boot up the machine um now you are kind of isolated from everything else because you're you're emulating Hardware so",
    "start": "675480",
    "end": "682160"
  },
  {
    "text": "you're not sharing memory or anything but it's it's much more intensive but when we talk about containers so",
    "start": "682160",
    "end": "688639"
  },
  {
    "text": "containers typically I talk about Linux containers you know I'm not I'm not really going to talk about Windows containers um they",
    "start": "688639",
    "end": "697360"
  },
  {
    "text": "exist um so Linux containers they all kind of have evolved from some capabilities of the Linux kernel we're",
    "start": "697360",
    "end": "704040"
  },
  {
    "text": "going to get a little technical on some of these things so the Linux kernel can set up like isolated name spaces and",
    "start": "704040",
    "end": "710320"
  },
  {
    "text": "memory space and so what's happening is when you run a container they're sharing the same kernel they're sharing the same",
    "start": "710320",
    "end": "716880"
  },
  {
    "text": "memory they're sharing the same access to hardware all it's doing is setting up it's almost like a CH route it just kind of isolates",
    "start": "716880",
    "end": "723959"
  },
  {
    "text": "it from everything else and you're relying on the protections of the Linux kernel to keep things isolated uh using like these cgroups and",
    "start": "723959",
    "end": "731560"
  },
  {
    "text": "these name spaces and so when your application boots up it already has a kernel it just needs the libraries and",
    "start": "731560",
    "end": "737600"
  },
  {
    "text": "your application and configuration to be able to execute so when we do this like",
    "start": "737600",
    "end": "743680"
  },
  {
    "text": "we're getting images in Megs like some Alpine and some really small dis list images are single digits like if you do",
    "start": "743680",
    "end": "750360"
  },
  {
    "text": "like a go container you can get down to like eight or nine um there's some stuff we'll do today get down to like 10 or 12",
    "start": "750360",
    "end": "756199"
  },
  {
    "text": "or 18 for net but if you do some of the big sdks that have all sorts of",
    "start": "756199",
    "end": "761839"
  },
  {
    "text": "applications and and you know debuggers and compilers in them they might be 300 Megs so this is something we're going to",
    "start": "761839",
    "end": "768600"
  },
  {
    "text": "talk about like understanding image size and base images and and and how those are all built together and as I",
    "start": "768600",
    "end": "775519"
  },
  {
    "text": "mentioned because it's a shared memory space there is a little bit of security concerned there are people that are",
    "start": "775519",
    "end": "781959"
  },
  {
    "text": "security researchers that have written articles about breaking out of containers just like they've written",
    "start": "781959",
    "end": "787360"
  },
  {
    "text": "articles about breaking out ofms it's a thing that can happen but it's usually not something that happens in",
    "start": "787360",
    "end": "794440"
  },
  {
    "text": "reality um the other great thing about containers is and you might hear this topic bin packing so on a given server",
    "start": "794440",
    "end": "801800"
  },
  {
    "text": "you can have a lot more applications uh running in containers than VMS because you're not wasting all that space on",
    "start": "801800",
    "end": "808240"
  },
  {
    "text": "another copy of an on another copy of a library on another copy of a kernel so it's much more",
    "start": "808240",
    "end": "814480"
  },
  {
    "text": "efficient resource usage um so when you hear about stuff like kubernetes and",
    "start": "814480",
    "end": "820360"
  },
  {
    "text": "thousands of nodes running tens of thousands of containers and pods that's why a lot of large scale organizations",
    "start": "820360",
    "end": "827440"
  },
  {
    "text": "have moved to Containers because they can scale they're pulling a couple Megs they're spinning up a new instance it's almost instant booting so they can",
    "start": "827440",
    "end": "833839"
  },
  {
    "text": "respond the traffic much more quickly than trying to spin up another VM",
    "start": "833839",
    "end": "840240"
  },
  {
    "text": "so let's talk about some of the terms are containers again if you guys have heard this please let me know to just move on and shut up but um the",
    "start": "840440",
    "end": "849040"
  },
  {
    "text": "oci open container initiative who's heard of Docker yeah almost",
    "start": "849040",
    "end": "855639"
  },
  {
    "text": "everybody Docker is um who's heard of kubernetes yeah so",
    "start": "855639",
    "end": "863959"
  },
  {
    "text": "kubernetes for a long time used Docker but then because Docker had some closed Source pieces",
    "start": "863959",
    "end": "869759"
  },
  {
    "text": "they started to adopt something like the oci we wanted a standard and a spec to",
    "start": "869759",
    "end": "874959"
  },
  {
    "text": "Define how you pull images how you run images like a standard way that people could go and Implement a new container",
    "start": "874959",
    "end": "881480"
  },
  {
    "text": "runtime Implement a new container image system however they wanted because they're following a standard in a spec",
    "start": "881480",
    "end": "888000"
  },
  {
    "text": "Docker donated some code you know there there was a lot of stuff that went down I'll talk about a little bit but oci is",
    "start": "888000",
    "end": "894920"
  },
  {
    "text": "the project that kind of owns the specifications for containers so how to",
    "start": "894920",
    "end": "900040"
  },
  {
    "text": "pull images and so a lot of times you'll talk about oci images so open container",
    "start": "900040",
    "end": "905079"
  },
  {
    "text": "initiative compliant container images so if you see oci it's just the standard",
    "start": "905079",
    "end": "910240"
  },
  {
    "text": "spec it's the same as a Docker image that they both implement the same standard so images use a layered file",
    "start": "910240",
    "end": "918720"
  },
  {
    "text": "system and so each slice is a mutable it gets a hash um you can like you can",
    "start": "918720",
    "end": "926240"
  },
  {
    "text": "actually extract them out as like tar files or you know kind of like zip files that's just a collection of files and",
    "start": "926240",
    "end": "931759"
  },
  {
    "text": "what happens is it'll layer them into a like a directory and and mount that as that file system what's great is each",
    "start": "931759",
    "end": "938560"
  },
  {
    "text": "layer can be independently cached and reused so if you're building a brand new image or pulling down a brand new image",
    "start": "938560",
    "end": "944959"
  },
  {
    "text": "it might pull down a couple hundred Megs but if you spin up another image and it can reuse all of those shared",
    "start": "944959",
    "end": "951399"
  },
  {
    "text": "layers like the operating system base layer stuff like that it might only need",
    "start": "951399",
    "end": "957440"
  },
  {
    "text": "to pull down an extra five mags to get your specific application libraries or something so it's going to um overall",
    "start": "957440",
    "end": "963839"
  },
  {
    "text": "it's going to use a lot less storage space because it's reusing a lot of layers um one example of this might be",
    "start": "963839",
    "end": "971279"
  },
  {
    "text": "if I'm using the same type of Docker image to build net and building two or three different applications it's not",
    "start": "971279",
    "end": "977000"
  },
  {
    "text": "going to need to pull down a copy of an OS and all this other stuff every single time it's just going to use some very",
    "start": "977000",
    "end": "983680"
  },
  {
    "text": "base images of libraries and dependencies and net and they can reuse",
    "start": "983680",
    "end": "989120"
  },
  {
    "text": "those multiple times and the only change is going to be my application layer on top so when I push those out to images",
    "start": "989120",
    "end": "996600"
  },
  {
    "text": "uh to repositories um container Registries it might only push a couple",
    "start": "996600",
    "end": "1003120"
  },
  {
    "text": "Megs at a time because those other layers are already out there they're already cached and already reusable so",
    "start": "1003120",
    "end": "1008800"
  },
  {
    "text": "you get much faster uh updates as",
    "start": "1008800",
    "end": "1013920"
  },
  {
    "text": "well another thing about images is you can tag them which is like versioning",
    "start": "1013920",
    "end": "1019839"
  },
  {
    "text": "and you you might hear people call them stable and unstable tags or stable and unique tags there's actually some",
    "start": "1019839",
    "end": "1025918"
  },
  {
    "text": "security implications for both of these um especially if you're scaling to lots of images and I'm going to show you as",
    "start": "1025919",
    "end": "1032798"
  },
  {
    "text": "we get into it um but like stable tags if I just say latest and I pulled down",
    "start": "1032799",
    "end": "1038678"
  },
  {
    "text": "an image today I might get some collection of bits that is the",
    "start": "1038679",
    "end": "1043959"
  },
  {
    "text": "latest today if I do it again tomorrow I might get a different collection of bits so if I have application where I just",
    "start": "1043959",
    "end": "1049799"
  },
  {
    "text": "said use the latest image and I scale it out I can start having one set of nodes run with an",
    "start": "1049799",
    "end": "1056120"
  },
  {
    "text": "older version and a different set of nodes run with a newer version you run into some weird problems so that's where",
    "start": "1056120",
    "end": "1062880"
  },
  {
    "text": "unique tags come in um you might key them to the commit hash of your repo",
    "start": "1062880",
    "end": "1068240"
  },
  {
    "text": "your git repo you might key them to a build number or a very specific date and version number that way you you don't",
    "start": "1068240",
    "end": "1075520"
  },
  {
    "text": "want it to change every time you pull it as you scale out you want want to always get the same collection of images and",
    "start": "1075520",
    "end": "1081679"
  },
  {
    "text": "layers now a lot of times you might use a stable image for you might use it for",
    "start": "1081679",
    "end": "1087320"
  },
  {
    "text": "a base image you know if I say I want to get the latest Ubuntu I want the one with all the latest patches and stuff as",
    "start": "1087320",
    "end": "1092960"
  },
  {
    "text": "I'm building on top of it that way I can version my new one with all the latest fixes um there's a lot of debate on like",
    "start": "1092960",
    "end": "1100039"
  },
  {
    "text": "when to use stable when to use unique or unstable but I usually go with stable",
    "start": "1100039",
    "end": "1106600"
  },
  {
    "text": "for base images that's how I kind of consume them and then I build my stuff on top if I need to have complete esom like software",
    "start": "1106600",
    "end": "1114679"
  },
  {
    "text": "build materials like reproducibility I'll use a stable or unique tag at both",
    "start": "1114679",
    "end": "1120120"
  },
  {
    "text": "the OS layer and the app layer but we'll talk about that in just a",
    "start": "1120120",
    "end": "1125280"
  },
  {
    "text": "sec so I talked about all these images we use Registries to store them there's",
    "start": "1125280",
    "end": "1130880"
  },
  {
    "text": "a bunch out there these have Version Control these have access control these can do security scanning um you can",
    "start": "1130880",
    "end": "1137080"
  },
  {
    "text": "integrate with your cicd pipeline which I'll show you up there I've got the Azure container registry dockerhub is",
    "start": "1137080",
    "end": "1144120"
  },
  {
    "text": "one uh GitHub can has a registry and then that bottom one is called Harbor",
    "start": "1144120",
    "end": "1150440"
  },
  {
    "text": "you can actually um run that in your like your clusters uh it's an open- Source container registry there's also",
    "start": "1150440",
    "end": "1158080"
  },
  {
    "text": "runtimes run times are the things that actually run your containers um and they",
    "start": "1158080",
    "end": "1163360"
  },
  {
    "text": "have high runtime high level and low-level run times so like kubernetes might talk to the high level runtime",
    "start": "1163360",
    "end": "1168799"
  },
  {
    "text": "time and then that'll push out to the nodes and then on the individual nodes there might be a lowlevel runtime that",
    "start": "1168799",
    "end": "1174760"
  },
  {
    "text": "does the actual starting and stopping and all that I only mention these just",
    "start": "1174760",
    "end": "1180440"
  },
  {
    "text": "so that you get familiar with the names if you see them like container D or cryo or",
    "start": "1180440",
    "end": "1186120"
  },
  {
    "text": "runc and this is how they're all kind of connected um kubernetes has this",
    "start": "1186120",
    "end": "1191559"
  },
  {
    "text": "container runtime interface CRI they used to maintain it for Docker for a while and then they were like hey Docker",
    "start": "1191559",
    "end": "1197840"
  },
  {
    "text": "come fix your own stuff we're tired of it and they didn't really so they just",
    "start": "1197840",
    "end": "1203320"
  },
  {
    "text": "kind of moved on to do their own thing which is why Docker is not an official",
    "start": "1203320",
    "end": "1209840"
  },
  {
    "text": "runtime for kubernetes anymore but you can see how everybody pretty much falls through the oci spec down to some Runner",
    "start": "1209840",
    "end": "1217960"
  },
  {
    "text": "that runs the actual containers so let's start running some containers let's start building some um",
    "start": "1217960",
    "end": "1224360"
  },
  {
    "text": "one reason I do them Inn net a lot is portability um you know if you've been running NET Framework on Windows you're",
    "start": "1224360",
    "end": "1231159"
  },
  {
    "text": "stuck on Windows if you're doing net core Net 5 6 78 Mac Windows Linux it really doesn't",
    "start": "1231159",
    "end": "1237440"
  },
  {
    "text": "matter the platform um you're going to have consistent runtime no matter what like it's always going to run and behave",
    "start": "1237440",
    "end": "1243440"
  },
  {
    "text": "the exact same way if you're using containers and it's a lot easier to scale everything's very isolated you're",
    "start": "1243440",
    "end": "1249400"
  },
  {
    "text": "not worrying about file system changes or uh registry CH",
    "start": "1249400",
    "end": "1255000"
  },
  {
    "text": "settings um by default they're very secure and they're very resource efficient Microsoft puts out a bunch of",
    "start": "1255000",
    "end": "1262320"
  },
  {
    "text": "container images they've been doing it for about 10 years um there's one for SDK so if you want to build you can use",
    "start": "1262320",
    "end": "1269280"
  },
  {
    "text": "a special uh image that has all the SDK tools you don't want to run that in",
    "start": "1269280",
    "end": "1274679"
  },
  {
    "text": "production you don't want to give hackers access to tools to recompile",
    "start": "1274679",
    "end": "1280240"
  },
  {
    "text": "stuff so you use that in development or in your pipeline to com compile your applications and then you can copy out",
    "start": "1280240",
    "end": "1287120"
  },
  {
    "text": "the bits that got compiled and use something like an asp or a runtime image",
    "start": "1287120",
    "end": "1292720"
  },
  {
    "text": "that just has the bits you need to execute ASP code or net code so this is",
    "start": "1292720",
    "end": "1297880"
  },
  {
    "text": "the idea behind multistage Docker files which we're going to talk about um who's familiar with Docker",
    "start": "1297880",
    "end": "1305320"
  },
  {
    "text": "files who uses them loves them hates them yeah so Docker files have all the steps to build your images U where you",
    "start": "1305320",
    "end": "1312840"
  },
  {
    "text": "pick your base image how you expose ports how you compile and copy files um",
    "start": "1312840",
    "end": "1318679"
  },
  {
    "text": "recommend making sure you have a dock ignore file and I'm a big fan of multi-stage builds you know the order",
    "start": "1318679",
    "end": "1325640"
  },
  {
    "text": "your steps are actually can influence uh caching so for instance if you copy over",
    "start": "1325640",
    "end": "1333520"
  },
  {
    "text": "your app code and nothing really changed cool if you do a restore and like well",
    "start": "1333520",
    "end": "1338799"
  },
  {
    "text": "the dependency is updated you know your app code might already be cached and it",
    "start": "1338799",
    "end": "1343840"
  },
  {
    "text": "just needs to make a new layer for ReStore and new layers for build so like if you the depending upon the order you",
    "start": "1343840",
    "end": "1349440"
  },
  {
    "text": "can improve caching and make things uh a lot faster and regularly rebuild things",
    "start": "1349440",
    "end": "1355600"
  },
  {
    "text": "so that you can get security issues so this is a Docker file just as a example before we start",
    "start": "1355600",
    "end": "1364120"
  },
  {
    "text": "running them so you can see at the top we're pulling from mc. microsoft.com so",
    "start": "1364120",
    "end": "1369600"
  },
  {
    "text": "that's the Microsoft container registry it has all of the the images that Microsoft puts out and we're actually",
    "start": "1369600",
    "end": "1376120"
  },
  {
    "text": "doing two stages so the top part we're getting the SDK and we're going to build",
    "start": "1376120",
    "end": "1381159"
  },
  {
    "text": "our code we copy it over from our current directory we do a restore we do a",
    "start": "1381159",
    "end": "1386640"
  },
  {
    "text": "publish and then we make a new container for the runtime with ASP and",
    "start": "1386640",
    "end": "1392120"
  },
  {
    "text": "we copy from our our build image to our our new image the app out folder and we",
    "start": "1392120",
    "end": "1397799"
  },
  {
    "text": "Define how we start our application I'm just saying net blah so this is a very",
    "start": "1397799",
    "end": "1403120"
  },
  {
    "text": "basic kind of standard Docker file um",
    "start": "1403120",
    "end": "1409360"
  },
  {
    "text": "they're okay there's also some new capabilities which I'm going to show you guys where",
    "start": "1409360",
    "end": "1414400"
  },
  {
    "text": "you don't even need to write Docker files anymore this is only works with Net 7 and net 8 where you can just",
    "start": "1414400",
    "end": "1420559"
  },
  {
    "text": "actually pass a flag to say publish container um and it will build a container without a Docker file you can",
    "start": "1420559",
    "end": "1426679"
  },
  {
    "text": "even push it to a registry and we're going to talk about some of the cool features where you can actually pick container families if you want to do",
    "start": "1426679",
    "end": "1432480"
  },
  {
    "text": "something like Alpine which is a smaller distribution than obuntu and then there's some additional options we can",
    "start": "1432480",
    "end": "1438840"
  },
  {
    "text": "do and another thing I'll show you is a so if you're trying to do net and you",
    "start": "1438840",
    "end": "1444279"
  },
  {
    "text": "want to containerize your app and you're not sure how to write that Docker file or how to create the Azure",
    "start": "1444279",
    "end": "1450000"
  },
  {
    "text": "infrastructure azd is the Azure developer CLI it can actually scan your",
    "start": "1450000",
    "end": "1455760"
  },
  {
    "text": "code say hey I found some services do you want me to run them as container apps you want me to run them on kubernetes you want me to run them as a",
    "start": "1455760",
    "end": "1461679"
  },
  {
    "text": "function do you need redus and it'll build the infrastructure for you and deploy the code so it it's a way that",
    "start": "1461679",
    "end": "1468000"
  },
  {
    "text": "you can get started um and I'll show you guys that and then of course Fowler and",
    "start": "1468000",
    "end": "1475080"
  },
  {
    "text": "Edwards Last Air to had a workshop and have had some sessions on net Aspire",
    "start": "1475080",
    "end": "1480120"
  },
  {
    "text": "which is a preview thing with net 8 it is a really new opinionated way of making Cloud native not net applications",
    "start": "1480120",
    "end": "1488200"
  },
  {
    "text": "and it's all container-based stuff so there are a lot of options to",
    "start": "1488200",
    "end": "1494080"
  },
  {
    "text": "get you started let's go play not enough slides sorry about that",
    "start": "1494080",
    "end": "1500320"
  },
  {
    "text": "so here's our Docker file you know I can net build and I can give it a tag",
    "start": "1500320",
    "end": "1508240"
  },
  {
    "text": "like sample API and just build",
    "start": "1508240",
    "end": "1515360"
  },
  {
    "text": "uh I'll just do this sorry got too many commands to remember",
    "start": "1515360",
    "end": "1523080"
  },
  {
    "text": "sometimes and so I had already built it previously so remember I said Docker caches the layers and remembers what's",
    "start": "1523080",
    "end": "1529919"
  },
  {
    "text": "there because I had already built an image and I had already pulled down net",
    "start": "1529919",
    "end": "1535360"
  },
  {
    "text": "like it instantly you know 0.0 seconds oh wait there was a three there where it loaded",
    "start": "1535360",
    "end": "1542159"
  },
  {
    "text": "the information so it's load loading all the different layers and then every single command inside my Docker file",
    "start": "1542159",
    "end": "1548600"
  },
  {
    "text": "makes a new layer like we talked about so that work deer where it's setting my",
    "start": "1548600",
    "end": "1554399"
  },
  {
    "text": "directory where it's copying over my files it's running restore now if I go and make a change let's say I just come",
    "start": "1554399",
    "end": "1561279"
  },
  {
    "text": "in here and change my file and do it again",
    "start": "1561279",
    "end": "1568080"
  },
  {
    "text": "you'll see it it's now doing the restore it's reusing all those cache layers and it's just doing the restore and build",
    "start": "1568080",
    "end": "1574000"
  },
  {
    "text": "because it detected that something changed on one of the layers as I was doing the build I've got an image now",
    "start": "1574000",
    "end": "1581480"
  },
  {
    "text": "cool what do I do with it so we can run it now this is where",
    "start": "1581480",
    "end": "1587039"
  },
  {
    "text": "things get a little more interesting usually when you get into Docker files and containerization and kubernetes the",
    "start": "1587039",
    "end": "1594039"
  },
  {
    "text": "bane of most people's existence is networking who loves",
    "start": "1594039",
    "end": "1599120"
  },
  {
    "text": "networking two people three people most problems are always networking or DNS or",
    "start": "1599120",
    "end": "1605919"
  },
  {
    "text": "caching which is kind of networking anyways when you um run applications uh",
    "start": "1605919",
    "end": "1613640"
  },
  {
    "text": "a lot of times they might expose a port you know when you're going to access the application um in Dockers sometimes you",
    "start": "1613640",
    "end": "1619120"
  },
  {
    "text": "have to map those ports and you say hey I know the container is listing on 880",
    "start": "1619120",
    "end": "1624200"
  },
  {
    "text": "like like so if I just do netr run so I'm not doing any a container I'm",
    "start": "1624200",
    "end": "1629240"
  },
  {
    "text": "just doing something locally it's compiling it's building it it's listing on",
    "start": "1629240",
    "end": "1634640"
  },
  {
    "text": "5133 or 5134 you know and I can",
    "start": "1634640",
    "end": "1640760"
  },
  {
    "text": "environment so I'm on Bullseye I'm running in WSL and my current user is V",
    "start": "1641720",
    "end": "1646880"
  },
  {
    "text": "code because I'm in a Dev container cool so I can stop that now if I want to",
    "start": "1646880",
    "end": "1653520"
  },
  {
    "text": "run the um Docker image there's a couple of",
    "start": "1653520",
    "end": "1658600"
  },
  {
    "text": "commands here I'm doing Docker run um saying it so interactive terminal",
    "start": "1658600",
    "end": "1664840"
  },
  {
    "text": "I'm saying R minus minus RM remove it when I'm done and then hey map Port 80",
    "start": "1664840",
    "end": "1671320"
  },
  {
    "text": "80 from my local computer into port 8080 inside the container this is called a",
    "start": "1671320",
    "end": "1676760"
  },
  {
    "text": "port mapping and then use the the tag sample API latest that's the one that",
    "start": "1676760",
    "end": "1682799"
  },
  {
    "text": "got built when I did my Docker file and so if I go to my",
    "start": "1682799",
    "end": "1688600"
  },
  {
    "text": "browser this is on Linux 12 book it's a different OS version It's using the same",
    "start": "1697279",
    "end": "1703080"
  },
  {
    "text": "Kel but it's using a different drro because I built it off of the sample thing and it's using it's a different",
    "start": "1703080",
    "end": "1708760"
  },
  {
    "text": "user so it's kind of its own complete thing it's gr as a different user it's",
    "start": "1708760",
    "end": "1713919"
  },
  {
    "text": "running on a different OS and I can like change this port mapping if I want so I",
    "start": "1713919",
    "end": "1719799"
  },
  {
    "text": "started it on Port 880 um the net eight images by default",
    "start": "1719799",
    "end": "1725840"
  },
  {
    "text": "will listen on Port 880 so maybe I want it to listen on",
    "start": "1725840",
    "end": "1731919"
  },
  {
    "text": "Port 9,000 locally and I want to redirect to me uh to port 8080 I can do",
    "start": "1731919",
    "end": "1742320"
  },
  {
    "text": "that so I'm still in the same image now I'm on Port 9,000 so the container",
    "start": "1744559",
    "end": "1750200"
  },
  {
    "text": "runtime and the systems around the container provide that configuration provide that mapping of ports and I'm",
    "start": "1750200",
    "end": "1756960"
  },
  {
    "text": "always getting the same thing I'm just wiring it up slightly different every time that's one of the ideas behind",
    "start": "1756960",
    "end": "1763000"
  },
  {
    "text": "containers you know don't need to ship my laptop I must ship the container and",
    "start": "1763000",
    "end": "1768480"
  },
  {
    "text": "because the files are immutable like pretty much every time I run it I'm getting a fresh copy of exactly what I",
    "start": "1768480",
    "end": "1776559"
  },
  {
    "text": "containerized all right so we got that that container cool we got the",
    "start": "1776600",
    "end": "1782679"
  },
  {
    "text": "um Docker file I mentioned you can do containerization without a Docker",
    "start": "1782679",
    "end": "1789799"
  },
  {
    "text": "file so here is a different project let me just show you there's no Docker file",
    "start": "1789799",
    "end": "1796760"
  },
  {
    "text": "over here I'm just going to print out some of that same information and what I can do is net",
    "start": "1796760",
    "end": "1802919"
  },
  {
    "text": "publish SLT publish",
    "start": "1802919",
    "end": "1809840"
  },
  {
    "text": "container andet is going to automatically kind of",
    "start": "1810919",
    "end": "1816320"
  },
  {
    "text": "figure out uh what I want and so it's using the",
    "start": "1816320",
    "end": "1821559"
  },
  {
    "text": "net runtime 80 like I I didn't really tell it anything and it pushed hello",
    "start": "1821559",
    "end": "1828919"
  },
  {
    "text": "containers latest to my local Docker",
    "start": "1828919",
    "end": "1834080"
  },
  {
    "text": "so see I can I can run my image as a container I didn't do any",
    "start": "1843000",
    "end": "1849720"
  },
  {
    "text": "Docker files I didn't do any writing okay cool well some other things that",
    "start": "1849720",
    "end": "1854799"
  },
  {
    "text": "they baked in which is really neat is you change your container uh tags and",
    "start": "1854799",
    "end": "1860720"
  },
  {
    "text": "you can change your base image so this time I'm telling it I want",
    "start": "1860720",
    "end": "1866799"
  },
  {
    "text": "to use I want to tag it Alpine so it's going to give it a extra tag called Alpine and it's going to use a container",
    "start": "1866799",
    "end": "1874360"
  },
  {
    "text": "family called Alpine so when it's doing its build it's going to try to use the Alpine build when it tries to do the the",
    "start": "1874360",
    "end": "1880679"
  },
  {
    "text": "runtime it'll try to do alpine and if you look right here runtime 80 Alpine it switched the base image based on command",
    "start": "1880679",
    "end": "1888360"
  },
  {
    "text": "line flag I gave it um a lot of people you who's heard of Alpine that isn't",
    "start": "1888360",
    "end": "1894120"
  },
  {
    "text": "really in the okay so Alpine tries to strip away as much stuff as you can and",
    "start": "1894120",
    "end": "1900000"
  },
  {
    "text": "get really small and one thing they do is they actually don't use lib C or GBC",
    "start": "1900000",
    "end": "1906320"
  },
  {
    "text": "which is the very standard C library they use a different implementation of a C library called musul C and so it has",
    "start": "1906320",
    "end": "1914320"
  },
  {
    "text": "some small incompatibilities for some applications so not Everyone likes using Alpine sometimes they do but sometimes",
    "start": "1914320",
    "end": "1920320"
  },
  {
    "text": "they like they try to use Ubuntu or or something smaller problem with Ubuntu is it has all this extra crap with it it's",
    "start": "1920320",
    "end": "1927159"
  },
  {
    "text": "got bass shell it's got curl and W get so you have all these Runner abilities if somebody can break out of your",
    "start": "1927159",
    "end": "1933480"
  },
  {
    "text": "application and cause a problem they might be able to get root or access to a shell and then download additional",
    "start": "1933480",
    "end": "1939480"
  },
  {
    "text": "things it can be a security problem so Alpine is a great way to help reduce",
    "start": "1939480",
    "end": "1944519"
  },
  {
    "text": "that landscape well the other thing that has come out with net 8 is there's been",
    "start": "1944519",
    "end": "1950159"
  },
  {
    "text": "some Partnerships with Ubuntu and Ubuntu has been pushing the idea of these",
    "start": "1950159",
    "end": "1956240"
  },
  {
    "text": "chiseled images which are kind of like drr lists and the idea of distrist is um",
    "start": "1956240",
    "end": "1962679"
  },
  {
    "text": "it doesn't have all that extra stuff might not have apt might not have a bash shell or WG get or curl or all those",
    "start": "1962679",
    "end": "1969880"
  },
  {
    "text": "extra things so it's going to have a lot less dependencies andet has worked with",
    "start": "1969880",
    "end": "1975200"
  },
  {
    "text": "them to make like just the runtime dependencies that's needed to make net run so they've tried to reduce the image",
    "start": "1975200",
    "end": "1981000"
  },
  {
    "text": "size is really really small um so I just built this one this is based on Jamie chiseled and if we",
    "start": "1981000",
    "end": "1987840"
  },
  {
    "text": "look at Docker",
    "start": "1987840",
    "end": "1991799"
  },
  {
    "text": "images we've got three images here we got the original one I built would just",
    "start": "1993639",
    "end": "2000639"
  },
  {
    "text": "publish we've got the Alpine one and the chiseled one and I don't know if you notied we cut it in half",
    "start": "2000639",
    "end": "2008639"
  },
  {
    "text": "so just the base like build it maybe it could be a little insecure but because it's based on a full OS it's based on",
    "start": "2008639",
    "end": "2015480"
  },
  {
    "text": "new buntu but we can reduce that down so now at 80 Megs that means it has my",
    "start": "2015480",
    "end": "2021480"
  },
  {
    "text": "application it has all of the net runtime that it needs to execute my application and so when I'm trying to",
    "start": "2021480",
    "end": "2028200"
  },
  {
    "text": "scale my image instead of pulling you know couple gigs for an OS I'm only",
    "start": "2028200",
    "end": "2034960"
  },
  {
    "text": "pulling a 80 Megs um to create a new application and on",
    "start": "2034960",
    "end": "2040799"
  },
  {
    "text": "today's infrastructure that's that that's crazy fast now something else to",
    "start": "2040799",
    "end": "2047519"
  },
  {
    "text": "be aware of um that they've been working on and some of the net 8 stuff",
    "start": "2047519",
    "end": "2053320"
  },
  {
    "text": "is and let me just show you this this is kind of",
    "start": "2053320",
    "end": "2058118"
  },
  {
    "text": "cool if this runs I might have pasted it weird",
    "start": "2059639",
    "end": "2065720"
  },
  {
    "text": "so uh and Cory makes a tool where you can look at packages and stuff inside of",
    "start": "2069399",
    "end": "2074800"
  },
  {
    "text": "of image files so in the runtime for.net there's 168",
    "start": "2074800",
    "end": "2082240"
  },
  {
    "text": "packages uh installed um that are net specific um if",
    "start": "2082240",
    "end": "2087839"
  },
  {
    "text": "we look at like Debian packages they're installed in the the runtime image and this is just the base like runtime like",
    "start": "2087839",
    "end": "2096000"
  },
  {
    "text": "you you're not trying to optim for size or space there's 92 packages um",
    "start": "2096000",
    "end": "2101480"
  },
  {
    "text": "so when you're thinking about security when you're thinking about trying to minimize",
    "start": "2101480",
    "end": "2107079"
  },
  {
    "text": "those you know entry points in your system that's you know 250 or so um now",
    "start": "2107079",
    "end": "2114640"
  },
  {
    "text": "if we look at some of those smaller images like that chiseled one I",
    "start": "2114640",
    "end": "2120320"
  },
  {
    "text": "talked about um and by the way Alpine is just a",
    "start": "2120320",
    "end": "2125359"
  },
  {
    "text": "open source kind of um community supported thing the Alpine or the auntu",
    "start": "2125359",
    "end": "2131359"
  },
  {
    "text": "chiseled stuff actually has like a support contract and like Microsoft and Ubuntu are supporting it for a number of",
    "start": "2131359",
    "end": "2137920"
  },
  {
    "text": "years so there there's some like long-term support on these type of images so there's still those uh net",
    "start": "2137920",
    "end": "2144320"
  },
  {
    "text": "packages but if we look at the net or the Deb and dependencies that are inside that image it goes down dramatically",
    "start": "2144320",
    "end": "2150119"
  },
  {
    "text": "from 92 to seven so there's only seven actual packages installed in that",
    "start": "2150119",
    "end": "2156760"
  },
  {
    "text": "besides net um so it's a much smaller attack surface",
    "start": "2156760",
    "end": "2162079"
  },
  {
    "text": "you know base file certificates Lipsy and SSL and a couple other things",
    "start": "2162079",
    "end": "2168960"
  },
  {
    "text": "so when you're trying to think about building these containers we can we can do some really interesting things",
    "start": "2168960",
    "end": "2175480"
  },
  {
    "text": "trying to keep them small now you know I kept mentioning you know it's got shells",
    "start": "2175480",
    "end": "2183520"
  },
  {
    "text": "yep you can change an entry point into a Docker file so when you say when you",
    "start": "2183520",
    "end": "2189920"
  },
  {
    "text": "have your Docker file and you're like hey my entry point is going to be net when you spin up my container run. net",
    "start": "2189920",
    "end": "2196560"
  },
  {
    "text": "you can actually give it a command line argument don't do that instead give me bash let me do a command line let me",
    "start": "2196560",
    "end": "2203079"
  },
  {
    "text": "play around with it so the base image where we were just based on Ubuntu has a shell I can look around it's got apt you",
    "start": "2203079",
    "end": "2210480"
  },
  {
    "text": "know it's got tools installed potentially or I can go get more tools um but you can also see it's not running",
    "start": "2210480",
    "end": "2217839"
  },
  {
    "text": "as root it's running as app so they've started changing a lot of the base images with net to not run as root so",
    "start": "2217839",
    "end": "2224400"
  },
  {
    "text": "that you're not just getting full access to the system it's a little bit reduced and it's a little bit more",
    "start": "2224400",
    "end": "2230359"
  },
  {
    "text": "secure you know if I try doing this",
    "start": "2230359",
    "end": "2234759"
  },
  {
    "text": "with the chiseled image it actually gives me an error because there's no",
    "start": "2235480",
    "end": "2241400"
  },
  {
    "text": "shell in that chiseled image so they've removed a lot of those tools that would",
    "start": "2241400",
    "end": "2246839"
  },
  {
    "text": "let you be able to get in there and poke around and let you be a lot lot smaller",
    "start": "2246839",
    "end": "2252359"
  },
  {
    "text": "attack surface so a lot of that work that chiseled the Alpine work was because the",
    "start": "2252359",
    "end": "2259359"
  },
  {
    "text": "net team and Microsoft have been getting feedback for 10 years on the container images they put out people kept saying",
    "start": "2259359",
    "end": "2264839"
  },
  {
    "text": "we want them smaller we want them faster we want them more secure like get rid of rout we want nonroot by default minimal",
    "start": "2264839",
    "end": "2272880"
  },
  {
    "text": "dependencies um they even have some packages where it doesn't include localization so if you're not doing uh",
    "start": "2272880",
    "end": "2279079"
  },
  {
    "text": "Global localization you can remove those packages make it even smaller and then you can add them back in if you need",
    "start": "2279079",
    "end": "2284280"
  },
  {
    "text": "them so you can you can do localization um the abunto chiseled uses the GC",
    "start": "2284280",
    "end": "2289800"
  },
  {
    "text": "versus Alpine's muel C lib C and they have support from both abunto and",
    "start": "2289800",
    "end": "2296000"
  },
  {
    "text": "Microsoft and so as you saw going from a full like Ubuntu Jammy down the chiseled",
    "start": "2296000",
    "end": "2305040"
  },
  {
    "text": "you can get a lot of size reduction and Net 7 and 8 actually added a bunch of",
    "start": "2305040",
    "end": "2310200"
  },
  {
    "text": "other capabilities you can add on top of that which I'm not really going to go into but you can do trimming you can do",
    "start": "2310200",
    "end": "2317040"
  },
  {
    "text": "aot compilation so you you can actually compile it down to like native code for like x86 and actually bring it down to",
    "start": "2317040",
    "end": "2323760"
  },
  {
    "text": "like single digits if you want so you like if you're trying to get super small super fast super scalable you can keep",
    "start": "2323760",
    "end": "2331240"
  },
  {
    "text": "tweaking stuff and get a lot smaller if you want and so this is what I was talking about like when you have some",
    "start": "2331240",
    "end": "2337200"
  },
  {
    "text": "BAS images you've got your base OS you've got additional runtime dependencies and the runtime and the SDK",
    "start": "2337200",
    "end": "2344839"
  },
  {
    "text": "and it it gets it can get big so when you start doing chiseled like you can really get a lot smaller as we saw like",
    "start": "2344839",
    "end": "2352079"
  },
  {
    "text": "around 80 gigs or 80 Megs um running as a different user now you you can uh if",
    "start": "2352079",
    "end": "2358960"
  },
  {
    "text": "you want you can override the user if you need to so we were seeing that this",
    "start": "2358960",
    "end": "2364359"
  },
  {
    "text": "one is running a app so I can pass",
    "start": "2364359",
    "end": "2370720"
  },
  {
    "text": "um minus minus user route and I can't put it back there are",
    "start": "2371000",
    "end": "2376440"
  },
  {
    "text": "some weird behaviors that some people report um like in your application like if you're trying to do certain things",
    "start": "2376440",
    "end": "2382000"
  },
  {
    "text": "with files or you're trying to do um certain accesses if it um expected rout",
    "start": "2382000",
    "end": "2388119"
  },
  {
    "text": "and you're now running as a non-root user it and it blows up you you can you can put it back um so that's not that",
    "start": "2388119",
    "end": "2395319"
  },
  {
    "text": "big of a deal next I want to um and I I will bring up",
    "start": "2395319",
    "end": "2401040"
  },
  {
    "text": "cicd we will go look at pipelines we still got plenty of time um but I want to talk about",
    "start": "2401040",
    "end": "2406160"
  },
  {
    "text": "configuration so there's a couple ways to configure things I do a talk on net",
    "start": "2406160",
    "end": "2411560"
  },
  {
    "text": "configuration so when you went from framework to net core 678 they",
    "start": "2411560",
    "end": "2417440"
  },
  {
    "text": "completely revamped the configuration system uh it uses configuration sources and configuration providers and it",
    "start": "2417440",
    "end": "2424160"
  },
  {
    "text": "unifies everything into a configuration this can come from environment variables",
    "start": "2424160",
    "end": "2429359"
  },
  {
    "text": "those app settings Json there's libraries you can plug in for Azure app config you can do key Vault you have all",
    "start": "2429359",
    "end": "2436520"
  },
  {
    "text": "sorts of capabilities to pass things when we're talking about Cloud native applications stuff running in Docker",
    "start": "2436520",
    "end": "2443040"
  },
  {
    "text": "stuff running in kubernetes a lot of times you're going to pass environment variables in your spec files",
    "start": "2443040",
    "end": "2450119"
  },
  {
    "text": "um so you know these are the easy peasy",
    "start": "2450119",
    "end": "2455200"
  },
  {
    "text": "like you can just add environment variables I'm not a big fan of doing a lot of stuff with environment variables I'm I I'll do as little as possible to",
    "start": "2455200",
    "end": "2462800"
  },
  {
    "text": "configure it so if that means pointing it at an app config endpoint or pointing it at a host that it can then do",
    "start": "2462800",
    "end": "2469560"
  },
  {
    "text": "additional stuff cool I try not to use Secrets whenever possible so with modern",
    "start": "2469560",
    "end": "2475599"
  },
  {
    "text": "Cloud platforms like AKs with container apps with app service you can do managed identities so you can have ex uh",
    "start": "2475599",
    "end": "2483000"
  },
  {
    "text": "explicit Like arback rules in Federation where you say this workload the set of containers this app is allowed to talk",
    "start": "2483000",
    "end": "2490400"
  },
  {
    "text": "to this database and read only or it can make inserts and and updates or it can read",
    "start": "2490400",
    "end": "2496760"
  },
  {
    "text": "this file system so you don't need connection strings with Secrets it's more about you set up the host to have",
    "start": "2496760",
    "end": "2502920"
  },
  {
    "text": "an identity and allow that identity to have access so I hate this example but it's",
    "start": "2502920",
    "end": "2510240"
  },
  {
    "text": "an example I've scene where you have hey here's my environment I'm going to have",
    "start": "2510240",
    "end": "2515319"
  },
  {
    "text": "a connection string and so when the application starts up that environment will be injected into like that'll be",
    "start": "2515319",
    "end": "2521240"
  },
  {
    "text": "part of the container and so when the application starts up it'll see that loaded into the configuration and be",
    "start": "2521240",
    "end": "2526520"
  },
  {
    "text": "able to access it I don't like that but that's what a lot of people do when",
    "start": "2526520",
    "end": "2531680"
  },
  {
    "text": "you're doing kubernetes you know you define your image and maybe you put some environment",
    "start": "2531680",
    "end": "2538280"
  },
  {
    "text": "variables there again I some non stuff like non secret stuff like this yeah I",
    "start": "2538280",
    "end": "2545920"
  },
  {
    "text": "prefer using Azure app config because I can just give it a host for Azure app",
    "start": "2545920",
    "end": "2551000"
  },
  {
    "text": "config and the identity will let it authenticate and then I can have all of my non secret stuff accessible there and",
    "start": "2551000",
    "end": "2557839"
  },
  {
    "text": "that lets me do feature flags and feature toggles and net supports hot reload on that configuration stop so you",
    "start": "2557839",
    "end": "2565079"
  },
  {
    "text": "can like do a feature flag and that that will just pick it up and respond to the change without having to restart and and",
    "start": "2565079",
    "end": "2571000"
  },
  {
    "text": "reload your containers another thing that you can do is like app config can have key back",
    "start": "2571000",
    "end": "2577559"
  },
  {
    "text": "secrets so you can do all that but when we're dealing with kubernetes a lot of",
    "start": "2577559",
    "end": "2583280"
  },
  {
    "text": "times we use something called the CSI Secret store driver and you can use Azure key volt as",
    "start": "2583280",
    "end": "2589640"
  },
  {
    "text": "a backing store for that which means all your secrets are in Key volt and they get mounted into kubernetes kind of as a",
    "start": "2589640",
    "end": "2597119"
  },
  {
    "text": "file system and net can pick up on that and use those Secrets um and so that's where you can",
    "start": "2597119",
    "end": "2603280"
  },
  {
    "text": "put certificates and secret files and connection strings and and you know passwords and all the things that you",
    "start": "2603280",
    "end": "2610000"
  },
  {
    "text": "don't want pasted as a text string into a kubernetes manifest base 64 encoded is",
    "start": "2610000",
    "end": "2616280"
  },
  {
    "text": "a secret yeah so kubernetes secrets are just B 64 encoded they're really hard to",
    "start": "2616280",
    "end": "2623640"
  },
  {
    "text": "crack yeah don't do that don't use them um so the Secret store is really good um",
    "start": "2623640",
    "end": "2629319"
  },
  {
    "text": "it just it'll automatically Mount the stuff when you have it configured right you can use managed identities to to",
    "start": "2629319",
    "end": "2634920"
  },
  {
    "text": "back it by key Vault and it makes things a lot easier so like that's how I do a",
    "start": "2634920",
    "end": "2640319"
  },
  {
    "text": "lot of Secrets and there's good documentation I'll pull it up momentarily so let me just do",
    "start": "2640319",
    "end": "2648079"
  },
  {
    "text": "that so if I just look up CSI if I can type Secret",
    "start": "2648079",
    "end": "2656318"
  },
  {
    "text": "store see kubernetes CSI Secret store driver um and there's lots of",
    "start": "2659960",
    "end": "2666480"
  },
  {
    "text": "documentation on using it and providers and we have you know different providers",
    "start": "2666480",
    "end": "2672720"
  },
  {
    "text": "that you can leverage and all sorts of stuff you can do with it so that is what",
    "start": "2672720",
    "end": "2677839"
  },
  {
    "text": "I would recommend and all right so security",
    "start": "2677839",
    "end": "2685800"
  },
  {
    "text": "yeah uh they support manage identities and you can uh connect them out to uh",
    "start": "2688079",
    "end": "2694640"
  },
  {
    "text": "keyal um I gotta double check on the Secret store I don't think so they do",
    "start": "2694640",
    "end": "2700960"
  },
  {
    "text": "support Dapper uh for a lot of stuff and you can use Dapper to securely get um connect to the Secret store",
    "start": "2700960",
    "end": "2707440"
  },
  {
    "text": "though yeah so I'm going to show you in the pipelines um but you can run a lot",
    "start": "2707440",
    "end": "2713000"
  },
  {
    "text": "of scanning on your container images now this will scan both the base images it'll scan the layers it'll see if",
    "start": "2713000",
    "end": "2719079"
  },
  {
    "text": "there's a cve or vulnerability in there um Microsoft has Defender for um",
    "start": "2719079",
    "end": "2725280"
  },
  {
    "text": "container Registries and Defender for contain ERS we also have um that uses qualus but there's also a lot of",
    "start": "2725280",
    "end": "2731480"
  },
  {
    "text": "providers out there that do security scanning sneak trivy uh even Docker scan",
    "start": "2731480",
    "end": "2737839"
  },
  {
    "text": "can tell you if you're using insecure base images that have vulnerabilities in like wget or in C library or Li SSL um",
    "start": "2737839",
    "end": "2746240"
  },
  {
    "text": "and so I incorporate those into my pipelines to scan before I push up to the cloud um and I already went",
    "start": "2746240",
    "end": "2754800"
  },
  {
    "text": "through the users so let me go out to the pipelines and show you what I'm",
    "start": "2754800",
    "end": "2761000"
  },
  {
    "text": "talking",
    "start": "2761000",
    "end": "2763280"
  },
  {
    "text": "about yep so this is my GitHub for this talk and so one uh",
    "start": "2766359",
    "end": "2775319"
  },
  {
    "text": "couple things first I'm using dependabot so if you're on GitHub sub dependabot it",
    "start": "2775319",
    "end": "2782200"
  },
  {
    "text": "can scan your Docker files it can scan your net code it can tell you if you're using older libraries and submit PRS",
    "start": "2782200",
    "end": "2788760"
  },
  {
    "text": "against them it can also scan your GitHub workflows and tell you if your GitHub actions are out of date and and",
    "start": "2788760",
    "end": "2795640"
  },
  {
    "text": "submit PRS against your GitHub workflows so that you're using the latest tasks",
    "start": "2795640",
    "end": "2801520"
  },
  {
    "text": "um so I I made a couple of workflows here um first",
    "start": "2801520",
    "end": "2807000"
  },
  {
    "text": "one this actually came from part of it came from uh GitHub",
    "start": "2807000",
    "end": "2812640"
  },
  {
    "text": "because you can say I want a new container workflow and it'll do stuff like this where it'll install cosign so it can actually sign your container",
    "start": "2812640",
    "end": "2820000"
  },
  {
    "text": "images like with a hash and then it sets up buildex so who has a",
    "start": "2820000",
    "end": "2828240"
  },
  {
    "text": "Mac M1 Mac who had problems with containers or",
    "start": "2828240",
    "end": "2833359"
  },
  {
    "text": "python or certain languages with an M1 Mac uhhuh yeah so architectures are a",
    "start": "2833359",
    "end": "2839079"
  },
  {
    "text": "big thing um a lot of container systems in the cloud assume you're running x86",
    "start": "2839079",
    "end": "2844680"
  },
  {
    "text": "but if you're trying to build images locally like with ar 64 like off of a a Mac um you couldn't really push it and",
    "start": "2844680",
    "end": "2851960"
  },
  {
    "text": "have it execute up to the cloud it was it was it was a pain in the butt um and so it was also hard sometimes to compile",
    "start": "2851960",
    "end": "2858720"
  },
  {
    "text": "x86 code on an arm or arm code on an x86 uh Docker buildex um will let you do",
    "start": "2858720",
    "end": "2865359"
  },
  {
    "text": "those cross compile and let you like build images for other architectures very easily um and there's an a task",
    "start": "2865359",
    "end": "2872359"
  },
  {
    "text": "called Docker log on action you can use this to log on to docker Hub Azure",
    "start": "2872359",
    "end": "2878079"
  },
  {
    "text": "container registry uh AWS Google GitHub whatever it sets all the",
    "start": "2878079",
    "end": "2885040"
  },
  {
    "text": "docker context you need and so I have for from ACR I have the ACR name which",
    "start": "2885040",
    "end": "2891000"
  },
  {
    "text": "is my Docker login server and my my authentication to log in um and I can just use something like",
    "start": "2891000",
    "end": "2898319"
  },
  {
    "text": "build push and this will actually build my image and push it up to the registry for me as part of my",
    "start": "2898319",
    "end": "2904920"
  },
  {
    "text": "pipeline but I told it I don't you to push I just want you to build it locally because I want to run some tests before",
    "start": "2904920",
    "end": "2910960"
  },
  {
    "text": "we push it to the cloud so you can do like a build do some tests and scanning on the build agent or locally and then",
    "start": "2910960",
    "end": "2917280"
  },
  {
    "text": "push it up only if it passes your criteria of quality so I'm running trivy",
    "start": "2917280",
    "end": "2923000"
  },
  {
    "text": "so trivy is a tool from Aqua security they have a lot of great stuff against",
    "start": "2923000",
    "end": "2928119"
  },
  {
    "text": "like terraform and bicep and kubernetes uh but it can do file scanning and image",
    "start": "2928119",
    "end": "2933599"
  },
  {
    "text": "scanning and so I told it hey go scan the IM that you just built and then if",
    "start": "2933599",
    "end": "2940599"
  },
  {
    "text": "everything is good push it up to ACR and if it's prod you can sign it so you have",
    "start": "2940599",
    "end": "2947960"
  },
  {
    "text": "a lot of capabilities you can do um pointing at like a Docker",
    "start": "2947960",
    "end": "2953280"
  },
  {
    "text": "file we also talked about those new",
    "start": "2953280",
    "end": "2958440"
  },
  {
    "text": "um net capabilities so I can just actually check out my code set up",
    "start": "2958440",
    "end": "2965160"
  },
  {
    "text": "caching log into docker and do that net publish and tell it Go",
    "start": "2965160",
    "end": "2970760"
  },
  {
    "text": "publish to this registry give it this tag and so if we want to see those run",
    "start": "2970760",
    "end": "2978079"
  },
  {
    "text": "you know let's start with the docker",
    "start": "2978079",
    "end": "2984359"
  },
  {
    "text": "image looks like I broke something at some point we'll find out",
    "start": "2988079",
    "end": "2994040"
  },
  {
    "text": "but these are all pretty standard images you can see it's uh building and",
    "start": "2997839",
    "end": "3003079"
  },
  {
    "text": "extracting and built my",
    "start": "3003079",
    "end": "3008160"
  },
  {
    "text": "image A lot of it was cached it looks",
    "start": "3008160",
    "end": "3012760"
  },
  {
    "text": "like you can see it loading the different layers and stuff now it's running a trivy scan so trivy downloads",
    "start": "3020200",
    "end": "3027520"
  },
  {
    "text": "a database of vulnerabilities so it was like downloading that and it says it",
    "start": "3027520",
    "end": "3033520"
  },
  {
    "text": "uh was detecting vulnerabilities and it kind of has a a Json array where it's it's telling you like hey maybe this",
    "start": "3033520",
    "end": "3040119"
  },
  {
    "text": "package should be updated or or this package so it's giving you all that",
    "start": "3040119",
    "end": "3045920"
  },
  {
    "text": "information and it actually will load this into the uh dependency graph inside of GitHub me get down to the last step",
    "start": "3045920",
    "end": "3053880"
  },
  {
    "text": "so now it's it's pushing it up to the class low",
    "start": "3053880",
    "end": "3059720"
  },
  {
    "text": "so it pushed up my image so this went out to my ACR sample Main and if I go",
    "start": "3059920",
    "end": "3065520"
  },
  {
    "text": "out to Azure here is my Azure container",
    "start": "3065520",
    "end": "3072680"
  },
  {
    "text": "registry and it just pushed one uh couple seconds ago so my pipeline can",
    "start": "3073680",
    "end": "3081720"
  },
  {
    "text": "do that um and when I'm building Docker I can do that locally but there's some other capab I have you know not everyone",
    "start": "3081720",
    "end": "3088799"
  },
  {
    "text": "has a Docker installed locally sometimes you you might want to just have a",
    "start": "3088799",
    "end": "3095240"
  },
  {
    "text": "different host build it for you uh ACR does have the capability to am I in the right folder",
    "start": "3095240",
    "end": "3102920"
  },
  {
    "text": "in the wrong folder it can actually build stuff for you so if you're like trying to get",
    "start": "3102920",
    "end": "3109319"
  },
  {
    "text": "started in a container and your machine doesn't have Docker you're not allowed to use Docker and you're trying to build",
    "start": "3109319",
    "end": "3115160"
  },
  {
    "text": "it you can actually have ACR build it for you the Azure container registry and then you can set up ACR tasks where",
    "start": "3115160",
    "end": "3121119"
  },
  {
    "text": "it'll automatically monitor your GitHub repo or your devops repo and just build your images if it detects a base image",
    "start": "3121119",
    "end": "3127960"
  },
  {
    "text": "update so if like bun you got updated it would just rebuild your image if you wanted it to or if you made a code",
    "start": "3127960",
    "end": "3133559"
  },
  {
    "text": "change it could rebuild your images and then it'll run security scans inside of it so it's zipping and uploading my",
    "start": "3133559",
    "end": "3139799"
  },
  {
    "text": "stuff and it's going to build it in",
    "start": "3139799",
    "end": "3144839"
  },
  {
    "text": "ACR so that's like a pipeline for GitHub let me bring up a pipeline for uh Azure",
    "start": "3144839",
    "end": "3150880"
  },
  {
    "text": "devops just to show a",
    "start": "3150880",
    "end": "3154759"
  },
  {
    "text": "sample this comes up there we",
    "start": "3157760",
    "end": "3162200"
  },
  {
    "text": "go so here's an AC ACA demo",
    "start": "3165040",
    "end": "3170440"
  },
  {
    "text": "actually and you can do some really interesting things with devops pipelines",
    "start": "3174680",
    "end": "3179920"
  },
  {
    "text": "um you can you can pass connection strings as as parameters you can pass variable",
    "start": "3179920",
    "end": "3186880"
  },
  {
    "text": "groups as parameters and tags so I have a template here to build Docker where I'm going to give it the path to my",
    "start": "3186880",
    "end": "3192240"
  },
  {
    "text": "Docker file I'm going to give it the name of the ACR and like my connection string these kind of got to be hardcoded",
    "start": "3192240",
    "end": "3199440"
  },
  {
    "text": "at the top level for approvals but on once that happens um you know you can",
    "start": "3199440",
    "end": "3205440"
  },
  {
    "text": "use it inside of a templ so this has just almost like the other",
    "start": "3205440",
    "end": "3212640"
  },
  {
    "text": "ones I've got a Docker build task and I can just give it the connection string",
    "start": "3212640",
    "end": "3218240"
  },
  {
    "text": "the name of the image repo so I'm using sample API that's the name of my image and I'm giving it some tags like latest",
    "start": "3218240",
    "end": "3225799"
  },
  {
    "text": "or Main and so all of this just automatically can can build I can tell",
    "start": "3225799",
    "end": "3231960"
  },
  {
    "text": "it if I want to do a trivy scan in there and then I can push it um up to my ACR",
    "start": "3231960",
    "end": "3238559"
  },
  {
    "text": "so you have all these capabilities to if you can do it on the command line you can easily do it in GitHub you can easily do it in aure devops to um build",
    "start": "3238559",
    "end": "3246520"
  },
  {
    "text": "those images and push them and we got about five minutes left",
    "start": "3246520",
    "end": "3252319"
  },
  {
    "text": "if anybody has some questions but uh yeah see there's that one I did from the",
    "start": "3252319",
    "end": "3259119"
  },
  {
    "text": "command line you can see I have a a hash um I",
    "start": "3259119",
    "end": "3264480"
  },
  {
    "text": "can uh something else should point out that I like doing is there's a Docker extension for visual",
    "start": "3264480",
    "end": "3272200"
  },
  {
    "text": "studio code if you you haven't been playing with that and you can actually come in and you can you know you can see",
    "start": "3272200",
    "end": "3278799"
  },
  {
    "text": "your images you can you know inspect your",
    "start": "3278799",
    "end": "3284640"
  },
  {
    "text": "containers you can run your containers you can um you get information about",
    "start": "3284640",
    "end": "3290000"
  },
  {
    "text": "your Docker files you can build Docker files just by like right clicking on them",
    "start": "3290000",
    "end": "3295319"
  },
  {
    "text": "um so build image so there's some really cool capabilities in that um you can connect",
    "start": "3295319",
    "end": "3302440"
  },
  {
    "text": "to your uh container Registries and you can see the different versions you can run",
    "start": "3302440",
    "end": "3309559"
  },
  {
    "text": "containers and and interact with them so the docker extension of Visual Studio code is really good and then if you're",
    "start": "3309559",
    "end": "3316640"
  },
  {
    "text": "building new projects in 20 Visual Studio 2022 and I think this goes back to 2019 and maybe",
    "start": "3316640",
    "end": "3322640"
  },
  {
    "text": "2017 if you create a new project and you're like I want to an asp",
    "start": "3322640",
    "end": "3329079"
  },
  {
    "text": "project again sorry for the font I'll try to zoom it in a second so I'm going",
    "start": "3329079",
    "end": "3334440"
  },
  {
    "text": "to do a web API here",
    "start": "3334440",
    "end": "3340920"
  },
  {
    "text": "next it doesn't Zoom so let's try this",
    "start": "3343200",
    "end": "3349400"
  },
  {
    "text": "yeah enable Docker you can just check the box it'll make Docker files for you",
    "start": "3349400",
    "end": "3354520"
  },
  {
    "text": "there um yes they exist um so you you can just check that box and it's pretty",
    "start": "3354520",
    "end": "3362039"
  },
  {
    "text": "cool so with that me Zoom back out for one there we",
    "start": "3362039",
    "end": "3369119"
  },
  {
    "text": "go questions comments",
    "start": "3369119",
    "end": "3374160"
  },
  {
    "text": "anybody yes",
    "start": "3375680",
    "end": "3378920"
  },
  {
    "text": "sir one of the big um the question was when you pick Alpine or chisel is there",
    "start": "3383920",
    "end": "3389000"
  },
  {
    "text": "any reason to use one over the other um the big reason between them is that that base C library that Alpine has built",
    "start": "3389000",
    "end": "3395920"
  },
  {
    "text": "around muil C versus GBC which is in auntu in most common Li Linux",
    "start": "3395920",
    "end": "3401640"
  },
  {
    "text": "distributions there are some small incompatibilities so if you're pulling lots of libraries and doing lots of",
    "start": "3401640",
    "end": "3407359"
  },
  {
    "text": "third party dependencies you can get weird Behavior sometimes in Alpine and there's a reason that some people fall",
    "start": "3407359",
    "end": "3413480"
  },
  {
    "text": "back to like using a full-blown auntu but that has other security problems so chiseled is kind of a good middle ground",
    "start": "3413480",
    "end": "3420680"
  },
  {
    "text": "but then like if chiseled is the same size that just I don't really SE the point to using",
    "start": "3420680",
    "end": "3427000"
  },
  {
    "text": "Alon good point yeah H I wonder why I showed CH",
    "start": "3427039",
    "end": "3432559"
  },
  {
    "text": "chiseled other questions we got one over there uh in the",
    "start": "3432559",
    "end": "3438640"
  },
  {
    "text": "back hey um when net announced the chiseled images we looked into it to see",
    "start": "3438640",
    "end": "3444440"
  },
  {
    "text": "if we can use it but one thing we kept running into is Docker container health checks so because it's so",
    "start": "3444440",
    "end": "3450440"
  },
  {
    "text": "chiseled we couldn't really figure out a way of how to do health checks OHS we really need those health checks",
    "start": "3450440",
    "end": "3457559"
  },
  {
    "text": "yeah so in mine I um actually added health checks I just added a really simple predicate to say it was ready or",
    "start": "3457559",
    "end": "3465280"
  },
  {
    "text": "not ready so if I were to um go back",
    "start": "3465280",
    "end": "3472078"
  },
  {
    "text": "and publish this one in chiseled and I'll run it but I I have",
    "start": "3473280",
    "end": "3479559"
  },
  {
    "text": "both Readiness and liveness probes so one thing that's really important in containers especially kubernetes and scalable systems having these probes",
    "start": "3479559",
    "end": "3486880"
  },
  {
    "text": "that tell you if the container is ready or if it's live so what that means is as",
    "start": "3486880",
    "end": "3492720"
  },
  {
    "text": "it's spinning up you don't want to start sending traffic to a bad node or node that's initializing so the system will",
    "start": "3492720",
    "end": "3497799"
  },
  {
    "text": "check these end points um to see if it's ready and so by leveraging those so let",
    "start": "3497799",
    "end": "3503400"
  },
  {
    "text": "me minimize that one let me bring this one up and let me just run this guy real",
    "start": "3503400",
    "end": "3511640"
  },
  {
    "text": "quick there we",
    "start": "3514319",
    "end": "3517760"
  },
  {
    "text": "go Port 9,000 open browser so I can say hey are you ready should say good are you live",
    "start": "3519880",
    "end": "3529640"
  },
  {
    "text": "oh anyways you you can set them up with health tracks using that that stuff I didn't run into problems when I was",
    "start": "3529640",
    "end": "3535119"
  },
  {
    "text": "doing it but it depend on the complexity of the health check you're trying to do yeah for us the health check it's the",
    "start": "3535119",
    "end": "3540240"
  },
  {
    "text": "actual Docker health check so oh you're actually hitting Docker yeah so ACS that",
    "start": "3540240",
    "end": "3546359"
  },
  {
    "text": "because it looks at that to figure out whether your service is unhealthy and whether to redeploy a new",
    "start": "3546359",
    "end": "3552640"
  },
  {
    "text": "version so you're not actually hitting your application endpoint you're actually you're interrogating the docker",
    "start": "3552640",
    "end": "3558359"
  },
  {
    "text": "runtime yeah that's what kubernetes does and that's what Docker compose does so",
    "start": "3558359",
    "end": "3564520"
  },
  {
    "text": "um seems",
    "start": "3564520",
    "end": "3568039"
  },
  {
    "text": "you know that's why people have endpoints on their apps the say if live",
    "start": "3570000",
    "end": "3575599"
  },
  {
    "text": "says false or not respond then you just assume it's dead and kill",
    "start": "3575599",
    "end": "3580640"
  },
  {
    "text": "it so uh other questions we got one up",
    "start": "3580640",
    "end": "3587280"
  },
  {
    "text": "here a lot of Shar projects um I had to basically my build",
    "start": "3589200",
    "end": "3596200"
  },
  {
    "text": "pipeline for every make file for every one of my projects keep on copying the",
    "start": "3596200",
    "end": "3601760"
  },
  {
    "text": "same shared projects that is okay so the question",
    "start": "3601760",
    "end": "3606839"
  },
  {
    "text": "around that uh I'm actually G to go to a different project because I had somebody who asked me this and this is more of a",
    "start": "3606839",
    "end": "3615160"
  },
  {
    "text": "just a Dev opsy type question that applies to GitHub or devops or mono repos versus multi repos is let's say",
    "start": "3615160",
    "end": "3622319"
  },
  {
    "text": "you have a project with multiple web endpoints or something inside of there",
    "start": "3622319",
    "end": "3627880"
  },
  {
    "text": "and you have one big solution that you use was this the scenario you're talking about correct H never heard it before um",
    "start": "3627880",
    "end": "3635640"
  },
  {
    "text": "so maybe I actually want to set up a different repo that has all of my shared",
    "start": "3635640",
    "end": "3641720"
  },
  {
    "text": "templates something like this where you know I can reuse these across all of my",
    "start": "3641720",
    "end": "3646880"
  },
  {
    "text": "projects and then in this project you're right you do have to do something stupid and annoying",
    "start": "3646880",
    "end": "3652839"
  },
  {
    "text": "where you know per project you're just pass ing in like a build config that",
    "start": "3652839",
    "end": "3658400"
  },
  {
    "text": "says only build this one thing and only publish this one thing because if you do a net publish it will publish all of the",
    "start": "3658400",
    "end": "3664920"
  },
  {
    "text": "endpoints and all of the projects and you want to only publish one so you",
    "start": "3664920",
    "end": "3670599"
  },
  {
    "text": "there's ways around ites it's annoying does the uh Net 7 and I tooling with",
    "start": "3670599",
    "end": "3677640"
  },
  {
    "text": "that uh it it's just kind of an inherent thing with Solutions and CS project files like when you say publish yeah",
    "start": "3677640",
    "end": "3683960"
  },
  {
    "text": "like in the Zippo web project you you it's not super intelligent sometimes",
    "start": "3683960",
    "end": "3690760"
  },
  {
    "text": "yeah I was mainly just doing it to get a efficient build of multiple projects use",
    "start": "3690760",
    "end": "3697720"
  },
  {
    "text": "build configurations and tell certain projects not to build make multiple ones and then you can do what I did which is",
    "start": "3697720",
    "end": "3705359"
  },
  {
    "text": "like pass that stuff into templates and that way you minimize the ReUse and the How I build how I test how I validate",
    "start": "3705359",
    "end": "3712400"
  },
  {
    "text": "how I security scan is all isolated in this one template and so when I have an improvement or a change in my process",
    "start": "3712400",
    "end": "3718599"
  },
  {
    "text": "everybody benefits thank you yep any other questions we got we're probably like a",
    "start": "3718599",
    "end": "3725039"
  },
  {
    "text": "minute or two over but um all right well can I get a selfie",
    "start": "3725039",
    "end": "3731400"
  },
  {
    "text": "with you guys before you go is that all right it's my first time here in Australia I figure I might as well make",
    "start": "3731400",
    "end": "3737079"
  },
  {
    "text": "a count everybody say",
    "start": "3737079",
    "end": "3741359"
  },
  {
    "text": "hi thank you guys I really appreciate you coming don't forget to put the greens in the Box on your",
    "start": "3742760",
    "end": "3751760"
  }
]