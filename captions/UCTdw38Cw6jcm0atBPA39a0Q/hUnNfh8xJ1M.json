[
  {
    "text": "and I believe we're good to go good afternoon it's good to see you all still around",
    "start": "1620",
    "end": "7500"
  },
  {
    "text": "I was already expecting like we're getting close to the end and I see people with suitcases passing by thinking like oh they're leaving they're",
    "start": "7500",
    "end": "13320"
  },
  {
    "text": "missing out on this talk but I'm happy to see you here today this is our next hour is going to",
    "start": "13320",
    "end": "18720"
  },
  {
    "text": "be all about webassembling combination without net I want to emphasize um it's a lot webassembly security as",
    "start": "18720",
    "end": "24359"
  },
  {
    "text": "well so it's not only.net um just the residents who in this room works with.net on a daily basis I think",
    "start": "24359",
    "end": "31619"
  },
  {
    "text": "most of the other side yes you're the Right audience so we're going to talk about technology Stacks that you can use",
    "start": "31619",
    "end": "37680"
  },
  {
    "text": "on webassembly but that can literally be everything right but I'm gonna get that once we're going to do some demos and",
    "start": "37680",
    "end": "43020"
  },
  {
    "text": "work through all the stuff so that's cool okay cool um using webassembly to run extend",
    "start": "43020",
    "end": "48059"
  },
  {
    "text": "secure your.net application first who am I introductionary slide with a big picture",
    "start": "48059",
    "end": "54180"
  },
  {
    "text": "so my name is Neil Stanis and I work as a security researcher for vericoat I have a background.net development which",
    "start": "54180",
    "end": "59879"
  },
  {
    "text": "I've done for like over a decade and I moved into the security space where I did security consultancy some ethical I",
    "start": "59879",
    "end": "65338"
  },
  {
    "text": "can pen testing and right now I'm combining all of that in my role at very code so you probably know the very good",
    "start": "65339",
    "end": "70680"
  },
  {
    "text": "aesthetic analysis and if you're doing stuff with.net and very code then you should talk to me because that's what I",
    "start": "70680",
    "end": "76619"
  },
  {
    "text": "do as well I'm not going to talk about vertical anymore if you want to talk more about us then come see me",
    "start": "76619",
    "end": "82439"
  },
  {
    "text": "afterwards because today's subject will be webassembly right and if you go to webassembly.org and if",
    "start": "82439",
    "end": "88020"
  },
  {
    "text": "you check out the first let's say high level goals you'll see that it's a portable binary format that will serve",
    "start": "88020",
    "end": "94860"
  },
  {
    "text": "as a compilation Target that can literally run everywhere it's also high performance",
    "start": "94860",
    "end": "101220"
  },
  {
    "text": "should be really secure by default so when this was introduced I think there",
    "start": "101220",
    "end": "107220"
  },
  {
    "text": "was 2017 when webassembly was a 1.0 or something that everybody calls MVP it",
    "start": "107220",
    "end": "112920"
  },
  {
    "text": "was released for all major browsers so you can run webassembly inside your browser",
    "start": "112920",
    "end": "118020"
  },
  {
    "text": "I think the first glimpses of webassembly itself was 2015 the people from Mozilla Firefox started out some of",
    "start": "118020",
    "end": "124439"
  },
  {
    "text": "the bits and pieces and it of course originated from some other web components which I'm not going to spend too much time on but webassembly itself",
    "start": "124439",
    "end": "130619"
  },
  {
    "text": "what happened after this was done existing code basis were compiled to",
    "start": "130619",
    "end": "136560"
  },
  {
    "text": "webassembly right so if you take a Seco base and if you take a tool called M scripting which you're going to see in a bit as well you can compile it into",
    "start": "136560",
    "end": "143099"
  },
  {
    "text": "webassembly and AutoCAD has got a version of their tool I've not run it I've actually need this just a",
    "start": "143099",
    "end": "148379"
  },
  {
    "text": "screenshot I took from the internet of course but it allows you to run their software inside the browser right so",
    "start": "148379",
    "end": "153540"
  },
  {
    "text": "webassembly there might even be somebody from AutoCAD on this conference I did see it on some of the batches so maybe",
    "start": "153540",
    "end": "158819"
  },
  {
    "text": "they can explain a bit more how it works but this was a nice thing right Adobe did the same with some of their products",
    "start": "158819",
    "end": "164580"
  },
  {
    "text": "and it's all based on AMP scripting compiling your C code into webassembly and run it",
    "start": "164580",
    "end": "169620"
  },
  {
    "text": "that was the first thing what happened after that what's what's what else did we see so webassembly was also used as an SDK",
    "start": "169620",
    "end": "176819"
  },
  {
    "text": "for sdks so both Disney plus and Amazon have got two really nice blog posts",
    "start": "176819",
    "end": "183420"
  },
  {
    "text": "where they explain how to use webassembly side note if I'm referring to articles all of the links are in the",
    "start": "183420",
    "end": "188819"
  },
  {
    "text": "notes and at the end you will see a get a repo that will have a node version of the slides and you can find all the",
    "start": "188819",
    "end": "193980"
  },
  {
    "text": "links inside of that but the nice thing is that they explained because you can run near",
    "start": "193980",
    "end": "199080"
  },
  {
    "text": "native you can literally run on a lot of devices they build up their application and also high performance if you're",
    "start": "199080",
    "end": "204780"
  },
  {
    "text": "streaming media right you can if you compile it into webassembly module it can really be done easily",
    "start": "204780",
    "end": "210780"
  },
  {
    "text": "um both Disney plus and Amazon do it and Amazon Prime even allows to be like",
    "start": "210780",
    "end": "216480"
  },
  {
    "text": "targeting 8 000 devices all at once which is I think nice even the mobile stuff they reuse it but you can imagine",
    "start": "216480",
    "end": "222720"
  },
  {
    "text": "like even if you have Android TV or apple or you have some kind of setup box you got from the cable provider",
    "start": "222720",
    "end": "230280"
  },
  {
    "text": "um they all have that client inside right and it works and it's all and a lot of that it's done because of",
    "start": "230280",
    "end": "235860"
  },
  {
    "text": "webassembly so I think this is pretty cool technology gets everywhere and the nice thing is because it's a compilation Target you can write",
    "start": "235860",
    "end": "242220"
  },
  {
    "text": "in a lot of languages you compile that to webassembly which you're going to see in a bit but you can do go you can do",
    "start": "242220",
    "end": "247319"
  },
  {
    "text": "python you can do Java right now as well I've seen some stuff from kotlin over the last couple of days so it's it's all",
    "start": "247319",
    "end": "253260"
  },
  {
    "text": "getting there and it's all running on webassembly which I think is pretty cool so this technology evolved",
    "start": "253260",
    "end": "258959"
  },
  {
    "text": "and I'm going to take a step back a bit and I want first to dig into some of the",
    "start": "258959",
    "end": "265320"
  },
  {
    "text": "security aspects for what makes webassembly secure because there are certain things inside the language or",
    "start": "265320",
    "end": "270419"
  },
  {
    "text": "like the way it works that we need to be aware of then we're going to run.net on webassembly which you probably can",
    "start": "270419",
    "end": "276240"
  },
  {
    "text": "already imagine what that will be but we're going to look into some of its internals how it works because we need to have some understanding",
    "start": "276240",
    "end": "282300"
  },
  {
    "text": "and we're going to do it browser-based but we're also going to of course pull it outside of the browser and that's where the fun stuff happens then we're",
    "start": "282300",
    "end": "288240"
  },
  {
    "text": "going to take that concept and we're going to extend.net webassembly so have existing webassembly modules executed",
    "start": "288240",
    "end": "294780"
  },
  {
    "text": "inside that context and then also focus more on security aspects of it because there's a really rich layer of security",
    "start": "294780",
    "end": "301320"
  },
  {
    "text": "on top of it and we can leverage that and we can take care of some security problems that we face at the end it's",
    "start": "301320",
    "end": "306780"
  },
  {
    "text": "going to be concluded in Q a as I said so webassembly if you look up the design",
    "start": "306780",
    "end": "312060"
  },
  {
    "text": "they had the goals of be fast efficient and portable right so near native speed across different platforms that was the",
    "start": "312060",
    "end": "317400"
  },
  {
    "text": "exact reason what we saw with Amazon and with Disney plus readable and debuggable so you have a byte code you can open it",
    "start": "317400",
    "end": "323759"
  },
  {
    "text": "up you can look into it but there's also textual representation and I'm going to show you that how it",
    "start": "323759",
    "end": "328860"
  },
  {
    "text": "looks it's it's not it's like readable you can easily see like hey this is where the problem is no but you can read it if you want to",
    "start": "328860",
    "end": "335340"
  },
  {
    "text": "it wants to be secure keep secure because it's run inside of a Sandbox environment so running inside of a",
    "start": "335340",
    "end": "341580"
  },
  {
    "text": "browser same origin policy helps out of course but if we take it outside the browser we need to do different things",
    "start": "341580",
    "end": "347699"
  },
  {
    "text": "and it was not supposed to break the web I believe it's the case but of course with browsers and everything that's",
    "start": "347699",
    "end": "354120"
  },
  {
    "text": "happening compatibility needs to be guaranteed right because if it breaks the internet then people are not using",
    "start": "354120",
    "end": "359460"
  },
  {
    "text": "your browser anymore at least that's what we've seen with all the browser was but um backwards compatibility is also",
    "start": "359460",
    "end": "365400"
  },
  {
    "text": "really important so as I said it is a binary instruction",
    "start": "365400",
    "end": "370800"
  },
  {
    "text": "format for stack-based virtual machine which is like similar s.net msio right the CLR runs msil uh it needs to be a",
    "start": "370800",
    "end": "378419"
  },
  {
    "text": "portable compilation Target and one of the additional security models they have is we want to protect users from buggy",
    "start": "378419",
    "end": "385440"
  },
  {
    "text": "or malicious code and we want to provide developers also with helpful Primitives and what they",
    "start": "385440",
    "end": "390720"
  },
  {
    "text": "mean by that is it should be pretty intuitive to take the right path and if you need to do something bad then hopefully the API is",
    "start": "390720",
    "end": "397440"
  },
  {
    "text": "really explicit or the compiler maybe even tell it to you say like hey what you're doing here it might be a risk or",
    "start": "397440",
    "end": "402780"
  },
  {
    "text": "consider not doing this because it might be harmful I think that's the default path should be straightforward easy to",
    "start": "402780",
    "end": "410220"
  },
  {
    "text": "use and secure so a lot of design aspects but what makes webassembly secure so each module",
    "start": "410220",
    "end": "417180"
  },
  {
    "text": "within the webassembly ecosystem has got a piece of memory webassembly memory and it's isolated per module that",
    "start": "417180",
    "end": "423720"
  },
  {
    "text": "gets loaded right so it's a chunk of it's like an array of data",
    "start": "423720",
    "end": "428880"
  },
  {
    "text": "and it will be used only by that module and if data needs to be shared across other modules then you need to do",
    "start": "428880",
    "end": "435180"
  },
  {
    "text": "something for it so by default it's just an array of bytes and the module can manipulate that",
    "start": "435180",
    "end": "442259"
  },
  {
    "text": "a module itself of course might have got security issues which allow you to mingle with that memory so there's still",
    "start": "442259",
    "end": "448440"
  },
  {
    "text": "a possible way of of doing stuff that might be unintended",
    "start": "448440",
    "end": "453539"
  },
  {
    "text": "so on top of having this kind of linear memory there's an additional security aspect of webassembly which we need to",
    "start": "453539",
    "end": "459840"
  },
  {
    "text": "be aware of and that's something called control flow integrity and I was thinking about this when I was",
    "start": "459840",
    "end": "465419"
  },
  {
    "text": "creating this presentation like how can I explain this in the best way because there are some really good articles that",
    "start": "465419",
    "end": "470520"
  },
  {
    "text": "go deep into how back-end compilers deal with this but let's say this is a code",
    "start": "470520",
    "end": "476240"
  },
  {
    "text": "snippet that we see over here and what control flow means is like what are The Logical paths within my code that my",
    "start": "476240",
    "end": "483000"
  },
  {
    "text": "code can follow right so in this case we see that we read a a read line from",
    "start": "483000",
    "end": "488759"
  },
  {
    "text": "console that gives input somebody types in a string with screw but if somebody types in a number we can say okay this",
    "start": "488759",
    "end": "495120"
  },
  {
    "text": "is the number that you put in and then we're going to have two conditions saying okay if number is greater than five put it down the console right line",
    "start": "495120",
    "end": "502139"
  },
  {
    "text": "and saying it's larger than five otherwise let's say it's smaller and then we're done so this is a a an execution and if we",
    "start": "502139",
    "end": "510479"
  },
  {
    "text": "translate this to a graph it may look something like this right so we have the first part that executes that we'll",
    "start": "510479",
    "end": "516839"
  },
  {
    "text": "always execute taking the number writing it out and then we get up at the decision saying",
    "start": "516839",
    "end": "522539"
  },
  {
    "text": "like hey if number is greater than 5 we're going to take this Branch otherwise we're going to take the other one so what control flow Integrity does",
    "start": "522539",
    "end": "529260"
  },
  {
    "text": "it has a map of these kinds of executions within your app and it will instrument your application and if at",
    "start": "529260",
    "end": "536640"
  },
  {
    "text": "runtime something occurs that breaks that path then it will panic and it will stop right so that should mitigate",
    "start": "536640",
    "end": "543480"
  },
  {
    "text": "that's the right word I need to use some of the problems you might have if a module mingles with its own memory so we",
    "start": "543480",
    "end": "549540"
  },
  {
    "text": "can safely say it's pretty secure how it works in this way so it's mostly",
    "start": "549540",
    "end": "554640"
  },
  {
    "text": "compiler stuff that helps us out so this makes webassembly in let's say",
    "start": "554640",
    "end": "561120"
  },
  {
    "text": "from technical perspective how it works pretty secure how the instructions are being processed during runtime and so on",
    "start": "561120",
    "end": "567720"
  },
  {
    "text": "one really cool project that leverages webassembly is something called the real box",
    "start": "567720",
    "end": "573660"
  },
  {
    "text": "who in this room is familiar with what NL box is or has seen it before my it's",
    "start": "573660",
    "end": "579000"
  },
  {
    "text": "it belongs to Firefox it's a Firefox team that created it so",
    "start": "579000",
    "end": "584040"
  },
  {
    "text": "when running a browser you rely on a lot of plugins that take care of Media stuff that gets rendered phones that gets",
    "start": "584040",
    "end": "589740"
  },
  {
    "text": "rendered and what the team with at Firefox did together when I think with the university is that they looked into",
    "start": "589740",
    "end": "595019"
  },
  {
    "text": "a way of taking those libraries compiling them into webassembly so",
    "start": "595019",
    "end": "601019"
  },
  {
    "text": "taking C code probably am scripting to convert them to webassembly and then",
    "start": "601019",
    "end": "606839"
  },
  {
    "text": "you have some guarantees that the things that I just explained to you so if there's like some unmanaged uh let's say",
    "start": "606839",
    "end": "612060"
  },
  {
    "text": "overflow that kind of thing like the basic security problems that would have been taken care of by the webassembly",
    "start": "612060",
    "end": "617580"
  },
  {
    "text": "stuff itself so if you would then run that plugin inside the browser it will be safer but the only thing that they",
    "start": "617580",
    "end": "624180"
  },
  {
    "text": "didn't want is they didn't want to have webassembly embedded inside the browser it probably was high performance or it",
    "start": "624180",
    "end": "629399"
  },
  {
    "text": "was good enough but then they decided to take that webassembly and translate it back to C code and then put it in the",
    "start": "629399",
    "end": "635580"
  },
  {
    "text": "code base and then compile it all at once which means that you take some of the security aspects you get from webassembly and",
    "start": "635580",
    "end": "642120"
  },
  {
    "text": "then put it inside the browser and the other thing and the additional thing that they did is they also created a programming model that if you do this",
    "start": "642120",
    "end": "648779"
  },
  {
    "text": "with a plugin you need to when you're writing the software you need to explicitly validate the data that comes",
    "start": "648779",
    "end": "655320"
  },
  {
    "text": "back from the plugin so it's like a helping out the developer saying like hey you run this plugin data comes back",
    "start": "655320",
    "end": "661079"
  },
  {
    "text": "you need to have a validation routine in order to take care of the data before you process it and I think that's a",
    "start": "661079",
    "end": "666360"
  },
  {
    "text": "pretty strong model I'm not sure if people were in my talk last year on sandboxing.net some of the aspects this",
    "start": "666360",
    "end": "672240"
  },
  {
    "text": "this is the ultimate concept that I want to implement on that same area because I think this is quite powerful if you can",
    "start": "672240",
    "end": "678839"
  },
  {
    "text": "like help out developers doing a better job and next week I will be in NDC London",
    "start": "678839",
    "end": "684720"
  },
  {
    "text": "talking about that and once the video is there and you're interested in it in combination with.net look into that one but at our box right as I said because",
    "start": "684720",
    "end": "691740"
  },
  {
    "text": "webassembly in its way how it works is pretty secure they use that they leverage that in",
    "start": "691740",
    "end": "696959"
  },
  {
    "text": "order to get it into the browser so that's I think it's pretty cool there's one really I think even two",
    "start": "696959",
    "end": "702779"
  },
  {
    "text": "really good talks done at blackhead on this from the people who created this you should watch that",
    "start": "702779",
    "end": "708240"
  },
  {
    "text": "so getting back to what if we what do we need to do in order to get.net running",
    "start": "708240",
    "end": "713760"
  },
  {
    "text": "on top of webassembly so this is a conceptual picture that I took from",
    "start": "713760",
    "end": "719040"
  },
  {
    "text": "uh from a guy called item Ivan Tolson who is with fermion he works on spin so",
    "start": "719040",
    "end": "726300"
  },
  {
    "text": "um look him up but he did a talk on.net and webassembly as well and he created like this picture where you see like hey",
    "start": "726300",
    "end": "731820"
  },
  {
    "text": "if we have a.net application it consists of user code which is il we have a base class library that we use we have an",
    "start": "731820",
    "end": "738540"
  },
  {
    "text": "execution engine which they call vest which will be the CLR that starts yell out right so if you start out a process",
    "start": "738540",
    "end": "744480"
  },
  {
    "text": "the CLR would take care of bootstrapping and stuff it will start out and then it will run your app and",
    "start": "744480",
    "end": "750120"
  },
  {
    "text": "that of course all runs on top of your host and how can we run webassembly on top of",
    "start": "750120",
    "end": "756240"
  },
  {
    "text": "or how can we run.net on top of webassembly we can replace the execution Engine with",
    "start": "756240",
    "end": "762660"
  },
  {
    "text": "one that's based on webassembly so um and of course we need to run it inside the browser right and while we have",
    "start": "762660",
    "end": "769440"
  },
  {
    "text": "we've seen this concept of course that's with blazer webassembly so what I've done is they've taken parts of the mono",
    "start": "769440",
    "end": "774839"
  },
  {
    "text": "runtime which you see compiled into version with M scripting there's a lot",
    "start": "774839",
    "end": "780300"
  },
  {
    "text": "of other things included as well there is a JavaScript bridge that takes care of some of the mingling because you need to interact with the browser you need to",
    "start": "780300",
    "end": "786480"
  },
  {
    "text": "have access to the Dom and so on but that was in itself will have the",
    "start": "786480",
    "end": "792540"
  },
  {
    "text": "framework and there are dlls right so this is the basic the basic thing",
    "start": "792540",
    "end": "798060"
  },
  {
    "text": "let us quickly create a project to see what type of things we get",
    "start": "798060",
    "end": "803100"
  },
  {
    "text": "streamed in order to fully understand right so let me do this first let me create a",
    "start": "803100",
    "end": "808620"
  },
  {
    "text": "quick Blazer app",
    "start": "808620",
    "end": "811639"
  },
  {
    "text": "say.net run starting it out right so it's just",
    "start": "816060",
    "end": "821639"
  },
  {
    "text": "default template nothing fancy I want to make sure that I have this one running let's clear it all out",
    "start": "821639",
    "end": "828240"
  },
  {
    "text": "good to me so now if we open up you will see this is the default",
    "start": "828240",
    "end": "833399"
  },
  {
    "text": "template that gets executed and if we then go to the thing that we",
    "start": "833399",
    "end": "838440"
  },
  {
    "text": "see over here which is Network which view am I watching right now not the right one I guess",
    "start": "838440",
    "end": "845880"
  },
  {
    "text": "let's let's do this once more so um of course what happens is that the",
    "start": "845880",
    "end": "851339"
  },
  {
    "text": "browser will start downloading the basic stuff of webassembly so it will download",
    "start": "851339",
    "end": "856500"
  },
  {
    "text": "first all the dlls let me do it once more",
    "start": "856500",
    "end": "862800"
  },
  {
    "text": "because I might might have been some caching right involved",
    "start": "862800",
    "end": "867839"
  },
  {
    "text": "did I stop the other one hold on a second I probably did not do that",
    "start": "873980",
    "end": "881000"
  },
  {
    "text": "and it did not have the tools open okay cool so if you have run this before and",
    "start": "890100",
    "end": "895139"
  },
  {
    "text": "I'm just going to skip this for now because I'm just going to like go back and forth within the screens but you will see that it will first download all",
    "start": "895139",
    "end": "901320"
  },
  {
    "text": "the dlls right the.net application at the end it will have.net wasm which is the CLR implementation and then it will",
    "start": "901320",
    "end": "907620"
  },
  {
    "text": "start the.net application it will run those dlls inside of the browser",
    "start": "907620",
    "end": "914240"
  },
  {
    "text": "so the other thing it's um of course there's a performance penalty",
    "start": "921000",
    "end": "927060"
  },
  {
    "text": "right if you look into uh it's it's kind of inter interpreted right because it runs it runs a virtual machine inside of",
    "start": "927060",
    "end": "933480"
  },
  {
    "text": "a virtual machine that's that's at least the quickest way they did do some optimizations with the last.net release",
    "start": "933480",
    "end": "939660"
  },
  {
    "text": "um some people were expecting that the full.net stuff would be emitted into webassembly that aside from the fact",
    "start": "939660",
    "end": "946680"
  },
  {
    "text": "that it increases the size really big it's not performant because some features are not implemented into webassembly like garbage collection and",
    "start": "946680",
    "end": "953040"
  },
  {
    "text": "so on right so there are some difficulties but this allows us to have us CLR that runs dlls inside the browser",
    "start": "953040",
    "end": "959160"
  },
  {
    "text": "and the JavaScript files will help out doing some interactions with your system so keep that in mind because that's the",
    "start": "959160",
    "end": "964740"
  },
  {
    "text": "first concept on how to run.net because what do we need to do if we want to take this outside the",
    "start": "964740",
    "end": "972000"
  },
  {
    "text": "browser so we we still have a need for a",
    "start": "972000",
    "end": "978120"
  },
  {
    "text": "host where we can run on which in this case is not the browser but the machine and we want to have the execution engine still run webassembly and what do we",
    "start": "978120",
    "end": "985980"
  },
  {
    "text": "need in order to do this and that's something called Wazi or webassembly system interface",
    "start": "985980",
    "end": "993720"
  },
  {
    "text": "right so in order for us to interact with the system that's not the browser we need to have some kind of abstraction",
    "start": "993720",
    "end": "1000259"
  },
  {
    "text": "available and the nice thing about it is that it's um it's taking care of all the basic stuff",
    "start": "1000259",
    "end": "1006920"
  },
  {
    "text": "that we need and it will make sure that it's a posix inspired engine independent non-web",
    "start": "1006920",
    "end": "1013759"
  },
  {
    "text": "system oriented API for webassembly and the other thing is that it was it was introduced in 2019 by byte code",
    "start": "1013759",
    "end": "1020300"
  },
  {
    "text": "Alliance or bytecode Alliance isn't Cooperative thing between big companies like Microsoft firstly",
    "start": "1020300",
    "end": "1027199"
  },
  {
    "text": "they all help out they created this standard to say okay if we have webassembly running on this and we want",
    "start": "1027199",
    "end": "1033199"
  },
  {
    "text": "to interact with system like files sockets everything we need standard inputs standard output it will look",
    "start": "1033199",
    "end": "1038720"
  },
  {
    "text": "something like this and they also said okay we're going to do runtime which is like responsible for running the web",
    "start": "1038720",
    "end": "1045438"
  },
  {
    "text": "assembly because it wasn't time in order to be guiding us through like as a reference implementation",
    "start": "1045439",
    "end": "1052540"
  },
  {
    "text": "um so it's a strong sandbox with capabilities based security so we're",
    "start": "1053419",
    "end": "1059480"
  },
  {
    "text": "going to dig into it a bit further but if you have the whole system model of things you can access and if you can",
    "start": "1059480",
    "end": "1065000"
  },
  {
    "text": "then flag access and say like you're not allowed to do this or you're not you're not allowed to do that that can be",
    "start": "1065000",
    "end": "1070340"
  },
  {
    "text": "pretty granular pretty strong right so um a.net application will start out in its own process if you started on your",
    "start": "1070340",
    "end": "1076820"
  },
  {
    "text": "machine and it will have access to all this things the same process as access to and this is like an additional layer",
    "start": "1076820",
    "end": "1082880"
  },
  {
    "text": "on top of it it will give us more control right so it will say like hey are you allowed to write these files or",
    "start": "1082880",
    "end": "1088100"
  },
  {
    "text": "read these files and there also will be future support for sockets for other things like um like sockets a",
    "start": "1088100",
    "end": "1096140"
  },
  {
    "text": "random like system other system access that that needs to be like it's it's in the making right now I will get to that",
    "start": "1096140",
    "end": "1102380"
  },
  {
    "text": "at the end of the presentation and it's almost similar like to net standard right we have all if you've been active",
    "start": "1102380",
    "end": "1108440"
  },
  {
    "text": "in.net at some point we had to converge from.net core and the full framework that standard was introduced to make",
    "start": "1108440",
    "end": "1114140"
  },
  {
    "text": "sure that those two bcl's got together this in some way is familiar so",
    "start": "1114140",
    "end": "1120620"
  },
  {
    "text": "how strong is this wazzy concept in general if you look at it for in combination with webassembly",
    "start": "1120620",
    "end": "1126679"
  },
  {
    "text": "it's as good as this guy tells Solomon hikes so he was",
    "start": "1126679",
    "end": "1132200"
  },
  {
    "text": "the founder of Docker and when was he was first talked about he mentioned in a tweet like hey it",
    "start": "1132200",
    "end": "1138559"
  },
  {
    "text": "wasn't you existed in 2008 there would have been no need to create docker",
    "start": "1138559",
    "end": "1143660"
  },
  {
    "text": "which of course is quite a big statement to make if you're the person that started out Docker",
    "start": "1143660",
    "end": "1149480"
  },
  {
    "text": "um but it says it's the future future next day after he's done this tweet he",
    "start": "1149480",
    "end": "1156679"
  },
  {
    "text": "came back he says like so will wasn't replace doc he probably got something with your phone calls or people pinching him or I haven't seen the full thread on",
    "start": "1156679",
    "end": "1163340"
  },
  {
    "text": "Twitter itself but um he says like no but it cannot replace but it can be a good addition right",
    "start": "1163340",
    "end": "1169640"
  },
  {
    "text": "and uh it might be something that lives next to each other like side by side and what have we've seen over let's say I",
    "start": "1169640",
    "end": "1176000"
  },
  {
    "text": "think it was fall October of last year is that they introduced docker's capability of running wasm wasm assembly",
    "start": "1176000",
    "end": "1183860"
  },
  {
    "text": "um modules and in this case it uses wasm Edge as you see on the right hand side",
    "start": "1183860",
    "end": "1189020"
  },
  {
    "text": "to execute the modules the things we're going to do are all focus on on wasn't time but wasn't Edge it's just a run",
    "start": "1189020",
    "end": "1194480"
  },
  {
    "text": "time that allows you to run webassembly that is aware of wedgie as a whole and",
    "start": "1194480",
    "end": "1200059"
  },
  {
    "text": "they can execute stuff so this is pretty cool so if we want to run webassembly outside the browser we need",
    "start": "1200059",
    "end": "1206900"
  },
  {
    "text": "to have this we need to replace the host with awazi capable interface and in this case in",
    "start": "1206900",
    "end": "1214520"
  },
  {
    "text": "our case it will be where's on time so we're able to run it and I think it was built last year when Steve Sanderson",
    "start": "1214520",
    "end": "1219860"
  },
  {
    "text": "introduced a conceptual experimental was the sdk4.net that he created which will take",
    "start": "1219860",
    "end": "1226340"
  },
  {
    "text": "your app which will create a single resume file that will use system interface the y z SI and it will execute",
    "start": "1226340",
    "end": "1234440"
  },
  {
    "text": "so let's go to an app and let's see what is it right so keep",
    "start": "1234440",
    "end": "1239780"
  },
  {
    "text": "in mind that we saw that Blazer did download everything",
    "start": "1239780",
    "end": "1245179"
  },
  {
    "text": "and now we're going to move to a console app and we're going to fiddle around a bit how it works and then also look into",
    "start": "1245179",
    "end": "1251720"
  },
  {
    "text": "um um some of the capabilities we're able to limit console as he yeah that's the",
    "start": "1251720",
    "end": "1259460"
  },
  {
    "text": "one so it's it's minimal",
    "start": "1259460",
    "end": "1266120"
  },
  {
    "text": "um it's a console app signal line contains a write out which is like hey this is the OS architecture that you run",
    "start": "1266120",
    "end": "1272480"
  },
  {
    "text": "on top of you probably have seen the same demo with Steve if you look into it what do we need to do in order to get",
    "start": "1272480",
    "end": "1278960"
  },
  {
    "text": "this running on where actually we need to make sure we have YZ SDK included and this is a preview I think it was",
    "start": "1278960",
    "end": "1284840"
  },
  {
    "text": "released or published two weeks ago so keep in mind all of these bits are preview and I was wrapping up and making",
    "start": "1284840",
    "end": "1292039"
  },
  {
    "text": "sure I started it out and on Monday I pulled everything in looks that it was still working so that's cool but it's in",
    "start": "1292039",
    "end": "1297440"
  },
  {
    "text": "it's broke in progress which is a good thing and a bad thing we will get there as well at the end but this is the thing",
    "start": "1297440",
    "end": "1303799"
  },
  {
    "text": "so if we now say we built this",
    "start": "1303799",
    "end": "1308440"
  },
  {
    "text": "and if we then go to bin debug five and look what we see here",
    "start": "1308900",
    "end": "1316299"
  },
  {
    "text": "I mind that I'd Fallen no hold on",
    "start": "1316520",
    "end": "1320620"
  },
  {
    "text": "this is the right folder so what we see here we see a console app.org if we just say",
    "start": "1323960",
    "end": "1330320"
  },
  {
    "text": "like okay this is the default executable we get that will run on my Mac",
    "start": "1330320",
    "end": "1335720"
  },
  {
    "text": "if I run it it will say like hey hopefully you can see it it's at the bottom maybe screw scrolling up a bit but",
    "start": "1335720",
    "end": "1344120"
  },
  {
    "text": "we see that it says like hey welcome from arm 64 right let me do an increase",
    "start": "1344120",
    "end": "1350179"
  },
  {
    "text": "what if we take the the wasn't one",
    "start": "1350179",
    "end": "1355600"
  },
  {
    "text": "we will see exactly the same and it will say okay now you're running in a wasm context right so it's not running directly on my machine but it's running",
    "start": "1361580",
    "end": "1368320"
  },
  {
    "text": "on my uh on my version time so even if you have this SDK installed you can say",
    "start": "1368320",
    "end": "1374659"
  },
  {
    "text": "net run in your main project and it will also doasm and it will sound like okay what's Happening Here",
    "start": "1374659",
    "end": "1380240"
  },
  {
    "text": "underneath the hood it will start well sometime and it's only tied to Western time to execute but it will do exactly",
    "start": "1380240",
    "end": "1386240"
  },
  {
    "text": "the same so this is this is the thing we've seen that there are different architectures and also to I said",
    "start": "1386240",
    "end": "1392059"
  },
  {
    "text": "something about size right um if we do an LL here we will see",
    "start": "1392059",
    "end": "1398659"
  },
  {
    "text": "that we see console itself which is an app pretty minimal one 145k probably",
    "start": "1398659",
    "end": "1404179"
  },
  {
    "text": "relies on some shell stuff that's on my system right this one is 8.5 Max but the problem is is that it",
    "start": "1404179",
    "end": "1411320"
  },
  {
    "text": "will do exactly the same as we saw with blazer that was the reason why I showed you that example at the beginning it will put in all the dlls embedded there",
    "start": "1411320",
    "end": "1418280"
  },
  {
    "text": "is a awesome file that will bootstrap the CLR and that will then start out the app right so that's the difference and that will be run on top of our assembly",
    "start": "1418280",
    "end": "1425480"
  },
  {
    "text": "so keep that in mind so that's how it works internally",
    "start": "1425480",
    "end": "1430299"
  },
  {
    "text": "so what are the cool things that we can do let's say let's open up the file now we're going",
    "start": "1430520",
    "end": "1435980"
  },
  {
    "text": "to do some code let's say I want to open a file in webassemer let's say and it will just",
    "start": "1435980",
    "end": "1442400"
  },
  {
    "text": "be simple so let's say I want to read the content of a file which in my case will be file",
    "start": "1442400",
    "end": "1450380"
  },
  {
    "text": "potato texts we don't text and then say we're going",
    "start": "1450380",
    "end": "1455539"
  },
  {
    "text": "to read hosts file and then I'm gonna just easily say right",
    "start": "1455539",
    "end": "1461299"
  },
  {
    "text": "line content we're just going to take the content of that file which is my Etc",
    "start": "1461299",
    "end": "1466460"
  },
  {
    "text": "host which is in my system and then have it right out right so",
    "start": "1466460",
    "end": "1473240"
  },
  {
    "text": "net build if I'm in the right folder hold on",
    "start": "1473240",
    "end": "1479679"
  },
  {
    "text": "so it is built so what if I now do the the default app so this is my arm six",
    "start": "1481400",
    "end": "1487520"
  },
  {
    "text": "one right it runs on my machine you will see the file if I say net run",
    "start": "1487520",
    "end": "1492980"
  },
  {
    "text": "in this folder it will do the Western time equivalent right what will happen then it will give a really obnoxious big",
    "start": "1492980",
    "end": "1499580"
  },
  {
    "text": "error but what it tried to do is it tried to open a file that it was not",
    "start": "1499580",
    "end": "1504679"
  },
  {
    "text": "allowed to open and that's the whole like as I said Wazi capabilities type of thing and why some",
    "start": "1504679",
    "end": "1512179"
  },
  {
    "text": "time right now puts out this error there are some implementations on other runtimes that are more descriptive but",
    "start": "1512179",
    "end": "1519020"
  },
  {
    "text": "it will show us that we're not allowed to do it and in order to get there we need to instruct",
    "start": "1519020",
    "end": "1525500"
  },
  {
    "text": "the following thing so I'm going to say to why sometime the directory you're allowed to read",
    "start": "1525500",
    "end": "1531200"
  },
  {
    "text": "sure hoping that you're able to see it and I already executed it but directly you're allowed to read you just give it",
    "start": "1531200",
    "end": "1536779"
  },
  {
    "text": "the folder and pre-open the directory and you will hand over the handle to the wisdom time it's like you're allowed to",
    "start": "1536779",
    "end": "1542299"
  },
  {
    "text": "read it and that's exactly what happens then and if we then open it we say like hey we've run this in the webassembly context and",
    "start": "1542299",
    "end": "1548779"
  },
  {
    "text": "we were allowed to open the file right so this shows us the wesi capability a file system and because we instructed",
    "start": "1548779",
    "end": "1555980"
  },
  {
    "text": "our runtime that it's allowed to read files from that other location we can do it by default it's not possible I think",
    "start": "1555980",
    "end": "1562400"
  },
  {
    "text": "that's good right talking about having a good default and then explicitly granting access to stuff that works out",
    "start": "1562400",
    "end": "1568820"
  },
  {
    "text": "as I said it's still under off are you going to use it probably not but let me get back to the slides because there's more to that",
    "start": "1568820",
    "end": "1576340"
  },
  {
    "text": "it was experimental that's also what Steve Sanderson says in this demo like there's no guarantee we're going to do",
    "start": "1580820",
    "end": "1585980"
  },
  {
    "text": "this um I think Wesley has a really good like path forward so I'm I'm expecting that",
    "start": "1585980",
    "end": "1591679"
  },
  {
    "text": "they will do something about this and I was talking to some of the people in October and they pointed me out to this",
    "start": "1591679",
    "end": "1598340"
  },
  {
    "text": "issue which was created by Steve Sanderson after he created this demo what is that like Hey we're going to",
    "start": "1598340",
    "end": "1603500"
  },
  {
    "text": "support some wesi and some of the fixes some of the bug fixes for the for the",
    "start": "1603500",
    "end": "1608779"
  },
  {
    "text": "SDK has been made and have been made available already and I'm looking forward to forward to the first preview",
    "start": "1608779",
    "end": "1614000"
  },
  {
    "text": "of.net 8 what this uh probably will become better or will improve still no",
    "start": "1614000",
    "end": "1619820"
  },
  {
    "text": "guarantee that they will do it or if they will release it but at least some they're working on it and that's nice",
    "start": "1619820",
    "end": "1625400"
  },
  {
    "text": "right so this allows us to run.net on top of webassembly outside the browser",
    "start": "1625400",
    "end": "1631039"
  },
  {
    "text": "with the help of lesson time or any other wesi compliant runtime right I",
    "start": "1631039",
    "end": "1636200"
  },
  {
    "text": "think that's pretty cool and we're allowed to limit file access and so on now we need to get more advanced and",
    "start": "1636200",
    "end": "1643940"
  },
  {
    "text": "I want to move forward in moving to hey what can we do in order to",
    "start": "1643940",
    "end": "1649000"
  },
  {
    "text": "extend.network webassembly and with the whole wasn't time runtime",
    "start": "1649000",
    "end": "1654740"
  },
  {
    "text": "there's also wasn't time.net a new get package that will allow us to run version on top of.net",
    "start": "1654740",
    "end": "1662440"
  },
  {
    "text": "and it allows you to run uh like it allows you to to run any let's",
    "start": "1663020",
    "end": "1670580"
  },
  {
    "text": "say arbitrary webassembly module the only constraint it has it needs to be compiled against the the Wazi stuff",
    "start": "1670580",
    "end": "1677900"
  },
  {
    "text": "but you can write it in brushed you can write it in Python you can write it in go and that's exactly what I did so",
    "start": "1677900",
    "end": "1683779"
  },
  {
    "text": "let's move on let's go back we're going to quickly peek into some Rust code which is the module that we're going to",
    "start": "1683779",
    "end": "1689840"
  },
  {
    "text": "use the web assembly module that we're going to pull into.net and then we're going to run",
    "start": "1689840",
    "end": "1695799"
  },
  {
    "text": "I'm going to open up this one collapse it make sure that we're in so",
    "start": "1703220",
    "end": "1708500"
  },
  {
    "text": "I'm not going to get a crash course rust which is not the case but um",
    "start": "1708500",
    "end": "1714020"
  },
  {
    "text": "so where some time itself is also really interesting and um the language itself I'm really a fan of",
    "start": "1714020",
    "end": "1720799"
  },
  {
    "text": "it I'm working with it a lot lately this is of course just a demo I took which was already there but what it does",
    "start": "1720799",
    "end": "1725960"
  },
  {
    "text": "internally this stairs like it almost looks like a console app within.net right there's a main that will accept",
    "start": "1725960",
    "end": "1731240"
  },
  {
    "text": "arguments from the command line the arguments are going to be passed on and then it will say okay let's do the",
    "start": "1731240",
    "end": "1737600"
  },
  {
    "text": "process of those arguments and what it does internally in this it will take one file from source to destination it will",
    "start": "1737600",
    "end": "1744260"
  },
  {
    "text": "copy so we're going to mingle with files again right including with Verizon time but now we're also going to include this",
    "start": "1744260",
    "end": "1750559"
  },
  {
    "text": "inside of a.net application so it's pretty straightforward nothing",
    "start": "1750559",
    "end": "1755600"
  },
  {
    "text": "fancy here it will it will build we can do that right now you can say cargo build",
    "start": "1755600",
    "end": "1763760"
  },
  {
    "text": "it's instantly done because there's cache the file is already written so it's there that's good now let's move to",
    "start": "1763760",
    "end": "1769520"
  },
  {
    "text": "the console app because there's a bit more I need to explain in that one as well",
    "start": "1769520",
    "end": "1775299"
  },
  {
    "text": "so as I said in order to execute webassembly we need to have the runtime",
    "start": "1778220",
    "end": "1783919"
  },
  {
    "text": "available and that will be the package and you could just easily do the Western time package and edit",
    "start": "1783919",
    "end": "1790399"
  },
  {
    "text": "and washing time itself was released on zero they quickly uh like they quickly",
    "start": "1790399",
    "end": "1795860"
  },
  {
    "text": "released a couple of other releases on top of it but it's it's definitely something you could start using if we",
    "start": "1795860",
    "end": "1801440"
  },
  {
    "text": "look into the program itself then we see there's a lot of stuff happening first we need to",
    "start": "1801440",
    "end": "1808580"
  },
  {
    "text": "instruct our runtime what we are allowed to do and I'm gonna just redirect some",
    "start": "1808580",
    "end": "1814700"
  },
  {
    "text": "of the error some of the output to files in order to see it because it's going to be a separate thing that runs right I",
    "start": "1814700",
    "end": "1820399"
  },
  {
    "text": "need to pass on some arguments and then at the end the passing arcs I'm doing those are the arguments I will pass on",
    "start": "1820399",
    "end": "1826159"
  },
  {
    "text": "to the rust module to execute right because I want to copy file a to file position B then we need to do a bit more about we",
    "start": "1826159",
    "end": "1832580"
  },
  {
    "text": "need to have an engine that will run the webassembly itself there's a link that will take care of the type resolving and where stuff originates from and then",
    "start": "1832580",
    "end": "1839299"
  },
  {
    "text": "there's a store that will be used to run and get the data in and everything that's available we're saying okay we",
    "start": "1839299",
    "end": "1845000"
  },
  {
    "text": "want to run an awazi configuration we're loading the wasm module from file we're",
    "start": "1845000",
    "end": "1851240"
  },
  {
    "text": "gonna instantiate it then we get a function back and then we can invoke it which is a lot of code yes I know",
    "start": "1851240",
    "end": "1859279"
  },
  {
    "text": "um but this is the basic concept and the future of this you're going to see later on how this will work but the nice thing",
    "start": "1859279",
    "end": "1865220"
  },
  {
    "text": "about this is that if we run this let me make sure I'm in the right folder",
    "start": "1865220",
    "end": "1873880"
  },
  {
    "text": "so if I say.net run we will see Hello indices security nothing happened okay if we look into",
    "start": "1876320",
    "end": "1883700"
  },
  {
    "text": "the error log that's been written out we will see that the rust module this was one of the arguments we saw in the",
    "start": "1883700",
    "end": "1890059"
  },
  {
    "text": "rush module says like hey you want to do this and you want to do a copy from two",
    "start": "1890059",
    "end": "1895159"
  },
  {
    "text": "but you didn't provide any arguments that's exactly what we did right so that kind of works so now say dotnet run",
    "start": "1895159",
    "end": "1902779"
  },
  {
    "text": "let's say we want to do a to c host again the same file and we want to copy",
    "start": "1902779",
    "end": "1908480"
  },
  {
    "text": "it locally and say it's host",
    "start": "1908480",
    "end": "1911919"
  },
  {
    "text": "it's still for Bose if we look into the error log again we will see that it complains about the",
    "start": "1914059",
    "end": "1921380"
  },
  {
    "text": "fact that it cannot it cannot open ATC host because it's not a pre-opened",
    "start": "1921380",
    "end": "1927260"
  },
  {
    "text": "file descriptor right so this is the exact same things that we saw before when we were doing the Western time",
    "start": "1927260",
    "end": "1933559"
  },
  {
    "text": "console but now it's it's programmatically done so we need to instruct and it's allowed to read files",
    "start": "1933559",
    "end": "1941360"
  },
  {
    "text": "and this is exactly like the whole I I want to make sure that if it opens the",
    "start": "1941360",
    "end": "1946700"
  },
  {
    "text": "directory and you can even map stuff so let's say we're doing a map from Etc to",
    "start": "1946700",
    "end": "1952760"
  },
  {
    "text": "Etc same same way let's get rid of the trailing slash I've never done that",
    "start": "1952760",
    "end": "1957860"
  },
  {
    "text": "probably it will screw up and then um that's a default one but we also need to",
    "start": "1957860",
    "end": "1964520"
  },
  {
    "text": "Grant access to the local folder otherwise it's not alright it has no right to uh to write the files",
    "start": "1964520",
    "end": "1970820"
  },
  {
    "text": "to our system as well so as I said it's pretty explicit right you say like I'm not sure how I want to be bought it but",
    "start": "1970820",
    "end": "1978380"
  },
  {
    "text": "if you look into the whole component model which we're going to talk about later you will see that it will fit in and you will have descriptive stuff",
    "start": "1978380",
    "end": "1984080"
  },
  {
    "text": "happening so right now we have changed it we say like okay you're allowed to read from Etc and you're also allowed to",
    "start": "1984080",
    "end": "1989840"
  },
  {
    "text": "read and write from both electrics right so let's move back let's say dotnet builds",
    "start": "1989840",
    "end": "1997600"
  },
  {
    "text": "and now do the.net run again and if all goes well which happened we",
    "start": "1999559",
    "end": "2004899"
  },
  {
    "text": "see that over here that is a host file that's being written and it's been copied to this local system right so this gives us again",
    "start": "2004899",
    "end": "2011679"
  },
  {
    "text": "access to what type of files is this module what type of parts of my file",
    "start": "2011679",
    "end": "2017019"
  },
  {
    "text": "system is this module allowed to access and you can also reroute and say Hey I want to say this is ETC but it will be",
    "start": "2017019",
    "end": "2023740"
  },
  {
    "text": "your subfolder of my current running folder right so it's almost like a container that isolates stuff and so on so pretty powerful let's go",
    "start": "2023740",
    "end": "2031360"
  },
  {
    "text": "this is only related to file system what else could be wrong with a module right and get back to the first slide where we",
    "start": "2031360",
    "end": "2037600"
  },
  {
    "text": "talked about designing of webassembly they want to safeguard end users also for malicious modules so what happens if",
    "start": "2037600",
    "end": "2044320"
  },
  {
    "text": "a module is hacked or a supply chain is compromised which is a totally different topic of course but it does a lot of",
    "start": "2044320",
    "end": "2051220"
  },
  {
    "text": "compute what else can you do in order to control the amount of compute that a module can",
    "start": "2051220",
    "end": "2056980"
  },
  {
    "text": "execute within webassembly and within uh there is a concept called fuel",
    "start": "2056980",
    "end": "2063820"
  },
  {
    "text": "and each step within the engine will take one Fuel and it's just like it's not that it's tied to a specific amount",
    "start": "2063820",
    "end": "2070358"
  },
  {
    "text": "of Cycles it's just a logical unit that they use so in order to do something at the end you can say okay this will take",
    "start": "2070359",
    "end": "2076898"
  },
  {
    "text": "10 000 fuel and if it exceeds 10 000 then we might be better off stopping the thing and",
    "start": "2076899",
    "end": "2083560"
  },
  {
    "text": "that's exactly what you also get well right now within the module so we need to instruct the engine that we're going",
    "start": "2083560",
    "end": "2089138"
  },
  {
    "text": "to deal with this based on fuel consumption and we need to make sure that once we turn it on this is the",
    "start": "2089139",
    "end": "2094898"
  },
  {
    "text": "budget that you get and it's as conceptual even the host can decide to consume fuel if it fuels the need so you",
    "start": "2094899",
    "end": "2100960"
  },
  {
    "text": "can even have a dynamic system saying like hey I know that this module will take up this amount of ticks in order to",
    "start": "2100960",
    "end": "2106240"
  },
  {
    "text": "like fuel in order to complete I have more control of it and that makes",
    "start": "2106240",
    "end": "2111760"
  },
  {
    "text": "um that makes it less prone to let's say a module that",
    "start": "2111760",
    "end": "2116800"
  },
  {
    "text": "has become malicious and that does a lot of things maybe somebody decided to install a crypto Miner and is doing",
    "start": "2116800",
    "end": "2122079"
  },
  {
    "text": "stuff with that on your machine it takes a long time so let's just quickly delete this file",
    "start": "2122079",
    "end": "2127780"
  },
  {
    "text": "move the trash let's move and let's say a.net build again",
    "start": "2127780",
    "end": "2133799"
  },
  {
    "text": "did I save it close it just to be sure I'm gonna build",
    "start": "2134560",
    "end": "2140800"
  },
  {
    "text": "again if you run it right now you will see to",
    "start": "2140800",
    "end": "2147339"
  },
  {
    "text": "the end I I added an additional console ride line which is like the best way of programming right control right lines",
    "start": "2147339",
    "end": "2153160"
  },
  {
    "text": "but it will show us the amount of consumed fuel which is in this case is 35 000. so let's say after a couple of",
    "start": "2153160",
    "end": "2159820"
  },
  {
    "text": "runs and you know a module should be able to complete its stuff within that amount let's say we're limited to twenty",
    "start": "2159820",
    "end": "2165880"
  },
  {
    "text": "thousand let's say to 5000.",
    "start": "2165880",
    "end": "2170820"
  },
  {
    "text": "what will then happen if we build again",
    "start": "2171339",
    "end": "2177040"
  },
  {
    "text": "save data close I'm just going to be neurotic because of the demo gods and then say dot net",
    "start": "2177040",
    "end": "2184060"
  },
  {
    "text": "what we did before",
    "start": "2184060",
    "end": "2187260"
  },
  {
    "text": "it will it will give us a cryptic method saying like hey it ran into a trap and this is",
    "start": "2189099",
    "end": "2195099"
  },
  {
    "text": "the Trap is the way of the wasm runtime saying I'm stopping this execution because it takes too long",
    "start": "2195099",
    "end": "2202060"
  },
  {
    "text": "um so that's a that's a way of view of limiting what a module is allowed to do so that will give you more control over",
    "start": "2202060",
    "end": "2207940"
  },
  {
    "text": "what it's allowed to access and also the amount of things it can do based on that fuel right so I think this is a pretty",
    "start": "2207940",
    "end": "2213280"
  },
  {
    "text": "powerful concept and yes code is a lot of things you need",
    "start": "2213280",
    "end": "2218920"
  },
  {
    "text": "to do yourself but we'll get there at some point I will explain what will be the next PATH forward",
    "start": "2218920",
    "end": "2225299"
  },
  {
    "text": "so we've done all of this and let's say we have a wazzy module that we have",
    "start": "2226359",
    "end": "2232000"
  },
  {
    "text": "compiled against uh um with c-sharp or rust or anything else one other cool thing we",
    "start": "2232000",
    "end": "2238780"
  },
  {
    "text": "can also do with it is something called thrusted computing and trusted Computing can be based on",
    "start": "2238780",
    "end": "2244960"
  },
  {
    "text": "the following trap model um this is one from x x k CD you",
    "start": "2244960",
    "end": "2250839"
  },
  {
    "text": "probably know this Jimmy drop tables there's one on Supply chains like the one with the big pile of rocks and the",
    "start": "2250839",
    "end": "2255880"
  },
  {
    "text": "one in the bottom which maintained by a single person but this one explains like what type of layers do you have inside",
    "start": "2255880",
    "end": "2261040"
  },
  {
    "text": "your modern stack deck that might be compromised by a customer compromised by Bitcoin miners compromised by your",
    "start": "2261040",
    "end": "2267220"
  },
  {
    "text": "government and so on right you can just like literally say hey every layer can be compromised and the cool thing about",
    "start": "2267220",
    "end": "2274060"
  },
  {
    "text": "it is that there is a project called an ox which is started out by a couple of people who came from Red Hat",
    "start": "2274060",
    "end": "2280680"
  },
  {
    "text": "it's a company called proof proofian also part of bytecode Alliance and they decided to take confidential Computing",
    "start": "2280680",
    "end": "2287740"
  },
  {
    "text": "with webassembly um and what they do is they take so-called",
    "start": "2287740",
    "end": "2292839"
  },
  {
    "text": "teas which are trusted execution environments that's a part of your of your CPU",
    "start": "2292839",
    "end": "2298599"
  },
  {
    "text": "and it's not a TPM it's different but it allows you to take a Wazi based module",
    "start": "2298599",
    "end": "2304480"
  },
  {
    "text": "which we have seen we can write in.net we can write in Rust we can write in everything and we can run it in a",
    "start": "2304480",
    "end": "2310180"
  },
  {
    "text": "trusted way because what anarchs does it will have the following threat model it says like hey I don't trust the host",
    "start": "2310180",
    "end": "2316660"
  },
  {
    "text": "it runs on I don't trust the host owner I don't trust the host operator I want to make sure that the hardware",
    "start": "2316660",
    "end": "2322480"
  },
  {
    "text": "I'm running on is cryptographically verified and I want to make sure that software is audited and and before it starts and",
    "start": "2322480",
    "end": "2330040"
  },
  {
    "text": "cryptographically verified as well so can you imagine that you have confidential data of let's say customer",
    "start": "2330040",
    "end": "2336099"
  },
  {
    "text": "or crypto let's say or something that needs to do compute in the cloud if you do it on Azure AWS Google you",
    "start": "2336099",
    "end": "2343060"
  },
  {
    "text": "rely a lot on their hypervices and everything that's underneath that right but you might not want that data to be",
    "start": "2343060",
    "end": "2348579"
  },
  {
    "text": "visible on that system and this might be a way of dealing with that so",
    "start": "2348579",
    "end": "2354579"
  },
  {
    "text": "what NX does it takes the T of your processor which in AMD is the sav and",
    "start": "2354579",
    "end": "2360220"
  },
  {
    "text": "Intel SDS JX which is all acronyms and then IBM has the pef but it will do",
    "start": "2360220",
    "end": "2367240"
  },
  {
    "text": "um all the other stations that are mentioned so once it start out it will",
    "start": "2367240",
    "end": "2372400"
  },
  {
    "text": "check the crypto of the processor it will check its origin right there's a root of trust in the hardware",
    "start": "2372400",
    "end": "2378280"
  },
  {
    "text": "and then it will have instrumentation saying like Okay if I'm starting out nrx itself I have a runtime that's",
    "start": "2378280",
    "end": "2383859"
  },
  {
    "text": "responsible for encrypting the workload and pushing it onto the processor and that runtime is open source everybody",
    "start": "2383859",
    "end": "2390040"
  },
  {
    "text": "can see it it can all can be audited and the other thing that they do is they also do",
    "start": "2390040",
    "end": "2395920"
  },
  {
    "text": "um at the station of that like how long does it take normally to start out so those are all indicators and if it's all",
    "start": "2395920",
    "end": "2401859"
  },
  {
    "text": "green then it will decide to run right so that will all reduce the uh the risks",
    "start": "2401859",
    "end": "2407440"
  },
  {
    "text": "that you're facing if you're running stuff on Cloud for example um",
    "start": "2407440",
    "end": "2412480"
  },
  {
    "text": "I can also run this on my system and ask itself but what happens then underneath it will just take away some time and run",
    "start": "2412480",
    "end": "2418180"
  },
  {
    "text": "it right because that's in essence what you're doing only if you're running this on NX on a system itself on a hardware it will be done on this plot right where",
    "start": "2418180",
    "end": "2425320"
  },
  {
    "text": "wazzy will run on on top of the wesm runtime of anarchs and it will eliminate",
    "start": "2425320",
    "end": "2431320"
  },
  {
    "text": "that right so this is pretty cool so I'm not going to bother you with anarchsm and run it again because that",
    "start": "2431320",
    "end": "2436359"
  },
  {
    "text": "will be exactly the same but I think this is cool because this shows that wazzy has a good future and",
    "start": "2436359",
    "end": "2444339"
  },
  {
    "text": "um allows us to compile every language we just use and have trusted Computing so I'm expecting a lot of this of",
    "start": "2444339",
    "end": "2450820"
  },
  {
    "text": "anarchs so keep an eye out on that so I showed you a couple of things and I",
    "start": "2450820",
    "end": "2455980"
  },
  {
    "text": "showed you code which was pretty let's say verbose and on the stuff you need to",
    "start": "2455980",
    "end": "2461200"
  },
  {
    "text": "do all the errors you get like how can you make sense of it so what's next for wasn't what do we need in order to be",
    "start": "2461200",
    "end": "2467020"
  },
  {
    "text": "successful with this concept and there are probably also stuff that we know from the past which is an analog to this",
    "start": "2467020",
    "end": "2473440"
  },
  {
    "text": "and why would this succeed and why some of the others failed we will get there but",
    "start": "2473440",
    "end": "2479020"
  },
  {
    "text": "so the cartoons you see over here are so called code cartoons that are created by Lynn Clark who used to work for Mozilla",
    "start": "2479020",
    "end": "2485140"
  },
  {
    "text": "right now she's with fastly she still does a lot of work for bytecode Alliance and she's a really some really good cartoon series on how to explain stuff",
    "start": "2485140",
    "end": "2491820"
  },
  {
    "text": "and she also has some of the things on webassembly so if we look at the code",
    "start": "2491820",
    "end": "2497079"
  },
  {
    "text": "base itself right now if we write our software 80 is other people's code right that's a statistic that we also once",
    "start": "2497079",
    "end": "2503079"
  },
  {
    "text": "have Sun seen with our within our reports that we create so we rely a lot on others right and if",
    "start": "2503079",
    "end": "2511420"
  },
  {
    "text": "we look at dependencies keep in mind like let's say this is some application that starts the the top one",
    "start": "2511420",
    "end": "2518200"
  },
  {
    "text": "is the one that's responsible let's say it's a.net process that has different modules underneath then",
    "start": "2518200",
    "end": "2524140"
  },
  {
    "text": "the top one has access to everything right system resources and it will pass on the keys just to the lower part so",
    "start": "2524140",
    "end": "2529540"
  },
  {
    "text": "like hey if you want to have access to this you can do it if you want to have access to that yeah that's fine right somebody else's dependencies can just",
    "start": "2529540",
    "end": "2536500"
  },
  {
    "text": "reach that right away what happens if a module becomes malicious right whereas a mask it has",
    "start": "2536500",
    "end": "2542800"
  },
  {
    "text": "become malicious it says okay let's take a peek at your file system it can still do it right in this context because there's no safeguarding of not",
    "start": "2542800",
    "end": "2550599"
  },
  {
    "text": "allowing it to do right what if there is a vulnerability in the",
    "start": "2550599",
    "end": "2556180"
  },
  {
    "text": "module that's the side person that talks to the module and says like hey could you just give me more system information",
    "start": "2556180",
    "end": "2562300"
  },
  {
    "text": "or whatever right so because it's all the same context it has access to the",
    "start": "2562300",
    "end": "2567520"
  },
  {
    "text": "same resources they all have the same keys this is a problem what can we do to safeguard this",
    "start": "2567520",
    "end": "2573280"
  },
  {
    "text": "we could do process isolation so if you look at let's say browsers",
    "start": "2573280",
    "end": "2578380"
  },
  {
    "text": "Firefox Chrome each Tab and there's probably some more detailed information",
    "start": "2578380",
    "end": "2584079"
  },
  {
    "text": "on this but I think each tap mostly has its own process of rendering right because they want to have isolation you",
    "start": "2584079",
    "end": "2589359"
  },
  {
    "text": "don't want stuff to talk to each other and in order to communicate between process a and process B you need",
    "start": "2589359",
    "end": "2595300"
  },
  {
    "text": "something like an inter-process communication or a process boundary IPC call that's exactly the pipeline you see",
    "start": "2595300",
    "end": "2600940"
  },
  {
    "text": "underneath but if there is two process the biggest benefit is that memory is isolated as it says but there is a lot",
    "start": "2600940",
    "end": "2608740"
  },
  {
    "text": "of heavy weight around it because you need to start on two processes and it would have been better if we are more minimal right so there's the big",
    "start": "2608740",
    "end": "2616780"
  },
  {
    "text": "process with two modules slower communication a lot more overhead and the the disclaimer at the bottom says",
    "start": "2616780",
    "end": "2622599"
  },
  {
    "text": "this is not drawn to scale just to illustrate and the one at the bottom there's like something called Web",
    "start": "2622599",
    "end": "2628180"
  },
  {
    "text": "assembly nanoprocess and that's the next thing we're going to talk about so it's much more minimal it's memory each",
    "start": "2628180",
    "end": "2634480"
  },
  {
    "text": "module has its own memory in order to execute so what can we do to be more successful in this",
    "start": "2634480",
    "end": "2640900"
  },
  {
    "text": "the memory the the nanoprocess itself allows you to sandbox right so if there's a module loaded",
    "start": "2640900",
    "end": "2647200"
  },
  {
    "text": "there's somebody who's in charge with the head that will say okay this module is allowed to that formulas we have some",
    "start": "2647200",
    "end": "2652660"
  },
  {
    "text": "before like you you can access this folder or you can do this call on the system get random right or it it can",
    "start": "2652660",
    "end": "2660400"
  },
  {
    "text": "access the clock or it can do the USB make Pad there's different ways of dealing with this but there's somebody",
    "start": "2660400",
    "end": "2665859"
  },
  {
    "text": "in charge that's on top of this what else is more um",
    "start": "2665859",
    "end": "2670900"
  },
  {
    "text": "it's important each of the memory sections that belong to a module will be limited as well so this module cannot",
    "start": "2670900",
    "end": "2676780"
  },
  {
    "text": "access the rest of the memory unless it gets help of somebody else and",
    "start": "2676780",
    "end": "2682240"
  },
  {
    "text": "that's where interface types come in right so you need to describe how data looks and then module one can ask hey I",
    "start": "2682240",
    "end": "2689500"
  },
  {
    "text": "would like to have access to this piece of memory can you give it to me and there's somebody else that will then take care of it right so modules itself",
    "start": "2689500",
    "end": "2696400"
  },
  {
    "text": "cannot access memory on their own they probably can with the help of but it's not their decision to make and that's",
    "start": "2696400",
    "end": "2702819"
  },
  {
    "text": "the process of interfacing types but because you still want them there is data that might needs to be exchanged",
    "start": "2702819",
    "end": "2709480"
  },
  {
    "text": "right between those two modules in order to do something that totally makes sense but you don't want them to have direct access",
    "start": "2709480",
    "end": "2715240"
  },
  {
    "text": "and on top of that we want to have an API with fine-grade permission model title right so",
    "start": "2715240",
    "end": "2722140"
  },
  {
    "text": "the webassembly system interface with descriptive stuff title it's saying like you're allowed to do this",
    "start": "2722140",
    "end": "2728560"
  },
  {
    "text": "you're allowed to access this folder you're allowed to do this socket you're allowed to reach out to that one",
    "start": "2728560",
    "end": "2734319"
  },
  {
    "text": "that will then eventually become the webassembly nanoprocess so",
    "start": "2734319",
    "end": "2739599"
  },
  {
    "text": "and what they envisioned in this concept is there is a main module that will be in charge of everything and that will",
    "start": "2739599",
    "end": "2745300"
  },
  {
    "text": "hand out all the things and it will help out and it will eliminate if a module",
    "start": "2745300",
    "end": "2751540"
  },
  {
    "text": "becomes malicious and wants to have more access it doesn't have it right it doesn't it doesn't get it because uh the",
    "start": "2751540",
    "end": "2757119"
  },
  {
    "text": "ride is not there and that helps out so I think this is pretty pretty cool and how far is it so last year I think it",
    "start": "2757119",
    "end": "2765220"
  },
  {
    "text": "was October November there was uh Cloud native Wesson day",
    "start": "2765220",
    "end": "2770319"
  },
  {
    "text": "um in in the US and there's a real good presentation about the component model which is the whole ecosystem I just",
    "start": "2770319",
    "end": "2776859"
  },
  {
    "text": "described to you done by Luke Wagner you used to work for Firefox use but fastly you can really see the trends",
    "start": "2776859",
    "end": "2782560"
  },
  {
    "text": "what the people were doing um they are working on whole component model on how the security model should",
    "start": "2782560",
    "end": "2789760"
  },
  {
    "text": "look at and how you then also need to have tools in order to do stuff right because that's also the thing you're",
    "start": "2789760",
    "end": "2795220"
  },
  {
    "text": "missing you're not going to glue stuff together with code as I just did right it needs to be more automated but this",
    "start": "2795220",
    "end": "2801160"
  },
  {
    "text": "is a real good presentation if you want to see it on what's the path forward and he's also a person that was involved",
    "start": "2801160",
    "end": "2807040"
  },
  {
    "text": "with the initial standards of webassembly right so he really knows what he's talking about and there's definitely some really cool talks that",
    "start": "2807040",
    "end": "2813160"
  },
  {
    "text": "there wasn't there if you want to see more looking back at.net you probably would say like I know we've seen this before",
    "start": "2813160",
    "end": "2821099"
  },
  {
    "text": "decom yes but the first thing that Luke says during his presentation is like it looks",
    "start": "2821500",
    "end": "2826960"
  },
  {
    "text": "like dcom yeah but we're not doing any distributed stuff it's it's more mostly next to each other close to each other",
    "start": "2826960",
    "end": "2832660"
  },
  {
    "text": "and if people want to do distributed things with this it's a relying on the runtime on the host where it executes in",
    "start": "2832660",
    "end": "2839260"
  },
  {
    "text": "right so that's not the responsibility and the whole capability based model we've seen it with codex security which",
    "start": "2839260",
    "end": "2845140"
  },
  {
    "text": "is like I have this book Like A thick one when I started off my Development Career there's so much complexity in in",
    "start": "2845140",
    "end": "2850660"
  },
  {
    "text": "what you could do with codex security I'm not sure if any of you used it medium trust in asp.net core at some",
    "start": "2850660",
    "end": "2856480"
  },
  {
    "text": "point we got that um turned out just to be a mutex in user space memory that you can flip in order",
    "start": "2856480",
    "end": "2862240"
  },
  {
    "text": "to turn it off right so it's really easy to get around it and that's also the reason why Microsoft this is not working we're gonna limit it but this is",
    "start": "2862240",
    "end": "2868660"
  },
  {
    "text": "technically similar concept right and I think um that's why",
    "start": "2868660",
    "end": "2874180"
  },
  {
    "text": "um I really I'm fond of this and I'm keeping an eye out like how web assembly and how the component model evolves",
    "start": "2874180",
    "end": "2880420"
  },
  {
    "text": "because it all relies on how the tooling gets built um and how it is so I see that I miss",
    "start": "2880420",
    "end": "2887920"
  },
  {
    "text": "out on one slide that was supposed to be after this one so in order to do",
    "start": "2887920",
    "end": "2893140"
  },
  {
    "text": "better things with wasm and with the interface type there's a tool called white with buying gem which is also done",
    "start": "2893140",
    "end": "2900160"
  },
  {
    "text": "by Western time team and that's a tool that allows you to generate all the plumbing code you just saw me create",
    "start": "2900160",
    "end": "2905740"
  },
  {
    "text": "right so it will have the ability to see the interface types and like this is a module needs to have access to this",
    "start": "2905740",
    "end": "2911500"
  },
  {
    "text": "folders it needs to read create sockets it needs to do access to random or to",
    "start": "2911500",
    "end": "2917079"
  },
  {
    "text": "other system resources that's the thing you can then generate host Code 4 and",
    "start": "2917079",
    "end": "2922660"
  },
  {
    "text": "guest code and if you look into with by gen itself you will find that there's already demos fully working with rust",
    "start": "2922660",
    "end": "2929260"
  },
  {
    "text": "I think python is working as well unfortunately not.net I hope that they",
    "start": "2929260",
    "end": "2934780"
  },
  {
    "text": "have the demo included but the tool eventually will also support.net that I think that's the goal right so the glue",
    "start": "2934780",
    "end": "2940420"
  },
  {
    "text": "will be there um but if we then recap and see all of this and say like I know it's it's security",
    "start": "2940420",
    "end": "2946540"
  },
  {
    "text": "yes it looks kind of um there's a lot of output but how secure is it really",
    "start": "2946540",
    "end": "2953680"
  },
  {
    "text": "um I think in general we need to make sure that um the whole system and how this evolves",
    "start": "2953680",
    "end": "2960760"
  },
  {
    "text": "depends on how secure the runtimes are that execute this and if you look at the stuff that was",
    "start": "2960760",
    "end": "2966579"
  },
  {
    "text": "published at blackhead and Defcon last year in August every talk around webassembly was about fuzzing runtimes",
    "start": "2966579",
    "end": "2974319"
  },
  {
    "text": "and about false today found in implementations in runtime so that's still applicable but let's just assume",
    "start": "2974319",
    "end": "2980260"
  },
  {
    "text": "that everybody does a real good job and if you look at webassembly and why sometime",
    "start": "2980260",
    "end": "2985300"
  },
  {
    "text": "they have a real cool blog post on the bytecode alliance published in September 2022 where they explain how they",
    "start": "2985300",
    "end": "2992200"
  },
  {
    "text": "approach security within Western time it's written in Rust so it uses control for integrity as well right because",
    "start": "2992200",
    "end": "2998200"
  },
  {
    "text": "parts of the web assembly compiler stack also has it it's it's based for the clang which is a backend compiler and",
    "start": "2998200",
    "end": "3004440"
  },
  {
    "text": "they also have continuous fuzzing they have formal verification of like does it really do what it needs to do that kind",
    "start": "3004440",
    "end": "3010920"
  },
  {
    "text": "of thing and they have a whole process around security and vulnerability disclosure so they're pretty transparent right in the open this is a Roku blog",
    "start": "3010920",
    "end": "3018119"
  },
  {
    "text": "post if you want to know more about how it's being built but as I said the disclaimer we need to be aware of is",
    "start": "3018119",
    "end": "3023760"
  },
  {
    "text": "it's a secure as it's runtime and then it will stop if we then look at um",
    "start": "3023760",
    "end": "3029880"
  },
  {
    "text": "the conclusion I think if you look at Cloud native we even saw serverless functions already",
    "start": "3029880",
    "end": "3036480"
  },
  {
    "text": "performed like webassembly payloads right cloudflare does a lot of that as well",
    "start": "3036480",
    "end": "3041520"
  },
  {
    "text": "I think it's here to stay and also with Docker and web assembly modules it becomes the next thing outside of it",
    "start": "3041520",
    "end": "3047700"
  },
  {
    "text": "it's minimal it's much smaller right it has less to carry than a full Docker container that contains it all",
    "start": "3047700",
    "end": "3054300"
  },
  {
    "text": "um so it has a lot of potential to be used to run and extend your.net application as soon as the tooling gets in place",
    "start": "3054300",
    "end": "3061079"
  },
  {
    "text": "right because I think that's also what you saw with codex security if the complexity of that kind of thing is too",
    "start": "3061079",
    "end": "3066240"
  },
  {
    "text": "big and how could you even expect people to expect it like to to use it in a good",
    "start": "3066240",
    "end": "3071339"
  },
  {
    "text": "way and the thing that is key uh that's the last bit I like the whole top-down approach that",
    "start": "3071339",
    "end": "3077640"
  },
  {
    "text": "bad quote alliances taking right so codex security was just there and it was done to use and it was the big booklet",
    "start": "3077640",
    "end": "3082859"
  },
  {
    "text": "you need to look through they're just working down examples on how you can effectively use this and then they build",
    "start": "3082859",
    "end": "3088559"
  },
  {
    "text": "it up from there right so that's why the demos might look a bit rough but they said like hey if people start using this",
    "start": "3088559",
    "end": "3095400"
  },
  {
    "text": "and give us feedback then we can build something that's valuable that's the goal I think that's pretty cool",
    "start": "3095400",
    "end": "3100440"
  },
  {
    "text": "um and keep in mind webassembly runtime is a Securities implementation so with",
    "start": "3100440",
    "end": "3105660"
  },
  {
    "text": "that said I'm going to open up with enough time left for questions so the first repo",
    "start": "3105660",
    "end": "3112319"
  },
  {
    "text": "contains the slides in the demos um you can reach me on Mastodon on the",
    "start": "3112319",
    "end": "3119280"
  },
  {
    "text": "on the third link on my blog post I'm going to say Tech thank you talk that's the right pronunciation right talk",
    "start": "3119280",
    "end": "3126780"
  },
  {
    "text": "um hope you enjoy the conference hope to see you maybe next time unless there are questions I'm here until the end so",
    "start": "3126780",
    "end": "3133680"
  },
  {
    "text": "please feel free to ask questions",
    "start": "3133680",
    "end": "3139040"
  },
  {
    "text": "and if not then I'm just gonna say I'll let you go and say have a safe travels back and hopefully see you next time",
    "start": "3142800",
    "end": "3149339"
  },
  {
    "text": "thank you foreign",
    "start": "3149339",
    "end": "3154099"
  }
]