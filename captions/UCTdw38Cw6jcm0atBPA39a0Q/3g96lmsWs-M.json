[
  {
    "text": "good afternoon everybody this afternoon right um my name's Amy I have come here",
    "start": "6160",
    "end": "15360"
  },
  {
    "text": "today all the way from Perth in Australia so it's really exciting for you to have me here",
    "start": "15360",
    "end": "23240"
  },
  {
    "text": "today more exciting since I've ACC climatized to the fact that for some reason there's a minor symbol in front",
    "start": "23240",
    "end": "29039"
  },
  {
    "text": "of the temperature not entirely sure what's going on there hopefully everybody in the room is here",
    "start": "29039",
    "end": "35559"
  },
  {
    "text": "to learn about CSS grid if not uh you're in the wrong place if no one is here to",
    "start": "35559",
    "end": "41960"
  },
  {
    "text": "learn about CSS grid then I might be in the wrong place to start off today I",
    "start": "41960",
    "end": "49360"
  },
  {
    "text": "want to take you back to the beginning and take you on a little",
    "start": "49360",
    "end": "55039"
  },
  {
    "text": "story in the beginning it was darkness and emptiness",
    "start": "55039",
    "end": "61160"
  },
  {
    "text": "and then a man named Tim berners Lee said let there be",
    "start": "61160",
    "end": "67000"
  },
  {
    "text": "internet the internet was much simpler in these days it was just static HTML",
    "start": "67080",
    "end": "73479"
  },
  {
    "text": "content arranged on a page the same way you would in a Word document but",
    "start": "73479",
    "end": "79240"
  },
  {
    "text": "eventually we all got sick of looking at times near Roman and so Tim said let the fonts and",
    "start": "79240",
    "end": "86119"
  },
  {
    "text": "colors and sizes and positions be changeable and then there was",
    "start": "86119",
    "end": "93159"
  },
  {
    "text": "CSS but before too long this wasn't good enough either we wanted to do",
    "start": "93159",
    "end": "101320"
  },
  {
    "text": "more so we discovered that you could use",
    "start": "101320",
    "end": "107439"
  },
  {
    "text": "tables you could put your content inside the tables you could break your page up into a grid you could merge cells",
    "start": "107439",
    "end": "113680"
  },
  {
    "text": "together you could embed tables inside of tables this finally meant that we were able to control how the content",
    "start": "113680",
    "end": "120280"
  },
  {
    "text": "looked on our page but before too long we discovered",
    "start": "120280",
    "end": "126840"
  },
  {
    "text": "that although tables inside tables was okay tables inside tables inside tables",
    "start": "126840",
    "end": "134480"
  },
  {
    "text": "inside tables inside tables not so fun to work with as",
    "start": "134480",
    "end": "140000"
  },
  {
    "text": "anybody who deals with email templates today will know we started having excessive",
    "start": "140000",
    "end": "147480"
  },
  {
    "text": "complexity in our layouts it was was really hard to deal with and it became",
    "start": "147480",
    "end": "152599"
  },
  {
    "text": "really difficult when we had to try and make our websites look good on different device",
    "start": "152599",
    "end": "158280"
  },
  {
    "text": "sizes so we thought about it we started using",
    "start": "158280",
    "end": "165239"
  },
  {
    "text": "floats now this was good because we were back to following the separation of concerns principles which says that HTML",
    "start": "165239",
    "end": "173599"
  },
  {
    "text": "is where we dictate our content and CSS should be how we dictate how it looks",
    "start": "173599",
    "end": "179840"
  },
  {
    "text": "and appears on the page but though this was good for a",
    "start": "179840",
    "end": "185280"
  },
  {
    "text": "while before too long we discovered that floats weren't really great",
    "start": "185280",
    "end": "191720"
  },
  {
    "text": "either you had to clear fix everything you had to use excessive container divs",
    "start": "191720",
    "end": "197840"
  },
  {
    "text": "to either keep floated elements together or keep them apart when you use media",
    "start": "197840",
    "end": "203120"
  },
  {
    "text": "queries you either had to reset or change your previous code as well as do complex calculations",
    "start": "203120",
    "end": "210239"
  },
  {
    "text": "and there was a lot of using important which just made us feel",
    "start": "210239",
    "end": "215400"
  },
  {
    "text": "dirty so by the time we'd memorized how many percent wide an element needed to",
    "start": "215400",
    "end": "221920"
  },
  {
    "text": "be in a six column grid with a 1% margin we were really excited when flexbox came",
    "start": "221920",
    "end": "230000"
  },
  {
    "text": "along we didn't have to do all of that percentage math anymore and it actually reduced a lot of",
    "start": "230000",
    "end": "237319"
  },
  {
    "text": "the media queries that we were writing we were finally able to easily Center",
    "start": "237319",
    "end": "243799"
  },
  {
    "text": "our content vertically which is something we hadn't been able to do since the table",
    "start": "243799",
    "end": "250079"
  },
  {
    "text": "layout we finally started to get the functionality that we needed out of our",
    "start": "251000",
    "end": "256639"
  },
  {
    "text": "CSS we no longer needed to do complicated math work per with",
    "start": "256639",
    "end": "262120"
  },
  {
    "text": "percentages or write complicated code and our code was now more responsive than",
    "start": "262120",
    "end": "268199"
  },
  {
    "text": "ever but although flexbox was really good for Content that flowed in One",
    "start": "268199",
    "end": "274280"
  },
  {
    "text": "Direction there was limited control over the cross",
    "start": "274280",
    "end": "279400"
  },
  {
    "text": "AIS having gaps between the different elements also involved negative margins",
    "start": "279400",
    "end": "285000"
  },
  {
    "text": "a lot of the time and made them things complicated but things were looking up",
    "start": "285000",
    "end": "292080"
  },
  {
    "text": "we finally had a CSS technology that was built for layouts and in the distance where we",
    "start": "292080",
    "end": "299759"
  },
  {
    "text": "could see that the Cavalry was on the way in 2017 CSS grid launched in all new",
    "start": "299759",
    "end": "307320"
  },
  {
    "text": "major browsers which was something that no one could have predicted to all",
    "start": "307320",
    "end": "312840"
  },
  {
    "text": "happen at the same time this gave us everything we'd been asking for from a CSS",
    "start": "312840",
    "end": "319800"
  },
  {
    "text": "layout like flexbox we were able to define a set of constraints and let the",
    "start": "319800",
    "end": "326479"
  },
  {
    "text": "browser do a lot of the work with making that layout respon responsive we were now also able to",
    "start": "326479",
    "end": "334280"
  },
  {
    "text": "control the layout in two directions with grid we're able to Define areas of the layout we're able to",
    "start": "334280",
    "end": "341720"
  },
  {
    "text": "dictate whether an element spanned across multiple areas we were able",
    "start": "341720",
    "end": "347960"
  },
  {
    "text": "to we could make the code we were writing more responsive and more simple and we were",
    "start": "347960",
    "end": "356080"
  },
  {
    "text": "even able to reduce a lot of the thinking needed to make all layout respons",
    "start": "356080",
    "end": "361638"
  },
  {
    "text": "but of course everyone started asking the question isn't this just a fan a",
    "start": "362160",
    "end": "367880"
  },
  {
    "text": "version of the table layout that we had years ago that everyone's been scoffing at why do we really need",
    "start": "367880",
    "end": "375639"
  },
  {
    "text": "grid isn't that just tables no CSS grid is specifically defi defined",
    "start": "375639",
    "end": "385720"
  },
  {
    "text": "for building layouts whereas tables was something that we used as a hack don't",
    "start": "385720",
    "end": "392680"
  },
  {
    "text": "get me wrong tables do have a place they're just nowhere near",
    "start": "392680",
    "end": "398759"
  },
  {
    "text": "layouts also means that we're properly following the separation of concerns principles which means that our HTML is",
    "start": "398759",
    "end": "406080"
  },
  {
    "text": "where we've defined our content and our CSS is where we're defining the",
    "start": "406080",
    "end": "411479"
  },
  {
    "text": "layout grid has also helped us to write more logical and semantic",
    "start": "411479",
    "end": "417800"
  },
  {
    "text": "HTML how our HTM is structured is no longer dependent on how the final design",
    "start": "417800",
    "end": "423800"
  },
  {
    "text": "is meant to look we're able to Define our HTML how it should logically flow",
    "start": "423800",
    "end": "430360"
  },
  {
    "text": "and then use CSS to rearrange it visually where we need",
    "start": "430360",
    "end": "436080"
  },
  {
    "text": "to this means that when it's done right our code is now our content is now more",
    "start": "436080",
    "end": "442400"
  },
  {
    "text": "accessible to anybody who's looking at a website particularly those using a screen reader or accessible techn",
    "start": "442400",
    "end": "449599"
  },
  {
    "text": "accessible technology or anybody who saved your content for later using a",
    "start": "449599",
    "end": "455199"
  },
  {
    "text": "tool like pocket or reader mode now to prove how good GD",
    "start": "455199",
    "end": "464199"
  },
  {
    "text": "is we're going to mock up the wireframe of a notet taking app grid has made this",
    "start": "465319",
    "end": "472560"
  },
  {
    "text": "process so much easier so much faster and with less code so we're going to do",
    "start": "472560",
    "end": "478240"
  },
  {
    "text": "that today we have a basic HTML structure for this",
    "start": "478240",
    "end": "484080"
  },
  {
    "text": "app and we've seen the wireframe before of what the layout should look",
    "start": "484080",
    "end": "489120"
  },
  {
    "text": "like so everyone knows what happens next right this is the bit where you fight with the layout you've got a restructure",
    "start": "489120",
    "end": "495800"
  },
  {
    "text": "your HTML code and after hours worth of work it still isn't",
    "start": "495800",
    "end": "502759"
  },
  {
    "text": "working so we're going to start off today by applying display grid to the",
    "start": "503520",
    "end": "511320"
  },
  {
    "text": "body which lets the browser know that we're going to be using CSS",
    "start": "511320",
    "end": "517360"
  },
  {
    "text": "grid this hasn't really changed the layout of our content too much everything has still just flowed as we",
    "start": "517399",
    "end": "524760"
  },
  {
    "text": "would expect it to so next we're going to Define how big",
    "start": "524760",
    "end": "531680"
  },
  {
    "text": "we want our grid to be we're going to use grid template columns to Define how",
    "start": "531680",
    "end": "538600"
  },
  {
    "text": "many columns wide it is this is when we encounter for the first time one of the",
    "start": "538600",
    "end": "544480"
  },
  {
    "text": "new properties of CSS grid which is the repeat",
    "start": "544480",
    "end": "549720"
  },
  {
    "text": "function this is a shorthand to allow us to define the number of times to repeat",
    "start": "549720",
    "end": "555760"
  },
  {
    "text": "something then the size of the column that we're repeating for example repeat 3 200 pixels is a",
    "start": "555760",
    "end": "564800"
  },
  {
    "text": "shorthand way of writing that you want 200 pixels 200 pixels 200 pixels",
    "start": "564800",
    "end": "570279"
  },
  {
    "text": "but we're also not restricted to just having one column here either you can",
    "start": "570279",
    "end": "575920"
  },
  {
    "text": "say repeat two 10 pixels 20 pixels which would repeat that twice to give us 10",
    "start": "575920",
    "end": "582360"
  },
  {
    "text": "pixels sorry 20 20 viewport widths which would give us 10 pixels 20 viewport",
    "start": "582360",
    "end": "588399"
  },
  {
    "text": "widths 10 pixels 20 viewport widths this is really useful because we're able to use a wide range of different units in",
    "start": "588399",
    "end": "596480"
  },
  {
    "text": "this we're not just restricted to using pixels you can use viewport units percentages M's Rams pixels you name",
    "start": "596480",
    "end": "605839"
  },
  {
    "text": "it so we come back to the code we defined before which was repeat five",
    "start": "605839",
    "end": "610920"
  },
  {
    "text": "repeat five times and we've got a new one here",
    "start": "610920",
    "end": "617000"
  },
  {
    "text": "again CSS grid gives us the F unit which is similar to how we defined",
    "start": "617000",
    "end": "625920"
  },
  {
    "text": "percentage widths for elements previously and similar to how Flex basis works for",
    "start": "625920",
    "end": "632519"
  },
  {
    "text": "anyone who's used Flex box but it also does a lot of the thinking Associated",
    "start": "632519",
    "end": "638120"
  },
  {
    "text": "between different gaps between elements and takes away a lot of that work for",
    "start": "638120",
    "end": "644000"
  },
  {
    "text": "us so say for example I Define a grid",
    "start": "644000",
    "end": "649320"
  },
  {
    "text": "that has 100 pixel wide column a column that's one 50 pixel wide column and then a",
    "start": "649320",
    "end": "656880"
  },
  {
    "text": "column that's 2R and also Define that there is a gap of 20 pixels between each",
    "start": "656880",
    "end": "663160"
  },
  {
    "text": "of those columns we'll come back to the Gap a little bit more later what grid does with the F unit is",
    "start": "663160",
    "end": "671240"
  },
  {
    "text": "it will take 100% of the element width say 510",
    "start": "671240",
    "end": "678320"
  },
  {
    "text": "pixels then takes away any existing content so here we have 100 pixels and",
    "start": "678320",
    "end": "684519"
  },
  {
    "text": "50 pixels to give 150 pixels then takes into account any gaps",
    "start": "684519",
    "end": "691079"
  },
  {
    "text": "that we've defined so we have here a 20 pixel Gap repeated between four columns so we have three gaps which is 60",
    "start": "691079",
    "end": "700600"
  },
  {
    "text": "pixels we then take into account how many",
    "start": "700600",
    "end": "705800"
  },
  {
    "text": "FR units that we need to account for and divide it by that so here we have 1R and",
    "start": "705800",
    "end": "712880"
  },
  {
    "text": "2fr which becomes 3fr so when we divide the remainder we",
    "start": "712880",
    "end": "721480"
  },
  {
    "text": "get 100 pixels",
    "start": "721480",
    "end": "725839"
  },
  {
    "text": "per so this means that the grid that we've had before which was 100 pixels",
    "start": "727320",
    "end": "733320"
  },
  {
    "text": "105 50 pixels 2fr becomes 100 pixels 100 pixels 50 pixels 200 pixels with 100",
    "start": "733320",
    "end": "743240"
  },
  {
    "text": "pixels being def being allocated to the 1fr column and 200 to the 2fr column",
    "start": "743240",
    "end": "751160"
  },
  {
    "text": "we come back to our code from before and we've said that it should be 1R wide",
    "start": "751199",
    "end": "757440"
  },
  {
    "text": "what this is going to do is it's going to take five columns and make them equal",
    "start": "757440",
    "end": "763880"
  },
  {
    "text": "width no matter how big the grid container",
    "start": "763880",
    "end": "769079"
  },
  {
    "text": "is next we want to define the rows of our grid and we're going to do this",
    "start": "769079",
    "end": "775199"
  },
  {
    "text": "using grid template rows which will be the first one is 100 pixels High second",
    "start": "775199",
    "end": "781560"
  },
  {
    "text": "one is 1R so again the unit from before and the final one will be 20 pixels",
    "start": "781560",
    "end": "790519"
  },
  {
    "text": "high now you can see when we apply that new code to our grid it's now started to",
    "start": "790720",
    "end": "797760"
  },
  {
    "text": "create the grid spaces across and has put different elements inside the different spaces that we've just",
    "start": "797760",
    "end": "805639"
  },
  {
    "text": "generated things are still looking pretty funky though not really really making much Headway",
    "start": "805639",
    "end": "811199"
  },
  {
    "text": "yet next we want to allocate each of our elements to the spaces in the grid",
    "start": "811199",
    "end": "818279"
  },
  {
    "text": "there's a few different ways that we can do this for example first we're going to do the header we can Define grid column",
    "start": "818279",
    "end": "824800"
  },
  {
    "text": "start so this is where we W want the header element to start which is one",
    "start": "824800",
    "end": "830160"
  },
  {
    "text": "right at the beginning of our grid at column one we then Define where we want it to",
    "start": "830160",
    "end": "836920"
  },
  {
    "text": "end with grid coln end now we can Define that we want it to",
    "start": "836920",
    "end": "843800"
  },
  {
    "text": "end at grid column 5 which is right at the end but then if we change how big",
    "start": "843800",
    "end": "848920"
  },
  {
    "text": "our grid is that changes how wide the header is and we want it to go all the way across so we can Define that as grid",
    "start": "848920",
    "end": "856680"
  },
  {
    "text": "column minus1 which says it should go all the way to the end of the grid no matter how big it",
    "start": "856680",
    "end": "863120"
  },
  {
    "text": "is there's also a shorthand for this one so we can Define this same one as G",
    "start": "863120",
    "end": "869320"
  },
  {
    "text": "column 1/ -1 or alternatively we can simply say",
    "start": "869320",
    "end": "875600"
  },
  {
    "text": "that we want our element to span five columns and to let the grid place that",
    "start": "875600",
    "end": "881160"
  },
  {
    "text": "where it needs to go so if we assign grid column 1 - one",
    "start": "881160",
    "end": "888480"
  },
  {
    "text": "you can see here the header element has now taken up the full width of the first",
    "start": "888480",
    "end": "894040"
  },
  {
    "text": "row next we're going to Define where our sidebar sit",
    "start": "894040",
    "end": "900480"
  },
  {
    "text": "to do that our grid column we don't need to Define because it should only be one",
    "start": "900480",
    "end": "905800"
  },
  {
    "text": "column wide that's by default but we do want it to span two rows it should take",
    "start": "905800",
    "end": "910920"
  },
  {
    "text": "up both the middle section and span down onto the footer row and so we're going to Define grid row span two and we're",
    "start": "910920",
    "end": "919440"
  },
  {
    "text": "going to let the grid place that where it needs to go so you can see our sidebar over on",
    "start": "919440",
    "end": "927360"
  },
  {
    "text": "the side which lists our different notes it has now stretched down to take up",
    "start": "927360",
    "end": "932480"
  },
  {
    "text": "space in the footer row as well next we're going to place our main",
    "start": "932480",
    "end": "939480"
  },
  {
    "text": "note content we're going to do that by defining grid column span four and let",
    "start": "939480",
    "end": "945079"
  },
  {
    "text": "that one take up the remainder of the second row so you can see that one's now stretched out the full width and our",
    "start": "945079",
    "end": "951199"
  },
  {
    "text": "footer nav has now flowed down onto the bottom row where there's still",
    "start": "951199",
    "end": "957120"
  },
  {
    "text": "space finally we're going to Define that the footer nav should take up the",
    "start": "957120",
    "end": "962800"
  },
  {
    "text": "remainder of our grid on the bottom row with span four and that will now stretch out the",
    "start": "962800",
    "end": "970920"
  },
  {
    "text": "remainder of the bottom row there there's a different way we can",
    "start": "970920",
    "end": "977279"
  },
  {
    "text": "Define this as well as I said previously we can Define names for different areas",
    "start": "977279",
    "end": "983240"
  },
  {
    "text": "in a grid we can do this by still defining our columns and our rows as we did before but then defining grid",
    "start": "983240",
    "end": "990480"
  },
  {
    "text": "template areas this allows us to Simply create names for each of the sections",
    "start": "990480",
    "end": "997040"
  },
  {
    "text": "which is really useful in an overall layout like this we have one line for each row that we've defined and one word",
    "start": "997040",
    "end": "1004959"
  },
  {
    "text": "for each column so you can see here the header takes up the full first row the",
    "start": "1004959",
    "end": "1010880"
  },
  {
    "text": "nav takes up the First Column the second and third row with the note taking up",
    "start": "1010880",
    "end": "1016000"
  },
  {
    "text": "the remainder of the second row and the foot up the remainder of the the third row by doing it this way it makes it",
    "start": "1016000",
    "end": "1022720"
  },
  {
    "text": "really easy to create a responsive or to CH to change the layout because we",
    "start": "1022720",
    "end": "1028400"
  },
  {
    "text": "simply need to change how those template areas are defined the elements will flow",
    "start": "1028400",
    "end": "1033480"
  },
  {
    "text": "into them next we're going to assign areas to",
    "start": "1033480",
    "end": "1038918"
  },
  {
    "text": "each of our elements rather than assigning which columns it will take up and which rows so we're going to assign",
    "start": "1038919",
    "end": "1046319"
  },
  {
    "text": "grid area header to the header element grid area nav to the section element",
    "start": "1046319",
    "end": "1052559"
  },
  {
    "text": "grid area note to the main element and grid area footer to the fter",
    "start": "1052559",
    "end": "1059160"
  },
  {
    "text": "element this is where one of the really useful tools with CSS grid comes in",
    "start": "1059160",
    "end": "1065280"
  },
  {
    "text": "handy for anybody who doesn't use Firefox I highly recommend using it if",
    "start": "1065280",
    "end": "1071360"
  },
  {
    "text": "you're using grid at all Firefox has a built-in grid inspector which helps to",
    "start": "1071360",
    "end": "1077039"
  },
  {
    "text": "show where everything's coming from and is really useful when starting to get your head around how each of the",
    "start": "1077039",
    "end": "1082240"
  },
  {
    "text": "properties work you can see here it has given lines where all of the grid spaces",
    "start": "1082240",
    "end": "1089400"
  },
  {
    "text": "are and when using named areas like we've just defined it can overlay those",
    "start": "1089400",
    "end": "1095480"
  },
  {
    "text": "names over the spaces so we can see what's sitting where and why it's also put a really thick border around where",
    "start": "1095480",
    "end": "1102280"
  },
  {
    "text": "each of those areas is and where the element sits so",
    "start": "1102280",
    "end": "1110240"
  },
  {
    "text": "basic layer of our app done in seven lines of",
    "start": "1110240",
    "end": "1117640"
  },
  {
    "text": "CSS anybody think that was possible before but our main content section",
    "start": "1117640",
    "end": "1125559"
  },
  {
    "text": "isn't quite meant to look like that it shouldn't just be one big block this created on and the tag section should",
    "start": "1125559",
    "end": "1132440"
  },
  {
    "text": "really be on the far column here as this another sidebar now to do this",
    "start": "1132440",
    "end": "1139240"
  },
  {
    "text": "we could simply Define display grid to this again and we can create another grid inside a grid and do it that way",
    "start": "1139240",
    "end": "1146480"
  },
  {
    "text": "but one of the really useful tools that CSS grid gives us access to is display",
    "start": "1146480",
    "end": "1153440"
  },
  {
    "text": "contents display contents is assigned to any child of a grid like our main",
    "start": "1153440",
    "end": "1161200"
  },
  {
    "text": "section what it does is it takes this so we've got an article and",
    "start": "1161200",
    "end": "1168360"
  },
  {
    "text": "an side they're both wrapped in the main and when we assign display contents to",
    "start": "1168360",
    "end": "1174280"
  },
  {
    "text": "that main tag pretends they don't exist and we're",
    "start": "1174280",
    "end": "1179720"
  },
  {
    "text": "now able to use both the article and the aside as grid children inside of our",
    "start": "1179720",
    "end": "1185200"
  },
  {
    "text": "main layout grid that we've defined before so if we assign display contents",
    "start": "1185200",
    "end": "1193120"
  },
  {
    "text": "to the main tag you can see here rather than it being one big block of content tent the",
    "start": "1193120",
    "end": "1199360"
  },
  {
    "text": "article has taken up one column and the aside has taken up another column here",
    "start": "1199360",
    "end": "1205039"
  },
  {
    "text": "with two empty spaces they're now their own elements within the grid rather than",
    "start": "1205039",
    "end": "1210880"
  },
  {
    "text": "being part of one bigger element we then need to tweak the areas",
    "start": "1210880",
    "end": "1217039"
  },
  {
    "text": "that we defined before so now rather than the note taking up the full middle width it should take up three columns",
    "start": "1217039",
    "end": "1223960"
  },
  {
    "text": "with a sidebar on the final column we can then assign these areas to",
    "start": "1223960",
    "end": "1231400"
  },
  {
    "text": "the article and as side elements and we can see here the article",
    "start": "1231400",
    "end": "1237760"
  },
  {
    "text": "is now taking up this note section in the middle and the aside element is",
    "start": "1237760",
    "end": "1242799"
  },
  {
    "text": "taking up this side barar on the side",
    "start": "1242799",
    "end": "1248400"
  },
  {
    "text": "now a lot of the questions around grid when it first surfaced was if this is so",
    "start": "1248400",
    "end": "1257159"
  },
  {
    "text": "great do we we really need Flex boox anymore like if Grid's so awesome why do",
    "start": "1257159",
    "end": "1262880"
  },
  {
    "text": "I need to learn Flex box let me ask you a question",
    "start": "1262880",
    "end": "1268159"
  },
  {
    "text": "okay Batgirl really awesome kicks ass if anybody doesn't like Batgirl they can",
    "start": "1268159",
    "end": "1273840"
  },
  {
    "text": "leave now Black Canary also really awesome",
    "start": "1273840",
    "end": "1280880"
  },
  {
    "text": "also kicks ass but do we ask ourselves well why can't Batgirl replace Black Canary or",
    "start": "1280880",
    "end": "1287600"
  },
  {
    "text": "vice versa no they form a really awesome superhero",
    "start": "1287600",
    "end": "1295159"
  },
  {
    "text": "Duo so CSS grid is awesome for",
    "start": "1295159",
    "end": "1302400"
  },
  {
    "text": "layouts slex boox is really awesome for Content that flows in One",
    "start": "1302400",
    "end": "1308799"
  },
  {
    "text": "Direction therefore CSS grid and flexbox form a super CSS layout Duo work",
    "start": "1308799",
    "end": "1319240"
  },
  {
    "text": "really well together it isn't one or the other one of the really important things to do is to learn when to use one and",
    "start": "1319240",
    "end": "1327039"
  },
  {
    "text": "when to use the other CSS grid is really useful for layouts when you're dealing",
    "start": "1327039",
    "end": "1332480"
  },
  {
    "text": "with two Dimensions whereas Flex box is still really great for when you're just having to deal with one",
    "start": "1332480",
    "end": "1338320"
  },
  {
    "text": "dimension say for example a navigation menu like we've got in our footer",
    "start": "1338320",
    "end": "1347320"
  },
  {
    "text": "here we we only need it to flow in One Direction so this is where display Flex",
    "start": "1347320",
    "end": "1353640"
  },
  {
    "text": "comes in handy we can assign display Flex to our fooa nav and we're also",
    "start": "1353640",
    "end": "1360919"
  },
  {
    "text": "going to assign justify content space between what that does is that's going to take all the available space in the",
    "start": "1360919",
    "end": "1368600"
  },
  {
    "text": "element and it's going to equally spread it between each of the nav items so if we do that here our footer",
    "start": "1368600",
    "end": "1377080"
  },
  {
    "text": "nav is now spread all the way across the",
    "start": "1377080",
    "end": "1382400"
  },
  {
    "text": "footer now one of the other really useful tools with grid is grid has its",
    "start": "1382400",
    "end": "1389440"
  },
  {
    "text": "own justify items property and align items what this does is this defines how",
    "start": "1389440",
    "end": "1398400"
  },
  {
    "text": "the size of the element inside a grid should behave so as we've seen before",
    "start": "1398400",
    "end": "1403440"
  },
  {
    "text": "our colored elements are taking up the full size",
    "start": "1403440",
    "end": "1409640"
  },
  {
    "text": "within the grid despite the fact that we haven't actually defined any width and height to them this is because by",
    "start": "1409640",
    "end": "1416200"
  },
  {
    "text": "default it has set justify items to stretch so that says should",
    "start": "1416200",
    "end": "1423960"
  },
  {
    "text": "take up the full width of the element and a line items is also set to stretch",
    "start": "1423960",
    "end": "1431320"
  },
  {
    "text": "which means it should take up the full height as you can see in the phot down below where it really doesn't need that",
    "start": "1431320",
    "end": "1437880"
  },
  {
    "text": "extra space this also comes along with the",
    "start": "1437880",
    "end": "1443840"
  },
  {
    "text": "properties of justify self and a line self which are assigned to Children of",
    "start": "1443840",
    "end": "1449760"
  },
  {
    "text": "the grid if we want to individually dictate whether or not they should still take up the full grid",
    "start": "1449760",
    "end": "1456000"
  },
  {
    "text": "area say for example we assign justify self start to our Foo up rather than at",
    "start": "1456000",
    "end": "1464240"
  },
  {
    "text": "taking up the full area that has available it now only takes up as much",
    "start": "1464240",
    "end": "1471039"
  },
  {
    "text": "area in the X AIS as it needs so you can see our nav items are all bunched up at",
    "start": "1471039",
    "end": "1477520"
  },
  {
    "text": "the start again because that's as much space as they need now we can still give it a set",
    "start": "1477520",
    "end": "1486679"
  },
  {
    "text": "width say 300 pixels which means it'll have a little bit more space but it",
    "start": "1486679",
    "end": "1492919"
  },
  {
    "text": "really doesn't need to take up the full bottom the full length of the bottom of",
    "start": "1492919",
    "end": "1498760"
  },
  {
    "text": "our app you can see here we've also got our Flex box is adding space between each of",
    "start": "1498760",
    "end": "1506480"
  },
  {
    "text": "those nap items",
    "start": "1506480",
    "end": "1512000"
  },
  {
    "text": "so there we go fairly quickly we've put together a definitely not breathtakingly",
    "start": "1512000",
    "end": "1521520"
  },
  {
    "text": "beautiful but it looks",
    "start": "1521520",
    "end": "1526960"
  },
  {
    "text": "okay this is is what CSS grid is great for I'm not here to tell you how to make",
    "start": "1526960",
    "end": "1533039"
  },
  {
    "text": "things look beautiful or pretty or do really cool things this is really useful",
    "start": "1533039",
    "end": "1539480"
  },
  {
    "text": "for mocking together a layout like this really quickly but we might not just want a",
    "start": "1539480",
    "end": "1547960"
  },
  {
    "text": "layout like this in our app like this is really useful when I've only got three notes but what happens when I got 20 I",
    "start": "1547960",
    "end": "1554480"
  },
  {
    "text": "don't want to be scrolling through the sidebar to find the one that I want I want one of you which is going to list",
    "start": "1554480",
    "end": "1559600"
  },
  {
    "text": "all of them at once so we're going to define a new grid",
    "start": "1559600",
    "end": "1566080"
  },
  {
    "text": "layout which just has the header and footer and lists all of our different elements in the",
    "start": "1566080",
    "end": "1573480"
  },
  {
    "text": "middle now for this we're going to define a new Grid in this middle",
    "start": "1573480",
    "end": "1581480"
  },
  {
    "text": "section and we're going to redefine The Columns for this we're going to use the repeat function again because I want to",
    "start": "1581480",
    "end": "1588559"
  },
  {
    "text": "save the code that I",
    "start": "1588559",
    "end": "1591440"
  },
  {
    "text": "write and here we've got another new property again which is",
    "start": "1597320",
    "end": "1602919"
  },
  {
    "text": "AutoFill grid autofill is really useful what it does is it tells the browser to put in as",
    "start": "1602919",
    "end": "1612399"
  },
  {
    "text": "many grid columns as you can of a specific size for example this time we've said 100 pixels",
    "start": "1612399",
    "end": "1618840"
  },
  {
    "text": "so in a 500 pixel wide container it will put five columns",
    "start": "1618840",
    "end": "1625080"
  },
  {
    "text": "wide if it's a th000 pixel wide container it'll put 10 columns wide put",
    "start": "1625080",
    "end": "1631200"
  },
  {
    "text": "in as many as you can fit not taking into account how many elements it",
    "start": "1631200",
    "end": "1636360"
  },
  {
    "text": "actually has to fill that grid we also have here min max is",
    "start": "1636360",
    "end": "1645240"
  },
  {
    "text": "another new one min max similar to how you can define a minimum width and a maximum",
    "start": "1645240",
    "end": "1651399"
  },
  {
    "text": "width allows you to do it in one go it should be at least 100 pixels wide but",
    "start": "1651399",
    "end": "1658640"
  },
  {
    "text": "no more than 20 viewports wide again we're not restricted with",
    "start": "1658640",
    "end": "1665399"
  },
  {
    "text": "what units we can use Within These functions pixels M's Rams viewport",
    "start": "1665399",
    "end": "1672080"
  },
  {
    "text": "widths percentages units you can use any of them I think I don't don't think I've",
    "start": "1672080",
    "end": "1678519"
  },
  {
    "text": "forgotten any units there's a lot of them similarly we can Define that this",
    "start": "1678519",
    "end": "1685519"
  },
  {
    "text": "should be a minimum of 100 pixels wide with a maximum of 1R wide so what this",
    "start": "1685519",
    "end": "1692399"
  },
  {
    "text": "is going to do is it says it has to be at least 100 pixels wide they should all stay the same width which is",
    "start": "1692399",
    "end": "1700919"
  },
  {
    "text": "1R we can also Define that something should be at least one F wide should all",
    "start": "1700919",
    "end": "1706519"
  },
  {
    "text": "stay the same width but can't be bigger than 300 pixels wide minmax is really",
    "start": "1706519",
    "end": "1713360"
  },
  {
    "text": "useful especially when we're using it with autofill so if we come back to our code",
    "start": "1713360",
    "end": "1719159"
  },
  {
    "text": "from before we've said put as many columns as you can fit they have to be at least 300",
    "start": "1719159",
    "end": "1726519"
  },
  {
    "text": "pixels wide but they should stay the same width what this does is this means",
    "start": "1726519",
    "end": "1733720"
  },
  {
    "text": "by using the F unit as a maximum this will then take up the additional space",
    "start": "1733720",
    "end": "1739600"
  },
  {
    "text": "that we have available until it has enough room to put an extra column in so we'll always take up the full width of",
    "start": "1739600",
    "end": "1746240"
  },
  {
    "text": "our container so if we assign this to our",
    "start": "1746240",
    "end": "1753320"
  },
  {
    "text": "main element here you can see our three articles have now formed their own",
    "start": "1753320",
    "end": "1759279"
  },
  {
    "text": "columns but there's plenty of space left over for more if we need them but our",
    "start": "1759279",
    "end": "1766000"
  },
  {
    "text": "three elements have also taken up the full height of the container which looks",
    "start": "1766000",
    "end": "1772559"
  },
  {
    "text": "weird so we're going to Define grid template rows for this section as well",
    "start": "1772559",
    "end": "1779720"
  },
  {
    "text": "again we're going to use autofill many as you can put in for this one we just want to put a fixed height so as many",
    "start": "1779720",
    "end": "1787000"
  },
  {
    "text": "150 pixel high rows as you can fit in this",
    "start": "1787000",
    "end": "1792440"
  },
  {
    "text": "area so here they're a little bit nicer to read we're starting to get the blocks",
    "start": "1792600",
    "end": "1797840"
  },
  {
    "text": "that we're looking for but they're still also really bunched up",
    "start": "1797840",
    "end": "1803760"
  },
  {
    "text": "together so now we're going to come back to grid Gap from",
    "start": "1803760",
    "end": "1809279"
  },
  {
    "text": "before now this is a really great property because we've had so many",
    "start": "1809279",
    "end": "1815200"
  },
  {
    "text": "issues with adding these gaps with the different CSS layouts in the past grid",
    "start": "1815200",
    "end": "1820399"
  },
  {
    "text": "Gap is shorthand for grid column Gap and grid row Gap you can Define them each",
    "start": "1820399",
    "end": "1826880"
  },
  {
    "text": "separately but today we want both of the gaps to be the same so we just want 20",
    "start": "1826880",
    "end": "1832080"
  },
  {
    "text": "pixels between each of the columns between each of the rows if we add that there you can see",
    "start": "1832080",
    "end": "1839559"
  },
  {
    "text": "we're now started to get a bit of a gap between each of the blocks so it looks a little bit",
    "start": "1839559",
    "end": "1845480"
  },
  {
    "text": "nicer then we're going to come back to having a look at this with our Firefox",
    "start": "1845480",
    "end": "1851440"
  },
  {
    "text": "grid inspector you can see here where we've used our autofill it's still put",
    "start": "1851440",
    "end": "1857440"
  },
  {
    "text": "in the extra grid spaces because it can fit them even though we don't have the",
    "start": "1857440",
    "end": "1862679"
  },
  {
    "text": "content to fill there you can also see here where all of our grid gaps are",
    "start": "1862679",
    "end": "1869639"
  },
  {
    "text": "defined this is really useful if you're using Gap with any elements that span across multiple columns say for example",
    "start": "1869639",
    "end": "1878159"
  },
  {
    "text": "you have an element which spans across 200 pixel columns it won't just be 200",
    "start": "1878159",
    "end": "1884559"
  },
  {
    "text": "pixels wide it will then take into account the size of any gaps that it spans across so this is again a really",
    "start": "1884559",
    "end": "1892679"
  },
  {
    "text": "useful tool to have a look at",
    "start": "1892679",
    "end": "1898279"
  },
  {
    "text": "now this has been pretty good so far almost sounds too good to be",
    "start": "1898279",
    "end": "1905559"
  },
  {
    "text": "true can we really do this what could possibly make this not",
    "start": "1905559",
    "end": "1913919"
  },
  {
    "text": "usable yeah browser support no one likes hearing",
    "start": "1914240",
    "end": "1921440"
  },
  {
    "text": "browser support and I'm sure anybody here who works with desktop apps yeah you don't know the pain of",
    "start": "1921440",
    "end": "1929039"
  },
  {
    "text": "browser support so what is our browser support like are we actually going to be able to",
    "start": "1929039",
    "end": "1935760"
  },
  {
    "text": "use this well Chrome yeah it's probably pretty",
    "start": "1935760",
    "end": "1942679"
  },
  {
    "text": "good Chrome you're able to use this from version 57 onwards that one's",
    "start": "1942679",
    "end": "1949039"
  },
  {
    "text": "okay Firefox they built grid inspector so that one should be okay as well",
    "start": "1949039",
    "end": "1954919"
  },
  {
    "text": "they've been using grid for a while Safari yep that one's okay as well that",
    "start": "1954919",
    "end": "1961519"
  },
  {
    "text": "one's been around for a while Edge you know what Edge is actually on",
    "start": "1961519",
    "end": "1967279"
  },
  {
    "text": "top of it you can use this an",
    "start": "1967279",
    "end": "1970679"
  },
  {
    "text": "edge I version 10 supports",
    "start": "1974320",
    "end": "1980320"
  },
  {
    "text": "grid kind of so Microsoft was actually the first",
    "start": "1980320",
    "end": "1988120"
  },
  {
    "text": "people to start working on the CSS grid specification years and years ago they",
    "start": "1988120",
    "end": "1995960"
  },
  {
    "text": "actually had it in IE like ages back before anybody else was even looking at",
    "start": "1995960",
    "end": "2002559"
  },
  {
    "text": "the problem is they implemented a completely different version of the spec",
    "start": "2002559",
    "end": "2009120"
  },
  {
    "text": "to everyone else depending on what you're wanting to",
    "start": "2009120",
    "end": "2015159"
  },
  {
    "text": "do the version that is in IE may or may not work with the stuff that you're",
    "start": "2015159",
    "end": "2021279"
  },
  {
    "text": "using with the other browsers but the good news with C SS",
    "start": "2021279",
    "end": "2026960"
  },
  {
    "text": "grid is when you're not sure if your users are using a browser that supports",
    "start": "2026960",
    "end": "2033840"
  },
  {
    "text": "it we can use the at support",
    "start": "2033840",
    "end": "2039519"
  },
  {
    "text": "query at supports if you haven't used it before is similar to a media query it",
    "start": "2039519",
    "end": "2046399"
  },
  {
    "text": "allows you to define a CSS property and a value and if the browser knows what to",
    "start": "2046399",
    "end": "2052638"
  },
  {
    "text": "do with it it will then perform it will then process the code that you've put",
    "start": "2052639",
    "end": "2057800"
  },
  {
    "text": "inside of that query this is really useful because it means that we can just Define the grid",
    "start": "2057800",
    "end": "2064560"
  },
  {
    "text": "code inside the query if the browser do doesn't know what to do with it it'll",
    "start": "2064560",
    "end": "2070040"
  },
  {
    "text": "ignore it if the browser does know what to do with it then it'll make it grid",
    "start": "2070040",
    "end": "2076638"
  },
  {
    "text": "this means that CSS grid is actually really useful to implement really easy",
    "start": "2076639",
    "end": "2082679"
  },
  {
    "text": "to implement in an existing product so a lot of people go yeah but then we got to",
    "start": "2082679",
    "end": "2087839"
  },
  {
    "text": "do a fallback and so I've got to do the layout twice if you've got an existing",
    "start": "2087839",
    "end": "2093240"
  },
  {
    "text": "product you've already got your fallback you can now write the CSS grid",
    "start": "2093240",
    "end": "2098880"
  },
  {
    "text": "code inside of a supports tag if your users are able to use that they would",
    "start": "2098880",
    "end": "2104320"
  },
  {
    "text": "see the grid layout and if they can't then they'll see the old layout that you've already got",
    "start": "2104320",
    "end": "2111480"
  },
  {
    "text": "defined unfortunately this is where I's special kind of grid becomes difficult",
    "start": "2111480",
    "end": "2118240"
  },
  {
    "text": "cuz you would think I can go display grid and iie won't be able to do that",
    "start": "2118240",
    "end": "2123800"
  },
  {
    "text": "the problem is I sees this and goes yep G I know what to do I can do",
    "start": "2123800",
    "end": "2130079"
  },
  {
    "text": "this but it",
    "start": "2130079",
    "end": "2133680"
  },
  {
    "text": "can't again if you're really interested read the spec that iie has to just work",
    "start": "2135599",
    "end": "2141480"
  },
  {
    "text": "out whether or not it can work if you're doing something really basic you may be able to get away with it but one of the",
    "start": "2141480",
    "end": "2147880"
  },
  {
    "text": "really useful things is IE doesn't support all grid properties so I can",
    "start": "2147880",
    "end": "2154000"
  },
  {
    "text": "instead do a at supports check for grid template areas which I know IE",
    "start": "2154000",
    "end": "2161359"
  },
  {
    "text": "definitely has no idea what to do with doesn't matter what areas you define here it's just checking to see if it",
    "start": "2161359",
    "end": "2168520"
  },
  {
    "text": "knows what you're doing so by doing a support scre for something like this",
    "start": "2168520",
    "end": "2174680"
  },
  {
    "text": "instead I know that the rest of the browsers are able to process the code inside and I will ignore it just like it",
    "start": "2174680",
    "end": "2181839"
  },
  {
    "text": "should can go back to doing the boring table layout or whatever whatever it is",
    "start": "2181839",
    "end": "2187200"
  },
  {
    "text": "that the back is",
    "start": "2187200",
    "end": "2192960"
  },
  {
    "text": "so this is a really useful one because I can just Define my supports",
    "start": "2192960",
    "end": "2199319"
  },
  {
    "text": "query put the grid layout code inside and you don't have to worry too much about fallbacks support is a relatively",
    "start": "2199319",
    "end": "2207560"
  },
  {
    "text": "new query but the good thing is it has more support than CSS grid does so if a",
    "start": "2207560",
    "end": "2213480"
  },
  {
    "text": "browser doesn't know what to do with supports it definitely won't know what to do with grid so it just ignores it",
    "start": "2213480",
    "end": "2220079"
  },
  {
    "text": "all anyway it's it's really a great fallback really can't go",
    "start": "2220079",
    "end": "2225319"
  },
  {
    "text": "wrong so summing up what have we covered here",
    "start": "2225319",
    "end": "2232040"
  },
  {
    "text": "today CSS grid is awesome that was it",
    "start": "2232040",
    "end": "2238359"
  },
  {
    "text": "right no seriously CSS grid is awesome it is Magic I I can't stress how much",
    "start": "2238359",
    "end": "2248319"
  },
  {
    "text": "I'm excited by this because as you seven lines of code one layout seven lines of",
    "start": "2248319",
    "end": "2254480"
  },
  {
    "text": "code did anybody actually think that was possible no whether you're a backend developer or",
    "start": "2254480",
    "end": "2261880"
  },
  {
    "text": "a front-end developer or a designer or you there's too many job titles to list",
    "start": "2261880",
    "end": "2267839"
  },
  {
    "text": "them right now I really shouldn't complain my job title is frontend ninja so I'm not really helping the",
    "start": "2267839",
    "end": "2274839"
  },
  {
    "text": "problem CSS grid is worth looking into whether it's something that you can",
    "start": "2274839",
    "end": "2280720"
  },
  {
    "text": "Implement on an existing product whether you can try and work it into a new product or even if you just want to use",
    "start": "2280720",
    "end": "2287240"
  },
  {
    "text": "it to mock the layout up really quickly proof of concept they're great for",
    "start": "2287240",
    "end": "2293560"
  },
  {
    "text": "it there are a bunch of different resources out there for grid as well anybody who's in the front end area it's",
    "start": "2293560",
    "end": "2302000"
  },
  {
    "text": "buzzing everybody's talking about it there's so much information out there it's ridiculous Google CSS grid you'll",
    "start": "2302000",
    "end": "2308760"
  },
  {
    "text": "find everything however if you don't want to look through all of that here are a few different links that",
    "start": "2308760",
    "end": "2316599"
  },
  {
    "text": "I highly recommend checking out I've also just tweeted them out because you know I'm Magic No",
    "start": "2316599",
    "end": "2322480"
  },
  {
    "text": "Hands CSS tricks has a really great guide to grid I use this every day like multiple",
    "start": "2322480",
    "end": "2330520"
  },
  {
    "text": "times every day I probably massively skewed their view stats just writing",
    "start": "2330520",
    "end": "2336160"
  },
  {
    "text": "this talk because every every time I closed it went oh that's right I need to check this as well wesbos if anybody is familiar with",
    "start": "2336160",
    "end": "2344319"
  },
  {
    "text": "his JavaScript courses did a really good CSS grid course it is free if anybody",
    "start": "2344319",
    "end": "2351119"
  },
  {
    "text": "doesn't like doing online video courses I recommend just kind of having",
    "start": "2351119",
    "end": "2356400"
  },
  {
    "text": "a look at it anyway I hate doing video courses I much prefer to read and go at my own pace but his courses are awesome",
    "start": "2356400",
    "end": "2364040"
  },
  {
    "text": "so that one's a good one to have a look at again it's free if you prefer to you know physical book",
    "start": "2364040",
    "end": "2372000"
  },
  {
    "text": "things they still exist a book aart has a really great",
    "start": "2372000",
    "end": "2377200"
  },
  {
    "text": "book on not just CSS grid but whole CSS layout that one's a really good tool as",
    "start": "2377200",
    "end": "2383000"
  },
  {
    "text": "well otherwise both Rachel Andrew and Jen Simmons are great people to have a",
    "start": "2383000",
    "end": "2389440"
  },
  {
    "text": "look at Rachel was literally involved in writing how CSS grid works like she",
    "start": "2389440",
    "end": "2395880"
  },
  {
    "text": "literally built it and Jen Simmons works at Firefox and she was one of the big",
    "start": "2395880",
    "end": "2401359"
  },
  {
    "text": "people behind the Firefox grid inspector so they're a good place to",
    "start": "2401359",
    "end": "2407000"
  },
  {
    "text": "go thank you very much for having",
    "start": "2407520",
    "end": "2412040"
  },
  {
    "text": "me I know I'm way under time but it's also really late in the day and it's you know like we could have nap after lunch",
    "start": "2417599",
    "end": "2425359"
  },
  {
    "text": "it's a bit rough um if anybody had any questions they're welcome to ask them",
    "start": "2425359",
    "end": "2430839"
  },
  {
    "text": "now but I will also be here this afternoon and for the rest of the conference and actually till Sunday",
    "start": "2430839",
    "end": "2436319"
  },
  {
    "text": "because I flew 20 hours on a plane I'm going to make my time here worth it uh",
    "start": "2436319",
    "end": "2441440"
  },
  {
    "text": "so did anybody have any questions to ask here or everyone just kind of wants to ask their questions in person and not",
    "start": "2441440",
    "end": "2449040"
  },
  {
    "text": "stand up in the middle of a room",
    "start": "2449040",
    "end": "2454400"
  },
  {
    "text": "nope once one person asks a question every everybody",
    "start": "2454400",
    "end": "2459640"
  },
  {
    "text": "will yeah with regards to the supports query",
    "start": "2461079",
    "end": "2467200"
  },
  {
    "text": "yeah how do how do you avoid serving the fallback CSS to the browser that",
    "start": "2467200",
    "end": "2475078"
  },
  {
    "text": "do so supports can also take into account",
    "start": "2477000",
    "end": "2482240"
  },
  {
    "text": "the CSS not selector",
    "start": "2482240",
    "end": "2487800"
  },
  {
    "text": "which basically you could also do a query to see if it doesn't not",
    "start": "2487800",
    "end": "2495680"
  },
  {
    "text": "support it'll probably get complicated because you could kind of check whether",
    "start": "2495680",
    "end": "2502800"
  },
  {
    "text": "or not it doesn't but a lot of the ways you can check that probably aren't supported by",
    "start": "2502800",
    "end": "2510000"
  },
  {
    "text": "the browser that doesn't support grid so do you have to like overwrite",
    "start": "2510000",
    "end": "2516960"
  },
  {
    "text": "the fallback in your support s depending on how you've done the fallback yes you",
    "start": "2516960",
    "end": "2523280"
  },
  {
    "text": "do often have to overwrite it a little bit um yeah depending what I think uh if",
    "start": "2523280",
    "end": "2529800"
  },
  {
    "text": "you've done it using floats a lot of the stuff just kind of becomes obsolete in",
    "start": "2529800",
    "end": "2535160"
  },
  {
    "text": "the grid layout uh if you're using tables then you're screwed you can't see",
    "start": "2535160",
    "end": "2541599"
  },
  {
    "text": "SS grid a table um and I probably recommend just rewriting the thing",
    "start": "2541599",
    "end": "2546720"
  },
  {
    "text": "anyway um Flex box is when it starts to get a little bit difficult particularly because they use a lot of similar",
    "start": "2546720",
    "end": "2552680"
  },
  {
    "text": "properties but then it make Flex boxes actually a really good fallback for grid because a lot of it kind of works sorry",
    "start": "2552680",
    "end": "2559480"
  },
  {
    "text": "there's really bright light so there's just like a yellow spot in front of your face um that's even worse yeah so uh dep",
    "start": "2559480",
    "end": "2568760"
  },
  {
    "text": "it really depends on what method you've used for the fallback if you've done Flex box you're possibly okay as well",
    "start": "2568760",
    "end": "2577920"
  },
  {
    "text": "um that will change however so a lot of as you've seen a lot of the properties",
    "start": "2577920",
    "end": "2583079"
  },
  {
    "text": "for grid kind of similar to flexbox so they're actually standardizing it a lot in CSS grid",
    "start": "2583079",
    "end": "2589839"
  },
  {
    "text": "version too um so that may change a little bit so I feel like I've just confused you even more and haven't",
    "start": "2589839",
    "end": "2596119"
  },
  {
    "text": "really answered your question it's okay",
    "start": "2596119",
    "end": "2601839"
  },
  {
    "text": "um the best thing I think I think thing I will do is just use the G and everyone",
    "start": "2601839",
    "end": "2608440"
  },
  {
    "text": "else can have nothing that's basically what I do so all of my websites my blog everything",
    "start": "2608440",
    "end": "2614800"
  },
  {
    "text": "is CSS grid with no fallbacks um because it's my website I don't",
    "start": "2614800",
    "end": "2621520"
  },
  {
    "text": "care um I'm currently using grid on a website I'm building for company a",
    "start": "2621520",
    "end": "2627359"
  },
  {
    "text": "contract for unfortunately some of their biggest sponsors Are",
    "start": "2627359",
    "end": "2633200"
  },
  {
    "text": "banks and turns out they're not great with you know up to-date technology so I",
    "start": "2633200",
    "end": "2638960"
  },
  {
    "text": "need to have a fullback for that one but I basically I was like I'm just going to flex boox it I I don't care it will work",
    "start": "2638960",
    "end": "2645839"
  },
  {
    "text": "it is visible it is usable but we're just we're just doing grid the fallback",
    "start": "2645839",
    "end": "2651680"
  },
  {
    "text": "is just a lot of people depending on where you work a lot of people aren't doing",
    "start": "2651680",
    "end": "2658720"
  },
  {
    "text": "the should look exactly the same in every browser anymore which is really",
    "start": "2658720",
    "end": "2664559"
  },
  {
    "text": "good any other questions",
    "start": "2665160",
    "end": "2669039"
  },
  {
    "text": "everybody's just going to come up to me afterwards they don't want to single themselves out okay once again thank you",
    "start": "2671440",
    "end": "2677640"
  },
  {
    "text": "very much for having me here it has been an absolute pleasure thank you",
    "start": "2677640",
    "end": "2685119"
  }
]