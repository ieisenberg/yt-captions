[
  {
    "start": "0",
    "end": "102000"
  },
  {
    "text": "hello baby hey we're on I think it's on all right shall we get started today",
    "start": "4160",
    "end": "13080"
  },
  {
    "text": "hello everyone I'd like to start today with a song Jimmy and Scott and I have been",
    "start": "13080",
    "end": "20039"
  },
  {
    "text": "working Barbershop a lot of people don't know this we've been working on a Katy Perry song",
    "start": "20039",
    "end": "25560"
  },
  {
    "text": "uh that the one KY P yeah so why don't you start us off uh",
    "start": "25560",
    "end": "30759"
  },
  {
    "text": "do it okay so welcome everyone to our head-to-head uh in case you don't know",
    "start": "30759",
    "end": "36399"
  },
  {
    "text": "uh who these people are or what's happening let me just quickly introduce them this is Scott Allen everybody knows Scott Allen this is Jimmy he's from",
    "start": "36399",
    "end": "44000"
  },
  {
    "text": "Texas yeaw Jimmy B I'm Rob Conor I actually do have a horse too",
    "start": "44000",
    "end": "49680"
  },
  {
    "text": "that's not here's the idea every year at NDC we try and do something a little bit more fun and we've been doing what they",
    "start": "49680",
    "end": "55840"
  },
  {
    "text": "have been calling cage matches where we do two competing Technologies but this year we decided to do something a little",
    "start": "55840",
    "end": "61239"
  },
  {
    "text": "different so I go to stack Overflow I grab six or so questions uh today is",
    "start": "61239",
    "end": "67159"
  },
  {
    "text": "mostly about net we have an angular question as well I give these two guys the questions and they have to come up",
    "start": "67159",
    "end": "73520"
  },
  {
    "text": "with their own answers independently so we're going to see answers to the same questions they don't know what each",
    "start": "73520",
    "end": "79720"
  },
  {
    "text": "other each other's answers are and then we're going to mix and match and compare and contrast that's it your involvement is",
    "start": "79720",
    "end": "86159"
  },
  {
    "text": "actually encouraged I know being in Norway you guys are really really vocal so I might wander I might wander around",
    "start": "86159",
    "end": "92960"
  },
  {
    "text": "and if you feel me kick you that means ask these guys a question so this is going to be hopefully fairly interactive with that said Scott will you start us",
    "start": "92960",
    "end": "101040"
  },
  {
    "text": "off start us off with the first question uh no with a song please oh with a song",
    "start": "101040",
    "end": "106360"
  },
  {
    "start": "102000",
    "end": "277000"
  },
  {
    "text": "Katy Perry I actually don't know any Katy Perry songs I'm sorry she gangster rap",
    "start": "106360",
    "end": "113320"
  },
  {
    "text": "Noster all right well one question Rob sent out to us was about the service point manager.",
    "start": "113320",
    "end": "119880"
  },
  {
    "text": "default connection limit which maybe you've never heard of this class but apparently the fellow who asked this",
    "start": "119880",
    "end": "125039"
  },
  {
    "text": "question was had written a webb2 service in net core and he found this piece of",
    "start": "125039",
    "end": "131160"
  },
  {
    "text": "code that set the service Point manager. default connection limit to in. max",
    "start": "131160",
    "end": "139000"
  },
  {
    "text": "value which increases the connection limit by the way doesn't know if it's for the",
    "start": "139280",
    "end": "145480"
  },
  {
    "text": "computer or the framework and he just wanted to know how to do this in net core and I had never actually seen the",
    "start": "145480",
    "end": "151560"
  },
  {
    "text": "service Point manager I actually had to go out and do a little research but I think I know what was behind all of this",
    "start": "151560",
    "end": "157120"
  },
  {
    "text": "I remember when I first started with net I actually wrote an application server side and in asp.net we were trying to",
    "start": "157120",
    "end": "163680"
  },
  {
    "text": "make multiple connections from our server to another server and it turns out there is a connection limit baked",
    "start": "163680",
    "end": "169200"
  },
  {
    "text": "into the framework where you can only make two HTTP connections to another server which makes sense from Microsoft",
    "start": "169200",
    "end": "177680"
  },
  {
    "text": "perspective because they were following the HTTP r FP the official specification that says you should only make two HTTP",
    "start": "177680",
    "end": "183879"
  },
  {
    "text": "connections to another server but that might be good for web browsers so that web browsers don't overload a server but",
    "start": "183879",
    "end": "190640"
  },
  {
    "text": "it's not so good when you have two servers inside the firewall that need to communicate with each with each other",
    "start": "190640",
    "end": "195799"
  },
  {
    "text": "efficiently and they're handling all sorts of requests from clients so I remember back then we used to change the",
    "start": "195799",
    "end": "201080"
  },
  {
    "text": "connection limit using a web.config file which doesn't exist in core as",
    "start": "201080",
    "end": "208159"
  },
  {
    "text": "yet it's making a come back probably well there was a project. Json",
    "start": "208159",
    "end": "215480"
  },
  {
    "text": "file but now there's a CS project file too so we're yeah we're not sure uh anyway for this one I did come",
    "start": "215480",
    "end": "224040"
  },
  {
    "text": "up with a really quick simple little piece of code that appears to",
    "start": "224040",
    "end": "229280"
  },
  {
    "text": "do what this gentleman would like to do which is from a net core application",
    "start": "229280",
    "end": "235760"
  },
  {
    "text": "like this you'll probably be using HTTP client and if you pass in a special message Handler that is a win HTTP",
    "start": "235760",
    "end": "243000"
  },
  {
    "text": "Handler into this you can set max connections per server to whatever you want uh I guess the question there would",
    "start": "243000",
    "end": "249680"
  },
  {
    "text": "a win HTTP Handler be available on a non Windows operating system that I don't",
    "start": "249680",
    "end": "255840"
  },
  {
    "text": "know some of us have more experience trying to uh Port things to different",
    "start": "255840",
    "end": "261400"
  },
  {
    "text": "environments than I do but I don't know what does Jimmy think um I actually I",
    "start": "261400",
    "end": "267240"
  },
  {
    "text": "think I have a more elegant answer than yours obviously so I'm a consultant so I'm always",
    "start": "267240",
    "end": "273280"
  },
  {
    "text": "looking for the the question behind the question and maybe the question behind that one as well uh so this guy he looks",
    "start": "273280",
    "end": "278680"
  },
  {
    "start": "277000",
    "end": "438000"
  },
  {
    "text": "like he's orgal no Bal I don't know person uh is is trying to have more",
    "start": "278680",
    "end": "284960"
  },
  {
    "text": "concurrent connections uh in net uh so I think that he's uh he his problem can be",
    "start": "284960",
    "end": "290400"
  },
  {
    "text": "more simply solved I got a gist here going here uh can everyone see this",
    "start": "290400",
    "end": "295520"
  },
  {
    "text": "okay okay so the solution I came up with uh was you",
    "start": "295520",
    "end": "301240"
  },
  {
    "text": "Phoenix Elixir Elixir yes and that'll solve his problem it'll allow much more",
    "start": "301240",
    "end": "306919"
  },
  {
    "text": "concurrent connections at the same time problem",
    "start": "306919",
    "end": "311440"
  },
  {
    "text": "solved that",
    "start": "312479",
    "end": "315560"
  },
  {
    "text": "was I think I just lost my MVP",
    "start": "319680",
    "end": "324080"
  },
  {
    "text": "sorry oh so so next question next question",
    "start": "325120",
    "end": "331080"
  },
  {
    "text": "all right so the next question uh there's another poor soul here he wants to know how to uh how to perform and",
    "start": "331080",
    "end": "338400"
  },
  {
    "text": "Performing and type safe collection I assume the grammar is correct on that",
    "start": "338400",
    "end": "343680"
  },
  {
    "text": "question uh okay so performing and type safe collection of value types in the early version of net 1.1 uh so that 1.1",
    "start": "343680",
    "end": "351840"
  },
  {
    "text": "is preener so he's probably in a world of hurt right now says he he recently got access to a very old C code base",
    "start": "351840",
    "end": "357720"
  },
  {
    "text": "meaning net11 and C one two uh which I guess if John Ski would here would tell you exactly what that added closures I",
    "start": "357720",
    "end": "365560"
  },
  {
    "text": "don't know um uh and finding places it could be improved um so I guess he he",
    "start": "365560",
    "end": "371440"
  },
  {
    "text": "actually wants to improve the K base and not just throw it away which would be my first reaction uh it looks like a is",
    "start": "371440",
    "end": "377199"
  },
  {
    "text": "like a window to the past when a when a bow was the most powerful weapon I never had the opportunity to willingly code in",
    "start": "377199",
    "end": "383599"
  },
  {
    "text": "C version lesser than c 2 before so this is the first time you've seen C uh 2 which is kind of like seeing like Java 3",
    "start": "383599",
    "end": "389720"
  },
  {
    "text": "for the first time it's just a very bad thing to look at and so this question is about uh collection so the C this",
    "start": "389720",
    "end": "396240"
  },
  {
    "text": "version didn't have any uh didn't have any generic collections whatsoever and so he has a lot of these generic array",
    "start": "396240",
    "end": "403720"
  },
  {
    "text": "lists uh I'm sorry yeah not generic but aist to just have everything as an object and wants to know if there's a",
    "start": "403720",
    "end": "409800"
  },
  {
    "text": "better way for you to do this sort of thing uh without dealing with a array list directly now um one possible way he",
    "start": "409800",
    "end": "418400"
  },
  {
    "text": "could do this would just be to update his applications to net2 and get generics like that's you can just retarget it that would also let you let",
    "start": "418400",
    "end": "425000"
  },
  {
    "text": "you do those sort of things uh but that's not available to him um so the",
    "start": "425000",
    "end": "430599"
  },
  {
    "text": "way he could handle this uh I actually worked at a product team where we had to deal with a bunch of bunch of collection",
    "start": "430599",
    "end": "435639"
  },
  {
    "text": "types just like this uh so the way I would deal with it",
    "start": "435639",
    "end": "442919"
  },
  {
    "start": "438000",
    "end": "518000"
  },
  {
    "text": "uh there's an old set of collection objects in the",
    "start": "442919",
    "end": "448520"
  },
  {
    "text": "system let me just create a class public class uh Fu collection there's a really",
    "start": "448520",
    "end": "455080"
  },
  {
    "text": "old set of collection classes you can deal with that come from the system. collections namespace most people these",
    "start": "455080",
    "end": "460960"
  },
  {
    "text": "days use like system. collections. generic or something like that currentcurrent whatever uh this is where you find the old array list uh but right",
    "start": "460960",
    "end": "467560"
  },
  {
    "text": "above that is actually this other one called collection base and this is the one that we always had to use for our",
    "start": "467560",
    "end": "472800"
  },
  {
    "text": "custom collection types and because this Isn net that means everything has to be a subclass and override sort of thing",
    "start": "472800",
    "end": "479520"
  },
  {
    "text": "and so this thing has a bunch of overridable methods uh including things like uh on insert on insert complete uh",
    "start": "479520",
    "end": "487919"
  },
  {
    "text": "because I guess it comes after inserting or something like that and all sorts of methods to do all these sort of things",
    "start": "487919",
    "end": "493319"
  },
  {
    "text": "so uh these are the ones you would you would override to be able to say I'm returning this kind of object or that kind of object that sort of thing uh so",
    "start": "493319",
    "end": "499879"
  },
  {
    "text": "this is the thing I remember us having to do I don't have a funny answer for this one because there's nothing funny about",
    "start": "499879",
    "end": "506479"
  },
  {
    "text": "C11 C I'm sorry see sh uh please quiet in the audience thank",
    "start": "507800",
    "end": "513080"
  },
  {
    "text": "you all right so uh what do you got me well all right so what I would do in this scenario is uh think about okay he",
    "start": "513080",
    "end": "520518"
  },
  {
    "start": "518000",
    "end": "853000"
  },
  {
    "text": "can't this person cannot use generics but think about what generics are if I have um a class Define say we have a",
    "start": "520519",
    "end": "528760"
  },
  {
    "text": "public class F of te and it's a class not just a",
    "start": "528760",
    "end": "535200"
  },
  {
    "text": "food and inside my program I say something like",
    "start": "535200",
    "end": "540880"
  },
  {
    "text": "um VAR thing equals new F of int what's the C compiler doing it's",
    "start": "540880",
    "end": "547480"
  },
  {
    "text": "taking this generic type parameter it's a parameter and anywhere where it sees a",
    "start": "547480",
    "end": "552600"
  },
  {
    "text": "t so if I want to add a food to something the C compiler will simply",
    "start": "552600",
    "end": "559920"
  },
  {
    "text": "come through that thing and replace the T with the type that you have substituted here like",
    "start": "559920",
    "end": "565480"
  },
  {
    "text": "integer and it's a very simple operation that the compiler does for us but but what we could do is we could go to a",
    "start": "565480",
    "end": "573079"
  },
  {
    "text": "collection class that was already implemented implemented that could be very performant with integers is just",
    "start": "573079",
    "end": "578720"
  },
  {
    "text": "has a generic type parameter in it and we can actually find the source code to a a great collection like this just",
    "start": "578720",
    "end": "584800"
  },
  {
    "text": "search GitHub for a little project called core",
    "start": "584800",
    "end": "590519"
  },
  {
    "text": "FX which is uh part of net right and inside of",
    "start": "590519",
    "end": "597079"
  },
  {
    "text": "source system. collections we should find a source",
    "start": "597079",
    "end": "603000"
  },
  {
    "text": "folder with the collections folder with the generic folder notice all the",
    "start": "603000",
    "end": "608240"
  },
  {
    "text": "non-generic collections have disappeared so things like array list are are gone now which is probably a good idea I did",
    "start": "608240",
    "end": "614480"
  },
  {
    "text": "not want to go to structural comparisons I wanted to go into generic and find good old list of",
    "start": "614480",
    "end": "621000"
  },
  {
    "text": "T and then if I click raw I can now copy and paste this into my",
    "start": "621000",
    "end": "627079"
  },
  {
    "text": "IDE and it would take a little bit of time but I could basically do what the compiler would do for me so maybe I",
    "start": "627079",
    "end": "632560"
  },
  {
    "text": "rename the class list of ins but then I go through it and wherever there is a t I simply replace that with integer and I",
    "start": "632560",
    "end": "640120"
  },
  {
    "text": "now have a data structure which can hold a variable number of integers and do that efficiently it will do that in the",
    "start": "640120",
    "end": "647120"
  },
  {
    "text": "back here you can see I would have an array of integers and it would keep getting resized as integers were added",
    "start": "647120",
    "end": "653880"
  },
  {
    "text": "to it and of course there would be some other things you would have to fix up to make the compiler completely happy it's not just a simple replace t with int um",
    "start": "653880",
    "end": "662480"
  },
  {
    "text": "you would probably not Implement I list of T just Implement I list",
    "start": "662480",
    "end": "668200"
  },
  {
    "text": "and this one uh or just make it inumerable perhaps but there is some",
    "start": "668200",
    "end": "673880"
  },
  {
    "text": "interesting code inside of here um and we could get rid of",
    "start": "673880",
    "end": "679639"
  },
  {
    "text": "uh code contracts and other things that we might not need in our application or keep them but if we look at ad I was",
    "start": "679639",
    "end": "688720"
  },
  {
    "text": "browsing through this code earlier I just found it interesting let me do a search for",
    "start": "688720",
    "end": "694360"
  },
  {
    "text": "ADD and we will find add an item so what I add item does is it will",
    "start": "694360",
    "end": "701120"
  },
  {
    "text": "check to see if that backing array is currently at capacity or not and ensure",
    "start": "701120",
    "end": "706560"
  },
  {
    "text": "that there's enough capacity to store the next thing if we look at so to me",
    "start": "706560",
    "end": "712200"
  },
  {
    "text": "that says oh we'll call this method ensure capacity and it will expand the size of the array and maybe copy new",
    "start": "712200",
    "end": "717880"
  },
  {
    "text": "items into a new array something like that just want to do a quick search for ensure",
    "start": "717880",
    "end": "724120"
  },
  {
    "text": "capacity which is right here and what confused me at first was this method",
    "start": "724120",
    "end": "729440"
  },
  {
    "text": "actually doesn't do anything except recalculate a new capacity and if I remember the new capacity will be the",
    "start": "729440",
    "end": "736279"
  },
  {
    "text": "current length of the list times two so effectively list keep doubling in size until they reach about 2 gigabytes and",
    "start": "736279",
    "end": "742519"
  },
  {
    "text": "then your machine melts down but I'm looking at this and thinking all right where do they",
    "start": "742519",
    "end": "747920"
  },
  {
    "text": "actually change the array where does the array grow and it's Sneaky because it's",
    "start": "747920",
    "end": "753360"
  },
  {
    "text": "actually done in this property Setter capacity boo yeah not",
    "start": "753360",
    "end": "759079"
  },
  {
    "text": "good if we look at capacity somewhere inside of here",
    "start": "759079",
    "end": "764560"
  },
  {
    "text": "there's a lot of capacity I going have to zoom out for a second to find",
    "start": "764560",
    "end": "769680"
  },
  {
    "text": "it there we go yeah look at the setter for that",
    "start": "770680",
    "end": "777040"
  },
  {
    "text": "thing it's inside of here where it will now create a new array",
    "start": "777040",
    "end": "782120"
  },
  {
    "text": "based on this new capacity and array. copy items over so that could still hurt performance but you know based it's",
    "start": "782120",
    "end": "789000"
  },
  {
    "text": "certainly going to still be better than boxing and I think that question said he had sometimes thousands of integers or",
    "start": "789000",
    "end": "795480"
  },
  {
    "text": "hundreds of thousands or something and that's just throwing a lot of numbers that's throwing garbage all over the",
    "start": "795480",
    "end": "800760"
  },
  {
    "text": "heat so this would uh still be a better approach but still come through here and every time there's a t replace it with",
    "start": "800760",
    "end": "807560"
  },
  {
    "text": "int and you you'd have a a working Dynamic list of integers so better than just finding a",
    "start": "807560",
    "end": "814480"
  },
  {
    "text": "new job I guess that's also valid that is that is the question all right I'm going to wander over here I'm looking at",
    "start": "814480",
    "end": "820160"
  },
  {
    "text": "confused faces does anybody have any questions because we really want this to be fairly interactive oh don't be so",
    "start": "820160",
    "end": "825880"
  },
  {
    "text": "Norwegian come on come on come on don't be so nor all right anybody you I'm G to pick on someone yes do you have any",
    "start": "825880",
    "end": "832560"
  },
  {
    "text": "questions uh recursion yes did you have a question I",
    "start": "832560",
    "end": "837600"
  },
  {
    "text": "did yes this question is from Jimmy um what C keyword am I thinking of yield no",
    "start": "837600",
    "end": "843920"
  },
  {
    "text": "it's else oh thank you very much I question all right Jimmy's up switch I",
    "start": "843920",
    "end": "852519"
  },
  {
    "text": "asked the question oh Rob you're screwing it up whatever come on",
    "start": "852519",
    "end": "857560"
  },
  {
    "start": "853000",
    "end": "861000"
  },
  {
    "text": "Rob sorry next question how are people unit testing with Entity framework six",
    "start": "857560",
    "end": "862800"
  },
  {
    "start": "861000",
    "end": "919000"
  },
  {
    "text": "or seven let's say or whatever should you bother I think you meant to say e framewor core 1.0 oh sorry yeah yes",
    "start": "862800",
    "end": "869360"
  },
  {
    "text": "that's right that's right uh this person is just starting out with unit testing and tdd in general",
    "start": "869360",
    "end": "875279"
  },
  {
    "text": "they want to add it to their workflow so they can add better software but this person has already roadblocked",
    "start": "875279",
    "end": "880680"
  },
  {
    "text": "themselves because they don't want to abstract EF away in a repository wonder why maybe Jimmy will",
    "start": "880680",
    "end": "888800"
  },
  {
    "text": "know so uh he thinks high queriable is a leaky",
    "start": "888800",
    "end": "893959"
  },
  {
    "text": "abstraction there's a lot of great posts out there on this subject and then he shows some code where he's basically um",
    "start": "893959",
    "end": "899959"
  },
  {
    "text": "abstracting away EF and abstracting Away something that doesn't have the name repository in it",
    "start": "899959",
    "end": "907240"
  },
  {
    "text": "but it's uh whoops easily could and maybe I'll let Jimmy go first",
    "start": "907240",
    "end": "913759"
  },
  {
    "text": "on this one I read the question and you [Laughter] go are you just Googling how to do",
    "start": "913759",
    "end": "921079"
  },
  {
    "start": "919000",
    "end": "1014000"
  },
  {
    "text": "testing in eny framework that's that's also cheating yeah I I see what you're doing but it's an article that I",
    "start": "921079",
    "end": "927279"
  },
  {
    "text": "wrote a that's why it's",
    "start": "927279",
    "end": "932530"
  },
  {
    "text": "[Applause]",
    "start": "932530",
    "end": "937669"
  },
  {
    "text": "wrong oh it's my turn okay well uh yeah so the one of the looks like one of the solutions he came up with or he read on",
    "start": "939639",
    "end": "946319"
  },
  {
    "text": "online was to create your own abstraction behind DB context which is the the main omm thing of enti framework",
    "start": "946319",
    "end": "954800"
  },
  {
    "text": "uh and then that's the thing you go ahead and mock out and you're they're not using Repository but using things",
    "start": "954800",
    "end": "959839"
  },
  {
    "text": "called Services would this looks almost exactly like a repository so I think some terms got to get mismatched or something like that um so the original",
    "start": "959839",
    "end": "968360"
  },
  {
    "text": "question was how are people unit testing any framework six uh and should you bother actually I don't know how people",
    "start": "968360",
    "end": "973880"
  },
  {
    "text": "are unit testing in any framework Sy I don't really care how they're unit testing it because uh the second part should you bother I don't think you",
    "start": "973880",
    "end": "980079"
  },
  {
    "text": "should bother at all unit testing with it uh whatsoever a lot of the systems I work with uh when I have problems in",
    "start": "980079",
    "end": "987120"
  },
  {
    "text": "production it's because my test didn't didn't closely match how the production was actually working and if I'm trying",
    "start": "987120",
    "end": "992519"
  },
  {
    "text": "to do something with something like an in-memory repository or or some kind of inmemory database or things like that",
    "start": "992519",
    "end": "998279"
  },
  {
    "text": "it's not executing the exact same sort of thing that would happen during production so the more closely I can match I can make my uh I can make my my",
    "start": "998279",
    "end": "1007360"
  },
  {
    "text": "tests match how things actually work in production then the more value I'm going to get out of it uh so I actually over",
    "start": "1007360",
    "end": "1013319"
  },
  {
    "text": "here got an example of a test uh not this ugly collection over here is",
    "start": "1013319",
    "end": "1019199"
  },
  {
    "start": "1014000",
    "end": "1431000"
  },
  {
    "text": "horrible um if I go look at how I typically use any framework",
    "start": "1019199",
    "end": "1026079"
  },
  {
    "text": "uh let's see let me find uh a place where I'm actually using",
    "start": "1026079",
    "end": "1032678"
  },
  {
    "text": "anyti framework behind the scenes here um that's a boring one let's find",
    "start": "1032679",
    "end": "1038558"
  },
  {
    "text": "one that's uh more interesting um oh here's here we go that's more interesting one um so I tend",
    "start": "1038559",
    "end": "1045480"
  },
  {
    "text": "to split my my uh my my code into uh commands and queries",
    "start": "1045480",
    "end": "1052559"
  },
  {
    "text": "and individual request objects so when I have something that's doing a very specific activity I'm having that",
    "start": "1052559",
    "end": "1057720"
  },
  {
    "text": "written in one exactly one place uh and so inside of that I am uh I'm actually using any sort of abstraction on top of",
    "start": "1057720",
    "end": "1064120"
  },
  {
    "text": "any framework uh not even looking at DB Contex I'm using the actual uh the real",
    "start": "1064120",
    "end": "1069200"
  },
  {
    "text": "uh DB context object that I created with uh uh in my application code and inside of there I'm just going ahead and using",
    "start": "1069200",
    "end": "1075720"
  },
  {
    "text": "it directly so uh I'm pulling off in this case courses uh doing some wear and",
    "start": "1075720",
    "end": "1081240"
  },
  {
    "text": "ordering and then uh using automapper to project that information to some object and then returning some result uh if you",
    "start": "1081240",
    "end": "1087720"
  },
  {
    "text": "were trying to unit test this that means you have to figure out what pieces you need to fake out and that piece you fake",
    "start": "1087720",
    "end": "1092960"
  },
  {
    "text": "out would probably be something like that right there uh await db. courses and so instead of returning a real I",
    "start": "1092960",
    "end": "1099799"
  },
  {
    "text": "queriable you'd return something like uh a database back thing and uh and then the projection instead of projecting",
    "start": "1099799",
    "end": "1105720"
  },
  {
    "text": "against a SQL version of things it project against a memory version of things um and so what I found is that uh",
    "start": "1105720",
    "end": "1112559"
  },
  {
    "text": "that the I queryable logic in EN framework is insanely comp insanely complicated and I really want to make",
    "start": "1112559",
    "end": "1118440"
  },
  {
    "text": "sure that thing is doing the right thing uh because I wrote If I wrote a unit test with this it would run the",
    "start": "1118440",
    "end": "1123799"
  },
  {
    "text": "projection and Link against an in-memory queriable not against the crazy queriable that is any framework",
    "start": "1123799",
    "end": "1129840"
  },
  {
    "text": "translating link into SQL which is a seriously complicated thing to do so the way my tests look in my application are",
    "start": "1129840",
    "end": "1136520"
  },
  {
    "text": "trying to test things at this level VI an integration test and so that's what I have over here is I have a test that uh",
    "start": "1136520",
    "end": "1145799"
  },
  {
    "text": "tests my application by creating that in this case it was a command object to do something um I send the command to that",
    "start": "1145799",
    "end": "1153280"
  },
  {
    "text": "Handler right here and it runs the actual code behind the scenes in a transaction and then finally over here I",
    "start": "1153280",
    "end": "1159600"
  },
  {
    "text": "do in a separate transaction to go and pull out to make sure I actually find the thing that was actually saved um so",
    "start": "1159600",
    "end": "1166360"
  },
  {
    "text": "this runs the actual real stuff behind the scenes so uh I can have the highest",
    "start": "1166360",
    "end": "1172120"
  },
  {
    "text": "um highest uh confidence as possible to my code is doing the right thing now on",
    "start": "1172120",
    "end": "1180280"
  },
  {
    "text": "one system I actually wrote all the unit tests for these as well and I found that unit tests were doing basically the exact same thing as the integration",
    "start": "1180280",
    "end": "1187080"
  },
  {
    "text": "tests so I just wind up deleting the unit tests and and keeping the integration tests reserving unit tests",
    "start": "1187080",
    "end": "1192960"
  },
  {
    "text": "for when I had places that weren't trying to call out to outside things whatsoever uh for the actual domain",
    "start": "1192960",
    "end": "1198159"
  },
  {
    "text": "model things like that so that's how it would unit test in any framework I",
    "start": "1198159",
    "end": "1205200"
  },
  {
    "text": "wouldn't serious question this time um how would you ensure that the um state of the database is in in a known State",
    "start": "1207880",
    "end": "1215120"
  },
  {
    "text": "when you begin your test run oh that is a tough thing so the question is how would I know that the state of the",
    "start": "1215120",
    "end": "1220559"
  },
  {
    "text": "database uh was in the correct State before anything started um so there are a number of ways you can do that uh the",
    "start": "1220559",
    "end": "1227320"
  },
  {
    "text": "main techniques I've seen are things is like uh use a transaction across the",
    "start": "1227320",
    "end": "1232520"
  },
  {
    "text": "entire test run so that I wrap the test in a transaction at the end of the test I roll the transaction back so it",
    "start": "1232520",
    "end": "1239280"
  },
  {
    "text": "ensures that it at least it cleans up after itself I don't like tests that clean up after themselves I like tests",
    "start": "1239280",
    "end": "1244440"
  },
  {
    "text": "that start things in a good State and so what I do is uh I use uh I actually just",
    "start": "1244440",
    "end": "1251120"
  },
  {
    "text": "delete tables I just clear it all the tables before I run each time uh so I have another tool another open source",
    "start": "1251120",
    "end": "1257280"
  },
  {
    "text": "Library actually it's called this one is called respawn and what",
    "start": "1257280",
    "end": "1263400"
  },
  {
    "text": "respawn does is it examines the schema of your database follows the foreign key constraints to see what the right order",
    "start": "1263400",
    "end": "1270440"
  },
  {
    "text": "in which to delete tables is which is all the Leafs and then the next level and the next level in so it's a depth",
    "start": "1270440",
    "end": "1275799"
  },
  {
    "text": "first search of that graph and as long as you don't do anything crazy like have a table reference itself which God help",
    "start": "1275799",
    "end": "1281600"
  },
  {
    "text": "you if you do something like that then you should be able to have that run and just before it starts the test just deletes the tables in the right order",
    "start": "1281600",
    "end": "1288000"
  },
  {
    "text": "and from our profiling we found that that manner is the fastest way to do things besides uh we tried uh disabling",
    "start": "1288000",
    "end": "1297039"
  },
  {
    "text": "All Foreign key constraints truncating all tables in random order and then re-enabling constraints but that was three times slower than just deleting",
    "start": "1297039",
    "end": "1303320"
  },
  {
    "text": "things in the correct order uh so this thing just figures it out once builds up the the the list and then runs it before",
    "start": "1303320",
    "end": "1308559"
  },
  {
    "text": "every single test I remember you and I talking thank you I remember you and I talking about this when you came out with this library because you I think",
    "start": "1308559",
    "end": "1314960"
  },
  {
    "text": "either asked me or asked Twitter and you said how do I do this on postgress yeah and and just I just wanted to throw",
    "start": "1314960",
    "end": "1321320"
  },
  {
    "text": "this out there that post Christ allows you to delete everything in a schema um and you can drop the entire schema so if",
    "start": "1321320",
    "end": "1327000"
  },
  {
    "text": "you put your tables or views or functions or whatever inside a schema you can say drop the schema Cascade and",
    "start": "1327000",
    "end": "1332720"
  },
  {
    "text": "post Christ figures it out for you the reason I bring that up I was always curious if SQL Server does that too does anybody know so we tried that one as",
    "start": "1332720",
    "end": "1340440"
  },
  {
    "text": "well yeah um we also found that creating when when we drop the when we completely drop the schema we have to recreate the",
    "start": "1340440",
    "end": "1347080"
  },
  {
    "text": "schema and that still slower so when I do these kind of tests where almost everything is integration tests that",
    "start": "1347080",
    "end": "1352480"
  },
  {
    "text": "means tests are slower because they have to hit the database so I was trying to find as many performance optimizations",
    "start": "1352480",
    "end": "1358159"
  },
  {
    "text": "as possible so that works really great on smaller scenarios but when I have hundreds and hundreds and hundreds of these tests then every little like every",
    "start": "1358159",
    "end": "1365480"
  },
  {
    "text": "little second I shave off of it is less time uh but it is a really cool thing I like it yeah I just want to do it all",
    "start": "1365480",
    "end": "1372000"
  },
  {
    "text": "right we have one more question yeah go ahead do youest it up does it get um the",
    "start": "1372000",
    "end": "1378760"
  },
  {
    "text": "question is what data do I test on uh whatever I set up so in this case uh",
    "start": "1378760",
    "end": "1383919"
  },
  {
    "text": "this one needs to have uh a department ready to go so it it uh gets a",
    "start": "1383919",
    "end": "1389400"
  },
  {
    "text": "department uh this case from a tool called autofixture uh just makes up a department with junk in it and then I",
    "start": "1389400",
    "end": "1395760"
  },
  {
    "text": "save it and then I'm using that over here to say and my department should be that thing that I just saved over there",
    "start": "1395760",
    "end": "1401000"
  },
  {
    "text": "so my test actually create the data it needs if there's lookup data that's another common question about lookup data like the list of countries or zip",
    "start": "1401000",
    "end": "1408559"
  },
  {
    "text": "or postal codes or whatever uh those things I white I whitelist to say don't",
    "start": "1408559",
    "end": "1413919"
  },
  {
    "text": "don't quit out those table because it's just lookup data as part of that deleting",
    "start": "1413919",
    "end": "1419000"
  },
  {
    "text": "run yeah so I just wanted to take a moment to apologize for sins of the",
    "start": "1419720",
    "end": "1425919"
  },
  {
    "text": "past it was about uh well it was exactly I guess six years ago Microsoft actually",
    "start": "1425919",
    "end": "1431279"
  },
  {
    "start": "1431000",
    "end": "1774000"
  },
  {
    "text": "approached me and they said we know you like test and development we have this new thing called Entity framework 4",
    "start": "1431279",
    "end": "1436559"
  },
  {
    "text": "would you take a look at it and maybe write us a white paper about if you found it to be testable or not and I",
    "start": "1436559",
    "end": "1443039"
  },
  {
    "text": "said no but they persisted so I eventually went through with it and uh at that time the approach",
    "start": "1443039",
    "end": "1449919"
  },
  {
    "text": "that I took was very much like that gentleman which was what we're going to do is build different types of abstractions around uh what's built into",
    "start": "1449919",
    "end": "1457880"
  },
  {
    "text": "Entity framework so using a repository to wrap the um I forget whatever the",
    "start": "1457880",
    "end": "1463520"
  },
  {
    "text": "object context produced at that time it wasn't DB set and using a unit of work to ENC Abate the object context which",
    "start": "1463520",
    "end": "1469840"
  },
  {
    "text": "would now be a DB context and showed a couple different approaches about how you could um do this but it's all",
    "start": "1469840",
    "end": "1477240"
  },
  {
    "text": "rubbish now I don't like doing any of that anymore I completely agree with Jimmy that you end up in a situation",
    "start": "1477240",
    "end": "1483120"
  },
  {
    "text": "here where you do one of two things the two approaches I show showed you either end up mocking stuff and you're not",
    "start": "1483120",
    "end": "1488720"
  },
  {
    "text": "really testing your system you're just testing the interaction and making sure that this method got call with this parameter woohoo big deal or you have",
    "start": "1488720",
    "end": "1496159"
  },
  {
    "text": "inmemory data that link operators always work against because if it compiles it will work against in memory data but",
    "start": "1496159",
    "end": "1502000"
  },
  {
    "text": "that's not necessarily true when you actually send it to SQL Server so over the last uh six seven years my um",
    "start": "1502000",
    "end": "1509200"
  },
  {
    "text": "viewpoints have changed and I have to contact them and see how to take this down I think you just he just have to",
    "start": "1509200",
    "end": "1514720"
  },
  {
    "text": "click no right [Laughter]",
    "start": "1514720",
    "end": "1521490"
  },
  {
    "text": "there yeah well disclaimer at the top that's what you no I think you should just click no right there",
    "start": "1521919",
    "end": "1530320"
  },
  {
    "text": "everyone everyone in the room go to this page and click",
    "start": "1530960",
    "end": "1537159"
  },
  {
    "text": "no is uh",
    "start": "1537159",
    "end": "1543000"
  },
  {
    "text": "oh that's awesome so while Scott's typing that",
    "start": "1543399",
    "end": "1548640"
  },
  {
    "text": "this is uh one of the reasons I picked this question very good",
    "start": "1548640",
    "end": "1557080"
  },
  {
    "text": "one of the reasons I picked this question is I read a really interesting blog post by a really handsome and interesting guy about repositories on",
    "start": "1558360",
    "end": "1565559"
  },
  {
    "text": "top of unit of work and it was in response to a stack Overflow question and oddly okay so here's a surprise I'm",
    "start": "1565559",
    "end": "1572480"
  },
  {
    "text": "the one that wrote that post but anyome I know I had to someone's got to say it anyway that is still to this day",
    "start": "1572480",
    "end": "1579679"
  },
  {
    "text": "my most popular post and I kind of rant it a little bit but I want to ask you guys about that because to me the bigger",
    "start": "1579679",
    "end": "1586919"
  },
  {
    "text": "question here is why you WRA EF with a repository and does everybody understand",
    "start": "1586919",
    "end": "1592200"
  },
  {
    "text": "what that what I just said like CU enity framework is unit of work right you have a DB context tracks your objects and",
    "start": "1592200",
    "end": "1599200"
  },
  {
    "text": "then you flush it at some point in a transaction to the database all those objects get saved and whatnot but if you",
    "start": "1599200",
    "end": "1604919"
  },
  {
    "text": "put that into a repository you're mixing your patterns to the point where you're if you're passing in the data context or",
    "start": "1604919",
    "end": "1610440"
  },
  {
    "text": "the DB context you got no idea what objects are sitting on that waiting to be transacted you know what I mean so I",
    "start": "1610440",
    "end": "1616799"
  },
  {
    "text": "wanted you to actually go into your example of um command and query objects because I think that's fascinating if",
    "start": "1616799",
    "end": "1622600"
  },
  {
    "text": "you don't mind really quickly doing that a little but okay if if you need a",
    "start": "1622600",
    "end": "1627720"
  },
  {
    "text": "minute to bring it up I could uh expand on this topic just a little bit oh go ahead yeah please so when I started developing with angular one I wanted to",
    "start": "1627720",
    "end": "1634679"
  },
  {
    "text": "unit test my front end code and I found myself in a very similar situation same situation I had in C code",
    "start": "1634679",
    "end": "1642000"
  },
  {
    "text": "with Entity framework I was in a situation where with angular the idea was isolate your controllers isolate",
    "start": "1642000",
    "end": "1647679"
  },
  {
    "text": "your controllers unit test your controllers so that they're not calling into other services and trying to make htb calls so uh the team I was working",
    "start": "1647679",
    "end": "1655080"
  },
  {
    "text": "with we tried this at the time what we would do is a controller when it was uh instantiated it would call into a",
    "start": "1655080",
    "end": "1661000"
  },
  {
    "text": "service that would make an HTTP call and so what we would try to do is provide a fake service or a mock service that",
    "start": "1661000",
    "end": "1666840"
  },
  {
    "text": "provided fake beta data back to the controller and write a search that the controller would put the data on the",
    "start": "1666840",
    "end": "1672279"
  },
  {
    "text": "right property so it would presumably be data bound to the screen but what I found that what I found was that those",
    "start": "1672279",
    "end": "1679640"
  },
  {
    "text": "tests were completely ineffective we were always having things breaking because most controllers are actually",
    "start": "1679640",
    "end": "1686440"
  },
  {
    "text": "pretty simple they ask for data and they get the data back and they put it into a property and what we really need to",
    "start": "1686440",
    "end": "1693360"
  },
  {
    "text": "needed to test was not the controller in isolation what we found to be of a lot more value was testing uh the controller",
    "start": "1693360",
    "end": "1700720"
  },
  {
    "text": "and the services it interacted with and actually testing that that interaction worked and so after a few months we",
    "start": "1700720",
    "end": "1708840"
  },
  {
    "text": "switched our strategy and said okay we're not going to ever ever provide a fake or a mock",
    "start": "1708840",
    "end": "1714399"
  },
  {
    "text": "service to inject into a controller inside of our unit test instead we're going to inject the real service and",
    "start": "1714399",
    "end": "1721360"
  },
  {
    "text": "find out if the controller and that thing actually work together and instead angular one had this has this need",
    "start": "1721360",
    "end": "1727360"
  },
  {
    "text": "ability where you can mock out the HTTP connection on the back end so it a lot of people would look at that we had this",
    "start": "1727360",
    "end": "1733840"
  },
  {
    "text": "discussion is it a true unit test because the unit test is instantiating the controller and it's using a real",
    "start": "1733840",
    "end": "1739320"
  },
  {
    "text": "service and the service is actually really trying to make an HTTP call it's just that I had this mock back in that",
    "start": "1739320",
    "end": "1744880"
  },
  {
    "text": "would provide fake data but I can tell you that after finishing that project or",
    "start": "1744880",
    "end": "1750240"
  },
  {
    "text": "looking at that project after we switch the strategy we were probably writing 70% less test code and finding a lot",
    "start": "1750240",
    "end": "1757399"
  },
  {
    "text": "more actual bugs in the software than we ever had before so it was a very similar",
    "start": "1757399",
    "end": "1763200"
  },
  {
    "text": "to this situation I'm sure someone from the bdd community would raise their hand like I",
    "start": "1763200",
    "end": "1768440"
  },
  {
    "text": "told you so but that is not",
    "start": "1768440",
    "end": "1773519"
  },
  {
    "text": "me so you're saying something about commands and queries something something something um yeah so one of the one of",
    "start": "1773519",
    "end": "1780080"
  },
  {
    "start": "1774000",
    "end": "2164000"
  },
  {
    "text": "one of the journeys I've gone through in the whole like DDD realization uh is trying to take some of these patterns to",
    "start": "1780080",
    "end": "1785799"
  },
  {
    "text": "their to their logical conclusion and one of the things we found is that uh um the one of the good things uh from the",
    "start": "1785799",
    "end": "1792519"
  },
  {
    "text": "the whole cqrs the command query responsibility segregation movement was uh by breaking things down our system",
    "start": "1792519",
    "end": "1798760"
  },
  {
    "text": "between commands and queries we can really kind of rally around those patterns and build out some interesting uh interesting things from those things",
    "start": "1798760",
    "end": "1805799"
  },
  {
    "text": "so uh what I'm showing here is um I've got uh even my my application is is is",
    "start": "1805799",
    "end": "1812440"
  },
  {
    "text": "split and organized based on the kind of features I'm working with so as opposed to my my my application being organized",
    "start": "1812440",
    "end": "1820000"
  },
  {
    "text": "by layer so don't like a queries folder a view models folder a a controllers",
    "start": "1820000",
    "end": "1825720"
  },
  {
    "text": "folder instead I'm organizing everything together based on what they're trying to do so even here on the right I've got uh",
    "start": "1825720",
    "end": "1832000"
  },
  {
    "text": "views and the exle C classes that deal with them right next to each other uh so",
    "start": "1832000",
    "end": "1837200"
  },
  {
    "text": "that if I'm working on some feature I'm always working on those two files together and not having to jump around my solution a lot and then the actual uh",
    "start": "1837200",
    "end": "1844919"
  },
  {
    "text": "queries and commands themselves if I actually look at the uh let's say this is the instructor control oh no that's",
    "start": "1844919",
    "end": "1850960"
  },
  {
    "text": "the instructor uh UI there we go uh the controller the controller itself doesn't",
    "start": "1850960",
    "end": "1856600"
  },
  {
    "text": "really have a lot of things going on it's just dealing with queries like this and then down here commands and then",
    "start": "1856600",
    "end": "1862639"
  },
  {
    "text": "sending them down to this uh this intermediate or this mediator object to actually dispatch those to an individual",
    "start": "1862639",
    "end": "1868919"
  },
  {
    "text": "function that that represents doing that actual work and then the actual work is represented by individual command",
    "start": "1868919",
    "end": "1875200"
  },
  {
    "text": "objects and query objects this query object represents uh a query to well",
    "start": "1875200",
    "end": "1880679"
  },
  {
    "text": "it's kind of funny because it returns a command because that's the form object and the validation is represented here as well uh validating the query things",
    "start": "1880679",
    "end": "1888000"
  },
  {
    "text": "like it needs to have a notnull ID um and then the command itself is represented as an individual object that",
    "start": "1888000",
    "end": "1893559"
  },
  {
    "text": "represents all the all the data that you need to uh process that command so the",
    "start": "1893559",
    "end": "1899519"
  },
  {
    "text": "properties that you see on the screen are all individual uh properties on here that line up to uh the different form",
    "start": "1899519",
    "end": "1906360"
  },
  {
    "text": "fields on the screen and then the last piece is looking at the quer the handlers behind this uh the query Handler is taking that",
    "start": "1906360",
    "end": "1914360"
  },
  {
    "text": "request and returning the response and this one is actually somewhat complicated or at least looks kind of like it's complicated uh so it's doing",
    "start": "1914360",
    "end": "1922519"
  },
  {
    "text": "some getting something from instructors projecting out into this uh form object and then populating some Associated data",
    "start": "1922519",
    "end": "1928639"
  },
  {
    "text": "down here um looks pretty complicated but everything that has to deal with that that operation is just in this one",
    "start": "1928639",
    "end": "1935120"
  },
  {
    "text": "spot so if you're one of those like store procedure people you could call it out to a store procedure here as opposed",
    "start": "1935120",
    "end": "1940519"
  },
  {
    "text": "to having it all done through link and then the command side it's separated out as well so that everything that is",
    "start": "1940519",
    "end": "1947320"
  },
  {
    "text": "required to uh process that command is then again in just this one individual spot so here is all the whatever I need",
    "start": "1947320",
    "end": "1955720"
  },
  {
    "text": "to do to actually process that command uh adding an instructor if it's a new one or getting the one out if it's an",
    "start": "1955720",
    "end": "1962600"
  },
  {
    "text": "existing one setting the data whatever I need to do again it's all just completely encapsulated in this one",
    "start": "1962600",
    "end": "1967679"
  },
  {
    "text": "method uh which makes it pretty easy to test because now I have this one sort of interface I go through of passing any",
    "start": "1967679",
    "end": "1974360"
  },
  {
    "text": "request getting a response and making sure that that thing did the thing I was supposed to do",
    "start": "1974360",
    "end": "1979840"
  },
  {
    "text": "yes go ahead explain why your is return in a",
    "start": "1983559",
    "end": "1990080"
  },
  {
    "text": "command yeah it's kind of funny isn't it um so this is a this is an edit page an",
    "start": "1990080",
    "end": "1995240"
  },
  {
    "text": "add edit page so in any edit page you make an initial request to get the",
    "start": "1995240",
    "end": "2000279"
  },
  {
    "text": "existing data and put that into a form and so what I do is I model that form on",
    "start": "2000279",
    "end": "2006480"
  },
  {
    "text": "the screen as an individual view model object so it turns out when I'm actually making the query for the edit page the",
    "start": "2006480",
    "end": "2013559"
  },
  {
    "text": "result is the command that represents the form and then when I do the form post the command is then bound up from",
    "start": "2013559",
    "end": "2021480"
  },
  {
    "text": "the request information uh to that same object and might be easier to see on the",
    "start": "2021480",
    "end": "2028320"
  },
  {
    "text": "controller because on here we go uh you'll see that the edit returns",
    "start": "2028320",
    "end": "2037200"
  },
  {
    "text": "uh command object and that command object is the view model and that same command object",
    "start": "2037880",
    "end": "2043880"
  },
  {
    "text": "is then the input for the form post over here so having that Duality on this post",
    "start": "2043880",
    "end": "2050919"
  },
  {
    "text": "to getand already just yeah I used to call these like view",
    "start": "2050919",
    "end": "2056200"
  },
  {
    "text": "models or something andd be like create edit or create edit view model uh but I I then renamed it based on the intent of",
    "start": "2056200",
    "end": "2062520"
  },
  {
    "text": "what it was meant to be so it's it's the query Returns the command for the edit page kind of funny the more clear",
    "start": "2062520",
    "end": "2070000"
  },
  {
    "text": "approach would be like to to have this separate view model then turn it into command on this post action but to throw",
    "start": "2070000",
    "end": "2078118"
  },
  {
    "text": "this just well the big thing uh the big thing I'm going for here is that I want",
    "start": "2078119",
    "end": "2084079"
  },
  {
    "text": "to make sure that the the model being used to build the form is the exact same model I'm using to bind against the form",
    "start": "2084079",
    "end": "2091520"
  },
  {
    "text": "variables but having those two things the same thing I don't ever get it I don't ever get it off it's always going to be the same thing but as far what you",
    "start": "2091520",
    "end": "2097480"
  },
  {
    "text": "name it I me I don't really care then name it something else I mean uh the important thing was that uh we wanted to",
    "start": "2097480",
    "end": "2103520"
  },
  {
    "text": "be consistent in the names uh so just basically pick something and stick to it and if you change it fix it",
    "start": "2103520",
    "end": "2110160"
  },
  {
    "text": "everywhere uh Scott did you have anything to add yeah all right",
    "start": "2110160",
    "end": "2115920"
  },
  {
    "text": "um should we move on to the next question did you guys have anything else to say about this stuff okay uh so your turn yeah take it",
    "start": "2115920",
    "end": "2124880"
  },
  {
    "text": "uh okay so this question is on uh angular 2 which I think you know a little about um okay so this one says uh",
    "start": "2124880",
    "end": "2133560"
  },
  {
    "text": "is there no equivalent to Dollar scope. Amit or Dollar scope. broadcast in angular 2 I know the event emitter",
    "start": "2133560",
    "end": "2139560"
  },
  {
    "text": "functionality but as far as I understand that will just Adit an event to the parent HTML element what if I need",
    "start": "2139560",
    "end": "2144960"
  },
  {
    "text": "communication between the FX period siblings or between a component in the root of the Dom and an element nested",
    "start": "2144960",
    "end": "2151319"
  },
  {
    "text": "several levels deep fascinating good question",
    "start": "2151319",
    "end": "2157880"
  },
  {
    "text": "yeah so all right let's bring up something so I can tell you this in",
    "start": "2159079",
    "end": "2166079"
  },
  {
    "text": "angular 2 and this is also kind of true of angular one I think this fellow is",
    "start": "2166079",
    "end": "2172160"
  },
  {
    "text": "talking about a page that might have a little widget up here that maybe represents the current user status and",
    "start": "2172160",
    "end": "2177680"
  },
  {
    "text": "then he's got some complex UI where buried deep down inside of here there",
    "start": "2177680",
    "end": "2183400"
  },
  {
    "text": "might be a component where the user could maybe log in or select a checkbox or do something that's going to change their status or raise an alert or do",
    "start": "2183400",
    "end": "2189960"
  },
  {
    "text": "something and we need to communicate that information back up to this component and we really don't want those",
    "start": "2189960",
    "end": "2195760"
  },
  {
    "text": "to be tied together and in angular one it was possible to use scope. AIT which is sort",
    "start": "2195760",
    "end": "2202200"
  },
  {
    "text": "of a broadcasting mechanism to say I have this event and I just want to send it out up the tree or down the tree with",
    "start": "2202200",
    "end": "2208640"
  },
  {
    "text": "scope. broadcast and you could have these events traveling through your system and listen to them from other controllers and that was one way that",
    "start": "2208640",
    "end": "2215680"
  },
  {
    "text": "two controllers that didn't know anything about each other could communicate but it never really was a",
    "start": "2215680",
    "end": "2222119"
  },
  {
    "text": "great idea at least for me actually I tried using dollar sign scope Emit and scope",
    "start": "2222119",
    "end": "2227680"
  },
  {
    "text": "broadcast to do a few things and I I never liked it there's there's another way to deal with this in both angular",
    "start": "2227680",
    "end": "2233960"
  },
  {
    "text": "one and angular 2 actually there's a couple different ways but before I talk about that I'll just show you a slightly",
    "start": "2233960",
    "end": "2239760"
  },
  {
    "text": "different scenario it's it's the theme for angular 2 which is if you have a",
    "start": "2239760",
    "end": "2245160"
  },
  {
    "text": "parent component and inside of that are child components it is very easy for this",
    "start": "2245160",
    "end": "2251720"
  },
  {
    "text": "parent component to own some sort of model and it's very easy for that parent",
    "start": "2251720",
    "end": "2256960"
  },
  {
    "text": "component to take that model and delegate pieces of it to subcomponent so they can render small pieces of it but",
    "start": "2256960",
    "end": "2264200"
  },
  {
    "text": "we might want we might not want those child components to mutate that model we might just want them to display",
    "start": "2264200",
    "end": "2269560"
  },
  {
    "text": "information and then tell us if the user interacted in a way that the model should be mutated so in angular 2",
    "start": "2269560",
    "end": "2275560"
  },
  {
    "text": "there's a convenient mechanism for these child components to essentially raise an event just like we would have in net",
    "start": "2275560",
    "end": "2282560"
  },
  {
    "text": "that the parent can listen to and then the parent should be responsible for mutating that model and the code looks",
    "start": "2282560",
    "end": "2290359"
  },
  {
    "text": "something like actually I have to find a more specific file here which",
    "start": "2290359",
    "end": "2297800"
  },
  {
    "text": "would [Music]",
    "start": "2297800",
    "end": "2303599"
  },
  {
    "text": "be oh yeah this one so here's a little component so imagine",
    "start": "2303599",
    "end": "2309720"
  },
  {
    "text": "a a page that's going to display a few panels with some movie information and I want this one movie component just to be",
    "start": "2309720",
    "end": "2316119"
  },
  {
    "text": "able to display a single movie out of 10 or 20 or however many appear on the page",
    "start": "2316119",
    "end": "2322119"
  },
  {
    "text": "and angular now angular to anyway um they really like all all the symbols",
    "start": "2322119",
    "end": "2327760"
  },
  {
    "text": "different symbols that they can ever find in the on the keyboard to use so we have a an at input which you can kind of",
    "start": "2327760",
    "end": "2334160"
  },
  {
    "text": "think like uh so this is typescript and but this syntax will actually be part of",
    "start": "2334160",
    "end": "2339680"
  },
  {
    "text": "a future ecmascript standard that's uh known as a decorator now and you can",
    "start": "2339680",
    "end": "2344839"
  },
  {
    "text": "think of it kind of like an attribute in net except attributes in net are very passive they provide metadata to a class",
    "start": "2344839",
    "end": "2351319"
  },
  {
    "text": "and the compiler takes it and bakes it into the assembly but in order for that metadata to be useful some piece of code",
    "start": "2351319",
    "end": "2357319"
  },
  {
    "text": "has to come along and inspect it and act on it whereas decorators and JavaScript are really quite powerful and will be",
    "start": "2357319",
    "end": "2363000"
  },
  {
    "text": "useful for metaprogramming because essentially and I know this is a tangent that input decorator will actually be",
    "start": "2363000",
    "end": "2369440"
  },
  {
    "text": "able to execute during uh transpilation or runtime when the browsers do this natively and take its Target so there's",
    "start": "2369440",
    "end": "2377000"
  },
  {
    "text": "a Target here uh that component Target oops that was not expected",
    "start": "2377000",
    "end": "2383240"
  },
  {
    "text": "similar to P decorators it is component",
    "start": "2383240",
    "end": "2388800"
  },
  {
    "text": "is attached to this class component you can think of a function as a function that will",
    "start": "2388800",
    "end": "2393960"
  },
  {
    "text": "actually be able to execute and modify that class so it could dynamically add members it could remove things it can add metadata whatever it wants to do",
    "start": "2393960",
    "end": "2400640"
  },
  {
    "text": "same thing with input but this is a very explicit way of saying providing like a public API from this component it's a",
    "start": "2400640",
    "end": "2407040"
  },
  {
    "text": "way of saying I want my parent to give me a movie and I have an output to tell",
    "start": "2407040",
    "end": "2413599"
  },
  {
    "text": "the outside world that the user is trying to change the rating of this movie and it's almost like an event",
    "start": "2413599",
    "end": "2419000"
  },
  {
    "text": "handler of tea so it's an an event emitter in angular 2 but I'm going to raise an event and pass along a number",
    "start": "2419000",
    "end": "2425400"
  },
  {
    "text": "and then the parent can decide what to do with that value but this doesn't",
    "start": "2425400",
    "end": "2431800"
  },
  {
    "text": "work at all in the scenario I had over here on the left if I'm trying to communicate",
    "start": "2431800",
    "end": "2438200"
  },
  {
    "start": "2434000",
    "end": "2722000"
  },
  {
    "text": "between a component way down here and a component way up here so the solution I",
    "start": "2438200",
    "end": "2444160"
  },
  {
    "text": "think for angular 2 there's there's a couple different solutions but they almost always involve a service um and",
    "start": "2444160",
    "end": "2450640"
  },
  {
    "text": "this is something that I did in angular one quite a bit hopefully there's angular fans out here but",
    "start": "2450640",
    "end": "2457760"
  },
  {
    "text": "if I have an application and there's a whole bunch of widgets controllers components whatever they are on the",
    "start": "2457760",
    "end": "2463160"
  },
  {
    "text": "screen and they have to coordinate somehow to know when the user status is updated or something like that the",
    "start": "2463160",
    "end": "2469720"
  },
  {
    "text": "solution is almost always a service because services and angular are",
    "start": "2469720",
    "end": "2475000"
  },
  {
    "text": "Singletons which sounds bad but Singletons aren't too bad in JavaScript",
    "start": "2475000",
    "end": "2480560"
  },
  {
    "text": "because it's single threaded we're not going to have to worry about threading issues and they're stateless too right so they shouldn't well so that's where",
    "start": "2480560",
    "end": "2488720"
  },
  {
    "text": "what that's where it comes in interesting uh a stateful service which",
    "start": "2488720",
    "end": "2494800"
  },
  {
    "text": "does sound terrible but uh uh there's easy ways in unit tests to just completely reboot an angular application",
    "start": "2494800",
    "end": "2501319"
  },
  {
    "text": "before every test so that you're always starting from scratch and I think what's",
    "start": "2501319",
    "end": "2506920"
  },
  {
    "text": "important for people to understand in both angular and angular one and angular 2 is that a service we tend to think of",
    "start": "2506920",
    "end": "2512440"
  },
  {
    "text": "services as things that will communicate back to the web server or provide some sort of infrastructure talk to the",
    "start": "2512440",
    "end": "2518280"
  },
  {
    "text": "geolocation thing in the browser all that stuff but in reality a service can be anything a service could even be a",
    "start": "2518280",
    "end": "2525160"
  },
  {
    "text": "model so a model that I want to share inside of the application so you could imagine if there's a service that",
    "start": "2525160",
    "end": "2531520"
  },
  {
    "text": "exposes an API to uh add things and an API to remove things behind the scenes",
    "start": "2531520",
    "end": "2538079"
  },
  {
    "text": "there's some sort of data structure in here hopefully these drawings are helpful well this since the service is a",
    "start": "2538079",
    "end": "2544559"
  },
  {
    "text": "Singleton I can inject that into any component or any other service in the application and they're all dealing with",
    "start": "2544559",
    "end": "2551040"
  },
  {
    "text": "the same object and therefore they combine themselves to the same pieces of State here so if all I need is a s",
    "start": "2551040",
    "end": "2557559"
  },
  {
    "text": "simple mechanism to say let's say the user profile has changed and the user has now logged in if all I need is a",
    "start": "2557559",
    "end": "2564400"
  },
  {
    "text": "simple mechanism to be able to propagate that information around well if everyone is looking at that information in the",
    "start": "2564400",
    "end": "2570280"
  },
  {
    "text": "service um they will know when the user profile changed because of when something",
    "start": "2570280",
    "end": "2575480"
  },
  {
    "text": "happened in in angular too we could uh also put the event emitter here on the",
    "start": "2575480",
    "end": "2581520"
  },
  {
    "text": "service and actually have a service raise events that people could subscribe to and so",
    "start": "2581520",
    "end": "2587880"
  },
  {
    "text": "forth and I think that can be an interesting architecture but uh there there does come a point",
    "start": "2587880",
    "end": "2593920"
  },
  {
    "text": "where you might want to take a slightly more formal approach for the events that are flowing around the system and use",
    "start": "2593920",
    "end": "2600800"
  },
  {
    "text": "something more like an event aggregator pattern and uh there is another JavaScript framework not angular that",
    "start": "2600800",
    "end": "2607520"
  },
  {
    "text": "perhaps this person could consider a framework called aelia that has this kind of stuff built in if I flip over",
    "start": "2607520",
    "end": "2613880"
  },
  {
    "text": "here so this is an aelia application and I just want to show you that it",
    "start": "2613880",
    "end": "2620000"
  },
  {
    "text": "has an event aggregator service and what I can do with a service is actually",
    "start": "2620000",
    "end": "2625839"
  },
  {
    "text": "Define classes like uh contact viewed or contact updated if we look at",
    "start": "2625839",
    "end": "2632240"
  },
  {
    "text": "them then anyone he's who has used a message bus in C or n service or",
    "start": "2632240",
    "end": "2637440"
  },
  {
    "text": "something like that might start to see where this becomes familiar right I have types defined for messages that I want to flow",
    "start": "2637440",
    "end": "2643400"
  },
  {
    "text": "around so that when that was not the expected result",
    "start": "2643400",
    "end": "2651880"
  },
  {
    "text": "there there we go so that when someone does something",
    "start": "2653240",
    "end": "2660559"
  },
  {
    "text": "interesting like view a specific contact and I need other components in the",
    "start": "2660760",
    "end": "2666440"
  },
  {
    "text": "application to be able to do that then I actually want to go out to my message bus and publish a message that this",
    "start": "2666440",
    "end": "2671480"
  },
  {
    "text": "contact was viewed and pass along some State information that can be inspected",
    "start": "2671480",
    "end": "2676559"
  },
  {
    "text": "and then some other component let's take the one over",
    "start": "2676559",
    "end": "2682640"
  },
  {
    "text": "here can say it wants to walk up to that event aggregator And subscribe to events",
    "start": "2683200",
    "end": "2688599"
  },
  {
    "text": "that are you know those specific class instances uh or that class symbol cont",
    "start": "2688599",
    "end": "2693680"
  },
  {
    "text": "contact viewed contact updated I think that's a nice approach to solve",
    "start": "2693680",
    "end": "2698839"
  },
  {
    "text": "this too did any of that make any",
    "start": "2698839",
    "end": "2704359"
  },
  {
    "text": "sense I have a feeling I know what your answer's gonna be",
    "start": "2704359",
    "end": "2708880"
  },
  {
    "text": "Jimmy what's C keyw am I thinking of yield a",
    "start": "2710000",
    "end": "2717839"
  },
  {
    "text": "wait yeah yeah oh uh yeah I had I had an answer too um there we go",
    "start": "2718400",
    "end": "2727079"
  },
  {
    "start": "2722000",
    "end": "2859000"
  },
  {
    "text": "I actually do remember using the event emit or scope emit on one project and it's it seemed really good at first and",
    "start": "2731400",
    "end": "2737920"
  },
  {
    "text": "then uh about two months down the road it was like we could not figure out how anything hooked up to anything else yes it was a global event aggregator that",
    "start": "2737920",
    "end": "2743760"
  },
  {
    "text": "went off like a just a string key yeah uh so yeah just in general not a not a great not a great thing to",
    "start": "2743760",
    "end": "2750680"
  },
  {
    "text": "use all right that's all I got oh I don't actually have an uh an",
    "start": "2750680",
    "end": "2756520"
  },
  {
    "text": "example using it uh react is uh well it's just really like kind of a do any",
    "start": "2756520",
    "end": "2761920"
  },
  {
    "text": "here not know what react is I mean I think at this point everyone should know what react is no okay um so react is a",
    "start": "2761920",
    "end": "2767760"
  },
  {
    "text": "JavaScript yray that really focuses on the The View side and really looks at taking uh taking an input and then",
    "start": "2767760",
    "end": "2774240"
  },
  {
    "text": "building out of your HTML from that and it really tries to be smart about things",
    "start": "2774240",
    "end": "2779520"
  },
  {
    "text": "so it will uh anytime time the model changes it will just ask itself to render and then do some smart diffing to",
    "start": "2779520",
    "end": "2785319"
  },
  {
    "text": "see what's changed so that the da only gets the new uh pieces of HTML in there it's kind of funny too cuz the first",
    "start": "2785319",
    "end": "2790920"
  },
  {
    "text": "angular up I did uh we wind up building the uh building the interactions and R",
    "start": "2790920",
    "end": "2796920"
  },
  {
    "text": "react flow but react didn't exist so every time I clicked a button on the screen I would make a Ajax request to",
    "start": "2796920",
    "end": "2802559"
  },
  {
    "text": "the back end the back end would return the new Json object that was my model and I would completely replace the old",
    "start": "2802559",
    "end": "2808400"
  },
  {
    "text": "scope with a new scope and then it would render itself uh but that's actually a very bad thing to do it turns out in",
    "start": "2808400",
    "end": "2814160"
  },
  {
    "text": "angular just to replace its scope anytime you want uh but it was the way I I thought was the easiest way to work with which was",
    "start": "2814160",
    "end": "2820520"
  },
  {
    "text": "the server is a source of Truth for my model and all I wanted to do is just take the new model and just figure out",
    "start": "2820520",
    "end": "2826200"
  },
  {
    "text": "what needs to be changed uh based on just rendering itself um so had react existed I would just use that but it",
    "start": "2826200",
    "end": "2831559"
  },
  {
    "text": "didn't so we had the janky way like physically janking the screen because it was re-rendering",
    "start": "2831559",
    "end": "2837359"
  },
  {
    "text": "everything up with some memory Le because of it h i don't",
    "start": "2837359",
    "end": "2843000"
  },
  {
    "text": "know I'm sure it's JavaScript there's memory leaks yeah",
    "start": "2843000",
    "end": "2848839"
  },
  {
    "text": "uh I think you're next to ask me the question to ask a question plant question all",
    "start": "2850119",
    "end": "2855319"
  },
  {
    "text": "right the question is write up your",
    "start": "2855319",
    "end": "2861720"
  },
  {
    "start": "2859000",
    "end": "3459000"
  },
  {
    "text": "ballpark my ballpark indeed I'm using automapper which I",
    "start": "2861720",
    "end": "2867319"
  },
  {
    "text": "understand is uh the most popular open source Library by a non Microsoft uh",
    "start": "2867319",
    "end": "2874640"
  },
  {
    "text": "also non web version not Jason ated in the Northwest",
    "start": "2874640",
    "end": "2880039"
  },
  {
    "text": "hemisphere automapper in an asp.net NVC application I was told I should move the automapper doc createmap elsewhere as",
    "start": "2880240",
    "end": "2887599"
  },
  {
    "text": "they or it has a lot of overhead I'm not sure how to design my application to put these calls in just one place I have a",
    "start": "2887599",
    "end": "2894319"
  },
  {
    "text": "web layer a service layer a data layer each is its own project I use ninject",
    "start": "2894319",
    "end": "2900160"
  },
  {
    "text": "I'll utilize automapper in both the web and service layers so what are what are your setup for Auto ERS create map where",
    "start": "2900160",
    "end": "2908240"
  },
  {
    "text": "do you put it how do you call it you you just took the text straight from there didn't you grammar errors and all okay I",
    "start": "2908240",
    "end": "2913880"
  },
  {
    "text": "think I I think you have enough rep to go fix the grammar don't you no I could do that okay well you work on the question I'll try to I'll try to uh okay",
    "start": "2913880",
    "end": "2920720"
  },
  {
    "text": "so I get this I get this question uh quite a bit about where where should I put my configuration um so I I got to sample up",
    "start": "2920720",
    "end": "2928760"
  },
  {
    "text": "actually to yeah we can switch sample up over here and uh most",
    "start": "2928760",
    "end": "2936799"
  },
  {
    "text": "most of most applications I work with have some sort of global startup piece um in the uhet NVC core or aspet core",
    "start": "2936799",
    "end": "2945839"
  },
  {
    "text": "there's like a program main because that's not going to be confusing where all the setup is going to be um just for",
    "start": "2945839",
    "end": "2952000"
  },
  {
    "text": "fun can you tell what Auto is oh automapper uh I assume everyone's heard",
    "start": "2952000",
    "end": "2957280"
  },
  {
    "text": "of it just that kind of person um it it started off as a really dumb thing on a",
    "start": "2957280",
    "end": "2963000"
  },
  {
    "text": "project about eight years ago we were we wanted to do this whole everything is a view model thing but uh I knew I was",
    "start": "2963000",
    "end": "2969880"
  },
  {
    "text": "going to have to create all this code to map from my domain model to these dumb view models the dto so I thought why why",
    "start": "2969880",
    "end": "2976480"
  },
  {
    "text": "don't I just have something do that mapping for me and just fill in the data uh and to my surprise no one had created this before so I could say I was the",
    "start": "2976480",
    "end": "2983480"
  },
  {
    "text": "first one to come up with well actually not the idea because a lot of people afterwards said Oh I thought of that but I didn't do it I'm like that's right I",
    "start": "2983480",
    "end": "2990200"
  },
  {
    "text": "did it uh uh anyway so uh yeah it's just a it's",
    "start": "2990200",
    "end": "2995520"
  },
  {
    "text": "just a dumb little Library to map from one object to the other uh really with the use case of flattening things out",
    "start": "2995520",
    "end": "3001640"
  },
  {
    "text": "into dto that kind of thing uh so usually in your application there's always uh some place that has all the",
    "start": "3001640",
    "end": "3007760"
  },
  {
    "text": "startup stuff uh like this like application start and you'll see that this is all this is where it's it's",
    "start": "3007760",
    "end": "3013319"
  },
  {
    "text": "configuring all the other stuff in the application for the first time so wherever that is for your application that's where you'd want to put this sort",
    "start": "3013319",
    "end": "3019319"
  },
  {
    "text": "of initialize initialization as well uh They al asked a couple other questions about how to use it that sort",
    "start": "3019319",
    "end": "3025359"
  },
  {
    "text": "of stuff uh so it's pretty straightforward you just call uh your uh initialization is going to start with",
    "start": "3025359",
    "end": "3031000"
  },
  {
    "text": "mapper do initialize oh this is a very old version where have it deprecated",
    "start": "3031000",
    "end": "3036160"
  },
  {
    "text": "it's not anymore I promise um and this is where I put all my initialization so",
    "start": "3036160",
    "end": "3042240"
  },
  {
    "text": "in as part of this you can do config doc createmap to create the mapping configuration from one class to another",
    "start": "3042240",
    "end": "3048680"
  },
  {
    "text": "so if I have class Fu and class Fu dto",
    "start": "3048680",
    "end": "3055359"
  },
  {
    "text": "and there's some data as part of that",
    "start": "3055359",
    "end": "3058640"
  },
  {
    "text": "that I my applications have a lot of f objects and and and them I don't know about",
    "start": "3061920",
    "end": "3067960"
  },
  {
    "text": "you value okay uh then now we create this mapping configuration between the",
    "start": "3067960",
    "end": "3073280"
  },
  {
    "text": "uh first one and the second one food dto uh so what that's doing behind the scenes is just inspecting both of those",
    "start": "3073280",
    "end": "3080880"
  },
  {
    "text": "types figuring out those things to can map with each other and then uh caching",
    "start": "3080880",
    "end": "3086000"
  },
  {
    "text": "some config ation about how it should actually execute and perform that mapping um and if I want to actually",
    "start": "3086000",
    "end": "3092920"
  },
  {
    "text": "execute the map somewhere else in my application code I just do Mapp or. map um I know it's lined out but that was a",
    "start": "3092920",
    "end": "3098559"
  },
  {
    "text": "mistake that I have atoned for these methods all still exist uh where I can map uh from food to food",
    "start": "3098559",
    "end": "3106599"
  },
  {
    "text": "etto food uh passing in a Fu",
    "start": "3106599",
    "end": "3112760"
  },
  {
    "text": "object and then returns",
    "start": "3112760",
    "end": "3117240"
  },
  {
    "text": "five and this returns a food etto object from the result and the food",
    "start": "3119040",
    "end": "3126760"
  },
  {
    "text": "D's value will be five hopefully if everything's gone right behind the scenes um so if this gets to be too much",
    "start": "3126760",
    "end": "3134680"
  },
  {
    "text": "in some of my applications I have a whole bunch of these sort of things uh a whole bunch of these Maps around um it",
    "start": "3134680",
    "end": "3140000"
  },
  {
    "text": "would be a little bit of pain to try to put them all here so I've created a a way for us to um gather specific sets of",
    "start": "3140000",
    "end": "3147799"
  },
  {
    "text": "configuration together so that uh you know you have different configuration uh for different use cases all kind of tied",
    "start": "3147799",
    "end": "3153880"
  },
  {
    "text": "together uh so an example of that if I go pull open these feature folders you'll see that uh not only they include",
    "start": "3153880",
    "end": "3162040"
  },
  {
    "text": "the uh C command query and View files and they also include the automapper",
    "start": "3162040",
    "end": "3168440"
  },
  {
    "text": "profile and also the controller itself so everything related to that thing is going to be all in that one folder so if",
    "start": "3168440",
    "end": "3173599"
  },
  {
    "text": "I pop open one of these profiles you'll see that uh I'm using uh this automapper concept of a profile uh",
    "start": "3173599",
    "end": "3181359"
  },
  {
    "text": "which contains its own configuration so in here I'm creating the maps for all of the maps inside of this one individual",
    "start": "3181359",
    "end": "3188319"
  },
  {
    "text": "uh file for this one feature for courses and I think what I wind up doing",
    "start": "3188319",
    "end": "3193760"
  },
  {
    "text": "to automatically pull in all these pieces together",
    "start": "3193760",
    "end": "3198960"
  },
  {
    "text": "is um I I go through and look for all the things that are these profile object",
    "start": "3200359",
    "end": "3207400"
  },
  {
    "text": "I go ahead and create them using reflection and then as part of my mapper configuration I just go ahead and suck",
    "start": "3207400",
    "end": "3212720"
  },
  {
    "text": "them all in and say go ahead and add all those PR files Al together this is showing the instant",
    "start": "3212720",
    "end": "3218240"
  },
  {
    "text": "space version um when I first created automapper my boss looked at it I was like oh that's a fantastic idea uh maybe",
    "start": "3218240",
    "end": "3223880"
  },
  {
    "text": "you should make it static though because not everyone wants static and my reaction was whatever I'll do static",
    "start": "3223880",
    "end": "3230119"
  },
  {
    "text": "anyway uh and then so just recently I was able to not just have static I kind of instance based versions that's what",
    "start": "3230119",
    "end": "3236160"
  },
  {
    "text": "you see here so I can instantiate one of these guys uh put it all in there and I can use my dependency injection to be",
    "start": "3236160",
    "end": "3242240"
  },
  {
    "text": "able to uh configure that to use dependency objection to have those different things so if I need to have",
    "start": "3242240",
    "end": "3247839"
  },
  {
    "text": "different configuration for different scenarios I would just have different ones of these objects that I would then create mappers based on those different",
    "start": "3247839",
    "end": "3253160"
  },
  {
    "text": "scenarios uh but that's how I do it is like that that's the way it is that's",
    "start": "3253160",
    "end": "3259880"
  },
  {
    "text": "the way it is somec anyone anyone we didn't have as much money so I",
    "start": "3259880",
    "end": "3266559"
  },
  {
    "text": "had walk DMC sorry did you have anything to add that",
    "start": "3266559",
    "end": "3271760"
  },
  {
    "text": "I had a question I does it run under rc2 yet it does all right yeah it runs on uh",
    "start": "3271760",
    "end": "3277280"
  },
  {
    "text": "net standard 1.1 which I will not go into what that means thought that was going to be my question uh yeah it runs",
    "start": "3277280",
    "end": "3283640"
  },
  {
    "text": "on net standard 111 so if I go up and pull up uh that's for my last",
    "start": "3283640",
    "end": "3289119"
  },
  {
    "text": "thing uh no go to new tab uh new new j.org packages",
    "start": "3289119",
    "end": "3296440"
  },
  {
    "text": "shut mapper that was not my term by the way that was Miguel de Kaza uh the latest",
    "start": "3296440",
    "end": "3302640"
  },
  {
    "text": "beta version which can only be called beta because it's depends on pre-released packages of other stuff",
    "start": "3302640",
    "end": "3307960"
  },
  {
    "text": "supports net standard 111 which will be anything zamon related uh not",
    "start": "3307960",
    "end": "3313640"
  },
  {
    "text": "Silverlight 5 sorry you silverite fans out there uh it'll support dinette 4 five of course and then just about",
    "start": "3313640",
    "end": "3319520"
  },
  {
    "text": "anything else Under the Sun Xbox if you de for Xbox I guess U it supports pretty much any of those platforms",
    "start": "3319520",
    "end": "3327319"
  },
  {
    "text": "okay it's about time to drink beer um we have time for maybe one or two questions",
    "start": "3328720",
    "end": "3333920"
  },
  {
    "text": "let's go in the back row area anyone have any questions for either of these handsome gentlemen that have more hair than",
    "start": "3333920",
    "end": "3340559"
  },
  {
    "text": "me they want to drink beer too oh you got one okay what's the most common Pitfall when using Auto uh the most",
    "start": "3340559",
    "end": "3348119"
  },
  {
    "text": "common Pitfall I well there's there's two big ones one of them is uh I only Built it to do the translation from",
    "start": "3348119",
    "end": "3355359"
  },
  {
    "text": "complex domain model to stupid looking dto a lot of people try to go the other direction it just really wasn't built",
    "start": "3355359",
    "end": "3361280"
  },
  {
    "text": "for that scenario um so it works in simple cases like uh I I might have a very simple case like uh create uh in",
    "start": "3361280",
    "end": "3369559"
  },
  {
    "text": "this case creating it will just map it from the form to the object because it's very simple uh but for more complex",
    "start": "3369559",
    "end": "3375839"
  },
  {
    "text": "scenarios it won't so if you find yourself having a lot of custom configuration just like stop what you're doing and just hardcode it because",
    "start": "3375839",
    "end": "3382440"
  },
  {
    "text": "that's more obvious uh don't put a lot of configuration in there um the other people run into a lot and I don't know",
    "start": "3382440",
    "end": "3387839"
  },
  {
    "text": "how to really get around it is over in the profile object over here they won't",
    "start": "3387839",
    "end": "3393839"
  },
  {
    "text": "call create map they'll call mapper Doc createmap which is the wrong one and uh",
    "start": "3393839",
    "end": "3401079"
  },
  {
    "text": "won't work either so don't do that make sure you call the the one up here uh the latest 5 and the new 5 release was when",
    "start": "3401079",
    "end": "3408559"
  },
  {
    "text": "it's coming uh June 27th evidently because that's when net core will actually",
    "start": "3408559",
    "end": "3413839"
  },
  {
    "text": "RTM for whatever your definition of RTM means we supposed to say reap the money",
    "start": "3413839",
    "end": "3421160"
  },
  {
    "text": "I don't know uh then it will be F that's the I basically have to wait for dinet",
    "start": "3421160",
    "end": "3426640"
  },
  {
    "text": "core to be released because I am depending on pre-release",
    "start": "3426640",
    "end": "3431760"
  },
  {
    "text": "packages and so that means I have to be label just pre-release as well thank you gentlemen very much",
    "start": "3431760",
    "end": "3437440"
  },
  {
    "text": "appreciate it appreciate you guys coming out and uh it's just on time we just finished up um if you have any questions",
    "start": "3437440",
    "end": "3443400"
  },
  {
    "text": "for these guys no we're going to go drink here so see you guys thank you so much for coming thank you",
    "start": "3443400",
    "end": "3452240"
  }
]