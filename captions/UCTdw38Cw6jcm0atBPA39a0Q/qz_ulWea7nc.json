[
  {
    "text": "all right so everybody hi welcome um and and good morning my name is",
    "start": "5660",
    "end": "10980"
  },
  {
    "text": "Danica fine I'm a developer Advocate at Confluence and",
    "start": "10980",
    "end": "16560"
  },
  {
    "text": "um it's been a pretty long journey for me to get to Melbourne um I'm from California I traveled to Singapore with",
    "start": "16560",
    "end": "22740"
  },
  {
    "text": "my colleague he's also giving a talk here later this week and so we were running around being developer advocates",
    "start": "22740",
    "end": "28680"
  },
  {
    "text": "for a bit went to Sydney and now we're in Melbourne and we're very excited to be here to pretty much round up our trip at NDC Melbourne today I'm going to be",
    "start": "28680",
    "end": "36660"
  },
  {
    "text": "talking to you about Kafka Confluence in the context of building a streaming data pipeline",
    "start": "36660",
    "end": "43260"
  },
  {
    "text": "it's not just any stream data pipeline we're gonna have fun with this okay mostly because I am a plant person I",
    "start": "43260",
    "end": "50280"
  },
  {
    "text": "have a problem so every time I travel I love traveling to this area because I get to go see new plants that I don't",
    "start": "50280",
    "end": "55559"
  },
  {
    "text": "actually see where I live and most of the plants that I see even out on the streets are things that I can only be",
    "start": "55559",
    "end": "61020"
  },
  {
    "text": "house plants where I live so that's pretty awesome so how many of you have house plants I want this to be a",
    "start": "61020",
    "end": "66840"
  },
  {
    "text": "motivating thing okay okay cool how many of you have that weird goal of you know",
    "start": "66840",
    "end": "72299"
  },
  {
    "text": "I hope it's a common goal of having a jungle in your house all right non-zero that's good that's",
    "start": "72299",
    "end": "79140"
  },
  {
    "text": "good we can probably be friends um so I have a point I have a plant problem absolutely",
    "start": "79140",
    "end": "85080"
  },
  {
    "text": "um this is a small subsection of a subset of the plants that I actually have um I have about four dozen throughout my",
    "start": "85080",
    "end": "91439"
  },
  {
    "text": "house um I I love plants they look so nice Okay it's decoration but they're alive",
    "start": "91439",
    "end": "97320"
  },
  {
    "text": "it's so cool um I have been collecting plants for a number of years now",
    "start": "97320",
    "end": "103799"
  },
  {
    "text": "um just because yeah they're aesthetically pleasing I think this is great and also when people come over and you haven't killed a plant like it's",
    "start": "103799",
    "end": "109799"
  },
  {
    "text": "nice to brag about it right like hey this thing's been alive for five years what about your Fern huh it's dead",
    "start": "109799",
    "end": "115920"
  },
  {
    "text": "um so anyway I love taking care of my plants I've collected a bunch of them it's really gotten out of hand the last",
    "start": "115920",
    "end": "121500"
  },
  {
    "text": "couple years because I've been at home okay and I'm like Ah that's it's an empty space on the floor we can put another plant there",
    "start": "121500",
    "end": "128220"
  },
  {
    "text": "um so I've definitely increased my collection over the last two years and that's well and good but then you",
    "start": "128220",
    "end": "134640"
  },
  {
    "text": "realize that it takes effort to take care of students I don't know if any of you planned parents have experienced",
    "start": "134640",
    "end": "139860"
  },
  {
    "text": "this but it's you know you can forget about them a little bit but then you gotta check and see when they need to be watered sometimes a couple times a day",
    "start": "139860",
    "end": "146160"
  },
  {
    "text": "depending on where they are do they need to be rotated get more light more fertilizer do I need to trim anything",
    "start": "146160",
    "end": "151319"
  },
  {
    "text": "off there's a lot of Hands-On work that goes into keeping a plant alive and I love that",
    "start": "151319",
    "end": "157560"
  },
  {
    "text": "my boss did not like that because I am spending more time every day doing rounds on my plants than you know doing",
    "start": "157560",
    "end": "164819"
  },
  {
    "text": "work that I probably should be doing so I needed to solve this problem and also beyond that I was just being a really",
    "start": "164819",
    "end": "171720"
  },
  {
    "text": "bad plant parent so I'm a remote worker but occasionally I go into the office and on this particular day",
    "start": "171720",
    "end": "179280"
  },
  {
    "text": "um I just didn't do the rounds I didn't check my plants didn't see if they needed to be watered at all and I came home to this very very dramatic site",
    "start": "179280",
    "end": "185580"
  },
  {
    "text": "this plant's okay now they just kind of do that they faint um but I felt really bad okay if I just",
    "start": "185580",
    "end": "191819"
  },
  {
    "text": "checked the plants or if I'd known the night before this wouldn't have happened and I wouldn't have been so depressed so",
    "start": "191819",
    "end": "199159"
  },
  {
    "text": "is there a better way for me to be doing this right I wanted to monitor my plants and I figured there had to have been a",
    "start": "199319",
    "end": "205500"
  },
  {
    "text": "better way than just running around and checking on them all the time right and I know what you're thinking they're",
    "start": "205500",
    "end": "210720"
  },
  {
    "text": "obviously pre-built solutions that you can get to monitor your plants I can just run to the store probably pick one",
    "start": "210720",
    "end": "216060"
  },
  {
    "text": "up get it off of Amazon whatever so that's the wrong question we're Engineers right all right so",
    "start": "216060",
    "end": "222840"
  },
  {
    "text": "the question is you know is there a more interesting way for me to solve this problem can I monitor my house plans in",
    "start": "222840",
    "end": "229500"
  },
  {
    "text": "a way that's kind of fun right do I have the technology or is there a technology that I want to be using do I have the",
    "start": "229500",
    "end": "235680"
  },
  {
    "text": "willpower probably to build a solution that's going to solve this problem but in a really fun and interesting way",
    "start": "235680",
    "end": "242819"
  },
  {
    "text": "so my thing is that I'd always wanted to build out a hardware project using a Raspberry Pi",
    "start": "242819",
    "end": "247860"
  },
  {
    "text": "and this is my chance okay this is my chance to build something in my home that I actually needed right I feel like",
    "start": "247860",
    "end": "253980"
  },
  {
    "text": "it's when you're starting off on Hardware projects the first thing you want to build is something that's actually useful to you because then it's",
    "start": "253980",
    "end": "259019"
  },
  {
    "text": "motivating you want to build it right um you know there's a lot of Pros to that",
    "start": "259019",
    "end": "264479"
  },
  {
    "text": "so this was my chance not only to use a Raspberry Pi but to also use my skill set around Kafka and build a Kafka",
    "start": "264479",
    "end": "271979"
  },
  {
    "text": "pipeline in my house that was going to actually be useful and hopefully useful to you guys as well so with that in mind",
    "start": "271979",
    "end": "279120"
  },
  {
    "text": "let's talk design I know this is a really really sad high level diagram back of the napkin scratch pad",
    "start": "279120",
    "end": "284940"
  },
  {
    "text": "but this is kind of what I wanted what I envisioned okay I needed a system that could monitor my house plants and tell",
    "start": "284940",
    "end": "291419"
  },
  {
    "text": "me when to water them if I could do that then I can avoid a lot of the sad the sad plants around my house right",
    "start": "291419",
    "end": "298259"
  },
  {
    "text": "pretty simple system I'd have a you know a soil moisture sensors connected to Raspberry Pi and just take some readings",
    "start": "298259",
    "end": "306180"
  },
  {
    "text": "throw that in Kafka probably um I also knew at that moment that having the readings alone isn't going to",
    "start": "306180",
    "end": "312479"
  },
  {
    "text": "be enough so I needed some metadata at this point I didn't know what that metadata was it's kind of a hand wavy data set we're not really sure what it",
    "start": "312479",
    "end": "318900"
  },
  {
    "text": "is but I needed some extra information to help me decide does this plant need to be watered based on the readings that",
    "start": "318900",
    "end": "324300"
  },
  {
    "text": "we currently have throw that into Kafka as well mix those two data sets together and then spit out",
    "start": "324300",
    "end": "330060"
  },
  {
    "text": "an alert at some point right pretty simple right",
    "start": "330060",
    "end": "335460"
  },
  {
    "text": "but at this point I have mentioned Kafka more than a couple times I want to make sure that we are all on the same page as",
    "start": "335460",
    "end": "340919"
  },
  {
    "text": "far as what that technology is really basic description it's a distributed event streaming platform",
    "start": "340919",
    "end": "347460"
  },
  {
    "text": "okay that is very concise only a couple of words but it's really dense so we're going to unpack that just a little bit",
    "start": "347460",
    "end": "354180"
  },
  {
    "text": "so first things first it is distributed event streaming platform what's that",
    "start": "354180",
    "end": "359460"
  },
  {
    "text": "mean so you may have noticed over the last couple years especially that we've been",
    "start": "359460",
    "end": "364500"
  },
  {
    "text": "undergoing a paradigm shift and how we actually process data so we're moving from slower sort of batch focused data",
    "start": "364500",
    "end": "371759"
  },
  {
    "text": "processing to faster real-time process extreme processing so instead of waiting minutes hours days",
    "start": "371759",
    "end": "378600"
  },
  {
    "text": "to aggregate data in a batch and process over that batch we are instead reacting",
    "start": "378600",
    "end": "383880"
  },
  {
    "text": "to smaller incremental pieces of data and producing incremental results right so this can happen more quickly in real",
    "start": "383880",
    "end": "391680"
  },
  {
    "text": "time and moving to stream processing is going to increase the accuracy of your data",
    "start": "391680",
    "end": "397440"
  },
  {
    "text": "your results you're going to have a more reactive system overall and depending on how you actually go about building that",
    "start": "397440",
    "end": "403020"
  },
  {
    "text": "implementing your your streaming system you can have a more resilient system as",
    "start": "403020",
    "end": "409139"
  },
  {
    "text": "well and Kafka is a technology as a platform that achieves this for you okay it can",
    "start": "409139",
    "end": "415560"
  },
  {
    "text": "serve as that streaming that messaging system to move information in real time um beyond that it can serve as a",
    "start": "415560",
    "end": "421380"
  },
  {
    "text": "persistent storage layer and also as we'll see a processing layer so it's a streaming system",
    "start": "421380",
    "end": "428759"
  },
  {
    "text": "but it's a distributed event streaming system and events are really really really",
    "start": "428759",
    "end": "435120"
  },
  {
    "text": "critical to a Costco as a whole if you're going to be successful in using Kafka you need to start thinking in",
    "start": "435120",
    "end": "440759"
  },
  {
    "text": "events all right and I'm going to preface this before we dive in with as humans as programmers as users I",
    "start": "440759",
    "end": "449280"
  },
  {
    "text": "promise you already think in and process in events all right I don't want to scare you but they're all around you all",
    "start": "449280",
    "end": "455759"
  },
  {
    "text": "right we submit web forms to update information online we are looking at application logs when you debug",
    "start": "455759",
    "end": "461819"
  },
  {
    "text": "applications or at least I hope you look at logs we react to notifications on our phones on our computers",
    "start": "461819",
    "end": "468060"
  },
  {
    "text": "these are all events okay so all I'm asking you to do is just be a little more cognizant of that fact",
    "start": "468060",
    "end": "474780"
  },
  {
    "text": "and so those are examples of events right but what are they actually so an event is a piece of information ideally",
    "start": "474780",
    "end": "481620"
  },
  {
    "text": "the smallest amount of information without too much excess that fully describes something that has happened",
    "start": "481620",
    "end": "488819"
  },
  {
    "text": "and what do you need to describe something has happened you need a timestamp it's some idea of when that thing happened the subject who or what",
    "start": "488819",
    "end": "495539"
  },
  {
    "text": "was involved in that thing that happened and any supporting details that that are involved",
    "start": "495539",
    "end": "502080"
  },
  {
    "text": "so bringing this back to my my plant system so",
    "start": "502080",
    "end": "507120"
  },
  {
    "text": "an event would be you know say yesterday at 2 30 PM Pacific Standard Time my my",
    "start": "507120",
    "end": "512940"
  },
  {
    "text": "plant had a moisture level reading of 19 percent okay so we have that time stamp 2 30 PM",
    "start": "512940",
    "end": "519899"
  },
  {
    "text": "yesterday PST great we have the subject the who or what and in this case it's that umbrella plant right there and the",
    "start": "519899",
    "end": "527220"
  },
  {
    "text": "supporting detail that we had that moisture level reading of 19 okay so that's pretty simple good we're on",
    "start": "527220",
    "end": "533760"
  },
  {
    "text": "the same page here events but another thing to keep in mind when you start dealing with events is that they're meant to be immutable okay it's",
    "start": "533760",
    "end": "540839"
  },
  {
    "text": "just an unfortunate fact of life this is because they describe things that have already happened as much as I'd love to",
    "start": "540839",
    "end": "547260"
  },
  {
    "text": "have a time machine and go back and change things I can't it's a fact it's something that has already occurred I can't go back and alter that",
    "start": "547260",
    "end": "554040"
  },
  {
    "text": "so going back to my plant if I want to water my plant and raise its moisture level to 70 percent",
    "start": "554040",
    "end": "560760"
  },
  {
    "text": "then does that negate the fact that yesterday at 2 30 PM it had a moisture reading of 19 no absolutely not it",
    "start": "560760",
    "end": "568200"
  },
  {
    "text": "simply adds a new event to that stream of events that sort of timeline that describes the moisture state of that",
    "start": "568200",
    "end": "574740"
  },
  {
    "text": "plant right we've just added another fact So based on what you've seen so far that",
    "start": "574740",
    "end": "580500"
  },
  {
    "text": "Kafka can help you move information stream it in real time and that it communicates that facts",
    "start": "580500",
    "end": "588420"
  },
  {
    "text": "immutable facts are occurring throughout your system I hope you can you can kind of see and start to piece together how",
    "start": "588420",
    "end": "593580"
  },
  {
    "text": "that could be a good thing for your system and we're going to get in more into this a little bit more but I think",
    "start": "593580",
    "end": "599519"
  },
  {
    "text": "that's pretty wild when I first started learning about Kafka that you can communicate these facts and then process them very very quickly",
    "start": "599519",
    "end": "605700"
  },
  {
    "text": "um I think that's pretty great but how does it do that looking a little bit into the architecture because Kafka is a",
    "start": "605700",
    "end": "612120"
  },
  {
    "text": "distributed event streaming platform so primary unit of storage in Kafka is a",
    "start": "612120",
    "end": "618660"
  },
  {
    "text": "topic topics typically represent a specific or single data entity consisting of events",
    "start": "618660",
    "end": "625620"
  },
  {
    "text": "and we produce events into Kafka as key value pairs using separate clients",
    "start": "625620",
    "end": "630720"
  },
  {
    "text": "called producers and these producers you can you can write them in whatever language you want whatever you're comfortable with and you can have as",
    "start": "630720",
    "end": "637080"
  },
  {
    "text": "many producers as you want writing to as many coffee topics as you want at a given time from there one state is in Kafka you",
    "start": "637080",
    "end": "644040"
  },
  {
    "text": "consume it from Kafka using another separate client called a consumer again you can write this in whatever language you would like to",
    "start": "644040",
    "end": "651180"
  },
  {
    "text": "consumers are pretty cool in that we can group consumers together running in",
    "start": "651180",
    "end": "656640"
  },
  {
    "text": "completely separate places and they can all consume from the same topic or set of topics and share the work of",
    "start": "656640",
    "end": "663120"
  },
  {
    "text": "processing and consuming from that topic so you can parallelize the processing of your data but consumers are also free to",
    "start": "663120",
    "end": "671640"
  },
  {
    "text": "independently read the same set of events from a topic at the same time all",
    "start": "671640",
    "end": "677100"
  },
  {
    "text": "right so that is a very very critical thing in Kafka so as you start to play",
    "start": "677100",
    "end": "682500"
  },
  {
    "text": "around with this technology the easiest thing to do is think about something similar right and for me the the closest",
    "start": "682500",
    "end": "687959"
  },
  {
    "text": "thing to Kafka is a messaging queue all right but Kafka is not a messaging queue",
    "start": "687959",
    "end": "693240"
  },
  {
    "text": "all right when data is consumed from a Kafka topic it does not disappear it is available for as many people to come",
    "start": "693240",
    "end": "699300"
  },
  {
    "text": "along and read it you should be comparing it in your mind to an application log when you're reading",
    "start": "699300",
    "end": "705420"
  },
  {
    "text": "through a log file and trying to debug something you're going line by line through the through the facts of that",
    "start": "705420",
    "end": "710940"
  },
  {
    "text": "application that accurately just accurately describe the whole state that history of that application up until this point and if you get halfway",
    "start": "710940",
    "end": "717899"
  },
  {
    "text": "through that file and you decide I can't figure it out can't debug someone else needs to come along and help me they are",
    "start": "717899",
    "end": "723360"
  },
  {
    "text": "free to read that same log file line by line and get the exact same information build up that same state in their mind",
    "start": "723360",
    "end": "728760"
  },
  {
    "text": "and understand the history of that application as well right same thing in a Kafka topic consumers are free to read",
    "start": "728760",
    "end": "735959"
  },
  {
    "text": "the same information as many times as they would like doesn't disappear",
    "start": "735959",
    "end": "741300"
  },
  {
    "text": "and furthermore consumers are completely decoupled from producers all right once the producers write the data into Kafka",
    "start": "741300",
    "end": "748380"
  },
  {
    "text": "they don't care who reads it and the consumers do not care who put the data into Kafka all right they are just",
    "start": "748380",
    "end": "753540"
  },
  {
    "text": "consuming information from Kafka from the topics these topics are further broken down",
    "start": "753540",
    "end": "759839"
  },
  {
    "text": "into smaller partition or smaller components called partitions so you see on the right there we have a",
    "start": "759839",
    "end": "765899"
  },
  {
    "text": "Kafka topic broken down into three partitions so the partitions themselves are the immutable append-only logs for",
    "start": "765899",
    "end": "772920"
  },
  {
    "text": "the individual events are stored so as we write an event into Kafka write a key value pair into a Kafka it's going to be",
    "start": "772920",
    "end": "779399"
  },
  {
    "text": "we're going to Hash that key determine where that partition partition that event should live in and we're going to",
    "start": "779399",
    "end": "786060"
  },
  {
    "text": "add it onto there right and these partitions are really important okay",
    "start": "786060",
    "end": "791459"
  },
  {
    "text": "because Kafka is is a distributed system because the partitions are aware are actually stored across the nodes in the",
    "start": "791459",
    "end": "798660"
  },
  {
    "text": "Kafka cluster all right and having them stored on different nodes opens up the uh opens up better resiliency and also",
    "start": "798660",
    "end": "806760"
  },
  {
    "text": "opens up the doors for replication later on so nodes in a Kafka cluster they are",
    "start": "806760",
    "end": "813240"
  },
  {
    "text": "called Brokers these could be running on bare metal VMS containers wherever you want these to be running",
    "start": "813240",
    "end": "819540"
  },
  {
    "text": "so in a simple cluster where we have three Brokers with three topics and three partitions three sounded pretty",
    "start": "819540",
    "end": "825360"
  },
  {
    "text": "great when I made this diagram so we might be Distributing the partitions of the uh the topics like this across the",
    "start": "825360",
    "end": "832019"
  },
  {
    "text": "cluster so in this case even if one of the Brokers were to go down we at least",
    "start": "832019",
    "end": "837240"
  },
  {
    "text": "haven't lost all of the data right we've only lost one partition for each topic which okay minor win that seems pretty",
    "start": "837240",
    "end": "843779"
  },
  {
    "text": "good but we can do better so if we just focus on one of these topics with its three partitions",
    "start": "843779",
    "end": "850560"
  },
  {
    "text": "um like I said being able to split things up into partitions means that we can replicate the data pretty easily now",
    "start": "850560",
    "end": "855839"
  },
  {
    "text": "so for each so we're going to use replication here and this is a",
    "start": "855839",
    "end": "861120"
  },
  {
    "text": "configurable parameter that defines how many copies are stored across the entire",
    "start": "861120",
    "end": "866160"
  },
  {
    "text": "Kafka cluster for a given partition okay so in this case we have a replication factor of 3 that's a pretty standard",
    "start": "866160",
    "end": "872639"
  },
  {
    "text": "number that you'd want to use and this means that we have our lead partitions",
    "start": "872639",
    "end": "878519"
  },
  {
    "text": "so we've got zero and broker one one broker two and two on broker three and these lead partitions are where we",
    "start": "878519",
    "end": "885899"
  },
  {
    "text": "are interacting with as we produce data into and our consumers are consuming from them but we also have a backup copy",
    "start": "885899",
    "end": "892380"
  },
  {
    "text": "of each of those partitions stored twice somewhere else throughout the cluster so if one of these Brokers were to go",
    "start": "892380",
    "end": "897959"
  },
  {
    "text": "down in this case we haven't lost any data all we have to do is look at one of the follower",
    "start": "897959",
    "end": "903079"
  },
  {
    "text": "partitions promote it to leader and our producers of consumers can move on with their lives as though nothing has",
    "start": "903079",
    "end": "909420"
  },
  {
    "text": "happened so I think that's pretty cool so we've all got a pretty good primer of Kafka I",
    "start": "909420",
    "end": "914519"
  },
  {
    "text": "hope if you have more questions about it I'm happy to talk about it more but let's get back to the project while",
    "start": "914519",
    "end": "919680"
  },
  {
    "text": "you're here okay back to this diagram again high level look of what I wanted to achieve",
    "start": "919680",
    "end": "925560"
  },
  {
    "text": "but before we dive into the actual implementation details I have another thing to admit is that I'm lazy",
    "start": "925560",
    "end": "931740"
  },
  {
    "text": "I don't really like to manage my own infrastructure and I figured in a project where I was going to be spending",
    "start": "931740",
    "end": "937199"
  },
  {
    "text": "so much time building the physical components um I really didn't want to do any",
    "start": "937199",
    "end": "942600"
  },
  {
    "text": "infrastructure work so um yeah keep that in mind as we go through this",
    "start": "942600",
    "end": "948959"
  },
  {
    "text": "so I'm going to use conflict Kafka so confluent offers Kafka fully managed in",
    "start": "948959",
    "end": "955019"
  },
  {
    "text": "the cloud so you can spin up a cluster in a couple of minutes and start writing producers and consumers start",
    "start": "955019",
    "end": "960720"
  },
  {
    "text": "interacting with your data I think it's pretty perfect for projects like these among other use cases where",
    "start": "960720",
    "end": "966839"
  },
  {
    "text": "you don't want to touch infrastructure but especially this where I just didn't really want to waste time on running my",
    "start": "966839",
    "end": "972600"
  },
  {
    "text": "own Kafka cluster okay I just wanted to put my data somewhere and start using it right",
    "start": "972600",
    "end": "977880"
  },
  {
    "text": "on top of offering Kafka in the cloud confluent offers some some pretty cool extra bits on top of it some tools to",
    "start": "977880",
    "end": "985320"
  },
  {
    "text": "help you integrate external data sources and syncs stream processing also",
    "start": "985320",
    "end": "990480"
  },
  {
    "text": "completely within the cloud and also some schema management so that you can have a contract between you and",
    "start": "990480",
    "end": "996899"
  },
  {
    "text": "downstream data processes so we're going to be using that and with",
    "start": "996899",
    "end": "1002240"
  },
  {
    "text": "all of that my in mind now we can start to flesh out the details of the project so I would start with that hand wavy data",
    "start": "1002240",
    "end": "1008180"
  },
  {
    "text": "set I sat down and thought about what extra information do I actually need to help me compute if something needs to be",
    "start": "1008180",
    "end": "1015320"
  },
  {
    "text": "watered right so for example I'd probably need to know what moisture threshold a plant is happy",
    "start": "1015320",
    "end": "1021740"
  },
  {
    "text": "within right for most house plants this is somewhere between 20 and like 60 percent moisture level give or take if",
    "start": "1021740",
    "end": "1030020"
  },
  {
    "text": "you're going to recreate this at home test it because I don't want you to drown a plant so I had to do a little",
    "start": "1030020",
    "end": "1035240"
  },
  {
    "text": "bit of research to figure that out and I also figured I would want some extra information just so that if I'm",
    "start": "1035240",
    "end": "1041360"
  },
  {
    "text": "poking into this data later on I know what I'm looking at so I wanted to know the scientific name of the plant the",
    "start": "1041360",
    "end": "1047120"
  },
  {
    "text": "given name of course that I gave it um and some extra things in there just to make it easier to to read it later",
    "start": "1047120",
    "end": "1054020"
  },
  {
    "text": "so I take that metadata throw it into Kafka produce it in there Next Step was to actually set up that that system and",
    "start": "1054020",
    "end": "1061220"
  },
  {
    "text": "I would use the soil moisture sensors to capture the both the moisture and I",
    "start": "1061220",
    "end": "1066980"
  },
  {
    "text": "think it gave me temperature readings for free so I would do that and so I would just use a python script",
    "start": "1066980",
    "end": "1073580"
  },
  {
    "text": "to pull the information from Those sensors and produce it again into Kafka and from there with all the information",
    "start": "1073580",
    "end": "1079700"
  },
  {
    "text": "in Kafka then I can start doing some stream processing right it's in there we have small pieces of information immutable facts we should join this",
    "start": "1079700",
    "end": "1087200"
  },
  {
    "text": "information do a little computing and um I would be using K SQL DB from this",
    "start": "1087200",
    "end": "1093620"
  },
  {
    "text": "step we'll get a little bit more into that later but within this stage I can determine if the readings were outside",
    "start": "1093620",
    "end": "1098840"
  },
  {
    "text": "of that moisture threshold that that plant was comfortable within and then the next step is push it to my phone",
    "start": "1098840",
    "end": "1104720"
  },
  {
    "text": "right again lazy I want to do the easy thing so I already had telegram on my phone so let's just push a message to",
    "start": "1104720",
    "end": "1110480"
  },
  {
    "text": "that and and let me know when I need to water my plant all right let's build something I know this is in the hardware",
    "start": "1110480",
    "end": "1116360"
  },
  {
    "text": "conference but I love talking about this okay so if you want to do this um these are the components that I had",
    "start": "1116360",
    "end": "1122059"
  },
  {
    "text": "this Raspberry Pi absolutely Overkill okay I totally could have done this with a pi zero but you can't get one now",
    "start": "1122059",
    "end": "1129320"
  },
  {
    "text": "um they're really expensive um so yeah this was Overkill this is the only Raspberry Pi that I can get my",
    "start": "1129320",
    "end": "1134900"
  },
  {
    "text": "hands on um so I ended up using that I used a half size breadboard I didn't know that",
    "start": "1134900",
    "end": "1141919"
  },
  {
    "text": "I needed a breadboard because again first project but this came for free with my order it's like they knew they're like this this girl's an idiot",
    "start": "1141919",
    "end": "1147860"
  },
  {
    "text": "so we're gonna send her one um so I ended up using breadboard and I did a lot of research on moisture",
    "start": "1147860",
    "end": "1155360"
  },
  {
    "text": "sensors there are a lot of them out there okay a ton of options for Raspberry Pi I",
    "start": "1155360",
    "end": "1162559"
  },
  {
    "text": "settled on these stemma I squared C capacitive moisture sensors they were",
    "start": "1162559",
    "end": "1168620"
  },
  {
    "text": "I think they're pretty high quality for for the cost they're pretty cheap and as",
    "start": "1168620",
    "end": "1173780"
  },
  {
    "text": "a capacitive moisture sensor they were going to last a little bit longer than others available so settled on those",
    "start": "1173780",
    "end": "1179660"
  },
  {
    "text": "and beyond that I decided to cut and crimp all my own wires which is super",
    "start": "1179660",
    "end": "1185480"
  },
  {
    "text": "fun um yeah that was really great so purchase some jsd connectors and ended",
    "start": "1185480",
    "end": "1190880"
  },
  {
    "text": "up using a couple meters of wire in the end and the last component of my my physical",
    "start": "1190880",
    "end": "1196820"
  },
  {
    "text": "setup were the Willing participants so I chose these plants in a really",
    "start": "1196820",
    "end": "1202580"
  },
  {
    "text": "scientific way they were all on the same table and behind that table was an outlet it was perfect I had to do it so",
    "start": "1202580",
    "end": "1210679"
  },
  {
    "text": "the hardware and the plants decided on I could actually go ahead and build the system insert hand waving here because",
    "start": "1210679",
    "end": "1216260"
  },
  {
    "text": "it's not a hardware conference but talk to me later if you're curious um yeah so suffice it to say after a lot",
    "start": "1216260",
    "end": "1223820"
  },
  {
    "text": "of soldering and crimping and maybe a couple tears I ended up with something like this don't judge it too much for",
    "start": "1223820",
    "end": "1229820"
  },
  {
    "text": "those of you who do Hardware um yeah so these are a couple of the sensors um hooked up to the breadboard",
    "start": "1229820",
    "end": "1236120"
  },
  {
    "text": "and turn hooked up to the Raspberry Pi I know I said in the beginning that I have four dozen plants and there are",
    "start": "1236120",
    "end": "1242120"
  },
  {
    "text": "quite a few plants on that that table in the previous slide I was only able to use four sensors in the end and",
    "start": "1242120",
    "end": "1250100"
  },
  {
    "text": "this is the hardware limitation on the um the sensors that I purchased so they are I squared C sensors meaning that in",
    "start": "1250100",
    "end": "1256520"
  },
  {
    "text": "order to get information off of them you have to know their I squared C address right they're all hooked up to the same",
    "start": "1256520",
    "end": "1261860"
  },
  {
    "text": "wires the input channels into the Raspberry Pi and in order to identify a sensor I need to say okay give me the",
    "start": "1261860",
    "end": "1267919"
  },
  {
    "text": "reading from that unique address unfortunately these sensors only have two bits on the back that you can solder",
    "start": "1267919",
    "end": "1273440"
  },
  {
    "text": "so we can only do four unique addresses for these across these sensors so for",
    "start": "1273440",
    "end": "1279500"
  },
  {
    "text": "now iteration one there are ways to get around it outside of the scope of this project but I can only hook up four sensors unfortunately so these are all",
    "start": "1279500",
    "end": "1285980"
  },
  {
    "text": "wired into the breadboard and then all of they're wired into the same input channels that then go into the Raspberry",
    "start": "1285980",
    "end": "1291200"
  },
  {
    "text": "Pi moving on so you don't judge my soldering",
    "start": "1291200",
    "end": "1296299"
  },
  {
    "text": "and the software again if you're curious to poke into this python37 and I also",
    "start": "1296299",
    "end": "1301820"
  },
  {
    "text": "installed the confluent Kafka python Library um in order to set up some producers to",
    "start": "1301820",
    "end": "1308960"
  },
  {
    "text": "write the information to Kafka on the Kafka side of things as I said didn't want to set up infrastructure so",
    "start": "1308960",
    "end": "1315140"
  },
  {
    "text": "I'm just driving this home I set up my cluster in console and Cloud took a couple of minutes and I'm also going to",
    "start": "1315140",
    "end": "1322520"
  },
  {
    "text": "be leveraging stream processing in the cloud using K School DB as well as some",
    "start": "1322520",
    "end": "1327980"
  },
  {
    "text": "managed connectors again all of this is fully through the cloud didn't have to leave the web UI to actually do the",
    "start": "1327980",
    "end": "1333559"
  },
  {
    "text": "Kafka portion of this so",
    "start": "1333559",
    "end": "1338080"
  },
  {
    "text": "if you take one thing out of this okay it's that it's it's this component okay schemas and understanding the data that",
    "start": "1339260",
    "end": "1346400"
  },
  {
    "text": "you're using so whenever anyone asks me where should you start with any sort of data related project I say okay take a",
    "start": "1346400",
    "end": "1353179"
  },
  {
    "text": "step back and actually understand the data set you're working with I feel like too often you kind of just do a little",
    "start": "1353179",
    "end": "1358400"
  },
  {
    "text": "hand waving you glaze over it you just Dive Right In and then you're like well wait I thought the data would look different and then you're stuck cleaning",
    "start": "1358400",
    "end": "1365299"
  },
  {
    "text": "things up and it's not really fun so especially in situations like this where you're creating the data you have",
    "start": "1365299",
    "end": "1370940"
  },
  {
    "text": "absolutely no excuse okay I know it's easy to be lacks and say oh I don't need a schema I'm the only person looking at",
    "start": "1370940",
    "end": "1376400"
  },
  {
    "text": "it wrong okay I've got an intern now and he's using this data all right so good thing I set up a schema",
    "start": "1376400",
    "end": "1382940"
  },
  {
    "text": "so the great thing about schemas I know they take a little bit of time to set up and think about but that's the benefit",
    "start": "1382940",
    "end": "1388580"
  },
  {
    "text": "of it you take a step back and you think about the data that you're going to be working with What fields do you actually",
    "start": "1388580",
    "end": "1393919"
  },
  {
    "text": "need what type should it be okay and I went through a couple iterations in this process just to make sure that I had the",
    "start": "1393919",
    "end": "1400520"
  },
  {
    "text": "data sets that I wanted to be creating and that I wanted to be working with later on so I set up two Avro schemas",
    "start": "1400520",
    "end": "1407360"
  },
  {
    "text": "here one for the actual house plants data so that's on the left here that metadata right so I had in addition to",
    "start": "1407360",
    "end": "1413720"
  },
  {
    "text": "the scientific name and common name of that plant I also had the moisture levels that they're comfortable within",
    "start": "1413720",
    "end": "1419720"
  },
  {
    "text": "that lower threshold and high threshold and the same thing for for the temperature as well and on the right I",
    "start": "1419720",
    "end": "1426799"
  },
  {
    "text": "created that schema for the actual readings that were going to be pulled from the sensors so it grabs the",
    "start": "1426799",
    "end": "1432440"
  },
  {
    "text": "moisture grabs the temperature and of course has a an explicit time stamp that",
    "start": "1432440",
    "end": "1437659"
  },
  {
    "text": "I store in there as well and both of these schemas also have a plant identification number that is going to",
    "start": "1437659",
    "end": "1444320"
  },
  {
    "text": "serve as you know help me keep track of each plant and then serve as the key that I can then use to join these data",
    "start": "1444320",
    "end": "1450980"
  },
  {
    "text": "sets together later on so schemas no your schemas all right so",
    "start": "1450980",
    "end": "1456980"
  },
  {
    "text": "with the schemas defined now I can actually start getting my data into Kafka how do we do that there are two",
    "start": "1456980",
    "end": "1462260"
  },
  {
    "text": "main ways to do this and the producer API and Kafka connect I know I have verses up there I'm a really",
    "start": "1462260",
    "end": "1468380"
  },
  {
    "text": "confrontational person so I just like to cause trouble but it's really not a competition all right there's going to",
    "start": "1468380",
    "end": "1473900"
  },
  {
    "text": "be specific cases where you want to use the producer API over Kafka connect and vice versa",
    "start": "1473900",
    "end": "1480279"
  },
  {
    "text": "so the producer API as I mentioned earlier this is your low level sort of vanilla option for getting data into",
    "start": "1480320",
    "end": "1486440"
  },
  {
    "text": "Kafka available in all of your favorite languages and some of your you know least favorite as well",
    "start": "1486440",
    "end": "1492919"
  },
  {
    "text": "so you'll want to be using the producer API when you either own the application",
    "start": "1492919",
    "end": "1498919"
  },
  {
    "text": "that's generating the data or you have access to it right so if I wanted to for example send some like log events into",
    "start": "1498919",
    "end": "1506360"
  },
  {
    "text": "Kafka and I own the application that's generating that okay add a line add a producer when you capture that event",
    "start": "1506360",
    "end": "1512659"
  },
  {
    "text": "within the application and you're logging it also push it into Kafka at the same time produce into Kafka all",
    "start": "1512659",
    "end": "1518240"
  },
  {
    "text": "right the other option is Kafka connect and this is I love I love Kafka connect",
    "start": "1518240",
    "end": "1524539"
  },
  {
    "text": "because it's way too easy to use all right so it's a low to no code option completely configuration based and as",
    "start": "1524539",
    "end": "1531080"
  },
  {
    "text": "the name implies it's your way to connect Kafka with other data sources and syncs okay so there are",
    "start": "1531080",
    "end": "1538179"
  },
  {
    "text": "hundreds hundreds of connectors available already pre-written to help you connect to that many data sources",
    "start": "1538179",
    "end": "1544159"
  },
  {
    "text": "and syncs and so yeah you just Define a configuration file or if you're doing",
    "start": "1544159",
    "end": "1550220"
  },
  {
    "text": "doing it through confluent Cloud where there are dozens of fully managed ones meaning that you just walk through",
    "start": "1550220",
    "end": "1555559"
  },
  {
    "text": "basically a configuration wizard to connect to your data sources um yeah it's just completely",
    "start": "1555559",
    "end": "1562220"
  },
  {
    "text": "configuration based it's it's pretty easy and so this is really great option for",
    "start": "1562220",
    "end": "1567440"
  },
  {
    "text": "data that you don't own you know where it is maybe it's at the you know in a",
    "start": "1567440",
    "end": "1572600"
  },
  {
    "text": "database somewhere maybe it's in some files or at the other end of an API call really great for you know reference data",
    "start": "1572600",
    "end": "1579559"
  },
  {
    "text": "or lookup tables things that extra auxiliary or reference data that you need to have in Kafka for later on",
    "start": "1579559",
    "end": "1586760"
  },
  {
    "text": "so what did I end up using in my case probably both right wrong I ended up",
    "start": "1586760",
    "end": "1592940"
  },
  {
    "text": "using the producer API and only that um and this goes back to the fact that",
    "start": "1592940",
    "end": "1598400"
  },
  {
    "text": "for my metadata metadata probably exists in a database somewhere or it should be right I only had four plants worth of",
    "start": "1598400",
    "end": "1604880"
  },
  {
    "text": "data to for my metadata right so being lazy didn't want to set up a database",
    "start": "1604880",
    "end": "1610700"
  },
  {
    "text": "didn't think it was necessary so I used the producer API to serialize or build",
    "start": "1610700",
    "end": "1616159"
  },
  {
    "text": "up those objects that metadata object serialize it according to that schema that I wrote and use the producer API to",
    "start": "1616159",
    "end": "1621919"
  },
  {
    "text": "just push it into Kafka um I did a very similar thing for the readings so to start it off though I",
    "start": "1621919",
    "end": "1629840"
  },
  {
    "text": "created a static mapping of the plant IDs to the I squared C address and then",
    "start": "1629840",
    "end": "1634880"
  },
  {
    "text": "just looped every five seconds in the python script grabbed the uh the readings at that address and produce it",
    "start": "1634880",
    "end": "1641299"
  },
  {
    "text": "into Kafka you know",
    "start": "1641299",
    "end": "1646640"
  },
  {
    "text": "and get moving once data is in Kafka then we can start actually doing the processing right and",
    "start": "1646640",
    "end": "1653600"
  },
  {
    "text": "there are a couple different ways to go about it they all have their trade-offs so",
    "start": "1653600",
    "end": "1659539"
  },
  {
    "text": "it's up to you to decide what you want to play around with the OG way to produce data or process data from Kafka",
    "start": "1659539",
    "end": "1665779"
  },
  {
    "text": "is with the consumer producer API all right so again this is your low level",
    "start": "1665779",
    "end": "1670940"
  },
  {
    "text": "option flexibility because it's available in all your favorite languages but to use",
    "start": "1670940",
    "end": "1676400"
  },
  {
    "text": "it for stream processing depending on you know what your use case is you're going to have to set up a consumer to",
    "start": "1676400",
    "end": "1681620"
  },
  {
    "text": "consume data from Kafka right do your transformations in memory if you have any sort of stateful Transformations you",
    "start": "1681620",
    "end": "1688400"
  },
  {
    "text": "want to be doing or aggregations all right got to manage that yourself how are you going to handle failover I don't",
    "start": "1688400",
    "end": "1693500"
  },
  {
    "text": "know figure it out and then once you're done with that once you've done your Transformations your aggregations you",
    "start": "1693500",
    "end": "1698600"
  },
  {
    "text": "produce it back into Kafka with the producer okay obviously that involves a lot of work",
    "start": "1698600",
    "end": "1703940"
  },
  {
    "text": "but you have a little bit more flexibility in what you can do at that level so you know I don't know to each",
    "start": "1703940",
    "end": "1710240"
  },
  {
    "text": "his own that said if you're sane you're going to use one of the next two options for for stream processing for data processing",
    "start": "1710240",
    "end": "1716539"
  },
  {
    "text": "next up is Kafka Stream So This is a Java and Scholar Library specifically written for stream processing okay so it",
    "start": "1716539",
    "end": "1724039"
  },
  {
    "text": "excels at stateful operations you get a lot of these cools Transformations off",
    "start": "1724039",
    "end": "1729320"
  },
  {
    "text": "to the off to the right you can see filtering mapping joining windowing aggregating and the really cool thing is",
    "start": "1729320",
    "end": "1735740"
  },
  {
    "text": "that it takes that hassle of managing State off of your hands okay it has built-in mechanisms to handle stateful",
    "start": "1735740",
    "end": "1742039"
  },
  {
    "text": "Transformations and the failover that might be involved in that okay and because it's built on top of the",
    "start": "1742039",
    "end": "1747860"
  },
  {
    "text": "consumer and producer API because consumers can share the work and parallelize processing you get that for",
    "start": "1747860",
    "end": "1754279"
  },
  {
    "text": "free in your Kafka streams applications so you can spin up multiple applications multiple instances of it and they can",
    "start": "1754279",
    "end": "1760700"
  },
  {
    "text": "all share the work of reading from the same input topics and paralyze that processing okay and in the event that",
    "start": "1760700",
    "end": "1767539"
  },
  {
    "text": "one of those instances goes down it will rebalance move that state over to the act of the active instances and you just",
    "start": "1767539",
    "end": "1775460"
  },
  {
    "text": "keep going right so that's all taken care of for you which is pretty great so",
    "start": "1775460",
    "end": "1780860"
  },
  {
    "text": "see consumer producer API doesn't look that good now and the next option if you just want to",
    "start": "1780860",
    "end": "1786140"
  },
  {
    "text": "make it even easier K SQL DB so what if you could spin up a streaming application using SQL you can",
    "start": "1786140",
    "end": "1793340"
  },
  {
    "text": "so the great thing about K SQL DB is that you don't have to write any code to make it happen and it spins up a",
    "start": "1793340",
    "end": "1800720"
  },
  {
    "text": "streaming application under the hood a Kafka streams application so effectively you write some SQL Define what",
    "start": "1800720",
    "end": "1807740"
  },
  {
    "text": "information you want to get what aggregations you want to happen and it will build a streaming application for",
    "start": "1807740",
    "end": "1813200"
  },
  {
    "text": "you underneath so you have that you're completely removed from that process you don't have to think about it and you so",
    "start": "1813200",
    "end": "1819679"
  },
  {
    "text": "you can easily filter join do your windowing if you want all with pretty simple SQL syntax and then the final",
    "start": "1819679",
    "end": "1827360"
  },
  {
    "text": "benefit of that is that you can do this completely within the cloud and just in a SQL editor so",
    "start": "1827360",
    "end": "1833539"
  },
  {
    "text": "this is what I ended up using just for Simplicity so processing with K SQL DB",
    "start": "1833539",
    "end": "1839480"
  },
  {
    "text": "so to build a streaming application with classical DB you first need to be aware of the two first-class objects in it",
    "start": "1839480",
    "end": "1846320"
  },
  {
    "text": "tables and streams streams represent unbounded ongoing",
    "start": "1846320",
    "end": "1851360"
  },
  {
    "text": "series of events tables on the other hand represent the",
    "start": "1851360",
    "end": "1856520"
  },
  {
    "text": "most up-to-date value for a given key all right I'm going to end up using both of these for my two data sets so let's",
    "start": "1856520",
    "end": "1863720"
  },
  {
    "text": "see how to create a couple so the first thing you should note is that the syntax is going to feel very",
    "start": "1863720",
    "end": "1869419"
  },
  {
    "text": "familiar it is effectively SQL the first thing I did was build a table",
    "start": "1869419",
    "end": "1875299"
  },
  {
    "text": "for my houseplant metadata all right so the houseplant metadata exists in a Kaka",
    "start": "1875299",
    "end": "1880640"
  },
  {
    "text": "topic already in my Kafka cluster but to make use of it in my case equal DB application I need to basically register",
    "start": "1880640",
    "end": "1887480"
  },
  {
    "text": "it as input data as an input data set and to do that we're just going to put it in a table and make it available to",
    "start": "1887480",
    "end": "1894020"
  },
  {
    "text": "use so I chose to use a table here for a couple of reasons again metadata is",
    "start": "1894020",
    "end": "1900440"
  },
  {
    "text": "probably something that exists in a database table to begin with um and if I'm ever updating anything I",
    "start": "1900440",
    "end": "1905840"
  },
  {
    "text": "just want the most recent value of that right if I'm updating the metadata saying no it's actually comfortable with",
    "start": "1905840",
    "end": "1911480"
  },
  {
    "text": "that 25 moisture right I want to get that information and have that most recent value reflected immediately in my",
    "start": "1911480",
    "end": "1917600"
  },
  {
    "text": "streaming application so made sense to do that in a table",
    "start": "1917600",
    "end": "1923559"
  },
  {
    "text": "things to note here so the Top's going to feel pretty familiar again the sort of SQL syntax but what we have at the",
    "start": "1923960",
    "end": "1931159"
  },
  {
    "text": "bottom is basically you create this table and you point to the top Kafka topic that is backing that table where",
    "start": "1931159",
    "end": "1936919"
  },
  {
    "text": "are we getting this information so it's just going to point to that house plan metadata topic and then we specify the",
    "start": "1936919",
    "end": "1942500"
  },
  {
    "text": "Avro format because remember we wrote those average schemas to Define this data",
    "start": "1942500",
    "end": "1947779"
  },
  {
    "text": "and because of that because we took time to write that average schema a really cool thing happens all right so since we",
    "start": "1947779",
    "end": "1953779"
  },
  {
    "text": "wrote that schema along with our data into our Kafka cluster that scheme is now stored in the schema registry along",
    "start": "1953779",
    "end": "1960080"
  },
  {
    "text": "with our cluster so K sqldb our application as a consumer can go access",
    "start": "1960080",
    "end": "1966260"
  },
  {
    "text": "that schema within the schema registry and use it to automatically parse the fields and the types from this topic so",
    "start": "1966260",
    "end": "1973880"
  },
  {
    "text": "there were I don't know eight or ten fields in that topic in that schema and",
    "start": "1973880",
    "end": "1979100"
  },
  {
    "text": "I only had to Define one here right the only thing I had to specify",
    "start": "1979100",
    "end": "1984260"
  },
  {
    "text": "was the what field are we using as the primary key because again we need a key for a table to update the values per key",
    "start": "1984260",
    "end": "1992419"
  },
  {
    "text": "okay every other field is brought in automatically as part of this all right",
    "start": "1992419",
    "end": "1997519"
  },
  {
    "text": "we don't have to specify it don't have to mistype them something really good",
    "start": "1997519",
    "end": "2003159"
  },
  {
    "text": "and once I write this query then I can go back to the K SQL DB editor within my browser",
    "start": "2003159",
    "end": "2008860"
  },
  {
    "text": "and execute this and it's going to create that table make it available and we can start querying",
    "start": "2008860",
    "end": "2015039"
  },
  {
    "text": "it if we want behind the scenes so for the readings data",
    "start": "2015039",
    "end": "2020559"
  },
  {
    "text": "probably going to put this in a stream right because every message on that topic is valuable it describes the state",
    "start": "2020559",
    "end": "2027100"
  },
  {
    "text": "of that plant the the moisture state of that plant right so every message is relevant every message is valuable we",
    "start": "2027100",
    "end": "2033760"
  },
  {
    "text": "should put it in a stream again I'm using Avro so this is even easier K SQL DB application can access",
    "start": "2033760",
    "end": "2041080"
  },
  {
    "text": "that schema under the hood from the registry and then use that to parse every single field I don't have to",
    "start": "2041080",
    "end": "2046299"
  },
  {
    "text": "specify a primary key that's not important in a stream it is just going to I just have to point to that Kafka",
    "start": "2046299",
    "end": "2052540"
  },
  {
    "text": "topic specify the value format and it will create this stream along with all",
    "start": "2052540",
    "end": "2057820"
  },
  {
    "text": "the types in its field parsed I've got my table in Kafka and my case",
    "start": "2057820",
    "end": "2064000"
  },
  {
    "text": "with the DB application I have my stream in in the application as well the next step is to actually combine",
    "start": "2064000",
    "end": "2069580"
  },
  {
    "text": "them right because the readings aren't very useful without that extra bit of Knowledge from the metadata table right",
    "start": "2069580",
    "end": "2075460"
  },
  {
    "text": "so we're going to do some a stream to table join to actually combine these two things",
    "start": "2075460",
    "end": "2081638"
  },
  {
    "text": "so we're just going to focus on the select statement first and this is going to seem again it's it's just a regular",
    "start": "2081639",
    "end": "2088179"
  },
  {
    "text": "SQL select statement right select these fields from the readings table reading",
    "start": "2088179",
    "end": "2093940"
  },
  {
    "text": "stream and we're going to do an inner join on the metadata table okay we're joining on the ID field and we're doing",
    "start": "2093940",
    "end": "2100960"
  },
  {
    "text": "an inner join just to make sure we have all the information we need for the next stage right I just I want to have both",
    "start": "2100960",
    "end": "2106780"
  },
  {
    "text": "data sets to move on that seems pretty uh pretty simple right",
    "start": "2106780",
    "end": "2112480"
  },
  {
    "text": "where this uh gets just any bit different from SQL is the top right here we are creating a stream from this",
    "start": "2112480",
    "end": "2119380"
  },
  {
    "text": "information so this select statement this is wonderful if I just ran the select statement",
    "start": "2119380",
    "end": "2125200"
  },
  {
    "text": "on its own it will give me you know all the information that's currently in that application it'll do that join and spit",
    "start": "2125200",
    "end": "2131380"
  },
  {
    "text": "it out done but the readings topic the reading stream is constantly having updates put",
    "start": "2131380",
    "end": "2137560"
  },
  {
    "text": "on it right so I want to have those constantly be",
    "start": "2137560",
    "end": "2142780"
  },
  {
    "text": "reflected in the output of this query right so first thing I'm going to persist the output of this statement to",
    "start": "2142780",
    "end": "2148960"
  },
  {
    "text": "a stream I want to save it there so I can use it in the next step so to do that we're creating this stream the",
    "start": "2148960",
    "end": "2154240"
  },
  {
    "text": "enriched stream telling it which Kafka topic to store this stream in telling it the value",
    "start": "2154240",
    "end": "2160180"
  },
  {
    "text": "format and then the important keyword here is emit changes at the bottom okay",
    "start": "2160180",
    "end": "2166480"
  },
  {
    "text": "by adding emit changes to the end of a k SQL DB statement we are requesting a",
    "start": "2166480",
    "end": "2172119"
  },
  {
    "text": "push query meaning that every time a new value comes in on the Stream that's part of this join we're going to",
    "start": "2172119",
    "end": "2179680"
  },
  {
    "text": "execute this join do whatever you know whatever is indicated in the select statement and we are going to Output that and",
    "start": "2179680",
    "end": "2187119"
  },
  {
    "text": "persist it to the stream right we're going to emit all of the new changes that come through on that topic on that",
    "start": "2187119",
    "end": "2192280"
  },
  {
    "text": "stream okay and it's going to be pushed to me as output and this is contrasted with a pull query",
    "start": "2192280",
    "end": "2199960"
  },
  {
    "text": "which is you know where I'm just pulling a finite result set that reflects the current state of the underlying",
    "start": "2199960",
    "end": "2205960"
  },
  {
    "text": "streaming application right so here I just want a one-off response show me the current state of this metadata table",
    "start": "2205960",
    "end": "2212380"
  },
  {
    "text": "specifically give me the names of the plants whose low moisture threshold is uh",
    "start": "2212380",
    "end": "2218640"
  },
  {
    "text": "that is that is not what it's supposed to be that's fun",
    "start": "2218640",
    "end": "2223900"
  },
  {
    "text": "that's really weird anyway um it's supposed to be reflecting the low moisture threshold above 20. so we're going to pretend that that's there",
    "start": "2223900",
    "end": "2230320"
  },
  {
    "text": "um that's weird cool love that cool let's act on the data now all right so I have an enriched stream",
    "start": "2230320",
    "end": "2236920"
  },
  {
    "text": "that has the um the readings joined to the metadata so",
    "start": "2236920",
    "end": "2242800"
  },
  {
    "text": "now we have all the information we need in a single message in a single Row in case equal DB so let's make sense of",
    "start": "2242800",
    "end": "2248980"
  },
  {
    "text": "this data right so revisiting the overall goal here whenever a plant has enough low moisture",
    "start": "2248980",
    "end": "2256359"
  },
  {
    "text": "readings indicating that it needs to be watered right I want to send an alert I want to",
    "start": "2256359",
    "end": "2261880"
  },
  {
    "text": "receive an alert on my phone but how do I determine when to send that alert and then also how often should I",
    "start": "2261880",
    "end": "2268839"
  },
  {
    "text": "send that this is pretty easy because I'm the only stakeholder but you know it's an important thing to reason about you know",
    "start": "2268839",
    "end": "2274920"
  },
  {
    "text": "so I thought about this a while right so I'm taking these readings every five seconds correct",
    "start": "2274920",
    "end": "2281619"
  },
  {
    "text": "and if you know if I have a low moisture moisture reading every five seconds",
    "start": "2281619",
    "end": "2286720"
  },
  {
    "text": "that's going to inundate my phone I can't do that absolutely not so I figured if I'm out of the house or just",
    "start": "2286720",
    "end": "2292300"
  },
  {
    "text": "busy it's probably good enough to receive an alert at most once every hour right",
    "start": "2292300",
    "end": "2298119"
  },
  {
    "text": "so all right so we're going to work on an hourly basis but I also noticed that my sensors",
    "start": "2298119",
    "end": "2304180"
  },
  {
    "text": "weren't perfect and I feel like I've heard this is a very common thing with any sort of Hardware project so after",
    "start": "2304180",
    "end": "2310480"
  },
  {
    "text": "running them for a bit I kind of noticed that I could really really easily get low uh you know false low or false High",
    "start": "2310480",
    "end": "2317079"
  },
  {
    "text": "readings but the general Trend over time is that the moisture level would decrease right",
    "start": "2317079",
    "end": "2323920"
  },
  {
    "text": "so after looking at the data a little bit I decided that within a one hour period it would probably be good enough",
    "start": "2323920",
    "end": "2331320"
  },
  {
    "text": "if I received you know if I received 20 minutes worth of low readings that",
    "start": "2331320",
    "end": "2336700"
  },
  {
    "text": "probably says that plant needs to be watered right that's probably good enough to indicate that we have we have breached that threshold and we should",
    "start": "2336700",
    "end": "2342579"
  },
  {
    "text": "water that plant okay so running that math it's taking",
    "start": "2342579",
    "end": "2347680"
  },
  {
    "text": "readings every five seconds 240 low readings within an hour so 20",
    "start": "2347680",
    "end": "2353260"
  },
  {
    "text": "minutes 20 minutes worth of low readings is 240 low readings within an hour all",
    "start": "2353260",
    "end": "2359680"
  },
  {
    "text": "right so we should wait until we get to 240 to trigger an alert and this is the query that I wrote to",
    "start": "2359680",
    "end": "2367060"
  },
  {
    "text": "actually make this happen all right first thing we're going to focus on is I said I wanted to receive",
    "start": "2367060",
    "end": "2372220"
  },
  {
    "text": "at most one alert every hour okay we're going to do this by setting up a",
    "start": "2372220",
    "end": "2378000"
  },
  {
    "text": "non-overlapping one hour tumbling window okay which I think it's wild that you",
    "start": "2378000",
    "end": "2383619"
  },
  {
    "text": "can just do this with one line just a couple words and so the first thing we're doing is breaking up all of the",
    "start": "2383619",
    "end": "2390339"
  },
  {
    "text": "input data into one hour blocks effectively and then from there we are we have this",
    "start": "2390339",
    "end": "2397660"
  },
  {
    "text": "filter in there okay so if the moisture from the reading was lower than the low moisture threshold we are going to count",
    "start": "2397660",
    "end": "2404740"
  },
  {
    "text": "that okay and if I have 240 low readings within",
    "start": "2404740",
    "end": "2411099"
  },
  {
    "text": "that one hour period we are going to actually output a row from this from this query",
    "start": "2411099",
    "end": "2417820"
  },
  {
    "text": "and I want to just go back and explain this a little bit more because it might seem a little wonky and I just want to make sure we",
    "start": "2417820",
    "end": "2423700"
  },
  {
    "text": "all understand what's going on here so whenever we are windowing and conducting some sort of aggregate the output is a",
    "start": "2423700",
    "end": "2430839"
  },
  {
    "text": "table and it that might seem a little weird but it makes sense when you think about it more because a table has a row",
    "start": "2430839",
    "end": "2437440"
  },
  {
    "text": "where it's a computed per key per window okay and whenever we're showing the current State per a key it should be a",
    "start": "2437440",
    "end": "2444280"
  },
  {
    "text": "table all right so the query is operating over all of",
    "start": "2444280",
    "end": "2449800"
  },
  {
    "text": "the input data right every time we do a join we have a new reading it's going to be joined on that metadata and it's",
    "start": "2449800",
    "end": "2457839"
  },
  {
    "text": "going to be an input parameter for this query right",
    "start": "2457839",
    "end": "2463060"
  },
  {
    "text": "as every record is processed if it meets this this filter requirement the",
    "start": "2463060",
    "end": "2469000"
  },
  {
    "text": "moisture is lower than that moisture low moisture threshold it's going to increment the state so this is a",
    "start": "2469000",
    "end": "2474640"
  },
  {
    "text": "stateful operation that's occurring per window per key okay so there is there is",
    "start": "2474640",
    "end": "2480280"
  },
  {
    "text": "a one hour State associated with each plant okay so if that event happens to meet",
    "start": "2480280",
    "end": "2487780"
  },
  {
    "text": "that filtering requirement it's going to increment that state okay we're going to start at zero increment",
    "start": "2487780",
    "end": "2492940"
  },
  {
    "text": "at one two three four so and so on and so forth through 239 nothing happens at",
    "start": "2492940",
    "end": "2498460"
  },
  {
    "text": "that point we are just incrementing the state up until that point we're not outputting anything as soon as we get",
    "start": "2498460",
    "end": "2504460"
  },
  {
    "text": "that 240th reading that is when a row is output as a result of this query",
    "start": "2504460",
    "end": "2510220"
  },
  {
    "text": "okay and the result of this is that I'm only going to receive at most one alert",
    "start": "2510220",
    "end": "2516280"
  },
  {
    "text": "per plan to ID right per window which is exactly what I wanted",
    "start": "2516280",
    "end": "2523180"
  },
  {
    "text": "so now I have a Kafka topic I persisted that to a table I have it persisted to a",
    "start": "2523180",
    "end": "2528400"
  },
  {
    "text": "Kafka topic all I need to do is get the information out of Kafka and for this we're going to",
    "start": "2528400",
    "end": "2535000"
  },
  {
    "text": "be using Kafka connect it is your way to connect external data sources and syncs with Kafka topics okay I said before",
    "start": "2535000",
    "end": "2542320"
  },
  {
    "text": "that I wanted to receive this alert on my phone and I already had a telegram app cool thing about telegram if you",
    "start": "2542320",
    "end": "2548500"
  },
  {
    "text": "have it you can actually set up a bot I'm pretty sure this is not the use case they had in mind you can also play",
    "start": "2548500",
    "end": "2555760"
  },
  {
    "text": "around with some like AI stuff and just build a full bot which is pretty cool but I was able to set up a bot",
    "start": "2555760",
    "end": "2561400"
  },
  {
    "text": "get a unique API key to actually access that bot and then they also have a chat",
    "start": "2561400",
    "end": "2566800"
  },
  {
    "text": "API so that you can use your API key send information to an endpoint and once",
    "start": "2566800",
    "end": "2572140"
  },
  {
    "text": "you've started a conversation with that bot you can send information to your phone from it which is pretty pretty cool",
    "start": "2572140",
    "end": "2577599"
  },
  {
    "text": "so doing that I set up my bot got that information and I then had a convenient",
    "start": "2577599",
    "end": "2583060"
  },
  {
    "text": "endpoint that I can just send data to and conveniently there is a Kafka sync",
    "start": "2583060",
    "end": "2589359"
  },
  {
    "text": "connector for HTTP okay you have an endpoint you can just send whatever data you want to it all right so",
    "start": "2589359",
    "end": "2596500"
  },
  {
    "text": "to get this sync connector up and running so this is this is a Json that's",
    "start": "2596500",
    "end": "2601900"
  },
  {
    "text": "kind of like spat out at the end once you've defined your connector but it was a walk through sort of wizard too to set",
    "start": "2601900",
    "end": "2607900"
  },
  {
    "text": "this up so a couple things to take note of we point to the topic that we're",
    "start": "2607900",
    "end": "2613119"
  },
  {
    "text": "actually pulling information from that we want to get out of Kafka which is our low ratings topic",
    "start": "2613119",
    "end": "2619060"
  },
  {
    "text": "we specify that endpoint so this has that API key we're just using the send message endpoint",
    "start": "2619060",
    "end": "2626200"
  },
  {
    "text": "and from here I'm just sending a string to it I have to specify the chat ID that I've set up that conversation that I'm",
    "start": "2626200",
    "end": "2632859"
  },
  {
    "text": "having with the bot and then I'm using reg X to grab the message field from that",
    "start": "2632859",
    "end": "2640720"
  },
  {
    "text": "topic that I just created and just packages up packed it up to send to that endpoint right and so once",
    "start": "2640720",
    "end": "2648940"
  },
  {
    "text": "this is once this has happened and I run my connector it takes a couple minutes to set this up but then this is the sort of alert that",
    "start": "2648940",
    "end": "2655599"
  },
  {
    "text": "I receive on my phone telling me that my plant's complaining and it needs to be watered right so which I I'm pretty",
    "start": "2655599",
    "end": "2662980"
  },
  {
    "text": "happy about I've gotten a couple of these now I need to I need to get home to one of my plants but anyway so that",
    "start": "2662980",
    "end": "2668319"
  },
  {
    "text": "was fun I think it was pretty fun I built a useful thing that I can use and it solves a very real problem in my life",
    "start": "2668319",
    "end": "2675400"
  },
  {
    "text": "right but I know you were here for the fun of it but I tricked you okay this is this is",
    "start": "2675400",
    "end": "2681099"
  },
  {
    "text": "actually going to be useful for you as well if you're looking to utilize Kafka to get into streaming data to build a",
    "start": "2681099",
    "end": "2687339"
  },
  {
    "text": "streaming data pipeline I just gave you all the tools you needed to actually make that happen pretty easily so if you",
    "start": "2687339",
    "end": "2693160"
  },
  {
    "text": "wanted to turn around leave and build a POC you can do it in 15 minutes if you really wanted to all right so when",
    "start": "2693160",
    "end": "2698740"
  },
  {
    "text": "you're building a streaming data pipeline you're going to have some combination of these three stages right you're going to",
    "start": "2698740",
    "end": "2705040"
  },
  {
    "text": "have your ingestion stage where you're setting up a producer from an application that you already have or",
    "start": "2705040",
    "end": "2710319"
  },
  {
    "text": "you're spinning up connectors to pull data from some data sources or apis and you're pushing into Kafka from there you",
    "start": "2710319",
    "end": "2717339"
  },
  {
    "text": "can pretty easily set up a streaming application whether you're doing that with consumers and producers or Kafka",
    "start": "2717339",
    "end": "2722500"
  },
  {
    "text": "streams or k SQL DB you then can work to combine those data sets transform them filter massage the data whatever you",
    "start": "2722500",
    "end": "2728980"
  },
  {
    "text": "want doing that within the context of Kafka and then wherever else you want to move it later on either for further",
    "start": "2728980",
    "end": "2735160"
  },
  {
    "text": "Downstream analytics or just to store it long term there are a host of other connectors that you can use to do that",
    "start": "2735160",
    "end": "2741819"
  },
  {
    "text": "or you can set up a consumer to do that as well to move it to Downstream so yeah",
    "start": "2741819",
    "end": "2746859"
  },
  {
    "text": "every every stream data pipeline is going to involve some of these steps and I just showed you exactly how to do that",
    "start": "2746859",
    "end": "2752380"
  },
  {
    "text": "so keep that in mind the next time you want to get started with one of these and if you are looking to to get started",
    "start": "2752380",
    "end": "2759700"
  },
  {
    "text": "in a couple you know right afterwards I hope so a couple resources to to kick that off for you on the left here we",
    "start": "2759700",
    "end": "2766839"
  },
  {
    "text": "have our confluent developer resources we have a ton of free courses there that",
    "start": "2766839",
    "end": "2773260"
  },
  {
    "text": "walk you through pretty pretty good demos um on like Kafka 101 you know what what",
    "start": "2773260",
    "end": "2778420"
  },
  {
    "text": "is it how do you play around with it um k-sql caucus dreams Kafka connect all",
    "start": "2778420",
    "end": "2784060"
  },
  {
    "text": "of them data mesh if you're feeling wild we've got a data mesh demo so all those are available for you to check out and",
    "start": "2784060",
    "end": "2790000"
  },
  {
    "text": "then on the right if you're interested in digging into the source code for in the configurations and scripts for my project I welcome you to do so",
    "start": "2790000",
    "end": "2797319"
  },
  {
    "text": "and that is all that I had for you today so I'll open it up now for some questions",
    "start": "2797319",
    "end": "2803780"
  },
  {
    "text": "[Music]",
    "start": "2803780",
    "end": "2806959"
  },
  {
    "text": "here practicing these things out with or what's the cost of actually doing you",
    "start": "2810240",
    "end": "2816460"
  },
  {
    "text": "know yeah so when you start up with those um and you create a new account you",
    "start": "2816460",
    "end": "2822579"
  },
  {
    "text": "automatically get I don't know it's a couple months of free usage to begin with and then on top of that for each",
    "start": "2822579",
    "end": "2827980"
  },
  {
    "text": "course that you take we give you another promo code that you can get like a hundred dollars of free usage on top of that so",
    "start": "2827980",
    "end": "2834040"
  },
  {
    "text": "um I think if you're just walking through all of those the sort of Hello World stuff or if you want to just build a POC you have more than enough free",
    "start": "2834040",
    "end": "2840099"
  },
  {
    "text": "usage thrown around to to make it work yeah yeah have you tried using it",
    "start": "2840099",
    "end": "2849000"
  },
  {
    "text": "I did not um that's something I want to do I'm in the process of moving and I'm like cool",
    "start": "2850900",
    "end": "2856900"
  },
  {
    "text": "what can I set up that's permanent in the house right um but no the sensors that I have they",
    "start": "2856900",
    "end": "2862720"
  },
  {
    "text": "are not rated for outdoor use I even get worried watering them because like it's I don't believe that the top of it's",
    "start": "2862720",
    "end": "2868480"
  },
  {
    "text": "coated with the actual components um so I'm very very wary of that but that",
    "start": "2868480",
    "end": "2875020"
  },
  {
    "text": "was one of the things that came up that I um I'm working with a a local",
    "start": "2875020",
    "end": "2880119"
  },
  {
    "text": "non-profit Farm to see if we can set up more iot stuff throughout there they have a couple late it's a really small",
    "start": "2880119",
    "end": "2885940"
  },
  {
    "text": "farm they have a couple acres though um to see if I can you know build something a little more robust that can hang out on their property but so watch",
    "start": "2885940",
    "end": "2894220"
  },
  {
    "text": "out for the next iteration",
    "start": "2894220",
    "end": "2897180"
  },
  {
    "text": "um I did consider that that came up a couple times they're certainly cheaper",
    "start": "2903880",
    "end": "2909040"
  },
  {
    "text": "um it was really just a selfish thing I wanted a Raspberry Pi and this was something I could expense so",
    "start": "2909040",
    "end": "2915400"
  },
  {
    "text": "so I got the Raspberry Pi and I'm also building out a couple I just love the Plug and Play components it's just and",
    "start": "2915400",
    "end": "2922119"
  },
  {
    "text": "all the the tutorials that are available I think I got it all in Adafruit um yeah so I have like a whole slew of",
    "start": "2922119",
    "end": "2929380"
  },
  {
    "text": "projects that I'm going to be building with the Raspberry Pi moving forward but yeah that that keeps coming up so we'll see we'll see if another I think",
    "start": "2929380",
    "end": "2936700"
  },
  {
    "text": "um I think if you ask my colleague Chris Jenkins he'll be speaking at the end of the week um I think he has some stuff in mind for",
    "start": "2936700",
    "end": "2941920"
  },
  {
    "text": "for that trip",
    "start": "2941920",
    "end": "2944700"
  },
  {
    "text": "[Music] they're just so dramatic I don't know",
    "start": "2947430",
    "end": "2953980"
  },
  {
    "text": "why they are that way it's like it's sometimes I see it and it's wilted I'm like just shut up you know it's like",
    "start": "2953980",
    "end": "2959980"
  },
  {
    "text": "you're being so dramatic the rest of the plants aren't like that I don't think I've ever seen a plant as wealthy as",
    "start": "2959980",
    "end": "2965140"
  },
  {
    "text": "that like you just look at them wrong and they will but thank you for asking",
    "start": "2965140",
    "end": "2971740"
  },
  {
    "text": "um",
    "start": "2971740",
    "end": "2973740"
  },
  {
    "text": "yes hosted wherever it's you when you set up your cluster you choose what cloud provider you want to use so yeah",
    "start": "2986500",
    "end": "2991900"
  },
  {
    "text": "it's run outside of the cluster the Kafka cluster sort of alongside it but",
    "start": "2991900",
    "end": "2998980"
  },
  {
    "text": "um yeah when you set up a single DB application it kind of sets up its own",
    "start": "2998980",
    "end": "3004560"
  },
  {
    "text": "little cluster depending on how many instances you want and what um you know what sort of processing power you want behind it as well but",
    "start": "3004560",
    "end": "3011280"
  },
  {
    "text": "yeah it is a separate thing but still hosted on whatever um you know cloud provider you want",
    "start": "3011280",
    "end": "3018440"
  },
  {
    "text": "anybody else and I will be here all week so I'm happy to chat really nerdy plant things",
    "start": "3021180",
    "end": "3027800"
  },
  {
    "text": "usually for every talk I give on this I like steal a plant oh I borrow a plant from",
    "start": "3027800",
    "end": "3033720"
  },
  {
    "text": "somewhere in the conference center there were there were some fake ones out there that was really but um yeah usually try to make it a",
    "start": "3033720",
    "end": "3041099"
  },
  {
    "text": "little bit more fun but happy to talk about plants Raspberry Pi Hardware next things I should do because I'm getting a",
    "start": "3041099",
    "end": "3046440"
  },
  {
    "text": "little bored and I'm thinking about you know what the what the next thing I should build should be and yeah of",
    "start": "3046440",
    "end": "3051540"
  },
  {
    "text": "course Kafka happy Kafka yeah",
    "start": "3051540",
    "end": "3056180"
  },
  {
    "text": "devices",
    "start": "3059160",
    "end": "3062160"
  },
  {
    "text": "um and then how would you it's obviously you've got the MPS",
    "start": "3068520",
    "end": "3073880"
  },
  {
    "text": "have you ever looked at how you use the two together yeah so mqtt that did come",
    "start": "3073880",
    "end": "3079800"
  },
  {
    "text": "up I wanted to just use all um I wanted to be able to show a case the producer API as well",
    "start": "3079800",
    "end": "3086579"
  },
  {
    "text": "um so settled on that and already had a pretty quick script already written to do that",
    "start": "3086579",
    "end": "3091680"
  },
  {
    "text": "um but if you did want to go that route there is a connector to pull information from mqtt and move it into Kafka so the",
    "start": "3091680",
    "end": "3099359"
  },
  {
    "text": "thing about doing any sort of processing with Kafka streams or kco DB your",
    "start": "3099359",
    "end": "3105300"
  },
  {
    "text": "information needs to be in Kafka for you to do that as soon as you start if you're using like a Kafka streams",
    "start": "3105300",
    "end": "3111540"
  },
  {
    "text": "application as soon as you start making external data calls you just ruin it right you want all the data to be in",
    "start": "3111540",
    "end": "3117059"
  },
  {
    "text": "Kafka already to quickly do joins to quickly aggregate so in that case even if you had the information",
    "start": "3117059",
    "end": "3123800"
  },
  {
    "text": "you would just want to use a connector to pull that into Kafka first and then and then do it but yeah if you did go",
    "start": "3123800",
    "end": "3129780"
  },
  {
    "text": "that route there's a solution",
    "start": "3129780",
    "end": "3133818"
  },
  {
    "text": "all right anyone else I feel like every time I say anyone else like no but then another",
    "start": "3136980",
    "end": "3142260"
  },
  {
    "text": "cool all right thank you so much I really appreciate it and I'll catch you all at the rest of the conference thank you thanks",
    "start": "3142260",
    "end": "3147880"
  },
  {
    "text": "[Applause]",
    "start": "3147880",
    "end": "3151389"
  }
]