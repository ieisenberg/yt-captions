[
  {
    "text": "so good morning everyone so you're the lucky survivors of yesterday night you made it um just in time for a",
    "start": "5560",
    "end": "13920"
  },
  {
    "text": "lot of code in the morning so uh hi my name is Martin and welcome to my session on uh improving",
    "start": "13920",
    "end": "21400"
  },
  {
    "text": "your net applications to make them smaller faster um and better suited for the things you may deploy to like Cloud",
    "start": "21400",
    "end": "28240"
  },
  {
    "text": "environments um I'm actually from Austria although I work for a Nordic company T which is based in Finland um",
    "start": "28240",
    "end": "35879"
  },
  {
    "text": "but I always like to say we're a small G Village in Austria and I want to do a few things",
    "start": "35879",
    "end": "41280"
  },
  {
    "text": "with you today I want to go through couple of the things that matter to me like why do I want to optimize certain",
    "start": "41280",
    "end": "47399"
  },
  {
    "text": "things but really I want to show you some fancy Demos in net uh like I want to really show you how to get a web API",
    "start": "47399",
    "end": "52920"
  },
  {
    "text": "to couple of megabytes in size um and easy to deploy and I'm going to",
    "start": "52920",
    "end": "59480"
  },
  {
    "text": "hopefully give give you some practical recommendations even if you're maybe not already on theet 8 preview I want to",
    "start": "59480",
    "end": "65280"
  },
  {
    "text": "show you something that can speed up your application by like 10 to 20% but today in Net 7 with just one",
    "start": "65280",
    "end": "74880"
  },
  {
    "text": "change so what do I like to optimize um or what can we optimize so I think um",
    "start": "74880",
    "end": "80720"
  },
  {
    "text": "the most of you will be familiar with optimizing throughput that is like how much work can you do per",
    "start": "80720",
    "end": "86159"
  },
  {
    "text": "CPU amount like what do you get for your money uh make things faster make things uh",
    "start": "86159",
    "end": "93000"
  },
  {
    "text": "consume less resources uh and also memory usage so uh we like to have small",
    "start": "93000",
    "end": "98920"
  },
  {
    "text": "containers maybe small memory footprint or deploy a lot of things side by side and for these both throughput and memory",
    "start": "98920",
    "end": "105920"
  },
  {
    "text": "really uh make a difference but also in Cloud work clouds",
    "start": "105920",
    "end": "111240"
  },
  {
    "text": "um startup is quite important like how much how much time how much CPU do I need to get from zero to handling the",
    "start": "111240",
    "end": "117920"
  },
  {
    "text": "first actual user request and also um when deploying things it really matters how big the application",
    "start": "117920",
    "end": "124079"
  },
  {
    "text": "is so uh if I want to deploy something uh or start up an instance in Azure or",
    "start": "124079",
    "end": "129959"
  },
  {
    "text": "any any cloud and it has to download a 300 megabyte container image like that might be fast than Cloud",
    "start": "129959",
    "end": "136040"
  },
  {
    "text": "but maybe if you want to do it on premise somewhere in a factory like in a remote area that might not be the best",
    "start": "136040",
    "end": "142800"
  },
  {
    "text": "idea so these are the things to keep in mind so what I'm usually faced with is",
    "start": "142800",
    "end": "149120"
  },
  {
    "text": "the do we throw more money at the cloud or at the developers like do you pay for more CPU or do we pay for more uh",
    "start": "149120",
    "end": "156319"
  },
  {
    "text": "application Improvement and these development improvements they can be hard so um I see a lot of people just",
    "start": "156319",
    "end": "165599"
  },
  {
    "text": "say okay let's let's just buy the higher tier in Azure we'll be fine but some of these optimizations",
    "start": "165599",
    "end": "172280"
  },
  {
    "text": "really really matter and some of them are easy some of them are hard so whenever I'm increasing my throughput",
    "start": "172280",
    "end": "178000"
  },
  {
    "text": "I'm actually lowering my My Cloud bill so being able to do more per CPU I",
    "start": "178000",
    "end": "184400"
  },
  {
    "text": "can just maybe turn off a few servers turn off uh a few kubernetes uh",
    "start": "184400",
    "end": "189680"
  },
  {
    "text": "nodes uh especially for S applications they may not spit spin up as many instances so that might be just",
    "start": "189680",
    "end": "198040"
  },
  {
    "text": "cheaper and then again um if I used to net um how much startup time do you need",
    "start": "198040",
    "end": "205319"
  },
  {
    "text": "for cold starts like does it slow down my users is it impact from from us",
    "start": "205319",
    "end": "210680"
  },
  {
    "text": "experience um or um do I hit uned path so I deploy my",
    "start": "210680",
    "end": "216680"
  },
  {
    "text": "application it runs and then someone says to my application that returns data and now make a PDF report out of that",
    "start": "216680",
    "end": "223640"
  },
  {
    "text": "and then he suddenly he uh jits like Graphics libraries layout libraries PDF",
    "start": "223640",
    "end": "229080"
  },
  {
    "text": "libraries and that might just take a bit so I like to run things in",
    "start": "229080",
    "end": "235040"
  },
  {
    "text": "kubernetes so as I mentioned container size really matters ESP especially when",
    "start": "235040",
    "end": "240079"
  },
  {
    "text": "deploying to on premise environments and hybrid environments uh things like deploying on the edge um that's really",
    "start": "240079",
    "end": "248079"
  },
  {
    "text": "where these these size cons considerations come in but I also like",
    "start": "248079",
    "end": "253280"
  },
  {
    "text": "to have test environments with lots of instances running side by side or also",
    "start": "253280",
    "end": "258400"
  },
  {
    "text": "maybe jobs that run with low CPU so maybe I want to be able to run efficiently on maybe a quarter of a CPU",
    "start": "258400",
    "end": "265160"
  },
  {
    "text": "cord like 250 M CPU because that's might might be enough to make some database calls do all the regular",
    "start": "265160",
    "end": "271840"
  },
  {
    "text": "things but then maybe can I do the actual jitting the startup with that",
    "start": "271840",
    "end": "277960"
  },
  {
    "text": "amount of CPU so if I have for example a crown job",
    "start": "277960",
    "end": "283720"
  },
  {
    "text": "because my platform comes with aular I might as well use it like it's not the ideal solution for everything but maybe",
    "start": "283720",
    "end": "290680"
  },
  {
    "text": "if I want to do something twice an hour or twice a day perfect way to do it and",
    "start": "290680",
    "end": "295960"
  },
  {
    "text": "then if it apply something with maybe 100 mpu 200 mpus I might be stuck with like 30 seconds of just uh startup time",
    "start": "295960",
    "end": "303960"
  },
  {
    "text": "which I have to pay for I have to account for um maybe there's some ways to improve",
    "start": "303960",
    "end": "309600"
  },
  {
    "text": "that and also CPU limits like in kubernetes you said basically a",
    "start": "309600",
    "end": "316440"
  },
  {
    "text": "request it's used for scheduling the things on where you have CPU left those",
    "start": "316440",
    "end": "322319"
  },
  {
    "text": "are limits and it really depends on which blog post you read to get a different recommendation on what to do",
    "start": "322319",
    "end": "328360"
  },
  {
    "text": "so there's no real good answer but yeah I can set No Limits like my startup time",
    "start": "328360",
    "end": "334120"
  },
  {
    "text": "is going to be fine I'm going to run good until something happens and I just dos the node like if you if you use on",
    "start": "334120",
    "end": "341600"
  },
  {
    "text": "premise things and you maybe did not read the full quinis manual which says hey these are our defaults and by the",
    "start": "341600",
    "end": "348400"
  },
  {
    "text": "way they are bad because then you might actually make uh crash a whole",
    "start": "348400",
    "end": "354120"
  },
  {
    "text": "cluster so that can go wrong if you Center limits too high you might compete",
    "start": "354120",
    "end": "359639"
  },
  {
    "text": "with other things running and if it's at low limits that might be fine for a lot",
    "start": "359639",
    "end": "364800"
  },
  {
    "text": "of applications but if you run it. net and you want to try to jit your whole application on 100 Bill CPU that's going",
    "start": "364800",
    "end": "372160"
  },
  {
    "text": "to take a while so your startup time is going to be really",
    "start": "372160",
    "end": "378080"
  },
  {
    "text": "CP so um optimizing for through with the memory usage I'm not going to go to",
    "start": "378080",
    "end": "383720"
  },
  {
    "text": "detail on that I'm just saying garbage in garbage out if you write crappy code runtime can't fix",
    "start": "383720",
    "end": "390039"
  },
  {
    "text": "it uh however some code looks interesting but it's actually faster but",
    "start": "390039",
    "end": "396240"
  },
  {
    "text": "uh in any case profiling profiling profiling benchmarks benchmarks benchmarks like I can't repeat myself",
    "start": "396240",
    "end": "402080"
  },
  {
    "text": "enough on that also there's some new apis new framework apis spam based API",
    "start": "402080",
    "end": "407440"
  },
  {
    "text": "for everything that's like parsing uh working with strings and other formats",
    "start": "407440",
    "end": "412560"
  },
  {
    "text": "also value task if you're doing things that are mostly non-async might improve things down the line and if you really",
    "start": "412560",
    "end": "419240"
  },
  {
    "text": "want want to get into the nigr details you can also use Hardware acceleration like single instru multiple data there's",
    "start": "419240",
    "end": "426879"
  },
  {
    "text": "some uh managed apis on top of that like vector of T um I'm going to actually show you",
    "start": "426879",
    "end": "434000"
  },
  {
    "text": "later a sample that really makes use of some Hardware calls directly um but",
    "start": "434000",
    "end": "440080"
  },
  {
    "text": "maybe it don't do that to begin with so what I really want to focus is like what",
    "start": "440080",
    "end": "445560"
  },
  {
    "text": "other things can I do I think the one is always stay on the",
    "start": "445560",
    "end": "451039"
  },
  {
    "text": "latest net like every version of net is just so much better than the last version I think net 8 is going to be",
    "start": "451039",
    "end": "457560"
  },
  {
    "text": "probably the most amazing one in the last two three years so I'm very excited for that but of course you improve your",
    "start": "457560",
    "end": "465000"
  },
  {
    "text": "benefit for all the improvements that are actually made directly in the BCL directly in the in the library so uh",
    "start": "465000",
    "end": "471400"
  },
  {
    "text": "they introduced span they introduced har TR6 and then a lot of the string apis or any other apis that you use uh were",
    "start": "471400",
    "end": "478520"
  },
  {
    "text": "Rewritten onp top of that and they just faster out of the box you just need to update also you get a lot of new code",
    "start": "478520",
    "end": "486360"
  },
  {
    "text": "generation features um like if you use Json calization there's a lot of",
    "start": "486360",
    "end": "492120"
  },
  {
    "text": "reflection on Startup uh if you use the source generator um you can actually get",
    "start": "492120",
    "end": "497960"
  },
  {
    "text": "rid of that reflection on Startup or reflection on first civilization also now inet 8 is going to",
    "start": "497960",
    "end": "504080"
  },
  {
    "text": "be in configuration bind the generator so you have this scenario where you have like your app settings B is loaded into",
    "start": "504080",
    "end": "510240"
  },
  {
    "text": "the options framework and then you say hey I have this type configuration object uh please set that up based on",
    "start": "510240",
    "end": "516919"
  },
  {
    "text": "that configuration section like that's a lot of reflection to do on Startup there's now configur there's now Source",
    "start": "516919",
    "end": "523120"
  },
  {
    "text": "generator to do that so that's going to get rid of the reflection during",
    "start": "523120",
    "end": "528600"
  },
  {
    "text": "startup and of course this random improvements every release uh since doed",
    "start": "528600",
    "end": "533720"
  },
  {
    "text": "three we actually had tiered compilation I'm going to talk about that in a bit also profile guided optimization um",
    "start": "533720",
    "end": "541760"
  },
  {
    "text": "something you will get out of the box without an eight but it's already been there and I'll show you how to use it",
    "start": "541760",
    "end": "548640"
  },
  {
    "text": "already some other runtime settings exist um you might not need to touch",
    "start": "548640",
    "end": "554920"
  },
  {
    "text": "these anymore um since net over the last years um on every release they improved",
    "start": "554920",
    "end": "560519"
  },
  {
    "text": "working in containers so there were some GC settings you could play with to to maybe nud it in a bit a better Direction",
    "start": "560519",
    "end": "569680"
  },
  {
    "text": "um but that's no longer necessary but if you want you can adjust your threading settings if you have an application that",
    "start": "569680",
    "end": "576360"
  },
  {
    "text": "scandles a lot of work items um that are mostly blocking maybe you want to change some of the defaults or your",
    "start": "576360",
    "end": "584480"
  },
  {
    "text": "code but I think what's something really interesting because I was talking about jitting a lot of time you can actually",
    "start": "584480",
    "end": "590040"
  },
  {
    "text": "preit a lot of the code uh that you will be running so it doesn't have to be done on application",
    "start": "590040",
    "end": "595600"
  },
  {
    "text": "startup um this has been inet framework for a while um like even in the don't it framework",
    "start": "595600",
    "end": "602880"
  },
  {
    "text": "framework years ago it was called native image generation",
    "start": "602880",
    "end": "608279"
  },
  {
    "text": "engine now there's a new format it's called the ready to run format so you can say I'm want I'm going to run on",
    "start": "608279",
    "end": "615959"
  },
  {
    "text": "Linux 64-bit please prepare the application for the Target architecture generate all",
    "start": "615959",
    "end": "622360"
  },
  {
    "text": "the all the native assembly code and put it into the dll so I ship my application",
    "start": "622360",
    "end": "628600"
  },
  {
    "text": "and if it runs on Linux in 64 bit it will just use the pregenerated code the",
    "start": "628600",
    "end": "634440"
  },
  {
    "text": "application is still going to be portable so if I run it on Windows it will still work it will just regit the",
    "start": "634440",
    "end": "640000"
  },
  {
    "text": "code because you're shipping um the IL the Intermediate Language and the pregenerated code in one assembly so um",
    "start": "640000",
    "end": "649399"
  },
  {
    "text": "that's actually quite easy to turn on if you publish for a specific runtime or the one you're currently building on in",
    "start": "649399",
    "end": "655399"
  },
  {
    "text": "in Net 7 and8 just say publish ready to run through and it does that for you just one one",
    "start": "655399",
    "end": "663920"
  },
  {
    "text": "little setting there's some other things you can play around especially if you're",
    "start": "663920",
    "end": "669079"
  },
  {
    "text": "shipping self-contained uh applications to Linux you can also say hey those are",
    "start": "669079",
    "end": "674600"
  },
  {
    "text": "a lot of the DLS that are in the same directories if you want to do inlining and other optimizations just do it",
    "start": "674600",
    "end": "681800"
  },
  {
    "text": "because um you say I'm going to distribute these like as a whole all at",
    "start": "681800",
    "end": "687279"
  },
  {
    "text": "the same time I'm not going to put them apart to replace some because that would break it so there's also an option to do",
    "start": "687279",
    "end": "693320"
  },
  {
    "text": "that using publish reditor on composite so cross theem",
    "start": "693320",
    "end": "699760"
  },
  {
    "text": "optimization um it does take quite a lot longer to compile because it does a lot",
    "start": "699760",
    "end": "704880"
  },
  {
    "text": "of optimizations um and it increases the binary size but also publish R run already does",
    "start": "704880",
    "end": "712480"
  },
  {
    "text": "it because then you're shipping your code plus the already Jed code application is going to be larger that's",
    "start": "712480",
    "end": "718279"
  },
  {
    "text": "the trade-off but the startup time is going to improve and speaking of chitting another",
    "start": "718279",
    "end": "726360"
  },
  {
    "text": "feature Inn net that's been there for years here",
    "start": "726360",
    "end": "732160"
  },
  {
    "text": "compilation so that's also startup time Improvement so the chit is going to",
    "start": "732160",
    "end": "739040"
  },
  {
    "text": "start up um and just generate very very naive code so it doesn't run a lot of",
    "start": "739040",
    "end": "746600"
  },
  {
    "text": "the optimizations that it can do um it just make sure that your application will run this is perfect for some",
    "start": "746600",
    "end": "753680"
  },
  {
    "text": "console applications we just want to like type do and something help like",
    "start": "753680",
    "end": "759279"
  },
  {
    "text": "it's just jitted um very quickly it runs and that's it but if you then run for a bit so like",
    "start": "759279",
    "end": "766880"
  },
  {
    "text": "in Ser applications or or applications that do some work um this code this t zero code",
    "start": "766880",
    "end": "775360"
  },
  {
    "text": "actually has some instrumentations in it so it does some call counting behind the scenes and it tries to figure out like",
    "start": "775360",
    "end": "781199"
  },
  {
    "text": "what are the hot paths and then the chit realizes yeah I mean this function is called quite a lot I should maybe look",
    "start": "781199",
    "end": "788040"
  },
  {
    "text": "into that and then it generates tier one code for for these code paths and does",
    "start": "788040",
    "end": "793680"
  },
  {
    "text": "more optimization so it spends more CPU to optimize the code that you actually run and maybe not the like wiring up and",
    "start": "793680",
    "end": "801920"
  },
  {
    "text": "startup code that maybe just runs once during during application startup and that's on by default start",
    "start": "801920",
    "end": "809199"
  },
  {
    "text": "with three you can still tweak it a bit you can enable disable it also it tries to",
    "start": "809199",
    "end": "817040"
  },
  {
    "text": "look at into methods that have loops because Loops are very inefficient so it",
    "start": "817040",
    "end": "822560"
  },
  {
    "text": "says okay it has a loop I should maybe spend more time with that however in do six and later they",
    "start": "822560",
    "end": "830639"
  },
  {
    "text": "actually improved on that and that goes into a concept that's called profile guided",
    "start": "830639",
    "end": "837759"
  },
  {
    "text": "optimization the idea is you deploy an application and then you measure how it",
    "start": "837759",
    "end": "843720"
  },
  {
    "text": "actually runs and this measuring means which code blocks are executed like if I have an if",
    "start": "843720",
    "end": "850320"
  },
  {
    "text": "what is the likely execution path if I have an method that gets past only interfaces what are the actual types",
    "start": "850320",
    "end": "857240"
  },
  {
    "text": "that come into that method and based on that I can then optimize the generated",
    "start": "857240",
    "end": "862639"
  },
  {
    "text": "code for what I actually need in production and that can be a really",
    "start": "862639",
    "end": "868160"
  },
  {
    "text": "really a lot quicker and this has been done for decades for examples of",
    "start": "868160",
    "end": "875160"
  },
  {
    "text": "C++ um and the way you would do this is static PTO which means you do it while",
    "start": "875160",
    "end": "882040"
  },
  {
    "text": "you build your application once and then it's done so really your collector",
    "start": "882040",
    "end": "887120"
  },
  {
    "text": "traces we running the application however you're going to do that then based on these traces you",
    "start": "887120",
    "end": "894040"
  },
  {
    "text": "would generate the performance data like really calculate the statistics per Branch all these things and then you",
    "start": "894040",
    "end": "901600"
  },
  {
    "text": "would recompile your application uh with that PJ information for example that's",
    "start": "901600",
    "end": "907920"
  },
  {
    "text": "how Windows is built and I think also the visual studi",
    "start": "907920",
    "end": "913040"
  },
  {
    "text": "optimized this way part of the things that you do and you know this is perfect for like being",
    "start": "913040",
    "end": "919839"
  },
  {
    "text": "ready for the first request for the first startup um it's just going to be there when you run and it's also very",
    "start": "919839",
    "end": "925800"
  },
  {
    "text": "good to combine with other ahead of time compilation techniques um so if doing like publish ready to run",
    "start": "925800",
    "end": "932079"
  },
  {
    "text": "uh which is done by this cross do tool or if you look into native aot um this",
    "start": "932079",
    "end": "937360"
  },
  {
    "text": "is the thing you might want to be doing however like it's really hard to",
    "start": "937360",
    "end": "942600"
  },
  {
    "text": "obtain these traces like you need to do it in production you need to attach you need to capture logs and then you need to",
    "start": "942600",
    "end": "950199"
  },
  {
    "text": "keep it in sync with your actual application and now if you really deploy multiple times a day like how you going",
    "start": "950199",
    "end": "955839"
  },
  {
    "text": "to do that like that's really really difficult to do and now that's the benefit of having an",
    "start": "955839",
    "end": "963120"
  },
  {
    "text": "actual um managed runtime and a jiter is you can do it actually",
    "start": "963120",
    "end": "968680"
  },
  {
    "text": "dynamically so what net can do is it can make use of the tier",
    "start": "968680",
    "end": "974639"
  },
  {
    "text": "compilation so um I mentioned tier zero already has some call counting um in it",
    "start": "974639",
    "end": "982720"
  },
  {
    "text": "but they have added additional probes to see like do these collections like what code gets EX exed what types what actual",
    "start": "982720",
    "end": "991319"
  },
  {
    "text": "concrete types are getting passed into methods and then when this tier one reiting happens like it already does",
    "start": "991319",
    "end": "998839"
  },
  {
    "text": "these optimizations using that pgo data so again your code might not be",
    "start": "998839",
    "end": "1004040"
  },
  {
    "text": "fast to begin with um there is a small overhead because there are like additional instrumentation calls like",
    "start": "1004040",
    "end": "1011880"
  },
  {
    "text": "put into your code however like you're working with the data that the application runs with",
    "start": "1011880",
    "end": "1017199"
  },
  {
    "text": "like there's no need to go back and forth um and you can just turn it on it's going to be on by default in net8",
    "start": "1017199",
    "end": "1025280"
  },
  {
    "text": "but you can still turn it on foret 6 and 7 so if you're running an application in Net 7 you can go home today set this in",
    "start": "1025280",
    "end": "1032520"
  },
  {
    "text": "your project file and according to the to the um analysis that the has has done",
    "start": "1032520",
    "end": "1039199"
  },
  {
    "text": "your application should be somewhere in like 10 to 15% faster like if there's one thing you're",
    "start": "1039199",
    "end": "1045319"
  },
  {
    "text": "going to take away from this talk this and updated down. 8 when it's",
    "start": "1045319",
    "end": "1051120"
  },
  {
    "text": "out and I actually want to show you how to do that and implications",
    "start": "1051120",
    "end": "1057520"
  },
  {
    "text": "so I have prepared a small sample",
    "start": "1057520",
    "end": "1062280"
  },
  {
    "text": "application that's really just looping a couple times uh and starts a workload",
    "start": "1066200",
    "end": "1073120"
  },
  {
    "text": "and the idea is I have an I factory that creates I things",
    "start": "1073120",
    "end": "1080400"
  },
  {
    "text": "that you can give treats until it feels happy and there's only two",
    "start": "1080440",
    "end": "1085880"
  },
  {
    "text": "implementations there's the factory and the think however the methods my workload is",
    "start": "1085880",
    "end": "1091480"
  },
  {
    "text": "being passed in I Factory and then always also only calls the interface method on like I think now if I run",
    "start": "1091480",
    "end": "1100679"
  },
  {
    "text": "that again not a benchmark it's just an application uh you will see it takes",
    "start": "1100679",
    "end": "1106799"
  },
  {
    "text": "quite a lot of time and that's because I've made a grave mistake I've tried to look at performance data in debug",
    "start": "1106799",
    "end": "1112480"
  },
  {
    "text": "mode so let's do that in release yeah that's about what I was",
    "start": "1112480",
    "end": "1120840"
  },
  {
    "text": "expecting so um that is actually A7",
    "start": "1120840",
    "end": "1127080"
  },
  {
    "text": "application now I could add this one flag but I'm already just going to change this toet",
    "start": "1127080",
    "end": "1134039"
  },
  {
    "text": "8 run it again",
    "start": "1134039",
    "end": "1140320"
  },
  {
    "text": "and observe it should be a little bit",
    "start": "1142039",
    "end": "1147799"
  },
  {
    "text": "faster yeah so you can see already the first iteration was better so like",
    "start": "1147799",
    "end": "1154360"
  },
  {
    "text": "apparently something inet 8 is already better than inet 7 um that's even if you",
    "start": "1154360",
    "end": "1159919"
  },
  {
    "text": "turn off um that that Dynamic pjo it still stays around like 240 milliseconds",
    "start": "1159919",
    "end": "1166520"
  },
  {
    "text": "and then you see the dynamic pgo kicking in CU what it does behind the scene is it",
    "start": "1166520",
    "end": "1172360"
  },
  {
    "text": "realizes um H these these uh Factory call that is",
    "start": "1172360",
    "end": "1180240"
  },
  {
    "text": "passed in it would try to do optimizations like",
    "start": "1180240",
    "end": "1185679"
  },
  {
    "text": "if Factory is Factory",
    "start": "1185799",
    "end": "1191000"
  },
  {
    "text": "concrete Factory then it would just call Factory",
    "start": "1191000",
    "end": "1196960"
  },
  {
    "text": "uh concrete Factory not create thing and then it does the direct method call instead of doing the virtual lookup for",
    "start": "1196960",
    "end": "1203320"
  },
  {
    "text": "the interface method it's called guarded D virtualization um and that would be the",
    "start": "1203320",
    "end": "1210159"
  },
  {
    "text": "code that the Jitter emits without you having to write it because you don't know what's get passed into your",
    "start": "1210159",
    "end": "1215440"
  },
  {
    "text": "interface call and actually how much of our code is having interfaces and then",
    "start": "1215440",
    "end": "1221400"
  },
  {
    "text": "really only running with one implementation like I I think we're all doing",
    "start": "1221400",
    "end": "1227159"
  },
  {
    "text": "that so that's very helpful to do now um if I was really trying to",
    "start": "1227159",
    "end": "1236760"
  },
  {
    "text": "optimize it for first time startup I would really try and make this go",
    "start": "1236760",
    "end": "1242960"
  },
  {
    "text": "away and speaking of the optimization I can already do something",
    "start": "1242960",
    "end": "1250360"
  },
  {
    "text": "like publish ready to run and and so on but let's just go into our net8",
    "start": "1250360",
    "end": "1258900"
  },
  {
    "text": "[Music] folder and now let's try to do a static",
    "start": "1258900",
    "end": "1266480"
  },
  {
    "text": "PJ because that also works in net and I can enable some of these",
    "start": "1266480",
    "end": "1271720"
  },
  {
    "text": "tracing features so I'm going to tell it hey I'm interested",
    "start": "1271720",
    "end": "1277960"
  },
  {
    "text": "in things that are documented put it into into a trace",
    "start": "1277960",
    "end": "1284159"
  },
  {
    "text": "file so if I run the optim oops",
    "start": "1284159",
    "end": "1290000"
  },
  {
    "text": "optimization demo okay I got a net Trace",
    "start": "1290000",
    "end": "1297080"
  },
  {
    "text": "file I'm just going to move this up a",
    "start": "1299279",
    "end": "1303960"
  },
  {
    "text": "bit and there is a a tool that theet runtime team built called net",
    "start": "1305600",
    "end": "1311840"
  },
  {
    "text": "pjo uh you need to actually uh install that from a nit feed of the of the net team um but it's a",
    "start": "1311840",
    "end": "1319679"
  },
  {
    "text": "global tool and it can help me with these Trace FES now I can do net",
    "start": "1319679",
    "end": "1325600"
  },
  {
    "text": "pjo perfect create Mi IBC so I can use this Trace file and",
    "start": "1325600",
    "end": "1332480"
  },
  {
    "text": "create an MI IC file so IBC is like instrumented block count and apparently the net team made",
    "start": "1332480",
    "end": "1339799"
  },
  {
    "text": "their own format and when they were asked like they were what should we call it um",
    "start": "1339799",
    "end": "1346159"
  },
  {
    "text": "mybc that's at least what the Run team told me so um I don't think they",
    "start": "1346159",
    "end": "1352279"
  },
  {
    "text": "documented what it stands for so I have this optimization data file I can actually look into what is in there is",
    "start": "1352279",
    "end": "1359679"
  },
  {
    "text": "in net pjo dump let's have a look at that Json",
    "start": "1359679",
    "end": "1367679"
  },
  {
    "text": "file so you see Edge count so it counts like things that go into it but here we",
    "start": "1367679",
    "end": "1372919"
  },
  {
    "text": "see uh a histogram now this is our workload method",
    "start": "1372919",
    "end": "1378799"
  },
  {
    "text": "and here it's it counts like what are the actual types that get passed into it and that's a concrete implementation",
    "start": "1378799",
    "end": "1384919"
  },
  {
    "text": "type for the interface that we pass in and it really it's only one but it records like the top things",
    "start": "1384919",
    "end": "1393480"
  },
  {
    "text": "that that uh go in and then I can also prepare the Jitter with that",
    "start": "1393480",
    "end": "1401200"
  },
  {
    "text": "data so the way to do this is I can tell it",
    "start": "1401200",
    "end": "1409200"
  },
  {
    "text": "publish ready to run use that PG file and now when I do a net",
    "start": "1409200",
    "end": "1416960"
  },
  {
    "text": "publish no selfcontained ready to run",
    "start": "1416960",
    "end": "1423520"
  },
  {
    "text": "through so I can see it's fast to begin with but",
    "start": "1433520",
    "end": "1440400"
  },
  {
    "text": "then there's something weird in there because at some point it figures out oh there's a hot",
    "start": "1440400",
    "end": "1447159"
  },
  {
    "text": "code path maybe I should Reit that then it somehow forgets that I already have",
    "start": "1447159",
    "end": "1452400"
  },
  {
    "text": "like PG data in there um however it then",
    "start": "1452400",
    "end": "1457559"
  },
  {
    "text": "figures out okay it should recompile it again using PG data and then it gets better there is a fix for this and it",
    "start": "1457559",
    "end": "1465919"
  },
  {
    "text": "behaves not differently in in newer net8 previous than before uh there's two",
    "start": "1465919",
    "end": "1471279"
  },
  {
    "text": "ways to fix that first of all I can actually embed that PJ data into the",
    "start": "1471279",
    "end": "1479880"
  },
  {
    "text": "assembly so I can publish ready to run cross Gen",
    "start": "1479880",
    "end": "1485760"
  },
  {
    "text": "2 is the tool I can pass it exra dat and said please embed the PTO data and then I need to do something bad",
    "start": "1485760",
    "end": "1493399"
  },
  {
    "text": "I need to disable tiered pjo",
    "start": "1493399",
    "end": "1499760"
  },
  {
    "text": "that's currently the way to do",
    "start": "1500080",
    "end": "1503440"
  },
  {
    "text": "this and it has to be both because um TI compilation will still kick in it would",
    "start": "1506960",
    "end": "1512200"
  },
  {
    "text": "still try to recompile application but then instead using the PTO data that I",
    "start": "1512200",
    "end": "1517440"
  },
  {
    "text": "tried to collect at runtime which won't be there because my pregenerated code doesn't have these probes um then the",
    "start": "1517440",
    "end": "1523960"
  },
  {
    "text": "tier compilation will reuse the performance data that I embedded into the assembly so I've published that",
    "start": "1523960",
    "end": "1531039"
  },
  {
    "text": "again and if I'm not mistaken we should not be fast on the first request like on the first iteration and then throughout",
    "start": "1531039",
    "end": "1538200"
  },
  {
    "text": "the entire lifetime of duplication so something we can",
    "start": "1538200",
    "end": "1543279"
  },
  {
    "text": "do uh however if you're not want to do all of these um just enable Dynamic pgo",
    "start": "1543279",
    "end": "1550840"
  },
  {
    "text": "inet 7 and then update to8 when it's out that's that's really what you should",
    "start": "1550840",
    "end": "1556279"
  },
  {
    "text": "take away but I think that's a really really cool things that the dotted random team is doing and of course I",
    "start": "1556279",
    "end": "1564000"
  },
  {
    "text": "like to play with stuff that's",
    "start": "1564000",
    "end": "1567720"
  },
  {
    "text": "cool okay um from let's go to application",
    "start": "1570399",
    "end": "1578840"
  },
  {
    "text": "size um there is a feature in net that's called trimming there's been couple of",
    "start": "1578840",
    "end": "1584320"
  },
  {
    "text": "iterations of that the latest one using a trimmer this actually comes from mono from the mono team the idea is to reduce",
    "start": "1584320",
    "end": "1591799"
  },
  {
    "text": "the size of self-contained apps so you you Shipe your application together with the runtime and then you really try to",
    "start": "1591799",
    "end": "1598320"
  },
  {
    "text": "as aggressively as possible remove all the things that are not needed so it removes all the assemblers that are not",
    "start": "1598320",
    "end": "1603720"
  },
  {
    "text": "used but also the code paths that are not used so you will lose any types that are not accessed any method that is not",
    "start": "1603720",
    "end": "1609960"
  },
  {
    "text": "accessed uh every every property that is not accessed um is basically tree",
    "start": "1609960",
    "end": "1616039"
  },
  {
    "text": "shaking so it's it's based on some roots that you can describe some root",
    "start": "1616039",
    "end": "1621799"
  },
  {
    "text": "assemblies you can also pass it some XML to tell it what to keep then it will shake your application everything that's",
    "start": "1621799",
    "end": "1627640"
  },
  {
    "text": "not connected to the roots is going to go away and now all assemblies are trimmed by defaults they again I",
    "start": "1627640",
    "end": "1633640"
  },
  {
    "text": "mentioned there have been some iterations of that where you could uh control some you can opt in some opt out",
    "start": "1633640",
    "end": "1640240"
  },
  {
    "text": "some now everything is print by default and quite aggressively there are some limitations",
    "start": "1640240",
    "end": "1646360"
  },
  {
    "text": "to that and um of course Dynamic code can be problematic like if it's if it went away",
    "start": "1646360",
    "end": "1653120"
  },
  {
    "text": "it's you're no no longer going to be able to use reflection to find it or to call members of it uh com is also a bit",
    "start": "1653120",
    "end": "1660000"
  },
  {
    "text": "difficult um there are new ways of doing Comm in.net using com",
    "start": "1660000",
    "end": "1665320"
  },
  {
    "text": "rappers um but not everything has been fully converted to used and for example Wind forms uses come quite extensively",
    "start": "1665320",
    "end": "1673039"
  },
  {
    "text": "and hasn't been fully converted to to com rappers in net seven I think there's",
    "start": "1673039",
    "end": "1678320"
  },
  {
    "text": "some more in doet 8 um however I don't think they're promising that doet 88 will work for all the scenarios that use",
    "start": "1678320",
    "end": "1684559"
  },
  {
    "text": "streaming for example native aot and of course WPF I think they looked into it said yeah it's like it",
    "start": "1684559",
    "end": "1693559"
  },
  {
    "text": "WPF is actually a reflection with a user interface so that's going to be hard to",
    "start": "1693559",
    "end": "1698919"
  },
  {
    "text": "do and if you're writing your own code um maybe be careful if you're using",
    "start": "1698919",
    "end": "1706240"
  },
  {
    "text": "serializers the mostly use reflection for example to invoke Setters of things",
    "start": "1706240",
    "end": "1711600"
  },
  {
    "text": "like if all the constructors and your your Setters of your data objects are gone you're going to have a hard time so",
    "start": "1711600",
    "end": "1718519"
  },
  {
    "text": "use the source generation helpers like for system text Jason instead to make sure your applications are compatible",
    "start": "1718519",
    "end": "1724840"
  },
  {
    "text": "with trimming and of course Dynamic assembly loading if you have plugins it's going",
    "start": "1724840",
    "end": "1730360"
  },
  {
    "text": "to be a hard time but what what do you do to make sure your application might",
    "start": "1730360",
    "end": "1735559"
  },
  {
    "text": "behave better with trimming is is there's no attributes and if you read through like net uh release notes you",
    "start": "1735559",
    "end": "1742320"
  },
  {
    "text": "will see oh in net Z so more and more assembles like these things have been",
    "start": "1742320",
    "end": "1747559"
  },
  {
    "text": "properly attribute attributed to support trimming it's basically what these attributes are for so whenever you have",
    "start": "1747559",
    "end": "1754720"
  },
  {
    "text": "like a type like system. type you can tell it hey I'm going to dynamically access some members for example",
    "start": "1754720",
    "end": "1761679"
  },
  {
    "text": "Constructor properties instance or just all uh that you can say yeah keep it if",
    "start": "1761679",
    "end": "1766760"
  },
  {
    "text": "you select type off something in that place like keep all the members um also if you have methods that",
    "start": "1766760",
    "end": "1773840"
  },
  {
    "text": "really do not work with trimming you can say hey this requires unreferenced code just if someone uses that in",
    "start": "1773840",
    "end": "1779799"
  },
  {
    "text": "triming scenario emit a warning and you can suppress the warning",
    "start": "1779799",
    "end": "1784919"
  },
  {
    "text": "as well so also you can say hey this method it will dynamically use this type",
    "start": "1784919",
    "end": "1790480"
  },
  {
    "text": "so keep the other type around and of course all these messages that are done generated warnings errors you can",
    "start": "1790480",
    "end": "1796279"
  },
  {
    "text": "suppress them like the difference between suppress message and unconditional suppress message is like",
    "start": "1796279",
    "end": "1801760"
  },
  {
    "text": "unconditional it will end up in the assembly so that the Linker that process the assembly can actually see it so if",
    "start": "1801760",
    "end": "1809240"
  },
  {
    "text": "you have some libraries compony internal or you ship n packages you can already",
    "start": "1809240",
    "end": "1814559"
  },
  {
    "text": "uh enable These Warnings even if you're not using trimming it's a property you can set in your project",
    "start": "1814559",
    "end": "1820399"
  },
  {
    "text": "file annotate the code and of course documentation but I want to actually",
    "start": "1820399",
    "end": "1826320"
  },
  {
    "text": "show that to you",
    "start": "1826320",
    "end": "1829240"
  },
  {
    "text": "so let's go here um so I prepared the thing I told was difficult like plugins",
    "start": "1838480",
    "end": "1845799"
  },
  {
    "text": "plugins for me have a name and they can do something like plugin",
    "start": "1845799",
    "end": "1850919"
  },
  {
    "text": "a has plug-in a and it just writes a message B and C do the same and and then",
    "start": "1850919",
    "end": "1857480"
  },
  {
    "text": "have a plugin utility that knows how to create a plugin like maybe this is something",
    "start": "1857480",
    "end": "1863159"
  },
  {
    "text": "where you would have some other logic and it can find all plug-in names what it does it it tries to find types that",
    "start": "1863159",
    "end": "1870080"
  },
  {
    "text": "Implement I plugin instantiate them and call the name property and then I have my",
    "start": "1870080",
    "end": "1877279"
  },
  {
    "text": "application that just uses this iterates over it and just tells me which plugins",
    "start": "1877279",
    "end": "1884600"
  },
  {
    "text": "exist so I have ABC Now what",
    "start": "1886159",
    "end": "1893320"
  },
  {
    "text": "happens if",
    "start": "1893320",
    "end": "1896799"
  },
  {
    "text": "I actually let's do it single",
    "start": "1899760",
    "end": "1903760"
  },
  {
    "text": "file and enable trimming publish trimmed",
    "start": "1906440",
    "end": "1913720"
  },
  {
    "text": "true like I already get some warnings",
    "start": "1914240",
    "end": "1919158"
  },
  {
    "text": "I see my application is 12 megabytes in size that's quite a lot smaller than the",
    "start": "1927720",
    "end": "1934039"
  },
  {
    "text": "full runtime that would be like in the 70s to to 100 megabytes uh depending on which runtime you use but if I run my",
    "start": "1934039",
    "end": "1942279"
  },
  {
    "text": "sample application there are no plugins they're all",
    "start": "1942279",
    "end": "1948120"
  },
  {
    "text": "gone and how do I keep plugins well for example if I let's say I did something",
    "start": "1948120",
    "end": "1954360"
  },
  {
    "text": "with plug-in B so it knows it needs to keep the type around if I publish again",
    "start": "1954360",
    "end": "1959760"
  },
  {
    "text": "it would keep the",
    "start": "1959760",
    "end": "1962519"
  },
  {
    "text": "type but now there's an exception because there there is no Constructor",
    "start": "1969760",
    "end": "1975679"
  },
  {
    "text": "left because I didn't explicitly say new plug-in B so the Constructor is",
    "start": "1975679",
    "end": "1980799"
  },
  {
    "text": "gone and how do I fix that so one of them would be",
    "start": "1980799",
    "end": "1988720"
  },
  {
    "text": "annotating so I'm using this create plug-in method",
    "start": "1989279",
    "end": "1994320"
  },
  {
    "text": "here what I can do is I can say hey if someone calls create plugin then on the",
    "start": "1994320",
    "end": "1999480"
  },
  {
    "text": "type they pass in just keep everything because I'm going to dynamically access",
    "start": "1999480",
    "end": "2005679"
  },
  {
    "text": "everything so let's publish",
    "start": "2005679",
    "end": "2010200"
  },
  {
    "text": "again this might take a",
    "start": "2011320",
    "end": "2015039"
  },
  {
    "text": "while he and now plugin B survived completely but let's say",
    "start": "2017399",
    "end": "2024840"
  },
  {
    "text": "I do not want to do",
    "start": "2024840",
    "end": "2028960"
  },
  {
    "text": "that there are other ways to to get around it for example I can do",
    "start": "2031240",
    "end": "2038960"
  },
  {
    "text": "then I can declare what types I need I can also get rid of these messages would",
    "start": "2039639",
    "end": "2046200"
  },
  {
    "text": "say hey if someone calls that that uh method they should be know what they're doing or I'm working around things that",
    "start": "2046200",
    "end": "2053919"
  },
  {
    "text": "help the user do the right thing and not end up with a with an",
    "start": "2053919",
    "end": "2060000"
  },
  {
    "text": "error so two ways of of specifying the same thing Direct reference or referencing by string and then the",
    "start": "2062800",
    "end": "2070118"
  },
  {
    "text": "Linker should know to keep plugins A and B and they're still",
    "start": "2070119",
    "end": "2075358"
  },
  {
    "text": "working something else I could do is declare static Fields annotate them so",
    "start": "2075359",
    "end": "2081919"
  },
  {
    "text": "everything that has type and is annotated it will keep that around but maybe writing static Constructors that",
    "start": "2081919",
    "end": "2088520"
  },
  {
    "text": "keep lugging around weird thing to do so another thing I can",
    "start": "2088520",
    "end": "2094839"
  },
  {
    "text": "do is using trimmer XML definitions so it can there's an XML syntax that can",
    "start": "2095879",
    "end": "2103520"
  },
  {
    "text": "pass to the trimmer to say keep these things so I can specify the types I could even go down and specify",
    "start": "2103520",
    "end": "2109680"
  },
  {
    "text": "individual uh methods properties even fields to keep and it would try to",
    "start": "2109680",
    "end": "2115839"
  },
  {
    "text": "remove the other ones if they're not used in some other way so I can use this XML file as well and in my",
    "start": "2115839",
    "end": "2123000"
  },
  {
    "text": "application I can then say hey trimmer root assembly um include an assembly or",
    "start": "2123000",
    "end": "2129320"
  },
  {
    "text": "use that descriptor so this descriptor is now",
    "start": "2129320",
    "end": "2134680"
  },
  {
    "text": "telling to keep plugins ABC let's just make it a and",
    "start": "2134680",
    "end": "2140000"
  },
  {
    "text": "C to just see that there's a",
    "start": "2140000",
    "end": "2144280"
  },
  {
    "text": "difference",
    "start": "2155800",
    "end": "2158800"
  },
  {
    "text": "okay okay A and C and are there and that's a useful thing to do if you have",
    "start": "2163599",
    "end": "2168640"
  },
  {
    "text": "an application and say hey I need these things but if you're authoring your library like telling end users what to",
    "start": "2168640",
    "end": "2174640"
  },
  {
    "text": "put into their XML weird so you can do something different I can actually move this to the",
    "start": "2174640",
    "end": "2181680"
  },
  {
    "text": "library let's change it to uh uh",
    "start": "2184160",
    "end": "2189240"
  },
  {
    "text": "BNC and in my library um I can actually embed this",
    "start": "2189240",
    "end": "2196720"
  },
  {
    "text": "file as a resource uh with a specific name i l",
    "start": "2196720",
    "end": "2203440"
  },
  {
    "text": "link that's the Linker that's used to trim away everything that's not needed so I'm embedding this",
    "start": "2203440",
    "end": "2210480"
  },
  {
    "text": "file and then the Linker should see these things so if you're writing libraries like company internal libraries n packages",
    "start": "2210920",
    "end": "2217280"
  },
  {
    "text": "um those are easy ways to make sure that every user has the right or keeps the right things around if you cannot remove",
    "start": "2217280",
    "end": "2223240"
  },
  {
    "text": "all the reflection that you need to use so let's run it again perfect BNC are",
    "start": "2223240",
    "end": "2230599"
  },
  {
    "text": "still there now that is actually a",
    "start": "2230599",
    "end": "2237280"
  },
  {
    "text": "prerequisite for a very very cool feature that the net team has been working on for a long time there have",
    "start": "2237280",
    "end": "2243520"
  },
  {
    "text": "been experiments for it there have been iterations on it um if you used wwp you might actually",
    "start": "2243520",
    "end": "2250440"
  },
  {
    "text": "already have to had to have dealt with some of these implications but native aot Native ahead of time compilation",
    "start": "2250440",
    "end": "2258160"
  },
  {
    "text": "like I really want to get rid of all theit forever and reduce the application",
    "start": "2258160",
    "end": "2264079"
  },
  {
    "text": "file size to the absolute minimum so my application will be fully ahead of time",
    "start": "2264079",
    "end": "2269599"
  },
  {
    "text": "compiled um funn enough that's exactly also what you would need in iOS where you cannot do um any any chit",
    "start": "2269599",
    "end": "2277280"
  },
  {
    "text": "compilation like you need to sign the executable that is run if you have these",
    "start": "2277280",
    "end": "2282480"
  },
  {
    "text": "scenarios aot comes really in handy so there's no jitted runtime you'll get the smallest binary size possible um it's",
    "start": "2282480",
    "end": "2290119"
  },
  {
    "text": "already been supported for console applications inet 7 and then inet 8 now they support",
    "start": "2290119",
    "end": "2296960"
  },
  {
    "text": "minimal apis and of course the prerequisite and that's why I showed it to you all",
    "start": "2296960",
    "end": "2302520"
  },
  {
    "text": "applications and libraries like everything needs to be trimmable like that is the prerequisite to use native",
    "start": "2302520",
    "end": "2309040"
  },
  {
    "text": "aot also when you're compiling you need to have like a native compilation tool chain so for example on Windows this",
    "start": "2309040",
    "end": "2314560"
  },
  {
    "text": "means also in visual studio uh enabling like cc++ development for",
    "start": "2314560",
    "end": "2319640"
  },
  {
    "text": "Windows um the net team gave us a nice graph of how things look I",
    "start": "2319640",
    "end": "2326680"
  },
  {
    "text": "think March a April like around the time frame um so you can see application size",
    "start": "2326680",
    "end": "2334280"
  },
  {
    "text": "I think that's now even better I think that's now even below 5 megabytes so that graph is already out",
    "start": "2334280",
    "end": "2339839"
  },
  {
    "text": "of date and it uses less memory because again theit needs to do less work and",
    "start": "2339839",
    "end": "2345160"
  },
  {
    "text": "the startup time is just phenomenal like it's ready to run it's a",
    "start": "2345160",
    "end": "2350640"
  },
  {
    "text": "binary um however what's missing here throughput because it's still the same",
    "start": "2350640",
    "end": "2356599"
  },
  {
    "text": "it's still the net like it might be ahead of time compiled but it's still the same through it uses the same uh",
    "start": "2356599",
    "end": "2362839"
  },
  {
    "text": "compilation mechanisms as the jit the same optimizations um it just generates a binary out of the",
    "start": "2362839",
    "end": "2369160"
  },
  {
    "text": "native code again some limitations un need",
    "start": "2369160",
    "end": "2374240"
  },
  {
    "text": "trimming Dynamic like runtime generation reflection ID that that just doesn't",
    "start": "2374240",
    "end": "2380359"
  },
  {
    "text": "work um so if you have for example uh lambdas or expression and you want to run expressions like those are always",
    "start": "2380359",
    "end": "2387000"
  },
  {
    "text": "going to be interpreted uh Dynamic loading of assemblers just doesn't work because",
    "start": "2387000",
    "end": "2393640"
  },
  {
    "text": "there's nothing to load an assembl and J it cc++ uh CLI that's on",
    "start": "2393640",
    "end": "2401040"
  },
  {
    "text": "you com interrupt again like new versions might work um otherwise you're",
    "start": "2401040",
    "end": "2406960"
  },
  {
    "text": "going to have a hard time and of course it's now being a single file deployment so all the things that already applied",
    "start": "2406960",
    "end": "2412440"
  },
  {
    "text": "to single file selfcontained publish single file deployments apply like assembly get file will just throw in",
    "start": "2412440",
    "end": "2418240"
  },
  {
    "text": "exception of course if you want to recompile your application need to include the new runtime so whenever",
    "start": "2418240",
    "end": "2423599"
  },
  {
    "text": "there's a runtime patch you need to rebuild your applications nowadays with deaths I think that shouldn't be a",
    "start": "2423599",
    "end": "2428960"
  },
  {
    "text": "problem and what I'm really excited about inet 8 uh is the support for minimal web",
    "start": "2428960",
    "end": "2434839"
  },
  {
    "text": "apis um there's some exceptions to that for example everything that uses MVC or",
    "start": "2434839",
    "end": "2441160"
  },
  {
    "text": "views signal R doesn't work uh authentication I think they want to get at least draw tokens",
    "start": "2441160",
    "end": "2447400"
  },
  {
    "text": "working uh so the minimum for the application framework so session still doesn't work for other",
    "start": "2447400",
    "end": "2454960"
  },
  {
    "text": "reasons um database access so they worked with npg SQL to get at least the post connection",
    "start": "2454960",
    "end": "2462599"
  },
  {
    "text": "uh working with aot scenarios uh also uh sqlite Works",
    "start": "2462599",
    "end": "2469280"
  },
  {
    "text": "um however I think the Microsoft SQ connection still need some work uh and on top of that again like",
    "start": "2469280",
    "end": "2476240"
  },
  {
    "text": "session would support that so like there's dependencies but if you're writing for example a function",
    "start": "2476240",
    "end": "2481880"
  },
  {
    "text": "application a very simple API and maybe you have your authentication before that",
    "start": "2481880",
    "end": "2487040"
  },
  {
    "text": "um that just should work just fine so also refer to the documentation and I want to show you a",
    "start": "2487040",
    "end": "2493800"
  },
  {
    "text": "bit of that now let's maybe start with a different application in an",
    "start": "2493800",
    "end": "2500599"
  },
  {
    "text": "API and I prepared a demo with a small terminal",
    "start": "2500599",
    "end": "2509400"
  },
  {
    "text": "application um that actually processes some data and calculate the results so",
    "start": "2511920",
    "end": "2519000"
  },
  {
    "text": "um it is a cost optimization demo so it tries to find like the cheapest assignments of some tasks to assign um",
    "start": "2519000",
    "end": "2526560"
  },
  {
    "text": "but that's not very important the important thing is there is data like it generates a CSV file or reuses it does",
    "start": "2526560",
    "end": "2533800"
  },
  {
    "text": "some calculation on it and tells me how long it took",
    "start": "2533800",
    "end": "2538960"
  },
  {
    "text": "so let's published this and let's say I published in leas",
    "start": "2538960",
    "end": "2545160"
  },
  {
    "text": "mode single file let's do",
    "start": "2545160",
    "end": "2551640"
  },
  {
    "text": "that perfect and you see there's now a 68 megabyte file in here that just does",
    "start": "2563079",
    "end": "2569400"
  },
  {
    "text": "some calculation like it works it's fine but it's really",
    "start": "2569400",
    "end": "2574720"
  },
  {
    "text": "huge so I showed you publish",
    "start": "2574720",
    "end": "2580160"
  },
  {
    "text": "trimmed nope yeah 12 megabytes of 13 so much",
    "start": "2584839",
    "end": "2592400"
  },
  {
    "text": "much much",
    "start": "2592400",
    "end": "2594920"
  },
  {
    "text": "better and does it still work it works like six",
    "start": "2601520",
    "end": "2607319"
  },
  {
    "text": "seconds so now I can replace most of that say I",
    "start": "2607319",
    "end": "2612920"
  },
  {
    "text": "want to like it's a it's a console application it's a small tool I want this to be really small I want it to",
    "start": "2612920",
    "end": "2618160"
  },
  {
    "text": "ship it to a specific uh runtime so I can do",
    "start": "2618160",
    "end": "2623920"
  },
  {
    "text": "publish aot",
    "start": "2623920",
    "end": "2628520"
  },
  {
    "text": "true this means it will run the Linker to remove everything that's not needed and now it says generating native code",
    "start": "2630079",
    "end": "2637960"
  },
  {
    "text": "now it's there let's have a look at it",
    "start": "2637960",
    "end": "2643240"
  },
  {
    "text": "h 3 megabytes",
    "start": "2643240",
    "end": "2649640"
  },
  {
    "text": "however and I don't think I'll run that it's now going to take I think 40",
    "start": "2649640",
    "end": "2655520"
  },
  {
    "text": "seconds why does it now take 40 seconds well um something about that algorithm",
    "start": "2655520",
    "end": "2661000"
  },
  {
    "text": "is I um think it with this quite a bit because I needed it",
    "start": "2661000",
    "end": "2668720"
  },
  {
    "text": "to um actually for a data science applications we were tracking um applications and it's also very good",
    "start": "2669280",
    "end": "2675880"
  },
  {
    "text": "Global nearest neighbor um algorithm however it has uh cubic",
    "start": "2675880",
    "end": "2682079"
  },
  {
    "text": "complexity so not very very fast but I think it with it that made sure that it",
    "start": "2682079",
    "end": "2687599"
  },
  {
    "text": "uses Hardware intrinsic to be as fast as possible",
    "start": "2687599",
    "end": "2692920"
  },
  {
    "text": "however I did that manually because it was",
    "start": "2692920",
    "end": "2699559"
  },
  {
    "text": "fun which means that there is code in there that looks like this if avx2 is",
    "start": "2699559",
    "end": "2708160"
  },
  {
    "text": "supported so if I'm running on a com on a CPU that has that CPU feature then it",
    "start": "2708160",
    "end": "2713400"
  },
  {
    "text": "runs some weird fixed float thingy AVX loat Vector min max permutate",
    "start": "2713400",
    "end": "2724880"
  },
  {
    "text": "something remainer minimum just to find a minimum like the naive version of this",
    "start": "2724880",
    "end": "2730400"
  },
  {
    "text": "code is just two four loops and an if but there's a fast",
    "start": "2730400",
    "end": "2735480"
  },
  {
    "text": "version however uh aot tries to be like as conservative as possible in like what",
    "start": "2735480",
    "end": "2741240"
  },
  {
    "text": "is the target supported architecture like it should run on a computer that doesn't have",
    "start": "2741240",
    "end": "2746760"
  },
  {
    "text": "avx2 um that means when it compiles this in the in",
    "start": "2746760",
    "end": "2753400"
  },
  {
    "text": "basically the component that would do the chit like like this would be false and it would just remove the code block",
    "start": "2753400",
    "end": "2758440"
  },
  {
    "text": "and run the the naive code which is quite slow for all of these these",
    "start": "2758440",
    "end": "2764440"
  },
  {
    "text": "methods that are in there I can fix that",
    "start": "2764440",
    "end": "2769680"
  },
  {
    "text": "however because I can tell this program ilc the IL compiler to say hey",
    "start": "2770440",
    "end": "2777240"
  },
  {
    "text": "um instructions that like assume the features of Sky processor or higher so",
    "start": "2777240",
    "end": "2782359"
  },
  {
    "text": "like these 2017 Intel chips or higher um even a now supports these instruction",
    "start": "2782359",
    "end": "2790000"
  },
  {
    "text": "sets so I should be fine and it's also something to consider",
    "start": "2790000",
    "end": "2795880"
  },
  {
    "text": "where you ship things to so it's also why Azure and other clouds document like",
    "start": "2795880",
    "end": "2801400"
  },
  {
    "text": "what processes do they actually use so if you really want to optimize it um you",
    "start": "2801400",
    "end": "2807240"
  },
  {
    "text": "can do that using using the instruction set because like. net supports all the machines as",
    "start": "2807240",
    "end": "2814359"
  },
  {
    "text": "well",
    "start": "2814800",
    "end": "2817800"
  },
  {
    "text": "okay perfect now it works and it's still 3",
    "start": "2820559",
    "end": "2828160"
  },
  {
    "text": "megabytes so that's amazing now in net",
    "start": "2828160",
    "end": "2836039"
  },
  {
    "text": "8 so are we are",
    "start": "2841359",
    "end": "2848200"
  },
  {
    "text": "we yeah well then I'm just going to show",
    "start": "2851359",
    "end": "2858000"
  },
  {
    "text": "you a different way I can do do net",
    "start": "2858000",
    "end": "2863920"
  },
  {
    "text": "new web API aot there a new",
    "start": "2863920",
    "end": "2871760"
  },
  {
    "text": "sample and that",
    "start": "2874720",
    "end": "2879440"
  },
  {
    "text": "sample actually I'm just going to",
    "start": "2881920",
    "end": "2886160"
  },
  {
    "text": "check",
    "start": "2891480",
    "end": "2894480"
  },
  {
    "text": "nope okay so um in that sample it's basically there to-do",
    "start": "2896760",
    "end": "2903160"
  },
  {
    "text": "sample which just returns like a static list of to-dos and you can see it's it's",
    "start": "2903160",
    "end": "2908720"
  },
  {
    "text": "a web application it says web application create slim Builder",
    "start": "2908720",
    "end": "2914200"
  },
  {
    "text": "however if I assume this wasn't there which probably will not be there in your",
    "start": "2914200",
    "end": "2919920"
  },
  {
    "text": "application when you start like it should still work like if I do net",
    "start": "2919920",
    "end": "2926880"
  },
  {
    "text": "run perfect it runs let's send it HTTP request uh type",
    "start": "2929799",
    "end": "2937359"
  },
  {
    "text": "not supported what did I do SL",
    "start": "2937359",
    "end": "2943798"
  },
  {
    "text": "Builder that's when you don't start with your own samples uh let's add it",
    "start": "2944520",
    "end": "2952280"
  },
  {
    "text": "in so and let's leave it like that um what",
    "start": "2954359",
    "end": "2960000"
  },
  {
    "text": "this actually does is again system text Json normally it would use reflection to",
    "start": "2960000",
    "end": "2965599"
  },
  {
    "text": "to analyze the the um types that you have like the to-do object and see okay",
    "start": "2965599",
    "end": "2971319"
  },
  {
    "text": "you have these these okay now I know what's happening um because it's uses",
    "start": "2971319",
    "end": "2976640"
  },
  {
    "text": "result at okay and not the actual type so it can't do this introspection however",
    "start": "2976640",
    "end": "2982520"
  },
  {
    "text": "um it would try to do reflection to generate all the metadata however um we",
    "start": "2982520",
    "end": "2989000"
  },
  {
    "text": "cannot do reflection in aot uh so that's why we have one of these uh Source",
    "start": "2989000",
    "end": "2994520"
  },
  {
    "text": "generators um that will behind the scenes uh generate all the accesses all",
    "start": "2994520",
    "end": "3000400"
  },
  {
    "text": "the set methods all the necessary type information and the way to do this is you create a class partial class that",
    "start": "3000400",
    "end": "3007839"
  },
  {
    "text": "inherits from Json serialization context then you add a special attribute of like",
    "start": "3007839",
    "end": "3013880"
  },
  {
    "text": "hey um I want to have this context know about all of these types that a pass in",
    "start": "3013880",
    "end": "3020000"
  },
  {
    "text": "here all of these attributes so it should know about arrays of to-do so that will generate um code to serial and",
    "start": "3020000",
    "end": "3026839"
  },
  {
    "text": "seral arrays of to-do uh also the to-do class and also any types that might be",
    "start": "3026839",
    "end": "3033440"
  },
  {
    "text": "reflected so I can actually have a look at",
    "start": "3033720",
    "end": "3040160"
  },
  {
    "text": "that can find the",
    "start": "3042799",
    "end": "3047200"
  },
  {
    "text": "code it will show up in Visual Studio",
    "start": "3054440",
    "end": "3062599"
  },
  {
    "text": "however yeah okay no it's not it whatever um the idea is you use",
    "start": "3066720",
    "end": "3072720"
  },
  {
    "text": "generator you pass it along you tell it hey if you need to resolve type infos use this context and this will work in",
    "start": "3072720",
    "end": "3078920"
  },
  {
    "text": "aot scenar so now if I publish that so do publish inet 8 it does",
    "start": "3078920",
    "end": "3085559"
  },
  {
    "text": "release by default um it if you're using features",
    "start": "3085559",
    "end": "3091559"
  },
  {
    "text": "that need a runtime it will use the current runtime like Windows 64bit in my case and in this case of the template",
    "start": "3091559",
    "end": "3099000"
  },
  {
    "text": "publish aot is already in the project file itself so we should now get a release",
    "start": "3099000",
    "end": "3109119"
  },
  {
    "text": "publish we got an uh API I okay it's 9 megabytes in this",
    "start": "3113040",
    "end": "3119400"
  },
  {
    "text": "case it runs now let's run the HTTP request against",
    "start": "3121880",
    "end": "3128040"
  },
  {
    "text": "it by the way you know this feature right you can just use. HTTP",
    "start": "3128040",
    "end": "3134240"
  },
  {
    "text": "files in in uh Visual Studio code",
    "start": "3134920",
    "end": "3142640"
  },
  {
    "text": "5,000 okay that works that works so the Json Ser session Works",
    "start": "3142799",
    "end": "3148359"
  },
  {
    "text": "without reflection so that's about dot8 um since",
    "start": "3148359",
    "end": "3156440"
  },
  {
    "text": "I have a couple minutes left I also want to show you another cool feature of native aot it's probably I'm excited about it",
    "start": "3156440",
    "end": "3164160"
  },
  {
    "text": "let's see if some of you appreciate um I also have a library",
    "start": "3164160",
    "end": "3170760"
  },
  {
    "text": "here",
    "start": "3174240",
    "end": "3177240"
  },
  {
    "text": "NOP so I have Library here at net Library net logic let's say I want to",
    "start": "3179839",
    "end": "3187040"
  },
  {
    "text": "reuse that logic from anywhere anywhere means someone might",
    "start": "3187040",
    "end": "3192079"
  },
  {
    "text": "decide to build an application in cc++ maybe in Objective",
    "start": "3192079",
    "end": "3197240"
  },
  {
    "text": "C maybe in Android and write some C wrappers um of course I could use some",
    "start": "3197240",
    "end": "3204880"
  },
  {
    "text": "tool for net to you to deploy to iOS or to Android but in the past I had to do",
    "start": "3204880",
    "end": "3211000"
  },
  {
    "text": "it the other way around I had to implement some logic in cc++ to really be able to reuse it across all the",
    "start": "3211000",
    "end": "3216440"
  },
  {
    "text": "platforms that I need I could actually now do this in net and the way to do is",
    "start": "3216440",
    "end": "3221680"
  },
  {
    "text": "is you make sure you're you have a public stic method somewhere uh maybe",
    "start": "3221680",
    "end": "3227319"
  },
  {
    "text": "only use types that you can actually use for marshalling and Dem marshaling in my case I want to deal with C style strings",
    "start": "3227319",
    "end": "3234720"
  },
  {
    "text": "so I'm just just using pointers and then there's this magic attribute that says unmanaged callers",
    "start": "3234720",
    "end": "3241400"
  },
  {
    "text": "only which if I compile this using native aot uh it will create an entry",
    "start": "3241400",
    "end": "3247000"
  },
  {
    "text": "point for other applications so if you go into my",
    "start": "3247000",
    "end": "3252160"
  },
  {
    "text": "library folder also notice I'm doing this on Linux just because I'm a little bit more comfortable with with C on",
    "start": "3252160",
    "end": "3257920"
  },
  {
    "text": "Linux than on Windows now this is now a library so this is really do 8 and it",
    "start": "3257920",
    "end": "3264640"
  },
  {
    "text": "doesn't say executable or anything so it's a library project I can still do a",
    "start": "3264640",
    "end": "3270119"
  },
  {
    "text": "publish on it and say publish aot uh sorry equals",
    "start": "3270119",
    "end": "3278520"
  },
  {
    "text": "true yeah I'm using a preview yeah in this case I also need to",
    "start": "3281640",
    "end": "3287960"
  },
  {
    "text": "specify runtime so I'm using Linux",
    "start": "3287960",
    "end": "3292400"
  },
  {
    "text": "64bits",
    "start": "3294079",
    "end": "3297079"
  },
  {
    "text": "generating native code so let's see Linux 664 publish and",
    "start": "3301480",
    "end": "3308680"
  },
  {
    "text": "now we got it.so file that's a shared library on Linux if I were to compile on",
    "start": "3308680",
    "end": "3314319"
  },
  {
    "text": "on mechos this would be a do diip and on Windows just a d also it generated the debug",
    "start": "3314319",
    "end": "3321799"
  },
  {
    "text": "information to different files so like on Linux you would know this strip command so I don't need to run",
    "start": "3321799",
    "end": "3328480"
  },
  {
    "text": "that let's move that to my sample",
    "start": "3328799",
    "end": "3333280"
  },
  {
    "text": "application so first of all let's have a look at that now that's a 1 and a half",
    "start": "3339680",
    "end": "3347079"
  },
  {
    "text": "megabyte library and that contains all I need all like the net runtime that I need just to do a greeing and now I can",
    "start": "3347079",
    "end": "3355799"
  },
  {
    "text": "use a c style application that maybe I would ship this",
    "start": "3355799",
    "end": "3361559"
  },
  {
    "text": "with a header that says hey this method exists but it knows it just tell it tells it hey forward declaration",
    "start": "3361559",
    "end": "3367559"
  },
  {
    "text": "somewhere there's going to be a greeting method that it can give it character array into and I will get character",
    "start": "3367559",
    "end": "3373240"
  },
  {
    "text": "arrays out of it so very basic C are strings now let's do a name Copenhagen",
    "start": "3373240",
    "end": "3381240"
  },
  {
    "text": "call greeting print the result I'm just going to actually rename",
    "start": "3381240",
    "end": "3387280"
  },
  {
    "text": "this library because like the convention that link was use is lip",
    "start": "3387280",
    "end": "3392319"
  },
  {
    "text": "something and I have a compile script here that I'm going to run that uses the Clank compiler to",
    "start": "3392319",
    "end": "3400039"
  },
  {
    "text": "compile my code to an output links against a sample lip so it",
    "start": "3400039",
    "end": "3406119"
  },
  {
    "text": "looks for that lip something do something um also like Linux has the special like libraries should be in",
    "start": "3406119",
    "end": "3414359"
  },
  {
    "text": "these parts PA also when running an application I would have it would only look at these paths like I'm telling",
    "start": "3414359",
    "end": "3420839"
  },
  {
    "text": "both the compiler and then the run time the runtime link or commands like also look in the same directory that we're",
    "start": "3420839",
    "end": "3427119"
  },
  {
    "text": "currently in those are these these arguments now I have an application",
    "start": "3427119",
    "end": "3434599"
  },
  {
    "text": "here sample and that just started it net run time executed my net method and I did",
    "start": "3434599",
    "end": "3442319"
  },
  {
    "text": "all the interrupt necessary between C and net so I think that's pretty",
    "start": "3442319",
    "end": "3448319"
  },
  {
    "text": "cool because no longer you need to like create a runtime load a library find the enter point do the marshalling it's just",
    "start": "3448319",
    "end": "3455760"
  },
  {
    "text": "one call and I think this is really amazing it also works with uh static libraries instead of dynamic libraries",
    "start": "3455760",
    "end": "3462400"
  },
  {
    "text": "just that when you do that you also need to bring all the static libraries of like these net runtime Parts like it",
    "start": "3462400",
    "end": "3469240"
  },
  {
    "text": "works just a little bit more complicated so just a thing by the side",
    "start": "3469240",
    "end": "3476798"
  },
  {
    "text": "so and then for the last thank you way um I showed you a lot",
    "start": "3477599",
    "end": "3485839"
  },
  {
    "text": "of things today I want to give you some recommendations to take with you first",
    "start": "3485839",
    "end": "3491039"
  },
  {
    "text": "of all if you want to publish and you're running on net 6 and higher especially",
    "start": "3491039",
    "end": "3496839"
  },
  {
    "text": "Net 7 enable Dynamic PJ like it will be a bit faster and it's",
    "start": "3496839",
    "end": "3503280"
  },
  {
    "text": "Now the default inet 8 if you want to optimize for startup um",
    "start": "3503280",
    "end": "3509559"
  },
  {
    "text": "use ready to run it will increase the startup time a bit uh with the trade-off",
    "start": "3509559",
    "end": "3514760"
  },
  {
    "text": "of making your binaries a bit larger and if you want to optimize for startup size you can go full into",
    "start": "3514760",
    "end": "3521920"
  },
  {
    "text": "trimming uh especially in Linux ready to run composite um and of",
    "start": "3521920",
    "end": "3528000"
  },
  {
    "text": "course um doing the selfcontained to do the trimming to have like the the minimum size possible so then we for",
    "start": "3528000",
    "end": "3535240"
  },
  {
    "text": "example when you build a container uh you no longer need a container that contains the Full runtime so can do a",
    "start": "3535240",
    "end": "3541440"
  },
  {
    "text": "lot smaller smaller applications so with that I'd say thank",
    "start": "3541440",
    "end": "3548880"
  },
  {
    "text": "you for being here um I will be available for questions also I'm going to be there for the rest of conference",
    "start": "3548880",
    "end": "3554839"
  },
  {
    "text": "thank",
    "start": "3554839",
    "end": "3557039"
  },
  {
    "text": "you",
    "start": "3563640",
    "end": "3566640"
  }
]