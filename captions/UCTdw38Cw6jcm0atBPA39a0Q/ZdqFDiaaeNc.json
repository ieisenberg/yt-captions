[
  {
    "text": "hi everyone um I want to start by talking a bit about the state of our Security Programs um specifically of",
    "start": "5200",
    "end": "12639"
  },
  {
    "text": "using scanning tools um it feels like is this as good as it gets like looking at",
    "start": "12639",
    "end": "19920"
  },
  {
    "text": "a bunch of uh findings most of them are false positives nonrelevant",
    "start": "19920",
    "end": "26279"
  },
  {
    "text": "and with all that work that we put in we still find ourselves with security Brides um",
    "start": "26279",
    "end": "34239"
  },
  {
    "text": "embarrassing security Brides why what are we missing here so",
    "start": "34239",
    "end": "41000"
  },
  {
    "text": "all those tools are operating under the assumptions that we are all the same",
    "start": "41000",
    "end": "46160"
  },
  {
    "text": "that we are all sort of clones um that we all write code the same way we all use the same popular Frameworks and",
    "start": "46160",
    "end": "53120"
  },
  {
    "text": "libraries and we all copy the same code Snippets from stack Overflow um and under this assumption",
    "start": "53120",
    "end": "60039"
  },
  {
    "text": "makes sense to make a finite number of generic rules and scan or applications with those rules and find all the",
    "start": "60039",
    "end": "67520"
  },
  {
    "text": "vulnerabilities right well no um because",
    "start": "67520",
    "end": "73200"
  },
  {
    "text": "we are still human we are still unique and until AI writes all of our code we",
    "start": "73200",
    "end": "79000"
  },
  {
    "text": "are still unique snowflakes with our own unique corporate bureaucracy um that",
    "start": "79000",
    "end": "84720"
  },
  {
    "text": "prevents us from making any changes um with our own unique code base",
    "start": "84720",
    "end": "90520"
  },
  {
    "text": "after all that's why we have a unique app and product and not using just someone else's product um so what do",
    "start": "90520",
    "end": "98079"
  },
  {
    "text": "companies do they come up with their own rules um their own gu guidelines for example um this Library should be only",
    "start": "98079",
    "end": "106200"
  },
  {
    "text": "used with wrapper um because it's not up to our security standards or um this uh",
    "start": "106200",
    "end": "114119"
  },
  {
    "text": "function is not Totally Secure but we can't really change its functionality right now um because some stuff depend",
    "start": "114119",
    "end": "120640"
  },
  {
    "text": "on it but like from now on you should use it only like we have this safe version that from now on you should use",
    "start": "120640",
    "end": "127000"
  },
  {
    "text": "for anything new you should use this safe version of the function um and all those sorts of um specific rules to the",
    "start": "127000",
    "end": "134319"
  },
  {
    "text": "company um but so this is kind of solves the problem of um generic rules missing",
    "start": "134319",
    "end": "140840"
  },
  {
    "text": "out on our problems but it creates a new problem who enforces all those specific",
    "start": "140840",
    "end": "148959"
  },
  {
    "text": "unique rules who can even remember all of them like the developers need to check for that",
    "start": "148959",
    "end": "154400"
  },
  {
    "text": "each code review or does the security team need to review needs to review the code like each time we make some changes",
    "start": "154400",
    "end": "161280"
  },
  {
    "text": "like it doesn't make any sense and it's just one big headache um and in this",
    "start": "161280",
    "end": "166519"
  },
  {
    "text": "talk I hope to give you some relief for this",
    "start": "166519",
    "end": "171879"
  },
  {
    "text": "headache so who am I what's my motivation um my name is m kamenski I've",
    "start": "171879",
    "end": "179599"
  },
  {
    "text": "been told to state state it loud and clear like um some guy named L Jenkins",
    "start": "179599",
    "end": "186120"
  },
  {
    "text": "if any of you ever heard of him um but that that doesn't really um help because",
    "start": "186120",
    "end": "193680"
  },
  {
    "text": "no one can pronounce my name um each time I go abroad I'm like Michael Michelle whatever so I'm M um I'm a",
    "start": "193680",
    "end": "201799"
  },
  {
    "text": "security researcher at bound security it's a um a consultancy not a vendor I'm",
    "start": "201799",
    "end": "207360"
  },
  {
    "text": "not selling you any products here um and we help companies to advance their uh",
    "start": "207360",
    "end": "213200"
  },
  {
    "text": "application Security Programs um and when I just entered the security",
    "start": "213200",
    "end": "220640"
  },
  {
    "text": "world I was really fascinated by the fact that everyone wants to share the knowledge like no matter if they just",
    "start": "220640",
    "end": "227159"
  },
  {
    "text": "turning out or if they are way into their career um they just",
    "start": "227159",
    "end": "233280"
  },
  {
    "text": "want to share their knowledge with the community um so I was really inspired by",
    "start": "233280",
    "end": "239560"
  },
  {
    "text": "that and I helped initiate um the project named hakot which helps women",
    "start": "239560",
    "end": "245319"
  },
  {
    "text": "get into cyber security I also helped organizing the besides um tlv in my",
    "start": "245319",
    "end": "250799"
  },
  {
    "text": "country and I enjoy giving back so let's dive in um what's our mission here it's",
    "start": "250799",
    "end": "261000"
  },
  {
    "text": "to become omnicient what does that mean well Webster's Dictionary defines it as",
    "start": "261000",
    "end": "268880"
  },
  {
    "text": "having infinite awareness understanding everything we want to know everything that happens in our application",
    "start": "268880",
    "end": "274120"
  },
  {
    "text": "everything that happens in our code all the problems that we have we want to know everything everywhere all the",
    "start": "274120",
    "end": "282160"
  },
  {
    "text": "time so what does everything mean we want to find all the prods we have all the custom problems all the custom",
    "start": "282160",
    "end": "288080"
  },
  {
    "text": "Solutions we have we want to know all of them what does everywhere means all across our codebase all CR",
    "start": "288080",
    "end": "295199"
  },
  {
    "text": "application all API end points and what does all the time mean it means every",
    "start": "295199",
    "end": "301080"
  },
  {
    "text": "cicd run each time we deploy new code we want to verify again all our custom",
    "start": "301080",
    "end": "308800"
  },
  {
    "text": "mechanisms there are three um types",
    "start": "309479",
    "end": "314520"
  },
  {
    "text": "generally um of vulnerabilities and mitigations first there are generic",
    "start": "314520",
    "end": "320160"
  },
  {
    "text": "vulnerabilities like aqal injection um and they have a standard fix just use",
    "start": "320160",
    "end": "325600"
  },
  {
    "text": "the parameterized query um then we have generic vulnerabilities that you can um",
    "start": "325600",
    "end": "333880"
  },
  {
    "text": "mitigate them with different um options like whatever that fits into your own",
    "start": "333880",
    "end": "340000"
  },
  {
    "text": "application and your own flows and logic and finally there are up specific vulnerabilities with uh",
    "start": "340000",
    "end": "348440"
  },
  {
    "text": "bisoke mitigation which means just something that has to do with your business logic um like if you're selling",
    "start": "348440",
    "end": "354880"
  },
  {
    "text": "stuff on your website you don't want to someone to be able to buy it for less than a price or whatever like something",
    "start": "354880",
    "end": "360080"
  },
  {
    "text": "that has to do with your application um so the first kind um",
    "start": "360080",
    "end": "366000"
  },
  {
    "text": "genetic vulnerabilities with generic solution like SQL injection and parameterized query this is exactly what",
    "start": "366000",
    "end": "373280"
  },
  {
    "text": "um generic scanning tools are good for um this is the first",
    "start": "373280",
    "end": "380680"
  },
  {
    "text": "box uh generic SS tool and that can scans the code",
    "start": "380680",
    "end": "385880"
  },
  {
    "text": "statically and the generic D tool that scans the application in run time",
    "start": "385880",
    "end": "391560"
  },
  {
    "text": "dynamically are built exactly for that and there are a lot of tools that do",
    "start": "391560",
    "end": "397360"
  },
  {
    "text": "exactly that yeah a lot of",
    "start": "397360",
    "end": "403360"
  },
  {
    "text": "tools okay I probably forgot a bunch um",
    "start": "404319",
    "end": "409880"
  },
  {
    "text": "so great we have all those tools scan your code finding out whenever it is",
    "start": "409880",
    "end": "415039"
  },
  {
    "text": "perfect right well no because we still have those two two boxes um so what's",
    "start": "415039",
    "end": "424560"
  },
  {
    "text": "the first box um generic M abilities with um our own custom",
    "start": "424560",
    "end": "432840"
  },
  {
    "text": "mitigation here we have uh a pass traversal um the user is giving us input",
    "start": "432840",
    "end": "439560"
  },
  {
    "text": "and we're just using it to give him the file that he asked for we don't check",
    "start": "439560",
    "end": "445000"
  },
  {
    "text": "the input that he gave us we don't know where does he going on our server",
    "start": "445000",
    "end": "450160"
  },
  {
    "text": "um and what file we giv in back so we come up",
    "start": "450160",
    "end": "456720"
  },
  {
    "text": "um so here is an example of what you can send um you can just Traverse the files",
    "start": "456720",
    "end": "464599"
  },
  {
    "text": "and get to files that you shouldn't be getting to",
    "start": "464599",
    "end": "469879"
  },
  {
    "text": "um and we propose some BP mitigation we want to remove um traversing up the",
    "start": "469879",
    "end": "477120"
  },
  {
    "text": "files um and we just remove like the dots and slash um this isn't like a",
    "start": "477120",
    "end": "485919"
  },
  {
    "text": "solution that I um suggest you go and Implement in your code it just something for the talk",
    "start": "485919",
    "end": "493240"
  },
  {
    "text": "to understand the concept um but this something is something that um a generic",
    "start": "493240",
    "end": "499639"
  },
  {
    "text": "tool will miss on it won't know that we used this mitigation and we will just",
    "start": "499639",
    "end": "505960"
  },
  {
    "text": "get a bunch of false positives telling us um we have this past reversal and",
    "start": "505960",
    "end": "511879"
  },
  {
    "text": "Engineers will just get used to ignoring this finding and then if they actually",
    "start": "511879",
    "end": "517240"
  },
  {
    "text": "have a pastal where we forgot to implement our mitigation they will be just used to ignoring it",
    "start": "517240",
    "end": "525320"
  },
  {
    "text": "um and our last type of vulnerability",
    "start": "525320",
    "end": "530480"
  },
  {
    "text": "is um the unique kind that is unique to our business logic so for example let's",
    "start": "530480",
    "end": "536279"
  },
  {
    "text": "say we have uh coupons on our website um",
    "start": "536279",
    "end": "543800"
  },
  {
    "text": "and like you can use the coupon to get a discount or whatever and the mechanism",
    "start": "543800",
    "end": "550440"
  },
  {
    "text": "it works on um the user gives um a coupon code it is checked in the",
    "start": "550440",
    "end": "556440"
  },
  {
    "text": "database if it's still valid they get a discount and then the coupon code is gets erased from that database um but",
    "start": "556440",
    "end": "564040"
  },
  {
    "text": "there could be a race condition here and that's something that",
    "start": "564040",
    "end": "569920"
  },
  {
    "text": "is really hard to find in static review of the code um even the engineer that",
    "start": "569920",
    "end": "575760"
  },
  {
    "text": "wrote the code will have a hard time uh finding that and",
    "start": "575760",
    "end": "581040"
  },
  {
    "text": "uh checking it dynamically with dynamically with d will be difficult as",
    "start": "581040",
    "end": "587480"
  },
  {
    "text": "well because a generic tool won't know that we have this mechanism won't know",
    "start": "587480",
    "end": "592839"
  },
  {
    "text": "where to check what to check like it's too specific for a generic tool to",
    "start": "592839",
    "end": "598079"
  },
  {
    "text": "find um so that was the everything what are we",
    "start": "598079",
    "end": "605600"
  },
  {
    "text": "looking for those two boxes boxes of generic vulnerabilities with unique mitigations and um unique",
    "start": "605600",
    "end": "613440"
  },
  {
    "text": "vulnerabilities with unique mitigations um how do we do they everywhere how do",
    "start": "613440",
    "end": "619160"
  },
  {
    "text": "we check across our code bases or across our application so for the static analysis",
    "start": "619160",
    "end": "627760"
  },
  {
    "text": "part of the stock um I will be using Sam grap um you can use any kind of tool you",
    "start": "627760",
    "end": "633320"
  },
  {
    "text": "want I just use it for the demonstrations because um it has a free open source version which I'm using for",
    "start": "633320",
    "end": "640120"
  },
  {
    "text": "the demonstrations and it's easy to use but there are lot of",
    "start": "640120",
    "end": "645440"
  },
  {
    "text": "Alternatives um so what it basically does it finds",
    "start": "645440",
    "end": "650600"
  },
  {
    "text": "patterns in your code but it's not just like doing contrl F or grap or something",
    "start": "650600",
    "end": "656040"
  },
  {
    "text": "it has a semantic understanding of your code so it understands flows it understands um like functions and",
    "start": "656040",
    "end": "664079"
  },
  {
    "text": "classes and all of that um so that is what I'm going to be using",
    "start": "664079",
    "end": "670560"
  },
  {
    "text": "for that everywhere um but what are we scanning",
    "start": "670560",
    "end": "677040"
  },
  {
    "text": "exactly so story time it's 2021 there is",
    "start": "677040",
    "end": "683639"
  },
  {
    "text": "quarantine um Co is out there a group of tech Bros are sitting in their an M",
    "start": "683639",
    "end": "689920"
  },
  {
    "text": "they're really bored suddenly one of them says why won't we start a startup",
    "start": "689920",
    "end": "696480"
  },
  {
    "text": "um develop an app that will teach cats to play chess great idea right now that might",
    "start": "696480",
    "end": "704720"
  },
  {
    "text": "sound a bit weird to you like who would invent invest in this sort of startup um",
    "start": "704720",
    "end": "710680"
  },
  {
    "text": "but wait until we hear the name they came up with cyber AI transponster",
    "start": "710680",
    "end": "716639"
  },
  {
    "text": "chess what does that mean I have no idea yeah but it has a lot of buzzwords and it also spells out cat",
    "start": "716639",
    "end": "724120"
  },
  {
    "text": "chess perfect so this is our app so um we'll now look at two examples",
    "start": "724120",
    "end": "734360"
  },
  {
    "text": "of static analysis uh and just a disclaimer those",
    "start": "734360",
    "end": "740279"
  },
  {
    "text": "are just examples to understand the concept it's not super sophisticated or anything but you will understand and be",
    "start": "740279",
    "end": "747440"
  },
  {
    "text": "able to apply it to your own applications with the sophistication levels that you need um so the first",
    "start": "747440",
    "end": "755720"
  },
  {
    "text": "example security decorators our problem is there are",
    "start": "755720",
    "end": "761040"
  },
  {
    "text": "certain um things on our app for example making the next move or declaring who is",
    "start": "761040",
    "end": "766880"
  },
  {
    "text": "the winner that needs authorization first we need to make sure that our",
    "start": "766880",
    "end": "772040"
  },
  {
    "text": "opponent cat doesn't make a move for us um so we need to we have this sensitive",
    "start": "772040",
    "end": "779800"
  },
  {
    "text": "functions that we need to check permissions first um and we want to to",
    "start": "779800",
    "end": "785000"
  },
  {
    "text": "have one function that does that and checks information before each um",
    "start": "785000",
    "end": "790040"
  },
  {
    "text": "sensitive uh function so we are creating a decorator",
    "start": "790040",
    "end": "796480"
  },
  {
    "text": "which is sort of a wrapper for a function that adds some functionality to that function um and apply those",
    "start": "796480",
    "end": "802240"
  },
  {
    "text": "decorators to our sensitive functions so here is the implementation",
    "start": "802240",
    "end": "808040"
  },
  {
    "text": "of the decorator um it's in Python and it's require update per Mission um and",
    "start": "808040",
    "end": "818079"
  },
  {
    "text": "if the cat has permission to make the move he gets it if not there is an error",
    "start": "818079",
    "end": "823519"
  },
  {
    "text": "um and we have the class of sensitive functions so for example there is one function that we applied the uh",
    "start": "823519",
    "end": "830160"
  },
  {
    "text": "decorator for um for updating the scoreboard okay so what do we want to",
    "start": "830160",
    "end": "837120"
  },
  {
    "text": "check here we want to check that we didn't forget to apply The Decorator in all the cases that",
    "start": "837120",
    "end": "843040"
  },
  {
    "text": "required so here is the example code we're going to scan we have the class of sensitive",
    "start": "843040",
    "end": "849600"
  },
  {
    "text": "functions we have the first um function update scoreboard that has The Decorator",
    "start": "849600",
    "end": "856079"
  },
  {
    "text": "and the second function for making the next move that doesn't have the decorator um so even though Simba won't",
    "start": "856079",
    "end": "864959"
  },
  {
    "text": "be able to say that he won our Tabby he will be able to to make a stupid move",
    "start": "864959",
    "end": "870680"
  },
  {
    "text": "with his Queen for him um so here is the layout of the rule",
    "start": "870680",
    "end": "878079"
  },
  {
    "text": "we have the pattern that we're looking for we're looking for a function definition we tell it to focus just on",
    "start": "878079",
    "end": "886000"
  },
  {
    "text": "the first line of the name of the function because we don't need to find all the lines of the function",
    "start": "886000",
    "end": "891839"
  },
  {
    "text": "definition and we tell it that it shouldn't be inside this sort of pattern",
    "start": "891839",
    "end": "897360"
  },
  {
    "text": "that has a decorator and then a function function definition and we only want to find",
    "start": "897360",
    "end": "902880"
  },
  {
    "text": "things that are in the sensitive function class because if it's not there we don't need a decorator okay so when R we run this",
    "start": "902880",
    "end": "910320"
  },
  {
    "text": "rule on our code we find only the case that does have The Decorator it's easy",
    "start": "910320",
    "end": "916680"
  },
  {
    "text": "fast and efficient",
    "start": "916680",
    "end": "922720"
  },
  {
    "text": "and Simba can't make this move for Tabby",
    "start": "922720",
    "end": "927959"
  },
  {
    "text": "Queen okay second example uh a dangerous function say we want to Ping our cat to",
    "start": "927959",
    "end": "936600"
  },
  {
    "text": "make sure he didn't fall asleep in the middle of the game so we send a ping uh and want to get a response um we don't",
    "start": "936600",
    "end": "945360"
  },
  {
    "text": "want malicious inputs to be able to execute commands on our open system",
    "start": "945360",
    "end": "952480"
  },
  {
    "text": "um so we have this um function that gets an input we have the Run p function",
    "start": "952480",
    "end": "962040"
  },
  {
    "text": "and we get the input and put it into the r pink function which is not really good",
    "start": "962160",
    "end": "967800"
  },
  {
    "text": "to get user input and put it straight into an a function that runs operating system commands",
    "start": "967800",
    "end": "975440"
  },
  {
    "text": "um here uh so what we do is we create uh",
    "start": "975440",
    "end": "982079"
  },
  {
    "text": "sanitization that sanitizes the input before it it goes into the Run pink",
    "start": "982079",
    "end": "987680"
  },
  {
    "text": "function so here is our sanitizing function here we have um we getting",
    "start": "987680",
    "end": "994759"
  },
  {
    "text": "input and then um we do run ping without sanitizing first and here we sanitize",
    "start": "994759",
    "end": "1001720"
  },
  {
    "text": "first and only then run the uh the",
    "start": "1001720",
    "end": "1006879"
  },
  {
    "text": "function so how can we ensure that we didn't forget that sanitization somewhere in our",
    "start": "1007480",
    "end": "1015240"
  },
  {
    "text": "code this is our code we want to find the first case that",
    "start": "1016120",
    "end": "1022040"
  },
  {
    "text": "doesn't go that goes straight from get input to the Run ping and we don't want",
    "start": "1022040",
    "end": "1027839"
  },
  {
    "text": "to find the second case that goes from get input um to the r ping if it goes",
    "start": "1027839",
    "end": "1035640"
  },
  {
    "text": "through the sanitizer first so our source is the",
    "start": "1035640",
    "end": "1043760"
  },
  {
    "text": "input our sync where the input ends up and performs an action is the r ping",
    "start": "1043760",
    "end": "1049840"
  },
  {
    "text": "function and our sanitizer is the sanitizer function and to find that we're going to",
    "start": "1049840",
    "end": "1057200"
  },
  {
    "text": "use um taint mode which is something that allows us to follow flows through",
    "start": "1057200",
    "end": "1064760"
  },
  {
    "text": "our code so we specify what our sources",
    "start": "1064760",
    "end": "1070559"
  },
  {
    "text": "are what what's our sync and we tell s to Omit any findings that go through a",
    "start": "1070559",
    "end": "1078120"
  },
  {
    "text": "sanitizer in the middle and when we run this rule on our",
    "start": "1078120",
    "end": "1083720"
  },
  {
    "text": "code we get exactly that only the case where we didn't go through the",
    "start": "1083720",
    "end": "1089600"
  },
  {
    "text": "sanitizer and a last example for static analysis um let's say there is a library",
    "start": "1090240",
    "end": "1098120"
  },
  {
    "text": "a third party Library we're using to um to unzip um games of cats um",
    "start": "1098120",
    "end": "1109600"
  },
  {
    "text": "it's called a pi7 ZR um and it has a vulnerability now in",
    "start": "1109600",
    "end": "1117240"
  },
  {
    "text": "this function extract all but we don't think we're using that",
    "start": "1117240",
    "end": "1122280"
  },
  {
    "text": "we're using other functions from this Library so it's Friday night the developers don't want to update now like",
    "start": "1122280",
    "end": "1129600"
  },
  {
    "text": "we want to check is it really origin to update or can we wait until next week",
    "start": "1129600",
    "end": "1137039"
  },
  {
    "text": "um so how do we check for that first right now",
    "start": "1137480",
    "end": "1142760"
  },
  {
    "text": "and second in the future if we forgot to update because we not actually using this function we want to make sure",
    "start": "1142760",
    "end": "1149240"
  },
  {
    "text": "someone didn't say oh we're already using this function let's this Library let's I use a function another function",
    "start": "1149240",
    "end": "1156760"
  },
  {
    "text": "from there and is the vable function so we want to verify it continuously that no one using the function as long as it",
    "start": "1156760",
    "end": "1164400"
  },
  {
    "text": "didn't update so here is our code we have um",
    "start": "1164400",
    "end": "1170679"
  },
  {
    "text": "those two examples that we use um extract all from the seven Z Library",
    "start": "1170679",
    "end": "1177799"
  },
  {
    "text": "um and we have this is the vable",
    "start": "1177799",
    "end": "1184919"
  },
  {
    "text": "function and we have this other example um where we use another function that's",
    "start": "1184919",
    "end": "1191120"
  },
  {
    "text": "not followable um we don't want to find that that would be a false positive even though it's from the same",
    "start": "1191120",
    "end": "1197760"
  },
  {
    "text": "Library it's not the vulnerable function and finally we have an example",
    "start": "1197760",
    "end": "1203679"
  },
  {
    "text": "here where we're using extract all which is the name of the vulnerable function but it has nothing to do with that vulnerable Library so it's it will be a",
    "start": "1203679",
    "end": "1211039"
  },
  {
    "text": "false positive as well so this is our code um and why do we even need uh",
    "start": "1211039",
    "end": "1222520"
  },
  {
    "text": "custom scanning here like there are SCA tools that's supposed to find that there SS tools like why do we need that",
    "start": "1222520",
    "end": "1229600"
  },
  {
    "text": "so SS generally don't U get updated with cves they don't look for that um they",
    "start": "1229600",
    "end": "1235880"
  },
  {
    "text": "look for functions and stuff in our code but they don't look for third party libraries we're using and SCA tools",
    "start": "1235880",
    "end": "1242760"
  },
  {
    "text": "which is their responsibility to look for um vable libraries we're using um",
    "start": "1242760",
    "end": "1248640"
  },
  {
    "text": "they don't look if we actually using the vable function just check if we are using this",
    "start": "1248640",
    "end": "1254000"
  },
  {
    "text": "dependency um so here is a rule we are again using t mode because we want um to",
    "start": "1254000",
    "end": "1261000"
  },
  {
    "text": "follow some flow from um the 7 zip Library um into the VW",
    "start": "1261000",
    "end": "1268600"
  },
  {
    "text": "function and when we run it on our code we find only the first two cases",
    "start": "1268600",
    "end": "1274159"
  },
  {
    "text": "that are the true positives and we don't find extract all that doesn't come from the 7 Z library and we don't find um",
    "start": "1274159",
    "end": "1280840"
  },
  {
    "text": "write all which is a different function from the 7 Z Library um that's for the static",
    "start": "1280840",
    "end": "1286919"
  },
  {
    "text": "analysis what about Dynamic analysis um so the tool I will be using",
    "start": "1286919",
    "end": "1293640"
  },
  {
    "text": "for the demonstration is called nuclei",
    "start": "1293640",
    "end": "1298840"
  },
  {
    "text": "um and it's open source and it's free to use there are no limitations on that um",
    "start": "1298840",
    "end": "1305679"
  },
  {
    "text": "and it uh it allows you to create custom rules to scan your application",
    "start": "1305679",
    "end": "1311200"
  },
  {
    "text": "dynamically in one time um and well yeah I actually built",
    "start": "1311200",
    "end": "1318320"
  },
  {
    "text": "um this",
    "start": "1318320",
    "end": "1323799"
  },
  {
    "text": "application",
    "start": "1323799",
    "end": "1326799"
  },
  {
    "text": "um okay so here it is um the cats can play here it's very",
    "start": "1334960",
    "end": "1343799"
  },
  {
    "text": "nice um yeah so what do we want to check",
    "start": "1343799",
    "end": "1351120"
  },
  {
    "text": "here okay so oops that says four but should be three we have um three",
    "start": "1354080",
    "end": "1360240"
  },
  {
    "text": "examples here first is bad word Checker um race condition and",
    "start": "1360240",
    "end": "1365840"
  },
  {
    "text": "ssrf um so what's the problem here we don't want um the cats can specify their",
    "start": "1365840",
    "end": "1371720"
  },
  {
    "text": "usernames but we don't want any cats to offend their opponents and put um really",
    "start": "1371720",
    "end": "1377600"
  },
  {
    "text": "bad words that will make them hurt or offended or anything um for",
    "start": "1377600",
    "end": "1384360"
  },
  {
    "text": "example cucumber or",
    "start": "1384360",
    "end": "1390159"
  },
  {
    "text": "dog or Roomba yeah that's scary so we have to",
    "start": "1390159",
    "end": "1398760"
  },
  {
    "text": "make sure none of those words gets into the usernames um so we have a list of bad",
    "start": "1398760",
    "end": "1406120"
  },
  {
    "text": "words we have a Rex the checks the they give us and make sure the bad words",
    "start": "1406120",
    "end": "1411480"
  },
  {
    "text": "don't come into um into the usernames um but what happens if we miss",
    "start": "1411480",
    "end": "1419440"
  },
  {
    "text": "some combination um what if we forgot to check every API endpoint that um they",
    "start": "1419440",
    "end": "1426600"
  },
  {
    "text": "can send input to",
    "start": "1426600",
    "end": "1432080"
  },
  {
    "text": "so for example if I want to put in um let's say",
    "start": "1435360",
    "end": "1442320"
  },
  {
    "text": "dog oh you don't see it",
    "start": "1442320",
    "end": "1446399"
  },
  {
    "text": "sorry okay so let's say we want to put in um something like",
    "start": "1455400",
    "end": "1462320"
  },
  {
    "text": "this we shouldn't be able to do that right and if put in something like",
    "start": "1462640",
    "end": "1471278"
  },
  {
    "text": "this or anything that has some Dieter in it",
    "start": "1472279",
    "end": "1479840"
  },
  {
    "text": "um so let's say something like this okay so this is it doesn't",
    "start": "1479840",
    "end": "1485360"
  },
  {
    "text": "recognize that so some symbols that we put into the",
    "start": "1485360",
    "end": "1491240"
  },
  {
    "text": "username it does recognize some it doesn't um we want to check that and make a good list of everything we want",
    "start": "1491240",
    "end": "1500279"
  },
  {
    "text": "um so we make a nucleate template and we try to use the username",
    "start": "1500279",
    "end": "1509000"
  },
  {
    "text": "Roomba and fuz it with different symbols in the middle and it found one symbol that we",
    "start": "1509000",
    "end": "1516960"
  },
  {
    "text": "were able to put in um how it",
    "start": "1516960",
    "end": "1524520"
  },
  {
    "text": "works sorry is is basically we tell nuclei um",
    "start": "1525039",
    "end": "1530960"
  },
  {
    "text": "what method we want to use um and we have some payloads um here",
    "start": "1530960",
    "end": "1538240"
  },
  {
    "text": "I just used those three but you can give it a text file and it will run across all of them and you just fuz it um in",
    "start": "1538240",
    "end": "1547000"
  },
  {
    "text": "the query um there is just one parameter and we tell it to infix we can do replace or",
    "start": "1547000",
    "end": "1554799"
  },
  {
    "text": "post fix or anything we want um and that's it it uses this payload in",
    "start": "1554799",
    "end": "1563120"
  },
  {
    "text": "order to fuz and it tells us us it found a match if the response is username is",
    "start": "1563120",
    "end": "1570640"
  },
  {
    "text": "valid um if like if it says username is invalid",
    "start": "1570640",
    "end": "1577640"
  },
  {
    "text": "um we tell it negative true so unless it tells us username is invalid we um found a",
    "start": "1577640",
    "end": "1586840"
  },
  {
    "text": "problem",
    "start": "1587240",
    "end": "1590240"
  },
  {
    "text": "so this is the first example of fuzzing something we want to check on our application uh dynamically um the other",
    "start": "1592320",
    "end": "1599520"
  },
  {
    "text": "case is a race condition so we have a discount coupon on our application and",
    "start": "1599520",
    "end": "1606320"
  },
  {
    "text": "we want to check it can't be used more than once um we want to check the validity",
    "start": "1606320",
    "end": "1614360"
  },
  {
    "text": "before we apply it and make sure it invalidates and no one can like send concurrent requests and use it multiple",
    "start": "1614360",
    "end": "1622520"
  },
  {
    "text": "times um so there is a possible problem of a race condition",
    "start": "1622520",
    "end": "1629799"
  },
  {
    "text": "here so let's try try to run this game this uh rule one",
    "start": "1629960",
    "end": "1638840"
  },
  {
    "text": "second okay and we ran it uh we ran three concurrent requests and all of",
    "start": "1639840",
    "end": "1646760"
  },
  {
    "text": "them worked and now if you go on the App we have",
    "start": "1646760",
    "end": "1652320"
  },
  {
    "text": "three members here I didn't like do the all registration and stuff so it says undefined but if the user was registered",
    "start": "1652320",
    "end": "1659000"
  },
  {
    "text": "so it would um say it became a member three times so there is a rest condition here",
    "start": "1659000",
    "end": "1666519"
  },
  {
    "text": "how did we check for",
    "start": "1666519",
    "end": "1669600"
  },
  {
    "text": "that so here is our template we're using um the post request for the uh validate",
    "start": "1672360",
    "end": "1679039"
  },
  {
    "text": "coupon API endpoint",
    "start": "1679039",
    "end": "1684120"
  },
  {
    "text": "and you don't need to use a cookie I just use this so it will be in the same session but uh nule does it",
    "start": "1684159",
    "end": "1690320"
  },
  {
    "text": "automatically and we specified a coupon code um and we told it we had to want to",
    "start": "1690320",
    "end": "1697120"
  },
  {
    "text": "execute a race condition three times and if it returns okay it means it",
    "start": "1697120",
    "end": "1705080"
  },
  {
    "text": "worked let's just make sure that if we run it again it won't",
    "start": "1705080",
    "end": "1710440"
  },
  {
    "text": "work it still",
    "start": "1710440",
    "end": "1713799"
  },
  {
    "text": "works not quite sure",
    "start": "1717080",
    "end": "1720960"
  },
  {
    "text": "why well it's not supposed to but um oh",
    "start": "1724480",
    "end": "1731039"
  },
  {
    "text": "I'm sorry I know way um it still returns okay but it returns",
    "start": "1731039",
    "end": "1737200"
  },
  {
    "text": "an error so here it should check for an error sorry for that um but anyway the",
    "start": "1737200",
    "end": "1745200"
  },
  {
    "text": "point is um it executes uh it sends concurrent requests with um one by",
    "start": "1745200",
    "end": "1751760"
  },
  {
    "text": "missing um and then they all happen at the same time and it checks for R",
    "start": "1751760",
    "end": "1760000"
  },
  {
    "text": "condition this well this way this is something that a generic dust won't be able to find because um it doesn't know",
    "start": "1760000",
    "end": "1767120"
  },
  {
    "text": "where we have problems where to check for that um what kind of parameters to send it's too specific too unique um and",
    "start": "1767120",
    "end": "1777320"
  },
  {
    "text": "if you know how to specify that you can use nuclei for specific endpoints with",
    "start": "1777320",
    "end": "1782440"
  },
  {
    "text": "specific parameters that you want to check for condition okay and our last example is",
    "start": "1782440",
    "end": "1790600"
  },
  {
    "text": "ssrf um we have the option to send to set a",
    "start": "1790600",
    "end": "1796440"
  },
  {
    "text": "profile picture for a cat on the app and it uh calls um a URL on the web to set a",
    "start": "1796440",
    "end": "1804919"
  },
  {
    "text": "picture um we could see it",
    "start": "1804919",
    "end": "1811518"
  },
  {
    "text": "here so if we say we have a mail cat it fetches for",
    "start": "1817480",
    "end": "1824120"
  },
  {
    "text": "this image or if we specify our cat is female it fetches for this image and",
    "start": "1824120",
    "end": "1829880"
  },
  {
    "text": "those images are um URLs on the",
    "start": "1829880",
    "end": "1834720"
  },
  {
    "text": "web so we don't want it to be exploited for an attacker to send for uh to make",
    "start": "1836799",
    "end": "1842960"
  },
  {
    "text": "the application call a different URL um that they specify so how do we mitigate",
    "start": "1842960",
    "end": "1849240"
  },
  {
    "text": "that we just whitelist the domains that we allow to access",
    "start": "1849240",
    "end": "1855799"
  },
  {
    "text": "um and we want to make make sure that across all of our relevant a points we",
    "start": "1855799",
    "end": "1861240"
  },
  {
    "text": "checked and really WID listed domains um so what we're going to use is",
    "start": "1861240",
    "end": "1868840"
  },
  {
    "text": "something that's called interact aage URL it creates a random subdomain on",
    "start": "1868840",
    "end": "1874960"
  },
  {
    "text": "that o um and it checks whether um our domain",
    "start": "1874960",
    "end": "1881200"
  },
  {
    "text": "interacts U made a connection to this domain so here is our template",
    "start": "1881200",
    "end": "1889919"
  },
  {
    "text": "this one takes a bit time because the Wi-Fi here isn't the best and it needs",
    "start": "1898760",
    "end": "1903880"
  },
  {
    "text": "to actually make a connection and not just locally and it works our um our domain",
    "start": "1903880",
    "end": "1913320"
  },
  {
    "text": "actually made a connection to this domain um so our regular srf um some",
    "start": "1913320",
    "end": "1920799"
  },
  {
    "text": "dusts or most of them will be able to detect um but here we have a unique",
    "start": "1920799",
    "end": "1927000"
  },
  {
    "text": "parameter that needs to be present um enable equal equals true and it might be something more sophisticated than that",
    "start": "1927000",
    "end": "1933679"
  },
  {
    "text": "like there needs to be some sort of flow before we can fetch a domain or there need there are some parameters that are",
    "start": "1933679",
    "end": "1940519"
  },
  {
    "text": "harder to guess so A dust a generic dust won't be able to know like okay I need",
    "start": "1940519",
    "end": "1946639"
  },
  {
    "text": "to try for ssrf here but I need to put those specific um parameters or do the",
    "start": "1946639",
    "end": "1951799"
  },
  {
    "text": "specific flow before I try to do that um like if there wasn't an extra",
    "start": "1951799",
    "end": "1958039"
  },
  {
    "text": "parameter a regular dust probably would have found it um so that's a very simple",
    "start": "1958039",
    "end": "1965039"
  },
  {
    "text": "uh nucleate template just the method get the",
    "start": "1965039",
    "end": "1971200"
  },
  {
    "text": "um the URL we're interacting with um like the our NPI endpoint with the",
    "start": "1971200",
    "end": "1977399"
  },
  {
    "text": "parameter and we ma want to match if the um interactive stage URL actually was",
    "start": "1977399",
    "end": "1984919"
  },
  {
    "text": "contacted by our application okay so we talked about",
    "start": "1984919",
    "end": "1992639"
  },
  {
    "text": "everything what are the problems we want to find um gen uh generic vulnerabilities with unique Solutions",
    "start": "1992639",
    "end": "1999519"
  },
  {
    "text": "and um unique vulnerabilities with Solutions um we talked about how we do",
    "start": "1999519",
    "end": "2005120"
  },
  {
    "text": "that everywhere um whether it's statically with um unique rules that",
    "start": "2005120",
    "end": "2010919"
  },
  {
    "text": "scanner code or um dynamically with uh templates that check our different API",
    "start": "2010919",
    "end": "2018559"
  },
  {
    "text": "endpoints in run time um how do we do that all the",
    "start": "2018559",
    "end": "2023600"
  },
  {
    "text": "time so um we'll look just at um the implementation of Samra but it's easy to",
    "start": "2023600",
    "end": "2030600"
  },
  {
    "text": "uh Implement any of them to integrate them into your cicd pipeline um on",
    "start": "2030600",
    "end": "2036960"
  },
  {
    "text": "GitHub you can use um GitHub workflows GitHub actions",
    "start": "2036960",
    "end": "2043679"
  },
  {
    "text": "um you um specify the trigger for the S",
    "start": "2043679",
    "end": "2049440"
  },
  {
    "text": "GP uh rules to run every time uh code gets pushed into main",
    "start": "2049440",
    "end": "2056560"
  },
  {
    "text": "um and you specify the rules you want to",
    "start": "2056560",
    "end": "2061760"
  },
  {
    "text": "run you can tell it to run only on specific uh files or folders or run only",
    "start": "2061760",
    "end": "2068839"
  },
  {
    "text": "a subset of the rules you have um you can specify that and when you run this",
    "start": "2068839",
    "end": "2074520"
  },
  {
    "text": "workflow um you find the findings so for",
    "start": "2074520",
    "end": "2079960"
  },
  {
    "text": "example um here is an example of the second rule run and it tells us on what",
    "start": "2079960",
    "end": "2087000"
  },
  {
    "text": "line we found um the issue and it also",
    "start": "2087000",
    "end": "2092158"
  },
  {
    "text": "specifies all the flow um it tells us where um the tainted data comes from",
    "start": "2092159",
    "end": "2097839"
  },
  {
    "text": "from um it what twitch is and through what does it go in the",
    "start": "2097839",
    "end": "2104800"
  },
  {
    "text": "middle um and you can have different formats um text or sorry or whatever um",
    "start": "2106440",
    "end": "2115000"
  },
  {
    "text": "and you can look at all the findings in the security tab under code",
    "start": "2115000",
    "end": "2121280"
  },
  {
    "text": "scanning and find all the findings um and decide if you want to um continue",
    "start": "2121280",
    "end": "2127800"
  },
  {
    "text": "pushing or um stop it and fix",
    "start": "2127800",
    "end": "2133240"
  },
  {
    "text": "first um and you can go into the findings and see um where it is in the code and what the problem",
    "start": "2133240",
    "end": "2141280"
  },
  {
    "text": "is um so how do we infers that all the time we just integrate it into our C",
    "start": "2141480",
    "end": "2149319"
  },
  {
    "text": "process um there doesn't need to be any compilation or whatever it just when you",
    "start": "2149319",
    "end": "2157400"
  },
  {
    "text": "push push it into main it just runs um and it gives you an alert and you can decide if you want it to block the",
    "start": "2157400",
    "end": "2163839"
  },
  {
    "text": "process or just alert you but let the process go on um and that's it um so",
    "start": "2163839",
    "end": "2171119"
  },
  {
    "text": "we've seen um examples of specific rules for static analysis for dynamic um but",
    "start": "2171119",
    "end": "2179079"
  },
  {
    "text": "how do we start how do we know what do we not want to analyze what we want to automate",
    "start": "2179079",
    "end": "2185240"
  },
  {
    "text": "um so we want to check for things that",
    "start": "2185240",
    "end": "2190319"
  },
  {
    "text": "can be automated that don't need someone a human to look at them and analyze them",
    "start": "2190319",
    "end": "2196119"
  },
  {
    "text": "before uh to know that it's a finding um stuff that we know we need this",
    "start": "2196119",
    "end": "2202640"
  },
  {
    "text": "authorization here we um don't what theise condition here all the stuff can be automated um we want to focus on",
    "start": "2202640",
    "end": "2210240"
  },
  {
    "text": "stuff that repeats itself for example U we got a a back Bounty report we want to",
    "start": "2210240",
    "end": "2215440"
  },
  {
    "text": "make sure it doesn't happen uh in some other place in our application or um",
    "start": "2215440",
    "end": "2221760"
  },
  {
    "text": "there is a finding um in with generic size tool that happens in one place we",
    "start": "2221760",
    "end": "2227119"
  },
  {
    "text": "want to make sure it doesn't happen in other places um so that's um also regression testing",
    "start": "2227119",
    "end": "2234480"
  },
  {
    "text": "um and we integrate that into our Pipeline and modify it along the way as",
    "start": "2234480",
    "end": "2239560"
  },
  {
    "text": "we see um the value we get from it and the noise we get from it um so it sounds",
    "start": "2239560",
    "end": "2247119"
  },
  {
    "text": "L like QA but after all our security tests it doesn't matter if it's for",
    "start": "2247119",
    "end": "2252200"
  },
  {
    "text": "security vulnerabilities or um code bugs at the end it's problems with our",
    "start": "2252200",
    "end": "2258800"
  },
  {
    "text": "application so the methodology can be quite similar um there are limitations",
    "start": "2258800",
    "end": "2264839"
  },
  {
    "text": "to those tools um especially srep um it uh it has a limited cross file",
    "start": "2264839",
    "end": "2272680"
  },
  {
    "text": "scanning like if there is a flow from a function in one file to a function in a different file um it it doesn't support",
    "start": "2272680",
    "end": "2280599"
  },
  {
    "text": "it in all languages it won't find it in some of the languages um and also it's",
    "start": "2280599",
    "end": "2286319"
  },
  {
    "text": "free for I think up to 10 member team members if there are like more um it",
    "start": "2286319",
    "end": "2291839"
  },
  {
    "text": "they charge money for the tool um but we found that the free open source version",
    "start": "2291839",
    "end": "2298520"
  },
  {
    "text": "is pretty good um but as I said there are alternatives",
    "start": "2298520",
    "end": "2303720"
  },
  {
    "text": "I see more and more S tools allow um people to customize the rules to write",
    "start": "2303720",
    "end": "2309640"
  },
  {
    "text": "their own rules um so it's the same idea as I showed here also there is code ql",
    "start": "2309640",
    "end": "2316920"
  },
  {
    "text": "which is free for open source software but not for other software and if you really hate your",
    "start": "2316920",
    "end": "2325000"
  },
  {
    "text": "life you can always use grip but it just looks like my cat fell asleep on the",
    "start": "2325000",
    "end": "2330040"
  },
  {
    "text": "keyboard um as for nuclei there is um both suite and Z attack proxy that are",
    "start": "2330040",
    "end": "2338200"
  },
  {
    "text": "also um possible Alternatives um they're not quite um exactly the same but they",
    "start": "2338200",
    "end": "2343599"
  },
  {
    "text": "also uh allow you to customiz stuff and do Dynamic testing um",
    "start": "2343599",
    "end": "2350599"
  },
  {
    "text": "okay so what are key takeaways um we want to",
    "start": "2350599",
    "end": "2356640"
  },
  {
    "text": "be able to check everything everywhere all the time everything the vulnerabilities that",
    "start": "2356640",
    "end": "2363720"
  },
  {
    "text": "don't have a generic solution and everywhere um with simple rules that can",
    "start": "2363720",
    "end": "2373200"
  },
  {
    "text": "scan all of our codebase and all over our HPI endpoints all the time with a",
    "start": "2373200",
    "end": "2379400"
  },
  {
    "text": "simple scan that just runs automatically with every CI run",
    "start": "2379400",
    "end": "2385240"
  },
  {
    "text": "um that's it um so I hope you learned how to help your cats play chest",
    "start": "2385240",
    "end": "2392560"
  },
  {
    "text": "securely um and that's it does anyone has any",
    "start": "2392560",
    "end": "2399210"
  },
  {
    "text": "[Applause]",
    "start": "2399210",
    "end": "2406199"
  },
  {
    "text": "questions which one the",
    "start": "2412760",
    "end": "2420400"
  },
  {
    "text": "limitations not actually yeah exactly so also",
    "start": "2420400",
    "end": "2429318"
  },
  {
    "text": "um I did work a bit with check marks that allows you to customize queries um",
    "start": "2435000",
    "end": "2442839"
  },
  {
    "text": "and um no that's the Alternatives I",
    "start": "2442839",
    "end": "2448960"
  },
  {
    "text": "tried but like it really um it it shouldn't really matter the point is",
    "start": "2448960",
    "end": "2454040"
  },
  {
    "text": "that it allows you to um write queries so use that tool that is simpler to for",
    "start": "2454040",
    "end": "2460000"
  },
  {
    "text": "you to use or for your",
    "start": "2460000",
    "end": "2463079"
  },
  {
    "text": "teamac you taking you're talking specifically about srap so you can download it and run it locally um with",
    "start": "2471160",
    "end": "2479359"
  },
  {
    "text": "um and you also if you put it into your CI CD pipeline then you can add flags",
    "start": "2479359",
    "end": "2485720"
  },
  {
    "text": "that tell it to not be sent to srep uh Cloud um and they have U like privacy",
    "start": "2485720",
    "end": "2493040"
  },
  {
    "text": "policy and everything on the website so you can check it out but yeah you can also download it and run it locally on your",
    "start": "2493040",
    "end": "2499960"
  },
  {
    "text": "computer any other questions no okay thank you very",
    "start": "2503560",
    "end": "2510160"
  },
  {
    "text": "much",
    "start": "2511000",
    "end": "2514000"
  }
]