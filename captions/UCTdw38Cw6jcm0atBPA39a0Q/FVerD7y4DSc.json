[
  {
    "start": "0",
    "end": "176000"
  },
  {
    "text": "good afternoon everyone it's three o'clock so we should probably kick off thank you so much for coming how many",
    "start": "0",
    "end": "8639"
  },
  {
    "text": "people were here for the previous session okay quite a few awesome which case I",
    "start": "8639",
    "end": "15269"
  },
  {
    "text": "will skip over this slide very yeah mention very lightly I'm a freelance consultant bla bla bla most important",
    "start": "15269",
    "end": "21990"
  },
  {
    "text": "for this slide is my contact details so please get in touch if there's any questions I haven't explained anything",
    "start": "21990",
    "end": "29179"
  },
  {
    "text": "so this session we're gonna talk we're gonna dive you know fair bit deeper into",
    "start": "29179",
    "end": "35520"
  },
  {
    "text": "some of the concepts within communities in particular and talk about scheduling admission controllers how we can extend",
    "start": "35520",
    "end": "42719"
  },
  {
    "text": "communities I will finish off with a slight change of pace and we'll talk about some virtual node stuff and some service",
    "start": "42719",
    "end": "50730"
  },
  {
    "text": "meshes and hopefully demos as I realized in my last session I forgot to show you a video of the rolling updates apologies",
    "start": "50730",
    "end": "58109"
  },
  {
    "text": "for that I would have been way over time as well but hey if anyone wants to see that I'm happy to share it with you so",
    "start": "58109",
    "end": "64460"
  },
  {
    "text": "what we're not gonna cover its the fundamentals hopefully if you needed to",
    "start": "64460",
    "end": "69720"
  },
  {
    "text": "cover that you would have been in the previous session even then if you're still very neat kubernetes then the",
    "start": "69720",
    "end": "75000"
  },
  {
    "text": "first 20 minutes 30 minutes of this talk may be a bit too much because you need",
    "start": "75000",
    "end": "80159"
  },
  {
    "text": "to have kind of worked with there for a little bit too to get a feel for what I'm talking about",
    "start": "80159",
    "end": "85320"
  },
  {
    "text": "I'm not going to deep dive into how we create custom controllers and are not operators that's a big topic that's a",
    "start": "85320",
    "end": "91110"
  },
  {
    "text": "workshop in itself and I'm not going to deep dive into service meshes I will share a link to a video of a talk I did",
    "start": "91110",
    "end": "97170"
  },
  {
    "text": "in Sydney last year where I do cover that topic so time for you folks to do",
    "start": "97170",
    "end": "102360"
  },
  {
    "text": "some work please be hand up if you're using kubernetes at the moment yeah",
    "start": "102360",
    "end": "108060"
  },
  {
    "text": "hopefully I'd expect a lot more hands in production if you're using service",
    "start": "108060",
    "end": "113460"
  },
  {
    "text": "Misha's no hands you normally see one hand at least cool",
    "start": "113460",
    "end": "119280"
  },
  {
    "text": "okay so pod scheduling as I've said to somebody earlier this talk is gonna be",
    "start": "119280",
    "end": "126090"
  },
  {
    "text": "very dry and fortunately there's very little scope for human we talk about scheduling pods",
    "start": "126090",
    "end": "132020"
  },
  {
    "text": "so I showed this slide in the last talk and I said they're schedulers job is to",
    "start": "132250",
    "end": "137470"
  },
  {
    "text": "find Terranea pods and we'll cover it more so this is what this talk is gonna",
    "start": "137470",
    "end": "142990"
  },
  {
    "text": "be out or this part of the talk rather when we look at scheduling pods",
    "start": "142990",
    "end": "148740"
  },
  {
    "text": "high-level it's actually quite straightforward you create a pod the scheduler detects that there's no",
    "start": "148740",
    "end": "155680"
  },
  {
    "text": "node assigned to that pod and it will assign a node that's actually all the",
    "start": "155680",
    "end": "161260"
  },
  {
    "text": "scheduler does the scheduler doesn't run your pods for you this job is just a sign a node and then",
    "start": "161260",
    "end": "167740"
  },
  {
    "text": "other controllers kick in when they see the node assigned and they take action they do what needs to be done so with",
    "start": "167740",
    "end": "176080"
  },
  {
    "start": "176000",
    "end": "176000"
  },
  {
    "text": "the scheduling you want to sometimes influence where your pods are being scheduled where they're being placed why",
    "start": "176080",
    "end": "181750"
  },
  {
    "text": "would you do this it's often you may have a heterogeneous cluster you may",
    "start": "181750",
    "end": "187810"
  },
  {
    "start": "182000",
    "end": "182000"
  },
  {
    "text": "have some specialized hardware or some specialized software running in your cluster and you need to make sure that certain things run in certain places you",
    "start": "187810",
    "end": "195239"
  },
  {
    "text": "may want to allocate resources to particular teams if you if you're",
    "start": "195239",
    "end": "201489"
  },
  {
    "text": "running a multi-talented cluster within it within your organization or maybe you're a software as a service provider",
    "start": "201489",
    "end": "206709"
  },
  {
    "text": "we've got multi-talented applications you need to ensure that resources are specific to individual teams groups you",
    "start": "206709",
    "end": "217120"
  },
  {
    "text": "may have regulatory requirements so your regulator your regulator may say you must have certain software hardware",
    "start": "217120",
    "end": "223390"
  },
  {
    "text": "running on a particular for a particular application and that may be expensive to have across your whole cluster or",
    "start": "223390",
    "end": "229090"
  },
  {
    "text": "clusters and therefore you may need to ensure that certain pods run on certain nodes sometimes your application",
    "start": "229090",
    "end": "237730"
  },
  {
    "text": "architecture may require you to put components together or more more commonly actually you want to separate",
    "start": "237730",
    "end": "243640"
  },
  {
    "text": "components and we'll talk about why you might want to do this a little bit later so we look at the ways we can influence",
    "start": "243640",
    "end": "249880"
  },
  {
    "start": "249000",
    "end": "249000"
  },
  {
    "text": "the scheduling of pods we have a node selector and talk about all of these in a minute we have no definitive anti",
    "start": "249880",
    "end": "256780"
  },
  {
    "text": "affinity we have no tainting and toleration x' we now can influence by pods themselves",
    "start": "256780",
    "end": "263200"
  },
  {
    "text": "pod affinity 19 finiti and then finally the kind of nuclear option a custom scheduler so let's talk",
    "start": "263200",
    "end": "270030"
  },
  {
    "text": "about node selectors these are the simplest way of influencing where pods",
    "start": "270030",
    "end": "276570"
  },
  {
    "start": "271000",
    "end": "271000"
  },
  {
    "text": "get scheduled so essentially we add a key value pair label to a nodes we add a label so in these slides you're gonna",
    "start": "276570",
    "end": "284130"
  },
  {
    "text": "see Kay a lot Kay's my alias for cube control so cube control label node give",
    "start": "284130",
    "end": "289979"
  },
  {
    "text": "it the node name and I give it a key value pair so team equals foo in this case now my node is labeled what I can",
    "start": "289979",
    "end": "296820"
  },
  {
    "text": "do is I can in my pod spec so in my deployments I can say that in my node",
    "start": "296820",
    "end": "304020"
  },
  {
    "text": "selector I can say I want the node that has the label team foo yeah and then",
    "start": "304020",
    "end": "313169"
  },
  {
    "text": "kubernetes were basically schedule that pod on those nodes now probably this is it's a little bit binary if there are no",
    "start": "313169",
    "end": "321389"
  },
  {
    "text": "nodes in your cluster with that label your pods won't get scheduled when you",
    "start": "321389",
    "end": "327660"
  },
  {
    "text": "look at a node there's actually quite a lot of labels on me it's quite interesting to have a look sometimes see do do a cube cube control describe node",
    "start": "327660",
    "end": "334820"
  },
  {
    "text": "and you can see some labels I've truncated this obviously output and you'll see a lot of the labels actually",
    "start": "334820",
    "end": "340919"
  },
  {
    "text": "added by your cloud provider so we can see a Grenadian pool name I've got some cuban Nettie's related stuff I got this",
    "start": "340919",
    "end": "348360"
  },
  {
    "text": "failure domain which might be interesting got some regions and I've got some indication of the type of VM potentially",
    "start": "348360",
    "end": "356370"
  },
  {
    "text": "and some of the storage indicators a so I said node selectors are were a little",
    "start": "356370",
    "end": "363090"
  },
  {
    "text": "bit basically little bit crude so what we can use instead is no Definity and",
    "start": "363090",
    "end": "368220"
  },
  {
    "start": "366000",
    "end": "366000"
  },
  {
    "text": "ante Finity so these allow you to attract pods to nodes based on labels",
    "start": "368220",
    "end": "376970"
  },
  {
    "text": "the difference with the nodes lectures versus the affinity affinity is better in the sense that it allows you to have",
    "start": "376970",
    "end": "382979"
  },
  {
    "text": "more than just equals you can have different matching conditions so you can say something is in not in a set of",
    "start": "382979",
    "end": "390960"
  },
  {
    "text": "labels does not exist is greater than less than etc",
    "start": "390960",
    "end": "396440"
  },
  {
    "text": "the nice thing is as I said with the node label the node selector your pod won't get scheduled so with no Definity",
    "start": "397800",
    "end": "404759"
  },
  {
    "text": "you can be selective on how demanding you are for a particular node it's what",
    "start": "404759",
    "end": "410310"
  },
  {
    "text": "I mean by this is what you can specify is required during scheduling ignored",
    "start": "410310",
    "end": "415710"
  },
  {
    "text": "during execution you can see developers name this thing haqqani this is",
    "start": "415710",
    "end": "421410"
  },
  {
    "text": "essentially a hard requirement so this says that when I select applicator node using this parameter if it's not",
    "start": "421410",
    "end": "429030"
  },
  {
    "text": "available my pod will not get scheduled so this is essentially the same as a node low note selector another option is",
    "start": "429030",
    "end": "436830"
  },
  {
    "start": "434000",
    "end": "434000"
  },
  {
    "text": "to say preferred during scheduling ignore during execution and now this is a soft requirement so if there isn't a",
    "start": "436830",
    "end": "444060"
  },
  {
    "text": "matching thing it will find somewhere else to run it now if you're looking at this you of thinking why we've got all",
    "start": "444060",
    "end": "450449"
  },
  {
    "text": "this duplication there's a lot of words here a lot of letters we didn't need all of them that's because there's a third one the third one says required doing",
    "start": "450449",
    "end": "458610"
  },
  {
    "text": "scheduling required during execution so the key difference here is the first two",
    "start": "458610",
    "end": "464479"
  },
  {
    "text": "won't kick a part of a node if you add a label to it so they won't suddenly remove it the required has not been",
    "start": "464479",
    "end": "472229"
  },
  {
    "text": "implemented and actually you can get very similar effects using a different approach which we'll talk about later",
    "start": "472229",
    "end": "478789"
  },
  {
    "text": "let's have a look at the yama for this so here we have the spec for our",
    "start": "478789",
    "end": "485909"
  },
  {
    "text": "deployment and we have no definitive and we're saying i want it to be required so",
    "start": "485909",
    "end": "491490"
  },
  {
    "text": "I mean I'm insisting I have the instance type to be this particular size VM ok so",
    "start": "491490",
    "end": "498389"
  },
  {
    "text": "that might be being used for say you've got a GPU in some of your client nodes in the cluster and you want to insist",
    "start": "498389",
    "end": "504449"
  },
  {
    "text": "that he runs on a GPU base node I'm doing in India I've only got single",
    "start": "504449",
    "end": "510330"
  },
  {
    "text": "value but of course you could have that's an array you could have passed multiple values in there so that was",
    "start": "510330",
    "end": "516149"
  },
  {
    "text": "required preferred looks very similar but it's got some extra bits so now we",
    "start": "516149",
    "end": "522000"
  },
  {
    "text": "have this weight the reason we have a weight is because now we're saying we prefer there may be multiple nodes that",
    "start": "522000",
    "end": "529020"
  },
  {
    "text": "match so there may be one that doesn't match where does it put it so you can essentially try and influence the",
    "start": "529020",
    "end": "534330"
  },
  {
    "text": "behavior the preference if you like so",
    "start": "534330",
    "end": "542160"
  },
  {
    "start": "542000",
    "end": "542000"
  },
  {
    "text": "there was no Definity and so for what we talked about was pods being put onto",
    "start": "542160",
    "end": "547590"
  },
  {
    "text": "specific nodes if you like why four node didn't want a pot to be put on it this",
    "start": "547590",
    "end": "555060"
  },
  {
    "text": "is why you this is where you would use Tencent orations so a taint allows you",
    "start": "555060",
    "end": "561210"
  },
  {
    "text": "to repel no do you say no pods sorry let",
    "start": "561210",
    "end": "566250"
  },
  {
    "text": "me say that again a taint allows nodes to repel pods so what you're saying is do not put any pods on this node unless",
    "start": "566250",
    "end": "576680"
  },
  {
    "text": "they explicitly tolerate this particular taint I appreciate this can get a bit",
    "start": "576680",
    "end": "582840"
  },
  {
    "text": "confusing if you need to it it kind of makes sense one so you've used it a little little while you can have to",
    "start": "582840",
    "end": "592350"
  },
  {
    "text": "define a taint you have three parameters now so you have the key the value and then you have the effect so the effect",
    "start": "592350",
    "end": "602190"
  },
  {
    "text": "here says no execute prefer sorry these so that the effect rather there's three",
    "start": "602190",
    "end": "607800"
  },
  {
    "text": "options so no schedule says don't schedule at all prefers no schedule says well if you're",
    "start": "607800",
    "end": "614190"
  },
  {
    "text": "forced to if there's nothing else then yes you can use this node and then no",
    "start": "614190",
    "end": "620280"
  },
  {
    "text": "execute is where this is different no excu take pods which are running on a node",
    "start": "620280",
    "end": "625740"
  },
  {
    "text": "and you've just applied a tank to it it will kick them off that node I will say you're not allowed to execute anymore in",
    "start": "625740",
    "end": "632430"
  },
  {
    "text": "this node it's worth remembering that kubernetes actually adds chains to nodes",
    "start": "632430",
    "end": "639420"
  },
  {
    "text": "under certain circumstances so for example if that particular node is running out of disk space kubernetes",
    "start": "639420",
    "end": "646320"
  },
  {
    "text": "will actually taint that node to indicate this and therefore it should stop or minimize the amount of",
    "start": "646320",
    "end": "651750"
  },
  {
    "text": "deployments to that node and as I mentioned the key difference",
    "start": "651750",
    "end": "659309"
  },
  {
    "text": "here is that you may have a pod running on a node and if it gets tainted and it's not been tolerated it will get",
    "start": "659309",
    "end": "666089"
  },
  {
    "text": "kicked off so to taint a node cube",
    "start": "666089",
    "end": "674730"
  },
  {
    "text": "control taint node give it the name of the node and this time we pass in key",
    "start": "674730",
    "end": "681269"
  },
  {
    "text": "value and then : and then that effect so no schedule so if you take a look an",
    "start": "681269",
    "end": "687809"
  },
  {
    "text": "example where I've tainted I've tainted one of these nodes and I've",
    "start": "687809",
    "end": "693779"
  },
  {
    "text": "done a deployment that doesn't have a toleration we can see that we have three",
    "start": "693779",
    "end": "702839"
  },
  {
    "text": "instances of this particular application and two of them are running on the same node one is running on one there's",
    "start": "702839",
    "end": "708329"
  },
  {
    "text": "nothing running on node zero node zero is the one I've tainted let's have a",
    "start": "708329",
    "end": "715019"
  },
  {
    "text": "look at how I did that or let's now add sorry let's add a toleration for that",
    "start": "715019",
    "end": "721889"
  },
  {
    "text": "particular tank so now this is my pod spec and now I'm saying I'm going to",
    "start": "721889",
    "end": "727499"
  },
  {
    "text": "tolerate that toleration that tank is called key name and the value is that and then I've said I'm tolerating the",
    "start": "727499",
    "end": "733769"
  },
  {
    "text": "effect no schedule and with this single schedule on to that node now this",
    "start": "733769",
    "end": "739079"
  },
  {
    "text": "parameter which have come today is quite confusing I think this toleration",
    "start": "739079",
    "end": "744809"
  },
  {
    "text": "seconds says that if it ain't is applied you have 3,600 seconds before you will",
    "start": "744809",
    "end": "754139"
  },
  {
    "text": "get evicted if you don't specify you won't get evicted as long as you can",
    "start": "754139",
    "end": "760019"
  },
  {
    "text": "tolerate the time so it's a little bit confusing in my opinion anyway so let's",
    "start": "760019",
    "end": "766350"
  },
  {
    "text": "see what the schedule schedule pause and I look like now that I've told said I've tolerate that taint and as you'd expect",
    "start": "766350",
    "end": "772980"
  },
  {
    "text": "we're now seeing the pods distributed across all of the nodes I deleted and",
    "start": "772980",
    "end": "779309"
  },
  {
    "text": "redeployed this in case you're wondering it doesn't kubernetes doesn't tend to move pods just for the sake of it unless",
    "start": "779309",
    "end": "785039"
  },
  {
    "text": "it's been forced to hide by tanks toleration so just to kind of reiterate tents",
    "start": "785039",
    "end": "792290"
  },
  {
    "start": "789000",
    "end": "789000"
  },
  {
    "text": "versus note affinity with node affinity any port can actually land on a node",
    "start": "792290",
    "end": "797810"
  },
  {
    "text": "unless the pod says it doesn't want to the node has no say in the matter in",
    "start": "797810",
    "end": "802970"
  },
  {
    "text": "that situation whereas the taints work the other way if you like they push everything away unless the pod accepts",
    "start": "802970",
    "end": "810230"
  },
  {
    "text": "it so where we use taints is to prevent",
    "start": "810230",
    "end": "816440"
  },
  {
    "text": "casual scheduling if you like onto certain nodes so these may be nodes which are expensive or have limited",
    "start": "816440",
    "end": "822290"
  },
  {
    "text": "resources and we see an example of this later on when I get to the virtual node stuff how we use this to power the",
    "start": "822290",
    "end": "828380"
  },
  {
    "text": "virtual node so so far we've been talking about pods and nodes an affinity between them but what if we want to",
    "start": "828380",
    "end": "836240"
  },
  {
    "text": "control the effect of pods against other plots so inter pod affinity and anti",
    "start": "836240",
    "end": "845959"
  },
  {
    "text": "Finity or we normally always call a pod affinity and anti Finity they influence",
    "start": "845959",
    "end": "851750"
  },
  {
    "text": "the scheduling based on what other pods are running on a node so this can be",
    "start": "851750",
    "end": "857810"
  },
  {
    "text": "useful when you want to control which components runway so for example you may",
    "start": "857810",
    "end": "863810"
  },
  {
    "text": "want to ensure that a cache is always running alongside an app ordinary that shouldn't be something you need to do",
    "start": "863810",
    "end": "871240"
  },
  {
    "text": "more typically you would use it to ensure that your multiple instances of",
    "start": "871480",
    "end": "876829"
  },
  {
    "text": "your pods are distributed in such a way they can tolerate an outage of certain",
    "start": "876829",
    "end": "882170"
  },
  {
    "text": "nodes or maybe even a zoned streaming your deployed across availability zones",
    "start": "882170",
    "end": "888730"
  },
  {
    "text": "so in terms of the way we define them it's very similar to what we've seen before we have the same constructor",
    "start": "891590",
    "end": "898890"
  },
  {
    "text": "required in scheduling ignore during execution we have this additional parameter called topology key and this",
    "start": "898890",
    "end": "908490"
  },
  {
    "text": "after bonus is a little bit confusing hopefully the next few slides will explain it a little bit better they",
    "start": "908490",
    "end": "913680"
  },
  {
    "text": "reference a level and I'm that err codes are very deliberate a level of your",
    "start": "913680",
    "end": "918780"
  },
  {
    "text": "infrastructure to which these rules apply that level could be hostname could",
    "start": "918780",
    "end": "924600"
  },
  {
    "text": "be a some kind of failure domain it could be availability zone that key is determined by the labels that you've",
    "start": "924600",
    "end": "931290"
  },
  {
    "text": "got in your in your nodes so when I showed you the labels before it said availability zone those labels indicate",
    "start": "931290",
    "end": "939210"
  },
  {
    "text": "with that particular node was running in a particular availability zone let's try",
    "start": "939210",
    "end": "944670"
  },
  {
    "text": "and visualize this hopefully make it a little bit clearer so I've got four nodes running in a cluster and the",
    "start": "944670",
    "end": "952830"
  },
  {
    "text": "labels for the nodes say node 1 node 2 node 3 that kind of makes sense so if I pick the host name label key within the",
    "start": "952830",
    "end": "962100"
  },
  {
    "text": "nodes kubernetes will treat each one of these as a separate infrastructure if you like a separate node and we'll use",
    "start": "962100",
    "end": "968880"
  },
  {
    "text": "that to distribute the pods out so now",
    "start": "968880",
    "end": "980460"
  },
  {
    "text": "imagine that we have a label for those machines where the first two lines on one and the next one's on two so this",
    "start": "980460",
    "end": "988260"
  },
  {
    "text": "may you know literally be the case that in the dataset in the region in your cloud region they are in two different",
    "start": "988260",
    "end": "993900"
  },
  {
    "text": "zones this could be an entirely fabricated label that you've made up or whatever reason don't know why you do",
    "start": "993900",
    "end": "1000110"
  },
  {
    "text": "that but hey let's let's roll with it so now essentially what you're doing is with the topology key you're telling",
    "start": "1000110",
    "end": "1005660"
  },
  {
    "text": "communities to treat them like two blocks of servers if you like and based",
    "start": "1005660",
    "end": "1013010"
  },
  {
    "text": "on the topology key it will separate and the anti Finity will separate them across that boundary that making sense",
    "start": "1013010",
    "end": "1021860"
  },
  {
    "text": "no one's not even slightly wearing power on so here's what the pod spec looks",
    "start": "1021860",
    "end": "1029670"
  },
  {
    "text": "like again the very long winded attribute so again we're saying required",
    "start": "1029670",
    "end": "1036058"
  },
  {
    "text": "here we're using the label selector the key thing now is this label selector is picking up labels from our pods so this",
    "start": "1036059",
    "end": "1044400"
  },
  {
    "text": "is a pod label okay the pod says this component is a cash and we're saying we want to",
    "start": "1044400",
    "end": "1050610"
  },
  {
    "text": "separate it by hostname so we want the caches to be together with sorry this",
    "start": "1050610",
    "end": "1058260"
  },
  {
    "text": "particular application wants to be next to wherever there's a cache it's an",
    "start": "1058260",
    "end": "1063330"
  },
  {
    "text": "affinity let's have a look at that in a",
    "start": "1063330",
    "end": "1071100"
  },
  {
    "text": "visualization so here I've got three nodes about three replicas of this web",
    "start": "1071100",
    "end": "1076140"
  },
  {
    "text": "and this cache so with the web I would specify pod affinity for the cache and I",
    "start": "1076140",
    "end": "1085290"
  },
  {
    "text": "said that he preferred the reason that's preferred is because that cache may not",
    "start": "1085290",
    "end": "1090660"
  },
  {
    "text": "be deployed yet well I don't want this to be hard dependency because otherwise you won't get deployed the pod anti",
    "start": "1090660",
    "end": "1097500"
  },
  {
    "text": "affinity is against itself so I'm saying is repel yourself across the host names",
    "start": "1097500",
    "end": "1103790"
  },
  {
    "text": "so that will force the three instances of this particular application to go into three individual nodes now that",
    "start": "1103790",
    "end": "1111990"
  },
  {
    "text": "might happen by chance it sometimes does if there's nothing else going on but that's how you would force it so with",
    "start": "1111990",
    "end": "1119309"
  },
  {
    "text": "that we caused the three to be deployed now we want to have the cache running alongside so I'm sure you can probably",
    "start": "1119309",
    "end": "1127740"
  },
  {
    "text": "figure out now with the cache we have affinity for the web this time",
    "start": "1127740",
    "end": "1132750"
  },
  {
    "text": "and we anti affinity ourselves and again we're using the hostname and because of that we get a nice symmetrical",
    "start": "1132750",
    "end": "1138870"
  },
  {
    "text": "deployment across I forgot to start my",
    "start": "1138870",
    "end": "1145080"
  },
  {
    "text": "timer classic it's fine so here's the",
    "start": "1145080",
    "end": "1151230"
  },
  {
    "text": "here's the pod spec for the front-end it's a little bit morning they can people see that the back okay so now",
    "start": "1151230",
    "end": "1160710"
  },
  {
    "text": "we've got the pod ante affinity so this is the web one so we're gonna anti Finiti ourselves against the hostname",
    "start": "1160710",
    "end": "1167669"
  },
  {
    "text": "but we're gonna have affinity for the cache across the host names we imagine",
    "start": "1167669",
    "end": "1175529"
  },
  {
    "text": "the cache component cache component does the reverse I won't labor the point what",
    "start": "1175529",
    "end": "1183570"
  },
  {
    "text": "this looks like when you run it so this is keep control get pods are wide and",
    "start": "1183570",
    "end": "1188940"
  },
  {
    "start": "1184000",
    "end": "1184000"
  },
  {
    "text": "then I label selector and we can see that I have cache and web no zero",
    "start": "1188940",
    "end": "1194879"
  },
  {
    "text": "caching web node one cache and web node two so you can see there's quite a lot",
    "start": "1194879",
    "end": "1202470"
  },
  {
    "text": "of capabilities around influence influencing scheduling now if it turns out that none of these do what you want",
    "start": "1202470",
    "end": "1209539"
  },
  {
    "text": "you press the big red button the the nuclear option which is custom scheduler",
    "start": "1209539",
    "end": "1215159"
  },
  {
    "start": "1211000",
    "end": "1211000"
  },
  {
    "text": "you can write a custom schedule in any language you want but it does need",
    "start": "1215159",
    "end": "1221519"
  },
  {
    "text": "access to the API server once you've got that that's the hard way once you've got",
    "start": "1221519",
    "end": "1227999"
  },
  {
    "text": "that it's actually very easy to use in your pods you would just specify the name of the scheduler so this would be",
    "start": "1227999",
    "end": "1235470"
  },
  {
    "text": "running in the cluster I'd be a pod or hopefully multiple four it's called my custom scheduler so there's an example",
    "start": "1235470",
    "end": "1242940"
  },
  {
    "text": "of this on the web where people somebody's implemented a scheduler using bash pretty sure that's not production",
    "start": "1242940",
    "end": "1249179"
  },
  {
    "text": "ready but worth mentioning okay so we",
    "start": "1249179",
    "end": "1256320"
  },
  {
    "text": "talked about influencing scheduling that's fine what if we need to get more",
    "start": "1256320",
    "end": "1262559"
  },
  {
    "text": "control what we want to start extending kubernetes what if we want to have",
    "start": "1262559",
    "end": "1271559"
  },
  {
    "start": "1270000",
    "end": "1270000"
  },
  {
    "text": "control over the resources that are created within our cluster we maybe have",
    "start": "1271559",
    "end": "1277049"
  },
  {
    "text": "some custom policies that certain that all resources must adhere to a particular standard so for example you",
    "start": "1277049",
    "end": "1284129"
  },
  {
    "text": "must say you might you might say they must all have a label or they must we'll have resource limits applied",
    "start": "1284129",
    "end": "1290070"
  },
  {
    "text": "something like that you might want to prevent certain resources from being",
    "start": "1290070",
    "end": "1296370"
  },
  {
    "text": "created in the first place you might be using ingress for everything you don't want people to create load balances or",
    "start": "1296370",
    "end": "1305070"
  },
  {
    "text": "you might want to inject additional logic when a resource is created so",
    "start": "1305070",
    "end": "1310530"
  },
  {
    "text": "we'll talk about a little bit later things like sto they inject their sidecar using this kind of approach to",
    "start": "1310530",
    "end": "1318500"
  },
  {
    "text": "do this we use something called admission controllers so essentially",
    "start": "1318770",
    "end": "1324870"
  },
  {
    "start": "1321000",
    "end": "1321000"
  },
  {
    "text": "this is code that intercepts the request that you make to the API server and you",
    "start": "1324870",
    "end": "1330570"
  },
  {
    "text": "can do something with it before it gets persisted there are a variety of controllers available controllers can be",
    "start": "1330570",
    "end": "1338100"
  },
  {
    "text": "validating so this means they will inspect the object so this is where you might say you must have a label",
    "start": "1338100",
    "end": "1344130"
  },
  {
    "text": "otherwise I'll reject your deployment there could be mutating mutating these",
    "start": "1344130",
    "end": "1349380"
  },
  {
    "text": "all change the objects so here you might say well you didn't specify a label so I will put a label on there you know team",
    "start": "1349380",
    "end": "1356550"
  },
  {
    "text": "equals idiots or something don't don't do that it's rude finally controllers can be both",
    "start": "1356550",
    "end": "1362940"
  },
  {
    "text": "admission controllers can be both it can be both mutating and validating",
    "start": "1362940",
    "end": "1368150"
  },
  {
    "text": "admission controllers are part of cube API server they get enabled or disabled as part of cubic cube API server so if",
    "start": "1368660",
    "end": "1376350"
  },
  {
    "text": "you're in the previous talk and I'm sure you know if you're running manage to Cuba Nettie's providers then you don't have access to cube API server you can't",
    "start": "1376350",
    "end": "1383760"
  },
  {
    "text": "set some of these flags the other problem in them is they're compiled into the API server binary so if you want to",
    "start": "1383760",
    "end": "1390390"
  },
  {
    "text": "create your own you're gonna have to fork kubernetes and modify good luck",
    "start": "1390390",
    "end": "1395820"
  },
  {
    "text": "keeping that one up today so it's actually a number of admission control",
    "start": "1395820",
    "end": "1401070"
  },
  {
    "text": "is built into kubernetes and now I'll talk about them in detail no I won't I I'm not going to talk about",
    "start": "1401070",
    "end": "1407790"
  },
  {
    "text": "these in great detail I think the key thing here is you need to check with your particular cloud provider to see if",
    "start": "1407790",
    "end": "1413850"
  },
  {
    "text": "they enable the admission controllers you expect where you need",
    "start": "1413850",
    "end": "1419540"
  },
  {
    "text": "let's have a look at the lifecycle of a request an API request and where these",
    "start": "1419540",
    "end": "1425480"
  },
  {
    "start": "1423000",
    "end": "1423000"
  },
  {
    "text": "controllers fit in so I make a request to the API and it hits the HTTP handler",
    "start": "1425480",
    "end": "1432280"
  },
  {
    "text": "handler just does the authorization and authentication checks it passes it to",
    "start": "1432280",
    "end": "1438530"
  },
  {
    "text": "the mutating and mission controllers so these are the things I may modify that request those modifications and the",
    "start": "1438530",
    "end": "1447620"
  },
  {
    "text": "original requests are validated against the object schema so you trying to do something you're trying to create something that doesn't exist now the",
    "start": "1447620",
    "end": "1456080"
  },
  {
    "text": "validating ones can kick in so the custom validating ones if you like now the reason why the validating ones come",
    "start": "1456080",
    "end": "1461960"
  },
  {
    "text": "at the end before after the mutating ones is obviously you could bypass the",
    "start": "1461960",
    "end": "1467060"
  },
  {
    "text": "object schema validation by mutating things if you didn't do it that way",
    "start": "1467060",
    "end": "1472490"
  },
  {
    "text": "around and finally that request that resource is persisted in create C D and then the",
    "start": "1472490",
    "end": "1478970"
  },
  {
    "text": "rest of that process kicks in the controller's for that particular resource kick in and they start doing",
    "start": "1478970",
    "end": "1483980"
  },
  {
    "text": "what they need to do now if we want to have some custom logic instead of having",
    "start": "1483980",
    "end": "1490310"
  },
  {
    "text": "to compile API serve ourselves and out our own logic to it there are two special admission controllers that we",
    "start": "1490310",
    "end": "1495980"
  },
  {
    "text": "can use they're called and they're River math for mutating admission web hooks",
    "start": "1495980",
    "end": "1502670"
  },
  {
    "text": "and validating admission web hooks as",
    "start": "1502670",
    "end": "1508220"
  },
  {
    "text": "far as I know all of the main cloud providers have enabled these particular admission controllers and they're pretty",
    "start": "1508220",
    "end": "1515660"
  },
  {
    "text": "cool because they allow us to do some extensibility with that modifying API",
    "start": "1515660",
    "end": "1522500"
  },
  {
    "start": "1518000",
    "end": "1518000"
  },
  {
    "text": "server so the mutating admission web hook allows you to modify resources or",
    "start": "1522500",
    "end": "1530630"
  },
  {
    "text": "create new resources when an API request comes in and as the validating one as",
    "start": "1530630",
    "end": "1536300"
  },
  {
    "text": "the name suggests allows you to validate it and potentially block an API request if it doesn't meet your particular",
    "start": "1536300",
    "end": "1542570"
  },
  {
    "text": "requirements the nice thing with these are they're web hooks web standard web",
    "start": "1542570",
    "end": "1550430"
  },
  {
    "text": "hooks so they're for they're just going to invoke a HTTP callback and the logic for that callback",
    "start": "1550430",
    "end": "1556700"
  },
  {
    "text": "can live anywhere you want it to it can be inside the concussed er it can be outside the cluster so let's have a",
    "start": "1556700",
    "end": "1567470"
  },
  {
    "text": "quick look at an admission web hook",
    "start": "1567470",
    "end": "1571659"
  },
  {
    "text": "so this is the configuration for admission webhook this is the yama can",
    "start": "1578550",
    "end": "1585010"
  },
  {
    "text": "everyone see that back okay yeah thumbs up cool so API version again um people are very",
    "start": "1585010",
    "end": "1592390"
  },
  {
    "text": "familiar with this resource coined is is a bit of a mouthful validating web of configuration metadata is my name and",
    "start": "1592390",
    "end": "1598720"
  },
  {
    "text": "then I give it some unique name so you normally say URL for your company or something and here what I'm saying is",
    "start": "1598720",
    "end": "1605280"
  },
  {
    "text": "these rules apply sorry the visual studio code",
    "start": "1605280",
    "end": "1610470"
  },
  {
    "text": "hopefully not helpfully is popping things in the way let me do this API",
    "start": "1610470",
    "end": "1616630"
  },
  {
    "text": "version 1 and on create operations for pods at this failure policy essentially",
    "start": "1616630",
    "end": "1623200"
  },
  {
    "text": "a failure policy says if the web hook fails for some reason this might be technical reason then fail you know",
    "start": "1623200",
    "end": "1629560"
  },
  {
    "text": "essentially it's a failsafe if there's a technical reason why the web hook doesn't fire you fail you treat it as a",
    "start": "1629560",
    "end": "1635950"
  },
  {
    "text": "failure and here's the interesting bit so here now we're saying we call whoops client config and you see the URL is",
    "start": "1635950",
    "end": "1643200"
  },
  {
    "text": "pointing to you as yeah hey as your website's API so what I'm doing here is",
    "start": "1643200",
    "end": "1650470"
  },
  {
    "text": "I'm actually invoking a web hook Aled ation web hook into Azure functions",
    "start": "1650470",
    "end": "1657990"
  },
  {
    "text": "so let's have looked at web hook the azure functions code so this is the",
    "start": "1657990",
    "end": "1663460"
  },
  {
    "text": "magic function SCADA I'll just use the node.js example I adapted one from Kelsey Hightower so the stuff at the top",
    "start": "1663460",
    "end": "1669670"
  },
  {
    "text": "you'll all recognize if you do as your functions already I just logged some",
    "start": "1669670",
    "end": "1675190"
  },
  {
    "text": "messages I get the request out of the body of the request you dig a bit little",
    "start": "1675190",
    "end": "1680320"
  },
  {
    "text": "bit deeper to get the pod and then what I'm doing is if if there's this this is",
    "start": "1680320",
    "end": "1688420"
  },
  {
    "text": "a response it expects so I'm going to set that up as a failure as a failure first and then I'm looking at all the",
    "start": "1688420",
    "end": "1693580"
  },
  {
    "text": "containers within that pod spec it's remember you can have more than one",
    "start": "1693580",
    "end": "1698650"
  },
  {
    "text": "container with in a pod spec so I'm looping through the containers and in this contrived example what I'm saying",
    "start": "1698650",
    "end": "1703900"
  },
  {
    "text": "is if the image so I'm saying this image which some of you saw in the last demo is a bad image we know it's about",
    "start": "1703900",
    "end": "1710770"
  },
  {
    "text": "imagery don't want to use it this is a contrived example there are better ways of doing this I suspect but what I say if the",
    "start": "1710770",
    "end": "1718120"
  },
  {
    "text": "image is this one then I'm gonna basically log a message saying it's a bad image and I'm going to send a",
    "start": "1718120",
    "end": "1723880"
  },
  {
    "text": "response back saying it's a failure and I'm gonna say this container which is bad image and the reason it's not",
    "start": "1723880",
    "end": "1729010"
  },
  {
    "text": "allowed and a 402 status code anything else just goes back as and allowed",
    "start": "1729010",
    "end": "1734590"
  },
  {
    "text": "equals true and I get sent back as an admission review so that's what for you",
    "start": "1734590",
    "end": "1740830"
  },
  {
    "text": "six lines of 48 if you include the braces lines of code so let's go to the",
    "start": "1740830",
    "end": "1748090"
  },
  {
    "text": "portal where I'm running this just make",
    "start": "1748090",
    "end": "1753850"
  },
  {
    "text": "sure I'm connected so let me just clear that so this is the ID function I've just popped the console up you don't",
    "start": "1753850",
    "end": "1759850"
  },
  {
    "text": "need to view this in the console but let's try so now in my in my cluster I'm",
    "start": "1759850",
    "end": "1768970"
  },
  {
    "text": "gonna apply that web book we just saw earlier it's ok apply that where books",
    "start": "1768970",
    "end": "1775120"
  },
  {
    "text": "now being deployed so now if I try and create the pod and hello so finally I do",
    "start": "1775120",
    "end": "1784090"
  },
  {
    "text": "K apply - f v1 run that cold stop has",
    "start": "1784090",
    "end": "1795460"
  },
  {
    "text": "your functions well all functions we can see now we've got an error error from the server image you're not allowed",
    "start": "1795460",
    "end": "1801220"
  },
  {
    "text": "error when creating bla bla bla bla now come over to the function and yes we",
    "start": "1801220",
    "end": "1807700"
  },
  {
    "text": "didn't see the you didn't clearly didn't connect properly so no ink",
    "start": "1807700",
    "end": "1813030"
  },
  {
    "text": "take my word for it did actually invoke that function what we can do is we can",
    "start": "1813030",
    "end": "1819190"
  },
  {
    "text": "do K ok events and we should see some",
    "start": "1819190",
    "end": "1824400"
  },
  {
    "text": "way let me hmm I thought you could see",
    "start": "1824400",
    "end": "1831760"
  },
  {
    "text": "it but maybe you can't so just to prove that it's not it's not kind of smoke and",
    "start": "1831760",
    "end": "1838990"
  },
  {
    "text": "mirrors let me try and apply the v2 pod so this now using the image the v2 image I'll show you the",
    "start": "1838990",
    "end": "1845400"
  },
  {
    "text": "pod spec just to prove the point so there's the one here's the one using the",
    "start": "1845400",
    "end": "1852720"
  },
  {
    "text": "T that one gets created so you see",
    "start": "1852720",
    "end": "1860130"
  },
  {
    "text": "that's running so that was the web hook being invoked through the azure function",
    "start": "1860130",
    "end": "1867020"
  },
  {
    "text": "now I chose validating because validation is not easier to write admissions a little bit harder but",
    "start": "1867020",
    "end": "1872940"
  },
  {
    "text": "you'll find examples if you're looking to do this let's go back to the slides",
    "start": "1872940",
    "end": "1879260"
  },
  {
    "text": "so so far we've seen enforcing the scheduling now we can use these web",
    "start": "1883610",
    "end": "1889530"
  },
  {
    "text": "hooks to influence what gets created and whenever a request comes in what if we",
    "start": "1889530",
    "end": "1895470"
  },
  {
    "text": "need to go further what if we need to create even more customizations if you",
    "start": "1895470",
    "end": "1901320"
  },
  {
    "text": "like we have an option to extend the kubernetes api we can actually build",
    "start": "1901320",
    "end": "1907590"
  },
  {
    "text": "abstractions on top of the kubernetes resources in fact we can create totally",
    "start": "1907590",
    "end": "1914910"
  },
  {
    "text": "custom resources and treat them as if they were kubernetes resources using the same commands that you're familiar with",
    "start": "1914910",
    "end": "1920730"
  },
  {
    "text": "using the cube control now if you want to extend kubernetes api you have a few",
    "start": "1920730",
    "end": "1928020"
  },
  {
    "text": "options the first one is to create an extension API server now this is quite",
    "start": "1928020",
    "end": "1933600"
  },
  {
    "text": "hard because you have to essentially implement an API server from scratch and then you can aggregate that along with",
    "start": "1933600",
    "end": "1939990"
  },
  {
    "text": "the existing API server and this is was the only option in the past another",
    "start": "1939990",
    "end": "1946230"
  },
  {
    "text": "option is to use custom resource definitions now this is the thing that most of you here who are familiar with kubernetes will have heard of already we",
    "start": "1946230",
    "end": "1954990"
  },
  {
    "text": "have custom controllers now often custom resource definitions and custom",
    "start": "1954990",
    "end": "1960030"
  },
  {
    "text": "controllers are bundled as one or they're conflated so we'll say it's a CRD when actually we're not talking",
    "start": "1960030",
    "end": "1965700"
  },
  {
    "text": "about CRD so let's talk about series more specifically so this is a new",
    "start": "1965700",
    "end": "1971190"
  },
  {
    "start": "1970000",
    "end": "1970000"
  },
  {
    "text": "resource type that will sit alongside the existing resources within kubernetes and just to clarify by resources I mean",
    "start": "1971190",
    "end": "1977970"
  },
  {
    "text": "pods deploy services ingress etc etc what we can do",
    "start": "1977970",
    "end": "1984570"
  },
  {
    "text": "is we can use cube control to create these to delete these to manage these like we would these custom resource",
    "start": "1984570",
    "end": "1991380"
  },
  {
    "text": "definitions are persisted in at CD so we don't need to bring our own persistence with the API servers we would have to",
    "start": "1991380",
    "end": "1997800"
  },
  {
    "text": "write our own we'd have to use our own persistence as well the key thing with",
    "start": "1997800",
    "end": "2005270"
  },
  {
    "text": "CR D is custom resource definitions is they are pretty much useless without a",
    "start": "2005270",
    "end": "2010880"
  },
  {
    "text": "controller to act on the resource so let's have a look at a custom resource",
    "start": "2010880",
    "end": "2017030"
  },
  {
    "text": "definition so again familiar looking yeah mo so",
    "start": "2017030",
    "end": "2022490"
  },
  {
    "text": "we've now got a custom resource definition I've got some metadata for it it lives in a group an API group called",
    "start": "2022490",
    "end": "2028760"
  },
  {
    "text": "tester example comm version one you'll see where that kicks in later this particular custom resource definition is",
    "start": "2028760",
    "end": "2035150"
  },
  {
    "text": "scoped to the namespaces you can have a cluster wide one as well and then this",
    "start": "2035150",
    "end": "2040190"
  },
  {
    "text": "thing is called foods as a plural singular is a foo and it's a resource kind of foo and I've also specified a",
    "start": "2040190",
    "end": "2047180"
  },
  {
    "text": "short name fo like you were didn't get Pio get pods and get SVC and sort of get services",
    "start": "2047180",
    "end": "2053440"
  },
  {
    "text": "so once I've created their custom resource definition I can then crane any",
    "start": "2053440",
    "end": "2058760"
  },
  {
    "start": "2058000",
    "end": "2058000"
  },
  {
    "text": "instance of that resource so now just like my pods my deployment manifest to",
    "start": "2058760",
    "end": "2065360"
  },
  {
    "text": "my pod spec would look like I say a PA API version now that's the API group I specified earlier here's my resource",
    "start": "2065360",
    "end": "2072110"
  },
  {
    "text": "client ooh metadata forever r1 and then the spec I can put wherever I want that's the",
    "start": "2072110",
    "end": "2077720"
  },
  {
    "text": "information that I will get in the controller if I build a controller for this as I said by themselves these are",
    "start": "2077720",
    "end": "2084830"
  },
  {
    "text": "useless but you can go and do this now and let's have a quick look at an example so I think this is a little",
    "start": "2084830",
    "end": "2091550"
  },
  {
    "text": "video just showing you the basics so I can apply that cube custom resource definition and it tells me it's created",
    "start": "2091550",
    "end": "2099340"
  },
  {
    "text": "now I've got a resource called booze that was the same yeah my father just showed you actually now I can do Q",
    "start": "2101640",
    "end": "2108940"
  },
  {
    "text": "cube control get foo you know that's not built-in is it in fact I can get Q control get fo I can see the object I",
    "start": "2108940",
    "end": "2115839"
  },
  {
    "text": "just created then I can delete it that's pretty much all I can do so actually",
    "start": "2115839",
    "end": "2122079"
  },
  {
    "text": "it's pretty useless and I've just done a little bit of a crowd operation don't use that CD as a database and do this we",
    "start": "2122079",
    "end": "2128740"
  },
  {
    "text": "have storing records please so you need",
    "start": "2128740",
    "end": "2134319"
  },
  {
    "start": "2134000",
    "end": "2134000"
  },
  {
    "text": "a custom controller some custom controllers allow you to extend or change the behavior of resources now we",
    "start": "2134319",
    "end": "2141279"
  },
  {
    "text": "often talk when I've literally made the mistake of saying in a custom you need a custom controller for a custom resource you do the custom controller can",
    "start": "2141279",
    "end": "2148390"
  },
  {
    "text": "actually operate on existing resources so you can have your own custom controller that has some something totally different when a pod is created",
    "start": "2148390",
    "end": "2158940"
  },
  {
    "text": "they often paired with custom resource definitions because they the things that actually power the custom resource",
    "start": "2159990",
    "end": "2165730"
  },
  {
    "text": "definitions they are very often implemented and go in fact I don't know",
    "start": "2165730",
    "end": "2172839"
  },
  {
    "text": "of any which any official ones when in production ones that aren't implemented in go I don't think that's a hard limit",
    "start": "2172839",
    "end": "2180880"
  },
  {
    "text": "you can actually use other client libraries it's just custom controllers have to use the API machinery client go library and",
    "start": "2180880",
    "end": "2188950"
  },
  {
    "text": "it gets a little bit gnarly this is not a topic for in great details not topic",
    "start": "2188950",
    "end": "2194529"
  },
  {
    "text": "for a talk this is a workshop and there are companies who do workshops on extending kubernetes you often hear the",
    "start": "2194529",
    "end": "2202779"
  },
  {
    "text": "term operator and essentially one Operator is is the combination of a custom resource definition and the",
    "start": "2202779",
    "end": "2209529"
  },
  {
    "text": "controller that goes with it so if you before you run away and kind of start",
    "start": "2209529",
    "end": "2214809"
  },
  {
    "text": "creating your own operators it's worth knowing that there's a hub of operators in the wild a the text is a little bit",
    "start": "2214809",
    "end": "2222940"
  },
  {
    "text": "small but I mean that's just all the that's all the a so there's an AWS one for example so the AWS operator allows",
    "start": "2222940",
    "end": "2230710"
  },
  {
    "text": "you to basically interact with a diverse Tresor is through kubernetes so you can find",
    "start": "2230710",
    "end": "2236920"
  },
  {
    "text": "more there one of the things that makes writing operate is slightly easier is using something like operator framework",
    "start": "2236920",
    "end": "2244930"
  },
  {
    "start": "2243000",
    "end": "2243000"
  },
  {
    "text": "so this was created by the core OS team I believe at the time and it's not easy",
    "start": "2244930",
    "end": "2252190"
  },
  {
    "text": "by any stretch of the imagination but it does a lot of the plumbing so it does love the templating for you that you might need there's a operator within the",
    "start": "2252190",
    "end": "2262240"
  },
  {
    "text": "kubernetes documentation as an example that's probably a good place to start looking at this as well if you're really",
    "start": "2262240",
    "end": "2270580"
  },
  {
    "text": "interested in writing operators I would encourage you to also look at your language of choice see if there's a client library chances",
    "start": "2270580",
    "end": "2277240"
  },
  {
    "text": "I it's an unloved client and maybe help bring that one up as well goes awesome bar it's always good to get other",
    "start": "2277240",
    "end": "2284170"
  },
  {
    "text": "languages working knowing these things as well so we're going to make it take a",
    "start": "2284170",
    "end": "2289300"
  },
  {
    "text": "bit of a shift now we're going to shift on to scaling now there's another talk",
    "start": "2289300",
    "end": "2296830"
  },
  {
    "text": "tomorrow by Luis who's gonna dive a lot deeper into scaling than I am I want you",
    "start": "2296830",
    "end": "2303580"
  },
  {
    "text": "to show you one particular feature that you may have come across I heard about particularly more recently I wanted to",
    "start": "2303580",
    "end": "2309700"
  },
  {
    "text": "demonstrate so when we talk about scaling we have horizontal pod",
    "start": "2309700",
    "end": "2314860"
  },
  {
    "text": "autoscaler pretty sure everyone here has heard of this essentially this allows",
    "start": "2314860",
    "end": "2319960"
  },
  {
    "text": "you to scale the number of pods based on metrics there's a v2 HPA which is",
    "start": "2319960",
    "end": "2326920"
  },
  {
    "text": "actually quite nice because it allows you to scale based on external metrics so you can pull in metrics from some",
    "start": "2326920",
    "end": "2332140"
  },
  {
    "text": "other service and scale your server your application and if you were following",
    "start": "2332140",
    "end": "2338260"
  },
  {
    "text": "the build news Microsoft open source project called Qaeda al Qaeda which",
    "start": "2338260",
    "end": "2344800"
  },
  {
    "text": "allows you to scale resources down to zero and then wake them back up when a request comes in which is pretty cool",
    "start": "2344800",
    "end": "2350560"
  },
  {
    "text": "because you can't ordinary scale down to zero we have the one that's probably not",
    "start": "2350560",
    "end": "2356560"
  },
  {
    "text": "so well known the virtual sorry the vertical pod autoscaler so essentially this increases the amount of resources",
    "start": "2356560",
    "end": "2363040"
  },
  {
    "text": "that are given to a resaw to a pod when it needs to scale so we see one is scaling out this one is",
    "start": "2363040",
    "end": "2370989"
  },
  {
    "text": "scaling up then the third option here we have the cluster water scaler so the",
    "start": "2370989",
    "end": "2376479"
  },
  {
    "text": "cluster autoscaler will scale the number of nodes within your cluster and the way",
    "start": "2376479",
    "end": "2381999"
  },
  {
    "text": "it does this it determines if there are pods waiting to be scheduled and essentially that's a trigger that their",
    "start": "2381999",
    "end": "2387939"
  },
  {
    "text": "pods that cannot be scheduled because there's not enough resources and it will start it will trigger an auto scale now",
    "start": "2387939",
    "end": "2394989"
  },
  {
    "text": "the auto scale it triggers is depends on your cloud provider if you're running in",
    "start": "2394989",
    "end": "2399999"
  },
  {
    "text": "AWS this is what scale groups having the column in Asia this will this is in a KS",
    "start": "2399999",
    "end": "2406539"
  },
  {
    "text": "in preview it uses the VM scale sets the problem in scaling your clusters that",
    "start": "2406539",
    "end": "2412419"
  },
  {
    "text": "takes time it might take a minute might take 3-4 minutes let's be let's be realistic I'll take four or five minutes",
    "start": "2412419",
    "end": "2419309"
  },
  {
    "text": "what if your load is very spiky and four or five minutes is just too slow we now",
    "start": "2419309",
    "end": "2426489"
  },
  {
    "text": "have this additional option and it's called a virtual node virtual cubelet /",
    "start": "2426489",
    "end": "2432159"
  },
  {
    "text": "virtual node i'll try and clarify the terminology in the next slide so this is",
    "start": "2432159",
    "end": "2438219"
  },
  {
    "text": "an open-source project it was actually originally created by the Microsoft team and it's now it's part of the CNC F they",
    "start": "2438219",
    "end": "2444339"
  },
  {
    "text": "donated it essentially allows you to connect some external compute resource",
    "start": "2444339",
    "end": "2449819"
  },
  {
    "text": "into kubernetes and make it appear as if it's another node in your cluster the",
    "start": "2449819",
    "end": "2455919"
  },
  {
    "text": "key difference is this node may have infinite capacity so kind of how this",
    "start": "2455919",
    "end": "2461469"
  },
  {
    "text": "works is within my cluster I have three real nodes if you like whether the VM is",
    "start": "2461469",
    "end": "2467199"
  },
  {
    "text": "a bare-metal I deploy the word the virtual Kubler is the technology that",
    "start": "2467199",
    "end": "2472659"
  },
  {
    "text": "powers the virtual node so through that we create this node it looks like another node but it exposes the same",
    "start": "2472659",
    "end": "2479709"
  },
  {
    "text": "kind of functionality you'd expect from a node so you can you can treat pods deal with pods on that node you can also",
    "start": "2479709",
    "end": "2486509"
  },
  {
    "text": "call some of the node functionality the key things when you schedule something on this node he actually gets scheduled",
    "start": "2486509",
    "end": "2492909"
  },
  {
    "text": "or put on to ever the backing compute providers so there are a number of these",
    "start": "2492909",
    "end": "2499479"
  },
  {
    "start": "2499000",
    "end": "2499000"
  },
  {
    "text": "providers as you contained instances a CI is the serverless container offering from",
    "start": "2499479",
    "end": "2506099"
  },
  {
    "text": "Microsoft Fargate is the the roughly the equivalent and then there's very similar",
    "start": "2506099",
    "end": "2512950"
  },
  {
    "text": "implementation so how she call service for information and then IOT edge this actually when they announced it publicly",
    "start": "2512950",
    "end": "2518349"
  },
  {
    "text": "yesterday I think we'll the day before now they're using this to essentially allow you to run IOT edge on a on an",
    "start": "2518349",
    "end": "2525069"
  },
  {
    "text": "on-prem kubernetes cluster for IOT purposes quickly touch on as your",
    "start": "2525069",
    "end": "2530710"
  },
  {
    "text": "container instances where those are not familiar with it as I said this is serverless container so trying to get all the buzzwords in here the key thing",
    "start": "2530710",
    "end": "2537640"
  },
  {
    "text": "is there's no infrastructure required to run a container I would do from the command line and I do a Zed container",
    "start": "2537640",
    "end": "2543490"
  },
  {
    "text": "great give it the name of the container and pretty much that's all I need to do and that container will be up and",
    "start": "2543490",
    "end": "2549279"
  },
  {
    "text": "running within a usually seconds the key things you pay per second for the",
    "start": "2549279",
    "end": "2555279"
  },
  {
    "text": "billing of that you stop the container you stop paying and as of about a month",
    "start": "2555279",
    "end": "2561910"
  },
  {
    "text": "ago the pricing on a CI was cut dramatically it's now very very similar",
    "start": "2561910",
    "end": "2567099"
  },
  {
    "text": "to running the equivalent size server on as your web apps for example so this",
    "start": "2567099",
    "end": "2575859"
  },
  {
    "text": "really quite good when you're testing images for shortly short-lived containers and the bit that's interesting is for bursting for sudden",
    "start": "2575859",
    "end": "2581799"
  },
  {
    "text": "spikes so you see where I might be going with this so if I take my virtual Kubler",
    "start": "2581799",
    "end": "2587529"
  },
  {
    "start": "2585000",
    "end": "2585000"
  },
  {
    "text": "my virtual node if you like and in my cluster I use the ACI provider and then",
    "start": "2587529",
    "end": "2594819"
  },
  {
    "text": "my cluster is running and suddenly I get spike in traffic the cluster gets hot because of that virtual Kuebler",
    "start": "2594819",
    "end": "2601559"
  },
  {
    "text": "containers can actually start overflowing into a CI and because a CI is essentially",
    "start": "2601559",
    "end": "2607089"
  },
  {
    "text": "unlimited in the resource you can continue to take that load and potentially in the meantime I might be",
    "start": "2607089",
    "end": "2613480"
  },
  {
    "text": "scaling my cluster if I think this is an ongoing load if you want to enable the",
    "start": "2613480",
    "end": "2619869"
  },
  {
    "text": "virtual node in a chaos it's just the tick box it's just down there enabled let's have",
    "start": "2619869",
    "end": "2628150"
  },
  {
    "start": "2620000",
    "end": "2620000"
  },
  {
    "text": "a look at this as a demo this one thing going to use a video just because it",
    "start": "2628150",
    "end": "2633369"
  },
  {
    "text": "shows it a bit clearer I think and I remember to show the video",
    "start": "2633369",
    "end": "2639110"
  },
  {
    "text": "this time so what I've got here is a",
    "start": "2639110",
    "end": "2644530"
  },
  {
    "text": "kubernetes IKS cluster and I've got the virtual node enabled so I've got see",
    "start": "2644530",
    "end": "2655580"
  },
  {
    "text": "there I've got three nodes and I've got this AC I know the fourth one there is a Linux one you see says VK there I",
    "start": "2655580",
    "end": "2662560"
  },
  {
    "text": "described that particular node the virtual node we see a load of stuff",
    "start": "2662560",
    "end": "2669730"
  },
  {
    "text": "interesting here is if you look up I doesn't really matter you got some labels and you can see whoops I'll get",
    "start": "2669730",
    "end": "2677090"
  },
  {
    "text": "rid of that just in the way you can see that it has key thing here is it's got taint so we're tainting this version are",
    "start": "2677090",
    "end": "2685730"
  },
  {
    "text": "we saying don't schedule anything on this virtual node and that kind of makes sense let me pause that second just to drive that point oh come back a second",
    "start": "2685730",
    "end": "2695470"
  },
  {
    "text": "so we're tainting it to come back to what I started with we're saying don't schedule on this node accidentally and",
    "start": "2698140",
    "end": "2706100"
  },
  {
    "text": "the reason for that is we're gonna pay for out return instances if we have capacity in our cluster already why",
    "start": "2706100",
    "end": "2711230"
  },
  {
    "text": "would we want to put if we don't specify that then kubernetes may well schedule on there especially when you see there",
    "start": "2711230",
    "end": "2718400"
  },
  {
    "text": "has 4 terabytes of RAM apparently just that shot there but it has 4 terabytes",
    "start": "2718400",
    "end": "2723680"
  },
  {
    "text": "of RAM some crazy numbers they use so we",
    "start": "2723680",
    "end": "2729770"
  },
  {
    "text": "have this node but it won't get scheduled by default so now I've got a",
    "start": "2729770",
    "end": "2738820"
  },
  {
    "text": "sample application which is like a web application it's like an e-commerce",
    "start": "2738820",
    "end": "2743840"
  },
  {
    "text": "application if you like and for some insane reason I'm running only a single",
    "start": "2743840",
    "end": "2749690"
  },
  {
    "text": "instance of it but hey let's not worry about that I get the pods of now we can see that",
    "start": "2749690",
    "end": "2755630"
  },
  {
    "text": "it's running on one of the actual nodes there's nothing running on the virtual node you can see that there",
    "start": "2755630",
    "end": "2762579"
  },
  {
    "text": "while look at the that particular pod if I if I look at some of the details on it",
    "start": "2767620",
    "end": "2773950"
  },
  {
    "text": "what we'll see is that it has a",
    "start": "2773950",
    "end": "2779780"
  },
  {
    "text": "toleration slightly C fast couldn't find",
    "start": "2779780",
    "end": "2786770"
  },
  {
    "text": "it we can see there it has a toleration for a CI for that for that virtual node",
    "start": "2786770",
    "end": "2795110"
  },
  {
    "text": "so this point you're thinking well why isn't it been scheduled on there then and the reason it doesn't get scheduled",
    "start": "2795110",
    "end": "2800510"
  },
  {
    "text": "on there is because although we've said we tolerate that node what we can now do",
    "start": "2800510",
    "end": "2805910"
  },
  {
    "text": "is use node anti affinity and say we prefer not to run on that node so now",
    "start": "2805910",
    "end": "2812570"
  },
  {
    "text": "what we're saying is I've got that node I can use it but I rather you didn't unless you really had to so let's go to",
    "start": "2812570",
    "end": "2818540"
  },
  {
    "text": "the app it's like a web app and I've been busy buying you can't see this my laptop screen is flicking really badly",
    "start": "2818540",
    "end": "2825020"
  },
  {
    "text": "I've got a surface and it's dying so I do need another one of these unfortunate",
    "start": "2825020",
    "end": "2830930"
  },
  {
    "text": "this one doesn't really ship anything so there's about $13,000 in the basket there I think so let's imagine there's a",
    "start": "2830930",
    "end": "2837380"
  },
  {
    "text": "sudden spike in traffic so here this is the AKS running and let me just pause",
    "start": "2837380",
    "end": "2842540"
  },
  {
    "text": "this a thing cuz I'm gonna probably talk to you slowly and what we can see is",
    "start": "2842540",
    "end": "2847640"
  },
  {
    "text": "this is the metrics coming from the from a KS so if you haven't used their KS and seen the metrics quite nice we can see",
    "start": "2847640",
    "end": "2854120"
  },
  {
    "text": "the metrics I think this application is a combination of nodejs and various other things actually it's not necessarily",
    "start": "2854120",
    "end": "2859970"
  },
  {
    "text": "dotnet we can see we've got pretty much hardly any requests coming in our request latency is something like yeah",
    "start": "2859970",
    "end": "2867080"
  },
  {
    "text": "one millisecond or something call quite see my screen and that's because there's nothing running so I'm going to do now",
    "start": "2867080",
    "end": "2873680"
  },
  {
    "text": "in the cloud shell at the bottom here",
    "start": "2873680",
    "end": "2877000"
  },
  {
    "text": "I'm going to run I'm going to set up this demo so over this side now I'm",
    "start": "2879280",
    "end": "2886040"
  },
  {
    "text": "sorry to run a load test using this tool called hey which is really cool very easy to start doing load testing so if",
    "start": "2886040",
    "end": "2891920"
  },
  {
    "text": "you look up there now you'll see a massive spike so we went from 0 to 10 requests per second and",
    "start": "2891920",
    "end": "2897470"
  },
  {
    "text": "initially we're seeing a little increase in our latency so our request durations gone up to 500 milliseconds if we keep",
    "start": "2897470",
    "end": "2904460"
  },
  {
    "text": "an eye on that and on the left hand pane if I now do get pods on that store pod",
    "start": "2904460",
    "end": "2911800"
  },
  {
    "text": "we can see there are a lot more pods we see more pods are being created so we're",
    "start": "2911800",
    "end": "2917869"
  },
  {
    "text": "now scaling and we were scaling in that time that's real-time I haven't chopped that video anything that's how long it",
    "start": "2917869",
    "end": "2923240"
  },
  {
    "text": "took to start scaling now if we look at the way these pods are running why now",
    "start": "2923240",
    "end": "2933380"
  },
  {
    "text": "do you get pods so I'm going to filter specifically to the online pods and I'm",
    "start": "2933380",
    "end": "2939020"
  },
  {
    "text": "gonna look at where they're running so you can see that all running all the other pods are running on the virtual node so now these are spun off they're",
    "start": "2939020",
    "end": "2948230"
  },
  {
    "text": "running on a CI I'm paying for these containers paying fractions of a penny at the moment from fractions of a",
    "start": "2948230",
    "end": "2955250"
  },
  {
    "text": "fractions of a penny and now if you notice that load came back down again",
    "start": "2955250",
    "end": "2960440"
  },
  {
    "text": "now that sorry that request time actually came down even though the load is continuing to go up our request time",
    "start": "2960440",
    "end": "2966109"
  },
  {
    "text": "has actually come down now warm was bombed and their some of them so now if",
    "start": "2966109",
    "end": "2971150"
  },
  {
    "text": "I kill that load what happens now is",
    "start": "2971150",
    "end": "2978950"
  },
  {
    "text": "this it takes about 60 to 90 seconds to cool down now I didn't want to wait six to 90 seconds I said off a long time",
    "start": "2978950",
    "end": "2985609"
  },
  {
    "text": "when he's standing up on stage so I've chopped the video but when I do get pods",
    "start": "2985609",
    "end": "2991160"
  },
  {
    "text": "again after that 90 seconds or so we can see we're now back to that pod that was",
    "start": "2991160",
    "end": "2996230"
  },
  {
    "text": "running on our actual node so that load disappeared we stopped paying for all",
    "start": "2996230",
    "end": "3003070"
  },
  {
    "text": "those containers in ACI there are normal containers running in a CI and we're now back to where we were",
    "start": "3003070",
    "end": "3009599"
  },
  {
    "text": "I'm going to do that again just the first bit just to show how quickly you scales so just kick the load off and we",
    "start": "3009599",
    "end": "3018700"
  },
  {
    "text": "can see so that was what five six seconds nothing yet I do that one more",
    "start": "3018700",
    "end": "3024310"
  },
  {
    "text": "time how long has it been 15 seconds maybe I",
    "start": "3024310",
    "end": "3031099"
  },
  {
    "text": "don't know time is time is relative there we are it's time to see it scaling so that's how quick it scales we're not",
    "start": "3031099",
    "end": "3038539"
  },
  {
    "text": "going to watch that again I just wanna show you again just in case you missed it the first time so we have about 10",
    "start": "3038539",
    "end": "3047180"
  },
  {
    "text": "minutes",
    "start": "3047180",
    "end": "3049479"
  },
  {
    "text": "so I want to quickly recap what we saw there because we bought together some things I talked about earlier and it's",
    "start": "3059070",
    "end": "3064740"
  },
  {
    "start": "3060000",
    "end": "3060000"
  },
  {
    "text": "worth just reiterating for anyone who just to make a little bit clearer so that virtual node we tainted it to",
    "start": "3064740",
    "end": "3070770"
  },
  {
    "text": "prevent accidental scheduling because that will cost us money for no reason then the e-commerce deployment we said",
    "start": "3070770",
    "end": "3078530"
  },
  {
    "text": "we want to tolerate taint and we put an",
    "start": "3078530",
    "end": "3083970"
  },
  {
    "text": "anti affinity to prevent it being put on there unless it needed to you so",
    "start": "3083970",
    "end": "3090300"
  },
  {
    "text": "hopefully that kind of explains that concept the virtual node is really cool you can imagine where we may be going",
    "start": "3090300",
    "end": "3097200"
  },
  {
    "text": "with virtual nodes in terms of surveillance all the things I want to do",
    "start": "3097200",
    "end": "3103620"
  },
  {
    "text": "a bit of a crunching gearchange at this point and talk about service to service communications I'm not going to spend",
    "start": "3103620",
    "end": "3109290"
  },
  {
    "text": "too long on this because I've done a talk previously where I go into a lot more detail and I think there may be a",
    "start": "3109290",
    "end": "3115740"
  },
  {
    "text": "talk here if not there's nearly always another talk on service meshes at these kinds of events so I didn't want to",
    "start": "3115740",
    "end": "3122730"
  },
  {
    "text": "overlap too much so the key reason why we need things like service machines is",
    "start": "3122730",
    "end": "3129270"
  },
  {
    "start": "3125000",
    "end": "3125000"
  },
  {
    "text": "because the built-in offerings in kubernetes are a little bit light so we have pod security policies which allow",
    "start": "3129270",
    "end": "3135780"
  },
  {
    "text": "us to control what pods can access which other things we have network policies and we have ingress the ingress in",
    "start": "3135780",
    "end": "3141900"
  },
  {
    "text": "particular is very light it allows you to do path based routing house base host host based routing but it doesn't let",
    "start": "3141900",
    "end": "3151620"
  },
  {
    "text": "you do anything else when we want to do traffic shifting traffic management it",
    "start": "3151620",
    "end": "3158190"
  },
  {
    "text": "allows us to power lots of different scenarios it allows us to do canary deployments we can't really do canary",
    "start": "3158190",
    "end": "3164460"
  },
  {
    "text": "deployments very easily in the built-in stuff within kubernetes allows you to do",
    "start": "3164460",
    "end": "3170070"
  },
  {
    "text": "a be testing we can deploy two versions and we can test the different responses",
    "start": "3170070",
    "end": "3175470"
  },
  {
    "text": "we get we can do the thing I really really think is very cool we can launch",
    "start": "3175470",
    "end": "3181650"
  },
  {
    "text": "application Darkly and what this means is we can deploy our application into production and it can experience",
    "start": "3181650",
    "end": "3188400"
  },
  {
    "text": "production loads without actually ever being visible to the users the way this works is the traffic is",
    "start": "3188400",
    "end": "3194390"
  },
  {
    "text": "actually mirrored by the service mission sent to your existing application and also sent to your new application this",
    "start": "3194390",
    "end": "3201290"
  },
  {
    "text": "is a really powerful way of understanding how your application is going to behave in production before you",
    "start": "3201290",
    "end": "3206570"
  },
  {
    "text": "actually launch it to your users we all know that testing anywhere else is not quite as good as production and as I",
    "start": "3206570",
    "end": "3215930"
  },
  {
    "text": "kind of touched on in the previous talk as well we can we can use traffic routing to access legacy and you know",
    "start": "3215930",
    "end": "3224390"
  },
  {
    "text": "cloud native applications most of the service measures have the ability to also run on VMs Linux VMs typically and",
    "start": "3224390",
    "end": "3231530"
  },
  {
    "text": "you can also then essentially bring them into a service mesh so I mentioned service mesh a couple of times probably",
    "start": "3231530",
    "end": "3236810"
  },
  {
    "start": "3236000",
    "end": "3236000"
  },
  {
    "text": "worth just clarifying what service mesh is this is a quote from buoyant and it",
    "start": "3236810",
    "end": "3242720"
  },
  {
    "text": "says service mesh is dedicated infrastructure or handling service to service communications the key thing is",
    "start": "3242720",
    "end": "3248540"
  },
  {
    "text": "when we talk about micro service in the cloud native we've gone from having applications which are making in memory",
    "start": "3248540",
    "end": "3254240"
  },
  {
    "text": "function calls to now making Network calls and if you're familiar with the",
    "start": "3254240",
    "end": "3259250"
  },
  {
    "text": "fallacies of you know distributed computing we say the network is not you know we say the networks were reliable",
    "start": "3259250",
    "end": "3265220"
  },
  {
    "text": "force but it's not reliable so one of the most well known service machines the",
    "start": "3265220",
    "end": "3271430"
  },
  {
    "text": "one that probably most people have heard of is Sto sto is a open source project",
    "start": "3271430",
    "end": "3277369"
  },
  {
    "start": "3274000",
    "end": "3274000"
  },
  {
    "text": "being led by Google lyft and IBM it's essentially a Google product I think",
    "start": "3277369",
    "end": "3283070"
  },
  {
    "text": "most of the engineers are from Google I might be wrong now but I believe that's the case it's not currently a CNC F",
    "start": "3283070",
    "end": "3290690"
  },
  {
    "text": "project so it's not currently donating the CNC F and this is probably why I've",
    "start": "3290690",
    "end": "3297050"
  },
  {
    "text": "not had anybody from Microsoft in a formal capacity mention it and in fact AWS have recently launched the app mesh",
    "start": "3297050",
    "end": "3304040"
  },
  {
    "text": "which is their service mesh offering so",
    "start": "3304040",
    "end": "3310580"
  },
  {
    "text": "he runs on top of kubernetes and actually other platforms as well and he extends the capabilities now we've talked about how we extend kubernetes",
    "start": "3310580",
    "end": "3316640"
  },
  {
    "text": "and that's exactly what is here does it uses custom resource definitions custom controllers to do that so the features",
    "start": "3316640",
    "end": "3323750"
  },
  {
    "text": "it provides gives you Network error handling and refry logic and circuit breakers and all those things now where",
    "start": "3323750",
    "end": "3330689"
  },
  {
    "text": "dotnet developers are most of us are and we probably used to libraries like poly and you wonder why would I need this thing if I've got poly service meshes",
    "start": "3330689",
    "end": "3339420"
  },
  {
    "text": "pushed this concern down to the infrastructure layer if you like a software-defined infrastructure but it's still infrastructure so our applications",
    "start": "3339420",
    "end": "3347249"
  },
  {
    "text": "don't need to have that particular library and essentially if you imagine if you had a bug in poly you would have",
    "start": "3347249",
    "end": "3353039"
  },
  {
    "text": "to redeploy all your applications I used poly to fix that bug whereas here you would you would patch the actual service",
    "start": "3353039",
    "end": "3358559"
  },
  {
    "text": "mesh the other thing with that is obviously if you're using different language you have to implement the same",
    "start": "3358559",
    "end": "3364439"
  },
  {
    "text": "logic in another language and there may be differences it still allows you to do rate limiting so if you've got a service",
    "start": "3364439",
    "end": "3370559"
  },
  {
    "text": "that's misbehaving or you just need to control the downstream effect the herding the herding effect you can apply",
    "start": "3370559",
    "end": "3378660"
  },
  {
    "text": "rate limiting it allows you to do traffic shifting and mirroring mirroring",
    "start": "3378660",
    "end": "3383789"
  },
  {
    "text": "is what you use for that launching darkly this is what allows you to send subsets of traffic based on any of the",
    "start": "3383789",
    "end": "3388979"
  },
  {
    "text": "layer 7 values so this could be header values there could be percentage of traffic it allows you to inject false so",
    "start": "3388979",
    "end": "3398519"
  },
  {
    "text": "when we're doing distributed applications we need to test faults and it becomes a lot more difficult",
    "start": "3398519",
    "end": "3404160"
  },
  {
    "text": "so with this year we can inject false in a very consistent reliable manner can also using a fault injection and traffic",
    "start": "3404160",
    "end": "3410819"
  },
  {
    "text": "shifting to prank your colleagues by making sure the certain colleagues always get the same fault and no one else does but yeah so things like list",
    "start": "3410819",
    "end": "3421380"
  },
  {
    "text": "you allow you to secure service to service communications so they will encrypt the traffic and they will apply policies that prevent certain pods from",
    "start": "3421380",
    "end": "3427650"
  },
  {
    "text": "talking to other pods and finally they allow you to have some visibility of",
    "start": "3427650",
    "end": "3434160"
  },
  {
    "text": "their requests and where they've been going the distributed tracing so I said",
    "start": "3434160",
    "end": "3439439"
  },
  {
    "text": "if you want to see more on some of these as an example of the video I'll link to at the end will will show that social",
    "start": "3439439",
    "end": "3446009"
  },
  {
    "text": "wrap it up so there are many constructs within kubernetes that let you control the pod scheduling and these admission",
    "start": "3446009",
    "end": "3453359"
  },
  {
    "text": "web hooks are a nice I think very accessible way of doing some extensions without needing to go",
    "start": "3453359",
    "end": "3459810"
  },
  {
    "text": "too far and of course when you need to you have that control again where I think Cuba Nettie's is is so fantastic",
    "start": "3459810",
    "end": "3467040"
  },
  {
    "text": "is we've got so many options and then we can still extend it further if we want to as well then this virtual node I",
    "start": "3467040",
    "end": "3473370"
  },
  {
    "text": "think is very cool because we probably heading towards a place where we will have servlets kubernetes so if we want",
    "start": "3473370",
    "end": "3478890"
  },
  {
    "text": "to manage the communities provider we don't have the master nose to deal with anyway and now if our VMs will become",
    "start": "3478890",
    "end": "3484560"
  },
  {
    "text": "virtual nodes then we have no infrastructure to manage as part of communities so that's pretty cool you",
    "start": "3484560",
    "end": "3491460"
  },
  {
    "text": "want to learn more that auto-scaling example I showed you is that that github",
    "start": "3491460",
    "end": "3496560"
  },
  {
    "text": "repo up there this is that video I'm linked to I mentioned it from Sydney last year and then cat a coder how many",
    "start": "3496560",
    "end": "3504660"
  },
  {
    "text": "people here have heard of cat coda okay but still only a handful of people so cat code is an online learning",
    "start": "3504660",
    "end": "3510420"
  },
  {
    "text": "platform where you can go and play around with nearly every cloud native technology you can think of for real in",
    "start": "3510420",
    "end": "3517560"
  },
  {
    "text": "a browser so you don't need to install in a local machine just need an internet connection and a browser a modern",
    "start": "3517560",
    "end": "3522810"
  },
  {
    "text": "browser so no ie6 or anything please and you can go and have a look at so there's an open shift course on operator",
    "start": "3522810",
    "end": "3528870"
  },
  {
    "text": "framework there's kubernetes basics there's Sto details in there there's open shift there's every technology you",
    "start": "3528870",
    "end": "3535290"
  },
  {
    "text": "can probably think of that is current is available and what you get is instructions on the left-hand side and a",
    "start": "3535290",
    "end": "3541530"
  },
  {
    "text": "pane into a real cluster so you're seeing some real machines and you know it's not it's not a fake console it's",
    "start": "3541530",
    "end": "3547830"
  },
  {
    "text": "real so with that I think I've got probably 30 seconds to go so I'm happy",
    "start": "3547830",
    "end": "3554580"
  },
  {
    "text": "to take questions as I pack up others say thank you very much and that's me",
    "start": "3554580",
    "end": "3562810"
  },
  {
    "text": "[Applause]",
    "start": "3562810",
    "end": "3568929"
  }
]