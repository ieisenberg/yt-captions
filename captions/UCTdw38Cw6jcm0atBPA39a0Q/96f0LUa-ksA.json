[
  {
    "text": "hello everyone and thanks for joining me here this lovely sunny weather today",
    "start": "2840",
    "end": "9480"
  },
  {
    "text": "nice that you want to spend a little bit of time inside together with me um for the next hour talking about web assembly",
    "start": "9480",
    "end": "17600"
  },
  {
    "text": "components uh my name is Migel and I work for a company called feron firon",
    "start": "17600",
    "end": "23039"
  },
  {
    "text": "has been doing stuff with web assembly over the",
    "start": "23039",
    "end": "28119"
  },
  {
    "text": "last soon to be three years um I've been part of the company for more than two",
    "start": "28119",
    "end": "33120"
  },
  {
    "text": "years now and what I do is I take care of develop relationships and products within that",
    "start": "33120",
    "end": "38680"
  },
  {
    "text": "company um firan has a history from a",
    "start": "38680",
    "end": "44280"
  },
  {
    "text": "well it's an engineering team the cores team company is an engineering team that has history way back but soon uh the",
    "start": "44280",
    "end": "51559"
  },
  {
    "text": "latest was uh being an open source engineering team with inside of Microsoft which is where I got to know the team while also working there um the",
    "start": "51559",
    "end": "59960"
  },
  {
    "text": "did a lot of stuff around kubernetes did a lot of stuff around uh Asha kubernetes services and other types of services in",
    "start": "59960",
    "end": "66439"
  },
  {
    "text": "Asha uh the engineering team has founded projects like Helm and draft and those",
    "start": "66439",
    "end": "71520"
  },
  {
    "text": "type of things so if you know about the kubernetes world some of those things would probably be known to",
    "start": "71520",
    "end": "77240"
  },
  {
    "text": "you uh but we uh at firion we are working on what",
    "start": "77240",
    "end": "83799"
  },
  {
    "text": "we believe is the next technology core technology that will power not just cloud computing but all compute why set",
    "start": "83799",
    "end": "92360"
  },
  {
    "text": "expectations lower than anything but that and we believe that that is web assembly uh so we think about this is",
    "start": "92360",
    "end": "97960"
  },
  {
    "text": "sort of the next wave beyond what we learned from going from physical machines to Virtual machines to",
    "start": "97960",
    "end": "104320"
  },
  {
    "text": "Containers consider web assembly to be a core technology uh for how we will uh build",
    "start": "104320",
    "end": "112399"
  },
  {
    "text": "operate deploy and all those things with the workloads the applications that we create going forward so with that being",
    "start": "112399",
    "end": "118799"
  },
  {
    "text": "said let's get onto this I'm trying we're trying to keep this as an introduction level so I will gradually",
    "start": "118799",
    "end": "124200"
  },
  {
    "text": "build things up try to explain some of the Core Concepts behind both web assembly and the component model uh but",
    "start": "124200",
    "end": "130160"
  },
  {
    "text": "also dive into code and we'll see some samples and I'll see if we can get to have Q&A at the end there's a microphone",
    "start": "130160",
    "end": "136680"
  },
  {
    "text": "here if not I'll stick around and I'll be happy to have conversations with all of you okay um so what's what really is the",
    "start": "136680",
    "end": "144640"
  },
  {
    "text": "problem that we're trying to solve here and and and and and the goal around web assembly",
    "start": "144640",
    "end": "150120"
  },
  {
    "text": "well originally web assembly was a a specification invented to expand programming language support for the web",
    "start": "150120",
    "end": "157120"
  },
  {
    "text": "and by when they talk about the web they really mean the browser uh in this case uh so this is kind of a response to what",
    "start": "157120",
    "end": "164239"
  },
  {
    "text": "people learn from having things like flash and silver light and Java appet like a lot of proprietary standards to",
    "start": "164239",
    "end": "170440"
  },
  {
    "text": "extend experiences build inside of uh of the web so being able to build these",
    "start": "170440",
    "end": "176159"
  },
  {
    "text": "safe portable things that are fast because they execute efficiently and that are compact because they are small",
    "start": "176159",
    "end": "183360"
  },
  {
    "text": "is really what the web assembly specification is about so web assembly coming out of you know having a way of",
    "start": "183360",
    "end": "190599"
  },
  {
    "text": "bringing new programming languages into the browser there are some design principles behind it that we believe is",
    "start": "190599",
    "end": "196239"
  },
  {
    "text": "also super relevant beneficial to run workloads I out of the browser so the four are and I try to highlight them",
    "start": "196239",
    "end": "202599"
  },
  {
    "text": "here is like you have a very safe model because anything you want to run inside of your browser is being loaded from a remote host so it is by definition",
    "start": "202599",
    "end": "209799"
  },
  {
    "text": "unsecure so you want to sandbox it make sure it has its own memory space and cannot move out of that you want to have",
    "start": "209799",
    "end": "216200"
  },
  {
    "text": "these things being portable so you don't have to build like four or five or six or 10 different versions depending on",
    "start": "216200",
    "end": "221760"
  },
  {
    "text": "what processing architecture or what operating system needs to eventually run this because you just want to run it in",
    "start": "221760",
    "end": "227040"
  },
  {
    "text": "a browser you also have you want to have these start up really quickly because",
    "start": "227040",
    "end": "232760"
  },
  {
    "text": "typically what we run inside of the browser is something that is graphical UI thing so there's like human",
    "start": "232760",
    "end": "238000"
  },
  {
    "text": "interaction so you don't want to wait like 10 seconds for a thing to load you want to see it load quickly and last but",
    "start": "238000",
    "end": "245200"
  },
  {
    "text": "not least you want to have these things be very small because you're always running these from a remote host so you have to transfer them over the network",
    "start": "245200",
    "end": "251360"
  },
  {
    "text": "before you can actually run them so if you think about those as design principles behind web assembly and now",
    "start": "251360",
    "end": "258040"
  },
  {
    "text": "try to extrapolate those outside of the browser as well and thinking about what containers really are there's actually a",
    "start": "258040",
    "end": "263560"
  },
  {
    "text": "lot of problems that these Design Concepts solve compared to Containers so containers not necessarily have having",
    "start": "263560",
    "end": "270400"
  },
  {
    "text": "memory isolation I know there are hypervisors that can solve some of that but by default not you need to build",
    "start": "270400",
    "end": "275759"
  },
  {
    "text": "container images that are natively compiled to the platform where they need to run on they're not known to be small",
    "start": "275759",
    "end": "282400"
  },
  {
    "text": "uh because of all the file system layers and dependencies that you include in them um and whether they start fast or",
    "start": "282400",
    "end": "288400"
  },
  {
    "text": "not it really depends but they tend to be a good fit for at least long running types of operations and if you have a",
    "start": "288400",
    "end": "294240"
  },
  {
    "text": "long running type of thing you don't necessarily is concerned so much about startup times but we'll try get back to",
    "start": "294240",
    "end": "300400"
  },
  {
    "text": "this towards the end of the presentation and I hope this sort of makes sense in the in sort of the you know the",
    "start": "300400",
    "end": "306800"
  },
  {
    "text": "Visionary part of where we believe this whole thing is going okay so I created a very unofficial rough timeline of how",
    "start": "306800",
    "end": "313639"
  },
  {
    "text": "these things played out so a long time ago this web assembly thing was created right it's a new compilation Target for",
    "start": "313639",
    "end": "319840"
  },
  {
    "text": "the browser it gave us a few thing it GES us this thing called well it gave us web assembly abbreviated to wasm and it",
    "start": "319840",
    "end": "326840"
  },
  {
    "text": "gives us this concept of a wasum module which was a thing that we could then load from JavaScript within our browser",
    "start": "326840",
    "end": "332720"
  },
  {
    "text": "and then we could run stuff you've probably seen demos of people who have compiled games like Doom to web assembly",
    "start": "332720",
    "end": "339560"
  },
  {
    "text": "and running them inside of the browser so it's one of those examples where you can take other programming languages and get them in there we're not going to",
    "start": "339560",
    "end": "346160"
  },
  {
    "text": "spend a lot of time on this we'll quickly move on to this time period which is somewhere in the middle I mean we're probably talking",
    "start": "346160",
    "end": "352800"
  },
  {
    "text": "five years or so right but anyways this is somewhere in the middle um and people sort realized well this is actually",
    "start": "352800",
    "end": "358759"
  },
  {
    "text": "useful outside of the browser there's stuff we can do here so that gave us another set of w thingies which is wasi",
    "start": "358759",
    "end": "365240"
  },
  {
    "text": "the web web assembly system let's try again the web assembly system",
    "start": "365240",
    "end": "371599"
  },
  {
    "text": "interface um and wasi is really meant to be a so when you run web assembly inside",
    "start": "371599",
    "end": "377479"
  },
  {
    "text": "of the browser you expect that there's a set of browser apis that the web assembly needs to interact with to sort of interact outside of it sandbox with",
    "start": "377479",
    "end": "384599"
  },
  {
    "text": "the outside world what wasy is is a definition of what a system interface or",
    "start": "384599",
    "end": "390240"
  },
  {
    "text": "you could call like an operating system would look like for these things so if you take a web assembly and you don't run it inside of the browser so what is",
    "start": "390240",
    "end": "396440"
  },
  {
    "text": "what is the access to the outside world and that is what was is trying to Define so you will see things like file system",
    "start": "396440",
    "end": "403840"
  },
  {
    "text": "sockets uh CLI environments and those type of things so that's what we got",
    "start": "403840",
    "end": "409160"
  },
  {
    "text": "here somewhere in the middle and we are still building web assembly modules at this point which means that we created a",
    "start": "409160",
    "end": "414199"
  },
  {
    "text": "thing that could run by web assem runtime and so where we are to today and",
    "start": "414199",
    "end": "420400"
  },
  {
    "text": "sort of where the future is heading towards is we can actually take these web assembly that are already fairly",
    "start": "420400",
    "end": "425960"
  },
  {
    "text": "small but we can even break them down further and make these things composable and that introduce another",
    "start": "425960",
    "end": "432639"
  },
  {
    "text": "set of w thingies which is called wit which is the web assembly interface type system I think it's called type system",
    "start": "432639",
    "end": "439039"
  },
  {
    "text": "actually not sure but it's a way it's an interface definition language that enables us to Define how web assemblies",
    "start": "439039",
    "end": "445400"
  },
  {
    "text": "will uh communicate like how they can depend on each other H and this is where we are going to",
    "start": "445400",
    "end": "451639"
  },
  {
    "text": "start building components and one thing that is extremely important uh for that story is",
    "start": "451639",
    "end": "458000"
  },
  {
    "text": "that because web assembly is this common compilation Target from all the different programming languages we",
    "start": "458000",
    "end": "463720"
  },
  {
    "text": "actually have a system with the web assembly component model where we can build a library in one programming language and use it in another",
    "start": "463720",
    "end": "469960"
  },
  {
    "text": "programming language like statically link these things together in run them in uh in a web assembly",
    "start": "469960",
    "end": "476120"
  },
  {
    "text": "runtime so we'll try to focus some of the middle and move to towards the composition part and how we use these",
    "start": "476120",
    "end": "481879"
  },
  {
    "text": "components today and you know so let's let's go ahead with that so I mentioned",
    "start": "481879",
    "end": "487639"
  },
  {
    "text": "wasi the web assembly system interface so think about wasi as this is what enables us to compile something to web",
    "start": "487639",
    "end": "492759"
  },
  {
    "text": "assembly and then run it inside of a uh um you know on an operating system or on a web assembly runtime and again we want",
    "start": "492759",
    "end": "500159"
  },
  {
    "text": "to create web assemblies that are portable modular runtime independent and",
    "start": "500159",
    "end": "506120"
  },
  {
    "text": "you know have a set of native apis so that you know when you build the web assemblies and you run them inside a web assembly runtime you have access to",
    "start": "506120",
    "end": "512959"
  },
  {
    "text": "things like what's in the bottom here a CLI environment standard in standard out those type of things or something like",
    "start": "512959",
    "end": "519200"
  },
  {
    "text": "htttp a set of very useful uh uh use cases where you know you can hand either",
    "start": "519200",
    "end": "524800"
  },
  {
    "text": "handle just running a run command or you can handle HTTP request for instance and",
    "start": "524800",
    "end": "530240"
  },
  {
    "text": "part of those apis then have a some low level apis underneath which is you know",
    "start": "530240",
    "end": "535600"
  },
  {
    "text": "sockets are defined IO random clock and file system aises as",
    "start": "535600",
    "end": "540760"
  },
  {
    "text": "well so you can think of this as someone is trying to build",
    "start": "540760",
    "end": "546839"
  },
  {
    "text": "a operating system for web assembly and there are certain set of apis that you can use within that but that operating",
    "start": "546839",
    "end": "553720"
  },
  {
    "text": "system is something we can that is very small we can embed it into other programs and we can move it across",
    "start": "553720",
    "end": "559680"
  },
  {
    "text": "operating systems and processing architectures so what we need to do this",
    "start": "559680",
    "end": "564880"
  },
  {
    "text": "is we need that programming language which can compile to was and wasi and we need a was was the O2 compliant runtime",
    "start": "564880",
    "end": "571800"
  },
  {
    "text": "and I've gave two references here one is a language guide that we support so you can sort of get an idea of what languages are supported for web assembly",
    "start": "571800",
    "end": "578680"
  },
  {
    "text": "in the state of that and then was some time is the runtime that we use and is backed by something called The Bu code",
    "start": "578680",
    "end": "584519"
  },
  {
    "text": "Alliance which is a foundation that creates a lot of uh work or projects inside of web",
    "start": "584519",
    "end": "590920"
  },
  {
    "text": "assembly so what does it actually mean to compile something to web assembly well it depends on the programming",
    "start": "590920",
    "end": "597360"
  },
  {
    "text": "language so each individual program language and their native tool chain",
    "start": "597360",
    "end": "602839"
  },
  {
    "text": "really defines these as compilation targets so if you think of rust you will have a cargo build command or cargo",
    "start": "602839",
    "end": "609640"
  },
  {
    "text": "component build targeting wasi if you're in the world of.net you have a runtime identifier which is wasy wasn't and if",
    "start": "609640",
    "end": "616920"
  },
  {
    "text": "you're in go tiny go in this case you also have a Target which is wasi right so you you you take your programming",
    "start": "616920",
    "end": "623440"
  },
  {
    "text": "language and it has some compatibility in order to be able to um to Target wasi specifically and that's sort of where",
    "start": "623440",
    "end": "629480"
  },
  {
    "text": "you where you start so let's try this let's actually see this in action and build one of",
    "start": "629480",
    "end": "635320"
  },
  {
    "text": "these web assembly modules and what we will do is we'll just start by using the wasy API so this is sort of a recipe of",
    "start": "635320",
    "end": "643279"
  },
  {
    "text": "what we're going to do here you have the runtime down here that exposes these wasi apis and we're going to build a",
    "start": "643279",
    "end": "649160"
  },
  {
    "text": "module that uses the CLI environment which means we can run it and we can get standard out from it and it uses wasi",
    "start": "649160",
    "end": "656160"
  },
  {
    "text": "files to eventually read something from a file um so let me check what I have um",
    "start": "656160",
    "end": "664519"
  },
  {
    "text": "actually let's cargo component we'll do this in Rust to begin with um just to U just to",
    "start": "664519",
    "end": "673040"
  },
  {
    "text": "get started I'll try to mix in some other programming languages as we go along uh at least to you know if for",
    "start": "673040",
    "end": "679000"
  },
  {
    "text": "anything just show you uh how these things how these things work across programming languages okay so cargo new",
    "start": "679000",
    "end": "685680"
  },
  {
    "text": "hello cbh um cargo is rust this tool chain so this is what we're going to do here um whoops let me get back into",
    "start": "685680",
    "end": "697000"
  },
  {
    "text": "my what happened here oh c Hood there we go um okay let",
    "start": "697360",
    "end": "705440"
  },
  {
    "text": "me do this again we're going to build a new one and I think we should have a directory now let's get",
    "start": "705440",
    "end": "712800"
  },
  {
    "text": "a an edit up and running and we can see what we have in here so basically we're building using cargo command to create a",
    "start": "712800",
    "end": "721000"
  },
  {
    "text": "new um a new project and you can see we have a main function in here prints a",
    "start": "721000",
    "end": "727000"
  },
  {
    "text": "low worlds and that's really all we need there's no dependencies or anything uh",
    "start": "727000",
    "end": "732519"
  },
  {
    "text": "being used so this is pretty straightforward and what we can do is we can then",
    "start": "732519",
    "end": "737880"
  },
  {
    "text": "use uh cargo to build this and now we will Target wasi which means that we now",
    "start": "737880",
    "end": "744519"
  },
  {
    "text": "have a web assembly in here so if we look at what's coming out of this thing you can see we have a web assembly a",
    "start": "744519",
    "end": "751399"
  },
  {
    "text": "wassom file and what I can do with that I can then run that with inside Russen time",
    "start": "751399",
    "end": "758440"
  },
  {
    "text": "which is a um which is my um my runtime",
    "start": "758440",
    "end": "763720"
  },
  {
    "text": "that I'm using for this and you can see it's SLO World okay that's not necessarily very impressive what's more",
    "start": "763720",
    "end": "769120"
  },
  {
    "text": "impressive is that the actual binary that I have the web assembly I don't need to recompile that if I wanted to run this on Windows if I wanted to run",
    "start": "769120",
    "end": "775560"
  },
  {
    "text": "this on x64 if I wanted to run this on Linux where ever else I want to run it's the same compilation Target that I can run",
    "start": "775560",
    "end": "782720"
  },
  {
    "text": "anywhere and you can see I have some of those uh well I can just run this as a",
    "start": "782720",
    "end": "787920"
  },
  {
    "text": "program what we can also try is we can try to uh maybe uh you know read",
    "start": "787920",
    "end": "794360"
  },
  {
    "text": "something from a file system so let's just put something into a text file and then we can go back I need to update",
    "start": "794360",
    "end": "801360"
  },
  {
    "text": "that one but and take a look and I did create a little code snippet over here",
    "start": "801360",
    "end": "806519"
  },
  {
    "text": "so I don't have to you don't have to see me uh not do this the right way let me",
    "start": "806519",
    "end": "812959"
  },
  {
    "text": "just go back copy this in and what you'll see now is we can use standard libraries in this case we're still in",
    "start": "812959",
    "end": "819480"
  },
  {
    "text": "Rust so we're using the standard Library uh to get into the file system once my",
    "start": "819480",
    "end": "824600"
  },
  {
    "text": "message is going to go away there you go and we still have a main uh file and now",
    "start": "824600",
    "end": "829839"
  },
  {
    "text": "we're going to try to a main function now we're going to try to read from Hello do text and we going to print the content of that file back okay something",
    "start": "829839",
    "end": "836800"
  },
  {
    "text": "that's very interesting which will happen now when I uh let me just go ahead and build this",
    "start": "836800",
    "end": "842160"
  },
  {
    "text": "to begin with um now things will break as I try to run",
    "start": "842160",
    "end": "849440"
  },
  {
    "text": "this and the reason is that uh wasi is defined or wasi has defined a what is",
    "start": "849440",
    "end": "857959"
  },
  {
    "text": "called a capability based security model or security model that is capability based what that means is that the",
    "start": "857959",
    "end": "864440"
  },
  {
    "text": "sandbox that my web assembly runs inside each of all those apis that we expose",
    "start": "864440",
    "end": "869880"
  },
  {
    "text": "from our runtime at runtime we Define which of those epis will be open to the web",
    "start": "869880",
    "end": "875680"
  },
  {
    "text": "assembly so if you think about how you know from operations trying to run",
    "start": "875680",
    "end": "881360"
  },
  {
    "text": "things that comes from developers um you actually get very granular control in terms of what that",
    "start": "881360",
    "end": "888040"
  },
  {
    "text": "individual piece of code is allowed to do or not so what's happening here is that I can't get to my file system which",
    "start": "888040",
    "end": "893720"
  },
  {
    "text": "is why this one is this one is failing but if I in wasn't time say well you can",
    "start": "893720",
    "end": "899120"
  },
  {
    "text": "actually get access to the current directory and that didn't work I think I",
    "start": "899120",
    "end": "904199"
  },
  {
    "text": "might need to do that before let me do this uh run there you",
    "start": "904199",
    "end": "909839"
  },
  {
    "text": "go now I get access to that directory and we can read from the file and we can return",
    "start": "909839",
    "end": "915320"
  },
  {
    "text": "that okay so that was sort of like a little bit of the basics of web assembly",
    "start": "915320",
    "end": "921320"
  },
  {
    "text": "and you can see how we have this web assembly system interface that enables us to interact with CLI that enables us",
    "start": "921320",
    "end": "927600"
  },
  {
    "text": "to do things with files and again I've done this in Rust right now we can do",
    "start": "927600",
    "end": "933360"
  },
  {
    "text": "this in other programming languages as well and I think as we move along we'll be able to we will see more of",
    "start": "933360",
    "end": "938920"
  },
  {
    "text": "that okay so what's",
    "start": "938920",
    "end": "944240"
  },
  {
    "text": "also uh an important I know this is a little bit small but I'll try to highlight the most important but another",
    "start": "944240",
    "end": "950519"
  },
  {
    "text": "important point to get across is that was O2 again this is an open standard right and a little bit of this goes back",
    "start": "950519",
    "end": "956319"
  },
  {
    "text": "to the whole being an answer towards Flash and those type of things which means that the same way that HTML and",
    "start": "956319",
    "end": "963079"
  },
  {
    "text": "HTTP are Open Standards web assembly and wasi and those things are also Open Standards so when I was using what I was",
    "start": "963079",
    "end": "970519"
  },
  {
    "text": "using before in the web assembly runtime is a um is a is a standard interface uh",
    "start": "970519",
    "end": "977759"
  },
  {
    "text": "that is described and versioned so I can go to a website called wa. Dev for",
    "start": "977759",
    "end": "983560"
  },
  {
    "text": "instance but other registries as well and I can find these interface definitions and part of wasi o2o we",
    "start": "983560",
    "end": "990360"
  },
  {
    "text": "talked about CLI and HTTP has these two very specific use cases where you can see there's either",
    "start": "990360",
    "end": "996759"
  },
  {
    "text": "on the CLI side you can Implement a web assembly component that exports a run command basically in Rust that would be",
    "start": "996759",
    "end": "1003440"
  },
  {
    "text": "my main function in other programming languages they sort of have other ways of of coning I think the net is also",
    "start": "1003440",
    "end": "1008880"
  },
  {
    "text": "called mean right if you do a CLI program yeah so so if you are in that in",
    "start": "1008880",
    "end": "1016600"
  },
  {
    "text": "that interface you can see that you can ment a run function and the web assembly runtime can run it but you can also see",
    "start": "1016600",
    "end": "1023040"
  },
  {
    "text": "that you're also able to implement an incoming Handler in the HTP World which means you can Implement a piece of",
    "start": "1023040",
    "end": "1028678"
  },
  {
    "text": "code that takes an HTP request and returns an H HTTP response which sounds",
    "start": "1028679",
    "end": "1035438"
  },
  {
    "text": "very similar to what you do with things like lambdas and asure functions but again this is a standardized way of",
    "start": "1035439",
    "end": "1041120"
  },
  {
    "text": "describing these things and how you implement the web server and all these other types things underneath is fully",
    "start": "1041120",
    "end": "1046760"
  },
  {
    "text": "up to you so you have these standard ized set of interfaces out there that are very use useful for for various use",
    "start": "1046760",
    "end": "1054799"
  },
  {
    "text": "cases so moving somewhat from the very lowlevel stuff we've been looking at",
    "start": "1054799",
    "end": "1060120"
  },
  {
    "text": "right now and into something where it's like but how can I use this today what's more um what's the opportunity that I",
    "start": "1060120",
    "end": "1066559"
  },
  {
    "text": "have like how how can this you know how can I have a framework and develop experiences around this so there is an",
    "start": "1066559",
    "end": "1072280"
  },
  {
    "text": "open source project called spin which we created at firon which is the developer tool for building web assembly",
    "start": "1072280",
    "end": "1077960"
  },
  {
    "text": "microservices and web application so really what we've done with spin is we've taken that concept of",
    "start": "1077960",
    "end": "1084480"
  },
  {
    "text": "the wasy HTTP interface of saying okay what if we build let's just call it a serverless",
    "start": "1084480",
    "end": "1091080"
  },
  {
    "text": "framework I know there's something called the serverless framework this is not take on that but a framework that",
    "start": "1091080",
    "end": "1097679"
  },
  {
    "text": "takes from this uh developer experience of building things serverless which means that the only thing that you are",
    "start": "1097679",
    "end": "1104200"
  },
  {
    "text": "responsible for is to implement that particular Handler like the thing that handles the HTP request everything beyond that will take away from you oh",
    "start": "1104200",
    "end": "1111159"
  },
  {
    "text": "you don't have to care about we're not going to take it away but you don't have to care about that because we have those interfaces defined and basically all you",
    "start": "1111159",
    "end": "1118760"
  },
  {
    "text": "have to do is create a wasm module that implements that incoming Handler function that the interface this",
    "start": "1118760",
    "end": "1125200"
  },
  {
    "text": "specified and you can run that on top of was some time um so what spin really does is it",
    "start": "1125200",
    "end": "1131559"
  },
  {
    "text": "puts a developer experience and some other features around this there's a whole expansion this and we'll get back to that a little bit later but spin",
    "start": "1131559",
    "end": "1137960"
  },
  {
    "text": "makes this really easy for you through sdks we build in various programming languages but also the developer",
    "start": "1137960",
    "end": "1144200"
  },
  {
    "text": "experience as such so I think what we can try now is to just use that and try",
    "start": "1144200",
    "end": "1151120"
  },
  {
    "text": "and create one of these HTTP handlers and we'll sort of start on mind how is this all built and what does the",
    "start": "1151120",
    "end": "1156679"
  },
  {
    "text": "component uh part of this have to do with it okay so part of spin is you have a new command and you can see there's a",
    "start": "1156679",
    "end": "1163320"
  },
  {
    "text": "bunch of templates and you can see some of the programming languages that are supported uh but but you can also see",
    "start": "1163320",
    "end": "1169320"
  },
  {
    "text": "there are other things down here like reddis and basically you can think of you know the same way that you can",
    "start": "1169320",
    "end": "1175360"
  },
  {
    "text": "describe an interface where you implement an HTTP Handler you can also describe an interface where you implement something that handles",
    "start": "1175360",
    "end": "1181880"
  },
  {
    "text": "messages from a reddish queue right so there's this event driven notion on the framework and all of these things are",
    "start": "1181880",
    "end": "1188360"
  },
  {
    "text": "extensible the only difference is that the reddest pieces are not standardized the HTP pieces are standardized and part",
    "start": "1188360",
    "end": "1194640"
  },
  {
    "text": "of that is really you know how fast the ecosystem moves here okay let's try and",
    "start": "1194640",
    "end": "1199760"
  },
  {
    "text": "do something in JavaScript now so I'll pick a template in spin uh to create",
    "start": "1199760",
    "end": "1205919"
  },
  {
    "text": "JavaScript and if we go in here we should be able to",
    "start": "1205919",
    "end": "1211120"
  },
  {
    "text": "just uh do mpm install because now we're in a JavaScript world so now when we",
    "start": "1211120",
    "end": "1216240"
  },
  {
    "text": "develop we are obviously in the JavaScript tool chain so things like mpm and being able to impact uh import",
    "start": "1216240",
    "end": "1222679"
  },
  {
    "text": "packages through mpm is what I do as I develop my JavaScript application",
    "start": "1222679",
    "end": "1229080"
  },
  {
    "text": "okay so let's go back and let's fix the color scheme there you go um one thing",
    "start": "1229080",
    "end": "1235280"
  },
  {
    "text": "to notice in here is that besides what is part of uh JavaScript here which is webpack and there's package Json there's",
    "start": "1235280",
    "end": "1241039"
  },
  {
    "text": "some nitwit stuff that we use uh I think this is actually something we came up with but anyways detail um we have this",
    "start": "1241039",
    "end": "1248280"
  },
  {
    "text": "concept of a spin. TL file in here and really what a spin. TL file is is part of what we created for spin because we",
    "start": "1248280",
    "end": "1254799"
  },
  {
    "text": "believe when you want to build these type of applications of web assembly you",
    "start": "1254799",
    "end": "1260159"
  },
  {
    "text": "need an application model you need a model to describe the intention of these components and you also need a way to",
    "start": "1260159",
    "end": "1265559"
  },
  {
    "text": "actually build applications consisting of multiple components and this is something that's that's that's uh an",
    "start": "1265559",
    "end": "1272279"
  },
  {
    "text": "interesting thing you can do when you use WebMD based on you know the small size the fast startup time and all of",
    "start": "1272279",
    "end": "1277799"
  },
  {
    "text": "these things so I can actually create applications that consist of you know",
    "start": "1277799",
    "end": "1282880"
  },
  {
    "text": "there are a bunch of hcp handlers each listening on different routes each written in their own programming",
    "start": "1282880",
    "end": "1288320"
  },
  {
    "text": "language and they can all be the same application I can deploy them as ones because at runtime they're just web assembly they",
    "start": "1288320",
    "end": "1295120"
  },
  {
    "text": "just web assembly modules all of them we don't know what programming language they came from but they can all be deployed and work together and I can",
    "start": "1295120",
    "end": "1301799"
  },
  {
    "text": "even you know take dependencies from one component into another and so on and so",
    "start": "1301799",
    "end": "1307080"
  },
  {
    "text": "forth so we define components in here we can see what web assembly is going to",
    "start": "1307080",
    "end": "1312840"
  },
  {
    "text": "serve you know is is the source of that component and you can see we attached this HTP trick saying all routes this is",
    "start": "1312840",
    "end": "1319960"
  },
  {
    "text": "a wild card are being served by the JS spin component which is down here and then there's a bunch of tooling stuff",
    "start": "1319960",
    "end": "1326000"
  },
  {
    "text": "again this is all developer experience is things uh to make things",
    "start": "1326000",
    "end": "1331559"
  },
  {
    "text": "easier uh and that's not the one I wanted to show so in",
    "start": "1331559",
    "end": "1338960"
  },
  {
    "text": "JavaScript this is what an HTTP handle looks like I import something from an",
    "start": "1338960",
    "end": "1344520"
  },
  {
    "text": "SDK we build and an export a function called Handler takes a request returns or",
    "start": "1344520",
    "end": "1350159"
  },
  {
    "text": "response and that's four well five five lines of HTTP",
    "start": "1350159",
    "end": "1357240"
  },
  {
    "text": "Handler um well universe is probably okay to say Hello Universe so let's go",
    "start": "1357240",
    "end": "1363279"
  },
  {
    "text": "in and now I'm probably going to get lost in the let me see if I can",
    "start": "1363279",
    "end": "1370000"
  },
  {
    "text": "just um we can into this directory did we just created there obviously been build",
    "start": "1370000",
    "end": "1377360"
  },
  {
    "text": "command and now we're going to produce a web asmd based on this JavaScript and all",
    "start": "1377360",
    "end": "1383159"
  },
  {
    "text": "the stuff in between anybody guess what's the command is to run",
    "start": "1383159",
    "end": "1389039"
  },
  {
    "text": "things ah that was actually a good one it spin up it's close H spin it spin it",
    "start": "1389039",
    "end": "1394679"
  },
  {
    "text": "would be nice I think we could probably Alias that in the CLI so there you have it we now actually so what spin does",
    "start": "1394679",
    "end": "1401360"
  },
  {
    "text": "spin embeds that run time the was and time runtime that has all the wasi apis which means we have wasi HTTP available",
    "start": "1401360",
    "end": "1408720"
  },
  {
    "text": "and then we've done a lot of optimizations around loading these modules and you know taking the app",
    "start": "1408720",
    "end": "1414120"
  },
  {
    "text": "model and providing you to combine things and all of that uh so what I'm",
    "start": "1414120",
    "end": "1420720"
  },
  {
    "text": "actually doing right now is not asking for the weather forecast but I'm just going to curl this JavaScript thing and",
    "start": "1420720",
    "end": "1425919"
  },
  {
    "text": "you can see response time is really quick what's interesting is that the model we use",
    "start": "1425919",
    "end": "1431960"
  },
  {
    "text": "is and you can kind of see it here is when spin loads when we do spin up we we",
    "start": "1431960",
    "end": "1439799"
  },
  {
    "text": "load the wassom time runtime inside of it and we we load a version of the",
    "start": "1439799",
    "end": "1446919"
  },
  {
    "text": "Manifest that tells us which HTTP routes are we serving and which wasm files are going",
    "start": "1446919",
    "end": "1454240"
  },
  {
    "text": "to serve those routes and then once a request comes in we're going to load the web assembly hand over the request",
    "start": "1454240",
    "end": "1461240"
  },
  {
    "text": "handle the request unload the web was empty so when I do this curl all of that",
    "start": "1461240",
    "end": "1466760"
  },
  {
    "text": "is actually happening so there are some pretty pretty amazing performance you can get with these type",
    "start": "1466760",
    "end": "1472679"
  },
  {
    "text": "of things where these small handlers can be loaded and unloaded very very quickly and you can start to get a sense",
    "start": "1472679",
    "end": "1479559"
  },
  {
    "text": "of how when we think about larger systems or platforms and things like that where you can put in all these",
    "start": "1479559",
    "end": "1485720"
  },
  {
    "text": "small components that have defined apis in terms of how they be able triggered what they can access and things like",
    "start": "1485720",
    "end": "1492080"
  },
  {
    "text": "that you have a runtime model where you load them instantaneously when they need to to serve something like immediately",
    "start": "1492080",
    "end": "1499000"
  },
  {
    "text": "you don't have to think about scaling the individual workload you don't have to think about",
    "start": "1499000",
    "end": "1505960"
  },
  {
    "text": "um well which enables a lot of stuff in terms of density you know you can get have much more running on a single",
    "start": "1505960",
    "end": "1511559"
  },
  {
    "text": "server because you don't need to think about when things need to scale up how long does it take to scale down because everything is just always available and",
    "start": "1511559",
    "end": "1518159"
  },
  {
    "text": "that's basically what we've done um in some of these implementations of the Run",
    "start": "1518159",
    "end": "1524120"
  },
  {
    "text": "types so again I'm I'm using this as an example of what this was thing can can",
    "start": "1524120",
    "end": "1529360"
  },
  {
    "text": "can can do for you um spin cube is one of those examples spin cube is another",
    "start": "1529360",
    "end": "1534840"
  },
  {
    "text": "open source project that enables you to run spin applications inside of kubernetes both Spin and spin Cube have",
    "start": "1534840",
    "end": "1540279"
  },
  {
    "text": "been submitted for donation to The cncf so hopefully they will become sandbox projects soon uh but we also built uh",
    "start": "1540279",
    "end": "1548760"
  },
  {
    "text": "more commercial offerings we actually built a cloud because we want to show people what a the best cloud experience",
    "start": "1548760",
    "end": "1554679"
  },
  {
    "text": "you've ever experienced what that looks like and that is the firan cloud I'm sorry I know there's a little bit of a pitch but I'm actually super proud of",
    "start": "1554679",
    "end": "1560880"
  },
  {
    "text": "the stuff we're showing there we don't make money off of it anyways so it's not it's not a big thing um but but there",
    "start": "1560880",
    "end": "1567559"
  },
  {
    "text": "are these places where you can start running things and I think we should just try for the sake of it to actually do something in infan Cloud just to to",
    "start": "1567559",
    "end": "1574600"
  },
  {
    "text": "give an example of what you can do with these type of applications so obviously spin deploy takes me into firan cloud",
    "start": "1574600",
    "end": "1583279"
  },
  {
    "text": "deploys is a plugin to spin so the CLI you can build types of plugins so you can build your own spin deploy to my",
    "start": "1583279",
    "end": "1589200"
  },
  {
    "text": "cloud or whatever and build your own cloud if you so desire um and then we",
    "start": "1589200",
    "end": "1595440"
  },
  {
    "text": "can get our stuff up and running and what's super interesting about uh This Cloud is that we actually",
    "start": "1595440",
    "end": "1603279"
  },
  {
    "text": "there we have a runtime concept so I I mentioned before how each of these web",
    "start": "1603279",
    "end": "1608720"
  },
  {
    "text": "assembly components are loaded as requests are coming in right so when I run this locally I have a single web",
    "start": "1608720",
    "end": "1615399"
  },
  {
    "text": "assembly I have a single uh route that I need to deal with what we do In This",
    "start": "1615399",
    "end": "1620760"
  },
  {
    "text": "Cloud is you can consider on each of the uh the nodes that are up there the",
    "start": "1620760",
    "end": "1626799"
  },
  {
    "text": "servers we have one host process and what that gets is it gets the spin.",
    "start": "1626799",
    "end": "1632080"
  },
  {
    "text": "tummel file the application manifest for all the applications that have been deployed and it kind of sort of munches them together into one big index or",
    "start": "1632080",
    "end": "1640360"
  },
  {
    "text": "registry of which host headers and routes do I need to serve and which web assm component is going to serve that so",
    "start": "1640360",
    "end": "1646880"
  },
  {
    "text": "it really doesn't I mean this is illustrative it doesn't be concerned",
    "start": "1646880",
    "end": "1652000"
  },
  {
    "text": "about whether it's your application or my application or what not it's just a host header it's a path and it's a web assembly I need to run and because we",
    "start": "1652000",
    "end": "1659200"
  },
  {
    "text": "have that secure isolation of each individual execution being a fresh load so no memory share across executions but",
    "start": "1659200",
    "end": "1665519"
  },
  {
    "text": "also each individual web assembly have it own its own isolated memory it runs in we can do this in a safe",
    "start": "1665519",
    "end": "1672519"
  },
  {
    "text": "way um which means that we can have I think last time we checked so we did",
    "start": "1672519",
    "end": "1678360"
  },
  {
    "text": "some experiments in AKs and kubernetes and we actually ran 3,500 spin apps on a single note now if you compare that to",
    "start": "1678360",
    "end": "1685159"
  },
  {
    "text": "Containers where you can run maybe 150 maybe 200 if things are crazy there a",
    "start": "1685159",
    "end": "1690240"
  },
  {
    "text": "lot more stuff you can do right so that's that's quite funny um okay so we",
    "start": "1690240",
    "end": "1696360"
  },
  {
    "text": "could go over here and we could actually curl our",
    "start": "1696360",
    "end": "1703559"
  },
  {
    "text": "application uh that's not going to go well anyways I'm I'm going to do this",
    "start": "1703919",
    "end": "1709720"
  },
  {
    "text": "that's the application hey there you go and it instantaneously replies so again each of these requests",
    "start": "1709720",
    "end": "1716279"
  },
  {
    "text": "we're loading the web assembly inside of that cloud and it's just there and it just",
    "start": "1716279",
    "end": "1721519"
  },
  {
    "text": "responds um so I hope you think that's a little",
    "start": "1721519",
    "end": "1726559"
  },
  {
    "text": "bit amazing like that's a nice way of building apps serverless only think about the handlers and then deploying",
    "start": "1726559",
    "end": "1734240"
  },
  {
    "text": "stuff in there um we have a lot of fun use cases with spin we implemented file server so if you want to serve static",
    "start": "1734240",
    "end": "1740039"
  },
  {
    "text": "content you can just in your spin application you just drop the file server in put your static content and it",
    "start": "1740039",
    "end": "1746279"
  },
  {
    "text": "now becomes part of your app so implementing something front end API back end in one application is actually",
    "start": "1746279",
    "end": "1751360"
  },
  {
    "text": "a pretty pretty simple pretty simple thing to do and actually quite fun to do which",
    "start": "1751360",
    "end": "1757559"
  },
  {
    "text": "spin okay um since we are at",
    "start": "1758159",
    "end": "1763960"
  },
  {
    "text": "a um is it okay if I call this a net biased",
    "start": "1763960",
    "end": "1769720"
  },
  {
    "text": "conference yes okay uh we have we've actually done a lot of work on net very",
    "start": "1769720",
    "end": "1776480"
  },
  {
    "text": "very recently and we have a bunch of very experimental stuff um where we can",
    "start": "1776480",
    "end": "1782360"
  },
  {
    "text": "both I know uh probably a year and a half ago Microsoft specifically Steven",
    "start": "1782360",
    "end": "1787559"
  },
  {
    "text": "Sanderson did some experiments around wasi um and net we sort of picked up",
    "start": "1787559",
    "end": "1793960"
  },
  {
    "text": "some of that and moved it toward WS wasy O2 um and and are able to build wasi",
    "start": "1793960",
    "end": "1801000"
  },
  {
    "text": "HTTP components in net today and are actually also able to compile ASP net uh",
    "start": "1801000",
    "end": "1807880"
  },
  {
    "text": "core into web assembly so if you build aspn net core stuff today you can stains",
    "start": "1807880",
    "end": "1814240"
  },
  {
    "text": "out of that world of ASP not core but compile your thing into web assembly and you can move into a hosting model",
    "start": "1814240",
    "end": "1819559"
  },
  {
    "text": "similar to like spin or in spin Cube if you run in kubernetes",
    "start": "1819559",
    "end": "1824919"
  },
  {
    "text": "somewhere um but let's not so net is there I have a",
    "start": "1824919",
    "end": "1831120"
  },
  {
    "text": "net app that's running I don't know if you actually want to see it but just trust me I hope that's okay uh but you",
    "start": "1831120",
    "end": "1836600"
  },
  {
    "text": "can see there's a bunch of ASP net in here we've implemented a was HTP server so that all works um I think the main",
    "start": "1836600",
    "end": "1843799"
  },
  {
    "text": "thing is uh do I have just going to close that you can see we Implement all of",
    "start": "1843799",
    "end": "1851080"
  },
  {
    "text": "these uh aspet C stuff uh so in the handle you can start creating a slim",
    "start": "1851080",
    "end": "1858519"
  },
  {
    "text": "Builder uh add your loging and add all of these other things that you want static files you know put your routes in",
    "start": "1858519",
    "end": "1865200"
  },
  {
    "text": "and all of that so so this should look fairly familiar net code if you're in",
    "start": "1865200",
    "end": "1870720"
  },
  {
    "text": "the aspet call world and again this compiles down to web assembly and you can run that",
    "start": "1870720",
    "end": "1876039"
  },
  {
    "text": "today there actually one thing that I wanted to show over here because what we",
    "start": "1876039",
    "end": "1882559"
  },
  {
    "text": "created um what we created in here is a web assembly file right this is Javascript",
    "start": "1882559",
    "end": "1888720"
  },
  {
    "text": "compiled to web assembly you might think that this is a little bit on the larger side of things but JavaScript is a",
    "start": "1888720",
    "end": "1896080"
  },
  {
    "text": "little bit of a tricky thing in web assembly and that is a scripting language so interpreted at runtime which",
    "start": "1896080",
    "end": "1902080"
  },
  {
    "text": "means that part of how we build JavaScript today is involves some of The Interpreter in there so JavaScript files",
    "start": "1902080",
    "end": "1909600"
  },
  {
    "text": "in web assembly tend to be large rust files and web assembly tend to be super super small there's also a lot of debug",
    "start": "1909600",
    "end": "1915639"
  },
  {
    "text": "info and stuff in there that we can strip away but it really there really is a correlation between what programming language you use and how small these web",
    "start": "1915639",
    "end": "1922000"
  },
  {
    "text": "assembly end up being but the point that I wanted to get to actually is that even though that we",
    "start": "1922000",
    "end": "1927679"
  },
  {
    "text": "used spin to build this thing and we saw that it ran in spin because this web",
    "start": "1927679",
    "end": "1933000"
  },
  {
    "text": "assembly uh uses wasi HTP and we can actually go and",
    "start": "1933000",
    "end": "1940240"
  },
  {
    "text": "inspect um inspect the interfaces if I can remember the correct",
    "start": "1940240",
    "end": "1948639"
  },
  {
    "text": "command is that WID oh component WID there you go okay",
    "start": "1948639",
    "end": "1954519"
  },
  {
    "text": "uh wasn't TOS component with by the way you probably get the sense throughout this that we are at a early maturity",
    "start": "1954519",
    "end": "1961440"
  },
  {
    "text": "State there's like 25 different tools that we use and I can't remember half of the commands and all of that but I mean",
    "start": "1961440",
    "end": "1968000"
  },
  {
    "text": "it's all fine we're getting there um but what we can actually do is we can go ahead and",
    "start": "1968000",
    "end": "1973320"
  },
  {
    "text": "inspect this thing and what we can see in here is you can actually see the",
    "start": "1973320",
    "end": "1978480"
  },
  {
    "text": "with definition that web assembly interface type language defining what is",
    "start": "1978480",
    "end": "1983880"
  },
  {
    "text": "this component doing like what does it need and what does it give us and what we can",
    "start": "1983880",
    "end": "1989960"
  },
  {
    "text": "see is that let me get over",
    "start": "1989960",
    "end": "1995200"
  },
  {
    "text": "here what we can see here is that there's a bunch of interfaces that we import so now we're the Handler right",
    "start": "1995200",
    "end": "2001360"
  },
  {
    "text": "we're the Handler so we expect someone to provide us with all those interfaces",
    "start": "2001360",
    "end": "2006880"
  },
  {
    "text": "and then we will give an incoming Handler and if we looked at the",
    "start": "2006880",
    "end": "2013760"
  },
  {
    "text": "um which means that our run time will sort of have the operat it right it will export all of the above interfaces and",
    "start": "2013760",
    "end": "2020039"
  },
  {
    "text": "it will look for someone who Imports the uh and it will look for someone who exports the income Handler by importing",
    "start": "2020039",
    "end": "2026679"
  },
  {
    "text": "it so what that means is because spin has built a standardized compliant was",
    "start": "2026679",
    "end": "2032919"
  },
  {
    "text": "HTP component we can actually run this in wasen time so we could do Russen time time one and I think we need to pass in",
    "start": "2032919",
    "end": "2040200"
  },
  {
    "text": "a weird argument as well here uh and we should be able",
    "start": "2040200",
    "end": "2046279"
  },
  {
    "text": "to no uh why can't I do this with this",
    "start": "2046279",
    "end": "2056598"
  },
  {
    "text": "guy what did we do the last",
    "start": "2057320",
    "end": "2061240"
  },
  {
    "text": "time do I need to do component run",
    "start": "2062520",
    "end": "2067638"
  },
  {
    "text": "was it small s oh sorry there you go it's R time",
    "start": "2071599",
    "end": "2076679"
  },
  {
    "text": "serve we want was time to be our HTP server now so that's why it's serve and go back and we can see the",
    "start": "2076679",
    "end": "2084560"
  },
  {
    "text": "same JavaScript thing that we built before is now going to be uh served by",
    "start": "2084560",
    "end": "2089720"
  },
  {
    "text": "was time so if we it has to be a different port we can still do Hello Universe okay so again component",
    "start": "2089720",
    "end": "2097800"
  },
  {
    "text": "different runtime implementations as long as these interfaces are all there uh this is stuff we can",
    "start": "2097800",
    "end": "2104838"
  },
  {
    "text": "do cool okay so let's try and get",
    "start": "2104880",
    "end": "2112920"
  },
  {
    "text": "to how we can use that component model in practice because really what we've been doing so far is just working with",
    "start": "2112920",
    "end": "2120200"
  },
  {
    "text": "that standardized interface wasy and what we are getting at this point is",
    "start": "2120200",
    "end": "2125640"
  },
  {
    "text": "well let's see it's not only have a runtime and build this one module that uses the wasi interfaces but how we want",
    "start": "2125640",
    "end": "2131920"
  },
  {
    "text": "to have the thing that we provide being composed of multiple things that came",
    "start": "2131920",
    "end": "2137680"
  },
  {
    "text": "from multiple programming languages can we do that yes we",
    "start": "2137680",
    "end": "2142839"
  },
  {
    "text": "can so there are some high level goals defined for this component model again portable low runtime efficient so small",
    "start": "2142839",
    "end": "2149560"
  },
  {
    "text": "quick startup time separately compiled meaning I can take something written in JavaScript something written in Rust and",
    "start": "2149560",
    "end": "2156800"
  },
  {
    "text": "then we can bundle them together and we can do cross language composition and you could ask who asked",
    "start": "2156800",
    "end": "2164560"
  },
  {
    "text": "for cross language composition uh I don't think anyone necessarily ask for it as such but if",
    "start": "2164560",
    "end": "2171640"
  },
  {
    "text": "you think about what we have done with spinners a framework the ability to have",
    "start": "2171640",
    "end": "2176800"
  },
  {
    "text": "a single runtime implementation that supports you to bring HTP handlers in",
    "start": "2176800",
    "end": "2182839"
  },
  {
    "text": "any programming language you desire for whatever reason is place where you know",
    "start": "2182839",
    "end": "2188760"
  },
  {
    "text": "well that's that cross language composition thing is actually it does actually make sense um our CEO wrote A Blog where he",
    "start": "2188760",
    "end": "2197560"
  },
  {
    "text": "was like well what if we only have to support One postris driver in the future and it was written in the most optimal",
    "start": "2197560",
    "end": "2204240"
  },
  {
    "text": "language to write a postgress driver in and every programming language now only use that one postgress driver and we don't have to support and maintain",
    "start": "2204240",
    "end": "2210800"
  },
  {
    "text": "hundreds of different program postris drivers across programming languages that is definitely a vision I",
    "start": "2210800",
    "end": "2217240"
  },
  {
    "text": "know uh at NDC Osa what's his name Dylan Dylan bidy talked about it he had a talk",
    "start": "2217240",
    "end": "2223119"
  },
  {
    "text": "about open source and package managers and had this idea of was he becoming the package manager to rule all package",
    "start": "2223119",
    "end": "2228200"
  },
  {
    "text": "managers eventually uh yes that is theoretically",
    "start": "2228200",
    "end": "2234040"
  },
  {
    "text": "possible whe that will ever happen I don't know but but those are the type of things we can actually do um so so what",
    "start": "2234040",
    "end": "2241240"
  },
  {
    "text": "is what is inside of this well we have a rich type system first of all which means that we can Define these",
    "start": "2241240",
    "end": "2246560"
  },
  {
    "text": "interfaces uh with a bunch of types actually the web assembly I think the web assembly",
    "start": "2246560",
    "end": "2251920"
  },
  {
    "text": "specification only works with four data types and what the web assembly component model then enables us is to",
    "start": "2251920",
    "end": "2257760"
  },
  {
    "text": "have a much more wider set of data types that we can work with so when we Define these interfaces we have uh we have more",
    "start": "2257760",
    "end": "2265319"
  },
  {
    "text": "options we have the interface type language WID and we can Define these contractors interfaces and actually what",
    "start": "2265319",
    "end": "2272800"
  },
  {
    "text": "we do is we bundle when we bundle interfaces we call them worlds which is quite I think I I like it I think it's",
    "start": "2272800",
    "end": "2278760"
  },
  {
    "text": "quite cute because you can talk about that your web ass simply lives in a given World which means I live in a",
    "start": "2278760",
    "end": "2284040"
  },
  {
    "text": "world that gives me these apis where I provide this API so if you are a runtime",
    "start": "2284040",
    "end": "2289079"
  },
  {
    "text": "or a platform or whatever you are you can say come to my world and your world is actually defined as a set of",
    "start": "2289079",
    "end": "2294880"
  },
  {
    "text": "interfaces which is quite nerdy but anyways uh okay we can go off of that",
    "start": "2294880",
    "end": "2300680"
  },
  {
    "text": "threat if you want maybe later maybe over be some time but yeah uh but anyways end result is we can do these",
    "start": "2300680",
    "end": "2307160"
  },
  {
    "text": "comp applications functionality across programming languages okay let's try and do this in",
    "start": "2307160",
    "end": "2312240"
  },
  {
    "text": "practice I try to create another sort of Stack diagram or whatever we call this",
    "start": "2312240",
    "end": "2317560"
  },
  {
    "text": "with some pseudo code I don't even know what syntax of language is but I immediately see there's an error in the",
    "start": "2317560",
    "end": "2322640"
  },
  {
    "text": "print statement but anyways but again we have the was and runtime at the bottom we have the wasy API the wasi standard",
    "start": "2322640",
    "end": "2329720"
  },
  {
    "text": "API where we use wasy CLI so we call run and we expect to get something back on standard",
    "start": "2329720",
    "end": "2334760"
  },
  {
    "text": "out uh the first component basically implements a code saying print hello and",
    "start": "2334760",
    "end": "2340160"
  },
  {
    "text": "then I'm going to get the current city from somewhere now we're going to take that component and we are going to describe an interface so someone can",
    "start": "2340160",
    "end": "2346880"
  },
  {
    "text": "Implement a component that gives us the current city by implementing a current city function that returns a",
    "start": "2346880",
    "end": "2353560"
  },
  {
    "text": "string bear over with you trying to you know just do the example that and then you know we can we can think about what",
    "start": "2353560",
    "end": "2360400"
  },
  {
    "text": "that what that might means so I think what we're going to do here is I'm actually just going to browse to the uh",
    "start": "2360400",
    "end": "2367200"
  },
  {
    "text": "the finish code instead of building this from ground up because",
    "start": "2367200",
    "end": "2372560"
  },
  {
    "text": "um it'll just be too much of me standing here and copy pasting thingies so",
    "start": "2372560",
    "end": "2380280"
  },
  {
    "text": "okay let's first look at the one the component we have at the bottom I'm going to call this a low so this one has",
    "start": "2380280",
    "end": "2386920"
  },
  {
    "text": "this WID definition the package name is just you know eventually being used so we can host these things in Registries",
    "start": "2386920",
    "end": "2394000"
  },
  {
    "text": "meaning that we don't have to have our interface definition locally we can basically say this package with this",
    "start": "2394000",
    "end": "2400720"
  },
  {
    "text": "name and this version is what I'm targeting when I'm building my thing and these things can then live in Registries",
    "start": "2400720",
    "end": "2405800"
  },
  {
    "text": "like you know from containers and package managers and so on and so forth but the thing that I'm building right",
    "start": "2405800",
    "end": "2411960"
  },
  {
    "text": "now uh Target this world called hello city and I will be importing from a",
    "start": "2411960",
    "end": "2418079"
  },
  {
    "text": "package called component cities the uh the interface called City",
    "start": "2418079",
    "end": "2424160"
  },
  {
    "text": "info so what I have in here again this is been in Rust two things I have my",
    "start": "2424160",
    "end": "2430079"
  },
  {
    "text": "tool chain providing bindings for me which means that my tool chain understands how to translate this withd",
    "start": "2430079",
    "end": "2436640"
  },
  {
    "text": "definition into some Rust code that I can then write against okay so that's all generated code depending on the",
    "start": "2436640",
    "end": "2443800"
  },
  {
    "text": "programming language you're in there are various binding tools to use I'm going to show a net implementation of this as",
    "start": "2443800",
    "end": "2449119"
  },
  {
    "text": "well um but we'll just start off with rust here so basically what",
    "start": "2449119",
    "end": "2454200"
  },
  {
    "text": "rusts uh we need to do is we can import those bindings we can import those City in for the current city function is",
    "start": "2454200",
    "end": "2460280"
  },
  {
    "text": "defined within there and then we can Implement a main function said you know let's go and find a function called",
    "start": "2460280",
    "end": "2465760"
  },
  {
    "text": "current city and let's print hello current city once we get something back but there's nothing in here that you",
    "start": "2465760",
    "end": "2471920"
  },
  {
    "text": "know implements the function of a current city where that is implemented is in this other rust implementation up",
    "start": "2471920",
    "end": "2478359"
  },
  {
    "text": "here so basically the the link between the two and again uh this is dependent",
    "start": "2478359",
    "end": "2485920"
  },
  {
    "text": "on the tool chain is in cargo I can actually say that component cities",
    "start": "2485920",
    "end": "2491119"
  },
  {
    "text": "package that I was referencing in my WID file you can go and find that here so this is a path but this could also be a",
    "start": "2491119",
    "end": "2497000"
  },
  {
    "text": "registered reference so I could reg blah I could publish this WID definition somewhere in the internet and just you",
    "start": "2497000",
    "end": "2503359"
  },
  {
    "text": "know reference that here so I actually now have a dependency on this package and what that package looks like",
    "start": "2503359",
    "end": "2510599"
  },
  {
    "text": "is this there is an interface called City info City info has a function called Curren City that returns a string",
    "start": "2510599",
    "end": "2516400"
  },
  {
    "text": "and there's a world where we export that interface City info so what I'm doing up",
    "start": "2516400",
    "end": "2521680"
  },
  {
    "text": "here is I am implementing cities info so I'm",
    "start": "2521680",
    "end": "2527200"
  },
  {
    "text": "implementing the function called current city that returns a string and T we are in Copenhagen so let that be Copenhagen",
    "start": "2527200",
    "end": "2533960"
  },
  {
    "text": "and we will export this so we know that we have a component now that will be exporting that particular",
    "start": "2533960",
    "end": "2540640"
  },
  {
    "text": "interface and we should be able to try and run this so let's go over here and",
    "start": "2540640",
    "end": "2547839"
  },
  {
    "text": "in our backup folder uh let's start by going into the",
    "start": "2547839",
    "end": "2553559"
  },
  {
    "text": "hello and what we will do then is we will start building each of these so",
    "start": "2553559",
    "end": "2558680"
  },
  {
    "text": "first we will build the hello thingy and then we will build the",
    "start": "2558680",
    "end": "2565880"
  },
  {
    "text": "city thingy and then we can go back see",
    "start": "2565880",
    "end": "2571040"
  },
  {
    "text": "did I put things I'm just going to go in here because I might have we will then use a tool called wasn't tools and we",
    "start": "2571040",
    "end": "2577960"
  },
  {
    "text": "can compose these things together so basically we're saying take the hello wasm take the not the net one we'll get",
    "start": "2577960",
    "end": "2585520"
  },
  {
    "text": "back to that later uh was tools",
    "start": "2585520",
    "end": "2591599"
  },
  {
    "text": "compose and this this is the one so take the hello wassom take the city's wassom that",
    "start": "2591599",
    "end": "2597559"
  },
  {
    "text": "implements the get City function that we need and output a wassom file called compost wassom and once we do",
    "start": "2597559",
    "end": "2604760"
  },
  {
    "text": "that we are not [Music]",
    "start": "2604760",
    "end": "2612130"
  },
  {
    "text": "uh let's see where are we target",
    "start": "2613240",
    "end": "2618920"
  },
  {
    "text": "debug wasn't was he",
    "start": "2618920",
    "end": "2622960"
  },
  {
    "text": "debug something this file is not oh oh oh oh okay let's go back so cargo",
    "start": "2624359",
    "end": "2631200"
  },
  {
    "text": "component build there you go um we actually going to build components now we're not going to build",
    "start": "2631200",
    "end": "2638559"
  },
  {
    "text": "modules so let me go back and fix that so now we",
    "start": "2638559",
    "end": "2644720"
  },
  {
    "text": "actually have real uh web assembly components and we should be able to compose these together yes and we have a",
    "start": "2644720",
    "end": "2652319"
  },
  {
    "text": "composed wasm and again we can use wasm time because we're just doing CLI and",
    "start": "2652319",
    "end": "2657400"
  },
  {
    "text": "you have hello Copenhagen so we have one web assembly now that we created from those two yeah you can yeah",
    "start": "2657400",
    "end": "2664880"
  },
  {
    "text": "yeah thank you but we can also do that inet and this is",
    "start": "2665200",
    "end": "2671240"
  },
  {
    "text": "so this is so experimental that I actually have to run a Windows machine in Asha to even build this thing uh so",
    "start": "2671240",
    "end": "2677319"
  },
  {
    "text": "if you want to try this at home um just make sure you have like at least a whole weekend to get this work no it's not",
    "start": "2677319",
    "end": "2683720"
  },
  {
    "text": "that bad um but anyways um if you w",
    "start": "2683720",
    "end": "2689838"
  },
  {
    "text": "to can I zoom here I can zoom this is the secret the secret thing",
    "start": "2690200",
    "end": "2698200"
  },
  {
    "text": "to try and build web assembly components in net so inside of bod lines there's a",
    "start": "2698200",
    "end": "2704040"
  },
  {
    "text": "uh Reaper called componentize the net they they all called componentize componentize the net componentize python",
    "start": "2704040",
    "end": "2710319"
  },
  {
    "text": "componentize JavaScript y y componenti net actually has a really really nice",
    "start": "2710319",
    "end": "2715359"
  },
  {
    "text": "walkthrough of how to do this but really what I wanted you to show if if you're more familiar with net is how this going",
    "start": "2715359",
    "end": "2721119"
  },
  {
    "text": "to look like you have the width definition on the right hand side and you have the code that I need to write",
    "start": "2721119",
    "end": "2726160"
  },
  {
    "text": "on the left hand side which basically I'm in that namespace the cities world with export component cities thingy and",
    "start": "2726160",
    "end": "2734119"
  },
  {
    "text": "I am implementing creating information of the ICD info interface which you can",
    "start": "2734119",
    "end": "2739480"
  },
  {
    "text": "see over here and there I'm implementing that uh function called current City",
    "start": "2739480",
    "end": "2744880"
  },
  {
    "text": "returning copen developer Festival so we should be able to net publish",
    "start": "2744880",
    "end": "2750720"
  },
  {
    "text": "this um net 8 net 9 would work net 9 I guess works better right",
    "start": "2750720",
    "end": "2758160"
  },
  {
    "text": "now uh and by the way if you feel into",
    "start": "2758160",
    "end": "2763240"
  },
  {
    "text": "this and you are very Savvy net Dev anyways if you feel into this and you like net and you like to write C there's",
    "start": "2763240",
    "end": "2771000"
  },
  {
    "text": "a a good opportunity to impact this whole experience like how does the code",
    "start": "2771000",
    "end": "2776839"
  },
  {
    "text": "on the left hand side how should that actually look like what feels most natural as a c develop in terms of",
    "start": "2776839",
    "end": "2782119"
  },
  {
    "text": "implementing these type of interfaces and so on and so forth because there's a lot of stuff going on be behind the",
    "start": "2782119",
    "end": "2787200"
  },
  {
    "text": "scenes to generate the bindings and all these things uh based on the WID file",
    "start": "2787200",
    "end": "2792880"
  },
  {
    "text": "and all of that is really uh something that people have to invent uh I think you can you can even",
    "start": "2792880",
    "end": "2800359"
  },
  {
    "text": "see how the bind in uh you know the interface definitions and those type of",
    "start": "2800359",
    "end": "2806520"
  },
  {
    "text": "things are generated like this is all code generated by this uh by this Nu package so how these things make sense",
    "start": "2806520",
    "end": "2814400"
  },
  {
    "text": "and so on and so forth again this is very language specific um but there's definitely opportunity to",
    "start": "2814400",
    "end": "2819720"
  },
  {
    "text": "to impact some of that okay we did build a component I'm going to try and copy",
    "start": "2819720",
    "end": "2825079"
  },
  {
    "text": "this out of my VM and over here and I am going to replace and now",
    "start": "2825079",
    "end": "2832079"
  },
  {
    "text": "we should be able to compose our hello thingy the thing that says hello and ask",
    "start": "2832079",
    "end": "2838599"
  },
  {
    "text": "for the current city with our net component and let's just get",
    "start": "2838599",
    "end": "2845599"
  },
  {
    "text": "composed and now we have a locing developer festival and someone added a to-do somewhere in the tool chain",
    "start": "2845599",
    "end": "2851880"
  },
  {
    "text": "there's there's a to-do being written out I uh I have no idea where that actually comes from um but what we",
    "start": "2851880",
    "end": "2858640"
  },
  {
    "text": "basically did is we took a function written in Rust some Rust code we",
    "start": "2858640",
    "end": "2864160"
  },
  {
    "text": "compiled down to Weber simply we took a another function or an interface implementation written in net well we",
    "start": "2864160",
    "end": "2871160"
  },
  {
    "text": "didn't say Shar compiled to net uh I guess that's the right term but anyways",
    "start": "2871160",
    "end": "2876520"
  },
  {
    "text": "and then we took those two web assembly and we compos them together into one web assembly binary and we could just run",
    "start": "2876520",
    "end": "2882760"
  },
  {
    "text": "that because they all conform to the CLI thingy so I hope that sort of gives you",
    "start": "2882760",
    "end": "2889400"
  },
  {
    "text": "this idea of where this component model adds to this whole thing of having small portable fast runnable thingies um that",
    "start": "2889400",
    "end": "2897359"
  },
  {
    "text": "we can then you know compose together in these in these various scenarios and really we've done a lot of",
    "start": "2897359",
    "end": "2905440"
  },
  {
    "text": "this we used all of this in of spin so spin is not only a thing that can do was HTP and reddish but it also have a bunch",
    "start": "2905440",
    "end": "2912079"
  },
  {
    "text": "of ways of interacting with things outside so you know having to store data",
    "start": "2912079",
    "end": "2918240"
  },
  {
    "text": "in a key value store is something that's super easy you know using LMS like",
    "start": "2918240",
    "end": "2923400"
  },
  {
    "text": "inferencing so this is this would be the marketing representation of spin is this is the WID representation of what spin",
    "start": "2923400",
    "end": "2928880"
  },
  {
    "text": "is so you can see we have these worlds defined in here so basically you can see if you wrote a spin app uh targeting the",
    "start": "2928880",
    "end": "2937119"
  },
  {
    "text": "world platform you get access to configuration you get access to outgoing HTP you get access to postgress",
    "start": "2937119",
    "end": "2942480"
  },
  {
    "text": "databases there's a MySQL interface SQ light interface red is key value llm",
    "start": "2942480",
    "end": "2947680"
  },
  {
    "text": "what's even more interesting in the way that these things run inside of spin is that if you use the key value interface",
    "start": "2947680",
    "end": "2955200"
  },
  {
    "text": "which is like you know KV open KV set KV get and so on and so forth pretty",
    "start": "2955200",
    "end": "2960280"
  },
  {
    "text": "straightforward um because we have this model of plugging things together",
    "start": "2960280",
    "end": "2968000"
  },
  {
    "text": "we can actually inside of the the wasn't time um embedding that we do so the spin",
    "start": "2968000",
    "end": "2975240"
  },
  {
    "text": "process we can have the key Value Store being backed by any different type of database technology you want and this is",
    "start": "2975240",
    "end": "2982559"
  },
  {
    "text": "actually super interesting because it makes for a really awesome developer experience if you've so I spent a few",
    "start": "2982559",
    "end": "2988839"
  },
  {
    "text": "years in the Asia Dev tools uh team in Microsoft building some of those developer tools for aser and one of the",
    "start": "2988839",
    "end": "2995280"
  },
  {
    "text": "things we constantly uh had to deal with was how",
    "start": "2995280",
    "end": "3000599"
  },
  {
    "text": "do I get a blob storage on my developer machine I guess some of you kind of been there like there are emulators and other",
    "start": "3000599",
    "end": "3006440"
  },
  {
    "text": "types of things I think there even some open source efforts in terms of doing those type of things today with with a model like this it's",
    "start": "3006440",
    "end": "3013839"
  },
  {
    "text": "so much easier so the way that we've implemented key Val St spin locally we just use a SQL light file and we just",
    "start": "3013839",
    "end": "3019799"
  },
  {
    "text": "have a table structure in there and once you move them into firan Cloud they",
    "start": "3019799",
    "end": "3024839"
  },
  {
    "text": "actually are stored into a cloud providers manage database offering if",
    "start": "3024839",
    "end": "3030280"
  },
  {
    "text": "you run inside of kubernetes you can provide a runtime configuration file saying this is the redest file I want to",
    "start": "3030280",
    "end": "3035680"
  },
  {
    "text": "have backed so when you think about how things move from development and using standardized apis into a platform the",
    "start": "3035680",
    "end": "3043440"
  },
  {
    "text": "platform gets to Define what is the implementation of a key value store here",
    "start": "3043440",
    "end": "3048599"
  },
  {
    "text": "but also what is the implementation of all these other apis that are available in that world so that is I think that is",
    "start": "3048599",
    "end": "3055480"
  },
  {
    "text": "super interesting and super spying around this component uh world and I",
    "start": "3055480",
    "end": "3061240"
  },
  {
    "text": "don't have time to do this demo but basically the idea was just you know I build my own host and that host can",
    "start": "3061240",
    "end": "3066920"
  },
  {
    "text": "dynamically load web assembly components so I have this thing where I can put in a string and I can start adding more components in and the more components I",
    "start": "3066920",
    "end": "3073319"
  },
  {
    "text": "add in the more Transformations I can do with the string so basically turn them uper case reverse them upus skate them",
    "start": "3073319",
    "end": "3078640"
  },
  {
    "text": "whatever I want to do so if you embed a web assembly runtime in your own host",
    "start": "3078640",
    "end": "3084520"
  },
  {
    "text": "you can do you can do fun things like that um that is part of this dynamically loading",
    "start": "3084520",
    "end": "3091040"
  },
  {
    "text": "things to leave a little room for Q&A I am going to maybe skip some of this well let's do",
    "start": "3091040",
    "end": "3098520"
  },
  {
    "text": "a little bit of the uh thought the Visionary type of the presentation",
    "start": "3098520",
    "end": "3105079"
  },
  {
    "text": "so well some of the um some of the people we have worked with around sort",
    "start": "3105079",
    "end": "3110960"
  },
  {
    "text": "of figuring out what is the right developer model for spin what's the developer experience you want to you want to provide and how can we use all",
    "start": "3110960",
    "end": "3118079"
  },
  {
    "text": "of this technology to think about uh you",
    "start": "3118079",
    "end": "3124599"
  },
  {
    "text": "know I hate calling it develop of productivity but I guess you know what I mean right like to make things easier",
    "start": "3124599",
    "end": "3129799"
  },
  {
    "text": "right to not have to deal with um waiting a long time to go through you",
    "start": "3129799",
    "end": "3137200"
  },
  {
    "text": "know building you know building debugging going back and changing code and all those type of Cycles uh you know",
    "start": "3137200",
    "end": "3143720"
  },
  {
    "text": "making sure it works on my machine also works once it gets into production like all of those type of things right all of",
    "start": "3143720",
    "end": "3148920"
  },
  {
    "text": "those irritating things where small configurations and things are in the way of just like moving",
    "start": "3148920",
    "end": "3154359"
  },
  {
    "text": "along um there's definitely a way to think about how these components can stackage on of on top of each other sort",
    "start": "3154359",
    "end": "3161799"
  },
  {
    "text": "of like in a in an onion shape um I have had",
    "start": "3161799",
    "end": "3168079"
  },
  {
    "text": "people uh well and I think part of that is also you know enabling how how we can",
    "start": "3168079",
    "end": "3175240"
  },
  {
    "text": "uh put guard rails around the type of code that we write not only from the security model of things being sandboxed but also you know give people",
    "start": "3175240",
    "end": "3182799"
  },
  {
    "text": "very specific interfaces that might even be fairly close to you know um the",
    "start": "3182799",
    "end": "3188599"
  },
  {
    "text": "business context they're in one example is with spin we ask",
    "start": "3188599",
    "end": "3194079"
  },
  {
    "text": "people to implement HTTP handlers it's like why does every single developer who",
    "start": "3194079",
    "end": "3199880"
  },
  {
    "text": "needs to build some kind of busy type of workflow have to do with HTTP even so we",
    "start": "3199880",
    "end": "3207079"
  },
  {
    "text": "could I have a sample of that I'll try to share some of these samples afterwards but we have a sample where actually you could Define an interface",
    "start": "3207079",
    "end": "3215440"
  },
  {
    "text": "in between the HP Handler and your business logic that is I will give you",
    "start": "3215440",
    "end": "3221160"
  },
  {
    "text": "Jason I know Jason is not as well it might be an okay example but you could also strongly type it like you could",
    "start": "3221160",
    "end": "3227079"
  },
  {
    "text": "Define in WID what the Excel data structure is that you will hand over to someone and they will deliver you a",
    "start": "3227079",
    "end": "3233520"
  },
  {
    "text": "strongly typed data structure back and that's all they had to do and you wrap that in an HTTP Handler or",
    "start": "3233520",
    "end": "3239680"
  },
  {
    "text": "you wrap it in a CLI run or you wrap it in a redish trigger like all the the means of transportation of getting the",
    "start": "3239680",
    "end": "3245920"
  },
  {
    "text": "data that they need to manipulate or do something with and returning it back could Rew wrapped in whatever transport",
    "start": "3245920",
    "end": "3253720"
  },
  {
    "text": "you you want to Define but then in a very in a strongly typed interface towards",
    "start": "3253720",
    "end": "3258839"
  },
  {
    "text": "that and I tend to think of this as you know being able to build these",
    "start": "3258839",
    "end": "3264240"
  },
  {
    "text": "comprehensive compute platforms um where you know today the interface",
    "start": "3264240",
    "end": "3271720"
  },
  {
    "text": "between development and platform engineering or development and operations you know tends to be a",
    "start": "3271720",
    "end": "3277240"
  },
  {
    "text": "container runtime right like I most people work in an environment where they",
    "start": "3277240",
    "end": "3283319"
  },
  {
    "text": "can run a container um or they have some other well-defined uh interface but it",
    "start": "3283319",
    "end": "3289079"
  },
  {
    "text": "is also a very common interface like it doesn't have necessarily a lot of uh things beyond that so this idea with",
    "start": "3289079",
    "end": "3296000"
  },
  {
    "text": "these comprehensive computer platform we really trying to think about what can I in the context that my company Works in",
    "start": "3296000",
    "end": "3301640"
  },
  {
    "text": "how can I make my platform more specific to the context we're in and take away a",
    "start": "3301640",
    "end": "3307240"
  },
  {
    "text": "lot of these concerns about HTTP and maybe even authentication and other types of things and just have people add",
    "start": "3307240",
    "end": "3314760"
  },
  {
    "text": "in which I guess is like a lot of use cases get some data check some stuff and",
    "start": "3314760",
    "end": "3320160"
  },
  {
    "text": "external systems manipulate the data and return something um and you you can actually do that with",
    "start": "3320160",
    "end": "3327200"
  },
  {
    "text": "with this this type of model and you can think about how you know I mentioned key value as a component like you get a key",
    "start": "3327200",
    "end": "3334000"
  },
  {
    "text": "Value Store you don't know where it's stored you don't know how that implementation of where it's stored Works um but you get access to it I have",
    "start": "3334000",
    "end": "3341760"
  },
  {
    "text": "an example of data of your casing where basically you have someone who writes against a wasy interface to get the data",
    "start": "3341760",
    "end": "3347359"
  },
  {
    "text": "out of a SQL database but then you can inject a component in between that both",
    "start": "3347359",
    "end": "3352599"
  },
  {
    "text": "Import and Export the same interface and then you can start doing things with the SQL CS like for instance you could upate",
    "start": "3352599",
    "end": "3360319"
  },
  {
    "text": "pii data coming back from the database and things like that which guess another example of how you can",
    "start": "3360319",
    "end": "3366119"
  },
  {
    "text": "compose uh data security into your into your",
    "start": "3366119",
    "end": "3372038"
  },
  {
    "text": "applications so key takeway I believe from the component stuff is you know you",
    "start": "3372119",
    "end": "3377520"
  },
  {
    "text": "have selfon self-contained units of work they allow interaction across programming languages we have Rich",
    "start": "3377520",
    "end": "3384960"
  },
  {
    "text": "contracts we can build platforms where things have being loaded gamly and we can compose systems on components and",
    "start": "3384960",
    "end": "3391599"
  },
  {
    "text": "then I have the big J polyglot Dynamic platforms doesn't",
    "start": "3391599",
    "end": "3398039"
  },
  {
    "text": "that sound very futuristic is whatever think about it that way right you can",
    "start": "3398039",
    "end": "3404039"
  },
  {
    "text": "support things that are much more Dynamic you can build platforms that are much closer to the concerns of what people are actually doing and you can",
    "start": "3404039",
    "end": "3410680"
  },
  {
    "text": "enable all this in a polyot way and the world will be a better place thank you I",
    "start": "3410680",
    "end": "3416920"
  },
  {
    "text": "put some Search terms in I didn't want to put links in because that's really hard but good Search terms feel free to",
    "start": "3416920",
    "end": "3422799"
  },
  {
    "text": "reach out uh afterwards I'll Stick Around firon has a Discord server where we discuss a lot of the open source",
    "start": "3422799",
    "end": "3428960"
  },
  {
    "text": "projects and anything web assembly so also feel free to come there and hang out we do have a few minutes left for",
    "start": "3428960",
    "end": "3436079"
  },
  {
    "text": "Q&A there's a microphone down here if you want to go there and ask a question we can do that I'm also happy to take",
    "start": "3436079",
    "end": "3441760"
  },
  {
    "text": "questions afterwards thank you",
    "start": "3441760",
    "end": "3447960"
  },
  {
    "text": "yes do you mind go to microphone there is a stream going on as well",
    "start": "3457760",
    "end": "3463680"
  },
  {
    "text": "so I I just want to to ask what is your thought on the The buing Experience",
    "start": "3465319",
    "end": "3470760"
  },
  {
    "text": "because when you cross the language right uh it become a challenge so what is your thought behind that it's very",
    "start": "3470760",
    "end": "3479480"
  },
  {
    "text": "pool uh you you you there there's no there's no breakpoint debuging support",
    "start": "3479480",
    "end": "3484599"
  },
  {
    "text": "in any of the language tool change today uh I know um actually Microsoft did some",
    "start": "3484599",
    "end": "3490160"
  },
  {
    "text": "work to enable Wy support for extensions in vs code and they are trying to break",
    "start": "3490160",
    "end": "3496520"
  },
  {
    "text": "some waves there um so so it is it is again it's so I",
    "start": "3496520",
    "end": "3502720"
  },
  {
    "text": "think this is one of the Achilles heels of web assembly like a the thing that's very hard you know to fix is that",
    "start": "3502720",
    "end": "3510000"
  },
  {
    "text": "there's a lot of problems that needs to be solved in each nav language tool chain and and and and for instance",
    "start": "3510000",
    "end": "3515480"
  },
  {
    "text": "breakpoint debugging would be one of those um there are gbd debugging you can attach to we",
    "start": "3515480",
    "end": "3521240"
  },
  {
    "text": "simply component but then you will sort of get the bite code out you won't get the stuff out in the program language",
    "start": "3521240",
    "end": "3527640"
  },
  {
    "text": "you originally wrote it in right which doesn't feel uh very so yeah so if You' like to work on debugging then come to",
    "start": "3527640",
    "end": "3534000"
  },
  {
    "text": "the web assembly space hello um so for the components a lot of",
    "start": "3534000",
    "end": "3541559"
  },
  {
    "text": "them package like the python runtime in itself how do you see like in a system",
    "start": "3541559",
    "end": "3546920"
  },
  {
    "text": "with a lot of components won't the runtime be packaged like 50 times for each component and have to start up and",
    "start": "3546920",
    "end": "3553880"
  },
  {
    "text": "boot up and yeah stuff like that um so the the the model that spin uses uh the",
    "start": "3553880",
    "end": "3560559"
  },
  {
    "text": "runtime only run once there's just one implementation of the runtime so the runtime dynamically loads each and every",
    "start": "3560559",
    "end": "3566160"
  },
  {
    "text": "component oh yeah not the web assembly runtime like the python interpreter run",
    "start": "3566160",
    "end": "3572000"
  },
  {
    "text": "the net run time the the things that yeah run the the norm the code you",
    "start": "3572000",
    "end": "3578119"
  },
  {
    "text": "compiled in yeah yes at least for the scripted languages like Python and JavaScript there is work to be done to",
    "start": "3578119",
    "end": "3584400"
  },
  {
    "text": "get those sizes down and those are things we are working on um I think we",
    "start": "3584400",
    "end": "3590240"
  },
  {
    "text": "are quite okay with net I saw the aspet core thing that we can build today you can actually get something up running",
    "start": "3590240",
    "end": "3596440"
  },
  {
    "text": "that was around 17 megabytes that's an asp n core",
    "start": "3596440",
    "end": "3601720"
  },
  {
    "text": "application uh whereas one of my Microsoft friend tolds me that the smallest aspet core container is 60",
    "start": "3601720",
    "end": "3607160"
  },
  {
    "text": "megabytes so I mean there are those comparisons still like it would be super nice if everything was like you know 17",
    "start": "3607160",
    "end": "3614160"
  },
  {
    "text": "kilobytes like rust but that's not the case for all the programming languages so there are still those tradeoffs yeah",
    "start": "3614160",
    "end": "3623160"
  },
  {
    "text": "thumbs up we're done thanks everyone for coming I'll Stick Around for questions and conversations afterwards",
    "start": "3627400",
    "end": "3634680"
  }
]