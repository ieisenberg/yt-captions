[
  {
    "text": "all right perfect so awesome to have you here thank you thank you uh we're going to talk about what every nodejs",
    "start": "6160",
    "end": "13080"
  },
  {
    "text": "developer needs to know about elixir today there's me on twitter uh i i",
    "start": "13080",
    "end": "20000"
  },
  {
    "text": "respond on twitter so hit me there i love carrying this conversation on out of here and if you have any questions uh",
    "start": "20000",
    "end": "25439"
  },
  {
    "text": "always follow up with me there uh there's no expiration date on that so",
    "start": "25439",
    "end": "31920"
  },
  {
    "text": "um i want to start off uh th this illustration appeared in the guardian",
    "start": "31920",
    "end": "37920"
  },
  {
    "text": "shortly after december 25th 1914 and this is an illustration of uh the",
    "start": "37920",
    "end": "43520"
  },
  {
    "text": "christmas truce uh where the german and british uh soldiers that were trench",
    "start": "43520",
    "end": "49320"
  },
  {
    "text": "warfare they uh with this excuse of coming out and burying their dead they got together and they were civil to each",
    "start": "49320",
    "end": "56800"
  },
  {
    "text": "other in the middle of this horror that was going on they stepped out and uh",
    "start": "56800",
    "end": "61920"
  },
  {
    "text": "they acknowledge each other's humanity and in technology tech we often break off into camps and we don't do that so",
    "start": "61920",
    "end": "69280"
  },
  {
    "text": "well a lot of times we don't reach out and so for the node folks here i really",
    "start": "69280",
    "end": "74479"
  },
  {
    "text": "appreciate you all coming to a functional programming talk and for the functional programming people i'm i'm",
    "start": "74479",
    "end": "79840"
  },
  {
    "text": "really glad you're here to uh to to think about this node side of things and so at the point that we make problems",
    "start": "79840",
    "end": "87080"
  },
  {
    "text": "visible then you can do something about it you can improve the situation but",
    "start": "87080",
    "end": "92240"
  },
  {
    "text": "until you make them visible uh it doesn't really happen and so thanks",
    "start": "92240",
    "end": "100040"
  },
  {
    "text": "um so this idea of civility we might hate a technology there might be",
    "start": "100040",
    "end": "106560"
  },
  {
    "text": "problems with a technology we might know that a technology is dangerous but you have to understand how people got there",
    "start": "106560",
    "end": "113360"
  },
  {
    "text": "and have empathy for them and uh and on both directions",
    "start": "113360",
    "end": "119119"
  },
  {
    "text": "so my path uh had this sort of long road you can tell by my gray hair that uh i",
    "start": "119119",
    "end": "125200"
  },
  {
    "text": "began writing software professionally back in 1994 and so i was writing c and",
    "start": "125200",
    "end": "131039"
  },
  {
    "text": "vb so the old vb not vb.net but kicking it old school and then pascal vbscript",
    "start": "131039",
    "end": "137760"
  },
  {
    "text": "jscript uh javascript and then c on and through that path um you know i i ran",
    "start": "137760",
    "end": "145680"
  },
  {
    "text": "into lots and lots of problems i created lots of problems you know like like we all do but i probably created more than",
    "start": "145680",
    "end": "150800"
  },
  {
    "text": "my share of problems and through that i i i might not have been the best",
    "start": "150800",
    "end": "156319"
  },
  {
    "text": "developer but i was awfully good at seeing my mistakes and trying to learn from them and seeing what the pitfalls",
    "start": "156319",
    "end": "162000"
  },
  {
    "text": "were that led me there and through that i i worked to try to help other people",
    "start": "162000",
    "end": "167280"
  },
  {
    "text": "avoid pitfalls and that empathy that i tried to use in in in this land of",
    "start": "167280",
    "end": "174400"
  },
  {
    "text": "imperative code and o code during the 90s and the as um interestingly it had",
    "start": "174400",
    "end": "181200"
  },
  {
    "text": "this reputation for being able to see these problems and help and that led me then to",
    "start": "181200",
    "end": "186599"
  },
  {
    "text": "norway 2007 so i was here i was brought over",
    "start": "186599",
    "end": "191760"
  },
  {
    "text": "for a large architectural risk assessment project so here in oslo there was a company that had a huge code base",
    "start": "191760",
    "end": "197599"
  },
  {
    "text": "had 20 million lines of managed c++ and c# code they had these 12 architects and",
    "start": "197599",
    "end": "202720"
  },
  {
    "text": "we worked on this uh risk assessment of how is the software going to destroy the company uh project over the six week",
    "start": "202720",
    "end": "208959"
  },
  {
    "text": "period uh and through that all of the problems that i imagined",
    "start": "208959",
    "end": "215280"
  },
  {
    "text": "would be in the codebase you know those were there it's you could almost get robert martin's book and just hand that",
    "start": "215280",
    "end": "221360"
  },
  {
    "text": "book over before you even went in and looked at the code because those problems are common across all imperative and oo systems those code",
    "start": "221360",
    "end": "227280"
  },
  {
    "text": "smells are there and so that was expected that side of it amazing team but you expected the",
    "start": "227280",
    "end": "235000"
  },
  {
    "text": "problems one thing i didn't expect though is there was a system in that uh in that shop that had been up and",
    "start": "235000",
    "end": "241599"
  },
  {
    "text": "running for four years without a millisecond of downtime so all the other sec all the other applications they were",
    "start": "241599",
    "end": "247599"
  },
  {
    "text": "crashing maybe multiple times a day uh it was embarrassing it was causing trouble",
    "start": "247599",
    "end": "252799"
  },
  {
    "text": "uh you had dependencies within the code that made it hard to upgrade you had the",
    "start": "252799",
    "end": "259440"
  },
  {
    "text": "mingling of state uh data and behavior like we're told to do by martin fowler",
    "start": "259440",
    "end": "265120"
  },
  {
    "text": "we had that all through the code and that caused all these defects in the software that made def uh it was really",
    "start": "265120",
    "end": "270960"
  },
  {
    "text": "hard to solve problems then we had event storms because it was you had concurrency involved in this concurrency",
    "start": "270960",
    "end": "276560"
  },
  {
    "text": "is hard to do if you have mutable state problem but this system four years without a",
    "start": "276560",
    "end": "283440"
  },
  {
    "text": "millisecond of downtime that was unusual and so i asked more and more about it and i actually learned it was even more",
    "start": "283440",
    "end": "289680"
  },
  {
    "text": "remarkable there had been two years previously there had been a major co code upgrade this compiled language they",
    "start": "289680",
    "end": "295120"
  },
  {
    "text": "compiled and they had pushed new updates to this running cluster without a millisecond of downtime then so i was",
    "start": "295120",
    "end": "301520"
  },
  {
    "text": "like what is the spooky magic and so i i learned for the first time the word erlang i'd never heard of it i i was off",
    "start": "301520",
    "end": "307600"
  },
  {
    "text": "imperative oo guy you know and um and i was happy there sort of happy i knew i",
    "start": "307600",
    "end": "312639"
  },
  {
    "text": "had problems and i knew there were problems but but i was comfortable there and so i i dug in and i i started",
    "start": "312639",
    "end": "318800"
  },
  {
    "text": "learning more about erlang and my code changed and i have built systems that",
    "start": "318800",
    "end": "323919"
  },
  {
    "text": "people tell stories about now that you know they've seen these good things and i couldn't have done that before before i ran into the erlang vm and so it",
    "start": "323919",
    "end": "332080"
  },
  {
    "text": "changed my life and so i'd like to come back to norway and uh you know share you",
    "start": "332080",
    "end": "337280"
  },
  {
    "text": "know return the favor so i'm very thankful for this city and uh for for what it's done for",
    "start": "337280",
    "end": "343240"
  },
  {
    "text": "me and all the defects it's kept me out of so here we have uh the hero's journey",
    "start": "343240",
    "end": "349120"
  },
  {
    "text": "this is sort of the arc that all uh novels and uh movies and everything follow this arc of the hero's journey",
    "start": "349120",
    "end": "355120"
  },
  {
    "text": "and so that was the beginning of my hero's journey and uh hopefully you know this will be the beginning of your",
    "start": "355120",
    "end": "360639"
  },
  {
    "text": "hero's journey as you go through and you pick up these uh uh some of this knowledge we'll go through this ordinary world and we'll",
    "start": "360639",
    "end": "366759"
  },
  {
    "text": "progress so for the node folks here i imagine you came to node for some of",
    "start": "366759",
    "end": "372560"
  },
  {
    "text": "these reasons it's really a welcoming uh community you can come in without",
    "start": "372560",
    "end": "378160"
  },
  {
    "text": "knowing much about programming at all and you know you're you're welcomed in and that's awesome and it's easy to get",
    "start": "378160",
    "end": "384560"
  },
  {
    "text": "started in node and there's no doubt about that it's easy to get started and you can you can be working in uh angular",
    "start": "384560",
    "end": "390639"
  },
  {
    "text": "uh durand aurelia one of these frameworks and if you need to have a backend you need to stand that back up",
    "start": "390639",
    "end": "395680"
  },
  {
    "text": "in quickly well you can do that in node it's it's very easy to to kick that up everyone sort of knows javascript no one",
    "start": "395680",
    "end": "402560"
  },
  {
    "text": "really knows javascript everyone sort of knows it uh then people also come",
    "start": "402560",
    "end": "407600"
  },
  {
    "text": "because they've been hurt in other stacks uh there's problems of the tools being too heavy or not being able to",
    "start": "407600",
    "end": "414319"
  },
  {
    "text": "have enough control over things just various problems and there is a concurrency story on node it's different",
    "start": "414319",
    "end": "420960"
  },
  {
    "text": "than i think a lot of people think it is but there is a story there and that and people know that concurrency is",
    "start": "420960",
    "end": "426080"
  },
  {
    "text": "important so that brings people and then there's good support in visual studio and and on azure",
    "start": "426080",
    "end": "433840"
  },
  {
    "text": "i i think of this uh this sort of progression in",
    "start": "433840",
    "end": "440479"
  },
  {
    "text": "node and i have lots of friends that went through node i i started working in node when it was brand shiny new because",
    "start": "440479",
    "end": "447039"
  },
  {
    "text": "i was interested in the story of it i pretty quickly then dropped it because i had already learned erling at that point",
    "start": "447039",
    "end": "452960"
  },
  {
    "text": "and i saw it's like this isn't really filling the bargain that i thought it should be and so uh but this is this",
    "start": "452960",
    "end": "458800"
  },
  {
    "text": "progression and we start off with folks that are junior and they're full of optimism you know they they haven't even",
    "start": "458800",
    "end": "464960"
  },
  {
    "text": "heard the horror stories yet they haven't heard any of the bad it's just this welcoming community they come in and they're they're excited about this",
    "start": "464960",
    "end": "470720"
  },
  {
    "text": "and that that is that is a beautiful thing to have and at some point you move on and",
    "start": "470720",
    "end": "476720"
  },
  {
    "text": "you then have your sort of engineers and they have heard the problems maybe",
    "start": "476720",
    "end": "482319"
  },
  {
    "text": "they've seen a few problems but the thing is is they can they can say i'll be a craftsman i see these problems",
    "start": "482319",
    "end": "488960"
  },
  {
    "text": "they're documented i'll know how to actually be diligent and not run into these problems myself and that's that",
    "start": "488960",
    "end": "495919"
  },
  {
    "text": "tier this is the second stage of node development and then you move on to the seniors and the leads and i have friends",
    "start": "495919",
    "end": "502639"
  },
  {
    "text": "that are in this spot right now they bought into this they brought their companies along and they've heard the",
    "start": "502639",
    "end": "508160"
  },
  {
    "text": "problems they've seen the problems and now they're like \"oh my god what have i done?\" you know they've they got themselves in a trap because they used",
    "start": "508160",
    "end": "514640"
  },
  {
    "text": "it for everything they used it for things far far outside of its sweet spot and they're in a terrible place and",
    "start": "514640",
    "end": "520560"
  },
  {
    "text": "they're having trouble shipping code that's rough that's a rough spot to be in and those folks i'm excited about",
    "start": "520560",
    "end": "527040"
  },
  {
    "text": "where they're at i'm excited about all of these these groups coming in because it's a great feeder into elixir i believe but the the folks that are",
    "start": "527040",
    "end": "533519"
  },
  {
    "text": "senior they're looking for escape pods and a lot of them are joining up at the elixir user groups around the country so",
    "start": "533519",
    "end": "540480"
  },
  {
    "text": "around the world so you'll have this mix of ruby people and you'll have this mix of node people and then a few scattered",
    "start": "540480",
    "end": "546240"
  },
  {
    "text": "fp people showing up at the elixir meetups and so uh i'm really tickled about this this linkage and this",
    "start": "546240",
    "end": "553720"
  },
  {
    "text": "connection when on node when people talk about uh node they often use the word",
    "start": "553720",
    "end": "559800"
  },
  {
    "text": "scalable and it it's sort of a problem i believe to use the word scalable in the",
    "start": "559800",
    "end": "565440"
  },
  {
    "text": "context of node well scalable is a rough word it's a sort of a buzzword marketing word it's a word that managers like to",
    "start": "565440",
    "end": "571680"
  },
  {
    "text": "use even though they don't know quite what it means and it i feel like you could say okay you've got a fast car",
    "start": "571680",
    "end": "579360"
  },
  {
    "text": "describing a car as a fast car you've got a car that goes and flies through the guardrails and falls down the bluff",
    "start": "579360",
    "end": "584800"
  },
  {
    "text": "at terminal velocity and you could say that that's a fast car but you're missing an important part of the story",
    "start": "584800",
    "end": "590560"
  },
  {
    "text": "by calling that a fast car you know there's other things going on and so when you call node scalable there's an",
    "start": "590560",
    "end": "596080"
  },
  {
    "text": "issue in that that it can handle the 20,000 connections that come in it can handle the 20,000 users as long as you",
    "start": "596080",
    "end": "602240"
  },
  {
    "text": "immediately pass that off for something else to do the work because if you do the work you then have got this issue of",
    "start": "602240",
    "end": "608880"
  },
  {
    "text": "where you're blocking you're blocking your other 19,999 users so the issue then is like",
    "start": "608880",
    "end": "615279"
  },
  {
    "text": "okay we hand off the work or who's going to do the work then and what do we write that in and there are all sorts of",
    "start": "615279",
    "end": "621120"
  },
  {
    "text": "solutions every time you run into a problem there are there's a lot of ingenuity in the node community and they",
    "start": "621120",
    "end": "626480"
  },
  {
    "text": "have solutions you'll have things like q and you have these ways of just passing things off these libraries that have been written but it's always hard manual",
    "start": "626480",
    "end": "634000"
  },
  {
    "text": "work and a lot of learning and discipline involved uh a lot of folks you'll see a",
    "start": "634000",
    "end": "640560"
  },
  {
    "text": "lot of blog posts that will say uh node is not a silver bullet and i think you",
    "start": "640560",
    "end": "646320"
  },
  {
    "text": "could say that about most technologies you know it's not the thing that solves everything but there's another way of",
    "start": "646320",
    "end": "652640"
  },
  {
    "text": "actually looking at the problem of silver bullet and in this sense i think maybe node is a silver bullet in that a",
    "start": "652640",
    "end": "660880"
  },
  {
    "text": "silver bullet has a really narrow use case and there's a sweet spot for a silver bullet and that is to kill",
    "start": "660880",
    "end": "666760"
  },
  {
    "text": "werewolves and dayto-day there aren't nearly as many werewolves running around as hollywood would make you think and so",
    "start": "666760",
    "end": "672560"
  },
  {
    "text": "the sweet spots that you'd fit there aren't as many solutions where it does map up closely and so",
    "start": "672560",
    "end": "679240"
  },
  {
    "text": "more more of an uglier view of this might be it's maybe not the silver bullet maybe it's more like the full",
    "start": "679240",
    "end": "684959"
  },
  {
    "text": "moon that brings out uh sort of some crazy in the environment and i i'll i'm",
    "start": "684959",
    "end": "690959"
  },
  {
    "text": "kind of off of this part of the talk but uh i've seen so many of my friends hurt by this and i believe that this is the",
    "start": "690959",
    "end": "697120"
  },
  {
    "text": "most dangerous technology in the world and uh and so and i hope that that you",
    "start": "697120",
    "end": "703600"
  },
  {
    "text": "take this in the spirit that i'm offering it that that i i i'm truly trying to help and i'm trying to keep uh",
    "start": "703600",
    "end": "708959"
  },
  {
    "text": "problems uh from happening so let's now move on to elixir and how it came to be",
    "start": "708959",
    "end": "715920"
  },
  {
    "text": "so we've got this history of uh a character named jose valim who is here at the conference this week to speak and",
    "start": "715920",
    "end": "723600"
  },
  {
    "text": "so he was a core member of the ruby on rails team and he",
    "start": "723600",
    "end": "729680"
  },
  {
    "text": "uh he was trying to solve problems on ruby uh all the you know he's a good",
    "start": "729800",
    "end": "734880"
  },
  {
    "text": "developer he's focused on these issues it's hard to solve problems on on ruby like people would ask for scale they",
    "start": "734880",
    "end": "741200"
  },
  {
    "text": "would ask for concurrency they'd ask for performance and that's a hard thing to deliver on the on the on ruby and so he",
    "start": "741200",
    "end": "747920"
  },
  {
    "text": "was battling that battle and he was then reading um seven languages in seven weeks out of curiosity who all read this",
    "start": "747920",
    "end": "754160"
  },
  {
    "text": "book uh awesome awesome yeah and so he got to the chapter on erlang and he was like whoa he was kind of like everyone",
    "start": "754160",
    "end": "760160"
  },
  {
    "text": "does when they first hear about what this thing does and they're like that's weird why haven't i heard of this thing and so he was reading about erlang and",
    "start": "760160",
    "end": "767120"
  },
  {
    "text": "he saw that it fit these problems of fault tolerance concurrency distribution this this scale thing that he had been",
    "start": "767120",
    "end": "774320"
  },
  {
    "text": "uh asked to solve and so he started looking into erlang then he's like first like everyone does when they first bump",
    "start": "774320",
    "end": "780320"
  },
  {
    "text": "into erling they think okay can i steal parts from erlang and bring it over into my stack and there reasons you can't do",
    "start": "780320",
    "end": "786160"
  },
  {
    "text": "that that we'll talk about briefly it's really hard it's a part hard problem and so he he's a smart guy he realized it",
    "start": "786160",
    "end": "792959"
  },
  {
    "text": "pretty quickly you can't do this it's not going to happen so he thought maybe i'll become an erlang developer okay",
    "start": "792959",
    "end": "798800"
  },
  {
    "text": "ruby is known for one thing and that's it's it's about developer joy right it's",
    "start": "798800",
    "end": "803920"
  },
  {
    "text": "a it's a happy place to be a developer they hug each other you know it's like a good good spot it's not necessarily",
    "start": "803920",
    "end": "810480"
  },
  {
    "text": "known for uh you know those other things we're talking about but it is about developer joy now you could say the",
    "start": "810480",
    "end": "816000"
  },
  {
    "text": "reverse about erlang so it is good about solving these hard engineering problems you've got these crusty engineers that",
    "start": "816000",
    "end": "822320"
  },
  {
    "text": "created the language two of them are here this week so we have joe armstrong and robert vering crusty serious engineer guys and uh and so they weren't",
    "start": "822320",
    "end": "829839"
  },
  {
    "text": "focused on the problem of dev joy at ericson in sweden in stockholm they weren't they weren't focused on that",
    "start": "829839",
    "end": "835600"
  },
  {
    "text": "problem and so jose decided i'm going to take i've got another approach instead of trying to rip off erlang what i'm",
    "start": "835600",
    "end": "841279"
  },
  {
    "text": "going to do is i'm going to write a new language that tolerates the uh that targets the erlang vm and that's the",
    "start": "841279",
    "end": "846480"
  },
  {
    "text": "path he went down he's like i'm going to build developer joy good modern tooling all this on top of this vm that has this",
    "start": "846480",
    "end": "852560"
  },
  {
    "text": "amazing track record and we're going to talk now about the sweet spots",
    "start": "852560",
    "end": "859120"
  },
  {
    "text": "so elixir it's also approachable and it's productive not just in the short term but in the long term so it's",
    "start": "859120",
    "end": "865440"
  },
  {
    "text": "approachable productive and you have modern tooling so first about approachable we can look at uh you go to",
    "start": "865440",
    "end": "873399"
  },
  {
    "text": "elixirlang.org and it's a useful website you know it's not just a thing because you got to have a website it's really",
    "start": "873399",
    "end": "879360"
  },
  {
    "text": "useful of learning the language and so if you jump in there and you go to the getting started guide down on the right",
    "start": "879360",
    "end": "885040"
  },
  {
    "text": "here you see 1 through 21 and you actually have a really good handle of the language just by following those",
    "start": "885040",
    "end": "891199"
  },
  {
    "text": "pages you can start here instead of getting a book and you'll do",
    "start": "891199",
    "end": "896639"
  },
  {
    "text": "fine then uh as you're going through that you can also go to this other link here and find all the meetups around the",
    "start": "896760",
    "end": "902480"
  },
  {
    "text": "world and you'll see a bunch of ruby people and a bunch of node people and functional programming people scattered",
    "start": "902480",
    "end": "907760"
  },
  {
    "text": "in this is the pattern i've seen city by city you can go to github see the code see",
    "start": "907760",
    "end": "913760"
  },
  {
    "text": "the language and contribute and you'll have uh feedback u from jose right on",
    "start": "913760",
    "end": "919760"
  },
  {
    "text": "the site so you have this uh you get a pull request and he's sending hearts all over the place and so this is a nice",
    "start": "919760",
    "end": "925600"
  },
  {
    "text": "thing to see this ruby uh love showing up uh inside of this this language he's",
    "start": "925600",
    "end": "930639"
  },
  {
    "text": "a great guardian of the language he's a great protector and he's also very interested in bringing in ideas from from all outside places another part of",
    "start": "930639",
    "end": "938480"
  },
  {
    "text": "the tooling story is hex you have hex pm it's the package management system uh it",
    "start": "938480",
    "end": "944079"
  },
  {
    "text": "target so you can use this for your erlang code which you don't have because there aren't any erling developers in the world there's like five 10 you know",
    "start": "944079",
    "end": "950639"
  },
  {
    "text": "there there are a few of us and so there aren't many but uh this elixir side there are a lot and um and that's a a",
    "start": "950639",
    "end": "957920"
  },
  {
    "text": "growing thing and so we go off and we see uh some of the libraries out here",
    "start": "957920",
    "end": "963199"
  },
  {
    "text": "you won't find libraries that do like three lines of code libraries these are",
    "start": "963199",
    "end": "968240"
  },
  {
    "text": "libraries that take on more serious things that people need all the time but you won't have your six lines of code on a on a a",
    "start": "968240",
    "end": "974839"
  },
  {
    "text": "package and also if you go to something like ecto and look at you'll see that the u that the level is pretty good here",
    "start": "974839",
    "end": "983600"
  },
  {
    "text": "this is the documentation off of a package that you pull down from uh hex hex is fast all sorts of good qualities",
    "start": "983600",
    "end": "990399"
  },
  {
    "text": "about it uh packages don't disappear on you on hex it's this immutable store of",
    "start": "990399",
    "end": "996040"
  },
  {
    "text": "packages packages disappearing on you this of course has been in the news uh this year uh poor fellow over here azer",
    "start": "996040",
    "end": "1003040"
  },
  {
    "text": "god bless him and so uh you know so he he took a beating and there's a lot of beating that went on there's a lot of uh",
    "start": "1003040",
    "end": "1009440"
  },
  {
    "text": "shenan there's a lot of there's a lot of negative that happened here but i think his comment by tracy harms is really",
    "start": "1009440",
    "end": "1014800"
  },
  {
    "text": "nice this catastrophe isn't the fault of a single single solitary uh developer's",
    "start": "1014800",
    "end": "1020000"
  },
  {
    "text": "decisions and if a complete stranger can push some buttons and break your production",
    "start": "1020000",
    "end": "1025038"
  },
  {
    "text": "deployment you have something some thinking to do especially if that was around six lines of code that was really",
    "start": "1025039",
    "end": "1032160"
  },
  {
    "text": "about doing something that the language should have done anyway out of the box okay modern tooling so we'll have",
    "start": "1032160",
    "end": "1039360"
  },
  {
    "text": "this sort of retro uh modern hipster bicycle thing here and so like all",
    "start": "1039360",
    "end": "1044798"
  },
  {
    "text": "modern languages we have uh the terminal is the way you do your good work and so so we'll return to the terminal here uh",
    "start": "1044799",
    "end": "1052880"
  },
  {
    "text": "ex the interactive elixir shell when we sayex that brings up an erlang node so",
    "start": "1052880",
    "end": "1060080"
  },
  {
    "text": "it brings up an instance of the erlang virtual machine and loads up all the elixir goodies",
    "start": "1060080",
    "end": "1065400"
  },
  {
    "text": "here okay we go x and we are inside of x",
    "start": "1065400",
    "end": "1071200"
  },
  {
    "text": "and we can do something like h anum so help we're going to get help on this thing we hit dot we tab and we get",
    "start": "1071200",
    "end": "1078000"
  },
  {
    "text": "autocomp completion of all of the functions within the a new module or within the au yeah within the a new module and so we say i'm interested in",
    "start": "1078000",
    "end": "1084640"
  },
  {
    "text": "what count one does the count that takes one argument i'm interested in what that one does so we get this nice color uh we",
    "start": "1084640",
    "end": "1092000"
  },
  {
    "text": "get examples right in the examples and this is the way you can go through all of the libraries in elixir and and you",
    "start": "1092000",
    "end": "1098000"
  },
  {
    "text": "have this help right at your fingertips mix is another tool uh ex is",
    "start": "1098000",
    "end": "1104960"
  },
  {
    "text": "a tool mix is a tool mix is ripped off from closure community there's a tool called linigan there which you know you",
    "start": "1104960",
    "end": "1111039"
  },
  {
    "text": "can see some of the the commands we can do with this you can think of it build code run your tests scaffold new",
    "start": "1111039",
    "end": "1116200"
  },
  {
    "text": "projects and it's pluggable so additional things can come in so let's uh say mix new fsbuzz we're",
    "start": "1116200",
    "end": "1124720"
  },
  {
    "text": "going to scaffold out fsbuzz and here we go we get a readme markdown file which is nice and modern we get a git ignore",
    "start": "1124720",
    "end": "1132480"
  },
  {
    "text": "built in which has our uh ignores that we would want to have in elixir project that's nice and modern and uh our config",
    "start": "1132480",
    "end": "1139840"
  },
  {
    "text": "and so on we have our fsbuzz module and then we have tests i mean this is nice",
    "start": "1139840",
    "end": "1145600"
  },
  {
    "text": "you know we come in here and this is a nice place to be so let's go into uh cd",
    "start": "1145600",
    "end": "1151679"
  },
  {
    "text": "into fsbuzz we say mix test we compile and right out of the box we get one",
    "start": "1151679",
    "end": "1157600"
  },
  {
    "text": "passing test so they already started off for us with a template for us to have tests so let's uh now go",
    "start": "1157600",
    "end": "1165880"
  },
  {
    "text": "in and see what that story looks",
    "start": "1165880",
    "end": "1173039"
  },
  {
    "text": "like okay so i have here uh our uh scaffolded out code off of our",
    "start": "1173880",
    "end": "1181679"
  },
  {
    "text": "fsbuzz this is just what is",
    "start": "1181679",
    "end": "1185760"
  },
  {
    "text": "uh so this is our one test that you know that was scaffled out for us and that's why we had our one now i have a fully",
    "start": "1188120",
    "end": "1194880"
  },
  {
    "text": "implemented fsbuzz over here and we can see it's down here uh we",
    "start": "1194880",
    "end": "1200400"
  },
  {
    "text": "we play to a number and it does a bunch of stuff that we don't have to worry about yet because we're going to see about the syntax in a minute but the",
    "start": "1200400",
    "end": "1206400"
  },
  {
    "text": "thing i wanted to show here was the experience of saying mix",
    "start": "1206400",
    "end": "1213160"
  },
  {
    "text": "test okay said we had three tests and one failure so we saw one test a minute ago what's that about and why do we have",
    "start": "1213160",
    "end": "1219200"
  },
  {
    "text": "a fail test let's go here and see what this failed test actually is so it says here fsb buzz play 10 to",
    "start": "1219200",
    "end": "1226600"
  },
  {
    "text": "16 and it expected a fsb buzz here but we had a fizz instead so let's go up here and see what",
    "start": "1226600",
    "end": "1233280"
  },
  {
    "text": "that's about so what we have",
    "start": "1233280",
    "end": "1238240"
  },
  {
    "text": "here is this is not a regular comment this is",
    "start": "1238440",
    "end": "1245520"
  },
  {
    "text": "a doc test and so right in the middle of our comments we've included examples of",
    "start": "1245520",
    "end": "1250960"
  },
  {
    "text": "usage to make it easy for people to come in and right here this becomes part of our test",
    "start": "1250960",
    "end": "1256440"
  },
  {
    "text": "suite so we have fsbuzz play 1 to5 it should get this and that became a unit test fsbuzz play 10 to 16 should get",
    "start": "1256440",
    "end": "1264720"
  },
  {
    "text": "this and that became a unit test that actually failed on us because we have a bug down here we have a pattern match",
    "start": "1264720",
    "end": "1270240"
  },
  {
    "text": "that's too greedy and so what we need to do is move this code up here do",
    "start": "1270240",
    "end": "1276520"
  },
  {
    "text": "this and then we need to move down here and we need to rerun our",
    "start": "1276520",
    "end": "1282039"
  },
  {
    "text": "tests oops i forgot to save didn't i",
    "start": "1282039",
    "end": "1287480"
  },
  {
    "text": "yeah so so our test passed now that was based off of that uh doc test so i think that's pretty",
    "start": "1291679",
    "end": "1298720"
  },
  {
    "text": "sweet okay so another productive nice sweet part of elixir is the phoenix",
    "start": "1299480",
    "end": "1305280"
  },
  {
    "text": "framework so this is a uh a web framework that was built by the fellow",
    "start": "1305280",
    "end": "1311120"
  },
  {
    "text": "who just walked in here jose valim created the language um and uh sunonny scragggin who is back there and chris",
    "start": "1311120",
    "end": "1318080"
  },
  {
    "text": "mccord and and and there's so bunch of awesome people chris was here last year gave a talk it's on um the on vimeo and",
    "start": "1318080",
    "end": "1325240"
  },
  {
    "text": "so phoenix is amazing but i'm not going to talk about it because there's a lot of good content about it by people here",
    "start": "1325240",
    "end": "1331039"
  },
  {
    "text": "later today but uh this is what a lot of people want when they come to a web framework",
    "start": "1331039",
    "end": "1336799"
  },
  {
    "text": "so elixir is functional and so we've probably heard a",
    "start": "1336799",
    "end": "1342240"
  },
  {
    "text": "lot of buzz about functional over the last few years and so a simple way of looking about functional is you have",
    "start": "1342240",
    "end": "1347880"
  },
  {
    "text": "inputs that are transformed by a function and you have then outputs a",
    "start": "1347880",
    "end": "1353440"
  },
  {
    "text": "goes to b inputs go to outputs you don't have i'm going to come",
    "start": "1353440",
    "end": "1358880"
  },
  {
    "text": "in i'm going to set the table with all my state i'm going to set fields properties i'm going to have a class",
    "start": "1358880",
    "end": "1364000"
  },
  {
    "text": "with all this stuff and i'm going to call then functions that are going to mutate state and then i'm going to lose track of what i just did a minute ago",
    "start": "1364000",
    "end": "1370000"
  },
  {
    "text": "and i'm going to have all these bugs instead you can look at the class what came in as the input and know what",
    "start": "1370000",
    "end": "1375200"
  },
  {
    "text": "should have happened inside of the function and return this is important and this is a good way of",
    "start": "1375200",
    "end": "1381280"
  },
  {
    "text": "getting out of a lot of those troubles that i saw when i was my first trip to norway mutability is another part of",
    "start": "1381280",
    "end": "1387919"
  },
  {
    "text": "functional programming and elixir takes this very seriously it has to take this very seriously because erlang vm has a",
    "start": "1387919",
    "end": "1394720"
  },
  {
    "text": "hard set of rules that it enforces and this is one of them so it's not a thing you can turn",
    "start": "1394720",
    "end": "1401279"
  },
  {
    "text": "off separation of data and behavior so this is the thing we're talking about earlier about classes with their fields",
    "start": "1401320",
    "end": "1407360"
  },
  {
    "text": "their properties their data and their behavior mingle together which limits the use that you'd be able to handle and",
    "start": "1407360",
    "end": "1412480"
  },
  {
    "text": "use that class in this is in elixir you have modules that have functions you don't have properties fields so you call",
    "start": "1412480",
    "end": "1419360"
  },
  {
    "text": "into a module and you call a function within a module and it's just the inputs that come in and then the outputs that",
    "start": "1419360",
    "end": "1424799"
  },
  {
    "text": "that go out so you spawn up a new process and you say this process i need to call into this function passing in",
    "start": "1424799",
    "end": "1432240"
  },
  {
    "text": "this input i'm going to take the output of that and feed that into another function and you just pipeline these things together and that's the way you",
    "start": "1432240",
    "end": "1438559"
  },
  {
    "text": "build programs inside of uh uh elixir so we've expressive dev joy let's",
    "start": "1438559",
    "end": "1445360"
  },
  {
    "text": "talk a bit about the language now so language language language okay so we",
    "start": "1445360",
    "end": "1450480"
  },
  {
    "text": "have ix again and we're going to look at some of the types here so we have integer expect it o x2a that's kind of",
    "start": "1450480",
    "end": "1457360"
  },
  {
    "text": "nice you know we got our hex right there uh you know we don't get barked at for having seven float divided by three it",
    "start": "1457360",
    "end": "1464720"
  },
  {
    "text": "just does the thing you would expect the thing you have a type called atoms that are sort of they're them they're the",
    "start": "1464720",
    "end": "1470880"
  },
  {
    "text": "thing themselves they're only comparable to themselves they're just a handle or a constant that uh even if you have a",
    "start": "1470880",
    "end": "1476880"
  },
  {
    "text": "whole cluster of different machines uh this like the uh the the atom goat is",
    "start": "1476880",
    "end": "1482880"
  },
  {
    "text": "equal to the atom goat on the other server and it's not equal to anything other than the atom goat",
    "start": "1482880",
    "end": "1488679"
  },
  {
    "text": "um strings are real strings inside of elixir you might have heard stories",
    "start": "1488679",
    "end": "1494000"
  },
  {
    "text": "horror stories about erlang where it's like oh it's bad at strings and it turns out it was a problem with naming was the",
    "start": "1494000",
    "end": "1499919"
  },
  {
    "text": "problem with erlang and strings the thing they called a string is not what people expected it to be and uh in",
    "start": "1499919",
    "end": "1506000"
  },
  {
    "text": "elixir a string is what you expect it to be you know you got this utf8 uh binary",
    "start": "1506000",
    "end": "1512159"
  },
  {
    "text": "good thing and it behaves like you would expect it to actually it behaves a little bit better than you expect it to",
    "start": "1512159",
    "end": "1517760"
  },
  {
    "text": "and we'll see that in a second uh we have lists uh you have lots of list processing inside of functional",
    "start": "1517760",
    "end": "1523120"
  },
  {
    "text": "languages and you have tpples so this is a positional thing so we see that okay",
    "start": "1523120",
    "end": "1528960"
  },
  {
    "text": "let's look at pattern matching for a second so x equal 5 so we got our five there and we say five equal x that's a",
    "start": "1528960",
    "end": "1536720"
  },
  {
    "text": "little weird so what we actually doing here this is a pattern match and it's going to evaluate the same it's happy to",
    "start": "1536720",
    "end": "1542480"
  },
  {
    "text": "say yep five is equal to x you know this is a match and you can pin x down and",
    "start": "1542480",
    "end": "1548159"
  },
  {
    "text": "say pin x equal 5 and it's happy to say that you know that's it we say pin x is",
    "start": "1548159",
    "end": "1554720"
  },
  {
    "text": "equal to x plus one it's going to bomb and say nope no it's not thing's not equal to six left hand side is not equal",
    "start": "1554720",
    "end": "1560559"
  },
  {
    "text": "to six we have then uh pattern matches that can be against more complex structures",
    "start": "1560559",
    "end": "1566799"
  },
  {
    "text": "like tpples here so we have abc tpple that matches against apple banana cherry and we see that we then bound uh b to",
    "start": "1566799",
    "end": "1574640"
  },
  {
    "text": "banana you know and then apple and c apple to a and cherry to c as well but that's what we showed here in the in the",
    "start": "1574640",
    "end": "1581159"
  },
  {
    "text": "shell pattern matching we'll have a little bit uh bigger of an example we have list here one two three see it it",
    "start": "1581159",
    "end": "1587919"
  },
  {
    "text": "binds does a pattern match sort of is a way of looking at but we're actually assigning",
    "start": "1587919",
    "end": "1593840"
  },
  {
    "text": "this thing so list is now equal to one two three and we say case our list and",
    "start": "1593840",
    "end": "1599760"
  },
  {
    "text": "we're going to do pattern matching here inside of uh this case statement so uh and we're doing this in the shell here",
    "start": "1599760",
    "end": "1605200"
  },
  {
    "text": "you can have multi-line things you can have complex bits inside of the shell which is pretty awesome so we say case",
    "start": "1605200",
    "end": "1610880"
  },
  {
    "text": "list do we say 11 12 13 and this is not going to match because 1 2 3 is not going to match that right is this going",
    "start": "1610880",
    "end": "1616240"
  },
  {
    "text": "to match nope not going to match because this is a tpple one two three rather than a list one two3 it's a different",
    "start": "1616240",
    "end": "1621520"
  },
  {
    "text": "type right here we have one x3 and this is",
    "start": "1621520",
    "end": "1626640"
  },
  {
    "text": "going to match and it's going to bind the x that came in uh it's going to m bind the two to the x in the middle and",
    "start": "1626640",
    "end": "1632559"
  },
  {
    "text": "we can then use that later on in the same case statement to do our string interpolation and show this we'll see",
    "start": "1632559",
    "end": "1638240"
  },
  {
    "text": "that happen here so matches and binds two to x digit separators this is something",
    "start": "1638240",
    "end": "1645200"
  },
  {
    "text": "that's coming in c# 7 i believe so we've got 100,000 i also can say 100",
    "start": "1645200",
    "end": "1652600"
  },
  {
    "text": "underscore i can say so it's just pure candy i mean this this is about the dev joy side of the language i mean there's",
    "start": "1652600",
    "end": "1659039"
  },
  {
    "text": "just all these things that just make life a little bit nicer you know it's not important but it's it's just awesome",
    "start": "1659039",
    "end": "1666120"
  },
  {
    "text": "though uh it's thoughtful you know so uh here we're going to look at anoms and",
    "start": "1666120",
    "end": "1671360"
  },
  {
    "text": "streams so we're going to define an anonymous function so a lot of times in functions if you'll there's a convention of if it returns a true or false you can",
    "start": "1671360",
    "end": "1678480"
  },
  {
    "text": "put a question mark at the end of it and so that's a a nice convention you see it you know what to expect so we're going",
    "start": "1678480",
    "end": "1684559"
  },
  {
    "text": "to define this anonymous function that's going to use the rim function so rim returns the remainder of two numbers you",
    "start": "1684559",
    "end": "1690960"
  },
  {
    "text": "know divided so this is like modulo and so uh so we say rim the first argument",
    "start": "1690960",
    "end": "1696960"
  },
  {
    "text": "so the amperand one is going to take that first argument that's passed in it's gonna rim that number two so we",
    "start": "1696960",
    "end": "1702480"
  },
  {
    "text": "pass in a five rema remainder of five comma 2 would be well one and so it's going to be an odd number right so uh",
    "start": "1702480",
    "end": "1710399"
  },
  {
    "text": "here we have a range we have one to 100,000 and we're going to pipe this forward so any f people in the room all",
    "start": "1710399",
    "end": "1717520"
  },
  {
    "text": "right you'll recognize this so we've got one to 100,000 piping forward into so",
    "start": "1717520",
    "end": "1722720"
  },
  {
    "text": "that each one of those values are going to get pushed in as the first argument to the thing on the right so this",
    "start": "1722720",
    "end": "1728320"
  },
  {
    "text": "functional pipelining a new map and we're going to take whatever the argument was we're going to multiply it",
    "start": "1728320",
    "end": "1733440"
  },
  {
    "text": "times three and we're going to pipe that forward into a nume filter and we're going to filter on our odd function that",
    "start": "1733440",
    "end": "1739120"
  },
  {
    "text": "we defined at the top and then we're going to enume sum that and we get our answer let's do the same thing but this",
    "start": "1739120",
    "end": "1745520"
  },
  {
    "text": "time we're going to use stream.mmap stream.filter and then we do a new sum",
    "start": "1745520",
    "end": "1752480"
  },
  {
    "text": "so the difference here we get the same result the difference is is stream is lazy and so on our first in our n each",
    "start": "1752480",
    "end": "1759120"
  },
  {
    "text": "stage of that we we went through the whole computation and we passed then that on to the next series in the",
    "start": "1759120",
    "end": "1765120"
  },
  {
    "text": "pipeline with stream it's dragging you know one at a time as you're coming through as it's a pullbased thing and",
    "start": "1765120",
    "end": "1772880"
  },
  {
    "text": "these both work off the same interface it's called a protocol that they both they both implement the innumerable",
    "start": "1772880",
    "end": "1778600"
  },
  {
    "text": "protocol this is like interfaces in c or the protocol comes from closure where",
    "start": "1778600",
    "end": "1784799"
  },
  {
    "text": "you know this idea is directly borrowed i mentioned strings earlier this is kind of cool you know we can",
    "start": "1784799",
    "end": "1790640"
  },
  {
    "text": "have straight up utf awesomeness right here so all the norwegians with funny",
    "start": "1790640",
    "end": "1797120"
  },
  {
    "text": "characters in your names you can appreciate this right so person equal so let's look at",
    "start": "1797120",
    "end": "1804760"
  },
  {
    "text": "maps so we got our person name brian beardy false um only beardy in the winter not beardy in the summer uh and",
    "start": "1804760",
    "end": "1812480"
  },
  {
    "text": "so we can access it by key like this person name we can access it by dot like",
    "start": "1812480",
    "end": "1817520"
  },
  {
    "text": "this get the same thing we can build a new map based on an old map and just push in the properties or the keys that",
    "start": "1817520",
    "end": "1824080"
  },
  {
    "text": "we're going to change or we're going to override and so we have then same thing brian hunter here okay let's look at",
    "start": "1824080",
    "end": "1830559"
  },
  {
    "text": "strrus sorry yes um can you still reference the old",
    "start": "1830559",
    "end": "1836000"
  },
  {
    "text": "object yep yeah i could i could do person and it's still there it's just we have a new everything's a copy there's",
    "start": "1836000",
    "end": "1841600"
  },
  {
    "text": "you know it's not mutating so good question uh here this builds up on top of that idea but gives us some extra",
    "start": "1841600",
    "end": "1846880"
  },
  {
    "text": "goodies so we're going to define this module called person here we're going to put a defctr in here where we say name",
    "start": "1846880",
    "end": "1852640"
  },
  {
    "text": "and we're going to give it a default of empty string and we're going to say beardy and it's going to default to false and we then have this data",
    "start": "1852640",
    "end": "1859760"
  },
  {
    "text": "structure that we can start using so i say a person i get my defaults i'm going to say brian is equal to a person named",
    "start": "1859760",
    "end": "1866480"
  },
  {
    "text": "brian so we see person beer defaults name brian i say person name brian bardy",
    "start": "1866480",
    "end": "1874279"
  },
  {
    "text": "false boom there's no such thing as bardy so we got protected by using the wrong key there there's no such thing as",
    "start": "1874279",
    "end": "1880720"
  },
  {
    "text": "barty there's beardy and you know so it blew and barked and kept us from getting",
    "start": "1880720",
    "end": "1885919"
  },
  {
    "text": "into all sorts of uh trouble that you've probably all experienced with",
    "start": "1885919",
    "end": "1891600"
  },
  {
    "text": "json all righty versatile this is a really crazy thing",
    "start": "1892120",
    "end": "1898720"
  },
  {
    "text": "so the language you expect certain things out of languages here we have um something you would only expect to be",
    "start": "1898720",
    "end": "1904799"
  },
  {
    "text": "able to do in c so we have uh so we have the bit syntax and we're",
    "start": "1904799",
    "end": "1912320"
  },
  {
    "text": "going to run through this really quickly we're going to grab uh okay bin data and we're going to read this file so if we",
    "start": "1912320",
    "end": "1918480"
  },
  {
    "text": "look back on this image this is a five pixel wide black red green blue white",
    "start": "1918480",
    "end": "1923600"
  },
  {
    "text": "and this is the data below so we're going to read this file capture it we",
    "start": "1923600",
    "end": "1928880"
  },
  {
    "text": "captured bin data we captured the binary data there to the bin data variable and we're going to set up a pattern match",
    "start": "1928880",
    "end": "1935279"
  },
  {
    "text": "where we're going to catch on the left using this dsl called the bit syntax we're going to catch on the left the",
    "start": "1935279",
    "end": "1941799"
  },
  {
    "text": "data if it matches against bin data here and so we'll see how that worked so",
    "start": "1941799",
    "end": "1947360"
  },
  {
    "text": "here's our data again our left two bytes has to be bm in a bit map so you can",
    "start": "1947360",
    "end": "1954559"
  },
  {
    "text": "just go through and just think about data struct you know binaries out there and you can just implement using this dsl and be able to process like whatever",
    "start": "1954559",
    "end": "1962240"
  },
  {
    "text": "your your your protocol is that you're you're trying to implement your your format",
    "start": "1962240",
    "end": "1967480"
  },
  {
    "text": "so that was a match we're going to throw away 64 bits we're going to capture",
    "start": "1967480",
    "end": "1972559"
  },
  {
    "text": "32-bit little indian into a variable called offset to pixels throw away grab",
    "start": "1972559",
    "end": "1977799"
  },
  {
    "text": "five height one size we're going to throw 16 bits away we're going to make",
    "start": "1977799",
    "end": "1984159"
  },
  {
    "text": "sure that the next thing is a 24 here and then we're going to throw the rest of it",
    "start": "1984159",
    "end": "1989720"
  },
  {
    "text": "away now we're going to say that offset to pixels this told us where the actual pixel data begins and we're going to",
    "start": "1989720",
    "end": "1996159"
  },
  {
    "text": "remember that and we're going to throw away that many pixels and we're going to capture the rest of it into a variable",
    "start": "1996159",
    "end": "2001279"
  },
  {
    "text": "called pixels we do that so we saw our values that were here so we have this four",
    "start": "2001279",
    "end": "2007840"
  },
  {
    "text": "comprehension where we're going to capture we're going to shove pixels in eight bits eight bits eight bits into",
    "start": "2007840",
    "end": "2013120"
  },
  {
    "text": "blue green red and here we go we've got our data so that's one line uh one screen worth of",
    "start": "2013120",
    "end": "2019840"
  },
  {
    "text": "code inside of the shell and we've uh you know parsed bit map which is kind of awesome so something borrowed a lot of",
    "start": "2019840",
    "end": "2026480"
  },
  {
    "text": "things borrowed one of the things borrowed is erlang vm erling vm grew up out of ericson",
    "start": "2026480",
    "end": "2035200"
  },
  {
    "text": "doing awesome serious hardcore telecom things we're focused on fault",
    "start": "2035200",
    "end": "2040919"
  },
  {
    "text": "tolerance so to have fault tolerance you have to have concurrency if you don't process dies",
    "start": "2040919",
    "end": "2046720"
  },
  {
    "text": "you're fully down you have to have distribution if you don't box catches on fire you're fully down so those things",
    "start": "2046720",
    "end": "2052320"
  },
  {
    "text": "are important uh and you see the track record of the fact your phone works and that over half the world's mobile",
    "start": "2052320",
    "end": "2058560"
  },
  {
    "text": "traffic is going through erlang um which is pretty incredible the data text voice",
    "start": "2058560",
    "end": "2064800"
  },
  {
    "text": "more recent story is uh whatsapp with um with their victories on the erlang vm",
    "start": "2064800",
    "end": "2071200"
  },
  {
    "text": "you know so uh just amazing amazing numbers here a billion active users a",
    "start": "2071200",
    "end": "2076240"
  },
  {
    "text": "month and so on and another number that's important to the business is $19 billion that they were paid by facebook",
    "start": "2076240",
    "end": "2083118"
  },
  {
    "text": "this 10 engineers building this mighty codebase we look at what the early vm is",
    "start": "2083119",
    "end": "2090320"
  },
  {
    "text": "in context we have the runtime we have otp we have languages of erlang elixir",
    "start": "2090320",
    "end": "2095599"
  },
  {
    "text": "list flavored erling there's a talk here this week on list flavored erlang by robert vering and so here's why people can't",
    "start": "2095599",
    "end": "2103280"
  },
  {
    "text": "just grab the erlang vm like erlang bits and pull it into their language and it comes down to this thing is an operating",
    "start": "2103280",
    "end": "2108960"
  },
  {
    "text": "system and it took a lot of time to build it it's a serious operating system it's not a general purpose operating",
    "start": "2108960",
    "end": "2114079"
  },
  {
    "text": "system like linux or windows it's a special purpose operating system about making a safe place for code to run 250",
    "start": "2114079",
    "end": "2121040"
  },
  {
    "text": "plus years of development went into it you can see an example of it being an operating system on erlang on zen the",
    "start": "2121040",
    "end": "2127839"
  },
  {
    "text": "zerg demo and this boots up what would take 300 seconds to boot up a linux vm",
    "start": "2127839",
    "end": "2133440"
  },
  {
    "text": "on ec2 here they boot up into an instance of bare metal erlang running on the zen hypervisor it boots up in mil uh",
    "start": "2133440",
    "end": "2142280"
  },
  {
    "text": "milliseconds brings up the erlang vm runs a web server processes things kicks",
    "start": "2142280",
    "end": "2147680"
  },
  {
    "text": "out your request and you have this result in.3 seconds pretty awesome so",
    "start": "2147680",
    "end": "2152880"
  },
  {
    "text": "let's look at the job of an operating system which vm is process management interrupts",
    "start": "2152880",
    "end": "2158880"
  },
  {
    "text": "um memory management file system so on and so on and you think about what our code does our c# our c our",
    "start": "2158880",
    "end": "2167240"
  },
  {
    "text": "javascript has a job and that job is to eat as much core",
    "start": "2167240",
    "end": "2172960"
  },
  {
    "text": "as it possibly can it's trying to do it's only worried about itself it's not interested about the safety of the rest",
    "start": "2172960",
    "end": "2179680"
  },
  {
    "text": "of everything running on the machine and so the operating system kind of has to hate you it has to hate your code it",
    "start": "2179680",
    "end": "2186400"
  },
  {
    "text": "can't trust it and this is the place where it's really different on the erling vm is because the erlang code",
    "start": "2186400",
    "end": "2191520"
  },
  {
    "text": "cannot do things to hurt the stability the erling code itself has to play by the rules that the erlang vm set up for",
    "start": "2191520",
    "end": "2198240"
  },
  {
    "text": "it erlang vm doesn't have to support c and java and ruby and all these languages it supports languages that",
    "start": "2198240",
    "end": "2204880"
  },
  {
    "text": "only are going to do things that the erlang vm allows them to so that trust is nice when you can",
    "start": "2204880",
    "end": "2211440"
  },
  {
    "text": "cooperate you can get a lot done when everyone's fighting against each other you don't get a lot done and so this is a big part of that story so we got our",
    "start": "2211440",
    "end": "2219040"
  },
  {
    "text": "shaun of the dead reference cricket bat processes so processes is the way we win here so concurrency concurrency is not",
    "start": "2219040",
    "end": "2226640"
  },
  {
    "text": "the same thing as parallelism a lot of times those words get used interchangeably but concurrency",
    "start": "2226640",
    "end": "2232320"
  },
  {
    "text": "is about the structure of doing lots of things at once and parallelism is about the execution of lots of things at",
    "start": "2232320",
    "end": "2237880"
  },
  {
    "text": "once this comes in on a story at ericson so when they built erling in 1986 they",
    "start": "2237880",
    "end": "2245440"
  },
  {
    "text": "weren't targeting multi-core machines in stockholm then they didn't i mean this is your this is this wasn't a thing then",
    "start": "2245440",
    "end": "2252720"
  },
  {
    "text": "and so they built concurrency and they didn't build it so that they could go",
    "start": "2252720",
    "end": "2257760"
  },
  {
    "text": "twice as fast they built concurrency so that they could code without getting twisted up into",
    "start": "2257760",
    "end": "2264320"
  },
  {
    "text": "these horrible nests of callbacky weirdness and into thread weirdness and",
    "start": "2264320",
    "end": "2269440"
  },
  {
    "text": "they wanted to make the code simple to read and to write because code that's simple to read and write is less buggy",
    "start": "2269440",
    "end": "2275920"
  },
  {
    "text": "and that helps your fault tolerance story so they did this massive moonshot",
    "start": "2275920",
    "end": "2280960"
  },
  {
    "text": "from ' 86 and then they turned on multi-core in 2006 and code that had been written a decade before it did then",
    "start": "2280960",
    "end": "2287280"
  },
  {
    "text": "run twice as fast on two cores four times as fast on four cores and like 2010 or 11 there was a test where you",
    "start": "2287280",
    "end": "2293760"
  },
  {
    "text": "had linear scaling up to 40 cores on properly written erling code we get that",
    "start": "2293760",
    "end": "2298880"
  },
  {
    "text": "same thing in elixir because it's the same vm all compiles down to the same beam so let's look at elixir and uh the",
    "start": "2298880",
    "end": "2305520"
  },
  {
    "text": "erlang vm and the actor model so every actor gets some",
    "start": "2305520",
    "end": "2311000"
  },
  {
    "text": "props so our actors are processes so every process gets these props one is",
    "start": "2311000",
    "end": "2317680"
  },
  {
    "text": "memory so each process is one kilobyte on a 32-bit machine it's 2 kilobytes on",
    "start": "2317680",
    "end": "2323760"
  },
  {
    "text": "a 64-bit machine inside of this memory here we have a heap and a stack and it's that processes only no one else can",
    "start": "2323760",
    "end": "2330560"
  },
  {
    "text": "reach in and grab a reference to memory inside of that process it's isolated and it's also immutable right",
    "start": "2330560",
    "end": "2337200"
  },
  {
    "text": "because it's it's functional and so garbage collector uh easiest job in the world to be a garbage collector on the",
    "start": "2337200",
    "end": "2343359"
  },
  {
    "text": "erlang vm because you know no one's only one person's looking at the memory you can't change it once it's set uh and so",
    "start": "2343359",
    "end": "2349920"
  },
  {
    "text": "you each of these processes they get their own isolated dedicated garbage collector so there's not going to be a big stop the world gc that happens each",
    "start": "2349920",
    "end": "2357440"
  },
  {
    "text": "one gets garbage garbage collected independently which is pretty amazing and that's done for low latency and it's",
    "start": "2357440",
    "end": "2363520"
  },
  {
    "text": "done for deterministic scheduling our mailbox this is the only way our process talks to the",
    "start": "2363520",
    "end": "2370040"
  },
  {
    "text": "world so last poor so uh we we talk to the world through our mail mailbox this",
    "start": "2370040",
    "end": "2376720"
  },
  {
    "text": "is the only way a process can reach out and so we send a message out of our",
    "start": "2376720",
    "end": "2382160"
  },
  {
    "text": "mailbox we address it to another process it makes it an sm box when they go into a receive block links and monitors is a",
    "start": "2382160",
    "end": "2389280"
  },
  {
    "text": "thing that we build up on to create some fault tolerance goodies uh this is at this os level this early vm level where",
    "start": "2389280",
    "end": "2395680"
  },
  {
    "text": "we get links and monitors links uh basically like i'm going to link to jose over here and if jose dies i'm gonna die",
    "start": "2395680",
    "end": "2403040"
  },
  {
    "text": "with him okay sunny back here there's a different sort of thing like so so sunny",
    "start": "2403040",
    "end": "2409040"
  },
  {
    "text": "i'm gonna monitor to sunny back here so sunny dies well i don't really exactly want to die you know but i'd like you to",
    "start": "2409040",
    "end": "2415280"
  },
  {
    "text": "tell me about it you know tell me if sunny dies i actually care about him but i you know i don't want to die and so so it's a different level of commitment",
    "start": "2415280",
    "end": "2421520"
  },
  {
    "text": "there and so that's uh these two tools you have out of the box so process scheduling on the erlang vm we have a",
    "start": "2421520",
    "end": "2429440"
  },
  {
    "text": "cpu core we have a single scheduler that lives on that cpu core get three",
    "start": "2429440",
    "end": "2434640"
  },
  {
    "text": "processes up and each one of these processes is going to get 2,000 swipes at the",
    "start": "2434640",
    "end": "2441000"
  },
  {
    "text": "core 2,00 2,00 2,000 there's nothing in the world they can do to eat more core",
    "start": "2441000",
    "end": "2449920"
  },
  {
    "text": "than 2,00 swipes they can't block and hold up the show everyone gets even it's",
    "start": "2449920",
    "end": "2456400"
  },
  {
    "text": "preemptive uh scheduling here so this is another way of visualizing it they each get this much and they get thrown back",
    "start": "2456400",
    "end": "2462880"
  },
  {
    "text": "into the rotation same thing happens if there's multicore if there's big",
    "start": "2462880",
    "end": "2469800"
  },
  {
    "text": "multicore you know all happening so we also have this uh the supervision bit off the links and monitors is talking",
    "start": "2469800",
    "end": "2475680"
  },
  {
    "text": "about we have a supervisor and a worker the worker something happens the network card is down the hard drive failed",
    "start": "2475680",
    "end": "2481760"
  },
  {
    "text": "whatever we have some weirdness the supervisor can then restart the worker and this is important because what do",
    "start": "2481760",
    "end": "2487440"
  },
  {
    "text": "you do when when you call tech support about something the story is reboot it right that's the first thing they walk",
    "start": "2487440",
    "end": "2492960"
  },
  {
    "text": "you through and it always works and you're like oh it worked again and so this model is built in u into erlang it",
    "start": "2492960",
    "end": "2499440"
  },
  {
    "text": "works so well for tech support that they included it as the part of the language so process running now the process",
    "start": "2499440",
    "end": "2507839"
  },
  {
    "text": "running and boom he falls into a receive block he's going to sit here forever and ever and ever blocking waiting for a message to appear in his mailbox no",
    "start": "2507839",
    "end": "2514560"
  },
  {
    "text": "one's talking to him so he's going to sit here well does that wreck the show have we now blocked and wrecked the show",
    "start": "2514560",
    "end": "2519920"
  },
  {
    "text": "well no we haven't because the erling vm schedules him out of the mix and then we",
    "start": "2519920",
    "end": "2524960"
  },
  {
    "text": "schedule then across the other two remaining cores back and forth and we don't bring this guy back into the mix",
    "start": "2524960",
    "end": "2531040"
  },
  {
    "text": "until the postman the erlang vm the operating system until he knows that that process actually has mail when it",
    "start": "2531040",
    "end": "2537280"
  },
  {
    "text": "does he's brought back into the fold part of the the rotation this includes things like file",
    "start": "2537280",
    "end": "2543200"
  },
  {
    "text": "io so any sort of io that we have um goes",
    "start": "2543200",
    "end": "2550599"
  },
  {
    "text": "through message passing like this so even though i write file read earlier on",
    "start": "2550599",
    "end": "2556000"
  },
  {
    "text": "that bitmap file when i said file read i was talking to another process and then i waited for that process to send me a",
    "start": "2556000",
    "end": "2562319"
  },
  {
    "text": "message back you know i didn't have to do this as a developer it's just part of file and the read function on there it's",
    "start": "2562319",
    "end": "2568240"
  },
  {
    "text": "part of gen server and so at the point i ask for that file immediately when i ask for it that process is over there doing",
    "start": "2568240",
    "end": "2574560"
  },
  {
    "text": "the file reading and i'm removed from the rotation until i have a message in my inbox so non-blocking io that you",
    "start": "2574560",
    "end": "2581280"
  },
  {
    "text": "don't have to worry about you can treat like sequential code it's really done right here uh four cores four schedulers",
    "start": "2581280",
    "end": "2588319"
  },
  {
    "text": "you got processes and we have this game of balancing compaction so uh that happens and so busy scheduler busy",
    "start": "2588319",
    "end": "2595680"
  },
  {
    "text": "scheduler i'm not so busy i'm going to take some work from this guy move it over here so that this scheduler can go",
    "start": "2595680",
    "end": "2601359"
  },
  {
    "text": "sleepy and the whole core can go to sleep and this will happen so that you get this compaction across your cores",
    "start": "2601359",
    "end": "2607520"
  },
  {
    "text": "and in a server closet you'll have half your cores being able to go to sleep on uh if they're running erlang which is",
    "start": "2607520",
    "end": "2613040"
  },
  {
    "text": "pretty amazing for power savings this core memory locality things",
    "start": "2613040",
    "end": "2619920"
  },
  {
    "text": "are building up here he's getting hot hot this one does some work stealing to take it make it even balanced",
    "start": "2619920",
    "end": "2626880"
  },
  {
    "text": "so got this game where we we play and we get massive concurrency preemptive",
    "start": "2626880",
    "end": "2632240"
  },
  {
    "text": "multitasking soft real time low latency and the low latency is valued",
    "start": "2632240",
    "end": "2639040"
  },
  {
    "text": "more than raw throughput which is an unusual characteristic for a language",
    "start": "2639040",
    "end": "2644400"
  },
  {
    "text": "uh scheduling parallelization and fault tolerance and node because you're pretty much left to",
    "start": "2644400",
    "end": "2652560"
  },
  {
    "text": "your own devices here i mean things you know you you're going to be you know you're going to build build your own",
    "start": "2652560",
    "end": "2658400"
  },
  {
    "text": "build your own operating system every project or use something out there that",
    "start": "2658400",
    "end": "2663920"
  },
  {
    "text": "someone else has had to do so on node we have cooperative multitasking and on elixir we have preemptive multitasking",
    "start": "2663920",
    "end": "2670319"
  },
  {
    "text": "so cooperative multitasking it sounds good right but what it means is you have to cooperate and if you don't you can",
    "start": "2670319",
    "end": "2675839"
  },
  {
    "text": "wreck the entire scheduling system on elixir you cannot do",
    "start": "2675839",
    "end": "2681160"
  },
  {
    "text": "that singlethreaded event loop single thread event loop",
    "start": "2681160",
    "end": "2687599"
  },
  {
    "text": "cooperative multitasking it's like they read my mind um what we do when we're you know",
    "start": "2687599",
    "end": "2694720"
  },
  {
    "text": "we get into this trouble with callbacks and i know that this is one that you've heard a lot about and there are thousand blog posts out there saying there's no",
    "start": "2694720",
    "end": "2700640"
  },
  {
    "text": "such thing as callback hail it's a myth and all this but a lot of people are talking about it so it's it's some people experience it but you there's",
    "start": "2700640",
    "end": "2707280"
  },
  {
    "text": "discipline you can follow all these paths you can go down this route and you can solve your call back hell problem and have flat code by hoisting things",
    "start": "2707280",
    "end": "2714560"
  },
  {
    "text": "around and flattening things out and you know on and on and on all these patterns if you're a diligent",
    "start": "2714560",
    "end": "2721839"
  },
  {
    "text": "person um there's a funny use of words and uh node but we'll talk about that in",
    "start": "2723400",
    "end": "2728720"
  },
  {
    "text": "a second but um so nodejs does not automatically manage the number of workers for you however it's your responsibility to manage the worker pool",
    "start": "2728720",
    "end": "2735200"
  },
  {
    "text": "for your application needs so nodes easy that doesn't sound easy distribution tends to be very",
    "start": "2735200",
    "end": "2741040"
  },
  {
    "text": "unbalanced due to operating systemuler vag vagaries loads have been observed where over 70% of all connections ended",
    "start": "2741040",
    "end": "2747440"
  },
  {
    "text": "up on just two processes out of a total of eight well nodes supposed to be easy that doesn't sound easy to",
    "start": "2747440",
    "end": "2753720"
  },
  {
    "text": "me okay um here let's talk about elixir and",
    "start": "2753720",
    "end": "2758800"
  },
  {
    "text": "simplified distribution and i think i actually do have time for this demo which is really awesome and",
    "start": "2758800",
    "end": "2765560"
  },
  {
    "text": "surprising uh okay so here we have just a simple",
    "start": "2765560",
    "end": "2773520"
  },
  {
    "text": "loop called blabber and i'm going to move over here and then use uh i've got three uh",
    "start": "2773520",
    "end": "2781920"
  },
  {
    "text": "consoles terminal windows set up and i'm going to start up an ix and i'm",
    "start": "2781920",
    "end": "2787839"
  },
  {
    "text": "going to pass it same cat with a cookie of taco here i'm going to uh start up a ex",
    "start": "2787839",
    "end": "2795119"
  },
  {
    "text": "with uh the name of dog with a cookie of taco and here i'm going to do bird with",
    "start": "2795119",
    "end": "2802560"
  },
  {
    "text": "a cookie of taco so i've got these three named uh virtual machines these three",
    "start": "2802560",
    "end": "2807680"
  },
  {
    "text": "nodes brought up here okay and if i say uh node list",
    "start": "2807680",
    "end": "2814960"
  },
  {
    "text": "i don't have any friends yet so say node connect and i'm the cat so i want to",
    "start": "2814960",
    "end": "2822800"
  },
  {
    "text": "connect to the",
    "start": "2822800",
    "end": "2825760"
  },
  {
    "text": "bird and it says true so if i say node list again i see",
    "start": "2828119",
    "end": "2833440"
  },
  {
    "text": "this the bird he knows that something's happened too and he's like uh oh i cat knows",
    "start": "2833440",
    "end": "2840160"
  },
  {
    "text": "about me so i'm going to say node.connect and i'm going to bring the dog into the mix because the dog always",
    "start": "2840160",
    "end": "2846319"
  },
  {
    "text": "uh you know saves the cat right or saves the saves the bird from the",
    "start": "2846319",
    "end": "2851838"
  },
  {
    "text": "cat so here and i go back over here and do my node list and i'm like uh oh so we",
    "start": "2854200",
    "end": "2860640"
  },
  {
    "text": "all know about each other at this point so we have a full mesh between these nodes and that's all it took to do this uh this can happen across multiple boxes",
    "start": "2860640",
    "end": "2867599"
  },
  {
    "text": "across heterogeneous hardware so 64-bit windows 32-bit linux a raspberry pi on arm architecture and we can have code",
    "start": "2867599",
    "end": "2874640"
  },
  {
    "text": "this cluster formed and we can deploy code across these so the code i'm interested in deploying here is this",
    "start": "2874640",
    "end": "2880000"
  },
  {
    "text": "blabber server so we're going to spawn this process start uh we're going to call start which is going to spawn this",
    "start": "2880000",
    "end": "2885359"
  },
  {
    "text": "process based on this server loop here this is a really short piece of code here we're going to re fall into a receive block uh we're going to wait for",
    "start": "2885359",
    "end": "2892079"
  },
  {
    "text": "someone to send us a stop message if we don't after 200 milliseconds we're going to say nice we've got some uptime here",
    "start": "2892079",
    "end": "2897599"
  },
  {
    "text": "and then we're going to tail call loop into ourself passing plus one so that's",
    "start": "2897599",
    "end": "2902640"
  },
  {
    "text": "our logic so let me ls make sure that that code is there i'll say",
    "start": "2902640",
    "end": "2907800"
  },
  {
    "text": "compile uh blabber just a balber uh blabber just to make sure that i've got",
    "start": "2907800",
    "end": "2914559"
  },
  {
    "text": "a fresh good one here okay and i'm gonna say i'm gonna store off a pid",
    "start": "2914559",
    "end": "2921000"
  },
  {
    "text": "equal blabber",
    "start": "2921000",
    "end": "2925200"
  },
  {
    "text": "start okay so i've got my process id that was returned from that and i'm here and i'm seeing nice zero years of bug",
    "start": "2927240",
    "end": "2934559"
  },
  {
    "text": "free uptime on cat at dedalus okay i go over here and it's like i'd kind of like to do that too",
    "start": "2934559",
    "end": "2943000"
  },
  {
    "text": "so i say pit equal blabber start i don't know anything about that because i'm not over here on bird it wouldn't exist",
    "start": "2946880",
    "end": "2952720"
  },
  {
    "text": "there either but what i can do here is i can say uh",
    "start": "2952720",
    "end": "2959079"
  },
  {
    "text": "nl and i can say nl",
    "start": "2959079",
    "end": "2964160"
  },
  {
    "text": "blabber and so what happened then is i just deployed my code to all my connected nodes so over here on dog i",
    "start": "2964280",
    "end": "2972720"
  },
  {
    "text": "can now say pit blabber start and it",
    "start": "2972720",
    "end": "2977680"
  },
  {
    "text": "works and i can go back over here and uh i can say um i want to",
    "start": "2978520",
    "end": "2988359"
  },
  {
    "text": "spawn this process on another node i'm gonna say pid 2 is equal to node.spawn",
    "start": "2988359",
    "end": "2995559"
  },
  {
    "text": "spawn and i'm going to spawn that on the bird",
    "start": "2995559",
    "end": "3003359"
  },
  {
    "text": "node and i'm going to spawn it by passing the node name i'm going to pass in the module",
    "start": "3003480",
    "end": "3010440"
  },
  {
    "text": "name and i'm going to pass in the function name to call and i'm going to",
    "start": "3010440",
    "end": "3016160"
  },
  {
    "text": "pass in the arguments which is an empty list right and so",
    "start": "3016160",
    "end": "3021319"
  },
  {
    "text": "now this process is running over on bird we've got the one running on here but we're actually getting the io piped to",
    "start": "3021319",
    "end": "3028000"
  },
  {
    "text": "us it's running over on this box if we killed this thing we would no longer be getting this message on the left saying",
    "start": "3028000",
    "end": "3033680"
  },
  {
    "text": "six years of bug-free uptime okay so that's pretty cool i think uh so here",
    "start": "3033680",
    "end": "3039920"
  },
  {
    "text": "let's fix some code we've got a bug in here don't we where's our bug here we uh",
    "start": "3039920",
    "end": "3045440"
  },
  {
    "text": "we don't have enough gusto is our problem our bug here on this line",
    "start": "3045440",
    "end": "3050720"
  },
  {
    "text": "is we need more gusto we need an exclamation point here okay so let's go over here we fixed",
    "start": "3050720",
    "end": "3056559"
  },
  {
    "text": "our bug we're going to ship this code and so we're going to uh first",
    "start": "3056559",
    "end": "3061680"
  },
  {
    "text": "recompile it and so we get this our next tail call into this our bug is hot code",
    "start": "3061680",
    "end": "3067359"
  },
  {
    "text": "deployed on our running server and i say nl to deploy this code to my other",
    "start": "3067359",
    "end": "3074400"
  },
  {
    "text": "servers and notice what's happening there over on our other cluster we over",
    "start": "3074400",
    "end": "3081920"
  },
  {
    "text": "on another node we have that picked up and it deployed over here to this one as well because and its output is being",
    "start": "3081920",
    "end": "3087760"
  },
  {
    "text": "piped back to us so this is pretty crazy awesome is what this is and uh and",
    "start": "3087760",
    "end": "3092960"
  },
  {
    "text": "that's as short of an example as i can show about this is a basic way of showing how you the foundations of how",
    "start": "3092960",
    "end": "3098480"
  },
  {
    "text": "the real stuff works okay so we've got to now hurry because i took",
    "start": "3098480",
    "end": "3105040"
  },
  {
    "text": "the luxury of a sweet sweet demo okay so let's talk uh just briefly about otp so",
    "start": "3105040",
    "end": "3112160"
  },
  {
    "text": "this is where the safety and fault tolerance story really comes in and it's built up on these basic things that we",
    "start": "3112160",
    "end": "3117839"
  },
  {
    "text": "all get by using the erlang vm by using elixir we get applications we get",
    "start": "3117839",
    "end": "3123920"
  },
  {
    "text": "supervisors and we get gen servers gen servers is where we do the work and these all play with this nice system and",
    "start": "3123920",
    "end": "3129119"
  },
  {
    "text": "this is proven at ericson over this decades on these systems that have nine",
    "start": "3129119",
    "end": "3134559"
  },
  {
    "text": "nines of uptime so we're talking about milliseconds a year this is a you know common sort of thing of you know",
    "start": "3134559",
    "end": "3140079"
  },
  {
    "text": "everything has to be carrier grade for it to be telecom which is five nines but you actually beat that with erlang",
    "start": "3140079",
    "end": "3145200"
  },
  {
    "text": "because of these amazing bits here so application supervisor gen server this",
    "start": "3145200",
    "end": "3151200"
  },
  {
    "text": "is sort of looking at the tree of it so an application spins up and brings up all of the things that need to run in",
    "start": "3151200",
    "end": "3156319"
  },
  {
    "text": "the context of that application so you'll start up you'll have supervision where that supervision is then over here",
    "start": "3156319",
    "end": "3162440"
  },
  {
    "text": "watching you know our gen server right and if that gen server hits some",
    "start": "3162440",
    "end": "3168040"
  },
  {
    "text": "weirdness and dies it'll restart if this gen server down here causes some trouble",
    "start": "3168040",
    "end": "3174640"
  },
  {
    "text": "or any of its peers we've got a bunch of gen servers being supervised by this supervisor if any of those uh croak uh",
    "start": "3174640",
    "end": "3182079"
  },
  {
    "text": "this supervisor is going to restart them if it happens so often we meet some threshold the supervisor here could",
    "start": "3182079",
    "end": "3187280"
  },
  {
    "text": "actually be killed and if that happens this supervisor is going to bring that back up and so you have these whole",
    "start": "3187280",
    "end": "3192800"
  },
  {
    "text": "trees of these things depending on what you expect to happen in the code and how uh nasty you see the problems being so",
    "start": "3192800",
    "end": "3199920"
  },
  {
    "text": "in elixir we code the happy path we don't have a bunch of try catchy stuff",
    "start": "3199920",
    "end": "3205280"
  },
  {
    "text": "worrying about like oh what's going to happen because you never can really predict it you can predict some things but you should maybe just code it",
    "start": "3205280",
    "end": "3210800"
  },
  {
    "text": "differently but what's easier is to code the happy path things go weird just let it crash let the process crash and leave",
    "start": "3210800",
    "end": "3217839"
  },
  {
    "text": "that problem of handling the error to supervision on this side different story",
    "start": "3217839",
    "end": "3225599"
  },
  {
    "text": "unhandled exception means your application and by extension node.js itself is an undefined state blindly",
    "start": "3225599",
    "end": "3230640"
  },
  {
    "text": "resuming means anything could happen and this is right off of node.js.org and this terrifies me",
    "start": "3230640",
    "end": "3239599"
  },
  {
    "text": "the safe way to code for massive concurrency is to code sequentially the easiest code in the world is code that",
    "start": "3239599",
    "end": "3244720"
  },
  {
    "text": "goes top to bottom that you can just read instead of callbacks are not really easy to gro so you actually code top to",
    "start": "3244720",
    "end": "3251680"
  },
  {
    "text": "bottom in elixir code you have massive concurrency but you're coding top to bottom it's not your job to think about",
    "start": "3251680",
    "end": "3257599"
  },
  {
    "text": "all of the plumbing of how the uh concurrency works so think about this you got a",
    "start": "3257599",
    "end": "3264000"
  },
  {
    "text": "100,000 connected users they're making all these callbacks you're running on the single threaded",
    "start": "3264000",
    "end": "3269920"
  },
  {
    "text": "event loop on this single process and you don't really have a supervision model so one of those dies so you've",
    "start": "3269920",
    "end": "3276960"
  },
  {
    "text": "created this attractive nuisance here you know node is this attractive nuisance where people come in and they",
    "start": "3276960",
    "end": "3282079"
  },
  {
    "text": "can just break their ass you know you can really get hurt on this thing and we we we have all sorts of tools",
    "start": "3282079",
    "end": "3289599"
  },
  {
    "text": "that we've been talking about so far in elixir where you you get out of this you know pit of failure uh and you end up in",
    "start": "3289599",
    "end": "3295839"
  },
  {
    "text": "a place where it's just actually easier to build systems that work it's easier to do your day-to-day coding one of those things is being able to code with",
    "start": "3295839",
    "end": "3302000"
  },
  {
    "text": "a powerful ripple the shell there so when i'm building my elixir code i try",
    "start": "3302000",
    "end": "3307280"
  },
  {
    "text": "it out in ex i can do all my things i can see it work and when it works i",
    "start": "3307280",
    "end": "3312880"
  },
  {
    "text": "hoist that up and put it into test to protect me against regressions so this is like tdd the part",
    "start": "3312880",
    "end": "3320960"
  },
  {
    "text": "where you actually change your interface by the way you call it you're getting that constantly inside of the ripple and it and then you can then hoist that code",
    "start": "3320960",
    "end": "3326800"
  },
  {
    "text": "out to protect uh protect you against regressions so this idea of testing is big because it's big in the ruby",
    "start": "3326800",
    "end": "3332400"
  },
  {
    "text": "community it's made very easy here in elixir made easy by having good docs and",
    "start": "3332400",
    "end": "3337760"
  },
  {
    "text": "then doc tests like we saw earlier uh the website called the node way talks",
    "start": "3337760",
    "end": "3343200"
  },
  {
    "text": "about you know this is a protecting you from trouble kind of website it's a guidance website nojs has always been",
    "start": "3343200",
    "end": "3348799"
  },
  {
    "text": "easy to grasp but difficult to master common fitfalls never been well",
    "start": "3348799",
    "end": "3353839"
  },
  {
    "text": "doumented it's up to you through painful trial and error you know on and on and on and it's like oh my goodness you know",
    "start": "3353839",
    "end": "3360400"
  },
  {
    "text": "this is the thing that this is the tool that's supposed to be easy this is what was going to make us be able to write code more simply and deploy more simply",
    "start": "3360400",
    "end": "3367040"
  },
  {
    "text": "and it's just not what happens because we are required constant diligence there",
    "start": "3367040",
    "end": "3372960"
  },
  {
    "text": "and we shouldn't do this to ourselves we shouldn't do that we we shouldn't allow",
    "start": "3372960",
    "end": "3378079"
  },
  {
    "text": "tools and frameworks and languages to put us in that spot where we're constantly having to be on guard because",
    "start": "3378079",
    "end": "3383359"
  },
  {
    "text": "we're fallible we're human so at this spot we have now",
    "start": "3383359",
    "end": "3389440"
  },
  {
    "text": "traveled through our hero's journey here where you've now had this introduction to this thing and it's kind of up to you",
    "start": "3389440",
    "end": "3395200"
  },
  {
    "text": "to go off and and pick it up and do awesome things with it and i think you're going to be stunned about what",
    "start": "3395200",
    "end": "3400960"
  },
  {
    "text": "you can pull off and how it's not just easy at the beginning it continues to be",
    "start": "3400960",
    "end": "3406400"
  },
  {
    "text": "easy it's easy as it can be should be i guess uh and you know so hats off really",
    "start": "3406400",
    "end": "3412880"
  },
  {
    "text": "for jose over here for this thing he's built it's absolutely stunning and u so at the end of this i i love this on the",
    "start": "3412880",
    "end": "3418720"
  },
  {
    "text": "hero's journey that they actually end with this uh line it's return with the elixir so hopefully you all will go and return with the elixir my two closing",
    "start": "3418720",
    "end": "3426319"
  },
  {
    "text": "bits here are u elixir it's a you know pure sustainable joy is i think what you",
    "start": "3426319",
    "end": "3432880"
  },
  {
    "text": "get on elixir and you get something maybe a little bit different over here you know it's popular it's crazy and",
    "start": "3432880",
    "end": "3440079"
  },
  {
    "text": "it's dangerous and uh and i'm going back to this country here at the end of the week and so that's the world i live in",
    "start": "3440079",
    "end": "3447119"
  },
  {
    "text": "so uh so thank you all for being here uh we have uh this over here so please vote",
    "start": "3447119",
    "end": "3452799"
  },
  {
    "text": "and tweet and and go off and install elixir and have fun with it and then also come right back in here in a minute",
    "start": "3452799",
    "end": "3459200"
  },
  {
    "text": "for our next session with yonqui it's on f# in the real world and so the fp track will be in this room all week other than",
    "start": "3459200",
    "end": "3466079"
  },
  {
    "text": "the workshops which is the hour after lunch and for those we'll be in workshop i think it's room 10 but it's workshops",
    "start": "3466079",
    "end": "3472000"
  },
  {
    "text": "and it's where you can just hang out with all the speakers in the fp track and have them walk you through things",
    "start": "3472000",
    "end": "3477440"
  },
  {
    "text": "and so we'll have jose we'll have joe armstrong we'll have robert verding we'll have matias brenda who ran the f",
    "start": "3477440",
    "end": "3482559"
  },
  {
    "text": "machine learning workshop with eveina and so awesome bunch in there i hope you join us for that and uh other than that",
    "start": "3482559",
    "end": "3489119"
  },
  {
    "text": "i actually i cannot believe it i have a minute and a half for questions is anyone yes yeah so uh you",
    "start": "3489119",
    "end": "3497440"
  },
  {
    "text": "said that was which was basically just for",
    "start": "3497440",
    "end": "3504880"
  },
  {
    "text": "particular problem i think so i think it has that sweet spot it it i mean it definitely has a sweet spot of standing",
    "start": "3504880",
    "end": "3510079"
  },
  {
    "text": "up a website quickly that can handle lots and lots of things but then you know it's like you've got to then have",
    "start": "3510079",
    "end": "3515599"
  },
  {
    "text": "someone actually do the work and that's my question actually when do you see",
    "start": "3515599",
    "end": "3520640"
  },
  {
    "text": "like for using node for an api or something for instance and see if you",
    "start": "3520640",
    "end": "3526880"
  },
  {
    "text": "have 100 users yeah right uh they would there i mean that would be",
    "start": "3526880",
    "end": "3533440"
  },
  {
    "text": "it's easy to handle 100,000 users on the erling vm this is a this is a sweet spot of the language that fault tolerance",
    "start": "3533440",
    "end": "3539599"
  },
  {
    "text": "concurrency distribution that's what it was built for so back in the 80s that was what it was built for a 100,000",
    "start": "3539599",
    "end": "3545680"
  },
  {
    "text": "phone connections coming in and people expect their phone they did expect their before mobile phones with apps uh you",
    "start": "3545680",
    "end": "3553440"
  },
  {
    "text": "expected your phone to work and so you had fault tolerance so i remember as a kid when a squirrel would get into the",
    "start": "3553440",
    "end": "3559760"
  },
  {
    "text": "transformer on the power lines and go and and the house all the power would go out we'd pick up our phone and we'd call",
    "start": "3559760",
    "end": "3565440"
  },
  {
    "text": "the power company and uh that just tells you about that sort of fault tolerance story and it's real there and it's real",
    "start": "3565440",
    "end": "3572480"
  },
  {
    "text": "because of these tools and so again that erling vm is why that's happening like over half of the world all of the",
    "start": "3572480",
    "end": "3578960"
  },
  {
    "text": "traffic for mobile is going through this so massive concurrency easy to do i mean it's just the sweet spot of the language",
    "start": "3578960",
    "end": "3585839"
  },
  {
    "text": "uh a place where i would use node for uh is i think maybe what you were getting at a place where i would use node is",
    "start": "3585839",
    "end": "3593280"
  },
  {
    "text": "here where i am using node this is atom i think javascript is a great language for the client you know it it i mean",
    "start": "3593280",
    "end": "3601280"
  },
  {
    "text": "javascript obviously works well in a browser and you know it's it's a it's a very good thing to have on the client",
    "start": "3601280",
    "end": "3607920"
  },
  {
    "text": "it's ubiquitous it's out there people know it you know the problems with it and you don't have a hundred thousand",
    "start": "3607920",
    "end": "3613599"
  },
  {
    "text": "people that are going to get hurt if my atom crashes and so that that idea of atom and electron there are talks here",
    "start": "3613599",
    "end": "3620079"
  },
  {
    "text": "this week on electron i believe uh and so you it's a good thing to have it",
    "start": "3620079",
    "end": "3625200"
  },
  {
    "text": "there it's really nice the tooling they built up uh but i wouldn't want to use it on something where i had to count on",
    "start": "3625200",
    "end": "3630960"
  },
  {
    "text": "fault tolerance uh and i wouldn't want to have my company building up on it for",
    "start": "3630960",
    "end": "3637200"
  },
  {
    "text": "business logic and i know companies that have done that they they got lured in their business logic everything they",
    "start": "3637200",
    "end": "3643040"
  },
  {
    "text": "ported from c because of problems that they saw there they didn't like what the",
    "start": "3643040",
    "end": "3648160"
  },
  {
    "text": "experience there they moved over to node and now they're trapped you know they they they've they're they feel like",
    "start": "3648160",
    "end": "3653440"
  },
  {
    "text": "they're in deep they've started bringing in microservices which is basically the the the plea for help uh so like when",
    "start": "3653440",
    "end": "3661200"
  },
  {
    "text": "when node shops start talking about microservices what they mean is like we've screwed up we're going to have this tiniest bit of code so and and it's",
    "start": "3661200",
    "end": "3668480"
  },
  {
    "text": "like maybe this will get us out of this trouble we're in well you think about what functions are and processes with a",
    "start": "3668480",
    "end": "3673680"
  },
  {
    "text": "message passing that's that's microservices that's how you want to handle that problem and so uh uh any",
    "start": "3673680",
    "end": "3680960"
  },
  {
    "text": "other questions yes so functional language everything is",
    "start": "3680960",
    "end": "3688839"
  },
  {
    "text": "immutable i suppose that you have pure functions yeah uh",
    "start": "3688839",
    "end": "3694960"
  },
  {
    "text": "well this is a really interesting one so you'll never ever hear on the erlang vm anyone talking about monads but you have",
    "start": "3694960",
    "end": "3702240"
  },
  {
    "text": "something that so what is io monad for so we we know in ha hasll if we're writing hasll that we want to have all",
    "start": "3702240",
    "end": "3708880"
  },
  {
    "text": "of our code be sane and we want to be able to reason about the world right but we still have to we have to have side",
    "start": "3708880",
    "end": "3715280"
  },
  {
    "text": "effects right if your code doesn't have if it can't write to the monitor if it can't write to the hard drive it can't",
    "start": "3715280",
    "end": "3721280"
  },
  {
    "text": "write to the network card you're not actually going to get anything done so you wrap that then inside of the io",
    "start": "3721280",
    "end": "3726319"
  },
  {
    "text": "monad well on elixir and erlang the equivalent of that would be port drivers",
    "start": "3726319",
    "end": "3732079"
  },
  {
    "text": "so all of my elixir code my erlang code it can only talk to other processes through message passing right can't",
    "start": "3732079",
    "end": "3739280"
  },
  {
    "text": "reach out to the operating system can't poke through do anything it's all in that safe safe world so the way that the",
    "start": "3739280",
    "end": "3745920"
  },
  {
    "text": "the ugly scary world is hooked in is through port drivers those are written",
    "start": "3745920",
    "end": "3750960"
  },
  {
    "text": "in c and they meet a certain interface that makes them look to the erlang vm as if they are erlang or elixir you know",
    "start": "3750960",
    "end": "3758559"
  },
  {
    "text": "they look they look native on that side but you got the scary scary world there and the only thing that then can touch",
    "start": "3758559",
    "end": "3764400"
  },
  {
    "text": "the outside world is a port driver which is a process which can be supervised and so and you don't go off writing port",
    "start": "3764400",
    "end": "3771119"
  },
  {
    "text": "drivers all the time because you know there's the file system there's the network card there are these basic number of things that you want to talk",
    "start": "3771119",
    "end": "3777040"
  },
  {
    "text": "to on the outside world and the way you do that is through port drivers i love that question i forgot to actually mention it earlier so thank you yes",
    "start": "3777040",
    "end": "3786040"
  },
  {
    "text": "um so i'm always surprised that it's you know people talk well erlang's not a",
    "start": "3789680",
    "end": "3796079"
  },
  {
    "text": "great language for uh doing like machine learning that sort of thing well it turns out it's actually is pretty good",
    "start": "3796079",
    "end": "3802000"
  },
  {
    "text": "at machine learning and here's an example of uh so you see the f digit recognizer project so the thing it's not",
    "start": "3802000",
    "end": "3809039"
  },
  {
    "text": "good at so i i'll say that you can actually do this and i've explored this path of using it for this thing it's not",
    "start": "3809039",
    "end": "3814559"
  },
  {
    "text": "good at is it doesn't have a static type system so there are going to be errors that you don't catch at compile time",
    "start": "3814559",
    "end": "3821680"
  },
  {
    "text": "this is a place where f absolutely just beats the hell out of us over on elixir",
    "start": "3821680",
    "end": "3826720"
  },
  {
    "text": "because static type system you catch all these problems and it depends on the kind of code you're deploying and why you're deploying it so if you're going",
    "start": "3826720",
    "end": "3833280"
  },
  {
    "text": "to a mobile phone for example where you have to go through the apple store for a week review and all this and you can't",
    "start": "3833280",
    "end": "3840160"
  },
  {
    "text": "change your code and and you can't get users to install the new one you want to catch every problem you can at compile",
    "start": "3840160",
    "end": "3845559"
  },
  {
    "text": "time so that's why i really am excited you know like zamron which i have my zamron shirt under here uh you know they",
    "start": "3845559",
    "end": "3852400"
  },
  {
    "text": "have this f support and there's also a talk uh on f and mobile coming up a little bit later today but uh that's a",
    "start": "3852400",
    "end": "3858400"
  },
  {
    "text": "place where i would use f for sure over you know you don't even have the option of using elixir on a mobile phone but i",
    "start": "3858400",
    "end": "3864160"
  },
  {
    "text": "would use it for those places now on the server it's actually a lot easier you think about this we did this hot code deployment it's easier to deploy that",
    "start": "3864160",
    "end": "3871039"
  },
  {
    "text": "new elixir code to a server than it would be if you had a static type system with dls and all that you know i mean",
    "start": "3871039",
    "end": "3876160"
  },
  {
    "text": "that was just crazy easy we changed the code deployed across this cluster and everything worked and so it comes down",
    "start": "3876160",
    "end": "3882559"
  },
  {
    "text": "to what your what your deployment story is so i think in the short run like if",
    "start": "3882559",
    "end": "3887839"
  },
  {
    "text": "an app has to work really really well immediately and it's going to be really",
    "start": "3887839",
    "end": "3893359"
  },
  {
    "text": "hard to update uh you know that's a static type system problem if it's",
    "start": "3893359",
    "end": "3898480"
  },
  {
    "text": "something you know this other side you have to have a system that runs and runs and runs for years with no downtime the",
    "start": "3898480",
    "end": "3903599"
  },
  {
    "text": "static type system protects you in that first hour you get your maximum benefit",
    "start": "3903599",
    "end": "3909200"
  },
  {
    "text": "it's kind of like term life insurance that sort of thing you know there's different thresholds when they're the most valuable static type systems are",
    "start": "3909200",
    "end": "3915039"
  },
  {
    "text": "helping you the most right when you deploy in that first little bit of the life something like elixir erlang",
    "start": "3915039",
    "end": "3920240"
  },
  {
    "text": "they're helping you if you need that thing to be running for years with no downtime uh okay and i think i am now",
    "start": "3920240",
    "end": "3925839"
  },
  {
    "text": "out of time so uh jan will be in here so don't get too far away because john will talk about f in the real world and he is",
    "start": "3925839",
    "end": "3932799"
  },
  {
    "text": "awesome he's an amazing presenter so and thank you all for being here this is awesome",
    "start": "3932799",
    "end": "3940000"
  }
]