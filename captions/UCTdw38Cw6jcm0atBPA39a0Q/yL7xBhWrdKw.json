[
  {
    "text": "everyone thanks for coming along my name is dawn i'm the designer of the f-type",
    "start": "3800",
    "end": "10500"
  },
  {
    "text": "programming language i've been a contributor to do net over the years to see sharp as well see shop 2.0 c-sharp",
    "start": "10500",
    "end": "17160"
  },
  {
    "text": "generics and a lot of you use and i'm here today i'm very happy to be here to",
    "start": "17160",
    "end": "24089"
  },
  {
    "text": "talk about the world from the language designer's perspective if you had i",
    "start": "24089",
    "end": "29519"
  },
  {
    "text": "think had a really wonderful selection of talks on the functional programming track some of them have been f-sharp",
    "start": "29519",
    "end": "36390"
  },
  {
    "text": "talks we've had talks about more general things i did michael newton have you given your talk yet was michael to see",
    "start": "36390",
    "end": "42960"
  },
  {
    "text": "here something he's giving a talk on a wonderful set of testing methodologies called FS check which could be used it's",
    "start": "42960",
    "end": "49710"
  },
  {
    "text": "by C sharp and F sharp code and you've heard from Phillip yesterday about why",
    "start": "49710",
    "end": "55950"
  },
  {
    "text": "you should use F sharp well you should make the switch to functional programming so I don't I'm not here to",
    "start": "55950",
    "end": "63000"
  },
  {
    "text": "sell f sharp I'll be talking a little bit about why shops feel successful and why you can hey you know some some",
    "start": "63000",
    "end": "70170"
  },
  {
    "text": "examples of what makes it great but I want to give you a more perspective of the world from the language designer's",
    "start": "70170",
    "end": "78380"
  },
  {
    "text": "point of view and it's it's a talk about",
    "start": "78380",
    "end": "85790"
  },
  {
    "text": "language design is a strange people ok part at this point of this talk is so you can understand where language",
    "start": "85790",
    "end": "92310"
  },
  {
    "text": "designers are coming from so that when you go and talk to Mads torgussen when you go and talk to me when you get",
    "start": "92310",
    "end": "97979"
  },
  {
    "text": "responses from us on on on FS Lang suggestions when you make when you give",
    "start": "97979",
    "end": "104010"
  },
  {
    "text": "input you you you you understand why they kind of all twisted and contorted and kind of like oh yeah I'll think",
    "start": "104010",
    "end": "111720"
  },
  {
    "text": "about this or I might think about that or you know they're trying to weigh things up and balance things and",
    "start": "111720",
    "end": "117350"
  },
  {
    "text": "synthesize things and put lots of different perspectives together because whether you're a language designer you",
    "start": "117350",
    "end": "122729"
  },
  {
    "text": "got like F sharp tens of thousands of people using your thing and you get",
    "start": "122729",
    "end": "128759"
  },
  {
    "text": "input from an awful lot of them and you get a lot of input from them when we first started to productize f sharp is",
    "start": "128759",
    "end": "134610"
  },
  {
    "text": "about the same time that scala was my good friend Martin Tudor ski was also",
    "start": "134610",
    "end": "139820"
  },
  {
    "text": "working through scalloped releases and I wrote him and said this is gonna be this",
    "start": "139820",
    "end": "146610"
  },
  {
    "text": "is we're gonna get we're gonna have a lot of feedback on this thing out we and he wrote back saying yep it's got to be",
    "start": "146610",
    "end": "153120"
  },
  {
    "text": "a rough you know there's gonna be a lot of stuff coming in and we're gonna get a lot of influences coming in Mads of",
    "start": "153120",
    "end": "158520"
  },
  {
    "text": "course with c-sharp has hundreds and hundreds of thousands of people sitting on top and using F sharp C sharp and",
    "start": "158520",
    "end": "164490"
  },
  {
    "text": "they get an awful lot of Pacific awful lot of input on that as well so what",
    "start": "164490",
    "end": "169980"
  },
  {
    "text": "that all adds up to when you have so many different perspectives and so many different influences is you you're in a",
    "start": "169980",
    "end": "178950"
  },
  {
    "text": "sense exposed to the great disputes of the area of work that you that you live",
    "start": "178950",
    "end": "184140"
  },
  {
    "text": "in so for instance you might be exposed to the disputes between let's just take",
    "start": "184140",
    "end": "190140"
  },
  {
    "text": "you know one of the really big ones that I'll be talking about today between functional and object-oriented programming these are entirely different",
    "start": "190140",
    "end": "195960"
  },
  {
    "text": "streams of intellectual thought of academic research of application flow up",
    "start": "195960",
    "end": "202020"
  },
  {
    "text": "and through the lives and all through the different perspectives and people that come in and they're come down in the feedback you get and the influences",
    "start": "202020",
    "end": "208260"
  },
  {
    "text": "you get from all sorts of different perspectives and you've got to you've got your exposed to these disputes that",
    "start": "208260",
    "end": "214590"
  },
  {
    "text": "we have and so really sort of the starting position of the the life of",
    "start": "214590",
    "end": "220220"
  },
  {
    "text": "many people working in these in these quarterly areas the same applies in many",
    "start": "220220",
    "end": "225420"
  },
  {
    "text": "ways to people working on virtual machine design you know when you design a virtual machine you've got that same",
    "start": "225420",
    "end": "230880"
  },
  {
    "text": "set of different traditions and different ideas coming in and you've got it in the end you've got to synthesize",
    "start": "230880",
    "end": "237180"
  },
  {
    "text": "that and you got to make you've got to make something that that makes the world a better place and in many ways makes it",
    "start": "237180",
    "end": "245430"
  },
  {
    "text": "has to contribute and the primary sort of message of this talk is that the act",
    "start": "245430",
    "end": "250830"
  },
  {
    "text": "of making a contribution in this in this core sort of space is in active synthesis and an active resolving",
    "start": "250830",
    "end": "259010"
  },
  {
    "text": "working out a new direction between out of conflicting what seemed like",
    "start": "259010",
    "end": "264500"
  },
  {
    "text": "conflicting points of view so these disputes of computer science that are",
    "start": "264500",
    "end": "271260"
  },
  {
    "text": "starting point and the act of making the",
    "start": "271260",
    "end": "276840"
  },
  {
    "text": "resolution of coming out with a new language a new product should actually make the world a simpler place it should",
    "start": "276840",
    "end": "282450"
  },
  {
    "text": "make the world a more relaxed place it should make the world a place that's",
    "start": "282450",
    "end": "288060"
  },
  {
    "text": "more productive yes but it should be a resolution of disputes now this of",
    "start": "288060",
    "end": "294210"
  },
  {
    "text": "course is not a great idea not not a nada aisle not a new idea it's an old",
    "start": "294210",
    "end": "299430"
  },
  {
    "text": "idea because right back to this wonderful guy who anyone who knows who this is ends up anyone I know Thomas",
    "start": "299430",
    "end": "305670"
  },
  {
    "text": "does he's in the audience so this is a philosopher called Hegel from the 1830s",
    "start": "305670",
    "end": "311120"
  },
  {
    "text": "incredibly influential philosopher who the one of his very core sort of",
    "start": "311120",
    "end": "318630"
  },
  {
    "text": "fundamental ideas of our human life is that progress is is through the",
    "start": "318630",
    "end": "323760"
  },
  {
    "text": "resolution of this what they call dialectic between this one idea and the opposite idea the contradictions that",
    "start": "323760",
    "end": "330480"
  },
  {
    "text": "come and change is not through fighting between these ideas but change comes through synthesis of opposing points of",
    "start": "330480",
    "end": "337650"
  },
  {
    "text": "view in a new direction that wasn't and and anticipated so has anyone ever read",
    "start": "337650",
    "end": "344880"
  },
  {
    "text": "any Hegel anyone ever done that it's absolutely impossible",
    "start": "344880",
    "end": "349950"
  },
  {
    "text": "I mean you it is so unbelievably difficult anybody here from Barden",
    "start": "349950",
    "end": "356220"
  },
  {
    "text": "Wittenberg anybody here from Germany okay anybody here from baden-w√ºrttemberg from Arabia okay well I've been told I'm",
    "start": "356220",
    "end": "363180"
  },
  {
    "text": "good information for my wife that only people through this took out area of Germany can actually understand Hegel",
    "start": "363180",
    "end": "369000"
  },
  {
    "text": "because he wrote in a dialect of German so if that's probably why no one",
    "start": "369000",
    "end": "374700"
  },
  {
    "text": "understands him but he does he's an incredibly influential philosopher based around this this idea of synthesis and",
    "start": "374700",
    "end": "381270"
  },
  {
    "text": "change just to say that this idea of synthesis out of opposites is it's a",
    "start": "381270",
    "end": "389100"
  },
  {
    "text": "very powerful idea I love the idea but of course like all things you can take",
    "start": "389100",
    "end": "395280"
  },
  {
    "text": "it too far one great thing that demonstrates this",
    "start": "395280",
    "end": "400440"
  },
  {
    "text": "is this this wonderful spoof paper that Tom petrotech pointed me to I think Thomas",
    "start": "400440",
    "end": "407880"
  },
  {
    "text": "is standing over there his baby he said oh you're talking about dialectics you're talking about resolution out of",
    "start": "407880",
    "end": "414270"
  },
  {
    "text": "out of conflict that opposites you mean mustard watchers here we go must have",
    "start": "414270",
    "end": "419310"
  },
  {
    "text": "watch is an integrated approach to time and food so you know time and food I mean they're clearly you know opposites",
    "start": "419310",
    "end": "425700"
  },
  {
    "text": "you know and we need to find a resolution between these contradictory ideas and so this this is that are one",
    "start": "425700",
    "end": "431730"
  },
  {
    "text": "of the very first examples of sort of taking the mickey out of out of philosophical positions and just sort of",
    "start": "431730",
    "end": "438180"
  },
  {
    "text": "just saying yeah we could take these too far we don't we can't resolve all",
    "start": "438180",
    "end": "444720"
  },
  {
    "text": "conflicts and differences in the world some things are truly orthogonal and should be just left orthogonal so",
    "start": "444720",
    "end": "451020"
  },
  {
    "text": "hopefully we're not doing this hopefully we're not just kind of making the mustard watch but we're actually making",
    "start": "451020",
    "end": "457830"
  },
  {
    "text": "real progress so for the rest of the talk I'm going to be talking about both technical and sort of sociological",
    "start": "457830",
    "end": "463830"
  },
  {
    "text": "things that come up in our work as language designers and as tool deliverers and we're talking about",
    "start": "463830",
    "end": "469680"
  },
  {
    "text": "things that are in in conflict in sort of opposites and they're talking about",
    "start": "469680",
    "end": "475500"
  },
  {
    "text": "how we can sort of find some synthesis between the two and that's all going to be in the context of my work as the",
    "start": "475500",
    "end": "482070"
  },
  {
    "text": "f-sharp language designer and as the deliverer of tools to to to the to the",
    "start": "482070",
    "end": "488760"
  },
  {
    "text": "computing world okay so I'll start with the conflict here that that really was a",
    "start": "488760",
    "end": "498960"
  },
  {
    "text": "root of F sharp this is what F sharp was about and in many ways it's what dotnet was about right back the very the very",
    "start": "498960",
    "end": "505770"
  },
  {
    "text": "founding spirit of dotnet was we're gonna have a virtual machine but it's not going to be like Java which at the",
    "start": "505770",
    "end": "511920"
  },
  {
    "text": "time had very a very weak interoperability story it had a very weak multi-language story we're gonna",
    "start": "511920",
    "end": "517469"
  },
  {
    "text": "have a virtual machine that supports multiple multiple programming paradigms and it is going to be able to intro fix",
    "start": "517469",
    "end": "523950"
  },
  {
    "text": "tremely well with comm with C and then ultimately I think dotnet has exceptionally good interoperability",
    "start": "523950",
    "end": "530910"
  },
  {
    "text": "story with a whole range of things and this is an ongoing theme for dotnet itself in the intro interoperability",
    "start": "530910",
    "end": "536130"
  },
  {
    "text": "sphere you see a lot of the two that I've gets built in the.net era is about solving the the the interrupt sort",
    "start": "536130",
    "end": "543420"
  },
  {
    "text": "of dilemma and and making sure that the tool plays well with with other tools but for me I was a functional programmer",
    "start": "543420",
    "end": "551309"
  },
  {
    "text": "and I landed the Microsoft and I landed in at the start of dotnet and as a",
    "start": "551309",
    "end": "557389"
  },
  {
    "text": "researcher as well and I absolutely loved a certain kind of functional programming I'd been strongly influenced",
    "start": "557389",
    "end": "565019"
  },
  {
    "text": "by the O'Connell language but I'd worked in a whole range of other languages but I knew there were big problems over in",
    "start": "565019",
    "end": "570869"
  },
  {
    "text": "the functional world and if we remember back to that time the time roughly speaking 2002 2003 these functional",
    "start": "570869",
    "end": "578399"
  },
  {
    "text": "languages that we had then wait they were really very isolated in and and",
    "start": "578399",
    "end": "585089"
  },
  {
    "text": "isolated for reasons okay they were isolated if you look at a language like",
    "start": "585089",
    "end": "591059"
  },
  {
    "text": "Oh camel absolutely fantastic language absolutely fantastic virtual machine and",
    "start": "591059",
    "end": "598100"
  },
  {
    "text": "runtime infrastructure but because they had their own virtual machine then it was just difficult for them to",
    "start": "598100",
    "end": "604230"
  },
  {
    "text": "interoperate not that it had a good see interoperability it was ok see calls but",
    "start": "604230",
    "end": "609740"
  },
  {
    "text": "other languages like the miranda's or the Haskell's and others also had severe",
    "start": "609740",
    "end": "615110"
  },
  {
    "text": "interoperability problems our isolated not interoperable and using their own virtual machines and back in the day",
    "start": "615110",
    "end": "621170"
  },
  {
    "text": "some of you will remember what was interrupt like then well the sequel's we",
    "start": "621170",
    "end": "626879"
  },
  {
    "text": "still use those it's fine calm still get to use a bit Korver anyone using Korver anyone I'm sorry I'm so sorry",
    "start": "626879",
    "end": "640639"
  },
  {
    "text": "so anybody else just know just just I don't I don't even know what cover",
    "start": "640639",
    "end": "645959"
  },
  {
    "text": "actually did or does but it was what interoperability the big thing of interoperability back then lots and lots",
    "start": "645959",
    "end": "651870"
  },
  {
    "text": "of XML of course was the big rage for how everything was going to interoperate we still use that a bit but from the",
    "start": "651870",
    "end": "657929"
  },
  {
    "text": "point of view of functional programming it says these things here don't get we don't get us what we need which is a",
    "start": "657929",
    "end": "663809"
  },
  {
    "text": "rich ecosystem of libraries and components we have and even these had",
    "start": "663809",
    "end": "671220"
  },
  {
    "text": "even these functional VM have to design there are an interoperability mechanisms it was the best it was a bad situation and it meant",
    "start": "671220",
    "end": "677310"
  },
  {
    "text": "that there was a real contradiction in practice between using functional programming and using using using and",
    "start": "677310",
    "end": "686640"
  },
  {
    "text": "modern virtual machines okay so the F sharp approach is it was it was seen as crazy at the time I mean I know I know",
    "start": "686640",
    "end": "692730"
  },
  {
    "text": "it's it's so normal now of course people make these languages Scala Swift Cod",
    "start": "692730",
    "end": "698610"
  },
  {
    "text": "learn and there's a whole lot of others all use the same fundamental approach that F sharp talk and and perhaps I'll",
    "start": "698610",
    "end": "707130"
  },
  {
    "text": "also call out a language called ml ml J which was a predecessor to F sharp in",
    "start": "707130",
    "end": "712530"
  },
  {
    "text": "many ways as doing the standard ml language to the JVM back in the late 90s where some of my colleagues at Microsoft",
    "start": "712530",
    "end": "719550"
  },
  {
    "text": "Research also took this approach and it was same people said look there's no way you're going to get a functional language that runs anywhere near fast",
    "start": "719550",
    "end": "725760"
  },
  {
    "text": "enough by running on an object-oriented virtual machine that were just absolutely dismissive that this idea of",
    "start": "725760",
    "end": "731640"
  },
  {
    "text": "taking functional programming and sticking it on dotnet was going to was going to work out in practice and it has",
    "start": "731640",
    "end": "739980"
  },
  {
    "text": "worked out I mean we were absolutely right the Scala people were absolutely right as well to take the the",
    "start": "739980",
    "end": "749130"
  },
  {
    "text": "programming paradigm is slightly different emphasis in Scala for an f-sharp or taking this functional functional first programming paradigm",
    "start": "749130",
    "end": "755250"
  },
  {
    "text": "where tsukina on top of that net an industry-standard runtime layer and now",
    "start": "755250",
    "end": "761550"
  },
  {
    "text": "the act of doing that is not just making say Oh camel net and then sticking",
    "start": "761550",
    "end": "767430"
  },
  {
    "text": "rigidly this is what our camel is and let and and this is what net is because that doesn't give you the win-win that",
    "start": "767430",
    "end": "773640"
  },
  {
    "text": "you need between the the in the ecosystem that you're in just like Scala wasn't just taking some existing",
    "start": "773640",
    "end": "780180"
  },
  {
    "text": "language we really do let the environment and sort of environment that",
    "start": "780180",
    "end": "787020"
  },
  {
    "text": "you're in you're walking in to influence the language design to some degree to an",
    "start": "787020",
    "end": "793170"
  },
  {
    "text": "appropriate degree we have to keep the Exorcism at an appropriate distance so there's really a balance ii act as you",
    "start": "793170",
    "end": "799820"
  },
  {
    "text": "think my clique is gone and there might be another one here",
    "start": "799820",
    "end": "805320"
  },
  {
    "text": "I might have to yeah here we go I'm gonna does it still work oh it does okay great so there's a",
    "start": "805320",
    "end": "813180"
  },
  {
    "text": "balancing act that you have to do as you make a language design situated in the dotnet ecosystem and in particular you",
    "start": "813180",
    "end": "820800"
  },
  {
    "text": "have to design the language with interoperability in mind and that runs all the way through the f-sharp language",
    "start": "820800",
    "end": "826110"
  },
  {
    "text": "design we do care about interoperating with C sharp and interoperating with dotnet dll's and interoperating more",
    "start": "826110",
    "end": "833940"
  },
  {
    "text": "widely as well and I'll talk about that when we talk about type providers as well and we do need to compromise some",
    "start": "833940",
    "end": "840060"
  },
  {
    "text": "elements where needed if some elements of the approach that you know the",
    "start": "840060",
    "end": "846060"
  },
  {
    "text": "functional approach don't fit on the on the platform and useful on the platform then we won't do it on the platform okay",
    "start": "846060",
    "end": "853590"
  },
  {
    "text": "so this tension here we have this on a new direction an arrow going down which",
    "start": "853590",
    "end": "859590"
  },
  {
    "text": "is functional on interoperable virtual machines and it has worked absolutely",
    "start": "859590",
    "end": "864620"
  },
  {
    "text": "fantastically as I said it's not just an approach used by f-sharp when you look at the the Kotlin language design",
    "start": "864620",
    "end": "871380"
  },
  {
    "text": "situating in the context of the other android well both generally but in particular the JVM and the Android",
    "start": "871380",
    "end": "877830"
  },
  {
    "text": "ecosystem if you look at the Swift language design in the Objective C ecosystem those languages are very much",
    "start": "877830",
    "end": "884250"
  },
  {
    "text": "following this kind of path that has been trodden so that's definitely a",
    "start": "884250",
    "end": "889920"
  },
  {
    "text": "story in relaxation I don't wake up anymore like I did in 2003 saying I",
    "start": "889920",
    "end": "895020"
  },
  {
    "text": "really want to be able to have a functional language it runs on dotnet I really want to be able to use functional programming practice because I can okay",
    "start": "895020",
    "end": "901740"
  },
  {
    "text": "that I don't have to worry about that anymore that problem is solved and life",
    "start": "901740",
    "end": "906780"
  },
  {
    "text": "is Pina Colada time relaxation so so",
    "start": "906780",
    "end": "912810"
  },
  {
    "text": "these are these and we haven't given the baby away these functional programming",
    "start": "912810",
    "end": "919050"
  },
  {
    "text": "languages are true to their principles I",
    "start": "919050",
    "end": "924510"
  },
  {
    "text": "think in that and so that's certainly true for f-sharp it says scale has a slightly different set of design principles but they I",
    "start": "924510",
    "end": "930810"
  },
  {
    "text": "think it says true to the true true true to a mixed functional object-oriented",
    "start": "930810",
    "end": "935910"
  },
  {
    "text": "paradigm and I'll talk about a few I'll type in a bit okay okay but I do want to say",
    "start": "935910",
    "end": "941519"
  },
  {
    "text": "that we there are some things we don't do in F sharp up because they don't they're not easily implemented on industry standard virtual machines",
    "start": "941519",
    "end": "947819"
  },
  {
    "text": "there's a feature called higher kind of types which is both there's also a",
    "start": "947819",
    "end": "952889"
  },
  {
    "text": "physical type classes they're only they're both functional language functional techniques and we don't do",
    "start": "952889",
    "end": "959129"
  },
  {
    "text": "them on an F sharp that's partly because of implementation issues and partly",
    "start": "959129",
    "end": "966600"
  },
  {
    "text": "because well then in the in that context of an interoperable context they're not",
    "start": "966600",
    "end": "972180"
  },
  {
    "text": "as useful as they are if you've got control over the whole library design so",
    "start": "972180",
    "end": "977339"
  },
  {
    "text": "because we don't have control over the whole net library design then then we",
    "start": "977339",
    "end": "982680"
  },
  {
    "text": "it's not really quite as compelling to do those features and in fact it could actually be a negative for in some",
    "start": "982680",
    "end": "989069"
  },
  {
    "text": "situations all right okay so that's a technical feature functional and Interop",
    "start": "989069",
    "end": "994319"
  },
  {
    "text": "I now want to turn to a more sociological kind of thing which is this",
    "start": "994319",
    "end": "999660"
  },
  {
    "text": "massive tension as a tool deliverer and the first creating a language and working with the community and with an",
    "start": "999660",
    "end": "1006439"
  },
  {
    "text": "ecosystem and this is and it's a tension which many of you have in your working life as you work in enterprises and you",
    "start": "1006439",
    "end": "1012410"
  },
  {
    "text": "work to consider how to relate to open source and that's this yeah this big tension between enterprise and openness",
    "start": "1012410",
    "end": "1018499"
  },
  {
    "text": "and funnily enough I don't think we really have a name for what this the resolution of this thing is if we",
    "start": "1018499",
    "end": "1024709"
  },
  {
    "text": "interesting to try and think of a term we say Microsoft's embrace open sources open source but we absolutely haven't",
    "start": "1024709",
    "end": "1031279"
  },
  {
    "text": "given the enterprise thing away we've created I mean and other enterprises are doing the same thing we've we've created",
    "start": "1031279",
    "end": "1037220"
  },
  {
    "text": "something else that's in the middle that we need a name for to say what's this thing that you get when you combine an",
    "start": "1037220",
    "end": "1043279"
  },
  {
    "text": "enterprise and openness and in a positive synthesis and combination so",
    "start": "1043279",
    "end": "1048830"
  },
  {
    "text": "just talk about the where we are now I think Phillip and others have covered this really really well",
    "start": "1048830",
    "end": "1054950"
  },
  {
    "text": "f-sharp is a language design has a I think of as a sort of a demilitarized",
    "start": "1054950",
    "end": "1060740"
  },
  {
    "text": "zone called the f-sharp Software Foundation and it has this kind of space",
    "start": "1060740",
    "end": "1065779"
  },
  {
    "text": "which is neutral and in the independent it's cross-platform neutral and",
    "start": "1065779",
    "end": "1071090"
  },
  {
    "text": "independent and that means is sort of although f-sharp is heavily influenced by dotnet it also is used on",
    "start": "1071090",
    "end": "1078140"
  },
  {
    "text": "JavaScript extensively and it's also although F sharps has great tooling in",
    "start": "1078140",
    "end": "1085700"
  },
  {
    "text": "Visual Studio we also have other contributors like JetBrains who make professional tooling for F sharp and",
    "start": "1085700",
    "end": "1091630"
  },
  {
    "text": "what it means is everybody involved in F sharp agrees that there's this sort of space where we consider things from a",
    "start": "1091630",
    "end": "1097520"
  },
  {
    "text": "neutral cross platform an independent point of view and that is certainly applies to the F sharp language design",
    "start": "1097520",
    "end": "1103040"
  },
  {
    "text": "and it also applies to many other aspects about how F sharp works as an",
    "start": "1103040",
    "end": "1109100"
  },
  {
    "text": "ecosystem so of course we're open we",
    "start": "1109100",
    "end": "1116270"
  },
  {
    "text": "nearly I think nearly all F sharp tooling is except all of it is accepting contributions and is a license under",
    "start": "1116270",
    "end": "1125300"
  },
  {
    "text": "under under good licensing terms and I said I mention F sharp already as part",
    "start": "1125300",
    "end": "1131300"
  },
  {
    "text": "of this cross-platform neutral and independent this gives a the community a",
    "start": "1131300",
    "end": "1136310"
  },
  {
    "text": "very strong voice in the F sharp arena there the the sort of the the community",
    "start": "1136310",
    "end": "1144500"
  },
  {
    "text": "can shape have a have a route by which to shape what the f sharp ecosystem and",
    "start": "1144500",
    "end": "1150350"
  },
  {
    "text": "about it looks like but from a technical and a social point of view and so that's",
    "start": "1150350",
    "end": "1155450"
  },
  {
    "text": "through the F sharp Software Foundation which is absolutely wonderful thing on tooling I work for a group for Microsoft",
    "start": "1155450",
    "end": "1161990"
  },
  {
    "text": "mobile tools and we sort of do dotnet for devices which we can also call",
    "start": "1161990",
    "end": "1167210"
  },
  {
    "text": "xamarin and they we provide F sharp tools for Android and iOS I spend a lot",
    "start": "1167210",
    "end": "1174500"
  },
  {
    "text": "of my time working out new programming models for doing up programming and sitting there with my Android device",
    "start": "1174500",
    "end": "1179990"
  },
  {
    "text": "happily like sort of getting the apps to do their thing I'll be talking a bit about that later",
    "start": "1179990",
    "end": "1186850"
  },
  {
    "text": "we have the visual F sharp tools and",
    "start": "1186850",
    "end": "1191900"
  },
  {
    "text": "Microsoft's tools for Windows and Azure I should also I've also mentioned JetBrains and other tooling providers",
    "start": "1191900",
    "end": "1197540"
  },
  {
    "text": "here and of course we have this it's wonderful story for F sharp for dotnet",
    "start": "1197540",
    "end": "1203270"
  },
  {
    "text": "core which means you have a great story on Linux and OS X and everywhere where dotnet core",
    "start": "1203270",
    "end": "1208760"
  },
  {
    "text": "runs and also on multiple cloud platforms we have Google cloud platform support for F sharp through dotnet core",
    "start": "1208760",
    "end": "1215690"
  },
  {
    "text": "we have Amazon Lander support for F sharp and and and so on and that's",
    "start": "1215690",
    "end": "1221900"
  },
  {
    "text": "largely coming through this the fact that I've sharp is far the dotnet core okay so underneath this at a technical",
    "start": "1221900",
    "end": "1231560"
  },
  {
    "text": "level a lot of this is driven through this one component called the f-sharp compiler service",
    "start": "1231560",
    "end": "1236660"
  },
  {
    "text": "it drives its Ameren tooling it drives to visualise sharp tooling it's the core of the compiler that's delivered through",
    "start": "1236660",
    "end": "1242840"
  },
  {
    "text": "dotnet core but it's also drives a lot of other scenarios it's a fully open component it also drives thing called",
    "start": "1242840",
    "end": "1250190"
  },
  {
    "text": "fable so the it's just a dll a single DLL f-sharp compiler service or DLL that",
    "start": "1250190",
    "end": "1257030"
  },
  {
    "text": "gets included into all these different components when we make an addition to the f-sharp language design we're really",
    "start": "1257030",
    "end": "1263150"
  },
  {
    "text": "making an addition to this component and then out it flows into all the different tooling ok so a very integrated cohesive",
    "start": "1263150",
    "end": "1269930"
  },
  {
    "text": "tool tooling story we were able to float make change here and flow it out into a",
    "start": "1269930",
    "end": "1278630"
  },
  {
    "text": "whole range of different packaging and tooling tooling as delivery channels so",
    "start": "1278630",
    "end": "1285980"
  },
  {
    "text": "we have this wonderful thing called safe stack as well I'll talk about that in a bit and what all of this means ok and",
    "start": "1285980",
    "end": "1292970"
  },
  {
    "text": "it's been a lot taken us a real journey to get to this point for f-sharp and",
    "start": "1292970",
    "end": "1298600"
  },
  {
    "text": "what all of this means is I the the",
    "start": "1298600",
    "end": "1304220"
  },
  {
    "text": "enterprise story is resolved the openness story is resolved whatever we call this situation where we have this",
    "start": "1304220",
    "end": "1311150"
  },
  {
    "text": "combination is a relaxing super relaxing situation for me in that I get to",
    "start": "1311150",
    "end": "1318290"
  },
  {
    "text": "concentrate on my part of the game as language designer down here we've this I've been using this slide for a couple",
    "start": "1318290",
    "end": "1324650"
  },
  {
    "text": "of years but I've and that number there has progressed from 4.0 to 4.1 to 4.5 we've been able to iteratively improve",
    "start": "1324650",
    "end": "1332630"
  },
  {
    "text": "the f-sharp language design and flow out the changes and work with the community on RFC's",
    "start": "1332630",
    "end": "1338040"
  },
  {
    "text": "and really make progress on the language and really happy with where this",
    "start": "1338040",
    "end": "1343080"
  },
  {
    "text": "combination is so this shift to open engineering I mean maybe that's a term I",
    "start": "1343080",
    "end": "1348540"
  },
  {
    "text": "could use for it we're still enterprises we're still open source this combination Lester's called open engineering for",
    "start": "1348540",
    "end": "1354450"
  },
  {
    "text": "this talk it happened everyone 2014 2015 and net has gone the",
    "start": "1354450",
    "end": "1360060"
  },
  {
    "text": "same way in 2016 and I like to think we acted as inspiration for the.net shift",
    "start": "1360060",
    "end": "1365490"
  },
  {
    "text": "to this as well and this has been really a huge success and I'm really incredibly",
    "start": "1365490",
    "end": "1373440"
  },
  {
    "text": "happy with where we are and I think mark Microsoft as people who originated that",
    "start": "1373440",
    "end": "1378510"
  },
  {
    "text": "shift are very happy to be part of this so loads of run through some things",
    "start": "1378510",
    "end": "1385470"
  },
  {
    "text": "about the ramifications of that shift just just a couple of signals that you can pick up on so we've got loads of",
    "start": "1385470",
    "end": "1391470"
  },
  {
    "text": "pull requests have come into the F sharp compiler including with for instance we",
    "start": "1391470",
    "end": "1397740"
  },
  {
    "text": "have JetBrains contributing to the F sharp editing support so where that space of cooperation between what in",
    "start": "1397740",
    "end": "1404850"
  },
  {
    "text": "some ways a different tooling vendors is walking out you know that's and that's",
    "start": "1404850",
    "end": "1411420"
  },
  {
    "text": "that's the magic really when you get cooperative spaces to do the open engineering so you can take a look at",
    "start": "1411420",
    "end": "1418620"
  },
  {
    "text": "the guard ownership that github that I owe to find out where to contribute we",
    "start": "1418620",
    "end": "1425070"
  },
  {
    "text": "have a language design process which is to use to drive that change take a look at FS lang design if you've got",
    "start": "1425070",
    "end": "1430920"
  },
  {
    "text": "suggestions you want to you'd be one of those people feeding me sort of points",
    "start": "1430920",
    "end": "1436740"
  },
  {
    "text": "of view on where the f-sharp language designs will go then drop them in on f-sharp language suggestions or search and vote on the ones that are there I we",
    "start": "1436740",
    "end": "1445410"
  },
  {
    "text": "take the language suggestions and turn them into we approve them in principle they become RFC's in f-sharp like if",
    "start": "1445410",
    "end": "1452520"
  },
  {
    "text": "it's Lang design you can read through all the previous RFC's and comment on them and contribute new ones and and and",
    "start": "1452520",
    "end": "1459270"
  },
  {
    "text": "then help implement them as well so so please get involved it's a lot of fun",
    "start": "1459270",
    "end": "1464690"
  },
  {
    "text": "you quickly run through what we did in those releases f-sharp 4.0 we well I won't go through this in detail you can",
    "start": "1464690",
    "end": "1470730"
  },
  {
    "text": "kind of say the usual of lists of improvements and better nurse we did a whole lot of work on the",
    "start": "1470730",
    "end": "1477389"
  },
  {
    "text": "core library we made type providers more powerful we did better debugging tooling parfum provements on the compiler it's",
    "start": "1477389",
    "end": "1483629"
  },
  {
    "text": "just better nurse betterness we with this 4.1 and 4.2 have been influenced by",
    "start": "1483629",
    "end": "1492330"
  },
  {
    "text": "this sort of this great thing internet that you can use Struck's to get performance increased performance we've",
    "start": "1492330",
    "end": "1499289"
  },
  {
    "text": "been doing that through making a whole lot of unboxed options available for various f-sharp types putting some",
    "start": "1499289",
    "end": "1505469"
  },
  {
    "text": "things in the core library we've also solved some issues in the programming",
    "start": "1505469",
    "end": "1510479"
  },
  {
    "text": "model to allow you to do these sort of large open scopes namespace rec like",
    "start": "1510479",
    "end": "1516599"
  },
  {
    "text": "this and i guess i can announce the f-sharp 4.5 feature set i mean it'll",
    "start": "1516599",
    "end": "1523109"
  },
  {
    "text": "come out officially in the blog post from philip sometime soon but this is what is being checked into master i've",
    "start": "1523109",
    "end": "1530700"
  },
  {
    "text": "for delivery through those channels so it's been interesting we've we've",
    "start": "1530700",
    "end": "1537899"
  },
  {
    "text": "watched the the c-sharp people go through C sharp 7 and they they kind of",
    "start": "1537899",
    "end": "1542969"
  },
  {
    "text": "dripped out this feature by feature in c-sharp 7.0 7.1 7.2 this kind of",
    "start": "1542969",
    "end": "1550219"
  },
  {
    "text": "features for a zone where c-sharp really is is a is a very good choice which is",
    "start": "1550219",
    "end": "1555690"
  },
  {
    "text": "sort of this high-performance systems programming it's a point where there's",
    "start": "1555690",
    "end": "1560759"
  },
  {
    "text": "pointers and and and and and so unmanned unmanaged memory and kind of flat memory",
    "start": "1560759",
    "end": "1566729"
  },
  {
    "text": "structures for for programming so middleware in a in a in a cloud in in a",
    "start": "1566729",
    "end": "1572609"
  },
  {
    "text": "cloud environment ok and what that I'd love to is actually quite a really good",
    "start": "1572609",
    "end": "1578789"
  },
  {
    "text": "design which is a really important contribution to the dotnet ecosystem and we roughly think of that a span of tea",
    "start": "1578789",
    "end": "1585419"
  },
  {
    "text": "and memory of tea but it's actually made up of a whole lot of other technical features like by RF extension methods on",
    "start": "1585419",
    "end": "1591059"
  },
  {
    "text": "stroke strokes or by RF returns and you know we don't need to worry about the technical details so much but a lot of",
    "start": "1591059",
    "end": "1596129"
  },
  {
    "text": "it is about pointers here by row if this and that and I'm making the use of flat",
    "start": "1596129",
    "end": "1604320"
  },
  {
    "text": "memory arrays of struct objects so safer and",
    "start": "1604320",
    "end": "1610840"
  },
  {
    "text": "make these two pointers safer and so we decided to put this into f-sharp 4.5",
    "start": "1610840",
    "end": "1616640"
  },
  {
    "text": "part because it is now part of its really a dotnet design an f-sharp is a dotnet language and we absolutely had to",
    "start": "1616640",
    "end": "1622820"
  },
  {
    "text": "do a good job of this as well so I'm very happy that we've been able to land this over the last month and it's landed",
    "start": "1622820",
    "end": "1629270"
  },
  {
    "text": "in master now and it's in it's in good shape as a feature and if you're into this kind of safe memory",
    "start": "1629270",
    "end": "1636080"
  },
  {
    "text": "high-performance programming then this is a great addition you can learn and and and use I'm happy with how this",
    "start": "1636080",
    "end": "1641899"
  },
  {
    "text": "pointer business worked out an f-sharp so a bar F of T which exists already is just consider the bar F where you can",
    "start": "1641899",
    "end": "1648140"
  },
  {
    "text": "read or write the thing and in ref is a bar F which is an imprimatur which you can only read and out ref is a is a bar",
    "start": "1648140",
    "end": "1654919"
  },
  {
    "text": "for designing an out parameter which you only meant to write okay and that we did",
    "start": "1654919",
    "end": "1660529"
  },
  {
    "text": "a few other things down here syntax and and and so on and now that's done we can",
    "start": "1660529",
    "end": "1666049"
  },
  {
    "text": "start to put our attention towards f-sharp 5.0 and please get involved in in that design okay so openness what",
    "start": "1666049",
    "end": "1673220"
  },
  {
    "text": "does this on the open aside we have Christoph here who does the iron.i tooling which is absolutely fantastic",
    "start": "1673220",
    "end": "1678620"
  },
  {
    "text": "tooling for the F sharp envious code a lot of F sharp people use that every day as their main tooling and it uses the F",
    "start": "1678620",
    "end": "1686539"
  },
  {
    "text": "sharp compiler service and I don't think it supports atom anymore I'm not sure",
    "start": "1686539",
    "end": "1691549"
  },
  {
    "text": "that anyway it's fierce code is the main point of use and a fantastic thing",
    "start": "1691549",
    "end": "1697340"
  },
  {
    "text": "entirely community-driven apart from the F sharp compiler service which is also which is that core component I talked",
    "start": "1697340",
    "end": "1704149"
  },
  {
    "text": "about openness I mean this is absolutely amazing I've mentioned this already that",
    "start": "1704149",
    "end": "1709549"
  },
  {
    "text": "we had F sharp is our part of the.net SDK itself and that means wherever the",
    "start": "1709549",
    "end": "1714559"
  },
  {
    "text": "dotnet core tooling appears in the world then F sharp will be a part of that",
    "start": "1714559",
    "end": "1720500"
  },
  {
    "text": "tooling and that is an absolutely fantastic result for spreading f sharp",
    "start": "1720500",
    "end": "1725630"
  },
  {
    "text": "it's having influence inside the company at Microsoft where I am and if it's having influencing companies like Amazon",
    "start": "1725630",
    "end": "1732590"
  },
  {
    "text": "and Google as they to go out neck or tooling then F sharp goes along for the ride and that's absolutely fantastic so and",
    "start": "1732590",
    "end": "1740980"
  },
  {
    "text": "the wonderful thing about shifting to open engineering and open source is you get the incredible creativity of your",
    "start": "1740980",
    "end": "1747130"
  },
  {
    "text": "community and I'm going to just mention there lots and lots of examples of this in the air shaft community if you want",
    "start": "1747130",
    "end": "1753460"
  },
  {
    "text": "to see one great example of it take a look at the F sharp advent calendar where we at the end of the year if",
    "start": "1753460",
    "end": "1759820"
  },
  {
    "text": "you're part of the F sharp community and you want to contribute to you know some of the great things you've been creating",
    "start": "1759820",
    "end": "1765040"
  },
  {
    "text": "during the year then you you you you contributed a blog entry to the F sharp advent calendar and we get 50 60 of",
    "start": "1765040",
    "end": "1772930"
  },
  {
    "text": "those different blog entries coming out and they're all really good to read I mentioned two one is fable F sharp to",
    "start": "1772930",
    "end": "1780360"
  },
  {
    "text": "JavaScript via Babel and this gets used to implement I&I two gets used for real",
    "start": "1780360",
    "end": "1787480"
  },
  {
    "text": "it's not a toy this thing is used in in in in applications enterprise applications it's used as I",
    "start": "1787480",
    "end": "1794110"
  },
  {
    "text": "said for various code and other things and I strongly recommend if you're into",
    "start": "1794110",
    "end": "1801670"
  },
  {
    "text": "the JavaScript ecosystem that you consider taking a look at fail and for",
    "start": "1801670",
    "end": "1807490"
  },
  {
    "text": "many people this is an entry point f-sharp now not through net but through but through Favell and javascript",
    "start": "1807490",
    "end": "1813520"
  },
  {
    "text": "programming and it's very much packet its packaged as a node package you're part of the JavaScript ecosystem when",
    "start": "1813520",
    "end": "1818590"
  },
  {
    "text": "you use fable but it's a great example of the F sharp community's creativity this is a great example not only the F",
    "start": "1818590",
    "end": "1825190"
  },
  {
    "text": "sharp community's creativity but also their technical excellence the safe",
    "start": "1825190",
    "end": "1831100"
  },
  {
    "text": "stack here safe stack github do is it's",
    "start": "1831100",
    "end": "1837130"
  },
  {
    "text": "a functional first stack both for fable on the client-side and net core on the",
    "start": "1837130",
    "end": "1843040"
  },
  {
    "text": "server side and f-sharp all the way and you can share code between these two you",
    "start": "1843040",
    "end": "1848740"
  },
  {
    "text": "have a really great rapid development process where as you save files it automatically repopulate syou're your",
    "start": "1848740",
    "end": "1855340"
  },
  {
    "text": "web your web app with the code and the server side as well and you get to use a",
    "start": "1855340",
    "end": "1862600"
  },
  {
    "text": "functional first perspective all the way through so it's a great thing in and of",
    "start": "1862600",
    "end": "1868180"
  },
  {
    "text": "itself it is what the fact that is community driven means you get community creativity and technical excellence all",
    "start": "1868180",
    "end": "1874600"
  },
  {
    "text": "the way through so if you're a great programmer and you're looking and you're either on the website or the server side",
    "start": "1874600",
    "end": "1880600"
  },
  {
    "text": "and you're looking for a place to where your technical excellence will be respected and where you can make a big",
    "start": "1880600",
    "end": "1885760"
  },
  {
    "text": "difference in in in in delivering a full stack to the to the programming world",
    "start": "1885760",
    "end": "1891910"
  },
  {
    "text": "then this is a great place to contribute and work and to learn a lot as well",
    "start": "1891910",
    "end": "1897330"
  },
  {
    "text": "okay I've talked about the F Java compiler service so I won't do that anymore but okay so open engineering",
    "start": "1897330",
    "end": "1903400"
  },
  {
    "text": "this is where this is how we resolve this tension here it's a tension I think",
    "start": "1903400",
    "end": "1909760"
  },
  {
    "text": "the the computing world is going to be continuing to have to talk about over the next the next 10 20 30 years you",
    "start": "1909760",
    "end": "1918040"
  },
  {
    "text": "know this is this there are there are still real questions that come up between enterprise and openness and but",
    "start": "1918040",
    "end": "1925390"
  },
  {
    "text": "I you know these things together you need all of these things to get the goodness at the end enterprise quality",
    "start": "1925390",
    "end": "1930790"
  },
  {
    "text": "openness community tooling and a flourishing ecosystem and an evolution",
    "start": "1930790",
    "end": "1937330"
  },
  {
    "text": "path for going forward and all of those things together means again a real",
    "start": "1937330",
    "end": "1942940"
  },
  {
    "text": "source of relaxation as for people working in the f-sharp aruna and please",
    "start": "1942940",
    "end": "1947980"
  },
  {
    "text": "join us okay so the next area how we doing for time okay we got some",
    "start": "1947980",
    "end": "1956950"
  },
  {
    "text": "time you okay fine fine okay so the next area of tension here what's it going to",
    "start": "1956950",
    "end": "1962380"
  },
  {
    "text": "reveal I I've run through this fairly quickly because you've been given oh no",
    "start": "1962380",
    "end": "1968290"
  },
  {
    "text": "it's a surprise I guess a different one first okay well we'll do this one instead right so",
    "start": "1968290",
    "end": "1973990"
  },
  {
    "text": "let's get back to the one that started the talk the question between functional and object-oriented programming and yeah",
    "start": "1973990",
    "end": "1981160"
  },
  {
    "text": "let's go back in time back to the days when these were really opposing camps I",
    "start": "1981160",
    "end": "1986230"
  },
  {
    "text": "mean there were there are still times when the functional and object-oriented worlds feel like they're light-years",
    "start": "1986230",
    "end": "1992050"
  },
  {
    "text": "apart and just coming from Venus and Mars right there it's a different different planets but on the whole it's",
    "start": "1992050",
    "end": "1998380"
  },
  {
    "text": "not like that anymore but back then it was when we started this kind of work",
    "start": "1998380",
    "end": "2004509"
  },
  {
    "text": "so sometimes in some situations when you're with functional diehards you",
    "start": "2004509",
    "end": "2010570"
  },
  {
    "text": "mention the word object and they actually literally have this painful reaction they go oh something like this",
    "start": "2010570",
    "end": "2018220"
  },
  {
    "text": "and now that does still happen a little bit I mean this example that I",
    "start": "2018220",
    "end": "2023379"
  },
  {
    "text": "absolutely love is this book called compiler implementation with standard ml back from the 1990s they're also Java",
    "start": "2023379",
    "end": "2030340"
  },
  {
    "text": "versions of this and I think the C C++ version as well and every chapter had",
    "start": "2030340",
    "end": "2035950"
  },
  {
    "text": "this little tag line on it that would say like garbage collection you know removing unnecessary objects or",
    "start": "2035950",
    "end": "2041830"
  },
  {
    "text": "reclaiming unnecessary memory that there's no longer gonna be used or something very deadpan totally technical",
    "start": "2041830",
    "end": "2047619"
  },
  {
    "text": "deadpan except for chapter 14 which had this his tag line object art appearing",
    "start": "2047619",
    "end": "2053679"
  },
  {
    "text": "object to this express a dislike or distaste for something the whole point",
    "start": "2053679",
    "end": "2059800"
  },
  {
    "text": "of those tag lines was that he could put that in that particular chapter and it's",
    "start": "2059800",
    "end": "2066099"
  },
  {
    "text": "which is a very it was a gem that was hidden away okay so what's the F sharp",
    "start": "2066099",
    "end": "2073480"
  },
  {
    "text": "approach to this how do we not fall into this trap of just like this earth trap for this kind of like rejection kind of",
    "start": "2073480",
    "end": "2080679"
  },
  {
    "text": "thing I me some object-oriented people have the same thing with functional programming or whatever I'm not going to touch that oh my god it's hard that must",
    "start": "2080679",
    "end": "2086888"
  },
  {
    "text": "be mad something crazy responds like that which is just it's not how we get a synthesis not how we make the world a",
    "start": "2086889",
    "end": "2093579"
  },
  {
    "text": "better place so so how do we do that well part of it is we use a slightly",
    "start": "2093579",
    "end": "2099760"
  },
  {
    "text": "different language okay we say we have we embrace object programming and we",
    "start": "2099760",
    "end": "2105760"
  },
  {
    "text": "sure objects are fine where are you program with objects no problem okay and we make it fit with expression oriented",
    "start": "2105760",
    "end": "2112960"
  },
  {
    "text": "typed functional paradigm this core functional paradigm expression oriented",
    "start": "2112960",
    "end": "2118390"
  },
  {
    "text": "typed functional paradigm plus the ability to use objects that's not the",
    "start": "2118390",
    "end": "2124809"
  },
  {
    "text": "same thing as object orientation okay this is fine this I do have a little bit",
    "start": "2124809",
    "end": "2130569"
  },
  {
    "text": "of an issue with okay I want to draw that out a little bit more of the next few slides",
    "start": "2130569",
    "end": "2137250"
  },
  {
    "text": "so first of all technically let's have a look at some s sharp objects here's a nice little functional object no state",
    "start": "2137250",
    "end": "2142470"
  },
  {
    "text": "in this one we have DX and dy we have an internal value this d2 thing here we",
    "start": "2142470",
    "end": "2149310"
  },
  {
    "text": "have a set of run through the the tags here inputs to the object construction here an implicit constructor that's the",
    "start": "2149310",
    "end": "2155760"
  },
  {
    "text": "object internals and part of the constructor these are the exported properties and these are some exported",
    "start": "2155760",
    "end": "2161910"
  },
  {
    "text": "methods down here so there's very much this thing that things flowing at the top it's got some internals and things flow out through this API here for these",
    "start": "2161910",
    "end": "2169290"
  },
  {
    "text": "members that's pretty straightforward fairly simple it's all type inferred",
    "start": "2169290",
    "end": "2174540"
  },
  {
    "text": "runs well and net interoperates etc etc the the language features a pretty",
    "start": "2174540",
    "end": "2181080"
  },
  {
    "text": "simple constructed class types of here interface types and I think that already",
    "start": "2181080",
    "end": "2188670"
  },
  {
    "text": "C sharp still doesn't have an object expressions unbelievably useful I can implement an interface here in the",
    "start": "2188670",
    "end": "2194880"
  },
  {
    "text": "middle of my code I can I can extend a implemented class III underneath you",
    "start": "2194880",
    "end": "2200609"
  },
  {
    "text": "might be inheriting there'll be a class created underneath it's a bit like a closure or delegate but you know there's",
    "start": "2200609",
    "end": "2210030"
  },
  {
    "text": "which will subclass this thing and then add these interfaces on and so on but you don't think of it in terms of object",
    "start": "2210030",
    "end": "2217170"
  },
  {
    "text": "orientation you just think of it as implementing and a little obstruction and it fits incredibly well with",
    "start": "2217170",
    "end": "2223050"
  },
  {
    "text": "functional programming absolutely no problem with this whatsoever it just fits really beautifully and it fits very",
    "start": "2223050",
    "end": "2228570"
  },
  {
    "text": "well with type inference and and it's it's it's it's just just using this",
    "start": "2228570",
    "end": "2234150"
  },
  {
    "text": "feature alone a lot of your boilerplate c-sharp code will just sort of",
    "start": "2234150",
    "end": "2239490"
  },
  {
    "text": "disappears along the way and so this is a nice set of set of",
    "start": "2239490",
    "end": "2244589"
  },
  {
    "text": "features we we have here okay but of course the object orientation isn't just",
    "start": "2244589",
    "end": "2251460"
  },
  {
    "text": "one thing okay and you look at the object tradition of programming",
    "start": "2251460",
    "end": "2257040"
  },
  {
    "text": "languages and Matz covered this and I think some of the background to this and in his keynote you kind of have to come",
    "start": "2257040",
    "end": "2264480"
  },
  {
    "text": "to object orientation as a language designer and have to pull it apart into lots and lots of different things like",
    "start": "2264480",
    "end": "2270150"
  },
  {
    "text": "here we have the dot well nobody can really complain about the dot notation okay we have our",
    "start": "2270150",
    "end": "2275280"
  },
  {
    "text": "instance members like we saw those on the previous slide and they cetera type direct the name resolution that you work",
    "start": "2275280",
    "end": "2281250"
  },
  {
    "text": "out what this length means based on the type of X and etcetera etcetera we run",
    "start": "2281250",
    "end": "2287010"
  },
  {
    "text": "through all these different features and you know since as a language designer coming up with his synthesis you have to",
    "start": "2287010",
    "end": "2293400"
  },
  {
    "text": "take this set of features and actually have an opinion about them and perhaps something we haven't communicated well",
    "start": "2293400",
    "end": "2299340"
  },
  {
    "text": "enough over time is what is the F shelf opinion on object orientation well what that's what really this big",
    "start": "2299340",
    "end": "2305340"
  },
  {
    "text": "question is and we of course have to make these fit with the other features you want the functional features so when",
    "start": "2305340",
    "end": "2311160"
  },
  {
    "text": "you come to these you kind of put them in different buckets and you say well some of them are make F sharp a better",
    "start": "2311160",
    "end": "2316740"
  },
  {
    "text": "API language they actually genuine improvements to F sharp and make it for expressing api's some of it is just like",
    "start": "2316740",
    "end": "2324750"
  },
  {
    "text": "strux about implementing things efficiently some of it is just part of being a dotnet you're an intro part of",
    "start": "2324750",
    "end": "2331980"
  },
  {
    "text": "the Interop standard or in the context of compiling to JavaScript you need to interoperate with JavaScript objects and",
    "start": "2331980",
    "end": "2337860"
  },
  {
    "text": "some of them just aren't needed okay you don't need to suck on the whole thing just because you suck on one thing okay",
    "start": "2337860",
    "end": "2344940"
  },
  {
    "text": "so roughly speaking where we stand is this so we take this core set of",
    "start": "2344940",
    "end": "2350220"
  },
  {
    "text": "features so you take index and notation or static members or instance members or interface types and implementations",
    "start": "2350220",
    "end": "2357240"
  },
  {
    "text": "optional arguments and we say sure these are absolutely great to be using in F sharp code you've got to use them well",
    "start": "2357240",
    "end": "2363480"
  },
  {
    "text": "you can design badly with this set of features but yeah this makes F sharp and outright better language to use of this",
    "start": "2363480",
    "end": "2371490"
  },
  {
    "text": "set of object-oriented features and use them well now then there's a sort of second bucket of things which is like",
    "start": "2371490",
    "end": "2378360"
  },
  {
    "text": "mutable data auto properties patterns like a disposable events trucks",
    "start": "2378360",
    "end": "2383880"
  },
  {
    "text": "delegates enums and typecasting here which f sharp would still be F sharp without these things okay but we need",
    "start": "2383880",
    "end": "2393840"
  },
  {
    "text": "these for various reasons so it sort of used where necessary use tastefully used respectively respectfully and probably",
    "start": "2393840",
    "end": "2400500"
  },
  {
    "text": "use sparingly but it still okay to use them but just be aware that don't you do you don't it's not core to the work",
    "start": "2400500",
    "end": "2407309"
  },
  {
    "text": "it might be around the edges of your work okay and then there's a set of",
    "start": "2407309",
    "end": "2412890"
  },
  {
    "text": "features which I've conveniently put in red over here such as these large type",
    "start": "2412890",
    "end": "2419789"
  },
  {
    "text": "hierarchies of things it's use of implementation inheritance in large type",
    "start": "2419789",
    "end": "2424799"
  },
  {
    "text": "hierarchies use of nulls and unchecked default and the extensive use of method",
    "start": "2424799",
    "end": "2432269"
  },
  {
    "text": "overloading that's a bit of a spectrum",
    "start": "2432269",
    "end": "2437880"
  },
  {
    "text": "but let's say overloading methods ambiguously based on type and and number",
    "start": "2437880",
    "end": "2445920"
  },
  {
    "text": "of arguments and these are you know this is where you're going down the rabbit hole if you embrace this stuff too much",
    "start": "2445920",
    "end": "2452010"
  },
  {
    "text": "this is a heavy heavy object orientation over this side and we say probably not",
    "start": "2452010",
    "end": "2457170"
  },
  {
    "text": "in F sharp there are some cases where you might still use some of these things but probably not and then there's a set",
    "start": "2457170",
    "end": "2464369"
  },
  {
    "text": "of things we just don't over do we just don't do we don't actually don't support protected because sitting and the reason",
    "start": "2464369",
    "end": "2469859"
  },
  {
    "text": "we don't support protected is because it encourages implementation inheritance and only works in the context of",
    "start": "2469859",
    "end": "2474930"
  },
  {
    "text": "implementation inheritance and I don't like that okay I don't want to be let people to be led towards implementation",
    "start": "2474930",
    "end": "2480599"
  },
  {
    "text": "inheritance wildcard types and aspect oriented programming and so on okay so",
    "start": "2480599",
    "end": "2487289"
  },
  {
    "text": "we don't do those not supported so roughly speaking love these tolerate",
    "start": "2487289",
    "end": "2493170"
  },
  {
    "text": "these mostly avoid these and forget all about this okay and then you'll be then",
    "start": "2493170",
    "end": "2498329"
  },
  {
    "text": "you'll be happy and you get on get on with your programming life and that's the difference now between object",
    "start": "2498329",
    "end": "2503819"
  },
  {
    "text": "programming which f-sharp does support and that's about succinct coding notational convenience",
    "start": "2503819",
    "end": "2509880"
  },
  {
    "text": "you know c-sharp has done a great job of being an API design language okay and",
    "start": "2509880",
    "end": "2514890"
  },
  {
    "text": "you can do all those things in F sharp so it's about API ergonomics good naming practical",
    "start": "2514890",
    "end": "2519930"
  },
  {
    "text": "encapsulation sensible small composable abstractions this is all good in the",
    "start": "2519930",
    "end": "2526079"
  },
  {
    "text": "context of object oriented object programming with F sharp and it fits well with being an expression oriented",
    "start": "2526079",
    "end": "2532740"
  },
  {
    "text": "and above all and the most important thing of all is it focuses on making simple",
    "start": "2532740",
    "end": "2538140"
  },
  {
    "text": "things out of complex foundations okay so that you can and that is often done",
    "start": "2538140",
    "end": "2545579"
  },
  {
    "text": "out of delegation you make something simple you capture it as in your closure of things or in your object design and",
    "start": "2545579",
    "end": "2552240"
  },
  {
    "text": "you make a simple API which delegates towards complex foundations okay",
    "start": "2552240",
    "end": "2559529"
  },
  {
    "text": "object-oriented programming on the other side it says object is going to be a single dominant paradigm that effects",
    "start": "2559529",
    "end": "2565500"
  },
  {
    "text": "both you all the way from your implementation all the way up to T or your Mel diagrams and object objects",
    "start": "2565500",
    "end": "2570990"
  },
  {
    "text": "objects absolutely everywhere its massive overuse of higher classification",
    "start": "2570990",
    "end": "2576500"
  },
  {
    "text": "starting with the very first page of those design books I don't know what it is about people they just wanna that",
    "start": "2576500",
    "end": "2582059"
  },
  {
    "text": "once you give them the ability to hierarchically classify things they just start classifying the entire world sort",
    "start": "2582059",
    "end": "2587190"
  },
  {
    "text": "of obsessively you know they start with animal and then by you know you know they discontinue to do that I think it's",
    "start": "2587190",
    "end": "2593099"
  },
  {
    "text": "a it's must be something in cognitive that encourages that people have this natural facility to to draw to put",
    "start": "2593099",
    "end": "2600329"
  },
  {
    "text": "things into into buckets and then draw connections between them okay so overuse of hierarchical",
    "start": "2600329",
    "end": "2606509"
  },
  {
    "text": "classification object-oriented programming has often large abstractions with loads of failure points ok loads of",
    "start": "2606509",
    "end": "2613349"
  },
  {
    "text": "nulls or loads of places where things sort of don't work ok and in",
    "start": "2613349",
    "end": "2619650"
  },
  {
    "text": "implementation inheritance where if you start with something complex and you inherit from it then you can only make",
    "start": "2619650",
    "end": "2626819"
  },
  {
    "text": "it more complex ok implementation inheritance encourages the creation of complexity ok because you're making",
    "start": "2626819",
    "end": "2633809"
  },
  {
    "text": "complex things out of complex things ok and that is the fundamental reason why I",
    "start": "2633809",
    "end": "2638910"
  },
  {
    "text": "don't I don't fully embrace object-oriented programming ok at a technical level that that means",
    "start": "2638910",
    "end": "2645420"
  },
  {
    "text": "you have these all these functional features here and then you have all these object features down here and you've got to work out how they all",
    "start": "2645420",
    "end": "2650490"
  },
  {
    "text": "interact and a lot of the F sharp language design is about getting this right you're getting all these tick",
    "start": "2650490",
    "end": "2656009"
  },
  {
    "text": "boxes and they're making some careful limitations around the edges down the down the bottom I won't go through those",
    "start": "2656009",
    "end": "2662609"
  },
  {
    "text": "but you sort of get this relative relatively graceful degradation so you might need some type annotations over",
    "start": "2662609",
    "end": "2669119"
  },
  {
    "text": "here or you if you use a combination of features and the same with down here okay",
    "start": "2669119",
    "end": "2676850"
  },
  {
    "text": "and then some combinations it's outlawed here we don't allow currying here and method overloading okay so that is again",
    "start": "2676850",
    "end": "2686060"
  },
  {
    "text": "a positive synthesis there are some limitations and sorry that that comment",
    "start": "2686060",
    "end": "2691580"
  },
  {
    "text": "is from an old talk I'm not going to be talking about this here but there's a strong positive synthesis between those",
    "start": "2691580",
    "end": "2698690"
  },
  {
    "text": "things okay so in the last fifteen",
    "start": "2698690",
    "end": "2703760"
  },
  {
    "text": "minutes I just want to run through a couple of slides on how we make",
    "start": "2703760",
    "end": "2709520"
  },
  {
    "text": "functional programming practical in in in in so this object orientation I've",
    "start": "2709520",
    "end": "2715220"
  },
  {
    "text": "talked about that we go from functional to functional first programming I think the others figures have covered this well so f-sharp people love these kind",
    "start": "2715220",
    "end": "2727130"
  },
  {
    "text": "of aspects of code succinct expressive and so on some examples of code that we",
    "start": "2727130",
    "end": "2732680"
  },
  {
    "text": "love is a that's an F sharp program nice and succinct and small and we love our",
    "start": "2732680",
    "end": "2739580"
  },
  {
    "text": "pipelines like this here you will have seen these in other talks we take",
    "start": "2739580",
    "end": "2744650"
  },
  {
    "text": "something we go pipe pipe pipe all day long and half of F sharp code looks",
    "start": "2744650",
    "end": "2749690"
  },
  {
    "text": "looks like this we also F sharp is absolute people",
    "start": "2749690",
    "end": "2755060"
  },
  {
    "text": "absolutely love their domain modeling code so I think Scott relation has has",
    "start": "2755060",
    "end": "2762350"
  },
  {
    "text": "covered this well we take some you know a lot of F Java code starts with his set",
    "start": "2762350",
    "end": "2768200"
  },
  {
    "text": "of type definitions at the top of the file which represents the domain model and then the rest is a semantic for that",
    "start": "2768200",
    "end": "2774110"
  },
  {
    "text": "domain and about half of the blog posts on the F sharp advent calendar kind of series are about sort of using F sharp",
    "start": "2774110",
    "end": "2781820"
  },
  {
    "text": "for domain modeling and then capturing the core essence of the domain and then running through that and so here are",
    "start": "2781820",
    "end": "2788600"
  },
  {
    "text": "some examples of that this is a sort of data structure that's coming back from a web web service and OD and Nigeria here",
    "start": "2788600",
    "end": "2795770"
  },
  {
    "text": "has a great great comment about this your choice of data structure and your design to remain is crucial when writing",
    "start": "2795770",
    "end": "2801170"
  },
  {
    "text": "F sharp code screw it up and you'll be walking around in circles naylet and your implementation will be",
    "start": "2801170",
    "end": "2806720"
  },
  {
    "text": "concise straightforward and perhaps even trivial and that that is true in practice two great books I'd recommend",
    "start": "2806720",
    "end": "2813110"
  },
  {
    "text": "I'm a modelling made functional and get programming with f-sharp there's also a book I wrote called expert f-sharp if you're interested particularly in",
    "start": "2813110",
    "end": "2819260"
  },
  {
    "text": "domain modeling and semantics then these are great books an area that I've been",
    "start": "2819260",
    "end": "2826190"
  },
  {
    "text": "working on lately is in this use of functional programming for the view of",
    "start": "2826190",
    "end": "2831800"
  },
  {
    "text": "of you eyes so you have this view this is elvish what's called elvish coat as",
    "start": "2831800",
    "end": "2836990"
  },
  {
    "text": "part of Fable and you have a view function and it simply returns depending",
    "start": "2836990",
    "end": "2843260"
  },
  {
    "text": "on some the values in some current model it either returns this view or returns",
    "start": "2843260",
    "end": "2848540"
  },
  {
    "text": "this view and this is obviously a little DSL for HTML we have to have div and a string div div a class time container",
    "start": "2848540",
    "end": "2855950"
  },
  {
    "text": "button here with a on click event here which will dispatch a message called",
    "start": "2855950",
    "end": "2860990"
  },
  {
    "text": "faster here back around the loop and this another one dispatch slower there okay so that's great so you get to write",
    "start": "2860990",
    "end": "2869090"
  },
  {
    "text": "your this beautiful sort of functional you might sort of a variation on",
    "start": "2869090",
    "end": "2874280"
  },
  {
    "text": "functional reactive programming every time there's a change to the model the view gets reevaluated so I'm working a",
    "start": "2874280",
    "end": "2882410"
  },
  {
    "text": "lot on making this real in the context of mobile app and xamarin programming",
    "start": "2882410",
    "end": "2888080"
  },
  {
    "text": "you can look at a thing called el mesh Dameron forms and here's what the view function looks like if the model if the",
    "start": "2888080",
    "end": "2894800"
  },
  {
    "text": "button is being pressed then you say label text I was pressed and otherwise you have a button you say press me and",
    "start": "2894800",
    "end": "2901100"
  },
  {
    "text": "then a very similar thing you dispatch around the loop here so that's a mobile",
    "start": "2901100",
    "end": "2906860"
  },
  {
    "text": "app view and that lets you have sort of a mobile app in a single file you have your set of messages here which coming",
    "start": "2906860",
    "end": "2913670"
  },
  {
    "text": "back either external or from the user interface you have your model press here you have your initial model the button",
    "start": "2913670",
    "end": "2920660"
  },
  {
    "text": "was impressed you have an update function what will go to the view first you have review which you've already seen and it dispatches those messages",
    "start": "2920660",
    "end": "2928310"
  },
  {
    "text": "and then we have this update here which when the message is pressed the press",
    "start": "2928310",
    "end": "2934820"
  },
  {
    "text": "becomes true that's your full application code you tie it together at the bot in your app and you have your mobile app",
    "start": "2934820",
    "end": "2941450"
  },
  {
    "text": "in a single in a single file and the",
    "start": "2941450",
    "end": "2946819"
  },
  {
    "text": "back you go to Android or iOS or and you can also run on Mac and WPF and and and",
    "start": "2946819",
    "end": "2952430"
  },
  {
    "text": "other and other systems everywhere the xamarin forms is supported it's early days yet with this it's a community",
    "start": "2952430",
    "end": "2958730"
  },
  {
    "text": "project on f its projects in this incubation space so if you into mobile programming if you've done some xamarin",
    "start": "2958730",
    "end": "2964190"
  },
  {
    "text": "or if you've done some Android iOS come along and join in and and and use use",
    "start": "2964190",
    "end": "2969890"
  },
  {
    "text": "this it's a lot of fun I found it incredibly simplifying for for for doing",
    "start": "2969890",
    "end": "2976599"
  },
  {
    "text": "xamarin and mobile programming okay f-sharp people love their composition",
    "start": "2976599",
    "end": "2983690"
  },
  {
    "text": "like this here this is uh from Craig so inside our CF community for code that they love and Craig sent me this one",
    "start": "2983690",
    "end": "2990349"
  },
  {
    "text": "it's not fancy but often get giddy smiles when people see it they get the giggles the top level of the compiler is",
    "start": "2990349",
    "end": "2996920"
  },
  {
    "text": "exactly like you're taught Lex pass by and optimized code gen is a bit of",
    "start": "2996920",
    "end": "3002289"
  },
  {
    "text": "railway or into programming by Scott or lash and at the end here because these last few phases might have a failure",
    "start": "3002289",
    "end": "3007869"
  },
  {
    "text": "point and you just get that lovely pipeline down through the code okay back",
    "start": "3007869",
    "end": "3014380"
  },
  {
    "text": "on and just to mention that the functional first approach does make a",
    "start": "3014380",
    "end": "3019839"
  },
  {
    "text": "huge difference and you can look at F sharp that all the testimonials I'll skip this and just mention one one",
    "start": "3019839",
    "end": "3027130"
  },
  {
    "text": "example of this and that is let's see here we have this three billion dollar",
    "start": "3027130",
    "end": "3033309"
  },
  {
    "text": "unicorn company built on f-sharp the jet comm was acquired by Walmart and for a",
    "start": "3033309",
    "end": "3040239"
  },
  {
    "text": "deal worth three billion and they're pretty much entirely an F sharp shop you talked in heel here used to work at jet",
    "start": "3040239",
    "end": "3045700"
  },
  {
    "text": "about the background for the use of F sharp and why they chose F sharp and why they were able to build such an",
    "start": "3045700",
    "end": "3051460"
  },
  {
    "text": "incredibly successful company on it and it is the first unicorn built on the Azure platform from the Microsoft",
    "start": "3051460",
    "end": "3058630"
  },
  {
    "text": "perspective and business perspective is absolutely huge result it shows that Azure is ready for",
    "start": "3058630",
    "end": "3064239"
  },
  {
    "text": "building incredible business value and and delivering it all the way through ok",
    "start": "3064239",
    "end": "3069910"
  },
  {
    "text": "so the functional first programming really does work in practice it's a",
    "start": "3069910",
    "end": "3075009"
  },
  {
    "text": "functional programming is no not some academic thing you modify it to make sure it's practical and you have",
    "start": "3075009",
    "end": "3081219"
  },
  {
    "text": "functional first and everything is is great okay in the last five minutes I'll",
    "start": "3081219",
    "end": "3088599"
  },
  {
    "text": "just talk about one one more area of tension it's more a technical area and",
    "start": "3088599",
    "end": "3094749"
  },
  {
    "text": "it's basically retained the tension between code and data back in the around",
    "start": "3094749",
    "end": "3100089"
  },
  {
    "text": "2010 2011 those were that marks off research really saw that there was a big",
    "start": "3100089",
    "end": "3106449"
  },
  {
    "text": "shift going on in the in the world okay where where the companies had to be much",
    "start": "3106449",
    "end": "3112509"
  },
  {
    "text": "much more data data focused okay this the the there this shift had been going",
    "start": "3112509",
    "end": "3119949"
  },
  {
    "text": "on in sort of the database world that suddenly became absolutely pervasive that the working life of of most",
    "start": "3119949",
    "end": "3127630"
  },
  {
    "text": "programmers was no longer it used to be the day that when you start the old joke that okay you guys get coding while i",
    "start": "3127630",
    "end": "3135999"
  },
  {
    "text": "work out what we have to do okay there was that in order to be a programmer there was a whole lot of code that you",
    "start": "3135999",
    "end": "3141039"
  },
  {
    "text": "wrote you know whatever that was sort of generic and and then there's a problem",
    "start": "3141039",
    "end": "3146439"
  },
  {
    "text": "you needed to do and then you need to code code code but it's different these days and that data is an integral part",
    "start": "3146439",
    "end": "3151839"
  },
  {
    "text": "of everybody's working life so it's no longer about coding it's about like what's my data what are we",
    "start": "3151839",
    "end": "3158559"
  },
  {
    "text": "interoperating with what yeah and that that's pervasive in loads and loads of different ways and what it means is it",
    "start": "3158559",
    "end": "3164829"
  },
  {
    "text": "you know if you talk about one large company right these are not exact numbers but they're just sort of scale of things well for every for every one",
    "start": "3164829",
    "end": "3172749"
  },
  {
    "text": "person working on tooling for code it's probably ten people working at Microsoft",
    "start": "3172749",
    "end": "3177789"
  },
  {
    "text": "on tooling for data ok I don't know that that's a totally rough guesstimate but",
    "start": "3177789",
    "end": "3184150"
  },
  {
    "text": "that's you know we all think about code and visual studio or what other other kinds of tooling the whole time but data",
    "start": "3184150",
    "end": "3189759"
  },
  {
    "text": "tooling is this vast endeavor and its course it's vastly important and that's",
    "start": "3189759",
    "end": "3195489"
  },
  {
    "text": "all because of this you know we are today all you know we live at an incredible point in history of this",
    "start": "3195489",
    "end": "3200499"
  },
  {
    "text": "information revolution and so where did that leave us from",
    "start": "3200499",
    "end": "3205990"
  },
  {
    "text": "programming language perspective do we just ignore that okay do we just ignore this sort of tension between code and",
    "start": "3205990",
    "end": "3212320"
  },
  {
    "text": "data well an f-sharp we did something about it okay and that was we took the approach we have to be able to bring information",
    "start": "3212320",
    "end": "3218200"
  },
  {
    "text": "into the language in a very generic way and we have to be able to do that at",
    "start": "3218200",
    "end": "3223300"
  },
  {
    "text": "internet scale arbitrary scale and we have to be able to do it strongly told and strongly typed and that's the",
    "start": "3223300",
    "end": "3229900"
  },
  {
    "text": "fundamental thing we recognize them we've had to be have to be able to solve this problem and I don't think any other",
    "start": "3229900",
    "end": "3235000"
  },
  {
    "text": "language is solved it as well as f-sharp in the context of strong typing and to",
    "start": "3235000",
    "end": "3242140"
  },
  {
    "text": "do that we had to sort of blur the lines between static and dynamic some people",
    "start": "3242140",
    "end": "3247240"
  },
  {
    "text": "make statically type everyone was trying to do this but we actually didn't do what other people some people tried to",
    "start": "3247240",
    "end": "3253450"
  },
  {
    "text": "make statically languages more dynamic some people try to make dynamic languages more static instead we well we",
    "start": "3253450",
    "end": "3260320"
  },
  {
    "text": "change the idea of static typing and we apply it very broadly and that leads to this thing called their sharp tie",
    "start": "3260320",
    "end": "3265900"
  },
  {
    "text": "providers then they look just like a library but they're actually a plug-in to your compiler and your editor tooling",
    "start": "3265900",
    "end": "3272260"
  },
  {
    "text": "it ok that computes a type space of types and methods on demand it's like",
    "start": "3272260",
    "end": "3278080"
  },
  {
    "text": "computing a dotnet library on demand okay so it's adapter between data and services and on demand you produce this",
    "start": "3278080",
    "end": "3286540"
  },
  {
    "text": "dotnet type type system so on demand scalable compile time provision of type",
    "start": "3286540",
    "end": "3293500"
  },
  {
    "text": "definitions so if the Internet's you've seen examples of F sharp type providers",
    "start": "3293500",
    "end": "3301440"
  },
  {
    "text": "of the top here people typing in code over some data source in this case it's a CSV and then which has the same schema",
    "start": "3301440",
    "end": "3310570"
  },
  {
    "text": "as some external data source and you get strong intellisense here immediately on your on",
    "start": "3310570",
    "end": "3317500"
  },
  {
    "text": "your on your data source you've seen examples of those I won't go through",
    "start": "3317500",
    "end": "3322530"
  },
  {
    "text": "through the other one so but what it means is this one general mechanism lets",
    "start": "3322530",
    "end": "3330790"
  },
  {
    "text": "us do loads and loads of different data sources with one with one mechanism all your types are belong to us is what we",
    "start": "3330790",
    "end": "3337630"
  },
  {
    "text": "what we you we were calling it that's the example you've seen here loading data from this",
    "start": "3337630",
    "end": "3345190"
  },
  {
    "text": "web service and getting strong typing through to it automatically so it's",
    "start": "3345190",
    "end": "3351990"
  },
  {
    "text": "literally used this sample data as the schema so you're drawing types from",
    "start": "3351990",
    "end": "3358570"
  },
  {
    "text": "samples and every data source you come across typically has sample data that",
    "start": "3358570",
    "end": "3364450"
  },
  {
    "text": "it's as its documentation you can often just use that sample data like the samples you get back from the github web",
    "start": "3364450",
    "end": "3370900"
  },
  {
    "text": "API for example and and use that to generate your types on demand and and",
    "start": "3370900",
    "end": "3377859"
  },
  {
    "text": "get your strong typing for your data source you do the same thing with JSON data here we have a sample being drawn",
    "start": "3377859",
    "end": "3383980"
  },
  {
    "text": "directly from a Web API okay and then that's the actual runtime thing so we",
    "start": "3383980",
    "end": "3390010"
  },
  {
    "text": "load here a some provider over that sample and then we get strong typing over that JSON data you can do the same",
    "start": "3390010",
    "end": "3397839"
  },
  {
    "text": "thing with XML do the same thing with sequel there's a couple of variations on sequel here this is one called sequel",
    "start": "3397839",
    "end": "3405190"
  },
  {
    "text": "data connection this is actually a different type of atom where you actually put your sequel here and it",
    "start": "3405190",
    "end": "3411220"
  },
  {
    "text": "gets strongly checked at compile time by talking to the database through the connection string and so you're kind of",
    "start": "3411220",
    "end": "3418569"
  },
  {
    "text": "getting strong checking for your sequel at compile time here which is a pretty",
    "start": "3418569",
    "end": "3425170"
  },
  {
    "text": "rare and very productive embedding of sequel into your into your language you",
    "start": "3425170",
    "end": "3432099"
  },
  {
    "text": "could do it with big data systems have done samples for Hadoop and hive you can do it with web api's like this World",
    "start": "3432099",
    "end": "3440260"
  },
  {
    "text": "Bank API here and you can do it for entire entity graphs it's an old sample",
    "start": "3440260",
    "end": "3448270"
  },
  {
    "text": "called freebase you can do it for old fashioned web services like this one here you get again strong typing my",
    "start": "3448270",
    "end": "3455950"
  },
  {
    "text": "location latitude is strongly typed there you can even do it for intro operating with other programming",
    "start": "3455950",
    "end": "3461170"
  },
  {
    "text": "languages like the our provider so that if you've got our install on your system and you want to use those libraries then",
    "start": "3461170",
    "end": "3467200"
  },
  {
    "text": "you can use you can use the our provider some said actually I mean typewriters are",
    "start": "3467200",
    "end": "3474730"
  },
  {
    "text": "absolutely great I think it's a crucial problem here's a quote from a professor who about the core idea of tie providers",
    "start": "3474730",
    "end": "3483600"
  },
  {
    "text": "integrating internet scale information services directly into the program's variable and type space okay that's kind",
    "start": "3483600",
    "end": "3491590"
  },
  {
    "text": "of the that's the core idea and it's a core idea that is necessary at this time in in in the development of programming",
    "start": "3491590",
    "end": "3499150"
  },
  {
    "text": "languages and what this means by doing",
    "start": "3499150",
    "end": "3504460"
  },
  {
    "text": "one thing one mechanism and having so many different applications of it",
    "start": "3504460",
    "end": "3509560"
  },
  {
    "text": "there's a whole lot of things we don't need to worry about in F sharp anymore I mean we actually have to build those type providers which is an art in itself",
    "start": "3509560",
    "end": "3515670"
  },
  {
    "text": "but we we don't have to keep extending the language - it's a interoperate with",
    "start": "3515670",
    "end": "3521350"
  },
  {
    "text": "XML we don't have to keep mcc's sending it to have to interoperate with json or",
    "start": "3521350",
    "end": "3527860"
  },
  {
    "text": "etc etc etc we've got one mechanism that close with loads of different integrations of data into the language",
    "start": "3527860",
    "end": "3535620"
  },
  {
    "text": "okay right so just to mention to finish",
    "start": "3535620",
    "end": "3541810"
  },
  {
    "text": "up there are other areas where the same thing applies I won't go through the details but technical areas like this",
    "start": "3541810",
    "end": "3548140"
  },
  {
    "text": "and the language design we have you know we've made a big contribution in the",
    "start": "3548140",
    "end": "3553180"
  },
  {
    "text": "development of async programming and again it's a contribution to get those things to fit and to fit well and with",
    "start": "3553180",
    "end": "3561190"
  },
  {
    "text": "units of measure is the same sort of thing and I've talked about fable and getting a win-win between these kind of",
    "start": "3561190",
    "end": "3567310"
  },
  {
    "text": "systems and this is you know a proof that this sort of full stack kind of approach is a good synthesis of this",
    "start": "3567310",
    "end": "3573760"
  },
  {
    "text": "kind of problem okay so just to finish up as you go through your working life",
    "start": "3573760",
    "end": "3581110"
  },
  {
    "text": "remember the Hegel don't try and read him you can try read him if you've managed to then let me know that's great",
    "start": "3581110",
    "end": "3586710"
  },
  {
    "text": "but remember this that when you have opposing points of view there is hopefully some sort of synthesis that",
    "start": "3586710",
    "end": "3593710"
  },
  {
    "text": "you can find to make the world a better place that might play out in lots and",
    "start": "3593710",
    "end": "3598870"
  },
  {
    "text": "lots of different ways I've tried to give you examples of how that applies we do live in a world of lots of",
    "start": "3598870",
    "end": "3604660"
  },
  {
    "text": "conflicting choice ideas techniques you know politics is is",
    "start": "3604660",
    "end": "3609880"
  },
  {
    "text": "incredibly polarized today and it's really hard to find a way through that towards a middle ground but this idea",
    "start": "3609880",
    "end": "3616840"
  },
  {
    "text": "the synthesis and contradiction is what applied programming language design is really about and I encourage you if",
    "start": "3616840",
    "end": "3624310"
  },
  {
    "text": "you've got these conflicts resolve your conflicts they're what making you you",
    "start": "3624310",
    "end": "3630220"
  },
  {
    "text": "know whether that's by designing a programming language or contributing to a design or however that happens resolve",
    "start": "3630220",
    "end": "3637119"
  },
  {
    "text": "your inner conflicts and hopefully that leads you to a lovely state of relaxation and happiness and thank you",
    "start": "3637119",
    "end": "3644890"
  },
  {
    "text": "very much we're taking questions or",
    "start": "3644890",
    "end": "3656590"
  },
  {
    "text": "maybe not no no questions okay",
    "start": "3656590",
    "end": "3660750"
  }
]