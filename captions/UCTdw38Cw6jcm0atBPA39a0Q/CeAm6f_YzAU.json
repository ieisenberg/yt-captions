[
  {
    "start": "0",
    "end": "243000"
  },
  {
    "text": "good it's good to be back at NDC Oslo again it's my favorite conference in the world to be honest my name's Scott Allen",
    "start": "2530",
    "end": "12760"
  },
  {
    "text": "and I came to talk to you today about resilient applications in Azure so if you want to build resilient services",
    "start": "12760",
    "end": "18699"
  },
  {
    "text": "resilient applications what I want to do is show you some of the azure specific features that you can take advantage of",
    "start": "18699",
    "end": "25060"
  },
  {
    "text": "as well as some general principles and practices that you could apply with any cloud provider and what we're really",
    "start": "25060",
    "end": "31660"
  },
  {
    "text": "talking about is I went to build an application or a service that is going to be highly available there's no",
    "start": "31660",
    "end": "38590"
  },
  {
    "text": "perfect availability in the cloud something has to go down at some point so we just need to figure out how highly",
    "start": "38590",
    "end": "46059"
  },
  {
    "text": "available do we want our application to be yes I would like my personal blog to be up all the time but I'm not willing",
    "start": "46059",
    "end": "52539"
  },
  {
    "text": "to spend the money to make sure that it's up 99.999% of the time it gets very expensive and we'll talk about that and",
    "start": "52539",
    "end": "58780"
  },
  {
    "text": "that's why the amount of resiliency that you build into an application or into a",
    "start": "58780",
    "end": "64000"
  },
  {
    "text": "service yes there's going to be some technology choices that you have to make but there's also some business choices",
    "start": "64000",
    "end": "69159"
  },
  {
    "text": "that you have to make how much are you willing to spend to give yourself a highly available application not spend",
    "start": "69159",
    "end": "76780"
  },
  {
    "text": "just in Azure resources because you're allocating redundant storage or redundant virtual machines but also",
    "start": "76780",
    "end": "83770"
  },
  {
    "text": "there's going to be a price to pay in your application and your code base the complexity and the code that you write",
    "start": "83770",
    "end": "89350"
  },
  {
    "text": "because as we'll see instead of you know writing a simple controller for a web",
    "start": "89350",
    "end": "94960"
  },
  {
    "text": "api that just depends on a database if you truly want to be resilient your code",
    "start": "94960",
    "end": "100540"
  },
  {
    "text": "will be prepared for those times from that database is not available so maybe you have to fall back to a read of cache",
    "start": "100540",
    "end": "106000"
  },
  {
    "text": "or some other information source and that just conflict complicates the code complicates debugging and cost more and",
    "start": "106000",
    "end": "113649"
  },
  {
    "text": "it turns out that if you're highly a lot of the patterns and things that we'll look at will make your application not",
    "start": "113649",
    "end": "120369"
  },
  {
    "text": "only how you look highly available but also allow it to recover from a disaster maybe a natural disaster that takes all",
    "start": "120369",
    "end": "127570"
  },
  {
    "text": "takes out an entire data center that would be really bad or just a disaster that takes out a hard drive on one board",
    "start": "127570",
    "end": "134490"
  },
  {
    "text": "machine so what do you want to recover from if you're worried about the natural",
    "start": "134490",
    "end": "140430"
  },
  {
    "text": "disaster that takes often it and entire data center that's a lot more expensive to make sure that you can handle that",
    "start": "140430",
    "end": "147000"
  },
  {
    "text": "situation than just recovering from a failed harddrive so those are the kind of topics that we'll talk about and the",
    "start": "147000",
    "end": "152490"
  },
  {
    "text": "first thing that you need to understand when you're doing any of this work is it's important to understand the cloud",
    "start": "152490",
    "end": "157860"
  },
  {
    "text": "platform that you're using whether it's AWS or asher or Google and understanding the",
    "start": "157860",
    "end": "164550"
  },
  {
    "text": "different resources that are inside of that platform not only how you can use them but answer has the huge surface",
    "start": "164550",
    "end": "171690"
  },
  {
    "text": "area now virtual machine storage networking app services developer",
    "start": "171690",
    "end": "177840"
  },
  {
    "text": "services things like HD insight machine learning you have to look at each of these individually if you're using these",
    "start": "177840",
    "end": "184770"
  },
  {
    "text": "in an application or service you have to look at them and first of all ask how can this fail what do I do if it does",
    "start": "184770",
    "end": "190860"
  },
  {
    "text": "fail because many of these resources do have some sort of contingency plan if",
    "start": "190860",
    "end": "196320"
  },
  {
    "text": "they go offline and it's also important to understand the availability numbers",
    "start": "196320",
    "end": "201720"
  },
  {
    "text": "for each of these resources and under which conditions those availability guarantees apply so for everything that",
    "start": "201720",
    "end": "210000"
  },
  {
    "text": "was listed on that previous slide you can do a search for either service level agreements and you will come to a web",
    "start": "210000",
    "end": "216300"
  },
  {
    "text": "page that looks like the foot lift act and everything that you can get to an azure every resource that you can create and so if you're using let's say a",
    "start": "216300",
    "end": "223560"
  },
  {
    "text": "virtual machine and an azure sequel database it says if you're really planning for high availability it's",
    "start": "223560",
    "end": "229320"
  },
  {
    "text": "important to go into this page and look at the service level agreement and let's say click on virtual machines and in the",
    "start": "229320",
    "end": "235500"
  },
  {
    "text": "opening paragraph for that service level agreement Microsoft will give you two pieces of information under first of all",
    "start": "235500",
    "end": "242550"
  },
  {
    "text": "what is the guaranteed uptime like 99.9% or 99.95% and also the conditions under",
    "start": "242550",
    "end": "250860"
  },
  {
    "start": "243000",
    "end": "277000"
  },
  {
    "text": "which they will guarantee that uptime so if you go out and provision a single virtual machine and azure there is no",
    "start": "250860",
    "end": "257940"
  },
  {
    "text": "SLA or guaranteed uptime if you go out and provision a free or basic app service to host a website again there's",
    "start": "257940",
    "end": "264900"
  },
  {
    "text": "no SLA there so you have to understand under what condition there's an SLA for an app service I would have to go to at least the paid",
    "start": "264900",
    "end": "272310"
  },
  {
    "text": "basic tier to get a 99.995% SLA and then",
    "start": "272310",
    "end": "279000"
  },
  {
    "start": "277000",
    "end": "360000"
  },
  {
    "text": "once you have once you understand all the resources bigger application is using and what the guaranteed uptime numbers are you sometimes just have to",
    "start": "279000",
    "end": "285690"
  },
  {
    "text": "work through things like okay if I'm using a one resource that is 99.9%",
    "start": "285690",
    "end": "291000"
  },
  {
    "text": "available and by the way if Microsoft doesn't meet that number within a month they'll also state in the SLA what you",
    "start": "291000",
    "end": "298620"
  },
  {
    "text": "can get for that and it's typically just a credit on your subscription but if I'm using one resource that has 99.9 percent",
    "start": "298620",
    "end": "306349"
  },
  {
    "text": "guaranteed uptime that's 43 minutes of downtime a month but let's say that's a",
    "start": "306349",
    "end": "312180"
  },
  {
    "text": "resource that depends on another resource some database service is something like that that's 99.95%",
    "start": "312180",
    "end": "318569"
  },
  {
    "text": "available that's another possible 20 minutes of downtime that of course those two don't overlap so my application my",
    "start": "318569",
    "end": "325500"
  },
  {
    "text": "service could have 60 minutes of downtime in a month and Microsoft wouldn't have to provide",
    "start": "325500",
    "end": "332370"
  },
  {
    "text": "me any credit today if they have met their guaranteed uptime numbers and those are the kind of situations we have",
    "start": "332370",
    "end": "337560"
  },
  {
    "text": "to study and say is that enough for my application do I have a service level agreement with my customers or my",
    "start": "337560",
    "end": "344130"
  },
  {
    "text": "business partners or the people that are coming to my website and if I'm down for 60 minutes a month will that impact my",
    "start": "344130",
    "end": "350699"
  },
  {
    "text": "business or hurt my business and if not that's when you have to start taking some approaches and some strategies that",
    "start": "350699",
    "end": "356880"
  },
  {
    "text": "we'll cover in this talk about improving those numbers so be again going back to",
    "start": "356880",
    "end": "363000"
  },
  {
    "start": "360000",
    "end": "401000"
  },
  {
    "text": "the topic of every resource and azure has some redundancy or some contingency",
    "start": "363000",
    "end": "370409"
  },
  {
    "text": "plan built in for when something does fail so for example it's important to",
    "start": "370409",
    "end": "375599"
  },
  {
    "text": "understand that if you're using blob storage it's very easy to configure",
    "start": "375599",
    "end": "383029"
  },
  {
    "text": "redundant storage in the portal so for example if I go to any storage account",
    "start": "383029",
    "end": "388349"
  },
  {
    "text": "in the azure portal that's visible on the back ok thank you",
    "start": "388349",
    "end": "395729"
  },
  {
    "text": "hard to see up there and go to the configuration for that storage account every every storage account all",
    "start": "395729",
    "end": "401849"
  },
  {
    "start": "401000",
    "end": "495000"
  },
  {
    "text": "for me some different types of replication that I can use to make sure that when disaster strikes I'll still",
    "start": "401849",
    "end": "408539"
  },
  {
    "text": "have my data so there's locally redundant storage that's I don't believe that's what the fault it was the default",
    "start": "408539",
    "end": "414689"
  },
  {
    "text": "for the way I had something set up here but locally even under storage is every time you write a file into blob storage as is going to make three copies of that",
    "start": "414689",
    "end": "422490"
  },
  {
    "text": "blob inside the same data center so even if they an entire rack of servers catches on fire and they take it out of",
    "start": "422490",
    "end": "429419"
  },
  {
    "text": "the building there'll be two other copies of my data somewhere in that data center and that might be fine for my",
    "start": "429419",
    "end": "434939"
  },
  {
    "text": "business but if I'm a little bit worried about an entire data center being offline then I might go to Geo redundant",
    "start": "434939",
    "end": "441240"
  },
  {
    "text": "storage which would not only keep those three copies in the one data center it would also make copies in another",
    "start": "441240",
    "end": "448019"
  },
  {
    "text": "partner data center that's hundreds of kilometers away at least and then the",
    "start": "448019",
    "end": "453449"
  },
  {
    "text": "one that a lot of people go with is read access to your redundant storage and I'll talk about how you can take",
    "start": "453449",
    "end": "458610"
  },
  {
    "text": "advantage of this in just a bit but that's basically G over done in storage where my application writes a blob into",
    "start": "458610",
    "end": "464939"
  },
  {
    "text": "blob storage is a synchronous asynchronously replicated within the",
    "start": "464939",
    "end": "470729"
  },
  {
    "text": "local data center to other nodes so that I'm sure I have three copies of that data but it's also asynchronously",
    "start": "470729",
    "end": "477779"
  },
  {
    "text": "replicated geographically to another data center where I can still access a",
    "start": "477779",
    "end": "483180"
  },
  {
    "text": "blob and read it so that's good but of course read access to your redundant",
    "start": "483180",
    "end": "489990"
  },
  {
    "text": "storage is going to cost just a little bit more than locally we're done in storage for virtual machines if you need",
    "start": "489990",
    "end": "499259"
  },
  {
    "start": "495000",
    "end": "570000"
  },
  {
    "text": "to set up a virtual machine in your application or for your service it's important to put that inside of an availability set so that Asscher can",
    "start": "499259",
    "end": "506669"
  },
  {
    "text": "give you an SLA and say we will guarantee that you should have 99.9% uptime basically when you set up an",
    "start": "506669",
    "end": "513149"
  },
  {
    "text": "availability set for a virtual machine and Azure as our lets you configure two",
    "start": "513149",
    "end": "518490"
  },
  {
    "text": "important features of that availability set or when it comes to high availability one is the fault domain so",
    "start": "518490",
    "end": "524730"
  },
  {
    "text": "you would put these different virtual machines in different fault domains the idea being that if I have two virtual",
    "start": "524730",
    "end": "530670"
  },
  {
    "text": "machines they're not missing fault domain then if something like a power supply on a rack of servers goes bad it shouldn't",
    "start": "530670",
    "end": "537990"
  },
  {
    "text": "impact both machines at the same time or if a network switch on the top of that rack goes bad it should still be another one somewhere",
    "start": "537990",
    "end": "544890"
  },
  {
    "text": "in that data center that is available in running so there's that's Fault the mains and those also update domains",
    "start": "544890",
    "end": "551730"
  },
  {
    "text": "which is if a sure has to reboot your virtual machine because it's updating the hypervisor let's say for all the",
    "start": "551730",
    "end": "558150"
  },
  {
    "text": "machines on that physical server a durable guarantee that it's not going to take both your machines down if they're",
    "start": "558150",
    "end": "564930"
  },
  {
    "text": "in two different update domains that's easy to configure through the portal also for as your sequel there's a couple",
    "start": "564930",
    "end": "571560"
  },
  {
    "start": "570000",
    "end": "670000"
  },
  {
    "text": "things you can set up replication for sequel server and Azure with Azure sequel so you can have a a primary and",
    "start": "571560",
    "end": "577380"
  },
  {
    "text": "up to I think it's three or four secondaries right now so when you commit a transaction into an azure sequel",
    "start": "577380",
    "end": "583890"
  },
  {
    "text": "database that transaction will be asynchronously replicated to other sequel servers that are geographically",
    "start": "583890",
    "end": "590160"
  },
  {
    "text": "distributed and if the primary sequel server fails as your sequel can failover",
    "start": "590160",
    "end": "596310"
  },
  {
    "text": "to one of those secondaries and there's also point in time restore with sequel",
    "start": "596310",
    "end": "601470"
  },
  {
    "text": "server and that's sort of an interesting situation because replication and point in time restore are really two different",
    "start": "601470",
    "end": "607110"
  },
  {
    "text": "things replication is a must-have but my big fear is always that we'll release an",
    "start": "607110",
    "end": "614550"
  },
  {
    "text": "application that has some logic bug that will update a table and set a million customers to inactive and as your sequel",
    "start": "614550",
    "end": "622440"
  },
  {
    "text": "will happily happily replicate that erroneous data all around the world and the only way to recover from that is not",
    "start": "622440",
    "end": "629040"
  },
  {
    "text": "through the replicated data the only way to recover from a catastrophe like that is to get it to a backup and to a point",
    "start": "629040",
    "end": "634890"
  },
  {
    "text": "in time restore so with a lot of the azure sequel plans you can have I believe it's 5 or 15 minute increments",
    "start": "634890",
    "end": "641310"
  },
  {
    "text": "automatically or you can just go back and say hey I want to rollback to 2:30 p.m. this afternoon before I deployed my",
    "start": "641310",
    "end": "646860"
  },
  {
    "text": "application and then there's app services app services we'll talk about",
    "start": "646860",
    "end": "653190"
  },
  {
    "text": "in more detail here but with app services it's easy to take an application or service and deploy it",
    "start": "653190",
    "end": "659400"
  },
  {
    "text": "into Azure app services and deploy it in a couple different data centers it's very easy to deploy these things and",
    "start": "659400",
    "end": "665310"
  },
  {
    "text": "main this thing from that's one of the scenarios we'll drill into more detail here in just a bit let's start with a",
    "start": "665310",
    "end": "671350"
  },
  {
    "start": "670000",
    "end": "750000"
  },
  {
    "text": "just a simple scenario and we'll keep building it up let's say you're not willing to spend a lot of money on high",
    "start": "671350",
    "end": "677290"
  },
  {
    "text": "availability all you want to do is implement a web application deployed into an azure app service and that app service is",
    "start": "677290",
    "end": "683770"
  },
  {
    "text": "going to use blob storage and Azure sequel we're not going to worry about replicating sequel server we might set",
    "start": "683770",
    "end": "689680"
  },
  {
    "text": "up blob storage to be a to be geo replicated just so that we make sure that we save any files that get placed",
    "start": "689680",
    "end": "696160"
  },
  {
    "text": "in there there's still a few things we can do in this situation that aren't too expensive that will give us better",
    "start": "696160",
    "end": "702430"
  },
  {
    "text": "availability numbers one is every app service that you create in Azure is",
    "start": "702430",
    "end": "707800"
  },
  {
    "text": "associated with an app service plan and it's the app service plan that describes the type of hardware your web",
    "start": "707800",
    "end": "714730"
  },
  {
    "text": "application is going to run on so do you want a two core machine or a four core machine be one three gigs of memory or",
    "start": "714730",
    "end": "720760"
  },
  {
    "text": "seven gigs of memory and the app service plan you can also describe how many instances that you want of that",
    "start": "720760",
    "end": "727000"
  },
  {
    "text": "particular server so it's really easy to go into an app service plan and say I want two instances and Azure will",
    "start": "727000",
    "end": "734470"
  },
  {
    "text": "automatically have a load balancer in front of those two app service servers so that one goes down there's still",
    "start": "734470",
    "end": "740830"
  },
  {
    "text": "another one that's always running so that's nice for scalability but also for high availability or higher availability",
    "start": "740830",
    "end": "748860"
  },
  {
    "text": "and another thing you could do that's very easy is set up connection",
    "start": "748860",
    "end": "754060"
  },
  {
    "start": "750000",
    "end": "793000"
  },
  {
    "text": "resiliency so the idea if your app service tries to connect to a sequel",
    "start": "754060",
    "end": "760330"
  },
  {
    "text": "database and it initially gets rejected and that could happen for any a number of reasons there could be something",
    "start": "760330",
    "end": "766480"
  },
  {
    "text": "going on at the network at that time the network could be saturated you also could be connecting to a database where",
    "start": "766480",
    "end": "772420"
  },
  {
    "text": "you haven't provisioned enough power and as your sequel enough dtu's and that server is basically just saying no we're",
    "start": "772420",
    "end": "779560"
  },
  {
    "text": "not going to accept this request right now we're overloaded if you could keep retrying that connection to get to the",
    "start": "779560",
    "end": "785950"
  },
  {
    "text": "database and issue a query that would give you a little better with this resiliency in your application and",
    "start": "785950",
    "end": "791620"
  },
  {
    "text": "fortunately a lot of the SDKs that Microsoft provides for various adder",
    "start": "791620",
    "end": "798670"
  },
  {
    "start": "793000",
    "end": "840000"
  },
  {
    "text": "and resources have retry logic built-in all you have to do is just use the SDK",
    "start": "798670",
    "end": "804730"
  },
  {
    "text": "so for example as your storage yes behind the scenes everything in Azure is HTTP so if I want to upload a blob and",
    "start": "804730",
    "end": "811300"
  },
  {
    "text": "the azure storage all I need to really do is an HTTP POST operation and I can put something in a store storage but if",
    "start": "811300",
    "end": "817210"
  },
  {
    "text": "I'm just doing low-level HTTP put and posts and things like that there's I would have to build my own retry logic if I just use the azure",
    "start": "817210",
    "end": "824140"
  },
  {
    "text": "storage SDK wrapper and there's one for c-sharp code there's one for JavaScript and Ruby and all the popular languages",
    "start": "824140",
    "end": "830760"
  },
  {
    "text": "that will already have some retry logic built in in fact this little bit of code",
    "start": "830760",
    "end": "837610"
  },
  {
    "text": "here would show you that when I create a blob client with some sort of connection",
    "start": "837610",
    "end": "844150"
  },
  {
    "start": "840000",
    "end": "902000"
  },
  {
    "text": "string that would grant access to a storage account I can set up some blob request options to say first of all",
    "start": "844150",
    "end": "850330"
  },
  {
    "text": "location there my location mode is primary then secondary so if I have that read access geo redundant storage set up",
    "start": "850330",
    "end": "857920"
  },
  {
    "text": "for my storage account what the SDK will do for me automatically is try to go to my primary storage account location",
    "start": "857920",
    "end": "864640"
  },
  {
    "text": "let's say it's in eastern United States and if for some reason they can't cannot reach the blob storage there it'll",
    "start": "864640",
    "end": "871450"
  },
  {
    "text": "automatically fall back to a secondary which I might have configured for central UF's or West Europe or somewhere",
    "start": "871450",
    "end": "877330"
  },
  {
    "text": "else in the world and that'll just happen for me and then there's different sorts of retry policies the default P is",
    "start": "877330",
    "end": "884830"
  },
  {
    "text": "an exponential retry where I think it will retry three times and it'll just keep increasing the timeout after each",
    "start": "884830",
    "end": "890620"
  },
  {
    "text": "retry B there's other retry strategies that are in the SDK and you can write your own retry strategy",
    "start": "890620",
    "end": "896230"
  },
  {
    "text": "you just have to implement a specific interface and plug it into the SDK for",
    "start": "896230",
    "end": "903150"
  },
  {
    "start": "902000",
    "end": "962000"
  },
  {
    "text": "the entity so as your sequel is one exception there's no there's no SDK for",
    "start": "903150",
    "end": "909130"
  },
  {
    "text": "address equals just using a do net but in the entity framework both the entity framework before dotnet core and an",
    "start": "909130",
    "end": "915940"
  },
  {
    "text": "entity framework or there are some resiliency features built in essentially",
    "start": "915940",
    "end": "922180"
  },
  {
    "text": "with entity framework or this would be a snippet of code from an asp.net core application or dotnet core application",
    "start": "922180",
    "end": "929240"
  },
  {
    "text": "there's a sequel there's an extension method for sequel options where I can say enable retry on failure and the",
    "start": "929240",
    "end": "935209"
  },
  {
    "text": "entity framework is smart enough to look at the error codes that are coming back from Azure sequel to say oh that's the",
    "start": "935209",
    "end": "941899"
  },
  {
    "text": "type of air that I could retry it's not the type of air that you know hard permanent failure or a logic error",
    "start": "941899",
    "end": "947779"
  },
  {
    "text": "something that I could retry so those things are built-in same thing for document DB same things are as a rebus",
    "start": "947779",
    "end": "953899"
  },
  {
    "text": "cache so a lot of these SDKs have that logic built-in you just have to sometimes just turn it on and take",
    "start": "953899",
    "end": "959059"
  },
  {
    "text": "advantage of it and that's good otherwise what do we do so let's say",
    "start": "959059",
    "end": "964910"
  },
  {
    "start": "962000",
    "end": "1122000"
  },
  {
    "text": "we're trying to get to sequel server and sequel server really is down so I am NOT even with all my retries I'm not making",
    "start": "964910",
    "end": "971749"
  },
  {
    "text": "it to sequel server to document TD that's when things start to get a little more complicated and a little more",
    "start": "971749",
    "end": "977119"
  },
  {
    "text": "costly not only because you have to purchase more resources but also the way you implement your code so the database",
    "start": "977119",
    "end": "983540"
  },
  {
    "text": "isn't available what do I do well if there's a reading to do a read operation maybe I could set up an azure",
    "start": "983540",
    "end": "988939"
  },
  {
    "text": "Redis cache and Azure and I'm aggressively caching information that I read out of the database so now when the",
    "start": "988939",
    "end": "995420"
  },
  {
    "text": "database is down I'll have the proper abstractions in place in my code to go",
    "start": "995420",
    "end": "1000610"
  },
  {
    "text": "to the maybe I'm going to the cache first in any case and if the cache is down I go to the database but you could",
    "start": "1000610",
    "end": "1006429"
  },
  {
    "text": "work it in either direction and for write operations ok the database isn't",
    "start": "1006429",
    "end": "1011649"
  },
  {
    "text": "available so maybe I'll drop something in a storage queue or an azure service bus queue and one thing that you might",
    "start": "1011649",
    "end": "1019209"
  },
  {
    "text": "notice here is that I have read operations that go in one direction and write operation to go in another",
    "start": "1019209",
    "end": "1025390"
  },
  {
    "text": "direction so if you're familiar at all with the cqr apps for command query",
    "start": "1025390",
    "end": "1032130"
  },
  {
    "text": "responsibility segregation that isn't a fantastic pattern to use in application",
    "start": "1032130",
    "end": "1038949"
  },
  {
    "text": "programs applications and programs that you want to be resilient and scalable CQRS is something to look at let's drill",
    "start": "1038949",
    "end": "1048459"
  },
  {
    "text": "into this a little more in a little more detail ok so now I don't have a simple just app service anymore I want I'm going to deploy my web",
    "start": "1048459",
    "end": "1055480"
  },
  {
    "text": "application or API to an app service and as which is really easy to do from visual",
    "start": "1055480",
    "end": "1060940"
  },
  {
    "text": "studio and that app service is going to always talk to a cube when it needs to",
    "start": "1060940",
    "end": "1066240"
  },
  {
    "text": "you know instead of talking directly to the database I'm just going to drop messages in the cube that will",
    "start": "1066240",
    "end": "1071770"
  },
  {
    "text": "ultimately update the database but those messages will go through as your web jobs that can just a synchronously fit",
    "start": "1071770",
    "end": "1079180"
  },
  {
    "text": "and run and listen for messages in a queue or as your functions if you prefer to do the same thing in a service layer",
    "start": "1079180",
    "end": "1086790"
  },
  {
    "text": "and that would all be my storage account I could also set up a CDN and a share",
    "start": "1086790",
    "end": "1092260"
  },
  {
    "text": "yes yes yes we'll talk to document DB will talk to Azure sequel basic",
    "start": "1092260",
    "end": "1098620"
  },
  {
    "text": "architectural diagram here but the piece I really want to call out here sorry is the queueing so to me building a",
    "start": "1098620",
    "end": "1107470"
  },
  {
    "text": "resilient application is going to require queueing if you're really serious about it some sort of message keys because message queues can do a",
    "start": "1107470",
    "end": "1114580"
  },
  {
    "text": "couple things not only hopefully will a message queue be available even if a database is not in a good team but a",
    "start": "1114580",
    "end": "1122500"
  },
  {
    "text": "message queue can also help you do things like load leveling so part of the trick to high availability is not just",
    "start": "1122500",
    "end": "1128650"
  },
  {
    "text": "avoiding disasters it's also avoiding the crushing weight of too many users",
    "start": "1128650",
    "end": "1134410"
  },
  {
    "text": "coming to the site at once and overwhelming a portion of my application either the web server or some of the",
    "start": "1134410",
    "end": "1140080"
  },
  {
    "text": "backend processing and by introducing a queue what I can do is take all these",
    "start": "1140080",
    "end": "1146170"
  },
  {
    "text": "requests from users to purchase orders or purchase plane tickets or whatever they're trying to do and drop them into",
    "start": "1146170",
    "end": "1151330"
  },
  {
    "text": "keyed messages and and slowly process through them or process through them as fast as I can but not overload some of",
    "start": "1151330",
    "end": "1158440"
  },
  {
    "text": "the back-end systems that are now trying to make too many connections because there's too many users on the site and",
    "start": "1158440",
    "end": "1164260"
  },
  {
    "start": "1163000",
    "end": "1330000"
  },
  {
    "text": "for those of you that have a used server service bus I just wanted to show you a small code example and show you in the",
    "start": "1164260",
    "end": "1171340"
  },
  {
    "text": "portal just how easy that is to set up I do have a service queue already configured service bus Kido",
    "start": "1171340",
    "end": "1180580"
  },
  {
    "text": "which is here we go when you go in to",
    "start": "1180580",
    "end": "1188630"
  },
  {
    "text": "create a new resource and Azure you would ask for service bus queue and you fill in some basic configuration information like the name of the queue",
    "start": "1188630",
    "end": "1195500"
  },
  {
    "text": "that you want so this one is called or the namespace for this is PS dash",
    "start": "1195500",
    "end": "1203840"
  },
  {
    "text": "messaging and it has one Q inside right now called orders so there's basically",
    "start": "1203840",
    "end": "1210710"
  },
  {
    "text": "there's queues and there's topics in service boss queues are really about I",
    "start": "1210710",
    "end": "1216590"
  },
  {
    "text": "have a message I'm going to put it in a queue and there's one person listening to that queue to pull it out in the processes we're topics or more like a",
    "start": "1216590",
    "end": "1223730"
  },
  {
    "text": "pub/sub mechanism where i can say i have a message to put into this queue this topic and it's really the same api but",
    "start": "1223730",
    "end": "1230780"
  },
  {
    "text": "there can be multiple listeners on that topic to pull out messages and perform different actions so maybe one component",
    "start": "1230780",
    "end": "1237830"
  },
  {
    "text": "is listening to a topic to send off email notifications and another component is listening to that same",
    "start": "1237830",
    "end": "1243710"
  },
  {
    "text": "topic to update the database and the code to use this orders queue is",
    "start": "1243710",
    "end": "1252140"
  },
  {
    "text": "extremely simple how do I send a message",
    "start": "1252140",
    "end": "1258890"
  },
  {
    "text": "to a service bus queue it's literally just three lines of code so this is a",
    "start": "1258890",
    "end": "1264350"
  },
  {
    "text": "very crude program but basically create a queue client from a connection string a connection string would look something",
    "start": "1264350",
    "end": "1270920"
  },
  {
    "text": "like this so my endpoint is PS - messaging that",
    "start": "1270920",
    "end": "1276080"
  },
  {
    "text": "service bus windows.net and then there will be an access key or a secret token in that connection string",
    "start": "1276080",
    "end": "1283570"
  },
  {
    "text": "give me a cue client you create a new brokered message what I can do is to",
    "start": "1283570",
    "end": "1289340"
  },
  {
    "text": "Jason's put a string in there put JSON object put XML in there whatever I want",
    "start": "1289340",
    "end": "1294380"
  },
  {
    "text": "into a brokered message and then just send that to the cube so it's really about four lines of code there and to",
    "start": "1294380",
    "end": "1300830"
  },
  {
    "text": "read something from that queue one way to do it you just set up an",
    "start": "1300830",
    "end": "1306610"
  },
  {
    "text": "answer function or an azure web job or a service on a virtual machine it sits on a loop and not even a loop just listens",
    "start": "1306610",
    "end": "1313090"
  },
  {
    "text": "for a message client a phone message so for every message that arrives in that scene queue will pull that out get the",
    "start": "1313090",
    "end": "1319029"
  },
  {
    "text": "body from there we could deserialize it using Newton soft or something this program is just turning out the body but",
    "start": "1319029",
    "end": "1325840"
  },
  {
    "text": "it assumes to be a string printing out a message ID simply just giving you some",
    "start": "1325840",
    "end": "1331509"
  },
  {
    "start": "1330000",
    "end": "1385000"
  },
  {
    "text": "ideas about resiliency but let's get one step further so let's say I have that set up I have queueing in place I'm",
    "start": "1331509",
    "end": "1339249"
  },
  {
    "text": "using an azure Redis cache I'm using Azure sequel and this geo replicated but",
    "start": "1339249",
    "end": "1344919"
  },
  {
    "text": "now I'm I have an application that I am willing to spare no expense to make sure",
    "start": "1344919",
    "end": "1350139"
  },
  {
    "text": "it is available all the time it's highly available as I can make it and I'm even",
    "start": "1350139",
    "end": "1357029"
  },
  {
    "text": "worried about an entire data center going offline or an entire data center going away that's where I could take",
    "start": "1357029",
    "end": "1363879"
  },
  {
    "text": "that environment app service queue database and replicate it through a",
    "start": "1363879",
    "end": "1368980"
  },
  {
    "text": "couple different data centers inside of azure and then use a load balancer called traffic manager to send my",
    "start": "1368980",
    "end": "1375609"
  },
  {
    "text": "customers to one of those two regions or 103 or 104 let me talk about traffic",
    "start": "1375609",
    "end": "1382749"
  },
  {
    "text": "manager for a second load balancing is actually important not just for scaling",
    "start": "1382749",
    "end": "1388389"
  },
  {
    "start": "1385000",
    "end": "1444000"
  },
  {
    "text": "up and balancing a load across multiple resources load balancing is also important for high availability because",
    "start": "1388389",
    "end": "1393429"
  },
  {
    "text": "one of the things the load balancer can do in Azure is detected oh that particular machines down now so let me",
    "start": "1393429",
    "end": "1399489"
  },
  {
    "text": "send all the traffic over here to the machine that's currently up and there's three different load balancers and adder",
    "start": "1399489",
    "end": "1405609"
  },
  {
    "text": "although they there's only one that has the name load balancer so if you go into",
    "start": "1405609",
    "end": "1413049"
  },
  {
    "text": "the azure portal and create a new resource and say I want to create a new add your load balancer what you're getting is a layer 4 load balancer so",
    "start": "1413049",
    "end": "1419049"
  },
  {
    "text": "that's a load balancer that works at the tcp/ip level it will accept incoming",
    "start": "1419049",
    "end": "1424179"
  },
  {
    "text": "tcp/ip connections and then you will configure endpoints behind that load balancer until it forward to one of",
    "start": "1424179",
    "end": "1431200"
  },
  {
    "text": "these places one of these virtual machines and it'll forward things along so that'll work for anything that works",
    "start": "1431200",
    "end": "1437249"
  },
  {
    "text": "over TCP or UDP so you could be doing HTTP traffic or you could be doing",
    "start": "1437249",
    "end": "1443179"
  },
  {
    "text": "WebSockets there's also what's known as the azure application gateway that's a layer 7",
    "start": "1443179",
    "end": "1448499"
  },
  {
    "start": "1444000",
    "end": "1495000"
  },
  {
    "text": "load balancers so this load balancer under what's at the application protocol level and it understands natively",
    "start": "1448499",
    "end": "1455399"
  },
  {
    "text": "protocols like HTTP and HTTPS and WebSockets so one of the neat things about the",
    "start": "1455399",
    "end": "1461279"
  },
  {
    "text": "azure application gateway is because it understands HTTP you can have it implement things like sticky sticky",
    "start": "1461279",
    "end": "1467759"
  },
  {
    "text": "sessions it's basically a reverse proxy so you could sit it in front of a web",
    "start": "1467759",
    "end": "1473249"
  },
  {
    "text": "application and tell it that when the client makes a request it should set a",
    "start": "1473249",
    "end": "1478950"
  },
  {
    "text": "cookie so that all the requests subsequent requests from that user go to the same machine because for some reason",
    "start": "1478950",
    "end": "1485759"
  },
  {
    "text": "you know we want to keep the user on the same machine probably because we're using in-memory session which is turns",
    "start": "1485759",
    "end": "1490980"
  },
  {
    "text": "out is actually not a good idea for high availability but it's possible with that particular load balancer and then",
    "start": "1490980",
    "end": "1496710"
  },
  {
    "start": "1495000",
    "end": "1663000"
  },
  {
    "text": "there's traffic manager the one that I'll show you a little demo of here traffic manager works at the DNS level",
    "start": "1496710",
    "end": "1502859"
  },
  {
    "text": "so if I'm using it in front of a web application the way it's being used is my web application when I type in Stata",
    "start": "1502859",
    "end": "1511559"
  },
  {
    "text": "uncom my web my web browser goes off and says oh dear network what is the IP",
    "start": "1511559",
    "end": "1516570"
  },
  {
    "text": "address for SCADA uncom and it's ultimately answered traffic manager that would answer that question and say oh",
    "start": "1516570",
    "end": "1522299"
  },
  {
    "text": "here's the IP address and it will answer based on some rules that I program into it let's take a look at that real quick",
    "start": "1522299",
    "end": "1528809"
  },
  {
    "text": "so I have a couple copies of the music store that are out there",
    "start": "1528809",
    "end": "1534149"
  },
  {
    "text": "I have asp.net core music store one of",
    "start": "1534149",
    "end": "1540600"
  },
  {
    "text": "those is in deployed in a data center in the east US so PS - music store - East",
    "start": "1540600",
    "end": "1547230"
  },
  {
    "text": "US is the URL for that and if I look at the bottom of the browser here I have",
    "start": "1547230",
    "end": "1552480"
  },
  {
    "text": "the layout page read an environment variable that actually tells you what data center you're in or what ad your",
    "start": "1552480",
    "end": "1558029"
  },
  {
    "text": "region your hand so it clearly says East US and I have another version of that",
    "start": "1558029",
    "end": "1563660"
  },
  {
    "text": "running in lefty you just make sure that",
    "start": "1563660",
    "end": "1570080"
  },
  {
    "text": "is up and running so PS - music store - West EU - your website snap but of",
    "start": "1570080",
    "end": "1577220"
  },
  {
    "text": "course I don't want my customers to necessarily know there's a West Europe version and an easier version what I'd",
    "start": "1577220",
    "end": "1583460"
  },
  {
    "text": "like them to do is just go to some custom domain or something like PS - music store Traffic Manager dotnet see",
    "start": "1583460",
    "end": "1593750"
  },
  {
    "text": "if I type that correctly and that particular request actually went to a",
    "start": "1593750",
    "end": "1599510"
  },
  {
    "text": "short Traffic Manager I'll show you the configuration here in just a second but as your traffic manager in this case",
    "start": "1599510",
    "end": "1604970"
  },
  {
    "text": "returned the IP address of actually the West Europe deployment because that's the way I have traffic manager",
    "start": "1604970",
    "end": "1611930"
  },
  {
    "text": "configured it's going to send me to the data center that has the least latency so the URL there PS - music store",
    "start": "1611930",
    "end": "1619610"
  },
  {
    "text": "traffic manager net how would I set that up well inside the portal I would go to",
    "start": "1619610",
    "end": "1628750"
  },
  {
    "text": "let's come over here to all resources first I am well first of all we come in",
    "start": "1628750",
    "end": "1633800"
  },
  {
    "text": "and I would say dear Azure I want to add a new Traffic Manager so if you haven't been in the azure portal lately you",
    "start": "1633800",
    "end": "1639800"
  },
  {
    "text": "would come in and click the plus button and you would say that you want to set up a Traffic Manager profile that's what",
    "start": "1639800",
    "end": "1646190"
  },
  {
    "text": "I already have set up let me just show you the configuration for there's really just two key blades of important",
    "start": "1646190",
    "end": "1654050"
  },
  {
    "text": "information so here's the Traffic Manager profile so first of all is the",
    "start": "1654050",
    "end": "1660860"
  },
  {
    "text": "configuration itself in this configuration I can first of all set the",
    "start": "1660860",
    "end": "1666320"
  },
  {
    "start": "1663000",
    "end": "1824000"
  },
  {
    "text": "routing method for traffic manager performance is a way of telling traffic manager send the request to the data",
    "start": "1666320",
    "end": "1673490"
  },
  {
    "text": "center that has the least amount of latency so if I'm over here in Europe chances are I'm going to go to the West",
    "start": "1673490",
    "end": "1678920"
  },
  {
    "text": "EU or from in the United States chances are I'm going to go to the east us there's also Geographic so that would be",
    "start": "1678920",
    "end": "1685640"
  },
  {
    "text": "a way to say that I want all EU customers to stay and go to an EU data center that I",
    "start": "1685640",
    "end": "1690970"
  },
  {
    "text": "have configured and all US customers to go to a u.s. data center so it with disregard latency would just strictly",
    "start": "1690970",
    "end": "1698230"
  },
  {
    "text": "route people route requests based on where they're geographically located there's also priority so priority so",
    "start": "1698230",
    "end": "1707139"
  },
  {
    "text": "first of all performance is a good way to say I just want to give my customers the best experience so I have all these",
    "start": "1707139",
    "end": "1714070"
  },
  {
    "text": "things set up and running of spared no expense I have app services and instances running everywhere just send",
    "start": "1714070",
    "end": "1720070"
  },
  {
    "text": "them wherever has the least latency wherever makes them happy I could also do priority which would be a way of",
    "start": "1720070",
    "end": "1726549"
  },
  {
    "text": "saying okay I have one data center this is one thing you can do with it I have one data center where everything is set",
    "start": "1726549",
    "end": "1731889"
  },
  {
    "text": "up and highly-tuned and I have everything scaled out and that's the number one priority but in case that",
    "start": "1731889",
    "end": "1736899"
  },
  {
    "text": "goes down here's a number two priority that I have set up in another data center somewhere and you can start",
    "start": "1736899",
    "end": "1742600"
  },
  {
    "text": "directing traffic over there if you've detected that the first priority wasn't good there's a bad shape and then",
    "start": "1742600",
    "end": "1749919"
  },
  {
    "text": "there's weighted the weighted routing method and that's actually an interesting one because I could say for",
    "start": "1749919",
    "end": "1755499"
  },
  {
    "text": "example will send 90% of my traffic to East us and send 10% of my traffic to",
    "start": "1755499",
    "end": "1760960"
  },
  {
    "text": "West EU and it could be any two deployments but that one can be interesting because you can set up one",
    "start": "1760960",
    "end": "1768429"
  },
  {
    "text": "of the situations where you have a new release you want to you want to put it out in the public you want to see how it behaves you want to see what angry",
    "start": "1768429",
    "end": "1774549"
  },
  {
    "text": "customers actually do to this thing but you don't want everyone to see it because if it has a bug or something it",
    "start": "1774549",
    "end": "1781269"
  },
  {
    "text": "could cause bad press so let's push that out and we'll have Traffic Manager set up to just send let's say 5% of our",
    "start": "1781269",
    "end": "1787539"
  },
  {
    "text": "traffic to that new deployment over here and we'll evaluate it and monitor it make sure it's actually going to work",
    "start": "1787539",
    "end": "1792879"
  },
  {
    "text": "out in the wild so once you've chosen the routing method based on what you",
    "start": "1792879",
    "end": "1798549"
  },
  {
    "text": "want to do you can also set the DNS time to live so remember this is a load balancer that worked by responding to",
    "start": "1798549",
    "end": "1804340"
  },
  {
    "text": "DNS queries you know what is the IP address for this domain it will hand something back to the client you might",
    "start": "1804340",
    "end": "1810669"
  },
  {
    "text": "want to make that shorter you know if you're doing failover testing and things like that but the default is five minutes so if something falls over your",
    "start": "1810669",
    "end": "1817599"
  },
  {
    "text": "one of your customers will have to wait at least five minutes before getting a new IP address and going to a new data center",
    "start": "1817599",
    "end": "1823529"
  },
  {
    "text": "and then there's also monitor settings and traffic manager this is how traffic manager determines if a service is",
    "start": "1823529",
    "end": "1830720"
  },
  {
    "start": "1824000",
    "end": "1905000"
  },
  {
    "text": "operating normally or if there's trouble so basically I'll show you how we we plug in endpoints in the traffic manager",
    "start": "1830720",
    "end": "1837929"
  },
  {
    "text": "which is a way of saying here's the different places to route traffic and what traffic manager will do is go to",
    "start": "1837929",
    "end": "1843929"
  },
  {
    "text": "each of those endpoints and make a request on this port using this protocol and at this URL so I could change that",
    "start": "1843929",
    "end": "1851309"
  },
  {
    "text": "to something else and if that request does not return an ACD status 200 code",
    "start": "1851309",
    "end": "1857179"
  },
  {
    "text": "traffic manager assumes that there's some sort of problem there and if it does that I believe three times in",
    "start": "1857179",
    "end": "1863340"
  },
  {
    "text": "traffic manager says ok no more traffic over there there's obviously a problem and it has to be a 200 response not a",
    "start": "1863340",
    "end": "1869039"
  },
  {
    "text": "302 response or anything else has to be a 200 response so in this case I just set up to hit the root of the website",
    "start": "1869039",
    "end": "1874799"
  },
  {
    "text": "make that reclass see if you get a 200 back but you can do interesting things here too so for example if I had a",
    "start": "1874799",
    "end": "1881840"
  },
  {
    "text": "specific URL for the traffic manager probe then the logic behind that URL",
    "start": "1881840",
    "end": "1888090"
  },
  {
    "text": "inside of a controller or somewhere can actually do some system checks and say oh you know we're having trouble with",
    "start": "1888090",
    "end": "1894269"
  },
  {
    "text": "sequel server maybe we should return of a 500 arehere for the for the check and",
    "start": "1894269",
    "end": "1899840"
  },
  {
    "text": "get some of the traffic manage of traffic away from us that's or to say so",
    "start": "1899840",
    "end": "1905850"
  },
  {
    "start": "1905000",
    "end": "1990000"
  },
  {
    "text": "in here that configured them as endpoints so yes discard some edits this",
    "start": "1905850",
    "end": "1912330"
  },
  {
    "text": "is basically where I go in and I tell traffic manager hey I have this new endpoint it is sorry for the scrolling",
    "start": "1912330",
    "end": "1922200"
  },
  {
    "text": "it's an azure endpoint or an external endpoint so you could use traffic manager to route to stuff in your own",
    "start": "1922200",
    "end": "1928440"
  },
  {
    "text": "data center if you wanted to it doesn't have to be inside of azor an azure endpoint or nested endpoint that's that",
    "start": "1928440",
    "end": "1935789"
  },
  {
    "text": "you can also set up nested traffic manager profiles which are interesting so maybe the top-level profile weights",
    "start": "1935789",
    "end": "1941549"
  },
  {
    "text": "based on geography and then once you've out to the next Traffic Manager it looks",
    "start": "1941549",
    "end": "1946679"
  },
  {
    "text": "at the requests and does some calculations based on priority or weight or something like that so my app services I would say hey I",
    "start": "1946679",
    "end": "1954220"
  },
  {
    "text": "have an azure endpoint give it some name the target resource type to be an app",
    "start": "1954220",
    "end": "1960610"
  },
  {
    "text": "service or apps or the slot or a public IP address that is assigned to one of my",
    "start": "1960610",
    "end": "1965830"
  },
  {
    "text": "virtual machines and then since I chose app service here the portal would give",
    "start": "1965830",
    "end": "1974049"
  },
  {
    "text": "me a list of app services to choose from and it's really just that easy so now Traffic Manager is running and is",
    "start": "1974049",
    "end": "1982330"
  },
  {
    "text": "probing this two different endpoints and routing traffic there is appropriate",
    "start": "1982330",
    "end": "1988230"
  },
  {
    "start": "1990000",
    "end": "2212000"
  },
  {
    "text": "load bottling so another aspect of high availability is what happens when I have",
    "start": "1990269",
    "end": "1995830"
  },
  {
    "text": "customers who are calling a service and some of these customers I may not trust",
    "start": "1995830",
    "end": "2001970"
  },
  {
    "text": "they might be doing something odd they might have a bud bug in one of the back-end services that's calling my",
    "start": "2001970",
    "end": "2007559"
  },
  {
    "text": "service and it's running in a loop and issuing a million calls a second and is overwhelming my back-end service what",
    "start": "2007559",
    "end": "2013950"
  },
  {
    "text": "did you do in a situation like that there is a technology in Azure called",
    "start": "2013950",
    "end": "2021480"
  },
  {
    "text": "API manager that you can set up that will implement a number of features that one of those features would be to",
    "start": "2021480",
    "end": "2027840"
  },
  {
    "text": "swaddle calls one assists from a specific client or on a specific subscription or who's using a specific",
    "start": "2027840",
    "end": "2034529"
  },
  {
    "text": "access key so that they don't overwhelm things in your system I'll just show you",
    "start": "2034529",
    "end": "2041149"
  },
  {
    "text": "API manager real quickly let's go back to all resources [Music]",
    "start": "2041149",
    "end": "2047729"
  },
  {
    "text": "and I'm looking for Oh was at the top",
    "start": "2048940",
    "end": "2057539"
  },
  {
    "text": "this API management service so here's the way this works mmm someone could spend a couple hours or an",
    "start": "2057539",
    "end": "2064780"
  },
  {
    "text": "afternoon describing excusing everything you do with the API management service but the basic idea is",
    "start": "2064780",
    "end": "2071108"
  },
  {
    "text": "that I have a set of services that I need to manage and that I need other",
    "start": "2071109",
    "end": "2076599"
  },
  {
    "text": "people to be able to access and sign up for and I need to do this in an orderly fashion so I can use this API management",
    "start": "2076599",
    "end": "2083679"
  },
  {
    "text": "service and Azure to wrap all of my services across disparate things I could implement them and functions and put",
    "start": "2083679",
    "end": "2090579"
  },
  {
    "text": "them in virtual machines and just have a collection of services everywhere but provide a cohesive single endpoint for",
    "start": "2090579",
    "end": "2097960"
  },
  {
    "text": "my customers and business partners to use which would be PS music stores er -",
    "start": "2097960",
    "end": "2103930"
  },
  {
    "text": "API net and I can provide them a developer portal and I can provide",
    "start": "2103930",
    "end": "2112780"
  },
  {
    "text": "myself and other users in my company a publisher portal which will allow me to",
    "start": "2112780",
    "end": "2119260"
  },
  {
    "text": "manage these API s so the developer portal that Azure gives you API management is one of those typical",
    "start": "2119260",
    "end": "2125770"
  },
  {
    "text": "experiences that you would have as a developer when you want to go out and use Google Maps or Bing api's or any of",
    "start": "2125770",
    "end": "2131500"
  },
  {
    "text": "those things you know you have to sign up somewhere you have to get a subscription key and then you have to plug that key into your application as",
    "start": "2131500",
    "end": "2139270"
  },
  {
    "text": "your API management will basically give you that developer portal where you can",
    "start": "2139270",
    "end": "2145359"
  },
  {
    "text": "hand out this URL to other developers and they come here and they can sign up and they can manage their keys and they",
    "start": "2145359",
    "end": "2150609"
  },
  {
    "text": "can start working with your API and this is also where you can provide documentation for all of your API s",
    "start": "2150609",
    "end": "2156369"
  },
  {
    "text": "there's a place where developers can open issues against your API s and so",
    "start": "2156369",
    "end": "2162400"
  },
  {
    "text": "forth and then there's the other side of the house which is under person writing",
    "start": "2162400",
    "end": "2167470"
  },
  {
    "text": "the API and I need the ability to see what API is I have published there's no music store API I need the",
    "start": "2167470",
    "end": "2174760"
  },
  {
    "text": "ability to import a new API that someone just wrote so I can go in I can say hey",
    "start": "2174760",
    "end": "2180339"
  },
  {
    "text": "I have this API endpoint this other application is exposed to swagger documentation so I'm just going",
    "start": "2180339",
    "end": "2186830"
  },
  {
    "text": "to plug in the URL and this API gateway will read the swagger documentation figure out all the operations that are",
    "start": "2186830",
    "end": "2192590"
  },
  {
    "text": "inside and just produce some nice documentation pages and so forth but one",
    "start": "2192590",
    "end": "2197930"
  },
  {
    "text": "of the important one of the important things that you can do with API manager here is that we'll cancel this policies",
    "start": "2197930",
    "end": "2211090"
  },
  {
    "text": "and when it comes to things like making sure you're highly available and making sure that people aren't abusing your",
    "start": "2211570",
    "end": "2217610"
  },
  {
    "start": "2212000",
    "end": "2283000"
  },
  {
    "text": "application in some way things like policies can help because not only can you require authentication",
    "start": "2217610",
    "end": "2223040"
  },
  {
    "text": "require authorization require specific headers you can also go in and say you",
    "start": "2223040",
    "end": "2229070"
  },
  {
    "text": "know what I have this music store API people have not been treating it very nicely these are making too many calls against",
    "start": "2229070",
    "end": "2235520"
  },
  {
    "text": "it so I'm going to limit the rate call per subscription on this so add a policy",
    "start": "2235520",
    "end": "2242410"
  },
  {
    "text": "let's use limit rate call per key and I realize that's probably really small but",
    "start": "2242410",
    "end": "2248290"
  },
  {
    "text": "there's some XML everyone loads XML so let's now you can put in a file that",
    "start": "2248290",
    "end": "2254030"
  },
  {
    "text": "says things like I want to limit the number of calls we're going to count the",
    "start": "2254030",
    "end": "2260000"
  },
  {
    "text": "number of seconds where people are making calls and we're going to make",
    "start": "2260000",
    "end": "2265610"
  },
  {
    "text": "sure that they limit their calls to I",
    "start": "2265610",
    "end": "2270220"
  },
  {
    "text": "forget what the action where the actual number is stored in there but you could",
    "start": "2272230",
    "end": "2278900"
  },
  {
    "text": "do that a good bottle things let's talk",
    "start": "2278900",
    "end": "2284960"
  },
  {
    "start": "2283000",
    "end": "2520000"
  },
  {
    "text": "about service fabric anyone using service fabric it's curious here service",
    "start": "2284960",
    "end": "2291650"
  },
  {
    "text": "fabric so service service fabric is interesting",
    "start": "2291650",
    "end": "2296869"
  },
  {
    "text": "um service fabric with two perspectives to look at with service fabric first of",
    "start": "2296869",
    "end": "2304549"
  },
  {
    "text": "all I want to tell you that service fabric is one of those technologies that Microsoft itself uses to implement things in Azure so if you look at",
    "start": "2304549",
    "end": "2311150"
  },
  {
    "text": "document DD or cosmos DD or whatever they call it this week and you look at as your sequel database those are",
    "start": "2311150",
    "end": "2317270"
  },
  {
    "text": "implemented using service fabric and there's two perspectives the first perspective is the runtime service",
    "start": "2317270",
    "end": "2323690"
  },
  {
    "text": "fabric is a runtime environment that allows you to manage services in a way",
    "start": "2323690",
    "end": "2329599"
  },
  {
    "text": "that will make them available and resilient and reliable and that runtime isn't time to Azure in any fashion so",
    "start": "2329599",
    "end": "2337369"
  },
  {
    "text": "there's a service fabric SDK that I can install on any machine and there's a runtime that I can get installed on any",
    "start": "2337369",
    "end": "2343789"
  },
  {
    "text": "machine so I can have a service fabric cluster in Azure or in Amazon or in",
    "start": "2343789",
    "end": "2349970"
  },
  {
    "text": "Google or I could take you know the six laptops that I have laying around in my basement and put make a service fabric",
    "start": "2349970",
    "end": "2355430"
  },
  {
    "text": "cluster out of them the other perspective of service fabric that I'll",
    "start": "2355430",
    "end": "2360680"
  },
  {
    "text": "show you also briefly is the programming model for service fabric so there's also",
    "start": "2360680",
    "end": "2365990"
  },
  {
    "text": "an SDK and an API that you can use from Java and c-sharp to create service",
    "start": "2365990",
    "end": "2373099"
  },
  {
    "text": "fabric reliable services that service fabric will manage so here's the idea and say I have the traditional",
    "start": "2373099",
    "end": "2380210"
  },
  {
    "text": "monolithic application the movie store application it's a website it's a web service it's all these things if I were",
    "start": "2380210",
    "end": "2388220"
  },
  {
    "text": "to really want high availability and I'm looking at service fabric as a way to give me that high availability and",
    "start": "2388220",
    "end": "2395720"
  },
  {
    "text": "disaster recovery what I would probably do first of all is break movie store down into there I say something like",
    "start": "2395720",
    "end": "2403190"
  },
  {
    "text": "micro services but something where the components are a little more thinner and identifiable and that I can refactor out",
    "start": "2403190",
    "end": "2409940"
  },
  {
    "text": "and separate from the rest of the system so yes there's still a web UI portion for the movie store but I may take all",
    "start": "2409940",
    "end": "2416660"
  },
  {
    "text": "the rules and things related to credit cards and put them into another component let's call it paint",
    "start": "2416660",
    "end": "2423850"
  },
  {
    "text": "and I'll show you what it looks like to implement a reliable service and service fabric and here's the deal with service",
    "start": "2423850",
    "end": "2429890"
  },
  {
    "text": "fabric service fabric is all about managing a cluster of machines and then",
    "start": "2429890",
    "end": "2436370"
  },
  {
    "text": "you tell service fabric about the application that you want to run and what services are part of that",
    "start": "2436370",
    "end": "2442700"
  },
  {
    "text": "application and service fabric will make sure that that application and the",
    "start": "2442700",
    "end": "2447950"
  },
  {
    "text": "services are distributed around that cluster in an effective manner and there's a couple different types of",
    "start": "2447950",
    "end": "2454550"
  },
  {
    "text": "services that you can run so for example this a service appears on four different",
    "start": "2454550",
    "end": "2461780"
  },
  {
    "text": "machines maybe that's the web UI portion of my application maybe I just want to install",
    "start": "2461780",
    "end": "2466880"
  },
  {
    "text": "that on all the machines it's pretty much stateless any state that it uses it stores in sequel server or some external",
    "start": "2466880",
    "end": "2472580"
  },
  {
    "text": "persistent store service fabric also has the concept of a stateful service which",
    "start": "2472580",
    "end": "2479270"
  },
  {
    "text": "is very interesting for a lot of different applications a stateful service and again I'll show you the code",
    "start": "2479270",
    "end": "2484730"
  },
  {
    "text": "here in just a second there's a service that service fabric knows you're storing state and it's going to give you some",
    "start": "2484730",
    "end": "2491150"
  },
  {
    "text": "role glue some reliable collections that you can use like a dictionary and a cue",
    "start": "2491150",
    "end": "2496910"
  },
  {
    "text": "that you can put stuff into and it's transactional so it looks like programming with an in-memory dictionary",
    "start": "2496910",
    "end": "2502850"
  },
  {
    "text": "but it's transactional and it's actually persisted and it's durable somewhere and service fabric will make sure that that state is replicated around in this",
    "start": "2502850",
    "end": "2510080"
  },
  {
    "text": "cluster so even if one virtual machine is completely destroyed that service",
    "start": "2510080",
    "end": "2515510"
  },
  {
    "text": "will still be available and be able to run and it hasn't lost any data let's",
    "start": "2515510",
    "end": "2521840"
  },
  {
    "start": "2520000",
    "end": "2920000"
  },
  {
    "text": "actually just dive into the code for this so for here before I get to that",
    "start": "2521840",
    "end": "2527800"
  },
  {
    "text": "let's go over to this version of Visual Studio sorry this version of Visual",
    "start": "2527800",
    "end": "2533630"
  },
  {
    "text": "Studio so when I create something for service",
    "start": "2533630",
    "end": "2539940"
  },
  {
    "text": "fabric I could do individual studio 2017 I could say file new project I'm going to do a cloud project and I'm going to",
    "start": "2539940",
    "end": "2545819"
  },
  {
    "text": "do a service fabric application and what that would give me as a solution with two projects inside the first project",
    "start": "2545819",
    "end": "2552329"
  },
  {
    "text": "describes my application that would be this project here on building a movie",
    "start": "2552329",
    "end": "2558059"
  },
  {
    "text": "store but this has no executable code inside of it it's really just metadata and parameters that I use to describe my",
    "start": "2558059",
    "end": "2565680"
  },
  {
    "text": "application service fabric and then also to publish my application into Azure",
    "start": "2565680",
    "end": "2571369"
  },
  {
    "text": "which is relatively this simple to setup and there will be XML files that say",
    "start": "2571369",
    "end": "2576809"
  },
  {
    "text": "things like this application Looby store it consists of a couple different",
    "start": "2576809",
    "end": "2586890"
  },
  {
    "text": "services one called a counter service which I'll show you here in just a moment",
    "start": "2586890",
    "end": "2591960"
  },
  {
    "text": "one which is the web service which is the web UI for the application and you'll notice things like instant count",
    "start": "2591960",
    "end": "2599700"
  },
  {
    "text": "which is basically a way where I can tell service fabric I want to run this service and I wanted to have three",
    "start": "2599700",
    "end": "2606779"
  },
  {
    "text": "instances or I wanted to run on every node that is in the cluster in which",
    "start": "2606779",
    "end": "2612450"
  },
  {
    "text": "case I could set instance count to minus one not just self-service fabric run it everywhere and they also has this",
    "start": "2612450",
    "end": "2619049"
  },
  {
    "text": "service this counter service this is a stateful service so it's actually using these reliable collections and storing",
    "start": "2619049",
    "end": "2624720"
  },
  {
    "text": "stuff and a dictionary that has to be persisted and one of the things I can do with a State will service is provide a",
    "start": "2624720",
    "end": "2631470"
  },
  {
    "text": "partition count so partitioning is important for scalability if I have so",
    "start": "2631470",
    "end": "2638970"
  },
  {
    "text": "much data that it doesn't fit on a single node I have to partition that data across multiple nodes and we do the",
    "start": "2638970",
    "end": "2645329"
  },
  {
    "text": "same thing with sequel server except they're charting and MongoDB have starting and everyone has charting or",
    "start": "2645329",
    "end": "2651239"
  },
  {
    "text": "partitioning ready to break up Dena so partition count is a way of saying in this case I have this range of numbers",
    "start": "2651239",
    "end": "2658140"
  },
  {
    "text": "that I might use from negative nine something to nine something if I wanted to say have three partitions",
    "start": "2658140",
    "end": "2666450"
  },
  {
    "text": "to cover that range service fabric would just take that range and divide it up into three categories and now there",
    "start": "2666450",
    "end": "2673680"
  },
  {
    "text": "would be one node in the cluster responsible for the lowest range one for the middle range one for the high range",
    "start": "2673680",
    "end": "2679320"
  },
  {
    "text": "you know a simpler example would be an address book I have the range A to Z and I could tell service fabric I want a",
    "start": "2679320",
    "end": "2686369"
  },
  {
    "text": "partition count of two so one service fabric might set up one partition that handles all the state or address book",
    "start": "2686369",
    "end": "2694950"
  },
  {
    "text": "entries from A to M and then a second partition all the address book entries",
    "start": "2694950",
    "end": "2700140"
  },
  {
    "text": "from MD D that sort of thing so here we're using a numeric identifier that's",
    "start": "2700140",
    "end": "2710119"
  },
  {
    "text": "the application project that describes the application and the services that",
    "start": "2710119",
    "end": "2715170"
  },
  {
    "text": "are inside and then there's the services themselves so the easiest one to",
    "start": "2715170",
    "end": "2720240"
  },
  {
    "text": "understand would be the web service which is the web application and this is",
    "start": "2720240",
    "end": "2727319"
  },
  {
    "text": "an asp.net core application that is set up to run in service fabric so it looks",
    "start": "2727319",
    "end": "2732480"
  },
  {
    "text": "a little bit different than an asp.net core application that doesn't know anything about service fabric and I do",
    "start": "2732480",
    "end": "2738599"
  },
  {
    "text": "want to point out that service fabric has the concept of a guest executable which means you could write a program in",
    "start": "2738599",
    "end": "2746250"
  },
  {
    "text": "any language Java Ruby whatever nodejs and you can have a managed by service",
    "start": "2746250",
    "end": "2753540"
  },
  {
    "text": "fabric as a guest executable and that that program that application doesn't have to know anything about service",
    "start": "2753540",
    "end": "2759089"
  },
  {
    "text": "fabric but if you're willing to take a dependency on service fabric you can allow service fabric to more effectively",
    "start": "2759089",
    "end": "2766050"
  },
  {
    "text": "manage your service you can also take advantage of service fabric features so this is an asp.net core application it's",
    "start": "2766050",
    "end": "2772319"
  },
  {
    "text": "going to build a web UI but it is plugged into service fabric it just",
    "start": "2772319",
    "end": "2777810"
  },
  {
    "text": "taking the dependency on service fabric so typically when you go into an asp.net core application and you look at the main startup method you see things",
    "start": "2777810",
    "end": "2784560"
  },
  {
    "text": "related to spinning up kestrel and spinning up the web server and all that stuff without doing any of that here now",
    "start": "2784560",
    "end": "2789660"
  },
  {
    "text": "when we're launched we're launched by service fabric and service fabric is telling us to start up and one of the things we have to do when",
    "start": "2789660",
    "end": "2795630"
  },
  {
    "text": "we were programming a service fabric if we have to register the service so we're saying I am the web type service and I'm",
    "start": "2795630",
    "end": "2802110"
  },
  {
    "text": "going to right now create a new instance of this service and I'm going to pass in your context service context that you",
    "start": "2802110",
    "end": "2808680"
  },
  {
    "text": "provide to me to give me some more information about my environment and we're often running so where's all the",
    "start": "2808680",
    "end": "2813930"
  },
  {
    "text": "asp.net core bits about kestrel and configuration and all that stuff it's",
    "start": "2813930",
    "end": "2819810"
  },
  {
    "text": "actually tucked away in this class web so if we open up web this is where you",
    "start": "2819810",
    "end": "2826080"
  },
  {
    "text": "would see the code specifically this code which says I'm a new web host",
    "start": "2826080",
    "end": "2833250"
  },
  {
    "text": "builder using a web listener or using kestrel I want to configure some services I want to use of content",
    "start": "2833250",
    "end": "2839100"
  },
  {
    "text": "through the startup class application insight etc etc and once I do build I",
    "start": "2839100",
    "end": "2844260"
  },
  {
    "text": "now have a server process listening to port 80 or whatever port it's configured",
    "start": "2844260",
    "end": "2849660"
  },
  {
    "text": "to listen to it will now take HTTP connections right very exciting yes but",
    "start": "2849660",
    "end": "2857090"
  },
  {
    "text": "this is now in a class that derives from",
    "start": "2857090",
    "end": "2863210"
  },
  {
    "text": "service fabrics stateless service which means when I execute this code I'm",
    "start": "2863210",
    "end": "2869580"
  },
  {
    "text": "executing that code to build my web server and response to service fabric telling me hey it's time to go out and",
    "start": "2869580",
    "end": "2875700"
  },
  {
    "text": "create your service instance listeners so if you need to listen for something over the network you override this",
    "start": "2875700",
    "end": "2881820"
  },
  {
    "text": "method and that's where you create something not well Services has to listen over the network some services might just listen for messages on our",
    "start": "2881820",
    "end": "2888860"
  },
  {
    "text": "service bus queue or a storage queue in which case they wouldn't have to implement this exact code right here let",
    "start": "2888860",
    "end": "2897540"
  },
  {
    "text": "me just show you over in the azure portal",
    "start": "2897540",
    "end": "2904430"
  },
  {
    "text": "what happens when I right-click this thing and say that I want to publish it",
    "start": "2904890",
    "end": "2910110"
  },
  {
    "text": "out there somewhere we would go to distort cluster well so",
    "start": "2910110",
    "end": "2921510"
  },
  {
    "start": "2920000",
    "end": "2955000"
  },
  {
    "text": "first of all you know I've ran this Web API and everything else inside this project is just regular asp.net core",
    "start": "2921510",
    "end": "2928160"
  },
  {
    "text": "there's controllers there's razor views there's layout views all that stuff jQuery scripts whatever you want in your",
    "start": "2928160",
    "end": "2935280"
  },
  {
    "text": "web UI now I'm ready to push it out into Azure I want to run this server I want",
    "start": "2935280",
    "end": "2940440"
  },
  {
    "text": "to run a service fabric cluster in Azure and of course with Azure there's a way to click and say I want to add a new",
    "start": "2940440",
    "end": "2946890"
  },
  {
    "text": "service fabric cluster and you fill out about four pages of configuration it's not too terribly bad and the azure",
    "start": "2946890",
    "end": "2953820"
  },
  {
    "text": "portal will just spit out a service fabric cluster for you and that consists of a public IP address so people can",
    "start": "2953820",
    "end": "2960510"
  },
  {
    "text": "reach your cluster from the outside a load balancer that will accept let's say a cheese HTTP connections to that public",
    "start": "2960510",
    "end": "2967740"
  },
  {
    "text": "IP address and then distribute them across machines that are inside of the cluster maybe all of them maybe just a",
    "start": "2967740",
    "end": "2974250"
  },
  {
    "text": "subset of them there's a resource representing the cluster itself there's a virtual machine scale set so this",
    "start": "2974250",
    "end": "2980310"
  },
  {
    "start": "2980000",
    "end": "3035000"
  },
  {
    "text": "virtual machine scale set has or should",
    "start": "2980310",
    "end": "2985830"
  },
  {
    "text": "have five nodes inside of it if you haven't worked with a virtual machine scale set it is a resource that you can",
    "start": "2985830",
    "end": "2991950"
  },
  {
    "text": "create in Azure where if all you want is",
    "start": "2991950",
    "end": "2998700"
  },
  {
    "text": "just five or five hundred identical virtual machines and Azure what you want",
    "start": "2998700",
    "end": "3005750"
  },
  {
    "text": "is a virtual machine scale set you want to create one of those and it'll just manage all those instances for you and I can see I have five virtual machines",
    "start": "3005750",
    "end": "3011690"
  },
  {
    "text": "running inside of this virtual machine scale set and traffic will reach them because of the load balancer that was",
    "start": "3011690",
    "end": "3017180"
  },
  {
    "text": "configured for me everything else is just storage accounts and virtual networks to keep those all on the same",
    "start": "3017180",
    "end": "3023660"
  },
  {
    "text": "subnet let's look at the service fabric cluster itself here",
    "start": "3023660",
    "end": "3029860"
  },
  {
    "text": "and I'm going to open up this thing called the service fabric Explorer where I've already deployed this application",
    "start": "3031770",
    "end": "3038110"
  },
  {
    "start": "3035000",
    "end": "3140000"
  },
  {
    "text": "by the way and the service fabric Explorer because I'm the admin on the",
    "start": "3038110",
    "end": "3044110"
  },
  {
    "text": "subscription that will allow me into this Explorer to see what is actually happening inside of the cluster any",
    "start": "3044110",
    "end": "3051520"
  },
  {
    "text": "moment now but I should be able to see that I have a servic service fabric cluster up and",
    "start": "3051520",
    "end": "3058810"
  },
  {
    "text": "running and has five nodes it'll have this web service as part of the application and we'll be able to",
    "start": "3058810",
    "end": "3064900"
  },
  {
    "text": "actually see what nodes that is on okay so the service fabric Explorer are one application deployed that one that we",
    "start": "3064900",
    "end": "3071380"
  },
  {
    "text": "have on visual CEO I have five nodes in the cluster I could add more if I wanted to five is the recommended minimum",
    "start": "3071380",
    "end": "3077730"
  },
  {
    "text": "speaking of upgrades them upgrade domains and Fault them in Azure put each",
    "start": "3077730",
    "end": "3086200"
  },
  {
    "text": "of those nodes into the unique fault domain so there's a total of five",
    "start": "3086200",
    "end": "3092080"
  },
  {
    "text": "different fault domains there and also five different upgrade domains so if something blows up or something needs",
    "start": "3092080",
    "end": "3098230"
  },
  {
    "text": "upgraded I should only ever lose one node I have one application running",
    "start": "3098230",
    "end": "3104530"
  },
  {
    "text": "inside the movie store this over here is",
    "start": "3104530",
    "end": "3110110"
  },
  {
    "text": "telling me that I have two services inside of the application one is the service that provides the web user",
    "start": "3110110",
    "end": "3117490"
  },
  {
    "text": "interface this is the instance of that service that is running and if I keep",
    "start": "3117490",
    "end": "3122710"
  },
  {
    "text": "expanding things I'll basically see it's running on all five nodes so it's running on every machine there so even",
    "start": "3122710",
    "end": "3128380"
  },
  {
    "text": "if one virtual machine goes down someone should still be able to get to the web UI",
    "start": "3128380",
    "end": "3134040"
  },
  {
    "text": "now that web UI depends on a counter",
    "start": "3134040",
    "end": "3140050"
  },
  {
    "start": "3140000",
    "end": "3400000"
  },
  {
    "text": "service but it's just a file new project thing that I put together with service",
    "start": "3140050",
    "end": "3145090"
  },
  {
    "text": "fabric all this all this does is this",
    "start": "3145090",
    "end": "3150430"
  },
  {
    "text": "counter service does is incremented counter but it's interesting to look at the code because",
    "start": "3150430",
    "end": "3155510"
  },
  {
    "text": "gives you an understanding what service fabric can do this is the world's quickest introduction to service fabric by the way this particular service is",
    "start": "3155510",
    "end": "3164290"
  },
  {
    "text": "implemented in counter dot CS you can",
    "start": "3164290",
    "end": "3169460"
  },
  {
    "text": "see this is a stateful service not a stateless service and it has a method so",
    "start": "3169460",
    "end": "3178160"
  },
  {
    "text": "here where we create service replicas listeners will create something known as",
    "start": "3178160",
    "end": "3183920"
  },
  {
    "text": "a remoting listener we don't want the service to listen over the public IP address we don't want just anyone",
    "start": "3183920",
    "end": "3189950"
  },
  {
    "text": "contacting the service we just want other services inside the same cluster to be able to communicate with the",
    "start": "3189950",
    "end": "3196460"
  },
  {
    "text": "service and I'll show you how we do that in just a second essentially we want other services to be able to call get",
    "start": "3196460",
    "end": "3203570"
  },
  {
    "text": "count so we'll return the current value of the counter that the service is tracking where do we compute the counter",
    "start": "3203570",
    "end": "3210560"
  },
  {
    "text": "I'm going to skip down to the bottom first I can run a sync this is another",
    "start": "3210560",
    "end": "3216320"
  },
  {
    "text": "method that I can override when I'm using that service fabric API and deriving from stateful service what I",
    "start": "3216320",
    "end": "3223460"
  },
  {
    "text": "can basically do in here is set up a loop or you know start my listening to a message queue whatever I need to do what",
    "start": "3223460",
    "end": "3229940"
  },
  {
    "text": "this particular method is going to do is say let's go out to the state manager which is part of the service fabric API",
    "start": "3229940",
    "end": "3236540"
  },
  {
    "text": "and please give me an I reliable dictionary with the name of my dictionary so this is a reliable",
    "start": "3236540",
    "end": "3242420"
  },
  {
    "text": "dictionary things that I put into it get persisted in the store and I can actually back up that state move it",
    "start": "3242420",
    "end": "3248090"
  },
  {
    "text": "around if I need to and then we're just going to set up an infinite loop or at least we're going to loop until someone",
    "start": "3248090",
    "end": "3253970"
  },
  {
    "text": "raises a flag on a cancellation token but we're going to create a transaction if anytime I use those reliable connect",
    "start": "3253970",
    "end": "3261110"
  },
  {
    "text": "collections I need to have a transaction in place inside of the transaction I'm trying trying to get to a value called",
    "start": "3261110",
    "end": "3267440"
  },
  {
    "text": "counter and down here it's not the prettiest code we're basically going to",
    "start": "3267440",
    "end": "3273620"
  },
  {
    "text": "update the back counter the entry with the key of counter we're going to update",
    "start": "3273620",
    "end": "3278690"
  },
  {
    "text": "it with a new value so the increment value put it back in the dictionary commit the transaction and then go to",
    "start": "3278690",
    "end": "3284930"
  },
  {
    "text": "sleep for a second so the service is just constantly running in the background you know just setting a counter new",
    "start": "3284930",
    "end": "3290660"
  },
  {
    "text": "value for the counter just incrementing it one time after another and eventually",
    "start": "3290660",
    "end": "3296450"
  },
  {
    "text": "someone's going to want to come along and get the value of that counter so how does someone call get count I think this",
    "start": "3296450",
    "end": "3302509"
  },
  {
    "text": "is interesting so from the web application if I wanted to call this method on the stateful service what I",
    "start": "3302509",
    "end": "3310940"
  },
  {
    "text": "would do is get ahold of a fabric client",
    "start": "3310940",
    "end": "3316400"
  },
  {
    "text": "first of all but first I need to describe what I want to get to so I'm",
    "start": "3316400",
    "end": "3322609"
  },
  {
    "text": "inside of an applications of trying to reach another service that's in the cluster I don't go out and say hey give",
    "start": "3322609",
    "end": "3328549"
  },
  {
    "text": "me the thing that's listening on this IP address in the cluster or go to this node with a specific name now there's a",
    "start": "3328549",
    "end": "3334220"
  },
  {
    "text": "URI scheme with service fabric where there's a layer of indirection so I'm basically saying I'm going to go into",
    "start": "3334220",
    "end": "3340190"
  },
  {
    "text": "the fabric and in the movie store application I want to find the service with the name of counter and then",
    "start": "3340190",
    "end": "3345349"
  },
  {
    "text": "service fabric will figure out how to connect me to that thing so I don't have to know too many details since this is a",
    "start": "3345349",
    "end": "3353299"
  },
  {
    "text": "stateful service it can be partitioned so when I connect to the service I am",
    "start": "3353299",
    "end": "3358670"
  },
  {
    "text": "also have to indicate which partition do i1 so there's a little bit of code here that's saying go out and give me all the",
    "start": "3358670",
    "end": "3367130"
  },
  {
    "text": "partitions giving a list of all the partitions that are available for that particular service I can do that through",
    "start": "3367130",
    "end": "3372230"
  },
  {
    "text": "the fabric clients query manager property then I can ask the service",
    "start": "3372230",
    "end": "3380390"
  },
  {
    "text": "proxy to give me an instance of something that implements I counter service it should have this name should",
    "start": "3380390",
    "end": "3387950"
  },
  {
    "text": "have this URI and using this partition key and at that point I basically have an object where I can invoke a method it",
    "start": "3387950",
    "end": "3393619"
  },
  {
    "text": "will call the method in the other service and I get the count value but the important part of this all really is",
    "start": "3393619",
    "end": "3400279"
  },
  {
    "start": "3400000",
    "end": "3567000"
  },
  {
    "text": "that service fabric is the one that if I go out there and let's say I look at a",
    "start": "3400279",
    "end": "3406190"
  },
  {
    "text": "node and let's see if we can find actually let's do this let's open up",
    "start": "3406190",
    "end": "3412069"
  },
  {
    "text": "counter and I can see it's been partition three times our staple service will always have a",
    "start": "3412069",
    "end": "3418490"
  },
  {
    "text": "primary into secondaries so the data will be replicated and I concede that the primary for this partition is",
    "start": "3418490",
    "end": "3424550"
  },
  {
    "text": "currently on primary - if I go out to this node primary - and there's actually",
    "start": "3424550",
    "end": "3431570"
  },
  {
    "text": "a programmatic way to do this - if you just want to kill off nodes and see how service fabric reacts I could click on",
    "start": "3431570",
    "end": "3439400"
  },
  {
    "text": "the little context menu there and say let's restart this thing and we'll see",
    "start": "3439400",
    "end": "3448700"
  },
  {
    "text": "how this behaves today but I should eventually see that that instance will",
    "start": "3448700",
    "end": "3457220"
  },
  {
    "text": "be moved off of primary - little instead one of these secondaries will become the new primary and then there'll be a new",
    "start": "3457220",
    "end": "3464180"
  },
  {
    "text": "primary place somewhere else I just might have to up the refresh rate here but since I'm running out of time you",
    "start": "3464180",
    "end": "3469850"
  },
  {
    "text": "might just have to trust in vacancy service fabric already kind of detected Oh something's wrong there we'll question mark and eventually is going to",
    "start": "3469850",
    "end": "3477410"
  },
  {
    "text": "have that counter service running somewhere else so I can completely shut down a node will never never lose any of",
    "start": "3477410",
    "end": "3482570"
  },
  {
    "text": "that state will never lose the counter value or anything else that we're stored in there so service fabric is very appealing from the viewpoint of writing",
    "start": "3482570",
    "end": "3490190"
  },
  {
    "text": "something that's reliable and highly scalable because you can have a cluster with hundreds of nodes running with",
    "start": "3490190",
    "end": "3495530"
  },
  {
    "text": "these services and the last few things I'm going to point out are that it's to",
    "start": "3495530",
    "end": "3500600"
  },
  {
    "text": "be highly available you need to thoroughly automate everything so automate never you need to teach",
    "start": "3500600",
    "end": "3506660"
  },
  {
    "text": "developers to never use the azure portal to do anything always use a resource manager templates",
    "start": "3506660",
    "end": "3512150"
  },
  {
    "text": "or scripts or you know provision things and update resources and Azure in a way",
    "start": "3512150",
    "end": "3517610"
  },
  {
    "text": "that's repeatable you need to do some load testing because part of being highly available is making sure that you",
    "start": "3517610",
    "end": "3524660"
  },
  {
    "text": "can handle load and the things don't fall apart and you always discover things that you would never expect to fall apart sometimes fall apart under",
    "start": "3524660",
    "end": "3530930"
  },
  {
    "text": "load testing make sure you have monitoring in place and I think that pretty much concludes this presentation",
    "start": "3530930",
    "end": "3537110"
  },
  {
    "text": "if you want a more slower perhaps more guided tour of everything that I just",
    "start": "3537110",
    "end": "3542840"
  },
  {
    "text": "went through I do have two Pluralsight courses coming out in the next four to six weeks let's cover all these topics",
    "start": "3542840",
    "end": "3548480"
  },
  {
    "text": "instead of spending ten minutes for service fabric you can spend an hour with service fabric and it'll be a little more washable perhaps but I thank",
    "start": "3548480",
    "end": "3556550"
  },
  {
    "text": "you so much for coming out today I'll hang around for questions enjoy your conference",
    "start": "3556550",
    "end": "3562570"
  },
  {
    "text": "[Applause]",
    "start": "3562960",
    "end": "3569190"
  }
]