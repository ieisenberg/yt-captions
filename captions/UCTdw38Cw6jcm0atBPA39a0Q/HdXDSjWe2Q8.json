[
  {
    "text": "hello everyone good afternoon almost to",
    "start": "3980",
    "end": "9230"
  },
  {
    "text": "the end here right 11 o'clock tonight right no that's something else so yeah",
    "start": "9230",
    "end": "16849"
  },
  {
    "text": "my name is Jimmy Bogart you can find me on twitter @ @j bogart this presentation as well the samples will be in my github",
    "start": "16849",
    "end": "24320"
  },
  {
    "text": "and get out that comm / je Bogart and you can find me blog about this and other topics at Jimmy Bogart comm and",
    "start": "24320",
    "end": "30260"
  },
  {
    "text": "for my day job I do a lot of this kind of stuff at a consultant coming out of",
    "start": "30260",
    "end": "35269"
  },
  {
    "text": "Texas called Hut spring so me personally I've actually been doing a CI HDD for",
    "start": "35269",
    "end": "40430"
  },
  {
    "text": "databases for quite a long time probably like 15 16 years now or so so a lot of this is gonna be some more stories and",
    "start": "40430",
    "end": "47030"
  },
  {
    "text": "lessons learned about doing these kinds of activities over all the different kinds of ways you can possibly do it over the years and one of the very first",
    "start": "47030",
    "end": "54680"
  },
  {
    "text": "lessons I learned when trying to get started with CI in cd4 databases was to",
    "start": "54680",
    "end": "60409"
  },
  {
    "text": "be kind to your DBA s because their company prefers their data to your code",
    "start": "60409",
    "end": "67760"
  },
  {
    "text": "like if they lost your code they wouldn't care but if they lost the data they'd be really really upset so be be",
    "start": "67760",
    "end": "72920"
  },
  {
    "text": "kind to your DBA s so if I look at just kind of normalcy ICD processes it's like",
    "start": "72920",
    "end": "79280"
  },
  {
    "text": "the typical kind of C ICD processes are pretty simple it basically starts out with a developer who wants to write some",
    "start": "79280",
    "end": "85189"
  },
  {
    "text": "code the developer makes them change to some code and push this it up to github and then after we pushed up to github",
    "start": "85189",
    "end": "91399"
  },
  {
    "text": "then something takes that coat and perform some kind of build around it right and then after the build you put",
    "start": "91399",
    "end": "96619"
  },
  {
    "text": "some kind of artifact an artifact gets pushed out again to some kind of some",
    "start": "96619",
    "end": "101990"
  },
  {
    "text": "kind of CD tool then finally it's going to push your code out into production now I have it I think I'm supposed to",
    "start": "101990",
    "end": "107630"
  },
  {
    "text": "change the logos from Azure pipelines to github actions but I didn't quite get that done in time so this is actually",
    "start": "107630",
    "end": "115340"
  },
  {
    "text": "pretty straightforward thing to do like all the tooling all the stuff makes this sort of thing really really easy in fact",
    "start": "115340",
    "end": "120649"
  },
  {
    "text": "I got this entire pipeline you can you can basically do all from inside something like Visual Studio you can right click start doing stuff and it'll",
    "start": "120649",
    "end": "127490"
  },
  {
    "text": "automate this entire pipeline for you and the reason why this is super easy for us to do is because applications are",
    "start": "127490",
    "end": "133549"
  },
  {
    "text": "ideally stateless that is it is really easy for us to create and story them because we have to worry",
    "start": "133549",
    "end": "139470"
  },
  {
    "text": "about the application holding on to any kind of state but databases aren't like databases are by their nature stay full",
    "start": "139470",
    "end": "146760"
  },
  {
    "text": "right that's where we put our information so that means that it's much much easier for us to screw that up because it's sitting there waiting for",
    "start": "146760",
    "end": "154590"
  },
  {
    "text": "us to screw it up over there it also means that data screw ups are much much harder to recover from because we may",
    "start": "154590",
    "end": "160830"
  },
  {
    "text": "not have an ability to rewind time and go back in time and if I had this I've",
    "start": "160830",
    "end": "165989"
  },
  {
    "text": "had this happened before where I screwed up something in data and production and then we had to go through that whole like recovery process and try to get our",
    "start": "165989",
    "end": "173220"
  },
  {
    "text": "backups to make to put State back to our used to be and it's just a very painful process whereas something like I screwed",
    "start": "173220",
    "end": "179340"
  },
  {
    "text": "up an application or had a bug I can fix it pretty quickly and get it out there and not really worry about what what is going on at that point in time I do",
    "start": "179340",
    "end": "186930"
  },
  {
    "text": "notice that you won't really get fired for killing an application but you will get fired for killing a database I know",
    "start": "186930",
    "end": "196819"
  },
  {
    "text": "ok so there's there's a lot more risk inherent with changing a database over changing an application because of the",
    "start": "197930",
    "end": "204480"
  },
  {
    "text": "stateful nature and a lot of companies I work with treat that risk as a danger which means like then we just won't",
    "start": "204480",
    "end": "211049"
  },
  {
    "text": "change our database at all because any kind of change has all this sort of downstream implications but we we if we",
    "start": "211049",
    "end": "217889"
  },
  {
    "text": "want our database to be able to grow with the business and be able to evolve with a business and we need to be able",
    "start": "217889",
    "end": "223139"
  },
  {
    "text": "to change our database over time and we want to have the same rigor applied to",
    "start": "223139",
    "end": "228389"
  },
  {
    "text": "the process as we put in changing and deploying our applications over time to our database as well we don't want to be",
    "start": "228389",
    "end": "234840"
  },
  {
    "text": "paralyzed by fear and just say we're going to throw up our hands and just not do anything and so we want to have some",
    "start": "234840",
    "end": "240510"
  },
  {
    "text": "kind of continuous integration and delivery process for our databases now a",
    "start": "240510",
    "end": "245669"
  },
  {
    "text": "lot of customers customers I work with who have like the database and sometimes it's even called the database that sits",
    "start": "245669",
    "end": "252030"
  },
  {
    "text": "in the middle of their enterprise they have some really arcane change management processes where has to go",
    "start": "252030",
    "end": "257639"
  },
  {
    "text": "like 3 17 different levels of approvals and then at the end you find out like it's actually just one DBA running the",
    "start": "257639",
    "end": "264330"
  },
  {
    "text": "script in production but we don't wanna do that right we don't want to have some mistake make the local news because we",
    "start": "264330",
    "end": "270690"
  },
  {
    "text": "did something wrong and you've probably seen this sometimes right like besides all the security",
    "start": "270690",
    "end": "275710"
  },
  {
    "text": "holes that get found out and published about I need everyone so I would find some news article that's like someone",
    "start": "275710",
    "end": "282100"
  },
  {
    "text": "had access to production database and accidentally deleted the entire database that still happens these days and that",
    "start": "282100",
    "end": "289000"
  },
  {
    "text": "happens because we're allowing humans to have access to run these queries but we don't want to do that we don't want to",
    "start": "289000",
    "end": "294280"
  },
  {
    "text": "have a human involved in this process it could potentially screw things up for everybody so we need a way to be able to",
    "start": "294280",
    "end": "301720"
  },
  {
    "text": "safely automate changes to our database and allow that to automation strategy to",
    "start": "301720",
    "end": "307450"
  },
  {
    "text": "be able to handle any kind of situation we throw at it now I see two main",
    "start": "307450",
    "end": "312550"
  },
  {
    "text": "approaches one I vastly prefer and one that other people prefer for some reason and those are desired state",
    "start": "312550",
    "end": "318370"
  },
  {
    "text": "configuration or DSC and migrations there's a lot of tools out there for a desired state configuration or DSC one",
    "start": "318370",
    "end": "325780"
  },
  {
    "text": "of the more popular ones in the Microsoft world is the database projects inside of Visual Studio so you say right click create database project another",
    "start": "325780",
    "end": "332980"
  },
  {
    "text": "very popular one is from Red Gate which is sequel compare and the general idea behind design state configuration is you",
    "start": "332980",
    "end": "340750"
  },
  {
    "text": "have the state of word as today and you want it to get to the state that you want it to be and so you you you you",
    "start": "340750",
    "end": "347080"
  },
  {
    "text": "picture out here's the state I want it to be and then some tool takes the diff between those two things and tries to",
    "start": "347080",
    "end": "353320"
  },
  {
    "text": "figure out how to take your sketch or the existing state in production and then get that migrated from what you're",
    "start": "353320",
    "end": "359470"
  },
  {
    "text": "telling it it needs to be so it needs to be able to be smart enough to be able to detect all the different changes that",
    "start": "359470",
    "end": "364600"
  },
  {
    "text": "you've made generate that script on the fly and then be able to actually deploy it out there now I've used those tools",
    "start": "364600",
    "end": "371010"
  },
  {
    "text": "quite a bit and they are very intelligent smart tools especially with the Redgate tools they're just like",
    "start": "371010",
    "end": "376600"
  },
  {
    "text": "absolutely amazing and what they can do but the problem is that they introduce the possibility of failure because it",
    "start": "376600",
    "end": "382270"
  },
  {
    "text": "can't detect every single kind of change that you could that you could throw at it we have situations where we're not",
    "start": "382270",
    "end": "388870"
  },
  {
    "text": "just migrating schema we're also migrating data at the same time and those kinds of tools just aren't smart",
    "start": "388870",
    "end": "394840"
  },
  {
    "text": "enough or don't allow you to be able to say ok when you perform this kind of upgrade also run these extra sort of the",
    "start": "394840",
    "end": "401110"
  },
  {
    "text": "things at the same time and oftentimes what you won't know about the need to have a manual intervention until you",
    "start": "401110",
    "end": "407249"
  },
  {
    "text": "actually try to run the tool and so what I want to have happen though is a completely automated process for my",
    "start": "407249",
    "end": "412889"
  },
  {
    "text": "deployment from n2n application and database and if it's some tool out there that we're using that introduces the",
    "start": "412889",
    "end": "419549"
  },
  {
    "text": "possibility of needing manual intervention well then that kind of destroys the the whole idea of continuous delivery where I don't have",
    "start": "419549",
    "end": "426089"
  },
  {
    "text": "any kind of human involved in that process now they're probably already out there right now that I have had success",
    "start": "426089",
    "end": "431639"
  },
  {
    "text": "with these tools and I'm not telling you not to use those but anytime I have one of these tools that requires some kind",
    "start": "431639",
    "end": "437279"
  },
  {
    "text": "of human intervention we can end up in situations like this we're like okay we got this existing thing that looks okay",
    "start": "437279",
    "end": "444449"
  },
  {
    "text": "but something went wrong and now a human intervened and here's what we end up with so these tools aren't perfect for",
    "start": "444449",
    "end": "451769"
  },
  {
    "text": "automating change detection and deployments they're very very very good but they're not perfect and anything that's not perfect there's could require",
    "start": "451769",
    "end": "459119"
  },
  {
    "text": "human intervention is that possibility that something can get screwed up I also find that the further that the further",
    "start": "459119",
    "end": "466259"
  },
  {
    "text": "the drift the much more difficult these tools have to do with it and I've been bitten encountered situations where",
    "start": "466259",
    "end": "471269"
  },
  {
    "text": "sometimes I'm deploying some system out to some remote environment whether it's some remote location or something that's",
    "start": "471269",
    "end": "477059"
  },
  {
    "text": "just really physically hard to get to if I'd systems were you have to get in a helicopter to be able to get out into",
    "start": "477059",
    "end": "482969"
  },
  {
    "text": "the middle of the Gulf to be able to take your thumb drive stick it in and perform the upgrade and no one's had",
    "start": "482969",
    "end": "488009"
  },
  {
    "text": "been on that helicopter for two years and so it's been a very long time since I've done any kind of upgrade so in",
    "start": "488009",
    "end": "493499"
  },
  {
    "text": "these kinds of automated tools that just kind of look at the before and after and try to figure it out on the fly really",
    "start": "493499",
    "end": "499889"
  },
  {
    "text": "fall down in cases where there could be a long time between my different deployments so that's where database my",
    "start": "499889",
    "end": "506159"
  },
  {
    "text": "creations come into play and database migrations instead of me having like a before-and-after picture and just",
    "start": "506159",
    "end": "511379"
  },
  {
    "text": "figuring it out on the fly instead I explicitly tell the tool these are the steps I want you to perform to",
    "start": "511379",
    "end": "517589"
  },
  {
    "text": "get your database from one from one version to the next and very often what",
    "start": "517589",
    "end": "523349"
  },
  {
    "text": "we'll do is include both of those things together we'll include the data changes necessary to be able to change the",
    "start": "523349",
    "end": "530370"
  },
  {
    "text": "application and whatever schema changes are necessary to be able to perform the migration and those two things together",
    "start": "530370",
    "end": "536519"
  },
  {
    "text": "then are part of that single single source control commit so I know in my source",
    "start": "536519",
    "end": "541860"
  },
  {
    "text": "control at any point in time exactly what version my database is up against so with this sort of system it's not",
    "start": "541860",
    "end": "548730"
  },
  {
    "text": "just like I can go back and time to see what the database looks like at here but I can have a database that as many many",
    "start": "548730",
    "end": "554880"
  },
  {
    "text": "versions out of dates and the migrations are just applied one at a time until that database is finally at the version",
    "start": "554880",
    "end": "560670"
  },
  {
    "text": "that I expect it to be so for these migration tools to work they need three things they need a way to capture the",
    "start": "560670",
    "end": "567570"
  },
  {
    "text": "changes that you want to perform so Yoon somebody to describe the changes that you want to make on the database they",
    "start": "567570",
    "end": "572880"
  },
  {
    "text": "need a way to then apply those changes on the target database and finally they need have some way to remember the",
    "start": "572880",
    "end": "579090"
  },
  {
    "text": "changes that you've made to ensure that I don't accidentally make the same change twice or somehow get out of whack",
    "start": "579090",
    "end": "585180"
  },
  {
    "text": "or out of date with the database I'm trying to effect no database migrations",
    "start": "585180",
    "end": "590310"
  },
  {
    "text": "have been around for quite a long time I saw them like kind of simultaneously invented about the same time but you see",
    "start": "590310",
    "end": "595950"
  },
  {
    "text": "a lot of agile teams and processes really center around database migrations as the safest way to be able to take one",
    "start": "595950",
    "end": "602760"
  },
  {
    "text": "database from one version to the next now I'm a dotnet developer and we got",
    "start": "602760",
    "end": "608310"
  },
  {
    "text": "migrations basically last I guess like everything else in the world and some of the tools we see out there are pretty",
    "start": "608310",
    "end": "614130"
  },
  {
    "text": "popular one of them is entity framework migrations anybody framework migrations is a code based migration tool that is",
    "start": "614130",
    "end": "621420"
  },
  {
    "text": "there's some kind of DSL or domain-specific language that I used to describe the change I want in this case",
    "start": "621420",
    "end": "627600"
  },
  {
    "text": "it's just c-sharp code and although the popular migration tools are like this like rails migrations for Ruby on Rails",
    "start": "627600",
    "end": "632970"
  },
  {
    "text": "is a fairly similar kind of concept Django has a similar kind of thing as well the problem is this is entity",
    "start": "632970",
    "end": "640560"
  },
  {
    "text": "framework migrations right and in order to get migrations approved I have to talk to the database administrator and",
    "start": "640560",
    "end": "646350"
  },
  {
    "text": "DBAs love ORM z-- right and what they",
    "start": "646350",
    "end": "651780"
  },
  {
    "text": "really love is like hey this this tool I hate there's another tool that's completely also hide the sequel that",
    "start": "651780",
    "end": "657900"
  },
  {
    "text": "you're intending to run at the most important time which is deployment and so I've never actually gotten this kind",
    "start": "657900",
    "end": "664350"
  },
  {
    "text": "of migration strategy ever approved by any kind of DBA so this is not very DBA",
    "start": "664350",
    "end": "670590"
  },
  {
    "text": "friendly now one tool that is quite DBA friendly is a red gate tool called sequel change",
    "start": "670590",
    "end": "676450"
  },
  {
    "text": "automation this is the third different name they've had for this tool but it is a complete change automation migration",
    "start": "676450",
    "end": "682870"
  },
  {
    "text": "utility it allows you both to use the other kind of red gate tools behind the scenes to figure out what schema changes",
    "start": "682870",
    "end": "689350"
  },
  {
    "text": "are have happened and then does like your normal kind of migration process to",
    "start": "689350",
    "end": "695230"
  },
  {
    "text": "be able to push it out into production I've also used this in a couple clients as well the big problem we saw with this",
    "start": "695230",
    "end": "701140"
  },
  {
    "text": "though that's not very wallet friendly because they don't sell that thing by itself and so every single person on the",
    "start": "701140",
    "end": "707530"
  },
  {
    "text": "team needs that that like the most expensive red gate license I mean I love their tooling but not everyone needs to",
    "start": "707530",
    "end": "712960"
  },
  {
    "text": "pay like that much money for just to run migrations and so although it's very a",
    "start": "712960",
    "end": "718810"
  },
  {
    "text": "very robust tool it's I still have a very hard time with my clients trying to justify the entire sequel tool belt for",
    "start": "718810",
    "end": "725350"
  },
  {
    "text": "every single person on the team so with those two options we much prefer something that is that is DBA friendly",
    "start": "725350",
    "end": "732220"
  },
  {
    "text": "and also very easy to automate it's the tool that I use is not a one called roundhouse now around house the reason",
    "start": "732220",
    "end": "739600"
  },
  {
    "text": "why I like it is one its sequel centric so the scripts that you write are sequel not like some other DSL that gets",
    "start": "739600",
    "end": "746320"
  },
  {
    "text": "translated in sequel and so a lot of times we pair up DBAs with our developers to actually author those",
    "start": "746320",
    "end": "752500"
  },
  {
    "text": "sequel scripts for us like it's not really that hard to write DML statements but they may be able to author them in a",
    "start": "752500",
    "end": "758200"
  },
  {
    "text": "more efficient manner or maybe they have some other things they have to do as part of the migration process it has",
    "start": "758200",
    "end": "764020"
  },
  {
    "text": "lots of dotnet lots of a database support so we've used it for pretty much anything we can throw it whether it's",
    "start": "764020",
    "end": "769150"
  },
  {
    "text": "sequel server sequel a zero or whole my sequel Postgres it just supports all",
    "start": "769150",
    "end": "774940"
  },
  {
    "text": "those different kind of things and because it's based on Dianetics cross-platform so I can run it as part of a Linux build a Mac build or my",
    "start": "774940",
    "end": "782110"
  },
  {
    "text": "windows build as well so before we get too far into there I want to take a step",
    "start": "782110",
    "end": "787660"
  },
  {
    "text": "back and say there's there's one step of the process we want to make sure we still have as part of that which is the",
    "start": "787660",
    "end": "792730"
  },
  {
    "text": "very first part of this process which is the developer experience we want to make",
    "start": "792730",
    "end": "798010"
  },
  {
    "text": "sure that they're involved in the entire continuous integration process so what things do we need to put in place to",
    "start": "798010",
    "end": "804580"
  },
  {
    "text": "enable to have a robust robust continuous integration process and big thing we're",
    "start": "804580",
    "end": "809960"
  },
  {
    "text": "trying to do here is allow the developer to safely make changes to the database be able to run and test that locally",
    "start": "809960",
    "end": "816590"
  },
  {
    "text": "before they actually push it out to a CI environment or out to production and the",
    "start": "816590",
    "end": "822470"
  },
  {
    "text": "big thing we want to do here is make sure that every single environment has its own logical database one of the",
    "start": "822470",
    "end": "827810"
  },
  {
    "text": "things I see developers often do is like they have like the database which is the big monolithic database that everyone",
    "start": "827810",
    "end": "832940"
  },
  {
    "text": "connects to and they had like these weird replicated versions that everyone still tries to connect and the reforms I",
    "start": "832940",
    "end": "838220"
  },
  {
    "text": "see with that approach is it's very hard to make sure that you don't accidentally overwrite someone else's changes so one",
    "start": "838220",
    "end": "844400"
  },
  {
    "text": "of these I try to do is to make sure that every single developer has their own individual local dev database and a",
    "start": "844400",
    "end": "851990"
  },
  {
    "text": "local test database and by ensuring that we have isolated databases per individual developer we make sure that",
    "start": "851990",
    "end": "858380"
  },
  {
    "text": "the Dover can make those changes in isolation before they even commit the code before it actually goes out the",
    "start": "858380",
    "end": "863780"
  },
  {
    "text": "door so want to show a quick demo of this just to see what it looks like to have a local database running with my",
    "start": "863780",
    "end": "870500"
  },
  {
    "text": "individual developer somewhere you go ahead and stop and switch over to Visual",
    "start": "870500",
    "end": "876290"
  },
  {
    "text": "Studio okay so what I've got here is just a an",
    "start": "876290",
    "end": "882350"
  },
  {
    "text": "application but this application has an actual database behind the scenes so we we can run it we can see it's got all",
    "start": "882350",
    "end": "888320"
  },
  {
    "text": "this like actual model behind the scenes and what I want to do is to make some kind of change to this application so in",
    "start": "888320",
    "end": "895820"
  },
  {
    "text": "this case it's like a simple if I want to make a simple change something like just adding a field to the screen I won't have something that actually means",
    "start": "895820",
    "end": "902570"
  },
  {
    "text": "that I need to have some kind of database change along with that as well okay so probably the easiest thing to do",
    "start": "902570",
    "end": "912260"
  },
  {
    "text": "is just add some fields to one of these items so what I'd like to do is take one of the models and just add some property",
    "start": "912260",
    "end": "918950"
  },
  {
    "text": "to here what I want to do is find out how easy or difficult it is for me to just add some field to something that",
    "start": "918950",
    "end": "925580"
  },
  {
    "text": "gets persisted and then all the different places that need to happen as part of that so I've got here just you",
    "start": "925580",
    "end": "931790"
  },
  {
    "text": "know just this is a just one of the Microsoft sample applications that I borrow because it's easier for me to",
    "start": "931790",
    "end": "939050"
  },
  {
    "text": "just use what's already there I don't do something like let's add something like pet name to this property or to this",
    "start": "939050",
    "end": "946610"
  },
  {
    "text": "class so that's not going to be sufficient for me to have this application actually run right we have",
    "start": "946610",
    "end": "952550"
  },
  {
    "text": "to we have to still do things like add fields to the screens so let's do that on the page where I see all the list of",
    "start": "952550",
    "end": "959990"
  },
  {
    "text": "students I'll go add their pet name now see it on",
    "start": "959990",
    "end": "967459"
  },
  {
    "text": "the screen and I'll need to add it to the list of",
    "start": "967459",
    "end": "975200"
  },
  {
    "text": "results on the screen as well so we'll go ahead a pet name there and now I can",
    "start": "975200",
    "end": "980779"
  },
  {
    "text": "see the lists of pets for this ended individual person so if I ran this",
    "start": "980779",
    "end": "988100"
  },
  {
    "text": "though right now the application still wouldn't work because the application doesn't know that I've added this field and that should be backed by something",
    "start": "988100",
    "end": "994220"
  },
  {
    "text": "in the database as well and so that's where migrations come into play so the tool that I'm using roundhouse allows me",
    "start": "994220",
    "end": "1001240"
  },
  {
    "text": "to author sequel scripts and in this case I'm just going to put them in a special folder called up and up are all",
    "start": "1001240",
    "end": "1009310"
  },
  {
    "text": "the scripts - well to upgrade the database from one version to the next so I'm just going to duplicate my older one",
    "start": "1009310",
    "end": "1016360"
  },
  {
    "text": "and sheet and I'll call it something special and pet name - student and as",
    "start": "1016360",
    "end": "1030010"
  },
  {
    "text": "part of this I will include the DML to be able to describe how I should change this table so in this case I'll say I",
    "start": "1030010",
    "end": "1036910"
  },
  {
    "text": "need to add pet name and we'll just leave it as in var car 100 because why not",
    "start": "1036910",
    "end": "1043110"
  },
  {
    "text": "okay now as part of this though some people may not have a pet name already and so I can decide at this point in",
    "start": "1043110",
    "end": "1050230"
  },
  {
    "text": "time do I also want to include any kind of data migrations to take an account that this information may not already",
    "start": "1050230",
    "end": "1056320"
  },
  {
    "text": "exist so as part of this I can also do something like update person",
    "start": "1056320",
    "end": "1064140"
  },
  {
    "text": "person set that name equal to I don't",
    "start": "1065970",
    "end": "1075450"
  },
  {
    "text": "know Roger okay so in addition to me",
    "start": "1075450",
    "end": "1083340"
  },
  {
    "text": "actually changing the database schema I'm also going to be filling in some",
    "start": "1083340",
    "end": "1088650"
  },
  {
    "text": "information along with that process so now I need to actually run these",
    "start": "1088650",
    "end": "1095100"
  },
  {
    "text": "migrations now this is where it comes to like what what makes most sense for the individual team now some of the tools",
    "start": "1095100",
    "end": "1101159"
  },
  {
    "text": "out there like EF migrations have powershell commandlets do things i've also seen some wonky things like the",
    "start": "1101159",
    "end": "1106350"
  },
  {
    "text": "first time you run the application it'll also try to migrate the database but again that's one of those things that my DBAs will not allow me to do",
    "start": "1106350",
    "end": "1112830"
  },
  {
    "text": "like migrate the database and make DML changes when i just run the thing they want to be able to like I want to know",
    "start": "1112830",
    "end": "1118409"
  },
  {
    "text": "exactly what's gonna be run and I want to be to have the ability to try that out myself before you just actually ship this out into production",
    "start": "1118409",
    "end": "1125150"
  },
  {
    "text": "alright so to do so I'm gonna go ahead and run my local build and as part of my",
    "start": "1125150",
    "end": "1131610"
  },
  {
    "text": "local build it's not only going to like restore compile run and run tests it is",
    "start": "1131610",
    "end": "1139289"
  },
  {
    "text": "also going to run my overall migrations so we'll go ahead and let this go and",
    "start": "1139289",
    "end": "1144600"
  },
  {
    "text": "and watch it do the the migrations thing and while that's going I'm going to pop open the actual script itself so this is",
    "start": "1144600",
    "end": "1153510"
  },
  {
    "text": "my build script and one of the parts of my build script I have as part of kind",
    "start": "1153510",
    "end": "1160620"
  },
  {
    "text": "of doing the initial installation is installing this global tool for round house so round house comes in a variety of",
    "start": "1160620",
    "end": "1166919"
  },
  {
    "text": "different formats and one of the ways you can use it is with a dinette global tool so this way I say go ahead and up",
    "start": "1166919",
    "end": "1172770"
  },
  {
    "text": "star update which also will install it if it's not there this tool dotnet - round house and then",
    "start": "1172770",
    "end": "1179429"
  },
  {
    "text": "from there I can use an RH command let me bump up the font way bit there we go",
    "start": "1179429",
    "end": "1188220"
  },
  {
    "text": "in that round house command I'm telling it to migrate each individual database",
    "start": "1188220",
    "end": "1194010"
  },
  {
    "text": "that I'm interested in so the first one is going to do is migrate my local dev database",
    "start": "1194010",
    "end": "1199299"
  },
  {
    "text": "so that's that initial one right there and I tell the folder in which to look for the actual and right migration",
    "start": "1199299",
    "end": "1204519"
  },
  {
    "text": "scripts which is this app data folder and then finally I tell it what to connect to so I'm saying go ahead and",
    "start": "1204519",
    "end": "1210999"
  },
  {
    "text": "connect to ms local DB that would be whatever you want it to be locally and",
    "start": "1210999",
    "end": "1216119"
  },
  {
    "text": "then for my test database I do something a little bit different my Testament database actually drop it",
    "start": "1216119",
    "end": "1221889"
  },
  {
    "text": "and recreate it every single time and the reason why I'm doing this is just to ensure that I don't have any inadvertent bugs that only show up in my scripts if",
    "start": "1221889",
    "end": "1229360"
  },
  {
    "text": "I migrate versus do a new one from scratch so this is just kind of a backdrop for me to make sure that I",
    "start": "1229360",
    "end": "1236049"
  },
  {
    "text": "haven't screwed anything up with my script okay it looks like my build succeeded and if I scroll up just a",
    "start": "1236049",
    "end": "1243460"
  },
  {
    "text": "little bit we'll see down here it's",
    "start": "1243460",
    "end": "1248649"
  },
  {
    "text": "running those two scripts against my local database for the test one I scroll up a little bit more will see that it",
    "start": "1248649",
    "end": "1256359"
  },
  {
    "text": "actually skipped the previous script that had already run and it is running",
    "start": "1256359",
    "end": "1261850"
  },
  {
    "text": "the second one that is actually against that that is new and I just created right here so behind the scenes that's",
    "start": "1261850",
    "end": "1270730"
  },
  {
    "text": "like the stupidest thing that could possibly work but it has some more some more intelligent it's part of it so one",
    "start": "1270730",
    "end": "1275769"
  },
  {
    "text": "of the things you can run into is a developer changing a script which is a bad idea so I've got one over here and",
    "start": "1275769",
    "end": "1281139"
  },
  {
    "text": "say actually you know what I didn't like Roger we want to have like you know no pet sorry",
    "start": "1281139",
    "end": "1287999"
  },
  {
    "text": "right like oh we made a mistake with our script let's go ahead and change that if I were to run this again we're actually",
    "start": "1287999",
    "end": "1295809"
  },
  {
    "text": "gonna get an error because I've changed a script that should only run one time that's something that important that",
    "start": "1295809",
    "end": "1302169"
  },
  {
    "text": "migration utilities need up taking account is if migration scripts are only to be able to run in one direction if",
    "start": "1302169",
    "end": "1308409"
  },
  {
    "text": "there's something that someone changed as part of that script then I don't know what what to do and",
    "start": "1308409",
    "end": "1314080"
  },
  {
    "text": "it's just gonna go ahead and blow up and say up you you've you've done something to change the script and now I can't tell what I'm supposed to do and you",
    "start": "1314080",
    "end": "1321190"
  },
  {
    "text": "need to go ahead and fix that and the way it does this is pretty straightforward as part of running the migrations again",
    "start": "1321190",
    "end": "1329950"
  },
  {
    "text": "it's like the stupidest thing that could possibly work what it'll do is every single script that it runs it just has another",
    "start": "1329950",
    "end": "1336220"
  },
  {
    "text": "database table that records all the scripts that you've created and so as part of that not just including the",
    "start": "1336220",
    "end": "1342639"
  },
  {
    "text": "script name is a hash of the file itself so if you change that file and screw it",
    "start": "1342639",
    "end": "1349240"
  },
  {
    "text": "up the hash changes and that's how it detects that you've screwed something up and now I need to blow up and fix it",
    "start": "1349240",
    "end": "1355710"
  },
  {
    "text": "so let's fix that let's go back to where you were Roger and everything should",
    "start": "1355710",
    "end": "1362980"
  },
  {
    "text": "work again hopefully now one of the",
    "start": "1362980",
    "end": "1369190"
  },
  {
    "text": "things we wanted to do is part of local to continuous integration were tests as well so in order to show one quick test",
    "start": "1369190",
    "end": "1376029"
  },
  {
    "text": "to show how you can still use a local test database to make sure that everything in math location runs",
    "start": "1376029",
    "end": "1381669"
  },
  {
    "text": "successfully so as part of this one we've got some tests to edit student information and we'll go through the",
    "start": "1381669",
    "end": "1387789"
  },
  {
    "text": "whole thing but one of the things I did want to highlight as part of running this test there's a lot of different",
    "start": "1387789",
    "end": "1393250"
  },
  {
    "text": "ways I see folks try to run integration tests to make sure that my application will actually run successfully in",
    "start": "1393250",
    "end": "1399250"
  },
  {
    "text": "production one of these I like to do though is to ensure that that integration test matches as much as",
    "start": "1399250",
    "end": "1405010"
  },
  {
    "text": "possible how the user actually interacts with this application of production so instead of",
    "start": "1405010",
    "end": "1410830"
  },
  {
    "text": "doing things like rolling back transactions or weird things like that this integration test will connect to an",
    "start": "1410830",
    "end": "1416559"
  },
  {
    "text": "actual live database it will perform a series of actions and each ones of these actions each one of these actions like",
    "start": "1416559",
    "end": "1423250"
  },
  {
    "text": "here and here those are actually full round-trip",
    "start": "1423250",
    "end": "1428580"
  },
  {
    "text": "transactions to ensure that my integration test matches as much as possible what we see in production with",
    "start": "1428580",
    "end": "1435039"
  },
  {
    "text": "a real user using this application so by the time my my tests succeed then I",
    "start": "1435039",
    "end": "1441220"
  },
  {
    "text": "should have the greatest amount of confidence that my application is successful because I've made the change locally I've got a local test database",
    "start": "1441220",
    "end": "1447519"
  },
  {
    "text": "it runs against it as if it would be in production and then the build is green",
    "start": "1447519",
    "end": "1453299"
  },
  {
    "text": "okay so I'm going ahead and commit these changes favorite pet name we didn't",
    "start": "1453299",
    "end": "1463240"
  },
  {
    "text": "actually run the application let's look let's do that let's run this and see if we can actually see the pet names show up here",
    "start": "1463240",
    "end": "1471330"
  },
  {
    "text": "now I think I was supposed to actually write a test that fails and do the whole TD dance but I don't really feel like",
    "start": "1473910",
    "end": "1479140"
  },
  {
    "text": "doing that so we're just gonna go you know we'll just do it live here whatever",
    "start": "1479140",
    "end": "1484890"
  },
  {
    "text": "so I filled it with in filled it with some dummy data so if I go to the list",
    "start": "1487500",
    "end": "1492700"
  },
  {
    "text": "of students we should see a new column show up where they're where their pet name is over there name of Roger I did",
    "start": "1492700",
    "end": "1499750"
  },
  {
    "text": "forget to put the header up there but I can fix that later all right so let's go ahead and push those changes up and talk",
    "start": "1499750",
    "end": "1507400"
  },
  {
    "text": "about the next step in the process so",
    "start": "1507400",
    "end": "1514720"
  },
  {
    "text": "I've made my changes everything looks good locally I authored my migration script I pushed up the changes well the",
    "start": "1514720",
    "end": "1521530"
  },
  {
    "text": "next step is going to be my build step to build my changes and run those",
    "start": "1521530",
    "end": "1526750"
  },
  {
    "text": "changes and those tests against again some kind of local database now this is",
    "start": "1526750",
    "end": "1531940"
  },
  {
    "text": "the kind of difficult part I find and it really depends on what my application is actually doing so in some cases where",
    "start": "1531940",
    "end": "1538060"
  },
  {
    "text": "I'm in a Greenfield application it's relatively easy for me to build out a kind of clean local test database in my",
    "start": "1538060",
    "end": "1544330"
  },
  {
    "text": "CI environment but that's not always the case in some cases we have some kind of shared test database that chews across",
    "start": "1544330",
    "end": "1551080"
  },
  {
    "text": "all of my test runs because maybe it's filled with some production like data that I have to run against to ensure",
    "start": "1551080",
    "end": "1556570"
  },
  {
    "text": "that my system runs against that kind of real-world data so that part kind of depends but I do find that most of the",
    "start": "1556570",
    "end": "1563110"
  },
  {
    "text": "CI most of the CI tools out there do have the ability to run a some kind of",
    "start": "1563110",
    "end": "1569020"
  },
  {
    "text": "pre-built image that has databases on there that you can run against all right",
    "start": "1569020",
    "end": "1574480"
  },
  {
    "text": "so let's see how that works and again I haven't switched this over to github",
    "start": "1574480",
    "end": "1580510"
  },
  {
    "text": "actions like I guess I was supposed to use so this is still just running against Azure pipelines so it's trying",
    "start": "1580510",
    "end": "1589630"
  },
  {
    "text": "to stop that and I'm gonna switch over to Azure pipelines",
    "start": "1589630",
    "end": "1598620"
  },
  {
    "text": "okay hopefully given kin of actions to be faster than this because take a little bit of time for my CI bill to run",
    "start": "1599780",
    "end": "1607130"
  },
  {
    "text": "but I have to have so like what what does my CI build need to actually look like between how it looks locally versus",
    "start": "1607130",
    "end": "1614100"
  },
  {
    "text": "how it works in running in a CI tool so what I like to do is try to make that",
    "start": "1614100",
    "end": "1619470"
  },
  {
    "text": "make my local build as much as possible match what I would expect to see in the CI environment so instead of my CI",
    "start": "1619470",
    "end": "1626310"
  },
  {
    "text": "environment having all these different steps to perform instead what I'll do is let me go ahead and show the template",
    "start": "1626310",
    "end": "1632790"
  },
  {
    "text": "for this the build that it's going to",
    "start": "1632790",
    "end": "1640890"
  },
  {
    "text": "run is actually going to be the exact same build script that I would run locally that way I can make sure that if",
    "start": "1640890",
    "end": "1646950"
  },
  {
    "text": "something goes wrong with my CI build well I'm running the exact same script locally so it should be very easy to do",
    "start": "1646950",
    "end": "1652380"
  },
  {
    "text": "to debug any kind of differences or problems I may run into this is kind of a controversial topic I don't really",
    "start": "1652380",
    "end": "1658110"
  },
  {
    "text": "care that much one way or the other just I want to make sure that if something goes wrong that I have some way to figure out how to fix it now the only",
    "start": "1658110",
    "end": "1665760"
  },
  {
    "text": "big difference is I need to have some way to connect to test databases when I run my script and so I might have some",
    "start": "1665760",
    "end": "1672090"
  },
  {
    "text": "extra step of like creating a specific test database instances or connecting to something that I've already built out in",
    "start": "1672090",
    "end": "1678360"
  },
  {
    "text": "that environment all right let's see if this thing actually finished nope still",
    "start": "1678360",
    "end": "1686040"
  },
  {
    "text": "going of course so the build script that we've got going is fairly strobe for",
    "start": "1686040",
    "end": "1694530"
  },
  {
    "text": "it's basically a bunch of dotnet commands it's just dotnet clean build my database migrations test and then",
    "start": "1694530",
    "end": "1702150"
  },
  {
    "text": "publish now the last piece in this puzzle is going to be how do I take the",
    "start": "1702150",
    "end": "1709470"
  },
  {
    "text": "migration scripts that I have created and then be able to deploy them out into different environments and so that's my",
    "start": "1709470",
    "end": "1716430"
  },
  {
    "text": "last step in the process here but in my corporate environments I don't just have one environment I'm deploying to I",
    "start": "1716430",
    "end": "1721560"
  },
  {
    "text": "typically have multiple environments in this case I've got like a dev and production one and so there's not just",
    "start": "1721560",
    "end": "1726750"
  },
  {
    "text": "like a final step of just push out the changes I need to be able to automate the deployment out into each of",
    "start": "1726750",
    "end": "1732830"
  },
  {
    "text": "these individual environments so this space I had to figure out okay deploying the application is relatively easy but",
    "start": "1732830",
    "end": "1738890"
  },
  {
    "text": "how do we how do I deploy the database migration changes how do I deploy and",
    "start": "1738890",
    "end": "1744470"
  },
  {
    "text": "run that tool against these different environments so go ahead and show how we",
    "start": "1744470",
    "end": "1754370"
  },
  {
    "text": "do that so the first piece of the puzzle is at the end of a build there's going",
    "start": "1754370",
    "end": "1760670"
  },
  {
    "text": "to be some kind of artifact created so as part of that artifact I can include the sequel change scripts as part of my",
    "start": "1760670",
    "end": "1767960"
  },
  {
    "text": "overall deployment and so in my application what I've done is I just stuck my sequel scripts in this special",
    "start": "1767960",
    "end": "1776060"
  },
  {
    "text": "app data folder and I know that's a special folder because as your app services recognizes that as a special",
    "start": "1776060",
    "end": "1781370"
  },
  {
    "text": "folder where it won't like allow any kind of access to so it seems like a safe place to go ahead and put my migration scripts and then as part of",
    "start": "1781370",
    "end": "1788450"
  },
  {
    "text": "the deployment in the build at the bottom here whenever it publishes out",
    "start": "1788450",
    "end": "1795140"
  },
  {
    "text": "the application I'm going to copy over all the tools I need in order to actually deploy this system so I've got",
    "start": "1795140",
    "end": "1802660"
  },
  {
    "text": "this round house the round house executable tool and all of the scripts",
    "start": "1802660",
    "end": "1809600"
  },
  {
    "text": "that I've included so all those things then get copied out into into and to the",
    "start": "1809600",
    "end": "1816770"
  },
  {
    "text": "deployed folder so when you publish the application it's got both the scripts and the running application that it can",
    "start": "1816770",
    "end": "1822080"
  },
  {
    "text": "run in the deployment so let's see if that actually finished it should be",
    "start": "1822080",
    "end": "1828710"
  },
  {
    "text": "finished pretty soon let's see so last one took five minutes and this one is",
    "start": "1828710",
    "end": "1835010"
  },
  {
    "text": "going on five minutes so it should be done pretty soon but let's go look at the log output to see what we can see here - oh it did finish all right so",
    "start": "1835010",
    "end": "1843860"
  },
  {
    "text": "yeah as part of the build we can see down here somewhere down here it should see up there's the tool that's running",
    "start": "1843860",
    "end": "1849470"
  },
  {
    "text": "our migrations against MS sequel local DB so again this matches almost exactly what we have in our local environments",
    "start": "1849470",
    "end": "1856130"
  },
  {
    "text": "is going to be in our CI environment as well again anything I can eliminate between differences in those environments just ensures that it can",
    "start": "1856130",
    "end": "1862190"
  },
  {
    "text": "catch those failures before I even commit the code out okay the next part is going",
    "start": "1862190",
    "end": "1868550"
  },
  {
    "text": "to be actually pushing this code out in projection so I've got two applications running I've got the dev let's see if",
    "start": "1868550",
    "end": "1876980"
  },
  {
    "text": "it's actually released so it's running the deployment in progress and behind",
    "start": "1876980",
    "end": "1886940"
  },
  {
    "text": "the scenes what is this doing edit pipeline it's triggering off that's",
    "start": "1886940",
    "end": "1893570"
  },
  {
    "text": "turning off the release and it's going to automatically deploy out into my dev environment but the dev environment is",
    "start": "1893570",
    "end": "1899450"
  },
  {
    "text": "going to be to individual tasks for its deployment the first one is going to be deploying the azure app service that's",
    "start": "1899450",
    "end": "1905900"
  },
  {
    "text": "like just straightforward as your app service but the second part is going to be migrating the database and migrating",
    "start": "1905900",
    "end": "1911210"
  },
  {
    "text": "the database is just going to be a PowerShell script that is going to run the round house tool so the round house",
    "start": "1911210",
    "end": "1917450"
  },
  {
    "text": "tool just use the same kinds of arguments that I would use in my local environments I use here as well with the",
    "start": "1917450",
    "end": "1922820"
  },
  {
    "text": "slight change that I'm going to make sure that the the connection string it's going to use to connect to the database is passed in via secret as opposed to",
    "start": "1922820",
    "end": "1930260"
  },
  {
    "text": "like hard-coded inside of here so won't sure that because well then you'll be",
    "start": "1930260",
    "end": "1935810"
  },
  {
    "text": "able to see my connection string but it's there trust me that's being passed in right here so as part of that it's",
    "start": "1935810",
    "end": "1943640"
  },
  {
    "text": "running the deployment of my application and running the migration and everything",
    "start": "1943640",
    "end": "1948800"
  },
  {
    "text": "succeeds saw five refresh my dev sites we should see the version update at the bottom and if I go to the list of",
    "start": "1948800",
    "end": "1957020"
  },
  {
    "text": "students know version 50 anyone should see again that's Roger over there on the",
    "start": "1957020",
    "end": "1964250"
  },
  {
    "text": "right and of course I want to now push this out into production then I can go",
    "start": "1964250",
    "end": "1970460"
  },
  {
    "text": "back up to this build alright the release and approve it and",
    "start": "1970460",
    "end": "1977870"
  },
  {
    "text": "now it will actually get it Boyd into production so in this case I do have a",
    "start": "1977870",
    "end": "1983660"
  },
  {
    "text": "manual approval process but the actual deployment itself is 100% automated so",
    "start": "1983660",
    "end": "1989630"
  },
  {
    "text": "with this approach the sequel based approach it ensures that the scripts",
    "start": "1989630",
    "end": "1995780"
  },
  {
    "text": "that I'm running I know exactly what the going to run and exactly the effect is going to have on my target system and so",
    "start": "1995780",
    "end": "2002299"
  },
  {
    "text": "that kind of approach just ensures that I have a I have complete control over exactly how my system is going to get",
    "start": "2002299",
    "end": "2008120"
  },
  {
    "text": "upgraded now that's just kind of like the basic migration stuff but what happens when we kind of turn this up to",
    "start": "2008120",
    "end": "2014659"
  },
  {
    "text": "eleven and really start to do things at a much more massive scale those kinds of",
    "start": "2014659",
    "end": "2020210"
  },
  {
    "text": "scripts that we saw earlier like just alter database add a column those those kinds of things don't don't necessarily",
    "start": "2020210",
    "end": "2026240"
  },
  {
    "text": "work very well once I have a large important system in production so first",
    "start": "2026240",
    "end": "2031789"
  },
  {
    "text": "thing we have to worry about is how do we ensure that if I need to run the script twice that's the the results only",
    "start": "2031789",
    "end": "2039020"
  },
  {
    "text": "happen once how to make sure my scripts are idempotent well sometimes we can rely on the the migration script to be",
    "start": "2039020",
    "end": "2046940"
  },
  {
    "text": "inside of a transaction so some databases support transactional DML that is if something goes wrong it'll",
    "start": "2046940",
    "end": "2053300"
  },
  {
    "text": "actually roll back the changes to your database but not all the time so a roundhouse does run every single script",
    "start": "2053300",
    "end": "2059628"
  },
  {
    "text": "in a transaction but there's some changes that you need to make they cannot be completely combined and set one single transaction and there's some",
    "start": "2059629",
    "end": "2067040"
  },
  {
    "text": "cases like just something went wrong I don't know why and I just have to like fiddle with again and make it run again",
    "start": "2067040",
    "end": "2072679"
  },
  {
    "text": "so one of the things that we can do is do like a check if exists sort of query that is when I run the migration script",
    "start": "2072679",
    "end": "2080888"
  },
  {
    "text": "if it don't just blindly try to make changes but actually check to see if that thing exists first before I",
    "start": "2080889",
    "end": "2086780"
  },
  {
    "text": "actually affect the change so here's an example of looking for a table that exists and for this you kind of have to",
    "start": "2086780",
    "end": "2093800"
  },
  {
    "text": "dig into whatever the the schema definitions and views could be for your",
    "start": "2093800",
    "end": "2099680"
  },
  {
    "text": "individual database so some things support this standard view of information schema some don't what I",
    "start": "2099680",
    "end": "2104810"
  },
  {
    "text": "want to do is just say check to see if the database in this case the table already exists and if it does exist then",
    "start": "2104810",
    "end": "2112190"
  },
  {
    "text": "just like there's nothing to do don't actually run the migration otherwise that doesn't exist so let's do this",
    "start": "2112190",
    "end": "2118160"
  },
  {
    "text": "I can also look at the column information to say well the table exists",
    "start": "2118160",
    "end": "2123290"
  },
  {
    "text": "but I needed to add a new column so I can check the information sceeto schema column table I'm going to do a similar",
    "start": "2123290",
    "end": "2128599"
  },
  {
    "text": "kind of thing with a stored procedure this makes check to see if the store procedure exists and if it doesn't exist",
    "start": "2128599",
    "end": "2134750"
  },
  {
    "text": "then go ahead and perform the migration so looking at the different kinds of",
    "start": "2134750",
    "end": "2142010"
  },
  {
    "text": "migrations that I run through there's basically two kinds of changes I'm making to my database there's ones where",
    "start": "2142010",
    "end": "2148339"
  },
  {
    "text": "it actually affects the the state and the database so it's affecting the DML",
    "start": "2148339",
    "end": "2153560"
  },
  {
    "text": "I'm running is affecting affecting components that actually have some state involved fit or it could be something",
    "start": "2153560",
    "end": "2160010"
  },
  {
    "text": "that's completely stateless that has no state involved in that change whatsoever when I do stateful changes though I do",
    "start": "2160010",
    "end": "2167150"
  },
  {
    "text": "want to ensure that my changes that I'm committing include both schema and the",
    "start": "2167150",
    "end": "2172339"
  },
  {
    "text": "data migrations so if I'm adding columns or things like that then as part of that exact same script I'll include whatever",
    "start": "2172339",
    "end": "2179060"
  },
  {
    "text": "data migrations are going to be necessary along with it and the idea is that if there's something that goes wrong it's just that one commit that",
    "start": "2179060",
    "end": "2185270"
  },
  {
    "text": "includes all the changes as a part of it as opposed to trying to split things up and manage them separately no what about",
    "start": "2185270",
    "end": "2192740"
  },
  {
    "text": "stateless changes these are a bit easier than stateful changes like with the",
    "start": "2192740",
    "end": "2198109"
  },
  {
    "text": "state let's change our stateful change like adding refactoring database tables or adding columns things like that I",
    "start": "2198109",
    "end": "2204050"
  },
  {
    "text": "think those gonna have a pretty big impact but stateless changes should be relatively straightforward to do there's",
    "start": "2204050",
    "end": "2210200"
  },
  {
    "text": "a couple different ways you could approach this these are typically like let's see indexes functions store",
    "start": "2210200",
    "end": "2216380"
  },
  {
    "text": "procedures these are the things that have any kind of state behind the scenes associated with them they're just either",
    "start": "2216380",
    "end": "2221630"
  },
  {
    "text": "they're kind of some kind of procedural logic or something that's on top of your actual State itself so one approach I've",
    "start": "2221630",
    "end": "2228500"
  },
  {
    "text": "seen is they just a drop and create so drop the thing first if it exists and",
    "start": "2228500",
    "end": "2233990"
  },
  {
    "text": "then when you're done just go ahead and create it all over again that way with this drop and create I can run this",
    "start": "2233990",
    "end": "2240140"
  },
  {
    "text": "script multiple times as I'm testing it out locally and then when I get to the actual migration script then it should",
    "start": "2240140",
    "end": "2245300"
  },
  {
    "text": "run successfully there's better ways to do this these days now if you're running sequel 2016 or later or sequel Azure or",
    "start": "2245300",
    "end": "2253070"
  },
  {
    "text": "Hurley postgrads Postgres since forever you have these create or update or create or alter statements so in this",
    "start": "2253070",
    "end": "2259910"
  },
  {
    "text": "case it's it will it will create a new store procedure if it doesn't but if the procedure does exist then",
    "start": "2259910",
    "end": "2266290"
  },
  {
    "text": "we'll just alter this procedure in place so these days",
    "start": "2266290",
    "end": "2271570"
  },
  {
    "text": "hopefully you're running in the you know later version of the database and they can use these kind of statements as well",
    "start": "2271570",
    "end": "2277680"
  },
  {
    "text": "now the way the migration tool treats these scripts around house it has scripts that can run only one",
    "start": "2277680",
    "end": "2285220"
  },
  {
    "text": "time so those are my schema migrations it says basically you can run that one time and you can never change that file",
    "start": "2285220",
    "end": "2291160"
  },
  {
    "text": "ever again but these kinds I can actually run them multiple times so the way that Roundhouse treats us it",
    "start": "2291160",
    "end": "2297580"
  },
  {
    "text": "actually will have a special folder sprach slums indexes where I have these kinds of files in there and instead of",
    "start": "2297580",
    "end": "2304480"
  },
  {
    "text": "me having migrations of the stored procedure over time actually just to define it once in that file and then",
    "start": "2304480",
    "end": "2310000"
  },
  {
    "text": "it's gonna just keep editing the file over and over again the radio gate tool",
    "start": "2310000",
    "end": "2315760"
  },
  {
    "text": "does a similar kind of thing where has migration scripts for DML but for procedures and functions you just you",
    "start": "2315760",
    "end": "2322720"
  },
  {
    "text": "just basically edit those things in place and it will generate the Creator ultra statement for you now there are",
    "start": "2322720",
    "end": "2330670"
  },
  {
    "text": "some kind of exotic refactorings that you can do as part of migrating your schema so we see things like renaming a",
    "start": "2330670",
    "end": "2337660"
  },
  {
    "text": "table typically there's like four depending on the database there's a special way to do that kind of operation",
    "start": "2337660",
    "end": "2343990"
  },
  {
    "text": "so in this case we're gonna use a special stored procedure to rename my table in place so I just use the SP",
    "start": "2343990",
    "end": "2349810"
  },
  {
    "text": "underscore rename stored procedure rename the person table to student in this case now a lot of times I can't",
    "start": "2349810",
    "end": "2359650"
  },
  {
    "text": "easily fit migrations into just like one single step and we especially see this when I start to have lots and lots of",
    "start": "2359650",
    "end": "2366070"
  },
  {
    "text": "data as part of that table and so for those you start to see migration splits out into multiple stages or multiple",
    "start": "2366070",
    "end": "2372820"
  },
  {
    "text": "steps because I can't easily just accomplish that with like one single go I have to split that into multiple steps",
    "start": "2372820",
    "end": "2381090"
  },
  {
    "text": "so what a good example is splitting a column this is by one of the few examples I could actually find like",
    "start": "2381090",
    "end": "2387070"
  },
  {
    "text": "usually you just normalize this from the get-go just you know humor me for a second here let's say I was dumb enough",
    "start": "2387070",
    "end": "2393040"
  },
  {
    "text": "to put the entire name inside of one column and I want to migrate that into having those two names as separate",
    "start": "2393040",
    "end": "2399289"
  },
  {
    "text": "single columns as part of the database hopefully we got some like easy way to do that based on the text as part of it",
    "start": "2399289",
    "end": "2405190"
  },
  {
    "text": "but the way we'll do this is first we want to we want to create those new columns as part of that table so we have",
    "start": "2405190",
    "end": "2411470"
  },
  {
    "text": "execute one statement that will add those two new columns for first-name and lastname the second part will have some kind of",
    "start": "2411470",
    "end": "2418160"
  },
  {
    "text": "migration step that will migrate the data from the existing column into the new sets of columns and then finally",
    "start": "2418160",
    "end": "2423799"
  },
  {
    "text": "we'll clean up after ourselves and remove that previous column or may just",
    "start": "2423799",
    "end": "2431480"
  },
  {
    "text": "delete the column altogether now splitting a table is a little bit more challenging so in this case we've got",
    "start": "2431480",
    "end": "2437930"
  },
  {
    "text": "we've added like more and more columns on top of it that represent additional information and we get to the point",
    "start": "2437930",
    "end": "2443269"
  },
  {
    "text": "where like oh this is this isn't normalized enough so we actually need to split these out into two different tables so this is a little bit more",
    "start": "2443269",
    "end": "2449299"
  },
  {
    "text": "challenging than the previous one where it was just like in place be able to split that one column into two so in",
    "start": "2449299",
    "end": "2456230"
  },
  {
    "text": "this case we have to attack it a little bit separately the first thing we're going to do is create a new schema for those new set",
    "start": "2456230",
    "end": "2463670"
  },
  {
    "text": "that new table that exists over to the side then we'll go ahead and migrate the data from the existing table into that",
    "start": "2463670",
    "end": "2469970"
  },
  {
    "text": "new set of tables and then the last step is then to remove all of those old comments all old columns so it's the",
    "start": "2469970",
    "end": "2476539"
  },
  {
    "text": "same kind of pattern where I create the new schema migrate the data and remove the old stuff as I go through now with",
    "start": "2476539",
    "end": "2484880"
  },
  {
    "text": "all of these kinds of changes there's you're introducing the possibility that",
    "start": "2484880",
    "end": "2490339"
  },
  {
    "text": "your application is actually broken for a split second so you saw previously when I did the deployment I deployed the",
    "start": "2490339",
    "end": "2496670"
  },
  {
    "text": "application in one step and then the second step was in deploying the database migrations but what happens if",
    "start": "2496670",
    "end": "2502700"
  },
  {
    "text": "the first step succeeds and then the second step fails what do i do then well",
    "start": "2502700",
    "end": "2508279"
  },
  {
    "text": "some migration utilities have this concept of up migrations and down migrations",
    "start": "2508279",
    "end": "2513589"
  },
  {
    "text": "but because I'm including both the application change and the sequel",
    "start": "2513589",
    "end": "2519859"
  },
  {
    "text": "scripts inside the same code base to get pushed out at the same time it's not actually easy to perform a down",
    "start": "2519859",
    "end": "2525529"
  },
  {
    "text": "migration if the application has already been deployed so in those cases what I typically handle it is",
    "start": "2525529",
    "end": "2531530"
  },
  {
    "text": "to have a new commit that is going to roll back the previous set of changes to get back into a good known States so and",
    "start": "2531530",
    "end": "2539360"
  },
  {
    "text": "know and those in that kind of manner it's only term is you only roll forward",
    "start": "2539360",
    "end": "2544850"
  },
  {
    "text": "you never roll back will have a new commit the fix is the thing that I just broke and that I can go on from there",
    "start": "2544850",
    "end": "2550630"
  },
  {
    "text": "but these come all into like this this overall umbrella of migrations at a much larger scale so if I can't fit if making",
    "start": "2550630",
    "end": "2560450"
  },
  {
    "text": "these kinds of changes to my database will just bring it down for potentially long amount of time that I can't use the",
    "start": "2560450",
    "end": "2566000"
  },
  {
    "text": "same kind of techniques that I used in much smaller or even much more less user",
    "start": "2566000",
    "end": "2571220"
  },
  {
    "text": "focused sort of systems so the user is not like if I have play the ability to bring the system down at a certain point",
    "start": "2571220",
    "end": "2577460"
  },
  {
    "text": "in time like well we're just gonna go down Friday at midnight where no one's logged in and it's not a big deal well",
    "start": "2577460",
    "end": "2582680"
  },
  {
    "text": "we can do that one of the things they found though is that if you're making if you're making these kinds of migration",
    "start": "2582680",
    "end": "2588740"
  },
  {
    "text": "scripts against the local database that has like no rows in it things go pretty fast if they start to make these changes",
    "start": "2588740",
    "end": "2594830"
  },
  {
    "text": "in production databases that have a lot of data in it then it could take a very very long time and one of the first",
    "start": "2594830",
    "end": "2601310"
  },
  {
    "text": "things that one of the first frustrating things I found was that if I'm making a migration of some schema that's gonna",
    "start": "2601310",
    "end": "2607850"
  },
  {
    "text": "affect a lot of rows and I just hit and it just hits go I have literally no idea",
    "start": "2607850",
    "end": "2613040"
  },
  {
    "text": "how long it's gonna take to complete like there is no progress bar on adding",
    "start": "2613040",
    "end": "2618920"
  },
  {
    "text": "an index to a table with a million rows or billion rows like you're just gonna start churning and then you just gotta",
    "start": "2618920",
    "end": "2624410"
  },
  {
    "text": "wait and wait and wait until the thing finished and sometimes doing those kinds of changes prevent and when anyone else",
    "start": "2624410",
    "end": "2630680"
  },
  {
    "text": "from using the system because they can lock the entire table wired to performance operation so ideally if I'm",
    "start": "2630680",
    "end": "2637010"
  },
  {
    "text": "now finally in production at a large enough scale I want to enable zero downtime changes",
    "start": "2637010",
    "end": "2643040"
  },
  {
    "text": "that as I make changes to my database and application without bringing anything down along the process but to",
    "start": "2643040",
    "end": "2651290"
  },
  {
    "text": "do so is going to be much more challenging and difficult than our",
    "start": "2651290",
    "end": "2656450"
  },
  {
    "text": "normal integration stuff so we actually to think about the changes is going to make figure out the actual impact of those changes and build on a plan of how",
    "start": "2656450",
    "end": "2662570"
  },
  {
    "text": "we're going to affect those changes in production so there's a lot of different techniques",
    "start": "2662570",
    "end": "2667970"
  },
  {
    "text": "out there one of the ones I really like described was from stripe and they described how they do their online migrations at scale and they built all",
    "start": "2667970",
    "end": "2675080"
  },
  {
    "text": "these tools to help do that sort of thing as well but the way you have to do it is with a much more deliberate incremental process where you're not",
    "start": "2675080",
    "end": "2681650"
  },
  {
    "text": "just migrating the schema all once but you go through these very small changes very small steps to be able to get your",
    "start": "2681650",
    "end": "2686990"
  },
  {
    "text": "change out into production so let's say I want to do that change and why I had before which is I have one table with",
    "start": "2686990",
    "end": "2693170"
  },
  {
    "text": "with like five columns and I want to normalize that so that it's going to be two tables well I can't just like just",
    "start": "2693170",
    "end": "2699890"
  },
  {
    "text": "roll out that change all at once because it could be a billion rows that it's affecting all at once and trying to get that in one single like deployment is",
    "start": "2699890",
    "end": "2706640"
  },
  {
    "text": "just going to be too much work so we can break this down into a much more step by step process the first step we're going",
    "start": "2706640",
    "end": "2713570"
  },
  {
    "text": "to do is to perform a dual writing step in this case what we're going to do is",
    "start": "2713570",
    "end": "2718850"
  },
  {
    "text": "modify our application code to instead of just writing to the initial table we're gonna have it right to both data",
    "start": "2718850",
    "end": "2725750"
  },
  {
    "text": "stores at the same time so as I write the information for my alias in one",
    "start": "2725750",
    "end": "2731240"
  },
  {
    "text": "table I'm at the same time going to write that alias and the other table now",
    "start": "2731240",
    "end": "2736700"
  },
  {
    "text": "the challenge with this approach is you have to be very very sure that your gift you found all the right paths in your",
    "start": "2736700",
    "end": "2742460"
  },
  {
    "text": "application and for a lot of legacy legacy systems that I see there's like an untold number of right paths because",
    "start": "2742460",
    "end": "2748790"
  },
  {
    "text": "you know it's legacy system so it's like anyone can change anything at any time or they've tried to just like stuff",
    "start": "2748790",
    "end": "2754790"
  },
  {
    "text": "everything in store procedures and hope that it you know I figured it out there but it's really hard to analyze those kinds of paths so one option I've seen",
    "start": "2754790",
    "end": "2761810"
  },
  {
    "text": "work successfully or us is use the T word which is a trigger feel like every time you write this thing here just go",
    "start": "2761810",
    "end": "2768020"
  },
  {
    "text": "ahead and write it over there as well and when they advantages here is it still participates in the database transaction so ensures that if like",
    "start": "2768020",
    "end": "2774290"
  },
  {
    "text": "something doesn't get written then it can roll the transaction back and both sides of the equation are still going to",
    "start": "2774290",
    "end": "2780020"
  },
  {
    "text": "be okay now this this is kind of a precarious middle step because now I've",
    "start": "2780020",
    "end": "2786140"
  },
  {
    "text": "got two sources of truth so I do want to make sure that I don't have anything except that explicit an integration path that's writing to my second database",
    "start": "2786140",
    "end": "2792710"
  },
  {
    "text": "table and I have to worry about what about all that existing data I've got one row here but what if",
    "start": "2792710",
    "end": "2798230"
  },
  {
    "text": "what if I've got that billion rows of data for all these names and aliases how do i how do I migrate that information",
    "start": "2798230",
    "end": "2804109"
  },
  {
    "text": "for all the kind of back history going on there so the right path only take",
    "start": "2804109",
    "end": "2809240"
  },
  {
    "text": "care of new data so new rights going in yes I can have it go to the other path but for all that existing data I have to",
    "start": "2809240",
    "end": "2814609"
  },
  {
    "text": "have so I just figure out what am I going to do with all this so I need to figure out what is going to be my",
    "start": "2814609",
    "end": "2821480"
  },
  {
    "text": "strategy for getting that data from where it is today to where it needs to be and honestly one of the one of the",
    "start": "2821480",
    "end": "2827180"
  },
  {
    "text": "solutions could be just do nothing like you just don't care about the old data that it's only for new data going forward or you can say I'm going to go",
    "start": "2827180",
    "end": "2833720"
  },
  {
    "text": "ahead and and and copy all the data from the existing database tables into the",
    "start": "2833720",
    "end": "2839180"
  },
  {
    "text": "new tables now this is probably not something you want to do all at once because again if you're trying to do a",
    "start": "2839180",
    "end": "2845000"
  },
  {
    "text": "single update statement from an existing one like where I'm inserting a billion rows that could take absolutely forever",
    "start": "2845000",
    "end": "2850160"
  },
  {
    "text": "so we all often do is try to split that into individual batches now this may take a long time but what I'm trying not",
    "start": "2850160",
    "end": "2856910"
  },
  {
    "text": "to do is have a transaction that's open it's like a week instead if I do like you know a certain set of Records at a",
    "start": "2856910",
    "end": "2862640"
  },
  {
    "text": "time maybe a thousand or ten thousand then I'm reducing this the transactional load on my destination table we want to",
    "start": "2862640",
    "end": "2871100"
  },
  {
    "text": "make sure too that we don't accidentally overwrite data so oftentimes we'll run this a couple times to make sure we",
    "start": "2871100",
    "end": "2876770"
  },
  {
    "text": "didn't miss anything and that's we've we've got all the great data into the right spot okay so now",
    "start": "2876770",
    "end": "2884480"
  },
  {
    "text": "that we've got our right paths figured out which still could take a long time like this step I've seen take like three",
    "start": "2884480",
    "end": "2890840"
  },
  {
    "text": "months to figure out all the places that are being changed and how do how to get all them writing over to the correct",
    "start": "2890840",
    "end": "2897170"
  },
  {
    "text": "location well do things like run run true-up reports that compare the data in",
    "start": "2897170",
    "end": "2902750"
  },
  {
    "text": "a second table with the first stay at the table and see if there's any discrepancies and any places we need to then go fix once we've got that in place",
    "start": "2902750",
    "end": "2910430"
  },
  {
    "text": "though and we're reasonably sure we've got basically two identical sources of truth then we can update the read paths",
    "start": "2910430",
    "end": "2917060"
  },
  {
    "text": "to point to the new source of truth which is this new table so this case I'm",
    "start": "2917060",
    "end": "2923000"
  },
  {
    "text": "updating any kind of queries that are going to my existing table but a",
    "start": "2923000",
    "end": "2928760"
  },
  {
    "text": "modifying all the repass my application to read from the new set of tables as opposed to the old set of tables and",
    "start": "2928760",
    "end": "2935030"
  },
  {
    "text": "this can also be done incrementally I've done this like one read at a time where I I changed one look one path from the",
    "start": "2935030",
    "end": "2941990"
  },
  {
    "text": "old table to the new table release that into production run my troop reports see if there's any discrepancies and then do the next the",
    "start": "2941990",
    "end": "2948559"
  },
  {
    "text": "next the next the next the more incremental we can do this migration the the less risk we'll have in the overall",
    "start": "2948559",
    "end": "2955250"
  },
  {
    "text": "migration so now that if once I've got",
    "start": "2955250",
    "end": "2960530"
  },
  {
    "text": "that that that reasonable certainty that I've fixed all the right paths and fixed",
    "start": "2960530",
    "end": "2966440"
  },
  {
    "text": "all the repass now we can update the right path to only write to the new set",
    "start": "2966440",
    "end": "2971540"
  },
  {
    "text": "of tables so the application is now no now wholly dependent on the new set of",
    "start": "2971540",
    "end": "2978920"
  },
  {
    "text": "tables for its information at this point I have a few choices sometimes what I've done is then reverse the previous arrow",
    "start": "2978920",
    "end": "2985549"
  },
  {
    "text": "where the new table will have triggers that write back to the old table to",
    "start": "2985549",
    "end": "2990740"
  },
  {
    "text": "ensure that if there's just something out there that's still looking at my old stuff it won't just completely break but",
    "start": "2990740",
    "end": "2996230"
  },
  {
    "text": "eventually I want to sever all those connections to the old information then",
    "start": "2996230",
    "end": "3001750"
  },
  {
    "text": "the last piece of the puzzle is to remove the old information from that legacy set of information for that",
    "start": "3001750",
    "end": "3007390"
  },
  {
    "text": "legacy set of columns or tables so this is the point where you're basically you're just like you're just deleting",
    "start": "3007390",
    "end": "3012730"
  },
  {
    "text": "the columns out of the database and everything should then be using all these new paths now we want to we will",
    "start": "3012730",
    "end": "3020619"
  },
  {
    "text": "make sure we have data integrity checks at each step of the way so this is this is often very customized where I'm",
    "start": "3020619",
    "end": "3026109"
  },
  {
    "text": "running counts and discrepancies and looking at heuristics to see how everything matches up but if everything",
    "start": "3026109",
    "end": "3032650"
  },
  {
    "text": "looks green and everything's 100% match then I should be able to make make the move to the next step in the process",
    "start": "3032650",
    "end": "3040200"
  },
  {
    "text": "now what about very very large table migrations let's say I'm just making a very small or change to this system",
    "start": "3042089",
    "end": "3049359"
  },
  {
    "text": "that's affecting this overall table so I break this up into individual steps as well first step will be to create a new",
    "start": "3049359",
    "end": "3055869"
  },
  {
    "text": "table with the new schema then I batch fill the new table with all the old",
    "start": "3055869",
    "end": "3062470"
  },
  {
    "text": "information and then I rename the old table - the new table so",
    "start": "3062470",
    "end": "3067990"
  },
  {
    "text": "basically I'm like doing a swap this is kind of a Bluegreen deployment for database tables where I create a new",
    "start": "3067990",
    "end": "3073329"
  },
  {
    "text": "table to the side fill with all the information and then swap it for the old table and now I've got a new table with",
    "start": "3073329",
    "end": "3079960"
  },
  {
    "text": "all the new information ready to go there's a lot of different techniques",
    "start": "3079960",
    "end": "3085359"
  },
  {
    "text": "you can use here as well I've seen people as well like create new partitions or file groups for the new",
    "start": "3085359",
    "end": "3090579"
  },
  {
    "text": "table information so I'm not even affecting it all the existing underlying hardware that the the existing database",
    "start": "3090579",
    "end": "3096369"
  },
  {
    "text": "is running on very often with things like indexes can totally screw up the",
    "start": "3096369",
    "end": "3101589"
  },
  {
    "text": "performance of your system as it's trying to build this index of a billion rows so you may want to create that off to the side and then when the time is",
    "start": "3101589",
    "end": "3108160"
  },
  {
    "text": "ready and it's done then you go ahead and connect it to the existing database",
    "start": "3108160",
    "end": "3114180"
  },
  {
    "text": "so these are all the techniques I've used for relational databases this this",
    "start": "3116490",
    "end": "3122410"
  },
  {
    "text": "is one of those things that you don't really know or care about until you hit into production and then it's like release night and all my god so I do",
    "start": "3122410",
    "end": "3129609"
  },
  {
    "text": "want to really caution folks like you should as you're doing these kind of database migrations do keep in mind what",
    "start": "3129609",
    "end": "3135369"
  },
  {
    "text": "you're actually changing in production to understand what is gonna be the potential impact as you do that and so",
    "start": "3135369",
    "end": "3140859"
  },
  {
    "text": "we'll do like dry runs of these migrations as well well we'll have a prod backup then we run Ryan's and grits",
    "start": "3140859",
    "end": "3146260"
  },
  {
    "text": "migration migrations against first that have like an exact replica of what we",
    "start": "3146260",
    "end": "3151540"
  },
  {
    "text": "see in production to get an idea of like oh this this one is actually going to take longer than X amount of time so we",
    "start": "3151540",
    "end": "3156849"
  },
  {
    "text": "need to rethink how we're going to do this migration to ensure that it's going to complete within the SLT SLA that",
    "start": "3156849",
    "end": "3162790"
  },
  {
    "text": "we're trying to affect but what about no",
    "start": "3162790",
    "end": "3168790"
  },
  {
    "text": "sequel what about databases that don't have a schema and for a lot of the",
    "start": "3168790",
    "end": "3175119"
  },
  {
    "text": "systems that I run that run no sequel databases it's very easy to develop these kind of systems locally because I",
    "start": "3175119",
    "end": "3181599"
  },
  {
    "text": "have to worry about schema migrations at all right I just like I just keep coding and changing the shape of things and coding a change in the size shape of",
    "start": "3181599",
    "end": "3187480"
  },
  {
    "text": "things and everything works until you like release it in production and make some change that breaks by schema and so",
    "start": "3187480",
    "end": "3194470"
  },
  {
    "text": "I have this like range of emotions that I go through like disbelief craziness like you know crying oh my god what am I",
    "start": "3194470",
    "end": "3202930"
  },
  {
    "text": "gonna do now and then like just banging my head in the table what how could I possibly solve this problem because I",
    "start": "3202930",
    "end": "3208869"
  },
  {
    "text": "was promised that there was no sequel there's no schema but there's a schema it's just somewhere else it's in your",
    "start": "3208869",
    "end": "3214150"
  },
  {
    "text": "code which is much harder to track down changes to and modifications and much",
    "start": "3214150",
    "end": "3219760"
  },
  {
    "text": "more difficult to track those changes over time so the first thing to look at",
    "start": "3219760",
    "end": "3225040"
  },
  {
    "text": "is one do I even need to migrate data so this is not no sequel migration",
    "start": "3225040",
    "end": "3230950"
  },
  {
    "text": "strategies and that's something I typically put into place at the beginning of a project but I do find",
    "start": "3230950",
    "end": "3236500"
  },
  {
    "text": "that in no sequel databases especially like document databases it's really not unlike other kinds of documents that I'm",
    "start": "3236500",
    "end": "3243940"
  },
  {
    "text": "working with like API documents the JSON documents I've returned for web api's for messages like I stick on some kind",
    "start": "3243940",
    "end": "3250720"
  },
  {
    "text": "of a MTP or RabbitMQ and it's just still Jason right so can I apply the same kind of techniques I have for those kinds of",
    "start": "3250720",
    "end": "3257260"
  },
  {
    "text": "messages and documents to my document store we also find that people are",
    "start": "3257260",
    "end": "3263920"
  },
  {
    "text": "typically doing no sequel in a micro service kind of environment and so in this case I've got some kind of like insurance system that I've converted to",
    "start": "3263920",
    "end": "3270490"
  },
  {
    "text": "micro services in which each step of the overall process for issuing an application for insurance is broken up",
    "start": "3270490",
    "end": "3277060"
  },
  {
    "text": "into its own individual service and in this case I've got different databases for different kinds of needs so if I'm",
    "start": "3277060",
    "end": "3284109"
  },
  {
    "text": "choosing the right database for the job that's not necessarily always going to be a no sequel database so in our case",
    "start": "3284109",
    "end": "3290230"
  },
  {
    "text": "we had the initial step in the process which was the sales application well that sales application had data that",
    "start": "3290230",
    "end": "3295660"
  },
  {
    "text": "changed that that needed to be kept over a long period of time so the sales",
    "start": "3295660",
    "end": "3301090"
  },
  {
    "text": "database was like Salesforce or something and they they kept up those sales databases for years and years and",
    "start": "3301090",
    "end": "3306640"
  },
  {
    "text": "years but the middle part of the application that is much more kind of",
    "start": "3306640",
    "end": "3312180"
  },
  {
    "text": "not as long-running more short-lived kind of data so once they perform each",
    "start": "3312180",
    "end": "3317650"
  },
  {
    "text": "of these steps they don't really need to keep that data anymore it's like I've done the thing I don't you know and then",
    "start": "3317650",
    "end": "3323290"
  },
  {
    "text": "my step is done I just toss that information out the door but then I typically have some final step which is",
    "start": "3323290",
    "end": "3329680"
  },
  {
    "text": "in receiving the results of all these intermediate operations and that becomes like the more traditional",
    "start": "3329680",
    "end": "3335070"
  },
  {
    "text": "schema full kind of database so if you",
    "start": "3335070",
    "end": "3340120"
  },
  {
    "text": "do need to migrate there have a few options we have it or at our disposal the first is just to migrate on read",
    "start": "3340120",
    "end": "3345700"
  },
  {
    "text": "that is when we read the document out of the database we check to see if it's at some specific version and then execute",
    "start": "3345700",
    "end": "3352210"
  },
  {
    "text": "some some code based on I need to migrate this from one point to the next this I found is pretty valuable because",
    "start": "3352210",
    "end": "3357850"
  },
  {
    "text": "I don't I only really care about migrating the data when I need to use it again and so if I migrate it when I read",
    "start": "3357850",
    "end": "3364210"
  },
  {
    "text": "the information back out that lets me just more incrementally and on-the-fly migrate my documents from one point to",
    "start": "3364210",
    "end": "3370720"
  },
  {
    "text": "the next sometimes I can't always do that when you do it more in bulk and so we can migrate using a tool and the tool",
    "start": "3370720",
    "end": "3376930"
  },
  {
    "text": "that I like to use a tool called node migrates so it is it is node based or",
    "start": "3376930",
    "end": "3381970"
  },
  {
    "text": "NPM based but it's still very easy to automate and basically I write my migrations with JavaScript and very",
    "start": "3381970",
    "end": "3389110"
  },
  {
    "text": "similar to I had the schema migrations I'm loading a document out of the database check and is checking its",
    "start": "3389110",
    "end": "3394480"
  },
  {
    "text": "version and then performing whatever kind of in-memory change I need to and then that document is then persisted to",
    "start": "3394480",
    "end": "3400090"
  },
  {
    "text": "the database again or I just don't do we actually need do we actually need to",
    "start": "3400090",
    "end": "3406120"
  },
  {
    "text": "need this kind of migration so one of the things that we found in our no sequel databases is there's no sequel",
    "start": "3406120",
    "end": "3411580"
  },
  {
    "text": "databases we've really for short lived data but then the business was looking at it saying like we want to run reports",
    "start": "3411580",
    "end": "3417310"
  },
  {
    "text": "on MongoDB which like don't do that by the way like is not built for reports instead well we what I'm doing",
    "start": "3417310",
    "end": "3423400"
  },
  {
    "text": "is creating a migration process in which we separated out transactional short lit",
    "start": "3423400",
    "end": "3428740"
  },
  {
    "text": "of information from historical information and the way we would push those changes out is either through",
    "start": "3428740",
    "end": "3434800"
  },
  {
    "text": "messaging eventing or triggers so that as someone made changes to the transactional database we actually spit",
    "start": "3434800",
    "end": "3441190"
  },
  {
    "text": "out some kind of messages say someone has done this thing that would go through an ETL process and then that would finally go into a data warehouse",
    "start": "3441190",
    "end": "3447460"
  },
  {
    "text": "where the business could actually run reports on it so if I can get away with just like not doing migrations that'd be",
    "start": "3447460",
    "end": "3455590"
  },
  {
    "text": "better right like just one less thing for me to do so it did take some convincing from the business to be able to have this kind of picture where I'm",
    "start": "3455590",
    "end": "3462160"
  },
  {
    "text": "not allowing them to look to look and report off my existing database and then having a very specific set of",
    "start": "3462160",
    "end": "3468160"
  },
  {
    "text": "controlled output that they can didn't put into the data warehouse which in that point that is actually versioned",
    "start": "3468160",
    "end": "3473920"
  },
  {
    "text": "and and uses migrations and so for us we actually just get rid of all data like",
    "start": "3473920",
    "end": "3480430"
  },
  {
    "text": "once the once one of these steps is finished for an overall application we actually don't care about that data anymore so we have these we have these",
    "start": "3480430",
    "end": "3486880"
  },
  {
    "text": "cleanup steps that just get rid of all data that says we don't need the underwriting application information",
    "start": "3486880",
    "end": "3492160"
  },
  {
    "text": "from two weeks ago because we issued the thing so just go ahead and delete it so",
    "start": "3492160",
    "end": "3498670"
  },
  {
    "text": "some parting thoughts here see ICD with databases is not only possible but it is",
    "start": "3498670",
    "end": "3504130"
  },
  {
    "text": "necessary if we want to be able to have the same kinds of X agile delivery with",
    "start": "3504130",
    "end": "3509740"
  },
  {
    "text": "our databases as we do with our code then we have to institute a very similar kind of process that we have with our",
    "start": "3509740",
    "end": "3515860"
  },
  {
    "text": "code as with our database it does require a lot more thought in planning because databases are stateful not",
    "start": "3515860",
    "end": "3521770"
  },
  {
    "text": "stateless I do actually have to think about how I'm going to take that database from one step to the next mistakes are gonna be a lot more costly",
    "start": "3521770",
    "end": "3528610"
  },
  {
    "text": "of course so we want to apply techniques that allow to us also very incrementally",
    "start": "3528610",
    "end": "3534430"
  },
  {
    "text": "take our application and database from one step to the next and we can make these little bitty baby steps overall",
    "start": "3534430",
    "end": "3540280"
  },
  {
    "text": "that allows us to actually go a lot faster my final recommendation is to learn your DBAs whisky preference",
    "start": "3540280",
    "end": "3547530"
  },
  {
    "text": "because you will need to bribe them on these techniques and tools so anything do you like help smooth things over with",
    "start": "3547530",
    "end": "3553720"
  },
  {
    "text": "them and don't make an ending of them because again their skills are actually much more valuable than yours because they have the data so do become their",
    "start": "3553720",
    "end": "3560260"
  },
  {
    "text": "friend so that was CIN CD with databases or for databases this application is actually",
    "start": "3560260",
    "end": "3568119"
  },
  {
    "text": "gonna be on my github so we want to check out a full running example I'll have it up there otherwise they go for coming and have a great rest of the",
    "start": "3568119",
    "end": "3573609"
  },
  {
    "text": "conference [Applause]",
    "start": "3573609",
    "end": "3583310"
  }
]