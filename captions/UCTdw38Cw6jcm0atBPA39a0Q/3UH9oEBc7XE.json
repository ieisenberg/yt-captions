[
  {
    "start": "0",
    "end": "21000"
  },
  {
    "text": "okay it is 11:40 I'm going to begin some people are gonna come in might leave",
    "start": "4110",
    "end": "10900"
  },
  {
    "text": "that's okay and since all of you have exceptionally exquisite taste in talk",
    "start": "10900",
    "end": "17770"
  },
  {
    "text": "selection I would like to ask you all a question who here is familiar with Usher",
    "start": "17770",
    "end": "24340"
  },
  {
    "start": "21000",
    "end": "148000"
  },
  {
    "text": "functions raise your hand okay and who",
    "start": "24340",
    "end": "30490"
  },
  {
    "text": "here has created one either playing around actually has seven production it's a good amount okay that",
    "start": "30490",
    "end": "38829"
  },
  {
    "text": "is a great number excellent so when we think about as your functions",
    "start": "38829",
    "end": "43899"
  },
  {
    "text": "as I'm sure you all know the ones who have created ones these are really really great solutions for things that",
    "start": "43899",
    "end": "51550"
  },
  {
    "text": "are small things that are small pieces of code just a single action that we",
    "start": "51550",
    "end": "56739"
  },
  {
    "text": "need to do something that doesn't need a full-blown infrastructure for it and",
    "start": "56739",
    "end": "62129"
  },
  {
    "text": "when we think about functions and how we got onto that journey to get there or to",
    "start": "62129",
    "end": "67240"
  },
  {
    "text": "even start thinking about using functions it usually goes along the lines of this kind of thinking you know",
    "start": "67240",
    "end": "73150"
  },
  {
    "text": "you're talking with your team your sprint planning maybe you're talking with your colleagues about how you can improve your platform or how you can get",
    "start": "73150",
    "end": "79750"
  },
  {
    "text": "rid of this one legacy big bit and it's usually the talk goes like this",
    "start": "79750",
    "end": "85470"
  },
  {
    "text": "well I just need to do some small event-based tasks insert they're your",
    "start": "85470",
    "end": "91390"
  },
  {
    "text": "choice but I don't want to provision any resources first it's going to be too",
    "start": "91390",
    "end": "96430"
  },
  {
    "text": "costly it's gonna be too time-consuming we don't need an entire full-blown infrastructure to do this backup of a",
    "start": "96430",
    "end": "103600"
  },
  {
    "text": "file or to do this resizing of a photo that's just overkill but if we actually",
    "start": "103600",
    "end": "110830"
  },
  {
    "text": "needed to scale that we need to be able to also dynamically scale that if for whatever reason our application needed",
    "start": "110830",
    "end": "117220"
  },
  {
    "text": "to oh and by the way I only want to pay for the compute resources that I actually use behold as your functions",
    "start": "117220",
    "end": "125580"
  },
  {
    "text": "that's what we use them for right we want something small but flexible something where we only pay for what we",
    "start": "125580",
    "end": "132819"
  },
  {
    "text": "use and something that if need be for different kinds of scenarios especially",
    "start": "132819",
    "end": "138760"
  },
  {
    "text": "in situations where we don't know what that kind of scaling need is going to be these are great they fill that need so",
    "start": "138760",
    "end": "149650"
  },
  {
    "start": "148000",
    "end": "338000"
  },
  {
    "text": "what are durable functions durable",
    "start": "149650",
    "end": "154750"
  },
  {
    "text": "functions are a library that extend as your functions and they do that too by",
    "start": "154750",
    "end": "161260"
  },
  {
    "text": "allowing us to create stateful workflows stateful workflows are given to us as",
    "start": "161260",
    "end": "167530"
  },
  {
    "text": "developers if we have something called workflow orchestration but that's",
    "start": "167530",
    "end": "172540"
  },
  {
    "text": "something that's very very difficult to do in regular Azure functions so durable",
    "start": "172540",
    "end": "179260"
  },
  {
    "text": "functions all that jargon all that workflow orchestration all that stuff all that really means is durable",
    "start": "179260",
    "end": "185290"
  },
  {
    "text": "functions fills in the gaps or as your functions fall short so what does this",
    "start": "185290",
    "end": "194500"
  },
  {
    "text": "mean how do they fill in those gaps what are those gaps so for durable functions what",
    "start": "194500",
    "end": "200560"
  },
  {
    "text": "we use them for is for a code first style of development for workflows if we",
    "start": "200560",
    "end": "206739"
  },
  {
    "text": "have long-running workflows if we have sequential workflows that have dependent steps if we have very complex workflows",
    "start": "206739",
    "end": "213940"
  },
  {
    "text": "that branch off into very many decision trees those are the kinds of workflows that were thinking about and talking",
    "start": "213940",
    "end": "219970"
  },
  {
    "text": "about implementing when we talk about long or where we need workflow orchestrations these are things that are",
    "start": "219970",
    "end": "225940"
  },
  {
    "text": "difficult to implement in regular agile functions you can do them but they're very difficult durable functions also",
    "start": "225940",
    "end": "236470"
  },
  {
    "text": "are stateful and if there's one thing we've ever been told about functions and",
    "start": "236470",
    "end": "241750"
  },
  {
    "text": "server lists it's that keep it small keep it just quick because everything",
    "start": "241750",
    "end": "246849"
  },
  {
    "text": "every time that that's running our bill is also going higher so we want to keep it small keep it long-running have it do",
    "start": "246849",
    "end": "253239"
  },
  {
    "text": "its job and have it shut down very very quickly which means we can't really have",
    "start": "253239",
    "end": "258549"
  },
  {
    "text": "state in those kinds of functions and sometimes the complex workflows that we have we need state if we have longer",
    "start": "258549",
    "end": "265840"
  },
  {
    "text": "workflows where we're say getting information from a lot of different sources for getting",
    "start": "265840",
    "end": "270870"
  },
  {
    "text": "information from a longer period of time we might need to keep some kind of state in order for us to do that kind of",
    "start": "270870",
    "end": "277200"
  },
  {
    "text": "processing and lastly durable functions",
    "start": "277200",
    "end": "282450"
  },
  {
    "text": "are consolidated so again you can try to implement these workflows in regular",
    "start": "282450",
    "end": "288630"
  },
  {
    "text": "agile functions but these may be piecemeal especially if you're doing some sort of micro service architecture",
    "start": "288630",
    "end": "294900"
  },
  {
    "text": "and each micro service is a function if you're lucky enough to get it that way but as you might have noticed if you're",
    "start": "294900",
    "end": "302190"
  },
  {
    "text": "trying to debug these things and they're not in a single place you might have functions that are semi related but even",
    "start": "302190",
    "end": "308820"
  },
  {
    "text": "if you have great logging it's still really hard to kind of pinpoint which part of your process actually failed",
    "start": "308820",
    "end": "315720"
  },
  {
    "text": "what happened can you actually roll back those things if they did go wrong those",
    "start": "315720",
    "end": "320970"
  },
  {
    "text": "kinds of things are very difficult to do in regular Azure functions so durable",
    "start": "320970",
    "end": "327900"
  },
  {
    "text": "functions are filling those needs durable functions are what allow us to",
    "start": "327900",
    "end": "333300"
  },
  {
    "text": "do this as it's built on top of regular Asscher functions now how does it do",
    "start": "333300",
    "end": "339630"
  },
  {
    "start": "338000",
    "end": "508000"
  },
  {
    "text": "that I'm glad you asked because there are four different kinds of function types",
    "start": "339630",
    "end": "346410"
  },
  {
    "text": "that most durable functions are composed out of and these are very imperative to",
    "start": "346410",
    "end": "352560"
  },
  {
    "text": "understand you might have worked with them before if you've user functions you might already be familiar with these but",
    "start": "352560",
    "end": "358200"
  },
  {
    "text": "it's very good to get that ground foundation before we move into the pattern so that you can see how beneficial they are so the first",
    "start": "358200",
    "end": "367770"
  },
  {
    "text": "function that most or all durable functions are composed of are called",
    "start": "367770",
    "end": "373890"
  },
  {
    "text": "client functions what our client functions well client functions are what",
    "start": "373890",
    "end": "380460"
  },
  {
    "text": "we call the entry point functions they are what kickstart our orchestration",
    "start": "380460",
    "end": "385950"
  },
  {
    "text": "they are usually invoked by a client a user someone makes a call to our client",
    "start": "385950",
    "end": "392460"
  },
  {
    "text": "function and this is what kick-starts the new orchestration instance they're just like regular functions except",
    "start": "392460",
    "end": "399940"
  },
  {
    "text": "they have a super special durable client output binding and that binding is very very important it's important because",
    "start": "399940",
    "end": "407080"
  },
  {
    "text": "it's that binding that allows us to trigger something that we're going to talk about next which are orchestration",
    "start": "407080",
    "end": "413260"
  },
  {
    "text": "functions and it's also very important because that's what allow us to interact",
    "start": "413260",
    "end": "419080"
  },
  {
    "text": "with the running orchestrations that we have so the client function is is the",
    "start": "419080",
    "end": "424870"
  },
  {
    "text": "thing that starts at all this is where if we need to do a long running workflow if we have a long sequential thing",
    "start": "424870",
    "end": "430750"
  },
  {
    "text": "something needs to start it and so client functions are also usually known as starter functions and as an example",
    "start": "430750",
    "end": "440320"
  },
  {
    "text": "here we have a very simple client function here so in my client function we have an HTTP trigger so they're like",
    "start": "440320",
    "end": "448180"
  },
  {
    "text": "regular functions they can use they use these same events that as your functions get triggered by so blob storage trigger",
    "start": "448180",
    "end": "454720"
  },
  {
    "text": "timer triggers in this case mine is an HTTP trigger so whenever a client calls",
    "start": "454720",
    "end": "460210"
  },
  {
    "text": "this we also have our durable client starter here and this client is what",
    "start": "460210",
    "end": "465220"
  },
  {
    "text": "enables us to start our actual orchestration function here on line 47 so this gets called we start a new new",
    "start": "465220",
    "end": "474400"
  },
  {
    "text": "async instance of an orchestration function we get an ID back we have some logging and then we return something",
    "start": "474400",
    "end": "481270"
  },
  {
    "text": "that's a little bit different and we'll get to it but for now all you need to know is that it's a it's an HTTP",
    "start": "481270",
    "end": "487210"
  },
  {
    "text": "response message that allows the client to continuously check on the status of",
    "start": "487210",
    "end": "492370"
  },
  {
    "text": "our orchestration and that's very very neat and you'll see why in a second so",
    "start": "492370",
    "end": "499960"
  },
  {
    "text": "that's the client function for a durable function we've started it and the next",
    "start": "499960",
    "end": "505090"
  },
  {
    "text": "thing we need to do is go to the actual orchestration so the orchestrator",
    "start": "505090",
    "end": "510669"
  },
  {
    "start": "508000",
    "end": "667000"
  },
  {
    "text": "function just that the name implies the orchestrator function it's the heart and",
    "start": "510669",
    "end": "516039"
  },
  {
    "text": "soul of durable functions this is what tells all of our processing tasks and",
    "start": "516039",
    "end": "522520"
  },
  {
    "text": "all of the steps in our workflow this is what is used in the outline so this is",
    "start": "522520",
    "end": "528400"
  },
  {
    "text": "where you start if the order of the steps this is where you start defining the crazy branches and",
    "start": "528400",
    "end": "535410"
  },
  {
    "text": "decision trees that you may need for that particular process this is where you can put error handling and exception",
    "start": "535410",
    "end": "542340"
  },
  {
    "text": "handling these are all of these things that are so difficult and very cumbersome to do in as your functions",
    "start": "542340",
    "end": "548850"
  },
  {
    "text": "you can do them here in this Orchestrator function and so to continue",
    "start": "548850",
    "end": "555960"
  },
  {
    "text": "with the example that I have here our previous client function when it started",
    "start": "555960",
    "end": "563640"
  },
  {
    "text": "and created a new instance of our Orchestrator function this is that function and when it creates that new",
    "start": "563640",
    "end": "570420"
  },
  {
    "text": "instance it creates the definition of what we're about to do so in this case",
    "start": "570420",
    "end": "575640"
  },
  {
    "text": "mine is very very simple at this point for demonstration purposes and just to",
    "start": "575640",
    "end": "580650"
  },
  {
    "text": "talk about it for now but you know my orchestrate my Orchestrator function all",
    "start": "580650",
    "end": "585750"
  },
  {
    "text": "I'm simply doing is this is actually called a proper greeting for London function app so instead of you know",
    "start": "585750",
    "end": "592440"
  },
  {
    "text": "hello Seattle hello Tokyo I changed it to what I think would be appropriate so I'm saying hello to proper etiquette",
    "start": "592440",
    "end": "598860"
  },
  {
    "text": "because I know there's a lot of people in America who don't have it you you to have it you to hello Your Majesty right",
    "start": "598860",
    "end": "609690"
  },
  {
    "text": "we're in London and hello London and what this Orchestrator function does",
    "start": "609690",
    "end": "614700"
  },
  {
    "text": "is that it calls each and every one of those tasks and it tells it to do",
    "start": "614700",
    "end": "619740"
  },
  {
    "text": "something it tells it just it tells it to go do that task and if it were a little bit more complicated we can have",
    "start": "619740",
    "end": "626190"
  },
  {
    "text": "some decisions made but for the sake of simplicity I am simply calling that",
    "start": "626190",
    "end": "631590"
  },
  {
    "text": "activity function whatever it does I'm getting the result back and I am simply",
    "start": "631590",
    "end": "637890"
  },
  {
    "text": "outputting the returned results of those activities so that's our Orchestrator",
    "start": "637890",
    "end": "646380"
  },
  {
    "text": "function but at this point we actually haven't been doing any work at all we have kick-started the orchestration",
    "start": "646380",
    "end": "652860"
  },
  {
    "text": "instance and we know what steps we have to do we know what we have to do in our long work flow but the work is not",
    "start": "652860",
    "end": "660450"
  },
  {
    "text": "actually being done at this point when it is done is in these things called activity",
    "start": "660450",
    "end": "665580"
  },
  {
    "text": "functions so activity functions are the actual tasks right these are the",
    "start": "665580",
    "end": "672410"
  },
  {
    "start": "667000",
    "end": "1004000"
  },
  {
    "text": "execution of what you have seeked out to do and again these are like regular",
    "start": "672410",
    "end": "678240"
  },
  {
    "text": "outer functions but they can only be triggered by an activity trigger so that",
    "start": "678240",
    "end": "683430"
  },
  {
    "text": "means you can't use the regular event based things that you use to trigger a show functions of regular functions",
    "start": "683430",
    "end": "688830"
  },
  {
    "text": "rather they can accept an input parameter from the orchestrator function so what that means is you saw before I",
    "start": "688830",
    "end": "695580"
  },
  {
    "text": "had your majesty I had proper etiquette and London all of these are the inputs that are passed to",
    "start": "695580",
    "end": "701580"
  },
  {
    "text": "my activity function and then in my activity function I do something with it I process it in this case I am simply",
    "start": "701580",
    "end": "709260"
  },
  {
    "text": "appending a co-host ah kamusta is hello and tagalog and after I get each name or",
    "start": "709260",
    "end": "717810"
  },
  {
    "text": "thing in this case I just append akuma stat and return it back the great thing about this is that if it needs further",
    "start": "717810",
    "end": "724680"
  },
  {
    "text": "processing it can do that if what is done here which is just appending the",
    "start": "724680",
    "end": "730500"
  },
  {
    "text": "kamusta is just one part of a larger sequence of things that you need to do you can do that in this one activity",
    "start": "730500",
    "end": "737490"
  },
  {
    "text": "function return the result to the orchestrator function make a decision and then call the next to required",
    "start": "737490",
    "end": "743970"
  },
  {
    "text": "activity function to do further processing this is not a one-and-done deal activity functions are very",
    "start": "743970",
    "end": "750680"
  },
  {
    "text": "important here and they're important in the sense that to really gain the",
    "start": "750680",
    "end": "755820"
  },
  {
    "text": "benefits of durable functions you want to try to keep them small kind of like micro services but the only things that",
    "start": "755820",
    "end": "763710"
  },
  {
    "text": "are quite related is that if you try to keep them as a single responsibility task you'll have a much better chance of",
    "start": "763710",
    "end": "770160"
  },
  {
    "text": "scaling the parts that you need to and actually be able to put them in",
    "start": "770160",
    "end": "775980"
  },
  {
    "text": "different places I'd like to call it the Lego factor if you can make it such that they can be used like Legos then you",
    "start": "775980",
    "end": "783600"
  },
  {
    "text": "have a really good activity function so",
    "start": "783600",
    "end": "789510"
  },
  {
    "text": "out of all these functions the client will Orchestrator and the activity function these are the",
    "start": "789510",
    "end": "795360"
  },
  {
    "text": "three that you'll most like see whenever you work with durable functions these are all you would really",
    "start": "795360",
    "end": "802090"
  },
  {
    "text": "really need if you needed to create a long running workflow or a sequential workflow or any type of complex",
    "start": "802090",
    "end": "808420"
  },
  {
    "text": "long-running staple workflow but recently they just released something called an entity function now entity",
    "start": "808420",
    "end": "816310"
  },
  {
    "text": "functions are kind of similar to Orchestrator functions in that were Orchestrator functions define the number",
    "start": "816310",
    "end": "824050"
  },
  {
    "text": "of steps or what steps are about to be done and what kind of processing needs to be done entity functions define the",
    "start": "824050",
    "end": "830860"
  },
  {
    "text": "operations for reading and updating certain pieces of state so here we're",
    "start": "830860",
    "end": "836380"
  },
  {
    "text": "extending that even further if you need fine-grain if you need fine-grained",
    "start": "836380",
    "end": "841690"
  },
  {
    "text": "state management you would probably want to use entity functions now energy",
    "start": "841690",
    "end": "847240"
  },
  {
    "text": "functions are like activity functions in that they can only be triggered by an",
    "start": "847240",
    "end": "852340"
  },
  {
    "text": "entity trigger and this is the only kind of function that actually manages state explicitly so you're all thinking that's",
    "start": "852340",
    "end": "862840"
  },
  {
    "text": "great adrián for functions I've seen them before or they seem pretty self-explanatory I can kind of see how",
    "start": "862840",
    "end": "869890"
  },
  {
    "text": "the pieces fit but what's actually happening what is going on when we actually call these functions and if you",
    "start": "869890",
    "end": "877210"
  },
  {
    "text": "remember the example that I gave earlier about appending a Costa to all the different places that I want to or",
    "start": "877210",
    "end": "883330"
  },
  {
    "text": "things that I want to say hello to in Tagalog at this point we kind of",
    "start": "883330",
    "end": "888820"
  },
  {
    "text": "understand what is happening the client function has been invoked which means it's kick-started our orchestration and",
    "start": "888820",
    "end": "894370"
  },
  {
    "text": "then a new orchestration instance has been created we got an ID back so at",
    "start": "894370",
    "end": "900640"
  },
  {
    "text": "that moment that we're now in the orchestration function what is happening well once we hit that very first call to",
    "start": "900640",
    "end": "909580"
  },
  {
    "text": "the very first activity function that first await call async activity what",
    "start": "909580",
    "end": "915130"
  },
  {
    "text": "happens is that the orchestrator schedules a cue message and sends it to",
    "start": "915130",
    "end": "921430"
  },
  {
    "text": "the activity it does so in its own internal cue and when it does this it's",
    "start": "921430",
    "end": "928300"
  },
  {
    "text": "funny Orchestrator stops and that is very very interesting because if you know answer",
    "start": "928300",
    "end": "935210"
  },
  {
    "text": "functions the longer running it is the higher your bill is and if you have some potentially long processes that takes",
    "start": "935210",
    "end": "941750"
  },
  {
    "text": "very very long or you don't know how long it's gonna take those function prices are gonna keep skyrocketing up in",
    "start": "941750",
    "end": "948140"
  },
  {
    "text": "this case though you are only billed by the orchestrator function you're not",
    "start": "948140",
    "end": "953180"
  },
  {
    "text": "billed by how long the activity function is running this is why we try to recommend developers to put any of these",
    "start": "953180",
    "end": "960740"
  },
  {
    "text": "kinds of processes in the activity function rather than the orchestrator function so the orchestrator stops",
    "start": "960740",
    "end": "967240"
  },
  {
    "text": "meanwhile the activity function is doing its job and when the activity function",
    "start": "967240",
    "end": "972980"
  },
  {
    "text": "is finished and it's done doing whatever it's supposed to be in my case it was just appending a caboose tab it could be",
    "start": "972980",
    "end": "978470"
  },
  {
    "text": "way longer when it's done the activity function then serializes that result it",
    "start": "978470",
    "end": "985730"
  },
  {
    "text": "sends another cue message back to the orchestrator and the orchestrator receives it",
    "start": "985730",
    "end": "991750"
  },
  {
    "text": "remember the orchestrator is now stopped at this point it's lucky enough it's sleeping on the job so once this cue",
    "start": "991750",
    "end": "999110"
  },
  {
    "text": "message is returned to the orchestrator it's not that but it wakes up the",
    "start": "999110",
    "end": "1008050"
  },
  {
    "text": "orchestrator function says hey we have some stuff to do here so by the activity function sending that",
    "start": "1008050",
    "end": "1016390"
  },
  {
    "text": "new cue message for the result we wake up that Orchestrator and then an even",
    "start": "1016390",
    "end": "1023050"
  },
  {
    "text": "more interesting thing happens so when the orchestrator function restarts it restarts from the first line of our",
    "start": "1023050",
    "end": "1030189"
  },
  {
    "text": "Orchestrator function and when it starts at this first line we now have that",
    "start": "1030190",
    "end": "1036040"
  },
  {
    "text": "result back right we've got the cue message from the activity function so that result is stored and that's very",
    "start": "1036040",
    "end": "1042970"
  },
  {
    "text": "very important because this is now stored what happens next is that our",
    "start": "1042970",
    "end": "1049300"
  },
  {
    "text": "Orchestrator completely loads a full history of this particular instances",
    "start": "1049300",
    "end": "1055120"
  },
  {
    "text": "execution history so every time a queue message is scheduled and says hey I need to do an activity",
    "start": "1055120",
    "end": "1061169"
  },
  {
    "text": "hey I received an activity hey this thing has been scheduled hey this thing has been completed all of those things",
    "start": "1061169",
    "end": "1067559"
  },
  {
    "text": "are logged in in a table in an azure that's why you need an azure storage account when you create a durable",
    "start": "1067559",
    "end": "1074279"
  },
  {
    "text": "function it's because it needs a place to store all of these events and it does so in an event sourcing pattern which",
    "start": "1074279",
    "end": "1081389"
  },
  {
    "text": "means it only appends events this makes it very reliable this makes it very resilient and this makes it possible for",
    "start": "1081389",
    "end": "1088799"
  },
  {
    "text": "us to understand where things may have failed it makes us makes it easier for us to",
    "start": "1088799",
    "end": "1095129"
  },
  {
    "text": "debug what may have gone wrong in our process it helps us really pinpoint what is going on in each step of our",
    "start": "1095129",
    "end": "1102269"
  },
  {
    "text": "orchestrated of our orchestration and so once it reloads this entire history and",
    "start": "1102269",
    "end": "1110340"
  },
  {
    "text": "then it starts going through the different lines in my function my orchestrated function it then has to",
    "start": "1110340",
    "end": "1116789"
  },
  {
    "text": "decide do I send another activity function because we're still on the first line or do I move on to the next",
    "start": "1116789",
    "end": "1124080"
  },
  {
    "text": "activity function it's able to decide this because at the point that it has to",
    "start": "1124080",
    "end": "1130019"
  },
  {
    "text": "decide it reads it and it says hey I already have a result here for my first activity this means I don't need to",
    "start": "1130019",
    "end": "1137039"
  },
  {
    "text": "schedule another cue message to that particular activity function so that means I can move on to the second",
    "start": "1137039",
    "end": "1142769"
  },
  {
    "text": "activity function and we can double check that in our event history because when we look and say see hey there's",
    "start": "1142769",
    "end": "1149399"
  },
  {
    "text": "nothing for the second activity function we don't have a result here I need to schedule something I need to send that",
    "start": "1149399",
    "end": "1155909"
  },
  {
    "text": "over so this keeps going and it keeps repeating and the orchestrator keeps",
    "start": "1155909",
    "end": "1162629"
  },
  {
    "text": "stopping every time it sends a message and waits for it to be woken up again and it repeats it for as many activities",
    "start": "1162629",
    "end": "1169289"
  },
  {
    "text": "that you call so if you're thinking",
    "start": "1169289",
    "end": "1176820"
  },
  {
    "start": "1173000",
    "end": "1567000"
  },
  {
    "text": "about how this is functioning how it restarts at the first line every single",
    "start": "1176820",
    "end": "1182309"
  },
  {
    "text": "time we get back to our Orchestrator function it has this kind of replay functionality and it's very interesting",
    "start": "1182309",
    "end": "1189919"
  },
  {
    "text": "it's very powerful but it also means that there's some rules about how we have to",
    "start": "1189919",
    "end": "1196080"
  },
  {
    "text": "write our Orchestrator function and there's a nice big word that we like to use this means we have to make",
    "start": "1196080",
    "end": "1202580"
  },
  {
    "text": "deterministic orchestrators so what does deterministic mean well deterministic",
    "start": "1202580",
    "end": "1208860"
  },
  {
    "text": "things are in this case deterministic functions are things that no matter how many times we call it and no matter when",
    "start": "1208860",
    "end": "1215580"
  },
  {
    "text": "if we give something a specific input we need to expect that same exact output",
    "start": "1215580",
    "end": "1221730"
  },
  {
    "text": "every single time let's see so that is",
    "start": "1221730",
    "end": "1227010"
  },
  {
    "text": "the sign of a deterministic function it needs to be the same result every single time and if you think about it with the",
    "start": "1227010",
    "end": "1234300"
  },
  {
    "text": "way that it restarts from the very beginning and does everything over and over again if we have something that's",
    "start": "1234300",
    "end": "1240170"
  },
  {
    "text": "non-deterministic that can be very problematic for our orchestration let's again if we have something that's",
    "start": "1240170",
    "end": "1248730"
  },
  {
    "text": "non-deterministic that could throw off the actual state of our orchestration that means that let's say that first",
    "start": "1248730",
    "end": "1256110"
  },
  {
    "text": "variable we did get a result back but we used something non-deterministic in our Orchestrator function that caused that",
    "start": "1256110",
    "end": "1262230"
  },
  {
    "text": "to change or that caused that - maybe not exist well the orchestrator wouldn't know that",
    "start": "1262230",
    "end": "1267780"
  },
  {
    "text": "so it's going to think hey I need to send another message again that can lead to many catastrophic effects for our",
    "start": "1267780",
    "end": "1272850"
  },
  {
    "text": "orchestration so we don't want that so I took it upon myself to tell you how to",
    "start": "1272850",
    "end": "1280680"
  },
  {
    "text": "create deterministic orchestrators in a single meme I hope you can see this",
    "start": "1280680",
    "end": "1285870"
  },
  {
    "text": "so the foundling says please don't use",
    "start": "1285870",
    "end": "1292040"
  },
  {
    "text": "date/time now because that is non-deterministic that's gonna be different every single time you use that",
    "start": "1292040",
    "end": "1297200"
  },
  {
    "text": "please don't use anything random nothing random random numbers random GUI",
    "start": "1297200",
    "end": "1302490"
  },
  {
    "text": "generators random UUID generators again unless they're safe which you can't",
    "start": "1302490",
    "end": "1307590"
  },
  {
    "text": "really guarantee it's gonna be a different result every single time you call that which makes it non-deterministic don't use",
    "start": "1307590",
    "end": "1315660"
  },
  {
    "text": "multi-threading this entire premise is built on a single thread so if you use multi-threading that's obviously going",
    "start": "1315660",
    "end": "1322380"
  },
  {
    "text": "against it but it's probably not going to work and it's going to affect the the result of your orchestration and",
    "start": "1322380",
    "end": "1329600"
  },
  {
    "text": "async API calls there's a whole of their list and I'll probably send it out with a list of resources that I've used to",
    "start": "1329600",
    "end": "1335669"
  },
  {
    "text": "research for my talk but Microsoft has a great table about what to use and what not to use and really you think about it",
    "start": "1335669",
    "end": "1343679"
  },
  {
    "text": "and you read this whole table what it essentially ends up amounting to is use",
    "start": "1343679",
    "end": "1348929"
  },
  {
    "text": "current UTC date time if you need to and everything else that you're pretty much thinking about doing put it in an",
    "start": "1348929",
    "end": "1354989"
  },
  {
    "text": "activity function because it's not going to belong in the orchestrator function",
    "start": "1354989",
    "end": "1360499"
  },
  {
    "text": "so why durable functions I've told you how they're composed I told you how they",
    "start": "1361070",
    "end": "1366210"
  },
  {
    "text": "work under the hood and I told you about some of the key differences of why you would use them over at your functions",
    "start": "1366210",
    "end": "1371999"
  },
  {
    "text": "but I'll tell you three more reasons why that are a little bit more developer experience focused so to start they're",
    "start": "1371999",
    "end": "1380340"
  },
  {
    "text": "simpler as I showed you earlier that Orchestrator function can list out the full details of what our orchestration",
    "start": "1380340",
    "end": "1386129"
  },
  {
    "text": "will do this comes with a lot of built-in code that you don't have to do",
    "start": "1386129",
    "end": "1391320"
  },
  {
    "text": "you don't have to manage statuses you don't have to manage checkpoints you don't have to find a way to keep track",
    "start": "1391320",
    "end": "1398249"
  },
  {
    "text": "of what's happening especially for long-running orchestrations you don't have to write that code because the",
    "start": "1398249",
    "end": "1403950"
  },
  {
    "text": "azure durable function library has already done that for you in this way you remove a lot of that code and you",
    "start": "1403950",
    "end": "1410940"
  },
  {
    "text": "can focus on the actual workflow that you're trying to do simpler also means",
    "start": "1410940",
    "end": "1415950"
  },
  {
    "text": "multiple functions smaller functions activity functions and when you can strive to get there to actually make",
    "start": "1415950",
    "end": "1422429"
  },
  {
    "text": "those activity functions single responsibilities you have an easier time to be able to scale your workflow if",
    "start": "1422429",
    "end": "1428399"
  },
  {
    "text": "only a particular piece needed to scale further you can do that because you've created an activity",
    "start": "1428399",
    "end": "1433950"
  },
  {
    "text": "function that only deals with that specific thing this is not to say that you know when you start thinking about",
    "start": "1433950",
    "end": "1439830"
  },
  {
    "text": "migrating a workflow you're not going to have some super admin activity function where you just take 300 lines of code",
    "start": "1439830",
    "end": "1446489"
  },
  {
    "text": "and put it in that activity function that's not what that means it means you need to re-architect it you need to think about it and you need to try to",
    "start": "1446489",
    "end": "1452909"
  },
  {
    "text": "make it into smaller manageable chunks this way you gain the benefits of it",
    "start": "1452909",
    "end": "1457940"
  },
  {
    "text": "simpler stateful is a big big thing about terrible functions I've alluded to",
    "start": "1457940",
    "end": "1464450"
  },
  {
    "text": "it earlier but again it keeps track of every single step that is done something",
    "start": "1464450",
    "end": "1469519"
  },
  {
    "text": "that you don't have to do and in especially long-running complex scenarios and in some of the patterns",
    "start": "1469519",
    "end": "1476149"
  },
  {
    "text": "that I'm going to show you in a bit these are key for you to be able to do some of these patterns if you try to",
    "start": "1476149",
    "end": "1481909"
  },
  {
    "text": "establish or implement this in regular Asha functions again it's a lot more code that you have to write and if you",
    "start": "1481909",
    "end": "1488570"
  },
  {
    "text": "try to use regular agile functions they're not supposed to be stateful by design unless Li scalable so again it's",
    "start": "1488570",
    "end": "1498080"
  },
  {
    "text": "the Lego factor if you're able to create these pieces in a way that you can mix and match them then your orchestrations",
    "start": "1498080",
    "end": "1504110"
  },
  {
    "text": "are going to be a lot easier to scale so",
    "start": "1504110",
    "end": "1510169"
  },
  {
    "text": "we're now here we've laid the groundwork for what durable functions are what",
    "start": "1510169",
    "end": "1515870"
  },
  {
    "text": "they're composed of and how they work so now I'll show you a few of the patterns",
    "start": "1515870",
    "end": "1521059"
  },
  {
    "text": "that we can use to actually implement some of these long-running complex workflows in a much simpler fashion so",
    "start": "1521059",
    "end": "1530120"
  },
  {
    "text": "there's six of them and the first one is called function chaining so the name",
    "start": "1530120",
    "end": "1536480"
  },
  {
    "text": "itself sounds like you can understand what it means but the function chaining",
    "start": "1536480",
    "end": "1542000"
  },
  {
    "text": "pattern is essentially it's sequential so you have a set of functions and usually the output of one function is",
    "start": "1542000",
    "end": "1549740"
  },
  {
    "text": "the input of the next one and that sounds familiar right sounds like the pipe operator that's what I thought it",
    "start": "1549740",
    "end": "1555320"
  },
  {
    "text": "was when I first learned about this pattern so a really cool thing here that",
    "start": "1555320",
    "end": "1563450"
  },
  {
    "text": "is not work how it is working awesome so this is a this could be thought of as a",
    "start": "1563450",
    "end": "1569840"
  },
  {
    "start": "1567000",
    "end": "1900000"
  },
  {
    "text": "function chain does anyone know what that is who said that",
    "start": "1569840",
    "end": "1575840"
  },
  {
    "text": "yep excellent",
    "start": "1575840",
    "end": "1580090"
  },
  {
    "text": "that is a Filipino egg roll I'm Filipino so don't worry you don't have to worry about what ethnicity I am anymore I'm",
    "start": "1581850",
    "end": "1588630"
  },
  {
    "text": "Filipino and this can be modeled as a function chain there is a specific step",
    "start": "1588630",
    "end": "1595410"
  },
  {
    "text": "that you have to do to create these Filipino foods so it's it's a it's like an egg roll you could put some",
    "start": "1595410",
    "end": "1601140"
  },
  {
    "text": "vegetables some meat in it roll it up seal it with egg wash and fry those suckers and they're delicious",
    "start": "1601140",
    "end": "1607710"
  },
  {
    "text": "and so we can actually model that into a",
    "start": "1607710",
    "end": "1614300"
  },
  {
    "text": "function so I have a bag of functions here and I've created a lumpia chain",
    "start": "1614300",
    "end": "1621360"
  },
  {
    "text": "here so this is an example of how you could implement this as a functioning",
    "start": "1621360",
    "end": "1628650"
  },
  {
    "text": "pattern so I have a lumpia assembly chain here make this a little larger if",
    "start": "1628650",
    "end": "1639090"
  },
  {
    "text": "it were okay so you'll see here already I can",
    "start": "1639090",
    "end": "1648300"
  },
  {
    "text": "use a try/catch block in my Orchestrator function and for each step that I'm",
    "start": "1648300",
    "end": "1653490"
  },
  {
    "text": "about to do I'm waiting for a new output of what I'm doing at each step of my",
    "start": "1653490",
    "end": "1659040"
  },
  {
    "text": "lumpia making so the first one is I have just plain wrapper and some filling",
    "start": "1659040",
    "end": "1664350"
  },
  {
    "text": "right so what I want to do is I want to create and start and call an activity",
    "start": "1664350",
    "end": "1670470"
  },
  {
    "text": "function called scoop filling onto wrapper and the resulting output of that function is a wrapper with some filling",
    "start": "1670470",
    "end": "1676590"
  },
  {
    "text": "on it much like that first picture that you saw and we take this potential",
    "start": "1676590",
    "end": "1681990"
  },
  {
    "text": "lumpia because it's still not ready yet and we're gonna pass it on to our next one which is the fold and roll so after",
    "start": "1681990",
    "end": "1688650"
  },
  {
    "text": "folding and rolling that output we now result in the rolled lumpia right and",
    "start": "1688650",
    "end": "1695430"
  },
  {
    "text": "again we keep going and forward the next step is we now take the rolled lumpia which is the output of the fold and roll",
    "start": "1695430",
    "end": "1701580"
  },
  {
    "text": "activity function and we input it into the add egg white seal function and then",
    "start": "1701580",
    "end": "1708150"
  },
  {
    "text": "we call that last function there's actually essentially fry those egg rolls",
    "start": "1708150",
    "end": "1713940"
  },
  {
    "text": "and that's what's running it yes that's",
    "start": "1713940",
    "end": "1722790"
  },
  {
    "text": "the last one they're delicious you should try them",
    "start": "1722790",
    "end": "1728490"
  },
  {
    "text": "they're different from any other egg girls you've tasted so the second one",
    "start": "1728490",
    "end": "1734040"
  },
  {
    "text": "the second pattern that we have is called fan out fan in and this pattern",
    "start": "1734040",
    "end": "1739860"
  },
  {
    "text": "is again fairly similar you can do this in regular functions but it's going to",
    "start": "1739860",
    "end": "1744990"
  },
  {
    "text": "be very very difficult to do the second part of this pattern in regular functions so for fan out fan in pattern",
    "start": "1744990",
    "end": "1751620"
  },
  {
    "text": "what we do is we have multiple functions that are executed in parallel so this works well well it's my German accent",
    "start": "1751620",
    "end": "1759660"
  },
  {
    "text": "there this works very well for things that can be broken down into manageable",
    "start": "1759660",
    "end": "1764730"
  },
  {
    "text": "chunks that can be worked on independently and that sounds very much like what we actually did with the",
    "start": "1764730",
    "end": "1771870"
  },
  {
    "text": "lumpia but knowing Filipinos and knowing Filipino families one person",
    "start": "1771870",
    "end": "1778090"
  },
  {
    "text": "limpia is not going to be enough for the size of Filipino families that usually come to our parties so what we want to",
    "start": "1778090",
    "end": "1784510"
  },
  {
    "text": "do is enlist the help of many titãs Tito's are ants in Tagalog and so for",
    "start": "1784510",
    "end": "1791169"
  },
  {
    "text": "this fan outfit in pattern I want to get the help of some of my teeth does my ants to start actually making more lupus",
    "start": "1791169",
    "end": "1797830"
  },
  {
    "text": "and then at the very end the collective amount of lupus that are made we now",
    "start": "1797830",
    "end": "1803620"
  },
  {
    "text": "have a much larger amount and we certainly have enough to fry for everybody that's coming to the party so",
    "start": "1803620",
    "end": "1812679"
  },
  {
    "text": "again I've modeled this in a loop iya fan out to fan in chain and I have a",
    "start": "1812679",
    "end": "1820059"
  },
  {
    "text": "teeka's fan out fan in function so again this is modeling what the orchestrator would look like and this is very simple",
    "start": "1820059",
    "end": "1828490"
  },
  {
    "text": "the fanning out part is very simple you can do that in as your functions where",
    "start": "1828490",
    "end": "1833710"
  },
  {
    "text": "it becomes very difficult is the Fanning in part how do you correlate the ones that are actually related to each other",
    "start": "1833710",
    "end": "1839980"
  },
  {
    "text": "in regular functions without keeping some sort of state well if you do that endurable functions it's very much as",
    "start": "1839980",
    "end": "1846580"
  },
  {
    "text": "simple as calling the task dot one all so as each Tita is given and assigned a",
    "start": "1846580",
    "end": "1852070"
  },
  {
    "text": "task of that particular activity function say making the loop yet once each person is done creating that lumpia",
    "start": "1852070",
    "end": "1859330"
  },
  {
    "text": "we aggregate the final sum of all the lumpia roles that we have now made and",
    "start": "1859330",
    "end": "1864520"
  },
  {
    "text": "then we can finally fry those suckers",
    "start": "1864520",
    "end": "1869429"
  },
  {
    "text": "so what does that look like that means I have a Tita Cheryl t-tomorrow Vic I take",
    "start": "1876330",
    "end": "1883570"
  },
  {
    "text": "two Angelique and I Tita Andy and by enlisting their help and by having them create a lot of a lot more Lopez we can",
    "start": "1883570",
    "end": "1891610"
  },
  {
    "text": "all collectively together create way more and then fry the newer larger amount of lluvias so the third pattern",
    "start": "1891610",
    "end": "1902890"
  },
  {
    "start": "1900000",
    "end": "2331000"
  },
  {
    "text": "here is the async HTTP API pattern that is a mouthful so this is also known as",
    "start": "1902890",
    "end": "1911950"
  },
  {
    "text": "the polling consumer pattern so when a client calls an HTTP API much like the",
    "start": "1911950",
    "end": "1917740"
  },
  {
    "text": "very first example I showed you instead of sending a direct result we send them a 202 which means its accepted it's",
    "start": "1917740",
    "end": "1924340"
  },
  {
    "text": "still processing it's not done yet and we send them some URLs to be able to check the status of what we're doing and",
    "start": "1924340",
    "end": "1931980"
  },
  {
    "text": "when I thought of this pattern I was thinking about what are things that could take a very very long time",
    "start": "1931980",
    "end": "1938440"
  },
  {
    "text": "because that's what this pattern is good for sometimes you have an asynchronous API call that kicks off something that",
    "start": "1938440",
    "end": "1945670"
  },
  {
    "text": "takes forever and I knew exactly what took takes forever when I was younger",
    "start": "1945670",
    "end": "1951570"
  },
  {
    "text": "most Asian families are very strict mine was no exception and I lived in Florida",
    "start": "1951570",
    "end": "1957070"
  },
  {
    "text": "in a nice part of Florida and my high school was about an hour away from where",
    "start": "1957070",
    "end": "1963490"
  },
  {
    "text": "I lived and we were we were okay we weren't poor poor but I hope I did not",
    "start": "1963490",
    "end": "1969280"
  },
  {
    "text": "have a car so I couldn't drive myself to anything which means my social life was completely terrible when I was a",
    "start": "1969280",
    "end": "1975010"
  },
  {
    "text": "teenager but anytime there was a party going on in my high school I would try I",
    "start": "1975010",
    "end": "1981880"
  },
  {
    "text": "would certainly try to ask my mom to see if I can go because the only way I'd be able to get there is if my mom would",
    "start": "1981880",
    "end": "1987910"
  },
  {
    "text": "drop me off and drive me there an hour maybe sometimes more to get to that place and usually when I would initiate",
    "start": "1987910",
    "end": "1995470"
  },
  {
    "text": "this process of making sure she's primed and in the best situation for her to say",
    "start": "1995470",
    "end": "2002280"
  },
  {
    "text": "yes I'm usually left waiting waiting hoping for the right mo",
    "start": "2002280",
    "end": "2007950"
  },
  {
    "text": "that she's going to say yes and so for the HTTP is sync HTTP API demo I'm gonna",
    "start": "2007950",
    "end": "2017070"
  },
  {
    "text": "do the asking my mom to go to a party in high school demo have a party request",
    "start": "2017070",
    "end": "2026280"
  },
  {
    "text": "here it's gonna start let's go alone but what's happening here",
    "start": "2026280",
    "end": "2031350"
  },
  {
    "text": "is I have my orchestration function here and what's happening here is I'm going",
    "start": "2031350",
    "end": "2038850"
  },
  {
    "text": "to call one activity function called ask mom essentially just asking her hey mom",
    "start": "2038850",
    "end": "2046920"
  },
  {
    "text": "can I please go to this party and when we look at my actual activity function",
    "start": "2046920",
    "end": "2052139"
  },
  {
    "text": "you'll see here that again it's very similar to what we did earlier but I'm essentially asking mom can I go and if",
    "start": "2052140",
    "end": "2059159"
  },
  {
    "text": "it's the second or the third try and ask with the extra incentive to hopefully make her say yes and we'll see this in a",
    "start": "2059160",
    "end": "2067649"
  },
  {
    "text": "second I added an artificial delay here so that we can see it going but essentially after I ask it every",
    "start": "2067650",
    "end": "2074940"
  },
  {
    "text": "single time it just gets worse and worse and worse and she eventually just says No up to the point where she's very very",
    "start": "2074940",
    "end": "2080310"
  },
  {
    "text": "angry at me so we're going to start this if I can do this fast enough so the",
    "start": "2080310",
    "end": "2089909"
  },
  {
    "text": "function that's running we've started this so at this point it has instantiate",
    "start": "2089910",
    "end": "2097740"
  },
  {
    "text": "'add all of my orchestrators it has some of the other ones that i have here the one that we're interested in is the HTTP",
    "start": "2097740",
    "end": "2103830"
  },
  {
    "text": "request party request and so I'm going",
    "start": "2103830",
    "end": "2110340"
  },
  {
    "text": "to take this particular endpoint and",
    "start": "2110340",
    "end": "2116220"
  },
  {
    "text": "we're going to start this orchestration we're going to start the process of asking my mom if I can go to this party",
    "start": "2116220",
    "end": "2121580"
  },
  {
    "text": "so we are going to do that",
    "start": "2121580",
    "end": "2128060"
  },
  {
    "text": "and you'll see here that this is exactly what that means we got a 202 it's",
    "start": "2130530",
    "end": "2138970"
  },
  {
    "text": "accepted its processing that's running and remember I added that artificial delay there so it's gonna take a little bit longer but what this means is that",
    "start": "2138970",
    "end": "2145930"
  },
  {
    "text": "now I have these particular URLs to go check and see how am i doing on the",
    "start": "2145930",
    "end": "2153070"
  },
  {
    "text": "status of being able to go to this party see if this goes through you click the",
    "start": "2153070",
    "end": "2159820"
  },
  {
    "text": "right one status this might take a little longer unless the demo gods are",
    "start": "2159820",
    "end": "2165700"
  },
  {
    "text": "not gonna bless me today see if there's an edge so it did execute the get it is",
    "start": "2165700",
    "end": "2175450"
  },
  {
    "text": "asking mom and you'll see it's asking mom now can I get can I go to this party and",
    "start": "2175450",
    "end": "2184860"
  },
  {
    "text": "let's see on the fly debugging see",
    "start": "2185280",
    "end": "2192460"
  },
  {
    "text": "what's happening here I don't think so",
    "start": "2192460",
    "end": "2198360"
  },
  {
    "text": "delay was only 1,500 well this is very",
    "start": "2198360",
    "end": "2203620"
  },
  {
    "text": "indicative because it's not gonna happen anyways so what ends up happening and",
    "start": "2203620",
    "end": "2210970"
  },
  {
    "text": "this is another cool part is that we can actually see what's happening here by",
    "start": "2210970",
    "end": "2218110"
  },
  {
    "text": "going into my a share storage Explorer",
    "start": "2218110",
    "end": "2224380"
  },
  {
    "text": "if I can find this so right now because",
    "start": "2224380",
    "end": "2229600"
  },
  {
    "text": "I'm developing locally I'm using an azure storage emulator so I don't have an actual account connected yet but",
    "start": "2229600",
    "end": "2238320"
  },
  {
    "text": "apologize this kind of small but you'll see here that it does keep track of",
    "start": "2238320",
    "end": "2243580"
  },
  {
    "text": "every single thing here and that's what we were supposed to get so on the third one she's getting really agitated abort",
    "start": "2243580",
    "end": "2250090"
  },
  {
    "text": "abort asking her well we'll see here that that's not the one that ran but Swan 34",
    "start": "2250090",
    "end": "2258910"
  },
  {
    "text": "that should be the one but in either case any",
    "start": "2258910",
    "end": "2263950"
  },
  {
    "text": "time you run your orchestrations you do have a log here that you can go through it's very good for debugging it's very",
    "start": "2263950",
    "end": "2269890"
  },
  {
    "text": "good for learning purposes of what is actually happening and you can go through step by step of those particular",
    "start": "2269890",
    "end": "2275470"
  },
  {
    "text": "tasks that are scheduled when the orchestrator is calling each activity function so we'll just let that die like",
    "start": "2275470",
    "end": "2284560"
  },
  {
    "text": "my social highschool dreams so async",
    "start": "2284560",
    "end": "2298600"
  },
  {
    "text": "HTTP API used potentially for very very long running things and when you want your client to be able to check on the",
    "start": "2298600",
    "end": "2305110"
  },
  {
    "text": "status of that and you can see the reason that this is so good with durable functions is that this is built-in to",
    "start": "2305110",
    "end": "2311680"
  },
  {
    "text": "the library you don't have to write the code to handle the long-running interactions you don't have to create",
    "start": "2311680",
    "end": "2318220"
  },
  {
    "text": "those endpoints it's already there for you it will take care of querying the",
    "start": "2318220",
    "end": "2323380"
  },
  {
    "text": "orchestrator about the status and it also manages the state as we've seen in the Azure storage account so that's the",
    "start": "2323380",
    "end": "2332560"
  },
  {
    "start": "2331000",
    "end": "2545000"
  },
  {
    "text": "async HTTP API the next one is the monitor function so the monitor or the",
    "start": "2332560",
    "end": "2340600"
  },
  {
    "text": "monitor pattern excuse me so the monitor pattern you can think of as the a sink a mirror of the async HTTP",
    "start": "2340600",
    "end": "2348970"
  },
  {
    "text": "API pattern where the async HTTP API",
    "start": "2348970",
    "end": "2354220"
  },
  {
    "text": "pattern has a client constantly querying and checking on the status of what's",
    "start": "2354220",
    "end": "2359350"
  },
  {
    "text": "going on with our orchestration and this one we have the orchestration pull a",
    "start": "2359350",
    "end": "2364360"
  },
  {
    "text": "particular service to see what's going on or at regular intervals or to see if",
    "start": "2364360",
    "end": "2369820"
  },
  {
    "text": "there's a particular state that has been met that we are keeping an eye on so",
    "start": "2369820",
    "end": "2375100"
  },
  {
    "text": "these are things that also can be long-running these are things that are constantly asked and these are things",
    "start": "2375100",
    "end": "2380980"
  },
  {
    "text": "that we would keep an eye out for and this is very very much in line with what my grandmother does she always asked me",
    "start": "2380980",
    "end": "2388180"
  },
  {
    "text": "where her grandchildren are ever since I have gotten married it has been to this",
    "start": "2388180",
    "end": "2393520"
  },
  {
    "text": "day ever three months well just about that time when she thinks it's long enough she's gonna ask me hey so where are those",
    "start": "2393520",
    "end": "2399740"
  },
  {
    "text": "children and I say it's never gonna happen and we can see here an example of",
    "start": "2399740",
    "end": "2408380"
  },
  {
    "text": "how we would implement that I have one",
    "start": "2408380",
    "end": "2414440"
  },
  {
    "text": "called what kids and so here we have me",
    "start": "2414440",
    "end": "2420500"
  },
  {
    "text": "I'm her granddaughter Adriene ever since being married I there's this",
    "start": "2420500",
    "end": "2425930"
  },
  {
    "text": "activity function that I'm gonna call ask about kids that my grandmother has decided to invoke she's going to",
    "start": "2425930",
    "end": "2432020"
  },
  {
    "text": "implement the monitor pattern on me we have a quarterly ask here around every",
    "start": "2432020",
    "end": "2438320"
  },
  {
    "text": "three months she's gonna ask me so where are those beautiful grandchildren I deserve grandchildren where is your",
    "start": "2438320",
    "end": "2443780"
  },
  {
    "text": "current one of my grandkids and because this is a monitor pattern this is going to continue indefinitely until some sort",
    "start": "2443780",
    "end": "2451520"
  },
  {
    "text": "of some sort of expression is met that we have said so in this case one of",
    "start": "2451520",
    "end": "2459140"
  },
  {
    "text": "those is has it been three months yet has it been past our particular time",
    "start": "2459140",
    "end": "2464240"
  },
  {
    "text": "where she usually asks me hey where are those kids if it has timed out you have",
    "start": "2464240",
    "end": "2469490"
  },
  {
    "text": "a custom section custom status here though we send but essentially she's just gonna ask me again she's gonna restart the process you also have",
    "start": "2469490",
    "end": "2476990"
  },
  {
    "text": "another state here that would also end this pattern and that's if I actually got pregnant I don't think that's ever",
    "start": "2476990",
    "end": "2483890"
  },
  {
    "text": "gonna happen so we could have another function that constantly checks and says",
    "start": "2483890",
    "end": "2489110"
  },
  {
    "text": "hey are you pregnant hey do you have a bun in the oven hanging are you doing this and if that",
    "start": "2489110",
    "end": "2494360"
  },
  {
    "text": "is actually met then this monitor function or monitor pattern wouldn't need to exist anymore she wouldn't need",
    "start": "2494360",
    "end": "2500210"
  },
  {
    "text": "to continue asking me because finally she's gonna get her grandkids and that's",
    "start": "2500210",
    "end": "2505940"
  },
  {
    "text": "what is stated here and also if it's right in between those times and she",
    "start": "2505940",
    "end": "2512780"
  },
  {
    "text": "just is itching maybe she's seen her other grand kids or maybe she's seen her friends with grandkids and she's missing",
    "start": "2512780",
    "end": "2518300"
  },
  {
    "text": "out oh there's something here too where if it's just not that time like it's not the three month mark and it's not been",
    "start": "2518300",
    "end": "2525020"
  },
  {
    "text": "expired or I'm obviously not going to be pregnant she's probably going to ask me in another 15 days right",
    "start": "2525020",
    "end": "2530890"
  },
  {
    "text": "around that breakpoint 15 day intervals so this is a very liberal interpretation",
    "start": "2530890",
    "end": "2540760"
  },
  {
    "text": "of what I think of monitor and pattern is and I did not do a full screen",
    "start": "2540760",
    "end": "2547830"
  },
  {
    "start": "2545000",
    "end": "2710000"
  },
  {
    "text": "showing of that Jeff so the next pattern",
    "start": "2547830",
    "end": "2553270"
  },
  {
    "text": "is human interaction this is something that's very very common you have all done it yourselves already if you have",
    "start": "2553270",
    "end": "2560080"
  },
  {
    "text": "done any kind of two-factor authentication that's an example of something like human interaction",
    "start": "2560080",
    "end": "2567060"
  },
  {
    "text": "essentially some workflows need human interaction shocking and the next steps",
    "start": "2567060",
    "end": "2573820"
  },
  {
    "text": "in our workflow are dependent on whether that person or that group or something",
    "start": "2573820",
    "end": "2579760"
  },
  {
    "text": "does something or does not do something we need that human to continue the",
    "start": "2579760",
    "end": "2587110"
  },
  {
    "text": "process so the other popular example of",
    "start": "2587110",
    "end": "2594700"
  },
  {
    "text": "this is the approval workflow maybe it's for our pull requests whenever we have someone approve it and it goes to merge",
    "start": "2594700",
    "end": "2600820"
  },
  {
    "text": "we always need somebody to look at it first unless you don't have any rules and it's the wild wild west and you just",
    "start": "2600820",
    "end": "2607480"
  },
  {
    "text": "merge your own PR essence your branches please don't do that but in this particular case we have an",
    "start": "2607480",
    "end": "2616600"
  },
  {
    "text": "example of that and that's the approval workflow so this is very very common and",
    "start": "2616600",
    "end": "2624370"
  },
  {
    "text": "this is a this is what you would do to kind of implement that in durable functions so assuming we need to request",
    "start": "2624370",
    "end": "2632440"
  },
  {
    "text": "an approval for something say the github request we're going to use the foundling",
    "start": "2632440",
    "end": "2639850"
  },
  {
    "text": "approved current UTC date time and we're gonna have a durable timeout which",
    "start": "2639850",
    "end": "2645160"
  },
  {
    "text": "creates a durable or I create I apologize a durable timer that is safe",
    "start": "2645160",
    "end": "2650740"
  },
  {
    "text": "for durable functions and then all we have to do now is wait for some sort of",
    "start": "2650740",
    "end": "2655870"
  },
  {
    "text": "approval event so when somebody actually approves our pull requests or denies it and it has",
    "start": "2655870",
    "end": "2661219"
  },
  {
    "text": "passed a particular amount of time then we can decide to do something so if it's",
    "start": "2661219",
    "end": "2666739"
  },
  {
    "text": "approved then we can call another activity function where we write you know whatever needs to be done to",
    "start": "2666739",
    "end": "2672920"
  },
  {
    "text": "continue the process approval so maybe that's merging our PR in or if the next",
    "start": "2672920",
    "end": "2678259"
  },
  {
    "text": "process is needs more comments then the next step would be to escalate and send an email and say hey can you check out",
    "start": "2678259",
    "end": "2684769"
  },
  {
    "text": "these comments or if no one looks at it then maybe we just spam email them and",
    "start": "2684769",
    "end": "2689869"
  },
  {
    "text": "say look at my PR but all of these things are the trigger for the next step",
    "start": "2689869",
    "end": "2696559"
  },
  {
    "text": "in that human interaction pattern that",
    "start": "2696559",
    "end": "2710779"
  },
  {
    "start": "2710000",
    "end": "2868000"
  },
  {
    "text": "is a human interaction pattern and then the last one is fairly new it has come",
    "start": "2710779",
    "end": "2717380"
  },
  {
    "text": "about with the recent introduction of the entity functions and that one is called the aggregator pattern so the",
    "start": "2717380",
    "end": "2726799"
  },
  {
    "text": "aggregator pattern is when you need to collect data over a bunch of resources",
    "start": "2726799",
    "end": "2733369"
  },
  {
    "text": "or a variety of sources or if you need to collect data over a long period of time a good example is something maybe",
    "start": "2733369",
    "end": "2739910"
  },
  {
    "text": "like your Fitbit or google fit that keeps track of your steps keeps track of your heartrate your weight if you log",
    "start": "2739910",
    "end": "2746210"
  },
  {
    "text": "about all that stuff calories that you take all of these things they can come in in batches they can come in at",
    "start": "2746210",
    "end": "2752749"
  },
  {
    "text": "different parts of the day they can come in like you know you're pretty good one week two weeks straight and then during",
    "start": "2752749",
    "end": "2759229"
  },
  {
    "text": "the holidays kind of drops off you don't get that information anymore these are the kinds of things that are our that",
    "start": "2759229",
    "end": "2766369"
  },
  {
    "text": "need the aggregator pattern because the way we grab our data is so buried and",
    "start": "2766369",
    "end": "2772969"
  },
  {
    "text": "what makes this difficult in regular as your functions is that well how do you again correlate all of that data out of",
    "start": "2772969",
    "end": "2780979"
  },
  {
    "text": "all of that period of time out of the variety of resources you can kind of piecemeal grab them you can kind of say",
    "start": "2780979",
    "end": "2787880"
  },
  {
    "text": "okay this key from this particular one and this one came from this particular device but",
    "start": "2787880",
    "end": "2793120"
  },
  {
    "text": "that's a very very hard to keep track of it's more code that you need to write it's more mental overhead that you have",
    "start": "2793120",
    "end": "2798530"
  },
  {
    "text": "to have in your head and it's something that durable functions can give you and",
    "start": "2798530",
    "end": "2803570"
  },
  {
    "text": "take a lot of that load off of you if you use a pattern like this and that's",
    "start": "2803570",
    "end": "2811430"
  },
  {
    "text": "the Jeff I decided to use for a greater function so those are the six that I I",
    "start": "2811430",
    "end": "2818630"
  },
  {
    "text": "wanted to show you and these are the six that are most commonly used when using durable functions the most common ones",
    "start": "2818630",
    "end": "2824630"
  },
  {
    "text": "that you've seen and have probably used are the human interaction ones like I've mentioned and the ones that are fairly",
    "start": "2824630",
    "end": "2830450"
  },
  {
    "text": "easy to start using already are the function chaining and the fan out fan in patterns just because they are so close",
    "start": "2830450",
    "end": "2837830"
  },
  {
    "text": "to the other task-based ways that we have written workflows before but now by",
    "start": "2837830",
    "end": "2843200"
  },
  {
    "text": "putting them in an Orchestrator function you can now leave all of that hard work to in the durable functions library and",
    "start": "2843200",
    "end": "2850510"
  },
  {
    "text": "then it's all I have so thank you",
    "start": "2850510",
    "end": "2855160"
  },
  {
    "text": "and we have time so if anybody has questions or wants to come talk to me after I will be here",
    "start": "2861650",
    "end": "2869690"
  }
]