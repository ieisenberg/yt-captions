[
  {
    "text": "thank you so much yeah I mean the benefit of being able to ask me questions in this forum is as though there's definitely no chance of me",
    "start": "3600",
    "end": "9519"
  },
  {
    "text": "coughing on you while this is happening but I I was really looking forward to being there in person I love spending time in Copenhagen and um when yakob",
    "start": "9519",
    "end": "17600"
  },
  {
    "text": "told me about all the plans for the festival I was like yep I'm going to be there the whole week and I cleared my",
    "start": "17600",
    "end": "22800"
  },
  {
    "text": "schedule I had no other work going on um and unfortunately despite all of that",
    "start": "22800",
    "end": "29599"
  },
  {
    "text": "you can't avoid getting the spicy cough and I got the spicy cough and so I'm I'm more or less on the menend now but so",
    "start": "29599",
    "end": "36040"
  },
  {
    "text": "thank you so much for coming along and watching my disembodied head on a screen U today I'm going to be talking a little",
    "start": "36040",
    "end": "41440"
  },
  {
    "text": "bit about words and what they mean and what we often think they mean and how",
    "start": "41440",
    "end": "48320"
  },
  {
    "text": "different people have different views about the same words H now a lot of the time I SP I sort of talk about uh boxes",
    "start": "48320",
    "end": "57320"
  },
  {
    "text": "and arrows I spend most of my time looking at system architecture and we're obsessed by boxes and arrows it's one of",
    "start": "57320",
    "end": "63879"
  },
  {
    "text": "the main things that we focus on um and sometimes we're thinking about the size",
    "start": "63879",
    "end": "69400"
  },
  {
    "text": "of those boxes how big should a box be or for that matter how how small should",
    "start": "69400",
    "end": "75080"
  },
  {
    "text": "a box be sometimes we're talking about more interesting things than that like",
    "start": "75080",
    "end": "80200"
  },
  {
    "text": "what should be in a box and should we break that box up into smaller pieces",
    "start": "80200",
    "end": "85640"
  },
  {
    "text": "hint you probably should occasionally we deal with even more important things",
    "start": "85640",
    "end": "92240"
  },
  {
    "text": "like what shape should the boxes be and of course I have my own personal views on the site the shapes of the boxes that",
    "start": "92240",
    "end": "98560"
  },
  {
    "text": "you should pick um but often when I'm talking about these boxes and these arrows and the boxes and the arrows and",
    "start": "98560",
    "end": "104399"
  },
  {
    "text": "the boxes and the arrows we often Overlook the arrows and this talk is",
    "start": "104399",
    "end": "110680"
  },
  {
    "text": "very much about those arrows the arrows that we have between the various boxes",
    "start": "110680",
    "end": "115880"
  },
  {
    "text": "that we have when thinking about microservices which is the area I focus on a fair bit",
    "start": "115880",
    "end": "122759"
  },
  {
    "text": "uh we the arrows are vital in a way uh they represent a logical dependency in",
    "start": "122759",
    "end": "129599"
  },
  {
    "text": "our architecture diagrams a microservice architecture only exists because of the",
    "start": "129599",
    "end": "134920"
  },
  {
    "text": "interaction between things in a diagram like this that arrow is showing one",
    "start": "134920",
    "end": "140319"
  },
  {
    "text": "thing depending on another the returns micros service here needs the shipping",
    "start": "140319",
    "end": "146760"
  },
  {
    "text": "service to do something and this creates some sort of interesting tensions in a world where we want things to be",
    "start": "146760",
    "end": "153319"
  },
  {
    "text": "independent and we can Implement those dependencies in lots of different ways but fundamentally that dependency",
    "start": "153319",
    "end": "159400"
  },
  {
    "text": "exists we depend on this thing and then the lot the devil in the detail is",
    "start": "159400",
    "end": "165800"
  },
  {
    "text": "around how that that Implement how that sort of dependency is",
    "start": "165800",
    "end": "171760"
  },
  {
    "text": "implemented and at this this point we start getting to conversations around interactions between Services a lot of",
    "start": "171760",
    "end": "179120"
  },
  {
    "text": "the conversation traditionally starts revolving around these two concepts the idea that we",
    "start": "179120",
    "end": "184440"
  },
  {
    "text": "should sort of have a tradeoff between synchronous and asynchronous you've got those people that don't really know",
    "start": "184440",
    "end": "190560"
  },
  {
    "text": "about this distinction and just get on with their lives and then you've got the fans of synchronous programming who",
    "start": "190560",
    "end": "195920"
  },
  {
    "text": "often say that if you're doing anything else you're a bad person um and this talk today is really about these terms",
    "start": "195920",
    "end": "202840"
  },
  {
    "text": "or more really about this term and how this term is absolutely useless but I'm going to expand upon",
    "start": "202840",
    "end": "209519"
  },
  {
    "text": "that and share why when we get down to it I've I've always struggled with those Concepts and",
    "start": "209519",
    "end": "216319"
  },
  {
    "text": "that's for and for that reason I've spent a lot of my time thinking instead around two styles of interaction which I",
    "start": "216319",
    "end": "224080"
  },
  {
    "text": "think can often be a little bit easier to Define in terms of their pros and their cons when they're happening when",
    "start": "224080",
    "end": "229840"
  },
  {
    "text": "they're not happening and and are almost separate from the conversation of synchronous and asynchronous I want to",
    "start": "229840",
    "end": "235799"
  },
  {
    "text": "introduce those briefly because we'll come back to these terms throughout the class today we have the concept of request response",
    "start": "235799",
    "end": "242959"
  },
  {
    "text": "and we have the concept of eveng driven interaction and I think this distinction is a lot more clearcut than the",
    "start": "242959",
    "end": "249400"
  },
  {
    "text": "distinction between synchronous and asynchronous the classic request response based interaction is familiar",
    "start": "249400",
    "end": "255360"
  },
  {
    "text": "to many people and this is often the sort of default interaction model that we fall back to when we first create a",
    "start": "255360",
    "end": "262880"
  },
  {
    "text": "the service interaction because this is an interaction that's so familiar to us it mimics the idea of a one object",
    "start": "262880",
    "end": "271080"
  },
  {
    "text": "calling a method on another object in this context here we have a a consumer",
    "start": "271080",
    "end": "276960"
  },
  {
    "text": "in this case the returns microservice which is making is sending a request it's asking for something and sometimes",
    "start": "276960",
    "end": "284280"
  },
  {
    "text": "it could be asking for a piece of data uh but more generically it's just asking for something it could be asking for",
    "start": "284280",
    "end": "289560"
  },
  {
    "text": "some processing to be kicked off this particular situation we've got a microservice which is sort of handling a",
    "start": "289560",
    "end": "295800"
  },
  {
    "text": "returns process and it needs a postage label that it can send back to its customer the shipping microservice is",
    "start": "295800",
    "end": "301960"
  },
  {
    "text": "responsible for working out the most optimal way to ship a product and based on that it generates a return label with",
    "start": "301960",
    "end": "308880"
  },
  {
    "text": "the career company of our choice and that's what comes back as the response so we have a consumer this is the thing",
    "start": "308880",
    "end": "315520"
  },
  {
    "text": "that consumes a service we have the request being sent to the shipping",
    "start": "315520",
    "end": "321120"
  },
  {
    "text": "service and hopefully we get a response and hopefully that response is a happy response this is very sort of two-way",
    "start": "321120",
    "end": "327560"
  },
  {
    "text": "conversational uh it's bit like a telephone call in away between two parties and we can compare this with the",
    "start": "327560",
    "end": "334400"
  },
  {
    "text": "adventur interactions which are can feel quite alien and a little much more",
    "start": "334400",
    "end": "340240"
  },
  {
    "text": "passive in a way in the situation here we've got the inventory microservice uh",
    "start": "340240",
    "end": "345360"
  },
  {
    "text": "has we've received some new stock into our warehouse and the inventory microservice which manages our stock or",
    "start": "345360",
    "end": "352039"
  },
  {
    "text": "at least is aware of what stock we've got has fired an event to let people know that new stock has arrived 10,000",
    "start": "352039",
    "end": "359759"
  },
  {
    "text": "copies of Justin Bieber's Greatest Hits are now in the warehouse and with eventure an",
    "start": "359759",
    "end": "365639"
  },
  {
    "text": "interaction it's about emitting events and they're like a fact you put those facts out there and it's up for other",
    "start": "365639",
    "end": "373080"
  },
  {
    "text": "services in the system to decide if they want to react to that event and even if",
    "start": "373080",
    "end": "378120"
  },
  {
    "text": "they do want to react to that event it's up to them as to what they do with that information we're not telling anybody to",
    "start": "378120",
    "end": "384280"
  },
  {
    "text": "do anything in this situation the promotions and the wish list microservices here two different",
    "start": "384280",
    "end": "389520"
  },
  {
    "text": "microservices could do something totally different with it the promotions microservice for example might",
    "start": "389520",
    "end": "395520"
  },
  {
    "text": "automatically apply discounting based on stock levels the wishlist microservice",
    "start": "395520",
    "end": "400840"
  },
  {
    "text": "though this might actually alert people that maybe an item of stock that they had back ordered was now available",
    "start": "400840",
    "end": "407599"
  },
  {
    "text": "letting yakob know that his uh collector's limited edition box set of Justin Bieber with a holographic front",
    "start": "407599",
    "end": "414160"
  },
  {
    "text": "cover is now available for him to order in this example here the consumers are",
    "start": "414160",
    "end": "419960"
  },
  {
    "text": "on the right side of this interaction they are consuming the functionality but",
    "start": "419960",
    "end": "425120"
  },
  {
    "text": "they consume the functionality by reacting to it whereas with with request",
    "start": "425120",
    "end": "430280"
  },
  {
    "text": "response the consumers in are the ones that actually initiate the interaction",
    "start": "430280",
    "end": "435520"
  },
  {
    "text": "and that's a that's a subtle difference so this distinction I feel is is is quite simple and straightforward to me",
    "start": "435520",
    "end": "442199"
  },
  {
    "text": "and most microsof Architects have a mix of these interaction Styles but I wanted you to have these Styles at the back of",
    "start": "442199",
    "end": "448400"
  },
  {
    "text": "your head because we're going to go a bit deeper into some of the terms uh that we use to describe these",
    "start": "448400",
    "end": "454440"
  },
  {
    "text": "interactions and it's really this interaction I still think is the most commonly",
    "start": "454440",
    "end": "459840"
  },
  {
    "text": "described and yet has the least valuable",
    "start": "459840",
    "end": "465039"
  },
  {
    "text": "meanings so for me request response event feels concrete I can point to it",
    "start": "465039",
    "end": "470960"
  },
  {
    "text": "and tell you pretty much 99% of the time which one we're talking about but and we",
    "start": "470960",
    "end": "476080"
  },
  {
    "text": "traditionally think of sort the request response based interactions as being either synchronous or asynchronous in",
    "start": "476080",
    "end": "483199"
  },
  {
    "text": "nature event ofen interactions we would traditionally describe as always being",
    "start": "483199",
    "end": "488240"
  },
  {
    "text": "asynchronous things reacting to those events are operating on their own threads of execution things get a lot",
    "start": "488240",
    "end": "495440"
  },
  {
    "text": "murkier in this world though and this was the challenge I was",
    "start": "495440",
    "end": "500960"
  },
  {
    "text": "coming up with was when having conversations with people that'd say well I think you should always do asynchronous or why should I do",
    "start": "500960",
    "end": "507400"
  },
  {
    "text": "asynchronous communication why is one thing better than the other and when trying to understand that space I looked",
    "start": "507400",
    "end": "514518"
  },
  {
    "text": "at lots of work done around asynchronous communication and basically came up with the realization that there is no clear",
    "start": "514519",
    "end": "521839"
  },
  {
    "text": "consistent definition about what asynchronous even means and this is problematic when it's something that we",
    "start": "521839",
    "end": "527480"
  },
  {
    "text": "want to have conversations about constantly and I was kind of inspired to",
    "start": "527480",
    "end": "532519"
  },
  {
    "text": "actually write this talk based on a really great um uh post on his",
    "start": "532519",
    "end": "538640"
  },
  {
    "text": "newsletter by Pat Helen Pat Helen came to the realization that we're using this term eventual",
    "start": "538640",
    "end": "544040"
  },
  {
    "text": "consistency and yet he realized that the problem with the term eventual consistency is that consistency as a",
    "start": "544040",
    "end": "550680"
  },
  {
    "text": "word has many different meanings in many different contexts the concept of consistency in",
    "start": "550680",
    "end": "558040"
  },
  {
    "text": "terms of behavior versus consistency in terms of a database transaction versus",
    "start": "558040",
    "end": "564160"
  },
  {
    "text": "consistency in the context of eventual consistency they're all quite",
    "start": "564160",
    "end": "570360"
  },
  {
    "text": "different little bit of homework for you have a think about what you think consistency means for a databased",
    "start": "570360",
    "end": "576880"
  },
  {
    "text": "transaction and then actually look at what the definition is of consistency in acid and you'll be very surprised at",
    "start": "576880",
    "end": "584200"
  },
  {
    "text": "what it actually means and so Pat Helen actually made the argument that because eventual consistency was quite different",
    "start": "584200",
    "end": "590040"
  },
  {
    "text": "to the other types of consistency we talk about that he should actually he tried to come up with a new name and he",
    "start": "590040",
    "end": "595120"
  },
  {
    "text": "defined it as being eventual convergence now unfortunately for this",
    "start": "595120",
    "end": "600320"
  },
  {
    "text": "talk and this is giving away the lead in a way I haven't come up with a better name than asynchronous but at the very",
    "start": "600320",
    "end": "606640"
  },
  {
    "text": "least I want to take you through why I think that term isn't useful and we'll look at the many different ways in which",
    "start": "606640",
    "end": "612760"
  },
  {
    "text": "people interpret what asynchronus means so while struggling with this I",
    "start": "612760",
    "end": "618519"
  },
  {
    "text": "basically did what I always do which is try and write down what other people tell me because it's better for them to",
    "start": "618519",
    "end": "623920"
  },
  {
    "text": "be blamed for their opinions than for me so I put a thing out on on Twitter it's",
    "start": "623920",
    "end": "629399"
  },
  {
    "text": "always going to be called Twitter as far as I'm concerned and I said you know what does asynchronous communication mean to you and I got loads of really",
    "start": "629399",
    "end": "636399"
  },
  {
    "text": "interesting responses from an awful lot of people that I um that I've got a lot of time for and it was so interesting to",
    "start": "636399",
    "end": "644240"
  },
  {
    "text": "me that there was very little consensus so maybe what I found will not",
    "start": "644240",
    "end": "649760"
  },
  {
    "text": "Shock you because I've basically given away what I found one of the first answers I got back was from an old colleague of mine Darren Hobs and Darren",
    "start": "649760",
    "end": "656160"
  },
  {
    "text": "Hobs says that for him asynchronous communication is the the difference",
    "start": "656160",
    "end": "661880"
  },
  {
    "text": "between synchronous and asynchronous communication is the difference between sending an email versus having a phone",
    "start": "661880",
    "end": "667920"
  },
  {
    "text": "call and that was there's a couple of people that had sort similar responses that synchronous is more like a phone",
    "start": "667920",
    "end": "673839"
  },
  {
    "text": "call and uh asynchronous is more like email and at some level that feels right",
    "start": "673839",
    "end": "682519"
  },
  {
    "text": "um but this does imply that asynchronous communication will somehow be slower",
    "start": "682519",
    "end": "688000"
  },
  {
    "text": "than synchronous communic a and yet that doesn't stack up with my own",
    "start": "688000",
    "end": "693160"
  },
  {
    "text": "observations in terms of having built a lot of very low latency asynchronous systems in fact the vast majority of the",
    "start": "693160",
    "end": "700120"
  },
  {
    "text": "low latency um Computing applications that I've worked in or adjacent to have",
    "start": "700120",
    "end": "705399"
  },
  {
    "text": "actually used asynchronous communication mechanisms so the speed doesn't necessarily line up with that so that",
    "start": "705399",
    "end": "712600"
  },
  {
    "text": "also didn't feel quite right either but there's something in there there's a useful distinction in there somewhere so",
    "start": "712600",
    "end": "719399"
  },
  {
    "text": "I'll started looking at other resources some of you actually hands up how many of you have seen the reactive Manifesto",
    "start": "719399",
    "end": "725360"
  },
  {
    "text": "seen it or read it some of you might even have signed it it's a useful piece",
    "start": "725360",
    "end": "731200"
  },
  {
    "text": "of what I would describe as technical Dogma right so it's a very um",
    "start": "731200",
    "end": "737000"
  },
  {
    "text": "opinionated stance on software architecture and I have no problem with",
    "start": "737000",
    "end": "742040"
  },
  {
    "text": "people having strong opinions I think that's absolutely fine as long as you you know back up why um and the authors",
    "start": "742040",
    "end": "748040"
  },
  {
    "text": "of the reactive man I've put a lot of work into explaining why they think in the way they do and putting some detail",
    "start": "748040",
    "end": "754560"
  },
  {
    "text": "around how they think you should build applications um just to be clear I agree",
    "start": "754560",
    "end": "759639"
  },
  {
    "text": "on some of the stuff in this and I disagree with a lot of it as well but I also am friends with a bunch of the authors so you know friends are allowed",
    "start": "759639",
    "end": "765920"
  },
  {
    "text": "to disagree with each other but they have done a nice bit of work to actually Define what the term asynchronous means",
    "start": "765920",
    "end": "773240"
  },
  {
    "text": "so this is useful to us right these are super smart Architects and techies that have built lots of very complicated",
    "start": "773240",
    "end": "779600"
  },
  {
    "text": "distributor systems and they've taken the effort to describe for them what asynchronous means fantastic here with",
    "start": "779600",
    "end": "786519"
  },
  {
    "text": "my Grail I've now got the answer I need so I can look at this and tell you this is what asynchronous means so here we go",
    "start": "786519",
    "end": "794800"
  },
  {
    "text": "asynchronous Computing communication in the context of this Manifesto we mean",
    "start": "794800",
    "end": "800160"
  },
  {
    "text": "that the processing of a request occurs at an arbitrary point in time sometime",
    "start": "800160",
    "end": "807160"
  },
  {
    "text": "after it has been transmitted from client to server okay",
    "start": "807160",
    "end": "813360"
  },
  {
    "text": "so the request is processed after it's been transmitted",
    "start": "813360",
    "end": "818800"
  },
  {
    "text": "from client to server so what uh because",
    "start": "818800",
    "end": "824920"
  },
  {
    "text": "like how would that not be the case ever like as opposed to the server processing",
    "start": "824920",
    "end": "831160"
  },
  {
    "text": "the request before I send it like through some kind of I don't know temporal Wormhole or something this is",
    "start": "831160",
    "end": "838279"
  },
  {
    "text": "some kind of weird Doctor Who stuff that's going on here this is kind of already not a very useful distinction we",
    "start": "838279",
    "end": "844959"
  },
  {
    "text": "always send something process something after it's sent in any situation otherwise causality does not work but if",
    "start": "844959",
    "end": "852839"
  },
  {
    "text": "we dive a bit deeper into the reactive Manifesto they do try and there are some other clarifications and explanations",
    "start": "852839",
    "end": "858199"
  },
  {
    "text": "around these terms so they say that asynchronous communication is the opposite of synchronous",
    "start": "858199",
    "end": "865480"
  },
  {
    "text": "processing uh which implies that the client only resumes its own execution once the",
    "start": "865480",
    "end": "873040"
  },
  {
    "text": "service has processed the request so they're saying that synchronous communication the client",
    "start": "873040",
    "end": "880120"
  },
  {
    "text": "cannot continue until the server has processed the request and then it can",
    "start": "880120",
    "end": "885959"
  },
  {
    "text": "continue so that's kind of a more concrete definition for them of what",
    "start": "885959",
    "end": "891560"
  },
  {
    "text": "they mean asynchronous to mean um however as we'll see really later",
    "start": "891560",
    "end": "898000"
  },
  {
    "text": "there's a better term for what this is than asynchronous around the same sort of",
    "start": "898000",
    "end": "903800"
  },
  {
    "text": "time Steve Smith came back and said you know that for him um when talking about what a s communication meant uh he",
    "start": "903800",
    "end": "910399"
  },
  {
    "text": "thought that it meant that the TCP connection was going to be open for the duration of the communication so this is",
    "start": "910399",
    "end": "917120"
  },
  {
    "text": "kind of thinking about it from a networking point of view right so during a synchronous interchange I have a connection",
    "start": "917120",
    "end": "923079"
  },
  {
    "text": "open and it has to be kept open for the whole conversation now there's a few",
    "start": "923079",
    "end": "928959"
  },
  {
    "text": "kind of devils in details here because you've got things like htb2 which sends multiple request response streams over a",
    "start": "928959",
    "end": "934720"
  },
  {
    "text": "single connection reusers connections and some message Brokers reuse connections so this isn't quite right",
    "start": "934720",
    "end": "941160"
  },
  {
    "text": "and so I start poking at Steve Steve's a friend as well so I'm allowed to poke at him I said Steve so you're saying if I'm",
    "start": "941160",
    "end": "946800"
  },
  {
    "text": "using UDP or quick I'm not doing asynchronous so he clarifies and know what he actually meant is I assume",
    "start": "946800",
    "end": "953079"
  },
  {
    "text": "you're not blocking for a response and this is getting a bit more concrete now and I think this is more concretely what",
    "start": "953079",
    "end": "959000"
  },
  {
    "text": "the reactive Manifesto is talking about is client side nonblocking so let's",
    "start": "959000",
    "end": "964560"
  },
  {
    "text": "explore what that is a little bit and see why it's good and why it may not be the whole thing we need to think",
    "start": "964560",
    "end": "970480"
  },
  {
    "text": "about but non-blocking is at least a better and more concrete term so let's",
    "start": "970480",
    "end": "976800"
  },
  {
    "text": "look at that here's a very simple interaction we've got an enrollment microservice it's going to kick off some",
    "start": "976800",
    "end": "982199"
  },
  {
    "text": "processing some stuff's got to happen and uh the enrollment microservice needs to go to the loyalty microservice and",
    "start": "982199",
    "end": "987759"
  },
  {
    "text": "say please give this person some points we need to award yakob some points because he's signed up to the Justin",
    "start": "987759",
    "end": "992839"
  },
  {
    "text": "Bieber fan club and uh in addition to awarding him some points um because he's",
    "start": "992839",
    "end": "998240"
  },
  {
    "text": "such a big believer uh we're also going to upgrade his subscription to Bieber class one alpha tier right so one",
    "start": "998240",
    "end": "1005639"
  },
  {
    "text": "microservice needing to kind of make kind initiate interaction two other microservices this would be a classic",
    "start": "1005639",
    "end": "1010880"
  },
  {
    "text": "request use of request response in this example here so said one request to loyalty and one out to subscription",
    "start": "1010880",
    "end": "1019000"
  },
  {
    "text": "now a pretty simple way to implement this uh would be just to have you know",
    "start": "1019000",
    "end": "1024880"
  },
  {
    "text": "run the first request run the second request so here the Loyalty service award points this is just some sort of",
    "start": "1024880",
    "end": "1030558"
  },
  {
    "text": "uh syntactic wrapper over the top of whatever service implementation set implementation we're using we might",
    "start": "1030559",
    "end": "1036480"
  },
  {
    "text": "using drpc here or this is could be wrapper on top of some uh rest calls um and so would normally happen in",
    "start": "1036480",
    "end": "1043558"
  },
  {
    "text": "terms of how this would typically be implemented was that we would execute that first line of code we would open the connection we' send the bits and",
    "start": "1043559",
    "end": "1050039"
  },
  {
    "text": "bytes to loyalty and then we'd wait for the response to come back and then we would get that response object then then",
    "start": "1050039",
    "end": "1056600"
  },
  {
    "text": "this this uh method would return that response object would now have value and",
    "start": "1056600",
    "end": "1063039"
  },
  {
    "text": "then we would execute the next line of code and then which in turn would cause",
    "start": "1063039",
    "end": "1068480"
  },
  {
    "text": "us to make the next call to the subscription service so the first call",
    "start": "1068480",
    "end": "1073960"
  },
  {
    "text": "is made and once it's finished we make the second call pretty straightforward",
    "start": "1073960",
    "end": "1079520"
  },
  {
    "text": "we can kind of see what's going on here this is and honestly in many situations this is fine and in some situations you",
    "start": "1079520",
    "end": "1086039"
  },
  {
    "text": "need to wait for one thing to finish before you do the next thing anyway but in this particular situation it might be",
    "start": "1086039",
    "end": "1091640"
  },
  {
    "text": "needlessly wasteful when we're thinking about time and latency fundamentally the problem with",
    "start": "1091640",
    "end": "1098559"
  },
  {
    "text": "blocking calls is that especially you've got multiple calls happening in parallel the latency of the operation is the sum",
    "start": "1098559",
    "end": "1106080"
  },
  {
    "text": "of the calls because you have to do the first thing before you do the second",
    "start": "1106080",
    "end": "1111240"
  },
  {
    "text": "thing your latency ends up being the sum of all those parts so if we said for",
    "start": "1111240",
    "end": "1117679"
  },
  {
    "text": "example that the award points call took 50 milliseconds and upgrade subscription took 150 milliseconds then the latency",
    "start": "1117679",
    "end": "1125919"
  },
  {
    "text": "here is going to be at least 200 milliseconds in total for this",
    "start": "1125919",
    "end": "1131640"
  },
  {
    "text": "operation and of course we have even more things to consider when we realize that latency isn't fixed you will have",
    "start": "1132240",
    "end": "1140159"
  },
  {
    "text": "variability right typically you look at latency in terms of a histogram and when you've got multiple operations each with",
    "start": "1140159",
    "end": "1146880"
  },
  {
    "text": "their own distribution of latency when you start summing them up you often end up with an even wider distribution of",
    "start": "1146880",
    "end": "1154320"
  },
  {
    "text": "overall latency which in turn makes your system that little less predictable when",
    "start": "1154320",
    "end": "1159600"
  },
  {
    "text": "you get a lot of variability in throughput and performance it becomes harder to understand if your system's",
    "start": "1159600",
    "end": "1165120"
  },
  {
    "text": "operating correctly or not which makes it a bit harder to manage so actually having lots of these latencies added",
    "start": "1165120",
    "end": "1171360"
  },
  {
    "text": "together is bad from a point of view of having a see a system that's Speedy but it's also can be difficult in terms of",
    "start": "1171360",
    "end": "1177240"
  },
  {
    "text": "making a system predictable so obvious Improvement here and it's a pretty simple example would",
    "start": "1177240",
    "end": "1183600"
  },
  {
    "text": "be just to make these two calls happen in parallel this is a kind of common optimization you would do anyway um and",
    "start": "1183600",
    "end": "1189880"
  },
  {
    "text": "one of the easiest ways to do this would be to make those calls non blocking so rather than doing one call",
    "start": "1189880",
    "end": "1196280"
  },
  {
    "text": "than the next what we'd like to do is do them both at the same",
    "start": "1196280",
    "end": "1201840"
  },
  {
    "text": "time so in this example what I've done is I've just used a react extension on the client side so now within enrollment",
    "start": "1201840",
    "end": "1208760"
  },
  {
    "text": "we're basically going to use a reactive extension to wrap the execution of each of those service calls so here we've",
    "start": "1208760",
    "end": "1214480"
  },
  {
    "text": "created a future this is a bit of syntactic wrapper so a future is a readon type which the value of which",
    "start": "1214480",
    "end": "1221720"
  },
  {
    "text": "will be defined at some point in the future so when we create that future the",
    "start": "1221720",
    "end": "1227640"
  },
  {
    "text": "program flow would immediately return we'd get that future back but that",
    "start": "1227640",
    "end": "1232679"
  },
  {
    "text": "future may not yet have uh fully had had it value realized so basically you can think of the parameter of that future as",
    "start": "1232679",
    "end": "1239000"
  },
  {
    "text": "having been packaged together and stuck into a background thread that's probably what's happening behind the scenes so you've now automatically got a thread",
    "start": "1239000",
    "end": "1245600"
  },
  {
    "text": "behind the scenes that's making that connection out and talking to the Loyalty service on our behalf but the",
    "start": "1245600",
    "end": "1252200"
  },
  {
    "text": "key thing is from the point of view of this piece of client code we we would return almost immediately",
    "start": "1252200",
    "end": "1258799"
  },
  {
    "text": "and then we do the same thing for the second call so this is great the calls now happening in the background execution and so we would effectively",
    "start": "1258799",
    "end": "1266880"
  },
  {
    "text": "end up with these calls happening in parallel which is great so that should",
    "start": "1266880",
    "end": "1273159"
  },
  {
    "text": "hopefully bring our latency down we would imagine from in the areas of 200 milliseconds maybe closer to 150",
    "start": "1273159",
    "end": "1279880"
  },
  {
    "text": "milliseconds which could be a significant saving depending on uh what we're trying to",
    "start": "1279880",
    "end": "1285320"
  },
  {
    "text": "achieve the issue with this idea of non blocking clients though is decide that they're going to solve all problems and",
    "start": "1285320",
    "end": "1291520"
  },
  {
    "text": "and non-blocking is the way forward you should never block you should never block non-blocking non-blocking you should not block blocking is for bad",
    "start": "1291520",
    "end": "1297840"
  },
  {
    "text": "blocking is bad but here's the reality sometimes you actually need the",
    "start": "1297840",
    "end": "1304240"
  },
  {
    "text": "responses I would argue most of the time you need the responses so this idea that",
    "start": "1304240",
    "end": "1310000"
  },
  {
    "text": "non-blocking is magically going to change the world starts to look a little bit shaky when we look at you know even",
    "start": "1310000",
    "end": "1315039"
  },
  {
    "text": "a simple example like this at this point in the client program",
    "start": "1315039",
    "end": "1320400"
  },
  {
    "text": "flow at this point here we don't actually know if those two calls are",
    "start": "1320400",
    "end": "1326000"
  },
  {
    "text": "finished or not they may not have they may still be in flight they may be blocked waiting for something else to",
    "start": "1326000",
    "end": "1331960"
  },
  {
    "text": "occur but at that point in terms of the client flow neither the award points call has we cannot confirm that either",
    "start": "1331960",
    "end": "1340039"
  },
  {
    "text": "of these calls have been made and that's a problem if we want to confirm that and let somebody know this has happened or",
    "start": "1340039",
    "end": "1346559"
  },
  {
    "text": "if we want to then kick off some other processing once those things have occurred or if we just actually need the",
    "start": "1346559",
    "end": "1352559"
  },
  {
    "text": "responses from these things to kick off some other processing so we have to wait for the",
    "start": "1352559",
    "end": "1360480"
  },
  {
    "text": "results so if we have to wait for the results what do we do we use an await or something like an await and an await",
    "start": "1360480",
    "end": "1366320"
  },
  {
    "text": "basically means block and wait until these things have",
    "start": "1366320",
    "end": "1372159"
  },
  {
    "text": "completed so we've got some non-blocking calls here but we end up having to block",
    "start": "1372159",
    "end": "1379520"
  },
  {
    "text": "anyway even if you have non-blocking calls the logic of your processing may require waiting for things to",
    "start": "1379520",
    "end": "1386440"
  },
  {
    "text": "happen so you're still blocking and you're still",
    "start": "1386440",
    "end": "1391400"
  },
  {
    "text": "waiting so you know just remember it's not some sort of magical Silver Bullet",
    "start": "1391640",
    "end": "1397799"
  },
  {
    "text": "in general though non-blocking calls are a good thing to do when you can reactive",
    "start": "1397799",
    "end": "1403320"
  },
  {
    "text": "extensions and the syntactic sugar around them can actually make your code much more both both more obvious and",
    "start": "1403320",
    "end": "1409360"
  },
  {
    "text": "also more elegant um and I think it's a sensible thing to be doing especially in situations you're doing more",
    "start": "1409360",
    "end": "1414919"
  },
  {
    "text": "orchestrated calls you're doing lots of Downstream calls finding a way to run them using nonblocking uh client codes",
    "start": "1414919",
    "end": "1421919"
  },
  {
    "text": "it still makes sense so okay non-blocking is one thing it's put off to one side so coming back",
    "start": "1421919",
    "end": "1427880"
  },
  {
    "text": "to our Twitter thread there are other responses coming in this is Graham Lee who's uh you worked for many years at",
    "start": "1427880",
    "end": "1433640"
  },
  {
    "text": "Tyro in Australia which was a payments company in the bank those microsources really really well and gramley says the",
    "start": "1433640",
    "end": "1440000"
  },
  {
    "text": "definition I've been using is the sending service doesn't wait for",
    "start": "1440000",
    "end": "1445440"
  },
  {
    "text": "completion of the receiving service before continuing and or completing its own work this is sort of that this first",
    "start": "1445440",
    "end": "1453120"
  },
  {
    "text": "part here is sort of talking about non-blocking right there's a bit of non-blocking stuff here but going a b",
    "start": "1453120",
    "end": "1459679"
  },
  {
    "text": "bit further Graham then says but now that I think about it gr also expects",
    "start": "1459679",
    "end": "1465799"
  },
  {
    "text": "temporal decoupling from the receiving Services availability so we've got some new words",
    "start": "1465799",
    "end": "1472720"
  },
  {
    "text": "coming in here we've got the terms temporal decoupling it's a very fancy term now as I mentioned earlier the term",
    "start": "1472720",
    "end": "1480559"
  },
  {
    "text": "asynchronous means different things different people consistency means different things different people there are at least three different definitions",
    "start": "1480559",
    "end": "1487600"
  },
  {
    "text": "that you can look at what temporal decoupling actually means but I'm going to talk about one specific",
    "start": "1487600",
    "end": "1494159"
  },
  {
    "text": "type picking up this thread uh Benjamin Johnson said with synchronous communication for them",
    "start": "1495480",
    "end": "1501760"
  },
  {
    "text": "there's a direct communication between the sender and the receiver but for asynchronous there's an intermediary",
    "start": "1501760",
    "end": "1507159"
  },
  {
    "text": "involved between the sender and receiver for example the message broker and this",
    "start": "1507159",
    "end": "1512799"
  },
  {
    "text": "is actually really picking up a them that the Graham had started which is I've got some way of sending things to",
    "start": "1512799",
    "end": "1521120"
  },
  {
    "text": "things that aren't there and an intermediary is playing that role so for them for Graham and for Benjamin they",
    "start": "1521120",
    "end": "1526880"
  },
  {
    "text": "assume synchronous communication actually means you've got an intermediary involved so a classic ass example of an",
    "start": "1526880",
    "end": "1534960"
  },
  {
    "text": "intermediary would be the message broker some kind of place where you can store",
    "start": "1534960",
    "end": "1541159"
  },
  {
    "text": "things before they get fed on basically so a classic example here would be uh",
    "start": "1541159",
    "end": "1548520"
  },
  {
    "text": "well you know a message being sent from A to B but rather than going directly to",
    "start": "1548520",
    "end": "1554080"
  },
  {
    "text": "B I actually instead give it to the broker and it's the job of the broker to deliver to B once it becomes",
    "start": "1554080",
    "end": "1561880"
  },
  {
    "text": "available the thing to understand here of course is that B may or may not be available when I initially send the",
    "start": "1561880",
    "end": "1568000"
  },
  {
    "text": "message this is that temporal decoupling uh that gram mentioned so when we tempor",
    "start": "1568000",
    "end": "1574600"
  },
  {
    "text": "when when you've got two Services which are temporally coupled if a and b were temporally coupled B would have to be",
    "start": "1574600",
    "end": "1581000"
  },
  {
    "text": "available when a sends this message whereas if I can temporarily decouple them can decouple them in time",
    "start": "1581000",
    "end": "1588559"
  },
  {
    "text": "um then I can send the message even if B isn't around right now and you can imagine all kinds of situations where this could be useful so here though the",
    "start": "1588559",
    "end": "1595120"
  },
  {
    "text": "broker is going to keep hold of that message and once B becomes available it's going to receive that message and",
    "start": "1595120",
    "end": "1601080"
  },
  {
    "text": "it can do its processing this is a different type of a synchronicity and we're sort of able to",
    "start": "1601080",
    "end": "1607039"
  },
  {
    "text": "offload that guaranteed delivery to the broker itself this idea of of the message",
    "start": "1607039",
    "end": "1614000"
  },
  {
    "text": "broker almost like an inbox or a message box was picked up by a couple other people people on this threat so uh this",
    "start": "1614000",
    "end": "1619720"
  },
  {
    "text": "particular respond said a think is like dropping a snail mail in a red post box then going on with your life and then",
    "start": "1619720",
    "end": "1626360"
  },
  {
    "text": "one day boom Postman Pat stuffed something into your house mailbox along with millions of coupons and charity",
    "start": "1626360",
    "end": "1633320"
  },
  {
    "text": "mailers so for those of you not familiar with Postman Pat this is Postman Pat that's him and that's his cam there um",
    "start": "1633320",
    "end": "1641240"
  },
  {
    "text": "and this is the OG Postman Pat apparently there a new Postman Pat the CGI who drives in hovercrafts but this",
    "start": "1641240",
    "end": "1646320"
  },
  {
    "text": "is the original right still the best but there is this idea that we can this almost a metaphor for message Brokers as",
    "start": "1646320",
    "end": "1652640"
  },
  {
    "text": "a mailbox so I'm not talking directly I'm putting something in the mailbox for you you're picking it up afterwards it's",
    "start": "1652640",
    "end": "1658679"
  },
  {
    "text": "a very very useful technical implementation detail but also opens up some different interaction models as",
    "start": "1658679",
    "end": "1664880"
  },
  {
    "text": "well but you can also implement this don't have to use best brokers right lots of people basically use databases",
    "start": "1664880",
    "end": "1671440"
  },
  {
    "text": "like message Brokers you probably shouldn't do that but you can files file based interaction between Pro process is",
    "start": "1671440",
    "end": "1677960"
  },
  {
    "text": "it's probably still one of the most common um distributed system integration patterns out there but effectively using",
    "start": "1677960",
    "end": "1684320"
  },
  {
    "text": "a file system like your intermediary I'm dropping a file in a location someone picks up later on it's you know at one",
    "start": "1684320",
    "end": "1691600"
  },
  {
    "text": "level it is like a message broker and you could also use email for programmatically communicating between",
    "start": "1691600",
    "end": "1697159"
  },
  {
    "text": "services but you really shouldn't do that and I don't have to tell you why but the key thing about this is we",
    "start": "1697159",
    "end": "1704399"
  },
  {
    "text": "again have this idea that the client is a little bit more divorce from what the survey is doing which we sort of get",
    "start": "1704399",
    "end": "1710480"
  },
  {
    "text": "with non-blocking but this is taking it to a Next Level I don't need to worry about whether or not the recipient of",
    "start": "1710480",
    "end": "1716600"
  },
  {
    "text": "that message is available or not however of course this does then shift our degree of trust to the intermediate",
    "start": "1716600",
    "end": "1723519"
  },
  {
    "text": "itself is it good does it do what we expected to do can it be relied on to",
    "start": "1723519",
    "end": "1728880"
  },
  {
    "text": "not lose the message so if we take the idea of request response and bring that into the",
    "start": "1728880",
    "end": "1735480"
  },
  {
    "text": "world of say broker based communication we end up with a pretty straightforward interaction like this which is service a",
    "start": "1735480",
    "end": "1741679"
  },
  {
    "text": "sends a request that request goes on the request Q for service B and service B",
    "start": "1741679",
    "end": "1747880"
  },
  {
    "text": "when when it's ready receives that request it does some processing when",
    "start": "1747880",
    "end": "1753039"
  },
  {
    "text": "that processing is complete hopefully it has a response for us and hopefully that's a positive response that response comes back on the",
    "start": "1753039",
    "end": "1760240"
  },
  {
    "text": "response cue and then we pick that up so we've got temporal decoupling happening in both directions here we're using the",
    "start": "1760240",
    "end": "1766760"
  },
  {
    "text": "broker to load that jobs are good right now at this point though when I",
    "start": "1766760",
    "end": "1774120"
  },
  {
    "text": "think we start moving into this particular world of looking at how brokers work and how consumers and",
    "start": "1774120",
    "end": "1780120"
  },
  {
    "text": "work we're exposed to another problem here which we didn't necessarily have with sort of the more straightforward",
    "start": "1780120",
    "end": "1786399"
  },
  {
    "text": "non-blocking client code from before because in reality we've got",
    "start": "1786399",
    "end": "1792159"
  },
  {
    "text": "multiple instances of our microservices and multiple instances of both client e",
    "start": "1792159",
    "end": "1797799"
  },
  {
    "text": "and server so maybe we have two instances of service a which is probably understating",
    "start": "1797799",
    "end": "1804000"
  },
  {
    "text": "what we would actually have in real life normally three is a minimum but we have service a sends a",
    "start": "1804000",
    "end": "1809440"
  },
  {
    "text": "request B Downstream does the processing sends back its response there's no guarantee the",
    "start": "1809440",
    "end": "1816039"
  },
  {
    "text": "response is going to come back to the same instance now some people would see this as a massive problem and then they would",
    "start": "1816039",
    "end": "1823320"
  },
  {
    "text": "start saying oh no no I need a message broker that can guarantee that this gets routed back to the right instance of",
    "start": "1823320",
    "end": "1829360"
  },
  {
    "text": "service a that is the wrong way to think about this problem that is something you",
    "start": "1829360",
    "end": "1835440"
  },
  {
    "text": "absolutely want to avoid why do you want the response to go back to a specific instance of service a",
    "start": "1835440",
    "end": "1842880"
  },
  {
    "text": "Ah that's because service a is in the middle of doing some processing and it needs to carry on doing that processing",
    "start": "1842880",
    "end": "1849399"
  },
  {
    "text": "ah so you're basically holding on to State inside this instance of a to carry",
    "start": "1849399",
    "end": "1855440"
  },
  {
    "text": "on this particular piece of processing yes that's what I'm doing okay so now you've got the complexity of working out",
    "start": "1855440",
    "end": "1861720"
  },
  {
    "text": "how to route the response back in addition how do you solve the",
    "start": "1861720",
    "end": "1866880"
  },
  {
    "text": "problem of that instance dying ah okay well what we'll do is",
    "start": "1866880",
    "end": "1873120"
  },
  {
    "text": "we'll take all that inmemory state and then we'll use some kind of replication of inmemory State between all the",
    "start": "1873120",
    "end": "1879519"
  },
  {
    "text": "instances of age it's like oh yeah now you've got another problem don't do that",
    "start": "1879519",
    "end": "1885200"
  },
  {
    "text": "just Implement your system so the response can go back to any instance of a and you'll be happier it is",
    "start": "1885200",
    "end": "1893000"
  },
  {
    "text": "simpler it is much more likely to work and in Failure mode you're not going to worry about it it's much easier to scale",
    "start": "1893000",
    "end": "1900000"
  },
  {
    "text": "these systems as well and you're not screwing around causing packet storms with replication of inmemory session",
    "start": "1900000",
    "end": "1906000"
  },
  {
    "text": "State and it also means you can use simpler Brokers as well I think in many ways this model kind of forces us to",
    "start": "1906000",
    "end": "1913519"
  },
  {
    "text": "think a little bit more about what happens when things fail uh now I'm going to ask you a rhetorical",
    "start": "1913519",
    "end": "1920919"
  },
  {
    "text": "question if I was there in the room I could get you to shout out numbers but I'm not going to do that so everyone want to guess what the SLA is what the",
    "start": "1920919",
    "end": "1928240"
  },
  {
    "text": "guaranteed up time is for a virtual machine on either a Zer gcp or",
    "start": "1928240",
    "end": "1935919"
  },
  {
    "text": "AWS right what do we think hands up if you think it's more than",
    "start": "1935919",
    "end": "1941120"
  },
  {
    "text": "90% a few of you right hands up you think it's more than 95%",
    "start": "1942720",
    "end": "1948519"
  },
  {
    "text": "no right well the number is obviously you kind of know where I'm going with this because obviously I wouldn't ask this question unless the answer was",
    "start": "1948519",
    "end": "1953840"
  },
  {
    "text": "shocking the answer isn't 95% for a virtual machine or 90% it is",
    "start": "1953840",
    "end": "1961440"
  },
  {
    "text": "0% there is no guaranteed up time for a virtual machine on any of the big cloud",
    "start": "1961440",
    "end": "1968080"
  },
  {
    "text": "computing platforms the slas youc are for the service as a",
    "start": "1968080",
    "end": "1973880"
  },
  {
    "text": "whole what they when they give you say I think it was 99 .7% upti for ec2 for",
    "start": "1973880",
    "end": "1979519"
  },
  {
    "text": "example they're saying we guarantee there'll be a 99.7% availability of the service to",
    "start": "1979519",
    "end": "1986639"
  },
  {
    "text": "provision a virtual machine not your specific virtual machine you do not get",
    "start": "1986639",
    "end": "1992559"
  },
  {
    "text": "an SLA for a particular machine nor even an availability Zone that's why all the cloud vendors make it very clear you",
    "start": "1992559",
    "end": "1998080"
  },
  {
    "text": "should be more than one availability Zone that means if you're on a public Cloud you need to be designing with the",
    "start": "1998080",
    "end": "2003679"
  },
  {
    "text": "assumption that you will lose nodes and this makes it much more obvious that that's going to happen and",
    "start": "2003679",
    "end": "2010039"
  },
  {
    "text": "you just build an architect for it from the beginning and your life's at a happy place screwing around with sticky",
    "start": "2010039",
    "end": "2015120"
  },
  {
    "text": "session low balancing and routing of traffic is a false",
    "start": "2015120",
    "end": "2020278"
  },
  {
    "text": "errand but this then brings us back thinking about node failure then brings us back to thinking about what happens",
    "start": "2021279",
    "end": "2027720"
  },
  {
    "text": "with our earlier non-blocking client code how's that what what what's happens",
    "start": "2027720",
    "end": "2032880"
  },
  {
    "text": "there in this environment here here the this piece of code is",
    "start": "2032880",
    "end": "2039919"
  },
  {
    "text": "running in an instance of the enrollment service what",
    "start": "2039919",
    "end": "2046159"
  },
  {
    "text": "happens if this client here our consumer dies by way through what if we die here",
    "start": "2046159",
    "end": "2054118"
  },
  {
    "text": "what if we die at this point when the calls are gone but we haven't done anything or process the responses and",
    "start": "2054119",
    "end": "2060960"
  },
  {
    "text": "are no dies that could happen those points could have been wed",
    "start": "2060960",
    "end": "2067560"
  },
  {
    "text": "that subscription could have been upgraded that might already been",
    "start": "2067560",
    "end": "2073320"
  },
  {
    "text": "done so we now need to handle that situation now I'm not going to go into detail about how you solve it but I'll",
    "start": "2073320",
    "end": "2079398"
  },
  {
    "text": "just say one quick thing it involves retrying everything from the beginning and to be a to retry things safly you",
    "start": "2079399",
    "end": "2084599"
  },
  {
    "text": "need to make these operations item potent but that is a item potency and retries is a conversation for another",
    "start": "2084599",
    "end": "2092800"
  },
  {
    "text": "talk but I do think that when you are forced into when when you're using",
    "start": "2092839",
    "end": "2097960"
  },
  {
    "text": "intermediaries for communication between Services it does very much force you to",
    "start": "2097960",
    "end": "2103520"
  },
  {
    "text": "realize the benefits of proper status processing not holding state in memory",
    "start": "2103520",
    "end": "2109400"
  },
  {
    "text": "offloading state if needed to databases and the like makes your life so so much simpler although there is no end of",
    "start": "2109400",
    "end": "2115720"
  },
  {
    "text": "vendor-based products out there saying how they will magically solve your inmemory stateful processing problems",
    "start": "2115720",
    "end": "2121520"
  },
  {
    "text": "99% of people do not need to do stateful processing if you're one of the except",
    "start": "2121520",
    "end": "2127240"
  },
  {
    "text": "you already know that so we've got competing definitions out here right we've got some people",
    "start": "2127240",
    "end": "2134000"
  },
  {
    "text": "thinking that synchronous versus asynch is about immediacy some people think it's about temporal coupling some people",
    "start": "2134000",
    "end": "2140160"
  },
  {
    "text": "think it's about non-blocking some people think it's about having an intermediary or not and it becomes very",
    "start": "2140160",
    "end": "2148480"
  },
  {
    "text": "confusing like which one of these is a sers",
    "start": "2148480",
    "end": "2153119"
  },
  {
    "text": "communication and of course it then begs the question well does it actually matter because these competing",
    "start": "2153680",
    "end": "2158720"
  },
  {
    "text": "definitions have been around for a very long time words have different meanings and we are used to words having",
    "start": "2158720",
    "end": "2165079"
  },
  {
    "text": "different meanings this is a conference in Copenhagen many of you will be Danish",
    "start": "2165079",
    "end": "2170960"
  },
  {
    "text": "speakers most well all the D people I've ever met speak at least two languages if",
    "start": "2170960",
    "end": "2176280"
  },
  {
    "text": "not more um we are used to working in different languages and even within one language that we might know we accept",
    "start": "2176280",
    "end": "2182880"
  },
  {
    "text": "that one word may have more than one meaning and this is a world we're used to so one is this a",
    "start": "2182880",
    "end": "2188560"
  },
  {
    "text": "problem now do I want to guess what word in the English language has the most",
    "start": "2188560",
    "end": "2195640"
  },
  {
    "text": "dictionary meanings right again I actually ask you",
    "start": "2195640",
    "end": "2200760"
  },
  {
    "text": "the question if I was say in person but let's be clear right I'll tell you the both and it's",
    "start": "2200760",
    "end": "2206319"
  },
  {
    "text": "set so in the current official edition of the Oxford English",
    "start": "2206319",
    "end": "2211760"
  },
  {
    "text": "Dictionary which is the kind of which is the set of words I think it's about 60",
    "start": "2211760",
    "end": "2217119"
  },
  {
    "text": "volumes um set has the most definitions in the next Edition that's going to be",
    "start": "2217119",
    "end": "2222400"
  },
  {
    "text": "coming out in 2037 I think run is going to have the most meanings so at the",
    "start": "2222400",
    "end": "2228280"
  },
  {
    "text": "moment set has 430 different meanings in the dictionary run has",
    "start": "2228280",
    "end": "2235839"
  },
  {
    "text": "645 as of current estimations that's a lot of meanings do",
    "start": "2235839",
    "end": "2242560"
  },
  {
    "text": "you know all 645 no and the reality is we often don't",
    "start": "2242560",
    "end": "2247720"
  },
  {
    "text": "need to know all of these meanings because we can often work it out based on",
    "start": "2247720",
    "end": "2252839"
  },
  {
    "text": "context we used to doing this we derive our understanding of a word from the",
    "start": "2252839",
    "end": "2260160"
  },
  {
    "text": "context in which that word is placed this is what I kind of learned",
    "start": "2260160",
    "end": "2266800"
  },
  {
    "text": "from talking to Ian Cooper when I was first talking to Ian about this presentation it turns out of course",
    "start": "2266800",
    "end": "2272680"
  },
  {
    "text": "Cooper studies semiotics um and he said oh no no but what you got to realize Sam is that the meaning of a word becomes",
    "start": "2272680",
    "end": "2279880"
  },
  {
    "text": "more narrow as we add more words around it by adding more words around a word we",
    "start": "2279880",
    "end": "2285440"
  },
  {
    "text": "get context and we get meaning so let's think about the word run let's try this out as an exercise I",
    "start": "2285440",
    "end": "2291720"
  },
  {
    "text": "want you to think of the word run and I want each of you individually to think what does the word run mean to you",
    "start": "2291720",
    "end": "2296960"
  },
  {
    "text": "what's the first definition or the first meaning of the word run think about",
    "start": "2296960",
    "end": "2303560"
  },
  {
    "text": "that I'm now going to put some words around it and I want to see if my meaning match is",
    "start": "2303560",
    "end": "2309560"
  },
  {
    "text": "yours the issue got worse the moment the program was run was that the version of",
    "start": "2309560",
    "end": "2315800"
  },
  {
    "text": "run you were thinking of maybe you thought of going for a jog let's try again think of a different",
    "start": "2315800",
    "end": "2322839"
  },
  {
    "text": "definition of run now I'll put some more words around it the economy crashed due to run on",
    "start": "2322839",
    "end": "2332040"
  },
  {
    "text": "banks now your me your thought when you thought run and I thought run some of you might have been thinking of",
    "start": "2332240",
    "end": "2338440"
  },
  {
    "text": "the same runs but most of you probably weren't but also mine's valid but I put",
    "start": "2338440",
    "end": "2344800"
  },
  {
    "text": "the extra words around it and the meaning of my run becomes clear whereas when I just say what does this mean to",
    "start": "2344800",
    "end": "2350560"
  },
  {
    "text": "you and you're like could mean lots of things what does this mean to you the",
    "start": "2350560",
    "end": "2356079"
  },
  {
    "text": "meaning is much more explicit so we used to this great we",
    "start": "2356079",
    "end": "2361599"
  },
  {
    "text": "have a word that has different meanings and we manage we deal with this well so",
    "start": "2361599",
    "end": "2368040"
  },
  {
    "text": "again does it matter if does his talk even matter does any of this even matter I hope so because I got up at six: in",
    "start": "2368040",
    "end": "2374359"
  },
  {
    "text": "the morning for this the issue is that when we talk about synchronous or asynchronous asynchronous is bad",
    "start": "2374359",
    "end": "2380920"
  },
  {
    "text": "synchronous is bad asynchron is better we throw those terms around without",
    "start": "2380920",
    "end": "2386160"
  },
  {
    "text": "sharing context and that doesn't allow us to derive shared meaning when we're",
    "start": "2386160",
    "end": "2391440"
  },
  {
    "text": "trying to have conversations and trying to think as an industry what should we be doing we are lazy and we assume that",
    "start": "2391440",
    "end": "2399319"
  },
  {
    "text": "when I use a word in isolation that that word means the same thing to you as it does to",
    "start": "2399319",
    "end": "2405960"
  },
  {
    "text": "me let's go back to definitions and meanings by the way I am poking f a lot",
    "start": "2405960",
    "end": "2411319"
  },
  {
    "text": "of the active Manifesto and I mean it with love because I don't agree with a lot of stuff in here but I do agree with",
    "start": "2411319",
    "end": "2416440"
  },
  {
    "text": "some of it and there was a lot of hard work that went into this but it also makes it very easy to poke fun um in the",
    "start": "2416440",
    "end": "2421839"
  },
  {
    "text": "asynchronous section again the very beginning of that section",
    "start": "2421839",
    "end": "2427200"
  },
  {
    "text": "they say the Oxford English Dictionary defines a synchronous as not existing or",
    "start": "2427200",
    "end": "2433000"
  },
  {
    "text": "occurring at the same time and they're right this is a definition of asynchronous in fact it's the definition",
    "start": "2433000",
    "end": "2439960"
  },
  {
    "text": "of asynchronous you'll see from the idictionary if you Google what does the",
    "start": "2439960",
    "end": "2445240"
  },
  {
    "text": "optimod dictionary define asynchronous as so if you Google it this is the answer you get but we've already learned",
    "start": "2445240",
    "end": "2452040"
  },
  {
    "text": "that the oxid ditionary tracks lots of different meanings for asynchronous",
    "start": "2452040",
    "end": "2457160"
  },
  {
    "text": "in fact if you actually have access to the ox English dictionary which anyone in the UK does for free you go to the",
    "start": "2457160",
    "end": "2462240"
  },
  {
    "text": "library and if you've got a library card you can get it online for free as well um there are a lot of different",
    "start": "2462240",
    "end": "2468440"
  },
  {
    "text": "definitions and the O dictionary is basically tells you where the term comes up and the context in which these terms",
    "start": "2468440",
    "end": "2474160"
  },
  {
    "text": "come from um so we actually see that the definition is most widely used not",
    "start": "2474160",
    "end": "2479560"
  },
  {
    "text": "synchronous not existing or occurring at the same time not coinciding in time that is the definition that's basically",
    "start": "2479560",
    "end": "2485280"
  },
  {
    "text": "used by the reactive man esto and the Oxford uh English dictionary correctly",
    "start": "2485280",
    "end": "2491640"
  },
  {
    "text": "points out that this was originally only ever used in medical contexts this definition and um I don't think of",
    "start": "2491640",
    "end": "2499839"
  },
  {
    "text": "Manifesto was in a medical context there is actually a Computing definition by the word way of the word asynchronous in",
    "start": "2499839",
    "end": "2506319"
  },
  {
    "text": "the ox dictionary there's a section on Computing in the in the oxid English dictionary that was not the definition",
    "start": "2506319",
    "end": "2512800"
  },
  {
    "text": "used by the reactive Manifesto or anybody else in in fact um you zoom all",
    "start": "2512800",
    "end": "2519200"
  },
  {
    "text": "the way down to that section only section three you don't have to scroll that far and actually two definitions in",
    "start": "2519200",
    "end": "2525720"
  },
  {
    "text": "there but this is the one that's closest to what we do in terms of thinking about process communication designating data",
    "start": "2525720",
    "end": "2533079"
  },
  {
    "text": "transmissions in which packets of data are sent at irregular intervals with the start and end of each packet being",
    "start": "2533079",
    "end": "2538640"
  },
  {
    "text": "marked by specific signals in vote I don't know what this means this is this is what this makes sense when you're",
    "start": "2538640",
    "end": "2546240"
  },
  {
    "text": "talking about defining a network protocol it's at least closer to what we do so using a different context and in",
    "start": "2546240",
    "end": "2553079"
  },
  {
    "text": "this context this term absolutely makes sense this is prob as close as we get to the original definition of what",
    "start": "2553079",
    "end": "2559000"
  },
  {
    "text": "asynchronous means in the context of computing but again we don't tend to work at this",
    "start": "2559000",
    "end": "2564280"
  },
  {
    "text": "level we work we don't even tend to work directly with TCP anymore",
    "start": "2564280",
    "end": "2570240"
  },
  {
    "text": "right so coming back to the meaning value what's the problem with all of these definitions fundamentally the",
    "start": "2570240",
    "end": "2577079"
  },
  {
    "text": "issue is this software is a type of soot technical system it's one of the best",
    "start": "2577079",
    "end": "2582599"
  },
  {
    "text": "examples of a socio technical system any software based system is so soci",
    "start": "2582599",
    "end": "2588680"
  },
  {
    "text": "technical seems like a very long word but let's break it down and try and get into meaning socio basically meaning",
    "start": "2588680",
    "end": "2593880"
  },
  {
    "text": "people technical meaning technology in the Greek sense of the word technology meaning any sort of complicated system",
    "start": "2593880",
    "end": "2600559"
  },
  {
    "text": "so we often think of technology in terms of software but technology has much broader terminology than that",
    "start": "2600559",
    "end": "2606839"
  },
  {
    "text": "and before you start thinking oh God this is kind of some Lefty snowflake liberal view about how we've all going",
    "start": "2606839",
    "end": "2613520"
  },
  {
    "text": "to get along as a planet the term soot Technical Systems were first developed actually in relation to uh coal mining",
    "start": "2613520",
    "end": "2620240"
  },
  {
    "text": "in World War II so this was actually a concept that predates Computing by a",
    "start": "2620240",
    "end": "2625520"
  },
  {
    "text": "long way looking at the interaction between human beings and complex systems and of course getting those things wrong",
    "start": "2625520",
    "end": "2631240"
  },
  {
    "text": "in coal mining can result in you know people dying so this interplay is interesting",
    "start": "2631240",
    "end": "2637839"
  },
  {
    "text": "we're bringing people and Technology together we have to recognize that the amount of software created by",
    "start": "2637839",
    "end": "2643599"
  },
  {
    "text": "individuals is vanishingly rare this idea of the hero programmer sitting in their bedroom writing a massive program",
    "start": "2643599",
    "end": "2650160"
  },
  {
    "text": "by themselves that becomes impactful the whole world it's not true 99% of the",
    "start": "2650160",
    "end": "2655839"
  },
  {
    "text": "time even when we think about someone like lonus who created the colonel Linn Colonel actually what he did was get",
    "start": "2655839",
    "end": "2662800"
  },
  {
    "text": "very good at accepting lots of different work from other people software is created by teams by groups",
    "start": "2662800",
    "end": "2670920"
  },
  {
    "text": "of people to create good software you need to be able to bring that technology",
    "start": "2670920",
    "end": "2676079"
  },
  {
    "text": "together you need to have good communication you need to be able to work together to create software",
    "start": "2676079",
    "end": "2681880"
  },
  {
    "text": "together and when you've got two people trying to work together on the same problem and they've got very different",
    "start": "2681880",
    "end": "2688040"
  },
  {
    "text": "definitions for the same word you're going to end up with an awful lot of confusion in terms of what we end up",
    "start": "2688040",
    "end": "2694079"
  },
  {
    "text": "trying to build and this is not a new idea some of you may be Familiar of",
    "start": "2694079",
    "end": "2699520"
  },
  {
    "text": "course with the Old Testament story of the Tower of Babel this is believed to be basically obviously about um the",
    "start": "2699520",
    "end": "2706839"
  },
  {
    "text": "Babylonians there were people of one language working together to create this",
    "start": "2706839",
    "end": "2712359"
  },
  {
    "text": "glorious Tower going up into the sky and the Old Testament God saw the tower and",
    "start": "2712359",
    "end": "2718760"
  },
  {
    "text": "thought don't like that uh I think you're getting ideas above your station and he went and the the Old Testament",
    "start": "2718760",
    "end": "2725280"
  },
  {
    "text": "God went down and changed the languages so that the people were no longer able to speak using the same",
    "start": "2725280",
    "end": "2732559"
  },
  {
    "text": "language which is another example of the Old Testament God being not the nicest person in the world it was like a the",
    "start": "2732559",
    "end": "2739359"
  },
  {
    "text": "New Testament it like a real you know sort of character change like almost like they got new script writers in or",
    "start": "2739359",
    "end": "2744880"
  },
  {
    "text": "something he was much friendly in the New Testament anyway I digress but the key thing was we have this old very old",
    "start": "2744880",
    "end": "2751240"
  },
  {
    "text": "allegorical tale of a massive project being",
    "start": "2751240",
    "end": "2757559"
  },
  {
    "text": "undermined by Language by terms people one Speaking of one language now",
    "start": "2757559",
    "end": "2764359"
  },
  {
    "text": "speaking of many languages and that undermined the ability of the project itself this is not a new",
    "start": "2764359",
    "end": "2771720"
  },
  {
    "text": "idea and yet time and time again when having conversations about architecture and interactions and",
    "start": "2771720",
    "end": "2778280"
  },
  {
    "text": "communication we use the word asynchronous it has so many meanings",
    "start": "2778280",
    "end": "2783839"
  },
  {
    "text": "that is effectively meaningless because we don't put the other words around it so what can we do what's the answer to",
    "start": "2783839",
    "end": "2790680"
  },
  {
    "text": "this I would stop talking about synchronous and asynchronous and talk about what does your application want",
    "start": "2790680",
    "end": "2796359"
  },
  {
    "text": "what behaviors does your application need to have and then use more specific terms for what you want out of it",
    "start": "2796359",
    "end": "2802240"
  },
  {
    "text": "describe how it should handle different situations what should it do when a",
    "start": "2802240",
    "end": "2807359"
  },
  {
    "text": "server is unreachable how fast does your application need to be what should you",
    "start": "2807359",
    "end": "2812400"
  },
  {
    "text": "do if the client crashes how should it handle that situation and use those more explicit",
    "start": "2812400",
    "end": "2818960"
  },
  {
    "text": "terms to Define what you want out of your system and what you want from the interaction technology you pick say",
    "start": "2818960",
    "end": "2825440"
  },
  {
    "text": "things like client should be non-blocking talk about wanting to run operations in parallel where possible",
    "start": "2825440",
    "end": "2831800"
  },
  {
    "text": "you know say we're going to use a broker as an intermediary because we want these kinds of",
    "start": "2831800",
    "end": "2837400"
  },
  {
    "text": "characteristics I think it is important though to when having these conversations is to to get clarification",
    "start": "2837599",
    "end": "2845240"
  },
  {
    "text": "when people say things and rather than assume you know what they mean is to is to kind of ask them and I've been guilty",
    "start": "2845240",
    "end": "2851800"
  },
  {
    "text": "today of of kind of using this talk to correct people about their use of the term asynchronous I was talking",
    "start": "2851800",
    "end": "2857400"
  },
  {
    "text": "endlessly about the reactive Manifesto for example things they get wrong there which is is a mean thing to do in The",
    "start": "2857400",
    "end": "2865040"
  },
  {
    "text": "Princess Bride you know vinus says you know this doesn't you don't really know",
    "start": "2865040",
    "end": "2871440"
  },
  {
    "text": "what this word means do you you're not using this word correctly",
    "start": "2871440",
    "end": "2876760"
  },
  {
    "text": "and of course the joke in The Princess Bride is that we all know what inconceivable means but Paul viners",
    "start": "2876760",
    "end": "2884040"
  },
  {
    "text": "doesn't and actually when it comes to the term asynchronous in the context of our projects that isn't necessarily the",
    "start": "2884040",
    "end": "2890319"
  },
  {
    "text": "case there are lots of us that do have very different definitions of what this word",
    "start": "2890319",
    "end": "2896640"
  },
  {
    "text": "means so when someone says oh we should make say synchronous or asynchronous is best probably the best thing you can do",
    "start": "2896640",
    "end": "2903160"
  },
  {
    "text": "in that situation to understand what they mean and to see whether or not you agree is maybe just simply to say what",
    "start": "2903160",
    "end": "2909480"
  },
  {
    "text": "does that mean to you and use some more specific sit examples and questions to",
    "start": "2909480",
    "end": "2915040"
  },
  {
    "text": "try and get that information out of them because you know you might be surprised and find that you're talking",
    "start": "2915040",
    "end": "2921280"
  },
  {
    "text": "about two completely different things that's it I'm done normally at",
    "start": "2921280",
    "end": "2927880"
  },
  {
    "text": "this point I would say you know I'll enjoy seeing you around the rest of event I really hope you have a",
    "start": "2927880",
    "end": "2934359"
  },
  {
    "text": "fantastic rest of event I hope that weather stays away I'll gladly take all the rain over here in the UK we could do",
    "start": "2934359",
    "end": "2939640"
  },
  {
    "text": "some rain in our garden to keep you dry um but we have got um about 10 minutes left if you've got any questions from",
    "start": "2939640",
    "end": "2946119"
  },
  {
    "text": "anybody um but if not I hope you have a great rest of the",
    "start": "2946119",
    "end": "2951160"
  },
  {
    "text": "day",
    "start": "2959200",
    "end": "2962200"
  }
]