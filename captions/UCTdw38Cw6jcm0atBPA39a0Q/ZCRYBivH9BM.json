[
  {
    "start": "0",
    "end": "98000"
  },
  {
    "text": "okay I think we're dessert ready to decide but everyone up there hi everyone",
    "start": "9630",
    "end": "16209"
  },
  {
    "text": "good to have it so this has got us on",
    "start": "16210",
    "end": "22030"
  },
  {
    "text": "the screen good okay it's an informal talk and the reason is",
    "start": "22030",
    "end": "27100"
  },
  {
    "text": "because the main reason I came to Oslo this time was was MDC once again but but this was us last night that the the the",
    "start": "27100",
    "end": "35470"
  },
  {
    "text": "Oslo Spektrum yeah it was a great great event this is that this is a picture I've been sending",
    "start": "35470",
    "end": "41230"
  },
  {
    "text": "to my arm to my family and threatened service of a saw on stage okay let me",
    "start": "41230",
    "end": "51100"
  },
  {
    "text": "just let me just change something here I want to put this on duplicate I think",
    "start": "51100",
    "end": "58859"
  },
  {
    "text": "that's someone I want",
    "start": "61410",
    "end": "64920"
  },
  {
    "text": "let's try this it's happening here why",
    "start": "75100",
    "end": "81799"
  },
  {
    "text": "aren't we on",
    "start": "81799",
    "end": "84280"
  },
  {
    "text": "sorry excuse me",
    "start": "88040",
    "end": "91180"
  },
  {
    "text": "what's on here try that here alright ok we'll leave it like this ok",
    "start": "94850",
    "end": "101290"
  },
  {
    "start": "98000",
    "end": "179000"
  },
  {
    "text": "ok so it's a table for talk despite the fact it's about user interfaces it's not",
    "start": "101290",
    "end": "107530"
  },
  {
    "text": "full of flashy demos at least it's not full of my flashy demos because I'm a programming language designer and not a",
    "start": "107530",
    "end": "113680"
  },
  {
    "text": "user interface designer and so but I do have a little video of some some flashy",
    "start": "113680",
    "end": "120820"
  },
  {
    "text": "our UIs that are being done with the fabulous framework but I'm going to really talk about you know when you",
    "start": "120820",
    "end": "126880"
  },
  {
    "text": "build a framework you you you need the framework and then you need a whole lot of people who are actually really good at using it and I'm the one who's kind",
    "start": "126880",
    "end": "132850"
  },
  {
    "text": "of building it we started it off and now there's a whole lot of contributors coming along and actually this is a very",
    "start": "132850",
    "end": "138700"
  },
  {
    "text": "much a community driven community owned user into perspective on functional user",
    "start": "138700",
    "end": "144790"
  },
  {
    "text": "interface programming and it is AB is one of the most enjoyable things I've",
    "start": "144790",
    "end": "151480"
  },
  {
    "text": "ever got to work on and that includes f-sharp includes naired it includes async and lots of other things but this",
    "start": "151480",
    "end": "156970"
  },
  {
    "text": "is something really gave me a really a lot of pleasure to start start off this project and I would love to get you",
    "start": "156970",
    "end": "165459"
  },
  {
    "text": "involved come and not only involved but you're really helping drive the direction of where this of where this",
    "start": "165459",
    "end": "172000"
  },
  {
    "text": "goes and completed out in certain directions and build out the tooling story and also to use it and have a",
    "start": "172000",
    "end": "177940"
  },
  {
    "text": "fabulous fun time so just to give you a feel for some of the community who's involved we have Jim Bennett is a myth",
    "start": "177940",
    "end": "187150"
  },
  {
    "start": "179000",
    "end": "219000"
  },
  {
    "text": "many of you know he's one of the great evangelists in the.net space and in the",
    "start": "187150",
    "end": "194170"
  },
  {
    "text": "zamarons space as well mobile programming now this talk actually seals several slides and the video I mentioned",
    "start": "194170",
    "end": "200680"
  },
  {
    "text": "from Mark Malabon who's MVP in Switzerland and you know he's a great",
    "start": "200680",
    "end": "208359"
  },
  {
    "text": "contribute contributor it also takes inspiration from the work of Frank Kruger and several other projects that",
    "start": "208359",
    "end": "214299"
  },
  {
    "text": "have come before that have started down this direction and I feel that you know things have really come together and crystallized in fabulous okay so what's",
    "start": "214299",
    "end": "224019"
  },
  {
    "start": "219000",
    "end": "444000"
  },
  {
    "text": "the kind of context where I started this work it is that when we brought F sharp",
    "start": "224019",
    "end": "230530"
  },
  {
    "text": "to dotnet did the man throw as always we're going to bring functional programming to dotnet and we got to bring dotnet to the functional",
    "start": "230530",
    "end": "236319"
  },
  {
    "text": "programming world we're gonna get the best of both worlds and that's kind of the the driving spirit behind what if",
    "start": "236319",
    "end": "241659"
  },
  {
    "text": "shop has done and ever so much of what you see in there you know if what makes",
    "start": "241659",
    "end": "246819"
  },
  {
    "text": "up that today generics is it was a part of that story as well and so many of the",
    "start": "246819",
    "end": "253359"
  },
  {
    "text": "features that are in in c-sharp and the ways of thinking compared to the world where as it was back in you know 20",
    "start": "253359",
    "end": "259660"
  },
  {
    "text": "years ago where everybody was doing in inheritance implementation inheritance for absolutely everything hierarchical",
    "start": "259660",
    "end": "265360"
  },
  {
    "text": "classification for everything you know they didn't all pointers back then and see shops just trying to get rid of",
    "start": "265360",
    "end": "270940"
  },
  {
    "text": "those now struggling hard on that but yeah we've we've come so far in in",
    "start": "270940",
    "end": "277090"
  },
  {
    "text": "integrating these worlds of practical programming it's not net and functional programming and mate and Franklin",
    "start": "277090",
    "end": "283780"
  },
  {
    "text": "proving that functional probe functional first programming is an immensely practical paradigm but we we've made",
    "start": "283780",
    "end": "292780"
  },
  {
    "text": "mistakes okay and one of the mistakes I made or one of the holes in my knowledge was I had no particular point of view on",
    "start": "292780",
    "end": "300039"
  },
  {
    "text": "functional first app development application development user it we always just said okay F shops for the",
    "start": "300039",
    "end": "307449"
  },
  {
    "text": "backend for the logic of your program and you do your user interface in C shot",
    "start": "307449",
    "end": "313360"
  },
  {
    "text": "in c-sharp or visual basic or whatever or JavaScript front upfront end and that",
    "start": "313360",
    "end": "320759"
  },
  {
    "text": "that's kind of there's there are reasons we did that one is that the front-end",
    "start": "320759",
    "end": "327130"
  },
  {
    "text": "had this incredibly heavy tooling it didn't matter which generation of front-end programming you're talking",
    "start": "327130",
    "end": "333220"
  },
  {
    "text": "about whether it's Windows forms or uwp",
    "start": "333220",
    "end": "339039"
  },
  {
    "text": "or WPF for xamarin or whatever it's just just seemed like this cornucopia of",
    "start": "339039",
    "end": "344050"
  },
  {
    "text": "complex tooling that was actually quite technically difficult to make work with a new programming language and so that",
    "start": "344050",
    "end": "352060"
  },
  {
    "text": "was one pragmatic reason but also we didn't actually have a strong point of view on what functional first app",
    "start": "352060",
    "end": "357370"
  },
  {
    "text": "development really even meant and it wasn't until a language called Elm came",
    "start": "357370",
    "end": "362740"
  },
  {
    "text": "along the PRU that showed that functional program is immensely relevant to web application",
    "start": "362740",
    "end": "370100"
  },
  {
    "text": "development that I've realized actually functional has a huge role in the in the",
    "start": "370100",
    "end": "376910"
  },
  {
    "text": "user interface as well and the Elm inspired a paradigm or framework called",
    "start": "376910",
    "end": "384530"
  },
  {
    "text": "El mish which many of you will have heard of which is used for web programming with f-sharp and so that's",
    "start": "384530",
    "end": "392060"
  },
  {
    "text": "that uses a compiler called fable so fable solves the user into Favell and elements of the functional first",
    "start": "392060",
    "end": "398450"
  },
  {
    "text": "development for for web development and both both client and server side and but",
    "start": "398450",
    "end": "406370"
  },
  {
    "text": "f-sharp devs also need to be able to go mobile they also need to do you WP apps a some old-fashioned ones might do you",
    "start": "406370",
    "end": "412550"
  },
  {
    "text": "know GT k app so they also need to be able to do WinForms absented WPF okay",
    "start": "412550",
    "end": "418640"
  },
  {
    "text": "and we need to think about app development so xamarin is a very",
    "start": "418640",
    "end": "424190"
  },
  {
    "text": "sensible place to start with this because xamarin forms is an amazing cross-platform cross framework sort of",
    "start": "424190",
    "end": "430940"
  },
  {
    "text": "unifying story for app development and",
    "start": "430940",
    "end": "436030"
  },
  {
    "text": "so we wanted really from the f-sharp respective can we make xamarin a simple",
    "start": "436030",
    "end": "441650"
  },
  {
    "text": "and compelling v sharp up development okay and it's good things have changed",
    "start": "441650",
    "end": "447290"
  },
  {
    "start": "444000",
    "end": "648000"
  },
  {
    "text": "since we started F sharp way back and we have now this to this paradigm mvvm and",
    "start": "447290",
    "end": "453340"
  },
  {
    "text": "there are lots of mvvm frameworks in the",
    "start": "453340",
    "end": "458990"
  },
  {
    "text": "world there are very old ones like GT k there are xamarin wrapping wrappings",
    "start": "458990",
    "end": "465170"
  },
  {
    "text": "around the Apple ones there's WPF is a huge one we have an Android with VWP we",
    "start": "465170",
    "end": "473150"
  },
  {
    "text": "have salmon forms itself is an mvvm sort of framework and you'll notice there are",
    "start": "473150",
    "end": "480530"
  },
  {
    "text": "lots of old fashioned icons over on the left and they're all fashion because",
    "start": "480530",
    "end": "487670"
  },
  {
    "text": "partly there's a new new generation of frameworks taking very different and",
    "start": "487670",
    "end": "494660"
  },
  {
    "text": "interesting approach compared to mvvm we call these envy you",
    "start": "494660",
    "end": "499949"
  },
  {
    "text": "model view update and these ones over on the right have these nice modern flowing",
    "start": "499949",
    "end": "506699"
  },
  {
    "text": "icons and there's a there's a reason for this every doubt reflux we have react",
    "start": "506699",
    "end": "512310"
  },
  {
    "text": "native and we have react and we have flutter and we have fable here and over",
    "start": "512310",
    "end": "521610"
  },
  {
    "text": "on the left what are the characterize these oo programming absolutely you know there's you have these generally complex",
    "start": "521610",
    "end": "529290"
  },
  {
    "text": "mutable models and view models propagating changes through signals up",
    "start": "529290",
    "end": "535470"
  },
  {
    "text": "to a UI which is usually implemented in a second language is declarative and",
    "start": "535470",
    "end": "542940"
  },
  {
    "text": "because it's in a second language it's kind of static not completely static",
    "start": "542940",
    "end": "548970"
  },
  {
    "text": "it's got bits of knobs and dials and D and turn things on and off and kinda but anything that every any possible UI",
    "start": "548970",
    "end": "557430"
  },
  {
    "text": "state of element has to be lifted out of the app and kind of sliced off and into",
    "start": "557430",
    "end": "563490"
  },
  {
    "text": "this static UI and it often yeah and there's just there's this big trade-off",
    "start": "563490",
    "end": "569220"
  },
  {
    "text": "the reason they do that it's because I want designer tooling but the designer tooling gets very complex for because",
    "start": "569220",
    "end": "575550"
  },
  {
    "text": "you've kind of sliced off the user interface out of your your code over on",
    "start": "575550",
    "end": "580560"
  },
  {
    "text": "the right these are characterized by much more functional thinking much more immune not always completely immutable",
    "start": "580560",
    "end": "586920"
  },
  {
    "text": "but much more immutability it's sort of thinking or the view is a function from",
    "start": "586920",
    "end": "593250"
  },
  {
    "text": "an underlying declarative model and the interestingly the UI is tends to be much",
    "start": "593250",
    "end": "600360"
  },
  {
    "text": "more declaratively dynamic I'll be talking about Y in a later and the view",
    "start": "600360",
    "end": "606209"
  },
  {
    "text": "tends to be in the same language as the DSL not always some integrate integrate some markup and they take the the",
    "start": "606209",
    "end": "613949"
  },
  {
    "text": "tooling they use tends to rely on live coding tooling which is relatively simple has its glitches certainly",
    "start": "613949",
    "end": "622470"
  },
  {
    "text": "sometimes but it's but it's relatively simple compared to the kind of complex designer tooling fabulous for instance",
    "start": "622470",
    "end": "628620"
  },
  {
    "text": "which I'm talking about today the live coding tooling is just comply in the repository so if you want to help work on that and improve it you're not",
    "start": "628620",
    "end": "635550"
  },
  {
    "text": "relying on a whole stack of tooling provided by Visual Studio or or other",
    "start": "635550",
    "end": "641430"
  },
  {
    "text": "other xcode or other tooling environments okay so things are changing and let's take a look at these two",
    "start": "641430",
    "end": "650399"
  },
  {
    "text": "different settings I've described these a little bit we have view view model model and we have this sort of data binding between",
    "start": "650399",
    "end": "656939"
  },
  {
    "text": "the view and the view model and then the signals going back between the the view model and the model and a and these",
    "start": "656939",
    "end": "662790"
  },
  {
    "text": "things are mutable and the view is mutable and and then over on the right we have MV you so you can do mvvm in in",
    "start": "662790",
    "end": "672569"
  },
  {
    "start": "668000",
    "end": "717000"
  },
  {
    "text": "f-sharp you can do it over the summer and if you like and this is the sort of thing that you you get can't can you see",
    "start": "672569",
    "end": "680879"
  },
  {
    "text": "my pointer no this is the problem I don't know what I have to write so this",
    "start": "680879",
    "end": "692939"
  },
  {
    "text": "is this is what it looks like and as you can see building a few model and straightaway you've got oh my god you've",
    "start": "692939",
    "end": "698759"
  },
  {
    "text": "got mutation and it's ok it looks actually quite nice it's quite ok enough sharp to do for you if you have to do",
    "start": "698759",
    "end": "703800"
  },
  {
    "text": "mutable over program you said totally fine paradigm to use for many many types",
    "start": "703800",
    "end": "709139"
  },
  {
    "text": "of programming but still the whole the mutation is coming in very early and",
    "start": "709139",
    "end": "715620"
  },
  {
    "text": "very intrinsically in the whole architecture of your application and you get this sort of thing to kind of implement triggers and property changed",
    "start": "715620",
    "end": "724319"
  },
  {
    "start": "717000",
    "end": "756000"
  },
  {
    "text": "event args and create commands and so on it squander this mvvm world is not only",
    "start": "724319",
    "end": "730339"
  },
  {
    "text": "complex in its kind of in if fundamentals of having this mutation around but it's quite conceptually",
    "start": "730339",
    "end": "735449"
  },
  {
    "text": "complex as well you've got a lot of terminology to learn like because the",
    "start": "735449",
    "end": "741149"
  },
  {
    "text": "user interface language has all these widgets like these things commands and and properly changed events and yeah the",
    "start": "741149",
    "end": "746910"
  },
  {
    "text": "underlying programming language doesn't have those and you kind of got a meta meta make those better and actually",
    "start": "746910",
    "end": "753480"
  },
  {
    "text": "create objects for commands and so on and yeah ok so in contrast this is this",
    "start": "753480",
    "end": "760110"
  },
  {
    "start": "756000",
    "end": "874000"
  },
  {
    "text": "is how Model View update works you have an online model you have a view have a message and the message comes",
    "start": "760110",
    "end": "765459"
  },
  {
    "text": "back and the model gets incrementally updated and then the view gets rear-ended okay and this this confused",
    "start": "765459",
    "end": "774040"
  },
  {
    "text": "me like crazy for a long time I was I was just like how the heck does this kind of add up to how could so they're",
    "start": "774040",
    "end": "780850"
  },
  {
    "text": "actually really waiting the view on changes to the underlying model and you",
    "start": "780850",
    "end": "788140"
  },
  {
    "text": "just suddenly you're all these warning signs go off in your head isn't that kind of flicker isn't that gonna be too",
    "start": "788140",
    "end": "793750"
  },
  {
    "text": "costly isn't that it's just not it can't",
    "start": "793750",
    "end": "798850"
  },
  {
    "text": "what can't anything flow back and and but then but then through the there the",
    "start": "798850",
    "end": "805360"
  },
  {
    "text": "performance considerations are real you have to incremental eyes things and there's a whole set of techniques you",
    "start": "805360",
    "end": "811899"
  },
  {
    "text": "can use to incremental eyes this but the fundamental information flow stays the",
    "start": "811899",
    "end": "817329"
  },
  {
    "text": "same and it's incredibly simplifying to your that is only one direction where",
    "start": "817329",
    "end": "823930"
  },
  {
    "text": "information goes in your whole application it's it's round and round and round and you can individually unit",
    "start": "823930",
    "end": "829570"
  },
  {
    "text": "test each of these parts and each of these parts are just functional programming they're just functions the view is a function from the model to the",
    "start": "829570",
    "end": "836800"
  },
  {
    "text": "view the messages are just functional programming data discriminated unions in",
    "start": "836800",
    "end": "842410"
  },
  {
    "text": "F sharp nearly always and the update of the model is just a function to update one model to give you a new model you",
    "start": "842410",
    "end": "848800"
  },
  {
    "text": "can unit test those it's it is very because it's information flow then it's",
    "start": "848800",
    "end": "854170"
  },
  {
    "text": "very few places for things to go wrong in a sense so made mistakes of course but but it the magic of functional",
    "start": "854170",
    "end": "865120"
  },
  {
    "text": "program is strongly typed functional programming really begins to work here and this is why Elm works so well its wife elvish works so well and it's why",
    "start": "865120",
    "end": "872500"
  },
  {
    "text": "fabulous works well okay so I've covered some of this just to say",
    "start": "872500",
    "end": "877959"
  },
  {
    "start": "874000",
    "end": "921000"
  },
  {
    "text": "a big shout out to the people who work on safe stack some of them are here it",
    "start": "877959",
    "end": "884170"
  },
  {
    "text": "has really proven to me now safe stack is a server side and client side with",
    "start": "884170",
    "end": "889240"
  },
  {
    "text": "favorable elvish but on the client side and it really shows that non f-sharp",
    "start": "889240",
    "end": "895270"
  },
  {
    "text": "people have been able to pick up this kind the programming do the user interface side of it in business context",
    "start": "895270",
    "end": "902589"
  },
  {
    "text": "you can talk to seven falkman about this they find it really this is a really simple end of F sharp programming okay",
    "start": "902589",
    "end": "908410"
  },
  {
    "text": "this is not that you don't you very rarely have to define a type and if it is it's just like a record or something",
    "start": "908410",
    "end": "913990"
  },
  {
    "text": "you you very very rarely have to do anything difficult it's just absolutely",
    "start": "913990",
    "end": "919990"
  },
  {
    "text": "simple F sharp coding okay so let me rant a little bit about zamel I can just",
    "start": "919990",
    "end": "926200"
  },
  {
    "start": "921000",
    "end": "986000"
  },
  {
    "text": "kind of let loose here like so I've",
    "start": "926200",
    "end": "932709"
  },
  {
    "text": "hinted that somebody's already some of this way of thinking sam'l assumes design is a sliced off the UI from the",
    "start": "932709",
    "end": "938230"
  },
  {
    "text": "code and therefore zamel ends up with static it's got these layers of complexity because it's not a",
    "start": "938230",
    "end": "943810"
  },
  {
    "text": "programming language they have to start adding in all these programming language features like templating okay and they",
    "start": "943810",
    "end": "952209"
  },
  {
    "text": "add in all these things that smell a lot like code to me right behaviors and converters and they have all this",
    "start": "952209",
    "end": "959740"
  },
  {
    "text": "complex design tool again it does fail this tooling let's first be honest yeah and separating the UI itself is fine in",
    "start": "959740",
    "end": "968320"
  },
  {
    "text": "this model the UI the model to the view function is actually fully separated you",
    "start": "968320",
    "end": "973450"
  },
  {
    "text": "can carve it off if you want and put it in a separate component or whatever unit tested separately but do we really need",
    "start": "973450",
    "end": "981910"
  },
  {
    "text": "a fully separate language to do this okay so this this is so sam'l ends up",
    "start": "981910",
    "end": "996579"
  },
  {
    "start": "986000",
    "end": "1045000"
  },
  {
    "text": "rock layers of complexity and and to be",
    "start": "996579",
    "end": "1001800"
  },
  {
    "text": "honest I will say something quite strong which I feel sam'l is a bit of a",
    "start": "1001800",
    "end": "1007470"
  },
  {
    "text": "complexity disaster now that's a stronger position that any official Microsoft position their lives amel is",
    "start": "1007470",
    "end": "1012870"
  },
  {
    "text": "actually used effectively by by both F sharp and C sharp programmers many many",
    "start": "1012870",
    "end": "1019709"
  },
  {
    "text": "applications are written in it but in some sense it feels like a bit of a category mistake in this dynamic UI",
    "start": "1019709",
    "end": "1027928"
  },
  {
    "text": "should be separated into a static markup language it just doesn't to me at some level I mean it's it",
    "start": "1027929",
    "end": "1035350"
  },
  {
    "text": "anyway this gives you an alternative perspective on how that if you're gonna",
    "start": "1035350",
    "end": "1040749"
  },
  {
    "text": "do that slicing maybe you don't have to sly students in exactly the same places okay so let's take one example you want",
    "start": "1040749",
    "end": "1048159"
  },
  {
    "start": "1045000",
    "end": "1192000"
  },
  {
    "text": "to do a not Hatter not a binding in zamel okay so you got ease enabled here",
    "start": "1048159",
    "end": "1053860"
  },
  {
    "text": "and you're it's late at night and you try it in 2015 on the xamarin forms forums and george cook here",
    "start": "1053860",
    "end": "1059769"
  },
  {
    "text": "thank you George is trying to know this bit is how I want to don't know how to do how do they were not in the user",
    "start": "1059769",
    "end": "1066100"
  },
  {
    "text": "interface not because they because the view model which he can't change perhaps has got is logging in and you want is",
    "start": "1066100",
    "end": "1072730"
  },
  {
    "text": "not logging in alright and what you need is a is to one of these converter things",
    "start": "1072730",
    "end": "1079389"
  },
  {
    "text": "you know this is great today you got a negate boolean converter with a novella",
    "start": "1079389",
    "end": "1085239"
  },
  {
    "text": "thank you Joe for answering the question and button clicked on clicked image this",
    "start": "1085239",
    "end": "1091330"
  },
  {
    "text": "etc and then you actually have some c-sharp code to return not here and you",
    "start": "1091330",
    "end": "1096429"
  },
  {
    "text": "can actually download a nougat package for the negate boolean converter and I",
    "start": "1096429",
    "end": "1102299"
  },
  {
    "text": "think or collection of converters that are commonly used and then of course your app might get quite a bit bigger",
    "start": "1102299",
    "end": "1108249"
  },
  {
    "text": "because there's all these converters you didn't need in there and on you go but",
    "start": "1108249",
    "end": "1114820"
  },
  {
    "text": "of course it didn't work because a good answer but someone who's not much familiar with zamel I need to add the name space in the sam'l file to use that",
    "start": "1114820",
    "end": "1121149"
  },
  {
    "text": "converter that's good okay right fine so just to say how does this look when your",
    "start": "1121149",
    "end": "1126399"
  },
  {
    "text": "view is a function from the model and which is allowed to dispatch messages",
    "start": "1126399",
    "end": "1131590"
  },
  {
    "text": "this is a function view and it takes a parameter model and it takes a parameter which is a dispatch function allows it",
    "start": "1131590",
    "end": "1136749"
  },
  {
    "text": "to dispatch things and you can see the few full view here it's a content page",
    "start": "1136749",
    "end": "1141899"
  },
  {
    "text": "layout and everything and at the bottom we've got a can can you execute the reset button and it's if the model has",
    "start": "1141899",
    "end": "1150039"
  },
  {
    "text": "changed but what if the view model said unchanged okay well in the function you just do that okay there let's look at",
    "start": "1150039",
    "end": "1156940"
  },
  {
    "text": "that again it's hard to find that on a for romantic question because it's so easy okay because you got to reevaluate",
    "start": "1156940",
    "end": "1165230"
  },
  {
    "text": "evaluate the view on each model update then you just reevaluate this and you differentially apply the updates on",
    "start": "1165230",
    "end": "1171410"
  },
  {
    "text": "there from the shadow view through to the actual controls and and and the and the and and a and E and the element will",
    "start": "1171410",
    "end": "1179620"
  },
  {
    "text": "will change from I can execute to not",
    "start": "1179620",
    "end": "1184910"
  },
  {
    "text": "execute so you're going from a world where you need this sort of thing to a world where you just code and just put",
    "start": "1184910",
    "end": "1190280"
  },
  {
    "text": "it in the not so how easy is that okay so that's the inspiration what's um",
    "start": "1190280",
    "end": "1195559"
  },
  {
    "start": "1192000",
    "end": "1198000"
  },
  {
    "text": "what's needed the simplicity of fable and elvish but for apps and this is I'm",
    "start": "1195559",
    "end": "1201559"
  },
  {
    "start": "1198000",
    "end": "1210000"
  },
  {
    "text": "just running you through some of the getting started things so let's take you through where we're actually at here so",
    "start": "1201559",
    "end": "1207950"
  },
  {
    "text": "we go to the fabulous website which is heat on the FS projects incubation sharp",
    "start": "1207950",
    "end": "1215360"
  },
  {
    "start": "1210000",
    "end": "1238000"
  },
  {
    "text": "Community incubation site they're heading very strongly to version 1.0 they're version 9.3 34 at the moment",
    "start": "1215360",
    "end": "1223040"
  },
  {
    "text": "with a with just a few items left to knock off the version 1.0 and great work",
    "start": "1223040",
    "end": "1228799"
  },
  {
    "text": "by the team who are the community team who are now looking after this okay so here the docs have getting started",
    "start": "1228799",
    "end": "1235090"
  },
  {
    "text": "similar to here you just install the fabulous templates and then you do new",
    "start": "1235090",
    "end": "1241910"
  },
  {
    "start": "1238000",
    "end": "1427000"
  },
  {
    "text": "fabulous app on some particular app and then you land in a visual studio project",
    "start": "1241910",
    "end": "1249790"
  },
  {
    "text": "like this I've actually added a few things here let me just sit down for",
    "start": "1249790",
    "end": "1259220"
  },
  {
    "text": "this and because I'm getting old I have to put on my glasses is this okay so I'm",
    "start": "1259220",
    "end": "1269110"
  },
  {
    "text": "also so I've launched this app and here it is it's slightly modified from the",
    "start": "1269110",
    "end": "1274139"
  },
  {
    "text": "the one you get as you can see it's a super flashy user interface application here we'll talk about I've said I",
    "start": "1274139",
    "end": "1283600"
  },
  {
    "text": "haven't promised any flashiness okay so the important thing here is let's take a look let's uncomment some of this let's",
    "start": "1283600",
    "end": "1292440"
  },
  {
    "text": "comment out this here and will comment",
    "start": "1292440",
    "end": "1301029"
  },
  {
    "text": "out the smaller button okay just check",
    "start": "1301029",
    "end": "1309460"
  },
  {
    "text": "my yeah there we are so the okay I don't have on top so I've got to this",
    "start": "1309460",
    "end": "1321148"
  },
  {
    "text": "yeah okay so we run advisor on the right to buy an Android phone here by Samsung and",
    "start": "1327909",
    "end": "1335850"
  },
  {
    "text": "we're using the live update tooling that does come with fabulous you do have to",
    "start": "1335850",
    "end": "1341279"
  },
  {
    "text": "at the moment it doesn't launch automatically you have to launch a background process here and that will in",
    "start": "1341279",
    "end": "1349260"
  },
  {
    "text": "that will enable live update in your application so you see you get about two seconds turnaround time on our updates",
    "start": "1349260",
    "end": "1355500"
  },
  {
    "text": "to two to your app and the code is being",
    "start": "1355500",
    "end": "1361350"
  },
  {
    "text": "re compiled effectively rechecked on your machine and a web connection is",
    "start": "1361350",
    "end": "1366659"
  },
  {
    "text": "open to the app running on the phone which accepts a new chunk of code to use as the as the logic of your application",
    "start": "1366659",
    "end": "1375649"
  },
  {
    "text": "okay so we have our code here so bigger here so at the moment we can keep making",
    "start": "1375649",
    "end": "1381690"
  },
  {
    "text": "things bigger forever but what if we want to put a limit on this so we want to do that business of changing its can",
    "start": "1381690",
    "end": "1388830"
  },
  {
    "text": "execute behavior depending on what the actual model is and we'll save that and",
    "start": "1388830",
    "end": "1394169"
  },
  {
    "text": "update and now when we come to bigger and we come there the button is",
    "start": "1394169",
    "end": "1400049"
  },
  {
    "text": "appropriately adjusted for its logic no data binding needed there just view",
    "start": "1400049",
    "end": "1406200"
  },
  {
    "text": "re-evaluation you can just forget forget nearly forgot all about everything you knew about data binding more or less",
    "start": "1406200",
    "end": "1412429"
  },
  {
    "text": "okay we'll add a new option called a reset button as well and let's just",
    "start": "1412429",
    "end": "1419010"
  },
  {
    "text": "track through what the reset button does here so there's a message type up above I'll just skip forward to the very basic",
    "start": "1419010",
    "end": "1429210"
  },
  {
    "text": "structure that you'll see in every mvu app we have the model here we have a set",
    "start": "1429210",
    "end": "1435389"
  },
  {
    "text": "of messages which can cause updates to the model you have the initial state we have the update function that was the",
    "start": "1435389",
    "end": "1442529"
  },
  {
    "text": "thing that comes back around to up given the model and a message producer new model and it's usually modeled with some",
    "start": "1442529",
    "end": "1449549"
  },
  {
    "text": "updates to the model you generate an actual new model you can if you really need to use mutable state in the model",
    "start": "1449549",
    "end": "1456539"
  },
  {
    "text": "you can do that but and just actually change it but in this we're using the fully functional approach here",
    "start": "1456539",
    "end": "1462710"
  },
  {
    "text": "and here's the view function it takes a model and a dispatch like you saw before and it can be dynamic it can the actual",
    "start": "1462710",
    "end": "1469340"
  },
  {
    "text": "content that you render in effect can depend on the model state so if model is",
    "start": "1469340",
    "end": "1474710"
  },
  {
    "text": "pressed do something otherwise do something else so this is compute the view and that's it that's enough okay so",
    "start": "1474710",
    "end": "1482809"
  },
  {
    "text": "what have we got here we've got a reset reset button and our visor here we could",
    "start": "1482809",
    "end": "1489140"
  },
  {
    "text": "go bigger bigger bigger and we do a reset and we'll just double check what happened there we are in the update",
    "start": "1489140",
    "end": "1495740"
  },
  {
    "text": "function it produces the initial model here and also you can produce what's",
    "start": "1495740",
    "end": "1502460"
  },
  {
    "text": "called a command that's the only other concept it's it's basically just an action that happens an asynchronous",
    "start": "1502460",
    "end": "1508520"
  },
  {
    "text": "action that gets started as a result of the update and can itself do further a",
    "start": "1508520",
    "end": "1514460"
  },
  {
    "text": "send further messages back around the loop okay so reset happened and it returned",
    "start": "1514460",
    "end": "1519830"
  },
  {
    "text": "the initial model of size two and we'll see where that got dispatched it got dispatched in the command to the reset",
    "start": "1519830",
    "end": "1526730"
  },
  {
    "text": "button dispatch reset here okay so let's start adding some new functionality we're",
    "start": "1526730",
    "end": "1533840"
  },
  {
    "text": "going to add a new game button but new game hasn't been defined yet in our messages type so we'll come back and",
    "start": "1533840",
    "end": "1539630"
  },
  {
    "text": "we'll actually define all of these message types and will define what",
    "start": "1539630",
    "end": "1545659"
  },
  {
    "text": "happens in a new game it just goes back to the initial model and I think we okay",
    "start": "1545659",
    "end": "1554659"
  },
  {
    "text": "I'll actually leave these ones since we're not using these yet I'll comment",
    "start": "1554659",
    "end": "1560480"
  },
  {
    "text": "those back up and now we have a new game which is more or less like the reset button because it's actually more or",
    "start": "1560480",
    "end": "1568490"
  },
  {
    "text": "less the same i will uncomment",
    "start": "1568490",
    "end": "1572408"
  },
  {
    "text": "comment that out okay so let's start adding some new messages here we're",
    "start": "1574660",
    "end": "1582080"
  },
  {
    "text": "going to what we do first we will put a grid on here and initially we will make",
    "start": "1582080",
    "end": "1592880"
  },
  {
    "text": "it only contain box views and I will",
    "start": "1592880",
    "end": "1600730"
  },
  {
    "text": "comment out this code yeah and will lead",
    "start": "1600730",
    "end": "1609230"
  },
  {
    "text": "our helper function called make grid so if you've got a part of your user interface which recurs commonly you know",
    "start": "1609230",
    "end": "1616040"
  },
  {
    "text": "the object-oriented way of thinking about it is let's make a class which represents a new control because it's going to have mutable state and so on in",
    "start": "1616040",
    "end": "1624110"
  },
  {
    "text": "order to capture that commonality and that's why they start using implementation inheritance to start reusing fragments of of components and",
    "start": "1624110",
    "end": "1632600"
  },
  {
    "text": "user interfaces but in this world of course everything's functional if you what if you if you need to make lots of",
    "start": "1632600",
    "end": "1637669"
  },
  {
    "text": "grids in your applications then you can just have a function which obstructs out the process of making a grid because",
    "start": "1637669",
    "end": "1643850"
  },
  {
    "text": "it's just taking data the number of rows and columns and a function to generate a view element for that grid for that part",
    "start": "1643850",
    "end": "1651500"
  },
  {
    "text": "of the grid and you generate the grid and then you just really use that in lots of places so your your element of",
    "start": "1651500",
    "end": "1657290"
  },
  {
    "text": "reuse becomes just normal functional programming and that's absolutely key to wire to what is it's it's more it's more",
    "start": "1657290",
    "end": "1664549"
  },
  {
    "text": "productive because you don't have to use implementation inheritance so we have our nice blue grid now let's make it",
    "start": "1664549",
    "end": "1672820"
  },
  {
    "text": "that we're going to put an image on the grid here take this now we'll need this",
    "start": "1672820",
    "end": "1683030"
  },
  {
    "text": "thing called solution here start commenting these out",
    "start": "1683030",
    "end": "1690669"
  },
  {
    "text": "like all of these and think that's okay",
    "start": "1692610",
    "end": "1698960"
  },
  {
    "text": "so we've changed these elements all going well now contains different images",
    "start": "1698960",
    "end": "1706110"
  },
  {
    "text": "for that for the different locations okay right okay so let's now go the next",
    "start": "1706110",
    "end": "1724320"
  },
  {
    "text": "step which is to will initially hide all",
    "start": "1724320",
    "end": "1730169"
  },
  {
    "text": "of those images it's just actually I'm",
    "start": "1730169",
    "end": "1736649"
  },
  {
    "text": "gonna start I'll take the game over out",
    "start": "1736649",
    "end": "1743990"
  },
  {
    "text": "okay now we're going to have a message to reveal an image here shout is",
    "start": "1743990",
    "end": "1754200"
  },
  {
    "text": "uncommon all of this and hide okay before the game over",
    "start": "1754200",
    "end": "1771059"
  },
  {
    "text": "comment and we will put in a logic that",
    "start": "1771059",
    "end": "1779909"
  },
  {
    "text": "this line get rid of this line okay so what's happening here so if we",
    "start": "1779909",
    "end": "1786370"
  },
  {
    "text": "or if we've already revealed an image then we will show the image so that's the dynamic part of the UI and if it's",
    "start": "1786370",
    "end": "1793330"
  },
  {
    "text": "not revealed we're going to use a gray image and we're going to have a tap gesture recognizer for when we tap on",
    "start": "1793330",
    "end": "1800799"
  },
  {
    "text": "the image here and then the image will be revealed and you'll see is coming",
    "start": "1800799",
    "end": "1808210"
  },
  {
    "text": "through like this okay and then and each",
    "start": "1808210",
    "end": "1813429"
  },
  {
    "text": "second as I was tapping what was happening we can just trace through the flow of the logic it was sending a message called reveal around the loop",
    "start": "1813429",
    "end": "1820630"
  },
  {
    "text": "which is here it's just one it's just a date it's just data nothing complex in that message revealing a position and",
    "start": "1820630",
    "end": "1828039"
  },
  {
    "text": "we'll see where it gets processed if I've already made a first choice if I haven't made a first choice then we",
    "start": "1828039",
    "end": "1833590"
  },
  {
    "text": "would just reveal the image and if I have made a first choice while we do some slightly more complex update",
    "start": "1833590",
    "end": "1840370"
  },
  {
    "text": "including that game over logic to say it took me thirty seven seconds and now",
    "start": "1840370",
    "end": "1846429"
  },
  {
    "text": "because the user interface is dynamic then the the business of how big that",
    "start": "1846429",
    "end": "1854260"
  },
  {
    "text": "grid is as a user becomes better and wants to play a bigger game was handled purely through the make grid function",
    "start": "1854260",
    "end": "1860529"
  },
  {
    "text": "which is just passing that model count in and making just generating a bigger",
    "start": "1860529",
    "end": "1865600"
  },
  {
    "text": "grid and then the up there and then the updates happened and I can smaller and it comes back and that could be the sort",
    "start": "1865600",
    "end": "1872289"
  },
  {
    "text": "of thing which in zamel the move from doing a static UI to doing a dynamic UI it's actually a big a big change right",
    "start": "1872289",
    "end": "1880210"
  },
  {
    "text": "because the static LaMotte you are you've hardwired or 3x3 or 2x2 grid and so on and then to suddenly make that",
    "start": "1880210",
    "end": "1886330"
  },
  {
    "text": "dynamic it's oh my god what do I do well in this setting it's dead simple you just you just just program it and generate",
    "start": "1886330",
    "end": "1893200"
  },
  {
    "text": "the different UI it and it's just this instead of being you know four and four",
    "start": "1893200",
    "end": "1898750"
  },
  {
    "text": "here which case actually that doesn't",
    "start": "1898750",
    "end": "1904090"
  },
  {
    "text": "might yeah okay no that was right I gotta check that anyway you get the idea",
    "start": "1904090",
    "end": "1910360"
  },
  {
    "text": "it's easy to make us make the UI static",
    "start": "1910360",
    "end": "1915850"
  },
  {
    "text": "and make the UI dynamic okay so that's your sort of hello world of your dynamic",
    "start": "1915850",
    "end": "1922480"
  },
  {
    "start": "1917000",
    "end": "1930000"
  },
  {
    "text": "UI fabulous application looks a lot like a favor a fable eldership and a lot like",
    "start": "1922480",
    "end": "1929140"
  },
  {
    "text": "an L map okay it's all functional programming UI becomes information flow view and model update just functional",
    "start": "1929140",
    "end": "1936190"
  },
  {
    "start": "1930000",
    "end": "1956000"
  },
  {
    "text": "programming views are recomputed the new view is applied crucially for performance applied to the underlying",
    "start": "1936190",
    "end": "1942250"
  },
  {
    "text": "controls using differential update and if the view actually hasn't changed there no updates are made and messages",
    "start": "1942250",
    "end": "1949300"
  },
  {
    "text": "are explicit and it's very easy to get a full message trace and debug with respect to what are the actual messages",
    "start": "1949300",
    "end": "1954700"
  },
  {
    "text": "coming through your application okay so right that's not pretty so how",
    "start": "1954700",
    "end": "1961030"
  },
  {
    "start": "1960000",
    "end": "2015000"
  },
  {
    "text": "do we make it pretty first of all this xamarin form supports CSS styling i this",
    "start": "1961030",
    "end": "1967420"
  },
  {
    "text": "these slides are taken from mark mallow bones talk I'd strongly recommend you you look at his material on using a CSS",
    "start": "1967420",
    "end": "1974620"
  },
  {
    "text": "styling with this kind of work I'm just going to play a short video of of marks",
    "start": "1974620",
    "end": "1982830"
  },
  {
    "text": "marks one of the front ends he's made using fabulous and I don't I haven't",
    "start": "1982830",
    "end": "1990940"
  },
  {
    "text": "listened to his narrative but my understanding is this is it was a comparative project versus coded UI and",
    "start": "1990940",
    "end": "1996640"
  },
  {
    "text": "this with using fabulous or using sam'l and this is the results of the coded",
    "start": "1996640",
    "end": "2003030"
  },
  {
    "text": "coded driver just to give you some sense of the dynamic kind of field you can kind of get with your your your",
    "start": "2003030",
    "end": "2010170"
  },
  {
    "text": "application okay okay here's some other apps that have",
    "start": "2010170",
    "end": "2017809"
  },
  {
    "start": "2015000",
    "end": "2039000"
  },
  {
    "text": "been written just give you the sort of feel that what people are writing here this I'll talk more about this app on the Left this one on the right uses",
    "start": "2017809",
    "end": "2025100"
  },
  {
    "text": "these 3d displays called ohoo",
    "start": "2025100",
    "end": "2030169"
  },
  {
    "text": "a 3d display component Calder who you can have Maps integration you have charting integration and so lots of good",
    "start": "2030169",
    "end": "2038090"
  },
  {
    "text": "eye candy they're elvish contacts is the",
    "start": "2038090",
    "end": "2043280"
  },
  {
    "start": "2039000",
    "end": "2053000"
  },
  {
    "text": "one that was on the middle left and it's an absolutely wonderful",
    "start": "2043280",
    "end": "2048710"
  },
  {
    "text": "I almost said absolutely fabulous there's absolutely wonderful application for learning it's got lots if you're",
    "start": "2048710",
    "end": "2055669"
  },
  {
    "start": "2053000",
    "end": "2099000"
  },
  {
    "text": "doing an information-rich application on device sequel light integration these",
    "start": "2055669",
    "end": "2061310"
  },
  {
    "text": "maps I think data loading and all of it just following the same kinds of architecture and sending messages around",
    "start": "2061310",
    "end": "2067550"
  },
  {
    "text": "and all of it within the paradigm using all these Amaral xamarin essentials",
    "start": "2067550",
    "end": "2073128"
  },
  {
    "text": "things sitting SMS phone calls mult it's a multi page app which is it there's an",
    "start": "2073129",
    "end": "2080270"
  },
  {
    "text": "important technique I'm not covering today by using these external messages to reconcile the different components",
    "start": "2080270",
    "end": "2085550"
  },
  {
    "text": "and etcetera etcetera so that it's all",
    "start": "2085550",
    "end": "2090590"
  },
  {
    "text": "open source and you can help improve that as a sample application and",
    "start": "2090590",
    "end": "2095980"
  },
  {
    "text": "actually use it yourself as your contacts app on your phone if you like so just to say that what is that view",
    "start": "2095980",
    "end": "2102650"
  },
  {
    "start": "2099000",
    "end": "2148000"
  },
  {
    "text": "DSL that we were using to describe views it is actually very similar to zamel in many ways you can actually do a",
    "start": "2102650",
    "end": "2108260"
  },
  {
    "text": "one-to-one translation between sam'l and your view DSL you can start looking in with sam'l that looks like this and you",
    "start": "2108260",
    "end": "2114020"
  },
  {
    "text": "get a view that looks like this then so",
    "start": "2114020",
    "end": "2119690"
  },
  {
    "text": "you can see how the the the structures and names are all being carried across",
    "start": "2119690",
    "end": "2124730"
  },
  {
    "text": "so when it's complete with written so the view DSL is everything that's available in sam'l is available in that",
    "start": "2124730",
    "end": "2131150"
  },
  {
    "text": "view DSL but we strip out some of the things like templating and the like so",
    "start": "2131150",
    "end": "2136250"
  },
  {
    "text": "not needed if you're interested in like well how do you handle really enormous lists of data that is covered on the",
    "start": "2136250",
    "end": "2142940"
  },
  {
    "text": "fabulous website that's the topics on that okay right okay so you might be",
    "start": "2142940",
    "end": "2150510"
  },
  {
    "start": "2148000",
    "end": "2202000"
  },
  {
    "text": "interested in animations like in react obviously there's similarity with some",
    "start": "2150510",
    "end": "2155940"
  },
  {
    "text": "of this with react we use refs and so you declare these things called view",
    "start": "2155940",
    "end": "2161880"
  },
  {
    "text": "refs and then once you have a view ref you can trigger off these asynchronous",
    "start": "2161880",
    "end": "2167910"
  },
  {
    "text": "animations and either tie them into the messaging model if necessary their completion and the like or you can just",
    "start": "2167910",
    "end": "2174750"
  },
  {
    "text": "ignore the results in to say okay it's got a the animation on that element is going to run for as long as it runs",
    "start": "2174750",
    "end": "2180030"
  },
  {
    "text": "unless the LSL element actually gets annihilated just because of some later",
    "start": "2180030",
    "end": "2186720"
  },
  {
    "text": "view update and then so we have a ref here where you name it I'll point to it",
    "start": "2186720",
    "end": "2192480"
  },
  {
    "text": "here ref animated label ref and then you dispatch the poked message and the poked message check so we've got something to",
    "start": "2192480",
    "end": "2199140"
  },
  {
    "text": "animate and then it's triggers off the animation okay multi-page apps yes you",
    "start": "2199140",
    "end": "2204870"
  },
  {
    "start": "2202000",
    "end": "2237000"
  },
  {
    "text": "can you still ultimately have a single view function and it but it usually",
    "start": "2204870",
    "end": "2210540"
  },
  {
    "text": "returns one of these structured things which is like a carousel page we check so a single view function is specifying",
    "start": "2210540",
    "end": "2216150"
  },
  {
    "text": "all the possible pages of your app or in the navigation it specifies the whole stack of things so you've still got this",
    "start": "2216150",
    "end": "2221880"
  },
  {
    "text": "thing you've got a state of your overall app and you've got projection to multiple logical pages and each page has",
    "start": "2221880",
    "end": "2229230"
  },
  {
    "text": "its own model message and update function and then you compose the pieces just using normal F sharp code and there",
    "start": "2229230",
    "end": "2235710"
  },
  {
    "text": "are there are good examples of that as I said so how do we make this efficient",
    "start": "2235710",
    "end": "2240750"
  },
  {
    "start": "2237000",
    "end": "2299000"
  },
  {
    "text": "well first of all the crucially the view application to the actual view controls is done differentially and incremental",
    "start": "2240750",
    "end": "2247800"
  },
  {
    "text": "update but if you've got something like this and it can be very helpful to make sure this part of the view doesn't only",
    "start": "2247800",
    "end": "2254670"
  },
  {
    "text": "gets recomputed if necessary and you can do that by using this depends on function and you list out the things",
    "start": "2254670",
    "end": "2261210"
  },
  {
    "text": "that it depends on in here so it might depend on the model count and the model step and they become available",
    "start": "2261210",
    "end": "2266700"
  },
  {
    "text": "internally as the counts and the step and this model actually has a has a different type now it's like do not use",
    "start": "2266700",
    "end": "2272820"
  },
  {
    "text": "me type okay so you can't actually use the model internally in here anymore but",
    "start": "2272820",
    "end": "2277980"
  },
  {
    "text": "you can use the count and the step so we use the count here and this means that if the count on the step were the",
    "start": "2277980",
    "end": "2283380"
  },
  {
    "text": "same as the last time even if some other parts of the model of the change if the count on the step were the same as the",
    "start": "2283380",
    "end": "2288540"
  },
  {
    "text": "last time we actually don't don't do anything okay we we don't do any updates to the view",
    "start": "2288540",
    "end": "2294660"
  },
  {
    "text": "we just return exactly the same view description as the previous time just",
    "start": "2294660",
    "end": "2300420"
  },
  {
    "start": "2299000",
    "end": "2394000"
  },
  {
    "text": "running through some pragmatics you can",
    "start": "2300420",
    "end": "2305760"
  },
  {
    "text": "persist state it's very simple in this setting you just persist the model usually serialize here to Jason you can do it manually as well we don't do this",
    "start": "2305760",
    "end": "2313920"
  },
  {
    "text": "time-travel debugging it's actually very very simple to implement within your own app like it just go back in time please",
    "start": "2313920",
    "end": "2320099"
  },
  {
    "text": "through the app and that's use just app set model and and it's a to a previous",
    "start": "2320099",
    "end": "2325320"
  },
  {
    "text": "model if your model it's purely functional and doesn't contain any",
    "start": "2325320",
    "end": "2330660"
  },
  {
    "text": "mutable state if you interested in what your app size is it's you just use a",
    "start": "2330660",
    "end": "2336210"
  },
  {
    "text": "standard xamarin linking and reduction to get nice small apps the core logic of your app is dotnet",
    "start": "2336210",
    "end": "2342119"
  },
  {
    "text": "standard 2.0 each platform you want to run on it's something I haven't",
    "start": "2342119",
    "end": "2347579"
  },
  {
    "text": "mentioned by the way you can do gtk you could do you WP you can actually do you sharpen you WP apps for the first",
    "start": "2347579",
    "end": "2354079"
  },
  {
    "text": "realistically for the first time using this framework and you can deploy them",
    "start": "2354079",
    "end": "2359280"
  },
  {
    "text": "to the App Store it's not fully supported scenario by Microsoft that's some caveats with that but it you can",
    "start": "2359280",
    "end": "2364470"
  },
  {
    "text": "they are saying yes you can do it on your own it's around your own bat but you do it and you can do WPF apps and",
    "start": "2364470",
    "end": "2373589"
  },
  {
    "text": "you can do window windows forms apps as well okay you can pass in platform",
    "start": "2373589",
    "end": "2382349"
  },
  {
    "text": "helpers if there are differences you can use platform conditionals and so on and",
    "start": "2382349",
    "end": "2387890"
  },
  {
    "text": "absol deployment just follows normals Ameren processes just use the normal everything that's normal in the docs",
    "start": "2387890",
    "end": "2394490"
  },
  {
    "start": "2394000",
    "end": "2405000"
  },
  {
    "text": "there's lots and lots of other examiner and functionality xamarin forms functionality developing around there",
    "start": "2394490",
    "end": "2400829"
  },
  {
    "text": "this new thing called shell is great visual material is another one they're",
    "start": "2400829",
    "end": "2406170"
  },
  {
    "start": "2405000",
    "end": "2424000"
  },
  {
    "text": "all available on new good a thing like xamarin essentials is ABS like it says absolutely essential to get good work",
    "start": "2406170",
    "end": "2412109"
  },
  {
    "text": "done in app development and nearly all orthogonal to the questions of the view elements it's just things",
    "start": "2412109",
    "end": "2417390"
  },
  {
    "text": "like sending an SMS that it's just just just works just like just like it should",
    "start": "2417390",
    "end": "2424790"
  },
  {
    "start": "2424000",
    "end": "2484000"
  },
  {
    "text": "so we what you might say can i define my own view elements okay so for maps and",
    "start": "2424790",
    "end": "2431580"
  },
  {
    "text": "the like and yes there is an extensibility story it's documented on the website you have to write a short",
    "start": "2431580",
    "end": "2437520"
  },
  {
    "text": "amount of code to make that but I'll",
    "start": "2437520",
    "end": "2442620"
  },
  {
    "text": "just bring it up for those interested yeah take a look at views extensions",
    "start": "2442620",
    "end": "2451770"
  },
  {
    "text": "here and there's a guide here for writing of a view extension it will be about about that much code for a typical",
    "start": "2451770",
    "end": "2460950"
  },
  {
    "text": "view extension and for example the Maps",
    "start": "2460950",
    "end": "2466230"
  },
  {
    "text": "extension is described here okay and",
    "start": "2466230",
    "end": "2474210"
  },
  {
    "text": "there are there are standard nougats for maps for 2d graphics and animations and",
    "start": "2474210",
    "end": "2479340"
  },
  {
    "text": "for oxy for charting with oxy plot and for 3d graphics with okay so that that's",
    "start": "2479340",
    "end": "2487520"
  },
  {
    "text": "most of what I wanted to cover if you",
    "start": "2487520",
    "end": "2492810"
  },
  {
    "text": "want to if you actually new to f-sharp this is a fantastic book to get started with get programming with f-sharp Isaac",
    "start": "2492810",
    "end": "2498630"
  },
  {
    "text": "Abraham read that first it doesn't cover anything about fabulous and they move",
    "start": "2498630",
    "end": "2505500"
  },
  {
    "text": "over and get started with a fabulous actually you don't even really have to read this first you can probably just dive into f-sharp with this fabulous",
    "start": "2505500",
    "end": "2511560"
  },
  {
    "text": "programming plus a plus one of the others it plus the first few chapters of a book like this okay thank you very",
    "start": "2511560",
    "end": "2518640"
  },
  {
    "start": "2517000",
    "end": "2576000"
  },
  {
    "text": "much and that's fabulous fabulous is a simple f-sharp mvu app programming and I said please contribute and get involved",
    "start": "2518640",
    "end": "2524040"
  },
  {
    "text": "thank you very much [Applause]",
    "start": "2524040",
    "end": "2530420"
  },
  {
    "text": "have the other talks been taking questions no yeah anybody a question",
    "start": "2535270",
    "end": "2541020"
  },
  {
    "text": "yeah here I'll repeat it once it comes through",
    "start": "2541020",
    "end": "2546990"
  },
  {
    "text": "yes yes that that's correct and there are important reasons for that",
    "start": "2552900",
    "end": "2558660"
  },
  {
    "text": "so let's go back and look at an example about so the question is in in this style of DSL that we've used",
    "start": "2558660",
    "end": "2566279"
  },
  {
    "text": "oh sorry can you put me back on that I",
    "start": "2566279",
    "end": "2581099"
  },
  {
    "start": "2576000",
    "end": "2781000"
  },
  {
    "text": "can point here yes we're using optional arguments here so each of these view",
    "start": "2581099",
    "end": "2587880"
  },
  {
    "text": "elements actually have a very large number of optional arguments available whereas in fabulous it uses sort of",
    "start": "2587880",
    "end": "2594890"
  },
  {
    "text": "attributes like in like an HTML we did",
    "start": "2594890",
    "end": "2600960"
  },
  {
    "text": "this for a few reasons one is to get very strong naming on the actual on the on the arguments the other thing is there's an important f-sharp compiler",
    "start": "2600960",
    "end": "2607529"
  },
  {
    "text": "optimization that applies which it takes each of these view descriptions and all",
    "start": "2607529",
    "end": "2612749"
  },
  {
    "text": "the optional arguments and it actually aligns it one step and they're actually like 200 different possible optional",
    "start": "2612749",
    "end": "2619680"
  },
  {
    "text": "arguments and it reduces those down because it knows you only specified three and they can see that you",
    "start": "2619680",
    "end": "2626489"
  },
  {
    "text": "specified three attributes so it can pre allocate an attribute property bag which",
    "start": "2626489",
    "end": "2631650"
  },
  {
    "text": "contains exactly the right number of attributes and just fill them in very efficiently so it makes the view element",
    "start": "2631650",
    "end": "2638460"
  },
  {
    "text": "creation highly efficient it says the set of things that kind of happened to come together to lead to this choice",
    "start": "2638460",
    "end": "2645499"
  },
  {
    "text": "it's also quite a nice ergonomic I've got but I don't mind the way they did that in in an Elvish it's just so this",
    "start": "2645499",
    "end": "2652710"
  },
  {
    "text": "also got us some performance goals next question please is there another yeah",
    "start": "2652710",
    "end": "2660529"
  },
  {
    "text": "yeah",
    "start": "2662920",
    "end": "2665920"
  },
  {
    "text": "the UI codes are same yeah yeah so I",
    "start": "2670750",
    "end": "2677420"
  },
  {
    "text": "should by default we only create the Android and iOS because the others were",
    "start": "2677420",
    "end": "2684740"
  },
  {
    "text": "a bit fresh but if you actually want to know the full set of platforms and that's there so you can add WPF uwp Mac",
    "start": "2684740",
    "end": "2692600"
  },
  {
    "text": "OS and gtk and you get Android and iOS so you get all of that the same",
    "start": "2692600",
    "end": "2698830"
  },
  {
    "text": "application code the same view code okay yep",
    "start": "2698830",
    "end": "2706240"
  },
  {
    "text": "IIIi actually I did once do some try to get the get started path on react native",
    "start": "2714910",
    "end": "2721280"
  },
  {
    "text": "and elvish and it I can't do a like-for-like comparison Stefan falkman",
    "start": "2721280",
    "end": "2728480"
  },
  {
    "text": "it's a good person to ask he's doing react native III with with elvish I mean",
    "start": "2728480",
    "end": "2733970"
  },
  {
    "text": "I think there he tells me this looks pretty pretty good in comparison so I yes you can do element react no defense",
    "start": "2733970",
    "end": "2740900"
  },
  {
    "text": "I'm very glad that we have both because one's JavaScript base once thought net based well yeah so I can't really say",
    "start": "2740900",
    "end": "2748310"
  },
  {
    "text": "this I think this has got a lot of technical advantages but I'll just be guessing so yeah any one more question maybe yeah",
    "start": "2748310",
    "end": "2758590"
  },
  {
    "text": "it's the standard F sharp compiler and the xamarin yep this is this is just you",
    "start": "2760480",
    "end": "2768230"
  },
  {
    "text": "you running using Visual Studio on Windows you can do it a Visual Studio Mac yep cool all right",
    "start": "2768230",
    "end": "2776420"
  },
  {
    "text": "thanks very much for coming everyone and let's see we can talk more afterwards thanks",
    "start": "2776420",
    "end": "2782380"
  }
]