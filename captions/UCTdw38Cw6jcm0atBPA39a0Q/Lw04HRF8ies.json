[
  {
    "start": "0",
    "end": "60000"
  },
  {
    "text": "hello everyone and welcome hope you had a good lunch good seeing",
    "start": "1920",
    "end": "8160"
  },
  {
    "text": "you all again it's been a while since I've been in uh Oslo I was at the last NDC Oslo as well did",
    "start": "8160",
    "end": "15480"
  },
  {
    "text": "any of you see me last time I was over here yes no okay maybe some of you don't remember",
    "start": "15480",
    "end": "22740"
  },
  {
    "text": "that that hurts I I didn't think I was so forgettable",
    "start": "22740",
    "end": "28920"
  },
  {
    "text": "uh my name is urita Han by the way I'm at URI Dahan on all of the socials twitters Etc uh and we're going to be",
    "start": "28920",
    "end": "36480"
  },
  {
    "text": "talking today about this thing called cqrs command query responsibilities segregation",
    "start": "36480",
    "end": "42620"
  },
  {
    "text": "pitfalls and patterns related to that so just to get a sense of where all you are",
    "start": "42620",
    "end": "48239"
  },
  {
    "text": "at who's heard of cqrs before yes okay who is it the first time that they're hearing about cqrs essentially being",
    "start": "48239",
    "end": "55140"
  },
  {
    "text": "dragged here by somebody else saying you need to hear about this Okay so",
    "start": "55140",
    "end": "60360"
  },
  {
    "start": "60000",
    "end": "281000"
  },
  {
    "text": "good news is most of you have already passed the fall which is not knowing about cqrs",
    "start": "60360",
    "end": "67200"
  },
  {
    "text": "so as two very smart fellows uh Sherlock Holmes and Doctor Who have mentioned uh",
    "start": "67200",
    "end": "72540"
  },
  {
    "text": "when they don't know a thing they don't like not knowing about a thing so for all those of you who don't like",
    "start": "72540",
    "end": "79260"
  },
  {
    "text": "not knowing about cqrs you've come to the right place now the second Pitfall",
    "start": "79260",
    "end": "84659"
  },
  {
    "text": "is overusing cqrs so whether it's vitamins or antibiotics",
    "start": "84659",
    "end": "91680"
  },
  {
    "text": "or any kind of good thing in life there is sort of an appropriate level of use",
    "start": "91680",
    "end": "97259"
  },
  {
    "text": "and then there's overuse where it becomes toxic and bad for us now I know we've just kind of launched",
    "start": "97259",
    "end": "103979"
  },
  {
    "text": "immediately into here's a pitfall here's another Pitfall let's take a step back and ask the question of what would you",
    "start": "103979",
    "end": "111840"
  },
  {
    "text": "say cqrs is anyway because it's one of those",
    "start": "111840",
    "end": "117439"
  },
  {
    "text": "acronyms in software or terms you know micro Services is another one that you",
    "start": "117439",
    "end": "124500"
  },
  {
    "text": "know there's a whole lot of definitions and sort of different flavors of the",
    "start": "124500",
    "end": "130140"
  },
  {
    "text": "thing out there and that actually causes a lot of difficulty",
    "start": "130140",
    "end": "135900"
  },
  {
    "text": "um so uh who is at Sam Newman's talk about the asynchrony one yeah okay a",
    "start": "135900",
    "end": "142680"
  },
  {
    "text": "bunch of you have he kind of made that emphasis saying you know it's important for us to have a shared language and",
    "start": "142680",
    "end": "148860"
  },
  {
    "text": "agreed upon terms and meanings to things so that ultimately we can talk and collaborate with each other so that when",
    "start": "148860",
    "end": "154500"
  },
  {
    "text": "I say cqrs and you hear cqrs we both know we're talking about the same thing now",
    "start": "154500",
    "end": "160739"
  },
  {
    "text": "just to frame it in terms of well you know other things that already exist in our industry what is Securus the best",
    "start": "160739",
    "end": "167760"
  },
  {
    "text": "way to characterize it compared to other things is that cqrs is an architectural",
    "start": "167760",
    "end": "174000"
  },
  {
    "text": "style now for some of you you're like oh yes of course obviously and some of you are",
    "start": "174000",
    "end": "179700"
  },
  {
    "text": "saying oh architectural style that's the first I've heard of architectural Styles",
    "start": "179700",
    "end": "185519"
  },
  {
    "text": "would you do me a favor and explain to me what an architectural style is",
    "start": "185519",
    "end": "191280"
  },
  {
    "text": "so the thing about our industry is we use the term architecture a lot we might do",
    "start": "191280",
    "end": "198480"
  },
  {
    "text": "object oriented architecture layered architecture service oriented architecture we kind of use that end",
    "start": "198480",
    "end": "205200"
  },
  {
    "text": "term architecture after other things so again service",
    "start": "205200",
    "end": "210959"
  },
  {
    "text": "oriented event-driven architecture all of those things are not actually architectures they are architectural",
    "start": "210959",
    "end": "218580"
  },
  {
    "text": "Styles and the best way to think of them is it's just a way of organizing things",
    "start": "218580",
    "end": "224400"
  },
  {
    "text": "in software so we've got the towels which are nice and neatly layered one on",
    "start": "224400",
    "end": "229799"
  },
  {
    "text": "top of the other however when it comes to detergent detergent is not the kind",
    "start": "229799",
    "end": "236040"
  },
  {
    "text": "of thing that you would try to layer one on top of the other a jar would probably be a better way of organizing that thing",
    "start": "236040",
    "end": "243480"
  },
  {
    "text": "and you got baskets and buckets and whatever so architectural Styles ways of organizing",
    "start": "243480",
    "end": "250500"
  },
  {
    "text": "things cqrs as an architectural style Seekers is a way of organizing some",
    "start": "250500",
    "end": "255720"
  },
  {
    "text": "things in software so you've mentioned already a bunch of other architectural Styles you might have been familiar with",
    "start": "255720",
    "end": "262919"
  },
  {
    "text": "model view controller and VC also a way of organizing things it's a kind of",
    "start": "262919",
    "end": "268080"
  },
  {
    "text": "architectural style rest also is another one representational state transfer a",
    "start": "268080",
    "end": "274139"
  },
  {
    "text": "way of organizing these things now the important thing about all of these architectural styles to remember",
    "start": "274139",
    "end": "280860"
  },
  {
    "text": "is they are not best practices",
    "start": "280860",
    "end": "287419"
  },
  {
    "start": "281000",
    "end": "430000"
  },
  {
    "text": "that's important enough I'm going to say that again because we oh my god do we",
    "start": "287639",
    "end": "293639"
  },
  {
    "text": "love best practices as an industry we've got so many best",
    "start": "293639",
    "end": "299040"
  },
  {
    "text": "practices it's surprising we don't have any pretty good practices",
    "start": "299040",
    "end": "304800"
  },
  {
    "text": "or not very good practices we've got empty patterns yeah we know those right",
    "start": "304800",
    "end": "310259"
  },
  {
    "text": "got plenty of anti-patterns right the bad stuff don't do that then this Chasm of nothingness and then",
    "start": "310259",
    "end": "317880"
  },
  {
    "text": "over here we've got a pile of best practices right",
    "start": "317880",
    "end": "323460"
  },
  {
    "text": "when you think about most things in life that there isn't that really strong dichotomy between the best and the",
    "start": "323460",
    "end": "330000"
  },
  {
    "text": "absolute worst so when we're talking about architectural styles again whether it's",
    "start": "330000",
    "end": "336180"
  },
  {
    "text": "layering whether it's MVC whether it's event driven architecture or cqrs none",
    "start": "336180",
    "end": "341280"
  },
  {
    "text": "of them are best practices unto themselves they're tools use them when",
    "start": "341280",
    "end": "347639"
  },
  {
    "text": "and where they are appropriate and that's where we sort of get into it",
    "start": "347639",
    "end": "352979"
  },
  {
    "text": "say for a given system of any kind of scalar and complexity you're probably",
    "start": "352979",
    "end": "359039"
  },
  {
    "text": "going to use a bunch of them and that's what makes it tricky because we want the",
    "start": "359039",
    "end": "364620"
  },
  {
    "text": "best practice oh layered architecture is the best practice okay everything's going into layers simple straightforward just layer all of",
    "start": "364620",
    "end": "372000"
  },
  {
    "text": "the things and you know project will be a success that didn't work well layering Now sucks",
    "start": "372000",
    "end": "377160"
  },
  {
    "text": "it's in the worst practices bucket what's the next thing event driven architecture yes eventually everything",
    "start": "377160",
    "end": "383100"
  },
  {
    "text": "will be an event and then we event all of the things and we Event Source and we event drive and",
    "start": "383100",
    "end": "389580"
  },
  {
    "text": "we event Orient and then we run into problems with too many events and event schema changes and then we say that",
    "start": "389580",
    "end": "396120"
  },
  {
    "text": "event thing that's crap nope throw it back over there please don't do that all right",
    "start": "396120",
    "end": "403319"
  },
  {
    "text": "you got screwdrivers you got hammers you got saws we use all of these tools for",
    "start": "403319",
    "end": "408539"
  },
  {
    "text": "various different things same thing when it comes to architectural Styles so let's go into secure us what do we even",
    "start": "408539",
    "end": "416100"
  },
  {
    "text": "mean about it now that we can say okay it's an architectural style we have an idea what other things are out there are",
    "start": "416100",
    "end": "422220"
  },
  {
    "text": "that are architectural styles that it relates to where does it come from well before we",
    "start": "422220",
    "end": "428520"
  },
  {
    "text": "had cqrs we had this thing called command query separation all right now this was coined by a very",
    "start": "428520",
    "end": "436500"
  },
  {
    "start": "430000",
    "end": "623000"
  },
  {
    "text": "smart fellow Bertrand Meyer back in 1994 when he wrote a book and he described it",
    "start": "436500",
    "end": "441539"
  },
  {
    "text": "as a programming principle that states that every method on a given class should either be a command which is",
    "start": "441539",
    "end": "448620"
  },
  {
    "text": "performing some kind of action or alternatively a query which is returning",
    "start": "448620",
    "end": "454440"
  },
  {
    "text": "data to the caller but most importantly not both so there should never be a situation",
    "start": "454440",
    "end": "461160"
  },
  {
    "text": "where you're querying something and then that changes its state",
    "start": "461160",
    "end": "466380"
  },
  {
    "text": "so hopefully most of you when you're programming don't do that",
    "start": "466380",
    "end": "472919"
  },
  {
    "text": "like I said this is 1994 close to 30 years ago at the programming level we've",
    "start": "472919",
    "end": "478080"
  },
  {
    "text": "come a fairly long way in terms of the programming practices but",
    "start": "478080",
    "end": "484440"
  },
  {
    "text": "when we start looking at them sort of from an architectural perspective that's where applying those things gets a",
    "start": "484440",
    "end": "490319"
  },
  {
    "text": "little bit tricky now another challenge we have as an industry and it's really unfortunate is that things that are old",
    "start": "490319",
    "end": "498960"
  },
  {
    "text": "we kind of forget them rather quickly we like the new stuff oh yes absolutely",
    "start": "498960",
    "end": "505460"
  },
  {
    "text": "rust yes totally let's rewrite everything in Rust it will be faster",
    "start": "505460",
    "end": "510599"
  },
  {
    "text": "that way we're sure right but the ideas of 30 years ago 40 years",
    "start": "510599",
    "end": "516959"
  },
  {
    "text": "ago from software though those aren't new and shiny don't get accepted to speak at a conference about old type of",
    "start": "516959",
    "end": "522659"
  },
  {
    "text": "topics so that's where we started saying command query separation it's a good",
    "start": "522659",
    "end": "528420"
  },
  {
    "text": "idea at the programming level and then you know about a decade went by we totally forgot about command query",
    "start": "528420",
    "end": "535260"
  },
  {
    "text": "separation these books then came along patterns of Enterprise application architecture domain driven design",
    "start": "535260",
    "end": "541580"
  },
  {
    "text": "uh just a quick show of hands who's read these books before yes okay",
    "start": "541580",
    "end": "548220"
  },
  {
    "text": "um I'm going to be a little bit difficult with you who read them all the way through",
    "start": "548220",
    "end": "554100"
  },
  {
    "text": "okay I'm seeing a few more hands kind of be like uh we're at a half set",
    "start": "554100",
    "end": "561120"
  },
  {
    "text": "right the the reading it all the way through it's kind of like yeah there's some good",
    "start": "561120",
    "end": "567480"
  },
  {
    "text": "stuff in there I think I understood some of it and then again sort of promptly forget",
    "start": "567480",
    "end": "573600"
  },
  {
    "text": "the rest of it so since those books came along as an industry we said let's go do",
    "start": "573600",
    "end": "579240"
  },
  {
    "text": "domain models who's got a domain model in their system yes all the hands going up of course we",
    "start": "579240",
    "end": "585360"
  },
  {
    "text": "have domain models it's a best practice so",
    "start": "585360",
    "end": "590820"
  },
  {
    "text": "what do we do with those domain models well we put all of our logic in them and then as a result of that those",
    "start": "590820",
    "end": "598680"
  },
  {
    "text": "domain models that started kind of nice and right sized started to get bigger",
    "start": "598680",
    "end": "604740"
  },
  {
    "text": "and bigger and more complex and then somewhere along the way it kind",
    "start": "604740",
    "end": "610680"
  },
  {
    "text": "of got really difficult to manage the complexity of those domain models now remember I asked you about who read",
    "start": "610680",
    "end": "618660"
  },
  {
    "text": "the book there's actually an interesting comment about the domain model pattern in the book I'm going to quote it for",
    "start": "618660",
    "end": "624540"
  },
  {
    "start": "623000",
    "end": "801000"
  },
  {
    "text": "you so where should you be using a domain model",
    "start": "624540",
    "end": "630360"
  },
  {
    "text": "and where should you not because as a pattern not a best practice it has a",
    "start": "630360",
    "end": "636600"
  },
  {
    "text": "context it has a place where it is supposed to be used and places where it's not supposed to be used so here is",
    "start": "636600",
    "end": "643740"
  },
  {
    "text": "a literal quote from the book where it says if you have some simple not null",
    "start": "643740",
    "end": "649560"
  },
  {
    "text": "checks and a couple of sums to calculate a transaction script is a better bet",
    "start": "649560",
    "end": "655440"
  },
  {
    "text": "in other words domain model was not actually meant to handle all of the",
    "start": "655440",
    "end": "660959"
  },
  {
    "text": "logic in the system was meant to handle specifically the",
    "start": "660959",
    "end": "666360"
  },
  {
    "text": "complicated and ever-changing business rules",
    "start": "666360",
    "end": "671399"
  },
  {
    "text": "now just so that you can check me and keep me honest that's on page 119 of patterns",
    "start": "671399",
    "end": "677880"
  },
  {
    "text": "of Enterprise application architecture so now that we know that domain models",
    "start": "677880",
    "end": "684000"
  },
  {
    "text": "were not meant to be used for everything and now we realize we kind of were using them for all of the logic and then that",
    "start": "684000",
    "end": "690300"
  },
  {
    "text": "might have created some problems for us then maybe we can start thinking of taking some steps back from there so",
    "start": "690300",
    "end": "696660"
  },
  {
    "text": "that's already one of the pitfalls it's not directly related to cqrs but in my",
    "start": "696660",
    "end": "702420"
  },
  {
    "text": "experience there's a large amount of overlap between people doing cqrs and those using domain models",
    "start": "702420",
    "end": "709440"
  },
  {
    "text": "and a lot of the times it's the domain models kind of get big and complex and",
    "start": "709440",
    "end": "715500"
  },
  {
    "text": "that causes issues that sometimes people say oh that's a problem with cqrs so no actually it started somewhere else",
    "start": "715500",
    "end": "722040"
  },
  {
    "text": "that was at the Domain model level now the other thing about those domain",
    "start": "722040",
    "end": "727560"
  },
  {
    "text": "models as we made them bigger and bigger and bigger we found out that you know using them",
    "start": "727560",
    "end": "735540"
  },
  {
    "text": "for queries just you know uncomfortable difficult",
    "start": "735540",
    "end": "742380"
  },
  {
    "text": "as we started spreading things around in one to many this and many to many that and we partitioned different entities",
    "start": "742380",
    "end": "748140"
  },
  {
    "text": "into different places it yeah it just strengthens the fact that oh yeah we",
    "start": "748140",
    "end": "753839"
  },
  {
    "text": "should be treating queries differently and that's when that idea came to say",
    "start": "753839",
    "end": "759959"
  },
  {
    "text": "you know what domain models are great you know we like them however what if we did not use the domain model",
    "start": "759959",
    "end": "768720"
  },
  {
    "text": "for everything what if we started to split off for example the queries that you know cqs",
    "start": "768720",
    "end": "775740"
  },
  {
    "text": "thing that we were talking about before and we didn't have that go through the domain model",
    "start": "775740",
    "end": "781019"
  },
  {
    "text": "go through something else and instead of having just one API for",
    "start": "781019",
    "end": "786120"
  },
  {
    "text": "everything which is sort of like you know the Gateway through which all clients talk to and that API is using",
    "start": "786120",
    "end": "792660"
  },
  {
    "text": "the one domain model for everything and that's going and talking to the one database for everything",
    "start": "792660",
    "end": "798240"
  },
  {
    "text": "what if we split that up and essentially created two slightly different apis one",
    "start": "798240",
    "end": "804600"
  },
  {
    "start": "801000",
    "end": "833000"
  },
  {
    "text": "of them for commands one of them for queries they're connected to each other because ultimately they're dealing with",
    "start": "804600",
    "end": "809639"
  },
  {
    "text": "the same data but they are different they serve different purposes but they sort of interlock together in good ways",
    "start": "809639",
    "end": "816740"
  },
  {
    "text": "so essentially at sort of an architectural diagram level not a big",
    "start": "816740",
    "end": "821940"
  },
  {
    "text": "deal it's kind of like okay we used to have one API box now we've got two queries over here commands over there",
    "start": "821940",
    "end": "827940"
  },
  {
    "text": "standard cqrs great right what's not to like",
    "start": "827940",
    "end": "834000"
  },
  {
    "text": "so if we just stopped there as an industry then maybe this talk would be a bit",
    "start": "834000",
    "end": "839220"
  },
  {
    "text": "shorter but like with many things like you know once you have something of a",
    "start": "839220",
    "end": "844620"
  },
  {
    "text": "good thing you try to uh extend it and Abstract it and use it for more things",
    "start": "844620",
    "end": "850160"
  },
  {
    "text": "so beyond the standard cqrs approach we took it one step further and said you",
    "start": "850160",
    "end": "856500"
  },
  {
    "text": "know it's kind of hard to do good queries and good commands and",
    "start": "856500",
    "end": "863760"
  },
  {
    "text": "good Logic on either side of those when both of those are talking to the same database",
    "start": "863760",
    "end": "869639"
  },
  {
    "text": "because the database kind of serves as a constraint what's the database designed for is it designed for the commands is",
    "start": "869639",
    "end": "875160"
  },
  {
    "text": "it designed for the queries how do we optimize that so the idea came along and said well",
    "start": "875160",
    "end": "880260"
  },
  {
    "text": "what if we took this command query separation and not just stop at the API level but go all the way through to the",
    "start": "880260",
    "end": "886740"
  },
  {
    "text": "database level let's give each API its own database and then we'll optimize the",
    "start": "886740",
    "end": "892440"
  },
  {
    "text": "query data model for queries to be able to handle those really quickly and",
    "start": "892440",
    "end": "897660"
  },
  {
    "text": "that's essentially where the whole idea of no SQL started coming along to say",
    "start": "897660",
    "end": "902940"
  },
  {
    "text": "instead of having to join 17 tables in order to answer a query what if we",
    "start": "902940",
    "end": "909300"
  },
  {
    "text": "created documents with a little bit of duplicated data between them but then our queries would be a lot faster and",
    "start": "909300",
    "end": "914820"
  },
  {
    "text": "simpler and then once we had that out of the way well we could simplify the command side as well because we wouldn't",
    "start": "914820",
    "end": "920639"
  },
  {
    "text": "need to have a command database that had to address all sort of really complicated queries",
    "start": "920639",
    "end": "926579"
  },
  {
    "text": "so sounded even better than before of course we need some kind of mechanism to",
    "start": "926579",
    "end": "933240"
  },
  {
    "text": "keep the command database where we're updating all of the data constantly to be in sync with the query database",
    "start": "933240",
    "end": "939959"
  },
  {
    "text": "so uh now I call that to distinguish it from the cqrs that we were talking about before calling this eventually",
    "start": "939959",
    "end": "946500"
  },
  {
    "text": "consistent cqrs because we've got the command API going and talking to its",
    "start": "946500",
    "end": "952199"
  },
  {
    "text": "command database and then we've got the query API going and talking to its own query database",
    "start": "952199",
    "end": "957959"
  },
  {
    "text": "and then we need to have some mechanism and it's usually going to be asynchronous",
    "start": "957959",
    "end": "963779"
  },
  {
    "text": "there's that word again that Sam Newman told you about right say asynchronous",
    "start": "963779",
    "end": "968820"
  },
  {
    "text": "meaning sometime after we update the command database we go and update the",
    "start": "968820",
    "end": "975839"
  },
  {
    "text": "query database and there will be some kind of component that is responsible for doing that here I'm just using a",
    "start": "975839",
    "end": "982560"
  },
  {
    "text": "generic query updater type of term so we're issuing events from our Command API after we have successfully updated",
    "start": "982560",
    "end": "990600"
  },
  {
    "text": "our Command database and then that gets reflected up in the query database so uh",
    "start": "990600",
    "end": "996600"
  },
  {
    "text": "as you know double the database double the fun minions are happy an even better pattern but now when",
    "start": "996600",
    "end": "1003139"
  },
  {
    "start": "997000",
    "end": "1239000"
  },
  {
    "text": "we're talking about cqrs for the rest of this talk I'm going to try to be specific and talk about standard cqrs",
    "start": "1003139",
    "end": "1008899"
  },
  {
    "text": "meaning single database cqrs versus eventually consistent cqrs where we've",
    "start": "1008899",
    "end": "1015139"
  },
  {
    "text": "got multiple databases all right so there are two different styles to those things now at the beginning of this talk",
    "start": "1015139",
    "end": "1021139"
  },
  {
    "text": "I asked you to raise your hand say who's doing cqrs now what I want to do is I want to get a little bit more specific",
    "start": "1021139",
    "end": "1026660"
  },
  {
    "text": "who's doing the standard one database style of cqrs can I get some hands yes",
    "start": "1026660",
    "end": "1032240"
  },
  {
    "text": "okay and who's doing the eventually consistent two database style of it okay",
    "start": "1032240",
    "end": "1037280"
  },
  {
    "text": "so it's about a quarter are doing the eventually consistent style and I've got",
    "start": "1037280",
    "end": "1042740"
  },
  {
    "text": "three quarters that are doing the standard style now great so far",
    "start": "1042740",
    "end": "1049100"
  },
  {
    "text": "things start it's important to recognize that a lot of the patterns that we've got today we didn't invent them they",
    "start": "1049100",
    "end": "1056120"
  },
  {
    "text": "they were around before and there are other ways of doing those",
    "start": "1056120",
    "end": "1061520"
  },
  {
    "text": "as well so my guess is that a bunch of you have heard about this thing called database",
    "start": "1061520",
    "end": "1066919"
  },
  {
    "text": "replication before right it's a fairly old technology pretty much all of the database vendors",
    "start": "1066919",
    "end": "1073820"
  },
  {
    "text": "out there support it both on-prem and in the cloud general idea is that there is",
    "start": "1073820",
    "end": "1078860"
  },
  {
    "text": "some sort of primary node where all of the rights are going to that primary",
    "start": "1078860",
    "end": "1084559"
  },
  {
    "text": "node then replicates those changes to read replicas that essentially have a",
    "start": "1084559",
    "end": "1091039"
  },
  {
    "text": "copy of the data but those replicas are there only for query type of terms so",
    "start": "1091039",
    "end": "1097460"
  },
  {
    "text": "essentially database replication this idea of primary replica replication",
    "start": "1097460",
    "end": "1104480"
  },
  {
    "text": "already has a kind of secure us at play at the database level",
    "start": "1104480",
    "end": "1110840"
  },
  {
    "text": "so in some cases even before you start thinking let's go",
    "start": "1110840",
    "end": "1116360"
  },
  {
    "text": "write a bunch of code maybe look at what the database has to offer and say maybe that solves the problem for me already",
    "start": "1116360",
    "end": "1123020"
  },
  {
    "text": "and I don't have to do any additional separation over the top just as a quick",
    "start": "1123020",
    "end": "1128419"
  },
  {
    "text": "note this replication style is essentially the same data model so it's",
    "start": "1128419",
    "end": "1134480"
  },
  {
    "text": "not like the eventually consistent style where not only did we have two different databases they were actually two",
    "start": "1134480",
    "end": "1141860"
  },
  {
    "text": "different database schema they were structured differently from each other when we're talking about database level",
    "start": "1141860",
    "end": "1147380"
  },
  {
    "text": "replication it's the same schema in all of the places but the data is",
    "start": "1147380",
    "end": "1153320"
  },
  {
    "text": "copied and replicated between them so it's a variant of what we were talking about before logically it's standard",
    "start": "1153320",
    "end": "1160580"
  },
  {
    "text": "cqrs territory from a physical deployment perspective it's a lot more",
    "start": "1160580",
    "end": "1166340"
  },
  {
    "text": "like the eventually consistent cqrs model all right",
    "start": "1166340",
    "end": "1171799"
  },
  {
    "text": "so that's another style pretty much all of the database have have this and it",
    "start": "1171799",
    "end": "1177679"
  },
  {
    "text": "solves a lot of scalability issues it you know never ceases to amaze me essentially since",
    "start": "1177679",
    "end": "1184600"
  },
  {
    "text": "orms took over the world that developers really stopped learning about database",
    "start": "1184600",
    "end": "1192080"
  },
  {
    "text": "capabilities we treat it almost kind of like a dumb file system where they're",
    "start": "1192080",
    "end": "1197360"
  },
  {
    "text": "actually application servers in their own right and they have lots of capabilities it's worth getting to know them other things that they can do",
    "start": "1197360",
    "end": "1203780"
  },
  {
    "text": "include sharding sharding is where the data is actually split apart logically between different",
    "start": "1203780",
    "end": "1210320"
  },
  {
    "text": "database instances and then you know it gives you a scaling out also on your right side as well and",
    "start": "1210320",
    "end": "1218539"
  },
  {
    "text": "not just on the read side anyway you know it could be a whole talk just talking about database",
    "start": "1218539",
    "end": "1223940"
  },
  {
    "text": "functionality and features and replication and sharding and those things it's worth taking some time reading up on it for whatever database",
    "start": "1223940",
    "end": "1230720"
  },
  {
    "text": "technology you're using it will serve you well it's another tool toolbox it's essentially another kind of cqrs that's",
    "start": "1230720",
    "end": "1237020"
  },
  {
    "text": "available to you so how else does cqrs go wrong uh",
    "start": "1237020",
    "end": "1243860"
  },
  {
    "start": "1239000",
    "end": "1518000"
  },
  {
    "text": "essentially by applying it as a best practice so one of the places the most",
    "start": "1243860",
    "end": "1248900"
  },
  {
    "text": "common places is in the context of simple crud when doing create read",
    "start": "1248900",
    "end": "1254059"
  },
  {
    "text": "update delete and we have some fairly simple straightforward data a couple of",
    "start": "1254059",
    "end": "1259220"
  },
  {
    "text": "strings a couple of IDs maybe a date or something like that and you just need to get that from the UI into database and",
    "start": "1259220",
    "end": "1266660"
  },
  {
    "text": "back out again all right so create read update delete I mean you could do like",
    "start": "1266660",
    "end": "1272179"
  },
  {
    "text": "the standard cqrs type of thing and put the query off on the one side and then the commands on the other side but it's",
    "start": "1272179",
    "end": "1279020"
  },
  {
    "text": "kind of unnecessary but sometimes people because they're like well we're using cqrs for everything else we'll also use",
    "start": "1279020",
    "end": "1285919"
  },
  {
    "text": "it for the simple stuff so it's not terrible but it sort of compounds up and",
    "start": "1285919",
    "end": "1292640"
  },
  {
    "text": "makes things just more complex over time you know every once in a while we complain about having big balls of mud",
    "start": "1292640",
    "end": "1300140"
  },
  {
    "text": "but you know every single time we take something simple and make it more complex we don't realize that's how the",
    "start": "1300140",
    "end": "1308179"
  },
  {
    "text": "big ball of mud came into being it's just you know one extra line of code at",
    "start": "1308179",
    "end": "1313460"
  },
  {
    "text": "a time so if you have this type of relatively simple straightforward crud type of",
    "start": "1313460",
    "end": "1319340"
  },
  {
    "text": "solution there's this great technology out there you might have heard about it called Ruby on Rails two-tier",
    "start": "1319340",
    "end": "1326120"
  },
  {
    "text": "active record style there's no actual domain model over there rails was",
    "start": "1326120",
    "end": "1331400"
  },
  {
    "text": "created to be the fastest most developer friendly way to do forms over data so",
    "start": "1331400",
    "end": "1336980"
  },
  {
    "text": "for those of you that are purely on the Microsoft platform think Ms access all right Microsoft Access was a great",
    "start": "1336980",
    "end": "1344600"
  },
  {
    "text": "database very simple fast way to go and build a UI that had data be persisted",
    "start": "1344600",
    "end": "1350900"
  },
  {
    "text": "and shown back again if that's all that you need then absolutely use that",
    "start": "1350900",
    "end": "1357440"
  },
  {
    "text": "now when you get into sort of the crud territory and for those of you that are",
    "start": "1357440",
    "end": "1364220"
  },
  {
    "text": "saying we're not going to do standard cqrs we're going to do eventually consistent cqrs that's where things",
    "start": "1364220",
    "end": "1371419"
  },
  {
    "text": "actually start going quite badly the problem being that as a user when I",
    "start": "1371419",
    "end": "1378260"
  },
  {
    "text": "go insert a record into a database I expect when I click to the query",
    "start": "1378260",
    "end": "1384500"
  },
  {
    "text": "screen that that record will be there right it's kind of an obvious expectation when you say it that way",
    "start": "1384500",
    "end": "1391039"
  },
  {
    "text": "right however because the query updater might be working asynchronously the data",
    "start": "1391039",
    "end": "1399620"
  },
  {
    "text": "might not appear in the query database just then and then",
    "start": "1399620",
    "end": "1404720"
  },
  {
    "text": "the user looks as you know it's kind of pressing F5 F5 my data is not there",
    "start": "1404720",
    "end": "1410240"
  },
  {
    "text": "what does the user do in that case they go and insert the data again",
    "start": "1410240",
    "end": "1416600"
  },
  {
    "text": "do you think the system lost it then they type it in again and then they click submit",
    "start": "1416600",
    "end": "1422840"
  },
  {
    "text": "and then they go back to the query screen press refresh and like oh yes now it's there everything's great",
    "start": "1422840",
    "end": "1429200"
  },
  {
    "text": "five minutes later 10 minutes later they're doing some other work they come back to the query screen what do they see",
    "start": "1429200",
    "end": "1435500"
  },
  {
    "text": "two entries right same stupid system how did it duplicate my data why did it",
    "start": "1435500",
    "end": "1442520"
  },
  {
    "text": "duplicate my data of course the user duplicated the data but we as Engineers created an",
    "start": "1442520",
    "end": "1449000"
  },
  {
    "text": "environment where users would do that and then that starts to create data",
    "start": "1449000",
    "end": "1454700"
  },
  {
    "text": "quality issues of saying well now you've got two IDs that might the user might be connecting",
    "start": "1454700",
    "end": "1460220"
  },
  {
    "text": "different things to those different identifiers and then just sort of bad things start",
    "start": "1460220",
    "end": "1465860"
  },
  {
    "text": "to accumulate you know kind of goes from bad to worse towards the longer those duplicates",
    "start": "1465860",
    "end": "1471620"
  },
  {
    "text": "stick around there so I don't want to say that eventual consistency eventually consistent cqrs",
    "start": "1471620",
    "end": "1477620"
  },
  {
    "text": "is all bad but in the context of single user type of crud",
    "start": "1477620",
    "end": "1483559"
  },
  {
    "text": "that is where there's a lot of these types of issues we don't tend to catch them when we're building and debugging",
    "start": "1483559",
    "end": "1489799"
  },
  {
    "text": "the system right because when we're working on it we're you know pressing F5 debugging everything is running live we",
    "start": "1489799",
    "end": "1497480"
  },
  {
    "text": "type something in the system has zero load there is no lag between the right",
    "start": "1497480",
    "end": "1504020"
  },
  {
    "text": "side and the read side so we always see that the queries are fresh",
    "start": "1504020",
    "end": "1509299"
  },
  {
    "text": "but when the system is under the most load that's when becomes the most delayed and that's when the users really",
    "start": "1509299",
    "end": "1515059"
  },
  {
    "text": "don't like it so in your case imagine when you're a user you go add something to your shopping basket in Amazon and",
    "start": "1515059",
    "end": "1522860"
  },
  {
    "start": "1518000",
    "end": "1882000"
  },
  {
    "text": "you're like oh okay great let's go check out and then you go to checkout and on the checkout screen your basket is empty",
    "start": "1522860",
    "end": "1529940"
  },
  {
    "text": "it's kind of like that that's not supposed to happen that way now again these types of problems only",
    "start": "1529940",
    "end": "1536779"
  },
  {
    "text": "manifest once the system is under load so again the the whole eventually",
    "start": "1536779",
    "end": "1542720"
  },
  {
    "text": "consistent cqrs has its place but be aware of the fact that Dynamic of what",
    "start": "1542720",
    "end": "1548480"
  },
  {
    "text": "it's going to look like with the single user reading their own rights now",
    "start": "1548480",
    "end": "1554000"
  },
  {
    "text": "this leads us to our next pattern or our next context for cqrs and that's the",
    "start": "1554000",
    "end": "1560600"
  },
  {
    "text": "difference between private data and public data",
    "start": "1560600",
    "end": "1566140"
  },
  {
    "text": "now most of the time as developers we just look at data as data we got data in a",
    "start": "1566900",
    "end": "1573980"
  },
  {
    "text": "database and users you know save it update it you know connect it to other things",
    "start": "1573980",
    "end": "1579440"
  },
  {
    "text": "but we don't always think of it enough sort of from the business perspective",
    "start": "1579440",
    "end": "1584960"
  },
  {
    "text": "and it's helpful to to use this Framing and also to understand how users think",
    "start": "1584960",
    "end": "1590720"
  },
  {
    "text": "about the data in the system a lot of times especially some of the older users",
    "start": "1590720",
    "end": "1595820"
  },
  {
    "text": "we've been trained to save data so that it doesn't get lost right some of us we kind of already have",
    "start": "1595820",
    "end": "1603320"
  },
  {
    "text": "that control s habit you know doing some work control s doing some more work",
    "start": "1603320",
    "end": "1608779"
  },
  {
    "text": "control less why just in case right because we've had a problem we've",
    "start": "1608779",
    "end": "1615620"
  },
  {
    "text": "lost hours and hours of work so when we save data the context is I don't want to",
    "start": "1615620",
    "end": "1623059"
  },
  {
    "text": "lose this the context is not please tell everybody about this change that I made right now",
    "start": "1623059",
    "end": "1632679"
  },
  {
    "text": "right now the way that we often Design Systems there is no difference once the",
    "start": "1633799",
    "end": "1639740"
  },
  {
    "text": "user clicks save it's in the database table other users who query that table can now see that",
    "start": "1639740",
    "end": "1647059"
  },
  {
    "text": "data and they can start doing stuff with it so as a first step in terms of applying",
    "start": "1647059",
    "end": "1655279"
  },
  {
    "text": "this idea of private versus public data try to introduce that distinguishing",
    "start": "1655279",
    "end": "1663500"
  },
  {
    "text": "characteristic already in the UI think of your system as having like a Content",
    "start": "1663500",
    "end": "1668900"
  },
  {
    "text": "management system element to it so for those of you that have blogged or",
    "start": "1668900",
    "end": "1674659"
  },
  {
    "text": "that you know Facebook or Twitter or whatever we've got a publish step where",
    "start": "1674659",
    "end": "1680600"
  },
  {
    "text": "it's explicitly published this to the whole internet versus save as draft so for those using",
    "start": "1680600",
    "end": "1689059"
  },
  {
    "text": "GitHub as well there's save as a draft right you got your own little workspace we're used to having that now as users",
    "start": "1689059",
    "end": "1696799"
  },
  {
    "text": "when we Design Systems that's also something that we should be introducing for them so we've got the private data",
    "start": "1696799",
    "end": "1704299"
  },
  {
    "text": "you can save that think of that as saving that as a draft and then at some",
    "start": "1704299",
    "end": "1709700"
  },
  {
    "text": "point the user can click the publish button and then we'll say are you sure this is",
    "start": "1709700",
    "end": "1715159"
  },
  {
    "text": "going to make the data public and all the other users can use it it will appear on the such and such page the",
    "start": "1715159",
    "end": "1720440"
  },
  {
    "text": "user says okay great now the data goes into the public domain essentially we",
    "start": "1720440",
    "end": "1727220"
  },
  {
    "text": "can look at cqrs command query responsibility segregation and apply",
    "start": "1727220",
    "end": "1733340"
  },
  {
    "text": "that same kind of idea to private versus public data that we've got a private",
    "start": "1733340",
    "end": "1740299"
  },
  {
    "text": "data type of API that is appropriate for crud type of work that could be very",
    "start": "1740299",
    "end": "1747380"
  },
  {
    "text": "simple straightforward Ruby on Rails type of thing that is talking to a database versus the public API which is",
    "start": "1747380",
    "end": "1756200"
  },
  {
    "text": "showing data that has already been designated to be public essentially inside of our database we've got some",
    "start": "1756200",
    "end": "1764419"
  },
  {
    "text": "flag that is the is public flag to indicate should this be made",
    "start": "1764419",
    "end": "1770779"
  },
  {
    "text": "public to other people or not so essentially it looks pretty much the",
    "start": "1770779",
    "end": "1777500"
  },
  {
    "text": "same as standard cqrs it's just has a different semantic instead of dividing",
    "start": "1777500",
    "end": "1783700"
  },
  {
    "text": "commands versus queries we're dividing private data versus public data now we",
    "start": "1783700",
    "end": "1790760"
  },
  {
    "text": "can take the whole cqrs thing the eventually consistent style and also",
    "start": "1790760",
    "end": "1796159"
  },
  {
    "text": "apply that in the context of private and public data where we could say there is",
    "start": "1796159",
    "end": "1802779"
  },
  {
    "text": "private data and we're going to put that in the private data database because we're kind of afraid that some developer",
    "start": "1802779",
    "end": "1810620"
  },
  {
    "text": "will make some mistake not set the flag or the flag will get changed by accident so we create some deeper separation",
    "start": "1810620",
    "end": "1818299"
  },
  {
    "text": "between the private data and the public data and then when the user clicks the explicit I would like to publish this",
    "start": "1818299",
    "end": "1824600"
  },
  {
    "text": "then we publish an event and we carry that data over explicitly to the public",
    "start": "1824600",
    "end": "1830679"
  },
  {
    "text": "data database so essentially it looks pretty much just",
    "start": "1830679",
    "end": "1835940"
  },
  {
    "text": "like the eventually consistent cqrs Story the difference is really more the",
    "start": "1835940",
    "end": "1841520"
  },
  {
    "text": "semantics what we're using it for now when doing this",
    "start": "1841520",
    "end": "1848240"
  },
  {
    "text": "this gives us a whole bunch of benefits on the user side it solves the problem of essentially",
    "start": "1848240",
    "end": "1856039"
  },
  {
    "text": "using cqrs where we don't need it so in the case of private data where again",
    "start": "1856039",
    "end": "1862340"
  },
  {
    "text": "we're just doing Simple crud we don't need additional cqrs there and on the",
    "start": "1862340",
    "end": "1868760"
  },
  {
    "text": "public side well we're going to get more into what how to actually design the public side because there's a lot more",
    "start": "1868760",
    "end": "1875000"
  },
  {
    "text": "tricky things down in there but before I do that I want to come back to one of",
    "start": "1875000",
    "end": "1881059"
  },
  {
    "text": "the problems of the eventually consistent cqrs style so for those of",
    "start": "1881059",
    "end": "1887360"
  },
  {
    "start": "1882000",
    "end": "2054000"
  },
  {
    "text": "you that aren't using that that's fine just be aware kind of smile to yourself with your precious of knowing not to use",
    "start": "1887360",
    "end": "1894799"
  },
  {
    "text": "this style for those of you that are using it hopefully this will make you aware of it and able to solve those",
    "start": "1894799",
    "end": "1900860"
  },
  {
    "text": "problems so one of the advantages that we mentioned before of the eventually",
    "start": "1900860",
    "end": "1905899"
  },
  {
    "text": "consistent cqrs style is that we can have optimized data models the right",
    "start": "1905899",
    "end": "1911120"
  },
  {
    "text": "side is optimized for doing rights very quickly the query side is optimized for doing queries very quickly and then",
    "start": "1911120",
    "end": "1917840"
  },
  {
    "text": "we've got this query updater that is keeping them in sync where's the problem well it only hits when your system is",
    "start": "1917840",
    "end": "1925460"
  },
  {
    "text": "under very high load so when your system is under average",
    "start": "1925460",
    "end": "1930740"
  },
  {
    "text": "load that query updater component is able to keep up it's getting these",
    "start": "1930740",
    "end": "1936140"
  },
  {
    "text": "events saying this changed I'm going to go update the query database I get another event I'm going to go update the",
    "start": "1936140",
    "end": "1941240"
  },
  {
    "text": "query database now remember that the rate at which this",
    "start": "1941240",
    "end": "1946760"
  },
  {
    "text": "needs to happen is essentially the rate at which commands are coming into the",
    "start": "1946760",
    "end": "1953240"
  },
  {
    "text": "command side so if you've got a thousand commands a second that means that we need to be",
    "start": "1953240",
    "end": "1958820"
  },
  {
    "text": "processing a thousand events per second in our query updater component now",
    "start": "1958820",
    "end": "1964640"
  },
  {
    "text": "remember the command side is optimized for processing commands quickly it's",
    "start": "1964640",
    "end": "1970340"
  },
  {
    "text": "optimized for doing those updates so it can do that a thousand times a second two thousand times a second",
    "start": "1970340",
    "end": "1976340"
  },
  {
    "text": "the query database was never optimized for updating",
    "start": "1976340",
    "end": "1981860"
  },
  {
    "text": "we designed it so it'd be really good to read from it knowing that we're making a trade-off that it will be harder to",
    "start": "1981860",
    "end": "1988880"
  },
  {
    "text": "update it essentially it requires more processing power to update the query",
    "start": "1988880",
    "end": "1995720"
  },
  {
    "text": "side then the command side but we need to update it at the same rate on average",
    "start": "1995720",
    "end": "2002019"
  },
  {
    "text": "it can sort of peak in flow and whatever but if the rate starts to get too high then",
    "start": "2002019",
    "end": "2010120"
  },
  {
    "text": "the query side can start falling farther and farther and farther behind",
    "start": "2010120",
    "end": "2015640"
  },
  {
    "text": "and that's where we usually get into trouble users start looking at the system and saying well I'm looking at",
    "start": "2015640",
    "end": "2021159"
  },
  {
    "text": "the query screen but it's showing me data from 20 minutes ago it essentially becomes unusable",
    "start": "2021159",
    "end": "2028360"
  },
  {
    "text": "and this is a common problem with systems and also for us as developers is that we Design Systems we use patterns",
    "start": "2028360",
    "end": "2036340"
  },
  {
    "text": "in order to make them scale but when they are under scale they start failing",
    "start": "2036340",
    "end": "2041380"
  },
  {
    "text": "in these sorts of weird ways and then we're not exactly sure what to do and that's usually the worst time so",
    "start": "2041380",
    "end": "2047559"
  },
  {
    "text": "we'll talk more about that uh in a little bit but I just want to connect the dots with some other talk that you",
    "start": "2047559",
    "end": "2052898"
  },
  {
    "text": "might have seen Jeremy Miller gave the talk about the vertical slice architecture who saw Jeremy's talk yes",
    "start": "2052899",
    "end": "2058480"
  },
  {
    "start": "2054000",
    "end": "2269000"
  },
  {
    "text": "vertical slice architecture oh not that many of you more of you should vertical slice architecture if you haven't heard",
    "start": "2058480",
    "end": "2065260"
  },
  {
    "text": "about it read about it please go take a look at it essentially it's you know this cqrs thing or the private public",
    "start": "2065260",
    "end": "2072398"
  },
  {
    "text": "responsibility segregation is a kind of vertical slice architecture where you've got a certain slice that goes from top",
    "start": "2072399",
    "end": "2078940"
  },
  {
    "text": "to bottom you can think of it oh that's kind of layered or that's kind of layered over there oh we even have a",
    "start": "2078940",
    "end": "2085118"
  },
  {
    "text": "little bit event driven architecture down the middle of that so we can have a bit of both in those things but you know",
    "start": "2085119",
    "end": "2092618"
  },
  {
    "text": "that's the vertical slice architecture if you haven't seen it go look into it we'll touch on it also a little bit more later let's delve deeper into the public",
    "start": "2092619",
    "end": "2100420"
  },
  {
    "text": "side of things once the data is public how do we handle it so the important",
    "start": "2100420",
    "end": "2106300"
  },
  {
    "text": "thing to realize is once that data is public multiple users can start using and operating on that data in parallel",
    "start": "2106300",
    "end": "2112839"
  },
  {
    "text": "which is why as we mentioned before it's important to make That explicit so that users know now it's public and lots of",
    "start": "2112839",
    "end": "2119320"
  },
  {
    "text": "other things can happen now in some cases there are some systems that are designed with this intentionally so it's",
    "start": "2119320",
    "end": "2126339"
  },
  {
    "text": "like okay we're going to build a collaborative type of experience this could be a mirror board if you're",
    "start": "2126339",
    "end": "2131560"
  },
  {
    "text": "familiar with that or Google Docs or all those types of places where it's designed inherently around collaboration",
    "start": "2131560",
    "end": "2138820"
  },
  {
    "text": "and that's great when there are those kinds of systems but the more common case around public data is that it's",
    "start": "2138820",
    "end": "2145599"
  },
  {
    "text": "kind of more of an accidental bumping into each other oops sorry I didn't",
    "start": "2145599",
    "end": "2150640"
  },
  {
    "text": "realize you were working on that data while I was working on it now sometimes",
    "start": "2150640",
    "end": "2156339"
  },
  {
    "text": "like for those of you I don't know if you've used Dropbox or some other type of collaboration technique then it'll",
    "start": "2156339",
    "end": "2161859"
  },
  {
    "text": "put up this little badge say oh there's another user that's working on this document as the same time as you are",
    "start": "2161859",
    "end": "2166900"
  },
  {
    "text": "when we're talking about our systems if there are other users that are fiddling with data it's more rare that we",
    "start": "2166900",
    "end": "2172540"
  },
  {
    "text": "actually make that visible to our users so users don't even realize when they're",
    "start": "2172540",
    "end": "2177579"
  },
  {
    "text": "stepping on each other's toes now this is probably sounding a little bit",
    "start": "2177579",
    "end": "2182980"
  },
  {
    "text": "of abstract so let's start making this a little bit clearer and more down to earth so here's how it plays out we got",
    "start": "2182980",
    "end": "2189640"
  },
  {
    "text": "one user looking at a piece of data other user for whatever reason goes and",
    "start": "2189640",
    "end": "2195520"
  },
  {
    "text": "looks at the same data at the same time none of the users realize that any of this is happening one of them goes and",
    "start": "2195520",
    "end": "2201040"
  },
  {
    "text": "changes the data that they're looking at it succeeds the other user comes along and goes to change the data as well the",
    "start": "2201040",
    "end": "2208540"
  },
  {
    "text": "thing is that the data that they're looking at on their screen before they make the change is essentially stale",
    "start": "2208540",
    "end": "2214420"
  },
  {
    "text": "right they don't know what actually happened that was done by the other user",
    "start": "2214420",
    "end": "2220540"
  },
  {
    "text": "now some of you might have put in some you know Azure web Pub sub signalr thing",
    "start": "2220540",
    "end": "2227680"
  },
  {
    "text": "such that anytime any change happens all of the users that are looking at it have",
    "start": "2227680",
    "end": "2232839"
  },
  {
    "text": "it updated automatically and that's lots of fun to build those types of things until you're a user and then you're on a",
    "start": "2232839",
    "end": "2240700"
  },
  {
    "text": "screen and it's a oh this data has changed you're like okay refresh and it's like yeah okay that's",
    "start": "2240700",
    "end": "2248200"
  },
  {
    "text": "irrelevant to the thing that I'm trying to do so you're going to continue to do",
    "start": "2248200",
    "end": "2253420"
  },
  {
    "text": "some more work and you get another notification up data's changed again and at some point you just start to",
    "start": "2253420",
    "end": "2259599"
  },
  {
    "text": "disregard it and then you go make the changes anyway and then again you're stepping on other people's toes now in",
    "start": "2259599",
    "end": "2265960"
  },
  {
    "text": "the technical terminology we call this stepping on each other's toes race",
    "start": "2265960",
    "end": "2271359"
  },
  {
    "start": "2269000",
    "end": "2371000"
  },
  {
    "text": "conditions for those people who are race car drivers when they step on each other's",
    "start": "2271359",
    "end": "2276700"
  },
  {
    "text": "toes it can really be quite tragic this is not just a race condition this",
    "start": "2276700",
    "end": "2283060"
  },
  {
    "text": "is the car flies into the air and bursts into a thousand pieces and we hope that the driver is okay so technically when",
    "start": "2283060",
    "end": "2290680"
  },
  {
    "text": "we're talking about race conditions users stepping on each other toes think about the data in your database",
    "start": "2290680",
    "end": "2297579"
  },
  {
    "text": "flying up and fragmenting into a thousand little pieces okay you should be worried at that level of worry about",
    "start": "2297579",
    "end": "2305020"
  },
  {
    "text": "race conditions when you're talking about public data because it's public because there are lots of users that",
    "start": "2305020",
    "end": "2310780"
  },
  {
    "text": "could be operating on it at the same time now most developers blissfully ignorant",
    "start": "2310780",
    "end": "2316359"
  },
  {
    "text": "of this right it's a I just write the code unit test pass I check it in next",
    "start": "2316359",
    "end": "2323020"
  },
  {
    "text": "day I come to the morning stand up so I finished my ticket all done today I'm",
    "start": "2323020",
    "end": "2328359"
  },
  {
    "text": "working on another ticket you aren't going to need it right none",
    "start": "2328359",
    "end": "2333579"
  },
  {
    "text": "of that big architecture up front we're agile here delivering features to the client the way that they like it",
    "start": "2333579",
    "end": "2340240"
  },
  {
    "text": "you know I'm not going to have an agile talk but I gotta tell there there's a certain amount of uh willful ignorance",
    "start": "2340240",
    "end": "2347800"
  },
  {
    "text": "on these other concerns that well you know we don't have a ticket for it management doesn't allow us to work on",
    "start": "2347800",
    "end": "2354880"
  },
  {
    "text": "things that don't exist in the ticket repository so you know it's not our fault",
    "start": "2354880",
    "end": "2360400"
  },
  {
    "text": "anyway let's go take a concrete example of how this happens how this plays out",
    "start": "2360400",
    "end": "2366300"
  },
  {
    "text": "in a very simple small set of public data",
    "start": "2366300",
    "end": "2371700"
  },
  {
    "text": "inventory so let's say we have you know the e-commerce type of domain that's been",
    "start": "2371740",
    "end": "2378280"
  },
  {
    "text": "done to death I know I'm sorry where we've got some new products that's come out the next Harry Potter book and of",
    "start": "2378280",
    "end": "2385599"
  },
  {
    "text": "course all of the Harry Potter people are just kind of losing their minds oh my God I got to buy this thing right away right now the developers that",
    "start": "2385599",
    "end": "2394000"
  },
  {
    "text": "designed this said right we're going to have an inventory table I'm including the name here just for context we don't",
    "start": "2394000",
    "end": "2399040"
  },
  {
    "text": "actually need the name of the book in there and we've got a row for every single item with a quantity column in",
    "start": "2399040",
    "end": "2404920"
  },
  {
    "text": "there that says how many of that book do we have in our warehouse simple right and when a user goes and buys a book",
    "start": "2404920",
    "end": "2411820"
  },
  {
    "text": "what do we do well we need to go and update the inventory table how do we do that well even before we get into object",
    "start": "2411820",
    "end": "2419500"
  },
  {
    "text": "relational mappers or any of that fancy stuff we've got SQL",
    "start": "2419500",
    "end": "2425560"
  },
  {
    "text": "so ultimately what ends up going to the database orm or not is SQL a kind of",
    "start": "2425560",
    "end": "2430900"
  },
  {
    "text": "transaction where first step is well we kind of need to see how much quantity of",
    "start": "2430900",
    "end": "2436060"
  },
  {
    "text": "the thing is currently in the database so we do a select from the inventory table for that",
    "start": "2436060",
    "end": "2442839"
  },
  {
    "text": "product ID and then I said oh okay there's a thousand items for that ID we go and",
    "start": "2442839",
    "end": "2448900"
  },
  {
    "text": "then check that there is actually sufficient quantity in there could be that this person ordered wanted to order",
    "start": "2448900",
    "end": "2454540"
  },
  {
    "text": "ten thousand Harry Potter books don't know why I wanted to wallpaper their",
    "start": "2454540",
    "end": "2460000"
  },
  {
    "text": "house with Harry Potter type of books so they check do we check in our",
    "start": "2460000",
    "end": "2465400"
  },
  {
    "text": "transaction to see that we've got enough and if we do which we probably should then we go and update the inventory",
    "start": "2465400",
    "end": "2471040"
  },
  {
    "text": "table setting the quantity to be the a minus B right what we had before minus what the person ordered for that product",
    "start": "2471040",
    "end": "2478000"
  },
  {
    "text": "ID and then we commit the transaction very simple two-step process query and",
    "start": "2478000",
    "end": "2484180"
  },
  {
    "text": "then update at the database level no eventual consistency right this is in the database think that I've got a",
    "start": "2484180",
    "end": "2490660"
  },
  {
    "text": "stored procedure even all right just to keep things simple now",
    "start": "2490660",
    "end": "2496559"
  },
  {
    "text": "works fine great ship it move on what happens when multiple people",
    "start": "2497079",
    "end": "2504160"
  },
  {
    "text": "go and order the same book at the same time and this tends to happen when",
    "start": "2504160",
    "end": "2509440"
  },
  {
    "text": "there's a very popular new book that comes out all right so let's say you know we got about 200 of you over here",
    "start": "2509440",
    "end": "2516280"
  },
  {
    "text": "all right all 200 of you are going to my database on a database and issuing",
    "start": "2516280",
    "end": "2523060"
  },
  {
    "text": "that SQL statement that set of SQL statements now as a database",
    "start": "2523060",
    "end": "2529000"
  },
  {
    "text": "I'm really smart I try to paralyze things so all 200 of you come to me and say",
    "start": "2529000",
    "end": "2534760"
  },
  {
    "text": "Udi what's the quantity of the Harry Potter book and I respond to all of you saying a thousand",
    "start": "2534760",
    "end": "2542140"
  },
  {
    "text": "and you're like awesome great I'd like to buy one book please update the inventory table set",
    "start": "2542140",
    "end": "2549579"
  },
  {
    "text": "the quantity of the Harry Potter book to 999. so I get that command from you and I",
    "start": "2549579",
    "end": "2555700"
  },
  {
    "text": "update the record to say 999 and I get the next statement from you and I update it too",
    "start": "2555700",
    "end": "2560980"
  },
  {
    "text": "999. because the queries happen at the same",
    "start": "2560980",
    "end": "2566320"
  },
  {
    "text": "time the commands are now coming in at the same time and every single one of you issues",
    "start": "2566320",
    "end": "2572380"
  },
  {
    "text": "exactly the same update Command right so I got 200 people that are buying books a",
    "start": "2572380",
    "end": "2579460"
  },
  {
    "text": "thousand as the original value and after all 200 SQL statements have completed",
    "start": "2579460",
    "end": "2586119"
  },
  {
    "text": "the end result is I've got 999 items in",
    "start": "2586119",
    "end": "2591700"
  },
  {
    "text": "my inventory table However unfortunately the folks in the warehouse are kind of",
    "start": "2591700",
    "end": "2596920"
  },
  {
    "text": "looking around saying uh no it's not that that many it's uh we we actually ran out of",
    "start": "2596920",
    "end": "2604000"
  },
  {
    "start": "2597000",
    "end": "2746000"
  },
  {
    "text": "inventory you thought you had a thousand but that was because the last time 200 people came along you only decremented",
    "start": "2604000",
    "end": "2611680"
  },
  {
    "text": "it by one and then the time before that that 500 people came along and bought Harry",
    "start": "2611680",
    "end": "2616720"
  },
  {
    "text": "Potter you also decremented if I want we're all out now of course you won't find out about",
    "start": "2616720",
    "end": "2623680"
  },
  {
    "text": "this in testing because it's rare that we actually try to do this parallelized",
    "start": "2623680",
    "end": "2629079"
  },
  {
    "text": "testing to validate correctness now why does this happen it's this thing",
    "start": "2629079",
    "end": "2635260"
  },
  {
    "text": "called optimistic concurrency that databases do by default unless you tell",
    "start": "2635260",
    "end": "2641079"
  },
  {
    "text": "them not to so essentially databases say I'm going to try to be you know a good",
    "start": "2641079",
    "end": "2647280"
  },
  {
    "text": "uh member of your architecture and not block all of the transactions because",
    "start": "2647280",
    "end": "2653980"
  },
  {
    "text": "you know some of you might be buying Harry Potter book one some of you might be buying you know 50 Shades of Gray",
    "start": "2653980",
    "end": "2659680"
  },
  {
    "text": "somebody else is buying patterns of Enterprise application architecture for some reason so we don't want to block all of those",
    "start": "2659680",
    "end": "2665800"
  },
  {
    "text": "transactions those can and should run in parallel but at the level of a single record that's where we don't actually",
    "start": "2665800",
    "end": "2671200"
  },
  {
    "text": "want the optimistic concurrency so even though optimism is a great personal quality you know it's nice to have",
    "start": "2671200",
    "end": "2677980"
  },
  {
    "text": "optimistic people around us in life optimistic concurrency not such a great choice for public data especially not",
    "start": "2677980",
    "end": "2685240"
  },
  {
    "text": "popular public data so again you know whether it's your marketing department",
    "start": "2685240",
    "end": "2691119"
  },
  {
    "text": "is running some campaign and saying hey everybody we've discounted a very",
    "start": "2691119",
    "end": "2696339"
  },
  {
    "text": "popular item by 50 come and buy it or you know you know somehow we got",
    "start": "2696339",
    "end": "2701619"
  },
  {
    "text": "featured on Oprah and now all of the world is going and buying our stuff",
    "start": "2701619",
    "end": "2706780"
  },
  {
    "text": "so be aware of this type of thing optimistic concurrency can actually end up creating an eventual inconsistency",
    "start": "2706780",
    "end": "2713740"
  },
  {
    "text": "for your system now as developers we're like hey no big deal just switch it add",
    "start": "2713740",
    "end": "2718900"
  },
  {
    "text": "some locking no problem right optimistic concurrency bad fine we'll do best domestic concurrency",
    "start": "2718900",
    "end": "2725980"
  },
  {
    "text": "so what happens when we've got pessimistic concurrency well for the most part under",
    "start": "2725980",
    "end": "2732940"
  },
  {
    "text": "regular conditions it's you know the data is now more correct however on Black Friday the busiest day",
    "start": "2732940",
    "end": "2740980"
  },
  {
    "text": "of the year where we make 80 percent of our profit",
    "start": "2740980",
    "end": "2745740"
  },
  {
    "start": "2746000",
    "end": "2943000"
  },
  {
    "text": "this is what happens and the stories you know just happen",
    "start": "2746560",
    "end": "2751599"
  },
  {
    "text": "almost every year every Black Friday some major retailer has a major outage",
    "start": "2751599",
    "end": "2757180"
  },
  {
    "text": "of their site and you hear it on the news say oh they're trying to get the site back up",
    "start": "2757180",
    "end": "2762760"
  },
  {
    "text": "as technical people are like you do realize it's pushing a button",
    "start": "2762760",
    "end": "2767920"
  },
  {
    "text": "right you don't actually need to go to the data center and pick up a rack of",
    "start": "2767920",
    "end": "2773440"
  },
  {
    "text": "metal to get it back online right what's so hard about getting this thing back",
    "start": "2773440",
    "end": "2780400"
  },
  {
    "text": "online well part of it has to do with the technical dynamics of what happens at a database level when you introduce",
    "start": "2780400",
    "end": "2786700"
  },
  {
    "text": "the pessimistic concurrency the culprit is this thing called The Connection pool the connection pool dries up",
    "start": "2786700",
    "end": "2794079"
  },
  {
    "text": "why does that happen well so we've got this inventory table and we've got all",
    "start": "2794079",
    "end": "2801040"
  },
  {
    "text": "of you users that are coming along and wanting to buy books each of you opens up a connection to the database and I'm",
    "start": "2801040",
    "end": "2807760"
  },
  {
    "text": "like hello welcome yes here's a connection here's a connection here's a connection everybody gets a connection under the premise that you",
    "start": "2807760",
    "end": "2815800"
  },
  {
    "text": "all will be very good citizens and complete your transactions quickly but what happens when all of you want to",
    "start": "2815800",
    "end": "2822760"
  },
  {
    "text": "go and buy Harry Potter well you come in and you go buy a Harry Potter first I'm like oh okay yes welcome come in I'm",
    "start": "2822760",
    "end": "2827980"
  },
  {
    "text": "going to lock that record for you at the same time you're like I'd like to buy Harry Potter I'm like oh no sorry pessimistic concurrency please wait",
    "start": "2827980",
    "end": "2835119"
  },
  {
    "text": "while you're waiting to say hey how can I what can I do for you like I want Harry Potter I'm like oh what's up get in line after him please wait what about",
    "start": "2835119",
    "end": "2841599"
  },
  {
    "text": "you hey Harry Potter back the line please wait and I go through all of you",
    "start": "2841599",
    "end": "2847060"
  },
  {
    "text": "and what's happening essentially the connections are left",
    "start": "2847060",
    "end": "2852880"
  },
  {
    "text": "open but they're not doing anything right the queue is building up and",
    "start": "2852880",
    "end": "2859359"
  },
  {
    "text": "essentially I'm processing them one at a time now things get really bad when I ask you",
    "start": "2859359",
    "end": "2867940"
  },
  {
    "text": "and I say what would you like and say I'd like patterns of Enterprise application architecture but it's like oh wonderful thank God",
    "start": "2867940",
    "end": "2874180"
  },
  {
    "text": "said okay I'm going to lock that record and end Harry Potter God damn it",
    "start": "2874180",
    "end": "2880660"
  },
  {
    "text": "well your transaction can't complete now you're gonna have to wait what would you like domain driven design",
    "start": "2880660",
    "end": "2887260"
  },
  {
    "text": "oh yes God thank you wonderful yes okay lock that one for you and Harry Potter",
    "start": "2887260",
    "end": "2893380"
  },
  {
    "text": "okay another transaction that's waiting but now patterns of Enterprise application architecture is now locked",
    "start": "2893380",
    "end": "2900819"
  },
  {
    "text": "waiting on the Queue of Harry Potter and domain driven design is locked",
    "start": "2900819",
    "end": "2906520"
  },
  {
    "text": "waiting on the queue for Harry Potter and all the other users that wanted to do something eventually they come to the",
    "start": "2906520",
    "end": "2912400"
  },
  {
    "text": "day say hi database can I have a connection I'm like I'm I'm flat out",
    "start": "2912400",
    "end": "2917980"
  },
  {
    "text": "just you know all these people they're just here for Harry Potter I can't get rid of them fast enough",
    "start": "2917980",
    "end": "2924520"
  },
  {
    "text": "and essentially at that point saying the site is down that means the site is unable to get",
    "start": "2924520",
    "end": "2931359"
  },
  {
    "text": "connections to the database and the reason is we've got all of these locks in there that are piling up holding up",
    "start": "2931359",
    "end": "2938380"
  },
  {
    "text": "the transactions so a when designing a system you really",
    "start": "2938380",
    "end": "2945339"
  },
  {
    "text": "should test for these scenarios like when these problems occur this is like",
    "start": "2945339",
    "end": "2950800"
  },
  {
    "text": "the worst case scenario all hands on deck please you know technical people somehow please fix this",
    "start": "2950800",
    "end": "2958359"
  },
  {
    "text": "and there isn't anything it's like we can't substantially change the code and the",
    "start": "2958359",
    "end": "2964720"
  },
  {
    "text": "data model in the middle of Black Friday so it's like oh I don't try to put the",
    "start": "2964720",
    "end": "2971859"
  },
  {
    "text": "database on a bigger server it's like oh okay great now instead of supporting a thousand concurrent connections we have",
    "start": "2971859",
    "end": "2978460"
  },
  {
    "text": "5 000 concurrent connections which now means we can have five times as many people waiting for Harry Potter as we",
    "start": "2978460",
    "end": "2986020"
  },
  {
    "text": "did before while everybody else continues to be blocked now",
    "start": "2986020",
    "end": "2991180"
  },
  {
    "text": "really the only solution for these things is essentially to change the",
    "start": "2991180",
    "end": "2996220"
  },
  {
    "text": "business model coming to the business up front saying we're going to need to make this more flexible have this work",
    "start": "2996220",
    "end": "3001380"
  },
  {
    "text": "differently because technically we can't get out of this problem it's you know",
    "start": "3001380",
    "end": "3006900"
  },
  {
    "text": "we've designed ourselves into a corner and the only way out is essentially",
    "start": "3006900",
    "end": "3012359"
  },
  {
    "text": "going all the way back to where we started now what this means in the inventory domain is that we need to be",
    "start": "3012359",
    "end": "3019260"
  },
  {
    "text": "able to accept a temporary negative inventory type of situation we need to",
    "start": "3019260",
    "end": "3025079"
  },
  {
    "text": "be able to allow the inventory to go negative and then have some kind of",
    "start": "3025079",
    "end": "3030240"
  },
  {
    "text": "logic that asynchronously saying oh turns out we can't fulfill your order",
    "start": "3030240",
    "end": "3035339"
  },
  {
    "text": "we'll send you an email about that afterwards say oh sorry are bad if you want you can cancel your order but then",
    "start": "3035339",
    "end": "3042000"
  },
  {
    "text": "we start the back ordering process we contact our supplier and we get them to fulfill that thing and then there's some",
    "start": "3042000",
    "end": "3047460"
  },
  {
    "text": "delays real world delays but the business flexes and handles it and everything's okay now that's great for",
    "start": "3047460",
    "end": "3055079"
  },
  {
    "text": "some domains in others when we say you know let's go in to do this negative inventory when it comes to Taylor Swift",
    "start": "3055079",
    "end": "3062040"
  },
  {
    "text": "tickets you know there just aren't it's like when they're out they're out and",
    "start": "3062040",
    "end": "3068940"
  },
  {
    "text": "this recently happened to Ticketmaster where again you know Taylor Swift comes along big event everybody wants tickets",
    "start": "3068940",
    "end": "3076079"
  },
  {
    "text": "there's no getting more tickets when they're out right that's it that's the limited inventory and essentially what",
    "start": "3076079",
    "end": "3083099"
  },
  {
    "text": "happened is Ticketmaster crashed and kept crashing over and over again and then they had Congressional hearings in",
    "start": "3083099",
    "end": "3088559"
  },
  {
    "text": "the U.S as to why people couldn't get Taylor Swift tickets kind of thing like of all of the things",
    "start": "3088559",
    "end": "3095700"
  },
  {
    "text": "government should deal with on the list of priorities we've got poverty we've got education we've got crime we've got",
    "start": "3095700",
    "end": "3103260"
  },
  {
    "text": "climate change what do we hold Congressional hearings about Taylor Swift tickets",
    "start": "3103260",
    "end": "3109500"
  },
  {
    "text": "we know where our priorities lie so how do we make this thing you know",
    "start": "3109500",
    "end": "3115440"
  },
  {
    "text": "more flexible well as a general principle or approach already at the",
    "start": "3115440",
    "end": "3120540"
  },
  {
    "text": "business level we need to be thinking of how do we make the business process as a",
    "start": "3120540",
    "end": "3125819"
  },
  {
    "text": "whole non-blocking it's not just a technical change it's a whole you know",
    "start": "3125819",
    "end": "3131220"
  },
  {
    "text": "rethinking of the business process so again from Sam Newman's talk the whole asynchronous type of thing what we're",
    "start": "3131220",
    "end": "3137940"
  },
  {
    "text": "looking for is non-blocking not necessarily asynchronous where again the idea of non-blocking say how do we make",
    "start": "3137940",
    "end": "3145380"
  },
  {
    "text": "this as smooth as possible change the UI change the business logic so that there aren't those choke points that stop the",
    "start": "3145380",
    "end": "3152760"
  },
  {
    "text": "user from succeeding in what it is that they want to do one way of potentially doing this is",
    "start": "3152760",
    "end": "3159960"
  },
  {
    "text": "instead of using like the e-commerce style of handling it we could charge the customers up front",
    "start": "3159960",
    "end": "3166559"
  },
  {
    "start": "3162000",
    "end": "3338000"
  },
  {
    "text": "don't even let them select their tickets or where they're sitting first first thing oh you want Taylor Swift tickets",
    "start": "3166559",
    "end": "3172980"
  },
  {
    "text": "give me your credit card anybody who says no that's okay there are plenty others",
    "start": "3172980",
    "end": "3178559"
  },
  {
    "text": "right and they'll pay anything so I know I've got whatever it is 50 000",
    "start": "3178559",
    "end": "3184260"
  },
  {
    "text": "tailors with tickets give me the credit card I'll charge you however much I decide right I'll tell",
    "start": "3184260",
    "end": "3192240"
  },
  {
    "text": "you and then I'll have the system assign you a seat automatically",
    "start": "3192240",
    "end": "3198000"
  },
  {
    "text": "now some of you might be saying I want to select my own seat I'm like good for you",
    "start": "3198000",
    "end": "3204300"
  },
  {
    "text": "I don't care I'm gonna sell out the concert one way or another this is the non-blocking most",
    "start": "3204300",
    "end": "3211800"
  },
  {
    "text": "technically efficient way for me to process fifty thousand screaming Taylor",
    "start": "3211800",
    "end": "3216839"
  },
  {
    "text": "Swift fans I do not want 50 000 screaming Taylor Swift fans locked in my",
    "start": "3216839",
    "end": "3222359"
  },
  {
    "text": "database taking it down right I want them in and through and out as quickly",
    "start": "3222359",
    "end": "3228420"
  },
  {
    "text": "as possible coincidentally this is how the London Olympics did it when people wanted",
    "start": "3228420",
    "end": "3234720"
  },
  {
    "text": "tickets for the London Olympics there wasn't this wait a minute where you know how do I select my seed it's like just",
    "start": "3234720",
    "end": "3242040"
  },
  {
    "text": "be happy you got a ticket it's a different domain it's not the",
    "start": "3242040",
    "end": "3247140"
  },
  {
    "text": "same as e-commerce inventory and there were no complaints and again this was 2012. this was a decade ago",
    "start": "3247140",
    "end": "3255900"
  },
  {
    "text": "and it worked and since then the people that worked on it like yeah you know that's how you do",
    "start": "3255900",
    "end": "3262260"
  },
  {
    "text": "it and then everybody else is like oh no but we want to do with grpc and nosql",
    "start": "3262260",
    "end": "3267540"
  },
  {
    "text": "database like you're asking the wrong questions this is a business question this is a UI",
    "start": "3267540",
    "end": "3272940"
  },
  {
    "text": "business rules type of flow type of scenario now there's another scenario that's",
    "start": "3272940",
    "end": "3278040"
  },
  {
    "text": "going on that tends to happen behind the scenes some businesses are aware of it",
    "start": "3278040",
    "end": "3283740"
  },
  {
    "text": "and they try to ignore it some of them embrace it essentially when there's limited",
    "start": "3283740",
    "end": "3289380"
  },
  {
    "text": "inventory and you can't get any more essentially what's going to happen is an auction",
    "start": "3289380",
    "end": "3296280"
  },
  {
    "text": "tickets are going to go to the highest bidder so what tends to happen with the most",
    "start": "3296280",
    "end": "3301319"
  },
  {
    "text": "popular concerts on Ticketmaster is the Bots come in buy up as much inventory as",
    "start": "3301319",
    "end": "3306960"
  },
  {
    "text": "they can as quickly as they can and then they turn around and they hold auctions to sell those tickets to the highest",
    "start": "3306960",
    "end": "3312540"
  },
  {
    "text": "bidder and of course Ticketmaster and Taylor Swift are very upset about that which is a problem which is why we had",
    "start": "3312540",
    "end": "3319079"
  },
  {
    "text": "Congressional hearings but essentially it's recognizing the fact saying if this is going to happen",
    "start": "3319079",
    "end": "3324900"
  },
  {
    "text": "if this is the nature of the domain then embrace it model it integrate it",
    "start": "3324900",
    "end": "3331319"
  },
  {
    "text": "into your system and you don't necessarily have to pick you can have different vertical slices",
    "start": "3331319",
    "end": "3338220"
  },
  {
    "start": "3338000",
    "end": "3565000"
  },
  {
    "text": "for your private data for when things are being set up by back office staff then we've got you know certain",
    "start": "3338220",
    "end": "3345000"
  },
  {
    "text": "different vertical slice for the back ordered inventory type of domain where we can get more inventory when it runs",
    "start": "3345000",
    "end": "3351839"
  },
  {
    "text": "out we could have the public pre-charge type of model for another set of data or",
    "start": "3351839",
    "end": "3356880"
  },
  {
    "text": "the public auction style we don't necessarily need to have a single business model a single domain model for",
    "start": "3356880",
    "end": "3363960"
  },
  {
    "text": "everything that we do we could take things a step further and do Advanced composition in the UI that's essentially",
    "start": "3363960",
    "end": "3370500"
  },
  {
    "text": "stitching data from multiple verticals together where you know the say the",
    "start": "3370500",
    "end": "3376260"
  },
  {
    "text": "image of the product and the name of the product and the kind of things which are not changing in Fairly static type of",
    "start": "3376260",
    "end": "3384059"
  },
  {
    "text": "data we put that into one database inside one vertical slice and other",
    "start": "3384059",
    "end": "3389099"
  },
  {
    "text": "things related to like the ratings they're going from another vertical slice and the the price is coming from",
    "start": "3389099",
    "end": "3394920"
  },
  {
    "text": "another vertical slice and the inventory is coming from another vertical slice and essentially we stitch all of these",
    "start": "3394920",
    "end": "3400559"
  },
  {
    "text": "things together on the UI together if you want to see a technique of how to do this there's that URL for you and it's a",
    "start": "3400559",
    "end": "3408000"
  },
  {
    "text": "ticket to GitHub repository you'll be able to see this kind of style of doing a composite UI it won't be as visually",
    "start": "3408000",
    "end": "3414540"
  },
  {
    "text": "appealing as this Amazon type of thing but it will give you an idea of how to do these more advanced composition",
    "start": "3414540",
    "end": "3420780"
  },
  {
    "text": "techniques now I know some of you are going to say right but why is it that I need to",
    "start": "3420780",
    "end": "3428640"
  },
  {
    "text": "create like all of these different uis and business logic types of Things Different databases can't we have some",
    "start": "3428640",
    "end": "3436980"
  },
  {
    "text": "generic platform that does all of those things in sort of a standard way",
    "start": "3436980",
    "end": "3443900"
  },
  {
    "text": "because you know our business stakeholders they don't like answering these questions they're like",
    "start": "3443900",
    "end": "3449280"
  },
  {
    "text": "we hired you to fix these problems for us so fix it make the system scale you",
    "start": "3449280",
    "end": "3455520"
  },
  {
    "text": "know solve all of those problems now you can try you know I've seen so many",
    "start": "3455520",
    "end": "3460680"
  },
  {
    "text": "companies try but it it just doesn't scale every single time the problem being it's",
    "start": "3460680",
    "end": "3467400"
  },
  {
    "text": "not the hardware when people say you know how do we make it scale oh we'll throw more Hardware at it you know you",
    "start": "3467400",
    "end": "3473880"
  },
  {
    "text": "can't do that with the database so much you can scale up a database it's really expensive to do so but then you just",
    "start": "3473880",
    "end": "3480359"
  },
  {
    "text": "sort of buy yourself a little bit more time you're like okay so yeah we got a",
    "start": "3480359",
    "end": "3485819"
  },
  {
    "text": "10 million dollar database server in order to be able to support a hundred thousand concurrent connections to the",
    "start": "3485819",
    "end": "3492359"
  },
  {
    "text": "database maybe that'll hold us till next Wednesday",
    "start": "3492359",
    "end": "3497640"
  },
  {
    "text": "beyond that it's kind of like well what are we going to do when the next big thing comes along it's like um",
    "start": "3497640",
    "end": "3504660"
  },
  {
    "text": "find another company we're developers right we're not stuck we can go anywhere we want",
    "start": "3504660",
    "end": "3512240"
  },
  {
    "text": "anyway I know I've tossed a lot of stuff at you a lot of pitfalls a lot of",
    "start": "3512240",
    "end": "3517740"
  },
  {
    "text": "patterns um you know luckily this talk is being recorded it'll be available online uh",
    "start": "3517740",
    "end": "3524160"
  },
  {
    "text": "you can follow up afterwards and if you want to go into more in depth uh I'll be down at the particular software Booth",
    "start": "3524160",
    "end": "3530700"
  },
  {
    "text": "come chat with me talk about your cqrs questions and concerns I'll be happy to address them and for those of you that",
    "start": "3530700",
    "end": "3538020"
  },
  {
    "text": "um you know prefer to kind of continue on on your own time there's a free cqrs course that I've got online it's",
    "start": "3538020",
    "end": "3543599"
  },
  {
    "text": "available at this link go.particular.net ndc-oslo",
    "start": "3543599",
    "end": "3549740"
  },
  {
    "text": "23-odi so hopefully those resources will give you a lot to continue on uh it was",
    "start": "3549740",
    "end": "3556680"
  },
  {
    "text": "so wonderful being here and talking to you all about cqrs my name is online thank you so much have a great",
    "start": "3556680",
    "end": "3563099"
  },
  {
    "text": "rest of your conference [Applause]",
    "start": "3563099",
    "end": "3567109"
  }
]