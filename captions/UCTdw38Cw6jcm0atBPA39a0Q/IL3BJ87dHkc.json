[
  {
    "start": "0",
    "end": "82000"
  },
  {
    "text": "uh i just went to uh neil merrigan's talk about building a security culture",
    "start": "8080",
    "end": "13440"
  },
  {
    "text": "and career and branding etc so looking back i might have jumped into the wrong boat",
    "start": "13440",
    "end": "19520"
  },
  {
    "text": "because he said it was a good idea to pick an area to be an expert in and i picked saml too",
    "start": "19520",
    "end": "26000"
  },
  {
    "text": "which turns out to be something that everybody hates so i've worked with samo2 for closer to",
    "start": "26000",
    "end": "32238"
  },
  {
    "text": "to a decade and i maintain i've authored and maintaining a sample to open source",
    "start": "32239",
    "end": "37760"
  },
  {
    "text": "packages with multiple millions of downloads and users i to my knowledge millions of people are",
    "start": "37760",
    "end": "44800"
  },
  {
    "text": "signing in through my code every day to high security applications so it kind of built my career but to be",
    "start": "44800",
    "end": "51440"
  },
  {
    "text": "truth about xaml 2 i hate it because it's a really awkward standard so i'm going to spend the next hour uh",
    "start": "51440",
    "end": "60079"
  },
  {
    "text": "going through really what a sign single sign-on protocol should do and why sample 2 is doing most of those things",
    "start": "60079",
    "end": "67600"
  },
  {
    "text": "wrong so we can learn some from that but first just looking back a bit uh to",
    "start": "67600",
    "end": "74479"
  },
  {
    "text": "the history of signing in so i try to just for fun look up the the use of the word password where does",
    "start": "74479",
    "end": "81119"
  },
  {
    "text": "it come from it's old it was a word you needed to pause",
    "start": "81119",
    "end": "86720"
  },
  {
    "start": "82000",
    "end": "135000"
  },
  {
    "text": "and i guess the failed password prompt at those times were a bit more violent",
    "start": "86720",
    "end": "92000"
  },
  {
    "text": "than we are used to today in computers it",
    "start": "92000",
    "end": "97520"
  },
  {
    "text": "came into use in the 60s with time sharing systems so when on a campus you had the computer that",
    "start": "97520",
    "end": "104880"
  },
  {
    "text": "multiple people were using and then it made sense to protect your assets on that computer",
    "start": "104880",
    "end": "110079"
  },
  {
    "text": "anyone recognize these two gentlemen",
    "start": "110079",
    "end": "114520"
  },
  {
    "text": "so this is this is really two gentlemen that we owe a lot it's ken thompson and dennis ritchie authors of unix and c",
    "start": "119439",
    "end": "127360"
  },
  {
    "text": "those were the days i wasn't bored yet born yet so jump let's jump forward because this",
    "start": "127360",
    "end": "132800"
  },
  {
    "text": "was not really the age of single sign on so when do we have single sign on well it was when the web came around that it",
    "start": "132800",
    "end": "140080"
  },
  {
    "start": "135000",
    "end": "327000"
  },
  {
    "text": "would really got more of single sign-on requirements there were some windows domains and",
    "start": "140080",
    "end": "146319"
  },
  {
    "text": "kerberos etc before that but with web it really took off and xaml 2 was the first",
    "start": "146319",
    "end": "154319"
  },
  {
    "text": "single handler protocol targeted for the web and",
    "start": "154319",
    "end": "160080"
  },
  {
    "text": "on the web we do have a passive client that has a really no state unlike a",
    "start": "160080",
    "end": "165760"
  },
  {
    "text": "windows computer in the windows domain the computer has a lot of state like you're saying maintenance kerberos tickets or",
    "start": "165760",
    "end": "173760"
  },
  {
    "text": "ntlm estate etc but on the web no and",
    "start": "173760",
    "end": "179280"
  },
  {
    "text": "we also cannot make any assumption on the web how the identity provider login",
    "start": "179280",
    "end": "184319"
  },
  {
    "text": "server offend gets the client so what happens is that if the client tries to access a resource on the web server",
    "start": "184319",
    "end": "191519"
  },
  {
    "text": "the web server responds with the redirect to an identity provider or login server or",
    "start": "191519",
    "end": "197440"
  },
  {
    "text": "yeah i'll use the term idp for this talk and the idp",
    "start": "197440",
    "end": "204959"
  },
  {
    "text": "gets the question who is this the idp figures it out somehow that's outside the scope of the single final",
    "start": "205200",
    "end": "212000"
  },
  {
    "text": "protocol and that's the idea that we can have any means that the",
    "start": "212000",
    "end": "218080"
  },
  {
    "text": "idp can use to sign on it should be available and then it returns",
    "start": "218080",
    "end": "226640"
  },
  {
    "text": "a response well this is anders and usually does it so in the form of some kind of",
    "start": "226640",
    "end": "232400"
  },
  {
    "text": "document that is signed for integrity it doesn't look so hard does it",
    "start": "232400",
    "end": "239040"
  },
  {
    "text": "well there are a lot of steps here that need to get to be done right to get this secure",
    "start": "239040",
    "end": "245439"
  },
  {
    "text": "the first question is really uh when redirecting the client application redirect to the idp why",
    "start": "245439",
    "end": "251360"
  },
  {
    "text": "should it redirect what's the end point and there are two ways ensemble to to",
    "start": "251360",
    "end": "257120"
  },
  {
    "text": "configure that uh the simple one is that if the idp publishes a metadata",
    "start": "257120",
    "end": "262960"
  },
  {
    "text": "document uh we'll get it a bit large right way",
    "start": "262960",
    "end": "268960"
  },
  {
    "text": "it publishes a document that says these are my endpoints this is my behavior",
    "start": "268960",
    "end": "274240"
  },
  {
    "text": "these are my capabilities the problem is that it's often not implemented and in that case",
    "start": "274240",
    "end": "281440"
  },
  {
    "text": "ensemble 2 you get to imp to hardco or to configure all of the endpoint details in your client applications but if it's",
    "start": "281440",
    "end": "288479"
  },
  {
    "text": "implemented it's fairly straightforward this is what a metadata document looks like it",
    "start": "288479",
    "end": "293520"
  },
  {
    "text": "contains a single sign on service with an address where you can find the then point the",
    "start": "293520",
    "end": "300880"
  },
  {
    "text": "that should be redirected to and it contains the entity id of the",
    "start": "300880",
    "end": "306560"
  },
  {
    "text": "uh of the ident identity provider that is the identifier for that identity provider in",
    "start": "306560",
    "end": "313919"
  },
  {
    "text": "this context and there is a convention in xaml 2",
    "start": "313919",
    "end": "319759"
  },
  {
    "text": "that was introduced to make things simple that is if you take the metadata the entity id",
    "start": "319759",
    "end": "325280"
  },
  {
    "text": "that should be the address of the metadata document so let's look if i'm looking at my dummy provider of",
    "start": "325280",
    "end": "332479"
  },
  {
    "start": "327000",
    "end": "551000"
  },
  {
    "text": "course it works if i'm looking at a quite big product in the space microsoft",
    "start": "332479",
    "end": "338560"
  },
  {
    "text": "adfs they have a federation service identifier that says mysite.com slash",
    "start": "338560",
    "end": "343600"
  },
  {
    "text": "adfs their services slash trust the problem is this is the address of",
    "start": "343600",
    "end": "348639"
  },
  {
    "text": "the the metadata on adfs something else you need to know it or or",
    "start": "348639",
    "end": "353759"
  },
  {
    "text": "i google it every single time i need it because i can never remember that address",
    "start": "353759",
    "end": "360000"
  },
  {
    "text": "okay look at azure 80 microsoft got another try right did they do it right well this is the",
    "start": "360000",
    "end": "366720"
  },
  {
    "text": "path to the metadata looking into it this is what the entity looks like it's",
    "start": "366720",
    "end": "372800"
  },
  {
    "text": "even worse it's not even the same host name",
    "start": "372800",
    "end": "376720"
  },
  {
    "text": "so metadata is great if it's published and you can find it",
    "start": "378000",
    "end": "384000"
  },
  {
    "text": "so let's look at another protocol open id connect that is a bit more modern how do they solve it there well looking at a",
    "start": "384000",
    "end": "390720"
  },
  {
    "text": "similar address for the metadata for the discovery document for open edit connect",
    "start": "390720",
    "end": "396639"
  },
  {
    "text": "we do find a matching issuer id it's actually the issuer and then you",
    "start": "396639",
    "end": "402639"
  },
  {
    "text": "just add dot well known slash open id configuration that is where you find it",
    "start": "402639",
    "end": "408319"
  },
  {
    "text": "and how come that they got it right in the banana connector not example two well the difference in the in the spec",
    "start": "408319",
    "end": "414880"
  },
  {
    "text": "in the sample two spec everyone can do kind of as they want",
    "start": "414880",
    "end": "419919"
  },
  {
    "text": "there are recommendations you may publish the metadata at the address",
    "start": "419919",
    "end": "425520"
  },
  {
    "text": "which is the ndd while open edit says must",
    "start": "425520",
    "end": "430639"
  },
  {
    "text": "you must the issuer address with dot wellness let's open id configuration appended",
    "start": "430639",
    "end": "436800"
  },
  {
    "text": "must be the address of the discover document period so everybody follows it",
    "start": "436800",
    "end": "443280"
  },
  {
    "text": "then we have the matter of trust if we're looking once more at the metadata document it contains signal yes",
    "start": "445120",
    "end": "452400"
  },
  {
    "text": "well it's a com dot well known is a suffix used for a different kind of",
    "start": "460800",
    "end": "467599"
  },
  {
    "text": "of uh services and open id configuration is one that utilizes the dot well known so",
    "start": "467599",
    "end": "475120"
  },
  {
    "text": "it's simple as a it's a reserved name really to not collide with anything else in your application",
    "start": "475120",
    "end": "481680"
  },
  {
    "text": "so in the metadata document we also have a",
    "start": "484400",
    "end": "489599"
  },
  {
    "text": "signature which is used to integrity protect the metadata because",
    "start": "489599",
    "end": "494879"
  },
  {
    "text": "when the client application or service provider downloads the metadata it's extremely security sensitive that it",
    "start": "494879",
    "end": "500400"
  },
  {
    "text": "gets the right document and not a falsified version and this way we can",
    "start": "500400",
    "end": "507039"
  },
  {
    "text": "validate it because we can com pre-configure a signing key somewhere else that we maybe got offline or over",
    "start": "507039",
    "end": "514080"
  },
  {
    "text": "the phone or anything like that a second channel actually in the switch federation i'm",
    "start": "514080",
    "end": "519279"
  },
  {
    "text": "working with there is a rule that you have to call and check the certificate of thumb print",
    "start": "519279",
    "end": "525200"
  },
  {
    "text": "over the phone because you cannot trust the download so an out-of-bound confirmation of the",
    "start": "525200",
    "end": "532959"
  },
  {
    "text": "certificate what did openld connect do well they",
    "start": "532959",
    "end": "538480"
  },
  {
    "text": "said that getting reliable data over http is that is known problem just get your",
    "start": "538480",
    "end": "544959"
  },
  {
    "text": "sorry get your tls together so we're just downloading our table tls",
    "start": "544959",
    "end": "550480"
  },
  {
    "text": "and trusting that next question once we know where to redirect we need",
    "start": "550480",
    "end": "556240"
  },
  {
    "start": "551000",
    "end": "695000"
  },
  {
    "text": "to know how to redirect because when we redirect order we need to convey some information to the",
    "start": "556240",
    "end": "562800"
  },
  {
    "text": "identity provider about what kind of request is this where do we",
    "start": "562800",
    "end": "568000"
  },
  {
    "text": "want the response back and this is being saml2 based on xml of course we send a piece of xml to the",
    "start": "568000",
    "end": "574480"
  },
  {
    "text": "identity provider with the redirect the problem is that if you try to send",
    "start": "574480",
    "end": "581120"
  },
  {
    "text": "something like this to over the web a lot of firewalls etc will",
    "start": "581120",
    "end": "587440"
  },
  {
    "text": "detect this as tags this looks like a cross-site scripting tag and it will be",
    "start": "587440",
    "end": "593040"
  },
  {
    "text": "blocked uh so we need to encode it but before we go into that we can just see that",
    "start": "593040",
    "end": "599600"
  },
  {
    "text": "it contains also the response url the assertion consumer service where do we want to get back we it contains the",
    "start": "599600",
    "end": "605519"
  },
  {
    "text": "issuer the id of the client application so the idp will get some information on",
    "start": "605519",
    "end": "610800"
  },
  {
    "text": "where to respond so how does this send over well the one common way is to basically four coded to",
    "start": "610800",
    "end": "618320"
  },
  {
    "text": "just pass those xss filters put it in a form that is automatically",
    "start": "618320",
    "end": "624000"
  },
  {
    "text": "posted and i think this approach has two drawbacks number one",
    "start": "624000",
    "end": "630480"
  },
  {
    "text": "for the data is non-human readable number two",
    "start": "630480",
    "end": "636320"
  },
  {
    "text": "uh automatically posted forms uh just breaks the browser back button",
    "start": "636320",
    "end": "641920"
  },
  {
    "text": "so it creates a really bad user experience whenever someone hits the back button",
    "start": "641920",
    "end": "647200"
  },
  {
    "text": "so why not try to use instead a query",
    "start": "647200",
    "end": "652800"
  },
  {
    "text": "a query string parameter but we still do want to do xml right",
    "start": "652800",
    "end": "660079"
  },
  {
    "text": "but xml can be quite voluminous to cope with that this encoding is",
    "start": "660079",
    "end": "665440"
  },
  {
    "text": "actually the xml data uh the utf-8 encoding of that that is",
    "start": "665440",
    "end": "672399"
  },
  {
    "text": "run through the deflate compression algorithm with the result base64 encoded",
    "start": "672399",
    "end": "678320"
  },
  {
    "text": "and then url encoded okay we did solve the browser back",
    "start": "678320",
    "end": "683680"
  },
  {
    "text": "button did we and the data is still just an autumn human",
    "start": "683680",
    "end": "689120"
  },
  {
    "text": "readable so to work with this uh let's see how",
    "start": "689120",
    "end": "694399"
  },
  {
    "text": "this work in uh for real uh i have a small test application here",
    "start": "694399",
    "end": "702480"
  },
  {
    "start": "695000",
    "end": "804000"
  },
  {
    "text": "i thought yep so to work with this if you",
    "start": "702480",
    "end": "708560"
  },
  {
    "text": "ever need to work with saml2 we do have to the browser dev tools",
    "start": "708560",
    "end": "715120"
  },
  {
    "text": "i need to oh sorry i need a mouse to do this just scroll",
    "start": "715360",
    "end": "722480"
  },
  {
    "text": "somewhere here",
    "start": "722959",
    "end": "725440"
  },
  {
    "text": "uh so i do have a samwell plug-in to chrome saml dev tools and that is lifesaver whenever you work with this so",
    "start": "728720",
    "end": "735440"
  },
  {
    "text": "if i sign in with saml i can see that",
    "start": "735440",
    "end": "740720"
  },
  {
    "text": "there is a request this is this awkward url but it is decoded and what it is it's actually a",
    "start": "740720",
    "end": "747839"
  },
  {
    "text": "piece of xml that we through after jumping it through a few hops we",
    "start": "747839",
    "end": "753680"
  },
  {
    "text": "put it in the query string um",
    "start": "753680",
    "end": "760320"
  },
  {
    "text": "let's extend again yeah",
    "start": "760320",
    "end": "767040"
  },
  {
    "text": "uh so let's look at that other protocol open idconnect what does it do well there is a built-in way to convey key",
    "start": "767519",
    "end": "774320"
  },
  {
    "text": "value par pairs into a query string isn't it it's called questioning parameters this is what open",
    "start": "774320",
    "end": "780639"
  },
  {
    "text": "id connect does so simultaneous just everything has to be xml",
    "start": "780639",
    "end": "787360"
  },
  {
    "text": "and complicated here we have the similar concepts client",
    "start": "787360",
    "end": "792399"
  },
  {
    "text": "id who is the requester we have a response redirect uri where do we want the",
    "start": "792399",
    "end": "798000"
  },
  {
    "text": "response back response type response mode how do we want it back and an id of the request",
    "start": "798000",
    "end": "805200"
  },
  {
    "start": "804000",
    "end": "1000000"
  },
  {
    "text": "then the identity provider need to figure out well is this a trusted application that made",
    "start": "805519",
    "end": "812959"
  },
  {
    "text": "the request typically this is configured and you need an allow list on the idp",
    "start": "812959",
    "end": "819839"
  },
  {
    "text": "it [Music] and that is the entity id so entity id let's look at that because that's",
    "start": "819839",
    "end": "825839"
  },
  {
    "text": "another thing in openid connect we have the client id which is just a string and open in saml 2 let's go to the spec to",
    "start": "825839",
    "end": "833279"
  },
  {
    "text": "see what it says about an entity id in the core spec it says the issuer",
    "start": "833279",
    "end": "838560"
  },
  {
    "text": "element with complex type name id type provides information about the issue of a simulated searching or protocol",
    "start": "838560",
    "end": "843920"
  },
  {
    "text": "message the element requires the use of a string string right",
    "start": "843920",
    "end": "848959"
  },
  {
    "text": "to carry the issue's name but permits various pieces of descriptive data if no format value is provided with this",
    "start": "848959",
    "end": "854959"
  },
  {
    "text": "element then the value blah blah entity is in effect what the",
    "start": "854959",
    "end": "860800"
  },
  {
    "text": "okay but when doing web single sign on",
    "start": "860800",
    "end": "866800"
  },
  {
    "text": "there's another document now this another document in the spec the web sso profile or the profile specification",
    "start": "866800",
    "end": "873839"
  },
  {
    "text": "where it is a bit more clear the issuer element must be present and must be",
    "start": "873839",
    "end": "879279"
  },
  {
    "text": "contained the unique identifier of the requesting service provider the format attribute must be emitted or have a",
    "start": "879279",
    "end": "886560"
  },
  {
    "text": "value of blah blah blah entity and the previous section said that if if submitted it effectively means entity so",
    "start": "886560",
    "end": "893760"
  },
  {
    "text": "we can just omit it and it means that format but what are the rules for name id format entity",
    "start": "893760",
    "end": "900639"
  },
  {
    "text": "okay back to the core spec here we have a section for the",
    "start": "900639",
    "end": "906560"
  },
  {
    "text": "name id format entity the syntax is such an identifier is a uri you know not more",
    "start": "906560",
    "end": "911680"
  },
  {
    "text": "than 1024 characters in length um",
    "start": "911680",
    "end": "917519"
  },
  {
    "text": "yeah are we done then no because there is one",
    "start": "917519",
    "end": "923519"
  },
  {
    "text": "tricky part more of the sample to spec if you try to read it by looking things up you will never find this section this",
    "start": "923519",
    "end": "929839"
  },
  {
    "text": "passage core 132 it's up at the top of the document it says that unless otherwise indicated in this",
    "start": "929839",
    "end": "936079"
  },
  {
    "text": "specification all uri reference values used within sample defined elements or attributes must consist of at least one",
    "start": "936079",
    "end": "944079"
  },
  {
    "text": "non-white space character and are required to be absolute so the full answer is that the entity id",
    "start": "944079",
    "end": "950639"
  },
  {
    "text": "needs to be an absolute uri or you will run into compatibility issues",
    "start": "950639",
    "end": "956240"
  },
  {
    "text": "and to learn that you have to read two different documents in four different places",
    "start": "956240",
    "end": "962160"
  },
  {
    "text": "yeah and i have a question really that i might need help with here it says that",
    "start": "966000",
    "end": "972720"
  },
  {
    "text": "it must be an absolute jewelry i that is at least one non-white space",
    "start": "972720",
    "end": "977839"
  },
  {
    "text": "character does anyone know if it is even possible to construct one character absolute uri",
    "start": "977839",
    "end": "984399"
  },
  {
    "text": "i thought like 5 was the shortest urn colon x that's an absolute uri i don't think",
    "start": "984399",
    "end": "990720"
  },
  {
    "text": "there's anything shorter is it okay",
    "start": "990720",
    "end": "996560"
  },
  {
    "text": "it's an absolute uri and you're happy so now we've figured out who the",
    "start": "996560",
    "end": "1002959"
  },
  {
    "start": "1000000",
    "end": "1160000"
  },
  {
    "text": "client application is so what to send to it well essentially what is convey some",
    "start": "1002959",
    "end": "1008000"
  },
  {
    "text": "information which is key value pairs and when doing that is a good idea if we",
    "start": "1008000",
    "end": "1013440"
  },
  {
    "text": "are agreed on what the keys are and so we can map the values so there is",
    "start": "1013440",
    "end": "1019120"
  },
  {
    "text": "an informal standard that is used this is what the microsoft.net framework has",
    "start": "1019120",
    "end": "1024480"
  },
  {
    "text": "built in et cetera but it wouldn't be some too if it was this easy because there's another",
    "start": "1024480",
    "end": "1031120"
  },
  {
    "text": "standard as well so you never know what standard the",
    "start": "1031120",
    "end": "1036400"
  },
  {
    "text": "other one other part is using if they are using the oid style or the url style",
    "start": "1036400",
    "end": "1043600"
  },
  {
    "text": "the yd style at least has a friendly name attribute which means you can read out what it is but it also states very",
    "start": "1043600",
    "end": "1049520"
  },
  {
    "text": "clearly that you should never use that friendly name because it's not trustworthy you should look at the oid",
    "start": "1049520",
    "end": "1057039"
  },
  {
    "text": "so let's jump to open id connect this is it",
    "start": "1057919",
    "end": "1063679"
  },
  {
    "text": "a simple strict table with well-defined attribute names",
    "start": "1063679",
    "end": "1071200"
  },
  {
    "text": "um okay but that's how the keys work and then we have the yes",
    "start": "1072080",
    "end": "1077919"
  },
  {
    "text": "why i've been asking that for 10 years i'm sorry i don't know",
    "start": "1079280",
    "end": "1085440"
  },
  {
    "text": "and then",
    "start": "1085440",
    "end": "1087759"
  },
  {
    "text": "ii was created by a committee of representatives of large enterprises",
    "start": "1094320",
    "end": "1101279"
  },
  {
    "text": "yeah it's part of w it it's not really part of but double us security etc it's",
    "start": "1103520",
    "end": "1110080"
  },
  {
    "text": "from the same age where everything would be flexible and i i think when reading somebody's back i",
    "start": "1110080",
    "end": "1115679"
  },
  {
    "text": "get the impression that there were different opinions they couldn't settle so they decided to allow",
    "start": "1115679",
    "end": "1122640"
  },
  {
    "text": "both in many places uh one thing they were settled on",
    "start": "1122640",
    "end": "1129360"
  },
  {
    "text": "however is that everything should be services attribute consumer service a single sign-on service",
    "start": "1129360",
    "end": "1135200"
  },
  {
    "text": "searching consumer services a three bit consumer image service is something that",
    "start": "1135200",
    "end": "1140559"
  },
  {
    "text": "a client application can use to signal what attributes it does do you want to",
    "start": "1140559",
    "end": "1147200"
  },
  {
    "text": "receive from the idp it's not a service",
    "start": "1147200",
    "end": "1153760"
  },
  {
    "text": "it just has to use the name service because everything should be services in the sense what it is this is response to",
    "start": "1153760",
    "end": "1161039"
  },
  {
    "start": "1160000",
    "end": "1295000"
  },
  {
    "text": "what should be respond and what it is it's just an index into the metadata document of the client application a",
    "start": "1161039",
    "end": "1168080"
  },
  {
    "text": "service provider so now we have a meet the data document that the identity provider needs to have",
    "start": "1168080",
    "end": "1175039"
  },
  {
    "text": "network access to read data from the service provider in order to set this up",
    "start": "1175039",
    "end": "1180480"
  },
  {
    "text": "and in there we have a list of attributes really this is the only place attribute consuming service exists",
    "start": "1180480",
    "end": "1186960"
  },
  {
    "text": "the service consists of a list in xml with the attributes you want to use",
    "start": "1186960",
    "end": "1193200"
  },
  {
    "text": "one more question i never figured out is why we need that green line where it says name format and that is",
    "start": "1193200",
    "end": "1200320"
  },
  {
    "text": "actually a url describing that the name of the attribute is a uri",
    "start": "1200320",
    "end": "1207039"
  },
  {
    "text": "so it was obviously important to describe the format of the name of the attribute but we have no description",
    "start": "1207039",
    "end": "1213360"
  },
  {
    "text": "what the attribute contents are there's also another thing that is very",
    "start": "1213360",
    "end": "1219600"
  },
  {
    "text": "backwards with this this is like uh the client application is like a guest",
    "start": "1219600",
    "end": "1224799"
  },
  {
    "text": "coming to restaurants saying here's my menu can you please give me dish number two on my menu",
    "start": "1224799",
    "end": "1234400"
  },
  {
    "text": "open id connect of course got this right the identity provider offers the menu",
    "start": "1234400",
    "end": "1240320"
  },
  {
    "text": "and the client application can pick entries from the menu by",
    "start": "1240320",
    "end": "1246000"
  },
  {
    "text": "sending on the scopes they want the scopes are also well defined",
    "start": "1246000",
    "end": "1251679"
  },
  {
    "text": "exactly what they need one interesting thing here is family name versus give and given name",
    "start": "1251679",
    "end": "1258400"
  },
  {
    "text": "we often from western culture do name things first name last name or surname",
    "start": "1258400",
    "end": "1263679"
  },
  {
    "text": "because that makes sense to us but family name and given name is much better and then don't make any",
    "start": "1263679",
    "end": "1269200"
  },
  {
    "text": "assumptions on how you concatenate a family name in given name to make up the",
    "start": "1269200",
    "end": "1274559"
  },
  {
    "text": "full name because that's different you might recognize the names kim",
    "start": "1274559",
    "end": "1281440"
  },
  {
    "text": "il-sung kim jong-il king jung yoon kim is the family name and it's first in",
    "start": "1281440",
    "end": "1287120"
  },
  {
    "text": "many asian cultures",
    "start": "1287120",
    "end": "1290760"
  },
  {
    "text": "so open id connect got this right let's see the next one how do they",
    "start": "1292320",
    "end": "1297360"
  },
  {
    "start": "1295000",
    "end": "1412000"
  },
  {
    "text": "respond well bindings that's what we talked about earlier when how to auto post a form or",
    "start": "1297360",
    "end": "1303600"
  },
  {
    "text": "encode it in the url usually when sending along identity information is so much data that we have",
    "start": "1303600",
    "end": "1310000"
  },
  {
    "text": "to use in automatically posted form that can be configured or read from the metadata",
    "start": "1310000",
    "end": "1316400"
  },
  {
    "text": "where same thing we have it configured or re uh read from",
    "start": "1316400",
    "end": "1321440"
  },
  {
    "text": "the metadata so let's go back to the browser and switch screens again and hit",
    "start": "1321440",
    "end": "1327120"
  },
  {
    "text": "the response button so what we are looking at here is",
    "start": "1327120",
    "end": "1332799"
  },
  {
    "text": "my special kind of identity provider where the login box or login sequence",
    "start": "1332799",
    "end": "1338400"
  },
  {
    "text": "consists of well i can select who i want to be and this is testing tool i provided free",
    "start": "1338400",
    "end": "1345520"
  },
  {
    "text": "on the internet that can be used it doesn't validate really anything but",
    "start": "1345520",
    "end": "1351360"
  },
  {
    "text": "it's great when making an application you want to try out so if i do hit",
    "start": "1351360",
    "end": "1359120"
  },
  {
    "text": "respond login i can see that i got a",
    "start": "1359120",
    "end": "1364559"
  },
  {
    "text": "resume response let's see here where it's considered as",
    "start": "1364559",
    "end": "1369679"
  },
  {
    "text": "a signature and it contains uh",
    "start": "1369679",
    "end": "1375280"
  },
  {
    "text": "way down a bunch of attributes this is really this is really the only interesting part of the",
    "start": "1375280",
    "end": "1380400"
  },
  {
    "text": "of the response the attributes about the user",
    "start": "1380400",
    "end": "1385440"
  },
  {
    "text": "and it was sent as a if we look at the request it was sent as a request data as",
    "start": "1386240",
    "end": "1391520"
  },
  {
    "text": "of basically foreign post there's a lot of data",
    "start": "1391520",
    "end": "1398400"
  },
  {
    "text": "so let's get back to this",
    "start": "1398400",
    "end": "1404640"
  },
  {
    "start": "1412000",
    "end": "1489000"
  },
  {
    "text": "so now we've exchanged the data now we come to the really tricky part trusting how does the",
    "start": "1412159",
    "end": "1417760"
  },
  {
    "text": "client application know that the data coming in was actually from the identity provider not faked or not tampered with",
    "start": "1417760",
    "end": "1424880"
  },
  {
    "text": "so let's take a detour on xml signatures an xml document could look like this the",
    "start": "1424880",
    "end": "1430320"
  },
  {
    "text": "blue is the entire document we have three parts of it the yellow green and black part",
    "start": "1430320",
    "end": "1436240"
  },
  {
    "text": "the yellow part con contains a signature that signature",
    "start": "1436240",
    "end": "1441919"
  },
  {
    "text": "references or sorry when calling signed xml dot check signature on this it will",
    "start": "1441919",
    "end": "1447919"
  },
  {
    "text": "validate the signature and it will follow the references pointed out and validate those parts of",
    "start": "1447919",
    "end": "1455440"
  },
  {
    "text": "the document that are pointed out by reference it's a yellow part and this is an envelope signature",
    "start": "1455440",
    "end": "1461919"
  },
  {
    "text": "because the signature is inside the signed data and this is an external signature",
    "start": "1461919",
    "end": "1467679"
  },
  {
    "text": "because the signature is outside so in this document the yellow and green parts are protected by the signature the black",
    "start": "1467679",
    "end": "1475360"
  },
  {
    "text": "hackers part is not and this of course may sound for a lot",
    "start": "1475360",
    "end": "1480640"
  },
  {
    "text": "of chances to confusion that we do receive some data with a signature but only part of the data is actually",
    "start": "1480640",
    "end": "1486880"
  },
  {
    "text": "trustworthy so let me introduce jurisomarovsky",
    "start": "1486880",
    "end": "1492640"
  },
  {
    "start": "1489000",
    "end": "1553000"
  },
  {
    "text": "his phd was about sam on breaking samuel b whoever you want to be",
    "start": "1492640",
    "end": "1497679"
  },
  {
    "text": "he took all main sample implementations that existed back then and broke kind of every one of them",
    "start": "1497679",
    "end": "1505039"
  },
  {
    "text": "most important is the signature exclusion attack which simply means we're not providing any signature",
    "start": "1505039",
    "end": "1512000"
  },
  {
    "text": "we're just removing it and since there was no signature that wasn't",
    "start": "1512000",
    "end": "1517039"
  },
  {
    "text": "invalid the data was trusted signature wrapping i'll get to that that's a bit more complex",
    "start": "1517039",
    "end": "1523360"
  },
  {
    "text": "as a net developer i feel a bit sad that simple sample php actually passed",
    "start": "1523360",
    "end": "1529360"
  },
  {
    "text": "but later on he broke that too and microsoft wins on a foundation",
    "start": "1529360",
    "end": "1535600"
  },
  {
    "text": "passed at this time but he has has had other security flaws afterwards",
    "start": "1535600",
    "end": "1541760"
  },
  {
    "text": "that is i think a really a point of secure protocol if just about every implementation from",
    "start": "1541760",
    "end": "1547600"
  },
  {
    "text": "major companies has been broken at some point in time something is wrong with the standard so what does it do",
    "start": "1547600",
    "end": "1555440"
  },
  {
    "start": "1553000",
    "end": "1645000"
  },
  {
    "text": "well this is a sample to flow really where uh we have the redirects and we get a response from",
    "start": "1555440",
    "end": "1563600"
  },
  {
    "text": "that enterprise says this is bob with the royal role guest what is if bob is evil he could replace",
    "start": "1563600",
    "end": "1571600"
  },
  {
    "text": "that and trick the service to accept that this is user admin",
    "start": "1571600",
    "end": "1577840"
  },
  {
    "text": "first way to do that is to well make a bit of reordering of the xml",
    "start": "1578480",
    "end": "1585600"
  },
  {
    "text": "document so you remember signature signed xml",
    "start": "1585600",
    "end": "1590640"
  },
  {
    "text": "check signature checks the signature it follows the reference 123 and checks",
    "start": "1590640",
    "end": "1596480"
  },
  {
    "text": "that the blue area part of the document is sane but that is just",
    "start": "1596480",
    "end": "1602720"
  },
  {
    "text": "some data put in an odd corner of the message what will probably be processed",
    "start": "1602720",
    "end": "1608320"
  },
  {
    "text": "afterwards by their implementation is it would be looking for this surgeon in the place where it is expected to be",
    "start": "1608320",
    "end": "1614960"
  },
  {
    "text": "but that is no longer integrity protected by the signature so you can fool it",
    "start": "1614960",
    "end": "1621919"
  },
  {
    "text": "this must sound like a trivial thing that you should do sig reference validation when doing signed xml because",
    "start": "1622159",
    "end": "1630000"
  },
  {
    "text": "that is something that is in the signed xml standard you have to check what is actually integrity protected i can say",
    "start": "1630000",
    "end": "1637039"
  },
  {
    "text": "my first versions of my library didn't do this but thanks to being open source someone pointed out quickly and i fixed",
    "start": "1637039",
    "end": "1643120"
  },
  {
    "text": "it uh i've done my part of acknowledging uh pointing out to",
    "start": "1643120",
    "end": "1650240"
  },
  {
    "start": "1645000",
    "end": "1873000"
  },
  {
    "text": "some other people that they maybe should do reference validation",
    "start": "1650240",
    "end": "1656399"
  },
  {
    "text": "these are some sample stacks and other important use of signed xml signatures",
    "start": "1656399",
    "end": "1664399"
  },
  {
    "text": "so let's take the next way of fooling signature processing what if we put in",
    "start": "1665279",
    "end": "1671200"
  },
  {
    "text": "actually two parts of the document with the same id so now the reference",
    "start": "1671200",
    "end": "1677120"
  },
  {
    "text": "points to could be resolved to anyone when doing the signed xml check",
    "start": "1677120",
    "end": "1683360"
  },
  {
    "text": "signature validation this in this case example the signature validation would simply take the last",
    "start": "1683360",
    "end": "1689520"
  },
  {
    "text": "element that matches while the processing application would process the first element that matches",
    "start": "1689520",
    "end": "1696640"
  },
  {
    "text": "which is the assertion which is in the place where it's expected",
    "start": "1696640",
    "end": "1701360"
  },
  {
    "text": "uh so duplicate reference ids is a bad thing let's look at what they donate",
    "start": "1702799",
    "end": "1709919"
  },
  {
    "text": "dot net framework used to look like a few years ago it contains code here select single node",
    "start": "1709919",
    "end": "1716240"
  },
  {
    "text": "this is how the net framework code resolved the references the problem is that this is a lie",
    "start": "1716240",
    "end": "1724240"
  },
  {
    "text": "select single implies that it should only select one node and it should only align one node what it does",
    "start": "1724240",
    "end": "1730240"
  },
  {
    "text": "this method really does is select the first node which means that you could have",
    "start": "1730240",
    "end": "1736399"
  },
  {
    "text": "duplicate signature ids in the document and the dotnet framework eric would trust it",
    "start": "1736399",
    "end": "1742559"
  },
  {
    "text": "uh it took me like five months to get microsoft to acknowledge and patch it",
    "start": "1742559",
    "end": "1748159"
  },
  {
    "text": "back in 2016 but they did so they replaced select single node with",
    "start": "1748159",
    "end": "1754720"
  },
  {
    "text": "get single reference target which is now in the code",
    "start": "1754720",
    "end": "1760080"
  },
  {
    "text": "but you notice something else there's a fallback it tries for multiple casings",
    "start": "1760080",
    "end": "1765520"
  },
  {
    "text": "saml 2 is not vulnerable because to exploit this you would need a piece",
    "start": "1765520",
    "end": "1770559"
  },
  {
    "text": "of signed data that use one of the one of the first",
    "start": "1770559",
    "end": "1776559"
  },
  {
    "text": "casings and then add your fake data with a lower priority",
    "start": "1776559",
    "end": "1781600"
  },
  {
    "text": "unfortunately or fortunately saml 2 uses capital id",
    "start": "1781600",
    "end": "1787200"
  },
  {
    "text": "but still and this is something microsoft decided to not fix i was not happy with them but it's in",
    "start": "1787200",
    "end": "1794240"
  },
  {
    "text": "they said it's uh by design okay",
    "start": "1794240",
    "end": "1799200"
  },
  {
    "text": "uh so the only thing you can really do is that if you have a piece of data with your",
    "start": "1799520",
    "end": "1805600"
  },
  {
    "text": "validated the signature you cannot just check the id and say that okay this is a",
    "start": "1805600",
    "end": "1810640"
  },
  {
    "text": "matching reference in the signature don't follow that direction you need to go from the signature call the same",
    "start": "1810640",
    "end": "1818399"
  },
  {
    "text": "reference resolvement method as the signed xml validator uses and trust that",
    "start": "1818399",
    "end": "1825919"
  },
  {
    "text": "piece of data only so",
    "start": "1825919",
    "end": "1832320"
  },
  {
    "text": "xml signatures are horrible don't ever use them unless",
    "start": "1832320",
    "end": "1837520"
  },
  {
    "text": "you have to and if you have to validate the references and also there are more a lot more",
    "start": "1837520",
    "end": "1843679"
  },
  {
    "text": "things you need to put into to make a secure xml signature validation but remember that just calling check",
    "start": "1843679",
    "end": "1850080"
  },
  {
    "text": "signature does not do all the validation required and once again this is a security",
    "start": "1850080",
    "end": "1856480"
  },
  {
    "text": "protocol why use a standard that's so hard to implement write or to use write",
    "start": "1856480",
    "end": "1862480"
  },
  {
    "text": "and i'm not even mentioned canon equalization and transforms and external references",
    "start": "1862480",
    "end": "1868480"
  },
  {
    "text": "designed xml standards is even worse",
    "start": "1868480",
    "end": "1873440"
  },
  {
    "start": "1873000",
    "end": "1934000"
  },
  {
    "text": "so well we have handled the question of trust or validating the signature second is how do we know the key",
    "start": "1873919",
    "end": "1882000"
  },
  {
    "text": "well we can retrieve it from the metadata or have it configured an important thing here though is that",
    "start": "1882000",
    "end": "1889120"
  },
  {
    "text": "some implementations like microsoft windows identity foundation lets the key actually be",
    "start": "1889120",
    "end": "1895360"
  },
  {
    "text": "part of the signed data and then it validates the signature against the",
    "start": "1895360",
    "end": "1902399"
  },
  {
    "text": "it validates the data against the key that is included in the document and then returns the key to you and then",
    "start": "1902399",
    "end": "1908960"
  },
  {
    "text": "it's up to the consuming library to decide is this a trustworthy key or not",
    "start": "1908960",
    "end": "1914799"
  },
  {
    "text": "uh a winston and foundation bug they had a couple of years ago was that you could put in two keys",
    "start": "1914799",
    "end": "1921279"
  },
  {
    "text": "one that was trusted and another one that signed the data that validated data and that would pass",
    "start": "1921279",
    "end": "1928960"
  },
  {
    "text": "so should we move on to see how a more modern protocol does this",
    "start": "1930399",
    "end": "1935519"
  },
  {
    "start": "1934000",
    "end": "2000000"
  },
  {
    "text": "this is an id token from open data connect it contain consists of a header",
    "start": "1935519",
    "end": "1940720"
  },
  {
    "text": "which is transported as a basic sephora encoder string a strict",
    "start": "1940720",
    "end": "1946080"
  },
  {
    "text": "simple encoding and it has the payload the body and the green part",
    "start": "1946080",
    "end": "1952320"
  },
  {
    "text": "simply take these encoded stuff hash it sign it and that's the signature",
    "start": "1952320",
    "end": "1959279"
  },
  {
    "text": "that is foolproof or more for full okay more foolproof because we are signing the actual",
    "start": "1959279",
    "end": "1966000"
  },
  {
    "text": "transport representation instead of signed xml trying to sign the semantic",
    "start": "1966000",
    "end": "1971600"
  },
  {
    "text": "meaning of the document where you could actually change namespace prefixes etc",
    "start": "1971600",
    "end": "1976799"
  },
  {
    "text": "and it should still validate yeah okay so",
    "start": "1976799",
    "end": "1983600"
  },
  {
    "text": "that's uh part of the what we can do with",
    "start": "1983600",
    "end": "1989679"
  },
  {
    "text": "or how signatures work and that's my clicker",
    "start": "1989679",
    "end": "1995840"
  },
  {
    "text": "just a second next part",
    "start": "1996559",
    "end": "2002640"
  },
  {
    "start": "2000000",
    "end": "2043000"
  },
  {
    "text": "in a modern setup we tend to not only authenticate users but we also want to call apis on behalf of the user",
    "start": "2002640",
    "end": "2010399"
  },
  {
    "text": "and at a very vivid breakfast discussion with some other speakers this morning i got pointed out to me that this is",
    "start": "2010399",
    "end": "2019039"
  },
  {
    "text": "not part of the authentication protocol it's the delegation whatever open id connect solves this by extending",
    "start": "2019039",
    "end": "2025840"
  },
  {
    "text": "oauth2 that contains this capability and someone to know forget about it",
    "start": "2025840",
    "end": "2033480"
  },
  {
    "text": "so now we have signed in we cannot call other services but we are at least signed in we are done working eventually",
    "start": "2034159",
    "end": "2041039"
  },
  {
    "text": "we want to sign out how do we do that signing out needs to be integrity",
    "start": "2041039",
    "end": "2047600"
  },
  {
    "start": "2043000",
    "end": "2083000"
  },
  {
    "text": "protected because as terminating a session could uh",
    "start": "2047600",
    "end": "2053440"
  },
  {
    "text": "pose a security problem if it was allowed to be initiated by someone else",
    "start": "2053440",
    "end": "2058560"
  },
  {
    "text": "some of you of course solves that by by an xml signature on the logout request message so now we're not only having a",
    "start": "2058560",
    "end": "2065358"
  },
  {
    "text": "key management issue on the idp we also have a key management issue on every single",
    "start": "2065359",
    "end": "2070638"
  },
  {
    "text": "application essentially logout request",
    "start": "2070639",
    "end": "2076240"
  },
  {
    "text": "the idp does its logout clears the session cookie and redirects back and says done",
    "start": "2076240",
    "end": "2083118"
  },
  {
    "start": "2083000",
    "end": "2161000"
  },
  {
    "text": "but typically we have more applications in a single sign-on scenario so in this case saml2 sends the logout",
    "start": "2083119",
    "end": "2090398"
  },
  {
    "text": "request and then the idp reiterates to the first client available which clears this",
    "start": "2090399",
    "end": "2097280"
  },
  {
    "text": "cookie which redirects back to the idp which relates to potentially another client",
    "start": "2097280",
    "end": "2102640"
  },
  {
    "text": "you get a number of readers here right and back and if any one of those fails this",
    "start": "2102640",
    "end": "2109280"
  },
  {
    "text": "is a very brittle solution if any one of those fails of course the entire logout just gets stuck you're half logged out",
    "start": "2109280",
    "end": "2114480"
  },
  {
    "text": "and don't know where you are as a user openly connect well it's using id token",
    "start": "2114480",
    "end": "2122720"
  },
  {
    "text": "hint that's clever it's just instead of having signatures it just sends back the id token because",
    "start": "2122720",
    "end": "2128400"
  },
  {
    "text": "that's a secret thing only the client application and the id identity server should ever know about",
    "start": "2128400",
    "end": "2136400"
  },
  {
    "text": "and uh open id connect is also developing more and more back channel logouts mechanisms",
    "start": "2136400",
    "end": "2143040"
  },
  {
    "text": "to deal with cross-site cooker restrictions on modern browsers",
    "start": "2143040",
    "end": "2148320"
  },
  {
    "text": "because front channel redirects with cookies simply don't work really well anymore",
    "start": "2148320",
    "end": "2153839"
  },
  {
    "text": "because browser vendors are more and more strict for privacy reasons to allow cookies in those scenarios",
    "start": "2153839",
    "end": "2161040"
  },
  {
    "start": "2161000",
    "end": "2283000"
  },
  {
    "text": "so i have a final scenario here i want to show you",
    "start": "2163200",
    "end": "2169760"
  },
  {
    "text": "now we are in norway you usually make fun of our suites right yeah",
    "start": "2169760",
    "end": "2175599"
  },
  {
    "text": "no never totally never okay",
    "start": "2175599",
    "end": "2181280"
  },
  {
    "text": "in sweden uh healthcare is a regional responsibility",
    "start": "2182000",
    "end": "2187680"
  },
  {
    "text": "and each region is independently setting up his healthcare and that was a good idea back in the 60s when they built",
    "start": "2187680",
    "end": "2194000"
  },
  {
    "text": "their own hospitals and different parts of sweden were quite different nowadays it also means that",
    "start": "2194000",
    "end": "2199280"
  },
  {
    "text": "each region have the right to set the up their own identity provider in their own",
    "start": "2199280",
    "end": "2205280"
  },
  {
    "text": "way that they want to so there's no centralized uh eid solution so you're laughing to us",
    "start": "2205280",
    "end": "2212400"
  },
  {
    "text": "swedes are you they're no centralized eid solutions instead we want everyone to be able to",
    "start": "2212400",
    "end": "2219040"
  },
  {
    "text": "work in the penalties we create a federation so to make this decentralized",
    "start": "2219040",
    "end": "2224880"
  },
  {
    "text": "solution work we publish a centralized aggregated metadata document that the",
    "start": "2224880",
    "end": "2229920"
  },
  {
    "text": "client application the service provider can read to get to know what identity providers exists",
    "start": "2229920",
    "end": "2235760"
  },
  {
    "text": "who should i trust what are the signing keys of each of them but still with the stu you have the problem that the client",
    "start": "2235760",
    "end": "2240960"
  },
  {
    "text": "application now that he knows what identifiers exists",
    "start": "2240960",
    "end": "2246079"
  },
  {
    "text": "and uh how the signing keys etc to validate them but it still don't know where to to",
    "start": "2246079",
    "end": "2252800"
  },
  {
    "text": "which one of them to redirect the user but remember this is good because it decentralized",
    "start": "2252800",
    "end": "2259520"
  },
  {
    "text": "to solve this would just add a centralized discovery service so first the user needs to be redirected",
    "start": "2259520",
    "end": "2265200"
  },
  {
    "text": "to the central discovery service which reiterates back with",
    "start": "2265200",
    "end": "2270480"
  },
  {
    "text": "where the user can pick identity provider which reader is back to the client application that can now make the redirect dance to",
    "start": "2270480",
    "end": "2277119"
  },
  {
    "text": "the right one let's have a look at how that works",
    "start": "2277119",
    "end": "2282440"
  },
  {
    "start": "2283000",
    "end": "2426000"
  },
  {
    "text": "so i'm signing out and choosing sign in i'll just clear the line here",
    "start": "2287839",
    "end": "2294000"
  },
  {
    "text": "and declare the network as well signing ensemble to federation",
    "start": "2294000",
    "end": "2301200"
  },
  {
    "text": "what happens is that i'm redirected to a discovery service",
    "start": "2301200",
    "end": "2307359"
  },
  {
    "text": "where i can pick what idp to to use",
    "start": "2307359",
    "end": "2312560"
  },
  {
    "text": "and uh you know what i'll just show you a real one this is when i'm trying to log into",
    "start": "2312560",
    "end": "2319520"
  },
  {
    "text": "the school attendance system of my kids so this is what a discovery service looks like",
    "start": "2319520",
    "end": "2327079"
  },
  {
    "text": "excellent user experience isn't it yeah okay here we they actually decided",
    "start": "2332000",
    "end": "2337680"
  },
  {
    "text": "to use pure pure i i query string parameters so redirect back",
    "start": "2337680",
    "end": "2344400"
  },
  {
    "text": "to the service provider and if we're following let's see i could",
    "start": "2344400",
    "end": "2351440"
  },
  {
    "text": "i just want the full doc yeah",
    "start": "2352000",
    "end": "2357040"
  },
  {
    "text": "so what it does is i call the discovery um that the discovery service just",
    "start": "2357040",
    "end": "2365040"
  },
  {
    "text": "sends me to redirect back to the identity provider the client application",
    "start": "2365119",
    "end": "2370160"
  },
  {
    "text": "with a hint with the entity id of the idp to use and",
    "start": "2370160",
    "end": "2375280"
  },
  {
    "text": "then the client application makes the reader wrecked out and then",
    "start": "2375280",
    "end": "2380480"
  },
  {
    "text": "we can once again tall one as fake swedish patient tolerant has had every tall one exists",
    "start": "2380480",
    "end": "2387119"
  },
  {
    "text": "in every uh medical record system and has had every possible the",
    "start": "2387119",
    "end": "2393599"
  },
  {
    "text": "possible health condition uh tall one has been pregnant and changed genders on the same",
    "start": "2394000",
    "end": "2400000"
  },
  {
    "text": "time uh let's look at and i'm signed in",
    "start": "2400000",
    "end": "2406720"
  },
  {
    "text": "so uh let's go back and see if this is the way",
    "start": "2406720",
    "end": "2413520"
  },
  {
    "text": "we can do it in some uh the way sweets do it",
    "start": "2413520",
    "end": "2419040"
  },
  {
    "text": "let's have a look where's my translation yeah so let's move to norway",
    "start": "2419040",
    "end": "2425920"
  },
  {
    "text": "what do you do here in norway well there are still for your healthy there",
    "start": "2425920",
    "end": "2431119"
  },
  {
    "start": "2426000",
    "end": "2470000"
  },
  {
    "text": "are still some different login methods behind it that is solved by introducing the common",
    "start": "2431119",
    "end": "2438000"
  },
  {
    "text": "login server a system redirects to it using open interconnect",
    "start": "2438000",
    "end": "2443040"
  },
  {
    "text": "it redirects to the selected provider and back and it just works and you don't need to",
    "start": "2443040",
    "end": "2449520"
  },
  {
    "text": "fuss with the client application being aware of the different login methods and interactions and configuration with the",
    "start": "2449520",
    "end": "2456079"
  },
  {
    "text": "different part parties so that this is much better there's one",
    "start": "2456079",
    "end": "2461920"
  },
  {
    "text": "part of the story though and there is actually a draft for",
    "start": "2461920",
    "end": "2467599"
  },
  {
    "text": "creating something like this uh an open at the connect federation like this except that the opening the connect",
    "start": "2467599",
    "end": "2474560"
  },
  {
    "start": "2470000",
    "end": "2493000"
  },
  {
    "text": "federation specification is actually a delegated signing chain of",
    "start": "2474560",
    "end": "2480240"
  },
  {
    "text": "doc metadata documents",
    "start": "2480240",
    "end": "2484160"
  },
  {
    "text": "i think the guy writing that draft was one of the swedes working in the federation",
    "start": "2485520",
    "end": "2492400"
  },
  {
    "start": "2493000",
    "end": "2632000"
  },
  {
    "text": "so don't adopt that stick to your healthy idea it works and it's open at",
    "start": "2493680",
    "end": "2499040"
  },
  {
    "text": "the connect and it's great so to summarize",
    "start": "2499040",
    "end": "2505200"
  },
  {
    "text": "my feelings around saml2 are really very simple",
    "start": "2505200",
    "end": "2511920"
  },
  {
    "text": "user benefit connect so that's 10 reasons to not use saml 2",
    "start": "2512240",
    "end": "2520960"
  },
  {
    "text": "i still expect to be working with it for a few more years because it",
    "start": "2520960",
    "end": "2526000"
  },
  {
    "text": "refused to die but my first question whenever a customer comes up and can't get in touch with me and says",
    "start": "2526000",
    "end": "2532319"
  },
  {
    "text": "i says they want help with samuel 2 my first question is always why don't you use open id connect",
    "start": "2532319",
    "end": "2540079"
  },
  {
    "text": "so any questions",
    "start": "2542880",
    "end": "2546160"
  },
  {
    "text": "yep when i think someone two will be gone",
    "start": "2549280",
    "end": "2556160"
  },
  {
    "text": "um i think i will be still supporting my libraries ten years from now at least um",
    "start": "2556160",
    "end": "2562240"
  },
  {
    "text": "i think they are so built into some environments that it will be really hard to replace them uh looking for example",
    "start": "2562240",
    "end": "2568800"
  },
  {
    "text": "at microsoft adf's active directory federation services that's the the pro that you put on top",
    "start": "2568800",
    "end": "2574000"
  },
  {
    "text": "of on-premise active directory to use federation it has support for ws fed it",
    "start": "2574000",
    "end": "2579760"
  },
  {
    "text": "has support for xaml 2 it has support for openld connect but configuring a open id connect on an",
    "start": "2579760",
    "end": "2586480"
  },
  {
    "text": "adf the service nightmare partially because they are not following",
    "start": "2586480",
    "end": "2592560"
  },
  {
    "text": "the convention with the issuers they actually have two different issuer ids",
    "start": "2592560",
    "end": "2598000"
  },
  {
    "text": "the issuer and the token issuer microsoft extension to open id connect which means it's incompatible with every",
    "start": "2598000",
    "end": "2604079"
  },
  {
    "text": "other client library and to fix that you need to rename the",
    "start": "2604079",
    "end": "2610240"
  },
  {
    "text": "federation identifier of your adf server if you configure it right from the start it will work because you can set it in a",
    "start": "2610240",
    "end": "2616800"
  },
  {
    "text": "way that those two identifiers match but if you didn't you have to do it afterwards and that way you break the",
    "start": "2616800",
    "end": "2622960"
  },
  {
    "text": "integration with all existing applications yes",
    "start": "2622960",
    "end": "2630119"
  },
  {
    "start": "2632000",
    "end": "2715000"
  },
  {
    "text": "these are not actual regions because in norway they didn't make the stupid decision that each region",
    "start": "2639680",
    "end": "2644800"
  },
  {
    "text": "would be independent enough to set up their own identity provider these are more suppliers of eids and rooney i",
    "start": "2644800",
    "end": "2651599"
  },
  {
    "text": "think you can correct me now if i'm guessing wrong but as far as i can see those",
    "start": "2651599",
    "end": "2656960"
  },
  {
    "text": "are different suppliers and i think that some of those are actually using xaml 2 from the central identity server and i",
    "start": "2656960",
    "end": "2664240"
  },
  {
    "text": "hope that for legacy reasons and that you're moving them to open id connect",
    "start": "2664240",
    "end": "2670318"
  },
  {
    "text": "yeah so two sample integrations they will die that makes me happy",
    "start": "2674480",
    "end": "2681200"
  },
  {
    "text": "that makes me happy",
    "start": "2681200",
    "end": "2684160"
  },
  {
    "text": "so any more questions or are we keen on early coffee",
    "start": "2687040",
    "end": "2692160"
  },
  {
    "text": "well thank you and i hope you will help me kill saml too",
    "start": "2697440",
    "end": "2703810"
  },
  {
    "text": "[Applause]",
    "start": "2703810",
    "end": "2710460"
  },
  {
    "text": "you",
    "start": "2715839",
    "end": "2717920"
  }
]