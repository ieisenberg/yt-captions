[
  {
    "text": "hello hi everyone my name is Eric nice to meet",
    "start": "7000",
    "end": "12040"
  },
  {
    "text": "you all uh I'm going to tell you why you don't want serverless oh boy it's going",
    "start": "12040",
    "end": "17880"
  },
  {
    "text": "to be fun I'm going to have to dodge the rocks and the cabbages and the tomatoes all right that's pretty spicy",
    "start": "17880",
    "end": "24640"
  },
  {
    "text": "take everyone loves serverless it's like the best thing ever right it's like the the most awesome thing ever",
    "start": "24640",
    "end": "30480"
  },
  {
    "text": "so spicy very spicy well you probably don't want servus okay",
    "start": "30480",
    "end": "38239"
  },
  {
    "text": "I'm already backpedaling a little bit you know what I'm not saying is that you",
    "start": "38239",
    "end": "44520"
  },
  {
    "text": "know serverus is a silver bullet you know and it's not certainly evil you",
    "start": "44520",
    "end": "50199"
  },
  {
    "text": "know it's not bad if you use serverless there are a lot of problems that are great for serverless and a lot of the problems I'm going to talk about today",
    "start": "50199",
    "end": "56920"
  },
  {
    "text": "can be solved with enough engineering just depends on how much engineering you want to do and how much knowledge you",
    "start": "56920",
    "end": "62840"
  },
  {
    "text": "want to gain about how Cloud providers run your thing uh so I just depends on a",
    "start": "62840",
    "end": "68600"
  },
  {
    "text": "lot so really what I want you to do today is think about your tools and you",
    "start": "68600",
    "end": "77200"
  },
  {
    "text": "know nowadays I see every problem at least in my company and others being",
    "start": "77200",
    "end": "83200"
  },
  {
    "text": "solved with serverless it's like oh we have this problem ah make a function we",
    "start": "83200",
    "end": "88600"
  },
  {
    "text": "have we have this other problem make another function pretty soon you have thousands and thousands and functions",
    "start": "88600",
    "end": "93759"
  },
  {
    "text": "and you're like maybe these aren't the best things to solve these problems if everything looks like a function maybe",
    "start": "93759",
    "end": "101000"
  },
  {
    "text": "it's all serverless I don't know so really what I want you to think about today is when",
    "start": "101000",
    "end": "107600"
  },
  {
    "text": "you're picking a tool know the limitations of your tool and maso's",
    "start": "107600",
    "end": "112640"
  },
  {
    "text": "Hammer really applies I feel like to all technology you know we have a lot of hype around a lot of different",
    "start": "112640",
    "end": "117759"
  },
  {
    "text": "Technologies now you know it used to be blockchain now it's AI now it's you know serus but really think about what you're",
    "start": "117759",
    "end": "124079"
  },
  {
    "text": "doing you know and why you're doing it and does it solve your problem",
    "start": "124079",
    "end": "129640"
  },
  {
    "text": "actually so I use the cloud I I promise I use server list I",
    "start": "129640",
    "end": "136800"
  },
  {
    "text": "promise you know I don't want this talk to be me complaining but it's going to be me complaining I'm going to be",
    "start": "136800",
    "end": "142720"
  },
  {
    "text": "yelling at the cloud for most of this talk uh so okay why should you listen to",
    "start": "142720",
    "end": "148400"
  },
  {
    "text": "me at all well uh I'm a full stack Dev I've been working in the educational software industry for about a decade uh",
    "start": "148400",
    "end": "156360"
  },
  {
    "text": "we build things on multiple clouds uh we service millions and millions of",
    "start": "156360",
    "end": "161599"
  },
  {
    "text": "students tens of millions of students a day um uh I uh I've worked in every",
    "start": "161599",
    "end": "168599"
  },
  {
    "text": "cloud there is um I'm a new dad so I've got dad energy so that's a reason to",
    "start": "168599",
    "end": "174920"
  },
  {
    "text": "trust me uh I make video games for fun so that's another reason you should listen listen to my talk about",
    "start": "174920",
    "end": "181000"
  },
  {
    "text": "serverless um and Shameless plug if you want to make video games in typescript I make a typescript game engine called",
    "start": "181000",
    "end": "187680"
  },
  {
    "text": "excaliber JS not important but it's fun I love cats I run",
    "start": "187680",
    "end": "193840"
  },
  {
    "text": "long distances for fun I have a marathon coming up uh that I'm not trained for so",
    "start": "193840",
    "end": "199120"
  },
  {
    "text": "that'll be fun and then I do math and physics for fun so there so there's that",
    "start": "199120",
    "end": "204159"
  },
  {
    "text": "that's why you should listen to me so okay so back to serverless what do I mean by that it's",
    "start": "204159",
    "end": "209799"
  },
  {
    "text": "pretty nebulous everyone has a serverless offering in their Cloud uh every cloud has something called",
    "start": "209799",
    "end": "216280"
  },
  {
    "text": "serverless and there's a few common characteristics so this is what I mean by serverless um first off it spins down",
    "start": "216280",
    "end": "224439"
  },
  {
    "text": "to zero so when you're not using it you're not paying for it all of your code goes down nothing is running that's",
    "start": "224439",
    "end": "232280"
  },
  {
    "text": "one quality another function level this is a little squishy like it depends on what you",
    "start": "232280",
    "end": "238159"
  },
  {
    "text": "count as a function as a thousand lines of function has 100 lines of function up",
    "start": "238159",
    "end": "243519"
  },
  {
    "text": "to you um there's no Hardware infrastructure uh to manage your upgrade",
    "start": "243519",
    "end": "250200"
  },
  {
    "text": "that's nice uh that's a pain in the butt I used to do that a lot and it's no fun",
    "start": "250200",
    "end": "257320"
  },
  {
    "text": "and it's no fun when it breaks so uh that's a great quality uh serverless is",
    "start": "257320",
    "end": "264680"
  },
  {
    "text": "metered so it's pay by usage whether it's compute time resources Etc or or",
    "start": "264680",
    "end": "269919"
  },
  {
    "text": "combination thereof um they seem to be metered and a lot of them not all of",
    "start": "269919",
    "end": "277160"
  },
  {
    "text": "them a lot of them seem to be event- driven or purport event- driven uh",
    "start": "277160",
    "end": "282199"
  },
  {
    "text": "architectures that seems to be serverless I literally read every one of",
    "start": "282199",
    "end": "288400"
  },
  {
    "text": "these Cloud offerings to try and figure out okay what do they all have in common this is kind of what I came up with so",
    "start": "288400",
    "end": "294440"
  },
  {
    "text": "okay what am I really getting at what am I really angry about okay I'm talking about functions so I'm talking about AWS",
    "start": "294440",
    "end": "300479"
  },
  {
    "text": "Lambda Azure functions Google Cloud functions uh Cloud flare Cloud flare",
    "start": "300479",
    "end": "306800"
  },
  {
    "text": "workers that's hard to say verel uh netlify what have you a lot of the a lot",
    "start": "306800",
    "end": "313400"
  },
  {
    "text": "of these have the same problems uh some of them have different trade-offs because they're built",
    "start": "313400",
    "end": "318560"
  },
  {
    "text": "differently okay so what are the problems so here's here's the six things",
    "start": "318560",
    "end": "327000"
  },
  {
    "text": "that I think are wrong with serverless and why you might want to consider not using it um I think it's not actually",
    "start": "327000",
    "end": "333440"
  },
  {
    "text": "that simple you know it's I don't think it's actually that simple to use and I'll tell you why uh I think it doesn't",
    "start": "333440",
    "end": "339479"
  },
  {
    "text": "have great developer experience and this is the biggest hill for me uh at my job",
    "start": "339479",
    "end": "345000"
  },
  {
    "text": "is if it's hard for developers to write software in it correctly then it's not a good tool it it makes more bugs than it",
    "start": "345000",
    "end": "352400"
  },
  {
    "text": "solves uh you know everyone talks about cold starts and we'll talk about that a little bit and performance um there's uh",
    "start": "352400",
    "end": "360240"
  },
  {
    "text": "an incentive misalignment with Cloud providers Cloud providers want to make money and so do",
    "start": "360240",
    "end": "365560"
  },
  {
    "text": "you um there's this myth of concurrency like these will get you huge huge",
    "start": "365560",
    "end": "373039"
  },
  {
    "text": "numbers maybe they might uh they're",
    "start": "373039",
    "end": "379880"
  },
  {
    "text": "cheap I don't think so they might be depending on what you're doing you might",
    "start": "379880",
    "end": "385080"
  },
  {
    "text": "get a really exciting Bill one day all right let's dig into",
    "start": "385080",
    "end": "390160"
  },
  {
    "text": "Simplicity um so I argue",
    "start": "390160",
    "end": "396560"
  },
  {
    "text": "that cus is a leaky abstraction um what I mean by that is you really need to",
    "start": "396560",
    "end": "402440"
  },
  {
    "text": "know how Azure built their function environment how AWS built their function",
    "start": "402440",
    "end": "407800"
  },
  {
    "text": "environment how Cloud uh Google Cloud functions built their function environment in order to adequately use",
    "start": "407800",
    "end": "413280"
  },
  {
    "text": "them they're not portable across different clouds very easily because they have different performance",
    "start": "413280",
    "end": "419039"
  },
  {
    "text": "characteristics um one thing that is leaky is database",
    "start": "419039",
    "end": "426960"
  },
  {
    "text": "connections are broken by default in like every cloud provider so why is this happening well it's because you get a",
    "start": "426960",
    "end": "432680"
  },
  {
    "text": "new execution context usually for each invocation of your function and for",
    "start": "432680",
    "end": "438960"
  },
  {
    "text": "traditional databases like MySQL postgress SQL Server you have connection",
    "start": "438960",
    "end": "444199"
  },
  {
    "text": "pooling problems so these execution contexts spin up for every request that",
    "start": "444199",
    "end": "449520"
  },
  {
    "text": "comes into the Lambda eats up a connection the connection doesn't get returned and then suddenly your database",
    "start": "449520",
    "end": "455080"
  },
  {
    "text": "has no connections anymore and your database Falls over that kind of sucks um now this is solvable so you know if",
    "start": "455080",
    "end": "463120"
  },
  {
    "text": "you run into this or you plan on connecting to my SQL or postrest database there's Solutions there's uh a",
    "start": "463120",
    "end": "469840"
  },
  {
    "text": "lovely package by Mr Jeremy Dy you're going to hear about him a lot today he's got server list MySQL um if you are",
    "start": "469840",
    "end": "478520"
  },
  {
    "text": "using postgress there's a lovely tool called PG bouncer which is kind of a reverse proxy for",
    "start": "478520",
    "end": "484560"
  },
  {
    "text": "connections really cool so I really recommend PG bouncer Amazon will sell you thing called RDS proxy and it's PG",
    "start": "484560",
    "end": "492280"
  },
  {
    "text": "bouncer wrapped up real nice um but you can do that so but you need to buy those",
    "start": "492280",
    "end": "497759"
  },
  {
    "text": "things you need to set those things up they're just it's just broken by default you want to use you want to use a database probably the other thing you",
    "start": "497759",
    "end": "505080"
  },
  {
    "text": "could do is use a cloud database so Cosmos or maybe or another database that's",
    "start": "505080",
    "end": "512200"
  },
  {
    "text": "not so concerned about connection pooling uh uh Dynamo DB and the like so",
    "start": "512200",
    "end": "518959"
  },
  {
    "text": "these databases don't really care about connection pools so much maybe that's that's your solution so just something",
    "start": "518959",
    "end": "525120"
  },
  {
    "text": "to think about I usually want to connect to a database",
    "start": "525120",
    "end": "531080"
  },
  {
    "text": "um when I said when you invocate a function you usually get a new execution",
    "start": "531080",
    "end": "537480"
  },
  {
    "text": "context well that can c some interesting stateful problems this has happened to",
    "start": "537480",
    "end": "542800"
  },
  {
    "text": "us um I'm not going to say how or when or who but it's easy to accidentally",
    "start": "542800",
    "end": "549800"
  },
  {
    "text": "hoist State into your execution context maybe you're running a python Lambda and you have a global variable somewhere or",
    "start": "549800",
    "end": "555800"
  },
  {
    "text": "C Lambda and you have some a static somewhere not saying this happened to us",
    "start": "555800",
    "end": "561480"
  },
  {
    "text": "but if you have a static somewhere it can easily hold on to state in between executions and start corrupting data in",
    "start": "561480",
    "end": "568079"
  },
  {
    "text": "your database if you were counting on each invocation being a separate context a separate instance of your function",
    "start": "568079",
    "end": "575079"
  },
  {
    "text": "it's not um so you can easily corrupt data across sessions uh so it's just",
    "start": "575079",
    "end": "580720"
  },
  {
    "text": "something to keep in mind and it's you know you just have to be aware of the Leaky abstraction that you are borrowing",
    "start": "580720",
    "end": "587760"
  },
  {
    "text": "compute from a cloud provider that is trying to reuse it's good it's good that they're trying to reuse execution",
    "start": "587760",
    "end": "593519"
  },
  {
    "text": "context that's that's like not a cold start that's a warm start but then you have this problem in the good case you",
    "start": "593519",
    "end": "600720"
  },
  {
    "text": "accidentally share a state so maybe that's not a problem for the senior Engineers but it might be for the",
    "start": "600720",
    "end": "607040"
  },
  {
    "text": "junior not great um you know cold starts are a",
    "start": "607040",
    "end": "614160"
  },
  {
    "text": "problem but uh a lot of people have written little things to Ping their",
    "start": "614160",
    "end": "619440"
  },
  {
    "text": "lambdas to keep them warm uh which arguably is really wild that you have to",
    "start": "619440",
    "end": "625480"
  },
  {
    "text": "do isn't it that we're being sold to service that you have to to write a thing to keep it warm isn't that",
    "start": "625480",
    "end": "635240"
  },
  {
    "text": "outrageous um there are things to S to solve this you can in AWS there's",
    "start": "635240",
    "end": "640440"
  },
  {
    "text": "something called provision concurrency you can pay them extra money and they'll keep it warm for you that's great uh",
    "start": "640440",
    "end": "647200"
  },
  {
    "text": "Azure uh has uh different service plans I think it's uh the premium tier are the",
    "start": "647200",
    "end": "654399"
  },
  {
    "text": "dedicated uh another one of my beefs is that the Azure pricing documents are incredible difficult to read um but you",
    "start": "654399",
    "end": "662120"
  },
  {
    "text": "can keep them warm by paying your cloud provider or you can spin something up to keep them warm and the fact that you",
    "start": "662120",
    "end": "668320"
  },
  {
    "text": "have a warm and a cold function is this weird leaky abstraction now that you need to know about to design good",
    "start": "668320",
    "end": "675720"
  },
  {
    "text": "software um what if everyone's favorite language",
    "start": "675720",
    "end": "680839"
  },
  {
    "text": "here is C obviously but what if your favorite language is like Zig like mine I love Zig or Lua like game devs out",
    "start": "680839",
    "end": "688040"
  },
  {
    "text": "there we love Lua or rust what if you're really into rust this can be tough",
    "start": "688040",
    "end": "693440"
  },
  {
    "text": "depending on your platform uh AWS makes this incredibly challenging if you want to run something that is not supported",
    "start": "693440",
    "end": "700920"
  },
  {
    "text": "um uh Lambda layers are extremely extremely painful I I challenge you to",
    "start": "700920",
    "end": "706680"
  },
  {
    "text": "go and read their documentation and Implement your own custom runtime in a day go for it I if you do it I'm proud",
    "start": "706680",
    "end": "714480"
  },
  {
    "text": "cuz I wasn't able to um the other thing is some of these functions will force",
    "start": "714480",
    "end": "720040"
  },
  {
    "text": "you into a custom runtime if your function gets too big so if in Lambda",
    "start": "720040",
    "end": "725639"
  },
  {
    "text": "for example if you have a function that's more than 50 meg you need to make your own custom runtime and guess what",
    "start": "725639",
    "end": "732480"
  },
  {
    "text": "happens with python all the time that especially if you're using like pandas",
    "start": "732480",
    "end": "739440"
  },
  {
    "text": "or you're using like a math library at all uh you easily bump into oh I need to",
    "start": "739440",
    "end": "745920"
  },
  {
    "text": "make my own custom Lambda layer in order to to run my supported python",
    "start": "745920",
    "end": "752839"
  },
  {
    "text": "code uh the next thing is like if you're doing your own custom runtime the errors that come out of it are incredibly",
    "start": "752839",
    "end": "759399"
  },
  {
    "text": "opaque like you're like random socket error and you're like I don't know what",
    "start": "759399",
    "end": "765160"
  },
  {
    "text": "that means in the context of this function because it's a leaky abstraction um if you",
    "start": "765160",
    "end": "772399"
  },
  {
    "text": "like WM I have good news cloudflare will let you run anything that compiles to WM so it actually makes it really easy so",
    "start": "772399",
    "end": "779560"
  },
  {
    "text": "cloudflare is great for that so if you can build it down to WM you can run it in Cloud flare really well um if you",
    "start": "779560",
    "end": "786120"
  },
  {
    "text": "like C++ no cold start problems you got you got",
    "start": "786120",
    "end": "791320"
  },
  {
    "text": "C++ um Azure is actually really great here uh in terms of making custom",
    "start": "791320",
    "end": "797600"
  },
  {
    "text": "runtimes because all you need to do is respond to a web request and stand up a",
    "start": "797600",
    "end": "803880"
  },
  {
    "text": "server and that's how you make a custom runtime stand up a server listen on a on a port you're good to go it's really",
    "start": "803880",
    "end": "809720"
  },
  {
    "text": "great so Azure is really good in that context okay leagy abstractions lots of",
    "start": "809720",
    "end": "815959"
  },
  {
    "text": "fun uh security these are not all of the security problem I mean software has",
    "start": "815959",
    "end": "821040"
  },
  {
    "text": "security you know lots of security problems and these are not unique to serverless but I feel like these are easy to have happen um if your function",
    "start": "821040",
    "end": "829240"
  },
  {
    "text": "is publicly known uh they can denile of service it uh so you have a bad actor",
    "start": "829240",
    "end": "836120"
  },
  {
    "text": "they decide okay I don't like this company for whatever ever reason I don't like you for whatever reason I'm going",
    "start": "836120",
    "end": "842519"
  },
  {
    "text": "to go ahead and hit that function as hard as I can and either in Amazon hit your",
    "start": "842519",
    "end": "848680"
  },
  {
    "text": "concurrency limit which affects your entire account your entire account can no longer run",
    "start": "848680",
    "end": "855480"
  },
  {
    "text": "functions yikes or we can denile your wallet um",
    "start": "855480",
    "end": "861440"
  },
  {
    "text": "say you have is like okay I've cut a deal with Azure I've got my dials turned",
    "start": "861440",
    "end": "866720"
  },
  {
    "text": "all the way up to 11 so I can scale as far as I want I'm Going To Deni your wallet and hit you so hard and get you a",
    "start": "866720",
    "end": "874160"
  },
  {
    "text": "giant bill um and maybe you can negotiate with Azure and they'll fix that for you and they probably will but",
    "start": "874160",
    "end": "880600"
  },
  {
    "text": "that's scary that they can do that you know what if you're just me you know",
    "start": "880600",
    "end": "886720"
  },
  {
    "text": "what if I'm just me and I get denied denied of wallet and all my money gets drained out of my bank account that",
    "start": "886720",
    "end": "893079"
  },
  {
    "text": "would be sad the other thing that can happen that has happened uh I won't say",
    "start": "893079",
    "end": "899399"
  },
  {
    "text": "who or when but uh improper access control is really easy to do uh when you",
    "start": "899399",
    "end": "905680"
  },
  {
    "text": "put something in a Lambda or in a function if you're not careful uh in AWS for example you",
    "start": "905680",
    "end": "912720"
  },
  {
    "text": "configure permissions for your code to reach out to other EDS Services well the",
    "start": "912720",
    "end": "918240"
  },
  {
    "text": "blast radius suddenly gets really high when it can poke other cloud services so this is a problem in other software too",
    "start": "918240",
    "end": "924360"
  },
  {
    "text": "it's not specifically for Lambda but it's for functions it's a little easier to do",
    "start": "924360",
    "end": "929639"
  },
  {
    "text": "you now have an incredibly High blast radius for code that you deploy",
    "start": "929639",
    "end": "935680"
  },
  {
    "text": "there okay developer experience it's pretty great developer",
    "start": "936319",
    "end": "943120"
  },
  {
    "text": "experience is pretty good uh honestly like you can deploy stuff really fast it's awesome you can run stuff locally",
    "start": "943120",
    "end": "949279"
  },
  {
    "text": "that works pretty good the tough part is testing yeah you can't really test it",
    "start": "949279",
    "end": "957759"
  },
  {
    "text": "you can write unit tests uh and those work pretty well I've been very successful writing unit tests for",
    "start": "957759",
    "end": "963920"
  },
  {
    "text": "lambdas and for Azure functions but how often do unit tests predict working",
    "start": "963920",
    "end": "970000"
  },
  {
    "text": "software when it's deployed I have like very low confidence that my unit tests",
    "start": "970000",
    "end": "975319"
  },
  {
    "text": "predict that my software will work in production the logic might be right I have very high confidence that the logic",
    "start": "975319",
    "end": "980839"
  },
  {
    "text": "is correct but I don't really know if it's going to work this is the same for any kind of software that you're running",
    "start": "980839",
    "end": "986480"
  },
  {
    "text": "in your CI you usually stand it up in a container you have maybe one or two end to end tests just to make sure that it",
    "start": "986480",
    "end": "991720"
  },
  {
    "text": "boots right that's really hard to do uh you can do this manually there's a great",
    "start": "991720",
    "end": "998440"
  },
  {
    "text": "tool that is around has been around for a while uh called adbs Lam di.net it'll",
    "start": "998440",
    "end": "1004319"
  },
  {
    "text": "stand up like a little web page for you and you can poke at it as if you're sending it like different events like",
    "start": "1004319",
    "end": "1009600"
  },
  {
    "text": "that you would see in Lambda uh Azure has something similar uh there's the new new Sam CI",
    "start": "1009600",
    "end": "1016240"
  },
  {
    "text": "which is great does a similar thing you can poke out it um uh there's serverless",
    "start": "1016240",
    "end": "1021720"
  },
  {
    "text": "offline which is a third party tool that you pay for um I think this plugin is free though uh same deal you can test it",
    "start": "1021720",
    "end": "1028760"
  },
  {
    "text": "locally manually but none of these run in CI as far as I know if they do let me",
    "start": "1028760",
    "end": "1035079"
  },
  {
    "text": "know um so a lot of what happens at my job is we deploy and pre uh I hope this",
    "start": "1035079",
    "end": "1043918"
  },
  {
    "text": "works I'm going to just throw it into a Dev environment and maybe that's not a problem for you if you have like you are",
    "start": "1043919",
    "end": "1050440"
  },
  {
    "text": "the only one in your Dev environment but if you have a shared environment like a shared OS account that is your Dev",
    "start": "1050440",
    "end": "1055600"
  },
  {
    "text": "environment that could be disruptive to other teams you know especially if you're a core service that might not be",
    "start": "1055600",
    "end": "1061280"
  },
  {
    "text": "good uh I was looking at recommendations for testing lambdas online and one of",
    "start": "1061280",
    "end": "1067600"
  },
  {
    "text": "the recommendations was don't just deploy it I'm like no don't do that",
    "start": "1067600",
    "end": "1073520"
  },
  {
    "text": "please please test it first so you're kind of stuck in either deployer prey or",
    "start": "1073520",
    "end": "1079480"
  },
  {
    "text": "test it manually and hope everything you caught everything you know that's not",
    "start": "1079480",
    "end": "1086480"
  },
  {
    "text": "great should you all right um churn so this might not be a",
    "start": "1087520",
    "end": "1095320"
  },
  {
    "text": "problem this actually is probably a good thing for like software security uh AWS and Azure force you to upgrade your",
    "start": "1095320",
    "end": "1102240"
  },
  {
    "text": "stuff that's great that's great for security if you have 2,000 lambdas and",
    "start": "1102240",
    "end": "1109039"
  },
  {
    "text": "Azure functions it is no longer great uh if you are a company is a gigantic",
    "start": "1109039",
    "end": "1115039"
  },
  {
    "text": "burden to go and upgrade all those things and make sure that they're working and then here's the here's the",
    "start": "1115039",
    "end": "1120559"
  },
  {
    "text": "python chart for Azure environment variables are",
    "start": "1120559",
    "end": "1127080"
  },
  {
    "text": "awesome EnV yeah I use that for a lot of stuff it works great doesn't work so",
    "start": "1127080",
    "end": "1134280"
  },
  {
    "text": "great in AWS um if you want to put environment",
    "start": "1134280",
    "end": "1139480"
  },
  {
    "text": "variables in there you have a 4 kiloby limit and you don't know that until you",
    "start": "1139480",
    "end": "1145200"
  },
  {
    "text": "hit it really um so you might be like okay I got to put aert in here uh for",
    "start": "1145200",
    "end": "1150360"
  },
  {
    "text": "whatever reason I'm going to put it in an environment variable I'm going to put my maybe my private key in there so I could check a signature or something uh",
    "start": "1150360",
    "end": "1157400"
  },
  {
    "text": "like I'm getting a message off of a queue I'm checking a signature I have a CT in there to check that Sig oops I",
    "start": "1157400",
    "end": "1164679"
  },
  {
    "text": "easily bump over 4K I have a lot of environment variables like I just have a ton like maybe I have",
    "start": "1164679",
    "end": "1171320"
  },
  {
    "text": "hundreds then I'm over the 4K limit and it doesn't work anymore uh you want to use",
    "start": "1171320",
    "end": "1178000"
  },
  {
    "text": "Secrets go ahead and buy our secret solution from your Cloud",
    "start": "1178000",
    "end": "1183200"
  },
  {
    "text": "vendor uh the other thing that's really tough with DX is observability is",
    "start": "1183200",
    "end": "1188360"
  },
  {
    "text": "incredibly challenging in serverless environments uh a lot of it requires coded modification so you need to go and",
    "start": "1188360",
    "end": "1194520"
  },
  {
    "text": "pepper your code with uh decorations whatever whatever framework you're using to get",
    "start": "1194520",
    "end": "1202039"
  },
  {
    "text": "clearer insights into how things are going and I 100% 100% if you're using serverless and",
    "start": "1202039",
    "end": "1208919"
  },
  {
    "text": "you don't have observability it's going to bite you you 100% need to have observability in",
    "start": "1208919",
    "end": "1214520"
  },
  {
    "text": "serverless uh you can maybe get away with it in other things without I love I love New Relic I love open Telemetry",
    "start": "1214520",
    "end": "1222240"
  },
  {
    "text": "definitely dig into open Telemetry that's the free open spec all of these other providers cost money",
    "start": "1222240",
    "end": "1229240"
  },
  {
    "text": "uh but they all work with open Telemetry um tracing request Flows In",
    "start": "1229240",
    "end": "1234360"
  },
  {
    "text": "serverless is really hard uh and if you have a request flow that goes through a message cue you now have to decorate",
    "start": "1234360",
    "end": "1240559"
  },
  {
    "text": "your message with the trace context so that you can trace those messages as",
    "start": "1240559",
    "end": "1245720"
  },
  {
    "text": "they flow through your system it's incredibly difficult uh there's easy pitfalls and",
    "start": "1245720",
    "end": "1254000"
  },
  {
    "text": "anti-patterns so the good the bad the ugly is a great blog post uh I recommend",
    "start": "1254000",
    "end": "1259640"
  },
  {
    "text": "you look at it uh this is the thing that happens is I call it the lambai lith",
    "start": "1259640",
    "end": "1265200"
  },
  {
    "text": "that's when you have a huge C service and you decide you know you know when we",
    "start": "1265200",
    "end": "1270679"
  },
  {
    "text": "move to the cloud we put everything from our VMS into containers and we just shipped it and it was not good same idea",
    "start": "1270679",
    "end": "1277440"
  },
  {
    "text": "we take our entire C service we throw it into a function and we hope for the best",
    "start": "1277440",
    "end": "1285120"
  },
  {
    "text": "this doesn't work so well because of jit so large code down large code jit you",
    "start": "1285120",
    "end": "1292360"
  },
  {
    "text": "normally pay that cost advertised over time in a container so containers running for period of time usually maybe",
    "start": "1292360",
    "end": "1300559"
  },
  {
    "text": "hours days you get to pay that cost over that runtime of that container now you",
    "start": "1300559",
    "end": "1305919"
  },
  {
    "text": "have each new execution context you're paying the cost of your jit every",
    "start": "1305919",
    "end": "1313720"
  },
  {
    "text": "time also you might have a large Cod code download that also impacts your",
    "start": "1313720",
    "end": "1318760"
  },
  {
    "text": "cold starts so if you have a lot of code to download into this Lambda it's going to take a long time and then your blast",
    "start": "1318760",
    "end": "1325840"
  },
  {
    "text": "radius again for security is a lot higher because now you have this huge service that now has permissions to God",
    "start": "1325840",
    "end": "1330960"
  },
  {
    "text": "knows what in your thing so it's very important that your uh permissions are tightly",
    "start": "1330960",
    "end": "1337279"
  },
  {
    "text": "scoped uh the orchestrator this is really challenging",
    "start": "1337279",
    "end": "1343799"
  },
  {
    "text": "to debug you have like one Lambda or one function and all of the things go through through it and bounce out of it",
    "start": "1343799",
    "end": "1350080"
  },
  {
    "text": "it's in you have super complicated dispatch uh you don't know what's causing the problem or where it's coming",
    "start": "1350080",
    "end": "1356320"
  },
  {
    "text": "from uh and your logs are a mess so don't do this uh things you can do",
    "start": "1356320",
    "end": "1362640"
  },
  {
    "text": "though uh I think uh Azure has uh State machines and durable functions those are",
    "start": "1362640",
    "end": "1367760"
  },
  {
    "text": "things to look at if you need to do like a workflow definitely look at those uh",
    "start": "1367760",
    "end": "1373200"
  },
  {
    "text": "AWS has something called Step functions look at that uh or",
    "start": "1373200",
    "end": "1378960"
  },
  {
    "text": "uh get a state machine library and do that if you need to do workflow um yeah",
    "start": "1378960",
    "end": "1386159"
  },
  {
    "text": "very complicated stuff uh I don't know if I need to tell you why this is",
    "start": "1386159",
    "end": "1391760"
  },
  {
    "text": "bad but try to debug this where is the problem like if I said ah the problem is",
    "start": "1391760",
    "end": "1397360"
  },
  {
    "text": "in there somewhere how do you find it one how do you find it without observability uh good luck observability",
    "start": "1397360",
    "end": "1403679"
  },
  {
    "text": "will give you a chance so observability very important uh you want distribut traces for sure uh this is this is",
    "start": "1403679",
    "end": "1412640"
  },
  {
    "text": "madness uh I mean honestly you could instead of like the function symbol up there we could just put uh you know",
    "start": "1412640",
    "end": "1419480"
  },
  {
    "text": "containers microservices same deal you know this is not unique necessarily to",
    "start": "1419480",
    "end": "1425279"
  },
  {
    "text": "functions but it is easy to do in functions uh it's easy to do in microservices don't do this um and if",
    "start": "1425279",
    "end": "1432440"
  },
  {
    "text": "you need to observability is is your helper here this one will cost you um I call",
    "start": "1432440",
    "end": "1439480"
  },
  {
    "text": "this one the invocation Loop uh this is this is like your classic infinite Loop",
    "start": "1439480",
    "end": "1444760"
  },
  {
    "text": "but uh instead of you know it using CPU Cycles it uh it chews through dollar",
    "start": "1444760",
    "end": "1451120"
  },
  {
    "text": "bills uh so say you have like a function that hits some blob store stores",
    "start": "1451120",
    "end": "1457000"
  },
  {
    "text": "something but oops it triggers an event on your function and then it goes and",
    "start": "1457000",
    "end": "1463200"
  },
  {
    "text": "puts something in your blob store and then it just goes and goes and goes and you go to sleep and then you wake up in",
    "start": "1463200",
    "end": "1469200"
  },
  {
    "text": "the next day with a very large Bill oops um now this is kind",
    "start": "1469200",
    "end": "1474480"
  },
  {
    "text": "of contrived and some Cloud providers now have protections for this in fact",
    "start": "1474480",
    "end": "1480679"
  },
  {
    "text": "AWS can detect simple stuff like this uh but if you have a more complicated Loop",
    "start": "1480679",
    "end": "1486799"
  },
  {
    "text": "you know bouncing through different services this might this might happen to you so be",
    "start": "1486799",
    "end": "1493640"
  },
  {
    "text": "aware um this is this is just Why just",
    "start": "1493640",
    "end": "1498679"
  },
  {
    "text": "have one you know this just makes it more complicated also you now have latency every hop you have latency every",
    "start": "1498679",
    "end": "1506080"
  },
  {
    "text": "hop you chew up if you're in AWS you've now just uh for the price of one you've used up four uh for concurrency uh",
    "start": "1506080",
    "end": "1515240"
  },
  {
    "text": "you've used up more execution uh uh if you're in function land you're charged",
    "start": "1515240",
    "end": "1521320"
  },
  {
    "text": "gigabyte second yeah more expensive this one is kind of a no-brainer but don't",
    "start": "1521320",
    "end": "1527559"
  },
  {
    "text": "block uh because you're Char you're on the meter right you're charged per gigabyte second uh this is going to cost you if",
    "start": "1527559",
    "end": "1535080"
  },
  {
    "text": "you sit and wait fire and forget do things in parallel don't block on stuff",
    "start": "1535080",
    "end": "1540399"
  },
  {
    "text": "just get in and get out in a function all",
    "start": "1540399",
    "end": "1545760"
  },
  {
    "text": "right a lot of stuff okay it was a lot of time to get to cold starts so I have a lot of other beef besides cold starts",
    "start": "1545760",
    "end": "1551960"
  },
  {
    "text": "cold starts are not great very not great um so",
    "start": "1551960",
    "end": "1559320"
  },
  {
    "text": "these numbers might be out of date um but they're probably in the right ballpark this is from uh Mel his blog",
    "start": "1559320",
    "end": "1566080"
  },
  {
    "text": "post on cold starts a really awesome blog post I encourage you to read it um",
    "start": "1566080",
    "end": "1571679"
  },
  {
    "text": "but every cloud provider has cold starts like that's just what's going to happen that's part of the part of the problem",
    "start": "1571679",
    "end": "1578320"
  },
  {
    "text": "so if you know if this is important for a customer workload you might want to rethink it you want to maybe use a",
    "start": "1578320",
    "end": "1584520"
  },
  {
    "text": "service you might want to use something else uh I wouldn't have a customer facing workload because you're going to have cold starts it's just going to",
    "start": "1584520",
    "end": "1590559"
  },
  {
    "text": "happen so if this is or maybe your customers don't care uh you know that your Azure function takes 5 Seconds you",
    "start": "1590559",
    "end": "1597760"
  },
  {
    "text": "know maybe that's okay but this is a moving Target it's getting better uh uh",
    "start": "1597760",
    "end": "1604279"
  },
  {
    "text": "the talk yesterday about uh uh what they've done in Azure functions they've done a lot of work to improve it so",
    "start": "1604279",
    "end": "1609960"
  },
  {
    "text": "definitely keep an eye on them uh you can do a hack so you don't",
    "start": "1609960",
    "end": "1616440"
  },
  {
    "text": "have to spend as much money with provision concurrency and keep a function",
    "start": "1616440",
    "end": "1621080"
  },
  {
    "text": "warm uh Azure documentation you can make a uh app",
    "start": "1621520",
    "end": "1628000"
  },
  {
    "text": "insights availability test and ping your function every 5 to 10 minutes this is",
    "start": "1628000",
    "end": "1633520"
  },
  {
    "text": "in their documentation um you can pay like I said",
    "start": "1633520",
    "end": "1640039"
  },
  {
    "text": "before a lot of money to keep them warm in AWS um the other thing that's wrong is",
    "start": "1640039",
    "end": "1647240"
  },
  {
    "text": "you don't know how long they're going to be warm for it depends on how busy Azure is that day or how busy ads is that day",
    "start": "1647240",
    "end": "1654320"
  },
  {
    "text": "you don't know how long things are going to be warm so you can't really count on it for performance characteristics if",
    "start": "1654320",
    "end": "1661039"
  },
  {
    "text": "they're important to you this is in their documentation for",
    "start": "1661039",
    "end": "1666720"
  },
  {
    "text": "AWS you your Lambda service retains execution context for a Nonet",
    "start": "1666720",
    "end": "1672080"
  },
  {
    "text": "non-deterministic amount of [Music] time okay",
    "start": "1672080",
    "end": "1678960"
  },
  {
    "text": "code gymnastics well you got to do stuff to your code to work around cold cold",
    "start": "1678960",
    "end": "1684200"
  },
  {
    "text": "starts especially if you're in like a jitted or an interpreted language um I",
    "start": "1684200",
    "end": "1689679"
  },
  {
    "text": "talked about Cloud flare using wasm you can use that to help get ahead of things",
    "start": "1689679",
    "end": "1695600"
  },
  {
    "text": "in Cloud flare uh in net 3 we have ready to run which is kind of like partial",
    "start": "1695600",
    "end": "1702840"
  },
  {
    "text": "ahead of time compilation what does that do that's that's converting a lot of your code into native code so that it",
    "start": "1702840",
    "end": "1708799"
  },
  {
    "text": "doesn't need to be jitted and then having some iil so that's what ready to run does and it's a little more flexible",
    "start": "1708799",
    "end": "1715799"
  },
  {
    "text": "because you can have iil still uh and it can do uh things on Linux 64 I think",
    "start": "1715799",
    "end": "1721840"
  },
  {
    "text": "it's only the latest Ubuntu and then uh windows 64",
    "start": "1721840",
    "end": "1727720"
  },
  {
    "text": "there's uh full ahead of time compilation and I think it's in Net 7 uh",
    "start": "1727720",
    "end": "1734559"
  },
  {
    "text": "7 plus you know don't quote me on that but this is full aot you don't get a jit you",
    "start": "1734559",
    "end": "1741760"
  },
  {
    "text": "just ship a binary but there are limitations you can't load assemblies on the Fly uh some regular Expressions uh",
    "start": "1741760",
    "end": "1748480"
  },
  {
    "text": "won't work uh there's a few other things you can't do Comm you can't do system reflection Amit you can't do runtime",
    "start": "1748480",
    "end": "1756480"
  },
  {
    "text": "code generation there's a huge list there's a big list of things you can't do but it'll really it really does help",
    "start": "1756480",
    "end": "1763320"
  },
  {
    "text": "with cold starts um like significantly this is like you're getting close to like C C++ territory you know single-",
    "start": "1763320",
    "end": "1770200"
  },
  {
    "text": "digit millisecond cold start so this is a thing you might have to do uh but this is gymnastics now that you need to do to",
    "start": "1770200",
    "end": "1777640"
  },
  {
    "text": "make this work there is some hope for JavaScript this was just posted in in",
    "start": "1777640",
    "end": "1786120"
  },
  {
    "text": "February uh uh Amazon has been building their own JavaScript runtime to help",
    "start": "1786120",
    "end": "1791840"
  },
  {
    "text": "with cold starts which is awesome the LRT um yeah so that's cool uh so there's",
    "start": "1791840",
    "end": "1800120"
  },
  {
    "text": "some hope uh they have some uh you know some really cool stuff they have a warning up there uh it's experimental they have uh",
    "start": "1800120",
    "end": "1808240"
  },
  {
    "text": "some really impressive numbers uh for like uh p99s um not terrible uh in fact I'd say",
    "start": "1808240",
    "end": "1817640"
  },
  {
    "text": "you probably could Serve customer workloads with those coldstar numbers that's pretty",
    "start": "1817640",
    "end": "1823600"
  },
  {
    "text": "awesome uh so I've been saying things about p99s what is it it's not an exercise routine uh so it's not",
    "start": "1823600",
    "end": "1830679"
  },
  {
    "text": "P90X so p99s are the 99% of your requests are better",
    "start": "1830679",
    "end": "1838840"
  },
  {
    "text": "than a certain number so these are really great for knowing if your you know average is Li to you um so on",
    "start": "1838840",
    "end": "1845519"
  },
  {
    "text": "average our requests are 100 milliseconds but you know every one out of 100 they they wait for a",
    "start": "1845519",
    "end": "1852000"
  },
  {
    "text": "minute that would be really rough to be that customer so p99s are really great for understanding if you are operating",
    "start": "1852000",
    "end": "1859600"
  },
  {
    "text": "within your bounds so like we like to stay below 200 milliseconds P99 below",
    "start": "1859600",
    "end": "1864919"
  },
  {
    "text": "200 milliseconds probably okay and in their documentation 1% are",
    "start": "1864919",
    "end": "1872240"
  },
  {
    "text": "going to be cold starts ouch so you got a design for that",
    "start": "1872240",
    "end": "1878720"
  },
  {
    "text": "okay lot of complaints uh this is going to be my uh conspiracy theory section it's okay because I brought my tinfoil",
    "start": "1878720",
    "end": "1886440"
  },
  {
    "text": "hat I don't know if yall have Weird Al here but he's awesome uh Cloud providers",
    "start": "1886440",
    "end": "1892440"
  },
  {
    "text": "are a business not your friend uh and we are a business usually and we would like",
    "start": "1892440",
    "end": "1898279"
  },
  {
    "text": "to hold on to our money so if you've ever tried to read the pricing guide either for Azure or",
    "start": "1898279",
    "end": "1905559"
  },
  {
    "text": "for AWS they kind of read like a multi-level marketing scheme of",
    "start": "1905559",
    "end": "1911000"
  },
  {
    "text": "different numbers and tear and requests and you know tell me which one of these",
    "start": "1911000",
    "end": "1916799"
  },
  {
    "text": "is actually an MLM chart uh versus a cloud pricing chart cuz the one on the right is an MLM",
    "start": "1916799",
    "end": "1924639"
  },
  {
    "text": "one they look the same don't they all right conspiracy theory uh",
    "start": "1924639",
    "end": "1931320"
  },
  {
    "text": "we'll sell you the fix uh they're broken but it's okay we got this uh provision concurrency we can sell you oh it's",
    "start": "1931320",
    "end": "1938320"
  },
  {
    "text": "broken it's okay we got this proxy thing for the database stuff uh we'll sell you",
    "start": "1938320",
    "end": "1943720"
  },
  {
    "text": "secret manager and parameter store for the environment variable problem we'll sell you uh we'll sell you tracing with",
    "start": "1943720",
    "end": "1949279"
  },
  {
    "text": "x-ray but then you got to use x-ray uh we'll sell you Azure monitor which is actually pretty great by the way I guess",
    "start": "1949279",
    "end": "1954840"
  },
  {
    "text": "I'm not so sad about that one um but if you're an uh not an Azure then it doesn't help you",
    "start": "1954840",
    "end": "1961639"
  },
  {
    "text": "um uh you know I'll these these functions are kind of vendor lock in as a service because you write the code and",
    "start": "1961639",
    "end": "1970840"
  },
  {
    "text": "they're all tied to the sdks of that particular platform so if you write some",
    "start": "1970840",
    "end": "1976880"
  },
  {
    "text": "Azure code that's using the Azure message queuing systems you can't Port",
    "start": "1976880",
    "end": "1982760"
  },
  {
    "text": "that to Lambda without rewriting it the sdks are completely different the the",
    "start": "1982760",
    "end": "1990480"
  },
  {
    "text": "behavior the call patterns are completely different so like even if you did like your best to isolate yourselves",
    "start": "1990480",
    "end": "1998880"
  },
  {
    "text": "from your dependencies In This Cloud platform you're going to have to rewrite big portions of your",
    "start": "1998880",
    "end": "2004880"
  },
  {
    "text": "code ouch okay",
    "start": "2004880",
    "end": "2010360"
  },
  {
    "text": "concurrency uh there's a lot of like literature out there there's a lot of people that are like oh it's infinite",
    "start": "2010360",
    "end": "2015440"
  },
  {
    "text": "scale it's not it's finite but if you have infinite money it can maybe get",
    "start": "2015440",
    "end": "2021600"
  },
  {
    "text": "close um uh and for example in AWS your limit for concurrency is a thousand and",
    "start": "2021600",
    "end": "2029480"
  },
  {
    "text": "you have to ask for more uh that capacity limit is not clearly",
    "start": "2029480",
    "end": "2034679"
  },
  {
    "text": "documented uh and we have to do crazy stuff to get around it like I have",
    "start": "2034679",
    "end": "2040600"
  },
  {
    "text": "to make a new AWS account for each application to get around it um and aure",
    "start": "2040600",
    "end": "2047480"
  },
  {
    "text": "functions kind of have the same thing you have to make a new plan for each function in order to not have noisy",
    "start": "2047480",
    "end": "2052878"
  },
  {
    "text": "neighbors uh consum consumption plan that is um so in AWS this is how uh",
    "start": "2052879",
    "end": "2061560"
  },
  {
    "text": "concurrency works so you pay for the initialization time and see now at six",
    "start": "2061560",
    "end": "2067839"
  },
  {
    "text": "and seven here we got warm functions but now we're at concurrency what is this concurrency 7 concurrency 5 okay that's",
    "start": "2067839",
    "end": "2074480"
  },
  {
    "text": "not so bad for one we have a cap of a thousand by default and you can ask them for uh a bump the first one's free",
    "start": "2074480",
    "end": "2083200"
  },
  {
    "text": "they'll do it for you without asking questions but try to do it the second time",
    "start": "2083200",
    "end": "2088599"
  },
  {
    "text": "um so in the default concurrency uh if I have requests that take 500 milliseconds",
    "start": "2088599",
    "end": "2094960"
  },
  {
    "text": "I can only do 2,000 requests per second in my entire",
    "start": "2094960",
    "end": "2101280"
  },
  {
    "text": "account I need to make new accounts and in fact like it's really important that",
    "start": "2101280",
    "end": "2106920"
  },
  {
    "text": "your code is fast because as soon as your code is taking longer than 500 milliseconds the amount of stuff you can",
    "start": "2106920",
    "end": "2113680"
  },
  {
    "text": "run gets lower and lower say you have a really you know underperforming team or underperforming function it's now",
    "start": "2113680",
    "end": "2121000"
  },
  {
    "text": "chewing up capacity for your entire account uh so that's not super",
    "start": "2121000",
    "end": "2129119"
  },
  {
    "text": "great you know what's really great at concurrency web servers web servers are",
    "start": "2129119",
    "end": "2134560"
  },
  {
    "text": "really good at this I can do way more than 2,000 requests per second in net",
    "start": "2134560",
    "end": "2139839"
  },
  {
    "text": "and in fact the tech and power for aspnet they have it at like 7 million so",
    "start": "2139839",
    "end": "2145400"
  },
  {
    "text": "that's pretty cool and that's I mean that's maybe not fair because they're probably running on benchmarking hardware and whatnot but I can guarantee",
    "start": "2145400",
    "end": "2152319"
  },
  {
    "text": "you I can do more than 2,000 requests per second in a container and I'm not going to get capped by the",
    "start": "2152319",
    "end": "2158359"
  },
  {
    "text": "account is that wild so as a thought exercise if you",
    "start": "2158359",
    "end": "2163760"
  },
  {
    "text": "needed to do the tech EMP power thing in AWS like you need or",
    "start": "2163760",
    "end": "2169920"
  },
  {
    "text": "8,47 AWS units of concurrency for your entire account and then you could just",
    "start": "2169920",
    "end": "2175560"
  },
  {
    "text": "do that one thing that's fun so Azure is harder to",
    "start": "2175560",
    "end": "2181760"
  },
  {
    "text": "understand I mean AWS has like weird limitations but Azure is a little harder to understand uh their documentation is",
    "start": "2181760",
    "end": "2189359"
  },
  {
    "text": "pretty dense and pretty hard to sort through they have two true server list",
    "start": "2189359",
    "end": "2194839"
  },
  {
    "text": "plans and those are the consumption plans there's the the current consumption plan which will spin down it",
    "start": "2194839",
    "end": "2200240"
  },
  {
    "text": "will spin down to zero and it'll spin up uh and then there's the flex consumption",
    "start": "2200240",
    "end": "2205800"
  },
  {
    "text": "plan which is in beta uh until the end of this year or earlier um but uh you'll",
    "start": "2205800",
    "end": "2213200"
  },
  {
    "text": "pay for it um by default they spin up a two Meg execution environment or Excuse",
    "start": "2213200",
    "end": "2219200"
  },
  {
    "text": "Me 2 gig execution environment you pay per gigabyte second that gigabyte in",
    "start": "2219200",
    "end": "2224319"
  },
  {
    "text": "there is the amount of memory that you have during function execution so keep that in mind if you want to do warm",
    "start": "2224319",
    "end": "2231760"
  },
  {
    "text": "stuff I think you need premium or dedicated if you want to do custom runtime that's what container apps are",
    "start": "2231760",
    "end": "2236920"
  },
  {
    "text": "for so Azure concurrency is a little different than AWS one so that's not",
    "start": "2236920",
    "end": "2242040"
  },
  {
    "text": "confusing at all but their concurrency actually makes more sense to me uh Azure concurrency means how many",
    "start": "2242040",
    "end": "2248200"
  },
  {
    "text": "of an execution task can I fit in a context so if I have concurrency one",
    "start": "2248200",
    "end": "2253440"
  },
  {
    "text": "it's the thing on the left I know it looks like a die um but AWS is one one: one so if you have concurrency one and",
    "start": "2253440",
    "end": "2260599"
  },
  {
    "text": "Azure you're looking like AWS if you have concurrency four you have four",
    "start": "2260599",
    "end": "2265760"
  },
  {
    "text": "tasks that can run in parallel in one execution context which is good because you save money uh because you're",
    "start": "2265760",
    "end": "2272079"
  },
  {
    "text": "stacking up more work in one context might be bad if you have stacks or shared statement maybe",
    "start": "2272079",
    "end": "2279440"
  },
  {
    "text": "but yeah okay are they cheap maybe uh",
    "start": "2279440",
    "end": "2286400"
  },
  {
    "text": "straight from the horse's mouth Amazon Prime video saved 90% by switching to",
    "start": "2286400",
    "end": "2295079"
  },
  {
    "text": "VMS which is mind-blowing they switched off of microservices and",
    "start": "2295079",
    "end": "2301599"
  },
  {
    "text": "functions to VMS and they save 90% the call is coming from inside the house",
    "start": "2301599",
    "end": "2307599"
  },
  {
    "text": "house it's inside the house they're switching themselves they're not using their own",
    "start": "2307599",
    "end": "2313800"
  },
  {
    "text": "stuff and they were you know it made okay so to be fair I'm kind of that's",
    "start": "2313800",
    "end": "2319560"
  },
  {
    "text": "hyperbole um to be completely Fair it made sense for them to do it at the time because they wanted that burst scale",
    "start": "2319560",
    "end": "2325960"
  },
  {
    "text": "they wanted to be able to burst and so they were willing to trade the cost of",
    "start": "2325960",
    "end": "2331280"
  },
  {
    "text": "that uh for that burst scale but then you know after their service was",
    "start": "2331280",
    "end": "2336359"
  },
  {
    "text": "successful they were able to to refactor and go back down but if you're not willing to trade that",
    "start": "2336359",
    "end": "2341839"
  },
  {
    "text": "cost uh maybe not",
    "start": "2341839",
    "end": "2347480"
  },
  {
    "text": "um yeah they went to a monolith um okay I did these numbers",
    "start": "2347480",
    "end": "2354720"
  },
  {
    "text": "this is my chart I wrote I there's an Excel document that drives this I used",
    "start": "2354720",
    "end": "2360079"
  },
  {
    "text": "the AWS cost calculator to chart how much per million per Quest per second um",
    "start": "2360079",
    "end": "2369560"
  },
  {
    "text": "lambdas will cost you and they're really competitive here you know if you are in",
    "start": "2369560",
    "end": "2374960"
  },
  {
    "text": "the super low request per second situation they're really competitive",
    "start": "2374960",
    "end": "2380119"
  },
  {
    "text": "like you know definitely look at a Lambda instead of using a container you know or a server like wow they're pretty",
    "start": "2380119",
    "end": "2387000"
  },
  {
    "text": "good I mean the lambas start to get a little more expensive the more memory you have and the longer they take because again Azure and",
    "start": "2387000",
    "end": "2394720"
  },
  {
    "text": "Lambda are priced identically so when I say Lambda or I say Azure you're build",
    "start": "2394720",
    "end": "2401599"
  },
  {
    "text": "the same they're they're super competitive with each other so um so",
    "start": "2401599",
    "end": "2407200"
  },
  {
    "text": "really it comes down to how much memory you use and how long does it take so if you're going to do something in functions do it fast and do it in aot",
    "start": "2407200",
    "end": "2413480"
  },
  {
    "text": "little about a memory um and just for Giggles um if you",
    "start": "2413480",
    "end": "2421000"
  },
  {
    "text": "were doing a million requests per day this is what it would cost you per month",
    "start": "2421000",
    "end": "2426520"
  },
  {
    "text": "for a service and this is one or for for a Lambda with an API Gateway the one at the",
    "start": "2426520",
    "end": "2431960"
  },
  {
    "text": "bottom is if if you had if you had a thousand lambdas in your company that's",
    "start": "2431960",
    "end": "2438839"
  },
  {
    "text": "a million dollars a month that's a million dollars",
    "start": "2438839",
    "end": "2443960"
  },
  {
    "text": "that's a lot um but you know if you had a thousand of these uh small ones it's",
    "start": "2443960",
    "end": "2449480"
  },
  {
    "text": "still a lot and if you're using this to solve all your problems it adds up yeah",
    "start": "2449480",
    "end": "2455000"
  },
  {
    "text": "okay it's a lot of complaints you know I saved the money to the B you know the end this uh this is also really annoying",
    "start": "2455000",
    "end": "2462960"
  },
  {
    "text": "like okay I've got this service now I'm talking to all these cloud services that are also metered they also costing me",
    "start": "2462960",
    "end": "2469400"
  },
  {
    "text": "money I've got API Gateway I got to pay for",
    "start": "2469400",
    "end": "2474599"
  },
  {
    "text": "egress surprise your money is gone this was just posted on LinkedIn five days",
    "start": "2475880",
    "end": "2482280"
  },
  {
    "text": "ago this poor man shipped an app called Cara",
    "start": "2482280",
    "end": "2488880"
  },
  {
    "text": "and he got a bill for 100k after a couple days this is versell so you know like",
    "start": "2488880",
    "end": "2497720"
  },
  {
    "text": "this is running on versell but it does make you kind of tighten up a little bit doesn't it it's like what if my thing is",
    "start": "2497720",
    "end": "2504040"
  },
  {
    "text": "suddenly popular is that okay I don't want it to be popular wait what's going on with me I want it to be",
    "start": "2504040",
    "end": "2511000"
  },
  {
    "text": "popular so like what do you do do you throttle yourself do you uh move off of",
    "start": "2511000",
    "end": "2516920"
  },
  {
    "text": "ser to control costs do you have to ship with a like a business model that can support this like how do you you know",
    "start": "2516920",
    "end": "2523720"
  },
  {
    "text": "move fast and break things uh and not go bankrupt you know yikes okay total cost of ownership",
    "start": "2523720",
    "end": "2533319"
  },
  {
    "text": "you got lockin you got maintenance you got this hidden complexity now that you have to deal with that you need to know",
    "start": "2533319",
    "end": "2539760"
  },
  {
    "text": "and then these hardto predict costs they they really are kind of iffy aren't",
    "start": "2539760",
    "end": "2545520"
  },
  {
    "text": "they okay I've complained a lot there are good",
    "start": "2545520",
    "end": "2550880"
  },
  {
    "text": "things all right this has all been a one-sided argument no there hasn't been",
    "start": "2550880",
    "end": "2556240"
  },
  {
    "text": "a serverless Defender up here be like you know you're wrong it's good for",
    "start": "2556240",
    "end": "2561400"
  },
  {
    "text": "everything and you know it is it is good for stuff you know I'm not going to say that it's it's bad at everything or that",
    "start": "2561400",
    "end": "2569559"
  },
  {
    "text": "you don't want to use it ever I use it I have on purpose used serverless what the",
    "start": "2569559",
    "end": "2575359"
  },
  {
    "text": "person up up here complaining about it for an hour has used it on purpose I have I have used it on purpose I know",
    "start": "2575359",
    "end": "2583119"
  },
  {
    "text": "you can't believe it I have used it on purpose all right here's one thing to",
    "start": "2583119",
    "end": "2590559"
  },
  {
    "text": "consider and maybe that example with Cara with the 100K bill is maybe the Counterpoint to this but it lets you go",
    "start": "2590559",
    "end": "2597240"
  },
  {
    "text": "fast you can get stuff out there without a lot of hassle you don't need to set up",
    "start": "2597240",
    "end": "2602720"
  },
  {
    "text": "like a build pipeline you don't need to set up a lot of stuff you don't need to set up like a kubernetes cluster you",
    "start": "2602720",
    "end": "2609000"
  },
  {
    "text": "don't need to set up a container cluster you don't need to set up load balancers you don't need to do this or that you",
    "start": "2609000",
    "end": "2614240"
  },
  {
    "text": "can just get stuff out there really fast and that might be important",
    "start": "2614240",
    "end": "2621520"
  },
  {
    "text": "especially if you're trying to disrupt um so speed to Market don't discount",
    "start": "2621520",
    "end": "2627359"
  },
  {
    "text": "that um that that is a strength you know it lets you turn capital expenditure",
    "start": "2627359",
    "end": "2635079"
  },
  {
    "text": "into operational expenditure as fast as possible so hey",
    "start": "2635079",
    "end": "2642440"
  },
  {
    "text": "if you need to do that accounting awesome um it's really good for latency",
    "start": "2642440",
    "end": "2647920"
  },
  {
    "text": "and sensitive stuff so if you don't care about the latency it's awesome it's so good like if you have a non-customer",
    "start": "2647920",
    "end": "2654000"
  },
  {
    "text": "facing app say you got internal apps and you don't care if your internal customers have a cold start every once",
    "start": "2654000",
    "end": "2660800"
  },
  {
    "text": "in a while that's fine you know or you pay for low provision concurrency like or",
    "start": "2660800",
    "end": "2667280"
  },
  {
    "text": "you keep like a small number warm you know something that doesn't break the bank that that's totally fine if you",
    "start": "2667280",
    "end": "2674640"
  },
  {
    "text": "have something that doesn't need instant responses like if it's not part of your large largest contentful paint maybe",
    "start": "2674640",
    "end": "2681920"
  },
  {
    "text": "it's okay to have something running in the back background maybe it's Telemetry that's fine use that for Telemetry um if",
    "start": "2681920",
    "end": "2688480"
  },
  {
    "text": "you can do it fast and uh and in low memory it it makes economic sense uh",
    "start": "2688480",
    "end": "2696400"
  },
  {
    "text": "qbas system they are really good at these cuz you don't need to run fast uh",
    "start": "2696400",
    "end": "2701760"
  },
  {
    "text": "you don't need to run like you don't need a lot of throughput you can just chew on them slowly this awesome they're really great",
    "start": "2701760",
    "end": "2709040"
  },
  {
    "text": "at this they're really good at doing outof band processing so like say I need to do something",
    "start": "2709040",
    "end": "2715200"
  },
  {
    "text": "later we'll just fire up a function it'll do something fine uh low throughput applications so",
    "start": "2715200",
    "end": "2725440"
  },
  {
    "text": "let's say I'm doing small batch processing less than 15 minutes in AWS less than 30 in Azure um if you got like",
    "start": "2725440",
    "end": "2733359"
  },
  {
    "text": "a batch process that's quick to complete do that if you've got like some sort of",
    "start": "2733359",
    "end": "2738480"
  },
  {
    "text": "ETL that you can run on a schedule and it runs in less than 15 minutes might be",
    "start": "2738480",
    "end": "2744240"
  },
  {
    "text": "a way to do it or you can chunk it might be a way to do it if you need lowcost",
    "start": "2744240",
    "end": "2750240"
  },
  {
    "text": "developer environments like we do because we have a lot of developers this makes a lot of sense",
    "start": "2750240",
    "end": "2756440"
  },
  {
    "text": "because it spins time zero right and developer environments are super low throughput right like how many how many",
    "start": "2756440",
    "end": "2761680"
  },
  {
    "text": "requests per second do you have on a developer environment like two a day like super low throughput and and in",
    "start": "2761680",
    "end": "2770400"
  },
  {
    "text": "that chart that we saw they're super competitive in that area um build",
    "start": "2770400",
    "end": "2775640"
  },
  {
    "text": "systems uh versell and netfi have really capitalized on this for a static site generation use these for static site",
    "start": "2775640",
    "end": "2782119"
  },
  {
    "text": "generation they're really good at that",
    "start": "2782119",
    "end": "2786558"
  },
  {
    "text": "um bursty stuff I will admit it's really good at bursty stuff like for example",
    "start": "2787599",
    "end": "2795640"
  },
  {
    "text": "like there's a game on and then a commercial for pizza shows up and then everyone orders a pizza in the country",
    "start": "2795640",
    "end": "2801640"
  },
  {
    "text": "at the same time that's where this is going to be great because Azure has a",
    "start": "2801640",
    "end": "2807839"
  },
  {
    "text": "huge Fleet of machines and they can handle vampire traffic like this where",
    "start": "2807839",
    "end": "2812880"
  },
  {
    "text": "they got the big teeth that hit you right in your wallet but if you you're willing to pay for it like this is a",
    "start": "2812880",
    "end": "2819520"
  },
  {
    "text": "solution for that problem like it you know if you're like Domino's Pizza and",
    "start": "2819520",
    "end": "2825400"
  },
  {
    "text": "you need to run like crazy requests all at the same time this might make sense like you need",
    "start": "2825400",
    "end": "2833040"
  },
  {
    "text": "to hit like you can't wait for containers to spin up or you're not unwilling to like provision the peak",
    "start": "2833040",
    "end": "2838680"
  },
  {
    "text": "like or you don't know you can't predict it's unpredictable like you can't uh",
    "start": "2838680",
    "end": "2843800"
  },
  {
    "text": "like maybe you can't predict when this happens to you but it does this is a great",
    "start": "2843800",
    "end": "2850720"
  },
  {
    "text": "opportunity okay so I've had held you captive do you want",
    "start": "2850720",
    "end": "2858240"
  },
  {
    "text": "serverless does every problem look like a nail so I really want you to think about your",
    "start": "2858240",
    "end": "2864119"
  },
  {
    "text": "tools before you use them there are some downsides but there are some upsides so",
    "start": "2864119",
    "end": "2869880"
  },
  {
    "text": "we're ending on a positive note I complained for an hour um and maybe it's",
    "start": "2869880",
    "end": "2875400"
  },
  {
    "text": "okay maybe it's bad but you know consider your",
    "start": "2875400",
    "end": "2880640"
  },
  {
    "text": "tools there is hidden complexity so just be aware that you'll need to understand",
    "start": "2880640",
    "end": "2885920"
  },
  {
    "text": "the Leaky abstraction there's some developer experience problems but you",
    "start": "2885920",
    "end": "2891480"
  },
  {
    "text": "can maybe get around them cold starts are a thing they're never going away so work around them or do the code",
    "start": "2891480",
    "end": "2897599"
  },
  {
    "text": "gymnastics to make them minimize them uh the cloud provider is not your",
    "start": "2897599",
    "end": "2903920"
  },
  {
    "text": "friend they're they're not your buddy uh concurrency is key and a lot of this",
    "start": "2903920",
    "end": "2910280"
  },
  {
    "text": "is going to be like Performance Tuning uh it's going to be negotiation",
    "start": "2910280",
    "end": "2915400"
  },
  {
    "text": "and it's going to be experimentation they're not cheap they",
    "start": "2915400",
    "end": "2920720"
  },
  {
    "text": "can be if you're in the right use case though so make sure that you have a use",
    "start": "2920720",
    "end": "2925960"
  },
  {
    "text": "case that is well suited or you're willing to pay that cost like that is a trade-off that you're making knowingly",
    "start": "2925960",
    "end": "2933040"
  },
  {
    "text": "not being surprised by it you are prepared for that cost",
    "start": "2933040",
    "end": "2938720"
  },
  {
    "text": "and there are plenty of other use use cases that are good I didn't list all of them I can't know",
    "start": "2939319",
    "end": "2945160"
  },
  {
    "text": "everything all right thank you guys that was a lot of fun T and",
    "start": "2946200",
    "end": "2951790"
  },
  {
    "text": "[Applause]",
    "start": "2951790",
    "end": "2957920"
  },
  {
    "text": "talk and I don't know how much time I've got but I if you want to ask questions we can do that later",
    "start": "2957920",
    "end": "2966559"
  }
]