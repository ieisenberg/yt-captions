[
  {
    "text": "hey Graham how you going mate good how are you have you been having a good conference so far I have an absolute ball May and",
    "start": "6360",
    "end": "13660"
  },
  {
    "text": "look it I cannot believe all these people have chosen the others over Troy home ah yeah this is just like chosen",
    "start": "13660",
    "end": "19330"
  },
  {
    "text": "the wrong session well it only beers actually it's gonna be awesome hey I've been numb I've been thinking",
    "start": "19330",
    "end": "26410"
  },
  {
    "text": "about doing a new startup okay and and and bear with me all right some idea is I'm gonna do machine learning and",
    "start": "26410",
    "end": "33340"
  },
  {
    "text": "service block chain for your frigerator dice dispersal so odd but I'm gonna call",
    "start": "33340",
    "end": "38500"
  },
  {
    "text": "it internet of things as well no no no no I'm I'm gonna call it the ice cream",
    "start": "38500",
    "end": "44170"
  },
  {
    "text": "van bought the ice cream what can i I've been writing some code that I really",
    "start": "44170",
    "end": "50399"
  },
  {
    "text": "quite excited about yeah and and I really respect your opinion so I knew if I could show it to you get some feedback",
    "start": "50399",
    "end": "55539"
  },
  {
    "text": "is that okay look yeah I'd love to I actually I really like looking at people's code I find it's a really good",
    "start": "55539",
    "end": "60730"
  },
  {
    "text": "way to sort of learn new techniques new things so yeah bring it up that's yeah well Simon random unit says unit tests",
    "start": "60730",
    "end": "66220"
  },
  {
    "text": "are awesome man right very brilliant yeah I love unit tests TDD all those kind of techniques really helped me like",
    "start": "66220",
    "end": "72340"
  },
  {
    "text": "load nice so this is the this is one of the tests that I've been writing I'm just want to like what you think mate",
    "start": "72340",
    "end": "77439"
  },
  {
    "text": "all right cool let's let's have a look so I'll just give me a sec another scan through okay so so you okay if I give",
    "start": "77439",
    "end": "86650"
  },
  {
    "text": "you a bit of kind of feedback on what I'm seeing here comments and still absolutely so I really like the way you're using a range act and assert to",
    "start": "86650",
    "end": "93490"
  },
  {
    "text": "lay out this code I think that's a really really nice technique because it makes it really obvious when I'm looking at it where you're saying up your state",
    "start": "93490",
    "end": "100689"
  },
  {
    "text": "what is it you're actually trying to do in your act part and then I can see what you're expecting to happen in the assert",
    "start": "100689",
    "end": "106509"
  },
  {
    "text": "so really like I always use Triple A it's awesome triple A's cool yeah it's really really good so yeah okay are you",
    "start": "106509",
    "end": "113799"
  },
  {
    "text": "okay if I give you some kind of comments where I think you know we could maybe change things make yeah that'd be great",
    "start": "113799",
    "end": "118990"
  },
  {
    "text": "all right cool so let's have a quick look through so we can see here we've got mock ice cream price calculator top top",
    "start": "118990",
    "end": "124479"
  },
  {
    "text": "returns okay customer provided by my name customers got a balance there's an ice",
    "start": "124479",
    "end": "130479"
  },
  {
    "text": "ice cream van so you're writing software for an ice cream van right yeah the ice cream van bought",
    "start": "130479",
    "end": "136010"
  },
  {
    "text": "it's coming into the right time of year so that's cool it's kind of nice and warm out there in Sydney it's gonna be warming perf I think this weekend and",
    "start": "136010",
    "end": "141980"
  },
  {
    "text": "probably a good time to buy ice cream so we're gonna try and sell Graham a Chop top yep so that's pretty cool then we're",
    "start": "141980",
    "end": "147650"
  },
  {
    "text": "gonna check the customer yen we're going to check they've received their type of chop tarp and we're going to check their",
    "start": "147650",
    "end": "154400"
  },
  {
    "text": "balance all right so there's a lot of more objects in here right you like my cops I love mark objects I use them for",
    "start": "154400",
    "end": "160760"
  },
  {
    "text": "everything it's all semantics really okay right right so you okay if I share a few kind of war",
    "start": "160760",
    "end": "167299"
  },
  {
    "text": "stories I've had with mock object begrimed here cuz you know I used to use them a lot as well but I find that I",
    "start": "167299",
    "end": "172970"
  },
  {
    "text": "don't use them nearly as often as I use kay okay they'll take you back like six or seven years I was working on a system in Perth",
    "start": "172970",
    "end": "180200"
  },
  {
    "text": "as she writing a secondhand trading system and we had a lot of code like this scared for our application so all",
    "start": "180200",
    "end": "187220"
  },
  {
    "text": "our tests had this kind of same arranged act assert with democ do you have this code copied in a lot of places as well",
    "start": "187220",
    "end": "193640"
  },
  {
    "text": "yeah I probably got about 30 tests to look reasonably similar with some of the different variations yeah right okay yeah so we have a very similar situation",
    "start": "193640",
    "end": "200239"
  },
  {
    "text": "we had about 3000 but most of them had a kind of block of mock setup code like this and yeah Wow okay um I found a few",
    "start": "200239",
    "end": "207260"
  },
  {
    "text": "issues which have kind of scared me away from using them so you look at that cell method down there yeah right so I know I",
    "start": "207260",
    "end": "213380"
  },
  {
    "text": "can see that we're trying to sell gram of Chop top but I can tell from these mock objects exactly what methods you",
    "start": "213380",
    "end": "219560"
  },
  {
    "text": "expect to be called when you're inside that cell method right yep so what I",
    "start": "219560",
    "end": "224750"
  },
  {
    "text": "found is that that's kind of really coupling this test to the actual implementation of the code that you're",
    "start": "224750",
    "end": "231260"
  },
  {
    "text": "writing behind it okay does that kind of make sense yeah I can see that your cell code is expecting all these particular",
    "start": "231260",
    "end": "237169"
  },
  {
    "text": "things yeah like find by name and go yeah right right so what happened for me was across",
    "start": "237169",
    "end": "242540"
  },
  {
    "text": "my 3,000 tests one very common method that most of my tests ended up in a change implementation and boom I broke",
    "start": "242540",
    "end": "250190"
  },
  {
    "text": "about a thousand tests in 1,000 tests and now that you mention it sometimes I",
    "start": "250190",
    "end": "255859"
  },
  {
    "text": "do break like lots of tests all at the same time right right okay worse still because that code was duplicated",
    "start": "255859",
    "end": "261470"
  },
  {
    "text": "everywhere I had to go through all of the methods that actually changed them and add the new mock call in there so",
    "start": "261470",
    "end": "267650"
  },
  {
    "text": "it's a bit of a nightmare it took us a few days to actually do across the team yeah it was a I found that you know that that brittle kind of",
    "start": "267650",
    "end": "273480"
  },
  {
    "text": "coupling between the actual tests what we're trying to test and the implementation was really really hard work and we're still it actually made us",
    "start": "273480",
    "end": "280200"
  },
  {
    "text": "quite reluctant to try refactorings going forward because we just knew that every time we changed the internals of",
    "start": "280200",
    "end": "285510"
  },
  {
    "text": "our domain we'd have this huge knock-on effects on our test case it kind of became unmaintainable so we had this",
    "start": "285510",
    "end": "291450"
  },
  {
    "text": "kind of light bulb moment I saw it for watching a talk a few years ago and I've sort of switched from having my unit",
    "start": "291450",
    "end": "297300"
  },
  {
    "text": "test testing the implementation of the code to be much more behavioral focused so the thing here is that I don't really",
    "start": "297300",
    "end": "304410"
  },
  {
    "text": "want my unit test to care about how the internals of my methods are implemented I want to try and test the behaviors",
    "start": "304410",
    "end": "310500"
  },
  {
    "text": "without coupling myself in that way interesting so yeah what would that look like should we do some virtual kind of coding",
    "start": "310500",
    "end": "316740"
  },
  {
    "text": "on the fly here it's just in paper it's kind of you imagine a keyboard here let's get going ok cool so let's have",
    "start": "316740",
    "end": "322290"
  },
  {
    "text": "all that what a class now you've got to kind of you know you could be a little bit surprised when you see some of this stuff so let's you know let's just kind",
    "start": "322290",
    "end": "328080"
  },
  {
    "text": "of go for it bit by bit also see how we end up so we're going to keep the test of range in the same way right so we're",
    "start": "328080",
    "end": "333570"
  },
  {
    "text": "going to have the triple a syntax still yep gonna keep it very very similar because that's that's really good so",
    "start": "333570",
    "end": "338670"
  },
  {
    "text": "let's set up some data okay so interesting yeah so in the original test class we were relying on",
    "start": "338670",
    "end": "344970"
  },
  {
    "text": "mock objects really heavily at this point of our range test whereas what we're gonna do here is actually create",
    "start": "344970",
    "end": "351000"
  },
  {
    "text": "real objects behind the scenes so these are our main classes yeah we're not using marks so you can imagine for",
    "start": "351000",
    "end": "356970"
  },
  {
    "text": "example when we're hitting save on one of these I will talk about object mover and things like that later but this is",
    "start": "356970",
    "end": "363180"
  },
  {
    "text": "kind of using pre cans objects that are correctly set up they've got stay attached to the met cetera and we can",
    "start": "363180",
    "end": "369750"
  },
  {
    "text": "twiddle them a little bit you can see Graham there's got a balance yeah ten down there but we're gonna save them and that could be in a real database it",
    "start": "369750",
    "end": "376020"
  },
  {
    "text": "could be in like an in-memory database or something like that okay but the point is we're trying to make this test kind of not so concerned about what's",
    "start": "376020",
    "end": "382740"
  },
  {
    "text": "going on behind the scenes so we just want to self to stay at the system okay cuz let's go through the act bit then okay what's this resolve here resolve",
    "start": "382740",
    "end": "390090"
  },
  {
    "text": "yeah right so I mean you've probably come across resolve when you're dealing with things like IOC containers right yeah okay so that's what I use oh yeah",
    "start": "390090",
    "end": "397740"
  },
  {
    "text": "all spikes cool right so I remember in the last test we actually nude up the service at this point",
    "start": "397740",
    "end": "403020"
  },
  {
    "text": "and we passed it in the mock objects right well that kind of coupled us to the actual constructor of that object as",
    "start": "403020",
    "end": "409350"
  },
  {
    "text": "well so there's all these little couplings going on it's a good point because actually whenever I add a new item to the constructor that breaks all",
    "start": "409350",
    "end": "415380"
  },
  {
    "text": "my tests I've to go on yeah exactly that okay so in this way we're going to kind of get a few things for free here we're",
    "start": "415380",
    "end": "422220"
  },
  {
    "text": "going to use resolve which means we're using a real ioc container that's being wired up with the real services as well",
    "start": "422220",
    "end": "428070"
  },
  {
    "text": "and it's using the real ioc configuration so we're testing a bit more production doing ice but it means",
    "start": "428070",
    "end": "433830"
  },
  {
    "text": "that if we start adding these extra parameters to the ice cream van it's not really gonna concern is that much",
    "start": "433830",
    "end": "439170"
  },
  {
    "text": "because we don't need to worry about that here we're just exhibiting this behavior which is selling a Chop top to",
    "start": "439170",
    "end": "444900"
  },
  {
    "text": "Gram okay what does the assert section look like yeah let's have a look shall we so this is really straightforward so",
    "start": "444900",
    "end": "452340"
  },
  {
    "text": "again if you remember in your code that you showed me earlier you were again sort of using mocks for all parts of",
    "start": "452340",
    "end": "458250"
  },
  {
    "text": "this so you were making sure that certain methods have been called on collections and things like there I'm",
    "start": "458250",
    "end": "463260"
  },
  {
    "text": "just looking at a collection here and I'm saying hey look grams ice creams do they have a top top inside them okay and",
    "start": "463260",
    "end": "468450"
  },
  {
    "text": "the balance it's just a number let's just check that it's the right number after we've done the behavior now if I",
    "start": "468450",
    "end": "473910"
  },
  {
    "text": "forgot and refactor that cell method you'd see that I wouldn't actually be changing any of this test because the",
    "start": "473910",
    "end": "479370"
  },
  {
    "text": "behavior of selling an ice cream doesn't change that often right but I should be free it will so go and refactor it and I",
    "start": "479370",
    "end": "484980"
  },
  {
    "text": "think this kind of makes that a little bit easier going forward this is really interesting I'm like you know I love",
    "start": "484980",
    "end": "491280"
  },
  {
    "text": "doing TDD and but what we were just testing there is multiple classes together yeah we all know that when",
    "start": "491280",
    "end": "497160"
  },
  {
    "text": "we're doing TDD we're doing unit tests and unit tests so when you test a single method on a single class right and you walk everything out so anymore sorry so",
    "start": "497160",
    "end": "505740"
  },
  {
    "text": "this go back up a little bit so you said that a unit test is testing like a single method on a on a single class right okay that's that's really",
    "start": "505740",
    "end": "512340"
  },
  {
    "text": "interesting where did you hear that everyone everyone knows that you know like Kent Beck and all of that sort of stuff okay all right okay ah look I mean",
    "start": "512340",
    "end": "520349"
  },
  {
    "text": "I have to admit I used to do this as well and I would mock out all the collaborators because the unit was the unit and that was the method or the",
    "start": "520350",
    "end": "526650"
  },
  {
    "text": "class price right yeah so then I watched a video by a guy called Ian Cooper a few years ago he did a talk called TDD where",
    "start": "526650",
    "end": "532620"
  },
  {
    "text": "did it all go wrong really recommend you go and watch it so yeah great great talk and taught me a lot about how I do my",
    "start": "532620",
    "end": "538410"
  },
  {
    "text": "testing today but more importantly it may be gone pick up the book I forgot to bring it with me I can only have it in",
    "start": "538410",
    "end": "543420"
  },
  {
    "text": "my bag but I believe me this time but anyway I've gone through that book from",
    "start": "543420",
    "end": "548940"
  },
  {
    "text": "front to back and one thing's really interesting because Ken always refers to a unit as a unit of behavior not an",
    "start": "548940",
    "end": "556020"
  },
  {
    "text": "actual method on a class really yeah and it's just one of those things that kind of people drop the behavior bit and just",
    "start": "556020",
    "end": "562560"
  },
  {
    "text": "kind of decided that the unit was the smallest thing that you could possibly test interesting but yeah the book kind of always talks about a unit of behavior",
    "start": "562560",
    "end": "568950"
  },
  {
    "text": "so it's kind of one of those cases Heon had a really good quote actually from the video that he had a test case per",
    "start": "568950",
    "end": "575490"
  },
  {
    "text": "class approach fails to capture the ethos for TDD adding a new class is not the trigger for writing tests the",
    "start": "575490",
    "end": "581310"
  },
  {
    "text": "trigger is implemented in requirement or a behavior the little classes and things that drop out of that should probably",
    "start": "581310",
    "end": "586980"
  },
  {
    "text": "come from your refactorings that you do later because again it's a great talk but it's okay to test you know more than",
    "start": "586980",
    "end": "592920"
  },
  {
    "text": "one thing together I think yeah and guys together so I guess we're talking about testing behavior we're talking about",
    "start": "592920",
    "end": "598590"
  },
  {
    "text": "testing you know multiple classes are you saying that we should just write your why test for everything then and",
    "start": "598590",
    "end": "604800"
  },
  {
    "text": "and just test the system from there oh right okay I hadn't kind of gone to that logical conclusion I guess as you start",
    "start": "604800",
    "end": "610380"
  },
  {
    "text": "sort of going up the abstraction scale you do hit UI test eventually don't you yeah look I'm not saying we shouldn't",
    "start": "610380",
    "end": "616770"
  },
  {
    "text": "write UI tests but I guess I should say we have to be a bit careful where we",
    "start": "616770",
    "end": "622110"
  },
  {
    "text": "decide to use your eye test okay can I give you a couple more stories yeah that'd be awesome I love because I've",
    "start": "622110",
    "end": "627210"
  },
  {
    "text": "been I've kind of been bitten by your eye test a little bit in the past so it's actually the same project that I was working on luckily there's no one in",
    "start": "627210",
    "end": "632610"
  },
  {
    "text": "here working on that project I did this talk in person people were kind of glaring at me so we had a project that",
    "start": "632610",
    "end": "641640"
  },
  {
    "text": "had about 300 UI tests right okay and they all took about 20 seconds to run so there yeah so the first thing that we",
    "start": "641640",
    "end": "649710"
  },
  {
    "text": "noticed is that as we wanted to go faster and deploy faster we were relying on these tests for a lot of our",
    "start": "649710",
    "end": "655680"
  },
  {
    "text": "confidence in regression so that meant that we had to weigh and we had to have a green run to go into production with",
    "start": "655680",
    "end": "661920"
  },
  {
    "text": "them and they were taking about three and a half hours to run by the time I left so that became like a real barrier",
    "start": "661920",
    "end": "667920"
  },
  {
    "text": "to actually deploying quickly so that was the first problem I fan with them they're not Tory ously",
    "start": "667920",
    "end": "673260"
  },
  {
    "text": "brittle I mean you've probably seen this right I've you've written you itis before yeah they are a bit of a pain yeah yeah you",
    "start": "673260",
    "end": "679950"
  },
  {
    "text": "know you change your UI slightly if you don't have your test laid out properly then that could cause it to break really easily",
    "start": "679950",
    "end": "685440"
  },
  {
    "text": "um then you get the kind of intermittent failures as well let's say you didn't quite put the fredbot sleep right or you",
    "start": "685440",
    "end": "691500"
  },
  {
    "text": "haven't waited for a piece of your UI to update that's one of those where you've got to try and get on to that and fix it",
    "start": "691500",
    "end": "696899"
  },
  {
    "text": "because if you don't fix these UHS quickly then they tend to sort of start dying as a whole and before you know it",
    "start": "696899",
    "end": "703020"
  },
  {
    "text": "you've got a suite of 300 tests and half of just read permanently but you still go alive because you lose all your",
    "start": "703020",
    "end": "708089"
  },
  {
    "text": "confidence in them yeah okay keeping on them like that though is really hard work because they take a lot of time to",
    "start": "708089",
    "end": "713399"
  },
  {
    "text": "look after them and maintain them so we had a rule as a team that we were not allowed to start working in the morning until we'd investigated any of our",
    "start": "713399",
    "end": "720480"
  },
  {
    "text": "failing UI tests okay so it took us a long time but we started to get a little bit better and a bit more confident in",
    "start": "720480",
    "end": "725550"
  },
  {
    "text": "them I had one really funny one cuz it kind of give you like a hilarious yeah it wasn't hilarious at the time we were",
    "start": "725550",
    "end": "731220"
  },
  {
    "text": "kind of tearing our hair out how do you I test and it felt over a period of about six months Wow work out what was",
    "start": "731220",
    "end": "738870"
  },
  {
    "text": "going on with this test and we had a test a UI test it was driving an analysis query behind the scenes okay so",
    "start": "738870",
    "end": "745529"
  },
  {
    "text": "what we found out in the end was that the UI was being exercised really quickly because it was automated so it's",
    "start": "745529",
    "end": "751620"
  },
  {
    "text": "click click click click click all the events were getting raised and every so often that audit crew wouldn't work like",
    "start": "751620",
    "end": "757140"
  },
  {
    "text": "the aggregate data that came out was just wrong the test failed and it took us a while before we realize what was",
    "start": "757140",
    "end": "762450"
  },
  {
    "text": "going on and under occasional circumstances maybe if you're lucky once every three or four days the test would",
    "start": "762450",
    "end": "769050"
  },
  {
    "text": "run at a certain time and the virtual machine that was actually writing out that audit events would resynchronize",
    "start": "769050",
    "end": "775260"
  },
  {
    "text": "its clock and when it resynchronized its clock it went back about naught point two of a second in time and because we",
    "start": "775260",
    "end": "781890"
  },
  {
    "text": "were flying events through it so quickly back not point two seconds put one event that should have always followed the",
    "start": "781890",
    "end": "788640"
  },
  {
    "text": "original event behind the original event which actually broke the analysis query Wow through virtual machine clock syncs now",
    "start": "788640",
    "end": "795390"
  },
  {
    "text": "am I saying really hard it was horrible yeah I will never get that time back in my life right it's gone dusted I'm I'm",
    "start": "795390",
    "end": "801449"
  },
  {
    "text": "43 now so you know how I wish I could have that time back man that sounds awfully painful so like yeah so you know you eye",
    "start": "801449",
    "end": "807870"
  },
  {
    "text": "tests whoa so what I'm getting from that is like UI tests are really painful we should just not write your chest at all",
    "start": "807870",
    "end": "813780"
  },
  {
    "text": "whenever I I wouldn't say that no I think that we have to think a little bit more pragmatically about when we use UI",
    "start": "813780",
    "end": "820440"
  },
  {
    "text": "tests oh hello my name is Rob Moore and I'm Graham Foster and today we're going",
    "start": "820440",
    "end": "825900"
  },
  {
    "text": "to be talking to you about advanced testing techniques the conversation that you just witnessed between us is one",
    "start": "825900",
    "end": "831960"
  },
  {
    "text": "that we've both had or a similar conversation many times with many people from many companies over many years and",
    "start": "831960",
    "end": "838830"
  },
  {
    "text": "it provides a lot of great context for what we're going to be discussing today now the things that we're talking about",
    "start": "838830",
    "end": "844740"
  },
  {
    "text": "today are essentially an amalgamation of thinking and and mindset and practices and techniques that we've developed over",
    "start": "844740",
    "end": "851490"
  },
  {
    "text": "the last few years that we've found to be highly effective in software testing that we do so let's do a quick recap of",
    "start": "851490",
    "end": "859020"
  },
  {
    "text": "that first 15 minutes I think I would argue it's more important and useful to test the behavior of our classes over",
    "start": "859020",
    "end": "865710"
  },
  {
    "text": "the actual implementation detail it's easier to write the tests I find and it's less rittle and easier to refactor",
    "start": "865710",
    "end": "871740"
  },
  {
    "text": "going forwards I think it's important that we get across to a unit at a unit test is not necessarily a method or a",
    "start": "871740",
    "end": "878400"
  },
  {
    "text": "class a unit is a unit of behavior and that can involve multiple classes collaborating with each other going on",
    "start": "878400",
    "end": "885390"
  },
  {
    "text": "from that a lot of people will talk about integration tests and a lot of people say that an integration test is",
    "start": "885390",
    "end": "890430"
  },
  {
    "text": "about testing multiple classes together I would disagree with that personally I think an integration test is where we",
    "start": "890430",
    "end": "896310"
  },
  {
    "text": "have disparate systems and we want to make sure that all those systems can communicate with each other so I'm okay",
    "start": "896310",
    "end": "901560"
  },
  {
    "text": "to call an integration test that but for me all unit tests can be working with multiple classes and UI testing is",
    "start": "901560",
    "end": "908820"
  },
  {
    "text": "useful but I think it's very very fragile and we should use it judiciously absolutely so I guess the question is",
    "start": "908820",
    "end": "916650"
  },
  {
    "text": "how do we test behavior we've got a little bit of an inkling as to how we",
    "start": "916650",
    "end": "921780"
  },
  {
    "text": "might do it through the pair programming exercise that we did with origami and there's a few things to talk about here",
    "start": "921780",
    "end": "927870"
  },
  {
    "text": "because if you think about a range act assert in a test where we're testing behavior the code that we're testing in",
    "start": "927870",
    "end": "934860"
  },
  {
    "text": "act is a lot more complicated then it might be for a more traditional implementation focused unit test so you",
    "start": "934860",
    "end": "941610"
  },
  {
    "text": "know there's a lot more complexity there and by association often the data that we have to set up in the arrange section",
    "start": "941610",
    "end": "947010"
  },
  {
    "text": "is going to be more complex and then the things that we're actually asserting on at the end are also more complex now",
    "start": "947010",
    "end": "952650"
  },
  {
    "text": "what this means is that we have to use techniques to deal with that complexity because if we don't and we've used the",
    "start": "952650",
    "end": "958260"
  },
  {
    "text": "proaches that we've always used we're going to be in for a world of pain it's not gonna be a very pleasant experience now for us the way that this manifests I",
    "start": "958260",
    "end": "967950"
  },
  {
    "text": "guess is a mindset of treating test code like production code we should be refactoring our test code we should be",
    "start": "967950",
    "end": "974490"
  },
  {
    "text": "using patterns in our test code so over the next few minutes we'll cover some of the patterns and the techniques that we",
    "start": "974490",
    "end": "980640"
  },
  {
    "text": "use and that we find highly effective for testing behavior first one of these",
    "start": "980640",
    "end": "986160"
  },
  {
    "text": "is something called subcutaneous tests now subcutaneous is a medical term it means under the skin and the",
    "start": "986160",
    "end": "992730"
  },
  {
    "text": "subcutaneous best is probably best explained through a diagram like this the basic idea is we're trying to skip",
    "start": "992730",
    "end": "999270"
  },
  {
    "text": "that UI layer that as we've already discussed is typically very slow and very fragile to test and then go in just",
    "start": "999270",
    "end": "1006140"
  },
  {
    "text": "below that so it might be like an MVC controller or an mvvm view or if you're using something like C Kuras it might be",
    "start": "1006140",
    "end": "1011750"
  },
  {
    "text": "a commander or a query or something like that and then we have our full production code underneath typically",
    "start": "1011750",
    "end": "1017300"
  },
  {
    "text": "powered by our production ioc container and any databases or data sources that",
    "start": "1017300",
    "end": "1022820"
  },
  {
    "text": "are owned and sort of completely isolated or within our our system we",
    "start": "1022820",
    "end": "1028459"
  },
  {
    "text": "actually hook them up as well because they're not external to our system they're part of our system they're part of our unit of behavior the one thing we",
    "start": "1028459",
    "end": "1035600"
  },
  {
    "text": "do do though is that we isolate any external systems and we mock them out because we're not trying to do an",
    "start": "1035600",
    "end": "1041390"
  },
  {
    "text": "end-to-end test or an integration test those are still useful but by doing that we would be adding some that slowness",
    "start": "1041390",
    "end": "1047959"
  },
  {
    "text": "and fragility that we're trying to avoid in this style of testing and we found that subcutaneous testing is a highly",
    "start": "1047959",
    "end": "1054080"
  },
  {
    "text": "effective way of writing unit tests against the system that are reasonably fast but allow us to test a behavior",
    "start": "1054080",
    "end": "1060140"
  },
  {
    "text": "rather than implementation detail awesome so I want to think a little bit",
    "start": "1060140",
    "end": "1066020"
  },
  {
    "text": "about when we're writing a test how do we side which type of tests to run because we have this subcutaneous test",
    "start": "1066020",
    "end": "1071810"
  },
  {
    "text": "and we do still have sort of lower-level unit tests which which may have some value in certain situations now going",
    "start": "1071810",
    "end": "1079460"
  },
  {
    "text": "back to include his talk he has this really great analogy he refers to it as shifting gears so who who's got a manual",
    "start": "1079460",
    "end": "1085850"
  },
  {
    "text": "car in here it's not many of ours in Europe you might even pause right everywhere over there yeah but you know",
    "start": "1085850",
    "end": "1091760"
  },
  {
    "text": "think of your car it's got a gear stick right so when we write in a subcutaneous test where we're really just testing the",
    "start": "1091760",
    "end": "1097190"
  },
  {
    "text": "behavior we've picked up a feature it's pretty clear how we're going to develop it there's nothing new in there we're in",
    "start": "1097190",
    "end": "1102530"
  },
  {
    "text": "sixth gear fifth gear I don't know top gear whatever your car is we're going we're speeding down the highway we can",
    "start": "1102530",
    "end": "1108230"
  },
  {
    "text": "just write a sub-q test it's pretty easy we can use that object from others and the test data builders to create our set",
    "start": "1108230",
    "end": "1113630"
  },
  {
    "text": "up data and just do nice assertions at the end so all good move along sometimes though we come across something that's a",
    "start": "1113630",
    "end": "1120080"
  },
  {
    "text": "little bit trickier so maybe like you're working in a trading environment or something like that and you've got to",
    "start": "1120080",
    "end": "1125180"
  },
  {
    "text": "implement some complex financial algorithms down there you might find that a behavioral test at that high",
    "start": "1125180",
    "end": "1131210"
  },
  {
    "text": "level is kind of almost too high up to start working out how to implement that algorithm so this is Ian's analogy of",
    "start": "1131210",
    "end": "1137810"
  },
  {
    "text": "shifting gears going down the stack so it's almost like as we start dropping down the gears we're starting to isolate",
    "start": "1137810",
    "end": "1143450"
  },
  {
    "text": "more and more of it what it is we're trying to test by mocking out more and more collaborators so the very lowest",
    "start": "1143450",
    "end": "1148730"
  },
  {
    "text": "level where we're literally back at the mock objects with just testing a little bit behavior subbing out all the",
    "start": "1148730",
    "end": "1154160"
  },
  {
    "text": "collaborators now once you've got this test is a couple of important things I think that you want to bear in mind the",
    "start": "1154160",
    "end": "1160610"
  },
  {
    "text": "first is that you still want that behavioral test which is covering this code path because that's still a very",
    "start": "1160610",
    "end": "1165650"
  },
  {
    "text": "important test it's kind of easy to reason with if it's easy to read to read and it's going to be easier to maintain",
    "start": "1165650",
    "end": "1171380"
  },
  {
    "text": "so you've got the code pass covered so you have to decide whether you want to actually keep these low-level tests or",
    "start": "1171380",
    "end": "1178190"
  },
  {
    "text": "delete them so I'll say it's okay in some situations to go and delete tests okay do that but there's a few things",
    "start": "1178190",
    "end": "1186830"
  },
  {
    "text": "you might want to think about before you decide whether or not to delete it the first is let's say you get new",
    "start": "1186830",
    "end": "1192020"
  },
  {
    "text": "people coming onto your team those a low-level test could actually be really useful to work out how something was",
    "start": "1192020",
    "end": "1197030"
  },
  {
    "text": "implemented or why it was implemented in that way so there could be users kind of a learning exercise so that's one",
    "start": "1197030",
    "end": "1202550"
  },
  {
    "text": "possible reason you might want to eat them but again they're going to be brittle they're going to inhibit you from refactoring that code later on and",
    "start": "1202550",
    "end": "1208790"
  },
  {
    "text": "because they're covered by a behavior test you can make that decision within your team whether or not to keep it or",
    "start": "1208790",
    "end": "1214220"
  },
  {
    "text": "to delete them what other reason they all go it's like a clash song the other reason why you might want to sorry there",
    "start": "1214220",
    "end": "1220160"
  },
  {
    "text": "is no you why you might want to not delete them is if you needed that low level of tests to actually design that",
    "start": "1220160",
    "end": "1226760"
  },
  {
    "text": "really complex code in the first place then when you're maintaining the code you might still need them to sort of",
    "start": "1226760",
    "end": "1233210"
  },
  {
    "text": "understand it when you dig in yep absolutely cool nice ok so who here does",
    "start": "1233210",
    "end": "1241520"
  },
  {
    "text": "red green refactor who does red green",
    "start": "1241520",
    "end": "1249280"
  },
  {
    "text": "red green factor who does red red green tractor it's kind of bit like that so what I'm doing red green refights that I",
    "start": "1249280",
    "end": "1256520"
  },
  {
    "text": "guess traditionally what I would do is I would write a failing test and I was quite good at writing my failing test writers came back said right a red test",
    "start": "1256520",
    "end": "1263570"
  },
  {
    "text": "and then he said make the test go green now I guess the bit that I kind of muddled up a little bit was when I made",
    "start": "1263570",
    "end": "1269179"
  },
  {
    "text": "the test go green I kind of made the test go agreeing with really beautiful code there's the code that I always",
    "start": "1269179",
    "end": "1274580"
  },
  {
    "text": "dreamed of it had all the power had my Gogh book next to me I got design patterns next to me I am gonna make that",
    "start": "1274580",
    "end": "1281090"
  },
  {
    "text": "test green but it's going to be beautiful by the time I've finished that bit of code now I've called this",
    "start": "1281090",
    "end": "1287000"
  },
  {
    "text": "liberated red green refactor and again it's going back to the TDD where did it all go wrong video because the in Cooper",
    "start": "1287000",
    "end": "1293210"
  },
  {
    "text": "makes a call out in that where he says that actually red green refactor is really three separate steps for a reason",
    "start": "1293210",
    "end": "1299720"
  },
  {
    "text": "so our brain struggles to work in two different modes at the same time and if",
    "start": "1299720",
    "end": "1304760"
  },
  {
    "text": "we try and make beautiful code when we try and make that test go green we're kind of almost pitching it against",
    "start": "1304760",
    "end": "1309920"
  },
  {
    "text": "itself because one half is just interested in solving the problem whereas the other half is trying to make it pretty and elegant so I challenge you",
    "start": "1309920",
    "end": "1317780"
  },
  {
    "text": "the next time you're writing a the green portion of your test to use the most horrible dirty disgusting columns they",
    "start": "1317780",
    "end": "1325670"
  },
  {
    "text": "just possibly go that far but don't think about design patterns literally",
    "start": "1325670",
    "end": "1332420"
  },
  {
    "text": "write a transaction script it's okay because your brain is going to work better just trying to make that go green now this has got some really",
    "start": "1332420",
    "end": "1339680"
  },
  {
    "text": "nice benefits because we're not going to forget the refactor stage and just leave the code like that right because that would be a really really awful thing to",
    "start": "1339680",
    "end": "1346340"
  },
  {
    "text": "do for the rest of our teammates instead we're going to use that refactor stage to actually move to all of the nice",
    "start": "1346340",
    "end": "1352340"
  },
  {
    "text": "elegant design patterns that we want inside our code base a couple of interesting things though when we're",
    "start": "1352340",
    "end": "1357800"
  },
  {
    "text": "doing refactorings at this stage we're not adding new behavior the behavior is already covered by the tests so there is",
    "start": "1357800",
    "end": "1364640"
  },
  {
    "text": "no reason to test the refactor code in any different way we don't need new tests for it and that refactored code",
    "start": "1364640",
    "end": "1371900"
  },
  {
    "text": "quite often shows up as internals or privates inside the modules because we",
    "start": "1371900",
    "end": "1377330"
  },
  {
    "text": "don't need to expose it to the outside world it's already tested by the behavior test and that's the important",
    "start": "1377330",
    "end": "1382490"
  },
  {
    "text": "part of it so next time you're going from green red to green think awful code and then refactor after that it's a",
    "start": "1382490",
    "end": "1389330"
  },
  {
    "text": "really really nice mindset to be in I find nice so we talked about how there's",
    "start": "1389330",
    "end": "1394880"
  },
  {
    "text": "a lot more complexity when we're testing behavior in each of the three sort of stages of your tests and we start with",
    "start": "1394880",
    "end": "1400670"
  },
  {
    "text": "the arranged section we need to create more complex data structures there's two",
    "start": "1400670",
    "end": "1405830"
  },
  {
    "text": "fairly well known patterns object mother and test data builder that exists in the ecosystem and they are highly effective",
    "start": "1405830",
    "end": "1412280"
  },
  {
    "text": "we've had a lot of success I guess in combining them together",
    "start": "1412280",
    "end": "1417650"
  },
  {
    "text": "and rather going than going into that in detail and you saw a little code snippet when we did the pair programming but",
    "start": "1417650",
    "end": "1422990"
  },
  {
    "text": "that link there goes to a talk that I did at ANZ decoders a couple of years back that where I go in detail about the",
    "start": "1422990",
    "end": "1429410"
  },
  {
    "text": "pros and cons of each of those two patterns and also the pros and cons of combining them and a little bit of a",
    "start": "1429410",
    "end": "1434660"
  },
  {
    "text": "deep dive into some of the code to actually implement that so I'll leave that with you but then if we look at the",
    "start": "1434660",
    "end": "1441710"
  },
  {
    "text": "act section as we said there's there's more complex code that we're actually testing and one of the things that we do",
    "start": "1441710",
    "end": "1448610"
  },
  {
    "text": "with subcutaneous tests is we actually mock out the external systems now",
    "start": "1448610",
    "end": "1454340"
  },
  {
    "text": "there's a beautiful pattern called VCR pattern that really helps us with this so if if we were say we were",
    "start": "1454340",
    "end": "1460880"
  },
  {
    "text": "talking to ten different external systems over a number of different tests if we were to try to hand roll all of",
    "start": "1460880",
    "end": "1466790"
  },
  {
    "text": "this sort of let's say it's a HTTP API we're going to hand roll all the JSON response that get returned be really tedious to",
    "start": "1466790",
    "end": "1473450"
  },
  {
    "text": "set that up but the beautiful thing about the VCR pattern is we can insert that as a cross-cutting concern flip",
    "start": "1473450",
    "end": "1479630"
  },
  {
    "text": "switch and then all of the calls actually get made to the real systems returning the real responses except they",
    "start": "1479630",
    "end": "1486140"
  },
  {
    "text": "get stashed away in the file system and committed into source control and then we flip the switch back and what happens",
    "start": "1486140",
    "end": "1491780"
  },
  {
    "text": "is from then on those sort of stashed mock respect so those stashed responses",
    "start": "1491780",
    "end": "1496850"
  },
  {
    "text": "get returned in a sort of mocked fashion so this is very quick to set up but then the great thing is if any of",
    "start": "1496850",
    "end": "1504230"
  },
  {
    "text": "our API contracts change with any of our dependencies we can flip the switch again rerun all the tests they might",
    "start": "1504230",
    "end": "1509780"
  },
  {
    "text": "take a little bit longer and there might be a little bit more brittle for that test run but you know you just do it a couple of times you'll get the new",
    "start": "1509780",
    "end": "1515600"
  },
  {
    "text": "responses on your file system you can commit those new responses flip the switch again and then they've all been",
    "start": "1515600",
    "end": "1520940"
  },
  {
    "text": "updated very quick very easy so it's a really nice pattern to you know to quickly set up those external dependency",
    "start": "1520940",
    "end": "1527810"
  },
  {
    "text": "marks and that's your quick question on that yes do you need the Betamax video",
    "start": "1527810",
    "end": "1533529"
  },
  {
    "text": "interestingly from memory one of them it's been ported to many languages the original implementations in Ruby I think",
    "start": "1533950",
    "end": "1540470"
  },
  {
    "text": "one of the ports was called Betamax I could be wrong right but it might oh yeah just something exactly my head",
    "start": "1540470",
    "end": "1545810"
  },
  {
    "text": "tells me that one of them was Betamax and then if we look at the assert section there's an incredibly powerful",
    "start": "1545810",
    "end": "1552710"
  },
  {
    "text": "technique that we use quite a lot called approval tests the JavaScript ecosystems",
    "start": "1552710",
    "end": "1557900"
  },
  {
    "text": "decided to call them snapshot tests for various reasons and the way that this",
    "start": "1557900",
    "end": "1562970"
  },
  {
    "text": "works is we're essentially using the human brain as an assertion mechanism that sounds very fancy these are the",
    "start": "1562970",
    "end": "1569360"
  },
  {
    "text": "human brain is an assertion making I did do you like plug in sort of plug into",
    "start": "1569360",
    "end": "1574400"
  },
  {
    "text": "the computer running the test thankfully no we don't need to do that no humans are harmed in the making like this talk",
    "start": "1574400",
    "end": "1579470"
  },
  {
    "text": "and the basic way that this works is you will give some sort of complex structure",
    "start": "1579470",
    "end": "1585950"
  },
  {
    "text": "so it might be a bunch of JSON or XML that you pass to an end point or might the HTML email you're sending to a",
    "start": "1585950",
    "end": "1592640"
  },
  {
    "text": "customer or you know it could be a complex object structure that you've turned into JSON and then you want to",
    "start": "1592640",
    "end": "1599120"
  },
  {
    "text": "check that it's the same as you expect it to be and the basic way that it works is that when the",
    "start": "1599120",
    "end": "1605159"
  },
  {
    "text": "a change to it you have a diff window pop-up on your machine you can manually inspect what it looks like and approve",
    "start": "1605159",
    "end": "1611879"
  },
  {
    "text": "it and then that gets stashed into the file system and committed to source control and will run on your computer",
    "start": "1611879",
    "end": "1617340"
  },
  {
    "text": "other dev machines and also the CI server and if there's a difference between what's generated and what was",
    "start": "1617340",
    "end": "1623340"
  },
  {
    "text": "stashed on the filesystem then the test fails now it's kind of hard to describe that in words and and it might be a bit",
    "start": "1623340",
    "end": "1629429"
  },
  {
    "text": "fuzzy for some of you so let's have a look at an actual example so this is some code that's quite similar to some",
    "start": "1629429",
    "end": "1634679"
  },
  {
    "text": "code that I wrote a few years back in the telecommunications context so essentially we're setting up a you know",
    "start": "1634679",
    "end": "1641309"
  },
  {
    "text": "shopping cart of some sort we've got NBN VoIP and an international calls bonus option we've got the arrange act to cert",
    "start": "1641309",
    "end": "1647549"
  },
  {
    "text": "in this case given when then that's the same thing it's a subcutaneous test against you know some sort of MVC",
    "start": "1647549",
    "end": "1652679"
  },
  {
    "text": "controller a check out controller so we're going to execute the index action which is posting to the checkout and",
    "start": "1652679",
    "end": "1659580"
  },
  {
    "text": "then this here is where we're doing our assertion we grab out the mock provisioning system from our CR from our",
    "start": "1659580",
    "end": "1665190"
  },
  {
    "text": "ioc container and we pull out the request that should be in there from that checkout having been posted and",
    "start": "1665190",
    "end": "1671970"
  },
  {
    "text": "then we've got this magic line at the end should match approved and that's all we need that's kind of crazy but let's",
    "start": "1671970",
    "end": "1678239"
  },
  {
    "text": "look at an example using so any assert statements at that point in time checking for different properties and",
    "start": "1678239",
    "end": "1683759"
  },
  {
    "text": "things absolutely right so in this example let's say I've done some some",
    "start": "1683759",
    "end": "1688889"
  },
  {
    "text": "coding maybe I was a bit tired I didn't do a very good job of it and so this is what I get now we can say here this is",
    "start": "1688889",
    "end": "1696359"
  },
  {
    "text": "the the JSON payload that sent to the provisioning system that sets up the MDM and the VoIP and the phone line all",
    "start": "1696359",
    "end": "1701639"
  },
  {
    "text": "those sorts of things now we can see here our international calls bonus option has actually disappeared so I've",
    "start": "1701639",
    "end": "1708269"
  },
  {
    "text": "done something very wrong there and we can see here that the work phone is now actually the same as the home phone",
    "start": "1708269",
    "end": "1713909"
  },
  {
    "text": "rather than what it should have been so I've obviously made a couple of mistakes here in this instance but the great",
    "start": "1713909",
    "end": "1719429"
  },
  {
    "text": "thing about this is I can look at it and the context is there I can immediately see what I've done wrong I messed up the",
    "start": "1719429",
    "end": "1725759"
  },
  {
    "text": "where clause on the link expression and when I rewrote that mapping code I clearly used the wrong dot on the intellisense for the work phone there so",
    "start": "1725759",
    "end": "1732629"
  },
  {
    "text": "I can instantly know where I need to go and fix that code it's very quick you just said that",
    "start": "1732629",
    "end": "1738610"
  },
  {
    "text": "normally you know India in the past you'd have lots and lots of asserts for something like this maybe you'd have one per per property so you don't put 50 you",
    "start": "1738610",
    "end": "1745030"
  },
  {
    "text": "know 20 50 a cert something like that in that instance if one of them goes wrong I'm looking at a line number and I'm",
    "start": "1745030",
    "end": "1750730"
  },
  {
    "text": "like looking down and it's like you know the the work phone you know and and and I can't immediately see what's wrong",
    "start": "1750730",
    "end": "1756940"
  },
  {
    "text": "there it's gonna take me a lot longer to actually diagnose what's wrong yeah if you've got one assert per method if you're kind of in that sort of",
    "start": "1756940",
    "end": "1762520"
  },
  {
    "text": "enterprise where they have this has actually saved my bacon in other ways as",
    "start": "1762520",
    "end": "1768429"
  },
  {
    "text": "well like I've had a situation where one of these complex data objects we've added another object to it and there's",
    "start": "1768429",
    "end": "1775030"
  },
  {
    "text": "somebody forgot to go and put some asserts on that object its forgot its existence and then you're not actually",
    "start": "1775030",
    "end": "1780160"
  },
  {
    "text": "the test is still passing even though you're breaking those properties whereas this kind of is future proofing that",
    "start": "1780160",
    "end": "1786040"
  },
  {
    "text": "when you add model objects they just pop up instantly so it's obvious that something's changed on that structure so",
    "start": "1786040",
    "end": "1791860"
  },
  {
    "text": "it's really really powerful it works for images as well right yeah good point yes it does yeah so yeah",
    "start": "1791860",
    "end": "1797440"
  },
  {
    "text": "incredibly powerful technique highly recommend you use it now let's take a step back we've been talking about",
    "start": "1797440",
    "end": "1803860"
  },
  {
    "text": "testing behavior but in in reality we're actually talking about something a little bit different a little bit broader and something that we call",
    "start": "1803860",
    "end": "1810130"
  },
  {
    "text": "pragmatic testing and the basic idea behind it is when you're writing a test or deciding that you want to write a",
    "start": "1810130",
    "end": "1815500"
  },
  {
    "text": "test of what kind of test you want to write you should actually rather than going well this is the way we've always done it like a little sheep or you know",
    "start": "1815500",
    "end": "1823570"
  },
  {
    "text": "I'm gonna write this test because I'm writing a test or whatever it might be we actually stop and think about the",
    "start": "1823570",
    "end": "1829419"
  },
  {
    "text": "test that we're writing and the context within we're writing it and make a decision about does this test deliver me",
    "start": "1829419",
    "end": "1835059"
  },
  {
    "text": "value is it giving me confidence or some other thing that is actually valuable to me and my team now there's a really",
    "start": "1835059",
    "end": "1841630"
  },
  {
    "text": "great talk by Jimmy Bogart in I think it was the same NDC I was low conference that the Ian Cooper talk was in I think",
    "start": "1841630",
    "end": "1848290"
  },
  {
    "text": "it was so right I was like twenty thirteen or twelve one of the two and he had a really great quote that sums this",
    "start": "1848290",
    "end": "1853390"
  },
  {
    "text": "up for me really well the ultimate goal here is to ship code it's not to write tests tests are just a means to the end",
    "start": "1853390",
    "end": "1859809"
  },
  {
    "text": "of shipping code we can have a hundred percent code coverage and no one use our product or we can have zero percent code",
    "start": "1859809",
    "end": "1865330"
  },
  {
    "text": "coverage and we can be a millionaire you know there's no correlation between",
    "start": "1865330",
    "end": "1871260"
  },
  {
    "text": "the two okay so pragmatic testing kind of says",
    "start": "1871260",
    "end": "1876960"
  },
  {
    "text": "that we don't always have to write all the tests that we've been writing previously so what does that mean in",
    "start": "1876960",
    "end": "1882000"
  },
  {
    "text": "terms of when do we and how do we decide whether to write your tests or not I saw talk at test West a few years ago",
    "start": "1882000",
    "end": "1888570"
  },
  {
    "text": "by a lady called Sam Connelly who I believe was working at Tyrell at the time and she had a great talk on",
    "start": "1888570",
    "end": "1894030"
  },
  {
    "text": "deciding whether or not to write a UI test and a very simple system for helping you to make that decision um so",
    "start": "1894030",
    "end": "1900660"
  },
  {
    "text": "you can see it here it's really straightforward she had a simple graph on the y-axis he said what is going to",
    "start": "1900660",
    "end": "1906960"
  },
  {
    "text": "be the impact to our business if this feature we are delivering breaks and then on the x-axis he said how often is",
    "start": "1906960",
    "end": "1914250"
  },
  {
    "text": "his feature you're going to get used so it's pretty easy for most features to put them somewhere on that graph but the",
    "start": "1914250",
    "end": "1920730"
  },
  {
    "text": "really really clever part and it's such a simple thing I wish I had thought of this if she drew a couple of diagonal",
    "start": "1920730",
    "end": "1925890"
  },
  {
    "text": "lines down here and she said basically if you're really far to the left ie number four contact us much she's going",
    "start": "1925890",
    "end": "1933720"
  },
  {
    "text": "to happen to your business if the contact Oz link is broken on your website people can find it on Google or somewhere else and it's probably not",
    "start": "1933720",
    "end": "1939960"
  },
  {
    "text": "going to happen that often because people don't click on contact us as much as they're going to exercise other features in your application so don't",
    "start": "1939960",
    "end": "1946380"
  },
  {
    "text": "write a UI test for it it's okay it's a test it's just gonna possibly be slow hold you back be brittle you're gonna",
    "start": "1946380",
    "end": "1952080"
  },
  {
    "text": "spend time fixing it don't write it it's not worth it now as you start to move up this graph",
    "start": "1952080",
    "end": "1957120"
  },
  {
    "text": "towards the right-hand side and you pass this threshold here then options features 2 & 6 transfer funds and login",
    "start": "1957120",
    "end": "1964080"
  },
  {
    "text": "well look if you're a bank and transfer funds is broken that's a huge impact to your business right and that's going to",
    "start": "1964080",
    "end": "1970140"
  },
  {
    "text": "get used a lot as well so you probably want to make sure that you've got some decent UI tests around that because they're going to give you more",
    "start": "1970140",
    "end": "1975540"
  },
  {
    "text": "confidence so it's a really really simple idea for this sliding room to our UI test or not yep so another thing that",
    "start": "1975540",
    "end": "1984059"
  },
  {
    "text": "we often think about in terms of how to decide what kind of tests are on a right is a concept that we call speed versus",
    "start": "1984059",
    "end": "1990540"
  },
  {
    "text": "confidence now in this context when we say speed we mean you've got some sort of tests wait how long does it take from",
    "start": "1990540",
    "end": "1995910"
  },
  {
    "text": "starting to run that test wait to when that test suite finishes and then confidence once you've finished",
    "start": "1995910",
    "end": "2001730"
  },
  {
    "text": "running their test suite how confident are you that there is a bug in your code or put another way how confident are you",
    "start": "2001730",
    "end": "2006890"
  },
  {
    "text": "to let your product owner click the button to the play to production now if we do some very scientific graphing of",
    "start": "2006890",
    "end": "2013820"
  },
  {
    "text": "this and we start with manual testing and automated UI testing these exercise",
    "start": "2013820",
    "end": "2018890"
  },
  {
    "text": "the system on behalf of the user so they give us a lot of confidence but they're pretty slob mm-hmm yeah now in",
    "start": "2018890",
    "end": "2026090"
  },
  {
    "text": "comparison if we look at an implementation focus test like the one we had towards the very beginning of the",
    "start": "2026090",
    "end": "2031190"
  },
  {
    "text": "talk it's in process in memory takes a few milliseconds to run it's really really fast but the amount of confidence",
    "start": "2031190",
    "end": "2037970"
  },
  {
    "text": "it gives us is really low relatively speaking because they're only testing a little portion of the code and we're",
    "start": "2037970",
    "end": "2043820"
  },
  {
    "text": "often mocking our production implementation details now if we take one of those implementation tests we add",
    "start": "2043820",
    "end": "2050750"
  },
  {
    "text": "on some real database calls we've got some outer process communication now so we're an order of magnitude slower but",
    "start": "2050750",
    "end": "2057649"
  },
  {
    "text": "there's a whole class of errors that we would now pick up you know is the ORM mappings correct have our database",
    "start": "2057650",
    "end": "2062990"
  },
  {
    "text": "migrations put the schemer into a state that actually works with our system you know when we hydrate the objects back",
    "start": "2062990",
    "end": "2068570"
  },
  {
    "text": "does that work etc now if we start graphing this we're sort of seeing that",
    "start": "2068570",
    "end": "2073820"
  },
  {
    "text": "there's an inversely proportional relationship between speed and confidence now why is this useful for",
    "start": "2073820",
    "end": "2079610"
  },
  {
    "text": "deciding how we test pretty much every company these days is you know trying to be devops and and all of that sort of",
    "start": "2079610",
    "end": "2085820"
  },
  {
    "text": "thing what we're trying to do is create faster feedback loops we're trying to get features out to our users faster and",
    "start": "2085820",
    "end": "2092120"
  },
  {
    "text": "faster so if we can come up with a testing strategy that increases our speed whilst giving us enough confidence",
    "start": "2092120",
    "end": "2098840"
  },
  {
    "text": "then obviously that's a good thing let's explore this a little bit further we",
    "start": "2098840",
    "end": "2104720"
  },
  {
    "text": "have a hypothesis that hypothesis is that you're not going to deploy to production unless you make",
    "start": "2104720",
    "end": "2110030"
  },
  {
    "text": "some minimum level of confidence 100 percent yeah an often product owners when you ask them what's the minimum",
    "start": "2110030",
    "end": "2116150"
  },
  {
    "text": "level of competence they're gonna say a hundred percent however we challenge you",
    "start": "2116150",
    "end": "2121640"
  },
  {
    "text": "to set a minimum confidence level that's actually as low as possible now you might get laughed out of the",
    "start": "2121640",
    "end": "2127580"
  },
  {
    "text": "room for that but based on the last slide what happens if we set a minimum confidence level that's as long as",
    "start": "2127580",
    "end": "2133610"
  },
  {
    "text": "possible is we have a much a feedback loop which means if there is a problem and let's be honest 100 percent is obviously not possible there",
    "start": "2133610",
    "end": "2139760"
  },
  {
    "text": "is always bugs bugs in our code then that means that it's even faster for us",
    "start": "2139760",
    "end": "2144829"
  },
  {
    "text": "to get fixes out for those bugs now what we would then say is that you would",
    "start": "2144829",
    "end": "2150230"
  },
  {
    "text": "create a testing strategy that meets this confidence level as fast as possible so that we can realize this sort of fast feedback loop dream but",
    "start": "2150230",
    "end": "2157700"
  },
  {
    "text": "then there's a really really important point that's often missed in and from what we've seen in testing strategies and most companies which is you",
    "start": "2157700",
    "end": "2164030"
  },
  {
    "text": "shouldn't just set a testing strategy and say job done off to the pub and never look at it again we need to have",
    "start": "2164030",
    "end": "2169490"
  },
  {
    "text": "that continuous improvement mindset that's so core to agile and DevOps and we need to actually change our testing",
    "start": "2169490",
    "end": "2176450"
  },
  {
    "text": "strategy over time but we don't change it willy-nilly we need to change it based on hypotheses on data we need to",
    "start": "2176450",
    "end": "2184400"
  },
  {
    "text": "go and measure things like what's the cycle time from an idea to that idea getting in production or how many bugs",
    "start": "2184400",
    "end": "2189920"
  },
  {
    "text": "do we get in production when we release our software and adjust our testing strategy over time to make sure that we",
    "start": "2189920",
    "end": "2195680"
  },
  {
    "text": "improve them I think metrics light a state of DevOps metrics can be really useful here as you know industry",
    "start": "2195680",
    "end": "2201380"
  },
  {
    "text": "standard metrics so you not only you can use to measure yourself but you can actually compare yourself against other organizations as well so I think that",
    "start": "2201380",
    "end": "2207920"
  },
  {
    "text": "was the you've got the lead time to change so like how long from code commit to getting something in the hands of the",
    "start": "2207920",
    "end": "2213200"
  },
  {
    "text": "customer you've got a value ray yeah how does it take you to recover from that and have to know you're deploying so",
    "start": "2213200",
    "end": "2219950"
  },
  {
    "text": "there's thousands of data points for that way you could start sort of see and measure yourself and this has all been",
    "start": "2219950",
    "end": "2226250"
  },
  {
    "text": "like statistically proven to match against the businesses revenue stream etc so they're great for very simple",
    "start": "2226250",
    "end": "2232790"
  },
  {
    "text": "metrics to derive and really powerful getting definitely stations really good stuff now when we kind of look at this",
    "start": "2232790",
    "end": "2239839"
  },
  {
    "text": "we actually had a bit of a realization and it's a bit shocking to some people but that first sort of step there that's",
    "start": "2239839",
    "end": "2246200"
  },
  {
    "text": "that's not a technical decision it's not testers that should be deciding that that's a business decision the amount of confidence for each fixture that's",
    "start": "2246200",
    "end": "2252170"
  },
  {
    "text": "something a business person a product owner should be deciding now sure once they've made that decision then obviously the testing strategy we come",
    "start": "2252170",
    "end": "2258740"
  },
  {
    "text": "up with to meet that confidence level is a technical decision that hopefully not just test as the testers and developers working together closely are making and",
    "start": "2258740",
    "end": "2265809"
  },
  {
    "text": "then it's everyone's responsibility to continuous improve it should be a mindset that's throughout the entire team but there's",
    "start": "2265809",
    "end": "2273529"
  },
  {
    "text": "one question that I'm assuming is in some of your minds right now which is that sounds great isn't that wonderful",
    "start": "2273529",
    "end": "2280190"
  },
  {
    "text": "theory that technical people and the business people are going to talk together and make a decision and you",
    "start": "2280190",
    "end": "2286339"
  },
  {
    "text": "know we're not gonna get told off for writing tests rather than getting features out as fast as we can yeah who said that conversation in here where you",
    "start": "2286339",
    "end": "2292009"
  },
  {
    "text": "kind of go to a business person and say oh we want to write some UI test for this sorry we've got to ship yeah and you get shut down",
    "start": "2292009",
    "end": "2297849"
  },
  {
    "text": "we need more features but we do have an answer to this and it's something called",
    "start": "2297849",
    "end": "2303859"
  },
  {
    "text": "risk-based testing now let's look at what respects testing is essentially",
    "start": "2303859",
    "end": "2309799"
  },
  {
    "text": "creating a risk based model that gives us a common nomenclature to have discussions between technical people and",
    "start": "2309799",
    "end": "2315500"
  },
  {
    "text": "business people about the risk on a per feature basis once you've had this discussion and you you come up with the",
    "start": "2315500",
    "end": "2321799"
  },
  {
    "text": "risk rating for a particular feature then it makes sense to track it in your task tracking system and the problem",
    "start": "2321799",
    "end": "2330950"
  },
  {
    "text": "here though I guess that we need to solve is to have that conversation and for it to be a meaningful conversation that is easy to have to bridge the gap",
    "start": "2330950",
    "end": "2339170"
  },
  {
    "text": "between you know business people and the technical people we need a clear way to determine a rating so this is where we",
    "start": "2339170",
    "end": "2345710"
  },
  {
    "text": "can start to bring things which were already quite often used in businesses to start bridging that gap that sort of",
    "start": "2345710",
    "end": "2352400"
  },
  {
    "text": "language gap between the business and the engineering departments so what you're looking at here is a risk model",
    "start": "2352400",
    "end": "2359119"
  },
  {
    "text": "so a lot of you might work for companies that already have these in place I work for a bank",
    "start": "2359119",
    "end": "2364549"
  },
  {
    "text": "over in Western Australia and pretty much we breathe by our risk models",
    "start": "2364549",
    "end": "2369619"
  },
  {
    "text": "they're so important to the function of the bank so which is a great thing because it means that everybody understands these things now they're",
    "start": "2369619",
    "end": "2376609"
  },
  {
    "text": "quite often they're going to be laid out in the terminology of your business the one you're seeing here is is not ours",
    "start": "2376609",
    "end": "2382400"
  },
  {
    "text": "it's one that Rob and I grab from the internet and everyday but let's have a quick look at it so we've got a couple",
    "start": "2382400",
    "end": "2388339"
  },
  {
    "text": "of axes on the y-axis very straightforward we've got a likelihood so this is basically how likely is this",
    "start": "2388339",
    "end": "2395089"
  },
  {
    "text": "thing to happen is it is it going to happen so look at the top almost certain it's",
    "start": "2395089",
    "end": "2400309"
  },
  {
    "text": "going to often occur occur once a week down the bottom it's rare conceivable but only on extreme",
    "start": "2400309",
    "end": "2405390"
  },
  {
    "text": "circumstances once in a hundred years so again it should be fairly straightforward the business to start",
    "start": "2405390",
    "end": "2410460"
  },
  {
    "text": "working on risk rating for each of your features because they already understand this language looking along the top",
    "start": "2410460",
    "end": "2416550"
  },
  {
    "text": "we've got the consequences obvious this was to happen so you can see this one is kind of talking about injuries and",
    "start": "2416550",
    "end": "2422579"
  },
  {
    "text": "financial loss so it's possibly from a kind of hospital realm or something like that because on the far right hand side",
    "start": "2422579",
    "end": "2428369"
  },
  {
    "text": "we've got catastrophic risks could cause death or massive financial loss so this is pretty serious stuff on this rating",
    "start": "2428369",
    "end": "2434819"
  },
  {
    "text": "but the key here is that for every feature you're going to start building you want to have a conversation up front",
    "start": "2434819",
    "end": "2441420"
  },
  {
    "text": "which is going to involve product owners stake holders testers developers and enlist all the people basically that are",
    "start": "2441420",
    "end": "2447930"
  },
  {
    "text": "involved in delivering this feature to put it somewhere inside this matrix so",
    "start": "2447930",
    "end": "2453270"
  },
  {
    "text": "let's say that we've got a feature where it's possible that there could be a moderate financial loss so it's going to",
    "start": "2453270",
    "end": "2459030"
  },
  {
    "text": "fall inside the moderate category so that hopefully something if we can agree with the business we can put that into",
    "start": "2459030",
    "end": "2464760"
  },
  {
    "text": "our tracking system that's now a given so how are we going to use this to decide how to test this item so this is",
    "start": "2464760",
    "end": "2472079"
  },
  {
    "text": "where we can drop into a really simple model for risk based testing so Rob and I flew this one together chuckles like",
    "start": "2472079",
    "end": "2478650"
  },
  {
    "text": "five minutes it's a starting point you might already have one but if not you know start with something simple like this and then you can always",
    "start": "2478650",
    "end": "2485280"
  },
  {
    "text": "inspect it and adapt it as you're going forward so if we take our medium base risk it falls into the middle column",
    "start": "2485280",
    "end": "2491550"
  },
  {
    "text": "here so what this is telling us and this will all be agreed upfront as part of your testing methodology and strategies",
    "start": "2491550",
    "end": "2496950"
  },
  {
    "text": "is that you're gonna do a manual test of this feature once it has been built so that's a bit of like exploratory testing",
    "start": "2496950",
    "end": "2502980"
  },
  {
    "text": "just kind of have a once-over on it make sure that it feels like it's hanging together we're gonna have basic coverage",
    "start": "2502980",
    "end": "2509069"
  },
  {
    "text": "on the unit tests so we might have some subcutaneous tests kind of behavior level we're not worried about kind of",
    "start": "2509069",
    "end": "2515910"
  },
  {
    "text": "using more very advanced testing techniques like fuzz testing or property testing or things like that because it's",
    "start": "2515910",
    "end": "2521609"
  },
  {
    "text": "a fairly straightforward feature and we're not going to have a UI test for it because it doesn't warrant it based off",
    "start": "2521609",
    "end": "2527910"
  },
  {
    "text": "its risk rating now you can see for something which is a critical risk we",
    "start": "2527910",
    "end": "2533040"
  },
  {
    "text": "actually have a lot more tests going on for this so we're gonna manually test it every single release",
    "start": "2533040",
    "end": "2538289"
  },
  {
    "text": "we're gonna have unit tests which implement all sorts of testing over this feature because it's incredibly",
    "start": "2538289",
    "end": "2543539"
  },
  {
    "text": "important this feature does not fail and for our UI test we're not just going to have a happy UI test but we're gonna",
    "start": "2543539",
    "end": "2549180"
  },
  {
    "text": "test all the negative runs through that feature as well so that's going to be obviously a lot more work in delivering",
    "start": "2549180",
    "end": "2555150"
  },
  {
    "text": "this feature and if we have this formalized upfront we can take that into our estimation sessions and we can",
    "start": "2555150",
    "end": "2561359"
  },
  {
    "text": "estimate the complexity of delivering this item accordingly based off the amount of testing that we have to do so",
    "start": "2561359",
    "end": "2566849"
  },
  {
    "text": "these are really powerful models it is but and the beautiful thing is when you start thinking about this you realize",
    "start": "2566849",
    "end": "2572069"
  },
  {
    "text": "this isn't actually just about testing if you're working on a feature that's like a critical feature you're going to",
    "start": "2572069",
    "end": "2577829"
  },
  {
    "text": "spend more time analyzing to understand the thing in great detail you're going to spend more time implementing and",
    "start": "2577829",
    "end": "2583740"
  },
  {
    "text": "doing defensive coding practices and various other things and you're going to spend more time testing it what this",
    "start": "2583740",
    "end": "2591119"
  },
  {
    "text": "means is that when you have this conversation with your business stakeholder and they decide this feature",
    "start": "2591119",
    "end": "2596849"
  },
  {
    "text": "is critical they know that that feature is not going to take two days to implement they know it's going to take four weeks to implement and so they can",
    "start": "2596849",
    "end": "2603960"
  },
  {
    "text": "have a very you know very pragmatic business conversation about how much they want to invest in a particular",
    "start": "2603960",
    "end": "2609599"
  },
  {
    "text": "feature yeah and you don't have these silly situations where teams are writing you know life-or-death software and being",
    "start": "2609599",
    "end": "2615809"
  },
  {
    "text": "given a lot of pressure to kind of cut corners on features that they really shouldn't cut corners on but on the same",
    "start": "2615809",
    "end": "2621599"
  },
  {
    "text": "token they have a clear path to for something that doesn't really matter to not really put any real effort in",
    "start": "2621599",
    "end": "2628009"
  },
  {
    "text": "awesome it's pretty cool that's great the one other thing I'd say is that what you would do like so a lot of big",
    "start": "2628009",
    "end": "2634440"
  },
  {
    "text": "companies will already have one of these but if you don't what you need to do is make sure that these are in terms that",
    "start": "2634440",
    "end": "2639450"
  },
  {
    "text": "are relevant to your company and your business and you can be quite specific some of the ones that I've seen have specific financial amounts for these",
    "start": "2639450",
    "end": "2646170"
  },
  {
    "text": "like you know greater than two million dollars of financial loss or you know whatever it might be so we've built our",
    "start": "2646170",
    "end": "2654480"
  },
  {
    "text": "amazing feature we've nurtured it we started from nothing we put it into production done yeah move along happy",
    "start": "2654480",
    "end": "2662069"
  },
  {
    "text": "days throw it over defend go to the pub go to the pub it's good right unfortunately not because really",
    "start": "2662069",
    "end": "2668849"
  },
  {
    "text": "I guess once we've put a feature into production it's kind of like the end of the beginning for that feature and now it's into the rest of its life and",
    "start": "2668849",
    "end": "2675630"
  },
  {
    "text": "there's a lot of things that we have to think about when it's in the real world which I think all fall into kind of",
    "start": "2675630",
    "end": "2681660"
  },
  {
    "text": "similar testing categories so I want to go through some things that I've kind of come across in the last few years which",
    "start": "2681660",
    "end": "2687210"
  },
  {
    "text": "I think of really again changed the way that I think about features in production and DevOps and things like",
    "start": "2687210",
    "end": "2692609"
  },
  {
    "text": "that so I want to start with a concept called behavior driven infrastructure so can I get your hands in here for kind of",
    "start": "2692609",
    "end": "2699150"
  },
  {
    "text": "who's done this or has been using it or has heard of it course we've got a few people did this is this is brilliant I",
    "start": "2699150",
    "end": "2705989"
  },
  {
    "text": "love this so I work for a bank and we have got extremely complicated security",
    "start": "2705989",
    "end": "2712829"
  },
  {
    "text": "architectures that we have to run within to make sure that our organization is",
    "start": "2712829",
    "end": "2718019"
  },
  {
    "text": "compliant so these things normally would be built by a team off to the side they",
    "start": "2718019",
    "end": "2723569"
  },
  {
    "text": "would go and set up all the networks for you and you'll kind of have this implicit trust that it's just working ok",
    "start": "2723569",
    "end": "2728729"
  },
  {
    "text": "but when it comes to actually ensuring that that thing is compliant that the network is still working how we gonna do",
    "start": "2728729",
    "end": "2735089"
  },
  {
    "text": "that now BDI kind of turns the actual building of that infrastructure onto its head and says well what about if we",
    "start": "2735089",
    "end": "2741749"
  },
  {
    "text": "could express our infrastructure in terms of BDD tests just like we can express our application features so I'll",
    "start": "2741749",
    "end": "2749279"
  },
  {
    "text": "give you an example of that let's say that we have a couple of subnets and they are only allowed to talk to each",
    "start": "2749279",
    "end": "2755130"
  },
  {
    "text": "other over port 443 so you could conceive abdi test that said given zone",
    "start": "2755130",
    "end": "2761099"
  },
  {
    "text": "Z 20 when I attempt to connect to zone z 21 over port 80 then the connection will",
    "start": "2761099",
    "end": "2768059"
  },
  {
    "text": "not be made so let's say we started off with that so there are DSL zin really I think it's r-spec or something which is",
    "start": "2768059",
    "end": "2776489"
  },
  {
    "text": "really great for expressing this kind of test so if we're running against AWS or",
    "start": "2776489",
    "end": "2781819"
  },
  {
    "text": "as your we can put some code up there that can actually check that real network connection for us so that test",
    "start": "2781819",
    "end": "2788969"
  },
  {
    "text": "will start off red because there is no network there's nothing there so let's say we get our arm template and we build",
    "start": "2788969",
    "end": "2794910"
  },
  {
    "text": "a V net we've put two subnets inside it they can talk to each other over many many ports so that test is still going",
    "start": "2794910",
    "end": "2801239"
  },
  {
    "text": "to be red because that Connect can get through and then what we do in our arm template is we're gonna add some",
    "start": "2801239",
    "end": "2806760"
  },
  {
    "text": "sort of network rule to say now let's start blocking off the ports from this when we do that the test goes green so",
    "start": "2806760",
    "end": "2814350"
  },
  {
    "text": "we've used these tests to start to build up these complex kind of architectures and topologies and on premise in the",
    "start": "2814350",
    "end": "2821220"
  },
  {
    "text": "cloud wherever you need to put your networks so they're great for helping us build it but they have an added benefit",
    "start": "2821220",
    "end": "2826560"
  },
  {
    "text": "which is that because these tests are actually running against the real networks we can keep using them so once",
    "start": "2826560",
    "end": "2833460"
  },
  {
    "text": "that network is up and we're dropping our applications into it we can continuously run the tests against the",
    "start": "2833460",
    "end": "2839100"
  },
  {
    "text": "network to ensure that the compliance hasn't been broken so they give us a great way to kind of order it and make",
    "start": "2839100",
    "end": "2844410"
  },
  {
    "text": "sure that our networks are as they should be so very very powerful so",
    "start": "2844410",
    "end": "2849420"
  },
  {
    "text": "people are writing software nowadays and it's it's not a all-or-nothing replacement when we put something into",
    "start": "2849420",
    "end": "2854700"
  },
  {
    "text": "production so I remember back in the day we'd kind of just do a whole cutover of everybody and that's really risky as",
    "start": "2854700",
    "end": "2860400"
  },
  {
    "text": "well that's really really dangerous we don't know how the service is going to scale in the real world is it going to",
    "start": "2860400",
    "end": "2867000"
  },
  {
    "text": "have a negative impact on other services etc etc so if things like Bluegreen deployments and canary deployments can",
    "start": "2867000",
    "end": "2873090"
  },
  {
    "text": "really help us here with testing our software in the real world because we can put something in the blue slot and",
    "start": "2873090",
    "end": "2878250"
  },
  {
    "text": "we can slowly move traffic onto it and we can make sure that it's not having adverse effects on other services which",
    "start": "2878250",
    "end": "2884190"
  },
  {
    "text": "are in the same kind of service architecture of their testing and production is awesome we're all building",
    "start": "2884190",
    "end": "2891180"
  },
  {
    "text": "micro services nowadays and it's becoming increasingly difficult to actually test these in an isolated",
    "start": "2891180",
    "end": "2897060"
  },
  {
    "text": "environment because there are so many of them there are so many moving parts so being able to test in production is",
    "start": "2897060",
    "end": "2904140"
  },
  {
    "text": "going to be a great asset if we can get to that if we can have test accounts test customers and we can continuously",
    "start": "2904140",
    "end": "2910380"
  },
  {
    "text": "ensure that our critical business features are providing an adequate SLA when they're running in the real",
    "start": "2910380",
    "end": "2915750"
  },
  {
    "text": "environment that's again a really really powerful thing to be able to do so nothing tells you that things are",
    "start": "2915750",
    "end": "2920790"
  },
  {
    "text": "working better than the testing production who's her charity majors talk",
    "start": "2920790",
    "end": "2926400"
  },
  {
    "text": "I was fortunate enough to see her in Perth a year or so ago and she has this",
    "start": "2926400",
    "end": "2931560"
  },
  {
    "text": "great phrase which is observability over monitoring once you know probably got that runway",
    "start": "2931560",
    "end": "2937309"
  },
  {
    "text": "that's nothing furiously at me so when we're putting so many micro-services",
    "start": "2937309",
    "end": "2942390"
  },
  {
    "text": "into the real world now in cloud environments we have to expect that the environment is going to fail at some",
    "start": "2942390",
    "end": "2948689"
  },
  {
    "text": "point in time there's going to be something which has got a degraded service it's just not working",
    "start": "2948689",
    "end": "2954479"
  },
  {
    "text": "something's gone wrong up there now if we're building micro services the way that people like some Newman described",
    "start": "2954479",
    "end": "2961049"
  },
  {
    "text": "them then they should be autonomous components right if your micro service is going to go down the moment another",
    "start": "2961049",
    "end": "2966509"
  },
  {
    "text": "service goes down and just have this huge knock-on effect then that's obviously not going to be a great architecture to be deploying but if your",
    "start": "2966509",
    "end": "2973769"
  },
  {
    "text": "micro services is autonomous and let's say one of its services it depends on goes down but it can still service a",
    "start": "2973769",
    "end": "2980579"
  },
  {
    "text": "query in a different way we've hit a really weird state now because we have a network where we have a bunch of",
    "start": "2980579",
    "end": "2986279"
  },
  {
    "text": "services some are up some are down yet we're still providing the service back through to the customer so it's really",
    "start": "2986279",
    "end": "2992699"
  },
  {
    "text": "important to stop maybe thinking about our network as having to be entirely up or else things are bad and start looking",
    "start": "2992699",
    "end": "3000679"
  },
  {
    "text": "in terms of what level of performance are we actually providing through to our users so we are certain that we're",
    "start": "3000679",
    "end": "3006229"
  },
  {
    "text": "always providing them a service and that could be with things being down or up and the last one I'll pick on here is",
    "start": "3006229",
    "end": "3013069"
  },
  {
    "text": "just magic number testing so this is a really interesting one so is anyone ever integrated with a payment provider like",
    "start": "3013069",
    "end": "3019219"
  },
  {
    "text": "stripe right cool so they have these great kind of ideas where they will give you a set of credit card numbers our",
    "start": "3019219",
    "end": "3026209"
  },
  {
    "text": "customer IDs and the different numbers will respond in different ways so one of",
    "start": "3026209",
    "end": "3031219"
  },
  {
    "text": "them might respond with overdrawn one of them might respond with the account is locked so a magic number testing give us",
    "start": "3031219",
    "end": "3037429"
  },
  {
    "text": "a way to be able to I guess put up a service and then allow others to test against it by using well known",
    "start": "3037429",
    "end": "3043759"
  },
  {
    "text": "transaction numbers so they can test all the failure states that could come back from this other service without having",
    "start": "3043759",
    "end": "3049669"
  },
  {
    "text": "to set up data in specific ways and jump through hoops like that so again really powerful techniques to help us testing",
    "start": "3049669",
    "end": "3056779"
  },
  {
    "text": "and especially when we're in production environments to absolutely now this is this is a quite a small list the the",
    "start": "3056779",
    "end": "3064399"
  },
  {
    "text": "actual things that you might need to do in terms of testing after you deploy to production is actually",
    "start": "3064399",
    "end": "3070160"
  },
  {
    "text": "enormous and there's a really good slide on Rob Crowley's talk yesterday on service meshes that I highly recommend",
    "start": "3070160",
    "end": "3075500"
  },
  {
    "text": "you check out that had a really really extensive list of things but while we were coming up with this list here we",
    "start": "3075500",
    "end": "3081799"
  },
  {
    "text": "kind of observed a little bit of a pattern between them I've got things like testing and production",
    "start": "3081799",
    "end": "3086920"
  },
  {
    "text": "observability over monitoring and things like synthetic transactions and all of",
    "start": "3086920",
    "end": "3092240"
  },
  {
    "text": "them are designed to work well in that sort of micro-services type architecture where our deployments are much more",
    "start": "3092240",
    "end": "3098809"
  },
  {
    "text": "dynamic than they were traditionally traditionally you deploy one thing it's either up or down it's pretty straightforward but in this",
    "start": "3098809",
    "end": "3105200"
  },
  {
    "text": "sort of new new architectural panacea that we have now everything's a lot more",
    "start": "3105200",
    "end": "3110869"
  },
  {
    "text": "dynamic and I guess the the final thought that we wanted to leave everyone with is out of all the patterns that",
    "start": "3110869",
    "end": "3116539"
  },
  {
    "text": "you're using now and the practices that you're using which ones are going to need to evolve you know as well as the",
    "start": "3116539",
    "end": "3123020"
  },
  {
    "text": "ones that we've already talked about to help us in the future thank you so we're",
    "start": "3123020",
    "end": "3135440"
  },
  {
    "text": "good about 8 to 10 minutes so question time so ok that one with the UI testing",
    "start": "3135440",
    "end": "3152420"
  },
  {
    "text": "patterns on it so just to repeat that so Sam Connolly is based in Sydney and she's often for any company to run that",
    "start": "3152420",
    "end": "3158299"
  },
  {
    "text": "talk that we referenced over a lunch time brown bag very cool she's pretty",
    "start": "3158299",
    "end": "3166220"
  },
  {
    "text": "responsive on Twitter she's been tweeting the last few days so it's probably the easiest way to find her any other questions no that was a",
    "start": "3166220",
    "end": "3172609"
  },
  {
    "text": "question but that's alright I'll let you off yeah",
    "start": "3172609",
    "end": "3178930"
  },
  {
    "text": "[Music]",
    "start": "3196100",
    "end": "3199230"
  },
  {
    "text": "yes that's a good point I was actually in some of the rehearsals I casually dropped in to rob a question about how",
    "start": "3202449",
    "end": "3208400"
  },
  {
    "text": "long those tests take when they're spinning up the database and and you're right they do definitely take longer to",
    "start": "3208400",
    "end": "3213920"
  },
  {
    "text": "do my experience was it because I was testing classes in collaboration as",
    "start": "3213920",
    "end": "3219229"
  },
  {
    "text": "opposed to testing individuals and mocking everything out I actually had a lot less tests than if I was testing at",
    "start": "3219229",
    "end": "3225949"
  },
  {
    "text": "a very low sort of isolated unit level but it was a trade-off and there were certain operations where I looked to",
    "start": "3225949",
    "end": "3231579"
  },
  {
    "text": "actually go for a more like ports an adapter style architecture and just try and isolate the database component from",
    "start": "3231579",
    "end": "3237709"
  },
  {
    "text": "it and I guess if you had Rob's graph where you have that diagonal line maybe that's one that kind of sits between the",
    "start": "3237709",
    "end": "3243650"
  },
  {
    "text": "unit tests and the subcutaneous tests of the database is where you're still doing behavioral tests but you're trying to",
    "start": "3243650",
    "end": "3250219"
  },
  {
    "text": "isolate those slower components out I think I mean my experience has been I used to run on like eight threads in",
    "start": "3250219",
    "end": "3256160"
  },
  {
    "text": "parallel and each would have its own local DB and they'd be taking about like Noor point one or two of a second - yeah",
    "start": "3256160",
    "end": "3262039"
  },
  {
    "text": "because I wasn't rebuilding the database every time I was using libraries like jimmy-boy guards respawn to take the",
    "start": "3262039",
    "end": "3267979"
  },
  {
    "text": "database back to a well-known state and and that always appeared to be a lot faster than building from scratch each",
    "start": "3267979",
    "end": "3273469"
  },
  {
    "text": "time but and there's definitely a few tricks you can do to try and speed them up but if you are I know I think they're",
    "start": "3273469",
    "end": "3278959"
  },
  {
    "text": "great tests because exercise in the database actually really does give you a lot of confidence but if you're finally",
    "start": "3278959",
    "end": "3284089"
  },
  {
    "text": "at it is taken too long maybe you could start looking at replacements like in-memory AF cores got the in-memory",
    "start": "3284089",
    "end": "3289219"
  },
  {
    "text": "provider for example so yeah I mean I'd say most most small to medium sized applications like even if you have like",
    "start": "3289219",
    "end": "3296059"
  },
  {
    "text": "a thousand or two of those sorts of tests still like only a couple of minutes it's running four and that's",
    "start": "3296059",
    "end": "3301400"
  },
  {
    "text": "that's mostly what we've seen if you've got something enormous well you know either you want to start breaking it up or sure maybe in that case that is too",
    "start": "3301400",
    "end": "3307999"
  },
  {
    "text": "slow for your feedback loop and you want to mock them out and knowing the trade-off of a lower amount of confidence but a faster sort of release and that's",
    "start": "3307999",
    "end": "3314210"
  },
  {
    "text": "kind of where our pragmatic testing thing comes into play right because it's saying don't just do subcutaneous test",
    "start": "3314210",
    "end": "3320600"
  },
  {
    "text": "not like including the database because we said it do what makes sense in your context per feature any other question",
    "start": "3320600",
    "end": "3329030"
  },
  {
    "text": "question yeah so there's a all the way",
    "start": "3329030",
    "end": "3352190"
  },
  {
    "text": "back almost almost so that link there",
    "start": "3352190",
    "end": "3361910"
  },
  {
    "text": "it's a blog post that I wrote a few years back it's actually a review of Jimmy Bo guards holistic testing thing",
    "start": "3361910",
    "end": "3367610"
  },
  {
    "text": "but I've got a lot of content in there talking about like subcutaneous tests and those sorts of things and so there's",
    "start": "3367610",
    "end": "3373670"
  },
  {
    "text": "there's some coverage in there around this but essentially what we found is that there's certain patterns that make",
    "start": "3373670",
    "end": "3380240"
  },
  {
    "text": "it a lot easier to understand where problems are so we kind of saw a little",
    "start": "3380240",
    "end": "3386570"
  },
  {
    "text": "bit of that actually you know pair programming yeah no not here sorry where",
    "start": "3386570",
    "end": "3394130"
  },
  {
    "text": "was it RNA was this one this one so",
    "start": "3394130",
    "end": "3400640"
  },
  {
    "text": "things like this here where we're using in our case we use beta fiber like splitting things up in two different",
    "start": "3400640",
    "end": "3406220"
  },
  {
    "text": "methods using like a BDD syntax can be helpful because then you'll know like which one of those it was in and so you",
    "start": "3406220",
    "end": "3411920"
  },
  {
    "text": "immediately know where to look obviously if it's here then you know it's it's",
    "start": "3411920",
    "end": "3417500"
  },
  {
    "text": "sort of somewhere in your in your stack but that's where typically you know you'll see the exception you'll see a",
    "start": "3417500",
    "end": "3423320"
  },
  {
    "text": "line number you click through and you kind of get to where the problem is most of the time to be honest haven't found",
    "start": "3423320",
    "end": "3428420"
  },
  {
    "text": "it to be too much of a problem but yeah I mean look there's a slight trade-off there right like it might be you know",
    "start": "3428420",
    "end": "3433700"
  },
  {
    "text": "there's a few more classes you're testing it might be a little bit harder to quickly find it but typically with things like this I've found such a",
    "start": "3433700",
    "end": "3439820"
  },
  {
    "text": "pretty decent other questions top cool thank you thank you for coming",
    "start": "3439820",
    "end": "3447260"
  },
  {
    "text": "everybody [Applause]",
    "start": "3447260",
    "end": "3450199"
  }
]