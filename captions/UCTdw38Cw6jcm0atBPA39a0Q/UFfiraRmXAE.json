[
  {
    "text": "hello hello there people we still have one or two minutes if anyone has to go to the bathroom real urgently now is the",
    "start": "5879",
    "end": "13000"
  },
  {
    "text": "time it's down the hall uh if you need to restock on drinks I'll wait two more",
    "start": "13000",
    "end": "21240"
  },
  {
    "text": "minutes",
    "start": "28960",
    "end": "31960"
  },
  {
    "text": "should we start are we ready is that food still hitting you or",
    "start": "132959",
    "end": "138760"
  },
  {
    "text": "are we good nice well welcome everyone I'm actually quite excited to be back in",
    "start": "138760",
    "end": "144319"
  },
  {
    "text": "Copenhagen it's it's been a number of years I think it's been seven years since I've L did a present in Copenhagen",
    "start": "144319",
    "end": "150720"
  },
  {
    "text": "so I'm quite excited uh it's a great place it's like no offense hipsterville",
    "start": "150720",
    "end": "155920"
  },
  {
    "text": "so I like it I like it also shout out to the front row people I'm a front row kind of guy myself I always enjoy it now",
    "start": "155920",
    "end": "164000"
  },
  {
    "text": "I've used this imagery that is a little bit of a wink wink to Mission Impossible because we're trying to cach the",
    "start": "164000",
    "end": "169640"
  },
  {
    "text": "uncashable today and you'll see throughout the session that it's it's we're going to build up the level of",
    "start": "169640",
    "end": "174959"
  },
  {
    "text": "complexity or the the things we want to achieve that go beyond the the regular caching logic and I hope you could bear",
    "start": "174959",
    "end": "181760"
  },
  {
    "text": "with me but before I actually kick this off I want to do a little bit of an intro and I want to do a little bit of a",
    "start": "181760",
    "end": "187440"
  },
  {
    "text": "spot check here with the crowd to see if we're on the same page because what are we doing if we're not on the same page",
    "start": "187440",
    "end": "193720"
  },
  {
    "text": "I've done this I think this is my 290 fifth presentation I've done this more than a 100 times and I typically do this",
    "start": "193720",
    "end": "200319"
  },
  {
    "text": "through three distinct statements that I present to the audience to see if they agree or don't agree and this happens in",
    "start": "200319",
    "end": "206120"
  },
  {
    "text": "a very vocal crowd participation style way so if you're a fan of that it's",
    "start": "206120",
    "end": "211400"
  },
  {
    "text": "going to be great if you're not a fan of that don't worry we're among friends just do what you do look on your phone",
    "start": "211400",
    "end": "216720"
  },
  {
    "text": "or whatever so are we ready for those three statements all right okay good statement",
    "start": "216720",
    "end": "222599"
  },
  {
    "text": "number one I'm going to stand a little bit closer to to see how that works do we agree that slow websites suck all",
    "start": "222599",
    "end": "232120"
  },
  {
    "text": "right that's good pretty good audience statement number two also an easy one do we agree that web performance is an",
    "start": "232120",
    "end": "238159"
  },
  {
    "text": "essential part of the user experience third one slightly more controversial in",
    "start": "238159",
    "end": "243799"
  },
  {
    "text": "my opinion do we agree that a website that is slow is just as bad as a website that is",
    "start": "243799",
    "end": "251319"
  },
  {
    "text": "down yeah I'm me I see a lot of me as well when I do this well regardless of",
    "start": "252079",
    "end": "257400"
  },
  {
    "text": "your yes no or me the statements I'm going to make don't really care about their opinion these are just I wouldn't",
    "start": "257400",
    "end": "262600"
  },
  {
    "text": "call them facts but they occur quite a bit if your website is slow or it is down you lose money you lose face might",
    "start": "262600",
    "end": "271199"
  },
  {
    "text": "even lose a little bit of Google page rank the question is what do we do how do we tackle this and a lot of people",
    "start": "271199",
    "end": "277039"
  },
  {
    "text": "look at this symptomatically oh your website is slow or your system is slow",
    "start": "277039",
    "end": "282160"
  },
  {
    "text": "it's probably related to capacity so we need to add capacity and throw servers at the problem a lot of people do that",
    "start": "282160",
    "end": "288800"
  },
  {
    "text": "and while it's not a sustainable solution in the long run because you're just spending money on symptoms rather",
    "start": "288800",
    "end": "294000"
  },
  {
    "text": "than looking for root causes in the short term it is good because if there's a fire you need to do firefighting so",
    "start": "294000",
    "end": "299840"
  },
  {
    "text": "adding temporary capacity is not a bad thing but as the famous poet Notorious BIG once said more money more servers",
    "start": "299840",
    "end": "307440"
  },
  {
    "text": "more problems so it's not really the best possible solution is it so what do you do is the second time I'm asking",
    "start": "307440",
    "end": "314000"
  },
  {
    "text": "this question what is the solution people some people would say why don't you identify the slowest parts and",
    "start": "314000",
    "end": "321199"
  },
  {
    "text": "optimize and I'm a big fan of that it's it's very sensible you optimize you look at the full stack going all the way from",
    "start": "321199",
    "end": "327600"
  },
  {
    "text": "the data center all the way up to your application code and anything in between from operating system to uh physical",
    "start": "327600",
    "end": "334160"
  },
  {
    "text": "tuning on your server to your application stack your code your database your external apis whatever or",
    "start": "334160",
    "end": "339639"
  },
  {
    "text": "at least the things you are within your respons domain of responsibility and",
    "start": "339639",
    "end": "344840"
  },
  {
    "text": "while that makes sense and you'll get decent gains you'll hit the point of so-called diminishing returns after a",
    "start": "344840",
    "end": "350680"
  },
  {
    "text": "while where your growth projection and the amount of money you put in and the",
    "start": "350680",
    "end": "355720"
  },
  {
    "text": "expectations you have don't really balance out that well you just hit the limitations so the third and last time",
    "start": "355720",
    "end": "362000"
  },
  {
    "text": "I'm going to ask the question what do you do my answer is a like a sort of a door number tree could be caching I'm",
    "start": "362000",
    "end": "369240"
  },
  {
    "text": "not saying this is the definitive solution but it is the topic of my presentation so I'm trying to convince you that caching could solve part of the",
    "start": "369240",
    "end": "376479"
  },
  {
    "text": "problem I use the analogy of boxes often when I refer to caching because caching is nothing more than storing",
    "start": "376479",
    "end": "382520"
  },
  {
    "text": "pre-computed results in boxes for later use and I won't play in the game with you but I'll just give you the outcome",
    "start": "382520",
    "end": "388759"
  },
  {
    "text": "sometimes I ask people what's 2 plus two and then they say four real quickly and then I asked them did you compute that",
    "start": "388759",
    "end": "394960"
  },
  {
    "text": "or did you cach that and then turns out they cash that so that being said hi everyone my name is Tas uh you hear",
    "start": "394960",
    "end": "402400"
  },
  {
    "text": "Maybe by my accent that I'm not a native speaker I'm a Dutch speaking Belgian I'm the tech evangelist at a company called",
    "start": "402400",
    "end": "408000"
  },
  {
    "text": "varnish software and I'm available on social media if you want to reach me afterwards or if you want to Heckle me",
    "start": "408000",
    "end": "413800"
  },
  {
    "text": "in real time now that's that's within the possibilities I'm the author of getting started with varnish cash which",
    "start": "413800",
    "end": "419199"
  },
  {
    "text": "is when I the first book I wrote it was a tremendous opportunity writing by",
    "start": "419199",
    "end": "424240"
  },
  {
    "text": "O'Reilly beautiful but that's the outdated book I have a new one called varnish six by example featured right",
    "start": "424240",
    "end": "430199"
  },
  {
    "text": "here I'm going to raffle this copy at the end of the presentation so if anyone's interested we'll find a way to",
    "start": "430199",
    "end": "436199"
  },
  {
    "text": "give it to you it's actually my lockdown project uh you remember that stuff right that happened in 2020 all the way up",
    "start": "436199",
    "end": "442800"
  },
  {
    "text": "until what 2022 I had tons of time on my hands and I wrote a book and in a year and a half I thought I I wrote my book",
    "start": "442800",
    "end": "449680"
  },
  {
    "text": "in markdown and then use some tools to push it into like a Word document that",
    "start": "449680",
    "end": "454759"
  },
  {
    "text": "the editor printed I thought I was writing a 300 pager turns out at least I thought I was writing a 500 pager but",
    "start": "454759",
    "end": "461800"
  },
  {
    "text": "then when you apply the layout of the editor it's a 778 pager so the the lockdown lasted way too long but if you",
    "start": "461800",
    "end": "468720"
  },
  {
    "text": "want you can uh get a copy of this a lot of the stuff I talk about and a ton of other things are featured in it so it's",
    "start": "468720",
    "end": "474599"
  },
  {
    "text": "it's good if you're interested if you rather have or if you're not the one that wanted and you're interested we",
    "start": "474599",
    "end": "479879"
  },
  {
    "text": "have a free online version of this that you can look at now by show of hands I'm always interested in that because it's",
    "start": "479879",
    "end": "485159"
  },
  {
    "text": "also part of my responsibilities as an evangelist to check who's heard of varnish software before by show of hats",
    "start": "485159",
    "end": "492680"
  },
  {
    "text": "that's quite good that's quite good because a lot of people know us as the company behind the varnish cach project",
    "start": "492680",
    "end": "498840"
  },
  {
    "text": "and a lot of people know varnish cash without necessarily being aware that there's a company behind it not only do we support the open source project we",
    "start": "498840",
    "end": "505120"
  },
  {
    "text": "also built the Enterprise version that tackles issues that go Way Beyond what typical users have like typical big big",
    "start": "505120",
    "end": "511639"
  },
  {
    "text": "big organizations like their support and advanced features and what have you the total ecosystem that we manage which",
    "start": "511639",
    "end": "517360"
  },
  {
    "text": "includes Enterprise and open source spend about 10 million active websites 22% of the top 10,000 and apparently",
    "start": "517360",
    "end": "524480"
  },
  {
    "text": "more than 10 million people already downloaded the docker image to play around with so if you take all that information and you ask me so what is it",
    "start": "524480",
    "end": "531320"
  },
  {
    "text": "that you guys do yes we make the web Foster that's what we do as a as a web acceleration company but it might be to",
    "start": "531320",
    "end": "538240"
  },
  {
    "text": "your surprise that we also enhance digital experiences which is a bit of a marketing Buzz term right by lowering",
    "start": "538240",
    "end": "543760"
  },
  {
    "text": "Network latency so what does that actually mean we also built content delivery software so you can use that",
    "start": "543760",
    "end": "549560"
  },
  {
    "text": "caching software to build private cdns which is a surprisingly big Market that it caught me off guard when I joined the",
    "start": "549560",
    "end": "555560"
  },
  {
    "text": "company so we build software defined which is the emphasis here we don't offer it as a service we give you the",
    "start": "555560",
    "end": "561000"
  },
  {
    "text": "software to build your own web acceleration and content Delivery Solutions fitting all into that nice life without latency marketing uh term",
    "start": "561000",
    "end": "569839"
  },
  {
    "text": "now the only thing I want to do before we actually kick it off and go into the nitty-gritty is throw in one number to",
    "start": "569839",
    "end": "575560"
  },
  {
    "text": "show that we're serious about performance so this is the result of a benchmark that Intel did on their latest",
    "start": "575560",
    "end": "581880"
  },
  {
    "text": "generation of CPUs called the sapphire Rapids generation of CPUs they wanted to do a little bit of a benchmark for",
    "start": "581880",
    "end": "588120"
  },
  {
    "text": "different kinds of software and we fell in the category of content delivery workloads and they wanted to see what",
    "start": "588120",
    "end": "593320"
  },
  {
    "text": "they could do with a highly optimized system which they partnered with us and discover the upper bounds and for now",
    "start": "593320",
    "end": "599920"
  },
  {
    "text": "and this is the published number we can do 1.3 terabits per second on a single machine it's a 2u server we're looking",
    "start": "599920",
    "end": "605760"
  },
  {
    "text": "at publishing results at what you can do with a oneu server so for now this is the fastest content delivery technology",
    "start": "605760",
    "end": "611760"
  },
  {
    "text": "on the planet with the emphasis on for now there's always a race Netflix pops up every now and then being faster but",
    "start": "611760",
    "end": "618360"
  },
  {
    "text": "for now this is this is the number 1.3 terabits per second we're hoping to go way beyond that anytime soon but another",
    "start": "618360",
    "end": "625440"
  },
  {
    "text": "interesting number is the one next to here if you disregard the growth and performance point of view",
    "start": "625440",
    "end": "631079"
  },
  {
    "text": "and solely focus on sustainability which is in big part the ecological aspect of course but also",
    "start": "631079",
    "end": "637959"
  },
  {
    "text": "just sustainability in general running a sustainable business trying to eliminate costs uh where possible then we can do",
    "start": "637959",
    "end": "644720"
  },
  {
    "text": "1.7 gigabits per second on a single machine per watt so it's all part of the",
    "start": "644720",
    "end": "650519"
  },
  {
    "text": "story doing more with less and that's just the performance numbers a lot of people don't need these numbers but I just wanted to show you what we do on a",
    "start": "650519",
    "end": "657920"
  },
  {
    "text": "daily basis and that we have clients that really care about this now let's talk about stuff that might be relevant",
    "start": "657920",
    "end": "663399"
  },
  {
    "text": "to you guys now a normal interaction pattern between a user and the server is is a pretty Direct One users tend to",
    "start": "663399",
    "end": "670240"
  },
  {
    "text": "connect to an application server to get the features they want and that's pretty normal but then when a lot of users pop",
    "start": "670240",
    "end": "677160"
  },
  {
    "text": "up and they have very compute intensive tasks that they request then the server is under pressure the way we tackle this",
    "start": "677160",
    "end": "683519"
  },
  {
    "text": "in the way our caching solution works and other caching solutions that call themselves reverse caching proxy there's",
    "start": "683519",
    "end": "689519"
  },
  {
    "text": "there's a whole range of them they typically Place themselves in front of that application server performing",
    "start": "689519",
    "end": "694720"
  },
  {
    "text": "so-called origin shielding meaning that they take in all the requests if they have the version that is requested",
    "start": "694720",
    "end": "700560"
  },
  {
    "text": "they'll serve it without even talking to the origin web server but if something is not in cash or has expired it VES",
    "start": "700560",
    "end": "708240"
  },
  {
    "text": "them does that make sense to you while I still see some confused pay phases and",
    "start": "708240",
    "end": "713720"
  },
  {
    "text": "for that I always throw in this one and I also give it a couple of seconds to sync in so what are we",
    "start": "713720",
    "end": "719800"
  },
  {
    "text": "looking at a movie right who's old enough to have seen this movie what's",
    "start": "719800",
    "end": "725120"
  },
  {
    "text": "the name of the movie Ladies and Gentlemen The Bodyguard let's let's continue",
    "start": "725120",
    "end": "731519"
  },
  {
    "text": "featuring and yes yes we have a pretty mature audience here Kevin Cosner Whitney",
    "start": "731519",
    "end": "738279"
  },
  {
    "text": "Houston I'm not sure if that makes sense to the youngsters here in the room but it's a it's a movie I saw when I was uh",
    "start": "738279",
    "end": "744639"
  },
  {
    "text": "when I was pretty small and it's about a very popular artist played by by the late Whitney Houston who uh and I use",
    "start": "744639",
    "end": "752440"
  },
  {
    "text": "that as a sort of an analogy for the web application right it's it's very talented feature Rich if you will and it",
    "start": "752440",
    "end": "758480"
  },
  {
    "text": "provides a service to the audience but the audience is so excited they get a B creepy at times and there's tons of them",
    "start": "758480",
    "end": "764240"
  },
  {
    "text": "and the fans are stalky so the application in this case Whitney needs protection and that's where Kevin cner",
    "start": "764240",
    "end": "769560"
  },
  {
    "text": "comes in Kevin cner is the strong bodyguard that protects Whitney Houston from all these stocky fans so Kevin is",
    "start": "769560",
    "end": "775959"
  },
  {
    "text": "varnish and Whitney is the application so when then d about reverse caching proxy think about Kevin and Whitney now",
    "start": "775959",
    "end": "782360"
  },
  {
    "text": "if you apply this into the real world and you want to start using this does that mean you have to throw everything",
    "start": "782360",
    "end": "788399"
  },
  {
    "text": "overboard and start from scratch and build this into your architecture luckily the answer is no and that's",
    "start": "788399",
    "end": "793639"
  },
  {
    "text": "because it's all about HTP HTTP is the protocol that seems to be dominating our space and uh we speak HTTP as well and",
    "start": "793639",
    "end": "802240"
  },
  {
    "text": "you might notice or you might not notice that HTTP has built in caching mechanisms into the protocol which make",
    "start": "802240",
    "end": "808519"
  },
  {
    "text": "things a lot easier for you as who who considers him or herself a developer here yeah most most people yeah it it",
    "start": "808519",
    "end": "816560"
  },
  {
    "text": "gives you the sense of uh developer empowerment where you as a developer can control the outcome and control how",
    "start": "816560",
    "end": "822120"
  },
  {
    "text": "caching happens so let me show in a couple of examples this shouldn't be very",
    "start": "822120",
    "end": "828399"
  },
  {
    "text": "foreign uh cash control header part of HTTP spec how long will this be cashed for if you look at",
    "start": "828399",
    "end": "835199"
  },
  {
    "text": "this it's very quiet 500 seconds indeed thank you and because of its public",
    "start": "835199",
    "end": "841320"
  },
  {
    "text": "keyword it means that both the client can cach it remember browser caching uses the same syntax and shared devices",
    "start": "841320",
    "end": "848440"
  },
  {
    "text": "such as varnish let's up the anti just a little bit and throw this one in how",
    "start": "848440",
    "end": "853880"
  },
  {
    "text": "long will varnish",
    "start": "853880",
    "end": "856720"
  },
  {
    "text": "cash I'm just going to wait until I hear something out",
    "start": "858920",
    "end": "863600"
  },
  {
    "text": "loud it isn't it isn't I knew that would be trowing or or",
    "start": "863959",
    "end": "871720"
  },
  {
    "text": "making sure that it's a bit more difficult the answer is a thousand seconds farnish will cach this for a",
    "start": "871720",
    "end": "876920"
  },
  {
    "text": "thousand seconds because it gives precedence the priority to this SM maxh",
    "start": "876920",
    "end": "883040"
  },
  {
    "text": "directive and who remembers this famous quote in it it's by a guy named Phil Carlon there's only two hard things in",
    "start": "883040",
    "end": "889199"
  },
  {
    "text": "it remember what they are cash invalidation and naming things",
    "start": "889199",
    "end": "894920"
  },
  {
    "text": "exactly and the naming things well this is a caching talk not an invalidation talk that's a whole different story that",
    "start": "894920",
    "end": "900519"
  },
  {
    "text": "I could talk about the next time but the naming things already starts messing things up look at the syntax Max",
    "start": "900519",
    "end": "906720"
  },
  {
    "text": "DH s- maxh it's a bit off right",
    "start": "906720",
    "end": "912240"
  },
  {
    "text": "yes HTTP this is HTTP this is just HTTP cache control header and according to",
    "start": "912240",
    "end": "918720"
  },
  {
    "text": "the spec which we adopt and which I assume other products in that space adopt as well is s stands for shared so",
    "start": "918720",
    "end": "925320"
  },
  {
    "text": "all the shared devices should apply this value first and if that x s Max H value",
    "start": "925320",
    "end": "931880"
  },
  {
    "text": "doesn't apply then it takes the max H which means if you apply the max h of a thousand the browser is supposed to",
    "start": "931880",
    "end": "939800"
  },
  {
    "text": "respect the max age meaning the browser is allowed to cash it unless you force the cash of the browser of course for",
    "start": "939800",
    "end": "945480"
  },
  {
    "text": "500 seconds whereas we as the cache we cash it for a th seconds so that adds a little bit more",
    "start": "945480",
    "end": "951319"
  },
  {
    "text": "complexity what about this one well I'm not going to play the part where I ask you what it is it's pretty obvious right",
    "start": "951319",
    "end": "957720"
  },
  {
    "text": "we don't cash if RC is private no cash or no store either of those statements it won't cash",
    "start": "957720",
    "end": "963800"
  },
  {
    "text": "but of course each of these directives has a separate meaning private means you are allowed to cash but only if you're",
    "start": "963800",
    "end": "970519"
  },
  {
    "text": "the client so it means as soon as a a proxy in between sees private it doesn't",
    "start": "970519",
    "end": "975560"
  },
  {
    "text": "cash at all surprisingly again then it's again that naming things statement no",
    "start": "975560",
    "end": "981600"
  },
  {
    "text": "cash doesn't mean you can't cash no cash means you can cannot serve it from the cash without doing a revalidation with",
    "start": "981600",
    "end": "987800"
  },
  {
    "text": "the origin so if you have it in cash you could serve it but you need to check first if it's the latest which isn't",
    "start": "987800",
    "end": "993480"
  },
  {
    "text": "that efficient and no store means don't store it in the cash those are three different meanings but in the end",
    "start": "993480",
    "end": "999959"
  },
  {
    "text": "towards the type of cach that we operate it's pretty much the same thing who's heard of",
    "start": "999959",
    "end": "1007079"
  },
  {
    "text": "VAR VAR is an interesting one it's a cache variation mechanisms mechanism",
    "start": "1007079",
    "end": "1012880"
  },
  {
    "text": "saying to the cash look if you store this in cash make sure you have sub objects of that object so how do you",
    "start": "1012880",
    "end": "1019000"
  },
  {
    "text": "anyone have an idea how you identify an object in in any type of HTTP cache what would you use to identify an",
    "start": "1019000",
    "end": "1027319"
  },
  {
    "text": "object the URL would be a good start right if we look at restful context right the resource is identified is the",
    "start": "1028319",
    "end": "1035000"
  },
  {
    "text": "uniform resource locator or identifier that part but since we work in",
    "start": "1035000",
    "end": "1040558"
  },
  {
    "text": "multi-tenant systems that host multiple websites the host header also plays its part so you have the host header and the",
    "start": "1040559",
    "end": "1046319"
  },
  {
    "text": "URI that are used to create a hash that identifies an object in the cache what this vary header does is it says add the",
    "start": "1046319",
    "end": "1053720"
  },
  {
    "text": "value of the accept language header as well along with maybe some other headers and I know it sounds confusing that's",
    "start": "1053720",
    "end": "1059880"
  },
  {
    "text": "why I drew up this diagram for you to make life a little bit easier so when the user sends a request it does a get",
    "start": "1059880",
    "end": "1066000"
  },
  {
    "text": "request for the homepage for example.com but its browser is in English so the",
    "start": "1066000",
    "end": "1071080"
  },
  {
    "text": "accept language header that the brow browser emits contains forish knows this",
    "start": "1071080",
    "end": "1077200"
  },
  {
    "text": "sends the request to the or the arent responds with okay here's payload 200 okay cash control public Max H 500 so",
    "start": "1077200",
    "end": "1084600"
  },
  {
    "text": "we're going to store it in the cash for 500 seconds but please create a cache variation on accept language meaning it",
    "start": "1084600",
    "end": "1090840"
  },
  {
    "text": "will have the subobject with and maybe I'm Dutch speaking we have a an NL version and a Danish version and a",
    "start": "1090840",
    "end": "1096880"
  },
  {
    "text": "Swedish version and that way you can ensure that multilingual websites for example that leverage that header can",
    "start": "1096880",
    "end": "1103360"
  },
  {
    "text": "still be cached or other headers like uh accept encoding for clients that don't",
    "start": "1103360",
    "end": "1108760"
  },
  {
    "text": "support gzip encoding or as I showed you in the slide before ex fored Proto maybe",
    "start": "1108760",
    "end": "1114640"
  },
  {
    "text": "you have a TLS proxy sitting in front of varnish terminating the TLs and if it",
    "start": "1114640",
    "end": "1120159"
  },
  {
    "text": "came that way it means it's htps so that X forwarded Proto value would be htps if",
    "start": "1120159",
    "end": "1126159"
  },
  {
    "text": "it comes in directly to Varnish or under plain HTTP it would be HTTP and in order not to break the URLs because they",
    "start": "1126159",
    "end": "1132440"
  },
  {
    "text": "matter you can store an HTTP and an H https version and any valid request",
    "start": "1132440",
    "end": "1137720"
  },
  {
    "text": "header you can think of you can vary on do that make sense sense enough to go to",
    "start": "1137720",
    "end": "1144120"
  },
  {
    "text": "the next one right here's another header this is the last one that I wanted to show you that",
    "start": "1144120",
    "end": "1150480"
  },
  {
    "text": "you can use there's plenty more but what this does is it caches it for 500 seconds but if the cach expires if that",
    "start": "1150480",
    "end": "1158200"
  },
  {
    "text": "500 second counter has elapsed then a cash should normally send upon the next",
    "start": "1158200",
    "end": "1163440"
  },
  {
    "text": "request a backhand Fetch and the user has to wait until the response comes back thanks to stale while",
    "start": "1163440",
    "end": "1170080"
  },
  {
    "text": "revalidate for the next 200 seconds after expiration you can still serf old stuff while you do an asynchronous",
    "start": "1170080",
    "end": "1176799"
  },
  {
    "text": "revalidation with the origin that way you don't penalize the origin for",
    "start": "1176799",
    "end": "1182000"
  },
  {
    "text": "certain slow content so it's tolerated staleness and it's also part of the spec and I would highly advise you to use it",
    "start": "1182000",
    "end": "1188799"
  },
  {
    "text": "so that being said with all these things put into place I'd like to mention that varnish reflects those specific",
    "start": "1188799",
    "end": "1197159"
  },
  {
    "text": "standards and respects them it complies to the HTTP standard conventions and while that's very easy to apply on",
    "start": "1197159",
    "end": "1204760"
  },
  {
    "text": "imagery CSS JavaScript static HTML files there's no real difficulty there things",
    "start": "1204760",
    "end": "1211320"
  },
  {
    "text": "start getting more interesting when we venture into the world of cookies now who shares this common hatred of cookies",
    "start": "1211320",
    "end": "1218480"
  },
  {
    "text": "just like myself a lot of people yeah but we have to deal with them there's there's nothing we can do what I can say",
    "start": "1218480",
    "end": "1223799"
  },
  {
    "text": "and you can see it in that little text balloon over there as soon as varnish sees a cookie",
    "start": "1223799",
    "end": "1228840"
  },
  {
    "text": "it doesn't cash by default and that also applies to authorization headers coming in and that",
    "start": "1228840",
    "end": "1236000"
  },
  {
    "text": "is not a limitation in varnish it's actually a feature because typically it's too dangerous to assume that you",
    "start": "1236000",
    "end": "1241520"
  },
  {
    "text": "can cash because it's content for your eyes only and there have been plenty of examples where people set the cash too",
    "start": "1241520",
    "end": "1247600"
  },
  {
    "text": "aggressive I did it in my time I remember putting the cash too aggressive and we started caching uh shopping cart",
    "start": "1247600",
    "end": "1254799"
  },
  {
    "text": "data so people started logging in seeing someone else's shopping cart cards I've heard this famous story where tax",
    "start": "1254799",
    "end": "1260640"
  },
  {
    "text": "returns were cashed and everyone could see this one person's tax returns pretty bad so that's why we're very cautious by",
    "start": "1260640",
    "end": "1268000"
  },
  {
    "text": "default and that's the emphasis here by default and as soon as we see a cookie we don't cash which requires me to Halt",
    "start": "1268000",
    "end": "1274520"
  },
  {
    "text": "this presentation and stop it through a screeching halt and reflect on that so",
    "start": "1274520",
    "end": "1280360"
  },
  {
    "text": "I'm going to present a statement again I'm going to ask you a question and together we're going to come to a",
    "start": "1280360",
    "end": "1285960"
  },
  {
    "text": "conclusion the statement that I would like to reiterate is varnish does not cash when cookies are present statement",
    "start": "1285960",
    "end": "1294600"
  },
  {
    "text": "question to you do you know any modern websites that don't use",
    "start": "1294600",
    "end": "1300120"
  },
  {
    "text": "cookies conclusion varnish cannot be used in the real world would be the initial conclusion right and the answer",
    "start": "1300120",
    "end": "1306400"
  },
  {
    "text": "of course is no because I've used the word by default to to cover my basis",
    "start": "1306400",
    "end": "1312279"
  },
  {
    "text": "what you can do in varnish and that's one of the core features and that what's made me fall in love with varnish back in 2010 is is we have this built-in",
    "start": "1312279",
    "end": "1319320"
  },
  {
    "text": "programming language called the varnish configuration language or vcl and it allows you to extend the standard",
    "start": "1319320",
    "end": "1325559"
  },
  {
    "text": "Behavior standard Behavior such as cookie comes in no caching you can tune that to your behavior and to the",
    "start": "1325559",
    "end": "1332120"
  },
  {
    "text": "behavior of the application so that vcl language it actually allows you",
    "start": "1332120",
    "end": "1338240"
  },
  {
    "text": "to interface with request handling reroute requests to wherever they need",
    "start": "1338240",
    "end": "1343520"
  },
  {
    "text": "to be routed manipulate any type of response coming in from the backand selecting",
    "start": "1343520",
    "end": "1350039"
  },
  {
    "text": "which backand you connect to maybe you have a multitude of backhand servers you connect to choose those controlling",
    "start": "1350039",
    "end": "1355279"
  },
  {
    "text": "every aspect of the cach and then finally making decisions on the edge and you'll hear that throughout this",
    "start": "1355279",
    "end": "1360720"
  },
  {
    "text": "presentation on the edge now the edge represents the outer tier of your web platform it's services that typically",
    "start": "1360720",
    "end": "1367679"
  },
  {
    "text": "interface with users and those take in a lot of traffic a lot of requests and caches are typically those Edge devices",
    "start": "1367679",
    "end": "1374279"
  },
  {
    "text": "so are cdns but cdns are nothing more than caches distribut it globally as a",
    "start": "1374279",
    "end": "1379520"
  },
  {
    "text": "service just wanted to put that out there vcl is a domain specific language meaning it has no other applications",
    "start": "1379520",
    "end": "1387200"
  },
  {
    "text": "except varnish it has a typical curly braces style I'll throw in a ton of code examples in a minute and it gets",
    "start": "1387200",
    "end": "1394120"
  },
  {
    "text": "transpiled into C at startup and that c code gets compiled into a shared object which is linked to the varnish runtime",
    "start": "1394120",
    "end": "1400880"
  },
  {
    "text": "makes it super fast super flexible it's not a language that you have to Define all your logic in a top down way there",
    "start": "1400880",
    "end": "1407240"
  },
  {
    "text": "is a standard Behavior you just extend the behavior where you don't like the standards and that happens through a",
    "start": "1407240",
    "end": "1414440"
  },
  {
    "text": "finite State machine where you hook into and this is the finite State machine when I do varnish workshops like these",
    "start": "1414440",
    "end": "1420159"
  },
  {
    "text": "three-hour workshops full day workshops I typically spend half an hour drilling it into your brains but we don't have",
    "start": "1420159",
    "end": "1426520"
  },
  {
    "text": "that kind of time so I'm going to quickly go over it the boxes that you see represented by those uh squares or",
    "start": "1426520",
    "end": "1433600"
  },
  {
    "text": "those rectangular shapes are states and they represent specific parts of the varnish engine they all start with vcl",
    "start": "1433600",
    "end": "1440640"
  },
  {
    "text": "uncore and then they have a short name the first one you see here going from start all the way up left is vcl Rec V",
    "start": "1440640",
    "end": "1448640"
  },
  {
    "text": "which stands for receive and that's the logic that is executed when it receives a request the little arrows that you see",
    "start": "1448640",
    "end": "1456520"
  },
  {
    "text": "in the different colors those are the actions you can take within a specific state that would allow you to go to the",
    "start": "1456520",
    "end": "1462440"
  },
  {
    "text": "next so if you receive a request and you deem it cashable you follow the green arrows so you create the hash and you",
    "start": "1462440",
    "end": "1469360"
  },
  {
    "text": "enter in vcl hash where that URL and that host header is used to compile a hash you look it up in the cache and",
    "start": "1469360",
    "end": "1475240"
  },
  {
    "text": "then it's either a hit which is the green line a Miss which is the blue line or a forced cash bypass which is the red",
    "start": "1475240",
    "end": "1482000"
  },
  {
    "text": "line and then you have others as well so these things should make sense when you talk about caching so if we follow the",
    "start": "1482000",
    "end": "1487159"
  },
  {
    "text": "green part you receive the request it's deemed cashable because of preconditions there's no cookies no authorization",
    "start": "1487159",
    "end": "1492880"
  },
  {
    "text": "headers it's a get request you create the hash look it up in cach it's a hit you go go to vcl hit you deliver to the",
    "start": "1492880",
    "end": "1499320"
  },
  {
    "text": "client end of story but when you have a hit and the content has expired then you",
    "start": "1499320",
    "end": "1504799"
  },
  {
    "text": "go to miss and miss follows the Blue Line blue is not bad like a Miss is a hit that just hasn't happened yet and",
    "start": "1504799",
    "end": "1510880"
  },
  {
    "text": "then you go into that big gray box and as soon as you go into the gray box that's where you do connections with the",
    "start": "1510880",
    "end": "1516159"
  },
  {
    "text": "origin with your backend server our goal in this presentation is to keep that to a minimum because it's typically quite",
    "start": "1516159",
    "end": "1522200"
  },
  {
    "text": "sensitive to heavy traffic heavy load so that's the finite State machine you can extend I know your anticipation you want",
    "start": "1522200",
    "end": "1529919"
  },
  {
    "text": "to see a code example here it goes here's the first one here's how we could deal with cookies it's a a very",
    "start": "1529919",
    "end": "1535720"
  },
  {
    "text": "rudimentary approach so the syntax is in vcl syntax 4.1 has no relationship to",
    "start": "1535720",
    "end": "1541399"
  },
  {
    "text": "the version of varnish I think varnish is at 7.3 if I'm not mistaken this is the latest and greatest vcl syntax 4.1",
    "start": "1541399",
    "end": "1549159"
  },
  {
    "text": "we've introduced these version markers to deal with compatibility then you define a back end which happens to be on",
    "start": "1549159",
    "end": "1555399"
  },
  {
    "text": "the same machine if your environment is big enough you probably have separate nodes for varnish separate backend",
    "start": "1555399",
    "end": "1560440"
  },
  {
    "text": "servers but in this case the web server is at port 8080 then we start hooking into that famous finite State machine",
    "start": "1560440",
    "end": "1567360"
  },
  {
    "text": "we're hooking into vcl receive which is the part when we receive the request if we receive the request we're looking at",
    "start": "1567360",
    "end": "1573720"
  },
  {
    "text": "the URL property of the request object so what's the URL of whatever we got in if it matches the following regular",
    "start": "1573720",
    "end": "1580399"
  },
  {
    "text": "expression then we take an action the regular expression which is used with the operator the till the operator",
    "start": "1580399",
    "end": "1587000"
  },
  {
    "text": "indicating this is a Rex if it's SL admin or subordinate resource it means",
    "start": "1587000",
    "end": "1592919"
  },
  {
    "text": "you're in very personalized territory you probably don't want to cash it so you do return pass and under all other",
    "start": "1592919",
    "end": "1600559"
  },
  {
    "text": "circumstances you trim off the cookies because you don't need them ensuring that varnish could cach it so within the",
    "start": "1600559",
    "end": "1606440"
  },
  {
    "text": "finite State machine this is where we're at we're at the pass level we're doing return pass you end up in pass you",
    "start": "1606440",
    "end": "1612360"
  },
  {
    "text": "always bypass the cach and look things up in the cach you can do more you can hook into vcl backend response response",
    "start": "1612360",
    "end": "1618720"
  },
  {
    "text": "just for reference where's vcl backend response it's all the way down there it is when you first went into the big gray",
    "start": "1618720",
    "end": "1625559"
  },
  {
    "text": "box you did a fetch first which means you sent a request to your origin because something wasn't stored in cash",
    "start": "1625559",
    "end": "1631440"
  },
  {
    "text": "uh because of a miss or a bypass and as soon as the backend response prior to storing that object in the cache that's",
    "start": "1631440",
    "end": "1638399"
  },
  {
    "text": "when you hit vcl backend response so let's go back to the code what we're trying to do here is override the time",
    "start": "1638399",
    "end": "1645200"
  },
  {
    "text": "to live if the back hand response object has an HTTP header called content type",
    "start": "1645200",
    "end": "1651440"
  },
  {
    "text": "which is usually the case right HTTP responses have content types if that matches image or video and then a slash",
    "start": "1651440",
    "end": "1658240"
  },
  {
    "text": "then obviously we're dealing with an image or video and that's very static and we want to cach it as long as possible so we override the TTL to a",
    "start": "1658240",
    "end": "1665760"
  },
  {
    "text": "year so even if you throw in those cache control headers we'll completely ignore them bump it to a year and even override",
    "start": "1665760",
    "end": "1672559"
  },
  {
    "text": "the cache control header that might have been said already for the client so that the client caches it it for a year as",
    "start": "1672559",
    "end": "1678240"
  },
  {
    "text": "well if it's not an image or video but a plain HTML file or a Json response then",
    "start": "1678240",
    "end": "1684320"
  },
  {
    "text": "we'll cash it for an hour just to show you that you can hook into these parts so remember we're hooking into that type",
    "start": "1684320",
    "end": "1689799"
  },
  {
    "text": "of business let's throw in some ugly code right we all like a little bit of ugly",
    "start": "1689799",
    "end": "1695159"
  },
  {
    "text": "code here it is a lot of it ugly regular expression",
    "start": "1695159",
    "end": "1700519"
  },
  {
    "text": "this is this is what I'm trying to eliminate and varnish piece by piece we've done it in the Enterprise version already with good modules we still have",
    "start": "1700519",
    "end": "1707080"
  },
  {
    "text": "a littleit to work in open source Rex up all and Rex up are very popular it's regular expression substitutions it's",
    "start": "1707080",
    "end": "1713360"
  },
  {
    "text": "find and replace using regular Expressions what we're doing in this logic luckily I annotated it with",
    "start": "1713360",
    "end": "1718880"
  },
  {
    "text": "comments is we're trying to optimize the URL we're trying to sanitize it because lesson number one we learned in security",
    "start": "1718880",
    "end": "1724840"
  },
  {
    "text": "don't trust the client don't trust the user first thing we do is we do alphabetic sorting of the query string",
    "start": "1724840",
    "end": "1731600"
  },
  {
    "text": "parameters because everything's a string right you identify objects in the cache using the URL if you reorder PR string",
    "start": "1731600",
    "end": "1737960"
  },
  {
    "text": "arguments like ID equals 1 and Lang equals DK if you switch them up it's a",
    "start": "1737960",
    "end": "1744000"
  },
  {
    "text": "different string it's a cachas so we alphabetically sort them if you're in",
    "start": "1744000",
    "end": "1749399"
  },
  {
    "text": "the marketing business you use a lot of probably Google analytics campaign codes",
    "start": "1749399",
    "end": "1754559"
  },
  {
    "text": "those add no value whatsoever to the server and they cause cache misses because the values change and it's",
    "start": "1754559",
    "end": "1760720"
  },
  {
    "text": "pretty much the same resource but with extra annotations we trim them off we don't need them because the JavaScript",
    "start": "1760720",
    "end": "1765880"
  },
  {
    "text": "code that Google analytics uses will treat those and then in the end if you",
    "start": "1765880",
    "end": "1770960"
  },
  {
    "text": "have these hashes that you use for HTML anchors to navigate your elements on the page those add no value to the server",
    "start": "1770960",
    "end": "1777760"
  },
  {
    "text": "either Tri them off and if your url ends with a question mark it means you probably tried to add query string",
    "start": "1777760",
    "end": "1784480"
  },
  {
    "text": "parameters but you didn't trim that off as well and that hooks into this little",
    "start": "1784480",
    "end": "1789600"
  },
  {
    "text": "thing now let's apply the logic we've applied so far to the wonderful world of",
    "start": "1789600",
    "end": "1795080"
  },
  {
    "text": "cookies we already did it let let me go go back a little bit to this code this",
    "start": "1795080",
    "end": "1800159"
  },
  {
    "text": "so how do we deal with cookies we trim them off unless we're in the admin page let's try a different approach where",
    "start": "1800159",
    "end": "1805880"
  },
  {
    "text": "URLs don't matter anymore here we go another ugly one but don't worry I got your back I'm going to",
    "start": "1805880",
    "end": "1812320"
  },
  {
    "text": "show a prettier piece of code later on what we're doing here is identifying whether there's a cookie because",
    "start": "1812320",
    "end": "1817760"
  },
  {
    "text": "remember varnish doesn't cash by default if there's cookies what we're doing with these regular Expressions is actually",
    "start": "1817760",
    "end": "1823519"
  },
  {
    "text": "removing every single cookie except that pattern which is pH P session ID so if you have a session ID cookie it means",
    "start": "1823519",
    "end": "1830240"
  },
  {
    "text": "you're probably logged in and you don't want to start caching so in the end we remove every cookie except that one and",
    "start": "1830240",
    "end": "1836159"
  },
  {
    "text": "if the result and that's that last if is a collection of widespace characters",
    "start": "1836159",
    "end": "1841200"
  },
  {
    "text": "then you probably don't need cookies this means that everything is cachable until you log in it's a very sensible",
    "start": "1841200",
    "end": "1848640"
  },
  {
    "text": "thing and uh the true PS and the WordPress of this world typically use",
    "start": "1848640",
    "end": "1853960"
  },
  {
    "text": "this but cookies aren't necessarily evil I'm I'm giving them a bad rep based on what I'm saying but you can actually",
    "start": "1853960",
    "end": "1859960"
  },
  {
    "text": "leverage them to create custom cach variations hence this example same deal",
    "start": "1859960",
    "end": "1865679"
  },
  {
    "text": "remove every single cookie except the language cookie because in this context we're in a multilingual website where",
    "start": "1865679",
    "end": "1871399"
  },
  {
    "text": "you typically go you remember right you go to the splash page you select your region you save it once and then your",
    "start": "1871399",
    "end": "1878559"
  },
  {
    "text": "language gets stored in that cookie and is used throughout the website what we're doing here is removing every",
    "start": "1878559",
    "end": "1884240"
  },
  {
    "text": "single cookie for the back end except the Lang anguage cookie and even though there is a language cookie we're not",
    "start": "1884240",
    "end": "1891080"
  },
  {
    "text": "going to bypass the cash we're going to force the cash by doing return hash so we're saying even though there is a",
    "start": "1891080",
    "end": "1897120"
  },
  {
    "text": "cookie we still want a cash but not just like that just not just with every URL",
    "start": "1897120",
    "end": "1903039"
  },
  {
    "text": "what we want to do is we want to create custom cache variations based on the language and that's where we go into vcl",
    "start": "1903039",
    "end": "1910279"
  },
  {
    "text": "hash where we influence how the hash is created where the URL and the host header are still applied we're going to",
    "start": "1910279",
    "end": "1916200"
  },
  {
    "text": "add extra logic extra hashing information by checking the cookie value and extracting the selected language as",
    "start": "1916200",
    "end": "1922840"
  },
  {
    "text": "a variation so in this case if the cookie has content or a cookie name",
    "start": "1922840",
    "end": "1929240"
  },
  {
    "text": "called language and the value is either Dutch German French could add Danish there as well then Rec sub perform a",
    "start": "1929240",
    "end": "1937120"
  },
  {
    "text": "find and replace look for the language value which is grouped here NL d f FR",
    "start": "1937120",
    "end": "1943679"
  },
  {
    "text": "take that value which is group one and hash it meaning that the language is now part of the hash if that is not the case",
    "start": "1943679",
    "end": "1950519"
  },
  {
    "text": "you fall back to English and that way you still have the flexibility of having a multilingual web website without",
    "start": "1950519",
    "end": "1956320"
  },
  {
    "text": "leveraging browser language and with the security in there not to create too many variations because if we don't",
    "start": "1956320",
    "end": "1962120"
  },
  {
    "text": "explicitly Define the languages we support have you ever seen the accept",
    "start": "1962120",
    "end": "1967760"
  },
  {
    "text": "language header sometimes or or language cookies get infinite and if we don't validate it people can get clever and",
    "start": "1967760",
    "end": "1974320"
  },
  {
    "text": "start entering random strings so we've now a cookies to our benefit to create a",
    "start": "1974320",
    "end": "1979880"
  },
  {
    "text": "multilingual website now part of my mission as an evangelist is to get rid of these ugly regular expression",
    "start": "1979880",
    "end": "1986760"
  },
  {
    "text": "substitutions and while it's still a common tactic for vcl Riders I would",
    "start": "1986760",
    "end": "1992039"
  },
  {
    "text": "like to convince you to go into the following territory which is a lot more clean there is a cookie module that has",
    "start": "1992039",
    "end": "1998880"
  },
  {
    "text": "been added one or two years ago to the core of varnish so if you're on a recent version of varnish you have that module",
    "start": "1998880",
    "end": "2005240"
  },
  {
    "text": "in core you can import it and then you have a clean interface to do the same thing so if we look back at this tons of",
    "start": "2005240",
    "end": "2011320"
  },
  {
    "text": "ugly regular Expressions what you do now is just say cookie. keep which means",
    "start": "2011320",
    "end": "2016880"
  },
  {
    "text": "remove everything except the cookie or the list of cookies you presented there and then you can use cookie. get to",
    "start": "2016880",
    "end": "2023559"
  },
  {
    "text": "actually extract values from cookies and create the cach variations you want please use cookie V",
    "start": "2023559",
    "end": "2030440"
  },
  {
    "text": "mod okay next up what you've seen so far is cies are very important to the level",
    "start": "2030440",
    "end": "2036399"
  },
  {
    "text": "of personaliz Iz ation and segmentation of your cach but it's usually pretty binary either the page is cashable or",
    "start": "2036399",
    "end": "2043600"
  },
  {
    "text": "the page is not cachable and that's not always Fair especially when you're in",
    "start": "2043600",
    "end": "2048800"
  },
  {
    "text": "situations where you have everything is cachable for example 99% of the page is cachable except that little login bar up",
    "start": "2048800",
    "end": "2056118"
  },
  {
    "text": "top and you yeah as soon as as that comes in there is no caching happening because that's the common denominator",
    "start": "2056119",
    "end": "2062358"
  },
  {
    "text": "you're returning it as a single response so how do we tackle this we use",
    "start": "2062359",
    "end": "2067839"
  },
  {
    "text": "placeholder technology placeholders to separate the cachable and the non-cashable content and do SUB requests",
    "start": "2067839",
    "end": "2073919"
  },
  {
    "text": "to arrange this you probably use this in your regular development tasks who can",
    "start": "2073919",
    "end": "2080320"
  },
  {
    "text": "figure out a technology that is pretty common in web that does this any takers here what would we use as a",
    "start": "2080320",
    "end": "2088520"
  },
  {
    "text": "technology still with me still awake a technology that probably sits in your",
    "start": "2088639",
    "end": "2095320"
  },
  {
    "text": "tool belt if you're more at the front end",
    "start": "2095320",
    "end": "2100320"
  },
  {
    "text": "level I'm GNA I'm going to spoil the beans here or Spill the Beans rather",
    "start": "2104000",
    "end": "2110079"
  },
  {
    "text": "yes Tada Ajax Ajax calls right they",
    "start": "2110079",
    "end": "2115280"
  },
  {
    "text": "typically do that you can cach the entire page but that little stateful bit you load it asynchronously via",
    "start": "2115280",
    "end": "2121400"
  },
  {
    "text": "JavaScript and comes with all the benefits and the disadvantages it's very common a lot of people know about it",
    "start": "2121400",
    "end": "2128240"
  },
  {
    "text": "most Frameworks support it but there's downsides to it because it's pretty much a middle finger to the client saying",
    "start": "2128240",
    "end": "2134760"
  },
  {
    "text": "look whatever Happening Here is now your responsibility you're you have to load this resource because we we don't really",
    "start": "2134760",
    "end": "2141839"
  },
  {
    "text": "want to bother and on very poor network connections if you have a really poor 3G or even an edge connection God forbid",
    "start": "2141839",
    "end": "2149680"
  },
  {
    "text": "then that extra round trip will really matter and there's ways to eliminate that anyone have an idea what kind of",
    "start": "2149680",
    "end": "2156319"
  },
  {
    "text": "server technology we could use for that it's an official standard but I'm not sure if everyone is familiar with it so",
    "start": "2156319",
    "end": "2162480"
  },
  {
    "text": "I'll give it three seconds before I spill it ah yes there we go we have a very",
    "start": "2162480",
    "end": "2170280"
  },
  {
    "text": "well educated audience here now Edge side includes is very much like server side includes who remers server side",
    "start": "2170280",
    "end": "2176839"
  },
  {
    "text": "includes from back in the day yes similar story right you put a placeholder in there in your HTML code",
    "start": "2176839",
    "end": "2184240"
  },
  {
    "text": "and you expect someone else to figure out and back in the day the server figured it out who remembers these",
    "start": "2184240",
    "end": "2190920"
  },
  {
    "text": "really ugly front page extensions from back in the day similar story right well edite includes do the same thing but as",
    "start": "2190920",
    "end": "2197880"
  },
  {
    "text": "the name implies On The Edge on the outer tier in varnish so you can throw",
    "start": "2197880",
    "end": "2203440"
  },
  {
    "text": "this into your code which is an official standard uh it was invented by Akamai to be honest and now a lot of Frameworks a",
    "start": "2203440",
    "end": "2210880"
  },
  {
    "text": "lot of edge Technologies a lot of caches support it we do as well so as soon as varnish sees this in the HTML or",
    "start": "2210880",
    "end": "2218359"
  },
  {
    "text": "whatever output you use we're going to do an ESI sub request we're going to",
    "start": "2218359",
    "end": "2223839"
  },
  {
    "text": "take that send a request to that endpoint header in this case and store it separately which gives you some",
    "start": "2223839",
    "end": "2231400"
  },
  {
    "text": "really interesting benefit so it's a placeholder it's pared by varnish but varnish will Stitch the output together",
    "start": "2231400",
    "end": "2237280"
  },
  {
    "text": "and still present it as a single HTTP response so we're not bothering the end user with hey go fetch this go fetch it",
    "start": "2237280",
    "end": "2243440"
  },
  {
    "text": "no we assemble it on the edge and every block can have its own state and its own",
    "start": "2243440",
    "end": "2250079"
  },
  {
    "text": "TTL so if something is not cachable well that farnish will take care of that but it will still show you whatever it has",
    "start": "2250079",
    "end": "2257079"
  },
  {
    "text": "and maybe 99% can be cached or if you want to have separate ttls it's also possible so how do you instrument that",
    "start": "2257079",
    "end": "2263839"
  },
  {
    "text": "in vcl it's as simple as doing this however I'm not a big fan of doing it",
    "start": "2263839",
    "end": "2268920"
  },
  {
    "text": "that way because that means regardless of the size of the response bodies varnish is gonna have to scan through",
    "start": "2268920",
    "end": "2274119"
  },
  {
    "text": "looking for an ESI tag which might become pretty CPU intensive after a while so",
    "start": "2274119",
    "end": "2279359"
  },
  {
    "text": "I'm a big fan of negotiation and there's even HTTP headers for that so what we can do is actually emit a surrogate",
    "start": "2279359",
    "end": "2285640"
  },
  {
    "text": "capability header which is again an official HTTP header saying look we have ESI support we are a surrogate so we can",
    "start": "2285640",
    "end": "2293400"
  },
  {
    "text": "act on your behalf and perform ESI and then as an application developer and I know some Frameworks support this out of",
    "start": "2293400",
    "end": "2299520"
  },
  {
    "text": "the box you can look for that header and if the header has the value you want you",
    "start": "2299520",
    "end": "2305079"
  },
  {
    "text": "can respond with hey if you have surrogate capability for ESI I will take surrogate control and as soon as varnish",
    "start": "2305079",
    "end": "2311520"
  },
  {
    "text": "sees that surrogate control header come back with ESI in it it will do the processing like here we Adit the header",
    "start": "2311520",
    "end": "2319240"
  },
  {
    "text": "saying hey dear backend I'm not a regular client I'm actually a surrogate I'm here to fetch content but if you",
    "start": "2319240",
    "end": "2326079"
  },
  {
    "text": "give me ESI I will know how to deal with it and then the back end could say fine let's do it and then we start parsing",
    "start": "2326079",
    "end": "2332880"
  },
  {
    "text": "ESI some Frameworks do that it's a very logical like sort of a handshaking way",
    "start": "2332880",
    "end": "2338319"
  },
  {
    "text": "and then as a developer or as a front-end person you can throw this into your HTML code knowing that something",
    "start": "2338319",
    "end": "2344319"
  },
  {
    "text": "else is going to deal with that and something else might turn it into this maybe there's a session cookie I've",
    "start": "2344319",
    "end": "2350319"
  },
  {
    "text": "logged in and then you have that placeholder it's very efficient if it turns out you don't have surrogate",
    "start": "2350319",
    "end": "2356480"
  },
  {
    "text": "capabilities this will be the HTML that you output server side anyway and uh it would make sense to have a little",
    "start": "2356480",
    "end": "2362640"
  },
  {
    "text": "component a view component in there uh I've built certain view components for that uh I come more from the PHP world",
    "start": "2362640",
    "end": "2368920"
  },
  {
    "text": "where certain Frameworks have that built in and it's very easy the fallback is if there's that that little view component",
    "start": "2368920",
    "end": "2374680"
  },
  {
    "text": "will do the negotiation for you and if it's not there it will just render it interly status update ladies and",
    "start": "2374680",
    "end": "2381319"
  },
  {
    "text": "gentlemen we are 37 minutes in let's take a moment to reflect take a sip of",
    "start": "2381319",
    "end": "2387280"
  },
  {
    "text": "water which I will do now and think about what we've done so far we have looked into the level of",
    "start": "2387280",
    "end": "2395079"
  },
  {
    "text": "personalization by removing the cookies we don't need because they're going to mess up our hit rate for some cookies",
    "start": "2395079",
    "end": "2401240"
  },
  {
    "text": "that were useful we actually leverag them to create cash variations and we've",
    "start": "2401240",
    "end": "2406280"
  },
  {
    "text": "realized that it doesn't always make sense to send a single response sometimes we want to chop things up and",
    "start": "2406280",
    "end": "2412599"
  },
  {
    "text": "give things their own State make things certain things cashable others not but the big lesson now and this is where we",
    "start": "2412599",
    "end": "2418960"
  },
  {
    "text": "go into the interesting bit is that even though 99% is hit is cashable that 1%",
    "start": "2418960",
    "end": "2424440"
  },
  {
    "text": "can really hurt you if it season of traffic those non-cashable routes so the",
    "start": "2424440",
    "end": "2430000"
  },
  {
    "text": "mindset we'll apply here is instead of just serving content on the edge we might take advantage of that vcl",
    "start": "2430000",
    "end": "2435880"
  },
  {
    "text": "language and do more compute do more personalization I'm going to throw a little some random ones in here just to",
    "start": "2435880",
    "end": "2443680"
  },
  {
    "text": "show you we can handle post requests as well posts are typically not cashable if",
    "start": "2443680",
    "end": "2449240"
  },
  {
    "text": "you look at the restful uh theory about it if you do a post to something it means you're probably creating a new",
    "start": "2449240",
    "end": "2454839"
  },
  {
    "text": "resource which is a stage change typically not cachable but in certain cases it might make sense to cash uh or",
    "start": "2454839",
    "end": "2461319"
  },
  {
    "text": "add the request payload to the hash you could do that I'm not going to elaborate",
    "start": "2461319",
    "end": "2466920"
  },
  {
    "text": "on the code you can do other stuff like rate limiting saying hey under certain circumstances I want this client to be",
    "start": "2466920",
    "end": "2473760"
  },
  {
    "text": "like limited to a megabit per second perhaps or we can do request throttling",
    "start": "2473760",
    "end": "2480560"
  },
  {
    "text": "where you could look at the client IP which is stored in client identity and allow that client to do 15 requests",
    "start": "2480560",
    "end": "2487800"
  },
  {
    "text": "every 10 seconds there's typically more logic to it I'm just oversimplifying it and if",
    "start": "2487800",
    "end": "2493920"
  },
  {
    "text": "you exceed that you're in the Penalty Box for 30 seconds and that is denied function will deny you access and if",
    "start": "2493920",
    "end": "2499800"
  },
  {
    "text": "you've overstepped the boundaries then we're going to return synthetic output",
    "start": "2499800",
    "end": "2505119"
  },
  {
    "text": "and you'll see that throughout the presentation we'll be using plenty of synthetic output the definition of synthetic output is output that we",
    "start": "2505119",
    "end": "2511640"
  },
  {
    "text": "created that didn't originate from a backend fetch so whatever we're returning we're not storing it in the",
    "start": "2511640",
    "end": "2517000"
  },
  {
    "text": "cach we're just immediately returning it to you and we're giving you some meta information you're still blocked for x",
    "start": "2517000",
    "end": "2523160"
  },
  {
    "text": "amount of seconds you can do that so security measures we've talked about cookies",
    "start": "2523160",
    "end": "2530000"
  },
  {
    "text": "quite a bit now it's time to talk about authentication you can turn varnish into an authentication ba Gateway pretty much",
    "start": "2530000",
    "end": "2536800"
  },
  {
    "text": "taking over that task from the origin because if you have authentication On",
    "start": "2536800",
    "end": "2542520"
  },
  {
    "text": "the Origin well you can't cach it so we could take over that job this is a super",
    "start": "2542520",
    "end": "2547880"
  },
  {
    "text": "insecure way but then again basic authentication is not that secure right it's just a base",
    "start": "2547880",
    "end": "2553680"
  },
  {
    "text": "64 username and password pair separated by a colon so you could check it that",
    "start": "2553680",
    "end": "2559520"
  },
  {
    "text": "way you could say okay if the authorization header is other than that b 64 string I think if you Bas 64 decode",
    "start": "2559520",
    "end": "2566000"
  },
  {
    "text": "it you end up with username user and pause word pause I guess and then you trim off the authorization header",
    "start": "2566000",
    "end": "2571440"
  },
  {
    "text": "because remember farnish won't cach otherwise and if we trigger that 401",
    "start": "2571440",
    "end": "2576720"
  },
  {
    "text": "synthetically then we end up in vcl syn which is the template we use to return synthetic output we're going to attach",
    "start": "2576720",
    "end": "2583480"
  },
  {
    "text": "that www authenticate header and the browser will look for that and if it sees that it will show you that typical",
    "start": "2583480",
    "end": "2589920"
  },
  {
    "text": "server site popup remember that one right it pops up and it gives you a way",
    "start": "2589920",
    "end": "2595119"
  },
  {
    "text": "to enter your credentials which your browser will then convert into that b 64 encoded string so far so good but",
    "start": "2595119",
    "end": "2601359"
  },
  {
    "text": "there's more efficient ways of doing it more flexible ways there's a module out there in the wild in the open called",
    "start": "2601359",
    "end": "2607119"
  },
  {
    "text": "basic o you have to compile it from Source unfortunately the people who built it didn't package it but it allows",
    "start": "2607119",
    "end": "2613359"
  },
  {
    "text": "you to read the typical HT passwd file which web servers typically use and it",
    "start": "2613359",
    "end": "2618920"
  },
  {
    "text": "allows you to have a list of multiple users and passwords and they support hashing as well because you can md5 hash",
    "start": "2618920",
    "end": "2625839"
  },
  {
    "text": "your password into those hdwds and pretty much replicate the same thing now",
    "start": "2625839",
    "end": "2631000"
  },
  {
    "text": "so far so good that's basic all but what about JWT who's heard of Jason web tokens",
    "start": "2631000",
    "end": "2637160"
  },
  {
    "text": "majority I would say well for those of you who haven't it's a is it an",
    "start": "2637160",
    "end": "2642240"
  },
  {
    "text": "authorization or an authentication mechanism I typically ask the audiences that and opinions tend to vary what",
    "start": "2642240",
    "end": "2647800"
  },
  {
    "text": "what's the opinion here is it authorization authentication what is it both I'm happy with that we're not",
    "start": "2647800",
    "end": "2654720"
  },
  {
    "text": "offending anyone everyone's right rization authentication it typically",
    "start": "2654720",
    "end": "2660079"
  },
  {
    "text": "consists of or it always consists of three parts separated by dots and thanks",
    "start": "2660079",
    "end": "2665280"
  },
  {
    "text": "to the color coding you can see that there's different elements the red part is the header the pink part is the",
    "start": "2665280",
    "end": "2671119"
  },
  {
    "text": "actual payload of the token and the blue part is the cryptographic signature that is secured within",
    "start": "2671119",
    "end": "2677400"
  },
  {
    "text": "hmac as such and the hmac of course has a secret key so if we decode this",
    "start": "2677400",
    "end": "2683640"
  },
  {
    "text": "because this is nothing more than Jason encoded with Bas 64 if we Bas 64 decode it this part ends up in that and the",
    "start": "2683640",
    "end": "2690880"
  },
  {
    "text": "other you can use your imagination right so the header typically dictates the",
    "start": "2690880",
    "end": "2696319"
  },
  {
    "text": "type we have it's a Json web token and the algorithm we use to secure it is an",
    "start": "2696319",
    "end": "2701400"
  },
  {
    "text": "hmax signature with shot 256 as the hash gives you an idea on what security",
    "start": "2701400",
    "end": "2706480"
  },
  {
    "text": "mechanism to use then of course you have the middle part which has the sub the name the IAT the EXP pretty short naming",
    "start": "2706480",
    "end": "2714079"
  },
  {
    "text": "conventions right that's because all that data has to go over the wire so if you're wasteful with with strings it's",
    "start": "2714079",
    "end": "2720599"
  },
  {
    "text": "going to be a really huge string you send over the wire ALG and type are are pretty standard naming conventions sub",
    "start": "2720599",
    "end": "2727640"
  },
  {
    "text": "IAT and exp as well and there's more so what we're saying with sub is that's your unique identifier that's the client",
    "start": "2727640",
    "end": "2733440"
  },
  {
    "text": "ID name is a custom one I add it it's John do it's the name of the user IAT is",
    "start": "2733440",
    "end": "2739200"
  },
  {
    "text": "the issued at which is the time this was created and X is the expiration time",
    "start": "2739200",
    "end": "2745559"
  },
  {
    "text": "those are Unix timestamps don't forget that this is public data the user can read this",
    "start": "2745559",
    "end": "2752359"
  },
  {
    "text": "themselves don't put any data in there that the end user is not allowed to see it's not that secure the only security",
    "start": "2752359",
    "end": "2759040"
  },
  {
    "text": "level that is in there is to protect you from tampering let's say you have an",
    "start": "2759040",
    "end": "2764079"
  },
  {
    "text": "expired token and you want to update the expiration time as a user you can do so you can decode the Json and Fiddle with",
    "start": "2764079",
    "end": "2770880"
  },
  {
    "text": "the timing re-encode it and send it to the server and try to do privilege escalation or extend your token thing is",
    "start": "2770880",
    "end": "2777200"
  },
  {
    "text": "there is a cryptographic signature in there that is an hmac with sha 256 of",
    "start": "2777200",
    "end": "2782280"
  },
  {
    "text": "your header and your payload concatenate it with adult and then has a secret on top of it so if the signature doesn't",
    "start": "2782280",
    "end": "2789160"
  },
  {
    "text": "match it means someone tampered with the data and that's the security level you have and the story is that varnish can",
    "start": "2789160",
    "end": "2795160"
  },
  {
    "text": "validate that so who knows the secret key that is used for the hmac the one who creates the token and the one that",
    "start": "2795160",
    "end": "2802160"
  },
  {
    "text": "validates the token and in this context we as varnish would be the validator how do you pass those along you can do it",
    "start": "2802160",
    "end": "2807920"
  },
  {
    "text": "with cookies on a website but it typically happens in an API context with a beer authentication token that's the",
    "start": "2807920",
    "end": "2814079"
  },
  {
    "text": "most common thing and now I'm going to going to show you the code how to do it now I would recommend that you hold on",
    "start": "2814079",
    "end": "2819319"
  },
  {
    "text": "to something because the code is not the prettiest let's go boom let me walk you",
    "start": "2819319",
    "end": "2826319"
  },
  {
    "text": "through it let's do some hand holding here to make sure things don't go Haywire real quick we need this digest",
    "start": "2826319",
    "end": "2833559"
  },
  {
    "text": "module which is an open module you can install and the standard module as well the first thing we do is check whether",
    "start": "2833559",
    "end": "2840119"
  },
  {
    "text": "or not there was a beer authentication token sent and that beer authentication token must match a regular expression",
    "start": "2840119",
    "end": "2847160"
  },
  {
    "text": "meaning some content a DOT some more content a DOT and then some more content",
    "start": "2847160",
    "end": "2852319"
  },
  {
    "text": "and you need three distinct Parts separated by dots if that is not the case we're going to send a forward tree",
    "start": "2852319",
    "end": "2858440"
  },
  {
    "text": "saying hey Json web token required fair enough that's the way you",
    "start": "2858440",
    "end": "2864760"
  },
  {
    "text": "exclude a lot of abuse but once you have a barer authentication token you want to analyze the three different parts so the",
    "start": "2864760",
    "end": "2871599"
  },
  {
    "text": "first thing we do is grab the first group as you can see the first group is the header you do a Rex up you store",
    "start": "2871599",
    "end": "2878280"
  },
  {
    "text": "that in a header from that header you can analyze the type which is looking doing a sort of a find with a regular",
    "start": "2878280",
    "end": "2885319"
  },
  {
    "text": "expression into your Json object and you're looking for the typ property and grab the value that's your algorithm or",
    "start": "2885319",
    "end": "2892960"
  },
  {
    "text": "your type at least and for the algorithm you do the same thing and then you start validating if the type you got back and",
    "start": "2892960",
    "end": "2899440"
  },
  {
    "text": "the algorithm doesn't match our preconceived notions of JWT hs256 then",
    "start": "2899440",
    "end": "2906040"
  },
  {
    "text": "you have an invalid header and you stop there so continuing along once you know",
    "start": "2906040",
    "end": "2911440"
  },
  {
    "text": "that the header is right we're going to look at the payload and we're going to extract the payload which is the second group and we carry on then we grab the",
    "start": "2911440",
    "end": "2919599"
  },
  {
    "text": "signature which is the third group so first algorithm payloads then the signature then you have that signature",
    "start": "2919599",
    "end": "2926160"
  },
  {
    "text": "but we also know what the signature should be and we can generate that the way we generate It Is by taking the",
    "start": "2926160",
    "end": "2932960"
  },
  {
    "text": "header and the raw payloads that we got put it together with an hmax signature",
    "start": "2932960",
    "end": "2939200"
  },
  {
    "text": "perform our secret key on it which is secret which is fortunately not so secret and bear in mind that you",
    "start": "2939200",
    "end": "2945680"
  },
  {
    "text": "probably have a rollover strategy as well where that secret key gets changed every now and then you can actually load",
    "start": "2945680",
    "end": "2952240"
  },
  {
    "text": "that value from a file or from an API call if you want to inv Varnish but for now it's just secret and then you have",
    "start": "2952240",
    "end": "2957640"
  },
  {
    "text": "the signature you got and the signature you expect if they don't match someone has been tampering with it and then you",
    "start": "2957640",
    "end": "2963680"
  },
  {
    "text": "return 403 invalid token sign and then the final bit is easy right you just extract the payload which is B b64",
    "start": "2963680",
    "end": "2971000"
  },
  {
    "text": "URL decoding the payload and get in some values from it like the username which you will use later on or the expiration",
    "start": "2971000",
    "end": "2977720"
  },
  {
    "text": "time and as a final check you can take that expiration time convert it into a time check if it's smaller than now if",
    "start": "2977720",
    "end": "2984640"
  },
  {
    "text": "it's smaller than now token is expired sorry 4 or3 so that's how you do that",
    "start": "2984640",
    "end": "2990680"
  },
  {
    "text": "very ugly coat I admit but that's what's out there right now we do have an Enterprise V but we have no plans of",
    "start": "2990680",
    "end": "2996839"
  },
  {
    "text": "open sourcing it because it's a revenue generator unfortunately but this is how we do it pretty simple right you create",
    "start": "2996839",
    "end": "3003119"
  },
  {
    "text": "you import JWT module I'm not trying to sell this to you for all intents and purpose I'm an evangelist not a",
    "start": "3003119",
    "end": "3009160"
  },
  {
    "text": "salesperson I just wanted to show you that it exists there's a module out there that does this in a clean",
    "start": "3009160",
    "end": "3015440"
  },
  {
    "text": "way let's elaborate on that synthetic HTTP for a minute we have 10 more minutes until I",
    "start": "3015440",
    "end": "3022640"
  },
  {
    "text": "have to let you go and I'll I'll try to do it quicker so this is how you do it we we've done it before right if you",
    "start": "3022640",
    "end": "3028359"
  },
  {
    "text": "don't specify as a second argument to that sing syn function if you don't specify a string then the standard",
    "start": "3028359",
    "end": "3034640"
  },
  {
    "text": "reason phrase will apply which for 200 is okay good what was it again for",
    "start": "3034640",
    "end": "3043400"
  },
  {
    "text": "404 nice and for 405 good good we have an very HTTP Savvy",
    "start": "3043400",
    "end": "3050680"
  },
  {
    "text": "audience I'm I'm happy with that so as soon as you throw that into the mix some HTM L is going to be returned and",
    "start": "3050680",
    "end": "3056920"
  },
  {
    "text": "unfortunately that's the HTML you're going to get the standard template Again by default could be a bit murky but",
    "start": "3056920",
    "end": "3063040"
  },
  {
    "text": "there's always ways to override it if you ever see a website that outputs Guru",
    "start": "3063040",
    "end": "3068520"
  },
  {
    "text": "meditation you probably know it's farnish there's also a variant of this",
    "start": "3068520",
    "end": "3073680"
  },
  {
    "text": "out there called Guru mediation not meditation but mediation and that's fast",
    "start": "3073680",
    "end": "3078839"
  },
  {
    "text": "Le implementation now remember a couple years ago uh fle went down there was an",
    "start": "3078839",
    "end": "3084240"
  },
  {
    "text": "issue fle pretty big CDN and a lot of people started calling me T there's a problem with varnish there's a problem",
    "start": "3084240",
    "end": "3089839"
  },
  {
    "text": "with varnish until I checked the the little details and I saw Guru mediation I know that this is not",
    "start": "3089839",
    "end": "3096240"
  },
  {
    "text": "us but what you can do is get rid of this and change the template yourself you do that by hooking into vcl syn and",
    "start": "3096240",
    "end": "3103200"
  },
  {
    "text": "instead of doing this ugly HTML maybe You' want to do it plain text very straightforward way of doing it but what",
    "start": "3103200",
    "end": "3110240"
  },
  {
    "text": "if I told you can actually leverage those synthetic response to highly personalize the output",
    "start": "3110240",
    "end": "3116160"
  },
  {
    "text": "and actually fetch stuff from certain data points I'm going me give you an example this is what we're going to try",
    "start": "3116160",
    "end": "3122319"
  },
  {
    "text": "to do there is an endpoint called API session which you'll probably use in maybe some Ajax or ESI call to populate",
    "start": "3122319",
    "end": "3130559"
  },
  {
    "text": "the shopping cart how many items are in the shopping cart it's stateful so you might use an better authentication token",
    "start": "3130559",
    "end": "3137319"
  },
  {
    "text": "or just a session cookie we're going to use a session cookie to make sure we have less code on screen and this part",
    "start": "3137319",
    "end": "3143720"
  },
  {
    "text": "is actually going to be compiled or computed by varnish typically you you can't really cach it because it's so",
    "start": "3143720",
    "end": "3148839"
  },
  {
    "text": "highly personalized so the lesson I want to teach you here is you can actually do this yourself if you want to and make",
    "start": "3148839",
    "end": "3155799"
  },
  {
    "text": "something that is uncashable cachable assuming that this content is stored in redis which is a very common",
    "start": "3155799",
    "end": "3163119"
  },
  {
    "text": "key Value Store where people store session data you can use a module that is not developed by us by this guy named",
    "start": "3163119",
    "end": "3169400"
  },
  {
    "text": "an awesome guy named Carlos abalde and I'll compute that yourself this is the data structure in reddis",
    "start": "3169400",
    "end": "3176079"
  },
  {
    "text": "so the session idid that we have is the name of your key in the reddis key value store if it exists it returns",
    "start": "3176079",
    "end": "3183400"
  },
  {
    "text": "one if that key which is a hash in fact if you do hm get to get multiple",
    "start": "3183400",
    "end": "3189280"
  },
  {
    "text": "properties from the Redd is Hash represented by that key and what do we want we want the Boolean whether or not",
    "start": "3189280",
    "end": "3195240"
  },
  {
    "text": "someone is logged in and the number of items in cart you get those values and now we're going to reach the point where",
    "start": "3195240",
    "end": "3200480"
  },
  {
    "text": "we're going to do this in reddis pretty much caching otherwise uncashable stuff is the code you import the reddis vot",
    "start": "3200480",
    "end": "3207319"
  },
  {
    "text": "the cookie V mod you're going to initialize the reddest database which lives on that IP on that Port then when",
    "start": "3207319",
    "end": "3213319"
  },
  {
    "text": "you receive your request for API session instead of sending it to the backend",
    "start": "3213319",
    "end": "3218520"
  },
  {
    "text": "with all the consequences that come with it we're going to intercept it we're going to analyze the cookie and check",
    "start": "3218520",
    "end": "3224440"
  },
  {
    "text": "whether or not the session ID is set if it's not set 403 not allowed if it is",
    "start": "3224440",
    "end": "3229960"
  },
  {
    "text": "set we're going to store the cookie in the session ID property and do a synthetic response 200 okay and let vcl",
    "start": "3229960",
    "end": "3236680"
  },
  {
    "text": "syn deal with it then you enter vcl syn we're going to intercept that request again and then",
    "start": "3236680",
    "end": "3242799"
  },
  {
    "text": "we're going to do all the regits red is Magic which means checking if that key exists if it exists good if it doesn't",
    "start": "3242799",
    "end": "3249640"
  },
  {
    "text": "exist meaning that the result of exists returns zero then we're going to return",
    "start": "3249640",
    "end": "3255240"
  },
  {
    "text": "a 404 which you can see here right we're creating an empty Json body and",
    "start": "3255240",
    "end": "3261319"
  },
  {
    "text": "synthetically returning 404 we've got that covered when does exist we do M hm",
    "start": "3261319",
    "end": "3267680"
  },
  {
    "text": "get and get the properties that you saw earlier and then inject them in the body and pretty much create that ourselves so",
    "start": "3267680",
    "end": "3275079"
  },
  {
    "text": "all of this comes from redis which was originally highly personalized and would be very taxing on the system all of a",
    "start": "3275079",
    "end": "3281799"
  },
  {
    "text": "sudden gets done on the edge pretty powerful right and I I want to mention I'm going to go over this super quickly",
    "start": "3281799",
    "end": "3287559"
  },
  {
    "text": "that there's a lot more possibilities in varnish Enterprise we even have this module that does mustache template",
    "start": "3287559",
    "end": "3293359"
  },
  {
    "text": "parsing on the edge like familiar with mustache syntax the handlebars right well we can turn this using that data",
    "start": "3293359",
    "end": "3301839"
  },
  {
    "text": "point into that so it's a bit more flexible than ESI and you have code for it that would merge at delivery time for",
    "start": "3301839",
    "end": "3310680"
  },
  {
    "text": "whatever wear merge the data points in there expects it to be Json and then we'll we'll deal with it even if you",
    "start": "3310680",
    "end": "3317400"
  },
  {
    "text": "don't your application doesn't support mustache syntax we could do finds and replaces and turn uh turn this diff into",
    "start": "3317400",
    "end": "3324760"
  },
  {
    "text": "that and then handle it without even touching the code and tons of tons of possibilities I'm not going to go over",
    "start": "3324760",
    "end": "3330920"
  },
  {
    "text": "them what I want to do to end this because we have five more minutes let talk about the future of all of this so",
    "start": "3330920",
    "end": "3337160"
  },
  {
    "text": "this fits into this very trendy topic called Edge computes this is clearly Edge compute but it's in a domain",
    "start": "3337160",
    "end": "3343920"
  },
  {
    "text": "specific language tailored around varnish and you can get tons of benefits from it I would advise you to use it",
    "start": "3343920",
    "end": "3349760"
  },
  {
    "text": "however I see a future where the syntax of vcl needs to be extended a bit vcl",
    "start": "3349760",
    "end": "3355240"
  },
  {
    "text": "for reasons of not allowing the users to shoot themselves in the foot doesn't support for Loops it's doesn't have",
    "start": "3355240",
    "end": "3362520"
  },
  {
    "text": "native variables it's it's lacking array support I've advocated with the core",
    "start": "3362520",
    "end": "3367640"
  },
  {
    "text": "group because it's not us who built the open source project it's a group of people and the Project Lead is an",
    "start": "3367640",
    "end": "3373599"
  },
  {
    "text": "independent person who actually is Danish uh his name is Paul Henning Kamp they decide on that we have influence in",
    "start": "3373599",
    "end": "3379839"
  },
  {
    "text": "there and my goal is to ensure that a future version of farnish I'm not sure if it's near future or far along down",
    "start": "3379839",
    "end": "3386400"
  },
  {
    "text": "the road has more syntax to do Edge compute but in parallel and that is something we do as a company and could",
    "start": "3386400",
    "end": "3393000"
  },
  {
    "text": "end up being open- sourced when it's done is actually moving into the world of web assembly web assembly allows you to just",
    "start": "3393000",
    "end": "3400599"
  },
  {
    "text": "write something in whatever language you want and then transpile that into web assembly syntax and we would then have a",
    "start": "3400599",
    "end": "3407960"
  },
  {
    "text": "VM within the runtime that would process that and we would provide a bridge to vcl where from vcl you can call whatever",
    "start": "3407960",
    "end": "3415160"
  },
  {
    "text": "you want to call because this is an Emerging Market not just Edge compute but Edge compute caches and all that",
    "start": "3415160",
    "end": "3420520"
  },
  {
    "text": "kind of stuff doing more on the edge is big and it's actually one of my ambitions to create a talk about this",
    "start": "3420520",
    "end": "3426520"
  },
  {
    "text": "not necessarily about web assembly but about the edge not necessarily as as as",
    "start": "3426520",
    "end": "3431720"
  },
  {
    "text": "how you've seen now but from an infrastructure perspective probably heard of AWS wavelength AWS now offers",
    "start": "3431720",
    "end": "3438119"
  },
  {
    "text": "5G mobile Edge compute Services where you're directly connected to the 5G base",
    "start": "3438119",
    "end": "3444079"
  },
  {
    "text": "station that's where I want to take this and and show you that you could do really lowlevel high intensity caching",
    "start": "3444079",
    "end": "3450920"
  },
  {
    "text": "stuff without even touching the application so that's it I see most of you are still awake that's a good sign I",
    "start": "3450920",
    "end": "3458039"
  },
  {
    "text": "still have this book to raffle I I typically uh people tend to ask question and then",
    "start": "3458039",
    "end": "3464200"
  },
  {
    "text": "the person who answers the question right gets the book but a I have no idea who's actually interested in reading",
    "start": "3464200",
    "end": "3470200"
  },
  {
    "text": "this and B I'm lazy so what I'm going to do is I'm going to put this book here",
    "start": "3470200",
    "end": "3475319"
  },
  {
    "text": "and eventually it's going to disappear and if it doesn't disappear I guess I'm going to have to take it back home uh",
    "start": "3475319",
    "end": "3480720"
  },
  {
    "text": "dear people of Copenhagen it's been an absolute honor and a pleasure and I would like to thank you for being here with",
    "start": "3480720",
    "end": "3487599"
  },
  {
    "text": "me",
    "start": "3496680",
    "end": "3499680"
  }
]