[
  {
    "start": "0",
    "end": "162000"
  },
  {
    "text": "welcome thank you so much for coming ten seconds with myself my name is",
    "start": "10170",
    "end": "16869"
  },
  {
    "text": "Victor oh damn he's shooting this I need to stand there I hate this I hate this",
    "start": "16869",
    "end": "22750"
  },
  {
    "text": "my name is Victor and this is the slide that you need to know about me my name my Twitter is over here and my twitter",
    "start": "22750",
    "end": "30790"
  },
  {
    "text": "is conveniently placed on all the slides if you want to tweet about the session and this is important you have to tweet because there's some demo around Twitter",
    "start": "30790",
    "end": "37780"
  },
  {
    "text": "and live streams of tweets that will be used and I work at a company called",
    "start": "37780",
    "end": "44399"
  },
  {
    "text": "confluent and I worked there as a developer advocate I build highly scalable and highly available a world",
    "start": "44399",
    "end": "50859"
  },
  {
    "text": "world applications and we were going to be building some of those today with me",
    "start": "50859",
    "end": "55899"
  },
  {
    "text": "and I'm building stuff around magic after bad about stream processing from",
    "start": "55899",
    "end": "63429"
  },
  {
    "text": "every and whatever developer and he was like what like what what why this guy is",
    "start": "63429",
    "end": "69130"
  },
  {
    "text": "even here but there's interesting backstory here before I moved to Java world I actually started as a C++",
    "start": "69130",
    "end": "75430"
  },
  {
    "text": "and.net developer I started with dotnet 1.1 and moved to dotnet 2.0 and my my my",
    "start": "75430",
    "end": "83050"
  },
  {
    "text": "graduation work at the University that also was my kind of sort of some some",
    "start": "83050",
    "end": "90430"
  },
  {
    "text": "work that I did for internship when I was working in a bank was written in is",
    "start": "90430",
    "end": "95620"
  },
  {
    "text": "p.net 2.0 there was very interesting times but when I moved to to to do some",
    "start": "95620",
    "end": "102100"
  },
  {
    "text": "PG work my professors say said this stuff not gonna fly here so I need to learn Java so I was doing Joe but this",
    "start": "102100",
    "end": "109240"
  },
  {
    "text": "talk about for for for dotnet developers and necessarily you need to be like",
    "start": "109240",
    "end": "115480"
  },
  {
    "text": "content developers to understand this now I'm kind of talking about mostly usually talking to the beta engineers",
    "start": "115480",
    "end": "121990"
  },
  {
    "text": "I'm talking to developers the engineers do we have any like people who do anything with some big data tools and",
    "start": "121990",
    "end": "127270"
  },
  {
    "text": "heard about Kafka at least something today all right so that's that's which is pretty cool for those of you who don",
    "start": "127270",
    "end": "133599"
  },
  {
    "text": "here you will learn a lot of things today and in order to explain something",
    "start": "133599",
    "end": "139510"
  },
  {
    "text": "the way how I like to explain things to people I lie to go with explaining three things",
    "start": "139510",
    "end": "145540"
  },
  {
    "text": "basically why what and how so I will start explaining why at the very",
    "start": "145540",
    "end": "152110"
  },
  {
    "text": "beginning the the world didn't know but that the world needs Apache Kafka and",
    "start": "152110",
    "end": "159900"
  },
  {
    "text": "now world heaven so when we built the",
    "start": "159900",
    "end": "167560"
  },
  {
    "start": "162000",
    "end": "227000"
  },
  {
    "text": "problem you to stand here sure is it okay if I will stand like like this the",
    "start": "167560",
    "end": "174310"
  },
  {
    "text": "camera cameraman is it fine perfect yeah so we're building software in",
    "start": "174310",
    "end": "183550"
  },
  {
    "text": "organizations and our companies we build software as a company to sell software",
    "start": "183550",
    "end": "189040"
  },
  {
    "text": "there are some companies who build software to run the business and software's everywhere and when we're",
    "start": "189040",
    "end": "196780"
  },
  {
    "text": "building the software every interaction that happening in in in all business",
    "start": "196780",
    "end": "203560"
  },
  {
    "text": "processes that we're doing involve stream of data stream of a different events but essentially what we do with",
    "start": "203560",
    "end": "210160"
  },
  {
    "text": "building our application we're building some sort of data store after that we have some persistent layer that reads that from the data pushes this to",
    "start": "210160",
    "end": "216910"
  },
  {
    "text": "business logic layer and after that withdrawing this in some sort of front-end so we're building data stores where we need to you know build actually",
    "start": "216910",
    "end": "224170"
  },
  {
    "text": "data flows in our organizations now and the typical typical world of enterprise",
    "start": "224170",
    "end": "231760"
  },
  {
    "start": "227000",
    "end": "379000"
  },
  {
    "text": "architecture at the price applications look something like this so we're starting with some small applications",
    "start": "231760",
    "end": "238120"
  },
  {
    "text": "that requires one database this this application might be interactive some other applications through API might be",
    "start": "238120",
    "end": "244300"
  },
  {
    "text": "interacting some other ssss system would also through some sort of API so there's a few seats over here so if you want to",
    "start": "244300",
    "end": "250330"
  },
  {
    "text": "come come and sit there's a some room over here so and usually in as we grow or as we",
    "start": "250330",
    "end": "260950"
  },
  {
    "text": "progress into different aspects of our application architecture we start seeing",
    "start": "260950",
    "end": "267730"
  },
  {
    "text": "that some other people doing some other stuff within our organization or within",
    "start": "267730",
    "end": "273010"
  },
  {
    "text": "I don't know maybe would try to integrate with partners we're trying to integrate different services we're trying to",
    "start": "273010",
    "end": "278430"
  },
  {
    "text": "integrate this with some other systems and now we get this idea that okay so we",
    "start": "278430",
    "end": "284680"
  },
  {
    "text": "need to get the data for our application from somewhere that we previously did so",
    "start": "284680",
    "end": "290169"
  },
  {
    "text": "we need to get maybe another API call or maybe we can integrate through through database we can have some tools that",
    "start": "290169",
    "end": "297310"
  },
  {
    "text": "will take and replicate their database in our database this is what data data",
    "start": "297310",
    "end": "303729"
  },
  {
    "text": "engineering look like and essentially we end up here so we how many of you actually see in",
    "start": "303729",
    "end": "310389"
  },
  {
    "text": "something like that like any like a consultants here any people who you know we're coming to on board and after that",
    "start": "310389",
    "end": "316810"
  },
  {
    "text": "you meeting this architect he like let me explain let me explain you how this",
    "start": "316810",
    "end": "322150"
  },
  {
    "text": "stuff works here right so and he explaining how this stuff worked like from 10 years ago and how everything",
    "start": "322150",
    "end": "327880"
  },
  {
    "text": "involved and now you feel sorry about this person and actually this is stuff that I'm seeing when I was talking to",
    "start": "327880",
    "end": "336039"
  },
  {
    "text": "customers I'm not always talking to developers I used to be in professional services did the consultancy so I seen",
    "start": "336039",
    "end": "342550"
  },
  {
    "text": "those people and interesting enough even a web scale companies like LinkedIn",
    "start": "342550",
    "end": "349930"
  },
  {
    "text": "might have a similar problem not not this one but like this specific problem right so multiple systems they need to",
    "start": "349930",
    "end": "356470"
  },
  {
    "text": "integrate they when the LinkedIn was is still kind of like a scrappy startup",
    "start": "356470",
    "end": "362770"
  },
  {
    "text": "they were trying to figure out the ways how different some components can be develop a stir there's kind of search",
    "start": "362770",
    "end": "368889"
  },
  {
    "text": "will get updated from some of the results that user putting in their",
    "start": "368889",
    "end": "374380"
  },
  {
    "text": "profiles so this why they face this problem they decide to do something with this so and what they they what they did",
    "start": "374380",
    "end": "383139"
  },
  {
    "start": "379000",
    "end": "412000"
  },
  {
    "text": "they didn't do this and from day one they started developing thing that was",
    "start": "383139",
    "end": "388479"
  },
  {
    "text": "far far far from the whatever we seen right now and they start developing thing called petrikov and only today or",
    "start": "388479",
    "end": "396130"
  },
  {
    "text": "maybe only right now we can call it as a event streaming platform as something that really really new category of the",
    "start": "396130",
    "end": "404620"
  },
  {
    "text": "software but what is the event streaming platform and this is what I'm trying to",
    "start": "404620",
    "end": "409900"
  },
  {
    "text": "I will try to answer today so the way how eventually platformer idea evolved",
    "start": "409900",
    "end": "415210"
  },
  {
    "start": "412000",
    "end": "514000"
  },
  {
    "text": "from the from this like a pre streaming world in the world of when the data was sort in databases and warehouses stuff",
    "start": "415210",
    "end": "424810"
  },
  {
    "text": "that was in this data Silas was was supposed to go to somewhere and we need",
    "start": "424810",
    "end": "430780"
  },
  {
    "text": "to start moving this data out where we need to break down certain analytic",
    "start": "430780",
    "end": "435940"
  },
  {
    "text": "applications into more micro service approach this is where the event shaming evil streaming platform transformed the",
    "start": "435940",
    "end": "443020"
  },
  {
    "text": "ways how the system interact instead of communicating directly or communicating through database or communicate through",
    "start": "443020",
    "end": "448180"
  },
  {
    "text": "API or communicating through any other integration system integration ways the",
    "start": "448180",
    "end": "454470"
  },
  {
    "text": "in the world of like streaming data stuff start moving into in this approach",
    "start": "454470",
    "end": "460560"
  },
  {
    "text": "and also enabled a lot of real-time use cases how when you heard about this the",
    "start": "460560",
    "end": "466690"
  },
  {
    "text": "couple killed lamda architecture let's start with lamda architecture any Big Data folks here who knows that there's a",
    "start": "466690",
    "end": "472600"
  },
  {
    "text": "lamda architecture where we have bash layer and have stream layer batch layer usually more precise because it has all",
    "start": "472600",
    "end": "480160"
  },
  {
    "text": "the data streaming data streaming layer will give you some immediate result but because some of the events some of the",
    "start": "480160",
    "end": "485920"
  },
  {
    "text": "data my arrive later you don't have precise result so after moving to this",
    "start": "485920",
    "end": "491620"
  },
  {
    "text": "from the from the batch or ancient world into more streaming world there was",
    "start": "491620",
    "end": "497280"
  },
  {
    "text": "evolution of this lambda detection the cap architecture that removed this batch or Hadoop or Medusa type operations",
    "start": "497280",
    "end": "504880"
  },
  {
    "text": "because tools matured and the tools learn how to deal with late events and",
    "start": "504880",
    "end": "510700"
  },
  {
    "text": "how to you know process data that already arriving later now from",
    "start": "510700",
    "end": "516789"
  },
  {
    "start": "514000",
    "end": "583000"
  },
  {
    "text": "perspective of you understanding this stuff and you can you know whatever you can tell to your colleagues after this",
    "start": "516790",
    "end": "522640"
  },
  {
    "text": "talk you need to understand three things Oh someone's try to connect to my laptop to display something we don't want to do",
    "start": "522640",
    "end": "528490"
  },
  {
    "text": "this right we don't want it we don't want to see it no so I will go ahead and",
    "start": "528490",
    "end": "534460"
  },
  {
    "text": "kill my where's my server I will prevent",
    "start": "534460",
    "end": "539640"
  },
  {
    "text": "prevent four so one shown you know what happened recently some people actually sent some",
    "start": "539640",
    "end": "545740"
  },
  {
    "text": "nasty stuff through airdrop so do not forget this kind of like sticky information security hygiene through",
    "start": "545740",
    "end": "553089"
  },
  {
    "text": "airdrop just disable it or have it on for the contacts okay for the purpose of this presentation and for the purpose of",
    "start": "553089",
    "end": "559180"
  },
  {
    "text": "this talk I have a limited time sorry you busy people I want to explain you three things that help you understand what the hell is eventually platform",
    "start": "559180",
    "end": "565420"
  },
  {
    "text": "right so and again I did mention that the Apache Kafka is event shaming platform there are some systems that",
    "start": "565420",
    "end": "572010"
  },
  {
    "text": "follow similar ideas and this over the time you start evolving into something similar but applied Chicago is still",
    "start": "572010",
    "end": "578649"
  },
  {
    "text": "right now one of the one of the leading pieces of the software that people using to do is okay we're going to be focusing",
    "start": "578649",
    "end": "584830"
  },
  {
    "text": "on three things we're gonna be focusing on the storage we're gonna be focusing on the pops up pattern because sometimes",
    "start": "584830",
    "end": "589899"
  },
  {
    "text": "people think that Apache cough is a messaging system who thinks the patch Kafka's messaging system good I already",
    "start": "589899",
    "end": "595390"
  },
  {
    "text": "teach you already something yet you you're good you good you people and you're learning very quickly because you",
    "start": "595390",
    "end": "600880"
  },
  {
    "text": "already know that the petrikov case vent streaming platform so when I start the conversation usually with people saying yeah yeah we know this it's like I don't",
    "start": "600880",
    "end": "607420"
  },
  {
    "text": "know like Microsoft MQ or maybe like SNS or Google pops up or whatever messaging",
    "start": "607420",
    "end": "613990"
  },
  {
    "text": "system they know Apache Kafka it's like elephant from the story of blind people",
    "start": "613990",
    "end": "620709"
  },
  {
    "text": "and elephant how many heard about the story okay so for those who don't know a bunch of",
    "start": "620709",
    "end": "626260"
  },
  {
    "text": "blind people I run into elephant and because they were blind they were touching different parts of the elephant",
    "start": "626260",
    "end": "631480"
  },
  {
    "text": "and from the parts that they touch they trying to figure out what kind of animal it is someone touch do you know sometime",
    "start": "631480",
    "end": "637600"
  },
  {
    "text": "touch the tail and they have different you know view on this one so this white same story with a Patrick rafter depends",
    "start": "637600",
    "end": "644320"
  },
  {
    "text": "of whoever I'm talking to if I'm talking to myself in guys saying oh it's a measuring system if I'm talking to",
    "start": "644320",
    "end": "650290"
  },
  {
    "text": "database guys oh it's another weird database whatever thing if I'm talking to people who knows how to run a",
    "start": "650290",
    "end": "657040"
  },
  {
    "text": "MapReduce oh it is a system that allows to MapReduce ingestion or data ingestion",
    "start": "657040",
    "end": "662170"
  },
  {
    "text": "into MapReduce to spark jobs or so far so on which brings us to the point of number three of processing it's cool",
    "start": "662170",
    "end": "669459"
  },
  {
    "text": "when we can bring data just the push data in a read data out with trying to I'll try to show you how",
    "start": "669459",
    "end": "677140"
  },
  {
    "text": "how you can do something useful this data and I'm doing this in only possible",
    "start": "677140",
    "end": "682769"
  },
  {
    "text": "in only one possible way how I know and just like asking people to tweet stuff and after that I will be processing this",
    "start": "682769",
    "end": "689680"
  },
  {
    "text": "tweet tweets in real time so we're gonna talk about this now let's talk about",
    "start": "689680",
    "end": "694870"
  },
  {
    "start": "692000",
    "end": "902000"
  },
  {
    "text": "storage a little quick different systems when we're talking about different data systems you need to establish some score",
    "start": "694870",
    "end": "700420"
  },
  {
    "text": "abstractions we're talking about databases we're talking about tables if we're talking about Hadoop and HDFS",
    "start": "700420",
    "end": "706300"
  },
  {
    "text": "we're talking about things like files but what is the core abstraction for Apache Kafka any guesses any guesses",
    "start": "706300",
    "end": "719160"
  },
  {
    "text": "look exactly log it is log it is a data",
    "start": "719160",
    "end": "726040"
  },
  {
    "text": "structure that is fundamental core abstraction for Apache Kafka what is log you probably heard this term multiple",
    "start": "726040",
    "end": "733089"
  },
  {
    "text": "times because we're developers we like to write logs and after that based on this information and the log we can can",
    "start": "733089",
    "end": "739600"
  },
  {
    "text": "analyze what is happening and if you think about this what log has it has set",
    "start": "739600",
    "end": "745779"
  },
  {
    "text": "of Records and usually because you're using this as a source of truth to figure out what the hell is going on",
    "start": "745779",
    "end": "752019"
  },
  {
    "text": "with your system those records are immutable and they ordered by certain",
    "start": "752019",
    "end": "758050"
  },
  {
    "text": "order right usually it's based on time so you will be able to read any log from the beginning of the file until the end",
    "start": "758050",
    "end": "764320"
  },
  {
    "text": "so you understand what's going on with the system so the same abstraction placed into the is a foundation",
    "start": "764320",
    "end": "772600"
  },
  {
    "text": "foundational core abstraction for some some data systems they called LOC log base data systems actually there is",
    "start": "772600",
    "end": "781480"
  },
  {
    "text": "probably three fundamental data structure that any software in journeyed",
    "start": "781480",
    "end": "787600"
  },
  {
    "text": "x' to know so log because even database relational database based on the",
    "start": "787600",
    "end": "792910"
  },
  {
    "text": "transactional log system hash map right",
    "start": "792910",
    "end": "798670"
  },
  {
    "text": "so you need to know how the hashing algorithm works because all these distributed systems somehow inherit this",
    "start": "798670",
    "end": "805510"
  },
  {
    "text": "hash map pattern and how the data is distributed across multiple the buckets",
    "start": "805510",
    "end": "810550"
  },
  {
    "text": "or part or how cold or and probably be three yb3",
    "start": "810550",
    "end": "816579"
  },
  {
    "text": "how many of you who went to the United States alright how many of you been",
    "start": "816579",
    "end": "821889"
  },
  {
    "text": "interrogated and with the enhanced interrogation techniques when you said I'm a developer and the officer told you",
    "start": "821889",
    "end": "828729"
  },
  {
    "text": "okay if you developer you probably know how to do like the bypass of b3 and",
    "start": "828729",
    "end": "834429"
  },
  {
    "text": "explain how you can do this b3 search not only for that like if you if you get",
    "start": "834429",
    "end": "840879"
  },
  {
    "text": "the bison jr. you need to know that the b3 is used to build indexes and databases but also useful when you're",
    "start": "840879",
    "end": "846369"
  },
  {
    "text": "trying to to us alright so back to log same idea you already know this because",
    "start": "846369",
    "end": "852699"
  },
  {
    "text": "you're writing into the end of the file you're reading from the beginning of the file messages or like if different",
    "start": "852699",
    "end": "859529"
  },
  {
    "text": "records here are immutable they mutable and you cannot changes if",
    "start": "859529",
    "end": "864699"
  },
  {
    "text": "you want to change something if you not change the state of the world you send another message it's a similar to have a",
    "start": "864699",
    "end": "870699"
  },
  {
    "text": "conversation with your significant other and you said something yet not supposed to say and now you cannot change that",
    "start": "870699",
    "end": "877599"
  },
  {
    "text": "you cannot change it you need to send you need to send another message to amend this and this is where latency is",
    "start": "877599",
    "end": "885789"
  },
  {
    "text": "important depends on how this system receiving system will be receiving in processing this data right so this is",
    "start": "885789",
    "end": "892119"
  },
  {
    "text": "also very important this is why latency is important now again we're reading",
    "start": "892119",
    "end": "897249"
  },
  {
    "text": "from from beginning of the file and to the end of the file next now you know",
    "start": "897249",
    "end": "903399"
  },
  {
    "start": "902000",
    "end": "1273000"
  },
  {
    "text": "logs so go to point number two so how this pops up thing works so that's why",
    "start": "903399",
    "end": "908769"
  },
  {
    "text": "it looks like a what like a queue right people saying you're writing to the end of the file to the end of the queue and",
    "start": "908769",
    "end": "914619"
  },
  {
    "text": "reading from the from the beginning of the file or begin from the queue looks like a queue right so this why it is",
    "start": "914619",
    "end": "920529"
  },
  {
    "text": "very popular pattern of using cough cases messaging system so what does it",
    "start": "920529",
    "end": "926289"
  },
  {
    "text": "mean data that we put inside the Kafka we know that formed inside this logs we",
    "start": "926289",
    "end": "932709"
  },
  {
    "text": "call these logs partitions these partitions can be spread across multiple broker nodes we have many many broker",
    "start": "932709",
    "end": "939220"
  },
  {
    "text": "nodes we can have a thousand nodes 100 nodes two nodes as well",
    "start": "939220",
    "end": "944639"
  },
  {
    "text": "we can logically organize those partitions in the things that we call topics so topics is something that",
    "start": "945090",
    "end": "952600"
  },
  {
    "text": "probably your application will be using to produce to or consume fro topics",
    "start": "952600",
    "end": "957700"
  },
  {
    "text": "might have one partition or many partitions we're writing data into this",
    "start": "957700",
    "end": "962950"
  },
  {
    "text": "partition this is how it looks like now we have on the other side we have a",
    "start": "962950",
    "end": "968590"
  },
  {
    "text": "consumers who read this data in the in the in the in order how this data was",
    "start": "968590",
    "end": "975370"
  },
  {
    "text": "written into this file and there is multiple type of consumers and this is",
    "start": "975370",
    "end": "980740"
  },
  {
    "text": "where things getting a little bit interesting and a little bit different how the people would know from the messaging system so if you do dealing",
    "start": "980740",
    "end": "987340"
  },
  {
    "text": "with any messaging system before what you do when you read the message you acknowledge and the messaging system will remove this message from from the",
    "start": "987340",
    "end": "994960"
  },
  {
    "text": "queue if you do in topic maybe a messaging system will distribute this information to different consumers or",
    "start": "994960",
    "end": "1002430"
  },
  {
    "text": "listeners and after that if they will receive acknowledgement from dependency dependent depend depend on depend on",
    "start": "1002430",
    "end": "1010260"
  },
  {
    "text": "like a pattern of like a durable consumption or or not it will remove this with Kafka it's not like this Kafka",
    "start": "1010260",
    "end": "1018510"
  },
  {
    "text": "has more common with distributed database then it has with messaging system because when the consumers",
    "start": "1018510",
    "end": "1024839"
  },
  {
    "text": "consuming these messages they consume in with their own speed with their own pace they can do different things with this",
    "start": "1024839",
    "end": "1031199"
  },
  {
    "text": "data I'll give you example for example I'm reading a book and the way how I'm",
    "start": "1031199",
    "end": "1037589"
  },
  {
    "text": "reading the book slightly different from the people in in in English world",
    "start": "1037589",
    "end": "1043140"
  },
  {
    "text": "because English is the second language for me so this why I need to use vocabulary to look up certain words",
    "start": "1043140",
    "end": "1048270"
  },
  {
    "text": "that's why my reading pattern of the same book would be different from your reading pattern and the speed would be",
    "start": "1048270",
    "end": "1053310"
  },
  {
    "text": "different my son's reading pattern would be even different from all of you because he's really moved much more faster because he",
    "start": "1053310",
    "end": "1060480"
  },
  {
    "text": "don't care about letters in the books he's trying to find the pictures in the book but but we still reading same book",
    "start": "1060480",
    "end": "1067800"
  },
  {
    "text": "we still look into the same file with this look into the same log so if we if",
    "start": "1067800",
    "end": "1073140"
  },
  {
    "text": "I were trying to translate the same same explanation to messaging world every",
    "start": "1073140",
    "end": "1080130"
  },
  {
    "text": "time you're reading something from the book it's you're down the page and after that if someone was late to the party on",
    "start": "1080130",
    "end": "1086850"
  },
  {
    "text": "the very beginning they will not be able to understand what the hell's going on with Kafka we use this concept called",
    "start": "1086850",
    "end": "1092940"
  },
  {
    "text": "offsets think about bookmarks you read the book you know where you stopped you put the bookmark so next time when you",
    "start": "1092940",
    "end": "1098760"
  },
  {
    "text": "start reading the same book you're getting back to this to this offset you read this and saying oh okay I stop here",
    "start": "1098760",
    "end": "1106040"
  },
  {
    "text": "and again I mentioned that multiple consumers might have a different patterns of consuming the data will talk",
    "start": "1106040",
    "end": "1112590"
  },
  {
    "text": "about consumers in few more seconds now distributed system how many will heard about consistent hashing algorithm",
    "start": "1112590",
    "end": "1119130"
  },
  {
    "text": "that's why I brought up consistent hashing or hashing functions how it's done for those of you who don't",
    "start": "1119130",
    "end": "1125670"
  },
  {
    "text": "know this consistent hashing algorithm it's it's or different variations of this algorithm apply to majority of",
    "start": "1125670",
    "end": "1133290"
  },
  {
    "text": "distributed distributed systems distributed databases so far and so on simply because it by agreeing on certain",
    "start": "1133290",
    "end": "1141720"
  },
  {
    "text": "algorithm of key distribution you can actually win in simplicity of",
    "start": "1141720",
    "end": "1147270"
  },
  {
    "text": "architecture so you don't need to have some sort of like a service discovery you don't need to have some sort of note",
    "start": "1147270",
    "end": "1152880"
  },
  {
    "text": "that knows where is they did simply because you know the key and you agree on hashing function you take a key",
    "start": "1152880",
    "end": "1160020"
  },
  {
    "text": "apply hashing function you get some number after that divide this number by number of partitions in this particular",
    "start": "1160020",
    "end": "1166230"
  },
  {
    "text": "case the partitions in topic and we get some number where we place this data so why it's called consistent because there",
    "start": "1166230",
    "end": "1172950"
  },
  {
    "text": "is consistency between clients how the clients will discover the data inconsistency between the the brokers",
    "start": "1172950",
    "end": "1178679"
  },
  {
    "text": "over the servers or nodes how this data would be placed into other another nodes now Kafka use same",
    "start": "1178679",
    "end": "1186420"
  },
  {
    "text": "approach to balance this data across across the multiple partitions and also",
    "start": "1186420",
    "end": "1192420"
  },
  {
    "text": "it creates very interesting very interesting side effect so if we will be",
    "start": "1192420",
    "end": "1198140"
  },
  {
    "text": "putting data with the same key every square here it represents a pair of key",
    "start": "1198140",
    "end": "1204419"
  },
  {
    "text": "value messages inside Kafka has a key in case value if you're using same key but",
    "start": "1204419",
    "end": "1209610"
  },
  {
    "text": "different value this data will land on the same partition meaning that you will be have",
    "start": "1209610",
    "end": "1214970"
  },
  {
    "text": "order preserved the same way how this message was initially produced which is",
    "start": "1214970",
    "end": "1221760"
  },
  {
    "text": "also creates very interesting quality that Kafka knows that some sort of ordering guarantees right so if you do",
    "start": "1221760",
    "end": "1228950"
  },
  {
    "text": "consider producing some of the messages that were involved in to credit card",
    "start": "1228950",
    "end": "1236160"
  },
  {
    "text": "payment processing and based on the credit card IG or or some sort of like account ID all these transactions will",
    "start": "1236160",
    "end": "1243240"
  },
  {
    "text": "land in the same order how they happened and you don't need to worry that your consumer will get some messages out of",
    "start": "1243240",
    "end": "1249720"
  },
  {
    "text": "the order so this is guaranteed that built in into Kafka using this consistent hashing algorithm if you",
    "start": "1249720",
    "end": "1258480"
  },
  {
    "text": "didn't specify the key it's also not a problem Kraft producer will choose the key for",
    "start": "1258480",
    "end": "1264120"
  },
  {
    "text": "you it will be just simply do round-robin and placing it where whatever it's suitable so basically it",
    "start": "1264120",
    "end": "1272100"
  },
  {
    "text": "will try to balance across now let's get back to consumption once again so like I",
    "start": "1272100",
    "end": "1280260"
  },
  {
    "start": "1273000",
    "end": "1299000"
  },
  {
    "text": "mentioned multiple consumers can read the data with their own speed so this",
    "start": "1280260",
    "end": "1286020"
  },
  {
    "text": "why all these consumers they focus in this in the same state of the world the",
    "start": "1286020",
    "end": "1291030"
  },
  {
    "text": "same same source of truth and now they can read data with the pace that they",
    "start": "1291030",
    "end": "1297540"
  },
  {
    "text": "okay over it Kafka is a database special type of",
    "start": "1297540",
    "end": "1303570"
  },
  {
    "start": "1299000",
    "end": "1335000"
  },
  {
    "text": "database but it doesn't mean that Kafka will be suitable for all use cases like random accessing so there is no random",
    "start": "1303570",
    "end": "1310890"
  },
  {
    "text": "access even though there is the keys of value so in case you want to do some of the randomizing you need to offload data",
    "start": "1310890",
    "end": "1317760"
  },
  {
    "text": "from the Kafka topics using Kafka connect we cannot be talking about a little bit and after that perform whatever the random access search that",
    "start": "1317760",
    "end": "1326040"
  },
  {
    "text": "we know we can upload this to radius we can flow this to hazel caste or some",
    "start": "1326040",
    "end": "1332910"
  },
  {
    "text": "some some other system this is also very important slide this is very important",
    "start": "1332910",
    "end": "1339300"
  },
  {
    "start": "1335000",
    "end": "1658000"
  },
  {
    "text": "slide will help you to explain one of the core features of Apache Kafka cool",
    "start": "1339300",
    "end": "1344990"
  },
  {
    "text": "consumer groups doesn't look like it right but being a kind of engineer we",
    "start": "1344990",
    "end": "1351900"
  },
  {
    "text": "need to put some of the description to a picture okay in the world of Kafka we",
    "start": "1351900",
    "end": "1357630"
  },
  {
    "text": "have all these consumers can be grouped in the so-called consumer group and the",
    "start": "1357630",
    "end": "1364710"
  },
  {
    "text": "reason for that is that Kafka optimized for reads and the way how the you",
    "start": "1364710",
    "end": "1371220"
  },
  {
    "text": "reading faster from the Kafka topic is by increasing number of consumers in consumer group does make any sense let",
    "start": "1371220",
    "end": "1378360"
  },
  {
    "text": "me explain this using this picture so there is a special special process that",
    "start": "1378360",
    "end": "1384270"
  },
  {
    "text": "runs inside one of the brokers when they run your application establish connection to Kafka broker one of the",
    "start": "1384270",
    "end": "1390540"
  },
  {
    "text": "one of the broker nodes become a consumer group controller or also known as a mammy mammy bird so mommy bird is",
    "start": "1390540",
    "end": "1397170"
  },
  {
    "text": "responsible for our registry buting and assigning all these partitions once you want to consume some data from",
    "start": "1397170",
    "end": "1402990"
  },
  {
    "text": "particular topic mommy bird knows that all these worms need to go to the baby birds and because there is only one",
    "start": "1402990",
    "end": "1409410"
  },
  {
    "text": "consumer and consumer group all this worms will go to one baby bird now we",
    "start": "1409410",
    "end": "1414600"
  },
  {
    "text": "seen that one of the baby birds is choking because there's too many worms to eat so this why we starting another",
    "start": "1414600",
    "end": "1421770"
  },
  {
    "text": "consumer in this in this case two more consumers now mommy bird will be",
    "start": "1421770",
    "end": "1427980"
  },
  {
    "text": "responsible for balancing this load and distribute this distribute this message",
    "start": "1427980",
    "end": "1433410"
  },
  {
    "text": "just distribute this partition across all these three papers so let's have example here about three partitions in",
    "start": "1433410",
    "end": "1439860"
  },
  {
    "text": "one topic meaning that we have not three ten let's do ten they will have a ten partitions in our topic and imagine",
    "start": "1439860",
    "end": "1447840"
  },
  {
    "text": "three three worms why same three the the ten ten ones in 310 so in this case this",
    "start": "1447840",
    "end": "1455940"
  },
  {
    "text": "guy will have a three it's get for these four because they are part of the same",
    "start": "1455940",
    "end": "1461760"
  },
  {
    "text": "consumer group now if there would be new baby bird that will hatch from this from",
    "start": "1461760",
    "end": "1467160"
  },
  {
    "text": "the egg right now and join consumer group mommy bird will stop feeling meaning that let me translate this to",
    "start": "1467160",
    "end": "1473730"
  },
  {
    "text": "engineering language consumer group controller will will stop all consumption will do rebalance all",
    "start": "1473730",
    "end": "1480000"
  },
  {
    "text": "these partitions and after that continue the consumers will continue consume the data and also here you might notice some",
    "start": "1480000",
    "end": "1486600"
  },
  {
    "text": "of the difference between the systems that you have of messaging system where your messaging system pushes some data",
    "start": "1486600",
    "end": "1493830"
  },
  {
    "text": "but in Kafka all this consumption is actually consumer driven so consumers",
    "start": "1493830",
    "end": "1500309"
  },
  {
    "text": "will be requesting more and more food and mommy bird will be responsible for providing more and more food now",
    "start": "1500309",
    "end": "1506519"
  },
  {
    "text": "question to the audience in the same situation when we have a ten worms any",
    "start": "1506519",
    "end": "1511649"
  },
  {
    "text": "partitions if we have a 11 baby birds what's gonna happen just kind of open",
    "start": "1511649",
    "end": "1519029"
  },
  {
    "text": "microphone you can shout what's gonna happen what who's that serving starving",
    "start": "1519029",
    "end": "1526049"
  },
  {
    "text": "exactly so this is very interesting point so when we have a same number of",
    "start": "1526049",
    "end": "1531210"
  },
  {
    "text": "partitions than number of consumers in the consumer groups we have one to one",
    "start": "1531210",
    "end": "1536759"
  },
  {
    "text": "relationship and we potentially can start more consumers that the joint a single but they will do nothing they",
    "start": "1536759",
    "end": "1542700"
  },
  {
    "text": "will be idling because there is no work right so this is also very interesting",
    "start": "1542700",
    "end": "1547860"
  },
  {
    "text": "point of a Patrick rafter where you can have end-to-end orden guaranteed",
    "start": "1547860",
    "end": "1554539"
  },
  {
    "text": "production of the data in consumption data so we have a system that produces your credit-card transaction information",
    "start": "1554539",
    "end": "1560730"
  },
  {
    "text": "and you need to perform some sort of computation of the data that comes",
    "start": "1560730",
    "end": "1567179"
  },
  {
    "text": "through this for this kafka topic in order how these messages were arrived so",
    "start": "1567179",
    "end": "1573090"
  },
  {
    "text": "we have a same number of your consumers as number of partitions and you have a end-to-end ordering guarantee but",
    "start": "1573090",
    "end": "1580649"
  },
  {
    "text": "picture is nice alright so let me explain this into the in the language that engineers will understand with the",
    "start": "1580649",
    "end": "1587340"
  },
  {
    "text": "boxes and arrows when we have a topic with four partitions all both partitions",
    "start": "1587340",
    "end": "1593820"
  },
  {
    "text": "will be assigned to one consumer if we might have multiple consumer groups",
    "start": "1593820",
    "end": "1599429"
  },
  {
    "text": "remember I will give you example how we're reading books me and my son we are representing two different consumer",
    "start": "1599429",
    "end": "1606000"
  },
  {
    "text": "groups because we are presenting different applications we're representing different use case that are interested",
    "start": "1606000",
    "end": "1611280"
  },
  {
    "text": "than this data so same thing is I've consumed when your application starts you need to specify consumer group ID in",
    "start": "1611280",
    "end": "1617040"
  },
  {
    "text": "this case consumer group controller will be responsible for managing all the stuff for you and when we have two",
    "start": "1617040",
    "end": "1623210"
  },
  {
    "text": "different consumer groups all these consumer groups will be consuming data with their own speed because they have",
    "start": "1623210",
    "end": "1629250"
  },
  {
    "text": "at their own ways how to process this data when we have a one-to-one a",
    "start": "1629250",
    "end": "1636000"
  },
  {
    "text": "relationship between number of partitions in number of consumers in consumer group we will have kind of like",
    "start": "1636000",
    "end": "1641190"
  },
  {
    "text": "end-to-end flow and assignment of partitions will be represented the same way how it was assigned in the topic",
    "start": "1641190",
    "end": "1647130"
  },
  {
    "text": "what if one of this consumers will go down assignment would be placed to to",
    "start": "1647130",
    "end": "1653580"
  },
  {
    "text": "another consumers or some of the consumers will be receiving messages from two partitions so let me summarize",
    "start": "1653580",
    "end": "1660720"
  },
  {
    "start": "1658000",
    "end": "1711000"
  },
  {
    "text": "this so we have a producers that not depend on any consumers we have a",
    "start": "1660720",
    "end": "1666090"
  },
  {
    "text": "consumers who also don't depend on this so consumers is over here producers are",
    "start": "1666090",
    "end": "1672030"
  },
  {
    "text": "over here and in the middle here we have this broker that responsible for handling this data so the cool thing",
    "start": "1672030",
    "end": "1678600"
  },
  {
    "text": "about this diagram is that your key can scale different aspects of your application if your application needs to",
    "start": "1678600",
    "end": "1684270"
  },
  {
    "text": "produce data faster you start more more more producers if your application needs to consume this data faster you learn",
    "start": "1684270",
    "end": "1691590"
  },
  {
    "text": "that there's consumer groups that are using the multiple consumers in the",
    "start": "1691590",
    "end": "1696600"
  },
  {
    "text": "consumer group we are allowed to do a parallel reads and also in in the middle craft brokers you can scale them also",
    "start": "1696600",
    "end": "1702780"
  },
  {
    "text": "independently in case of you want to provide more more serious resiliency and",
    "start": "1702780",
    "end": "1709440"
  },
  {
    "text": "so far and so on now there is a special",
    "start": "1709440",
    "end": "1714630"
  },
  {
    "start": "1711000",
    "end": "1800000"
  },
  {
    "text": "special there's something special in in in the Kafka as a as a project few",
    "start": "1714630",
    "end": "1721560"
  },
  {
    "text": "components that we learn already it's a producer consumer in the brokers it's usually where everything ends for many",
    "start": "1721560",
    "end": "1727890"
  },
  {
    "text": "people they just start okay because it's a messaging system bla bla bla I will be doing using this one but craft as a open",
    "start": "1727890",
    "end": "1736080"
  },
  {
    "text": "source product or open source tool is actually much more so let me switch to",
    "start": "1736080",
    "end": "1742260"
  },
  {
    "text": "this one so okay a peshkov could also includes this the framework that is a part of the Apache",
    "start": "1742260",
    "end": "1748740"
  },
  {
    "text": "Kafka project called Kafka Connect so it is a framework for sorry for Java",
    "start": "1748740",
    "end": "1754110"
  },
  {
    "text": "developers to develop these connectors but as a developer who don't care about the geologists or maybe a data engineer",
    "start": "1754110",
    "end": "1761190"
  },
  {
    "text": "you just need to bring data into that out you don't need to know Java at this case connect allows you just get the",
    "start": "1761190",
    "end": "1766950"
  },
  {
    "text": "prepackaged connector and just ship this and start this process and start pumping data from anywhere virtually from any",
    "start": "1766950",
    "end": "1774660"
  },
  {
    "text": "source or pump data virtually to any source I will be using a connector from",
    "start": "1774660",
    "end": "1779730"
  },
  {
    "text": "Twitter today so that's why reminder to tweet about this session using hashtag",
    "start": "1779730",
    "end": "1784800"
  },
  {
    "text": "and the sea Sydney and how the data will lend I don't know because I never wrote",
    "start": "1784800",
    "end": "1792000"
  },
  {
    "text": "this connector and I don't know how to work with Twitter API so this why I just took the connector of the shelf that",
    "start": "1792000",
    "end": "1797490"
  },
  {
    "text": "allowed me to do to read this data from Twitter now in case of deployment",
    "start": "1797490",
    "end": "1803550"
  },
  {
    "start": "1800000",
    "end": "1825000"
  },
  {
    "text": "deployment is supported to any possible any possible tool you can deploy this as",
    "start": "1803550",
    "end": "1808560"
  },
  {
    "text": "rpm package you can deploys the Debian package you can run this in the container you can run this in queries there is a managed platform like we",
    "start": "1808560",
    "end": "1815850"
  },
  {
    "text": "build confluent cloud which is managed platform for Apache Kafka and all streaming platforms we support",
    "start": "1815850",
    "end": "1822260"
  },
  {
    "text": "deployment of certain connectors there as well and this is like way how you can",
    "start": "1822260",
    "end": "1829140"
  },
  {
    "start": "1825000",
    "end": "1833000"
  },
  {
    "text": "build data pipelines fairly easy without writing any code another thing craft",
    "start": "1829140",
    "end": "1835980"
  },
  {
    "start": "1833000",
    "end": "1856000"
  },
  {
    "text": "provides the way how data would be replicated it also built in many messaging systems adding this kind of",
    "start": "1835980",
    "end": "1842310"
  },
  {
    "text": "capabilities as afterthought craft has from the day one from the from the not",
    "start": "1842310",
    "end": "1848160"
  },
  {
    "text": "from the day one it you have it as a Kafka user from the day one Kafka actually developed this over the time but it's it's good that it's there so",
    "start": "1848160",
    "end": "1856230"
  },
  {
    "start": "1856000",
    "end": "1923000"
  },
  {
    "text": "the way how its how it's done in terms of how data will be securely safe on",
    "start": "1856230",
    "end": "1862500"
  },
  {
    "text": "other nodes the partitions certain partitions might be a linear partition some partitions will be replica",
    "start": "1862500",
    "end": "1868650"
  },
  {
    "text": "partitions you see Kafka was very advanced a tool and Kafka was very",
    "start": "1868650",
    "end": "1874470"
  },
  {
    "text": "progressive tool in terms of diversity and fighting against all this like slaves",
    "start": "1874470",
    "end": "1880559"
  },
  {
    "text": "and masters and stuff so from day one there were leaders and their followers right so craft girl was always progress",
    "start": "1880559",
    "end": "1888299"
  },
  {
    "text": "if in this case your producer and consumer always read data and always",
    "start": "1888299",
    "end": "1894570"
  },
  {
    "text": "write data to leader partition this is how Kafka pers performs their you know consistency grantees so once the data",
    "start": "1894570",
    "end": "1902700"
  },
  {
    "text": "was acknowledged and written to leader so consumer will get the same set of",
    "start": "1902700",
    "end": "1908399"
  },
  {
    "text": "world there's no there's no eventual consistency where you some of the consumers can can read this from from",
    "start": "1908399",
    "end": "1915090"
  },
  {
    "text": "replicas and this replicas might not have fresh information if the replica",
    "start": "1915090",
    "end": "1921179"
  },
  {
    "text": "will go down one of the note will go down what's going to happen some of these follower replicas will take over",
    "start": "1921179",
    "end": "1929190"
  },
  {
    "text": "responsibilities of leaders so as you can see here we have this partition number four that was stored on the node",
    "start": "1929190",
    "end": "1936360"
  },
  {
    "text": "number four I said what Hanna happened is partition number four replica of",
    "start": "1936360",
    "end": "1941850"
  },
  {
    "text": "partition number four from the broker number two will be take over responsibility of later so and there's",
    "start": "1941850",
    "end": "1949110"
  },
  {
    "text": "different things that can be configured different acknowledgement behind how we can do from the producer side of",
    "start": "1949110",
    "end": "1954330"
  },
  {
    "text": "consumer side so let's kind of like let's summarize so log is a special type",
    "start": "1954330",
    "end": "1961529"
  },
  {
    "text": "of a durable messaging system similar to tradition the messaging system but better scalability better fault",
    "start": "1961529",
    "end": "1968850"
  },
  {
    "text": "tolerance and also allows you to always replay and read the data even after the",
    "start": "1968850",
    "end": "1976409"
  },
  {
    "text": "data was produced but yours down or something like that cool let's do some",
    "start": "1976409",
    "end": "1981570"
  },
  {
    "start": "1979000",
    "end": "2088000"
  },
  {
    "text": "demo right relax it's not Twitter demo yet so since we're talking about dotnet",
    "start": "1981570",
    "end": "1988260"
  },
  {
    "text": "here there are where's my yeah so first",
    "start": "1988260",
    "end": "1995250"
  },
  {
    "text": "of all I want to show you something to to to explain that I'm legit here so",
    "start": "1995250",
    "end": "2004789"
  },
  {
    "text": "there is a project called c-sharp client for Apache Kafka that developed by Microsoft and",
    "start": "2004789",
    "end": "2010580"
  },
  {
    "text": "now they recommend to use confluent",
    "start": "2010580",
    "end": "2018460"
  },
  {
    "text": "kafka dotnet so this is where this is where like we're starting into into the",
    "start": "2018460",
    "end": "2024860"
  },
  {
    "text": "into the game what counseling does so as a company we also sponsoring development",
    "start": "2024860",
    "end": "2030590"
  },
  {
    "text": "of open source Apache Kafka if you will go and see Kafka Patchett or you'll see multiple people who work at Comfort",
    "start": "2030590",
    "end": "2036980"
  },
  {
    "text": "actually committing to this open source project plus would you would you support",
    "start": "2036980",
    "end": "2042190"
  },
  {
    "text": "development of certain open source clients for Apache Kafka dotnet is",
    "start": "2042190",
    "end": "2047539"
  },
  {
    "text": "included and as you can see even we got this confirmation from the Microsoft",
    "start": "2047539",
    "end": "2054618"
  },
  {
    "text": "that even Microsoft people recommend to use confluent net client it's a valuable",
    "start": "2054619",
    "end": "2060648"
  },
  {
    "text": "nugget so you can go there and grab it so you can get the source code some of the examples that I'm going to be",
    "start": "2060649",
    "end": "2066080"
  },
  {
    "text": "showing today you can see on this github page and let's let's try to produce",
    "start": "2066080",
    "end": "2074540"
  },
  {
    "text": "something another thing that you as a developer I want to start with Apache Kafka you either need like I've deployed",
    "start": "2074540",
    "end": "2081470"
  },
  {
    "text": "somewhere or you can get this package from Apache website or you can get the",
    "start": "2081470",
    "end": "2088128"
  },
  {
    "start": "2088000",
    "end": "2135000"
  },
  {
    "text": "package from our website because this package includes certain tools that allows you to be more productive as a",
    "start": "2088129",
    "end": "2093589"
  },
  {
    "text": "developer specifically there's a confluence CLI that allows you to start to stop graph to stop starting stop",
    "start": "2093589",
    "end": "2101210"
  },
  {
    "text": "different components of the kafka so you will be able to do stuff locally and after most importantly it allows you to",
    "start": "2101210",
    "end": "2106880"
  },
  {
    "text": "erase whatever crap you did because we make some mistakes we do some bugs so you don't need to go and track this down",
    "start": "2106880",
    "end": "2113960"
  },
  {
    "text": "and figuring out why your stuff is not working because there is a like start",
    "start": "2113960",
    "end": "2118970"
  },
  {
    "text": "from scratch comment out of the box which is my favorite feature of this platform when I said it's available",
    "start": "2118970",
    "end": "2126260"
  },
  {
    "text": "somewhere in the cloud so we do have managed service that's available in Asia",
    "start": "2126260",
    "end": "2131390"
  },
  {
    "text": "as well Microsoft have thing called HD",
    "start": "2131390",
    "end": "2137030"
  },
  {
    "start": "2135000",
    "end": "2536000"
  },
  {
    "text": "inside which is there a big data stack and Kafka is a part of hdinsight so",
    "start": "2137030",
    "end": "2144520"
  },
  {
    "text": "choose whatever you like to use we will also run in Asia if you're running there now so let's do let's take a look on",
    "start": "2144520",
    "end": "2151930"
  },
  {
    "text": "local local development and how it looks like let me switch to to some of this",
    "start": "2151930",
    "end": "2157150"
  },
  {
    "text": "stuff that I'm gonna be using all right I already running my status ok so I",
    "start": "2157150",
    "end": "2166990"
  },
  {
    "text": "already running my Kafka I'm running my zookeeper Kafka depends on zookeeper but it's not very long zookeeper lived there",
    "start": "2166990",
    "end": "2174610"
  },
  {
    "text": "for maybe last year we're working to remove this in scheme registry it's a rest arrest service that I use to",
    "start": "2174610",
    "end": "2181900"
  },
  {
    "text": "store some of the data about some metadata about my data so imagine we",
    "start": "2181900",
    "end": "2187480"
  },
  {
    "text": "live in the world where the different developers develop their application in the language of their choice crazy right",
    "start": "2187480",
    "end": "2193270"
  },
  {
    "text": "so I can develop in Java you can develop a net they don't see can be friends we don't need to like fight against against",
    "start": "2193270",
    "end": "2199480"
  },
  {
    "text": "each other anymore so schema allows us to define the contract that we communicate or format",
    "start": "2199480",
    "end": "2204580"
  },
  {
    "text": "of the message or like if I'm translated to engineering world with serialization the Association for word Kafka doesn't",
    "start": "2204580",
    "end": "2210670"
  },
  {
    "text": "care what kind of stuff you're putting inside Kafka don't do introspection",
    "start": "2210670",
    "end": "2216130"
  },
  {
    "text": "doesn't do this civilization on the broker side because Kafka has this",
    "start": "2216130",
    "end": "2221650"
  },
  {
    "text": "concept of zero copy meaning that when the data goes through from the network",
    "start": "2221650",
    "end": "2228580"
  },
  {
    "text": "into the craft craft streams is directly from this network socket into the file system so even though Kafka written on",
    "start": "2228580",
    "end": "2235780"
  },
  {
    "text": "Java there is no much of the garbage created by producing a lot of messages because we're relying on a low-level",
    "start": "2235780",
    "end": "2241870"
  },
  {
    "text": "system calls there so and given the fact that it's just as some sort of like a",
    "start": "2241870",
    "end": "2248050"
  },
  {
    "text": "payload some sort of bytes Kafka don't care my clients care so in this case if I'm reading data or writing data in",
    "start": "2248050",
    "end": "2254370"
  },
  {
    "text": "dotnet or go I want to read this data into Java and Python so this is why I am",
    "start": "2254370",
    "end": "2261520"
  },
  {
    "text": "using a schema and there's example that that shows how we can do so let me start",
    "start": "2261520",
    "end": "2267700"
  },
  {
    "text": "this enter on localhost' so in this case I need specify address a",
    "start": "2267700",
    "end": "2273220"
  },
  {
    "text": "broker I need to specify a topic with some schema and now I can start",
    "start": "2273220",
    "end": "2278560"
  },
  {
    "text": "producing something into this into this topic because my craft is up and I can start writing something like I don't",
    "start": "2278560",
    "end": "2285430"
  },
  {
    "text": "know let's put something interesting where is it a username so let's see if",
    "start": "2285430",
    "end": "2293590"
  },
  {
    "text": "you get the reference did you did you",
    "start": "2293590",
    "end": "2299170"
  },
  {
    "text": "yeah anyone anyone best Christmas movie",
    "start": "2299170",
    "end": "2304260"
  },
  {
    "text": "little weapon anyone I may be another [Music]",
    "start": "2304260",
    "end": "2311099"
  },
  {
    "text": "another best Christmas movie alright so I just produced two two messages so in this case messages land",
    "start": "2311430",
    "end": "2318910"
  },
  {
    "text": "in the Kafka topic so what I can do to read those I can use my the C sharp",
    "start": "2318910",
    "end": "2325080"
  },
  {
    "text": "consumer to read this but I was trying to sell you kind of sort of cross-platform thing so let's see how I",
    "start": "2325080",
    "end": "2332380"
  },
  {
    "text": "can do if I do there's a craft console",
    "start": "2332380",
    "end": "2339510"
  },
  {
    "text": "consumer I need to specify okay let's do",
    "start": "2339510",
    "end": "2346240"
  },
  {
    "text": "this so we don't need this we don't need this because we're using localhost 1922",
    "start": "2346240",
    "end": "2354670"
  },
  {
    "text": "and topic was a topic topic with schema",
    "start": "2354670",
    "end": "2362579"
  },
  {
    "text": "and is she here I start doing this from beginning I just you know with this data",
    "start": "2362700",
    "end": "2371020"
  },
  {
    "text": "and is happen to display this data correctly even though I didn't specify",
    "start": "2371020",
    "end": "2376570"
  },
  {
    "text": "any schema and stuff just simply because the way how the Avro handles schemas handles strings is actually you know",
    "start": "2376570",
    "end": "2385900"
  },
  {
    "text": "cross-platform it's just placed there like the unique what form so that's why I can read this word a similar consumer which not working in the cases where I",
    "start": "2385900",
    "end": "2393640"
  },
  {
    "text": "need to run some of the binary data if I'll put in some of the numbers there so I will see some of the some of the stuff",
    "start": "2393640",
    "end": "2400060"
  },
  {
    "text": "in this case I need to actually use is Kafka Avro consumer and when I will",
    "start": "2400060",
    "end": "2408730"
  },
  {
    "text": "reading this data in every format I will actually get full full thing that I'm expecting I",
    "start": "2408730",
    "end": "2415330"
  },
  {
    "text": "see schema I see how my object should look like and also you might notice my",
    "start": "2415330",
    "end": "2422110"
  },
  {
    "text": "application still I can still do some of the production but I still this my consumer was not available or didn't",
    "start": "2422110",
    "end": "2429010"
  },
  {
    "text": "start before before I start producing this messages so let's do what's another famers a Christmas movie maybe right",
    "start": "2429010",
    "end": "2445830"
  },
  {
    "text": "home alone it's another also the robbery type of movie in the Christmas so same",
    "start": "2445830",
    "end": "2453340"
  },
  {
    "text": "thing with die hard right so in this case you cannot say that die heart is not Christmas movie so so first of all",
    "start": "2453340",
    "end": "2460660"
  },
  {
    "text": "you see my application continue to working so I'm reading data as it arrives but also like on the very",
    "start": "2460660",
    "end": "2466780"
  },
  {
    "text": "beginning I specified that I want to read this from beginning meaning that like every time I I'm sorry let me do",
    "start": "2466780",
    "end": "2474460"
  },
  {
    "text": "this so you will be able to see no you will not be able to see I will make it",
    "start": "2474460",
    "end": "2490960"
  },
  {
    "text": "work for you yeah so here I'm specifying that I need to read this topic from",
    "start": "2490960",
    "end": "2498010"
  },
  {
    "text": "beginning meaning that every time I'm resetting my I've set I'm starting this reading this book from the very beginning and this is how I you know",
    "start": "2498010",
    "end": "2505450"
  },
  {
    "text": "consuming in producing consume and produce data in this in this application",
    "start": "2505450",
    "end": "2510730"
  },
  {
    "text": "again I will continue to do this if I will start this application without specifying this from beginning meaning",
    "start": "2510730",
    "end": "2517030"
  },
  {
    "text": "that I will be listening only for the fresh data this is how you can emulate",
    "start": "2517030",
    "end": "2522040"
  },
  {
    "text": "the same behavior you have any messaging system because you're starting only from real-time data and here you're doing",
    "start": "2522040",
    "end": "2529650"
  },
  {
    "text": "something like this and will get some data so you get the point so we do have",
    "start": "2529650",
    "end": "2535810"
  },
  {
    "text": "a bunch of a bunch of for example application that can integrate with",
    "start": "2535810",
    "end": "2542460"
  },
  {
    "start": "2536000",
    "end": "2653000"
  },
  {
    "text": "different just simple producer-consumer if you not in this average as I've seen",
    "start": "2542460",
    "end": "2548590"
  },
  {
    "text": "there some of the Jura PC talks here so probably you're doing some of the plot above stuff we have some example how we",
    "start": "2548590",
    "end": "2554140"
  },
  {
    "text": "can do this like wrote above it's another format that allows you to define schema and based on the schema generate",
    "start": "2554140",
    "end": "2559210"
  },
  {
    "text": "some of the cross-platform representation and also like we do have",
    "start": "2559210",
    "end": "2564490"
  },
  {
    "text": "example how you can write data in and read data from the confluent cloud you",
    "start": "2564490",
    "end": "2570100"
  },
  {
    "text": "can adopt this example to did you and connect to any service that you using in",
    "start": "2570100",
    "end": "2576700"
  },
  {
    "text": "terms of this so if you've seen if you've been in the one of the industry conferences in the past there was a talk",
    "start": "2576700",
    "end": "2582700"
  },
  {
    "text": "about Kafka in the past and they were using the slightly different API right now API is much more fluid much more",
    "start": "2582700",
    "end": "2589300"
  },
  {
    "text": "nicer to use so for example there is a strongly type producer config so you'd",
    "start": "2589300",
    "end": "2594970"
  },
  {
    "text": "need to go and create like a generic the dictionary if you need to provide this configuration the API is more fluent you",
    "start": "2594970",
    "end": "2601060"
  },
  {
    "text": "can know whatever stuff you need to put this in this particular case there is some of the bootstrap server information",
    "start": "2601060",
    "end": "2606250"
  },
  {
    "text": "some other configs so the client itself is evolving and it also involving on on",
    "start": "2606250",
    "end": "2614590"
  },
  {
    "text": "to being like a native API it would be in a tool with this some of the idea",
    "start": "2614590",
    "end": "2619750"
  },
  {
    "text": "magic API is that available or Net+ this this this client depends on the library",
    "start": "2619750",
    "end": "2626860"
  },
  {
    "text": "called Liberty Kafka which is C implementation and this this is the",
    "start": "2626860",
    "end": "2631990"
  },
  {
    "text": "foundation for many open-source clients including Python including go including some of the dot sorry no GS clients that",
    "start": "2631990",
    "end": "2639610"
  },
  {
    "text": "use Liberty Kafka and this this client is fully compatible with all modern",
    "start": "2639610",
    "end": "2645280"
  },
  {
    "text": "features of Apache Kafka so this is this is basic foundation this is how you start this is how you're doing this so",
    "start": "2645280",
    "end": "2651910"
  },
  {
    "text": "let's move on to to processing aspect now you learn how you produce data in",
    "start": "2651910",
    "end": "2657310"
  },
  {
    "start": "2653000",
    "end": "2660000"
  },
  {
    "text": "read data out so let's do some of the complex stuff so this is where we're going to be talking about finger they",
    "start": "2657310",
    "end": "2663400"
  },
  {
    "text": "call stream processing or streaming or processing stream of events and things like that so essentially as data arrived",
    "start": "2663400",
    "end": "2670510"
  },
  {
    "text": "we want to make some of the decisions we want to make some of the processing we need to do something with this data as",
    "start": "2670510",
    "end": "2675610"
  },
  {
    "text": "it arrived into system not that we collecting this data and after that we'll do computation at the",
    "start": "2675610",
    "end": "2681150"
  },
  {
    "text": "end of the day no it is so 2002 because right now we can and we will process",
    "start": "2681150",
    "end": "2687810"
  },
  {
    "text": "data it arrived because we have increased number of of the ways how we",
    "start": "2687810",
    "end": "2695910"
  },
  {
    "text": "can generate this data our business evolved because we cannot rely on on some of these like obsolete data from",
    "start": "2695910",
    "end": "2702630"
  },
  {
    "text": "the from the past now we need to make some decisions based on some real-time data we would like to call this not even",
    "start": "2702630",
    "end": "2709470"
  },
  {
    "text": "the real-time there's even complex more more complex aspect here like how you combine the real-time data with data",
    "start": "2709470",
    "end": "2715589"
  },
  {
    "text": "that a historical has some some historical meanings and this why all these new applications would call them",
    "start": "2715589",
    "end": "2721580"
  },
  {
    "text": "contextual event streaming application where we combine real-time aspect that comes from the for example some of the I",
    "start": "2721580",
    "end": "2728430"
  },
  {
    "text": "don't know sensors like like GPS on your phone and combining this with data that come that was stored in our in our",
    "start": "2728430",
    "end": "2735660"
  },
  {
    "text": "system for example some of the CRM system and based on the CRM data we can join and get some of the better",
    "start": "2735660",
    "end": "2741630"
  },
  {
    "text": "experience to our customers and one of",
    "start": "2741630",
    "end": "2746790"
  },
  {
    "start": "2744000",
    "end": "2829000"
  },
  {
    "text": "the examples I want to use here just simply I like this example simply cuz people listen because people always",
    "start": "2746790",
    "end": "2752520"
  },
  {
    "text": "listen when talk about money especially credit card transactions or little payments or like Ledger's balances all",
    "start": "2752520",
    "end": "2759119"
  },
  {
    "text": "this stuff people love this so this is why this example will stick into your mind because this is about fraud fraud",
    "start": "2759119",
    "end": "2765690"
  },
  {
    "text": "protection so like especially like very close to my heart because I travel and like my credit card can be stolen or it",
    "start": "2765690",
    "end": "2773369"
  },
  {
    "text": "can be can't be not stolen can be blocked because of the some of the system with my bank will think oh some",
    "start": "2773369",
    "end": "2780420"
  },
  {
    "text": "fraudulent transaction how we can do that I'm using very sophisticated algorithm here to do this so let's just",
    "start": "2780420",
    "end": "2786480"
  },
  {
    "text": "say if recession attempts from same credit card happened within five minute",
    "start": "2786480",
    "end": "2792300"
  },
  {
    "text": "window let's just say three more than three authorization attempt happen we can consider this as a fraudulent",
    "start": "2792300",
    "end": "2798570"
  },
  {
    "text": "activity so this why we have a input stream of events that have authorization",
    "start": "2798570",
    "end": "2804510"
  },
  {
    "text": "attempts for particular credit card number now we need to analyze the stream",
    "start": "2804510",
    "end": "2809580"
  },
  {
    "text": "on the fly and make a decision if this turns our fraudulent and only if it's a fraudulent",
    "start": "2809580",
    "end": "2815550"
  },
  {
    "text": "we need to create the record in this called possible fraud topic or stream",
    "start": "2815550",
    "end": "2823460"
  },
  {
    "text": "that will include information about credit card and some other system we'll decide what you do next so as a matter",
    "start": "2823460",
    "end": "2831960"
  },
  {
    "start": "2829000",
    "end": "3007000"
  },
  {
    "text": "of fact this is a full-blown stream processing application believe me or not",
    "start": "2831960",
    "end": "2837690"
  },
  {
    "text": "so this is where things get interesting like Victor where's the net like where's",
    "start": "2837690",
    "end": "2842940"
  },
  {
    "text": "Java why where's the oldest kind of how we can build this application so we",
    "start": "2842940",
    "end": "2848940"
  },
  {
    "text": "start working on this stream processing world very on the very early stages and",
    "start": "2848940",
    "end": "2856109"
  },
  {
    "text": "we were pioneers we were able to do development on the tools that we know like Java Scala blah blah blah but over",
    "start": "2856109",
    "end": "2863220"
  },
  {
    "text": "the time we understand there are other people in this world like other engineers who interesting this one right",
    "start": "2863220",
    "end": "2868260"
  },
  {
    "text": "and I have a specific slide to prove to prove me so we start thinking okay how we can make how we can translate the",
    "start": "2868260",
    "end": "2875310"
  },
  {
    "text": "same of the same of the idea of shrimp processing into these tools that people can use without knowing java.net or or",
    "start": "2875310",
    "end": "2884430"
  },
  {
    "text": "whatever right so people know sequel how many of you know sequel how many you've been on the interview when they asking",
    "start": "2884430",
    "end": "2891060"
  },
  {
    "text": "you about sequel right this is this most important thing like if you can answer the interview how many of you know how",
    "start": "2891060",
    "end": "2897270"
  },
  {
    "text": "to do left join in MSS sequel I'm just I",
    "start": "2897270",
    "end": "2902400"
  },
  {
    "text": "don't know you're good you're good guys awesome so now we're creating this",
    "start": "2902400",
    "end": "2910079"
  },
  {
    "text": "something called stream this is where we have a certain discrepancy between our",
    "start": "2910079",
    "end": "2916290"
  },
  {
    "text": "thing and standard sequel there's no keyboard stream we call it the possible",
    "start": "2916290",
    "end": "2921839"
  },
  {
    "text": "fraud and this stream will be populated from events that you write from",
    "start": "2921839",
    "end": "2927210"
  },
  {
    "text": "authorization attempts stream where we need to define a window so we actually",
    "start": "2927210",
    "end": "2932880"
  },
  {
    "text": "want to see if this authorization event the resolution attempts happened within certain window we just make this",
    "start": "2932880",
    "end": "2939030"
  },
  {
    "text": "assumption that 5-minute window no one actually will be spending or sliding",
    "start": "2939030",
    "end": "2944369"
  },
  {
    "text": "this credit card often that five minutes probably who designed the",
    "start": "2944369",
    "end": "2949410"
  },
  {
    "text": "cell they didn't never met my wife doesn't matter go in go in next we",
    "start": "2949410",
    "end": "2955560"
  },
  {
    "text": "interested only in credit card number and how many authorization tab happened with with the five-minute window and",
    "start": "2955560",
    "end": "2962880"
  },
  {
    "text": "we're grouping this by card number and we saying the count needs to be more than three so this is a legitimate trim",
    "start": "2962880",
    "end": "2970980"
  },
  {
    "text": "processing application that can generate some of the possible fraud output and",
    "start": "2970980",
    "end": "2976260"
  },
  {
    "text": "some of the things that can notice here it's not just a simple filtering when we",
    "start": "2976260",
    "end": "2981630"
  },
  {
    "text": "need to read the impasse this true it's actually involved some of the state storage things like how we would know",
    "start": "2981630",
    "end": "2990120"
  },
  {
    "text": "how many messages we collect it over the five minutes like where this data came from and they're like because in order",
    "start": "2990120",
    "end": "2996450"
  },
  {
    "text": "to calculate the result for particular step we need to know some data from the past this is what's the difference",
    "start": "2996450",
    "end": "3002180"
  },
  {
    "text": "between stately stream processing in stateful sim processing and the things like key sequel that I'm going to be",
    "start": "3002180",
    "end": "3008120"
  },
  {
    "start": "3007000",
    "end": "3023000"
  },
  {
    "text": "talking right now it is actually knows how to do this and knows how to you know provide your storage spoiler alert",
    "start": "3008120",
    "end": "3015200"
  },
  {
    "text": "actually uses cough cases storage to to store the state so yeah so this is where",
    "start": "3015200",
    "end": "3020300"
  },
  {
    "text": "we are like oh yeah everyone knows Carlin Java no not everyone so we do",
    "start": "3020300",
    "end": "3025370"
  },
  {
    "start": "3023000",
    "end": "3050000"
  },
  {
    "text": "have a lot of people data engineers who don't give a damn about Scala at all or",
    "start": "3025370",
    "end": "3033550"
  },
  {
    "text": "some date engineers who know with sync over or some of the data engineers who",
    "start": "3033550",
    "end": "3038660"
  },
  {
    "text": "know some of the BI tools very well and this is where we actually start",
    "start": "3038660",
    "end": "3044030"
  },
  {
    "text": "addressing this group of people who interested in performing stream processing operations without knowing a",
    "start": "3044030",
    "end": "3050060"
  },
  {
    "start": "3050000",
    "end": "3075000"
  },
  {
    "text": "programming so key sequel you can iterate it degrade with the key sequel",
    "start": "3050060",
    "end": "3055100"
  },
  {
    "text": "through UI we have this development tool called control center also I can be used for monitoring you just if you get this",
    "start": "3055100",
    "end": "3062210"
  },
  {
    "text": "confluent the package control center and code here you can use key sequel with UI",
    "start": "3062210",
    "end": "3068660"
  },
  {
    "text": "as engineers we love CLI I'm gonna be using CLI all the way today also you can",
    "start": "3068660",
    "end": "3077510"
  },
  {
    "start": "3075000",
    "end": "3117000"
  },
  {
    "text": "use this for the rest interface so sometimes there's some some the interactivity that required to",
    "start": "3077510",
    "end": "3084080"
  },
  {
    "text": "submit these queries and this is actually you can say it's kind of like a week play because people asking me hey",
    "start": "3084080",
    "end": "3090200"
  },
  {
    "text": "where's this like stream processing library for.net and saying yeah you know we just developed this case sequel thing",
    "start": "3090200",
    "end": "3096110"
  },
  {
    "text": "so you can actually use case sequel from your.net application a submit whatever complex stream processing application",
    "start": "3096110",
    "end": "3103040"
  },
  {
    "text": "you want written in sequel through the rest and after that you can get a result",
    "start": "3103040",
    "end": "3108560"
  },
  {
    "text": "through Kafka topic and this result will be published and will be available for multiple consumers again remember in the",
    "start": "3108560",
    "end": "3114890"
  },
  {
    "text": "picture with the baby birds and also it",
    "start": "3114890",
    "end": "3119900"
  },
  {
    "start": "3117000",
    "end": "3137000"
  },
  {
    "text": "is has it has a headless mode where we can actually pack this file that",
    "start": "3119900",
    "end": "3125090"
  },
  {
    "text": "includes my icicle state rules and deploy this in the server and after that",
    "start": "3125090",
    "end": "3130250"
  },
  {
    "text": "it will be constantly running reading data from Kafka topic processing this data and putting data back in Kafka",
    "start": "3130250",
    "end": "3136670"
  },
  {
    "text": "topic so the way how it the interaction looks like the k sequel server can run",
    "start": "3136670",
    "end": "3141980"
  },
  {
    "start": "3137000",
    "end": "3185000"
  },
  {
    "text": "independently you still can run your applications we can write any type of application you can produce data from",
    "start": "3141980",
    "end": "3148550"
  },
  {
    "text": "from your application and write dates into Kafka and again cool think about",
    "start": "3148550",
    "end": "3153920"
  },
  {
    "text": "this these components can be scaled independently so you don't need to you don't need to worry about some of the",
    "start": "3153920",
    "end": "3160580"
  },
  {
    "text": "like larger use case and small use cases you can always start with small and after that go go all the way with all",
    "start": "3160580",
    "end": "3168410"
  },
  {
    "text": "this kind of things all right so let's see let's see some of the real world sim processing and the way how we're going",
    "start": "3168410",
    "end": "3174740"
  },
  {
    "text": "to be looking at real world stream processing let me do this full screen",
    "start": "3174740",
    "end": "3182380"
  },
  {
    "text": "and I'm doing this so here's my key",
    "start": "3182380",
    "end": "3188810"
  },
  {
    "start": "3185000",
    "end": "3196000"
  },
  {
    "text": "sequel let me do let me to exit so you'll see very nice banner that you",
    "start": "3188810",
    "end": "3194420"
  },
  {
    "text": "will see that we actually in a key sequel so the way how it works I'm actually running this cluster in my in",
    "start": "3194420",
    "end": "3203300"
  },
  {
    "start": "3196000",
    "end": "3214000"
  },
  {
    "text": "my kubernetes in my kubernetes account so if I do",
    "start": "3203300",
    "end": "3208750"
  },
  {
    "text": "choo-choo-choo Cabrera's get pods let's see multiple thing",
    "start": "3208750",
    "end": "3214400"
  },
  {
    "start": "3214000",
    "end": "3244000"
  },
  {
    "text": "running here so I'm running my three notes of Kafka broker running through no zookeeper and I'm running my connect",
    "start": "3214400",
    "end": "3220670"
  },
  {
    "text": "Twitter connector so if I will go here and see if I have any data I can do",
    "start": "3220670",
    "end": "3230829"
  },
  {
    "text": "select okay bless you select let's see",
    "start": "3230829",
    "end": "3241029"
  },
  {
    "text": "where's my username okay so if anyone wants to tweet about me using NDC",
    "start": "3241029",
    "end": "3249140"
  },
  {
    "start": "3244000",
    "end": "3287000"
  },
  {
    "text": "hashtag you will be able to see your your your tweet on this screen and",
    "start": "3249140",
    "end": "3255789"
  },
  {
    "text": "you'll see a bunch of tweets because again I already tested this tweet about myself things like that so but this is",
    "start": "3255789",
    "end": "3263720"
  },
  {
    "text": "what we're calling continuous query",
    "start": "3263720",
    "end": "3269180"
  },
  {
    "text": "so right now what is happening I connected to this Kafka cluster and I",
    "start": "3269180",
    "end": "3275680"
  },
  {
    "text": "starting reading from the top of my Twitter even though there were some tweets I'm not showing this to you so",
    "start": "3275680",
    "end": "3282079"
  },
  {
    "text": "I'm giving opportunity to tweet about this and you will see you to it on this on the screen if you don't want to do",
    "start": "3282079",
    "end": "3288260"
  },
  {
    "start": "3287000",
    "end": "3336000"
  },
  {
    "text": "this I will do what what what we Russian people known of doing is creating a",
    "start": "3288260",
    "end": "3293359"
  },
  {
    "text": "bunch of fake Twitter accounts and tweet about ok so when you see the same a as",
    "start": "3293359",
    "end": "3302059"
  },
  {
    "text": "they memos is yep yep we're programming",
    "start": "3302059",
    "end": "3308829"
  },
  {
    "text": "is tweeting about kiss equal right and",
    "start": "3308829",
    "end": "3316390"
  },
  {
    "text": "if I will tweet if I will tweet we should see this tweet on the stage if I",
    "start": "3316390",
    "end": "3322579"
  },
  {
    "text": "didn't make any mistake let's go to space and Twitter or firehose will fire this event there is connector that",
    "start": "3322579",
    "end": "3329240"
  },
  {
    "text": "listens for a particular event and someone already tweet this here huh it",
    "start": "3329240",
    "end": "3335960"
  },
  {
    "text": "works and where's my where's my where's my tweet where's my tweet the cool thing about this case equal understand Unicode",
    "start": "3335960",
    "end": "3344089"
  },
  {
    "start": "3336000",
    "end": "3352000"
  },
  {
    "text": "first of all you will see there is some of the beautiful characters and there should be",
    "start": "3344089",
    "end": "3349500"
  },
  {
    "text": "something from from my me because my my guy okay okay I even like failed to type",
    "start": "3349500",
    "end": "3359100"
  },
  {
    "start": "3352000",
    "end": "3374000"
  },
  {
    "text": "my username correctly what a what a loser okay alright okay and this those",
    "start": "3359100",
    "end": "3367020"
  },
  {
    "text": "people asking us to tweet the body okay so let's do this because Twitter sometimes not allowed to do this the",
    "start": "3367020",
    "end": "3375450"
  },
  {
    "start": "3374000",
    "end": "3435000"
  },
  {
    "text": "most important thing I wanted to show you here is that key sequel is actually supporting emojis emojis okay so cool",
    "start": "3375450",
    "end": "3383460"
  },
  {
    "text": "the jokes aside if I want thank you thank you very much this is what you get",
    "start": "3383460",
    "end": "3395010"
  },
  {
    "text": "when you're trying to do live tweeting them on the stage right thank you people compliment in your appearance I'm trying",
    "start": "3395010",
    "end": "3400710"
  },
  {
    "text": "so by default we reading only on the real-time event so meaning that hours",
    "start": "3400710",
    "end": "3406590"
  },
  {
    "text": "continuous query was not was not there during the time where we are tweeting",
    "start": "3406590",
    "end": "3411900"
  },
  {
    "text": "something but I'm actually running this this this thing for a while right now",
    "start": "3411900",
    "end": "3417510"
  },
  {
    "text": "and it actually collecting a lot of data and like a lot of tweets so in this case",
    "start": "3417510",
    "end": "3423990"
  },
  {
    "text": "I'm going here and I'm resetting my offset so that's why when I starting doing this select once again I'm replaying this",
    "start": "3423990",
    "end": "3432030"
  },
  {
    "text": "kafka topic in order to do all this kind of computation you see all these things",
    "start": "3432030",
    "end": "3437760"
  },
  {
    "text": "that happen in the past like some of the things that I tweeted before and so far so see that's pretty cool alright now",
    "start": "3437760",
    "end": "3445910"
  },
  {
    "text": "let me show you quickly something about a stateful stream processing in this particular case I do have small small",
    "start": "3445910",
    "end": "3455040"
  },
  {
    "text": "application stream processing application that includes multiple things so first thing is this is how I",
    "start": "3455040",
    "end": "3461700"
  },
  {
    "start": "3458000",
    "end": "3513000"
  },
  {
    "text": "am creating this Twitter stream from a raw data because Twitter connector",
    "start": "3461700",
    "end": "3467760"
  },
  {
    "text": "pushes only JSON to me and this is how I'm telling this key cycle server that",
    "start": "3467760",
    "end": "3474960"
  },
  {
    "text": "I'm actually running JSON so to the key cycle server will be able to parse this data and work with",
    "start": "3474960",
    "end": "3480720"
  },
  {
    "text": "natively Kasich oil works natively with this Jason there are some helper",
    "start": "3480720",
    "end": "3486930"
  },
  {
    "text": "functions that allow you to extract some of data from the JSON so in this case it uses this JSON path to to navigate",
    "start": "3486930",
    "end": "3492599"
  },
  {
    "text": "through this JSON payload and create this username using screen name and some other things so in this particular case",
    "start": "3492599",
    "end": "3498869"
  },
  {
    "text": "I'm filtering by hashtag so I can use special functions like that will lower",
    "start": "3498869",
    "end": "3505800"
  },
  {
    "text": "case all these hash tag entities so in this particular case it will be using in this is it name I'll skip that so this",
    "start": "3505800",
    "end": "3514500"
  },
  {
    "start": "3513000",
    "end": "3557000"
  },
  {
    "text": "is how I'm defining that how many people will be tweeting about this presentation or maybe how many people do tweeting",
    "start": "3514500",
    "end": "3521160"
  },
  {
    "text": "this so this is why I want to capture this state that called user a tweet",
    "start": "3521160",
    "end": "3527250"
  },
  {
    "text": "count that I will be using here so I'm saying that within one hour window my my",
    "start": "3527250",
    "end": "3533700"
  },
  {
    "text": "presentation starts almost hour ago people will be tweeting and I will to",
    "start": "3533700",
    "end": "3538830"
  },
  {
    "text": "collect account how many people are tweeted about this this awesome",
    "start": "3538830",
    "end": "3543930"
  },
  {
    "text": "presentation within this windows period I want to change the way how I'm",
    "start": "3543930",
    "end": "3550109"
  },
  {
    "text": "displaying some data so in this particular case I also can apply the function that transforms my same thing",
    "start": "3550109",
    "end": "3555599"
  },
  {
    "text": "that you do with any database related code and now I'm creating a table from",
    "start": "3555599",
    "end": "3560820"
  },
  {
    "start": "3557000",
    "end": "3600000"
  },
  {
    "text": "the table of these tweets where I have only Twitter account more than if the people were tweeting more than three",
    "start": "3560820",
    "end": "3567510"
  },
  {
    "text": "times of me let's see if it actually works and we'll see if we have any one",
    "start": "3567510",
    "end": "3574260"
  },
  {
    "text": "who actually tweeted more than three times maybe my yam I bought it the",
    "start": "3574260",
    "end": "3582089"
  },
  {
    "text": "tweeted more than four times you can try to beat this we will say huh",
    "start": "3582089",
    "end": "3594750"
  },
  {
    "text": "I know this is yep so tweet it and the",
    "start": "3594750",
    "end": "3606570"
  },
  {
    "text": "count should should also change in the real time so we will see another event from this table that will include some",
    "start": "3606570",
    "end": "3614339"
  },
  {
    "text": "of data that came from the new tweet come on come on they should there should be there should",
    "start": "3614339",
    "end": "3622029"
  },
  {
    "text": "be something let's try it again let's do this again just coping again",
    "start": "3622029",
    "end": "3630809"
  },
  {
    "text": "number one come on dude update update",
    "start": "3630809",
    "end": "3635920"
  },
  {
    "text": "update update get you a new hashtag too you see actually this is maybe result",
    "start": "3635920",
    "end": "3646450"
  },
  {
    "text": "from the up from the previous hour because they you know we roll over to two new hours so this why it might be",
    "start": "3646450",
    "end": "3651880"
  },
  {
    "text": "data from from another from another or some hour the window already jumped and",
    "start": "3651880",
    "end": "3658089"
  },
  {
    "text": "let's do number five let's see if it's actually working",
    "start": "3658089",
    "end": "3663279"
  },
  {
    "text": "yeah so this was data from previous hour and this is now fresh data and I have",
    "start": "3663279",
    "end": "3669489"
  },
  {
    "text": "this you know already deployed you see this data continuously updating state of",
    "start": "3669489",
    "end": "3674739"
  },
  {
    "text": "this table alright so if you want to",
    "start": "3674739",
    "end": "3681009"
  },
  {
    "text": "learn more about I'm sorry too fast if you want to learn more about stream processing in general I highly recommend",
    "start": "3681009",
    "end": "3687279"
  },
  {
    "text": "to go to grab the books that was written some of the people from from from confluent specifically I highly",
    "start": "3687279",
    "end": "3694059"
  },
  {
    "text": "recommend you read the aisle of logs that will allows you to understand the this kind of like a mentality behind of",
    "start": "3694059",
    "end": "3700900"
  },
  {
    "text": "log based data structures and we have a slack where you can ask all your",
    "start": "3700900",
    "end": "3706450"
  },
  {
    "text": "questions around if you follow me I will be tweeting the slides so don't don't",
    "start": "3706450",
    "end": "3711670"
  },
  {
    "text": "worry about taking picture of this and one last thing so I was talking about this demo that runs inside kubernetes if",
    "start": "3711670",
    "end": "3719289"
  },
  {
    "text": "you available today night and you interested in kubernetes typo jazz we will be hosting meetup not far from a",
    "start": "3719289",
    "end": "3725559"
  },
  {
    "text": "place where we were boring to the boat yesterday so go register if you want to",
    "start": "3725559",
    "end": "3732509"
  },
  {
    "text": "learn how this demo works in terms of some of the kubernetes aspects I really",
    "start": "3732509",
    "end": "3737859"
  },
  {
    "text": "appreciate that you spend this hour with me I enjoyed this I hope you enjoyed this I heard there's some rating system",
    "start": "3737859",
    "end": "3744729"
  },
  {
    "text": "on this in this conference there's I was told that the green one good so probably you also should should",
    "start": "3744729",
    "end": "3750910"
  },
  {
    "text": "should use green one thank you very much for your time as always i available for enhanced interrogation any questions",
    "start": "3750910",
    "end": "3758110"
  },
  {
    "text": "there's no there's no stupid questions ask me anything thank you so much [Applause]",
    "start": "3758110",
    "end": "3768510"
  }
]