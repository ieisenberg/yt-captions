[
  {
    "start": "0",
    "end": "42000"
  },
  {
    "text": "okay um hello everyone thank you for coming",
    "start": "960",
    "end": "6480"
  },
  {
    "text": "um so um before I start uh how many of you have read The Hitchhiker's Guide to",
    "start": "6480",
    "end": "12300"
  },
  {
    "text": "Galaxy oh is that why you came for the talk because you saw Don't Panic on the title",
    "start": "12300",
    "end": "19560"
  },
  {
    "text": "yeah okay so yeah the Don't Panic is a reference from The Hitchhiker's Guide to Galaxy",
    "start": "19560",
    "end": "25019"
  },
  {
    "text": "um I actually read it pretty recently um I stole it from my previous workplace",
    "start": "25019",
    "end": "31140"
  },
  {
    "text": "but it's being recorded so I shouldn't say that um okay so let's um hitchhike our way to",
    "start": "31140",
    "end": "38399"
  },
  {
    "text": "building some secure graphql apis then",
    "start": "38399",
    "end": "43399"
  },
  {
    "start": "42000",
    "end": "127000"
  },
  {
    "text": "um a little bit about me before we get started so uh my name is pronounced",
    "start": "43980",
    "end": "50280"
  },
  {
    "text": "um Meenakshi uh but I just go by Nina and I'm from India",
    "start": "50280",
    "end": "58020"
  },
  {
    "text": "um that's how you can follow me on Twitter if you still haven't left Twitter that is",
    "start": "58020",
    "end": "63719"
  },
  {
    "text": "um and uh oh yeah I'll try seeing this um it I hope that it means uh hello",
    "start": "63719",
    "end": "71159"
  },
  {
    "text": "Norway greetings from India but I can't be sure because it goes wrong sometimes",
    "start": "71159",
    "end": "77159"
  },
  {
    "text": "so forgive me I know I will watch this up but hey nor hey India",
    "start": "77159",
    "end": "85680"
  },
  {
    "text": "hey okay I'm trying okay uh yeah so I work as a developer",
    "start": "85680",
    "end": "92100"
  },
  {
    "text": "relations engineer at Postman uh Postman is an API platform that you can use to",
    "start": "92100",
    "end": "97820"
  },
  {
    "text": "build and test and use apis and uh yeah I'm trying to learn Spanish",
    "start": "97820",
    "end": "104700"
  },
  {
    "text": "since quite a few years I always forget have nobody to practice then go back to zero again and I like yoga and strength",
    "start": "104700",
    "end": "111600"
  },
  {
    "text": "training and that's a lot about me now so before we jump on to discussing the",
    "start": "111600",
    "end": "118680"
  },
  {
    "text": "security practices about graphql um let's just take a quick look at what",
    "start": "118680",
    "end": "124920"
  },
  {
    "text": "graphql really is um so we go right back and we'll start",
    "start": "124920",
    "end": "132300"
  },
  {
    "start": "127000",
    "end": "259000"
  },
  {
    "text": "with the graphql story um and so in",
    "start": "132300",
    "end": "139099"
  },
  {
    "text": "2011 Facebook had begun to focus its efforts on mobile development and the",
    "start": "139099",
    "end": "147599"
  },
  {
    "text": "mobile apps they did not the mobile did not have access to Reliable high",
    "start": "147599",
    "end": "153540"
  },
  {
    "text": "bandwidth connections and um the Facebook engineering team needed to find",
    "start": "153540",
    "end": "158700"
  },
  {
    "text": "a solution to improve the request latency between the mobile clients and",
    "start": "158700",
    "end": "164519"
  },
  {
    "text": "the back end Facebook infrastructure uh and uh one course for the latency was",
    "start": "164519",
    "end": "170940"
  },
  {
    "text": "the recursive data fetching so uh the news feed on the app",
    "start": "170940",
    "end": "176760"
  },
  {
    "text": "um for the news feed if a request was made to the back end um then the backend API would return the",
    "start": "176760",
    "end": "183900"
  },
  {
    "text": "news feed but for some other components um you would then have to make additional requests",
    "start": "183900",
    "end": "190019"
  },
  {
    "text": "uh so it resulted in the news field being loaded uh partially on the phone",
    "start": "190019",
    "end": "195840"
  },
  {
    "text": "or having a delaying a delayed loading time um for the comments",
    "start": "195840",
    "end": "202319"
  },
  {
    "text": "and that's when graphql was designed so in",
    "start": "202319",
    "end": "209300"
  },
  {
    "text": "2015 yeah it's 15. uh graphql was designed to fill in need that Rose uh",
    "start": "209300",
    "end": "216959"
  },
  {
    "text": "when building Facebook's mobile apps and they wanted a data fetching API which",
    "start": "216959",
    "end": "223200"
  },
  {
    "text": "was powerful enough to describe all of Facebook yet it was simple for the",
    "start": "223200",
    "end": "229379"
  },
  {
    "text": "developers to learn and start using quickly uh and the adoption grew because in 2016",
    "start": "229379",
    "end": "237000"
  },
  {
    "text": "is when um GitHub made their graphql API publicly available",
    "start": "237000",
    "end": "242940"
  },
  {
    "text": "um and um 2019 is um actually when the graphql foundation was established",
    "start": "242940",
    "end": "250260"
  },
  {
    "text": "um so it helps ensure um that um the community is able to focus on uh the evolution of the spec",
    "start": "250260",
    "end": "257400"
  },
  {
    "text": "and the implementations um so I've tried to take the NDC app as",
    "start": "257400",
    "end": "264960"
  },
  {
    "start": "259000",
    "end": "313000"
  },
  {
    "text": "an example um these are screenshots of one is of",
    "start": "264960",
    "end": "270060"
  },
  {
    "text": "the mobile client the app and the other ones of a web client um so now since they're both different",
    "start": "270060",
    "end": "275759"
  },
  {
    "text": "clients it's almost the same kind of information but there might be some",
    "start": "275759",
    "end": "280800"
  },
  {
    "text": "details that are shown on the web client and may not be shown on the mobile client and if it's all served with a",
    "start": "280800",
    "end": "289139"
  },
  {
    "text": "single API then a client has to actually accept the entire response use maybe",
    "start": "289139",
    "end": "296160"
  },
  {
    "text": "just some of the fields and probably just throw away the rest",
    "start": "296160",
    "end": "301380"
  },
  {
    "text": "um so it's it's not as useful for them and it does cause latency which is why",
    "start": "301380",
    "end": "308820"
  },
  {
    "text": "Facebook came up with a graphql in the first place",
    "start": "308820",
    "end": "314120"
  },
  {
    "text": "uh so um graphia lets you uh specify exactly",
    "start": "314900",
    "end": "320040"
  },
  {
    "text": "what you want to fetch so you can use the same API and unlike Legacy apis you",
    "start": "320040",
    "end": "327060"
  },
  {
    "text": "don't have to fetch tons of data uh even if like there's lots of fields that are",
    "start": "327060",
    "end": "332280"
  },
  {
    "text": "there in the response just purely to maintain backward compatibility uh for some clients but you can just pick up as",
    "start": "332280",
    "end": "341520"
  },
  {
    "text": "a front-end developer I could just pick up only the fields or the data that I'm interested in and leave out the rest",
    "start": "341520",
    "end": "349500"
  },
  {
    "text": "and so in a way it kind of shifts apart into the hands of the front-end developers because the front-end",
    "start": "349500",
    "end": "355380"
  },
  {
    "text": "developers can say what exactly they want instead of um like asking the backend developers to",
    "start": "355380",
    "end": "362340"
  },
  {
    "text": "probably make a change build a custom API and then deploy it for their client",
    "start": "362340",
    "end": "367380"
  },
  {
    "text": "um on the server side how each of these are executed is uh they are passed and",
    "start": "367380",
    "end": "374820"
  },
  {
    "text": "validated and the validation is performed against the types that are",
    "start": "374820",
    "end": "381240"
  },
  {
    "text": "defined in the schema so uh for uh yeah for this example uh",
    "start": "381240",
    "end": "388560"
  },
  {
    "text": "we've broken down the entire schema into uh the contact uh location and the talk",
    "start": "388560",
    "end": "396360"
  },
  {
    "text": "and um there's it's not just uh for querying so you can also do like all",
    "start": "396360",
    "end": "402360"
  },
  {
    "text": "kinds of crowd operations like there's mutations that you can do um as well as query",
    "start": "402360",
    "end": "410699"
  },
  {
    "text": "um and in addition it also helps you represent uh relationships between the",
    "start": "411960",
    "end": "418199"
  },
  {
    "text": "different pieces of data so each entity in this maybe the talk and the contact",
    "start": "418199",
    "end": "423660"
  },
  {
    "text": "are like nodes and the edges are like the relationships that they have with",
    "start": "423660",
    "end": "428819"
  },
  {
    "text": "each other and that's the natural way that you uh think as well uh when you're actually",
    "start": "428819",
    "end": "435500"
  },
  {
    "text": "designing your interfaces yeah uh another uh important thing that",
    "start": "435500",
    "end": "443340"
  },
  {
    "start": "438000",
    "end": "506000"
  },
  {
    "text": "is useful for and uh this is one of the most common ways in which graphql is",
    "start": "443340",
    "end": "449160"
  },
  {
    "text": "implemented it's implemented as a Gateway and um it can be used to connect uh multiple backends so if it's a third",
    "start": "449160",
    "end": "457380"
  },
  {
    "text": "party if it's probably another service using graphql it's built on top of your rest apis and other micro Services",
    "start": "457380",
    "end": "465419"
  },
  {
    "text": "um it's all a unified interface to access data from the different sources uh which means that it could be a single",
    "start": "465419",
    "end": "473220"
  },
  {
    "text": "entry point into the company's apis but it's useful in a way that",
    "start": "473220",
    "end": "479940"
  },
  {
    "text": "um in order to learn and to use it easily it's helpful to understand how",
    "start": "479940",
    "end": "485039"
  },
  {
    "text": "the pieces are connected um I think yeah there's this podcast where one of the engineers from",
    "start": "485039",
    "end": "491280"
  },
  {
    "text": "meetup.com was actually sharing that graphql is helping them understand",
    "start": "491280",
    "end": "498300"
  },
  {
    "text": "um how each of their services are connected and it gives more insight into",
    "start": "498300",
    "end": "503400"
  },
  {
    "text": "the structure of the apis that they have okay uh so coming to the Crux of the",
    "start": "503400",
    "end": "511860"
  },
  {
    "start": "506000",
    "end": "657000"
  },
  {
    "text": "matter we've um looked at um the history of draft ql uh what",
    "start": "511860",
    "end": "517380"
  },
  {
    "text": "graphql is and um before we delve into security again we just need to know why it matters",
    "start": "517380",
    "end": "525000"
  },
  {
    "text": "isn't it the same like securing other apis um so one of the reasons that it matters is",
    "start": "525000",
    "end": "532440"
  },
  {
    "text": "it's increasing adoption it's in a hyper growth phase um and this is Gartner court that",
    "start": "532440",
    "end": "540060"
  },
  {
    "text": "um today just over 10 percent of Enterprises were using graphql apis in",
    "start": "540060",
    "end": "545700"
  },
  {
    "text": "2021 uh but by 2025 that number will grow to over 50 percent",
    "start": "545700",
    "end": "553500"
  },
  {
    "text": "uh and um at the same time um the data also it continues to be a",
    "start": "553500",
    "end": "559440"
  },
  {
    "text": "critical resource for companies along with the preference for using mobile devices so uh the 10 mobile clients are",
    "start": "559440",
    "end": "567000"
  },
  {
    "text": "the use cases uh where the advantages of graphql are realized",
    "start": "567000",
    "end": "572300"
  },
  {
    "text": "uh there are combinations of API Technologies or as well",
    "start": "572300",
    "end": "578160"
  },
  {
    "text": "um like we saw in the previous slide that allow graphql to connect to",
    "start": "578160",
    "end": "583260"
  },
  {
    "text": "um different data sources um and so it's becoming the technology of choice when creating data in Services",
    "start": "583260",
    "end": "590820"
  },
  {
    "text": "inside an Enterprise Network uh it's some also refer to it as the data layer",
    "start": "590820",
    "end": "598080"
  },
  {
    "text": "and these new API implementations um they create a sort of superstorm of",
    "start": "598080",
    "end": "604920"
  },
  {
    "text": "security concerns yeah um another one of the reasons",
    "start": "604920",
    "end": "612540"
  },
  {
    "text": "um is that it's newer than other API Technologies um like rest or grpc and it only became",
    "start": "612540",
    "end": "620880"
  },
  {
    "text": "Community Driven and broadly invested in after the graphql foundation was created",
    "start": "620880",
    "end": "626040"
  },
  {
    "text": "in 2019. uh one more thing to remember is that it",
    "start": "626040",
    "end": "631380"
  },
  {
    "text": "um doesn't leverage any of the capabilities of HTTP and there is a lot",
    "start": "631380",
    "end": "637440"
  },
  {
    "text": "of custom-made tooling uh to handle um things like caching and security",
    "start": "637440",
    "end": "645600"
  },
  {
    "text": "um but um there still isn't um any solution uh leaders in",
    "start": "645600",
    "end": "651660"
  },
  {
    "text": "distributed systems or cash or security like they haven't been determined as yet",
    "start": "651660",
    "end": "657860"
  },
  {
    "start": "657000",
    "end": "694000"
  },
  {
    "text": "okay so uh we established some ground and um if you still don't think that it's as",
    "start": "658620",
    "end": "666060"
  },
  {
    "text": "important to secure your graphql apis um yeah actually first part my job was",
    "start": "666060",
    "end": "671220"
  },
  {
    "text": "to kind of make you panic uh yeah so if if you don't",
    "start": "671220",
    "end": "676620"
  },
  {
    "text": "um yeah if you don't kind of panic now you're gonna be like the the scream or uh it's a painting right I'm supposed to",
    "start": "676620",
    "end": "684540"
  },
  {
    "text": "go to the Moon Museum to check it out yeah so yeah you will you're going to be",
    "start": "684540",
    "end": "690720"
  },
  {
    "text": "in like a panic State later",
    "start": "690720",
    "end": "694040"
  },
  {
    "start": "694000",
    "end": "719000"
  },
  {
    "text": "um so just a little more information to scare you so that you probably listen in the latter half",
    "start": "696480",
    "end": "703140"
  },
  {
    "text": "um and this one's from March 2020 it's not too old",
    "start": "703140",
    "end": "709019"
  },
  {
    "text": "um GitHub allowed an attacker to collect user information um only because of missing",
    "start": "709019",
    "end": "715680"
  },
  {
    "text": "authentication check for certain graphql queries",
    "start": "715680",
    "end": "720680"
  },
  {
    "start": "719000",
    "end": "733000"
  },
  {
    "text": "okay uh here's another one uh WordPress has a graphql plugin and it's suffers",
    "start": "721980",
    "end": "727800"
  },
  {
    "text": "from a denial of service attack um because of an extremely expensive query",
    "start": "727800",
    "end": "734180"
  },
  {
    "start": "733000",
    "end": "765000"
  },
  {
    "text": "and another it's uh Instagram uh so this is from a bug Bounty program and",
    "start": "734820",
    "end": "742800"
  },
  {
    "text": "um the hunter man it's the Bounty Hunter managed to find a vulnerable graphql",
    "start": "742800",
    "end": "747839"
  },
  {
    "text": "endpoint that um without a person actually following your profile they can get access to all",
    "start": "747839",
    "end": "755040"
  },
  {
    "text": "of the victims private archived posts so if you've made any uh reels about the",
    "start": "755040",
    "end": "761820"
  },
  {
    "text": "conference I would suggest just go back and check",
    "start": "761820",
    "end": "766579"
  },
  {
    "start": "765000",
    "end": "852000"
  },
  {
    "text": "okay so uh what I've tried to do here is um I try to do a just a keyword search",
    "start": "767940",
    "end": "775019"
  },
  {
    "text": "on the national vulnerability database uh to see the statistics for graphql uh",
    "start": "775019",
    "end": "781380"
  },
  {
    "text": "and it seems like the attackers have gotten slightly better from 2019",
    "start": "781380",
    "end": "786899"
  },
  {
    "text": "um so we definitely need to get better at protecting our systems from the",
    "start": "786899",
    "end": "792180"
  },
  {
    "text": "common attacks and one of the many mistakes again was thinking that",
    "start": "792180",
    "end": "798180"
  },
  {
    "text": "um graphql apis would have to be secured just like any other apis uh but there's",
    "start": "798180",
    "end": "804420"
  },
  {
    "text": "this quote by Tristan um from Escape Technologies which is also security tool for graphql and it's",
    "start": "804420",
    "end": "812459"
  },
  {
    "text": "also a reminder that graphql is not just an API but it's also a language so the",
    "start": "812459",
    "end": "819720"
  },
  {
    "text": "attacks office is much larger than that of other apis",
    "start": "819720",
    "end": "825440"
  },
  {
    "text": "uh yes since I was doing a little digging into uh the vulnerable",
    "start": "827579",
    "end": "833839"
  },
  {
    "text": "vulnerability database and I work at Postman I just",
    "start": "833839",
    "end": "840000"
  },
  {
    "text": "wanted to visualize um to see if there's any uh paths that",
    "start": "840000",
    "end": "845040"
  },
  {
    "text": "we should pay more attention to find out like certain keywords because there were a lot of entries of incidents that had",
    "start": "845040",
    "end": "851220"
  },
  {
    "text": "happened yeah and um yeah I made a word cloud",
    "start": "851220",
    "end": "857519"
  },
  {
    "start": "852000",
    "end": "875000"
  },
  {
    "text": "um I may not have done an excellent job removing the noise from the word cloud",
    "start": "857519",
    "end": "862700"
  },
  {
    "text": "but there is words like um authorization authenticated or",
    "start": "862700",
    "end": "868920"
  },
  {
    "text": "information disclosure um that you should pay attention to",
    "start": "868920",
    "end": "876079"
  },
  {
    "text": "uh okay enough talk um it's uh it's lunch time right so I",
    "start": "877200",
    "end": "883800"
  },
  {
    "text": "should um yeah I've I've been thinking it would be nice to use a little bit of Postman and have some uh demos to like",
    "start": "883800",
    "end": "891660"
  },
  {
    "text": "um keep you awake um so let me show you uh the example",
    "start": "891660",
    "end": "900319"
  },
  {
    "start": "900000",
    "end": "942000"
  },
  {
    "text": "uh yes okay um so this this is a word cloud",
    "start": "904279",
    "end": "911339"
  },
  {
    "text": "um that I made um and the collection for it is right",
    "start": "911339",
    "end": "916560"
  },
  {
    "text": "here uh and uh all of it and all of the content that I'm going to be using in",
    "start": "916560",
    "end": "923820"
  },
  {
    "text": "the latter slides um it's all part of the graphql security 101 public workspace so you should be",
    "start": "923820",
    "end": "932639"
  },
  {
    "text": "able to access it and be able to see all of the collections",
    "start": "932639",
    "end": "939860"
  },
  {
    "text": "this one yeah uh suppose Men actually had uh for",
    "start": "941279",
    "end": "949079"
  },
  {
    "start": "942000",
    "end": "1059000"
  },
  {
    "text": "a very long time an older version of the graphql client and uh that's when I",
    "start": "949079",
    "end": "954660"
  },
  {
    "text": "actually made this collection so um this this one is a V1 um but",
    "start": "954660",
    "end": "960420"
  },
  {
    "text": "um I also just wanted to show um the new client and how it looks",
    "start": "960420",
    "end": "965579"
  },
  {
    "text": "um while we use it to send certain requests so um",
    "start": "965579",
    "end": "970620"
  },
  {
    "text": "The Collection is about um the damn vulnerable graphql API and",
    "start": "970620",
    "end": "976500"
  },
  {
    "text": "that's a vulnerable implementation of the graphql API um it's an open source repository I",
    "start": "976500",
    "end": "983040"
  },
  {
    "text": "haven't created it um all credit goes to uh again I'm pronouncing their names wrong but it's",
    "start": "983040",
    "end": "990260"
  },
  {
    "text": "for he and Nick Alex and they've also recently published a book about black",
    "start": "990260",
    "end": "996839"
  },
  {
    "text": "hat graphql which has a lot more about um graphql security practices",
    "start": "996839",
    "end": "1003279"
  },
  {
    "text": "uh so yeah they're the people who we should be thanking for this GitHub",
    "start": "1003279",
    "end": "1008779"
  },
  {
    "text": "repository but it's a good way to uh try out the challenge and try and learn of different kinds of attacks and",
    "start": "1008779",
    "end": "1015680"
  },
  {
    "text": "um that's what I've mostly done to understand uh what it's vulnerable to",
    "start": "1015680",
    "end": "1021199"
  },
  {
    "text": "so",
    "start": "1021199",
    "end": "1023980"
  },
  {
    "text": "yeah I probably should have mentioned there is this uh spoiler alert actually it's a challenge so you might want to",
    "start": "1026660",
    "end": "1034579"
  },
  {
    "text": "break the API and then learn about um what to do what not to do",
    "start": "1034579",
    "end": "1041178"
  },
  {
    "text": "um but this collection is to follow along um and if you actually want to just go",
    "start": "1041179",
    "end": "1047480"
  },
  {
    "text": "to the solution page and understand what you should be careful often not then it's helpful to go along with the",
    "start": "1047480",
    "end": "1054380"
  },
  {
    "text": "collection and do that",
    "start": "1054380",
    "end": "1057400"
  },
  {
    "start": "1059000",
    "end": "1082000"
  },
  {
    "text": "yeah so we will actually look at uh version",
    "start": "1061520",
    "end": "1066559"
  },
  {
    "text": "2. and before that let me just try",
    "start": "1066559",
    "end": "1072740"
  },
  {
    "text": "okay so here's how we can start creating a new request um and I will actually create this from",
    "start": "1072740",
    "end": "1080240"
  },
  {
    "text": "here so there is yep um so what I've done is I'm just",
    "start": "1080240",
    "end": "1086720"
  },
  {
    "start": "1082000",
    "end": "1175000"
  },
  {
    "text": "locally running uh the vulnerable API and",
    "start": "1086720",
    "end": "1092120"
  },
  {
    "text": "yeah so what it's trying to do is um all of the types that are available",
    "start": "1099559",
    "end": "1105380"
  },
  {
    "text": "in the schema are exposed through a feature called as introspection",
    "start": "1105380",
    "end": "1111080"
  },
  {
    "text": "um that is turned on for this API and this case and um Postman as a client is actually using",
    "start": "1111080",
    "end": "1117860"
  },
  {
    "text": "that introspection uh to display this list of all of the types that exist in",
    "start": "1117860",
    "end": "1125539"
  },
  {
    "text": "all of the operations that you can do on the API",
    "start": "1125539",
    "end": "1130700"
  },
  {
    "text": "so",
    "start": "1130700",
    "end": "1133480"
  },
  {
    "text": "yeah we've come to introspection one of the ways of doing the",
    "start": "1140299",
    "end": "1145460"
  },
  {
    "text": "introspection again is to use a client you could use a graphical or Postman or",
    "start": "1145460",
    "end": "1152059"
  },
  {
    "text": "any other client which would then show you what's part of this schema and what's part of the API another way is",
    "start": "1152059",
    "end": "1160520"
  },
  {
    "text": "um you you can query it yourself so you can get all of the schema metadata you",
    "start": "1160520",
    "end": "1165919"
  },
  {
    "text": "can query um for the types and the mutations that",
    "start": "1165919",
    "end": "1171200"
  },
  {
    "text": "exist and all of the fields that exist as well",
    "start": "1171200",
    "end": "1175960"
  },
  {
    "text": "so yeah in this case for this API um there are queries mutations and",
    "start": "1176419",
    "end": "1183860"
  },
  {
    "text": "subscriptions um implemented um so the first thing I would probably start with for any other API is",
    "start": "1183860",
    "end": "1191900"
  },
  {
    "text": "um to understand what are the kind of operations that are there um and uh yeah",
    "start": "1191900",
    "end": "1199480"
  },
  {
    "text": "oh so most of the public API is actually um quite a lot of them they have like",
    "start": "1199940",
    "end": "1205460"
  },
  {
    "text": "apis would have querying uh but they wouldn't maybe allow you to mutate the",
    "start": "1205460",
    "end": "1210799"
  },
  {
    "text": "data",
    "start": "1210799",
    "end": "1213100"
  },
  {
    "start": "1213000",
    "end": "1283000"
  },
  {
    "text": "um another thing to look out for is the field suggestions so among all of the um queries that are",
    "start": "1217220",
    "end": "1226340"
  },
  {
    "text": "there there isn't one for the system so if I actually go ahead and execute this",
    "start": "1226340",
    "end": "1233539"
  },
  {
    "text": "query um it's going to be very kind and it's going to tell me if I meant uh paste or",
    "start": "1233539",
    "end": "1240740"
  },
  {
    "text": "paste or system debug and system update um so even if like the introspections",
    "start": "1240740",
    "end": "1247280"
  },
  {
    "text": "block you can't see the entire schema but all of these field suggestions are then helpful to know what's on the",
    "start": "1247280",
    "end": "1253460"
  },
  {
    "text": "schema thank you",
    "start": "1253460",
    "end": "1260620"
  },
  {
    "text": "yes so uh the okay you can also like it's also susceptible to all of the",
    "start": "1264620",
    "end": "1270799"
  },
  {
    "text": "other attacks um like server side forgery which you can use to abuse the functionality on",
    "start": "1270799",
    "end": "1277880"
  },
  {
    "text": "the server um or like update any of the internal resources",
    "start": "1277880",
    "end": "1284500"
  },
  {
    "start": "1283000",
    "end": "1323000"
  },
  {
    "text": "yeah one of the common attacks and the ones that we saw um when we were going through the list",
    "start": "1285440",
    "end": "1291620"
  },
  {
    "text": "of like gitlab and WordPress uh was a lot of denial of service attacks",
    "start": "1291620",
    "end": "1298039"
  },
  {
    "text": "for certain expensive queries so um the attacker can find out a query",
    "start": "1298039",
    "end": "1304640"
  },
  {
    "text": "that takes really long or is a very expensive query and keep using that and",
    "start": "1304640",
    "end": "1311539"
  },
  {
    "text": "then block this over down with resources and cause or denial of service attack",
    "start": "1311539",
    "end": "1317299"
  },
  {
    "text": "um I'm not yeah I won't execute it otherwise I will have to spin it up again",
    "start": "1317299",
    "end": "1322820"
  },
  {
    "text": "um so yeah uh there's also a batch query",
    "start": "1322820",
    "end": "1328400"
  },
  {
    "start": "1323000",
    "end": "1347000"
  },
  {
    "text": "attack so um you find out that system update is probably um the the query that's going to take",
    "start": "1328400",
    "end": "1335480"
  },
  {
    "text": "the longest and it's going to be very expensive uh what you can do is also batch it up so multiple attempts of",
    "start": "1335480",
    "end": "1341659"
  },
  {
    "text": "doing the same thing and that's another way to uh bring the server down",
    "start": "1341659",
    "end": "1348460"
  },
  {
    "start": "1347000",
    "end": "1367000"
  },
  {
    "text": "and then let's say they blocked uh batching then um you can also use aliases and try to",
    "start": "1350240",
    "end": "1358039"
  },
  {
    "text": "bypass um the block um by then executing the operation multiple times",
    "start": "1358039",
    "end": "1365679"
  },
  {
    "start": "1367000",
    "end": "1434000"
  },
  {
    "text": "yeah this one I enjoy uh",
    "start": "1368720",
    "end": "1373780"
  },
  {
    "text": "uh this can happen with graphql because it's relationships and all of the data",
    "start": "1374360",
    "end": "1379520"
  },
  {
    "text": "is actually related so um you can go into like a recursive relationship and",
    "start": "1379520",
    "end": "1385880"
  },
  {
    "text": "multiple depths uh I like to call this um uh the old man of Darjeeling has just",
    "start": "1385880",
    "end": "1393080"
  },
  {
    "text": "come to town I'm not sure if I probably had it in school uh so it goes like",
    "start": "1393080",
    "end": "1399500"
  },
  {
    "text": "um the old man of Darjeeling has just come to town the wife 50 year old man of Darjeeling has just come to town the dog",
    "start": "1399500",
    "end": "1406460"
  },
  {
    "text": "if the wife if the old man who Darjeeling has just come to town the tail of the dog if the wife of the old",
    "start": "1406460",
    "end": "1412460"
  },
  {
    "text": "man of Darjeeling has just come to town and is probably like more levels of it uh but",
    "start": "1412460",
    "end": "1419179"
  },
  {
    "text": "um yeah like that's that's how I kind of associate all of these in my head uh so",
    "start": "1419179",
    "end": "1425000"
  },
  {
    "text": "this is one of the most common attacks um that the implementers need to be aware of uh the Deep precaution query",
    "start": "1425000",
    "end": "1432740"
  },
  {
    "text": "attack yeah uh it's also possible to actually",
    "start": "1432740",
    "end": "1441260"
  },
  {
    "start": "1434000",
    "end": "1447000"
  },
  {
    "text": "um duplicate the field multiple times and uh yeah I'm just going to go over",
    "start": "1441260",
    "end": "1446600"
  },
  {
    "text": "them a bit quickly okay um this is the way of using",
    "start": "1446600",
    "end": "1452539"
  },
  {
    "start": "1447000",
    "end": "1492000"
  },
  {
    "text": "circular fragments um so a fragment allows you to fetch",
    "start": "1452539",
    "end": "1459080"
  },
  {
    "text": "um only um the data that you need to actually um display for a component",
    "start": "1459080",
    "end": "1464780"
  },
  {
    "text": "uh so yeah let's say I have an entire page on react and um I I want to just like I want the",
    "start": "1464780",
    "end": "1472640"
  },
  {
    "text": "component to just focus on um specific data that the component needs to render that's when you can use",
    "start": "1472640",
    "end": "1478700"
  },
  {
    "text": "uh fragments so um it's also possible to actually use",
    "start": "1478700",
    "end": "1484220"
  },
  {
    "text": "fragments with circular references to each other um to cause or denial of service attack",
    "start": "1484220",
    "end": "1493179"
  },
  {
    "start": "1492000",
    "end": "1516000"
  },
  {
    "text": "yeah uh then uh if if you do a denialist um If you deny uh permission to the API",
    "start": "1495140",
    "end": "1502520"
  },
  {
    "text": "to a few users and allow the rest of them it can be pretty risky so",
    "start": "1502520",
    "end": "1507679"
  },
  {
    "text": "um it's always better to go with an allow list and block all of the other users that we don't know",
    "start": "1507679",
    "end": "1515679"
  },
  {
    "start": "1516000",
    "end": "1562000"
  },
  {
    "text": "yeah um and it's susceptible to command execution",
    "start": "1518900",
    "end": "1524539"
  },
  {
    "text": "um SQL injection is again um the same because we're accepting inputs for queries of mutations",
    "start": "1524539",
    "end": "1531559"
  },
  {
    "text": "um so we need to be aware of all of um the the regular ways of",
    "start": "1531559",
    "end": "1539120"
  },
  {
    "text": "um injecting malicious code whether it's uh across site scripting attack or a SQL",
    "start": "1539120",
    "end": "1545059"
  },
  {
    "text": "injection or an HTML injection",
    "start": "1545059",
    "end": "1549220"
  },
  {
    "text": "so",
    "start": "1553279",
    "end": "1556240"
  },
  {
    "text": "yep okay uh so what we do about it is uh we",
    "start": "1560779",
    "end": "1567799"
  },
  {
    "text": "kind of saw a little bit about the attacks and I'm just going to share a few techniques how you can mitigate them",
    "start": "1567799",
    "end": "1575059"
  },
  {
    "text": "or what are some of the common ways or tools that you can use",
    "start": "1575059",
    "end": "1580240"
  },
  {
    "text": "authentication was um one of the common ones um and certain Fields even though they",
    "start": "1581140",
    "end": "1588620"
  },
  {
    "text": "are protected against they have authentication but just because of the relationship that they share",
    "start": "1588620",
    "end": "1595100"
  },
  {
    "text": "um the data gets exposed so all of the paths need to actually be authenticated and why it can be tricky is because at",
    "start": "1595100",
    "end": "1603679"
  },
  {
    "text": "the back end for every field that you mentioned in the query there is a resolver function that executes so what",
    "start": "1603679",
    "end": "1610820"
  },
  {
    "text": "happens when you actually fetch the field or you mutate something and if you try to add authentication to",
    "start": "1610820",
    "end": "1618860"
  },
  {
    "text": "each of these resolvers separately it may be a lot of duplication and it may",
    "start": "1618860",
    "end": "1624080"
  },
  {
    "text": "be too tightly coupled with the business logic and difficult to manage um so there is a middleware pattern that",
    "start": "1624080",
    "end": "1631520"
  },
  {
    "text": "you can use to add authentication or any other functionality for that matter if",
    "start": "1631520",
    "end": "1637220"
  },
  {
    "text": "you have common logic across multiple resolvers and uh yeah so when the client sends the",
    "start": "1637220",
    "end": "1644539"
  },
  {
    "text": "request the request is validated against the type system and then authentication",
    "start": "1644539",
    "end": "1650240"
  },
  {
    "text": "can come in as part of the middleware and the response can be returned",
    "start": "1650240",
    "end": "1656919"
  },
  {
    "start": "1656000",
    "end": "1671000"
  },
  {
    "text": "yeah another one was authorization uh who gets access to what actions they can",
    "start": "1659000",
    "end": "1665659"
  },
  {
    "text": "perform on the system so um there's a couple of ways to do these",
    "start": "1665659",
    "end": "1671779"
  },
  {
    "text": "by using rule checks by maintaining an allow list and um graphql steel which is being",
    "start": "1671779",
    "end": "1680179"
  },
  {
    "text": "um maintained by its open source it's being maintained by um The Guild",
    "start": "1680179",
    "end": "1686000"
  },
  {
    "text": "um which also actually maintains a lot of other graphql tools that are open source",
    "start": "1686000",
    "end": "1691460"
  },
  {
    "text": "um and uh Shield is a graphql library that can help you to create a permission",
    "start": "1691460",
    "end": "1697880"
  },
  {
    "text": "layer for your server so you'll be able to define the collection of rules that",
    "start": "1697880",
    "end": "1703159"
  },
  {
    "text": "you can use um across your permission system",
    "start": "1703159",
    "end": "1709120"
  },
  {
    "start": "1710000",
    "end": "1777000"
  },
  {
    "text": "yeah uh the favorite uh denial of service attacks um so the nested recursive query that we",
    "start": "1712760",
    "end": "1719960"
  },
  {
    "text": "saw uh and um it it's very easy to",
    "start": "1719960",
    "end": "1725440"
  },
  {
    "text": "exploit resources using this uh so what you can do is because of the depth of",
    "start": "1725440",
    "end": "1733460"
  },
  {
    "text": "the query there are actually libraries to help you do um the max depth check to prevent these",
    "start": "1733460",
    "end": "1740720"
  },
  {
    "text": "attacks and mitigate them um if you actually if you try to do this",
    "start": "1740720",
    "end": "1748820"
  },
  {
    "text": "with the GitHub API uh what it also does is it analyzes let's say I'm asking for",
    "start": "1748820",
    "end": "1755000"
  },
  {
    "text": "all of my pull requests for a certain report like all of the comments on each",
    "start": "1755000",
    "end": "1760220"
  },
  {
    "text": "of my pull requests for a certain repository uh what it's going to do is like just count the total number of",
    "start": "1760220",
    "end": "1765799"
  },
  {
    "text": "nodes that I'm actually requesting for and um then like uh then limit limit my",
    "start": "1765799",
    "end": "1771740"
  },
  {
    "text": "request or give a response that like I'm requesting for too many nodes",
    "start": "1771740",
    "end": "1777580"
  },
  {
    "start": "1777000",
    "end": "1856000"
  },
  {
    "text": "yeah um the batch attack um one way is to disable batching",
    "start": "1779419",
    "end": "1785720"
  },
  {
    "text": "um another way is um to protect your system by having uh",
    "start": "1785720",
    "end": "1791000"
  },
  {
    "text": "rate limits in place so um now this isn't",
    "start": "1791000",
    "end": "1796460"
  },
  {
    "text": "um it's not the number of times that you actually call the API uh because here it's just a single API but what actually",
    "start": "1796460",
    "end": "1803899"
  },
  {
    "text": "differs is the payload that you're sending to the API so",
    "start": "1803899",
    "end": "1809179"
  },
  {
    "text": "um there um there are different ways of doing a query cost analysis for each of",
    "start": "1809179",
    "end": "1815779"
  },
  {
    "text": "the queries that are being executed against the server and use that cost to rate limit",
    "start": "1815779",
    "end": "1822620"
  },
  {
    "text": "and um there there's different algorithms of doing it um there's a static query analysis as",
    "start": "1822620",
    "end": "1829580"
  },
  {
    "text": "well it can predict how expensive a query might be um and there's a dynamic query analysis",
    "start": "1829580",
    "end": "1837020"
  },
  {
    "text": "which can sum up the cost um in the graphql execution engine as",
    "start": "1837020",
    "end": "1842240"
  },
  {
    "text": "it's evaluating the query uh so yeah you don't only have to pick uh from among these two maybe you can",
    "start": "1842240",
    "end": "1850520"
  },
  {
    "text": "use a combination of them for rate limiting over monetization as well",
    "start": "1850520",
    "end": "1856960"
  },
  {
    "start": "1856000",
    "end": "1960000"
  },
  {
    "text": "uh yeah so if batching is disabled we looked at aliasing um one way to deal with them is you",
    "start": "1860000",
    "end": "1868340"
  },
  {
    "text": "could use persisted queries uh and this is a pretty uh common way of",
    "start": "1868340",
    "end": "1876080"
  },
  {
    "text": "um protecting and like limiting your attack surface so uh persist persisted queries",
    "start": "1876080",
    "end": "1882860"
  },
  {
    "text": "are actually used because uh typically with graphql we can have like a really",
    "start": "1882860",
    "end": "1888440"
  },
  {
    "text": "large payload that's coming in in one request from the client and",
    "start": "1888440",
    "end": "1894380"
  },
  {
    "text": "um the result it can result into longer request times because of the payload",
    "start": "1894380",
    "end": "1900020"
  },
  {
    "text": "being so large and slow down the network performance uh so persisted queries help with this",
    "start": "1900020",
    "end": "1908059"
  },
  {
    "text": "um what you can do is you don't have to for each request uh put the entire",
    "start": "1908059",
    "end": "1914360"
  },
  {
    "text": "payload um the server can register or the entire payload or server can register the",
    "start": "1914360",
    "end": "1920960"
  },
  {
    "text": "queries that are actually going to be executing against it uh with an Associated hash and as the client I",
    "start": "1920960",
    "end": "1927860"
  },
  {
    "text": "would just have to uh provide the hash for the particular query and thereby like the payload is significantly",
    "start": "1927860",
    "end": "1934640"
  },
  {
    "text": "reduced um and the query will execute so",
    "start": "1934640",
    "end": "1941059"
  },
  {
    "text": "um that that's how it's helpful like it'll help reduce the payload but in terms of security it's also helpful",
    "start": "1941059",
    "end": "1947059"
  },
  {
    "text": "because now you can only allow the clients that actually have the hash to",
    "start": "1947059",
    "end": "1952340"
  },
  {
    "text": "execute the queries um you can limit it from accepting queries from other clients",
    "start": "1952340",
    "end": "1960279"
  },
  {
    "start": "1960000",
    "end": "2006000"
  },
  {
    "text": "yeah um the introspection that um reveals the entire schema it's very",
    "start": "1962000",
    "end": "1967700"
  },
  {
    "text": "useful while debugging or while developing um and uh yeah it's it's an important",
    "start": "1967700",
    "end": "1974299"
  },
  {
    "text": "feature um especially for the developers when they're using a new graphql API but",
    "start": "1974299",
    "end": "1980720"
  },
  {
    "text": "um if it's to prevent it from attacks um you can disable it on higher",
    "start": "1980720",
    "end": "1986720"
  },
  {
    "text": "environments or on production and similar for the error suggestions",
    "start": "1986720",
    "end": "1992080"
  },
  {
    "text": "there is a way to disable field suggestions as well if you do not want",
    "start": "1992080",
    "end": "1998659"
  },
  {
    "text": "to uh which you might not want to expose the information to attack us",
    "start": "1998659",
    "end": "2006720"
  },
  {
    "start": "2006000",
    "end": "2086000"
  },
  {
    "text": "yes um so don't think we have covered what custom scalers are",
    "start": "2008559",
    "end": "2015700"
  },
  {
    "text": "um so a custom scalar type um it provides a convenient way to",
    "start": "2015700",
    "end": "2021580"
  },
  {
    "text": "represent specialized data there are built-in types in graphql like integers",
    "start": "2021580",
    "end": "2027820"
  },
  {
    "text": "or floats booleans but they don't cover um other custom formats like an email",
    "start": "2027820",
    "end": "2035380"
  },
  {
    "text": "address or a date time so those formats can be represented as",
    "start": "2035380",
    "end": "2041440"
  },
  {
    "text": "custom scalars in this example we have a scalar email address and there is a",
    "start": "2041440",
    "end": "2049658"
  },
  {
    "text": "mutation that's accepting input as the email address",
    "start": "2049659",
    "end": "2055560"
  },
  {
    "text": "yeah so since we're just declaring it as a scalar but we've actually not done any",
    "start": "2057280",
    "end": "2065378"
  },
  {
    "text": "validations on it again it's it's susceptible to um injections or cross-site scripting",
    "start": "2065379",
    "end": "2072280"
  },
  {
    "text": "attacks so whenever we're using custom scalers it's very important to sanitize the",
    "start": "2072280",
    "end": "2080560"
  },
  {
    "text": "input use validation techniques to prevent potential attacks",
    "start": "2080560",
    "end": "2086579"
  },
  {
    "start": "2086000",
    "end": "2201000"
  },
  {
    "text": "where close to the end I'm pretty sure I finished before time but this is from the state of graphql",
    "start": "2089560",
    "end": "2100619"
  },
  {
    "text": "2022 survey and um of I think 3000 developers took part",
    "start": "2100619",
    "end": "2107740"
  },
  {
    "text": "in this so and this is specifically for like the",
    "start": "2107740",
    "end": "2113020"
  },
  {
    "text": "security and the performance features uh We've looked at uh persisted queries",
    "start": "2113020",
    "end": "2120339"
  },
  {
    "text": "um I think query timeouts rate limiting depth limiting",
    "start": "2120339",
    "end": "2125800"
  },
  {
    "text": "um the cost analysis something that we spoke about as well as disabling introspection and requiring",
    "start": "2125800",
    "end": "2133060"
  },
  {
    "text": "authentication and allow listing um so this",
    "start": "2133060",
    "end": "2139119"
  },
  {
    "text": "um it is helpful to give a broad overview of the awareness that is there about each of these techniques and about",
    "start": "2139119",
    "end": "2147099"
  },
  {
    "text": "how many people are actually using it uh in production uh and um yeah",
    "start": "2147099",
    "end": "2154480"
  },
  {
    "text": "for persisted queries there's just about 20.5 percent of the response those who",
    "start": "2154480",
    "end": "2160359"
  },
  {
    "text": "are actually using it um disabling introspection is",
    "start": "2160359",
    "end": "2165760"
  },
  {
    "text": "um a faster thing to do a quicker thing to do and um it's",
    "start": "2165760",
    "end": "2171820"
  },
  {
    "text": "um it's known as well and a big percentage of people actually using it",
    "start": "2171820",
    "end": "2177839"
  },
  {
    "text": "uh what is um so there's uh yeah this query rate limiting and depth limiting",
    "start": "2177839",
    "end": "2185520"
  },
  {
    "text": "which a lot of people know about um and maybe around 23 26 percent of the",
    "start": "2185520",
    "end": "2194920"
  },
  {
    "text": "people are actually using it in production",
    "start": "2194920",
    "end": "2200520"
  },
  {
    "start": "2201000",
    "end": "2237000"
  },
  {
    "text": "so um I think I'm gonna be closing now I will leave you all early",
    "start": "2202720",
    "end": "2209320"
  },
  {
    "text": "um but um yes it takes 20 years to build a reputation in a few minutes a cyber",
    "start": "2209320",
    "end": "2215020"
  },
  {
    "text": "incident to ruin it um yeah this is actually uh from one of",
    "start": "2215020",
    "end": "2220119"
  },
  {
    "text": "my favorite TV series it's called Arrested Development um yeah and every time there's something",
    "start": "2220119",
    "end": "2226060"
  },
  {
    "text": "wrong um the characters are always like I made a huge mistake so yeah if if you're",
    "start": "2226060",
    "end": "2231700"
  },
  {
    "text": "actually calling somebody to say that about your graphql apis is too late already",
    "start": "2231700",
    "end": "2237700"
  },
  {
    "start": "2237000",
    "end": "2290000"
  },
  {
    "text": "okay before yeah before I end uh Postman is",
    "start": "2237700",
    "end": "2244060"
  },
  {
    "text": "also a member of the graphql foundation and um this year the graphql conf is going",
    "start": "2244060",
    "end": "2251619"
  },
  {
    "text": "to be hosted by the graphql foundation um that's in September",
    "start": "2251619",
    "end": "2257200"
  },
  {
    "text": "um Postman is a part of the foundation and we're also sponsored for the conference so I'm actually getting to",
    "start": "2257200",
    "end": "2262960"
  },
  {
    "text": "help with a lot of the organizing as well uh but uh if um and if you work with",
    "start": "2262960",
    "end": "2269980"
  },
  {
    "text": "graphql are interested in um sharing your learnings the cfp is still open I think it's open for another",
    "start": "2269980",
    "end": "2277060"
  },
  {
    "text": "two weeks and uh we're also doing some cool live streams leading after the",
    "start": "2277060",
    "end": "2282820"
  },
  {
    "text": "conference so if you're interested you might want to follow the graphql page on LinkedIn and join in on the action",
    "start": "2282820",
    "end": "2291359"
  },
  {
    "start": "2290000",
    "end": "2344000"
  },
  {
    "text": "yeah uh this is a couple of resources um that I use uh for uh for the talk um",
    "start": "2292000",
    "end": "2299560"
  },
  {
    "text": "so there's this great talk by Christina about the introduction to graphql security",
    "start": "2299560",
    "end": "2304680"
  },
  {
    "text": "uh and uh the damn vulnerable graphql application that I used",
    "start": "2304680",
    "end": "2310300"
  },
  {
    "text": "um just for an introduction to be familiar I just encourage everybody to try it out",
    "start": "2310300",
    "end": "2315520"
  },
  {
    "text": "uh and uh yeah the graphql security public workspace you will be able to access and I would yeah this one's uh",
    "start": "2315520",
    "end": "2323260"
  },
  {
    "text": "actually a very important article the one about the wise of uh graphql security and uh yeah my boss has",
    "start": "2323260",
    "end": "2330400"
  },
  {
    "text": "actually written it so I use a little bit of it in the presentation",
    "start": "2330400",
    "end": "2335640"
  },
  {
    "text": "but uh thank you [Applause]",
    "start": "2335820",
    "end": "2345900"
  }
]