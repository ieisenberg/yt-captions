[
  {
    "start": "0",
    "end": "71000"
  },
  {
    "text": "all right so welcome everyone to be stuck we are going to talk about angular",
    "start": "9580",
    "end": "15340"
  },
  {
    "text": "and you're the few and the brave who decided to come to an angular talk at",
    "start": "15340",
    "end": "20860"
  },
  {
    "text": "this conference because they sort of reacts to filter out of Microsoft stuff",
    "start": "20860",
    "end": "25869"
  },
  {
    "text": "and only a few angular talks so thanks for coming to this one so we are going to talk about angular 8 that to be very",
    "start": "25869",
    "end": "34360"
  },
  {
    "text": "precise the angular team doesn't want us to talk about angular 8 they even",
    "start": "34360",
    "end": "40540"
  },
  {
    "text": "created a Twitter account for that couple years ago to say that it's just angular so we're not supposed to say",
    "start": "40540",
    "end": "46629"
  },
  {
    "text": "English six seven eight nine whatever it's just angular so the rule really is",
    "start": "46629",
    "end": "52179"
  },
  {
    "text": "that when we talk about angular 1 it should be angularjs and when we talk about anything else so angular 2 plus",
    "start": "52179",
    "end": "59530"
  },
  {
    "text": "usually that's just angular so with that out of the way it's not going to be an",
    "start": "59530",
    "end": "66610"
  },
  {
    "text": "introduction to angular so if you words",
    "start": "66610",
    "end": "72760"
  },
  {
    "start": "71000",
    "end": "163000"
  },
  {
    "text": "about myself before I get started my name is Erin or just Al and gde",
    "start": "72760",
    "end": "78550"
  },
  {
    "text": "in web technologies more specifically angular little bit of Google Maps as well have a Java background started",
    "start": "78550",
    "end": "85540"
  },
  {
    "text": "doing full stack development a long time ago as a Java guy and then in 2011 got",
    "start": "85540",
    "end": "92410"
  },
  {
    "text": "into angularjs and that was it for me I was like well front-end is actually fun so I got into angularjs and then angular",
    "start": "92410",
    "end": "100690"
  },
  {
    "text": "and then started my own adventure with angular training.com so I do consulting",
    "start": "100690",
    "end": "106510"
  },
  {
    "text": "training and basically what I do every day is talk about angular or code with",
    "start": "106510",
    "end": "112540"
  },
  {
    "text": "angular so that's what's my life I'm based in Sacramento California where are",
    "start": "112540",
    "end": "118540"
  },
  {
    "text": "organized GDG Sacramento meet a group and angular meet a group as well out",
    "start": "118540",
    "end": "124330"
  },
  {
    "text": "there so again everything I do is ready angular related one way or another so",
    "start": "124330",
    "end": "131620"
  },
  {
    "text": "what about this room any Java developers in the room not too much it's it's a",
    "start": "131620",
    "end": "137500"
  },
  {
    "text": "Microsoft conference so c-sharp net yeah lots more anyone has",
    "start": "137500",
    "end": "145870"
  },
  {
    "text": "any experience with angular 1 and you're a genius okay what about JavaScript's okay most",
    "start": "145870",
    "end": "154930"
  },
  {
    "text": "of the room type scripts pretty good too and angular 2 plus a little bit okay so",
    "start": "154930",
    "end": "164710"
  },
  {
    "start": "163000",
    "end": "278000"
  },
  {
    "text": "I'm gonna start with the basics really it's an intro talk so we're gonna start with the idea where angular came from",
    "start": "164710",
    "end": "170080"
  },
  {
    "text": "and then we're gonna get into what we do when we build an angular app so before",
    "start": "170080",
    "end": "175930"
  },
  {
    "text": "angular we had all of these technologies PHP ASP JSP all of these things where",
    "start": "175930",
    "end": "181930"
  },
  {
    "text": "what you would do is make a request to a server when that server would use the",
    "start": "181930",
    "end": "187510"
  },
  {
    "text": "database and with that database get some data build some HTML Javascript CSS return to the client and render things",
    "start": "187510",
    "end": "194200"
  },
  {
    "text": "that's the basics that's how the web still works for the most part today 60%",
    "start": "194200",
    "end": "199810"
  },
  {
    "text": "of the internet just still works like this today it's not great though because",
    "start": "199810",
    "end": "206560"
  },
  {
    "text": "every time you click on something on your page while you make a request to the backend and you rebuild something",
    "start": "206560",
    "end": "211990"
  },
  {
    "text": "and return it to the client so if you have 1 million people on your website you're basically building 1 million",
    "start": "211990",
    "end": "217540"
  },
  {
    "text": "times the same page kind of so things have changed and we as angularjs that",
    "start": "217540",
    "end": "225160"
  },
  {
    "text": "was really one of the very first frameworks to go into that direction now the front end is completely independent",
    "start": "225160",
    "end": "231790"
  },
  {
    "text": "from the back end so when you build an angular app you build something it's gonna run in the browser and that",
    "start": "231790",
    "end": "237970"
  },
  {
    "text": "doesn't even care or know what is on the backend side meaning it could be any",
    "start": "237970",
    "end": "243820"
  },
  {
    "text": "technology on the back end doesn't really matter the front end is completely independent it's just it's",
    "start": "243820",
    "end": "248860"
  },
  {
    "text": "own render of HTML Javascript CSS running independently in the browser so",
    "start": "248860",
    "end": "255730"
  },
  {
    "text": "that's a big change in terms of mindsets because you can have really two different teams working on the front end",
    "start": "255730",
    "end": "262060"
  },
  {
    "text": "and the back end which is pretty good because working with the database is really not the same thing as displaying",
    "start": "262060",
    "end": "268930"
  },
  {
    "text": "data and dealing with you know layout if you and caching on the browser that kind of",
    "start": "268930",
    "end": "274190"
  },
  {
    "text": "thing so that's the idea behind angular now a little bit of angular history so",
    "start": "274190",
    "end": "282290"
  },
  {
    "start": "278000",
    "end": "381000"
  },
  {
    "text": "angular started a long time ago with angularjs 2012 was the official 1.0 and",
    "start": "282290",
    "end": "289840"
  },
  {
    "text": "in the angularjs errors with the angular 1x between 2012-2017 there was no real",
    "start": "289840",
    "end": "297800"
  },
  {
    "text": "pricked ability and when things would happen so that's the timeline sometimes you will get two or three different",
    "start": "297800",
    "end": "303650"
  },
  {
    "text": "versions earlier sometimes nothing for one year one you're going to have and then some of these versions they would",
    "start": "303650",
    "end": "310130"
  },
  {
    "text": "have breaking changes and some others not so from one day to the next you could end up with a new version of",
    "start": "310130",
    "end": "315770"
  },
  {
    "text": "angularjs that would break your code and that was that idea so when the angular",
    "start": "315770",
    "end": "321260"
  },
  {
    "text": "team started with angular 2 to the full rewrite of everything so everything",
    "start": "321260",
    "end": "326300"
  },
  {
    "text": "changed with angular 2 and they said well we're gonna learn from that because people didn't like it of course we don't",
    "start": "326300",
    "end": "331670"
  },
  {
    "text": "want your project to break from one day to the next because angular decided to to change things so with angular 2",
    "start": "331670",
    "end": "338600"
  },
  {
    "text": "things are different and now we have a new major version every six months so",
    "start": "338600",
    "end": "343670"
  },
  {
    "text": "that's predictable every six months we get a plus one of the major version that's why we are at angular 8 right now",
    "start": "343670",
    "end": "350210"
  },
  {
    "text": "an angular 9 is actually going to happen very soon the next months within a few weeks and then six months later are we",
    "start": "350210",
    "end": "356210"
  },
  {
    "text": "gonna get angular 10 so with that in mind predictable easy to know what's going to happen and that's",
    "start": "356210",
    "end": "362420"
  },
  {
    "text": "the only time when you can have breaking changes in the framework so every six months in between that you know that you",
    "start": "362420",
    "end": "369380"
  },
  {
    "text": "can just update to the latest nothing is going to break so if you're using 7.1",
    "start": "369380",
    "end": "374630"
  },
  {
    "text": "you want to get 7.2 no program just updates everything's fine so angular is",
    "start": "374630",
    "end": "382760"
  },
  {
    "start": "381000",
    "end": "433000"
  },
  {
    "text": "widely used and at Google alone they are using angular on 1500 different projects",
    "start": "382760",
    "end": "390260"
  },
  {
    "text": "and that's one company so that's that's big right fifth there are different projects at Google and it was 800 just",
    "start": "390260",
    "end": "398000"
  },
  {
    "text": "two years ago so they pretty much doubled the number of projects that they're building with angular",
    "start": "398000",
    "end": "403830"
  },
  {
    "text": "at Google which is pretty big if you want to see more examples of things",
    "start": "403830",
    "end": "409320"
  },
  {
    "text": "built with angular groceries website made with angular calm and you see that angular is very heavy on the enterprise",
    "start": "409320",
    "end": "416670"
  },
  {
    "text": "side so most companies who use angular would be you know banks airlines",
    "start": "416670",
    "end": "422730"
  },
  {
    "text": "financial institutions else care company that needs something safe and reliable",
    "start": "422730",
    "end": "429450"
  },
  {
    "text": "Toob Toob and reliable to build on really so angular is made with type",
    "start": "429450",
    "end": "435540"
  },
  {
    "start": "433000",
    "end": "543000"
  },
  {
    "text": "scripts and that's one of the reasons why it's a very appealing solution for",
    "start": "435540",
    "end": "441690"
  },
  {
    "text": "many people because typescript well if you come from a Java C sharp dotnet background when you see typescript you",
    "start": "441690",
    "end": "448950"
  },
  {
    "text": "just know it basically there's nothing to learn it's like okay I know that it's a class or the constructor all of these",
    "start": "448950",
    "end": "455550"
  },
  {
    "text": "things just make a lot of sense so it makes you an option of angular super easy because you'll see the code and it",
    "start": "455550",
    "end": "462570"
  },
  {
    "text": "starts making sense right away to you so if you're a full stack or back-end developer getting into angular is just",
    "start": "462570",
    "end": "469050"
  },
  {
    "text": "very easy because of that so that's one main benefit the second benefit of",
    "start": "469050",
    "end": "474750"
  },
  {
    "text": "typescript is that it is going to transpire down to es5 javascript and ESI javascript was",
    "start": "474750",
    "end": "482760"
  },
  {
    "text": "the version that was specified in 2004 so a long long time ago and because of",
    "start": "482760",
    "end": "489570"
  },
  {
    "text": "that browsers are pretty good with es5 right now you get 99 100 % of support of",
    "start": "489570",
    "end": "495120"
  },
  {
    "text": "es5 in all browsers so that's pretty good yes 6 was released 2015 and the",
    "start": "495120",
    "end": "501840"
  },
  {
    "text": "support is most likely 97 98 % across browsers so nobody is at one word",
    "start": "501840",
    "end": "507360"
  },
  {
    "text": "present yet with typescript so you don't have to care about this because typescript again is going to take your",
    "start": "507360",
    "end": "513930"
  },
  {
    "text": "code no matter what you use in terms of features the latest interesting feature from typescript you can use it is gonna",
    "start": "513930",
    "end": "521010"
  },
  {
    "text": "end up being transpired into es 5 that just works everywhere so this is also a",
    "start": "521010",
    "end": "526230"
  },
  {
    "text": "big burden that goes away when you use typescript because you can write any kind of code and you don't have to worry",
    "start": "526230",
    "end": "531540"
  },
  {
    "text": "oh is this going to work in IE is going to work in Firefox most of the art stuff is taken care",
    "start": "531540",
    "end": "537160"
  },
  {
    "text": "by the compiler itself so that's pretty good so we saw that angular is being",
    "start": "537160",
    "end": "546339"
  },
  {
    "start": "543000",
    "end": "679000"
  },
  {
    "text": "raised regularly it's reading typescript and it also comes with something very important that's angular CI so Siena is",
    "start": "546339",
    "end": "554379"
  },
  {
    "text": "something that when we're going to use for everything pretty much you can use your eye to generate some code for your",
    "start": "554379",
    "end": "561339"
  },
  {
    "text": "angular project you can use it to serve your code for diff purposes you can use it to build your app for production",
    "start": "561339",
    "end": "568149"
  },
  {
    "text": "bring your tests to run your end-to-end tests lint your code everything basically you can do everything with",
    "start": "568149",
    "end": "575079"
  },
  {
    "text": "angular CLI so I'm gonna start with a quick example of that and move on to a terminator here",
    "start": "575079",
    "end": "583680"
  },
  {
    "text": "where I'm going to run ng serve and you serve is the basic command so the end",
    "start": "583680",
    "end": "589029"
  },
  {
    "text": "all of these energy commands that's angular CLI and ng serve is going to go through my",
    "start": "589029",
    "end": "594129"
  },
  {
    "text": "entire project find out of the typescript code in it compile all of",
    "start": "594129",
    "end": "599379"
  },
  {
    "text": "that start a web server and sort of my app on that server locally so it's doing",
    "start": "599379",
    "end": "605470"
  },
  {
    "text": "it right now the initial start is a little bit slower because it has to go through all of the files discover",
    "start": "605470",
    "end": "611199"
  },
  {
    "text": "everything compile build optimize and then it's done so we see compared to",
    "start": "611199",
    "end": "616689"
  },
  {
    "text": "cessful in that's a good sign now I go to my browser localhost 4200 i refresh",
    "start": "616689",
    "end": "623740"
  },
  {
    "text": "this and I see hello angular so that's my angular app running right there and",
    "start": "623740",
    "end": "630600"
  },
  {
    "text": "now that engine is started I can just leave it go like this and every time I",
    "start": "630600",
    "end": "636670"
  },
  {
    "text": "make a change to my code it's just gonna see the change and automatically recompile refresh will render in my",
    "start": "636670",
    "end": "643000"
  },
  {
    "text": "browser so I'm gonna show that to you right now let's go back here so I'm just",
    "start": "643000",
    "end": "649360"
  },
  {
    "text": "gonna change angular 2 angular 8 which I should not be doing but it's a demo and I go back",
    "start": "649360",
    "end": "655360"
  },
  {
    "text": "to my browser and I go away and it refreshes I didn't do anything and it says I don't when you're eight so that's",
    "start": "655360",
    "end": "660939"
  },
  {
    "text": "Matson Yudhisthira I doing all of that under the hood very quickly recompiling",
    "start": "660939",
    "end": "666069"
  },
  {
    "text": "a death of what has changed and refreshing my bra",
    "start": "666069",
    "end": "671350"
  },
  {
    "text": "so that's pretty good so now I'm going",
    "start": "671350",
    "end": "680630"
  },
  {
    "start": "679000",
    "end": "964000"
  },
  {
    "text": "to talk about components which are really the most important thing to know about angular if there's only one thing",
    "start": "680630",
    "end": "686390"
  },
  {
    "text": "to remember about this talk that's a notion of components because when you build an angular app you've got to build",
    "start": "686390",
    "end": "692360"
  },
  {
    "text": "a tree of components so everything you're going to do probably about 80% or plus of the code you're going to write",
    "start": "692360",
    "end": "699110"
  },
  {
    "text": "is going to be components so what is the component well it's it's kind of like your own custom HTML element so when you",
    "start": "699110",
    "end": "706370"
  },
  {
    "text": "build a component you'll be your own HTML element will give you the name and then you put it on the screen and it showed up that's that's really all it is",
    "start": "706370",
    "end": "713660"
  },
  {
    "text": "and any angular app is going to be a tree of components so in my basic",
    "start": "713660",
    "end": "720260"
  },
  {
    "text": "example here that says hello and u8 that's a component of course and that component looks like this so that's the",
    "start": "720260",
    "end": "728600"
  },
  {
    "text": "syntax to create a basic component so it's time Swift code we have a class",
    "start": "728600",
    "end": "734959"
  },
  {
    "text": "here that class has one property name of type string so that's one of the",
    "start": "734959",
    "end": "740870"
  },
  {
    "text": "benefits of typescript you can use types you know code make things explicit and in my constructor",
    "start": "740870",
    "end": "746390"
  },
  {
    "text": "I just initialize name to angular 8 so very basic that's all of the business",
    "start": "746390",
    "end": "751880"
  },
  {
    "text": "logic in that component not much and then what turns this class into an",
    "start": "751880",
    "end": "757459"
  },
  {
    "text": "actual angular component is a decorator we have up here so this block of code here is is adding some extra information",
    "start": "757459",
    "end": "766060"
  },
  {
    "text": "on that class to make it to make it an actual component so we add two different",
    "start": "766060",
    "end": "772370"
  },
  {
    "text": "pieces of info here the first one is this selector the selector is the name",
    "start": "772370",
    "end": "777740"
  },
  {
    "text": "of the HTML element so in that case it's going to be app hello which means whenever I want this component on the",
    "start": "777740",
    "end": "783320"
  },
  {
    "text": "screen I just use that tag name and the component is going to show up and the",
    "start": "783320",
    "end": "789080"
  },
  {
    "text": "second thing we have is this template so that's the actual HTML that is going to",
    "start": "789080",
    "end": "795260"
  },
  {
    "text": "render whenever I get this component on the screen and you have everything here to have a",
    "start": "795260",
    "end": "801710"
  },
  {
    "text": "end-running component so I have 17 if shrines of codes to do this which is pretty good and most of it was actually",
    "start": "801710",
    "end": "808760"
  },
  {
    "text": "automatically generated by Ingres Chennai which I'm going to show you next one last thing on that component so this",
    "start": "808760",
    "end": "818450"
  },
  {
    "text": "syntax here this is an angular expression or an angular interpolation",
    "start": "818450",
    "end": "824540"
  },
  {
    "text": "and what this does is that it's stunning angular that this here has to be",
    "start": "824540",
    "end": "829880"
  },
  {
    "text": "evaluated in the context of that component class instance and that's why",
    "start": "829880",
    "end": "836000"
  },
  {
    "text": "when we display this component on the screen we see hello angular 8 in our case because this is going to be",
    "start": "836000",
    "end": "842390"
  },
  {
    "text": "replaced with the following which seems super basic but it's actually very",
    "start": "842390",
    "end": "847910"
  },
  {
    "text": "important to know about so that's our component right here if I inspect the",
    "start": "847910",
    "end": "856760"
  },
  {
    "text": "source and go to HTML elements behind it you'll see that in our application we",
    "start": "856760",
    "end": "864320"
  },
  {
    "text": "have an HTML body we have the app root which is the main wrapper component around everything in our app and then we",
    "start": "864320",
    "end": "871070"
  },
  {
    "text": "have one component app hello and my when I open up hello that's my div and it says heroin great so that's my component",
    "start": "871070",
    "end": "879410"
  },
  {
    "text": "it's really an HTML element that lives in the Dom as you can see but there's",
    "start": "879410",
    "end": "885710"
  },
  {
    "text": "more to it because this binding here is well what what we call a data binding",
    "start": "885710",
    "end": "891050"
  },
  {
    "text": "and as soon as we define a data binding in a template then what's going to happen is that if the data changes later",
    "start": "891050",
    "end": "898310"
  },
  {
    "text": "then the component is automatically going to see that and refresh the HTML",
    "start": "898310",
    "end": "904340"
  },
  {
    "text": "that gets displayed and I can remove that using the JavaScript set timeout",
    "start": "904340",
    "end": "911690"
  },
  {
    "text": "for instance and what I'm gonna do is tell angular that after a few seconds",
    "start": "911690",
    "end": "917990"
  },
  {
    "text": "I'm gonna change the value of this dot name and I'm going to change it to",
    "start": "917990",
    "end": "923840"
  },
  {
    "text": "something else literary something else and this is gonna happen after five",
    "start": "923840",
    "end": "931889"
  },
  {
    "text": "seconds so basics that timeout that's regular JavaScript and after five",
    "start": "931889",
    "end": "937709"
  },
  {
    "text": "seconds I'm just going to change the name so I go back here I move away from my laptop says hello when you to eight",
    "start": "937709",
    "end": "943800"
  },
  {
    "text": "and after five seconds it just says hello something else so angular has its",
    "start": "943800",
    "end": "949259"
  },
  {
    "text": "own change detection mechanism that takes care of that and if we just change the data it renders right away which is",
    "start": "949259",
    "end": "955439"
  },
  {
    "text": "very nice something to remove this so",
    "start": "955439",
    "end": "965670"
  },
  {
    "start": "964000",
    "end": "1439000"
  },
  {
    "text": "what I'm gonna do now is actually build an app from scratch why not right we can do that and the app",
    "start": "965670",
    "end": "972569"
  },
  {
    "text": "I'm gonna build is a simple license plate store so while your license plate store well because no one else has done",
    "start": "972569",
    "end": "979079"
  },
  {
    "text": "it before you can find a lot of to-do list apps that kind of stuff and I liked",
    "start": "979079",
    "end": "985980"
  },
  {
    "text": "to I collect license plates so I thought well that's pretty unique I'm going to be the license plate star so let's get",
    "start": "985980",
    "end": "993029"
  },
  {
    "text": "started with that if I want to be in my lessons play store I need components in order to do so and",
    "start": "993029",
    "end": "998480"
  },
  {
    "text": "in that UI well you can probably guess quite a few components already this",
    "start": "998480",
    "end": "1004939"
  },
  {
    "text": "header appears a navigation well that would be one component so I can turn",
    "start": "1004939",
    "end": "1009949"
  },
  {
    "text": "that into its own HTML element and every time I need that header I would just use that component and it showed up on the",
    "start": "1009949",
    "end": "1015800"
  },
  {
    "text": "screen so that would be component number one component number two would be this guy here so this kind of marketing",
    "start": "1015800",
    "end": "1022939"
  },
  {
    "text": "header with the title and description I'm gonna make a component out of it so I can reuse it some different screens as",
    "start": "1022939",
    "end": "1029058"
  },
  {
    "text": "well and then all of these different license plates so that's one component",
    "start": "1029059",
    "end": "1034459"
  },
  {
    "text": "and that's another instance of that same component and that's a third instance of that component so we're gonna have three",
    "start": "1034459",
    "end": "1041120"
  },
  {
    "text": "different components to get started so let's build them so I go back to a",
    "start": "1041120",
    "end": "1047209"
  },
  {
    "text": "terminal and what I'm gonna do here so I open a new one and I'm gonna send",
    "start": "1047209",
    "end": "1055070"
  },
  {
    "text": "angular cni to do this for me so ng generate component and the first one I'm",
    "start": "1055070",
    "end": "1060380"
  },
  {
    "text": "going to do is the navigation so the one at the top this black bar rats navigation menu so I ran that and",
    "start": "1060380",
    "end": "1068070"
  },
  {
    "text": "from there angular speed is gonna take care of the difficult parts which is generating the code and the template and",
    "start": "1068070",
    "end": "1075150"
  },
  {
    "text": "everything for that component and it's done so now I have in a given component",
    "start": "1075150",
    "end": "1080630"
  },
  {
    "text": "if I go back to my IDE we will see that a folder has popped up for this and it",
    "start": "1080630",
    "end": "1088680"
  },
  {
    "text": "has a navigation component of TS with of' what's needed to build my component",
    "start": "1088680",
    "end": "1094020"
  },
  {
    "text": "so there's a decorator where the name of the selector so all of this was created from my command only it even has a basic",
    "start": "1094020",
    "end": "1101580"
  },
  {
    "text": "HTML template but that's not what you're gonna use right we're gonna make something a little bit more interesting",
    "start": "1101580",
    "end": "1107220"
  },
  {
    "text": "at just a paragraph so to save us some time it's not actually fully from scratch I'm",
    "start": "1107220",
    "end": "1113850"
  },
  {
    "text": "gonna get some templates because it would be painful to write or that HTML",
    "start": "1113850",
    "end": "1119940"
  },
  {
    "text": "and CSS so I'm just gonna copy paste the template for that component in here and",
    "start": "1119940",
    "end": "1126390"
  },
  {
    "text": "now my medication component is ready so this one is very basic doesn't have any",
    "start": "1126390",
    "end": "1132150"
  },
  {
    "text": "business logic it's just a menu so that's really just that HTML that I want to reuse so if I want to use that",
    "start": "1132150",
    "end": "1140100"
  },
  {
    "text": "component I'm gonna go to my app component at es so that's a main wrapper",
    "start": "1140100",
    "end": "1146310"
  },
  {
    "text": "component that displays everything in my app and right now while it was just displaying this app hello so I'm gonna",
    "start": "1146310",
    "end": "1152940"
  },
  {
    "text": "replace that and instead of displaying app hello I'm gonna change this a little",
    "start": "1152940",
    "end": "1158580"
  },
  {
    "text": "bit and tell angular that I'm actually gonna use an external template file so",
    "start": "1158580",
    "end": "1166800"
  },
  {
    "text": "that's the app component HTML there we go no typos and in that app component",
    "start": "1166800",
    "end": "1175650"
  },
  {
    "text": "HTML I'm just going to add my navigation at the top so that's a basic layout for",
    "start": "1175650",
    "end": "1183390"
  },
  {
    "text": "my application and that's where the navigation component is gonna go at the very top of it so now that I've made",
    "start": "1183390",
    "end": "1191370"
  },
  {
    "text": "those changes I go back here and there we go I have in education component on the screen so",
    "start": "1191370",
    "end": "1198750"
  },
  {
    "text": "that's the first one easy enough this one was just HTML now we're going to be the second one which is the the",
    "start": "1198750",
    "end": "1205980"
  },
  {
    "text": "jumbotron to this this section here with the marketing message welcome to our",
    "start": "1205980",
    "end": "1211230"
  },
  {
    "text": "store blah blah blah this is going to be its own component this one is going to be a little bit more complex because we",
    "start": "1211230",
    "end": "1217860"
  },
  {
    "text": "want to be able to change the title in the description so we want to be able to customize what the component renders and",
    "start": "1217860",
    "end": "1224030"
  },
  {
    "text": "I'll show you how we can do that so same process I just go back to my terminal I",
    "start": "1224030",
    "end": "1230900"
  },
  {
    "text": "can generate a component there's a sort of syntax for generate component which",
    "start": "1230900",
    "end": "1236490"
  },
  {
    "text": "is just an GGC that's a little bit faster and I'm gonna call it that one",
    "start": "1236490",
    "end": "1242720"
  },
  {
    "text": "jumbotron so it takes a few seconds",
    "start": "1242720",
    "end": "1248880"
  },
  {
    "text": "there we go everything is generated I'm gonna get my template from here copy",
    "start": "1248880",
    "end": "1255630"
  },
  {
    "text": "that paste it in my brand new component that was generated here so you can see",
    "start": "1255630",
    "end": "1262860"
  },
  {
    "text": "that every single angular component has its own folder in that folder we have the CSS for it the HTML the typescript",
    "start": "1262860",
    "end": "1270750"
  },
  {
    "text": "code and even a sample unit tests that gets auto-generated for you and all of that is its own self-contained folder so",
    "start": "1270750",
    "end": "1277500"
  },
  {
    "text": "it's easy to find it it's easy to know which files belong to which component so",
    "start": "1277500",
    "end": "1283410"
  },
  {
    "text": "I go here replace that template and the title and description as I mentioned",
    "start": "1283410",
    "end": "1291300"
  },
  {
    "text": "earlier are going to be dynamic so I'm going to replace that static text with two different expressions title and",
    "start": "1291300",
    "end": "1299550"
  },
  {
    "text": "description which means if I do this I would have to declare these two in my",
    "start": "1299550",
    "end": "1305850"
  },
  {
    "text": "component right here so I'm gonna declare title of type string and",
    "start": "1305850",
    "end": "1312650"
  },
  {
    "text": "description of type string as well",
    "start": "1312650",
    "end": "1317780"
  },
  {
    "text": "now that alone is not going to set any values to it so if I want to be able to set them then use to these two different",
    "start": "1318490",
    "end": "1325120"
  },
  {
    "text": "properties I'm going to use another angular feature that is called the input",
    "start": "1325120",
    "end": "1332670"
  },
  {
    "text": "so if you know about reacts that's pretty much equivalent to the props in react so that's a way to say well this",
    "start": "1332670",
    "end": "1339610"
  },
  {
    "text": "title is actually an input so we can pass a value to it and use it in that component so I knew that input decorator",
    "start": "1339610",
    "end": "1347260"
  },
  {
    "text": "on both of my properties so that angular knows that I can set these two things from the outside and that's exactly what",
    "start": "1347260",
    "end": "1356230"
  },
  {
    "text": "I'm going to do next so go back to my main component get my jumbotron to show",
    "start": "1356230",
    "end": "1362380"
  },
  {
    "text": "up in here and just for a first test I just gonna use it like this and I'm not",
    "start": "1362380",
    "end": "1369250"
  },
  {
    "text": "gonna pass any data to it and you can see that we just have this grey rectangle with nothing in it and now I",
    "start": "1369250",
    "end": "1377860"
  },
  {
    "text": "can set a title or account store and a",
    "start": "1377860",
    "end": "1385330"
  },
  {
    "text": "description and that would be plate for",
    "start": "1385330",
    "end": "1394840"
  },
  {
    "text": "instance I say this go back here and",
    "start": "1394840",
    "end": "1400650"
  },
  {
    "text": "there we go we have another component that shows up and this one I can customize it change the text even makes",
    "start": "1400650",
    "end": "1407350"
  },
  {
    "text": "it as the text dynamic and change over time because of these bindings it's all",
    "start": "1407350",
    "end": "1412690"
  },
  {
    "text": "reactive at this point so that's what's component number two so back to my",
    "start": "1412690",
    "end": "1421810"
  },
  {
    "text": "slides so we talked about the hero component we saw that we can use an external template",
    "start": "1421810",
    "end": "1428669"
  },
  {
    "text": "URL the same thing for the CSS so every component can have its own its own CSS",
    "start": "1428669",
    "end": "1434190"
  },
  {
    "text": "that's going to be scoped specifically for that component now these components",
    "start": "1434190",
    "end": "1441780"
  },
  {
    "start": "1439000",
    "end": "1669000"
  },
  {
    "text": "I just created two of them but you don't have to create all of the components from scratch by yourself the nice thing",
    "start": "1441780",
    "end": "1448500"
  },
  {
    "text": "about having this notion of angular components is that many different people",
    "start": "1448500",
    "end": "1455159"
  },
  {
    "text": "have written libraries that gives you most of the essential components that you would ever need for your app so I'm",
    "start": "1455159",
    "end": "1461460"
  },
  {
    "text": "going to show you two of those the first one is angular material so the website is material of angular at i/o",
    "start": "1461460",
    "end": "1468179"
  },
  {
    "text": "and if you like Android or if you want to build something that looks and feel",
    "start": "1468179",
    "end": "1474450"
  },
  {
    "text": "like an Android application that's a perfect candidate for that because these components are really on the Android",
    "start": "1474450",
    "end": "1482190"
  },
  {
    "text": "look and feel from Google so if you want a nice looking checkbox with all of these animations on and off and the CSS",
    "start": "1482190",
    "end": "1489059"
  },
  {
    "text": "transitions all of that you get that for free basically just npm install it and",
    "start": "1489059",
    "end": "1494280"
  },
  {
    "text": "then you can use those components and you're good to go same thing for painful components which",
    "start": "1494280",
    "end": "1500880"
  },
  {
    "text": "has a date picker who wants to write their own date picker right well you can just use that and you're all set and",
    "start": "1500880",
    "end": "1508470"
  },
  {
    "text": "that's the only code you need to make it happen it's just a component so it's an HTML",
    "start": "1508470",
    "end": "1516539"
  },
  {
    "text": "element that you use and there we go you have your date speaker open running so",
    "start": "1516539",
    "end": "1524309"
  },
  {
    "text": "that these are the main benefits of angular material the other main interesting thing about it is that it comes from Google just",
    "start": "1524309",
    "end": "1531150"
  },
  {
    "text": "like angular itself and the material team is working very closely with the angular team so there really is angular",
    "start": "1531150",
    "end": "1537510"
  },
  {
    "text": "material at the same pace as angular itself so anyway that version 8 angular",
    "start": "1537510",
    "end": "1542520"
  },
  {
    "text": "material is at version 8 as well and when there really is angular 9 then angular material is going to be at",
    "start": "1542520",
    "end": "1547830"
  },
  {
    "text": "version 9 as well so everything is always in sync which is really nice because we don't want to be stuck with",
    "start": "1547830",
    "end": "1555030"
  },
  {
    "text": "an old version of your UI component just because they don't want to upgrade to the latest version of angular with",
    "start": "1555030",
    "end": "1560880"
  },
  {
    "text": "this one it's safe you know it's they're always going to be up to dates because that's the main",
    "start": "1560880",
    "end": "1566250"
  },
  {
    "text": "purpose of angular material another example I want sure we show you quickly",
    "start": "1566250",
    "end": "1571410"
  },
  {
    "text": "is this library from VMware which is a",
    "start": "1571410",
    "end": "1576510"
  },
  {
    "text": "clarity design system so they also have their own angular components they also",
    "start": "1576510",
    "end": "1583410"
  },
  {
    "text": "provide just basic UX and UI components so just HTML and CSS but they have the",
    "start": "1583410",
    "end": "1589620"
  },
  {
    "text": "angular drivers for those for most of them and same same same idea you get a",
    "start": "1589620",
    "end": "1595320"
  },
  {
    "text": "date picker you'll get dropdowns who get labels lists all of these nice looking",
    "start": "1595320",
    "end": "1601800"
  },
  {
    "text": "components that saves you a ton of time so you want a model while very go you",
    "start": "1601800",
    "end": "1607620"
  },
  {
    "text": "have one and you can just again copy paste our example well don't do that's",
    "start": "1607620",
    "end": "1613290"
  },
  {
    "text": "not good to copy paste but you could and it works right away and you don't have",
    "start": "1613290",
    "end": "1619530"
  },
  {
    "text": "to worry about the CSS or any of that the other thing especially for material",
    "start": "1619530",
    "end": "1624990"
  },
  {
    "text": "it's easy to style so if you want to customize the look and feel of these components you can just change the",
    "start": "1624990",
    "end": "1630750"
  },
  {
    "text": "entire thing so the fonts the colors and everything they do have a few defaults",
    "start": "1630750",
    "end": "1636990"
  },
  {
    "text": "on the on the website and default some default themes that you can use these",
    "start": "1636990",
    "end": "1643050"
  },
  {
    "text": "ones are very flashy so I don't know many people would use those but you can really customize everything you want to",
    "start": "1643050",
    "end": "1650100"
  },
  {
    "text": "make it fit your company's brand and CSS styling so that's components a pretty",
    "start": "1650100",
    "end": "1659400"
  },
  {
    "text": "good thing because we can build our own we can rely on components written by other people we can customize components",
    "start": "1659400",
    "end": "1666300"
  },
  {
    "text": "written by other people and we can belong up on that next thing I'm going",
    "start": "1666300",
    "end": "1672030"
  },
  {
    "start": "1669000",
    "end": "2149000"
  },
  {
    "text": "to talk about data bindings so data bindings are what make everything dynamic in our angular applications for",
    "start": "1672030",
    "end": "1679140"
  },
  {
    "text": "instance so we can we can I'm going to show you a demo we saw that we can bind",
    "start": "1679140",
    "end": "1686040"
  },
  {
    "text": "a value to something in our template using these double curly braces the expression we can do the same to bind a",
    "start": "1686040",
    "end": "1694399"
  },
  {
    "text": "value to vertex input for instance using the square brackets right here so this",
    "start": "1694399",
    "end": "1701000"
  },
  {
    "text": "is a data binding from type strip from your angular component class to the HTML",
    "start": "1701000",
    "end": "1706100"
  },
  {
    "text": "and we are binding in the other direction this one is done with parentheses so here I'm binding to the",
    "start": "1706100",
    "end": "1711679"
  },
  {
    "text": "unclick event and when I click it's going to call the alerts name method in my component super easy so quick example",
    "start": "1711679",
    "end": "1719779"
  },
  {
    "text": "for that one I'm going here find my bindings component there it is so very",
    "start": "1719779",
    "end": "1730190"
  },
  {
    "text": "simple HTML template that's a one-way binding to the property called name in my component and then when we click on",
    "start": "1730190",
    "end": "1737240"
  },
  {
    "text": "the better and I'm going to change the value I'm going to alert something and in the typescript code for this so name",
    "start": "1737240",
    "end": "1745909"
  },
  {
    "text": "is a set to a test and when I click the button it's going to call this alert name method which is just gonna say this",
    "start": "1745909",
    "end": "1753230"
  },
  {
    "text": "dot name was clicked so let's take a quick try I go here so",
    "start": "1753230",
    "end": "1759740"
  },
  {
    "text": "the name of the value of my input is a test and when I click the button a test",
    "start": "1759740",
    "end": "1765710"
  },
  {
    "text": "was clicked so just with square brackets in parentheses I was able to do some",
    "start": "1765710",
    "end": "1771409"
  },
  {
    "text": "bindings between my typescript code and my HTML template nice and easy now what",
    "start": "1771409",
    "end": "1778700"
  },
  {
    "text": "if we want to way deeper bindings because what I've done here is just one way so if I change the value of a test",
    "start": "1778700",
    "end": "1783860"
  },
  {
    "text": "to anything when I click the button hysteresis a test was clicked and that's",
    "start": "1783860",
    "end": "1790190"
  },
  {
    "text": "because changing the value in that input didn't reflect the update to my typescript component instance if I want",
    "start": "1790190",
    "end": "1798139"
  },
  {
    "text": "this to happen then there is a specific angular feature for that and it's called",
    "start": "1798139",
    "end": "1804019"
  },
  {
    "text": "ng model so ng model is a two-way data-binding and because it works both directions we",
    "start": "1804019",
    "end": "1809690"
  },
  {
    "text": "need both the square brackets and the parentheses to make this happen so it seems a little bit weird at first",
    "start": "1809690",
    "end": "1815120"
  },
  {
    "text": "but we get used to it and it's actually the only somewhat",
    "start": "1815120",
    "end": "1820879"
  },
  {
    "text": "complex syntax to know about so but that's ok and so if I want to enable that in my in",
    "start": "1820879",
    "end": "1826770"
  },
  {
    "text": "my example here let's go back to my code and instead of having a binding to value",
    "start": "1826770",
    "end": "1834660"
  },
  {
    "text": "I'm just going to add the parentheses crow brackets ng model I say this and",
    "start": "1834660",
    "end": "1842700"
  },
  {
    "text": "now when I go here and change that value to some other string I click the pattern and you can see that",
    "start": "1842700",
    "end": "1848010"
  },
  {
    "text": "the string was also updated in my component instance so that's a two-bit",
    "start": "1848010",
    "end": "1853290"
  },
  {
    "text": "binding so these bindings the same very basic but it's actually super powerful",
    "start": "1853290",
    "end": "1859650"
  },
  {
    "text": "and you're going to use that for a lot of things with angular for instance here I have an example where this",
    "start": "1859650",
    "end": "1867330"
  },
  {
    "text": "paragraph would have its color so the color of the text in the paragraph has a data binding and then data binding is",
    "start": "1867330",
    "end": "1874470"
  },
  {
    "text": "going to be an expression that's slightly more complex and just evaluating a variable this is where I",
    "start": "1874470",
    "end": "1881130"
  },
  {
    "text": "evaluate as error if it's true the text is going to be read if it's false the",
    "start": "1881130",
    "end": "1886560"
  },
  {
    "text": "text is going to be blue so it's a simple thing like this I can make my CSS",
    "start": "1886560",
    "end": "1891600"
  },
  {
    "text": "my template very dynamic I can also use the same trick to show or hide some error messages and just with that simple",
    "start": "1891600",
    "end": "1899280"
  },
  {
    "text": "feature I can go back to my button here oops",
    "start": "1899280",
    "end": "1906260"
  },
  {
    "text": "and I just went simple binding so let's",
    "start": "1910380",
    "end": "1916060"
  },
  {
    "text": "say I'm gonna bind to the background color of my button and what I'm gonna",
    "start": "1916060",
    "end": "1921910"
  },
  {
    "text": "bend into is name so why would I do that",
    "start": "1921910",
    "end": "1926980"
  },
  {
    "text": "well just to show that these bindings happen in real time as we change stuff in our app so now I'll go back here and",
    "start": "1926980",
    "end": "1933820"
  },
  {
    "text": "if I type red my button just turns red right away I did it at green it turns",
    "start": "1933820",
    "end": "1939790"
  },
  {
    "text": "green so these are data binding in action as soon as something changes all of the listeners to that property gets",
    "start": "1939790",
    "end": "1947020"
  },
  {
    "text": "refreshed right away and again we don't have to write any code for this just defining the bindings is good enough so",
    "start": "1947020",
    "end": "1955300"
  },
  {
    "text": "that's data bindings so quick recap there's really four different ways to do",
    "start": "1955300",
    "end": "1961360"
  },
  {
    "text": "bindings the first one we saw was the curly braces around the venue and you can just prove that in any template",
    "start": "1961360",
    "end": "1967390"
  },
  {
    "text": "anywhere and it's gonna substitute that expression with the actual string then",
    "start": "1967390",
    "end": "1974050"
  },
  {
    "text": "you have a one-way binding from the component to the Dom using the square brackets so you can bind to anything we",
    "start": "1974050",
    "end": "1980140"
  },
  {
    "text": "so style background color venue any HTML property you can bind to the event",
    "start": "1980140",
    "end": "1986620"
  },
  {
    "text": "handler so unclick on drag and drop on whatever you want you can add an event",
    "start": "1986620",
    "end": "1991870"
  },
  {
    "text": "listener and trigger some code in your component class and finally you have ng model that just works both ways so if",
    "start": "1991870",
    "end": "1998500"
  },
  {
    "text": "the data changes in HTML or in typescript and the other side is going to be updated as well so with that in",
    "start": "1998500",
    "end": "2007110"
  },
  {
    "text": "mind I can now if I go back to my store it's still empty so we need to display",
    "start": "2007110",
    "end": "2013830"
  },
  {
    "text": "some info in here so I'm gonna be scale first product a first license plate so I",
    "start": "2013830",
    "end": "2019500"
  },
  {
    "text": "go back here and I'm gonna add a license plate component so up license plate this",
    "start": "2019500",
    "end": "2026460"
  },
  {
    "text": "one was already created and I'm gonna show you what it looks like it's it's a",
    "start": "2026460",
    "end": "2031980"
  },
  {
    "text": "component of course takes two inputs first input is a license plate object",
    "start": "2031980",
    "end": "2037760"
  },
  {
    "text": "license plate is an interface I created with typescript and that's another big",
    "start": "2037760",
    "end": "2042870"
  },
  {
    "text": "benefit of types we have types so we have the types from the language itself but we can create our own types easily so this is a",
    "start": "2042870",
    "end": "2049770"
  },
  {
    "text": "license-plate product it's going to have it on sale properties and I have a picture title price all of these are",
    "start": "2049770",
    "end": "2055830"
  },
  {
    "text": "typed have an input so I can pass that object to my component and then it's",
    "start": "2055830",
    "end": "2062490"
  },
  {
    "text": "going to be used in the template to render the title of the play to description and everything so let's do",
    "start": "2062490",
    "end": "2069750"
  },
  {
    "text": "this go here and I'm gonna pass a license plate object as an input so I",
    "start": "2069750",
    "end": "2077580"
  },
  {
    "text": "have one defined in my component right here actually have an array of many",
    "start": "2077580",
    "end": "2084000"
  },
  {
    "text": "different license plates that we are going to display later on and I also need to set a button text and the button",
    "start": "2084000",
    "end": "2092639"
  },
  {
    "text": "text in our case is going to be Add to Cart so I just do these two things I say",
    "start": "2092640",
    "end": "2102690"
  },
  {
    "text": "this go back to my store and now we have a license plate that shows up now this",
    "start": "2102690",
    "end": "2109080"
  },
  {
    "text": "one is a little bit big I want to make it smaller and and take just one third of the screen so I'm gonna add the CSS",
    "start": "2109080",
    "end": "2116070"
  },
  {
    "text": "class to it and this application is using bootstrap for CSS so with",
    "start": "2116070",
    "end": "2123120"
  },
  {
    "text": "bootstrap I can restrict the width of my of my column using this and now it's",
    "start": "2123120",
    "end": "2130530"
  },
  {
    "text": "gonna fit my screen a little bit better",
    "start": "2130530",
    "end": "2135140"
  },
  {
    "text": "oops so now we have three components on the screen we are using data bindings",
    "start": "2137090",
    "end": "2143130"
  },
  {
    "text": "we're displaying data out is good but we want to display them all on one license",
    "start": "2143130",
    "end": "2149280"
  },
  {
    "start": "2149000",
    "end": "2369000"
  },
  {
    "text": "plate so how do we do that that's where directives come into play so with directives you can manipulate",
    "start": "2149280",
    "end": "2155250"
  },
  {
    "text": "the Dom you can repeat elements you can hide them you can show them you can make things much more dynamic so directives",
    "start": "2155250",
    "end": "2162660"
  },
  {
    "text": "are all about manipulating the Dom and the most common example of such",
    "start": "2162660",
    "end": "2168560"
  },
  {
    "text": "directive is ng for because ng 4 is just a repeats so you can repeat an element",
    "start": "2168560",
    "end": "2173610"
  },
  {
    "text": "as many times as needed so this example here would create a list of persons it",
    "start": "2173610",
    "end": "2180510"
  },
  {
    "text": "will just repeat so go through the array of persons and create an Li element for",
    "start": "2180510",
    "end": "2186030"
  },
  {
    "text": "every single list item that we have in that array if I apply that idea in my",
    "start": "2186030",
    "end": "2191970"
  },
  {
    "text": "store so I go back here and I'm not going to repeat my license plate many",
    "start": "2191970",
    "end": "2197490"
  },
  {
    "text": "times so I'm going to use ng 4 that's",
    "start": "2197490",
    "end": "2202860"
  },
  {
    "text": "nice and split of license plates so that's the array of license plate that I showed you earlier I'm gonna erase that",
    "start": "2202860",
    "end": "2210660"
  },
  {
    "text": "already generate many different license plate components and every single instance of that so every single item in",
    "start": "2210660",
    "end": "2218340"
  },
  {
    "text": "that array is gonna be known as LP inside my template so that's what I'm going to pass as an input to the",
    "start": "2218340",
    "end": "2225630"
  },
  {
    "text": "component itself so I'm iterating through an array generating many",
    "start": "2225630",
    "end": "2231870"
  },
  {
    "text": "components passing the data for each object into that component and the result is our store is all of the",
    "start": "2231870",
    "end": "2238620"
  },
  {
    "text": "license plates in it so ng for repeated eight of them and that's it with just a",
    "start": "2238620",
    "end": "2246150"
  },
  {
    "text": "few components and directives we have something that looks pretty good so",
    "start": "2246150",
    "end": "2251540"
  },
  {
    "text": "that's ng 4 directive another very useful one is ng F so ng F is just going",
    "start": "2252290",
    "end": "2260220"
  },
  {
    "text": "to show or hide something based on a condition and the way it's going to hide",
    "start": "2260220",
    "end": "2266130"
  },
  {
    "text": "something is actually by removing it from the Dom entirely so you won't be able to see it in your HTML it's going to be entirely gone when",
    "start": "2266130",
    "end": "2273239"
  },
  {
    "text": "you use ng-if so let's give it an example what I want to do next in that",
    "start": "2273239",
    "end": "2281339"
  },
  {
    "text": "store is have a tag that would show up here on sale when the license plate is on sale so some of these plates they",
    "start": "2281339",
    "end": "2290759"
  },
  {
    "text": "have what they all have a property on sale sometimes it's far sometimes it's",
    "start": "2290759",
    "end": "2296130"
  },
  {
    "text": "true and when it's true I want to display the sale tag right next to the title of my license plate so let's do",
    "start": "2296130",
    "end": "2303119"
  },
  {
    "text": "this back to my IDE I'm gonna go to the",
    "start": "2303119",
    "end": "2308249"
  },
  {
    "text": "template for my license plate component and up here I want to add an image so image source equals assets slash I think",
    "start": "2308249",
    "end": "2318779"
  },
  {
    "text": "it's a PNG so let's make sure that this",
    "start": "2318779",
    "end": "2328769"
  },
  {
    "text": "works before I keep going I just had the image here yep so now we have this tiny",
    "start": "2328769",
    "end": "2336089"
  },
  {
    "text": "little cell types all over the place and we just want to show them money to make sense to do so so that would be when the",
    "start": "2336089",
    "end": "2343019"
  },
  {
    "text": "license plate is actually on sale so what I'm gonna do is just add a ng-if",
    "start": "2343019",
    "end": "2348720"
  },
  {
    "text": "directive it's going to be based on plate dot",
    "start": "2348720",
    "end": "2355380"
  },
  {
    "text": "unsay and just by adding this little trick now only the license plates on",
    "start": "2355380",
    "end": "2361739"
  },
  {
    "text": "sale I have the tag so that's another example of very useful directive and a",
    "start": "2361739",
    "end": "2369589"
  },
  {
    "start": "2369000",
    "end": "2495000"
  },
  {
    "text": "final one I want to show you is ng-switch so ng-switch is a switch case implementation for angular you can do",
    "start": "2369589",
    "end": "2377670"
  },
  {
    "text": "that to do some kind of tiny pagination on the component if needed so the way it",
    "start": "2377670",
    "end": "2385170"
  },
  {
    "text": "works is you have a ng ng sweet that's based on a variable so here the variables page and then you will define",
    "start": "2385170",
    "end": "2392220"
  },
  {
    "text": "different cases so here one two three so if a.g course one which is the first paragraph page equals two second",
    "start": "2392220",
    "end": "2398460"
  },
  {
    "text": "paragraph and if it's not one two three it it falls into the default so let's",
    "start": "2398460",
    "end": "2407730"
  },
  {
    "text": "take a look at my example for this one and you switch component so I just have",
    "start": "2407730",
    "end": "2416940"
  },
  {
    "text": "a property page by default it's now just so that we see the no page selected by",
    "start": "2416940",
    "end": "2423119"
  },
  {
    "text": "default and then I just have three buttons to go through these different pages so when I click page one set page",
    "start": "2423119",
    "end": "2429089"
  },
  {
    "text": "page to one which is going to display the first page and so forth so easy enough let's take a look at this one",
    "start": "2429089",
    "end": "2439279"
  },
  {
    "text": "and you switch so nope it's selected I click page 1 first page second page",
    "start": "2440310",
    "end": "2447990"
  },
  {
    "text": "third page and I did some pagination anyway as you know very little code in",
    "start": "2447990",
    "end": "2453210"
  },
  {
    "text": "the end which is nice and easy another good thing about this is that it",
    "start": "2453210",
    "end": "2459330"
  },
  {
    "text": "doesn't have to be paragraphs these could be components so here I could be using other components from my",
    "start": "2459330",
    "end": "2466020"
  },
  {
    "text": "application so that's a component that I have called hiding and if I use that",
    "start": "2466020",
    "end": "2471360"
  },
  {
    "text": "component for page 3 now when I go to page 3 we have an actual component that gets displayed not just the paragraphs",
    "start": "2471360",
    "end": "2477720"
  },
  {
    "text": "or static text so it's it's powerful so",
    "start": "2477720",
    "end": "2485400"
  },
  {
    "text": "much directives and the next thing I'm going to talk about is pipes so pipes in",
    "start": "2485400",
    "end": "2496710"
  },
  {
    "start": "2495000",
    "end": "2569000"
  },
  {
    "text": "angular or wheat format data whenever you want to format something on the screen you can use a pipe to do so and",
    "start": "2496710",
    "end": "2503030"
  },
  {
    "text": "there's about 15 16 pipes in the angular framework right now so most of the",
    "start": "2503030",
    "end": "2509100"
  },
  {
    "text": "common ones are uppercase lowercase title K is date currency number so",
    "start": "2509100",
    "end": "2515310"
  },
  {
    "text": "everything that you can format so you know there's many different formats of dates and numbers and all of that you",
    "start": "2515310",
    "end": "2521550"
  },
  {
    "text": "can use pipes all that let's say that in my license plate store I want all of the",
    "start": "2521550",
    "end": "2527910"
  },
  {
    "text": "titles here to be uppercase all of the time for instance while I'm gonna use a pipe to do that so I go to my license",
    "start": "2527910",
    "end": "2535590"
  },
  {
    "text": "plate component and the way we use a pipe in angular is by using the pipe character and then the name of the pipe",
    "start": "2535590",
    "end": "2541770"
  },
  {
    "text": "itself so uppercase in that case and I just apply that to the title and now all",
    "start": "2541770",
    "end": "2548700"
  },
  {
    "text": "of my titles are going to be uppercase so instead of changing the data that you",
    "start": "2548700",
    "end": "2553950"
  },
  {
    "text": "get from your back-end or wherever you don't have to do that you can just do the formatting in the template which",
    "start": "2553950",
    "end": "2559710"
  },
  {
    "text": "makes more sense because that's where it will really happen so there are many",
    "start": "2559710",
    "end": "2567060"
  },
  {
    "text": "different types as I mentioned in the angular framework another very interesting when is date",
    "start": "2567060",
    "end": "2573390"
  },
  {
    "start": "2569000",
    "end": "2725000"
  },
  {
    "text": "the date pipe is going to take a date format it there's some format that are",
    "start": "2573390",
    "end": "2579660"
  },
  {
    "text": "provided by the angular framework that you can already use the medium dates my old age long date there's at least 10",
    "start": "2579660",
    "end": "2586470"
  },
  {
    "text": "different options and you can also go full custom and say oh I want a year to be like two digits or four digits and",
    "start": "2586470",
    "end": "2593220"
  },
  {
    "text": "the months to be a string or just three letters or just two digits you have all",
    "start": "2593220",
    "end": "2598319"
  },
  {
    "text": "of these options I'm going to do that quickly because that's the bottom of my",
    "start": "2598319",
    "end": "2604230"
  },
  {
    "text": "app here I have I have a bug actually that's a copy right here and the",
    "start": "2604230",
    "end": "2610079"
  },
  {
    "text": "copyright still says 2018 and unless I change the code every time we switch to",
    "start": "2610079",
    "end": "2617309"
  },
  {
    "text": "a new gorillaz is always going to be out of date because it is are coded in my",
    "start": "2617309",
    "end": "2622470"
  },
  {
    "text": "template right now which is not a good idea so instead of doing that I'm going to use a pipe to solve that problem so",
    "start": "2622470",
    "end": "2629220"
  },
  {
    "text": "how can I do this so that's happening in my app component",
    "start": "2629220",
    "end": "2634410"
  },
  {
    "text": "HTML so in my app component yes I'm going to add a new property and I'm",
    "start": "2634410",
    "end": "2640230"
  },
  {
    "text": "going to call it now and now it's going to be a new date so that's going to",
    "start": "2640230",
    "end": "2645270"
  },
  {
    "text": "create a JavaScript date object that is set to right now when you don't pass any parameter to it and with that in mind I",
    "start": "2645270",
    "end": "2653670"
  },
  {
    "text": "can now replace 2018 it's just an expression that displays now let's see",
    "start": "2653670",
    "end": "2659970"
  },
  {
    "text": "what happens when I do this so I go all the way down here and I get a very",
    "start": "2659970",
    "end": "2665339"
  },
  {
    "text": "verbose state with everything in it including the time zone and the seconds",
    "start": "2665339",
    "end": "2670920"
  },
  {
    "text": "and everything now that's not what I want I just want to display 2019 so that's where the date pipe is going to",
    "start": "2670920",
    "end": "2677819"
  },
  {
    "text": "come to the rescue if I just apply the date pipe with no parameter then it's going to do the",
    "start": "2677819",
    "end": "2683609"
  },
  {
    "text": "default formatting and it's better already a little bit shorter October 18 is 2019",
    "start": "2683609",
    "end": "2691319"
  },
  {
    "text": "but I just wants a girl so I'm gonna do full custom and pass my own date format",
    "start": "2691319",
    "end": "2697170"
  },
  {
    "text": "here which is just why why why why because that's all I care about with this date so I do that go back here",
    "start": "2697170",
    "end": "2705690"
  },
  {
    "text": "and now my program is just sold forever 6 2019 and when we move to 2020 is going",
    "start": "2705690",
    "end": "2712230"
  },
  {
    "text": "to say 2020 so you can use pipes in a lot of different creative ways this one",
    "start": "2712230",
    "end": "2718710"
  },
  {
    "text": "is not super creative but still useful",
    "start": "2718710",
    "end": "2723230"
  },
  {
    "start": "2725000",
    "end": "2762000"
  },
  {
    "text": "so that was pipes so so far we saw how to create components and display them on",
    "start": "2725180",
    "end": "2730260"
  },
  {
    "text": "the screen how to use directives to make the content more dynamic and repeat things or show in hide things we saw",
    "start": "2730260",
    "end": "2737339"
  },
  {
    "text": "pipes do some formatting in our components in our templates so that's",
    "start": "2737339",
    "end": "2742349"
  },
  {
    "text": "all UI client-side based things but how do we",
    "start": "2742349",
    "end": "2747750"
  },
  {
    "text": "get data from a server and actually display that data too well so that that",
    "start": "2747750",
    "end": "2752940"
  },
  {
    "text": "story's connected to something in order to do so there's one final concept of",
    "start": "2752940",
    "end": "2758280"
  },
  {
    "text": "angular and that's called services and services are based on difference in injection so services are where we're",
    "start": "2758280",
    "end": "2765869"
  },
  {
    "start": "2762000",
    "end": "2851000"
  },
  {
    "text": "going to put all of the business logic all of the application logic goes there so how you get the data how you cash it",
    "start": "2765869",
    "end": "2772410"
  },
  {
    "text": "how you interact with the back hand all of that is going to go into services our components I don't have to know about",
    "start": "2772410",
    "end": "2778559"
  },
  {
    "text": "this it should be focused on getting the it while having data pass to them and",
    "start": "2778559",
    "end": "2784170"
  },
  {
    "text": "then rendering the data using templates so the service is a class that we can inject into an object using a dependency",
    "start": "2784170",
    "end": "2791760"
  },
  {
    "text": "injection by default services are going to be single tons so you only have one",
    "start": "2791760",
    "end": "2797339"
  },
  {
    "text": "instance of your service or your entire application which is very handy because",
    "start": "2797339",
    "end": "2802559"
  },
  {
    "text": "you can use a service to share data between different components for instance so that's a good use case for",
    "start": "2802559",
    "end": "2808440"
  },
  {
    "text": "this and in order to turn a class into a",
    "start": "2808440",
    "end": "2813450"
  },
  {
    "text": "service all we need is the at injectable decorator so we saw that for components",
    "start": "2813450",
    "end": "2818760"
  },
  {
    "text": "we have the add component decorator for our services at injectable so who's",
    "start": "2818760",
    "end": "2826260"
  },
  {
    "text": "familiar with dependency injection ok that's most of the room so Mis",
    "start": "2826260",
    "end": "2832289"
  },
  {
    "text": "dependency injection the idea is that we don't create differences ourselves we rely on the framework to do that",
    "start": "2832289",
    "end": "2839070"
  },
  {
    "text": "so that's what's gonna happen here angular it's gonna create a services and pass them to the components or",
    "start": "2839070",
    "end": "2845130"
  },
  {
    "text": "directives or other services that need it and it's going to do the injection",
    "start": "2845130",
    "end": "2850290"
  },
  {
    "text": "for us so all we have to do when we needed when we want a service to be injected into a component is just ask",
    "start": "2850290",
    "end": "2857490"
  },
  {
    "start": "2851000",
    "end": "2894000"
  },
  {
    "text": "for it in the constructor so here I have an example of component class and that",
    "start": "2857490",
    "end": "2863910"
  },
  {
    "text": "class needs a post service so I just asked for it in the constructor and",
    "start": "2863910",
    "end": "2869100"
  },
  {
    "text": "angular is going to take care of that in treat a service and pass it to the constructor now if I want to create a",
    "start": "2869100",
    "end": "2876420"
  },
  {
    "text": "service of course I'm not gonna do it manually I'm gonna rely on angular CLI to do this using the energy generated",
    "start": "2876420",
    "end": "2883680"
  },
  {
    "text": "service command or ng GS and this is going to give me a service so let's",
    "start": "2883680",
    "end": "2892619"
  },
  {
    "text": "let's do that Oh before I do one last thing and that's a very good typescript",
    "start": "2892619",
    "end": "2898170"
  },
  {
    "start": "2894000",
    "end": "3102000"
  },
  {
    "text": "trick to be aware of so in typescript when you have a constructor parameter if",
    "start": "2898170",
    "end": "2905220"
  },
  {
    "text": "you add a keyword such as public or private or protected in front of the",
    "start": "2905220",
    "end": "2910710"
  },
  {
    "text": "constructor parameter it's automatically going to turn that parameter into into a",
    "start": "2910710",
    "end": "2918210"
  },
  {
    "text": "component into a class property so the code here with just that public key word",
    "start": "2918210",
    "end": "2923640"
  },
  {
    "text": "is equivalent to the more verbose version that you have down here so",
    "start": "2923640",
    "end": "2932280"
  },
  {
    "text": "that's a good trick to be aware of because what it saves a lot of time in the role of code you don't have to",
    "start": "2932280",
    "end": "2937440"
  },
  {
    "text": "declare a property and then assign the value to it and order that you can just use one keyword and it's done so that's",
    "start": "2937440",
    "end": "2943619"
  },
  {
    "text": "that's a nice trick so let's get into that now what I want to do is have a",
    "start": "2943619",
    "end": "2950670"
  },
  {
    "text": "service that's going to give me those license plates so instead of having an array of values are coded into my main",
    "start": "2950670",
    "end": "2957570"
  },
  {
    "text": "component which is what I have right now everything is already in here it's not realistic that's not how real",
    "start": "2957570",
    "end": "2964470"
  },
  {
    "text": "life works so I'm going to remove that from here and this component is not",
    "start": "2964470",
    "end": "2971369"
  },
  {
    "text": "going to have any license plates from now I can even remove this one and these license",
    "start": "2971369",
    "end": "2981580"
  },
  {
    "text": "plates are going to come from a service instead so that's what I'm gonna do I'm gonna generate a service for that so",
    "start": "2981580",
    "end": "2987640"
  },
  {
    "text": "back to my terminal ng generate service this service is going to be my license",
    "start": "2987640",
    "end": "2993490"
  },
  {
    "text": "plate service so let's generate it and ggs license plate there we go",
    "start": "2993490",
    "end": "3000350"
  },
  {
    "text": "so you can see that it's injectable everything is ready and I'm just gonna",
    "start": "3001760",
    "end": "3007500"
  },
  {
    "text": "had one with that get list get list is",
    "start": "3007500",
    "end": "3012810"
  },
  {
    "text": "going to return an array of license plate so I can specify that type here",
    "start": "3012810",
    "end": "3018300"
  },
  {
    "text": "and I'm just going to return that same array that I just cut from my component",
    "start": "3018300",
    "end": "3024119"
  },
  {
    "text": "so it still not coded but at least now it's in a service which is a little bit",
    "start": "3024119",
    "end": "3029430"
  },
  {
    "text": "better in a few minutes we're going to get that from a server so it's gonna be the real thing I save here so my service is ready it",
    "start": "3029430",
    "end": "3039270"
  },
  {
    "text": "has a method that returns the data so what I need to do now is use it in my",
    "start": "3039270",
    "end": "3044940"
  },
  {
    "text": "main application component so how do I do that well by having a constructor so",
    "start": "3044940",
    "end": "3052260"
  },
  {
    "text": "in my constructor I'm gonna have one parameter I'll make it private this is",
    "start": "3052260",
    "end": "3059130"
  },
  {
    "text": "gonna be my service license plate service and what I'm gonna do with that",
    "start": "3059130",
    "end": "3064920"
  },
  {
    "text": "service is just code it to retrieve my license plates which is a get list",
    "start": "3064920",
    "end": "3071820"
  },
  {
    "text": "method so now I'm using the dependency injection to inject that service and",
    "start": "3071820",
    "end": "3080150"
  },
  {
    "text": "again angular is going to do all of the heavy lifting here I don't have to worry about any of this and I go back to my",
    "start": "3080150",
    "end": "3087240"
  },
  {
    "text": "app everything just looks the same because when it's the same date a bit coming from a different place so now we",
    "start": "3087240",
    "end": "3096180"
  },
  {
    "text": "have a service perfect next let's get the data from the backend so we are going to use HTTP to do that so angular",
    "start": "3096180",
    "end": "3103980"
  },
  {
    "start": "3102000",
    "end": "3447000"
  },
  {
    "text": "has a service - to deal with all HTTP requests it's called the HTTP client and not it should",
    "start": "3103980",
    "end": "3110820"
  },
  {
    "text": "be client well it's you're gonna use it for all of your Ajax requests and it works out of the box with JSON and the rest so it's",
    "start": "3110820",
    "end": "3117840"
  },
  {
    "text": "made ready to to work very nicely with that which means that in the end when",
    "start": "3117840",
    "end": "3123210"
  },
  {
    "text": "you want to request data from the backend it's gonna look like this so just one or two lines of code to say a",
    "start": "3123210",
    "end": "3128610"
  },
  {
    "text": "HTTP client make that HTTP GET request to that back-end and when you get the",
    "start": "3128610",
    "end": "3133770"
  },
  {
    "text": "data assign it to something in my service or in my component and that's it",
    "start": "3133770",
    "end": "3139710"
  },
  {
    "text": "you do that and you have your data that shows up so when you make an HTTP GET",
    "start": "3139710",
    "end": "3146430"
  },
  {
    "text": "request this is going to return an observable object so these observables they come from a",
    "start": "3146430",
    "end": "3153210"
  },
  {
    "text": "library called rxjs angular relies very heavily on that and we could spend just",
    "start": "3153210",
    "end": "3159570"
  },
  {
    "text": "a couple days talking about rxjs so I'm not going to do that now for now just",
    "start": "3159570",
    "end": "3165180"
  },
  {
    "text": "assume that an observable is an object that we get any way we can subscribe to it to get our data so that's what I do",
    "start": "3165180",
    "end": "3171060"
  },
  {
    "text": "here it is we get returns the observable I subscribe to that which allows me to",
    "start": "3171060",
    "end": "3177240"
  },
  {
    "text": "register a callback that callback is going to get the data when the backend",
    "start": "3177240",
    "end": "3182670"
  },
  {
    "text": "responds so HTTP client it's an angular",
    "start": "3182670",
    "end": "3188370"
  },
  {
    "text": "service which means we can inject it in the constructor of wherever we need it",
    "start": "3188370",
    "end": "3195900"
  },
  {
    "text": "so here have a service I'm injecting HTTP client into it and then in a method",
    "start": "3195900",
    "end": "3201600"
  },
  {
    "text": "down here I just use that to make an HTTP request to my back-end and retrieve",
    "start": "3201600",
    "end": "3207180"
  },
  {
    "text": "some license plates so the nice thing",
    "start": "3207180",
    "end": "3213960"
  },
  {
    "text": "about each client is that it plays nicely with typescript so when I make a request I can specify",
    "start": "3213960",
    "end": "3220500"
  },
  {
    "text": "the type of the response using generics so that's what's happening here I'm specifying that what I'm gonna get from",
    "start": "3220500",
    "end": "3227880"
  },
  {
    "text": "the backend is an array of license plate so everything is still strongly typed on my image",
    "start": "3227880",
    "end": "3233550"
  },
  {
    "text": "application so let's do this let's use the back end and get some detail now",
    "start": "3233550",
    "end": "3240120"
  },
  {
    "text": "so I do need to start my server locally",
    "start": "3240120",
    "end": "3245310"
  },
  {
    "text": "there you go so now I have a server running on port 8000 and in order to use",
    "start": "3245310",
    "end": "3252630"
  },
  {
    "text": "it I'm going to go back to my service and instead of returning that our code",
    "start": "3252630",
    "end": "3258360"
  },
  {
    "text": "array of plates going to remove that and use the HTTP client instead so injecting",
    "start": "3258360",
    "end": "3267540"
  },
  {
    "text": "the HTTP client so this service comes from the angular framework itself now we",
    "start": "3267540",
    "end": "3272640"
  },
  {
    "text": "need to create it and now I can do this that HTTP GET make",
    "start": "3272640",
    "end": "3285330"
  },
  {
    "text": "a request to localhost 8080 and this",
    "start": "3285330",
    "end": "3291090"
  },
  {
    "text": "localhost 8080 I'm going to show you what it looks like",
    "start": "3291090",
    "end": "3296690"
  },
  {
    "text": "so but just an array of license plates",
    "start": "3296690",
    "end": "3301760"
  },
  {
    "text": "our typo yeah this happens that's why people don't usually do - coding on",
    "start": "3309230",
    "end": "3314869"
  },
  {
    "text": "stage yep there we go that's my data so it's a symmetry of license plates but",
    "start": "3314869",
    "end": "3321049"
  },
  {
    "text": "this time coming from a server which means I have a typo here so I can fix it",
    "start": "3321049",
    "end": "3326270"
  },
  {
    "text": "so this HTTP requests going to return an array of license plates so same ideas",
    "start": "3326270",
    "end": "3331309"
  },
  {
    "text": "before I can use generics to specify this and now instead of returning the",
    "start": "3331309",
    "end": "3337280"
  },
  {
    "text": "data itself I'm going to return an observable of that data so that's my",
    "start": "3337280",
    "end": "3343160"
  },
  {
    "text": "service it is not already and my component so AB component yes so I'm",
    "start": "3343160",
    "end": "3349880"
  },
  {
    "text": "going to change it a little bit because notes I think we're gonna make a request to get a response so we have to",
    "start": "3349880",
    "end": "3355790"
  },
  {
    "text": "subscribe to that and have a call back",
    "start": "3355790",
    "end": "3360910"
  },
  {
    "text": "and then when we get to data we assign it to our array of license plates now",
    "start": "3360910",
    "end": "3368240"
  },
  {
    "text": "the nice thing about this is that the logic behind how we retrieve the license plates is completely unknown from the",
    "start": "3368240",
    "end": "3374660"
  },
  {
    "text": "component the component just know that it has to subscribe to an observer that observer could be an HTTP request",
    "start": "3374660",
    "end": "3381740"
  },
  {
    "text": "could be a WebSocket it could be reading a cookie in the browser we don't know we don't have to know it's completely",
    "start": "3381740",
    "end": "3387890"
  },
  {
    "text": "decoupled your component is not aware of how it's being used and that's very nice only the only service knows that so",
    "start": "3387890",
    "end": "3396020"
  },
  {
    "text": "that's my code and now if I go back to here we should be able to see the same",
    "start": "3396020",
    "end": "3402470"
  },
  {
    "text": "license plates as before but the main difference is that this now comes from",
    "start": "3402470",
    "end": "3408049"
  },
  {
    "text": "from the network so you can see that there was an HP request made to",
    "start": "3408049",
    "end": "3413150"
  },
  {
    "text": "localhost 8,000 stretch data the status was turned red okay and the response was",
    "start": "3413150",
    "end": "3419359"
  },
  {
    "text": "eight different license plates so from a",
    "start": "3419359",
    "end": "3424609"
  },
  {
    "text": "component perspective it's Regis making that request with a line of code assigning that to a property and then",
    "start": "3424609",
    "end": "3431480"
  },
  {
    "text": "angular is going to detect the change rerender display my license plates so we",
    "start": "3431480",
    "end": "3437390"
  },
  {
    "text": "have two minutes left and for these two minutes I'm going to",
    "start": "3437390",
    "end": "3443579"
  },
  {
    "text": "talk about a component router so so far everything I've been doing here was just",
    "start": "3443579",
    "end": "3448890"
  },
  {
    "start": "3447000",
    "end": "3578000"
  },
  {
    "text": "one page we had one page everything was running in that same screen and and that's good but most apps in real life they have",
    "start": "3448890",
    "end": "3455910"
  },
  {
    "text": "multiple pages multiple screens so the component router is the solution for that it's just a way to tell angular",
    "start": "3455910",
    "end": "3462450"
  },
  {
    "text": "that when we go to a specific URL we want to render a specific component so",
    "start": "3462450",
    "end": "3468990"
  },
  {
    "text": "we're gonna create a routing table that's going to say a when I go to slash login I want to display the rugged",
    "start": "3468990",
    "end": "3474450"
  },
  {
    "text": "component when I go to slash couch you're gonna display the card component and angular needs to know where to",
    "start": "3474450",
    "end": "3481410"
  },
  {
    "text": "display those components though so this is gonna happen through a router outlet the router is just a directory that we",
    "start": "3481410",
    "end": "3488220"
  },
  {
    "text": "put in our code to tell angular that's where you're gonna render these routed",
    "start": "3488220",
    "end": "3493230"
  },
  {
    "text": "components and then we provide the routing table which is just a mapping",
    "start": "3493230",
    "end": "3498780"
  },
  {
    "text": "between a path and a component so the",
    "start": "3498780",
    "end": "3504210"
  },
  {
    "text": "demo example is here that I have with all of these links this is based on the only angular component router so when I",
    "start": "3504210",
    "end": "3510450"
  },
  {
    "text": "click any of these examples you can see it a URL changes and we have a new",
    "start": "3510450",
    "end": "3516119"
  },
  {
    "text": "component that shows up on the screen all of that is happening client-side this navigation is happening in",
    "start": "3516119",
    "end": "3522059"
  },
  {
    "text": "javascript in the browser it's not going to any server so it's good because what",
    "start": "3522059",
    "end": "3527609"
  },
  {
    "text": "it's using the browser history so I can navigate back and forth using the browser buttons or I can even its",
    "start": "3527609",
    "end": "3533220"
  },
  {
    "text": "refresh and the app gets triggered in the same state on the same component so",
    "start": "3533220",
    "end": "3539460"
  },
  {
    "text": "that's not what's a component router allows us to do it navigate between",
    "start": "3539460",
    "end": "3544500"
  },
  {
    "text": "different strings and you can now bookmark URL and get back to here later",
    "start": "3544500",
    "end": "3551849"
  },
  {
    "text": "on even if it's just a client-side",
    "start": "3551849",
    "end": "3556369"
  },
  {
    "text": "so that's all I had right on time thanks a lot for coming if you have any questions my email is here feel free to",
    "start": "3558470",
    "end": "3565039"
  },
  {
    "text": "write you can also come to me ask questions after this talk the link to my",
    "start": "3565039",
    "end": "3570200"
  },
  {
    "text": "slides is right here again thanks a lot and revenge",
    "start": "3570200",
    "end": "3576170"
  },
  {
    "text": "[Applause]",
    "start": "3576170",
    "end": "3579339"
  }
]