[
  {
    "start": "0",
    "end": "135000"
  },
  {
    "text": "okay can you hear me okay thank you uh so let us begin good",
    "start": "5299",
    "end": "11460"
  },
  {
    "text": "morning everyone and thank you for coming to this talk my name is Adam furmanik and I'll be your host for next",
    "start": "11460",
    "end": "16800"
  },
  {
    "text": "one hour talking mostly about testing at scale and to understand what are we",
    "start": "16800",
    "end": "21840"
  },
  {
    "text": "going to cover uh we need to get some background about the computer systems we do so generally for this talk we'll",
    "start": "21840",
    "end": "28980"
  },
  {
    "text": "focus on big applications distributed systems running on clusters with like",
    "start": "28980",
    "end": "34820"
  },
  {
    "text": "thousands of notes processing terabytes of data every hour and generally running",
    "start": "34820",
    "end": "40920"
  },
  {
    "text": "at scale we won't be focusing on apps running on one like like one machine or",
    "start": "40920",
    "end": "46379"
  },
  {
    "text": "one device no we wanna go why do we wanna go Broad and we want to test our applications so that's the idea we are",
    "start": "46379",
    "end": "53820"
  },
  {
    "text": "going to answer questions whether we need tests at all what kind of tests we need how to implement them and what to",
    "start": "53820",
    "end": "60719"
  },
  {
    "text": "look for when we are going to to test our apps to to get it efficiently and",
    "start": "60719",
    "end": "65760"
  },
  {
    "text": "not to overpay much couple words about me I'm a software engineer with like over a decade of experience working with",
    "start": "65760",
    "end": "72240"
  },
  {
    "text": "big companies like Microsoft and Amazon also blogger public speaker author of these two books feel free to take a look",
    "start": "72240",
    "end": "78720"
  },
  {
    "text": "at those feel free to drop me a line on email Twitter whatever you like most and also I encourage you to take a look at",
    "start": "78720",
    "end": "84900"
  },
  {
    "text": "my blog at blog.com adam4manic.pl moving on the agenda for today is we are going",
    "start": "84900",
    "end": "91080"
  },
  {
    "text": "to actually start with a very simple straightforward question do we need tests at all and while it may sound",
    "start": "91080",
    "end": "97320"
  },
  {
    "text": "obviously and the answer may be obvious that sure we do we are actually going to",
    "start": "97320",
    "end": "102420"
  },
  {
    "text": "understand that no we do not need tests and we are need to we need to understand when to drop tests and how to test our",
    "start": "102420",
    "end": "109799"
  },
  {
    "text": "applications in order to get it done efficiently when we are talking about the big scale then we are going to cover",
    "start": "109799",
    "end": "116100"
  },
  {
    "text": "a couple of like technical low level and high level stuff for instance mocking for instance testing distributed",
    "start": "116100",
    "end": "122220"
  },
  {
    "text": "applications data science applications machine learning UI etc etc so we are",
    "start": "122220",
    "end": "127380"
  },
  {
    "text": "going to cover very use scenarios and understand where to look for like pitfalls mistakes and issues with the",
    "start": "127380",
    "end": "134700"
  },
  {
    "text": "scenario we are going to see so the very first question is do we need tests hands up if you think we do",
    "start": "134700",
    "end": "141120"
  },
  {
    "start": "135000",
    "end": "352000"
  },
  {
    "text": "okay most of the room is scare anyone who thinks we do not",
    "start": "141120",
    "end": "147140"
  },
  {
    "text": "not a single person okay so for the next one hour I'm going to convince you that no we do not need tests and why is that",
    "start": "147239",
    "end": "154220"
  },
  {
    "text": "first let's realize the reality like we all need tests right but we don't test",
    "start": "154220",
    "end": "159720"
  },
  {
    "text": "standard libraries do we who has ever tested like javarandtime.net runtime C plus plus",
    "start": "159720",
    "end": "166680"
  },
  {
    "text": "runtime Etc I guess most of you skip that but there are bugs there like I",
    "start": "166680",
    "end": "172379"
  },
  {
    "text": "personally found bags in.net runtime and C plus plus runtime friend of mine from my unifound bag in like concurrent",
    "start": "172379",
    "end": "179220"
  },
  {
    "text": "dictionary implementation in jvm.net once deployed and for many years was deploying a class code priority",
    "start": "179220",
    "end": "186780"
  },
  {
    "text": "queue that was another priority Queue at all and it was not that it was like buggy losing data and some Edge",
    "start": "186780",
    "end": "193019"
  },
  {
    "text": "scenarios no it had this algorithm written completely like incorrectly so we do need tests but we do not test our",
    "start": "193019",
    "end": "200700"
  },
  {
    "text": "standard libraries right why and obviously tutorials tell you hey you",
    "start": "200700",
    "end": "205739"
  },
  {
    "text": "don't need to do that because it's already been tested it's probably like battle tested everyone confirms it works",
    "start": "205739",
    "end": "213060"
  },
  {
    "text": "but reality shows it does not so why do we claim that we test our applications when we don't test the most important",
    "start": "213060",
    "end": "219239"
  },
  {
    "text": "part second we don't have like 100 code coverage do we obviously we don't we",
    "start": "219239",
    "end": "226080"
  },
  {
    "text": "don't waste time testing Getters Setters or some other like very straightforward",
    "start": "226080",
    "end": "231360"
  },
  {
    "text": "facets just getting code from here to there but generally why why do we claim",
    "start": "231360",
    "end": "236400"
  },
  {
    "text": "that we test our applications if we don't cover all the cases all the lines of code that can be back literally",
    "start": "236400",
    "end": "242159"
  },
  {
    "text": "anywhere in our app and still we don't test those we pretty often decide to",
    "start": "242159",
    "end": "247379"
  },
  {
    "text": "drop some tests like UI tests uh that's a good example of which test we want to drop in our apps mostly like we",
    "start": "247379",
    "end": "254340"
  },
  {
    "text": "obviously we've been there and done that right let's write selenium tests for our application it worked great for first",
    "start": "254340",
    "end": "261000"
  },
  {
    "text": "week and then we become just frustrated like they are not maintainable at all they are just not reliable they fail",
    "start": "261000",
    "end": "268080"
  },
  {
    "text": "spiritually every other day so we decide to drop them but then our application becomes untested in this area so why",
    "start": "268080",
    "end": "276120"
  },
  {
    "text": "what should we do instead we pretty often mock external components and I'm",
    "start": "276120",
    "end": "281400"
  },
  {
    "text": "talking here whenever I use mock in this conversation I mean whatever piece that",
    "start": "281400",
    "end": "287100"
  },
  {
    "text": "replaces a production component this could be a mochito-like mock this could",
    "start": "287100",
    "end": "292320"
  },
  {
    "text": "be like test container running locally instead in a cloud this could be like in-memory H2 database instead of your",
    "start": "292320",
    "end": "299100"
  },
  {
    "text": "regular Oracle instance right whenever you do replace a production component you are effectively mocking it because",
    "start": "299100",
    "end": "305699"
  },
  {
    "text": "you do not run your tests against an actual code but against some fake that",
    "start": "305699",
    "end": "310979"
  },
  {
    "text": "is running in between so we do replace PR like production components and we still claim that we test our application",
    "start": "310979",
    "end": "317340"
  },
  {
    "text": "but we know most of the issues come not from like buggy implementations of algorithms but from integration points",
    "start": "317340",
    "end": "324600"
  },
  {
    "text": "right we integrate things together and this is where most of the issues appear so why do we claim that we test our",
    "start": "324600",
    "end": "330780"
  },
  {
    "text": "applications when actually we don't test points where the risk is the highest",
    "start": "330780",
    "end": "335820"
  },
  {
    "text": "not to mention that we don't test cases for like which we consider edge cases",
    "start": "335820",
    "end": "341100"
  },
  {
    "text": "who has ever tested an application here for like cosmic ray here not a single hand okay so we don't do",
    "start": "341100",
    "end": "349259"
  },
  {
    "text": "that and you may think to yourself why would we ever do that and the answer is reality is actually a contradictory part",
    "start": "349259",
    "end": "356639"
  },
  {
    "start": "352000",
    "end": "655000"
  },
  {
    "text": "here first according to Stats even 80 percent of our products are used never",
    "start": "356639",
    "end": "363060"
  },
  {
    "text": "or rarely obviously that's based on some surveys gathered across many years so",
    "start": "363060",
    "end": "368580"
  },
  {
    "text": "generally do not trust that like fully because it's based on service so we never know what the application was and",
    "start": "368580",
    "end": "375539"
  },
  {
    "text": "what the developers thought about that what the reality was when it came to like using the actual features but",
    "start": "375539",
    "end": "381600"
  },
  {
    "text": "generally still it is like repeatable and those stats are confirmed year over year that most of our applications are",
    "start": "381600",
    "end": "389460"
  },
  {
    "text": "not used so we Implement 80 percent of the app and they obviously know that we",
    "start": "389460",
    "end": "394500"
  },
  {
    "text": "are like under a heavy time pressure deadlines are obviously for the last week so we need to develop like on in a",
    "start": "394500",
    "end": "401759"
  },
  {
    "text": "rush and generally like according to another stats like even 30 or 4 40 percent of requirements to our",
    "start": "401759",
    "end": "408360"
  },
  {
    "text": "applications change over the life cycle of a project meaning that one third of what you implement is actually then",
    "start": "408360",
    "end": "415440"
  },
  {
    "text": "removed deleted because it's not needed or not used at all so you may ask yourself a question why would I ever",
    "start": "415440",
    "end": "421319"
  },
  {
    "text": "bother testing this application why would I ever spend time writing and maintaining tests if like most of the",
    "start": "421319",
    "end": "428220"
  },
  {
    "text": "app is not used at all if most of the app is like changed and moved to like delete button what should I do but on",
    "start": "428220",
    "end": "435840"
  },
  {
    "text": "the other hand we have unfortunately couple serious scenarios leading to severe issues when the applications were",
    "start": "435840",
    "end": "442620"
  },
  {
    "text": "not tested one of the examples night Capital group like they reuse that was a stock trading company they reused one",
    "start": "442620",
    "end": "449280"
  },
  {
    "text": "bit flag when they were deploying a new version of their software and this bit",
    "start": "449280",
    "end": "454560"
  },
  {
    "text": "flag was reused in two different scenarios deployment obviously failed in the middle they had split brain in their",
    "start": "454560",
    "end": "460979"
  },
  {
    "text": "cluster and this resulted to like losing 440 million on US dollars in like one",
    "start": "460979",
    "end": "467400"
  },
  {
    "text": "hour less than one hour so obviously something wasn't tested and the company was almost out of business it was",
    "start": "467400",
    "end": "473400"
  },
  {
    "text": "heavily funded to remain in business okay Mariner won another case if you",
    "start": "473400",
    "end": "478440"
  },
  {
    "text": "ever had a case that you were like rewriting code or taking code from old platform or from data scientists and you",
    "start": "478440",
    "end": "485220"
  },
  {
    "text": "had to re-implement exactly the same they were doing the same in NASA right and they missed one dash in like",
    "start": "485220",
    "end": "491699"
  },
  {
    "text": "physical formula which led to a like an explosion of a spacecraft imagine that",
    "start": "491699",
    "end": "496919"
  },
  {
    "text": "you are working on your application literally for years and then it just blows up literally so probably we should",
    "start": "496919",
    "end": "504539"
  },
  {
    "text": "be testing something we laughed when I asked you about cosmic ray right didn't you Belgium election 2003 one of the",
    "start": "504539",
    "end": "512459"
  },
  {
    "text": "candidates got 4096 more votes than supposed to any",
    "start": "512459",
    "end": "518399"
  },
  {
    "text": "person in IT industry immediately recognizes that's not a coincidence",
    "start": "518399",
    "end": "523500"
  },
  {
    "text": "right and that was a bit flip one of the bits just flipped in the voting machine",
    "start": "523500",
    "end": "528660"
  },
  {
    "text": "and there were just too many votes the official explanation is that's due to a",
    "start": "528660",
    "end": "534000"
  },
  {
    "text": "cosmic ray I personally encountered a cosmic ray incident in one of my companies we were rebuilding our apps",
    "start": "534000",
    "end": "540779"
  },
  {
    "text": "every every evening we had it was like 10 years ago so we had continuous integration building application and",
    "start": "540779",
    "end": "546959"
  },
  {
    "text": "running unit tests every night and one day we noticed that the unit test they just failed okay but it was actually it",
    "start": "546959",
    "end": "554580"
  },
  {
    "text": "was actually surprising for us because we didn't deploy any change the day before no comets went into Mainline so",
    "start": "554580",
    "end": "562200"
  },
  {
    "text": "we wanted to figure out what happened that those Unitas were like working properly for weeks and now they",
    "start": "562200",
    "end": "567899"
  },
  {
    "text": "accidentally failed and we realized after comparing binary packages that hey one of the bits it was just flipped so",
    "start": "567899",
    "end": "575760"
  },
  {
    "text": "it again was probably like electric interference cosmic ray whatever but one",
    "start": "575760",
    "end": "581279"
  },
  {
    "text": "bit flipped now the question is even if you test your applications if even if you test like with unit test integration",
    "start": "581279",
    "end": "588000"
  },
  {
    "text": "tests whatever what happens when you actually deploy your apps do you run your unit tests against production",
    "start": "588000",
    "end": "594779"
  },
  {
    "text": "environment after the deployment because if you do not then maybe the deployment was just wrong and you flipped one",
    "start": "594779",
    "end": "601680"
  },
  {
    "text": "single bit and your application crashes on the other hand if you ever had a situation that your application just",
    "start": "601680",
    "end": "607380"
  },
  {
    "text": "died crashed or whatever and you literally had no idea what could have happened and all the ifs were in place",
    "start": "607380",
    "end": "613140"
  },
  {
    "text": "but they just seemed like they didn't work now we have an official explanation from me so blame it on me it's a cosmic",
    "start": "613140",
    "end": "619440"
  },
  {
    "text": "ray and this happens this just happens not to mention there are other serious incidents like terrac 25 obviously they",
    "start": "619440",
    "end": "626519"
  },
  {
    "text": "had a case of that was like a machine used for radiation and they had a case that they uh they had a concurrency",
    "start": "626519",
    "end": "633120"
  },
  {
    "text": "issue in the app and uh people were just radiated with massive overdose and some",
    "start": "633120",
    "end": "638160"
  },
  {
    "text": "people were like they had heavily healthy issues afterwards so generally there are cases when our apps really",
    "start": "638160",
    "end": "645240"
  },
  {
    "text": "require like deep testing for all the cases we can ever think of but on the",
    "start": "645240",
    "end": "650940"
  },
  {
    "text": "other hand we need to think that 80 of our app is just not used according to server so what should we do the question",
    "start": "650940",
    "end": "658260"
  },
  {
    "start": "655000",
    "end": "730000"
  },
  {
    "text": "or the answer to the question is it's all about the costs you need to always understand that we do not test apps just",
    "start": "658260",
    "end": "666240"
  },
  {
    "text": "for the sake of testing them what we do is we need to test our applications to",
    "start": "666240",
    "end": "671880"
  },
  {
    "text": "balance this cost of making a mistake cost of failing cost of a single failure",
    "start": "671880",
    "end": "677640"
  },
  {
    "text": "in our system versus the cost of writing tests Main maintaining them keeping",
    "start": "677640",
    "end": "683640"
  },
  {
    "text": "people in the loop understanding the code over years and we need to balance that out because it's all about the cost",
    "start": "683640",
    "end": "690000"
  },
  {
    "text": "and we just need to take into account this whole probability to understand what it's worth and whether it's worth",
    "start": "690000",
    "end": "696000"
  },
  {
    "text": "testing the application at all or maybe we should actually spend way more on the",
    "start": "696000",
    "end": "701160"
  },
  {
    "text": "test in order to avoid much more serious issues afterwards so that's the point of",
    "start": "701160",
    "end": "706320"
  },
  {
    "text": "testing so whenever I asked you do we need tests the answer is it depends some",
    "start": "706320",
    "end": "711540"
  },
  {
    "text": "of those tests we definitely do need some of those tests we should definitely drop because they just don't pay off and",
    "start": "711540",
    "end": "718140"
  },
  {
    "text": "now let's see and the rest of the stock how to write tests and what to consider when writing tests at scale in order to",
    "start": "718140",
    "end": "725459"
  },
  {
    "text": "keep them like much less expensive so they are easier to maintain",
    "start": "725459",
    "end": "730680"
  },
  {
    "start": "730000",
    "end": "951000"
  },
  {
    "text": "so the first thing we are going to like discuss is mocking and the question is",
    "start": "730680",
    "end": "736560"
  },
  {
    "text": "why do we ever use mocks obviously that different schools of tdd one of the",
    "start": "736560",
    "end": "741660"
  },
  {
    "text": "schools tells you that hey you should mock everything you should consider everything being like white box smoke",
    "start": "741660",
    "end": "747600"
  },
  {
    "text": "all the calls mojito when and all that stuff but on the other hand I want you to ask yourself this question imagine",
    "start": "747600",
    "end": "754079"
  },
  {
    "text": "that you could run all your tests in your application with like an actual",
    "start": "754079",
    "end": "760019"
  },
  {
    "text": "database a database that has proper schema filled with proper production",
    "start": "760019",
    "end": "765120"
  },
  {
    "text": "like data you can run these tests in one millisecond you don't step into each",
    "start": "765120",
    "end": "770339"
  },
  {
    "text": "other's way you don't block other developers it's repeatable it doesn't fail spiritually it just works and it",
    "start": "770339",
    "end": "777660"
  },
  {
    "text": "takes one millisecond to run all those tests against this database production like database would you ever consider",
    "start": "777660",
    "end": "783660"
  },
  {
    "text": "mocking such a database and from my point of view and obviously",
    "start": "783660",
    "end": "788940"
  },
  {
    "text": "that's opinionated but what I want to convince you to is never mock things if",
    "start": "788940",
    "end": "794459"
  },
  {
    "text": "you don't need to because we shouldn't be mocking things just for the sake of mocking we shouldn't be running mokito",
    "start": "794459",
    "end": "800880"
  },
  {
    "text": "when because well someone told you on the internet do so right no we need to",
    "start": "800880",
    "end": "806339"
  },
  {
    "text": "mock for other reasons but if it's possible then don't mock at all and what",
    "start": "806339",
    "end": "811680"
  },
  {
    "text": "are those reasons that we actually need mocks the important part and like the",
    "start": "811680",
    "end": "816959"
  },
  {
    "text": "most important case is production piece is slow if you ever show me an",
    "start": "816959",
    "end": "822060"
  },
  {
    "text": "approduction like database Oracle instance which it can be created in like one millisecond that you can run all",
    "start": "822060",
    "end": "828959"
  },
  {
    "text": "your tons of thousands of tests against this production database then okay I'll take it but generally we know it's",
    "start": "828959",
    "end": "835500"
  },
  {
    "text": "impossible right most of the databases we can't use in like this way so what we need to do is we need to mock them",
    "start": "835500",
    "end": "841440"
  },
  {
    "text": "network communication it's slow it's unreliable we don't know what's on the other end of the wire we need to mock it",
    "start": "841440",
    "end": "848820"
  },
  {
    "text": "again we have another issues like we don't have a license to run things in",
    "start": "848820",
    "end": "854160"
  },
  {
    "text": "testing environment it's cool that we pay for like our Oracle cluster a lot and we have production Enterprise ready",
    "start": "854160",
    "end": "860639"
  },
  {
    "text": "instance but generally not all companies can like afford that sometimes we are just in a project that well one",
    "start": "860639",
    "end": "866880"
  },
  {
    "text": "production environment is just too much there is no way of getting like Oracle instance in testing environment right so",
    "start": "866880",
    "end": "874440"
  },
  {
    "text": "in that case we just need to mock it production piece can make all the tests",
    "start": "874440",
    "end": "879839"
  },
  {
    "text": "basically slow because we need to wire up all the dependencies we have right",
    "start": "879839",
    "end": "885060"
  },
  {
    "text": "all the code Generation all the dependence injection all the aspect oriented programming all the code wiring",
    "start": "885060",
    "end": "891540"
  },
  {
    "text": "etc etc not to mention Network calls not to mention creating the infrastructure not to mention using infrastructure as a",
    "start": "891540",
    "end": "898920"
  },
  {
    "text": "code it just is slow it's just slow and generally we would like to avoid doing",
    "start": "898920",
    "end": "904560"
  },
  {
    "text": "that where possible how however in such a case what we should do we always need",
    "start": "904560",
    "end": "910079"
  },
  {
    "text": "to understand that we don't run our code against a production piece so the code",
    "start": "910079",
    "end": "916380"
  },
  {
    "text": "effectively is non-tested no matter how clever your mock is whether it's like",
    "start": "916380",
    "end": "922079"
  },
  {
    "text": "dumb mojito when then or whether it's something more clever like test containers running locally or maybe it's",
    "start": "922079",
    "end": "929220"
  },
  {
    "text": "like 99.9 percent aligned emulator for your S3 storage or for your Azure blob",
    "start": "929220",
    "end": "936779"
  },
  {
    "text": "storage or whatever it's still non-production piece of code so you need to be aware that hey running tests",
    "start": "936779",
    "end": "943199"
  },
  {
    "text": "against that it may work and maybe good enough for our case but we need to be aware that it just isn't the production",
    "start": "943199",
    "end": "950040"
  },
  {
    "text": "thingy so how should we mock in order to keep it like maintainable so now we are",
    "start": "950040",
    "end": "955620"
  },
  {
    "start": "951000",
    "end": "1011000"
  },
  {
    "text": "going to cover a bit of like couple of low level code thingies that we need to uh like keep in mind and generally they",
    "start": "955620",
    "end": "962760"
  },
  {
    "text": "all go down to the idea that Hey whenever you write a product production codes you probably think about clear",
    "start": "962760",
    "end": "969540"
  },
  {
    "text": "codes avoiding repetition do not repeat yourself or maybe write everything twice",
    "start": "969540",
    "end": "974699"
  },
  {
    "text": "whatever principle you follow nowadays but generally you take care of your code right but whenever we write unit tests",
    "start": "974699",
    "end": "982139"
  },
  {
    "text": "we all been dead that we just go we find we look for a code that like a unit test",
    "start": "982139",
    "end": "988260"
  },
  {
    "text": "that works we select It All We Do Ctrl C Ctrl V copy and paste and we just adjust",
    "start": "988260",
    "end": "994980"
  },
  {
    "text": "one line and Bank new unit test is in the play right avoid doing that think about your unit tests in a way that it",
    "start": "994980",
    "end": "1002779"
  },
  {
    "text": "is again a production code you need to maintain so to keep it maintainable apply the same principles you apply to a",
    "start": "1002779",
    "end": "1009380"
  },
  {
    "text": "regular production like code so let's see a part of that in action like the very first thing on the left on the",
    "start": "1009380",
    "end": "1015620"
  },
  {
    "start": "1011000",
    "end": "1201000"
  },
  {
    "text": "screen hands up if you ever seen like this that a series of monkey to went copied here and there and generally this",
    "start": "1015620",
    "end": "1021560"
  },
  {
    "text": "is what we do like we create some stating one test that someone comes in copies this my fault Pace it's like just",
    "start": "1021560",
    "end": "1028400"
  },
  {
    "text": "below replaces one line and bank we have a test that does something different that's different case but we shouldn't",
    "start": "1028400",
    "end": "1034699"
  },
  {
    "text": "be doing this what we should be doing instead is extract your code to a",
    "start": "1034699",
    "end": "1039740"
  },
  {
    "text": "separate function and generally reuse it the same thing nothing new here but we",
    "start": "1039740",
    "end": "1044780"
  },
  {
    "text": "can take that even more instead of like writing your state inside of of your",
    "start": "1044780",
    "end": "1049880"
  },
  {
    "text": "tests why don't you just create a repository of business objects okay maintain repository of that so then when",
    "start": "1049880",
    "end": "1057260"
  },
  {
    "text": "a newcomer comes to your project he or she is not scared oh can I change this",
    "start": "1057260",
    "end": "1062419"
  },
  {
    "text": "thingy or maybe I know that it's actually showing a business use case that I'm now dealing with so if I change",
    "start": "1062419",
    "end": "1068240"
  },
  {
    "text": "it here then I will see it like consistently across all the unit tests so generally keep it like it was your",
    "start": "1068240",
    "end": "1074840"
  },
  {
    "text": "production code another thingy that you do especially in.net do not generate",
    "start": "1074840",
    "end": "1080660"
  },
  {
    "text": "your code or your testing data like by hand just like we've seen here right we",
    "start": "1080660",
    "end": "1085760"
  },
  {
    "text": "create create some State we provide some ID some integer some string yada yada we've probably all been dead and",
    "start": "1085760",
    "end": "1092539"
  },
  {
    "text": "provided whenever it was an integer required we typed one two three four five six whenever a date was required",
    "start": "1092539",
    "end": "1098960"
  },
  {
    "text": "which one to use maybe 2099 2100 whatever we just you know make those",
    "start": "1098960",
    "end": "1104720"
  },
  {
    "text": "dates but why would we ever create those and just look for libraries for instance Auto fixture in.net that allows you to",
    "start": "1104720",
    "end": "1112039"
  },
  {
    "text": "basically Mark your test that hey this testing method requires some randomly",
    "start": "1112039",
    "end": "1117140"
  },
  {
    "text": "generated code randomly generated values and the library can take care of that so",
    "start": "1117140",
    "end": "1122600"
  },
  {
    "text": "that's the idea whenever you implement things like this it will become much clearer what your idea what your concept",
    "start": "1122600",
    "end": "1129799"
  },
  {
    "text": "is not necessarily whether this one two three has a particular meaning to this test and if you ever find yourself like",
    "start": "1129799",
    "end": "1137000"
  },
  {
    "text": "writing a piece of code comment that hey I'm passing one two three here because it represents this business particular",
    "start": "1137000",
    "end": "1143600"
  },
  {
    "text": "case that I actually discussed with my client on a phone call generally avoid",
    "start": "1143600",
    "end": "1148640"
  },
  {
    "text": "doing that like consider this being a production code and maintain the high quality of your tests another thing we",
    "start": "1148640",
    "end": "1155539"
  },
  {
    "text": "all do like obviously there is this well-known naming convention that like operation situation and the outcome but",
    "start": "1155539",
    "end": "1162980"
  },
  {
    "text": "why bother writing that in all of the tests we write okay why not just use",
    "start": "1162980",
    "end": "1168080"
  },
  {
    "text": "like nested classes to extract this operation name avoid repetition where possible and those are little tricks",
    "start": "1168080",
    "end": "1175100"
  },
  {
    "text": "that allow you to understand your costs way better your codes were better obviously this depends on like testing",
    "start": "1175100",
    "end": "1180980"
  },
  {
    "text": "framework on the language that depends whether you are writing like plain C sharp or by me you are writing in some",
    "start": "1180980",
    "end": "1187039"
  },
  {
    "text": "sophisticated skull or typescript that allows you to do much more but generally think about the test and don't blindly",
    "start": "1187039",
    "end": "1193700"
  },
  {
    "text": "follow tutorials on the internet because well they show you a very easy way but",
    "start": "1193700",
    "end": "1199580"
  },
  {
    "text": "not necessarily the maintainable one and now let's move on to other tests and",
    "start": "1199580",
    "end": "1204919"
  },
  {
    "start": "1201000",
    "end": "1650000"
  },
  {
    "text": "what we actually should be considering whenever we test our applications so the very first thing that we do with MOX is",
    "start": "1204919",
    "end": "1212720"
  },
  {
    "text": "we need to understand what should we mock because most of us we just mock",
    "start": "1212720",
    "end": "1217940"
  },
  {
    "text": "like Makita when call or whatever else but what actually is the point of",
    "start": "1217940",
    "end": "1223280"
  },
  {
    "text": "mocking and the very important thing about mocks is we need to base them on",
    "start": "1223280",
    "end": "1228679"
  },
  {
    "text": "contracts not on the actual behavior that we can observe but but on the",
    "start": "1228679",
    "end": "1234500"
  },
  {
    "text": "contracts that are specified by the code provider meaning that those contracts",
    "start": "1234500",
    "end": "1239840"
  },
  {
    "text": "and I'm talking mostly here about risk of substitution principle but obviously that depends what your understanding of",
    "start": "1239840",
    "end": "1245600"
  },
  {
    "text": "principle is but generally it's about specifying what is expected what are",
    "start": "1245600",
    "end": "1251660"
  },
  {
    "text": "what the invariants are and what is allowed for their code how it should behave so generally don't use mocks",
    "start": "1251660",
    "end": "1259880"
  },
  {
    "text": "where possible and just run the production code but for many cases it's impossible and in such a case what we",
    "start": "1259880",
    "end": "1266360"
  },
  {
    "text": "need to do is we need to mock the contract so if you ever heard about risk of substitution principle hands up if",
    "start": "1266360",
    "end": "1272419"
  },
  {
    "text": "you have yeah most of the room you probably have heard about this example with rectangle and square that you",
    "start": "1272419",
    "end": "1279140"
  },
  {
    "text": "override the set with or set height yada yada and they show you that it breaks LSP and I'm telling you that example is",
    "start": "1279140",
    "end": "1286280"
  },
  {
    "text": "completely wrong even though it's in the industry for many years that's not the point of LSP because that example misses",
    "start": "1286280",
    "end": "1292820"
  },
  {
    "text": "the crucial point of specifying the contract explicitly whenever you hear",
    "start": "1292820",
    "end": "1298580"
  },
  {
    "text": "this example with with rectangular Square what they tell you at the very end is you should not be changing both",
    "start": "1298580",
    "end": "1305780"
  },
  {
    "text": "sides because well we know how squares and rectangles work but this is not what",
    "start": "1305780",
    "end": "1310940"
  },
  {
    "text": "we need to do what we need to do is we need to adhere to the contract and the contract in that example is very well",
    "start": "1310940",
    "end": "1318140"
  },
  {
    "text": "unspecified so let's see an actual example of LSP in practice and it may be",
    "start": "1318140",
    "end": "1324080"
  },
  {
    "text": "that you have actually seen this exam sample or may be implemented in and this is like from production code so what we",
    "start": "1324080",
    "end": "1329960"
  },
  {
    "text": "are going to do is let's say that we have a method do with optional backup connection that's like a method provided",
    "start": "1329960",
    "end": "1335480"
  },
  {
    "text": "by third-party Library your client your whatever you just consider it it's been",
    "start": "1335480",
    "end": "1340520"
  },
  {
    "text": "there but you don't you haven't implemented it okay it comes from the external world what it does is it takes",
    "start": "1340520",
    "end": "1346940"
  },
  {
    "text": "two clients like two network connections to a server and like Lambda which is run against those connections for instance",
    "start": "1346940",
    "end": "1353659"
  },
  {
    "text": "downloads file over one of these two connections okay and we consider these connections one of them being main the",
    "start": "1353659",
    "end": "1359600"
  },
  {
    "text": "other one being backup connection if the main connection fails we use the backup one okay so what is happening here is we",
    "start": "1359600",
    "end": "1366559"
  },
  {
    "text": "have some Randomness here that's just like for explanatory purposes so nothing's nothing consider here as a",
    "start": "1366559",
    "end": "1373039"
  },
  {
    "text": "like a production ready but generally think of this method this is something you don't necessarily you can't necessarily Mock and it comes from the",
    "start": "1373039",
    "end": "1380059"
  },
  {
    "text": "outside world so we now Implement a very simple helper function called do internal that takes the these two",
    "start": "1380059",
    "end": "1386620"
  },
  {
    "text": "clients and one Lambda and when first when running Lambda for the first time",
    "start": "1386620",
    "end": "1392419"
  },
  {
    "text": "over one of the connections whenever we get an exception then we try using the other connection to do to run exactly",
    "start": "1392419",
    "end": "1399380"
  },
  {
    "text": "the same Lambda okay if we try to download the file over first connection and it fails with an exception then we",
    "start": "1399380",
    "end": "1405200"
  },
  {
    "text": "try running that against like using other connection okay and then at the bottom of the screen we have an actual",
    "start": "1405200",
    "end": "1411500"
  },
  {
    "text": "business code which we Implement here so we have a very generic um where is my mouse cursor and I lost",
    "start": "1411500",
    "end": "1418460"
  },
  {
    "text": "it completely okay now it is so we have a very generic like client that we use",
    "start": "1418460",
    "end": "1423500"
  },
  {
    "text": "basically that provides one method called get data with some parameter doesn't matter what we do here and we",
    "start": "1423500",
    "end": "1428720"
  },
  {
    "text": "basically call it three times light to get first piece of data second piece of data third piece of data no magic here",
    "start": "1428720",
    "end": "1434179"
  },
  {
    "text": "okay think for a sec how would you test this this piece of code okay so what we",
    "start": "1434179",
    "end": "1439940"
  },
  {
    "text": "do and one of the very first ideas that comes to mind is let's just implement the test that is actually asserting that",
    "start": "1439940",
    "end": "1447500"
  },
  {
    "text": "hey when we call this do work and we provide two clients one of them throws the exception every single time so there",
    "start": "1447500",
    "end": "1454039"
  },
  {
    "text": "and we provide another client that actually returns some data then we get a result of expected or whatever right",
    "start": "1454039",
    "end": "1459980"
  },
  {
    "text": "okay that's the idea okay seems good passes all green deployed to production",
    "start": "1459980",
    "end": "1465200"
  },
  {
    "text": "works then someone comes and tells you hey it's all cool when you do that but",
    "start": "1465200",
    "end": "1470600"
  },
  {
    "text": "there is one ID one thing which we don't like basically that we run all those free operations like serially okay it's",
    "start": "1470600",
    "end": "1477919"
  },
  {
    "text": "not parallelized it's not concurrent so when when we are downloading big files it takes lots of time how can we make",
    "start": "1477919",
    "end": "1484039"
  },
  {
    "text": "that faster what comes to mind obviously let's ride it asynchronously right so we replace our client with one replacing",
    "start": "1484039",
    "end": "1491539"
  },
  {
    "text": "returning completable future async task whatever your code is so basically we",
    "start": "1491539",
    "end": "1496760"
  },
  {
    "text": "change this client this think does not change at all but what we do at the very end we just do like a weight a weight a",
    "start": "1496760",
    "end": "1504380"
  },
  {
    "text": "weight add these three pieces together now the code is much faster because we download free files like in parallel not",
    "start": "1504380",
    "end": "1511100"
  },
  {
    "text": "one after another so we run this code we run all the unit tests we deploy to production unit tests are green we",
    "start": "1511100",
    "end": "1517460"
  },
  {
    "text": "deploy to production it doesn't work did you have you spotted wipe I just",
    "start": "1517460",
    "end": "1522980"
  },
  {
    "text": "brought the code completely have you spotted why and the answer to that question is we",
    "start": "1522980",
    "end": "1528620"
  },
  {
    "text": "broke the contract severely why because I told you that the contract is whenever",
    "start": "1528620",
    "end": "1534380"
  },
  {
    "text": "first connection throws an exception then we move on to the second connection",
    "start": "1534380",
    "end": "1540020"
  },
  {
    "text": "okay but when we take a code like this one what happens is we only get the",
    "start": "1540020",
    "end": "1546140"
  },
  {
    "text": "exception here if you do await at the very end you get exception propagated at the very end because the exception is",
    "start": "1546140",
    "end": "1553039"
  },
  {
    "text": "being wrapped inside your task object completable future or whatever else okay so now we broke the contract but our",
    "start": "1553039",
    "end": "1560659"
  },
  {
    "text": "client our testing code hasn't spotted that because this throwing client is",
    "start": "1560659",
    "end": "1566720"
  },
  {
    "text": "always throwing exception but this is against the contract because this client and the client views in production never",
    "start": "1566720",
    "end": "1573320"
  },
  {
    "text": "froze okay so the test we actually need to have in order to avoid a situation",
    "start": "1573320",
    "end": "1579080"
  },
  {
    "text": "like this we need to have a test that is actually preparing a client that will",
    "start": "1579080",
    "end": "1584659"
  },
  {
    "text": "throw an exception and once you move to the client returning task you realize that it's impossible to implement a test",
    "start": "1584659",
    "end": "1591320"
  },
  {
    "text": "like this so now hopefully you realize that the test is correct and it's just your implementation that is completely",
    "start": "1591320",
    "end": "1596659"
  },
  {
    "text": "broken not the other end okay but this is what we need to understand here that this contract it was imposed on us by",
    "start": "1596659",
    "end": "1604340"
  },
  {
    "text": "the the code we use but it is us who need to test this contract we cannot",
    "start": "1604340",
    "end": "1609679"
  },
  {
    "text": "rely on like the author of the library to test this we cannot rely on like using mocks here but what we need to do",
    "start": "1609679",
    "end": "1616640"
  },
  {
    "text": "is we need to understand that this is the thing that comes from like connecting multiple interconnected",
    "start": "1616640",
    "end": "1622100"
  },
  {
    "text": "pieces so that's the idea so this is how you break LSP in practice and I've seen",
    "start": "1622100",
    "end": "1627260"
  },
  {
    "text": "a situation like this many times in my career because well it's super easy to make such a mistake because it's just",
    "start": "1627260",
    "end": "1633320"
  },
  {
    "text": "like a brainless change in your code you just come in you replace every string",
    "start": "1633320",
    "end": "1638900"
  },
  {
    "text": "with like task of string every call with like a weight call and then you realize that you just broke the contract",
    "start": "1638900",
    "end": "1644539"
  },
  {
    "text": "severely so generally whenever we use mocks we need to understand LSP and moving on",
    "start": "1644539",
    "end": "1650600"
  },
  {
    "start": "1650000",
    "end": "1884000"
  },
  {
    "text": "whenever we want to run the code and we don't want to use car like like mocks",
    "start": "1650600",
    "end": "1655700"
  },
  {
    "text": "what we need to do is we would like to use production like components how can we create this production like",
    "start": "1655700",
    "end": "1662000"
  },
  {
    "text": "components the answer to that is obviously infrastructure as as code use terraform use cloud formation use",
    "start": "1662000",
    "end": "1668360"
  },
  {
    "text": "whatever you have but then this allows you to First recreate the environments",
    "start": "1668360",
    "end": "1673580"
  },
  {
    "text": "in various places in like multiple copies on those of those environments but on the other hand you hit various",
    "start": "1673580",
    "end": "1681080"
  },
  {
    "text": "multiple reasons and we mentioned that using mocks we need to use mogs because well it's slow we can't use production",
    "start": "1681080",
    "end": "1688039"
  },
  {
    "text": "components because they are slow we don't have licenses Etc but there are many other issues we may hit when we are",
    "start": "1688039",
    "end": "1693799"
  },
  {
    "text": "using infrastructure as code and when we want to use production components one of those being permissions and allo listing",
    "start": "1693799",
    "end": "1700159"
  },
  {
    "text": "if you ever need to go to your like Cloud accounts and add permissions to to",
    "start": "1700159",
    "end": "1705260"
  },
  {
    "text": "IP address addresses or to DNS names or to whatever generally using infrastructure as code will make it much",
    "start": "1705260",
    "end": "1711740"
  },
  {
    "text": "harder on your end because whenever you want to create dynamically a new environment and I remind you again that",
    "start": "1711740",
    "end": "1718700"
  },
  {
    "text": "we are talking about testing at scale with like 2 000 machines then generally creating new environment and while",
    "start": "1718700",
    "end": "1724820"
  },
  {
    "text": "listing like 2000 machines that's probably not something we want to do right so General infrastructure as code",
    "start": "1724820",
    "end": "1731299"
  },
  {
    "text": "give you more issues you may have here Dynamic IP addresses Dynamic certificate",
    "start": "1731299",
    "end": "1736580"
  },
  {
    "text": "names TLS bindings and all that stuff Dynamic Port Dynamic routing DNS zones",
    "start": "1736580",
    "end": "1742400"
  },
  {
    "text": "whatever else you have generally networking is getting way higher way way harder with infrastructure as codes not",
    "start": "1742400",
    "end": "1749480"
  },
  {
    "text": "to mention costs and licenses okay it's super easy when you work in a big company and you just can't afford",
    "start": "1749480",
    "end": "1756039"
  },
  {
    "text": "multiple Oracle instances but what if you cannot would you ever like is it",
    "start": "1756039",
    "end": "1762080"
  },
  {
    "text": "cost effective for you to create a big cluster of like machines run your tests",
    "start": "1762080",
    "end": "1767960"
  },
  {
    "text": "against that cluster which will take you 30 minutes and then tear everything down and how much are you going to pay for",
    "start": "1767960",
    "end": "1774200"
  },
  {
    "text": "that what if you need like GPU instances they are super expensive are you going",
    "start": "1774200",
    "end": "1779299"
  },
  {
    "text": "to pay for that how should we deal in a situation that taking the infrastructure takes something like two hours and",
    "start": "1779299",
    "end": "1786260"
  },
  {
    "text": "that's a regular case when we are talking about big scale like we're spinning up to thousand machines that",
    "start": "1786260",
    "end": "1791480"
  },
  {
    "text": "takes time so you just pay for two hours of your infrastructure it's super expensive and only after that you can",
    "start": "1791480",
    "end": "1798020"
  },
  {
    "text": "start running your test is it worth it again depending on your use case it may be very well Justified to pay so much",
    "start": "1798020",
    "end": "1805220"
  },
  {
    "text": "for running tests but depending on some other use case it may be just well completely waste of time and money so",
    "start": "1805220",
    "end": "1811940"
  },
  {
    "text": "avoid doing that time deployment is slow infrastructure as code is slow not to",
    "start": "1811940",
    "end": "1817279"
  },
  {
    "text": "mention what happens if you cannot deploy because there is missing Hardware if you ever tried spinning up like a GPU",
    "start": "1817279",
    "end": "1824240"
  },
  {
    "text": "instance in your cloud provider you may have realized that hey GPU instances are",
    "start": "1824240",
    "end": "1829760"
  },
  {
    "text": "generally well it's not too many of them around the planet now so if you ask for like 100 GPU cores you won't get them",
    "start": "1829760",
    "end": "1837200"
  },
  {
    "text": "like the cloud provider will just tell you nope we are not going to do that for you what about if you ask for like 10",
    "start": "1837200",
    "end": "1843380"
  },
  {
    "text": "000 ipv4 addresses nope no way so if you try recreating these infrastructures",
    "start": "1843380",
    "end": "1849440"
  },
  {
    "text": "over and over again it may just be impossible so if you commit to okay we go with infrastructure as code at some",
    "start": "1849440",
    "end": "1855980"
  },
  {
    "text": "point you may realize okay the idea is great but it's effectively unusable and",
    "start": "1855980",
    "end": "1861200"
  },
  {
    "text": "we can't do it anymore another issue is with Robux what if you do use infrastructure as code in",
    "start": "1861200",
    "end": "1867919"
  },
  {
    "text": "production and then it happens that it's trying to push your like production changes and then something fails in",
    "start": "1867919",
    "end": "1873919"
  },
  {
    "text": "between like in the middle how can you roll things back with infrastructure as code it's getting harder much harder",
    "start": "1873919",
    "end": "1879440"
  },
  {
    "text": "because you just can't step in and do things manually because otherwise then you are out of sync",
    "start": "1879440",
    "end": "1885080"
  },
  {
    "start": "1884000",
    "end": "2108000"
  },
  {
    "text": "moving on let's say that we are now talking about how do we test distributed applications that do ETL like",
    "start": "1885080",
    "end": "1891799"
  },
  {
    "text": "Transformations right so this is like a data preparation for your machine learning code this is like ETL process",
    "start": "1891799",
    "end": "1898220"
  },
  {
    "text": "integrating multiple of your data sources databases data Lakes whatever you have so generally the approach you",
    "start": "1898220",
    "end": "1905480"
  },
  {
    "text": "may take is okay let's run unit tests but the unit test they will just cover a",
    "start": "1905480",
    "end": "1911059"
  },
  {
    "text": "very basic case you can think of and the problem with ETL the biggest issue with",
    "start": "1911059",
    "end": "1916279"
  },
  {
    "text": "ETL like applications is that you generally let it run and it succeeds but",
    "start": "1916279",
    "end": "1922220"
  },
  {
    "text": "produces incorrect results if it fails because there was a scale like schema",
    "start": "1922220",
    "end": "1927260"
  },
  {
    "text": "mismatch or impedance mismatch that's good but if it just runs and produces invalid results it's much harder to",
    "start": "1927260",
    "end": "1934039"
  },
  {
    "text": "figure out what's going on like some of the reasons or some of the issues we might be looking for is for instance",
    "start": "1934039",
    "end": "1939919"
  },
  {
    "text": "dates like if you ever had this like European like format of date versus the US form out of date you swap days with",
    "start": "1939919",
    "end": "1947179"
  },
  {
    "text": "months what happens when you parse date and you provide invalid format do you know what happens in your application if",
    "start": "1947179",
    "end": "1953779"
  },
  {
    "text": "someone swaps days with months do you get an exception or maybe do you get just null or maybe do you get something",
    "start": "1953779",
    "end": "1960080"
  },
  {
    "text": "like a 1900s first of January what do you get and this is the issue because",
    "start": "1960080",
    "end": "1965360"
  },
  {
    "text": "when we run this against like 50 terabytes of input data we have no way",
    "start": "1965360",
    "end": "1970580"
  },
  {
    "text": "of checking every particular War like row whether it was parsed correctly but we'll just get the data that just",
    "start": "1970580",
    "end": "1977179"
  },
  {
    "text": "succeeded and this is valid another issue decimal separators like is it",
    "start": "1977179",
    "end": "1982279"
  },
  {
    "text": "comma is it full stop is it dot is it hyphen is it whatever else how do we",
    "start": "1982279",
    "end": "1988159"
  },
  {
    "text": "know whether we power like parsed our numbers properly character encoding and",
    "start": "1988159",
    "end": "1993200"
  },
  {
    "text": "I'm not even talking about cases that we all imagine like Chinese characters or whatever but though what if you need to",
    "start": "1993200",
    "end": "1999740"
  },
  {
    "text": "migrate data from your very old zos IBA Mainframe thingy then that uses episodic",
    "start": "1999740",
    "end": "2006580"
  },
  {
    "text": "encoding that has some characters that are no not in the Unicode anymore how do",
    "start": "2006580",
    "end": "2011799"
  },
  {
    "text": "you parse things like this and an actual situation like that I'm from Poland and in Poland our currency when we are",
    "start": "2011799",
    "end": "2017559"
  },
  {
    "text": "talking about like the abbreviation we use two letters code like ZL with Dash",
    "start": "2017559",
    "end": "2023440"
  },
  {
    "text": "and it happens that this ZL thing is not in Unicode just like you have like a",
    "start": "2023440",
    "end": "2028539"
  },
  {
    "text": "symbol for US dollar this is like this s with with lines we don't have Unicode symbol for our currency but it was one",
    "start": "2028539",
    "end": "2036100"
  },
  {
    "text": "there was one in apps that you can coding so now when we were in need of migrating things from zos to a new",
    "start": "2036100",
    "end": "2042640"
  },
  {
    "text": "system like all our databases just blew up why because we had to replace this ZL",
    "start": "2042640",
    "end": "2048099"
  },
  {
    "text": "with like two characters and we just didn't have enough space in our strings in database okay how do you deal with",
    "start": "2048099",
    "end": "2054580"
  },
  {
    "text": "that another thingy differences in regular Expressions we've all been there",
    "start": "2054580",
    "end": "2059980"
  },
  {
    "text": "like pearl.net Java they use regular Expressions differently how do you make",
    "start": "2059980",
    "end": "2065020"
  },
  {
    "text": "sure that your that regular Expressions were correctly so generally Implement your unit tests for all the edge cases",
    "start": "2065020",
    "end": "2071919"
  },
  {
    "text": "you can think of and whenever you hit an issue or a bug with like data transformation right a unit test for",
    "start": "2071919",
    "end": "2077919"
  },
  {
    "text": "that but the other thing is especially if you are using like spark cluster or whatever you just need to run it in",
    "start": "2077919",
    "end": "2085118"
  },
  {
    "text": "production on the the smallest data set you can think of but generally in production to see if your code can be",
    "start": "2085119",
    "end": "2091599"
  },
  {
    "text": "serialized cached run in a cluster if you ever use spark hands up if you have",
    "start": "2091599",
    "end": "2096638"
  },
  {
    "text": "used spark yes so you probably have hit issues with DOT cache on rdd and whatever thing just run it in the",
    "start": "2096639",
    "end": "2102940"
  },
  {
    "text": "cluster otherwise you will see that hey it all succeeded in production but you get skewed data",
    "start": "2102940",
    "end": "2108460"
  },
  {
    "text": "moving to machine learning thinking how do we test ml apps and now we need to understand what are we dealing with like",
    "start": "2108460",
    "end": "2115420"
  },
  {
    "text": "some machine learning applications are very straightforward to test and to train okay you just get a CPU you run",
    "start": "2115420",
    "end": "2122440"
  },
  {
    "text": "your training code for like 10 minutes you get something right okay but what if your machine learning training process",
    "start": "2122440",
    "end": "2128980"
  },
  {
    "text": "takes like three weeks to complete on a distributed GPU cluster okay how do you",
    "start": "2128980",
    "end": "2134500"
  },
  {
    "text": "test things like this and the answer is well there is not a simple straightforward solution you need to pay",
    "start": "2134500",
    "end": "2140740"
  },
  {
    "text": "a lot for getting additional gpus and the idea you can have here is unit tests",
    "start": "2140740",
    "end": "2146020"
  },
  {
    "text": "won't work for you at all what you need to do is you need to have basically a golden input set of your data that you",
    "start": "2146020",
    "end": "2152680"
  },
  {
    "text": "train your application on and then you need to have some golden set output to compare your inference from your machine",
    "start": "2152680",
    "end": "2159579"
  },
  {
    "text": "learning models like because of the randomness in ml there is no way to test whether the like neural net you produced",
    "start": "2159579",
    "end": "2166839"
  },
  {
    "text": "works well or something like this what you need to do is you need to go for the whole pipeline start with the input test",
    "start": "2166839",
    "end": "2173440"
  },
  {
    "text": "train your model inference the output and then compare this output whether it's legitimate otherwise you end up",
    "start": "2173440",
    "end": "2180760"
  },
  {
    "text": "like testing something that will not convince you and would not confirm that your your machine learning algorithm Works obviously there you can introduce",
    "start": "2180760",
    "end": "2189099"
  },
  {
    "text": "some metrics around that for instance metrics for like accuracy or Aria under",
    "start": "2189099",
    "end": "2194200"
  },
  {
    "text": "Roc or whatever but generally this is only like in direct signal telling you that something may be ranking well but",
    "start": "2194200",
    "end": "2201400"
  },
  {
    "text": "generally I recommend you go with full pipeline another thing which may be surprising for you",
    "start": "2201400",
    "end": "2207040"
  },
  {
    "text": "is whenever you run Mo tests you actually should run it together with all the data preparation part of your",
    "start": "2207040",
    "end": "2213460"
  },
  {
    "text": "pipeline meaning what we convert what we covered here all the ETL Parts preparing",
    "start": "2213460",
    "end": "2218680"
  },
  {
    "text": "input data for your machine learning model should be also included in this ml tests why because sometimes when you",
    "start": "2218680",
    "end": "2225640"
  },
  {
    "text": "increase the data quality which is then used as an input for your machine learning models your model may actually",
    "start": "2225640",
    "end": "2232599"
  },
  {
    "text": "stop learning and this is the case I had many times like you improve the input data and you break the model the machine",
    "start": "2232599",
    "end": "2239440"
  },
  {
    "text": "learning model it's completely counter-intuitive and sounds like contradictory but that's the reality so",
    "start": "2239440",
    "end": "2245500"
  },
  {
    "text": "generally run your pipeline as long as you can this will cost this will take time so generally run it on the smallest",
    "start": "2245500",
    "end": "2252099"
  },
  {
    "text": "subset of data you can think of but generally that's the only way I can think of in order to make sure that your",
    "start": "2252099",
    "end": "2257500"
  },
  {
    "text": "ml works properly user interface and Hardware tests let's say that you have like a web application or application on",
    "start": "2257500",
    "end": "2264880"
  },
  {
    "start": "2258000",
    "end": "2429000"
  },
  {
    "text": "your iOS devices or whatever what can we do there to automate things and to run",
    "start": "2264880",
    "end": "2270400"
  },
  {
    "text": "them on scale so generally the first thing is these tests will fail unfortunately we all been there we've",
    "start": "2270400",
    "end": "2277660"
  },
  {
    "text": "all been implementing selenium tests that were working well for a couple of days and then we it started they were",
    "start": "2277660",
    "end": "2284020"
  },
  {
    "text": "constantly read every other day some other test was failing yada yada how do we deal with that generally my",
    "start": "2284020",
    "end": "2290440"
  },
  {
    "text": "recommendation is to have two different subsets of tests one of the subset being like The crucial critical paths you need",
    "start": "2290440",
    "end": "2298060"
  },
  {
    "text": "to cover and this just needs to pass and the other subset of tests is all the",
    "start": "2298060",
    "end": "2303339"
  },
  {
    "text": "tests for like edge cases different screen sizes different resolutions maybe slower machines maybe like websites with",
    "start": "2303339",
    "end": "2311859"
  },
  {
    "text": "running on different browser whatever but generally non-critical scenarios for",
    "start": "2311859",
    "end": "2317320"
  },
  {
    "text": "you depending on your business obviously and what we'd want to do is for this very first the former subset of tests we",
    "start": "2317320",
    "end": "2324760"
  },
  {
    "text": "wanted to be as reliable as possible we wanted to have plenty of timeouts we",
    "start": "2324760",
    "end": "2330280"
  },
  {
    "text": "want to have like long timeouts and long retries so we generally run these things we don't necessarily need to debug those",
    "start": "2330280",
    "end": "2337960"
  },
  {
    "text": "tests every single time when they fail because that's the reality you have 100 tests and every single day one of these",
    "start": "2337960",
    "end": "2345099"
  },
  {
    "text": "100 tests fail but it's different tests every other day what do we do we just",
    "start": "2345099",
    "end": "2350740"
  },
  {
    "text": "run those tests for days and only after like a week we we when there is a test that is failing constantly for a couple",
    "start": "2350740",
    "end": "2357339"
  },
  {
    "text": "of days we want to then start debugging what's going on we probably want to use",
    "start": "2357339",
    "end": "2362619"
  },
  {
    "text": "metrics for that to see how often tests fail how often a particular test fails etc etc but generally for these",
    "start": "2362619",
    "end": "2369940"
  },
  {
    "text": "scenarios we want to be a little like more allow them a little more room to",
    "start": "2369940",
    "end": "2375820"
  },
  {
    "text": "fail and to understand that for this other variation test for like different screen sizes etc etc that obviously",
    "start": "2375820",
    "end": "2383560"
  },
  {
    "text": "depends on your use case because we consider them being non-critical they are allowed to fail and we want to look",
    "start": "2383560",
    "end": "2389800"
  },
  {
    "text": "into them much less often and in order to look into them much less often what we want to do is we'll probably want to",
    "start": "2389800",
    "end": "2395680"
  },
  {
    "text": "record those tests have some like pictures taken automatically video recordings etc etc obviously this is",
    "start": "2395680",
    "end": "2402820"
  },
  {
    "text": "like a regular case what if we are now running something against very specific Hardware can we run this in like account",
    "start": "2402820",
    "end": "2409839"
  },
  {
    "text": "do we even have a fleet of devices to test it against maybe we just need to build our own Fleet of devices maybe we",
    "start": "2409839",
    "end": "2416619"
  },
  {
    "text": "need to build our own emulators for that that all depends on the use case so you need to consider this and this will be",
    "start": "2416619",
    "end": "2422920"
  },
  {
    "text": "expensive for you so again you need to make a decision whether it's worth doing that or not",
    "start": "2422920",
    "end": "2429640"
  },
  {
    "start": "2429000",
    "end": "2585000"
  },
  {
    "text": "moving on uh cold hygiene this is important to understand that whenever we",
    "start": "2429640",
    "end": "2435880"
  },
  {
    "text": "want to implement like tests for our application we should actually avoid writing tests at all if we can test",
    "start": "2435880",
    "end": "2443380"
  },
  {
    "text": "something by using compilers that's what we should be doing like if we are using",
    "start": "2443380",
    "end": "2448780"
  },
  {
    "text": "c-sharp then we probably don't need to test Getters and Setters especially if they are Auto generated by the compiler",
    "start": "2448780",
    "end": "2455500"
  },
  {
    "text": "because well they just work on the other hand if we are running with like scripting language where we can't even",
    "start": "2455500",
    "end": "2461980"
  },
  {
    "text": "pass like an array to a function like in bash maybe then we should just test",
    "start": "2461980",
    "end": "2467079"
  },
  {
    "text": "every single particular line getter Setters everything that we would not test in C sharp but we can take this the",
    "start": "2467079",
    "end": "2473140"
  },
  {
    "text": "other direction maybe we should use some code or some language that allows you to encode like an actual stadena type",
    "start": "2473140",
    "end": "2480040"
  },
  {
    "text": "system if you ever heard about like Haskell or Idris or other languages with",
    "start": "2480040",
    "end": "2485140"
  },
  {
    "text": "like path dependent types those languages allow you to basically encode in in the type system rules like this",
    "start": "2485140",
    "end": "2492220"
  },
  {
    "text": "list must have at least three elements something that is tested not in the",
    "start": "2492220",
    "end": "2497740"
  },
  {
    "text": "runtime and throws an exception on you but something that is tested and verified by your compiler your compiler",
    "start": "2497740",
    "end": "2504400"
  },
  {
    "text": "can verify the same way it verifies that hey this value is not an integer but a string it can at the same time verify",
    "start": "2504400",
    "end": "2511660"
  },
  {
    "text": "hey this string is at least four characters long or something like this obviously this takes much more time when",
    "start": "2511660",
    "end": "2518920"
  },
  {
    "text": "it comes to implementing the code and it's much harder to understand and reason about this code for us I mean",
    "start": "2518920",
    "end": "2525460"
  },
  {
    "text": "humans but generally when you have things like this it's much easier for you to test the code because compiler",
    "start": "2525460",
    "end": "2531220"
  },
  {
    "text": "takes care of that another thing is whenever you are dealing with concurrency use concurrency models",
    "start": "2531220",
    "end": "2538119"
  },
  {
    "text": "verifying that you're locking scenarios and everything around is actually working well use TLA Plus for instance",
    "start": "2538119",
    "end": "2544839"
  },
  {
    "text": "your sa use sat solvers to verify that your algorithms work correctly for all",
    "start": "2544839",
    "end": "2550000"
  },
  {
    "text": "the cases like from mathematical standpoint not from like a case that you actually tested couple of things check",
    "start": "2550000",
    "end": "2556359"
  },
  {
    "text": "contracts with tools for contracts checking obviously run mutation tests to figure out that if you like flip",
    "start": "2556359",
    "end": "2562359"
  },
  {
    "text": "particular bits whether your unit tests are going to spot that or not and",
    "start": "2562359",
    "end": "2567400"
  },
  {
    "text": "generally use all the tooling you have because the best tests are tests that you don't need to write and that are",
    "start": "2567400",
    "end": "2574060"
  },
  {
    "text": "given to you by the tooling you use and by the language you use so that's the idea and keep your code obviously",
    "start": "2574060",
    "end": "2580960"
  },
  {
    "text": "readable maintainable just like if it was a a production code everywhere comparison tests what if we would like",
    "start": "2580960",
    "end": "2588940"
  },
  {
    "start": "2585000",
    "end": "2744000"
  },
  {
    "text": "to run an application on like 2000 machines and we want to change some Behavior or which should actually when",
    "start": "2588940",
    "end": "2596440"
  },
  {
    "text": "we want to change something that should not change the behavior of our application right what can we do well we",
    "start": "2596440",
    "end": "2602560"
  },
  {
    "text": "can take an actual log stream from a production server and run the same",
    "start": "2602560",
    "end": "2608440"
  },
  {
    "text": "traffic against our staging environment against our testing environment but here",
    "start": "2608440",
    "end": "2613540"
  },
  {
    "text": "come the idea okay so we take two environments we deploy something to staging that should work exactly the",
    "start": "2613540",
    "end": "2619660"
  },
  {
    "text": "same way as the production component and now we take Online requests from production and we replay them against",
    "start": "2619660",
    "end": "2626200"
  },
  {
    "text": "staging and we check whether we get exactly the same output as in production and exactly the same here is very tricky",
    "start": "2626200",
    "end": "2632800"
  },
  {
    "text": "because first we need to reduct secrets we need to redact personal information we need to reduct things which does not",
    "start": "2632800",
    "end": "2640359"
  },
  {
    "text": "apply to staging environment for instance we need to change DNS names we need to change IP address when we say",
    "start": "2640359",
    "end": "2647260"
  },
  {
    "text": "that things should work exactly the same and the output should be exactly the same what we mean exactly the same up to",
    "start": "2647260",
    "end": "2653859"
  },
  {
    "text": "some Randomness obviously we don't want to check like time stops down to a millisecond so it's again thinking that",
    "start": "2653859",
    "end": "2659920"
  },
  {
    "text": "we need to handle we and when we are dealing with machine learning models there is some Randomness built into that",
    "start": "2659920",
    "end": "2665740"
  },
  {
    "text": "we need to handle that as well so generally there are tons of issues here but that's the idea that we can use and",
    "start": "2665740",
    "end": "2672760"
  },
  {
    "text": "it works pretty well once we understand which things we need to reduct from our logs and which things we can actually",
    "start": "2672760",
    "end": "2678760"
  },
  {
    "text": "use to test the application it won't work for all use cases what if your application is stateful you would need",
    "start": "2678760",
    "end": "2684940"
  },
  {
    "text": "to replicate database to your staging environment with replicating database we have exactly the same problem like we",
    "start": "2684940",
    "end": "2690940"
  },
  {
    "text": "cannot replicate Social Security numbers right otherwise there are legal implications of that so we need to",
    "start": "2690940",
    "end": "2696520"
  },
  {
    "text": "redact them but then when we redact them then queries against the database might not return the correct data so generally",
    "start": "2696520",
    "end": "2703300"
  },
  {
    "text": "there are plenty of issues here so this method won't work for all the scenarios you have but this generally works well",
    "start": "2703300",
    "end": "2710319"
  },
  {
    "text": "when we are talking about like stateless application running on a scale that basically just does some like querying",
    "start": "2710319",
    "end": "2716859"
  },
  {
    "text": "of some data store that you can plug into staging environment as well in such a case that you basically if you can do",
    "start": "2716859",
    "end": "2722980"
  },
  {
    "text": "it then effectively you don't need any tests on the way like for your application because you just run it",
    "start": "2722980",
    "end": "2729579"
  },
  {
    "text": "against production environment easily against production data and this also gives you a true distribution of data",
    "start": "2729579",
    "end": "2735940"
  },
  {
    "text": "like you are not checking all the edge cases that never happen but you are actually checking the actual queries",
    "start": "2735940",
    "end": "2742240"
  },
  {
    "text": "actual requests that come to your application another thingy let's move on to a b",
    "start": "2742240",
    "end": "2747280"
  },
  {
    "start": "2744000",
    "end": "2918000"
  },
  {
    "text": "testing and feature toggles what if you don't need to have a testing environment",
    "start": "2747280",
    "end": "2752560"
  },
  {
    "text": "at all and that's the idea imagine that instead of having a testing environment you always deploy an application to",
    "start": "2752560",
    "end": "2760000"
  },
  {
    "text": "production and you add new features only behind feature toggles meaning that you",
    "start": "2760000",
    "end": "2766240"
  },
  {
    "text": "deploy a new version of code that has feature a and new version of feature B and you dynamically switch this feature",
    "start": "2766240",
    "end": "2773740"
  },
  {
    "text": "toggle enabling feature B and you can do it like on a fleet like gradually you",
    "start": "2773740",
    "end": "2779140"
  },
  {
    "text": "can enable this for one machine for two machines for one region for one country for one Locale and only then deploy it",
    "start": "2779140",
    "end": "2786400"
  },
  {
    "text": "like or enable it to whole production what does this give us first we have much easier rollbacks because rollback",
    "start": "2786400",
    "end": "2792700"
  },
  {
    "text": "like rolling things back it takes time especially when we are talking about deploying to 2000 machines right but now",
    "start": "2792700",
    "end": "2799599"
  },
  {
    "text": "we just deploy the code and we just flip the toggle and this flipping the toggle could be like your keyboard secret or",
    "start": "2799599",
    "end": "2806319"
  },
  {
    "text": "whatever parameter you change in configuration something you that you can change dynamically okay another thing",
    "start": "2806319",
    "end": "2812619"
  },
  {
    "text": "you can do is you can actually run a particular a B test so you can compare whether this new feature brings more",
    "start": "2812619",
    "end": "2818740"
  },
  {
    "text": "value to the system whether you earn more money whether people are more willing to click a button or whatever",
    "start": "2818740",
    "end": "2824440"
  },
  {
    "text": "else and generally this is a very good idea when we are talking about like recommendation systems or maybe we are",
    "start": "2824440",
    "end": "2830500"
  },
  {
    "text": "talking about click streams and log streams to understand the Telemetry and how people behave",
    "start": "2830500",
    "end": "2836200"
  },
  {
    "text": "on the other hand there are multiple drawbacks to this solution first we need",
    "start": "2836200",
    "end": "2841480"
  },
  {
    "text": "to comp like maintain backward and forward compatibility meaning that if it",
    "start": "2841480",
    "end": "2846940"
  },
  {
    "text": "happens that we need to roll things back for whatever reason that hey the data was already changed in production so we",
    "start": "2846940",
    "end": "2853780"
  },
  {
    "text": "need to keep your application so that the old version of app works with the new version of data that it has never",
    "start": "2853780",
    "end": "2860800"
  },
  {
    "text": "seen okay we need to maintain the compatibility on our API levels because now we get a split brain in our cluster",
    "start": "2860800",
    "end": "2868060"
  },
  {
    "text": "because we enable a particular feature only like for half of the fleet then half of the fleet will get there like",
    "start": "2868060",
    "end": "2874839"
  },
  {
    "text": "new requests and new responses but the other half of the fleet will have no idea of what's going on because it will",
    "start": "2874839",
    "end": "2881319"
  },
  {
    "text": "just keep running the old code so we need to like your code hygiene must be of much higher quality because you need",
    "start": "2881319",
    "end": "2887680"
  },
  {
    "text": "to come think about things we typically can ignore right like the compatibility between apis data sets yada yada here we",
    "start": "2887680",
    "end": "2895300"
  },
  {
    "text": "need to keep all of of that in a place however this gives multiple benefits for",
    "start": "2895300",
    "end": "2901119"
  },
  {
    "text": "instance you don't pay for staging environments you always run your thing in one environment you don't need to",
    "start": "2901119",
    "end": "2906640"
  },
  {
    "text": "play with white listing IPS and all that stuff and you can roll things back much easier because they are behind the",
    "start": "2906640",
    "end": "2912339"
  },
  {
    "text": "feature toggle which you can just flip just like that which is a cool thing but well everything has its pros and cons",
    "start": "2912339",
    "end": "2919180"
  },
  {
    "start": "2918000",
    "end": "3050000"
  },
  {
    "text": "moving on let's say that we don't want to test at all what can we use instead of testing well we obviously can capture",
    "start": "2919180",
    "end": "2927400"
  },
  {
    "text": "some metrics and whenever we are talking about metrics then there are various",
    "start": "2927400",
    "end": "2932560"
  },
  {
    "text": "areas of which we should capture those obviously there are some infrastructural metrics like CPU memories",
    "start": "2932560",
    "end": "2938800"
  },
  {
    "text": "Etc but most importantly the application dependent metrics that represent our",
    "start": "2938800",
    "end": "2943960"
  },
  {
    "text": "business so what requests we get in which country in which local what kind",
    "start": "2943960",
    "end": "2949540"
  },
  {
    "text": "of transactions we are handling what is the customer what cohort it is in which",
    "start": "2949540",
    "end": "2954700"
  },
  {
    "text": "uh products we're using etc etc we need to capture metrics like this so we can",
    "start": "2954700",
    "end": "2960099"
  },
  {
    "text": "build dashboards and based on that we can test our applications in a way that we basically push things to production",
    "start": "2960099",
    "end": "2966520"
  },
  {
    "text": "and we observe the metrics whether they Spike or not and if we connect this or",
    "start": "2966520",
    "end": "2971740"
  },
  {
    "text": "merge this together with the previous approach of like a b Feature A B test and feature toggles then what we do is",
    "start": "2971740",
    "end": "2978160"
  },
  {
    "text": "we deploy a new version of application we toggle the feature in like one of the",
    "start": "2978160",
    "end": "2983380"
  },
  {
    "text": "countries let's say one smaller countries of our clients and then we observe whether metrics Spike or not if",
    "start": "2983380",
    "end": "2990520"
  },
  {
    "text": "they don't Spike then error is good and we can just launch this feature automatically around the globe but if",
    "start": "2990520",
    "end": "2996040"
  },
  {
    "text": "they do Spike then we immediately know what's wrong and where and we can start",
    "start": "2996040",
    "end": "3001440"
  },
  {
    "text": "debugging based on the actual queries not about when like not in a way that we think about all the edge cases etc etc",
    "start": "3001440",
    "end": "3008700"
  },
  {
    "text": "generally couple of ideas when it comes to metrics always configure them automatically because if you like just",
    "start": "3008700",
    "end": "3016560"
  },
  {
    "text": "like I mentioned with infrastructure as a code AS code always have things automated this severely applies to",
    "start": "3016560",
    "end": "3023460"
  },
  {
    "text": "metrics because if you configure metrics by hand then it's like uh like very easy",
    "start": "3023460",
    "end": "3029099"
  },
  {
    "text": "way to to fall in Decline and generally be frustrated and and run animal",
    "start": "3029099",
    "end": "3034500"
  },
  {
    "text": "detections on your metrics if you have metrics use some automated tools for for running on a Mali detection to figure",
    "start": "3034500",
    "end": "3041339"
  },
  {
    "text": "out the patterns that you cannot find with your like a naked eye but computers are pretty good at doing that so",
    "start": "3041339",
    "end": "3047400"
  },
  {
    "text": "generally fine look for animal detections to figure out issues earlier another thing that we should test is",
    "start": "3047400",
    "end": "3053400"
  },
  {
    "start": "3050000",
    "end": "3142000"
  },
  {
    "text": "backup tests okay have you ever tested your backup hands up oh there are a",
    "start": "3053400",
    "end": "3058800"
  },
  {
    "text": "couple of hands that is good okay do you know who holds your backup do you use cloud provider who holds the backup of",
    "start": "3058800",
    "end": "3065099"
  },
  {
    "text": "your database what happens if your database dies or is breached or someone",
    "start": "3065099",
    "end": "3070440"
  },
  {
    "text": "deletes all your data with delete from without putting where how can you restore the backup how long does it take",
    "start": "3070440",
    "end": "3077460"
  },
  {
    "text": "can you migrate to other cloud provider how long will it take to do so what if",
    "start": "3077460",
    "end": "3082800"
  },
  {
    "text": "your cloud provider decides to like kill your application and lock you out from",
    "start": "3082800",
    "end": "3088020"
  },
  {
    "text": "from the infrastructure and this is the case depending on what kind of business you're running but if you for instance",
    "start": "3088020",
    "end": "3094920"
  },
  {
    "text": "run in crypto or or stock trading then the risk is significantly higher so how",
    "start": "3094920",
    "end": "3100920"
  },
  {
    "text": "can you migrate to other cloud provider how fast can you do it do you have backups do you control your backups what",
    "start": "3100920",
    "end": "3106140"
  },
  {
    "text": "about the national regulations do you know where your data is being stored is it like exposed to other countries going",
    "start": "3106140",
    "end": "3113040"
  },
  {
    "text": "outside of European union and all that stuff generally with the backup with typically don't think about that until",
    "start": "3113040",
    "end": "3120059"
  },
  {
    "text": "the day when we need to use it and then it's way too late to answer all these questions so just think about that how",
    "start": "3120059",
    "end": "3126480"
  },
  {
    "text": "fast can you restore the backup avoid the vendor login avoid being logged into one cloud provider because one day you",
    "start": "3126480",
    "end": "3133559"
  },
  {
    "text": "may find yourself in a situation that you need to recreate all your business in different Cloud immediately and this",
    "start": "3133559",
    "end": "3140099"
  },
  {
    "text": "won't take a minute it will probably take way way longer another thing is testing your Robux",
    "start": "3140099",
    "end": "3146339"
  },
  {
    "start": "3142000",
    "end": "3252000"
  },
  {
    "text": "scenarios have you ever tested whether you can roll back your application and how conv how convenient it is for you to",
    "start": "3146339",
    "end": "3154260"
  },
  {
    "text": "roll things back on like Friday afternoon 5 PM you want to go home and then you need to hit rollback button is",
    "start": "3154260",
    "end": "3160740"
  },
  {
    "text": "it going to work is it going to break your data in your database is it going to break your certificates IP addresses",
    "start": "3160740",
    "end": "3167400"
  },
  {
    "text": "or whatever else what about API compatibility what about compatibility like when it comes to uh to to",
    "start": "3167400",
    "end": "3174920"
  },
  {
    "text": "infrastructure as code can you change your infrastructure change the networking stack change IP addresses or",
    "start": "3174920",
    "end": "3182099"
  },
  {
    "text": "whatever else and then roll things back easily can you do it at all most of the cases",
    "start": "3182099",
    "end": "3188280"
  },
  {
    "text": "is you just can't you change the infrastructure and rolling it back is way higher than actually pushing changes",
    "start": "3188280",
    "end": "3194700"
  },
  {
    "text": "forward so generally for such a case also test your Robux scenarios in pre-prod environment especially when we",
    "start": "3194700",
    "end": "3201780"
  },
  {
    "text": "are talking about running against 2000 machines then if you figure out in like middle of the deployment that",
    "start": "3201780",
    "end": "3207480"
  },
  {
    "text": "something's wrong you probably want to understand if you can roll back how fast can you roll back what about caches what",
    "start": "3207480",
    "end": "3214140"
  },
  {
    "text": "if you change your application and you fill caches with different keys can you roll things back like can you even turn",
    "start": "3214140",
    "end": "3219960"
  },
  {
    "text": "off the cache is it going to take you out of your business when you are talking about let's say 50 000",
    "start": "3219960",
    "end": "3226380"
  },
  {
    "text": "transactions per second when 99 of them are taken out of cash can you turn",
    "start": "3226380",
    "end": "3232500"
  },
  {
    "text": "things off can you reboot your system can you like take whole fit the fleet down and just restart the application",
    "start": "3232500",
    "end": "3238500"
  },
  {
    "text": "just like that is it possible or maybe is it going to cure your application that you will never be back in the",
    "start": "3238500",
    "end": "3243540"
  },
  {
    "text": "business so generally think about scenarios like this because hopefully this never happens but sooner or later",
    "start": "3243540",
    "end": "3249540"
  },
  {
    "text": "reality tells us that well it is going to happen summary whenever you test things",
    "start": "3249540",
    "end": "3255599"
  },
  {
    "start": "3252000",
    "end": "3382000"
  },
  {
    "text": "whenever you write code whenever you write your application deploy something it's always a cost don't test things",
    "start": "3255599",
    "end": "3262800"
  },
  {
    "text": "just for the sake of testing them don't test like you don't write unit tests or",
    "start": "3262800",
    "end": "3267960"
  },
  {
    "text": "integration tests or whatever just for the sake of testing them because someone told you on the internet to do so no",
    "start": "3267960",
    "end": "3274680"
  },
  {
    "text": "think about the costs when we are running a load test against like Fleet of 2000 machines it's going to be",
    "start": "3274680",
    "end": "3281339"
  },
  {
    "text": "expensive and you just can't avoid that so do you need a load test in such a case but if you don't what's the cost of",
    "start": "3281339",
    "end": "3288119"
  },
  {
    "text": "your application dying in production because you were over scaled for Christmas so you always need to find",
    "start": "3288119",
    "end": "3294300"
  },
  {
    "text": "this balance how much are you willing to pay for testing your application against how much will you need to pay when",
    "start": "3294300",
    "end": "3300839"
  },
  {
    "text": "facing a particular failure do not mock whenever you mock things you don't test",
    "start": "3300839",
    "end": "3306300"
  },
  {
    "text": "actual scenarios actual production components always test against your production pieces avoid mocks where path",
    "start": "3306300",
    "end": "3312960"
  },
  {
    "text": "possible think about contracts things about the clue of what you're testing not about just copying the unit test",
    "start": "3312960",
    "end": "3319140"
  },
  {
    "text": "below and changing one line of code is green yeah let's move on think that tests actually need to help you if they",
    "start": "3319140",
    "end": "3325319"
  },
  {
    "text": "don't help you but are a burden drop them because they you just pay for them and it's not worth it obviously maintain",
    "start": "3325319",
    "end": "3332460"
  },
  {
    "text": "compatibility uh apply automation to whatever you have infrastructure like as",
    "start": "3332460",
    "end": "3337920"
  },
  {
    "text": "code metrics dashboards whatever you have just don't do it manually because when we are talking about scaling out",
    "start": "3337920",
    "end": "3344579"
  },
  {
    "text": "then it's just not maintainable over time and that's basically it and we are",
    "start": "3344579",
    "end": "3350760"
  },
  {
    "text": "in a room where taking questions might be a little bit hard so we'll take them offline feel free to also drop me a line",
    "start": "3350760",
    "end": "3357240"
  },
  {
    "text": "on the over the internet if you have to any questions that we won't have time to answer them this is",
    "start": "3357240",
    "end": "3363059"
  },
  {
    "text": "um this is a QR code pointing to a slide deck so if you are interested in the slides feel free to download them and",
    "start": "3363059",
    "end": "3369540"
  },
  {
    "text": "let's uh call it a day then thank you for coming here hope you enjoyed this talk hope you liked it and thank you",
    "start": "3369540",
    "end": "3376079"
  },
  {
    "text": "again",
    "start": "3376079",
    "end": "3378260"
  }
]