[
  {
    "start": "0",
    "end": "12000"
  },
  {
    "text": "okay good morning everyone welcome to my talk protected encryption keys with a",
    "start": "2959",
    "end": "8040"
  },
  {
    "text": "jakku vault my name is Stephen horns so rough agenda what we're going to go",
    "start": "8040",
    "end": "14160"
  },
  {
    "start": "12000",
    "end": "12000"
  },
  {
    "text": "through today so we can talk a little bit about data breaches you do a very quick high-level cryptography overview so everyone's on the same page in terms",
    "start": "14160",
    "end": "20909"
  },
  {
    "text": "of cryptography or encryption they're going to talk about some different key management options are available to us",
    "start": "20909",
    "end": "26489"
  },
  {
    "text": "which will lead us into talking about as your key vaults more specifically and then we're going to go through some different patterns and practices you can",
    "start": "26489",
    "end": "32610"
  },
  {
    "text": "use when using something like key vault so first of all what sort of set the",
    "start": "32610",
    "end": "37770"
  },
  {
    "text": "scene by talking about the threat of data breaches so there's an interesting website here called breach level index",
    "start": "37770",
    "end": "44160"
  },
  {
    "text": "now there are security consultancy in the US but I quite like their website because they have these very big glaring statistics up on the page which is quite",
    "start": "44160",
    "end": "52170"
  },
  {
    "text": "useful to show leadership and businesses when you're trying to convince them to take security more seriously so the",
    "start": "52170",
    "end": "58410"
  },
  {
    "text": "number at the top there indicates it since 2013 and I think these are more us-based statistics but they're still",
    "start": "58410",
    "end": "63960"
  },
  {
    "text": "kind of relevant and that there's been 13 and a half billion records stolen or",
    "start": "63960",
    "end": "69420"
  },
  {
    "text": "lost from companies since 2013 but the sad thing is that number doesn't actually yeah it doesn't surprise me",
    "start": "69420",
    "end": "76890"
  },
  {
    "text": "anymore the numbers are getting bigger it seems to be getting bigger every day the bit that does surprise me this is",
    "start": "76890",
    "end": "82469"
  },
  {
    "text": "bit down here but it says that only 4% of these data breaches were considered",
    "start": "82469",
    "end": "88740"
  },
  {
    "text": "to be secure data breaches that's where the data is encrypted so you know today to get stolen from a company but it's",
    "start": "88740",
    "end": "94560"
  },
  {
    "text": "useless because it's all encrypted and you can't read it so really the reason why I go around doing talks like this",
    "start": "94560",
    "end": "99780"
  },
  {
    "text": "and a lot of my other sort of friends and speakers go and doing security talks used to try and get that number to increase so if you look at some example",
    "start": "99780",
    "end": "108689"
  },
  {
    "text": "was here some sort of large companies so at the top they got JP Morgan Chase or huge huge banking organization lost 83",
    "start": "108689",
    "end": "115529"
  },
  {
    "text": "million records in a data breach Equifax which is a credit referencing",
    "start": "115529",
    "end": "121259"
  },
  {
    "text": "agency lost nearly a hundred and fifty million records in a data breach and target you know the US supermarket chain",
    "start": "121259",
    "end": "128550"
  },
  {
    "text": "110 million myspace become surprises even still laughing but apparently it is lost 360 million records and so on so",
    "start": "128550",
    "end": "136720"
  },
  {
    "text": "these are quite big examples but it can also happen so much smaller companies as well it's also if anyone's familiar with",
    "start": "136720",
    "end": "143260"
  },
  {
    "text": "Troy hunts have I been poned websites well if you're not familiar with it it's a breach notification website where you",
    "start": "143260",
    "end": "150310"
  },
  {
    "text": "can sign up your email address and if your email address appears in any breaches you get notified so you can change your passwords again there's some",
    "start": "150310",
    "end": "157540"
  },
  {
    "text": "interesting stats on here from some other companies again myspace is on their LinkedIn lost 165 million Adobe",
    "start": "157540",
    "end": "164380"
  },
  {
    "text": "152 million now a lot of these companies that we all probably use every day so",
    "start": "164380",
    "end": "171940"
  },
  {
    "text": "look at some of the effects of data breaches so to a company there's quite a lots of sort of negative consequences",
    "start": "171940",
    "end": "178120"
  },
  {
    "text": "that can happen so you can have reputation will damage the organization that's very difficult to recover from if",
    "start": "178120",
    "end": "183520"
  },
  {
    "text": "your reputation becomes damaged that can lead to a loss of sales which can then mean you know customers switching to a",
    "start": "183520",
    "end": "189820"
  },
  {
    "text": "competitor and once someone's switched on other company it's very difficult to get them to switch back you can have",
    "start": "189820",
    "end": "195370"
  },
  {
    "text": "legal action from customers or other companies so you know that's expensive and time-consuming and as well as",
    "start": "195370",
    "end": "201580"
  },
  {
    "text": "compliance costs if you're in a regulated environment so finance health maybe even military in government's then",
    "start": "201580",
    "end": "208600"
  },
  {
    "text": "it can be a lot of compliance costs as you get fines levied onto your organization but also most importantly I",
    "start": "208600",
    "end": "214120"
  },
  {
    "text": "think is that you can compromise the safety of your customers so if you look",
    "start": "214120",
    "end": "219370"
  },
  {
    "text": "at the effects on on an individual so as an individual you're having your data your personal data being lost now",
    "start": "219370",
    "end": "225519"
  },
  {
    "text": "certainly in Europe on the GDP are you own that data it belongs to you so something that belongs to you he's been taken without your permission this can",
    "start": "225519",
    "end": "233800"
  },
  {
    "text": "lead to identity theft and impersonation which could then also lead to a loss of financial data or maybe even a loss of",
    "start": "233800",
    "end": "239170"
  },
  {
    "text": "money if someone's stolen your card details and it could also compromise your transaction histories on websites",
    "start": "239170",
    "end": "245170"
  },
  {
    "text": "so if you've been buying and selling them you know maybe don't want anyone else to know about that information can be can be leaked which is quite bad",
    "start": "245170",
    "end": "254110"
  },
  {
    "start": "254000",
    "end": "254000"
  },
  {
    "text": "but the mindset I think we should all be in is that data breaches are inevitable they're very difficult to stop so it's",
    "start": "254110",
    "end": "260739"
  },
  {
    "text": "not a case of if you're gonna suffer data breach it's more of a case of when and I think that's a kind of healthy mindset to get into you know you may as",
    "start": "260739",
    "end": "268000"
  },
  {
    "start": "268000",
    "end": "268000"
  },
  {
    "text": "an organization spend hundreds of thousands of you know dollars or pounds on you know network perimeter security",
    "start": "268000",
    "end": "275080"
  },
  {
    "text": "firewalls intrusion detection systems and they're good you know don't stop doing that but that doesn't necessarily stop a disgruntled",
    "start": "275080",
    "end": "282580"
  },
  {
    "text": "employee in operations who maybe didn't get his promotion that he wanted or she wanted doesn't stop them from going into",
    "start": "282580",
    "end": "289240"
  },
  {
    "text": "a database and select starring all of your data from the tables and company into a spreadsheet and taking it out the building a large proportion of data",
    "start": "289240",
    "end": "295450"
  },
  {
    "text": "breaches do happen from within inside companies necessarily external breaches",
    "start": "295450",
    "end": "300870"
  },
  {
    "text": "so GDP are obviously for us is a very big thing being in Europe I'm not saying much about Europe come",
    "start": "300870",
    "end": "307120"
  },
  {
    "text": "from the UK so slightly embarrassing we're supposed to leave today in God but",
    "start": "307120",
    "end": "313540"
  },
  {
    "text": "GDP are is a real big issue as well because under GDP are as I said you as an individual on your data the company",
    "start": "313540",
    "end": "319960"
  },
  {
    "text": "is just a custodian for it so lots of big fines could be levied towards companies so that kind of sort of sets",
    "start": "319960",
    "end": "326680"
  },
  {
    "text": "the scene around why you know things like a jaqui volts or any kind of key volt and cryptography is important we're",
    "start": "326680",
    "end": "332890"
  },
  {
    "text": "trying to protect our company's reputation and we're trying to protect our customers from having their data stolen so to a very very high level",
    "start": "332890",
    "end": "340650"
  },
  {
    "text": "crypto overview just so everyone's on the same level playing field so broadly",
    "start": "340650",
    "end": "347350"
  },
  {
    "text": "when it comes to encryption we have two types you have symmetric encryption and asymmetric encryption so with symmetric",
    "start": "347350",
    "end": "354100"
  },
  {
    "text": "encryption we have things like AES or if you're having to deal with a lot of legacy systems you may still have to deal with DES or Triple DES although",
    "start": "354100",
    "end": "360580"
  },
  {
    "text": "that's not recommended first new systems but the reason it's called symmetric is because you have one key and you use",
    "start": "360580",
    "end": "366520"
  },
  {
    "text": "that to both encrypt and decrypt information so that's why a symmetric on the flip sides that we have things like",
    "start": "366520",
    "end": "372490"
  },
  {
    "text": "RSA and even elliptic curve which are called asymmetric because we have a mathematically linked public and private",
    "start": "372490",
    "end": "378940"
  },
  {
    "text": "key which is used for encryption and decryption so if I wanted to send someone some encrypted data using RSA I",
    "start": "378940",
    "end": "384970"
  },
  {
    "text": "request their public key get their public key encrypt the data send it to them then they use their",
    "start": "384970",
    "end": "390020"
  },
  {
    "text": "private key to decrypt that data so they're the only ones who ever have access to that private key so symmetric",
    "start": "390020",
    "end": "398000"
  },
  {
    "text": "encryption the benefits are that it's very fast it's very algorithmic in nature it takes data splits it into blocks and performs",
    "start": "398000",
    "end": "404600"
  },
  {
    "text": "operations against it computers are very good at that but the downside to symmetric encryption",
    "start": "404600",
    "end": "410540"
  },
  {
    "text": "is that sharing keys is very hard and if you've got this you know AES encryption key how do I get it to one of you so",
    "start": "410540",
    "end": "416660"
  },
  {
    "text": "they're not gonna email it's here we don't want to stick it on a file on a server not gonna want to put it in a database and you nope sticking on a USB",
    "start": "416660",
    "end": "424160"
  },
  {
    "text": "key doesn't sound like a particularly good idea either so getting that key to other people is difficult whereas on the flip side",
    "start": "424160",
    "end": "430850"
  },
  {
    "text": "things like RSA and elliptic curve because they had more mathematical and how they work so they're based on modulus arithmetic they were lot slower",
    "start": "430850",
    "end": "437810"
  },
  {
    "text": "for a computer to perform by an order of magnitudes compared to say a yes but it",
    "start": "437810",
    "end": "444229"
  },
  {
    "text": "does make the key sharing system easier because you put you share a public key",
    "start": "444229",
    "end": "450260"
  },
  {
    "text": "which anyone can have access to but you keep your private key secret so there's no compromising of the private key well",
    "start": "450260",
    "end": "456500"
  },
  {
    "text": "there shouldn't be any compromising on the private key and traditionally in dotnet if we're going to do some",
    "start": "456500",
    "end": "462680"
  },
  {
    "text": "encryption we might use classes like AES crypto service provider for doing a AES encryption and we write these things",
    "start": "462680",
    "end": "468590"
  },
  {
    "text": "like RSA crypto service provider for doing RSA based encryption both fairly straightforward to use but there's you",
    "start": "468590",
    "end": "475039"
  },
  {
    "text": "know definite advantages and disadvantages it's a both system so",
    "start": "475039",
    "end": "480590"
  },
  {
    "text": "moving on from that sort of talking about sort of key management and how do we manage keys so yeah there's lots of",
    "start": "480590",
    "end": "487010"
  },
  {
    "text": "different options out there that we could use I mean probably the worst is this one where you just stick your RSA keys in an XML file and stick them on a",
    "start": "487010",
    "end": "493729"
  },
  {
    "text": "server somewhere I've worked for two companies now that have done this you know turn up on the first date so where",
    "start": "493729",
    "end": "499250"
  },
  {
    "text": "do you store your keys alright on that server indie drive oh so that's not very",
    "start": "499250",
    "end": "504979"
  },
  {
    "text": "good anyone can access the server potentially within the organization just take a copy of those keys another method that's very common",
    "start": "504979",
    "end": "512750"
  },
  {
    "text": "is the use of certificates you know certificates are very well-known very easy to use effectively and they give",
    "start": "512750",
    "end": "518990"
  },
  {
    "text": "details about who the certificates issued to and from and as you see public key verification you can",
    "start": "518990",
    "end": "524450"
  },
  {
    "text": "install it directly onto servers or key stores in Windows for example and you know there are robust and proven",
    "start": "524450",
    "end": "530089"
  },
  {
    "text": "mechanism they don't really require any involvement from the end-user so if you're buying a particular piece of",
    "start": "530089",
    "end": "535910"
  },
  {
    "text": "software that uses certificates they're probably just going to get installed behind the scenes for you or you have",
    "start": "535910",
    "end": "542470"
  },
  {
    "text": "operations staff that all handle them for you don't really require any additional hardware although you can use",
    "start": "542470",
    "end": "548720"
  },
  {
    "text": "Hardware to store them they're easy to manage and they're supported by pretty much every enterprise system out there",
    "start": "548720",
    "end": "554050"
  },
  {
    "text": "Linux Windows Mac there will support it but the next best option is using",
    "start": "554050",
    "end": "561440"
  },
  {
    "text": "something called hardware security module so these are vacuumed out herbal appliances that you were put in a data",
    "start": "561440",
    "end": "566600"
  },
  {
    "text": "center typically you'd have two of them colocation in different data centers so that the keys can be replicated between",
    "start": "566600",
    "end": "575029"
  },
  {
    "text": "the two devices I need to allow you to do things like store keys and perform encryption on device these devices are",
    "start": "575029",
    "end": "581360"
  },
  {
    "text": "typically tamper proof if anyone tries to physically access the box they'll be lights and radiation sensors",
    "start": "581360",
    "end": "586370"
  },
  {
    "text": "in there which basically make the entire system shut down so you had to send it back to the manufacturer so they're designed to be tamper proof in the",
    "start": "586370",
    "end": "594290"
  },
  {
    "text": "course I use them as a way of storing certificates as well so you want to put private keys of certificates on there",
    "start": "594290",
    "end": "599870"
  },
  {
    "text": "that's typically what you can do with HS evans as well but the problem with HSM",
    "start": "599870",
    "end": "604970"
  },
  {
    "text": "is traditionally there's been very cost prohibitive so the companies I've worked at they've used and we've all been huge",
    "start": "604970",
    "end": "611180"
  },
  {
    "text": "healthcare pharmaceutical companies or banks because typically these devices",
    "start": "611180",
    "end": "616339"
  },
  {
    "text": "might cost anywhere from you know fifty to eighty thousand euros per device so",
    "start": "616339",
    "end": "621770"
  },
  {
    "text": "then quite expensive but luckily for us and Microsoft have reduced that cost for",
    "start": "621770",
    "end": "629120"
  },
  {
    "text": "us by hiring or buying lots of these devices putting them in their different regional data centers and then providing",
    "start": "629120",
    "end": "634940"
  },
  {
    "text": "an interface for us to access them so whilst this talk and all the demos I'm",
    "start": "634940",
    "end": "640790"
  },
  {
    "text": "going to show are kind of focused around Asia and key volts the principles kind",
    "start": "640790",
    "end": "646160"
  },
  {
    "start": "645000",
    "end": "645000"
  },
  {
    "text": "of in the patterns that we're talking about kind of apply to any other vendor as well so AWS has the AWS HSN and kms services",
    "start": "646160",
    "end": "654360"
  },
  {
    "text": "there's the Google cloud kms as well kind of offers similar features and similar functionality so even if you're",
    "start": "654360",
    "end": "660990"
  },
  {
    "text": "not directly can use as your key volt kind of the principles do apply to other other providers so with that let's take",
    "start": "660990",
    "end": "669149"
  },
  {
    "text": "a bit of a look at Asha key volts so key",
    "start": "669149",
    "end": "674730"
  },
  {
    "text": "volt is a service that lets you safeguard cryptographic keys and secrets used by cloud apps and services and what",
    "start": "674730",
    "end": "681540"
  },
  {
    "text": "Microsoft have done is they've bought lots of these devices this is the thallus and shield connect hardware",
    "start": "681540",
    "end": "687750"
  },
  {
    "text": "security module not quite sure how much these cost I think go on their website to find out then a sales agent once it's",
    "start": "687750",
    "end": "693029"
  },
  {
    "text": "phony which to me says expensive so I wasn't willing to have that phone call but what Microsoft done is it provided",
    "start": "693029",
    "end": "700410"
  },
  {
    "text": "an abstraction over hundreds or thousands of these they have no regional data sensors so that we can use them for",
    "start": "700410",
    "end": "705600"
  },
  {
    "text": "a minimal cost which is great as Yuki",
    "start": "705600",
    "end": "711029"
  },
  {
    "text": "volt there's two configurations you can set it up in it's called hardware and software mode now the common feature",
    "start": "711029",
    "end": "717000"
  },
  {
    "text": "across both of them is that all of your keys are always stored on the HSM hardware so if you generate RSA keys are",
    "start": "717000",
    "end": "723029"
  },
  {
    "text": "always stored on the secure hardware if you use the software configuration then any encryption and decryption operations",
    "start": "723029",
    "end": "729899"
  },
  {
    "text": "will happen on compute VMS inside the azure vm inside the a Jacke volt service",
    "start": "729899",
    "end": "735350"
  },
  {
    "text": "if you use the hardware configuration when you set it up then your encryption and decryption operations are performed",
    "start": "735350",
    "end": "740910"
  },
  {
    "text": "on the HSM hardware directly but there is an extra cost implications doing that",
    "start": "740910",
    "end": "746180"
  },
  {
    "text": "so typical recommendation is if you're using as your key volt for your dev and",
    "start": "746180",
    "end": "751470"
  },
  {
    "text": "test environments you might use a software configuration because it's cheaper to use but then for production",
    "start": "751470",
    "end": "757020"
  },
  {
    "text": "you might use the more robust hardware configuration API wise there's no difference in it it's just a little bit",
    "start": "757020",
    "end": "762870"
  },
  {
    "text": "different when you set up the key volts so looking at some example costs so for",
    "start": "762870",
    "end": "770370"
  },
  {
    "text": "non key operation cc's things like writing secrets which we'll go into in more detail in a bit it costs free sense",
    "start": "770370",
    "end": "776670"
  },
  {
    "text": "free US cents per ten thousand operations so if you writes ten thousand will read and write ten thousand secrets",
    "start": "776670",
    "end": "783180"
  },
  {
    "text": "from the key Val that will cost you three cents and certificate operations will cost you $3",
    "start": "783180",
    "end": "790110"
  },
  {
    "text": "per renewal request and then a further three dollars it's like three cents per 10,000 operations across both the",
    "start": "790110",
    "end": "796680"
  },
  {
    "text": "standard and premium and pricing tiers if you're doing software operations with",
    "start": "796680",
    "end": "804150"
  },
  {
    "text": "encryption keys so you know by using the compute V MS then for RSA 2048-bit keys",
    "start": "804150",
    "end": "810540"
  },
  {
    "text": "or cost-free cents per 10,000 operations across both standard and premium before",
    "start": "810540",
    "end": "816990"
  },
  {
    "text": "using highest REM 3072 or 4090 4096 bit",
    "start": "816990",
    "end": "822060"
  },
  {
    "text": "keys you'll cost you 15 cents per 10,000 operations in the hardware mode this is",
    "start": "822060",
    "end": "829740"
  },
  {
    "text": "where all your encryption in the encryption happens directly on the hardware you can't use the standard pricing to yetiz premium and there's",
    "start": "829740",
    "end": "836580"
  },
  {
    "text": "some additional cost so for every key that you creates that's going to cost you $1 for the lowest strength IRS a key",
    "start": "836580",
    "end": "842400"
  },
  {
    "text": "and then 3,000 cents per 10,000 operations and then if you use the higher strength Keys there's a tiered",
    "start": "842400",
    "end": "848640"
  },
  {
    "text": "pricing model so it's about five dollars first 250 keys and then the price sort",
    "start": "848640",
    "end": "853680"
  },
  {
    "text": "of goes down in a staggered tier so there's some sort of you know example",
    "start": "853680",
    "end": "859230"
  },
  {
    "text": "highlight cost cost you change over time so you always check the azure pricing calculator when you're looking to use",
    "start": "859230",
    "end": "865080"
  },
  {
    "text": "any of these things but they kind of give you an idea of the sort of level of cost it is compared to what it would be to buy one of these machines entirely",
    "start": "865080",
    "end": "881430"
  },
  {
    "start": "873000",
    "end": "873000"
  },
  {
    "text": "depends on OC so I'm gonna give an example of a system I worked on an insurance company which will give her probably a better impression to that",
    "start": "881430",
    "end": "888089"
  },
  {
    "text": "because I guess the real answer is it depends depends on what you build him but we'll cover an example a bit later",
    "start": "888089",
    "end": "894470"
  },
  {
    "text": "so once the key goes into the key volt it never comes out so once you generated",
    "start": "894470",
    "end": "899760"
  },
  {
    "text": "a key in there you can't then just copy the key out the key volt it's in there permanently there is the facility to",
    "start": "899760",
    "end": "904950"
  },
  {
    "text": "backup your keys in key volt but Microsoft have encrypt them first before they backup so you do have the ability",
    "start": "904950",
    "end": "910860"
  },
  {
    "text": "to back the keys up take a copy and then restore them later should you need to but those keys are",
    "start": "910860",
    "end": "916440"
  },
  {
    "text": "encrypted so you can't actually directly access to key material so",
    "start": "916440",
    "end": "921910"
  },
  {
    "text": "setting up key vault is relatively straightforward always the best place to go is Microsoft documentation so the the",
    "start": "921910",
    "end": "928420"
  },
  {
    "text": "getting started page is down there it does change over time so you always need to consult the latest documentation but",
    "start": "928420",
    "end": "935560"
  },
  {
    "text": "broadly for setting this up with PowerShell you would create a resource group you then create your key volt",
    "start": "935560",
    "end": "940630"
  },
  {
    "text": "specifying the region the resource group and if you wants it in hardware or software or the pricing - and once",
    "start": "940630",
    "end": "947290"
  },
  {
    "text": "you've done that you have the ability to create hardware software keys read and write secrets and upload certificates so",
    "start": "947290",
    "end": "953890"
  },
  {
    "text": "if I'm a PowerShell point right it cut off on the side of a screen there but for my PowerShell points of view you",
    "start": "953890",
    "end": "959290"
  },
  {
    "text": "connect to your subscription create a resource group and then you've got these",
    "start": "959290",
    "end": "964600"
  },
  {
    "text": "commands down here where you create the key vault by giving it a name resource group location and then you can give it",
    "start": "964600",
    "end": "972339"
  },
  {
    "text": "a SKU pricing SKU once you've done that you can then access the key vault via",
    "start": "972339",
    "end": "978940"
  },
  {
    "text": "the standard portal just like you can with any operational resource say let's you look at what's happening over time",
    "start": "978940",
    "end": "986200"
  },
  {
    "text": "it lets you look at metadata for keys and secrets and certificates so you can administer it from that portal if you",
    "start": "986200",
    "end": "992560"
  },
  {
    "text": "desire so that's great you know a lot of Microsoft services use key volts",
    "start": "992560",
    "end": "998200"
  },
  {
    "text": "directly behind the scenes to manage encryption keys but what we want to do is we want to access it from c-sharp we",
    "start": "998200",
    "end": "1003630"
  },
  {
    "text": "want to code against the key volts so to do that there's an extra step we need to do so we need to create an authorized",
    "start": "1003630",
    "end": "1010890"
  },
  {
    "text": "application using Azure Active Directory sounds worse than it is but effectively",
    "start": "1010890",
    "end": "1017010"
  },
  {
    "text": "this is going to give us an application ID and a shared secret that you have to present to the keyhole to use it there",
    "start": "1017010",
    "end": "1023760"
  },
  {
    "text": "is a better method for doing that a little bit later sorry it seems a bit icky having to provide credentials to",
    "start": "1023760",
    "end": "1029010"
  },
  {
    "text": "access to key volts there is an opera of option we'll look at in a moment effectively you have you create an",
    "start": "1029010",
    "end": "1035339"
  },
  {
    "text": "application in Azure ad you then have to make a notes of the application ID which",
    "start": "1035339",
    "end": "1042150"
  },
  {
    "text": "is this thing here so that's effectively your username I guess it's a good way of",
    "start": "1042150",
    "end": "1048690"
  },
  {
    "text": "putting it then you have to make note of your client secrets which is this value here",
    "start": "1048690",
    "end": "1057260"
  },
  {
    "text": "when you go on that panel it only shows you the client secret once once you viewed it once it won't show you it",
    "start": "1057260",
    "end": "1062580"
  },
  {
    "text": "again so you have to make sure to make note of it at that point if you don't you need to kill that application",
    "start": "1062580",
    "end": "1068159"
  },
  {
    "text": "creating new one and then you can assign permissions for that application so you",
    "start": "1068159",
    "end": "1074730"
  },
  {
    "text": "can say whether applications allowed certain you know read and write keys delete keys write secrets etc okay so",
    "start": "1074730",
    "end": "1083279"
  },
  {
    "text": "once you've done that nope yeah so it's something you've got some",
    "start": "1083279",
    "end": "1088830"
  },
  {
    "text": "different permissions you can set on the left there is another thing you can do",
    "start": "1088830",
    "end": "1094230"
  },
  {
    "text": "so if you're going to be using things like Asia app services or Asha functions",
    "start": "1094230",
    "end": "1100100"
  },
  {
    "text": "to deploy your applications in so you can set up what's called a managed service identity and what this means is",
    "start": "1100100",
    "end": "1106710"
  },
  {
    "text": "that you can points your applications that manage service our density and that handles the loading in of the credentials when your application starts",
    "start": "1106710",
    "end": "1112470"
  },
  {
    "text": "up so you don't have to present the app ID and client secret directly so if",
    "start": "1112470",
    "end": "1119639"
  },
  {
    "text": "you're doing that that's probably a better technique to use some interesting blog post there that talked about how to set it up but if you're not hosting your",
    "start": "1119639",
    "end": "1127529"
  },
  {
    "text": "web api or websites on Azure app services and then you have to present",
    "start": "1127529",
    "end": "1132899"
  },
  {
    "text": "the user ID or the application ID and client secret from your application",
    "start": "1132899",
    "end": "1139100"
  },
  {
    "start": "1140000",
    "end": "1140000"
  },
  {
    "text": "okay so keys versus secret so keys as you can imagine our encryption keys on",
    "start": "1140809",
    "end": "1146580"
  },
  {
    "text": "as your key volt they're asymmetric RSA keys it can create but you can also store things called secrets which we're",
    "start": "1146580",
    "end": "1153120"
  },
  {
    "text": "going to look at some demos in orbit later so a secret is effectively a",
    "start": "1153120",
    "end": "1158850"
  },
  {
    "text": "sucker key value pair store that you can use the key volt size so you can write in secrets like database connection",
    "start": "1158850",
    "end": "1165210"
  },
  {
    "text": "strings database passwords API keys which you can store in the key vaults you don't have to store them inside your",
    "start": "1165210",
    "end": "1170610"
  },
  {
    "text": "config files which is quite a neat solution so we're going to be playing",
    "start": "1170610",
    "end": "1176340"
  },
  {
    "text": "around with some code I've got all the code available on github and get from that address there it's I've leased on the MIT license you",
    "start": "1176340",
    "end": "1183640"
  },
  {
    "text": "can do what you want with it just don't blame me if it doesn't work but the codes are there that we're going to go",
    "start": "1183640",
    "end": "1189280"
  },
  {
    "text": "through in a moment so if you want to play around many stuff at your leisure you can do when you set up as your key",
    "start": "1189280",
    "end": "1195910"
  },
  {
    "text": "volts you have to installed a new gate package so Microsoft Azure key vault as",
    "start": "1195910",
    "end": "1201400"
  },
  {
    "text": "you can tell that's a Mac screenshot so you guys don't know standard 2 compliant so it's working dotnet cool which is",
    "start": "1201400",
    "end": "1208270"
  },
  {
    "text": "quite handy so let's look at a simple hello world application for KI volts is",
    "start": "1208270",
    "end": "1218740"
  },
  {
    "text": "where we hope that the Wi-Fi holds out for us so in the solution that you can",
    "start": "1218740",
    "end": "1223990"
  },
  {
    "text": "download from github I've got various little worms sample applications in here that you can play around with ignore the",
    "start": "1223990",
    "end": "1230800"
  },
  {
    "text": "fake key volt class that's just my insurance policy in case the Wi-Fi gives up and whilst doing the demo I've",
    "start": "1230800",
    "end": "1236530"
  },
  {
    "text": "basically I've replicated some of the functionality locally before the key volts doing just so I can get through",
    "start": "1236530",
    "end": "1241780"
  },
  {
    "text": "the demos so you don't need to worry about that class that's just that's just in case of Wi-Fi dies and it does",
    "start": "1241780",
    "end": "1246940"
  },
  {
    "text": "frequently happen got some helper classes here if some methods I've",
    "start": "1246940",
    "end": "1252040"
  },
  {
    "text": "created so we have the ability to create keys and delete keys encrypts and decrypts and getting set secrets then I've got",
    "start": "1252040",
    "end": "1260260"
  },
  {
    "text": "some sort of boilerplate code here which I'm using so in this example I'm just I've set up a temporary key vault which",
    "start": "1260260",
    "end": "1266140"
  },
  {
    "text": "I'll keep online for a little while so if you do want to download the code over the next week or so and just have a play around but I have got a preset up key",
    "start": "1266140",
    "end": "1273190"
  },
  {
    "text": "but you can experiment with what you don't abused except anyone else abusing it I'll just have to delete it and set",
    "start": "1273190",
    "end": "1278200"
  },
  {
    "text": "up a new one this is that application ID that we talked about this is that client",
    "start": "1278200",
    "end": "1284440"
  },
  {
    "text": "secret which I got from the portal",
    "start": "1284440",
    "end": "1289560"
  },
  {
    "text": "obviously if you are presenting these directly they're not using managed service identities you didn't need to think about how you can have protect",
    "start": "1289560",
    "end": "1295560"
  },
  {
    "text": "these values sucker chicken and egg thing isn't it you know at what point does the security start one company I",
    "start": "1295560",
    "end": "1303910"
  },
  {
    "text": "worked at they had some self-signed certificates that are loaded onto a protected server and then we encrypted",
    "start": "1303910",
    "end": "1309760"
  },
  {
    "text": "these values using the keys in that certificate that was how they got around the problem okay so let's look at this",
    "start": "1309760",
    "end": "1319950"
  },
  {
    "text": "example here so what I'm gonna do is I'm going to create a key I'm calling it Steven Hamas's key because it's my key",
    "start": "1319950",
    "end": "1325160"
  },
  {
    "text": "so we create it here then I've got some simple a bit bit of data here just a string then I'm going to encrypt it and",
    "start": "1325160",
    "end": "1331500"
  },
  {
    "text": "decrypt it on the key vault and then I'm gonna delete my key afterwards just to keep this particular instance nice and",
    "start": "1331500",
    "end": "1338880"
  },
  {
    "text": "tidy",
    "start": "1338880",
    "end": "1341060"
  },
  {
    "text": "okay so I'm cresting the key vault there creating the the key there was a bit of",
    "start": "1345519",
    "end": "1350839"
  },
  {
    "text": "latency in doing that as party wasn't about Wi-Fi here but also you know you were having to go off to a key vault",
    "start": "1350839",
    "end": "1357919"
  },
  {
    "text": "which I've got set up in the US create the key and then return the ID for that key back too so there is you know a",
    "start": "1357919",
    "end": "1364149"
  },
  {
    "text": "performance penalty in using the key vault but that gives us back a key ID",
    "start": "1364149",
    "end": "1369549"
  },
  {
    "text": "that's a bit hard to see but it's URI there just refers to the key that I've created it's just like a unique ID for",
    "start": "1369549",
    "end": "1376039"
  },
  {
    "text": "that key then I've got some days where I want to encrypt so I'm going to clip the",
    "start": "1376039",
    "end": "1381139"
  },
  {
    "text": "string hello world and then going to call out to the key vaults so I perceive",
    "start": "1381139",
    "end": "1388849"
  },
  {
    "text": "my key ID are passing the day so I want to encrypt it's you have to convert it to a byte away first so you need to play",
    "start": "1388849",
    "end": "1394519"
  },
  {
    "text": "around with encodings and stuff but converting it to a byte array and then I'm just going to call out to the key",
    "start": "1394519",
    "end": "1400849"
  },
  {
    "text": "volts a key volt client is their client class that you call in their NuGet",
    "start": "1400849",
    "end": "1406489"
  },
  {
    "text": "package and return the result then again I can decrypt it so this byte array here",
    "start": "1406489",
    "end": "1413529"
  },
  {
    "text": "contains all the encrypted data from the key volts this one contains a byte array",
    "start": "1413529",
    "end": "1420469"
  },
  {
    "text": "of my decrypted data and then also need",
    "start": "1420469",
    "end": "1425989"
  },
  {
    "text": "to convert those into strings so that's a base64 encoded version of my encrypted data a bit difficult to read I apologize",
    "start": "1425989",
    "end": "1433269"
  },
  {
    "text": "and then we've got the decrypted data there which says hello world so we've encrypted it and then decrypted it using",
    "start": "1433269",
    "end": "1439820"
  },
  {
    "text": "the azure key vault in an azure data center somewhere and then I delete my",
    "start": "1439820",
    "end": "1446570"
  },
  {
    "text": "key to state ID so that's kind of a hollow world application of using key volts to do a simple encryption",
    "start": "1446570",
    "end": "1451789"
  },
  {
    "text": "decryption operation",
    "start": "1451789",
    "end": "1454690"
  },
  {
    "text": "okay so with that let's look at a few few little usage patterns around using",
    "start": "1457309",
    "end": "1463200"
  },
  {
    "text": "the key vole again a lot these patterns kind of apply to AWS key manager and",
    "start": "1463200",
    "end": "1468330"
  },
  {
    "text": "Google clouds kms as well obviously we're just looking at a specific Azure implementation okay so we can look at",
    "start": "1468330",
    "end": "1477090"
  },
  {
    "text": "six different items so multiple environments configuration of secrets local key wrapping key versioning where",
    "start": "1477090",
    "end": "1483840"
  },
  {
    "text": "we can use password protection where we can improve password protection using the key volts and digital signing and",
    "start": "1483840",
    "end": "1489359"
  },
  {
    "text": "digital signatures so multiple environments so it's quite common than when you're developing an application",
    "start": "1489359",
    "end": "1494999"
  },
  {
    "start": "1491000",
    "end": "1491000"
  },
  {
    "text": "that you're going to have numerous development tests UAT environments and then production note typically we",
    "start": "1494999",
    "end": "1501299"
  },
  {
    "text": "promote our code through different environments into production so one thing you don't want to do you just have",
    "start": "1501299",
    "end": "1506940"
  },
  {
    "text": "one shared key vault and you use it for everything because then you know effectively you're making your",
    "start": "1506940",
    "end": "1513139"
  },
  {
    "text": "production keys available to your other test environments so that's not a good idea you don't want to do that think you",
    "start": "1513139",
    "end": "1518909"
  },
  {
    "text": "might want to do is you could have one shared key vault the e use for your test environments and then a specific key",
    "start": "1518909",
    "end": "1524519"
  },
  {
    "text": "volt for production that's quite a common usage scenario or if you script",
    "start": "1524519",
    "end": "1530789"
  },
  {
    "text": "up your environments in all two males would just have one key volt per environment but the key thing is that",
    "start": "1530789",
    "end": "1536369"
  },
  {
    "text": "you never share keys from production into any other environment you need to keep that production only and keep it",
    "start": "1536369",
    "end": "1541559"
  },
  {
    "start": "1537000",
    "end": "1537000"
  },
  {
    "text": "locked down make sure your operations staff securely lock that key bolt down",
    "start": "1541559",
    "end": "1547340"
  },
  {
    "text": "okay so configuration of secrets so secrets are a maximum of 25k blobs of",
    "start": "1548299",
    "end": "1554970"
  },
  {
    "text": "text that you can store inside the key volts now you don't have to create a specific encryption key for these",
    "start": "1554970",
    "end": "1559979"
  },
  {
    "text": "secrets that's handled by a key volt for you so the best way to think of is it's just like a key value pair no sequel",
    "start": "1559979",
    "end": "1566609"
  },
  {
    "text": "database but stored in a specific hardware so you everything's encrypted",
    "start": "1566609",
    "end": "1572159"
  },
  {
    "text": "for you typical things you might want to install so database connection strings you know it's never a good idea typos in",
    "start": "1572159",
    "end": "1578940"
  },
  {
    "text": "your config files so you could store those in that API keys for party services so if you use any third party",
    "start": "1578940",
    "end": "1585029"
  },
  {
    "text": "integrations and they've given you API keys to access those systems you can store those 'we securely readies cash connection",
    "start": "1585029",
    "end": "1592470"
  },
  {
    "text": "strings you know or just anything confidential that you don't want to expose in your source code or 20 user so",
    "start": "1592470",
    "end": "1599220"
  },
  {
    "text": "they really are it's not very handy secrets are versioned as well so if you",
    "start": "1599220",
    "end": "1604440"
  },
  {
    "start": "1603000",
    "end": "1603000"
  },
  {
    "text": "write the secret or if you write a secret with the same identifier twice it will keep a version for you which is",
    "start": "1604440",
    "end": "1610890"
  },
  {
    "text": "quite handy and then when you retrieve a secret if you don't specify a version I'm real to give you the latest version",
    "start": "1610890",
    "end": "1616080"
  },
  {
    "text": "but you can specify previous versions if you want so it might be saying that could be useful in your application",
    "start": "1616080",
    "end": "1621570"
  },
  {
    "text": "design let's have a look at that so the",
    "start": "1621570",
    "end": "1631290"
  },
  {
    "text": "good thing is with magic evil a lot of these things actually very easy to use so I'm hoping you can help use it as a",
    "start": "1631290",
    "end": "1638430"
  },
  {
    "text": "way of proving to employers that this stuff's actually quite easy to do you know let's not push the security",
    "start": "1638430",
    "end": "1643950"
  },
  {
    "text": "features to the back of the project let's think of them up front so all the helper files in here are the same as the",
    "start": "1643950",
    "end": "1650220"
  },
  {
    "text": "previous projects so literally it's a few lines of code so I'm going to create a secret mary had a little lamb and then",
    "start": "1650220",
    "end": "1657570"
  },
  {
    "text": "I'm just going to retrieve it straight away from the database from the key vault",
    "start": "1657570",
    "end": "1663380"
  },
  {
    "text": "okay so that's my secret is now being written into the key vault so he's got the secret main with Steven",
    "start": "1670520",
    "end": "1675720"
  },
  {
    "text": "haunts his secret and the value is Mary's had a little lamb but it could be a database password now I'm just going",
    "start": "1675720",
    "end": "1681630"
  },
  {
    "text": "to retrieve it so I'm retrieving it by a name Oh Steven haunts his secret and",
    "start": "1681630",
    "end": "1687570"
  },
  {
    "text": "then I get a string back with my secret hidden there so that could be a database password API key anything that you want",
    "start": "1687570",
    "end": "1694800"
  },
  {
    "text": "to keep confidential",
    "start": "1694800",
    "end": "1697670"
  },
  {
    "text": "okay so local key wrapping so he gets a little bit more complex but not more too much so encrypting and decrypting on",
    "start": "1705929",
    "end": "1715750"
  },
  {
    "text": "hardware security modules expensives he's seen that when we made the calls out to the to the key volt there was a",
    "start": "1715750",
    "end": "1721090"
  },
  {
    "text": "bit of latency in that operation happening and then the reply coming back part of that is because I've set up the",
    "start": "1721090",
    "end": "1727269"
  },
  {
    "text": "cheapest as your keeper what I could so it's not gonna be as performant as a what a production one might be but you",
    "start": "1727269",
    "end": "1733809"
  },
  {
    "text": "know there is a lot going on there you're sending stuff over to a kevo encrypting it sending it back so there is a latency so what we want to do is",
    "start": "1733809",
    "end": "1740080"
  },
  {
    "text": "use a more hybrid solution so what this means it will do all of our encryption",
    "start": "1740080",
    "end": "1745570"
  },
  {
    "text": "locally using AES because it's nice and fast we can keep it close to our application but then what we'll do is",
    "start": "1745570",
    "end": "1750940"
  },
  {
    "text": "our AES encryption keys will encrypts using the hardware security module then",
    "start": "1750940",
    "end": "1756190"
  },
  {
    "text": "that means we can store our AES encrypted keys in a database if we needed if we want to because they're",
    "start": "1756190",
    "end": "1762039"
  },
  {
    "text": "encrypted with our essay on the key vault another good thing about this is it means that if you imagine you've got a",
    "start": "1762039",
    "end": "1768789"
  },
  {
    "text": "Web API and you're going to decrypt about 20 different items for example you could go into the API you could decrypt",
    "start": "1768789",
    "end": "1774490"
  },
  {
    "text": "your AES keys and the key volts that's one operation towards your caste and then those remaining 20 operations you",
    "start": "1774490",
    "end": "1781720"
  },
  {
    "text": "just do with AES locally so you're not incurring any financial cost with the key volts because you remember most",
    "start": "1781720",
    "end": "1787690"
  },
  {
    "text": "operations are charged in batches at ten thousand there's a good way of keeping your hash your bill down as well",
    "start": "1787690",
    "end": "1793649"
  },
  {
    "text": "especially if you're running a very high bandwidth system just like an example of",
    "start": "1793649",
    "end": "1799929"
  },
  {
    "text": "that again all the source codes available if you don't have a play around with it later date",
    "start": "1799929",
    "end": "1807690"
  },
  {
    "text": "so in here I've got another helper class called AES encryption two methods",
    "start": "1810620",
    "end": "1816150"
  },
  {
    "text": "encrypts and decrypts takes a bite away at the data on to encrypt a bytes away",
    "start": "1816150",
    "end": "1821820"
  },
  {
    "text": "of my key which I'm going to generate and something called an initialization vector saying that you're passing to AES",
    "start": "1821820",
    "end": "1827160"
  },
  {
    "text": "help kick-start the encryption on the first block so standard AES code uses",
    "start": "1827160",
    "end": "1833520"
  },
  {
    "text": "memory and crypto streams inside but effectively we pass some data in here with a key in the IV we'll get a byte",
    "start": "1833520",
    "end": "1840090"
  },
  {
    "text": "array back with our encrypted data and to decrypt it we pass in the encrypted data to the key in the IV again run the",
    "start": "1840090",
    "end": "1847530"
  },
  {
    "text": "code and then we get our encrypted data back out such as some AES helper code that we're gonna use I've got another",
    "start": "1847530",
    "end": "1854010"
  },
  {
    "text": "method down here called generate random number which generates cryptographically secure random numbers in dotnet and I'm",
    "start": "1854010",
    "end": "1859950"
  },
  {
    "text": "going to use that to create my encryption key and the initialization vector so we're passing a length that's",
    "start": "1859950",
    "end": "1865650"
  },
  {
    "text": "a length few bytes so for our key it's going to be fair to two bytes or 256 bits and then that will return a bytes",
    "start": "1865650",
    "end": "1874020"
  },
  {
    "text": "away if the desired length full of random data okay so if we look at the",
    "start": "1874020",
    "end": "1881670"
  },
  {
    "text": "example then so what I'm going to do first is I'm going to create a key on the key volt just like we did in the",
    "start": "1881670",
    "end": "1887250"
  },
  {
    "text": "previous example and then going to create an AES key so that's first two bytes",
    "start": "1887250",
    "end": "1892470"
  },
  {
    "text": "50 bytes in length and then what I'm going to do is I'm gonna send that key",
    "start": "1892470",
    "end": "1898830"
  },
  {
    "text": "that I've just created to the key volt and ask it to be encrypted so at this point here we've got an encrypted AES",
    "start": "1898830",
    "end": "1905520"
  },
  {
    "text": "key back now at that point I could go store that in a database or you know put it somewhere safe so if we imagine you",
    "start": "1905520",
    "end": "1911700"
  },
  {
    "text": "know sometimes elapsed so now maybe we've gotten a Web API method that's",
    "start": "1911700",
    "end": "1917610"
  },
  {
    "text": "being called and we want to do some encryption the encryption operation so the first thing we need to do is we need",
    "start": "1917610",
    "end": "1922650"
  },
  {
    "text": "to recover that AES key we need to decrypt it so we can use it so I'm making a call out to the key volts with",
    "start": "1922650",
    "end": "1928740"
  },
  {
    "text": "that encrypted key and specify my key ID that we created a little earlier and that gives me a decrypted AES key and",
    "start": "1928740",
    "end": "1938430"
  },
  {
    "text": "from that point onwards you know I generate my initialization vector and then I can encrypt load using AES so I have a message here that",
    "start": "1938430",
    "end": "1947660"
  },
  {
    "text": "says make a top-secret stuff it's a string I converted to a byte array I",
    "start": "1947660",
    "end": "1953460"
  },
  {
    "text": "encrypt it then I decrypt it straight away and then I display the results or convert the",
    "start": "1953460",
    "end": "1959310"
  },
  {
    "text": "results that we can display it",
    "start": "1959310",
    "end": "1962330"
  },
  {
    "text": "so we can create the key create my a es",
    "start": "1965820",
    "end": "1972160"
  },
  {
    "text": "key that's two bikes and then I'm going to go off to the key volts and encrypt that key right so now I actually want to",
    "start": "1972160",
    "end": "1978820"
  },
  {
    "text": "use that key for something else so if you imagine this is you know some time later a separate web call to come in we",
    "start": "1978820",
    "end": "1986020"
  },
  {
    "text": "first of all decrypt our key create our initialization vector then at this point I'm going to encrypt some data but this",
    "start": "1986020",
    "end": "1992110"
  },
  {
    "text": "is all happening locally now so I'm not calling out to the key volt so we're not incurring additional cost with the key",
    "start": "1992110",
    "end": "1997929"
  },
  {
    "text": "volts and AES it's nice and fast when Crypt my data and here we can see our",
    "start": "1997929",
    "end": "2005429"
  },
  {
    "text": "encrypted text you know to take my word for it there's encrypted text in there that's a bit that's quite small and then",
    "start": "2005429",
    "end": "2012270"
  },
  {
    "text": "you can see why if the cryptic straightaway it says mega top-secret stuff",
    "start": "2012270",
    "end": "2017750"
  },
  {
    "text": "so that's quite a neat trick so tiny does it keep our costs down it means we're using the performance and the",
    "start": "2019150",
    "end": "2025430"
  },
  {
    "text": "efficiency of AES locally that's going to run nice and quickly but we're also protecting that AES key using the key",
    "start": "2025430",
    "end": "2032180"
  },
  {
    "text": "volts which is quite a handy little technique so an example where I've used",
    "start": "2032180",
    "end": "2046100"
  },
  {
    "text": "this fairly recently it's working for a",
    "start": "2046100",
    "end": "2051320"
  },
  {
    "text": "fairly newish startup as insurance claims management company so we built a system that's a software as a service",
    "start": "2051320",
    "end": "2057230"
  },
  {
    "text": "platform so it's our system that we built and deployed but what we do is we white label the system for insurance",
    "start": "2057230",
    "end": "2063620"
  },
  {
    "text": "companies if you've got companies like I don't know an axe or Aviva sign-ups use decides when their agents",
    "start": "2063620",
    "end": "2069740"
  },
  {
    "text": "log onto the the agents portal it's all viewed in their colours and branding so it looks at one of their systems and",
    "start": "2069740",
    "end": "2075740"
  },
  {
    "text": "when the claimants trying to resolve an insurance claim they can also log into their version of the portal when it",
    "start": "2075740",
    "end": "2080990"
  },
  {
    "text": "again looks like the insurance company that they're a customer of so it's a multi-tenant system with custom branding",
    "start": "2080990",
    "end": "2089200"
  },
  {
    "text": "so when we onboard an insurance company the first thing we did was we would create a master key for that insurance",
    "start": "2090070",
    "end": "2095960"
  },
  {
    "text": "company in the key volts so if you had access for example or don't have any",
    "start": "2095960",
    "end": "2101510"
  },
  {
    "text": "insurance companies exist if we take them with quite a key firm in the key volt that then becomes their master key",
    "start": "2101510",
    "end": "2109390"
  },
  {
    "text": "but then what we would do is we would use that key wrapping technique where it also generates an AES key or a series of",
    "start": "2109390",
    "end": "2116600"
  },
  {
    "text": "AES keys for different purposes which with encrypted with their master key in the key vaults and we stored that key in",
    "start": "2116600",
    "end": "2123170"
  },
  {
    "text": "a database so the feature of our system is there any personal identifiable",
    "start": "2123170",
    "end": "2128420"
  },
  {
    "text": "information for any of their claimants we always encrypted those fields that the record level in the database who is",
    "start": "2128420",
    "end": "2134930"
  },
  {
    "text": "using a combination of sequel server and cosmos DB so you might have a record in",
    "start": "2134930",
    "end": "2141470"
  },
  {
    "text": "a database but their name address phone number date of birth gender all that sort of stuff are being cryptid",
    "start": "2141470",
    "end": "2147900"
  },
  {
    "text": "this is Bertie will he look like they've got each tenant so you've got four tenants for example each one's got their own master key in the key vault and in",
    "start": "2147900",
    "end": "2155650"
  },
  {
    "text": "the database somewhere we'd have a tenant ID so that's the ID that relates to that particular company would have a",
    "start": "2155650",
    "end": "2160930"
  },
  {
    "text": "key ID which is the key ID that refers to the key in the key volts and then also in that table would have an",
    "start": "2160930",
    "end": "2167110"
  },
  {
    "text": "encrypted version of their AES session key in actual reality we had triangles for different AES keys we had for",
    "start": "2167110",
    "end": "2173620"
  },
  {
    "text": "different purposes for each ensure the finish example is just imagine we've got one what it's meant was that effectively",
    "start": "2173620",
    "end": "2180070"
  },
  {
    "text": "each of the insurance company's data it auto is all stored in the same databases effectively partitions using security so",
    "start": "2180070",
    "end": "2187720"
  },
  {
    "text": "if for any unfortunate scenario say tenant ID or ten and one so it's a",
    "start": "2187720",
    "end": "2193780"
  },
  {
    "text": "freeze on for their key got compromised in the key vault but quite sure how that happened but if it did the exposure is",
    "start": "2193780",
    "end": "2199390"
  },
  {
    "text": "just limited to their data that could potentially be decrypted because they wouldn't have any of the other keys for",
    "start": "2199390",
    "end": "2204580"
  },
  {
    "text": "the other insurance companies so this then obviously obviously advantages",
    "start": "2204580",
    "end": "2210940"
  },
  {
    "text": "where local encryption operations were faster because we're keeping it close to you know service very running our code",
    "start": "2210940",
    "end": "2217590"
  },
  {
    "text": "we've decrypt the keys in the HSM store in memory so that reduce a lot of network hops and latency with the key",
    "start": "2217590",
    "end": "2224260"
  },
  {
    "text": "vault which is good because it is quite slow to use it also meant it's very easy",
    "start": "2224260",
    "end": "2230050"
  },
  {
    "text": "for us to rotate keys so each of these insurance companies had different policies about how often you had to",
    "start": "2230050",
    "end": "2235810"
  },
  {
    "text": "change master keys so broadly every you know between 30 days and 90 days you had to change those keys this technique was",
    "start": "2235810",
    "end": "2245440"
  },
  {
    "text": "actually quite useful for us so if we imagine that we've encrypted all of the customer data using just that one key on",
    "start": "2245440",
    "end": "2250540"
  },
  {
    "text": "the key vaults if you then go and change that key you're in a situation where you then got",
    "start": "2250540",
    "end": "2256000"
  },
  {
    "text": "to go and re-encrypt all of the data in a database which is not a nice task for someone to be given",
    "start": "2256000",
    "end": "2261280"
  },
  {
    "text": "to do but because we're using this kind of surrogate key here that we've created",
    "start": "2261280",
    "end": "2267730"
  },
  {
    "text": "and stored in the database if we went and changed the key for tenant for the only thing we need to",
    "start": "2267730",
    "end": "2272950"
  },
  {
    "text": "re-encrypt is this key down here so we don't have to touch any of the data in a database which is quite nice so when we",
    "start": "2272950",
    "end": "2280000"
  },
  {
    "text": "actually had a very fast and a fish and key rotation policy preaching insurance companies there was quite low",
    "start": "2280000",
    "end": "2285340"
  },
  {
    "text": "risk because you know you just you just re-encrypt this key here we're not actually changing AES key",
    "start": "2285340",
    "end": "2290440"
  },
  {
    "text": "we're just re-encrypt Singh you okay so",
    "start": "2290440",
    "end": "2301120"
  },
  {
    "text": "key versioning then so we just talked about the idea that we can change keys",
    "start": "2301120",
    "end": "2306340"
  },
  {
    "text": "in the key volt and then we encrypt local keys in the database it's kind of like the additional equivalent of",
    "start": "2306340",
    "end": "2311530"
  },
  {
    "text": "changing the locks on your front door so the one we just talked through then",
    "start": "2311530",
    "end": "2316600"
  },
  {
    "text": "turn you know you might have version one of a key you use that to protects an aes key locally but then you might introduce",
    "start": "2316600",
    "end": "2323110"
  },
  {
    "text": "a new version of the key so I said you only need to re-encrypt that one key in your database which is quite nice",
    "start": "2323110",
    "end": "2329610"
  },
  {
    "text": "another area where these this before is the idea of chord incremental keys in a",
    "start": "2329610",
    "end": "2335590"
  },
  {
    "text": "way this works is you might have key version one and then you might have say you know a whole load of records that",
    "start": "2335590",
    "end": "2341140"
  },
  {
    "text": "you encrypted key version one and then when you change to a new key you don't change any of this data here you just",
    "start": "2341140",
    "end": "2347170"
  },
  {
    "text": "start using that key from that point forward in time that's called incremental keys an example of where",
    "start": "2347170",
    "end": "2353170"
  },
  {
    "text": "I've used that before in a system anyone familiar with PCI DSS payment card",
    "start": "2353170",
    "end": "2358480"
  },
  {
    "text": "regulations is that a thing in in Denmark and say it's a series of",
    "start": "2358480",
    "end": "2364570"
  },
  {
    "text": "regulations we had to adhere to and it's all about how are you protects customs card betas of credit and banking card",
    "start": "2364570",
    "end": "2370390"
  },
  {
    "text": "data so we built what was called a card token volts so it was a separate system",
    "start": "2370390",
    "end": "2375850"
  },
  {
    "text": "that ran on a separate network in the organization and when customers provide us with their debit card details or",
    "start": "2375850",
    "end": "2381640"
  },
  {
    "text": "credit card details we would store them in this protected system so none of the other systems could directly access it",
    "start": "2381640",
    "end": "2388170"
  },
  {
    "text": "so the way this works is we would have a key and I'm reading crypt say for example 1,000 cards of that key let me",
    "start": "2388170",
    "end": "2395110"
  },
  {
    "text": "get let me get to a thousand we automatically generated a new key and then we encrypted the next thousand cards with that key and so on the reason",
    "start": "2395110",
    "end": "2403000"
  },
  {
    "text": "you do that is if any one of those keys ever got compromised or stolen then",
    "start": "2403000",
    "end": "2408070"
  },
  {
    "text": "you're limiting the exposure of data that can be decrypted down to a thousand cards not millions of cards",
    "start": "2408070",
    "end": "2416010"
  },
  {
    "text": "that's just another example of where you can use different key versions when you write keys into the key vault they are",
    "start": "2416270",
    "end": "2422309"
  },
  {
    "text": "versioned as well so if you give it the same name it does create a brand new version of it so you can actually use historic key versions if you want to if",
    "start": "2422309",
    "end": "2430230"
  },
  {
    "text": "you don't specify a version number you just get the latest key back we knew but not back I mean you've been encrypting",
    "start": "2430230",
    "end": "2435569"
  },
  {
    "text": "it does it with the latest key okay so",
    "start": "2435569",
    "end": "2441000"
  },
  {
    "text": "passwords so we all know passwords aren't a particularly great thing but",
    "start": "2441000",
    "end": "2447210"
  },
  {
    "text": "they're kind of here to stay it's probably one of the easiest ways for customers to authenticate of our systems",
    "start": "2447210",
    "end": "2454730"
  },
  {
    "text": "so if you think about you know all the different parts of our techniques are out there we can all agree that",
    "start": "2454910",
    "end": "2459960"
  },
  {
    "text": "plaintext passwords are the work of the devil and we never want to use them the",
    "start": "2459960",
    "end": "2465510"
  },
  {
    "text": "next best technique which people might use is to use hash passwords anyone do password hashing just straight password",
    "start": "2465510",
    "end": "2471150"
  },
  {
    "text": "hashing not that many that are people are willing to admit to it so you know that's been used quite a lot but it is",
    "start": "2471150",
    "end": "2477180"
  },
  {
    "text": "susceptible to brute-force attacks where you just try a billions of combination since he get the correct hash or you",
    "start": "2477180",
    "end": "2482970"
  },
  {
    "text": "could do a rainbow table a dictionary table attack which is a pre-computed multi-gigabyte list of passwords and",
    "start": "2482970",
    "end": "2489299"
  },
  {
    "text": "hashes as the example website here crack station Nets you paste a sha-256 hash of",
    "start": "2489299",
    "end": "2496680"
  },
  {
    "text": "a password in the top there and it all tell you what the password is next best",
    "start": "2496680",
    "end": "2503339"
  },
  {
    "start": "2503000",
    "end": "2503000"
  },
  {
    "text": "technique is salted hashes so a salt is where you generate a random number a",
    "start": "2503339",
    "end": "2509940"
  },
  {
    "text": "random piece of entropy that you append on to the password and then you hash the password of those two values you do have",
    "start": "2509940",
    "end": "2516809"
  },
  {
    "text": "to store the salts but basically what you're trying to do is make dictionary tables and brute-force attacks much harder to do against the password",
    "start": "2516809",
    "end": "2523549"
  },
  {
    "text": "probably still one of the most common ways of storing passwords in systems at the moment does anyone do this particular technique yeah a few people",
    "start": "2523549",
    "end": "2533150"
  },
  {
    "text": "so the next best one I apologize to the emoji so then all I put these in there the next best technique is C something",
    "start": "2533340",
    "end": "2540210"
  },
  {
    "text": "called a password-based key derivation function or something like B Crips sounds very complicated but really it's",
    "start": "2540210",
    "end": "2545730"
  },
  {
    "text": "not so in.net we have a system called a password-based key derivation function",
    "start": "2545730",
    "end": "2551630"
  },
  {
    "text": "and what it is is a it's a password hashing function so you put the password",
    "start": "2551630",
    "end": "2556770"
  },
  {
    "text": "in to one side you put the salt in and then you give it a number of iterations value and what is he's going to do is",
    "start": "2556770",
    "end": "2562260"
  },
  {
    "text": "it's going to repeatedly hash that password depending on what that number is if you put 10,000 in there it's gonna",
    "start": "2562260",
    "end": "2568080"
  },
  {
    "text": "hash to pass for 10,000 times and the reason we do this is we're trying to slow down algorithmically the password",
    "start": "2568080",
    "end": "2574410"
  },
  {
    "text": "hashing process because one of the common ways of cracking passwords is to use tools our hash Katz and powerful GPU",
    "start": "2574410",
    "end": "2581150"
  },
  {
    "text": "Hardware on your PC like gtx cards and they can test billions or calculate",
    "start": "2581150",
    "end": "2587130"
  },
  {
    "text": "billions of hashes per second so if we algorithmically slow down the hashing process you can reduce that from",
    "start": "2587130",
    "end": "2592320"
  },
  {
    "text": "billions down to say 100 or 10 you can do per second or passwords you can",
    "start": "2592320",
    "end": "2597420"
  },
  {
    "text": "attempt to crack per second so if you've ever logged on to some websites where you put your password and it feels like",
    "start": "2597420",
    "end": "2603090"
  },
  {
    "text": "you're waiting two or three seconds for anything to happen chances are they're doing an iterative password hash like",
    "start": "2603090",
    "end": "2608100"
  },
  {
    "text": "this and behind the scenes so in dotnet is very easy to use there's a very",
    "start": "2608100",
    "end": "2614640"
  },
  {
    "text": "snappy named class called RFC two eight nine eight derive bytes if you're familiar with RFC specs is completely",
    "start": "2614640",
    "end": "2621210"
  },
  {
    "text": "obvious what it does but for most normal people it's not so it's quite easy to miss it so you pass in your byte array",
    "start": "2621210",
    "end": "2629760"
  },
  {
    "text": "if your password you passing the salt and a number of iterations value call",
    "start": "2629760",
    "end": "2635580"
  },
  {
    "text": "get bytes and if you get the hash password back the reason you return or do you get by twenties because the",
    "start": "2635580",
    "end": "2641460"
  },
  {
    "text": "internally easy sha-1 not char 256 and that returns a 20-byte hash code to only",
    "start": "2641460",
    "end": "2647220"
  },
  {
    "text": "need 20 bytes the higher the iteration",
    "start": "2647220",
    "end": "2652560"
  },
  {
    "text": "value the slower the hashing is going to be and so I taught to workshop over the last couple of days and we was playing",
    "start": "2652560",
    "end": "2657720"
  },
  {
    "text": "around with some of the different values you put in there I think it put ten million in at one point and it took",
    "start": "2657720",
    "end": "2662960"
  },
  {
    "text": "nearly ten seconds for it to generate the hash so of course you need to be careful what",
    "start": "2662960",
    "end": "2669580"
  },
  {
    "text": "number you put in there it becomes an application design decision you know what's an acceptable delay to wait yeah",
    "start": "2669580",
    "end": "2676480"
  },
  {
    "text": "if you think it's okay to wait three seconds you might put a value of around five hundred thousand in there it's kind",
    "start": "2676480",
    "end": "2681550"
  },
  {
    "text": "of a million in there be saying you have to play around with okay it's up to you",
    "start": "2681550",
    "end": "2700750"
  },
  {
    "text": "you could mean you could have different number of iterations values that you use per customer or per class of user that's",
    "start": "2700750",
    "end": "2708610"
  },
  {
    "text": "entirely up to you okay so you'd think we're good at this point you know",
    "start": "2708610",
    "end": "2714700"
  },
  {
    "text": "password-based key derivation functions a recommended way of doing it it's what i waas recommends partially we can use",
    "start": "2714700",
    "end": "2722440"
  },
  {
    "text": "the Kevon just to give us an extra little bit protection when using a technique like this so if we think of",
    "start": "2722440",
    "end": "2730420"
  },
  {
    "text": "the salts you know it's it could be affected to by random number that were generated so we could if we wanted to",
    "start": "2730420",
    "end": "2735850"
  },
  {
    "text": "use the local key wrap internally you can actually encrypt the salts before we store it in our database because you do",
    "start": "2735850",
    "end": "2742000"
  },
  {
    "text": "need to store the soul you have to provide the same salt when you recompute the hash so we could encrypt it and also",
    "start": "2742000",
    "end": "2747670"
  },
  {
    "text": "the number of iterations value you know if someone's going to try and crack your password they need to note that value is",
    "start": "2747670",
    "end": "2753520"
  },
  {
    "text": "now the security of a password-based key derivation function isn't dependent on",
    "start": "2753520",
    "end": "2758710"
  },
  {
    "text": "keeping that value secret but probably I want to advertise it either just makes it a little bit harder so actually",
    "start": "2758710",
    "end": "2764830"
  },
  {
    "text": "storing it as a secret in your key vault might be saying there's quite useful to use a configuration item don't",
    "start": "2764830",
    "end": "2770170"
  },
  {
    "text": "necessarily want everyone to know what it is so one old story is a secret in your key",
    "start": "2770170",
    "end": "2775270"
  },
  {
    "text": "volt now there are obviously performance implications to doing this so if we're",
    "start": "2775270",
    "end": "2781330"
  },
  {
    "text": "gonna cape calculator salts so we're gonna calculate a password using this technique and we've got two operations",
    "start": "2781330",
    "end": "2786520"
  },
  {
    "text": "to the key vault so you might decide and this is what we did insurance company that we weren't going to do this for",
    "start": "2786520",
    "end": "2791800"
  },
  {
    "text": "every single user where we encrypt the souls and store the number of iterations",
    "start": "2791800",
    "end": "2796930"
  },
  {
    "text": "away but for people and kind of like cps or admin access into the system we took this extra level",
    "start": "2796930",
    "end": "2802619"
  },
  {
    "text": "of protection so as you can do quite a lot of damage with their accounts so we used it for a certain class of users you",
    "start": "2802619",
    "end": "2810150"
  },
  {
    "text": "know it's all there to make a potential hackers life a lot harder and if they steal your password hashing table if the",
    "start": "2810150",
    "end": "2817380"
  },
  {
    "text": "salts encrypted and they have no idea what the number of iterations value is you've just made their life a lot harder which is good because ultimately we want",
    "start": "2817380",
    "end": "2825180"
  },
  {
    "text": "them to get bored and move on to someone else and leave our company alone okay so",
    "start": "2825180",
    "end": "2832859"
  },
  {
    "text": "just look at a demo of doing that",
    "start": "2832859",
    "end": "2837470"
  },
  {
    "text": "all the codes here if you want to play around with it so similar to the",
    "start": "2840320",
    "end": "2845510"
  },
  {
    "text": "previous example so I've got a class here for generating a random number I've",
    "start": "2845510",
    "end": "2851210"
  },
  {
    "text": "got the password-based key derivation function implementation here there's just a few lines of code so it's not so",
    "start": "2851210",
    "end": "2856790"
  },
  {
    "text": "straightforward and I've got the key volt the boilerplate helper code from the previous examples so in this example",
    "start": "2856790",
    "end": "2865220"
  },
  {
    "text": "I am going to encrypt the souls I am going to store the number of iterations in the key vaults using that technique",
    "start": "2865220",
    "end": "2871700"
  },
  {
    "text": "we just discussed so are coming and I create a key in the key volt agencies ant was his self-contained so I create",
    "start": "2871700",
    "end": "2877460"
  },
  {
    "text": "new keys every time was he probably not necessary to do that in your system so",
    "start": "2877460",
    "end": "2883089"
  },
  {
    "text": "create the key I then generate a salt so I'm generating a fare to buy salt it's a",
    "start": "2883360",
    "end": "2889520"
  },
  {
    "text": "nice big long random number which I'm appending to the passwords and crypt the salt with the key volts and then I store",
    "start": "2889520",
    "end": "2897770"
  },
  {
    "text": "the number of iterations in this case I said it's a 20,000 but I store that in the key volt as well so now if we",
    "start": "2897770",
    "end": "2904190"
  },
  {
    "text": "imagine you know some time has elapsed someone's trying to log on to the system so the first thing we need to do when we",
    "start": "2904190",
    "end": "2909980"
  },
  {
    "text": "check their passwords we need to decrypt that assault so we send the decrypted",
    "start": "2909980",
    "end": "2915020"
  },
  {
    "text": "salt to the key volt and ask it to decrypt it for us we then call out to the key volt and we say can you give me",
    "start": "2915020",
    "end": "2921170"
  },
  {
    "text": "the number of iterations value that I need so that returns 20,000 there then at that point we can just carry on with",
    "start": "2921170",
    "end": "2927710"
  },
  {
    "text": "the password hash as normal so let's run",
    "start": "2927710",
    "end": "2933200"
  },
  {
    "text": "that so create key",
    "start": "2933200",
    "end": "2939790"
  },
  {
    "text": "generate a local key or the the salt in this case encrypt the salt",
    "start": "2941850",
    "end": "2947790"
  },
  {
    "text": "oops helps if I were on the right project",
    "start": "2952630",
    "end": "2958050"
  },
  {
    "text": "doesn't it let's try that again",
    "start": "2958050",
    "end": "2963260"
  },
  {
    "text": "okay so create key crepe my salts encrypt the salts with the key volt so",
    "start": "2965300",
    "end": "2971700"
  },
  {
    "text": "now we have in encrypted salts and then we store a number of iterations in the key volt so that encrypted so you know",
    "start": "2971700",
    "end": "2979830"
  },
  {
    "text": "we probably convert it to a base64 string and stored in a database somewhere okay so now we want to check",
    "start": "2979830",
    "end": "2988410"
  },
  {
    "text": "our password so the first thing we need to do is to the equip the salt for that user we need to return the number of",
    "start": "2988410",
    "end": "2994050"
  },
  {
    "text": "iterations value back from the key volt so for 1020 thousand maybe then have our",
    "start": "2994050",
    "end": "2999600"
  },
  {
    "text": "password which is password but I've come and leave user numbers to change devours",
    "start": "2999600",
    "end": "3006670"
  },
  {
    "text": "a gate then we call hash password that",
    "start": "3006670",
    "end": "3012320"
  },
  {
    "text": "was a joke about the password before no one laughed that felt a bit flat so I'm",
    "start": "3012320",
    "end": "3019070"
  },
  {
    "text": "not gonna have to password so we've got our password as a byte array we've got the salt of just decrypted and we've got",
    "start": "3019070",
    "end": "3024860"
  },
  {
    "text": "the number of iterations which is 20,000 I run it through RFC two eight nine eight derive bytes call get bytes on it",
    "start": "3024860",
    "end": "3032060"
  },
  {
    "text": "and that returns us a password hash so then what you do at that point is you compare the value of that hash to what",
    "start": "3032060",
    "end": "3039200"
  },
  {
    "text": "you've got stored in your password table if they match you know the users put the correct password in they don't match and",
    "start": "3039200",
    "end": "3044570"
  },
  {
    "text": "they type the wrong password him so it's quite handy little trick just to give",
    "start": "3044570",
    "end": "3050840"
  },
  {
    "text": "you that extra little bit of protection around passwords I said you might not want to do it for every user you'll be incurring costs with the key volt but in",
    "start": "3050840",
    "end": "3058160"
  },
  {
    "text": "the example where I used it we had a level of super users within the company hours work and a hand within each",
    "start": "3058160",
    "end": "3063770"
  },
  {
    "text": "insurance company as well so we use that technique for those people because I see that they've got quite a lot of access",
    "start": "3063770",
    "end": "3069620"
  },
  {
    "text": "so we just gave them the extra little sort of veneer of protection around their password",
    "start": "3069620",
    "end": "3075940"
  },
  {
    "text": "okay so the final thing I want to talk about then is digital signing and digital signatures so in cryptography",
    "start": "3080660",
    "end": "3089010"
  },
  {
    "text": "broadly there's kind of four core pillars to cryptography that we talk about you've got confidentiality which is what you know encrypting date so",
    "start": "3089010",
    "end": "3095460"
  },
  {
    "text": "making something confidential have integrity which is what we use things",
    "start": "3095460",
    "end": "3100860"
  },
  {
    "text": "like char 256 for yes if you have some data you calculate a hash for it",
    "start": "3100860",
    "end": "3106050"
  },
  {
    "text": "send update someone else with the hash you recalculate the hash of a day to compare them if they're the same then",
    "start": "3106050",
    "end": "3111240"
  },
  {
    "text": "you know that data hasn't been tampered with when it's been sent authentication",
    "start": "3111240",
    "end": "3116340"
  },
  {
    "text": "we use things I can hash message authentication codes so very similar to hashing except you provide a key to the",
    "start": "3116340",
    "end": "3122490"
  },
  {
    "text": "hashing function so if you want someone to calculate the same hash and somewhere",
    "start": "3122490",
    "end": "3128340"
  },
  {
    "text": "else they have to have that key to calculate the same hash but then the final pillow is called non-repudiation",
    "start": "3128340",
    "end": "3134119"
  },
  {
    "text": "and this is where we use techniques like digital signatures before so a good way of describing non-repudiation is to",
    "start": "3134119",
    "end": "3140700"
  },
  {
    "text": "think about contracts that we might assign in real life so if you're buying a house for example you might sign the",
    "start": "3140700",
    "end": "3147060"
  },
  {
    "text": "contract this solicitor someone witnesses the contract so you know that you're gonna buy the house for a certain value if then later on you try and turn",
    "start": "3147060",
    "end": "3154710"
  },
  {
    "text": "around and say actually I want to pay 20,000 you know dollars less they could",
    "start": "3154710",
    "end": "3160109"
  },
  {
    "text": "say well no we've got this contract as proof so that's what digital signature is about it's about providing proof that",
    "start": "3160109",
    "end": "3166410"
  },
  {
    "text": "someone's done something and we use cryptography for doing that so our digital signature is a",
    "start": "3166410",
    "end": "3172320"
  },
  {
    "start": "3170000",
    "end": "3170000"
  },
  {
    "text": "mathematical technique used to validate your authenticity and integrity of a message software or digital document",
    "start": "3172320",
    "end": "3177600"
  },
  {
    "text": "it's an unheard of a service called DocuSign yeah so DocuSign is a place",
    "start": "3177600",
    "end": "3182760"
  },
  {
    "text": "where you can sign electronically signed contracts between multiple parties so",
    "start": "3182760",
    "end": "3188760"
  },
  {
    "text": "that you know if you then try to refute what's in that contract later on they've got digital proof that you sign that contract exactly what digital signatures",
    "start": "3188760",
    "end": "3195750"
  },
  {
    "text": "are for a key vote let's just do that quite simply which is really good so",
    "start": "3195750",
    "end": "3201440"
  },
  {
    "text": "when we do a digital signature there's free operations that we need so we need to be able to generate signing keys",
    "start": "3201440",
    "end": "3207900"
  },
  {
    "text": "we've already seen how to create keys in the key volt so we've covered that already you need a signing algorithm",
    "start": "3207900",
    "end": "3213420"
  },
  {
    "text": "this is where passing some day - and you say crepe me a digital signature of that data and then you need a way of verifying that",
    "start": "3213420",
    "end": "3218790"
  },
  {
    "text": "digital signature later there's a verification method when you pass in the",
    "start": "3218790",
    "end": "3223860"
  },
  {
    "text": "data in the signature if it returns true you know that the signature is valid for that piece of data it returns false then",
    "start": "3223860",
    "end": "3231060"
  },
  {
    "text": "you don't trust that signature typically what you do is you would have some data",
    "start": "3231060",
    "end": "3236720"
  },
  {
    "text": "instead of creating the signature of that data directly you create a hash of that data first and it's the hash do you",
    "start": "3236720",
    "end": "3242700"
  },
  {
    "text": "create the signature for if you're doing",
    "start": "3242700",
    "end": "3249210"
  },
  {
    "text": "digital signatures yourself in dotnet and the two classes you use are RSA pkcs1 signature formatter and RSA pkcs1",
    "start": "3249210",
    "end": "3258120"
  },
  {
    "text": "signature D formatter so there were two classes you'd use if he's doing this manually yourself but luckily we don't",
    "start": "3258120",
    "end": "3264690"
  },
  {
    "text": "need to use those they're a bit of a mouthful to try and pronounce so kevo offers digital signatures natively so we",
    "start": "3264690",
    "end": "3271530"
  },
  {
    "text": "don't need to use that format of class which is really good and as you can guess it's probably quite simple to do",
    "start": "3271530",
    "end": "3278990"
  },
  {
    "text": "so let's take a look okay so in this",
    "start": "3282819",
    "end": "3288309"
  },
  {
    "text": "class I've got all the same boilerplate stuff as before I've got a separate little helper class here for doing the",
    "start": "3288309",
    "end": "3294459"
  },
  {
    "text": "sha-256 hash that's how you do hashing in net you have a byte array of add a to",
    "start": "3294459",
    "end": "3299890"
  },
  {
    "text": "your to hash it called create a static crate method on the sha-256 objects then you just call compute hash on that",
    "start": "3299890",
    "end": "3306189"
  },
  {
    "text": "object that crates raw your hash code so",
    "start": "3306189",
    "end": "3314049"
  },
  {
    "text": "in the example here so again I'm creating the cake so this is the keys I'm gonna use for signing times what",
    "start": "3314049",
    "end": "3320919"
  },
  {
    "text": "we've done previously I've got a very important document I want to sign in this case is just a string but it could",
    "start": "3320919",
    "end": "3326769"
  },
  {
    "text": "be you know a PDF file or any kind of file so I create a hash of that piece of",
    "start": "3326769",
    "end": "3336640"
  },
  {
    "text": "information so I converted to a byte array in our hash it and we call that the docket in digest that's the kind of",
    "start": "3336640",
    "end": "3343539"
  },
  {
    "text": "correct so and really it's just a hash then what I do is I get that hash and my",
    "start": "3343539",
    "end": "3349509"
  },
  {
    "text": "key ID and I send it to the key vault I call the sine method and what we get back is the byte array of our digital",
    "start": "3349509",
    "end": "3356529"
  },
  {
    "text": "signature so you could then go and you know basically for encode it store it away in a database and then later on if",
    "start": "3356529",
    "end": "3363459"
  },
  {
    "text": "you want to verify that that digital signature is valid for that piece of data I you want to make sure that data hasn't changed or no one has changed",
    "start": "3363459",
    "end": "3370059"
  },
  {
    "text": "contract you call verify you're passing the hash of that data and the signature",
    "start": "3370059",
    "end": "3376119"
  },
  {
    "text": "will return true or false so just quickly for a run it's giving an example",
    "start": "3376119",
    "end": "3381130"
  },
  {
    "text": "with where I've used this so in the insurance system that talks about we had",
    "start": "3381130",
    "end": "3386619"
  },
  {
    "text": "two databases about a sequel database on a cosmos database cosmos is a document",
    "start": "3386619",
    "end": "3392049"
  },
  {
    "text": "store so you can have objects in c-sharp you can serialize him into JSON and you just store them in that store so when we",
    "start": "3392049",
    "end": "3399459"
  },
  {
    "text": "settled an insurance claim with a customer you know there's an interaction between the insurance customer in the claimants they've crashed their car you",
    "start": "3399459",
    "end": "3406329"
  },
  {
    "text": "know we know we know the age of their car we know how many miles are on the clock and we say okay your car is worth five thousand pounds",
    "start": "3406329",
    "end": "3413520"
  },
  {
    "text": "the customer at that point says okay that's fine I hit a button to say they",
    "start": "3413520",
    "end": "3418560"
  },
  {
    "text": "agree to the settlement then what we did is we have a settlement document which contains all of the information about",
    "start": "3418560",
    "end": "3424320"
  },
  {
    "text": "their claim in the final settlement value and we create a digital signature at XVII of that document we store that",
    "start": "3424320",
    "end": "3431310"
  },
  {
    "text": "information along with the signature that we created in key vaults in that cosmos dB so that's kind of like a document that represents their claim",
    "start": "3431310",
    "end": "3437820"
  },
  {
    "text": "settlement so further down the line the customer says actually no I want seven thousand pounds not five and it's like",
    "start": "3437820",
    "end": "3443550"
  },
  {
    "text": "well now you hit accept and we've got a digital signature that signing this document that proves you said it was",
    "start": "3443550",
    "end": "3449670"
  },
  {
    "text": "okay to pay five thousand pounds yeah so that signature gives you proof of that",
    "start": "3449670",
    "end": "3456180"
  },
  {
    "text": "document digital syncs has also valid in many courts in a lot of countries so if it ever went to courts and you've got a",
    "start": "3456180",
    "end": "3462270"
  },
  {
    "text": "valid digital signature for that document that says you're gonna pay five thousand pounds not seven that will stand up in court that's kind of a",
    "start": "3462270",
    "end": "3469970"
  },
  {
    "text": "example of where we use this and as you",
    "start": "3469970",
    "end": "3476280"
  },
  {
    "text": "seen here it's just a few lines of codes to create and verify the signature so again we come in we create our key",
    "start": "3476280",
    "end": "3484430"
  },
  {
    "text": "I have my document which is just a string in this case I hash out documents and then I can call out to the key",
    "start": "3485750",
    "end": "3491900"
  },
  {
    "text": "vaults to sign the document so this by trading is now my digital signature and",
    "start": "3491900",
    "end": "3497540"
  },
  {
    "text": "then I can go and verify that digital signature and it returns true so let's",
    "start": "3497540",
    "end": "3503660"
  },
  {
    "text": "for example do that again let's create the digital signature so let's now",
    "start": "3503660",
    "end": "3515800"
  },
  {
    "text": "change the hash so it's imagine that I've changed the document and I've recreated a new hash saw now you know",
    "start": "3515800",
    "end": "3521270"
  },
  {
    "text": "falsifying that document so let's just change one of the values here so now",
    "start": "3521270",
    "end": "3527570"
  },
  {
    "text": "that hash isn't going to match with that digital signature when I go to verify it because I've changed a document I've",
    "start": "3527570",
    "end": "3532700"
  },
  {
    "text": "asked for 7,000 pounds instead of 5,000 so if we now go and verify their",
    "start": "3532700",
    "end": "3537920"
  },
  {
    "text": "signature on the key volt it's going to come back and say false because we know that that signature doesn't match the",
    "start": "3537920",
    "end": "3543380"
  },
  {
    "text": "data that we signed it with okay so",
    "start": "3543380",
    "end": "3551930"
  },
  {
    "text": "those are the six patterns I wanted to cover I've been literally just about to run out of time so let's do the summary",
    "start": "3551930",
    "end": "3558220"
  },
  {
    "text": "so we started off by saying you know data breaches are inevitable they're going to happen to everyone at some",
    "start": "3558220",
    "end": "3563869"
  },
  {
    "text": "point probably the numbers getting bigger doesn't really surprise me the bit that does surprise me is the fact",
    "start": "3563869",
    "end": "3569390"
  },
  {
    "text": "that we've got four percent of those data breaches with secure data breaches so we want that number to be higher if",
    "start": "3569390",
    "end": "3575540"
  },
  {
    "text": "your data get stolen from your company you want data to be encrypted so they're",
    "start": "3575540",
    "end": "3580820"
  },
  {
    "text": "inevitable you need to get into a mindset change if it's not if it's when it's going to happen and to solve this",
    "start": "3580820",
    "end": "3588080"
  },
  {
    "text": "problem we've used as your key volts as a way of protecting our keys and doing RSA encryption on the key volts as well",
    "start": "3588080",
    "end": "3596950"
  },
  {
    "text": "Microsoft does like using the thala same shield connects hardware so they've taken the hit on buying these things and",
    "start": "3596950",
    "end": "3602630"
  },
  {
    "text": "I get a face if you rent them out to us for not lots of money very easy to set",
    "start": "3602630",
    "end": "3608480"
  },
  {
    "text": "up so the all the key documentation starts without address there there dr. tation is actually pretty good for key",
    "start": "3608480",
    "end": "3613880"
  },
  {
    "text": "volt which is a which may to change",
    "start": "3613880",
    "end": "3618400"
  },
  {
    "text": "and we looked at six broad patterns so multiple environments you said that you don't want to share key vault instances",
    "start": "3619250",
    "end": "3625740"
  },
  {
    "text": "from production with other environments you want to have separate instances configuration secrets is about storing",
    "start": "3625740",
    "end": "3632670"
  },
  {
    "text": "secrets on the key vault so it works as a key value pair store so you can store database passwords API key securely on",
    "start": "3632670",
    "end": "3639510"
  },
  {
    "text": "the key volts to make your config files local key wrapping was a technique where we do AES encryption locally but we've",
    "start": "3639510",
    "end": "3646590"
  },
  {
    "text": "protects our AES keys using the key vault which means not only do we have",
    "start": "3646590",
    "end": "3651720"
  },
  {
    "text": "faster encryption locally but we're also reducing the number of network hops to the key vault which keeps the cost down",
    "start": "3651720",
    "end": "3658130"
  },
  {
    "text": "key versioning as well so we talked about the fact that you can using that key wrapping technique it makes it very",
    "start": "3658130",
    "end": "3663660"
  },
  {
    "text": "easy to rotate keys and change keys because you only have to re-encrypt that AES key locally you don't have to",
    "start": "3663660",
    "end": "3669510"
  },
  {
    "text": "re-encrypt all of your data which is quite nice we looked at some techniques for password hashing and we looked at the",
    "start": "3669510",
    "end": "3676800"
  },
  {
    "text": "part of a base key derivation function but using the key volt we can go one step further and we can hash out say we",
    "start": "3676800",
    "end": "3683520"
  },
  {
    "text": "can encrypt our salt values and we can store the number of iterations value as a secret if we want so it just gives out",
    "start": "3683520",
    "end": "3688770"
  },
  {
    "text": "that extra little veneer of security and then we finally looks at digital",
    "start": "3688770",
    "end": "3694680"
  },
  {
    "text": "signatures and how easy they are to create with the key volts so I've",
    "start": "3694680",
    "end": "3700470"
  },
  {
    "text": "covered quite a lot quite quickly if you are interested in using this please feel free to take the sample code and have a",
    "start": "3700470",
    "end": "3706980"
  },
  {
    "text": "play around with it each application is completely self-contained so it should be nice and easy to run the demo key",
    "start": "3706980",
    "end": "3714090"
  },
  {
    "text": "volt that I've created for this I'll keep it up for money so you can use it to play around we've provided nobody abuses it starts sending ridiculous",
    "start": "3714090",
    "end": "3720420"
  },
  {
    "text": "amounts of keys to it I mean which case I will have to change the credentials",
    "start": "3720420",
    "end": "3725460"
  },
  {
    "text": "but you know there's one there that you can have a quick play around with if you want you don't have to go and create one just yet if you don't want to some",
    "start": "3725460",
    "end": "3734670"
  },
  {
    "text": "additional information so I've got a course on protocol practical cryptography and dotnet so if you want a",
    "start": "3734670",
    "end": "3741000"
  },
  {
    "text": "good IV over lock that dotnet and cryptography classes that course is a good place to start with and I've also",
    "start": "3741000",
    "end": "3747600"
  },
  {
    "text": "got a course called enterprise data encryption we've as you which took a higher level some of the stuff we talked at today obviously we've",
    "start": "3747600",
    "end": "3754099"
  },
  {
    "text": "gone into more depth here if we insert things like block chains I've done a course called blockchain principles and",
    "start": "3754099",
    "end": "3760549"
  },
  {
    "text": "practices which is kind of like a computer science class he talks about how the fundamental data structures and",
    "start": "3760549",
    "end": "3765949"
  },
  {
    "text": "algorithms operate in a blockchain so it gives you a kind of information about what these things actually are so when",
    "start": "3765949",
    "end": "3771349"
  },
  {
    "text": "your CEO turns around and says I want to blockchain you can actually understand a bit more about what they actually are",
    "start": "3771349",
    "end": "3777199"
  },
  {
    "text": "and what they mean and I've also got a book I've just released a very press called applied cryptography and dotnet",
    "start": "3777199",
    "end": "3783979"
  },
  {
    "text": "so it's there if anyone finds that sort fing useful so with that thank you very",
    "start": "3783979",
    "end": "3790459"
  },
  {
    "text": "much I think we're just on time so [Applause]",
    "start": "3790459",
    "end": "3796480"
  }
]