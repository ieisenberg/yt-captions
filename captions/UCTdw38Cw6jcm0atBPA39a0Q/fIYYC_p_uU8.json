[
  {
    "text": "okay right well I'm sure people will keep on walking in but we'll just let people do that that's absolutely fine um",
    "start": "3600",
    "end": "10160"
  },
  {
    "text": "so let me get started right then uh good morning welcome thank you very much for",
    "start": "10160",
    "end": "17400"
  },
  {
    "text": "making it over here uh I understand that you know you might have had a late night with the attendee party last night and",
    "start": "17400",
    "end": "24160"
  },
  {
    "text": "hopefully that has resulted in you having lots of energy this morning full of excitement for all the cool demo and",
    "start": "24160",
    "end": "30320"
  },
  {
    "text": "things that we're going to see in this talk today I think that's how it works um so my name's Steve and I am a",
    "start": "30320",
    "end": "37360"
  },
  {
    "text": "developer at Microsoft I work on the net team and I particularly focus on web",
    "start": "37360",
    "end": "43280"
  },
  {
    "text": "related stuff and that is what we are going to be focusing on today the web so",
    "start": "43280",
    "end": "49280"
  },
  {
    "text": "the web is uh is an enormous part of the software industry it's the biggest uh",
    "start": "49280",
    "end": "54399"
  },
  {
    "text": "deployed software platform in the world I would strongly expect that more developers are focused on the web than",
    "start": "54399",
    "end": "60359"
  },
  {
    "text": "anything else uh even though there's lots of hype in other areas the web is still a dominant Focus for developers so",
    "start": "60359",
    "end": "66960"
  },
  {
    "text": "hands up if you do something related to the web in some way today so yeah obviously it's just about everyone it's",
    "start": "66960",
    "end": "73280"
  },
  {
    "text": "certainly the great majority of people and since so many people are working in this area there's loads of change",
    "start": "73280",
    "end": "80320"
  },
  {
    "text": "happening all the time loads of innovation always new ways to do things",
    "start": "80320",
    "end": "85360"
  },
  {
    "text": "uh and that's cool it keeps us in jobs and uh it gives us new and improved ways to do things and that's kind of what",
    "start": "85360",
    "end": "91320"
  },
  {
    "text": "we're going to talk about today what's changing at the moment what the big trends and patterns are how web",
    "start": "91320",
    "end": "96799"
  },
  {
    "text": "development is likely to look over the next few years okay so in this talk just",
    "start": "96799",
    "end": "102759"
  },
  {
    "text": "to set your expectations there's kind of two main parts to it uh we're going to spend the first half or so maybe twoth",
    "start": "102759",
    "end": "108960"
  },
  {
    "text": "thirds looking at what you might call Web applications things that usually result in some kind of user interface in",
    "start": "108960",
    "end": "115399"
  },
  {
    "text": "a browser and we'll look at lots of different web Frameworks and look at what they're doing and how they're changing over time and then for the last",
    "start": "115399",
    "end": "123079"
  },
  {
    "text": "part of the talk we're going to think about the server a little bit more some stuff that's happening on the back end in the cloud and the way that other web",
    "start": "123079",
    "end": "129280"
  },
  {
    "text": "Technologies specifically web assembly could change the way that that is done I'm sure most of you have heard of web",
    "start": "129280",
    "end": "134920"
  },
  {
    "text": "assembly many of you may have heard of wazzy as well but I don't know whether you've heard that wazzy is going into",
    "start": "134920",
    "end": "140519"
  },
  {
    "text": "its version two or preview two at the moment which is very different from preview one so we're going to be looking",
    "start": "140519",
    "end": "145879"
  },
  {
    "text": "at what the big new ideas in Preview 2 are and how it's going to solve some of the big problems from preview one okay",
    "start": "145879",
    "end": "152760"
  },
  {
    "text": "so let's get started with web applications and web UI and to",
    "start": "152760",
    "end": "158040"
  },
  {
    "text": "understand this I find it helpful to have a bit of a timeline so we can see how things have been changing so we",
    "start": "158040",
    "end": "163680"
  },
  {
    "text": "could start right back from when the web was first invented right at the start of the '90s and how did we do web UI back",
    "start": "163680",
    "end": "171280"
  },
  {
    "text": "then well there was only one way to do it it was to render HTML from your server and so you would have some Pearl",
    "start": "171280",
    "end": "178000"
  },
  {
    "text": "or python or or not really python back then it would be pearl or PHP maybe aspet and they'd be running on your",
    "start": "178000",
    "end": "185040"
  },
  {
    "text": "server probably in a CGI bin directory and they would be emitting HTML it was all we knew we didn't have JavaScript we",
    "start": "185040",
    "end": "192120"
  },
  {
    "text": "didn't know any other way to do things um well JavaScript wasn't even invented",
    "start": "192120",
    "end": "197680"
  },
  {
    "text": "until most of the way through this and even after it was invented it was kind of nightmareish at that time I mean it's",
    "start": "197680",
    "end": "203120"
  },
  {
    "text": "great now but back then it was like an Abomination so people weren't really using it and they were just producing",
    "start": "203120",
    "end": "209799"
  },
  {
    "text": "HTML on the server of course people still do this today there nothing wrong with that and in fact you might be doing",
    "start": "209799",
    "end": "215000"
  },
  {
    "text": "more of this in the near future as well but by about 2005 people started to",
    "start": "215000",
    "end": "220319"
  },
  {
    "text": "outgrow this a little bit there was this whole movement called Web 2.0 where people were trying to make richer user",
    "start": "220319",
    "end": "226360"
  },
  {
    "text": "interfaces and to do that they had to start using JavaScript even though it was still not very good back then and so",
    "start": "226360",
    "end": "233200"
  },
  {
    "text": "libraries came along like jQuery which is still big today and that made it more",
    "start": "233200",
    "end": "238280"
  },
  {
    "text": "practical to build some bits of interactivity from your server rendered HTML pages but again people started to",
    "start": "238280",
    "end": "244840"
  },
  {
    "text": "outgrow this so by about 2010 people wanted things that were a bigger application and their jQuery code was",
    "start": "244840",
    "end": "252319"
  },
  {
    "text": "getting too messy they needed more structure and so we started to enter the early phase of client rendering so this",
    "start": "252319",
    "end": "258840"
  },
  {
    "text": "is where libraries brought patterns like MVC or mvvm into the browser with JavaScript and we had names like",
    "start": "258840",
    "end": "265320"
  },
  {
    "text": "angularjs and knockout backbone Ember that kind of thing and for about 5 years",
    "start": "265320",
    "end": "270759"
  },
  {
    "text": "that's how people were doing their like Cutting Edge web UI but again people",
    "start": "270759",
    "end": "275840"
  },
  {
    "text": "started to outgrow it because their apps got even bigger and these early client Frameworks they just weren't structured",
    "start": "275840",
    "end": "281800"
  },
  {
    "text": "well enough to write a really big application and the thing that really changed stuff is when react came along",
    "start": "281800",
    "end": "288000"
  },
  {
    "text": "in about 2015 I think that changed the rules of the game a little bit and that brought us into the modern era of client",
    "start": "288000",
    "end": "294400"
  },
  {
    "text": "side rendering with full bars and various other Frameworks came along after that to use some of the same ideas",
    "start": "294400",
    "end": "301520"
  },
  {
    "text": "okay so that's kind of where we are up until now but again we're starting to outgrow this and this time it's kind of",
    "start": "301520",
    "end": "307160"
  },
  {
    "text": "to do with the performance and compatibility because we're writing so much code that goes into the browser now",
    "start": "307160",
    "end": "313039"
  },
  {
    "text": "that it's starting to be a drag especially on lower end devices and some of these client side Frameworks are",
    "start": "313039",
    "end": "318479"
  },
  {
    "text": "starting to say hey there's this whole untapped resource here the server couldn't we run our client side Logic on",
    "start": "318479",
    "end": "325440"
  },
  {
    "text": "the server you know and so we're seeing the movement of Frameworks like react is now running on the server inside next or",
    "start": "325440",
    "end": "332199"
  },
  {
    "text": "view is running on the server inside no and various other Frameworks that are combining the power of the server and",
    "start": "332199",
    "end": "338199"
  },
  {
    "text": "the client in new ways and that's what we're going to spend quite a bit of time looking at this morning and how",
    "start": "338199",
    "end": "344080"
  },
  {
    "text": "different Frameworks are approaching that so the biggest idea in this space and there's various ideas but the",
    "start": "344080",
    "end": "350120"
  },
  {
    "text": "biggest one that we're going to start with is the idea of serers side rendering is the first class thing the",
    "start": "350120",
    "end": "355600"
  },
  {
    "text": "first thing that you're doing server side rendering for as much of your site as possible possible and then just",
    "start": "355600",
    "end": "360680"
  },
  {
    "text": "having bits of interactivity in little islands where it's required and we'll talk about the pros and cons of that in",
    "start": "360680",
    "end": "366240"
  },
  {
    "text": "a minute but let me just start with a demo because we all love seeing some demos okay so just in case you didn't",
    "start": "366240",
    "end": "371800"
  },
  {
    "text": "realize this is a technical keynote so uh there's not going to be that much slides there going to be mostly demos and code I hope you'll manage to follow",
    "start": "371800",
    "end": "378720"
  },
  {
    "text": "along some bits might be a bit Advanced but even if they are don't worry because I'll move quickly and we'll keep moving",
    "start": "378720",
    "end": "384880"
  },
  {
    "text": "on to new things and you can just pick up whenever we get to the next bit all right so let's have look at next and how",
    "start": "384880",
    "end": "391560"
  },
  {
    "text": "it users react on the server okay so let me just start up this application that I've got I'm going to move into my next",
    "start": "391560",
    "end": "398319"
  },
  {
    "text": "dashboard and do uh an mpm runev to get that started okay so the site that I'm",
    "start": "398319",
    "end": "404240"
  },
  {
    "text": "trying to build here is some sort of like management portal for people who run software development teams okay so",
    "start": "404240",
    "end": "411240"
  },
  {
    "text": "if you're a software engineering manager you'd want to know about like your staff and your projects and stuff like that and then I've got this dashboard page",
    "start": "411240",
    "end": "418000"
  },
  {
    "text": "over here and in side there uh we can see the status of the current bills uh we can see the issues that have been",
    "start": "418000",
    "end": "424199"
  },
  {
    "text": "filed and then my favorite bet is we can keep track of all the employees exactly how many lines of code they've written",
    "start": "424199",
    "end": "429960"
  },
  {
    "text": "today if they've been wasting any time and then we've got cameras pointing at them to detect their mood and uh you",
    "start": "429960",
    "end": "435879"
  },
  {
    "text": "know figure out how we should manage them so I call this surveillance driven development I think it's probably the",
    "start": "435879",
    "end": "441840"
  },
  {
    "text": "the future of Engineering Management I can't think of any drawbacks to it anyway so um we'll we'll get back to",
    "start": "441840",
    "end": "447960"
  },
  {
    "text": "this in a minute all right but first let's just see how this site is working and what we can do to improve it a little bit more okay so like I said this",
    "start": "447960",
    "end": "455360"
  },
  {
    "text": "is a server rendered site but it is built with react components so if we look over here in our code if we go into",
    "start": "455360",
    "end": "463000"
  },
  {
    "text": "uh our app and then our homepage here this is the code where we've got this to-do message and you can see the same",
    "start": "463000",
    "end": "469960"
  },
  {
    "text": "thing in the browser over here okay now even though this is a react component as you can see it's just producing server",
    "start": "469960",
    "end": "476879"
  },
  {
    "text": "rended HTML and there's no JavaScript for this going going down to the browser uh so if we want to see in our uh HTML",
    "start": "476879",
    "end": "483120"
  },
  {
    "text": "sources if we search for to-do colon you can see harder it's very difficult to",
    "start": "483120",
    "end": "488560"
  },
  {
    "text": "read but you know there we go there's the actual HTML that's been emitted from that specific component right there okay",
    "start": "488560",
    "end": "495759"
  },
  {
    "text": "so we can do server rendering and that's what happens by default so no scripts for components are going to the browser",
    "start": "495759",
    "end": "501840"
  },
  {
    "text": "by default but we can use other components as well let's say I've got this other component here called clock",
    "start": "501840",
    "end": "507919"
  },
  {
    "text": "which is going to display the current time so if I add that into my page then it's going to show the current time very",
    "start": "507919",
    "end": "513518"
  },
  {
    "text": "very precisely as you can see very useful okay and how does that work well it's just a standard react component uh",
    "start": "513519",
    "end": "521000"
  },
  {
    "text": "so it works with server rendering by default here's the markup that that's going to emit um but it's also aware of",
    "start": "521000",
    "end": "527600"
  },
  {
    "text": "whether it's running server side or client Side by default it just runs server side but if we want to we can",
    "start": "527600",
    "end": "533720"
  },
  {
    "text": "turn this into a client component and then the framework will send the code for it down to the client and it will",
    "start": "533720",
    "end": "539600"
  },
  {
    "text": "run on the client and as you can see if we're on the client we've got this set interval so we're going to update the",
    "start": "539600",
    "end": "544800"
  },
  {
    "text": "time as we go so to do that I'm just going to add this magic marker at the top use client and then when I go back",
    "start": "544800",
    "end": "551040"
  },
  {
    "text": "to the browser you'll see it now has sent the code for that component down to the browser so even though the rest of",
    "start": "551040",
    "end": "556480"
  },
  {
    "text": "the site is server rendered that one little island of it is rendered on the client interactively okay so that's kind",
    "start": "556480",
    "end": "564200"
  },
  {
    "text": "of the central idea in this sort of approach to web UI architecture",
    "start": "564200",
    "end": "570040"
  },
  {
    "text": "and the reasons why you might do that well there's quite a few actually um the most obvious one is that you're just",
    "start": "570040",
    "end": "575320"
  },
  {
    "text": "sending less code down to the browser we didn't have to send any code for the rest of our components other than the",
    "start": "575320",
    "end": "580800"
  },
  {
    "text": "clock just there so that reduces the load uh this can reduce your costs as well firstly it reduces obviously your",
    "start": "580800",
    "end": "587240"
  },
  {
    "text": "bandwidth costs but if you're using some framework like Blazer which either works with web assembly or a websocket",
    "start": "587240",
    "end": "593800"
  },
  {
    "text": "connection it can be advantageous not to have to use either of those if you don't need websockets or web assembly then",
    "start": "593800",
    "end": "599680"
  },
  {
    "text": "just don't you know just have HTML that can reduce your hosting costs it also",
    "start": "599680",
    "end": "604760"
  },
  {
    "text": "means that you can have better compatibility uh so if you're trying to have users with low-end mobile devices",
    "start": "604760",
    "end": "610959"
  },
  {
    "text": "maybe it's quite slow for them to download and execute large bundles of JavaScript so just playing HTML is going",
    "start": "610959",
    "end": "617399"
  },
  {
    "text": "to work better for them uh this one's a little bit funny I don't know if you'll agree with this but it means that as a",
    "start": "617399",
    "end": "623640"
  },
  {
    "text": "web developer you will spend more of your time thinking about traditional HTML Concepts CS rather than Concepts",
    "start": "623640",
    "end": "630880"
  },
  {
    "text": "that are specific to a UI framework so you won't think so much about react or view or whatever you'll think more about",
    "start": "630880",
    "end": "637320"
  },
  {
    "text": "HTML and how the web sort of intrinsically works so that gives you slightly more like Timeless and",
    "start": "637320",
    "end": "643240"
  },
  {
    "text": "transferable skills whether or not you like that and then finally of course it doesn't stop you from having as much",
    "start": "643240",
    "end": "648680"
  },
  {
    "text": "interactivity as you want and we've had this term Progressive enhancement for many years and now it's applying in this",
    "start": "648680",
    "end": "654519"
  },
  {
    "text": "new way uh with these Frameworks that can progressively enhance server rendered HTML with client side execution",
    "start": "654519",
    "end": "661600"
  },
  {
    "text": "Okay so we've just looked at nextjs which is built with react but there are many other Frameworks that are starting",
    "start": "661600",
    "end": "667800"
  },
  {
    "text": "to do the same thing most of them are tied to specific UI Frameworks like no",
    "start": "667800",
    "end": "673279"
  },
  {
    "text": "is the server framework for view spelit is the server framework for view Blazer is the server framework for Blazer it's",
    "start": "673279",
    "end": "680560"
  },
  {
    "text": "a bit confusing but it is and and so on we'll look at some of these others as we go and what I think is an interesting",
    "start": "680560",
    "end": "686680"
  },
  {
    "text": "thing to observe is that they're all kind of agreeing with each other about what sort of features are needed for",
    "start": "686680",
    "end": "692320"
  },
  {
    "text": "this architecture to be effective so let's have a look at each of these four features and how they show up in",
    "start": "692320",
    "end": "698480"
  },
  {
    "text": "different Frameworks and what what accomplish what they accomplish but also I don't want you to think of these frame",
    "start": "698480",
    "end": "704320"
  },
  {
    "text": "these features as just magic I want you to understand how they actually work inside so for some of them I'll show you",
    "start": "704320",
    "end": "709519"
  },
  {
    "text": "how you could implement it yourself with a bit of JavaScript without even needing to have any kind of third party framework all right so we've already",
    "start": "709519",
    "end": "716560"
  },
  {
    "text": "looked at server side rendering uh and that's that's kind of easy to understand we take stuff that would normally run on",
    "start": "716560",
    "end": "722079"
  },
  {
    "text": "the client but we run it on the server now there's also a slightly more advanced version of that called",
    "start": "722079",
    "end": "727200"
  },
  {
    "text": "streaming serice side rendering and the point of this is to overcome one of the",
    "start": "727200",
    "end": "732399"
  },
  {
    "text": "limitations of traditional serice side rendering and that's to do with the first load performance so let me show",
    "start": "732399",
    "end": "738440"
  },
  {
    "text": "you that I'm going to continue showing you that in next for now before we switch to another framework so let's go",
    "start": "738440",
    "end": "743519"
  },
  {
    "text": "back to our dashboard okay so I'm going to click on this link and I'm waiting just waiting for it to Lo right now",
    "start": "743519",
    "end": "750120"
  },
  {
    "text": "still waiting ah there we go it finally shows up good now if I click on reload again I reload and I'm waiting and I'm",
    "start": "750120",
    "end": "755920"
  },
  {
    "text": "still waiting still waiting okay there we go so why does that take so long to load let's have a look at the code",
    "start": "755920",
    "end": "761839"
  },
  {
    "text": "inside there all right so this is the code for the team activity page and you",
    "start": "761839",
    "end": "766880"
  },
  {
    "text": "can see the place where it gets its data from is by making this call to a backend",
    "start": "766880",
    "end": "772199"
  },
  {
    "text": "service and that takes a little bit of time because you know it has to check in with all the cameras and the AI systems and things like that so we have to wait",
    "start": "772199",
    "end": "779199"
  },
  {
    "text": "while this is happening and that's one drawback with traditional server rendering is that you have to do all of",
    "start": "779199",
    "end": "784519"
  },
  {
    "text": "your API or database calls before you can render the HTML but with streaming rendering we can overcome that so let me",
    "start": "784519",
    "end": "791519"
  },
  {
    "text": "show you how this has approached in next firstly okay so here is our page for the dashboard and you can see we've got the",
    "start": "791519",
    "end": "797880"
  },
  {
    "text": "team activity in there and inside react there is this component called suspense",
    "start": "797880",
    "end": "803920"
  },
  {
    "text": "okay and suspense means don't wait for this thing to uh to finished loading",
    "start": "803920",
    "end": "810120"
  },
  {
    "text": "just display this fallback content while it's loading and then afterwards swap in",
    "start": "810120",
    "end": "815399"
  },
  {
    "text": "this content when it's ready all right now let's see what effect that has so now if I hit the reload button we wait a",
    "start": "815399",
    "end": "821959"
  },
  {
    "text": "moment for other stuff to load but then instead of waiting for team activity did you see we just saw a little spinner",
    "start": "821959",
    "end": "827480"
  },
  {
    "text": "instead while that came up so that's a slightly faster page load or it feels it because you see the rest of the page",
    "start": "827480",
    "end": "833079"
  },
  {
    "text": "first and we don't have to just have one of these we could put suspense around all the slow parts of our site okay so",
    "start": "833079",
    "end": "839360"
  },
  {
    "text": "let's put one there and we'll put one round here as well and then let's go back zoom out a little bit reload now",
    "start": "839360",
    "end": "846440"
  },
  {
    "text": "you see we get three independent Spinners and these three different parts of the site can load independently and",
    "start": "846440",
    "end": "852800"
  },
  {
    "text": "the user doesn't have to wait for the slowest Parts they can just start interacting with the site straight away",
    "start": "852800",
    "end": "858120"
  },
  {
    "text": "so that's pretty cool that improves the experience of server side rendering and",
    "start": "858120",
    "end": "863199"
  },
  {
    "text": "it's not specific to next actually most of these Frameworks have got an approach like that I'm going to show you how this",
    "start": "863199",
    "end": "869959"
  },
  {
    "text": "is done in Blazer now now if you don't know Blazer Blazer is a web UI framework",
    "start": "869959",
    "end": "875120"
  },
  {
    "text": "for net uh I know there's a lot of net people here so I think most of you probably will have heard of it but even",
    "start": "875120",
    "end": "880399"
  },
  {
    "text": "if you haven't or if you don't like it for some reason whatever it doesn't matter uh just think of it as an illustration of various Concepts here",
    "start": "880399",
    "end": "887600"
  },
  {
    "text": "I'm going to show it quite a bit because it just so happens that I work on Blazer so this is very convenient for me um so",
    "start": "887600",
    "end": "893800"
  },
  {
    "text": "we need a scenario for our Blazer application let's think of some kind of web application that we might want to",
    "start": "893800",
    "end": "899320"
  },
  {
    "text": "build I've actually got an absolutely amazing idea which I love it's brilliant and I can't believe that no one has",
    "start": "899320",
    "end": "905279"
  },
  {
    "text": "thought of this before uh it is my idea so don't steal it okay so what this is about is the following okay so has",
    "start": "905279",
    "end": "913199"
  },
  {
    "text": "anyone ever heard of this okay this is a TV show called Twin Peaks from the 1990s",
    "start": "913199",
    "end": "919360"
  },
  {
    "text": "people heard of it no okay a few people have heard of it all right so cult classic TV show from the '90s it doesn't",
    "start": "919360",
    "end": "925720"
  },
  {
    "text": "matter if you've never heard of it all right it's just a TV show and in this show people drink quite a lot of coffee",
    "start": "925720",
    "end": "931959"
  },
  {
    "text": "okay anyone ever heard of coffee okay yeah all right well it doesn't matter even if you never heard of it all right",
    "start": "931959",
    "end": "937160"
  },
  {
    "text": "it's just a drink and it shows up a lot in this TV show and having these two things together is of course incredible",
    "start": "937160",
    "end": "944120"
  },
  {
    "text": "and Brilliant and I think I can make a lot of money by making a web application that allows people to keep track of when",
    "start": "944120",
    "end": "950240"
  },
  {
    "text": "people drink coffee in Twin Peaks right obvious business success there so let me",
    "start": "950240",
    "end": "955759"
  },
  {
    "text": "show you what I've started building already here's my site coffees of Twin Peaks okay and this allows us to keep",
    "start": "955759",
    "end": "962079"
  },
  {
    "text": "track of when people had coffee right from the very first episode with that heartwarming moment where Laura Palmer",
    "start": "962079",
    "end": "967759"
  },
  {
    "text": "got killed right down to the very final heartwarming moment where Cooper gets attacked while drinking coffee okay and",
    "start": "967759",
    "end": "974319"
  },
  {
    "text": "all the other coffee moments that we know and love from the years it's making me tear up a little bit okay all right",
    "start": "974319",
    "end": "980800"
  },
  {
    "text": "so we can also do things like we can search for particular Series in there let's say we just want to know about",
    "start": "980800",
    "end": "986319"
  },
  {
    "text": "Series 3 or maybe we want to know about all the times where someone has been eating a donut while drinking coffee and",
    "start": "986319",
    "end": "992920"
  },
  {
    "text": "we can see that it's all the law enforcement agents so you know some good cliches in there excellent all right so",
    "start": "992920",
    "end": "998519"
  },
  {
    "text": "we're going to build uh some good features into our coffees of Twin Peaks app starting with streaming rendering so",
    "start": "998519",
    "end": "1006040"
  },
  {
    "text": "you may have noticed that when I first arrived here it took a moment to load so we just wait about one second or so or",
    "start": "1006040",
    "end": "1011800"
  },
  {
    "text": "whatever fake deal I have put in for it to for it to make sense okay and when I click on this button here again let's",
    "start": "1011800",
    "end": "1017759"
  },
  {
    "text": "just change this I'll click on clear and we wait and then it shows up all right so we're waiting a moment for some",
    "start": "1017759",
    "end": "1023000"
  },
  {
    "text": "database call to complete and we could make this feel a bit faster to the user by enabling streaming rendering so let's",
    "start": "1023000",
    "end": "1030438"
  },
  {
    "text": "do that okay so I'm switching over to a different vs code window I'm using this nice solution Explorer that's just",
    "start": "1030439",
    "end": "1036199"
  },
  {
    "text": "become available in the last week or two pretty cool way of working with net nvs code and I'm going to go into my search",
    "start": "1036199",
    "end": "1043360"
  },
  {
    "text": "page here okay and this is where at the top we've got this form with the search control",
    "start": "1043360",
    "end": "1049039"
  },
  {
    "text": "below that we're trying to show the results if we've got some and down here this is where we do a call to the",
    "start": "1049039",
    "end": "1054240"
  },
  {
    "text": "database now in Blazer there is no suspense component it doesn't need one because net has already got a pretty",
    "start": "1054240",
    "end": "1060559"
  },
  {
    "text": "robust and well understood system of using tasks to represent a synchronic so if we want to enable streaming rendering",
    "start": "1060559",
    "end": "1067200"
  },
  {
    "text": "on this component all we do is we just add an attribute of stream rendering",
    "start": "1067200",
    "end": "1072520"
  },
  {
    "text": "okay and then hopefully we should see some slightly nicer Behavior so when I'm back here and I click reload you'll see",
    "start": "1072520",
    "end": "1078880"
  },
  {
    "text": "I see the loading State while we're loading or if I click on the search we see loading and the way that works is",
    "start": "1078880",
    "end": "1085039"
  },
  {
    "text": "very simple uh it's simply that when the page starts it's going to do this call uh to the database and it's asynchronous",
    "start": "1085039",
    "end": "1091799"
  },
  {
    "text": "so the results will initially be null and then in the rendering logic if the results are currently null we'll say",
    "start": "1091799",
    "end": "1097440"
  },
  {
    "text": "loading otherwise we'll display the results below okay so pretty straightforwards and that's how you",
    "start": "1097440",
    "end": "1103080"
  },
  {
    "text": "would have built your component anyway even uh before we started switching to streaming render",
    "start": "1103080",
    "end": "1109320"
  },
  {
    "text": "so uh inet 8 Blazer is doing uh server rendering by default so inside my UI",
    "start": "1109320",
    "end": "1115840"
  },
  {
    "text": "here I am not using websockets I am not using web assembly this is just plain HTML going from my server into the",
    "start": "1115840",
    "end": "1123120"
  },
  {
    "text": "browser and so I don't have interactive features but I do have the ability to do things like streaming rendering okay now",
    "start": "1123120",
    "end": "1130679"
  },
  {
    "text": "how does this actually work on the inside so far I've made it just look like magic let's see how it's not magic",
    "start": "1130679",
    "end": "1136720"
  },
  {
    "text": "and how you could in fact Implement your own streaming rendering without even using any framework features so to do",
    "start": "1136720",
    "end": "1142720"
  },
  {
    "text": "that I'm going to do it in C I'm going to switch over to my main program CS file and I'm going to start writing a",
    "start": "1142720",
    "end": "1148080"
  },
  {
    "text": "very sort of basic retro version of streaming and then we'll make it a bit better as we go all right so I've got an",
    "start": "1148080",
    "end": "1154559"
  },
  {
    "text": "end point on my server now which is going to uh start by it's going to do a",
    "start": "1154559",
    "end": "1159880"
  },
  {
    "text": "loop and then on each iteration it's going to write hello uh to the response and then it'll wait a little bit and",
    "start": "1159880",
    "end": "1166120"
  },
  {
    "text": "then it will do the same thing again so if I go to this endpoint in my browser now then we'll see that it says hello 0",
    "start": "1166120",
    "end": "1173679"
  },
  {
    "text": "1 2 3 and so on right there's no magic or special thing going on here that's just a slow HTTP response and we can see",
    "start": "1173679",
    "end": "1181520"
  },
  {
    "text": "it even more clearly if we do the same thing in curl so if I go to my command",
    "start": "1181520",
    "end": "1187120"
  },
  {
    "text": "prompt and make a request to that you can see no magic it's just a slow HTTP",
    "start": "1187120",
    "end": "1192600"
  },
  {
    "text": "response and that's how we could add content to the page incrementally without needing uh uh to switch over to",
    "start": "1192600",
    "end": "1199559"
  },
  {
    "text": "client stand rendering but how can we update content that's already there well",
    "start": "1199559",
    "end": "1204799"
  },
  {
    "text": "not too hard actually let's just add a little bit of extra code in here so I'm going to do um not that and firstly I'm",
    "start": "1204799",
    "end": "1213559"
  },
  {
    "text": "going to set the response content type so the browser really knows this is HTML going to produce a bit of markup that",
    "start": "1213559",
    "end": "1219200"
  },
  {
    "text": "says hello the time is and then I'm just going to display a loading state in there all right so right now it says the",
    "start": "1219200",
    "end": "1226039"
  },
  {
    "text": "time is loading and it just does the all this other stuff okay now what time do I",
    "start": "1226039",
    "end": "1231120"
  },
  {
    "text": "want to put into here or what content do I want to add to the page well I'm going to add a little bit of content on each",
    "start": "1231120",
    "end": "1237799"
  },
  {
    "text": "Loop of this iteration okay so on each Loop I'm going to emit a block of",
    "start": "1237799",
    "end": "1242960"
  },
  {
    "text": "template content which contains the markup that I want the time that is inside a bold tag and then I'm going to",
    "start": "1242960",
    "end": "1249480"
  },
  {
    "text": "say where I want it to go in the UI so I'm going to use this custom element called ad streaming block and I'll say I",
    "start": "1249480",
    "end": "1255200"
  },
  {
    "text": "want this content to go into the thing with the CSS selector hash time so that's this thing with the ID time now",
    "start": "1255200",
    "end": "1262200"
  },
  {
    "text": "template does not get rendered in the browser by default so if I reload over here you won't see that anything has",
    "start": "1262200",
    "end": "1268600"
  },
  {
    "text": "changed but if I did this in curl you will see that this markup is in fact",
    "start": "1268600",
    "end": "1274080"
  },
  {
    "text": "going to the browser so all I have to do now is add a little bit of standard framework script that makes that uh",
    "start": "1274080",
    "end": "1281960"
  },
  {
    "text": "element cause this content to go into the Dom okay so I can do that with a bit of script like follow",
    "start": "1281960",
    "end": "1288679"
  },
  {
    "text": "okay so I'm defining a meaning for the ad streaming block element here and I'm",
    "start": "1288679",
    "end": "1294080"
  },
  {
    "text": "saying that when this element gets connected to the page we'll find the content that's in the previous template",
    "start": "1294080",
    "end": "1300080"
  },
  {
    "text": "element we'll figure out where we want it to go in the page based on that attribute and then we'll use this very",
    "start": "1300080",
    "end": "1305679"
  },
  {
    "text": "basic technique for just updating the content in that part of the page a real implementation would be a bit more",
    "start": "1305679",
    "end": "1311360"
  },
  {
    "text": "sophisticated but this gives you the core idea so now if I go back over here and reload then you'll see while it's",
    "start": "1311360",
    "end": "1317720"
  },
  {
    "text": "loading that this clock is updating uh and we didn't have to switch over to full client side rendering it's still server",
    "start": "1317720",
    "end": "1324320"
  },
  {
    "text": "rendering and the only script is just some standard thing that could be part of a framework so that's really all",
    "start": "1324320",
    "end": "1330480"
  },
  {
    "text": "there is to it it's not magic and that is how we're able to do things like this where different parts of the page uh get",
    "start": "1330480",
    "end": "1337279"
  },
  {
    "text": "updated with content while it's loading okay so hopefully that gives you some intuition for how this could actually",
    "start": "1337279",
    "end": "1343720"
  },
  {
    "text": "work all right so that is streaming rendering right now let's move on and",
    "start": "1343720",
    "end": "1349320"
  },
  {
    "text": "talk a bit about another feature so enhanced navigation this is designed to",
    "start": "1349320",
    "end": "1354720"
  },
  {
    "text": "overcome another one of the limitations of traditional server rendering so with",
    "start": "1354720",
    "end": "1359840"
  },
  {
    "text": "traditional server rendering each time the user clicks on a link the browser throws away the entire page completely",
    "start": "1359840",
    "end": "1365919"
  },
  {
    "text": "loses all its state and then fetches the new page entirely from scratch including any content any static resources that it",
    "start": "1365919",
    "end": "1372400"
  },
  {
    "text": "references except if they're cashed so you're losing all your state and you get this kind of jarring experience each",
    "start": "1372400",
    "end": "1378200"
  },
  {
    "text": "time you go from one page to another client rendering is a bit more efficient because it doesn't have to fetch",
    "start": "1378200",
    "end": "1383240"
  },
  {
    "text": "everything again uh each time you navigate so it could we get the benefits of client rendering even when we're",
    "start": "1383240",
    "end": "1388559"
  },
  {
    "text": "doing server rendering okay so I'm going to show you this now from the perspective of another framework called",
    "start": "1388559",
    "end": "1393919"
  },
  {
    "text": "spel kit because I think that's the one that uses this term enhan now first and they perhaps do quite a lot with it so",
    "start": "1393919",
    "end": "1400559"
  },
  {
    "text": "spel kit is a server side framework for working with spelt which is another",
    "start": "1400559",
    "end": "1405880"
  },
  {
    "text": "client rendering technology and I'm going to start up a spelt application just now ignore that warning it's",
    "start": "1405880",
    "end": "1412720"
  },
  {
    "text": "irrelevant all right now this spelt application is basically just the default project templates for spelt okay",
    "start": "1412720",
    "end": "1419200"
  },
  {
    "text": "it's got this kind of counter example it's got an about page it's got a Wordle clone for some reason and then it's got",
    "start": "1419200",
    "end": "1425720"
  },
  {
    "text": "a to-do page everyone needs to have a to-do example in their demos right let's focus on how this page actually loads so",
    "start": "1425720",
    "end": "1433240"
  },
  {
    "text": "let's have a look at the browser network Tab and when I reload if you look in the the bottom left corner there if you can",
    "start": "1433240",
    "end": "1439520"
  },
  {
    "text": "see we've done 64 requests to load this page uh it's not optimized because this is just a Dev build but you get the",
    "start": "1439520",
    "end": "1445360"
  },
  {
    "text": "point that it's loaded a load of static content in order to make this page work and every time I reload it's going to do",
    "start": "1445360",
    "end": "1451120"
  },
  {
    "text": "those 64 requests again but what does it do when I submit this form so let's type",
    "start": "1451120",
    "end": "1456720"
  },
  {
    "text": "in um hey NDC and I'll press enter on there okay well if you see in the bottom",
    "start": "1456720",
    "end": "1462880"
  },
  {
    "text": "left it's done another 63 requests well it's cached one thing but everything else has been reloaded okay why did it",
    "start": "1462880",
    "end": "1469760"
  },
  {
    "text": "do that well because this is just a plain traditional server rendered HTML form so every time you post it it's",
    "start": "1469760",
    "end": "1475919"
  },
  {
    "text": "going to throw everything away and start again from scratch now we can do a little bit better with enhanced",
    "start": "1475919",
    "end": "1481679"
  },
  {
    "text": "navigation so let's go and see the code for that and how we could make it a little bit more efficient so over here",
    "start": "1481679",
    "end": "1489240"
  },
  {
    "text": "in my spelt code uh inside the to-do page here we go right here's the HTML",
    "start": "1489240",
    "end": "1494559"
  },
  {
    "text": "form that you just saw okay and in spel there's a bit of syntax that we can add",
    "start": "1494559",
    "end": "1500000"
  },
  {
    "text": "called use enhance and that tells spelt to upgrade the server rendered form with",
    "start": "1500000",
    "end": "1505799"
  },
  {
    "text": "some Progressive enhancement so that it can evaluate itself client side without reloading the page even though you don't",
    "start": "1505799",
    "end": "1511600"
  },
  {
    "text": "have to change the rest of your code right so let's have a look at what happens now so again I'm going to reload",
    "start": "1511600",
    "end": "1517080"
  },
  {
    "text": "and I've done 64 requests let's clear that out and now I'm going to type in another thing and I'll press enter and",
    "start": "1517080",
    "end": "1523000"
  },
  {
    "text": "we'll see this time it didn't do 60-some requests it just did two requests and those requests in fact are now fetch",
    "start": "1523000",
    "end": "1530720"
  },
  {
    "text": "requests so some standard code that spelt provides is evaluating that form",
    "start": "1530720",
    "end": "1536320"
  },
  {
    "text": "submission using JavaScript and fetch we don't have to change our code as a developer uh but now we get the benefit",
    "start": "1536320",
    "end": "1543360"
  },
  {
    "text": "of not having to reload this page each time the form is submitted and it can do other cool things like retain Dom",
    "start": "1543360",
    "end": "1548880"
  },
  {
    "text": "elements as well so let me show you that again from the perspective of another framework and we're going to go back to",
    "start": "1548880",
    "end": "1554919"
  },
  {
    "text": "Blazer now and this will allow me to show you that it's not just about performance but it's also about",
    "start": "1554919",
    "end": "1561240"
  },
  {
    "text": "practical user experience details as well so let's go back to our search form",
    "start": "1561240",
    "end": "1566480"
  },
  {
    "text": "here okay and you might have noticed that I've got this Advanced option up here and when I open that I can now",
    "start": "1566480",
    "end": "1572880"
  },
  {
    "text": "search for coffee at specific locations like yummy crime coffee here we go all",
    "start": "1572880",
    "end": "1578200"
  },
  {
    "text": "right so here's some nice crime coffee but notice that the um Advanced checkbox has become unchecked why is that I",
    "start": "1578200",
    "end": "1584760"
  },
  {
    "text": "didn't uncheck it who did it let's try again I'll open it and I'll click submit and oh it just becomes unchecked again",
    "start": "1584760",
    "end": "1590880"
  },
  {
    "text": "that's kind of annoying is it a bug well it's not really a bug it's because each time we submit this HTML form it's going",
    "start": "1590880",
    "end": "1598159"
  },
  {
    "text": "to throw the page State away and create a new page and it you know by default that that box is just unchecked I could",
    "start": "1598159",
    "end": "1604240"
  },
  {
    "text": "write a bunch of code manually to keep track of the state of that but that's a pain I'd like to do this in an easier",
    "start": "1604240",
    "end": "1609799"
  },
  {
    "text": "way an enhanced navigation gives us a way of doing that so let's go over to the code for that all right here is my",
    "start": "1609799",
    "end": "1617720"
  },
  {
    "text": "my uh search form again remember we saw this earlier and in Blazer the syntax",
    "start": "1617720",
    "end": "1622760"
  },
  {
    "text": "that we want is data- enhance which you have to spell with a h all right and",
    "start": "1622760",
    "end": "1628480"
  },
  {
    "text": "that is going to tell Blazer that yes even though this is a server rendered form I want you to progressively upgrade",
    "start": "1628480",
    "end": "1634880"
  },
  {
    "text": "this to execute client side if the script's available all right so now let's reload and see what happens okay",
    "start": "1634880",
    "end": "1641799"
  },
  {
    "text": "so I'm going to open my Advan box and I'm going to click submit and you'll notice that this time it does not un",
    "start": "1641799",
    "end": "1647600"
  },
  {
    "text": "check itself because we can Mark specific parts of the page to preserve their state across these enhanced",
    "start": "1647600",
    "end": "1653720"
  },
  {
    "text": "navigations and just for completeness I'll show you we're doing 14 requests when this page first starts up but if I",
    "start": "1653720",
    "end": "1660799"
  },
  {
    "text": "submit the enhanced form you see it only does exactly one request it's just doing a single fetch request uh with the data",
    "start": "1660799",
    "end": "1668080"
  },
  {
    "text": "from that form and then updating the UI in place so it's more efficient all",
    "start": "1668080",
    "end": "1673200"
  },
  {
    "text": "right now once again it is not magic it's a thing that you could just implement yourself if you want to so",
    "start": "1673200",
    "end": "1679720"
  },
  {
    "text": "since you're an advanced Bunch let's have a go at doing that even though it's a bit of an advanced thing to do we'll",
    "start": "1679720",
    "end": "1685600"
  },
  {
    "text": "Implement our own enhanced navigation right so what I'm going to do is firstly",
    "start": "1685600",
    "end": "1690799"
  },
  {
    "text": "I'm going to get rid of the enhanced navigation that Blazer provides so this is the standard Blazer uh. web.js script",
    "start": "1690799",
    "end": "1697559"
  },
  {
    "text": "that implements all this stuff let's just delete it even though I strongly don't recommend that normally now I am",
    "start": "1697559",
    "end": "1703600"
  },
  {
    "text": "back to having a plain server ended site that's got no enhancements at all and I've got these other pages I can",
    "start": "1703600",
    "end": "1709880"
  },
  {
    "text": "navigate around between my other pages okay and that still works fine so I've got this chat we'll look at the chat",
    "start": "1709880",
    "end": "1715320"
  },
  {
    "text": "more in a minute uh navigation is working fine but this is just traditional HTML navigation where it's",
    "start": "1715320",
    "end": "1721000"
  },
  {
    "text": "uh throwing away the entire page each time I click a link so you can see I've done these 12 requests here uh when I",
    "start": "1721000",
    "end": "1726760"
  },
  {
    "text": "click on the chat link there it's now done another 12 requests because it's thrown everything away let's Implement",
    "start": "1726760",
    "end": "1733080"
  },
  {
    "text": "our own Progressive enhancement shall we we can do this with a little bit of script that's not too difficult to",
    "start": "1733080",
    "end": "1739679"
  },
  {
    "text": "understand okay let's get the right one okay so firstly we'll add a bit of JavaScript that intercepts any clicks",
    "start": "1739679",
    "end": "1747120"
  },
  {
    "text": "and we'll say was that a clink a click on a link if it was a click on a link",
    "start": "1747120",
    "end": "1752679"
  },
  {
    "text": "then instead of letting the navigation happen we'll prevent navigation and initially we're just going to do an",
    "start": "1752679",
    "end": "1758000"
  },
  {
    "text": "alert that says what link you clicked on okay let's go back over here and reload and now when I click in random places it",
    "start": "1758000",
    "end": "1765320"
  },
  {
    "text": "does nothing but if I click on a link it says oh you clicked on a link uh to slash merch but it hasn't updated the",
    "start": "1765320",
    "end": "1772279"
  },
  {
    "text": "URL look it's still on chat that's because I call prevent default right so let's make this work a bit more firstly",
    "start": "1772279",
    "end": "1778880"
  },
  {
    "text": "I do want to update the URL and so I'm going to do that by calling history. push State and then I'm",
    "start": "1778880",
    "end": "1786039"
  },
  {
    "text": "going to say I want to do my own enhanced navigation to this destination all right and my own enhanced navigation",
    "start": "1786039",
    "end": "1792600"
  },
  {
    "text": "is going to look like this I'm going to say do a fetch request to that URL to get whatever HTML was there we'll read",
    "start": "1792600",
    "end": "1799320"
  },
  {
    "text": "it as html text and at first we're just going to alert it onto the screen right let's try that so when I click on the",
    "start": "1799320",
    "end": "1805480"
  },
  {
    "text": "merch link now notice that your the URL does update but uh it doesn't update the",
    "start": "1805480",
    "end": "1811159"
  },
  {
    "text": "uh the actual UI it just alerts the contents of the HTML that's coming back from there okay so let's update the",
    "start": "1811159",
    "end": "1818320"
  },
  {
    "text": "contents of the Dom as well now uh I'm going to do this in a really naive and basic way a real implementation would",
    "start": "1818320",
    "end": "1824880"
  },
  {
    "text": "probably be more sophisticated but I'm just pausing the markup that comes back from the server and I'm just overwriting",
    "start": "1824880",
    "end": "1830399"
  },
  {
    "text": "the entire document body with it so let's try that out see how that goes and now as I navigate you'll see that it",
    "start": "1830399",
    "end": "1837360"
  },
  {
    "text": "does update both the URL and the contents of the page but without doing full page loads so if we look inside our",
    "start": "1837360",
    "end": "1845000"
  },
  {
    "text": "Network tab here uh so I've let's clear the the number of requests back down to",
    "start": "1845000",
    "end": "1850480"
  },
  {
    "text": "zero and then I'll click on this merch page here you'll see we've now done exactly one HTTP request which is a",
    "start": "1850480",
    "end": "1856880"
  },
  {
    "text": "fetch request for that merch page and everything else is updated okay so it's",
    "start": "1856880",
    "end": "1862639"
  },
  {
    "text": "not magic it's not that clever it's a pretty simple thing uh that you could do yourself and it just means that your",
    "start": "1862639",
    "end": "1868559"
  },
  {
    "text": "code your server ended application can be upgraded to feel a little bit more responsive to the user okay now let's",
    "start": "1868559",
    "end": "1875240"
  },
  {
    "text": "just get rid of all that stuff that I've done otherwise it's going to break the rest of my demos",
    "start": "1875240",
    "end": "1881320"
  },
  {
    "text": "okay right final thing that we're going to look at just now Interactive is you",
    "start": "1881320",
    "end": "1888039"
  },
  {
    "text": "probably think that we've already talked about this because that's where we started when we looked at the nextjs application and I showed you adding this",
    "start": "1888039",
    "end": "1894679"
  },
  {
    "text": "clock and we made it interactive but I want to show it to you from the perspective of a couple more Frameworks",
    "start": "1894679",
    "end": "1900559"
  },
  {
    "text": "um so firstly I'm just going to complete the story for Blazer and show you how it works there and then I'm going to show you how it works in Astro because that's",
    "start": "1900559",
    "end": "1906919"
  },
  {
    "text": "a bit different and I think that will be interesting to see the comparisons all right so for the Blazer application uh",
    "start": "1906919",
    "end": "1914360"
  },
  {
    "text": "I've got this chat page right here okay and like I've keep saying to you this is",
    "start": "1914360",
    "end": "1919399"
  },
  {
    "text": "not an interactive application it's just server rendered HTML so as I start typing stuff in here let's go to this",
    "start": "1919399",
    "end": "1925840"
  },
  {
    "text": "one I'll say yes the cup was empty okay",
    "start": "1925840",
    "end": "1930919"
  },
  {
    "text": "and notice that this number of characters remaining is not updating while I type we'll fix that in a minute",
    "start": "1930919",
    "end": "1936200"
  },
  {
    "text": "when I press send it does send and it does update the UI that's because it's just an old school HTML form it sends it",
    "start": "1936200",
    "end": "1942880"
  },
  {
    "text": "to the server it reloads the whole page and it renders the current chat thread into there so that's how that updates",
    "start": "1942880",
    "end": "1948639"
  },
  {
    "text": "but if I had two people on this site at once like let's say I'm here uh with a",
    "start": "1948639",
    "end": "1953880"
  },
  {
    "text": "different browser at the same time and I type in another message no it wasn't and",
    "start": "1953880",
    "end": "1959760"
  },
  {
    "text": "I hit send well it updates in this browser window but it doesn't update up here because why would it you know it's",
    "start": "1959760",
    "end": "1966360"
  },
  {
    "text": "just a static HTML page it's not going to update until this user manually reloads but we can fix that by upgrading",
    "start": "1966360",
    "end": "1974279"
  },
  {
    "text": "a particular island of our site to be intera active and like I said before",
    "start": "1974279",
    "end": "1979480"
  },
  {
    "text": "Blazer supports both web assembly and server uh via websockets modes and we",
    "start": "1979480",
    "end": "1984559"
  },
  {
    "text": "can enable those forms of interactivity for any page or any component subtree in",
    "start": "1984559",
    "end": "1990000"
  },
  {
    "text": "the site so let's go to our chat thread component this component is designed to",
    "start": "1990000",
    "end": "1995760"
  },
  {
    "text": "work in both server rendered or interactive modes in fact all Blazer components work in server rended modes",
    "start": "1995760",
    "end": "2001720"
  },
  {
    "text": "to some extent because they just render their initial HTML and that's what you get so in this case when this thing",
    "start": "2001720",
    "end": "2008279"
  },
  {
    "text": "starts up it gets all the messages from the chat service and then it's got a bit of logic that emits markup for all those",
    "start": "2008279",
    "end": "2014679"
  },
  {
    "text": "messages so that's all it has to do in a server rendered mode but if we were interactive we could do stuff like when",
    "start": "2014679",
    "end": "2021360"
  },
  {
    "text": "there's a keystroke we've also got this subscription to uh the not the chat service that will tell us to render uh",
    "start": "2021360",
    "end": "2028720"
  },
  {
    "text": "if uh new chat messages come in that's not going to do anything in a server rendered mode because the component will",
    "start": "2028720",
    "end": "2034159"
  },
  {
    "text": "just be disposed straight away but I'm going to turn this into an interactive component by adding a render mode and",
    "start": "2034159",
    "end": "2041240"
  },
  {
    "text": "I'm going to say interactive server I could also say web assembly I could say Auto which switches between the two",
    "start": "2041240",
    "end": "2047600"
  },
  {
    "text": "based on whether the resources are cached if I wanted to um but anyway I'm going to use server in this case and now",
    "start": "2047600",
    "end": "2054200"
  },
  {
    "text": "even though the rest of my site is server rendered this one particular part should now be fully interactive so as I",
    "start": "2054200",
    "end": "2061158"
  },
  {
    "text": "type hey you can see that the number of characters is updating on each keystroke",
    "start": "2061159",
    "end": "2066520"
  },
  {
    "text": "and if if I have multiple windows open uh then it's going to update the chat uh",
    "start": "2066520",
    "end": "2071720"
  },
  {
    "text": "in all the windows because it's got a live connection to the server via websockets all right so that's pretty",
    "start": "2071720",
    "end": "2078118"
  },
  {
    "text": "much what you probably would have expected if you know any Blazer but let me show you this now from the",
    "start": "2078119",
    "end": "2083358"
  },
  {
    "text": "perspective of Astro because Astro is unique among all these Frameworks in",
    "start": "2083359",
    "end": "2089240"
  },
  {
    "text": "that it isn't tied to any specific client rendering technology okay Astro",
    "start": "2089240",
    "end": "2094599"
  },
  {
    "text": "started out as a simple static site renderer with a bit of integration uh for client rendering but in the current",
    "start": "2094599",
    "end": "2101520"
  },
  {
    "text": "versions of it they've now got server rendering and various forms of progressive enhancement and the ability",
    "start": "2101520",
    "end": "2107160"
  },
  {
    "text": "to interact with multiple client rendering Technologies so let me show you that it allows us to do some stuff",
    "start": "2107160",
    "end": "2113040"
  },
  {
    "text": "that we wouldn't have done in the other Frameworks let's clear up it here a little bit and I'm going to start my",
    "start": "2113040",
    "end": "2119520"
  },
  {
    "text": "Astro demo which is there okay now I haven't made any",
    "start": "2119520",
    "end": "2127119"
  },
  {
    "text": "example here this is just the default project template again for Astro okay so",
    "start": "2127119",
    "end": "2132280"
  },
  {
    "text": "this is what you get by default the only thing I've added is this link here for exciting counters and if we go in here",
    "start": "2132280",
    "end": "2138440"
  },
  {
    "text": "you know it's going to prompt me to add some counters because everyone loves counters in their web development demos",
    "start": "2138440",
    "end": "2144560"
  },
  {
    "text": "let's look at the source code for that uh that's inside here inside here and",
    "start": "2144560",
    "end": "2150520"
  },
  {
    "text": "here and here right now what is this syntax here is this react is this view",
    "start": "2150520",
    "end": "2156480"
  },
  {
    "text": "no it's none of those it's just Astro's own built-in HTML templating and",
    "start": "2156480",
    "end": "2162319"
  },
  {
    "text": "component system which only supports server rendering so this is just plain server rendered HTML but notice in this",
    "start": "2162319",
    "end": "2169400"
  },
  {
    "text": "components directory over here I've also got a react counter and a view counter",
    "start": "2169400",
    "end": "2175000"
  },
  {
    "text": "as you can guess the react counter is implemented in react here with these Hooks and onclick there and the view",
    "start": "2175000",
    "end": "2182119"
  },
  {
    "text": "counter is pretty much the exact same thing but implemented in view so those are just two different client rendering",
    "start": "2182119",
    "end": "2188040"
  },
  {
    "text": "Technologies and now on my counters page if I want to I can add a react counter",
    "start": "2188040",
    "end": "2195200"
  },
  {
    "text": "and you can see the tooling has automatically imported that for me there so I'll press save come back and I've",
    "start": "2195200",
    "end": "2200640"
  },
  {
    "text": "got my react counter now which is server rendered and if I click on this increment button it does not do anything",
    "start": "2200640",
    "end": "2207119"
  },
  {
    "text": "because it's just server rendered okay we'll fix that in a sec what about adding a view counter as well to see",
    "start": "2207119",
    "end": "2213440"
  },
  {
    "text": "that we can have two different client Technologies as well well yeah that also works and it also does not work because",
    "start": "2213440",
    "end": "2220079"
  },
  {
    "text": "again these buttons aren't doing anything it's not sending any code for these components into the browser by",
    "start": "2220079",
    "end": "2225200"
  },
  {
    "text": "default if I want to do that I would go here and I would say client load and now",
    "start": "2225200",
    "end": "2231160"
  },
  {
    "text": "it will send the code for the react counter and see that will actually work but the view counter does not uh so",
    "start": "2231160",
    "end": "2237000"
  },
  {
    "text": "let's fix that in the obvious way and now the view counter also works but this means since we're using multiple client",
    "start": "2237000",
    "end": "2244119"
  },
  {
    "text": "Technologies we can even do some quite weird stuff like inside this react component here I've given it the ability",
    "start": "2244119",
    "end": "2250240"
  },
  {
    "text": "to render any children that are passed into it and I did the same thing in the view component as well so if I was",
    "start": "2250240",
    "end": "2256079"
  },
  {
    "text": "feeling a little bit weird I could for example put a view counter inside a react counter and it just works okay so",
    "start": "2256079",
    "end": "2262880"
  },
  {
    "text": "we've now got view running inside react and if I was really really crazy for some reason I could even then place a",
    "start": "2262880",
    "end": "2269280"
  },
  {
    "text": "react counter inside the view counter and we've now got react inside view inside react inside Astro and it all",
    "start": "2269280",
    "end": "2276040"
  },
  {
    "text": "just does the right thing which is pretty nice okay so that hopefully gives",
    "start": "2276040",
    "end": "2282560"
  },
  {
    "text": "you a bit of an overview of what these kind of Technologies are doing now and how these client rendering Frameworks",
    "start": "2282560",
    "end": "2289599"
  },
  {
    "text": "are trying to make a move onto the server to take advantage of the performance of server side HTML",
    "start": "2289599",
    "end": "2296520"
  },
  {
    "text": "rendering but without giving up on the benefits of client side uh performance",
    "start": "2296520",
    "end": "2302319"
  },
  {
    "text": "and interactivity okay so that's all I'm going to say about that let's move move on now to talk about some slightly",
    "start": "2302319",
    "end": "2309160"
  },
  {
    "text": "different stuff on the server okay so web assembly is normally associated with",
    "start": "2309160",
    "end": "2314680"
  },
  {
    "text": "the client with running in the browser but you probably know that Wazi is a way of running web assembly on a server and",
    "start": "2314680",
    "end": "2321240"
  },
  {
    "text": "various people have been saying for sometime hey this could be the future of how we do server side Cloud programming",
    "start": "2321240",
    "end": "2326960"
  },
  {
    "text": "but is it really is that going to happen well let's try and understand a bit about what's happened so far and again",
    "start": "2326960",
    "end": "2333880"
  },
  {
    "text": "we're going to do this with a timeline it's it's a shorter timeline in this case because web assembly hasn't been",
    "start": "2333880",
    "end": "2339400"
  },
  {
    "text": "around for that long uh the original idea started in about 2015 and it landed",
    "start": "2339400",
    "end": "2344560"
  },
  {
    "text": "in browsers in about 2017 so that's pretty quick turnaround to get from idea to in all your browsers in a couple of",
    "start": "2344560",
    "end": "2351319"
  },
  {
    "text": "years and the original idea for web assembly was something like this so you've got some code and let's say you",
    "start": "2351319",
    "end": "2358119"
  },
  {
    "text": "want to run it inside a browser now if your code is Javascript great you can",
    "start": "2358119",
    "end": "2364040"
  },
  {
    "text": "just run it in the browser already but if it's not we need some other way and so web assembly said well let's have",
    "start": "2364040",
    "end": "2370560"
  },
  {
    "text": "some kind of bite code format that can run inside browsers and we can compile",
    "start": "2370560",
    "end": "2375800"
  },
  {
    "text": "to that bite code format from whatever language we want and it will just work inside the browser all right that sounds",
    "start": "2375800",
    "end": "2381880"
  },
  {
    "text": "good but what can that code actually do can it format the user's hard drive can it access their GPU directly well",
    "start": "2381880",
    "end": "2389200"
  },
  {
    "text": "security is obviously a very big concern and so the decision was this is going to be extremely sandboxed and the only",
    "start": "2389200",
    "end": "2395760"
  },
  {
    "text": "thing that it can do the only way it can interact with the outside world is by making calls into JavaScript so at most",
    "start": "2395760",
    "end": "2403079"
  },
  {
    "text": "it can only do what JavaScript can do if JavaScript lets it happen then web assmbly can do it and if JavaScript",
    "start": "2403079",
    "end": "2409000"
  },
  {
    "text": "doesn't then it can't okay so that's how things have been working with web assembly in the browser and that's great",
    "start": "2409000",
    "end": "2415720"
  },
  {
    "text": "but a couple of years later people came up with this idea of hey web assembly is really cool wouldn't it be nice if we",
    "start": "2415720",
    "end": "2421800"
  },
  {
    "text": "could use it for our serers side Cloud programming as well because then we'd have a sort of universal binary format",
    "start": "2421800",
    "end": "2429119"
  },
  {
    "text": "it would be independent of any particular CPU type it would in be independent of operating system and it",
    "start": "2429119",
    "end": "2434760"
  },
  {
    "text": "would just work everywhere that would be magical right but what could this code actually do well it was already possible",
    "start": "2434760",
    "end": "2441520"
  },
  {
    "text": "to run web assembly on a server just like on the console but it couldn't really do anything because you know it",
    "start": "2441520",
    "end": "2446599"
  },
  {
    "text": "can't call out to JavaScript there's no JavaScript running in your server what can it do so that's what Wazi came along",
    "start": "2446599",
    "end": "2453440"
  },
  {
    "text": "to solve web assembly system interface and this def defined a standard set of",
    "start": "2453440",
    "end": "2458920"
  },
  {
    "text": "apis that you could call from your serers side web assembly code to do things that are useful on a server uh",
    "start": "2458920",
    "end": "2465280"
  },
  {
    "text": "and it was designed around posix apis posix is an API layer that's uh used a",
    "start": "2465280",
    "end": "2470319"
  },
  {
    "text": "lot in Linux it's also available to an extent in Windows and it provides a standard set of things for working with",
    "start": "2470319",
    "end": "2476400"
  },
  {
    "text": "things like file handles and clocks and stuff like that okay and it was a sensible choice to design it like that",
    "start": "2476400",
    "end": "2483520"
  },
  {
    "text": "for the first version of Wazi because at that time the goal was let's just get existing code to work so we need",
    "start": "2483520",
    "end": "2490200"
  },
  {
    "text": "existing code that already assumes posx it should just work if we support those kinds of apis and that made sense at",
    "start": "2490200",
    "end": "2497119"
  },
  {
    "text": "that time but this is not the future it's not the future of Wazi there are some big problems with this form of",
    "start": "2497119",
    "end": "2502920"
  },
  {
    "text": "design uh three problems in fact so the first problem is that this is not really",
    "start": "2502920",
    "end": "2510560"
  },
  {
    "text": "how we want modern cloud-based programming to work okay so in the modern era we don't talk talk so much",
    "start": "2510560",
    "end": "2516800"
  },
  {
    "text": "about files we talk more about things like blob storage or key value stores or",
    "start": "2516800",
    "end": "2522359"
  },
  {
    "text": "distributed cues and these sorts of things these are our actual Primitives that we want to work with these days a",
    "start": "2522359",
    "end": "2529079"
  },
  {
    "text": "second problem is that this is a very slow standardization process each time you want to add something new to this",
    "start": "2529079",
    "end": "2535400"
  },
  {
    "text": "spec you have to spend years going to meetings talking to committees and trying to persuade them that it should",
    "start": "2535400",
    "end": "2540520"
  },
  {
    "text": "become part of the standard and in fact we're still waiting for the networking apis to land in Wy preview one it's",
    "start": "2540520",
    "end": "2545920"
  },
  {
    "text": "that's how slow it is okay and the third problem is that it's not extensible in any way if you want to do some specific",
    "start": "2545920",
    "end": "2553520"
  },
  {
    "text": "stuff for your application and make it into a standard well there isn't really any way of declaring a new Wy standard",
    "start": "2553520",
    "end": "2559319"
  },
  {
    "text": "for your application or your cloud service or whatever so that's why this is kind of not the future so what's the",
    "start": "2559319",
    "end": "2567079"
  },
  {
    "text": "next version of Wazi and how is it going to change this well the preview two of Wazi is built around this concept called",
    "start": "2567079",
    "end": "2573839"
  },
  {
    "text": "the component model and it's designed to over Come Those limitations so let's have a look at how that works and we'll",
    "start": "2573839",
    "end": "2580640"
  },
  {
    "text": "try and build something with it right so the web assembly component model is built around this idea of an interface",
    "start": "2580640",
    "end": "2589040"
  },
  {
    "text": "definition that's independent of languages it uses a file format called wit web assembly interface types and it",
    "start": "2589040",
    "end": "2596000"
  },
  {
    "text": "looks a bit like this for example so let's say that you are building some sort of e-commerce site you might want",
    "start": "2596000",
    "end": "2602119"
  },
  {
    "text": "to Define an interface called ordering which has got a data type in it called Product with some fields in that and you",
    "start": "2602119",
    "end": "2608559"
  },
  {
    "text": "might Define an operation called add to car which takes a product and returns some kind of result okay that's",
    "start": "2608559",
    "end": "2614920"
  },
  {
    "text": "something that you've defined and it's not tied to any specific language it's a language independent interface",
    "start": "2614920",
    "end": "2620520"
  },
  {
    "text": "definition format which is a lot to say okay and this can be used for a lot of different things okay so this can be",
    "start": "2620520",
    "end": "2627240"
  },
  {
    "text": "used to define newer Wazi standards so we've got things like Wy HTTP Wy file",
    "start": "2627240",
    "end": "2632800"
  },
  {
    "text": "these are defined using wit and the standardization process can move a lot faster because each of these things can",
    "start": "2632800",
    "end": "2638839"
  },
  {
    "text": "progress independently and be versioned independently all right secondly you could use these wit files to Define",
    "start": "2638839",
    "end": "2645200"
  },
  {
    "text": "things that are specific to particular Cloud Technologies so you could have a wit definition for the Azure key volt",
    "start": "2645200",
    "end": "2651359"
  },
  {
    "text": "service or for AWS Lambda that kind of thing and they could be published by uh different cloud services and finally you",
    "start": "2651359",
    "end": "2657920"
  },
  {
    "text": "could Define your own wit specifications for things in your applications like you know the catalog thing that we just",
    "start": "2657920",
    "end": "2663480"
  },
  {
    "text": "showed a minute ago okay so when you've got these things what do you then do with that well you can combine the wit",
    "start": "2663480",
    "end": "2670000"
  },
  {
    "text": "file with some code in whatever language you want and compile that to a web assembly component that satisfies this",
    "start": "2670000",
    "end": "2677480"
  },
  {
    "text": "wit definition and you can either import stuff from that wit file that you can call or you can export stuff it from it",
    "start": "2677480",
    "end": "2684599"
  },
  {
    "text": "so that other people can call you all right so then maybe you write some code with some other language as well with",
    "start": "2684599",
    "end": "2690319"
  },
  {
    "text": "some Rust to make another component or with some net to make another component and if these all agree about what width",
    "start": "2690319",
    "end": "2696880"
  },
  {
    "text": "specification they're working with then we know for sure that they can all work together at runtime and it's actually",
    "start": "2696880",
    "end": "2704040"
  },
  {
    "text": "going to work okay now this is not just about interop across languages that's been a problem that's been solved in",
    "start": "2704040",
    "end": "2710440"
  },
  {
    "text": "many ways over the decades this is about using the benefits of web assembly here",
    "start": "2710440",
    "end": "2715720"
  },
  {
    "text": "as well so as well as working across different components we also get the same strong sandboxing while all three",
    "start": "2715720",
    "end": "2722880"
  },
  {
    "text": "components are working together they're still independently sandboxed so when you take a dependency on",
    "start": "2722880",
    "end": "2727960"
  },
  {
    "text": "something you don't really have to trust it okay you don't have to trust that it's not going to read your memory or",
    "start": "2727960",
    "end": "2733160"
  },
  {
    "text": "poke bad bites into different bits of your buffers you don't have to trust whether it's going to access the file",
    "start": "2733160",
    "end": "2738640"
  },
  {
    "text": "system or whatever each component is still independently sandboxed even though they're able to talk to each",
    "start": "2738640",
    "end": "2744119"
  },
  {
    "text": "other using the protocols defined in those WID files right now let's make",
    "start": "2744119",
    "end": "2749400"
  },
  {
    "text": "this a little bit easier to understand by making some web assembly components ourselves and the example we're going to",
    "start": "2749400",
    "end": "2755720"
  },
  {
    "text": "use use just cuz it's easy to understand is markdown formatting let's make a command line tool that takes in some",
    "start": "2755720",
    "end": "2762520"
  },
  {
    "text": "markdown file and spits out the corresponding HTML and we're going to do it with a set of web assembly components",
    "start": "2762520",
    "end": "2769839"
  },
  {
    "text": "so firstly we're going to build the command line tool itself in Rust compiled to web assembly but we won't",
    "start": "2769839",
    "end": "2775520"
  },
  {
    "text": "Implement markdown formatting inside rust what we'll do is we'll Define markdown formatting in a whip file and",
    "start": "2775520",
    "end": "2782880"
  },
  {
    "text": "we'll import that so we can just call it even though we don't have implementation now we need to provide an implementation",
    "start": "2782880",
    "end": "2789440"
  },
  {
    "text": "so we'll write an implementation in go and we'll export that using the same specification and we'll see that those",
    "start": "2789440",
    "end": "2795480"
  },
  {
    "text": "things can work together and then just to show that this is not specific to rust Oro we'll also Implement an",
    "start": "2795480",
    "end": "2801160"
  },
  {
    "text": "implementation of the same thing in C and compile that to another web assembly component and again we'll show that all",
    "start": "2801160",
    "end": "2807839"
  },
  {
    "text": "the stuff just works together okay right now let's go and have a look at some",
    "start": "2807839",
    "end": "2813920"
  },
  {
    "text": "Rust code then because we're going to start building our command line application you don't need to know rust",
    "start": "2813920",
    "end": "2819079"
  },
  {
    "text": "because this is very simple okay all we're going to do in our rust code is we'll print a big block of stuff so you",
    "start": "2819079",
    "end": "2824880"
  },
  {
    "text": "can see it's running and then we're going to read in some content from standard input so I can either type",
    "start": "2824880",
    "end": "2830680"
  },
  {
    "text": "stuff on the console or I can pipe a file into it and that will get read into this variable and then initially we'll",
    "start": "2830680",
    "end": "2837240"
  },
  {
    "text": "just emit it back to the output later on we'll do some actual markdown formatting",
    "start": "2837240",
    "end": "2842480"
  },
  {
    "text": "okay let's start by compiling that to web assembly okay and I could do cargo build and all",
    "start": "2842480",
    "end": "2848680"
  },
  {
    "text": "that stuff to compile rust but there's a few Flags I need so I've just got a script that's going to do that build and",
    "start": "2848680",
    "end": "2854280"
  },
  {
    "text": "that's going to produce my binary uh now hopefully on disk so if I have a look um",
    "start": "2854280",
    "end": "2860640"
  },
  {
    "text": "then we should see that this is the file that we've generated literally just now okay and I can run that it's a web",
    "start": "2860640",
    "end": "2866839"
  },
  {
    "text": "assembly file I could run it in any web assembly runtime I'm going to run it in wasm time and we'll see it prints out",
    "start": "2866839",
    "end": "2873160"
  },
  {
    "text": "that message and I can type stuff in so that's the standard input and when I finish it's going to say oh that's what",
    "start": "2873160",
    "end": "2878839"
  },
  {
    "text": "you typed in great and of course I can also pipe files into it so I've also got an example markdown file here and I",
    "start": "2878839",
    "end": "2886400"
  },
  {
    "text": "could um let's see can I pipe that in yeah so I'll pipe that markdown file in",
    "start": "2886400",
    "end": "2891839"
  },
  {
    "text": "and it will just spit out the contents of the markdown file all right but we don't just want to print it out we want",
    "start": "2891839",
    "end": "2897480"
  },
  {
    "text": "to actually call another component to do some formatting so we want to start by defining that in a wit file and I've got",
    "start": "2897480",
    "end": "2904640"
  },
  {
    "text": "a wit file down here markdown format. wit that I've just made up and it's got this function defined in it called",
    "start": "2904640",
    "end": "2911119"
  },
  {
    "text": "format as string and we can take parameters so I'm saying what output format do we want HTML or docx uh what",
    "start": "2911119",
    "end": "2917960"
  },
  {
    "text": "input are we getting and then we'll just return some string from that and then we've got this weird stuff down here",
    "start": "2917960",
    "end": "2924000"
  },
  {
    "text": "called worlds very strange terminology but basically when you consume a Wht file you say I which world am I in if",
    "start": "2924000",
    "end": "2930720"
  },
  {
    "text": "I'm in the world of being a host app then I'm going to import format interface which means I can call it",
    "start": "2930720",
    "end": "2936640"
  },
  {
    "text": "whereas if I'm a formatting Library I will export the formatting interface which means that other people can call",
    "start": "2936640",
    "end": "2942319"
  },
  {
    "text": "me all right now let's have a go at using this format as string from the rust code now I have to remember which",
    "start": "2942319",
    "end": "2949640"
  },
  {
    "text": "snippet this is something like this one all right so I'm calling format as",
    "start": "2949640",
    "end": "2955040"
  },
  {
    "text": "string okay and initially I get these red squiggly saying what are you talking about I don't know what format as string",
    "start": "2955040",
    "end": "2961040"
  },
  {
    "text": "is okay so I need some way of connecting it to this wit file and different Lang would just do this in different ways in",
    "start": "2961040",
    "end": "2967319"
  },
  {
    "text": "Rust there's a way of doing it like this so there's a macra called generate that's going to generate bindings from",
    "start": "2967319",
    "end": "2973920"
  },
  {
    "text": "the wit files that I've referenced in my build config file and so now I still got squigglies but they're different ones",
    "start": "2973920",
    "end": "2980359"
  },
  {
    "text": "they're now saying hey I could import this for you because I now know what this is so I'll will import that I'll",
    "start": "2980359",
    "end": "2985599"
  },
  {
    "text": "also import output format as well so that has just generated this use thing",
    "start": "2985599",
    "end": "2991880"
  },
  {
    "text": "which is importing all this stuff that's been generated and now if I build",
    "start": "2991880",
    "end": "2997400"
  },
  {
    "text": "again so like that then we will now get an actual web assembly component that",
    "start": "2997400",
    "end": "3002960"
  },
  {
    "text": "uses that WID specification and if I try to run it now it won't actually work it will say I'm sorry I don't know what",
    "start": "3002960",
    "end": "3009359"
  },
  {
    "text": "you're talking about that you're trying to use this thing called markdown formatter but you haven't actually provided an implementation of that and",
    "start": "3009359",
    "end": "3016119"
  },
  {
    "text": "we can get a little bit more information about that as well if we want to so here's our web assembly component and I",
    "start": "3016119",
    "end": "3021599"
  },
  {
    "text": "can use some tooling called uh let's see this okay wasm tools component WID and that",
    "start": "3021599",
    "end": "3028720"
  },
  {
    "text": "will output the width specification from this individual component so it says it",
    "start": "3028720",
    "end": "3033839"
  },
  {
    "text": "exports the ability to run it also Imports a bunch of standard stuff from Wazi to do with being a console",
    "start": "3033839",
    "end": "3040079"
  },
  {
    "text": "application but it also Imports this markdown format and that's the unmet dependency that we need to resolve right",
    "start": "3040079",
    "end": "3046440"
  },
  {
    "text": "now Okay so we've got our command line tool in Rust we're now going to provide an implementation and we'll do that in",
    "start": "3046440",
    "end": "3054160"
  },
  {
    "text": "go right let's let's find some a go code server here right you can see my go code",
    "start": "3054160",
    "end": "3059400"
  },
  {
    "text": "doesn't do very much right now it just prints a message to the console and I can compile this to web assembly pretty",
    "start": "3059400",
    "end": "3065240"
  },
  {
    "text": "easily let's do that so I'm going to go into my go code and again I've written a",
    "start": "3065240",
    "end": "3071200"
  },
  {
    "text": "build script just so that I don't have to remember the command line arguments and when that does the right thing then",
    "start": "3071200",
    "end": "3077359"
  },
  {
    "text": "oh actually it's going to fail because in my build script I passed some Flags saying hey you are going to export",
    "start": "3077359",
    "end": "3083040"
  },
  {
    "text": "something defined in this wit file and I hav't actually done that yet so of course I get a build error saying hey",
    "start": "3083040",
    "end": "3088119"
  },
  {
    "text": "you didn't export the thing that you were supposed to export so how can we do that well there's a tool that's designed",
    "start": "3088119",
    "end": "3094440"
  },
  {
    "text": "to work across multiple languages called wit bind gen and wit bind genen says okay which type of language do you want",
    "start": "3094440",
    "end": "3101680"
  },
  {
    "text": "to generate code for in this case it's tiny go what are you what code are you generating I'm generating the formatting",
    "start": "3101680",
    "end": "3107559"
  },
  {
    "text": "Library based on this particular wit file here so if I execute that it's going to generate a bit of go code and",
    "start": "3107559",
    "end": "3114119"
  },
  {
    "text": "I'm going to be able to use that to satisfy this interface so now back in my go code it's generated all this stuff",
    "start": "3114119",
    "end": "3121000"
  },
  {
    "text": "it's quite hard to read especially if you don't know go which I don't really so I'm not going to try and understand that I'm just going to make use of it to",
    "start": "3121000",
    "end": "3128160"
  },
  {
    "text": "provide an implementation so let's do um this okay so I've implemented my",
    "start": "3128160",
    "end": "3136559"
  },
  {
    "text": "uh wit generated code here and I'm saying that I'm providing an implementation of markdown format which",
    "start": "3136559",
    "end": "3143000"
  },
  {
    "text": "is this struct and that struct has got this function on it called format a string and it just says hello from go",
    "start": "3143000",
    "end": "3148319"
  },
  {
    "text": "which is obviously fake right now but we'll just go with that for a minute all right so if I call bu build again this",
    "start": "3148319",
    "end": "3153920"
  },
  {
    "text": "time I should not get a compile error and in fact in our directory",
    "start": "3153920",
    "end": "3159160"
  },
  {
    "text": "here we had only one component before but now we've got two we've got our go component as well and I can run these",
    "start": "3159160",
    "end": "3166559"
  },
  {
    "text": "two things together the command for doing that is a bit hard to remember so again I've made a script which is going",
    "start": "3166559",
    "end": "3172280"
  },
  {
    "text": "to combine the CLI which is the W uh the rust Cod uh combined with our go implementation",
    "start": "3172280",
    "end": "3178240"
  },
  {
    "text": "and it's going to feed example. MD into them and these two components will work together and the rust will be able to",
    "start": "3178240",
    "end": "3183640"
  },
  {
    "text": "call in to go and everything just works all right so that's not a bad start but it still doesn't actually do markdown",
    "start": "3183640",
    "end": "3189240"
  },
  {
    "text": "formatting let's do that for real now shall we so here's my full implementation let me just start that",
    "start": "3189240",
    "end": "3194680"
  },
  {
    "text": "building because it takes a while and what that does now is it Imports all this markdown stuff from go package",
    "start": "3194680",
    "end": "3201839"
  },
  {
    "text": "management and it's got this actual implementation right pauses the incoming stuff it creates an HTML renderer and",
    "start": "3201839",
    "end": "3208720"
  },
  {
    "text": "then it actually renders and produces the the output from that okay let's just",
    "start": "3208720",
    "end": "3213760"
  },
  {
    "text": "wait for that to build uh there we go it's done that so if I check my directory again now you see the file is",
    "start": "3213760",
    "end": "3219680"
  },
  {
    "text": "quite a lot bigger because it now includes all of this uh markdown formatting stuff but hopefully it will",
    "start": "3219680",
    "end": "3225640"
  },
  {
    "text": "now actually work for real so if I run that you'll see it now actually does for my format my markdown to HTML all right",
    "start": "3225640",
    "end": "3233119"
  },
  {
    "text": "so that's good we've got two web assembly components working together but I also promised you that I would show",
    "start": "3233119",
    "end": "3238680"
  },
  {
    "text": "you we could do the same thing with C to also generate web assembly preview2 components uh using some experimental",
    "start": "3238680",
    "end": "3245559"
  },
  {
    "text": "stuff right so over here I've got Visual Studio I've got a project called net formatter and you may notice a slightly",
    "start": "3245559",
    "end": "3252400"
  },
  {
    "text": "odd thing about my product is is that it doesn't contain any files whatsoever it's completely empty uh but I have a",
    "start": "3252400",
    "end": "3258920"
  },
  {
    "text": "set it up to uh Target the wywm build Target and I've also referenced these",
    "start": "3258920",
    "end": "3264240"
  },
  {
    "text": "packages that allow it to generate native web assembly code it's a slightly different way of building to web",
    "start": "3264240",
    "end": "3269760"
  },
  {
    "text": "assembly that you might have seen before but the point of that is that when I do build that let's do a rebuild uh you",
    "start": "3269760",
    "end": "3275240"
  },
  {
    "text": "will see that um it actually does go through this slightly extra phase now",
    "start": "3275240",
    "end": "3281280"
  },
  {
    "text": "where it generates some native code and it eventually produces some actual web assembly file on disk okay that's good",
    "start": "3281280",
    "end": "3289280"
  },
  {
    "text": "um but it doesn't do anything yet I want to make it use this wit file so how can",
    "start": "3289280",
    "end": "3294680"
  },
  {
    "text": "I connect connect my net codee to that Wht file well it would be really nice if I could use Whit bind gen again uh",
    "start": "3294680",
    "end": "3301359"
  },
  {
    "text": "because that's kind of how these things should work uh but that's not implemented yet so let's just get into",
    "start": "3301359",
    "end": "3306760"
  },
  {
    "text": "the right directory all right so I can't use whip bind gem because it doesn't support net",
    "start": "3306760",
    "end": "3312040"
  },
  {
    "text": "yet but we are talking and maybe it will support that in a little bit it would also be nice if we had some tool like",
    "start": "3312040",
    "end": "3317960"
  },
  {
    "text": "this net wit uh that maybe you could point it to a particular wit file and it",
    "start": "3317960",
    "end": "3323039"
  },
  {
    "text": "would generate some code for you now that does not exist either this is just some sort of hacky internal prototype",
    "start": "3323039",
    "end": "3329400"
  },
  {
    "text": "but you get the idea of how it could work if we Implement support for this so what I've just generated there is I've",
    "start": "3329400",
    "end": "3336039"
  },
  {
    "text": "got this wit generated folder and that contains this interface now which has been generated and it looks a lot like",
    "start": "3336039",
    "end": "3342200"
  },
  {
    "text": "that wit file but now expressed in C terms and ideally all this wit generator",
    "start": "3342200",
    "end": "3347640"
  },
  {
    "text": "stuff would be hidden away somewhere but it isn't right now and then we've also got this format uh class which right now",
    "start": "3347640",
    "end": "3353760"
  },
  {
    "text": "it just throws a not implemented Ed okay but that's a decent starting point let's rebuild that and see if we can use this",
    "start": "3353760",
    "end": "3359880"
  },
  {
    "text": "with our rust CLI application so now in our out directory we've got a third",
    "start": "3359880",
    "end": "3366559"
  },
  {
    "text": "component which is our format. net and I am going to run this uh I'm going to run",
    "start": "3366559",
    "end": "3371599"
  },
  {
    "text": "cwm with form.net and now well it doesn't work because obviously it throws",
    "start": "3371599",
    "end": "3376720"
  },
  {
    "text": "the not implemented exception but you can see at least that it tried to call it okay let's fill in a real",
    "start": "3376720",
    "end": "3381960"
  },
  {
    "text": "implementation well I've already referenced this open source Library called Mark dig so I can trivially as a",
    "start": "3381960",
    "end": "3388000"
  },
  {
    "text": "single line of code make a call into Mark dig to format that stuff into HTML",
    "start": "3388000",
    "end": "3394599"
  },
  {
    "text": "and hopefully we've then got a fully uh complete implementation of our web assembly component let's go back over",
    "start": "3394599",
    "end": "3401799"
  },
  {
    "text": "here and we'll try doing the same thing one more time and you'll see now we do get our rust code calling into. net but",
    "start": "3401799",
    "end": "3409440"
  },
  {
    "text": "we didn't have to change our rust code in any way the same component will still work perfectly well with a go C",
    "start": "3409440",
    "end": "3415039"
  },
  {
    "text": "dependency if that's what we give it because it's now working across languages uh even though each part of",
    "start": "3415039",
    "end": "3420839"
  },
  {
    "text": "the system are still sandboxed from each other so there we go what is the point of all that then let's try and summarize",
    "start": "3420839",
    "end": "3427839"
  },
  {
    "text": "well the point of this is that we can now use web assembly as a general system",
    "start": "3427839",
    "end": "3433000"
  },
  {
    "text": "of server side components and we don't have to care what language we write stuff in we don't have to care what",
    "start": "3433000",
    "end": "3438119"
  },
  {
    "text": "language our dependencies are written in you could even imagine some sort of future package manager which would be",
    "start": "3438119",
    "end": "3444160"
  },
  {
    "text": "like a Universal package manager today we've got package managers like npm or",
    "start": "3444160",
    "end": "3449359"
  },
  {
    "text": "cargo or nouet which are tied to specific languages but you could imagine one that's based around wit where all",
    "start": "3449359",
    "end": "3455640"
  },
  {
    "text": "the components in it you can use them no matter what language you are trying to write code in and you can contribute no",
    "start": "3455640",
    "end": "3460720"
  },
  {
    "text": "matter what language you're trying to code in so that would be pretty cool right and then of course we can run them",
    "start": "3460720",
    "end": "3466240"
  },
  {
    "text": "in the cloud at high speed with full sandboxing and so on so that's the idea of Wy Preview 2 which is hopefully going",
    "start": "3466240",
    "end": "3472880"
  },
  {
    "text": "to be landing over the next six months or so so there we go that's all we're",
    "start": "3472880",
    "end": "3478319"
  },
  {
    "text": "going to have time for this morning I hope some of that has been useful to you that's just a perspective on how web UI",
    "start": "3478319",
    "end": "3484760"
  },
  {
    "text": "Frameworks are changing over the next few years and how web assembly is trying to change on the server over the next",
    "start": "3484760",
    "end": "3491000"
  },
  {
    "text": "few years um I hope you enjoy the rest of the conference I hopefully I'll see some of you around um so yeah that's it",
    "start": "3491000",
    "end": "3497440"
  },
  {
    "text": "that's all from me thank you very [Applause] much",
    "start": "3497440",
    "end": "3505160"
  }
]