[
  {
    "text": "okay so welcome so first of all an apology because this is a very",
    "start": "11110",
    "end": "17390"
  },
  {
    "text": "last-minute talk whose only really decided in the last couple of days that there was a slot and modeled and what we",
    "start": "17390",
    "end": "23630"
  },
  {
    "text": "would do so this is why there's a lack of information as to what's going on here so I apologize for that so it's a",
    "start": "23630",
    "end": "31009"
  },
  {
    "text": "surprise talk and hopefully be pleasant surprise and nothing else right first of",
    "start": "31009",
    "end": "36379"
  },
  {
    "text": "all so what is this talk about why do I want to give this talk well I do",
    "start": "36379",
    "end": "42730"
  },
  {
    "text": "architecture work for people so I look at the way people put stuff together and I've seen a lot of things that I just",
    "start": "42730",
    "end": "49190"
  },
  {
    "text": "think really we're missing the point I say a lot of people who think that read and write are actually the same thing",
    "start": "49190",
    "end": "55760"
  },
  {
    "text": "and they don't consider the differences they consider rest api stew be really good things and they use them in",
    "start": "55760",
    "end": "62270"
  },
  {
    "text": "inappropriate ways and so we can look at a number of aspects of things round",
    "start": "62270",
    "end": "68509"
  },
  {
    "text": "around that area so here are some of the things I wanted to talk about reading",
    "start": "68509",
    "end": "74749"
  },
  {
    "text": "right we all know what they are do we actually really consider what they are and the differences between them because",
    "start": "74749",
    "end": "81049"
  },
  {
    "text": "they are really quite different in the way they behave and the way they affect our systems and the way we design",
    "start": "81049",
    "end": "87020"
  },
  {
    "text": "systems business processes what do we do about rules and schemas and other things",
    "start": "87020",
    "end": "93319"
  },
  {
    "text": "like that how does that fit into this big area of api's and where things go and what do we do with validation and",
    "start": "93319",
    "end": "99709"
  },
  {
    "text": "and other aspects of that one I wanted to speak a little bit about performance and scalability and concurrency and the",
    "start": "99709",
    "end": "106579"
  },
  {
    "text": "fact that read and write really don't scale in the same way at all what happens there so these really will see",
    "start": "106579",
    "end": "112819"
  },
  {
    "text": "that read and write are very different in the way that they affect your systems",
    "start": "112819",
    "end": "118240"
  },
  {
    "text": "asynchrony I want to look at queueing of systems what that means what that means",
    "start": "118240",
    "end": "123439"
  },
  {
    "text": "for things like a reliability and other aspects of this one synchronicity of things failure over another things an",
    "start": "123439",
    "end": "130399"
  },
  {
    "text": "important one at number five is structure changing which is the way that",
    "start": "130399",
    "end": "136280"
  },
  {
    "text": "we structure our data it's something that I've seen increasingly in lots of systems and now I start seeing you like",
    "start": "136280",
    "end": "142880"
  },
  {
    "text": "seeing every come on more to that things like CQRS and other things coming to this aspect and then a little bit about state",
    "start": "142880",
    "end": "149510"
  },
  {
    "text": "management so it's a sort of kind of series of things around read and write",
    "start": "149510",
    "end": "156290"
  },
  {
    "text": "well okay read write we know what these ones are have we considered the differences between reads and writes so",
    "start": "156290",
    "end": "163849"
  },
  {
    "text": "I read it very simple so I have if I'm trying to read something from here I'm pulling data out of this thing X like",
    "start": "163849",
    "end": "170269"
  },
  {
    "text": "this I can put a lot of caches in the put in the way this is great I can cache",
    "start": "170269",
    "end": "175519"
  },
  {
    "text": "it this now this is applicable every level so this could be so this could be an l1 cache and l3 cache inside your",
    "start": "175519",
    "end": "182419"
  },
  {
    "text": "machine it can be memcache or Redis it can be web caches and proxies that can",
    "start": "182419",
    "end": "187939"
  },
  {
    "text": "be see the ends there's all sorts of other things this is a general architectural pattern it scales it",
    "start": "187939",
    "end": "193819"
  },
  {
    "text": "scales very nicely it's mostly transparent most of the time with reads",
    "start": "193819",
    "end": "199069"
  },
  {
    "text": "you don't need to know about caching there are obviously some things we have",
    "start": "199069",
    "end": "204079"
  },
  {
    "text": "to deal with here about cache coherency and expiry in other parts of this one but on the whole most of the time you",
    "start": "204079",
    "end": "210620"
  },
  {
    "text": "don't think about it it just goes faster life's better identity' pnes so or",
    "start": "210620",
    "end": "217090"
  },
  {
    "text": "idempotent however you wish to pronounce it idem potency do something once or more",
    "start": "217090",
    "end": "223159"
  },
  {
    "text": "than once and you get the same result turning on a light switch is idempotent if I turn the light switch on ten times",
    "start": "223159",
    "end": "229669"
  },
  {
    "text": "it's the same as turning it on once if I read something ten times I should get ten times the same answer rather than",
    "start": "229669",
    "end": "236090"
  },
  {
    "text": "just once so we can retry it without side effects for instance on HTTP of the",
    "start": "236090",
    "end": "241609"
  },
  {
    "text": "four verbs get it just is idempotent put is idempotent delete is item potent but",
    "start": "241609",
    "end": "248389"
  },
  {
    "text": "post isn't the only one that isn't i dint n't we can partition data we can",
    "start": "248389",
    "end": "257209"
  },
  {
    "text": "partition we can shard we can split it on primary key that's very easy to do when you want to start scaling your",
    "start": "257209",
    "end": "262610"
  },
  {
    "text": "system as long as you're looking at primary Keys now this can be done at database level this can be didn't done a",
    "start": "262610",
    "end": "269389"
  },
  {
    "text": "shouting inside your application and a threading based level so if you've got eight course you might showed your data",
    "start": "269389",
    "end": "275900"
  },
  {
    "text": "across eight cores or eight heads in order to avoid the contention within threads most of the time the",
    "start": "275900",
    "end": "283949"
  },
  {
    "text": "business rules are just about access control who can read something who can",
    "start": "283949",
    "end": "288960"
  },
  {
    "text": "read this data is very important I spend a lot of time in architecture of things trying to work out what the access",
    "start": "288960",
    "end": "294029"
  },
  {
    "text": "control and the authentication authorization are but we only really have to deal with those set of rules there are plenty of other rules that",
    "start": "294029",
    "end": "300719"
  },
  {
    "text": "we'll deal with in a moment it's synchronous it blocks most of the time",
    "start": "300719",
    "end": "306779"
  },
  {
    "text": "you say I want this thing and then you wait you can do it with callbacks",
    "start": "306779",
    "end": "311969"
  },
  {
    "text": "if you're writing sort of kind of no js' and event-driven things you say I want that one you can use a wait promises",
    "start": "311969",
    "end": "318240"
  },
  {
    "text": "futures whatever language you happen to be in you can do that and that but that's essentially a blocking wait all that happens with those async things is",
    "start": "318240",
    "end": "325110"
  },
  {
    "text": "that you allow the apparatus to go off and do something else and then come back but you on your thread or your caller",
    "start": "325110",
    "end": "332849"
  },
  {
    "text": "appear to block you're also scaling bandwidth really nicely because you go",
    "start": "332849",
    "end": "338219"
  },
  {
    "text": "yeah I just go here as I go here I just keep adding bandwidth and I get more bandits more bandwidth so I got more CD",
    "start": "338219",
    "end": "344580"
  },
  {
    "text": "ends and everything else more points of presence it just gets its scale sideways it's great it's a wonderfully scalable",
    "start": "344580",
    "end": "350939"
  },
  {
    "text": "thing reeds are really nice for that point of view but somebody at some point",
    "start": "350939",
    "end": "356279"
  },
  {
    "text": "has to write something and the trouble with right is it's actually coming in to",
    "start": "356279",
    "end": "362939"
  },
  {
    "text": "one point this is now this is great this is fan out this is fan in writes do not scale in",
    "start": "362939",
    "end": "371519"
  },
  {
    "text": "the same way at all because you're all trying to get to the same thing how do I go and update that record into the database I can't partition that record I can only",
    "start": "371519",
    "end": "379949"
  },
  {
    "text": "have it in one place caching doesn't help you with this in fact it makes things horribly worse caching is really",
    "start": "379949",
    "end": "387419"
  },
  {
    "text": "good on here but actually from a writing point of view it makes it horribly worse why because if I put a cache in front of",
    "start": "387419",
    "end": "392550"
  },
  {
    "text": "here where is the data is it in the cache is it in this thing if this guy's",
    "start": "392550",
    "end": "397889"
  },
  {
    "text": "got a cache as well do they see the same thing or not how do I keep those synchronized this is state management",
    "start": "397889",
    "end": "403860"
  },
  {
    "text": "this is one of the nasty things that you have to deal with in larger systems so let's let's have a look at right and",
    "start": "403860",
    "end": "411370"
  },
  {
    "text": "think that it's not quite the same how did you scale it well you can scale",
    "start": "411370",
    "end": "417580"
  },
  {
    "text": "it for different ones I can say well that partition has this thing then I can write on that one",
    "start": "417580",
    "end": "423190"
  },
  {
    "text": "that's fine I've scaled them because I've got I've removed the contention but I can't scale access to the same thing",
    "start": "423190",
    "end": "430380"
  },
  {
    "text": "that's one of the problems because everything's coming into one point rather than going outwards sharding",
    "start": "430380",
    "end": "438340"
  },
  {
    "text": "works as I said it works well if you have primary key writes if I'm trying to right here or right there or white that",
    "start": "438340",
    "end": "444250"
  },
  {
    "text": "record is fine no SQL on a key value store that's great what happens if I need to write across multiple things",
    "start": "444250",
    "end": "450300"
  },
  {
    "text": "across multiple shards this gets horrible quite quickly reads have access",
    "start": "450300",
    "end": "459040"
  },
  {
    "text": "control routes rules rights have as well who can write something and now we need all the update rules saying is this a",
    "start": "459040",
    "end": "465160"
  },
  {
    "text": "valid update or not we've got more business logic on modifications than we have on reads it's much harder to do so",
    "start": "465160",
    "end": "473130"
  },
  {
    "text": "rights are really kind of that the hard part",
    "start": "473130",
    "end": "478620"
  },
  {
    "text": "some compensations we can delay it it can be asynchronous I can say yeah okay",
    "start": "478620",
    "end": "484780"
  },
  {
    "text": "do that one there and then just write in the background I can't just say put this",
    "start": "484780",
    "end": "490000"
  },
  {
    "text": "read in the background I have to wait for it so you get some asynchronous aspects to this one I don't pretend",
    "start": "490000",
    "end": "499750"
  },
  {
    "text": "for reads basically just happens without you trying for writes you now have to it's a design decision it's your choice",
    "start": "499750",
    "end": "506290"
  },
  {
    "text": "you have to put in how do i do once and only once with this one I need to put IDs in there I need to have some more",
    "start": "506290",
    "end": "512080"
  },
  {
    "text": "time stamps I need to have this kind of thing as saying update if not all done already kind of thing that's something",
    "start": "512080",
    "end": "520630"
  },
  {
    "text": "that you have to decide if you're a mentor of this one how are you going to",
    "start": "520630",
    "end": "526840"
  },
  {
    "text": "do that one is it important if I overwrite it does it matter some things it does some things it doesn't if you're",
    "start": "526840",
    "end": "532450"
  },
  {
    "text": "doing transactional stuff if involves money people for some strange reason get fussy about money I don't",
    "start": "532450",
    "end": "539850"
  },
  {
    "text": "you also now have dependencies dependencies are one of the fun things they make testing that much more",
    "start": "542129",
    "end": "547930"
  },
  {
    "text": "difficult they are coupling whether it's shared knowledge or directly with",
    "start": "547930",
    "end": "552970"
  },
  {
    "text": "compile-time dependencies or runtime dependencies if I were box in the middle like this with input and output well one",
    "start": "552970",
    "end": "559930"
  },
  {
    "text": "of the things here we have simply this it's very simple we've got reading and writing here",
    "start": "559930",
    "end": "566259"
  },
  {
    "text": "causing dependencies but it's asymmetric this guy here X doesn't know who calls",
    "start": "566259",
    "end": "571480"
  },
  {
    "text": "him that's fine I don't need to worry about this side but an outbound dependency is always the thing that's",
    "start": "571480",
    "end": "577870"
  },
  {
    "text": "going to cause this fun because I have an outbound dependency I have to know who that is so my right my outbound",
    "start": "577870",
    "end": "583779"
  },
  {
    "text": "rights have dependencies who have my inbound reads don't this introduce is",
    "start": "583779",
    "end": "589660"
  },
  {
    "text": "also the notion of pushing and pulling now in code you look at that go well okay that's very simple but is X pulling",
    "start": "589660",
    "end": "597370"
  },
  {
    "text": "from the input or is the input pushing into X similarly that one here what's",
    "start": "597370",
    "end": "603129"
  },
  {
    "text": "going on well look at this in a bit more and I'm going to try and point out that I think",
    "start": "603129",
    "end": "609160"
  },
  {
    "text": "this is probably that diagrams like this aren't actually very helpful oh here I",
    "start": "609160",
    "end": "617740"
  },
  {
    "text": "start on rest api's okay here the fun comes if I have a rest api here that",
    "start": "617740",
    "end": "623860"
  },
  {
    "text": "just kind of does get and put and all other kind of things like that where are the business rules well if it's just",
    "start": "623860",
    "end": "632800"
  },
  {
    "text": "basically SQL crud over the web which is essentially what most REST API is that I get to see you unfortunately do is that",
    "start": "632800",
    "end": "639759"
  },
  {
    "text": "you end up with the business rules in the client about what you can and can't do now I did this is not ideal of course",
    "start": "639759",
    "end": "646920"
  },
  {
    "text": "but I often I see this one here so it's really an anti-pattern if you're not",
    "start": "646920",
    "end": "652180"
  },
  {
    "text": "careful REST API thinking REST API czar a good thing they can be but be careful you may",
    "start": "652180",
    "end": "659379"
  },
  {
    "text": "end up having a lot of duplication of rules what happens here is we've essentially separated coding data",
    "start": "659379",
    "end": "665620"
  },
  {
    "text": "this is Gettys and setters so even if I do have some rules down here what am i doing why am I getting this and why",
    "start": "665620",
    "end": "672819"
  },
  {
    "text": "would I have a set here because I'm and then getting into get is followed by doing some modification and",
    "start": "672819",
    "end": "678310"
  },
  {
    "text": "setters getters and setters or an anti-pattern in in most code and this is",
    "start": "678310",
    "end": "683800"
  },
  {
    "text": "just a large-scale version of it it's uninhabited it doesn't hide knowledge it",
    "start": "683800",
    "end": "690430"
  },
  {
    "text": "spreads knowledge around so if you're a fan of oo then you'd say this is horrible I don't necessarily say that oo",
    "start": "690430",
    "end": "696160"
  },
  {
    "text": "is the best thing but it does spread knowledge around and if you've come across the the OO thing which is tell",
    "start": "696160",
    "end": "702490"
  },
  {
    "text": "don't ask you go yeah I want to tell that object to do something don't ask it for the data try and do it for it and",
    "start": "702490",
    "end": "708610"
  },
  {
    "text": "hand it back again rest api's are essentially just a network version of give me the data i'll make some decision",
    "start": "708610",
    "end": "714490"
  },
  {
    "text": "and hand it back if you're not careful you should be trying to push why should you be trying to tell it to do something",
    "start": "714490",
    "end": "721240"
  },
  {
    "text": "this is actually where soap even though from a technical point if it was a horrible thing was much better because",
    "start": "721240",
    "end": "727389"
  },
  {
    "text": "it's actually had ngr pcs of sort of kind of replacement for that you go here is something I want you to do you have",
    "start": "727389",
    "end": "734560"
  },
  {
    "text": "verbs you have objects you can do that one but turning everything basically into public data which is what rest does",
    "start": "734560",
    "end": "740380"
  },
  {
    "text": "doesn't really help you as an example here maybe I've got something with stock",
    "start": "740380",
    "end": "747010"
  },
  {
    "text": "level stock level should always be greater than zero if I end up with minus",
    "start": "747010",
    "end": "752139"
  },
  {
    "text": "one item on the shelf where is the problem who got that wrong grep is now",
    "start": "752139",
    "end": "759279"
  },
  {
    "text": "your friend or grap across multiple things because somebody somewhere here didn't do the rules right or you have to",
    "start": "759279",
    "end": "766269"
  },
  {
    "text": "be all you need to put some rules in here and decide what should happen where is the bug and then you go well okay now",
    "start": "766269",
    "end": "774100"
  },
  {
    "text": "I'm gonna start moving rules and schemas and other things around and in in the kind of world of big data and other",
    "start": "774100",
    "end": "780550"
  },
  {
    "text": "things like this you see these kind of terms am I gonna have enforce the schema on right and we're gonna say yeah I'm",
    "start": "780550",
    "end": "788139"
  },
  {
    "text": "always going to write valid data here and then I put the rules up here that's",
    "start": "788139",
    "end": "793930"
  },
  {
    "text": "one choice you enforce only writing validator in here quite a lot of the",
    "start": "793930",
    "end": "798939"
  },
  {
    "text": "time you'll have things like schema on reads no SQL things like and other stuff yeah yeah right whatever you like",
    "start": "798939",
    "end": "804459"
  },
  {
    "text": "I'll just have to pick I'll just pick out the pieces later on can actually be very useful for migration you go well that was version 1",
    "start": "804459",
    "end": "811670"
  },
  {
    "text": "version 2 I've had an extra field I don't care if you look at things like XML and Jason they typically ignore",
    "start": "811670",
    "end": "818300"
  },
  {
    "text": "fields that they don't know about seeing as you're not running validation you can say I want these six fields you give me",
    "start": "818300",
    "end": "824270"
  },
  {
    "text": "a seventh I don't care so that's another choice you have to think about but also are you gonna end up actually putting a",
    "start": "824270",
    "end": "831380"
  },
  {
    "text": "schema in here and the rules down here which is really the sort of kind of SQL and an object-oriented version so where",
    "start": "831380",
    "end": "837500"
  },
  {
    "text": "does your schema go because read and write are not the same do you want me to",
    "start": "837500",
    "end": "843710"
  },
  {
    "text": "do it do you want right to do it or do you want neither to do it up to you so those are some some options one of the",
    "start": "843710",
    "end": "854120"
  },
  {
    "text": "other things about straight kind of restful api is that they really don't",
    "start": "854120",
    "end": "859580"
  },
  {
    "text": "have much in the way of state machines or processes so if you look at a state chart for a rest api",
    "start": "859580",
    "end": "866570"
  },
  {
    "text": "it has create a post or put read an update and delete your crud operations",
    "start": "866570",
    "end": "874250"
  },
  {
    "text": "that is the state chart they have no state information i don't",
    "start": "874250",
    "end": "880640"
  },
  {
    "text": "know of many business processes that are that good that works for reference data if you go yeah I'm just gonna write this",
    "start": "880640",
    "end": "887150"
  },
  {
    "text": "thing countries of the world currencies that makes sense I don't see any reason I have to do much with that but most of",
    "start": "887150",
    "end": "894650"
  },
  {
    "text": "the things I need to do with order management and other things have multiple states and retry loops and",
    "start": "894650",
    "end": "899930"
  },
  {
    "text": "other things like that and then I end up having to go well what am I going to do now if I try to represent this with a REST API",
    "start": "899930",
    "end": "905960"
  },
  {
    "text": "I think rest is overused is kind of the",
    "start": "905960",
    "end": "911150"
  },
  {
    "text": "point you're getting I hope you're getting from this one here I want to be able to model this state chart how do I",
    "start": "911150",
    "end": "916339"
  },
  {
    "text": "do it well maybe I need different entities for each one of these or maybe this is one entity with nested things",
    "start": "916339",
    "end": "922339"
  },
  {
    "text": "inside it but then we're sort of kind of trying to force fit this into that model",
    "start": "922339",
    "end": "929150"
  },
  {
    "text": "which is based around the protocol that we're using if you're using HTTP verbs",
    "start": "929150",
    "end": "935180"
  },
  {
    "text": "to do this one you have to go while I'm now bending my data model on my business process to try and fit my protocol",
    "start": "935180",
    "end": "941900"
  },
  {
    "text": "seems the wrong way around so if you're not careful what you end up with rest",
    "start": "941900",
    "end": "947690"
  },
  {
    "text": "saying basically look I've got micro data stores I haven't got micro services because they've got no implementation they've got nothing here they may have a",
    "start": "947690",
    "end": "955220"
  },
  {
    "text": "few bits of rules and other things but on the whole I've often seen them news just as as essentially SQL with an HTTP",
    "start": "955220",
    "end": "962060"
  },
  {
    "text": "interface WebDAV under a different name okay enough of rest bashing we'll come",
    "start": "962060",
    "end": "970760"
  },
  {
    "text": "back to that let's look at system scaling here is the typical story that I",
    "start": "970760",
    "end": "978440"
  },
  {
    "text": "see as you start off your application is too slow so you go right we'll put more web servers on so that's great you scale",
    "start": "978440",
    "end": "984020"
  },
  {
    "text": "the front end like this and you scaling the reading the right and then you go okay I've scaled at the front end and",
    "start": "984020",
    "end": "990020"
  },
  {
    "text": "now I'm kind of that this the back end is slowing me down so you get a bigger database ah so you do this one here but",
    "start": "990020",
    "end": "996830"
  },
  {
    "text": "quite quickly you find out that scaling a database doesn't actually get you that far you end up with a sort of kind of 32",
    "start": "996830",
    "end": "1004330"
  },
  {
    "text": "gig well dig some monster machine is 32 calls and the largest box you can get on",
    "start": "1004330",
    "end": "1009370"
  },
  {
    "text": "Amazon and whatever you kind of even run out of that because you ignore all the problems with it being in one place and",
    "start": "1009370",
    "end": "1015400"
  },
  {
    "text": "lack of distribution etc so you you go well actually next what we're gonna do is we're gonna add extra caches so you",
    "start": "1015400",
    "end": "1022420"
  },
  {
    "text": "start thinking now we add in memcache and Redis and other things to try and take off the reads because actually we want more reads and writes but we've",
    "start": "1022420",
    "end": "1028660"
  },
  {
    "text": "sort of scales we can't scale the read and write independently sorry together like this because you run out of right",
    "start": "1028660",
    "end": "1034480"
  },
  {
    "text": "so the reads failing we have to do that with extra caching sort of kind of web level and then you sort of think you can",
    "start": "1034480",
    "end": "1041170"
  },
  {
    "text": "get round there and that's fine then you're out of write bandwidth so you then start having to shard so you start",
    "start": "1041170",
    "end": "1047949"
  },
  {
    "text": "trying to shard the database so you start moving to no SQL and all the the downsides of that as well so then the",
    "start": "1047950",
    "end": "1054670"
  },
  {
    "text": "next one is you go well actually haha really don't why don't we split this one up split this up into pieces and then",
    "start": "1054670",
    "end": "1060370"
  },
  {
    "text": "you stop trying to share everything through the database so this is really the story of the of the big database in",
    "start": "1060370",
    "end": "1067060"
  },
  {
    "text": "the middle pattern auntie cotton that I often see I've ecommerce companies seem",
    "start": "1067060",
    "end": "1072700"
  },
  {
    "text": "to be very keen to do this one here they build a monolith around a database and the database becomes the home of",
    "start": "1072700",
    "end": "1080380"
  },
  {
    "text": "everything because it's very easy just to add something in but they never actually split it up often they get down",
    "start": "1080380",
    "end": "1085960"
  },
  {
    "text": "to this point and have all the pains of that if you try micro-services we get some other pain problems what we'll talk",
    "start": "1085960",
    "end": "1091870"
  },
  {
    "text": "about that in a moment here you'll notice you end up once you start splitting it up you end up not be",
    "start": "1091870",
    "end": "1098080"
  },
  {
    "text": "able to do joins anymore directly in the database so you have to do them in the components themselves and try and do that so there are problems as you go",
    "start": "1098080",
    "end": "1104710"
  },
  {
    "text": "down this one here but that's a sort of kind of problem path that I see for scaling because reading rights don't",
    "start": "1104710",
    "end": "1110620"
  },
  {
    "text": "scale independently so partitioning sharding works to instant strong bias",
    "start": "1110620",
    "end": "1118450"
  },
  {
    "text": "around the primary key that's great it works really well for things like customer order product so you can see",
    "start": "1118450",
    "end": "1127090"
  },
  {
    "text": "why ecommerce companies will like that one but if you're trying to do analytics you're trying to do stuff across lots of",
    "start": "1127090",
    "end": "1132280"
  },
  {
    "text": "different things a non transactional system non transactional data then it then shouting doesn't help you that much",
    "start": "1132280",
    "end": "1139169"
  },
  {
    "text": "so scaling cost partition how do you deal with rights when you're trying to run across multiple ones you end up",
    "start": "1139169",
    "end": "1146230"
  },
  {
    "text": "having to do distributed transactions other things like that this is a whole world of pain in Cooper was talking",
    "start": "1146230",
    "end": "1152260"
  },
  {
    "text": "about this yesterday and you then end up with the problems that you get with",
    "start": "1152260",
    "end": "1157870"
  },
  {
    "text": "distributed systems as a paper in 1994 by Keith Waldo from Sun who's one of the",
    "start": "1157870",
    "end": "1163929"
  },
  {
    "text": "guys who was involved in Sun and helped in things like Java and other bits and pieces and there are why is why",
    "start": "1163929",
    "end": "1172090"
  },
  {
    "text": "distributed systems different to in-memory systems well you get partial",
    "start": "1172090",
    "end": "1177190"
  },
  {
    "text": "failure it's one of the biggest problems as you go well I sent you something did",
    "start": "1177190",
    "end": "1182710"
  },
  {
    "text": "you get it or not the old UDP joke about I would tell you UDP joke but I wouldn't know if you've got it so this one here",
    "start": "1182710",
    "end": "1190630"
  },
  {
    "text": "is partial failure you don't know about that one you've got cross box box transactions you also introduced concurrency we",
    "start": "1190630",
    "end": "1196000"
  },
  {
    "text": "didn't have it before because the sins you go across the network you'll find the other side is concurrent it's not in",
    "start": "1196000",
    "end": "1201910"
  },
  {
    "text": "process anymore so you have to take that into account you've got different sim latency the thing over there is far",
    "start": "1201910",
    "end": "1207250"
  },
  {
    "text": "slower than the thing in here this is this is nanoseconds or microseconds that's milliseconds away so several",
    "start": "1207250",
    "end": "1212749"
  },
  {
    "text": "orders of magnitude different if it's in memory you can just use pointers and references if it's a if it's on the",
    "start": "1212749",
    "end": "1218899"
  },
  {
    "text": "other side of that one pointers don't work anymore so it's an interesting interesting paper to read by the way we",
    "start": "1218899",
    "end": "1227779"
  },
  {
    "text": "want to try and align our service boundaries with our failure what we don't want to have is a service a",
    "start": "1227779",
    "end": "1233779"
  },
  {
    "text": "service or a transaction that will multiple transactions inside one thing if those don't line up you're in",
    "start": "1233779",
    "end": "1238820"
  },
  {
    "text": "problems if you have the you've all had the experience of oh can I have the last airline seat please",
    "start": "1238820",
    "end": "1244849"
  },
  {
    "text": "yes and then trying to book it and find it's gone and that's a problem where you've got actually look at the failure",
    "start": "1244849",
    "end": "1250249"
  },
  {
    "text": "I've got two transactions with a window in between you really want to be able to say book if it's there you need to try",
    "start": "1250249",
    "end": "1255950"
  },
  {
    "text": "and align those the other thing is that if you have things like REST API is",
    "start": "1255950",
    "end": "1261859"
  },
  {
    "text": "watch out for or obey systems the n plus one database problem",
    "start": "1261859",
    "end": "1267399"
  },
  {
    "text": "get me a query for all the things I want please okay here's 120 things you then",
    "start": "1267399",
    "end": "1272629"
  },
  {
    "text": "may have to make 120 calls to go and get four things themselves if you're not careful you end up with 121 so you end",
    "start": "1272629",
    "end": "1278149"
  },
  {
    "text": "up with 120 calls and plus the one to go and find out what it is if you're using",
    "start": "1278149",
    "end": "1283940"
  },
  {
    "text": "SQL you'd say can I just go and do em all in one place cuz you can do set based stuff it's something people often",
    "start": "1283940",
    "end": "1289339"
  },
  {
    "text": "forget when they steal with rest and other things is bulk data bulk operations reporting a nice rest doesn't",
    "start": "1289339",
    "end": "1297649"
  },
  {
    "text": "work for that Oh our aims object rational management things can cause all sorts of problems with that as well if",
    "start": "1297649",
    "end": "1307849"
  },
  {
    "text": "you want to talk about about the fun of sharing and mutable data and why right",
    "start": "1307849",
    "end": "1313580"
  },
  {
    "text": "stone scale I can go off into that if you want but primary thing is what Kevin and handy would refer to is a cigarette",
    "start": "1313580",
    "end": "1319339"
  },
  {
    "text": "synchronization quadrant if you have immutable data doesn't matter what you do with it",
    "start": "1319339",
    "end": "1324830"
  },
  {
    "text": "you can share it you cannot share it no locks not a problem because it's immutable if you're not sharing it",
    "start": "1324830",
    "end": "1329989"
  },
  {
    "text": "that's not a problem if it's shared immutable you have a problem you have to try and keep these",
    "start": "1329989",
    "end": "1335179"
  },
  {
    "text": "together this is where thread safety this is where all these other people other things come from mutable data is",
    "start": "1335179",
    "end": "1340609"
  },
  {
    "text": "the share mutable data evil nasty stuff you can do all the read-only",
    "start": "1340609",
    "end": "1346490"
  },
  {
    "text": "stuff without that one if you have things like Const or final in your language that's always a good thing to",
    "start": "1346490",
    "end": "1351650"
  },
  {
    "text": "be using see if you can do that if it moves you more to a functional paradigm great if you use pure message-passing",
    "start": "1351650",
    "end": "1357850"
  },
  {
    "text": "most of this will go away anyway although you have got some of the issues about what happens with changing data",
    "start": "1357850",
    "end": "1364850"
  },
  {
    "text": "once it's outside a system on somewhere else just to wake you up",
    "start": "1364850",
    "end": "1371210"
  },
  {
    "text": "I picked term pick this this was just so a another random architecture diagram I",
    "start": "1371210",
    "end": "1377450"
  },
  {
    "text": "found on the web it's not here to try and prove anything how many of you have seen stuff like",
    "start": "1377450",
    "end": "1383330"
  },
  {
    "text": "this or have to work with this yeah you go yeah it's a lot of that where you go do you make do understand it I don't I",
    "start": "1383330",
    "end": "1389299"
  },
  {
    "text": "see these all the time and going right okay there's there's a load of databases and there's some stuff happening here",
    "start": "1389299",
    "end": "1395809"
  },
  {
    "text": "and going backwards and forwards shows connections oh that's very kind of you",
    "start": "1395809",
    "end": "1401270"
  },
  {
    "text": "thank you and then you see this lovely thing arrows show connections they do not indicate data flow do you have any",
    "start": "1401270",
    "end": "1409370"
  },
  {
    "text": "idea what's going on here I don't I'm trying to work out when I look at this",
    "start": "1409370",
    "end": "1415700"
  },
  {
    "text": "one in here going okay this really just gives me a physical idea that stuff is happening and even with this soap thing",
    "start": "1415700",
    "end": "1422660"
  },
  {
    "text": "here I have no idea okay it's a soap where to start of finding out what's going on own and",
    "start": "1422660",
    "end": "1427790"
  },
  {
    "text": "if it's pull or push if it happens this is an incremental update is it a full update it is it's asynchronous what's",
    "start": "1427790",
    "end": "1433940"
  },
  {
    "text": "going on do I have cues in here what's what's happening really these kind of diagrams I think are absolutely well",
    "start": "1433940",
    "end": "1440720"
  },
  {
    "text": "they did that they tell you some boxes maybe it helps me to ask some other questions if I ever write or draw a",
    "start": "1440720",
    "end": "1448130"
  },
  {
    "text": "diagram like this I certainly try to have fewer arrows on this and fewer numbers of data stores but I will learn",
    "start": "1448130",
    "end": "1453799"
  },
  {
    "text": "as an architect go through and go each one of these what is happening on each what line so I've then got a table I",
    "start": "1453799",
    "end": "1459919"
  },
  {
    "text": "said this line does this it's this protocol it's this often this man of data this one who I want to be able to see I want to know what's happening so I",
    "start": "1459919",
    "end": "1466280"
  },
  {
    "text": "can document all that well but in general I find these kind of documents everybody has them on the wall and you",
    "start": "1466280",
    "end": "1471980"
  },
  {
    "text": "know what's that about so this kind of thing X&Y like that and there I was going like",
    "start": "1471980",
    "end": "1478890"
  },
  {
    "text": "how much use is that well it tells you probably X&Y have something to do but I",
    "start": "1478890",
    "end": "1484950"
  },
  {
    "text": "have no idea is X reading Y or is it writing to it or is it at different",
    "start": "1484950",
    "end": "1491160"
  },
  {
    "text": "times does it read it and then write it back again this is not telling you anything",
    "start": "1491160",
    "end": "1497660"
  },
  {
    "text": "is it a pushes at a pool where is the control if this is in a programming",
    "start": "1497660",
    "end": "1503040"
  },
  {
    "text": "language is this an active object is the threat of control here and then pushing it is the threat of control here and",
    "start": "1503040",
    "end": "1508050"
  },
  {
    "text": "this is is this an active object or they both passive and it's some thread that's running between the two of them don't",
    "start": "1508050",
    "end": "1513270"
  },
  {
    "text": "know if this is a distributed system and this is my order this is my front-end",
    "start": "1513270",
    "end": "1520050"
  },
  {
    "text": "e-commerce is in my back-end product catalog am i doing a full batch update am i pushing across 20,000 products all",
    "start": "1520050",
    "end": "1527970"
  },
  {
    "text": "the SCU's or am I just doing the ones that have changed what are the consequences of having just one or two",
    "start": "1527970",
    "end": "1534600"
  },
  {
    "text": "changing or everything else so is this is this a pushin is this a",
    "start": "1534600",
    "end": "1540000"
  },
  {
    "text": "fire-and-forget does this pushes asynchronously and say yeah that happens that at some point or whatever don't know it's kind of a start but it really",
    "start": "1540000",
    "end": "1548640"
  },
  {
    "text": "doesn't give you enough actually to understand or designer systems it just it's just a way of well maybe start up a",
    "start": "1548640",
    "end": "1555390"
  },
  {
    "text": "conversation so full versus incremental one of the things about full changes so",
    "start": "1555390",
    "end": "1563580"
  },
  {
    "text": "if I'm going to do here's the entire product catalog every night or whatever I choose to do there are some big",
    "start": "1563580",
    "end": "1569820"
  },
  {
    "text": "advantages to this one it stops buildup of errors if you have incremental change",
    "start": "1569820",
    "end": "1575510"
  },
  {
    "text": "you're thinking okay I I've added this one I've added that one did you miss one and if you've missed one of those",
    "start": "1575510",
    "end": "1582540"
  },
  {
    "text": "incremental changes when are you going to find out and when you're gonna get it back again is it manual repair at that",
    "start": "1582540",
    "end": "1588120"
  },
  {
    "text": "point because you just happen to be offline at the time when the change happened in a distributed system that's",
    "start": "1588120",
    "end": "1594870"
  },
  {
    "text": "really really kind of hard to do to get right you end up having to do all sorts",
    "start": "1594870",
    "end": "1600930"
  },
  {
    "text": "of things with sequence numbers and other things it becomes quite difficult to do in some ways just a full update",
    "start": "1600930",
    "end": "1606630"
  },
  {
    "text": "every time makes much more sense yes it's slower and it has longer latency but actually",
    "start": "1606630",
    "end": "1613169"
  },
  {
    "text": "it gets rid of all these sort of kind of things about partial failure and other things it's just one big transaction you",
    "start": "1613169",
    "end": "1618539"
  },
  {
    "text": "go right okay start transaction import twenty thousand whatever twenty thousand ten whatever it is now like this one",
    "start": "1618539",
    "end": "1625409"
  },
  {
    "text": "transaction could chunk it has some advantages incremental changes are fast",
    "start": "1625409",
    "end": "1631259"
  },
  {
    "text": "and you can get them immediately and you don't suffer the long latency of well",
    "start": "1631259",
    "end": "1637230"
  },
  {
    "text": "actually you made that change but you can't have until tomorrow till it's gone through the batch process it's trade off",
    "start": "1637230",
    "end": "1642960"
  },
  {
    "text": "time yes that's what happens when you're doing architecture you don't get to get what you want you just have to decide which",
    "start": "1642960",
    "end": "1648210"
  },
  {
    "text": "is the least worst option but you don't have the guarantee of that one loss messages and the transactionality aspect",
    "start": "1648210",
    "end": "1654809"
  },
  {
    "text": "of it so this leads into things like the lambda architecture I don't if you've",
    "start": "1654809",
    "end": "1661049"
  },
  {
    "text": "come across lambda architecture this is something that sort of come out of the",
    "start": "1661049",
    "end": "1666779"
  },
  {
    "text": "the big data world where you go right okay my data like this one I have essentially my immutable data so I have",
    "start": "1666779",
    "end": "1673860"
  },
  {
    "text": "all them this is actually all the data that I have there and I do some big batch recompute and I compute all the",
    "start": "1673860",
    "end": "1679860"
  },
  {
    "text": "views that I want here this is essentially my slow path but it takes",
    "start": "1679860",
    "end": "1684929"
  },
  {
    "text": "everything every time so from a architectural point of view this might be been looking at systems like this",
    "start": "1684929",
    "end": "1691049"
  },
  {
    "text": "where write all the stuff into s3 and then I take a big crunchy thing whether it could be a Hadoop type stuff or",
    "start": "1691049",
    "end": "1697440"
  },
  {
    "text": "athina query or whatever say right I'm gonna pre compute everything from that",
    "start": "1697440",
    "end": "1702740"
  },
  {
    "text": "then I get oh look new data comes in instead of waiting for this one here",
    "start": "1702950",
    "end": "1708269"
  },
  {
    "text": "which is saying well I've got how I've got this long latency problem but I want",
    "start": "1708269",
    "end": "1713549"
  },
  {
    "text": "to get updates like this what you do will actually have a separate path for updates and you go well here's my updates this is real time these my",
    "start": "1713549",
    "end": "1719820"
  },
  {
    "text": "incremental views and then essentially when you query you say ah well I'll look here if it's not there or look there",
    "start": "1719820",
    "end": "1725330"
  },
  {
    "text": "so you actually got two rates of change this is this is the speed layer so it's",
    "start": "1725330",
    "end": "1730440"
  },
  {
    "text": "referred to this is the bachelor and the serving lamb and mixes these two together it can be very useful I was",
    "start": "1730440",
    "end": "1738750"
  },
  {
    "text": "working on a system and I'll show you bits of it or it comes a later on where basically I said to the class",
    "start": "1738750",
    "end": "1744610"
  },
  {
    "text": "I'm not gonna have incremental updates I argued very strongly I said I want to",
    "start": "1744610",
    "end": "1751240"
  },
  {
    "text": "have hourly updates please why do I want hourly updates because then I could completely eliminate all this lot I",
    "start": "1751240",
    "end": "1757390"
  },
  {
    "text": "didn't have any immediacy at earn think everything could go immutable through that whole thing much simpler much",
    "start": "1757390",
    "end": "1764110"
  },
  {
    "text": "simpler if you can go through mutability that's great okay I've had a good good",
    "start": "1764110",
    "end": "1771820"
  },
  {
    "text": "kicking of read and write and rest api s-- so what do i suggest instead well if",
    "start": "1771820",
    "end": "1780639"
  },
  {
    "text": "you have read and write together like this and they're calling one api up and down like this this is what i refer to",
    "start": "1780639",
    "end": "1785649"
  },
  {
    "text": "as the vertical thinking in this talk what I'd rather have is well actually look this is writing stuff and this is",
    "start": "1785649",
    "end": "1792159"
  },
  {
    "text": "reading it can be uncommon unwind that and then put it like this please this is",
    "start": "1792159",
    "end": "1797740"
  },
  {
    "text": "writing data into here and then data's going here I'm reading it this is in much more horizontal this is much more",
    "start": "1797740",
    "end": "1803019"
  },
  {
    "text": "flow based what I'm what I see here is that actually these are quite different",
    "start": "1803019",
    "end": "1809169"
  },
  {
    "text": "and they're different business processes somebody's writing product data and somebody else is reading product data",
    "start": "1809169",
    "end": "1814559"
  },
  {
    "text": "wouldn't be nice if we actually could see that if you go back to this and ago who's writing what's reading I can't see",
    "start": "1814559",
    "end": "1821679"
  },
  {
    "text": "any of this one what I really like about modern cloud native ones is I go I can actually build my system like this out",
    "start": "1821679",
    "end": "1829450"
  },
  {
    "text": "of small services and ok this made writing stuff and it's going to s3 and then something else reading it and doing",
    "start": "1829450",
    "end": "1835299"
  },
  {
    "text": "order I can actually see the linear process and it becomes much easier if you start designing systems that have",
    "start": "1835299",
    "end": "1841149"
  },
  {
    "text": "that linearity or have this flow process you can work it out you go yes I can see",
    "start": "1841149",
    "end": "1846760"
  },
  {
    "text": "your business process in the architecture can I see business process in this architecture no ok that's sort",
    "start": "1846760",
    "end": "1854080"
  },
  {
    "text": "of kind of monolithic that's part of the problem but actually you're going there's some stuff happening it's going all over the place",
    "start": "1854080",
    "end": "1859450"
  },
  {
    "text": "it doesn't have to be that particular thing but they're all like that how do I avoid this so this shows the inherent",
    "start": "1859450",
    "end": "1868299"
  },
  {
    "text": "data flow and now my architecture my design maps with actually what I'm trying to do",
    "start": "1868299",
    "end": "1873610"
  },
  {
    "text": "I can see where did this happen so if I got a problem I can trace it down the chain and go is fine and I can deal",
    "start": "1873610",
    "end": "1880059"
  },
  {
    "text": "with the fact about in idempotence and did this right is this now I can start talking about full and incremental and",
    "start": "1880059",
    "end": "1886330"
  },
  {
    "text": "I'm dealing with the problems about if it was incremental I'd resend it does that on the ID evidence I can do all",
    "start": "1886330",
    "end": "1891580"
  },
  {
    "text": "that kind of stuff we also they move into asynchronous systems so a lot of",
    "start": "1891580",
    "end": "1901240"
  },
  {
    "text": "systems are synchronous I remember somebody once asked me yeah we got this front-end system here and needs to talk",
    "start": "1901240",
    "end": "1907600"
  },
  {
    "text": "to these nine back-end systems and I went so the nine back-end system is all about 99% and you want the front-end to",
    "start": "1907600",
    "end": "1913870"
  },
  {
    "text": "be 99% unfortunately you are going to get 91% availability if you've got nine",
    "start": "1913870",
    "end": "1919539"
  },
  {
    "text": "back-end systems that all have to be up called synchronously it just doesn't work the maths is not on your side",
    "start": "1919539",
    "end": "1924669"
  },
  {
    "text": "because you have to multiply all those probabilities together one goes down essentially takes out the whole thing so",
    "start": "1924669",
    "end": "1930730"
  },
  {
    "text": "you actually you end up building brittle systems if you're not careful if you use too much synchronous too many",
    "start": "1930730",
    "end": "1936429"
  },
  {
    "text": "synchronous calls they're great inside of a process or inside a machine but across machines now they don't they",
    "start": "1936429",
    "end": "1943330"
  },
  {
    "text": "typically don't if you've got a cluster with communities and things starting up and down yes you've got a service it",
    "start": "1943330",
    "end": "1948370"
  },
  {
    "text": "gives you a staple thing but but were you in the middle that transaction when we went down you don't know if you use",
    "start": "1948370",
    "end": "1954850"
  },
  {
    "text": "asynchronous ones like this 10 systems each 99% the whole thing is 99% you get",
    "start": "1954850",
    "end": "1962260"
  },
  {
    "text": "to decouple it you get to see each part working by itself you don't have to have everybody agreeing out of thing all the",
    "start": "1962260",
    "end": "1968409"
  },
  {
    "text": "time it's like let's try and agree when we're all going to meet up and you have",
    "start": "1968409",
    "end": "1973929"
  },
  {
    "text": "to get everybody all at once to do that it's a very hard thing to do if you try to arrange to go down the pub with 10",
    "start": "1973929",
    "end": "1979059"
  },
  {
    "text": "mates it's gonna take a long time to try and get a time whereas if you do it asynchronously it's much easy to do on",
    "start": "1979059",
    "end": "1985090"
  },
  {
    "text": "any Vigil scale the other part about this one is if you have overtime like",
    "start": "1985090",
    "end": "1990280"
  },
  {
    "text": "this if you have a synchronous query or operation like this you end up behind a",
    "start": "1990280",
    "end": "1995679"
  },
  {
    "text": "scale for the peak because as you add more this peak just goes up and also",
    "start": "1995679",
    "end": "2001590"
  },
  {
    "text": "your response times typically limited by how long it actually takes to the operation if you use an asynchronous one",
    "start": "2001590",
    "end": "2008400"
  },
  {
    "text": "you say well ok I'll just start this one here you've reduce this you've reduced the peak",
    "start": "2008400",
    "end": "2013499"
  },
  {
    "text": "you've reduced the amount here and then you're processing it in the background and you're now scaling based upon average not on peak so I was once asked",
    "start": "2013499",
    "end": "2025049"
  },
  {
    "text": "to look at a system that was doing warehousing and they had a once-a-day process for recycling all the crates",
    "start": "2025049",
    "end": "2031469"
  },
  {
    "text": "that would go back and gate and redistribute them they started running out of crates so somebody did a quick",
    "start": "2031469",
    "end": "2039389"
  },
  {
    "text": "hack and they said right okay we're gonna run the crate routine after every",
    "start": "2039389",
    "end": "2044479"
  },
  {
    "text": "barcode scan well there was a major problem with this one the fact that it",
    "start": "2044479",
    "end": "2049919"
  },
  {
    "text": "just deadlocked horribly all the time and so what it meant now was that",
    "start": "2049919",
    "end": "2055138"
  },
  {
    "text": "instead of having a very short blip like this to an operator of half a second or",
    "start": "2055139",
    "end": "2060240"
  },
  {
    "text": "less it was now gonna be five or ten seconds to run this entire thing every time slowing down the whole warehouse",
    "start": "2060240",
    "end": "2065569"
  },
  {
    "text": "except when it deadlocked and of course then this was in a horrible State because because you've got multiple",
    "start": "2065569",
    "end": "2071190"
  },
  {
    "text": "things going on they're all running concurrently rotas if you queue them up you can then do them in a one at a time",
    "start": "2071190",
    "end": "2077128"
  },
  {
    "text": "fashion serially and therefore you avoid all the dead locks so it can be very",
    "start": "2077129",
    "end": "2083158"
  },
  {
    "text": "useful to do that one the lambreaux architecture is essentially doing this one it's doing asynchronous bulk updates",
    "start": "2083159",
    "end": "2089549"
  },
  {
    "text": "on the top this is asynchronous on the top this is synchronous on the bottom essentially and then you merge those you",
    "start": "2089549",
    "end": "2098759"
  },
  {
    "text": "may find that metadata is currently up-to-date sufficiently that's one of the things to look at okay so this is",
    "start": "2098759",
    "end": "2108240"
  },
  {
    "text": "sort of kind of linear thing like this we can now decide well actually look we could also put in some asynchrony here",
    "start": "2108240",
    "end": "2115710"
  },
  {
    "text": "but now we can get to choose this one because our message broker here becomes a synchronous call to the message broker",
    "start": "2115710",
    "end": "2121289"
  },
  {
    "text": "and then it deals with all the retry and handoff so we've essentially given",
    "start": "2121289",
    "end": "2127710"
  },
  {
    "text": "ourselves some of this a synchrony here we've taken out some of the problems of",
    "start": "2127710",
    "end": "2133380"
  },
  {
    "text": "synchronous calls we can do is point a point we can also do broadcasting if",
    "start": "2133380",
    "end": "2139559"
  },
  {
    "text": "you're using that or less and a syn or equivalent or event busing of some sort",
    "start": "2139559",
    "end": "2145100"
  },
  {
    "text": "so it's a nice synchronous way of doing this one the other thing about this one is it means that these don't have to be",
    "start": "2145100",
    "end": "2151230"
  },
  {
    "text": "up at the same time a lot of the world still runs on flat file transfers okay I",
    "start": "2151230",
    "end": "2157290"
  },
  {
    "text": "dumped a CSV file out and then you pick this one up or XML in between systems there's a reason that's popular because",
    "start": "2157290",
    "end": "2163320"
  },
  {
    "text": "it's very simple and allows you to retry stuff so if this is if my asynchronous",
    "start": "2163320",
    "end": "2169200"
  },
  {
    "text": "thing here wasn't a message queue but was somewhere on a file system that's fine actually and people say oh they",
    "start": "2169200",
    "end": "2177000"
  },
  {
    "text": "apologized to me and saying we're using flat file transfer and said you know what it works I'm not gonna argue I can",
    "start": "2177000",
    "end": "2182700"
  },
  {
    "text": "test it because I can go yeah I want to test this guy got file in file their file there I can test that really easily",
    "start": "2182700",
    "end": "2188460"
  },
  {
    "text": "that's service by itself I don't have to have the rest of it so let's not have",
    "start": "2188460",
    "end": "2194390"
  },
  {
    "text": "big rest api's which are all synchronous which are all having got rules in them",
    "start": "2194390",
    "end": "2199980"
  },
  {
    "text": "etc let's not build more and more fragile systems there's an additional",
    "start": "2199980",
    "end": "2206460"
  },
  {
    "text": "version this one here I don't if you come across things like Kafka and Anna Kinesis which is the Amazon version of",
    "start": "2206460",
    "end": "2212130"
  },
  {
    "text": "Kafka which basically is like a message queue but instead of when you're reading from a message queue it's it's a",
    "start": "2212130",
    "end": "2218010"
  },
  {
    "text": "destructive read you can only read something once this basically just records them in a big long log and you",
    "start": "2218010",
    "end": "2223230"
  },
  {
    "text": "can decide when to read so I can read here oh I got it all wrong so actually",
    "start": "2223230",
    "end": "2229170"
  },
  {
    "text": "for in terms of things like this if I I'm not having a destructive read like this I can then go I can go all the way",
    "start": "2229170",
    "end": "2234840"
  },
  {
    "text": "back and I can reprocess yesterday's data because you know there was a bug in our code right okay go back to",
    "start": "2234840",
    "end": "2241020"
  },
  {
    "text": "yesterday's data and reread all the stuff off Kafka reread all the events because I'm going back to base data with",
    "start": "2241020",
    "end": "2248580"
  },
  {
    "text": "Kafka I can I can choose where I read it's not the queuing system that chooses",
    "start": "2248580",
    "end": "2254130"
  },
  {
    "text": "where I read from so we can now have identity and queues and keep reading the",
    "start": "2254130",
    "end": "2259530"
  },
  {
    "text": "same thing if I want it's up to me not the queue let's have another a little a simple example I have the joy of having",
    "start": "2259530",
    "end": "2267060"
  },
  {
    "text": "to deal with people with WordPress sites or drupal and other content management things and one of the big problems i see",
    "start": "2267060",
    "end": "2274800"
  },
  {
    "text": "from an architectural point of view is that the editing of the code editing of pages etc is in the same",
    "start": "2274800",
    "end": "2281490"
  },
  {
    "text": "place on the same API as trying to serve the data these are completely different things",
    "start": "2281490",
    "end": "2286980"
  },
  {
    "text": "I want one or two people to be doing editing it's a complex thing with",
    "start": "2286980",
    "end": "2293010"
  },
  {
    "text": "preview and rules and lots of other things like this and when it comes to serving this is everybody I know it to",
    "start": "2293010",
    "end": "2298500"
  },
  {
    "text": "be very fast very secure and rather dumb what have I done I've jammed the two things together into one box into one",
    "start": "2298500",
    "end": "2304860"
  },
  {
    "text": "API called the CMS it becomes much much",
    "start": "2304860",
    "end": "2310050"
  },
  {
    "text": "simpler if I say look I'm gonna edit this stuff in one way and then I'm gonna store it somewhere probably in some",
    "start": "2310050",
    "end": "2315960"
  },
  {
    "text": "fairly dumb store like this and I get a service one of the things for instance",
    "start": "2315960",
    "end": "2321690"
  },
  {
    "text": "that I am tempted to do these days is go well okay that's WordPress that's fine you want to use that for the editing",
    "start": "2321690",
    "end": "2327360"
  },
  {
    "text": "experience right I'll just do I'll just screen scrape it I'll use W I'll use W",
    "start": "2327360",
    "end": "2332670"
  },
  {
    "text": "get recursive go and do basically spider the site put it onto onto static things like this and then just serve it out",
    "start": "2332670",
    "end": "2338760"
  },
  {
    "text": "through a web server I've now been able to decouple this and this I can make this work completely static CDN it's",
    "start": "2338760",
    "end": "2346110"
  },
  {
    "text": "read-only great how many people have had their wordpress things hacked because",
    "start": "2346110",
    "end": "2352980"
  },
  {
    "text": "all the admin pages or all the slash admin just look in your firewall logs as",
    "start": "2352980",
    "end": "2358020"
  },
  {
    "text": "to how many people are trying to hack into this bit when they should be only looking at that bit if your e-commerce",
    "start": "2358020",
    "end": "2364530"
  },
  {
    "text": "system has got the shop back-end available through the internet you are",
    "start": "2364530",
    "end": "2370230"
  },
  {
    "text": "making a big problem for yourself by doing this vertical thinking rather than this nice separated one I can make this",
    "start": "2370230",
    "end": "2377700"
  },
  {
    "text": "you know I can do this as a VPN internal network etc push it out publish it out to something else a slightly larger",
    "start": "2377700",
    "end": "2387480"
  },
  {
    "text": "example this is a project I work on last yeah consumers register something here",
    "start": "2387480",
    "end": "2394290"
  },
  {
    "text": "they're pushing to the database like this and then this is being pulled from",
    "start": "2394290",
    "end": "2400050"
  },
  {
    "text": "here notice I'm actually marking where this is push and pull essentially I pull that database into the place I'm going",
    "start": "2400050",
    "end": "2405840"
  },
  {
    "text": "to serve it the clients doing lots and lots of high-speed queries on this one here and they're pushing out logs or",
    "start": "2405840",
    "end": "2411570"
  },
  {
    "text": "audit logs out here notice what happens we go push log okay but then have some logon",
    "start": "2411570",
    "end": "2418230"
  },
  {
    "text": "Allison I'm going ah where's that going how many of you go yeah we'll just do",
    "start": "2418230",
    "end": "2424800"
  },
  {
    "text": "some reporting I would do some analysis and you go who's actually going to do the analysis where's that going who",
    "start": "2424800",
    "end": "2431970"
  },
  {
    "text": "needs it what are the requirements what are the reporting requirements well I don't know well you better find out you better find",
    "start": "2431970",
    "end": "2437460"
  },
  {
    "text": "out what this is about and where this is going because you just gotta kind of pushing into a random thin air at the",
    "start": "2437460",
    "end": "2443010"
  },
  {
    "text": "moment so often I find that this kind of flow based stuff makes me go this is the",
    "start": "2443010",
    "end": "2449610"
  },
  {
    "text": "process I can see this one here and now I begin to understand where it comes from rather than this vertical thinking of",
    "start": "2449610",
    "end": "2455430"
  },
  {
    "text": "yeah I'll do that one okay actually how do I get the data in in the first place how do I go here how does if I go back",
    "start": "2455430",
    "end": "2461790"
  },
  {
    "text": "to a content management thing like this it's like what does content come from I'm starting to ask questions about what",
    "start": "2461790",
    "end": "2467460"
  },
  {
    "text": "the upstream of this one is oh if I have got this serving thing here and that goes out and it starts producing logs",
    "start": "2467460",
    "end": "2474060"
  },
  {
    "text": "and records and so what's happening about my log files if you actually look at an architectural view you go it's not",
    "start": "2474060",
    "end": "2480240"
  },
  {
    "text": "this big people a lot of people well larger people don't just want this they want actually in the entire end-to-end",
    "start": "2480240",
    "end": "2486590"
  },
  {
    "text": "content management process all the way through to log analysis back through to customers and it's much bigger than that",
    "start": "2486590",
    "end": "2493850"
  },
  {
    "text": "this tends to make you think vertically you tend to look at one box not at all system notice this means that often you",
    "start": "2493850",
    "end": "2503910"
  },
  {
    "text": "end up with micro services that essentially have to api's one comes in one goes out rest tries to jam them into",
    "start": "2503910",
    "end": "2510660"
  },
  {
    "text": "one makes them think that one thing they're not pleased nuts not do that so",
    "start": "2510660",
    "end": "2516870"
  },
  {
    "text": "let's have a little think about what other things might happen was right reading writing if we have a read/write",
    "start": "2516870",
    "end": "2523080"
  },
  {
    "text": "API like this you think of one representation you go yeah I've got one representation arrived there later in that format and then I try to read it",
    "start": "2523080",
    "end": "2529140"
  },
  {
    "text": "and do all the queries and everything I need to do what's well what happens if I",
    "start": "2529140",
    "end": "2534840"
  },
  {
    "text": "write the data in one format and then at some point I change it round into some",
    "start": "2534840",
    "end": "2540030"
  },
  {
    "text": "other format that is better for reading and then I can read it out very simply",
    "start": "2540030",
    "end": "2545820"
  },
  {
    "text": "this is actually a very useful thing this is the structure changing stuff I was talking about and it comes up in a",
    "start": "2545820",
    "end": "2553350"
  },
  {
    "text": "surprisingly large number of places so we're trying to change the structure",
    "start": "2553350",
    "end": "2558630"
  },
  {
    "text": "from what was good for right into what was good for read we can do this a synchronously all or synchronously can",
    "start": "2558630",
    "end": "2567570"
  },
  {
    "text": "be really nice if you go right I'll write this in here in an asynchronous way and do that one here and then read it out that way if this is if you don't",
    "start": "2567570",
    "end": "2573570"
  },
  {
    "text": "need synchronicity between this that's a really good way of doing it so where",
    "start": "2573570",
    "end": "2579690"
  },
  {
    "text": "does this come in it comes in here on Twitter I've seen this so Twitter is one",
    "start": "2579690",
    "end": "2585750"
  },
  {
    "text": "I didn't work on that one I did work on one that was electricity meeting meter readings it comes along in things like",
    "start": "2585750",
    "end": "2592800"
  },
  {
    "text": "matrix multiplication if you're doing games and you're trying to do array of stripes instructor of arrays it comes up",
    "start": "2592800",
    "end": "2598950"
  },
  {
    "text": "and that's kind of stuff if you start doing analytics databases it appears all and that as well now why this is a very",
    "start": "2598950",
    "end": "2606480"
  },
  {
    "text": "common problem once you see it you'll start seeing lots of places now if I look at if I have dealing with tweets",
    "start": "2606480",
    "end": "2613320"
  },
  {
    "text": "right okay so I don't have a Twitter account that's fine but if I did I'd have maybe one or two followers like my",
    "start": "2613320",
    "end": "2619200"
  },
  {
    "text": "mother or something whatever I'll have one or two like here and I write one or two there and then so if I write here",
    "start": "2619200",
    "end": "2624960"
  },
  {
    "text": "then there's two people that read me my mother and my mother's dog or whatever",
    "start": "2624960",
    "end": "2630860"
  },
  {
    "text": "but they need to read columns so when they log on they see here all the things I'm following but here all the things",
    "start": "2630860",
    "end": "2637740"
  },
  {
    "text": "I'm writing that way so I'm writing rows and columns now that's easy enough when",
    "start": "2637740",
    "end": "2642990"
  },
  {
    "text": "it's only a small amount so when I got a small number here then there's a few people who need to update so I can do",
    "start": "2642990",
    "end": "2648900"
  },
  {
    "text": "one of these and update two or three columns or whatever like that what happens when Donald Trump posts I don't",
    "start": "2648900",
    "end": "2656790"
  },
  {
    "text": "know how many million followers he's got but there's quite a lot so you can imagine what would happen you go right okay I'll write one with Donald Trump",
    "start": "2656790",
    "end": "2662640"
  },
  {
    "text": "here now I have to go ah okay so I can either store that in the this way here",
    "start": "2662640",
    "end": "2668520"
  },
  {
    "text": "or I can now go actually I need to go in to update a million-plus columns Donald",
    "start": "2668520",
    "end": "2674610"
  },
  {
    "text": "Trump is not going to be happy waiting for you to update that so he could yes we could do this asynchronous",
    "start": "2674610",
    "end": "2680040"
  },
  {
    "text": "but actually the way that that it's done in Twitter is that for the high value",
    "start": "2680040",
    "end": "2685530"
  },
  {
    "text": "users people like Donald Trump Lady Gaga people who've got millions of followers etc Kardashian's or whatever I don't",
    "start": "2685530",
    "end": "2691170"
  },
  {
    "text": "know there's some popular people is that they do the transformation when you read",
    "start": "2691170",
    "end": "2697520"
  },
  {
    "text": "so when you read here it basically has got like a future or a promise it says yeah yeah all these ones here oh I'll",
    "start": "2697520",
    "end": "2703079"
  },
  {
    "text": "just go and check whether these are people on the high value list and I'll do it that way now another time when this came up time",
    "start": "2703079",
    "end": "2711210"
  },
  {
    "text": "series databases I was working on electricity meters and they were reading 100,000 so every five minutes we got a",
    "start": "2711210",
    "end": "2717630"
  },
  {
    "text": "hundred thousand readings that says okay at time one like this I got all these channels here so channel 1 channel 2",
    "start": "2717630",
    "end": "2722970"
  },
  {
    "text": "channel 3 channel 4 could write it in the database just go oh it's great and then another five minutes later big pile",
    "start": "2722970",
    "end": "2728730"
  },
  {
    "text": "of stuff after this also great until you come to try and read it where you go oh actually I want channel one there next",
    "start": "2728730",
    "end": "2735240"
  },
  {
    "text": "channel one is here the next gentleman is there their 3.2 megapixel the disc",
    "start": "2735240",
    "end": "2741359"
  },
  {
    "text": "which means that every single point on the graph is now a disc read I've got an",
    "start": "2741359",
    "end": "2747000"
  },
  {
    "text": "n plus one database problem why because well I wrote it in the format was easy to write but I can't",
    "start": "2747000",
    "end": "2753119"
  },
  {
    "text": "read it in that format because I was trying to write rows but read columns",
    "start": "2753119",
    "end": "2759079"
  },
  {
    "text": "what happens when you want to try doing analytics yeah I've got a very wide thing here with customers and actually",
    "start": "2759079",
    "end": "2764970"
  },
  {
    "text": "what I want to see is the amount they bought it's one column out of 200 I",
    "start": "2764970",
    "end": "2770130"
  },
  {
    "text": "don't want to read 200 columns and then take one number out of it I'm using less than 1% of the bandwidth for the the",
    "start": "2770130",
    "end": "2775799"
  },
  {
    "text": "disk I really wanna get that entire column this row column stuff comes up all the time event sourcing is another",
    "start": "2775799",
    "end": "2782609"
  },
  {
    "text": "version of this one here struck two arrays array of structs do I store my data in rows sort of like sort and",
    "start": "2782609",
    "end": "2788460"
  },
  {
    "text": "columns it's the same problem it comes up in lots of places things like HBase and rocks DB what they do is",
    "start": "2788460",
    "end": "2795599"
  },
  {
    "text": "that they do this so-called log structure merge what happens is as you write this one here they store a bunch",
    "start": "2795599",
    "end": "2803849"
  },
  {
    "text": "of stuff in memory in rows and they go okay well I write it out I'll write it out in columns they do this this sort of",
    "start": "2803849",
    "end": "2811589"
  },
  {
    "text": "kind of transpose of that in Marie and then compact it later so",
    "start": "2811589",
    "end": "2817110"
  },
  {
    "text": "that's really what CQRS is about and people haven't really mentioned what there isn't last being state management",
    "start": "2817110",
    "end": "2825590"
  },
  {
    "text": "state management is a real problem in distributive processes how are you going",
    "start": "2825590",
    "end": "2830760"
  },
  {
    "text": "to handle all the things like transaction failure management availability and immutability and all those other good things can you are",
    "start": "2830760",
    "end": "2838680"
  },
  {
    "text": "aligned your transaction boundaries with your failure in your aggregate boundaries if I start seeing rest api's",
    "start": "2838680",
    "end": "2844500"
  },
  {
    "text": "like this with nested entities I know that I'm going to be in a real problem here because ok what happens when I try",
    "start": "2844500",
    "end": "2849930"
  },
  {
    "text": "to update this guy I can probably certain that resource a here one has got",
    "start": "2849930",
    "end": "2855210"
  },
  {
    "text": "multiple ones of these resort speed resorts see etc what do I do about transactionality on that we're sort of",
    "start": "2855210",
    "end": "2862440"
  },
  {
    "text": "kind of drifting into that whole graph QL world which is great for querying I'm really not so sure about the mutation",
    "start": "2862440",
    "end": "2868110"
  },
  {
    "text": "side of it anyway so there's that we then have to deal with failure",
    "start": "2868110",
    "end": "2874230"
  },
  {
    "text": "management partial rights partial failure on rice the big problem with",
    "start": "2874230",
    "end": "2880050"
  },
  {
    "text": "this one I ring up the bank and say go and play my friend 10 pounds click",
    "start": "2880050",
    "end": "2885240"
  },
  {
    "text": "button the phone goes dead I don't know whether he gets the money or not and now I have to start dealing with",
    "start": "2885240",
    "end": "2891240"
  },
  {
    "text": "currying did it happen do I try it again but D do pits all those other kind of things they inherently concurrent and",
    "start": "2891240",
    "end": "2897930"
  },
  {
    "text": "recovering this state of trying to keep a and B in synchronized is a real",
    "start": "2897930",
    "end": "2904260"
  },
  {
    "text": "problem now the the project I mentioned about what I go see 80 with the client",
    "start": "2904260",
    "end": "2909750"
  },
  {
    "text": "to have this one hour window is because the client said I want an update to happen here immediately and I said well",
    "start": "2909750",
    "end": "2915330"
  },
  {
    "text": "okay that means we have to update on our system we've got 10 20 servers I have to talk to 250 other companies and they've",
    "start": "2915330",
    "end": "2922530"
  },
  {
    "text": "got millions of mobile phones connected with sessions there's literally no way I",
    "start": "2922530",
    "end": "2928200"
  },
  {
    "text": "can make this immediate across essentially a million mobile phones can we have some time delay please and that",
    "start": "2928200",
    "end": "2935730"
  },
  {
    "text": "was really really important on mention that now in a moment so I don't pittance",
    "start": "2935730",
    "end": "2942210"
  },
  {
    "text": "of Rights be careful with that one make sure you can do that one so you can rewrite these ones and get around some of these partial failures maybe you have to",
    "start": "2942210",
    "end": "2948570"
  },
  {
    "text": "checkpoints so you can roll back just another one that pops up you may have",
    "start": "2948570",
    "end": "2954660"
  },
  {
    "text": "come across these two models but not necessarily in these under these names",
    "start": "2954660",
    "end": "2960030"
  },
  {
    "text": "the Bell Lapid Euler and the Bieber integrity model this is the top-secret one you go well okay with top-secret",
    "start": "2960030",
    "end": "2965250"
  },
  {
    "text": "information here and public information top-secret can always read the public information that's fine public can",
    "start": "2965250",
    "end": "2971760"
  },
  {
    "text": "always write up here that's not a security problem so that's this is pushing essentially data going up that",
    "start": "2971760",
    "end": "2978060"
  },
  {
    "text": "way that's fine but read and write are quite different for this one here but",
    "start": "2978060",
    "end": "2983100"
  },
  {
    "text": "then we have the Bieber integrity model which is the complete opposite of this one if I have a train system and I have",
    "start": "2983100",
    "end": "2989550"
  },
  {
    "text": "a train signalling system and a departure board I'm quite happy for the",
    "start": "2989550",
    "end": "2995520"
  },
  {
    "text": "train signalling system to write data to the departure board I would not be happy going the other way around and I'm quite",
    "start": "2995520",
    "end": "3002690"
  },
  {
    "text": "happy for they train departure board to read the signaling system but so that",
    "start": "3002690",
    "end": "3007820"
  },
  {
    "text": "can read up and this could write up they are quite opposite you do so read and write are quite different are you going",
    "start": "3007820",
    "end": "3013490"
  },
  {
    "text": "for confidentiality or integrity take your pick you really can't have both of this point",
    "start": "3013490",
    "end": "3021550"
  },
  {
    "text": "immutability immutable data is very useful for this one reference data being",
    "start": "3022420",
    "end": "3028640"
  },
  {
    "text": "immutable is great there are techniques like Russian doll caching MVCC so MVCC",
    "start": "3028640",
    "end": "3036320"
  },
  {
    "text": "multi-version concurrency control inside databases that say well actually i'm going to keep all the previous versions",
    "start": "3036320",
    "end": "3041570"
  },
  {
    "text": "of this one here and on you can just tell by the transaction number so you can't you can tell whether when you",
    "start": "3041570",
    "end": "3047690"
  },
  {
    "text": "start that's essentially time and you can't see any changes after that or icon",
    "start": "3047690",
    "end": "3052850"
  },
  {
    "text": "Postgres do that internally for instance in ODB on mysql no does as well",
    "start": "3052850",
    "end": "3058850"
  },
  {
    "text": "Russian doll crashing something that things like rails do very well so Ruby",
    "start": "3058850",
    "end": "3065180"
  },
  {
    "text": "on Rails you go well I have a big structure like this I think this is signals 37 and Basecamp there's a",
    "start": "3065180",
    "end": "3071210"
  },
  {
    "text": "classic example this one yeah I've got a project with lots of stuff like this if I change one of these things that",
    "start": "3071210",
    "end": "3077540"
  },
  {
    "text": "basically invalidates this one but that invalidates the parent but the parent that goes oh I need to rebuild but actually look these 19",
    "start": "3077540",
    "end": "3083820"
  },
  {
    "text": "things are the same but that one thing is not so if you add in comments you can update only partially often you do this",
    "start": "3083820",
    "end": "3091080"
  },
  {
    "text": "by changing the key not the value so if you start saying I have a version if",
    "start": "3091080",
    "end": "3097200"
  },
  {
    "text": "you've ever done things like taking web stuff and putting a long cashing thing by putting a version number or inside",
    "start": "3097200",
    "end": "3104310"
  },
  {
    "text": "the URL on your on your CDN so you can say here's my CSS of this version number",
    "start": "3104310",
    "end": "3110040"
  },
  {
    "text": "you can catch that forever because you'll change and you'll change a new one and have a new key you may come",
    "start": "3110040",
    "end": "3116460"
  },
  {
    "text": "across pets versus cattle as an infrastructure term which says so pets are servers we look after and we kind of",
    "start": "3116460",
    "end": "3123090"
  },
  {
    "text": "update them and this is we doing a lot of writes on this one modifications cattle is we don't care we'll just start",
    "start": "3123090",
    "end": "3128910"
  },
  {
    "text": "a new VM and it's immutable and we just kill it we want a new we want another VM we'll",
    "start": "3128910",
    "end": "3134010"
  },
  {
    "text": "start up another one that particular project we've basically said look every hour will redeploy but it's a completely",
    "start": "3134010",
    "end": "3139950"
  },
  {
    "text": "new stack of infrastructure so we didn't have to worry about Patrick servers or anything else we just said right Amazon",
    "start": "3139950",
    "end": "3145770"
  },
  {
    "text": "start up a whole new set of vm's like that get it up and running thank you and just switch the load balancers becomes",
    "start": "3145770",
    "end": "3151350"
  },
  {
    "text": "much much easier single static assignment which is things that compilers do they're basically inside",
    "start": "3151350",
    "end": "3157560"
  },
  {
    "text": "compilers like C++ compilers these days they write stuff out and they basically say look here is I'm not going to change",
    "start": "3157560",
    "end": "3164250"
  },
  {
    "text": "this anymore you don't go and change registers anymore and the CPU registers inside the CP are actually just labels",
    "start": "3164250",
    "end": "3170010"
  },
  {
    "text": "now everything's now immutable lambda architecture is also immutable the",
    "start": "3170010",
    "end": "3175260"
  },
  {
    "text": "mutability has a lot - a lot - I'm not going for it so last couple of slides or",
    "start": "3175260",
    "end": "3182820"
  },
  {
    "text": "so have you ever thought about this about availability of systems",
    "start": "3182820",
    "end": "3188130"
  },
  {
    "text": "availability is mean time to failure between failure divided I mean time between failure and mean time to recover",
    "start": "3188130",
    "end": "3195920"
  },
  {
    "text": "okay so how often does it break and how long does it take me to get it going again having stuff with lots of low balances",
    "start": "3195920",
    "end": "3202440"
  },
  {
    "text": "is great and fine so we can do all this kind of stuff by normal means we're kind of used to doing this MTBF what about",
    "start": "3202440",
    "end": "3208590"
  },
  {
    "text": "mean time to repair as MTBF goes up this is now the dominant factor how",
    "start": "3208590",
    "end": "3214530"
  },
  {
    "text": "quickly can I get running again it's not quickly how often does this break but how long does it take me actually to",
    "start": "3214530",
    "end": "3220290"
  },
  {
    "text": "work out what's happening what's going on how do I get back where I was and you",
    "start": "3220290",
    "end": "3226200"
  },
  {
    "text": "go well okay do I need to replay transaction logs do I need to go back and update states do I need to run f ck",
    "start": "3226200",
    "end": "3233220"
  },
  {
    "text": "or check disk or whatever on on the disk to get the state back again do I need to do something like that",
    "start": "3233220",
    "end": "3238460"
  },
  {
    "text": "minimizing all this lot is now the most important thing for most availability",
    "start": "3238460",
    "end": "3244680"
  },
  {
    "text": "issues because we've kind of worked out how to do all that with low balances and stuff in the cloud is this is the thing can I understand it can I make it can I",
    "start": "3244680",
    "end": "3252270"
  },
  {
    "text": "get rid of mutable state in my application and basically go kill let's start again we're there see if you can",
    "start": "3252270",
    "end": "3259140"
  },
  {
    "text": "go that way so last slide summary let's",
    "start": "3259140",
    "end": "3264980"
  },
  {
    "text": "stop treating mean right the same and see that they are different use those in some other way let's stop thinking about",
    "start": "3264980",
    "end": "3272430"
  },
  {
    "text": "vertical stuff with rest let's see if we can start thinking about horizontal stuff with business rule flow based",
    "start": "3272430",
    "end": "3280370"
  },
  {
    "text": "separating read and write api's let's just avoid having nice big diagrams with",
    "start": "3280370",
    "end": "3286580"
  },
  {
    "text": "arrows on them like this and it started we can actually understand what does that arrow mean are you pulling data are",
    "start": "3286580",
    "end": "3293970"
  },
  {
    "text": "you pushing data is a full or incremental one what are you doing about that what are the protocols etc let's",
    "start": "3293970",
    "end": "3300420"
  },
  {
    "text": "see if we can move in that direction let's see if we can move away from mutating state and having to manage a",
    "start": "3300420",
    "end": "3306240"
  },
  {
    "text": "lot of state and synchronize it towards identity and stuff with caching and immutability let's see if we can do",
    "start": "3306240",
    "end": "3313050"
  },
  {
    "text": "things like do structure changing to avoid some of the problems where are we right in one hundreed in the other and",
    "start": "3313050",
    "end": "3318240"
  },
  {
    "text": "actually it doesn't it suits one but not the other let's see if we can do some structure changing stuff to make the",
    "start": "3318240",
    "end": "3323730"
  },
  {
    "text": "right reorder it in some way that the output pages come out more easily and",
    "start": "3323730",
    "end": "3329390"
  },
  {
    "text": "see if we can add some a sinker of things with events it's not not just Message Queuing but also can we instead",
    "start": "3329390",
    "end": "3336960"
  },
  {
    "text": "of making synchronous calls can we rely on callbacks for did the payment pass while the answer is more just say we'll",
    "start": "3336960",
    "end": "3343050"
  },
  {
    "text": "take the payment and then we'll contact customer service if you didn't that kind of thing which is actually how what happens",
    "start": "3343050",
    "end": "3348250"
  },
  {
    "text": "real life and let's have live let's have a fewer my code datas services of doubt",
    "start": "3348250",
    "end": "3355390"
  },
  {
    "text": "micro data stores with rest and see if we can actually add micro services that actually have some business logic inside",
    "start": "3355390",
    "end": "3360490"
  },
  {
    "text": "them okay there you go hopefully that was give me something to",
    "start": "3360490",
    "end": "3367420"
  },
  {
    "text": "think about anyway on a Friday afternoon thank you very much [Applause]",
    "start": "3367420",
    "end": "3373710"
  },
  {
    "text": "any questions stunned silence us well",
    "start": "3373710",
    "end": "3386710"
  },
  {
    "text": "this the talk thank you right well I'll be around for the rest",
    "start": "3386710",
    "end": "3393580"
  },
  {
    "text": "of the day probably so if you have any questions you let me know",
    "start": "3393580",
    "end": "3397560"
  }
]