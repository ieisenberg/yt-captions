[
  {
    "text": "okay so I think we're ready to get started are we ready to get started Wow",
    "start": "9440",
    "end": "16590"
  },
  {
    "text": "everyone's excited I probably should get excited too so I'm actually kind of amazed how fold",
    "start": "16590",
    "end": "23580"
  },
  {
    "text": "is here so one of the things they asked us to remind everyone is is that if you're on the edges and you get kind of",
    "start": "23580",
    "end": "29610"
  },
  {
    "text": "full so feel free to to crowd in next to each other in an uncomfortable way so uh",
    "start": "29610",
    "end": "35059"
  },
  {
    "text": "but looks like we're okay so so this talk is called what's old is new again",
    "start": "35059",
    "end": "41609"
  },
  {
    "text": "an introduction to webassembly I know in the little program just set an introduction web of some wood but I like",
    "start": "41609",
    "end": "47070"
  },
  {
    "text": "to part titles and I called it this because webassembly feels kind of like a",
    "start": "47070",
    "end": "52109"
  },
  {
    "text": "rehashing of old ideas into a new form which well actually as it turns out as pretty much most of our industry that's",
    "start": "52109",
    "end": "59999"
  },
  {
    "text": "what we've been doing for the last 40 years and so yeah so I thought it was a",
    "start": "59999",
    "end": "65309"
  },
  {
    "text": "kind of a neat way to think about it and so I got this picture this old adding machine here which is sort of a",
    "start": "65309",
    "end": "70950"
  },
  {
    "text": "precursor to more complicated adding machines that we call micro processors so my name is guy Royce I'm a developer",
    "start": "70950",
    "end": "79079"
  },
  {
    "text": "evangelist today to robot developer evangelist means that my job is to come out at all these sorts of events and",
    "start": "79079",
    "end": "85200"
  },
  {
    "text": "give talks on whatever it strikes my fancy honestly as long as I mentioned",
    "start": "85200",
    "end": "91140"
  },
  {
    "text": "that hey I work for data robot and we think we're awesome and you should check us out so go do that and that's all I'm gonna say you can follow me on twitter",
    "start": "91140",
    "end": "99060"
  },
  {
    "text": "at guy Royce and I've got all my code including some of the code you'll see",
    "start": "99060",
    "end": "104219"
  },
  {
    "text": "today on at code guy dev that redirects to to my github and you can go read my",
    "start": "104219",
    "end": "110460"
  },
  {
    "text": "out-of-date blog at guy dev I you know Google released the new dev domains",
    "start": "110460",
    "end": "116100"
  },
  {
    "text": "recently and I got guy dev which is probably the most awesome domain name",
    "start": "116100",
    "end": "122159"
  },
  {
    "text": "ever it only cost me $180 American per year so but I check my stuff out online",
    "start": "122159",
    "end": "131700"
  },
  {
    "text": "follow me tweet at me whatever but this is who I am so what is web assembly so I",
    "start": "131700",
    "end": "140460"
  },
  {
    "text": "asked my computer wife Karen what webassembly was and she said it was 50% web and 50%",
    "start": "140460",
    "end": "146269"
  },
  {
    "text": "assembly which is kind of true actually it is assembly for the web but what it",
    "start": "146269",
    "end": "154459"
  },
  {
    "text": "is and what all technology always is is it's really a solution to a problem and that problem is JavaScript",
    "start": "154459",
    "end": "163030"
  },
  {
    "text": "what the hell JavaScript I went out and grabbed some random bits of JavaScript",
    "start": "163450",
    "end": "169790"
  },
  {
    "text": "that makes no sense here just to share and poke fun at JavaScript and I want to",
    "start": "169790",
    "end": "174919"
  },
  {
    "text": "qualify this by saying that I actually enjoy javascript is a programming language and that's because after I work",
    "start": "174919",
    "end": "180829"
  },
  {
    "text": "all day I go home and I drink but I",
    "start": "180829",
    "end": "185870"
  },
  {
    "text": "actually do enjoy it on ironically I like these dynamic languages and I know a lot of people are fans of typescript",
    "start": "185870",
    "end": "191659"
  },
  {
    "text": "but I still kind of like JavaScript but it's got some weird corners you know for",
    "start": "191659",
    "end": "197900"
  },
  {
    "text": "example array is equal to not array that sure okay that seems real not a number",
    "start": "197900",
    "end": "207109"
  },
  {
    "text": "is not equal to not a number that was actually a design decision so I really",
    "start": "207109",
    "end": "212479"
  },
  {
    "text": "can't fault that too much I do like number dot min value being greater than zero that has not been my experience",
    "start": "212479",
    "end": "219949"
  },
  {
    "text": "with my bank my favorite is that if you call parse int and pass it the word",
    "start": "219949",
    "end": "226280"
  },
  {
    "text": "firetruck that returns not a number totally cool effect that makes perfect",
    "start": "226280",
    "end": "232009"
  },
  {
    "text": "sense fire trucks are definitely not numbers however if you say fire truck comma 16 it returns 15 and the reason it",
    "start": "232009",
    "end": "241519"
  },
  {
    "text": "does that is because it's gonna it's looking for a hex digit F is 15 and hex and the rest of it is not number so it",
    "start": "241519",
    "end": "247430"
  },
  {
    "text": "just says now I'm done if you're wondering why I picked the word fire truck well I was looking for a word that",
    "start": "247430",
    "end": "253669"
  },
  {
    "text": "started with F and ended with other letters that expressed my opinions about",
    "start": "253669",
    "end": "261079"
  },
  {
    "text": "this particular method I like console dot log and then you can just call that",
    "start": "261079",
    "end": "266300"
  },
  {
    "text": "call repeatedly and that's because calls a function and every function in",
    "start": "266300",
    "end": "272029"
  },
  {
    "text": "JavaScript has the call function on it include call and so you can call it as many times as you like before you actually",
    "start": "272029",
    "end": "277609"
  },
  {
    "text": "apply a function which is also a function that's on every function including itself and so you can do",
    "start": "277609",
    "end": "282799"
  },
  {
    "text": "really goofy things like that and the math dot min is greater than math dot max true not sure how that's true I mean",
    "start": "282799",
    "end": "292399"
  },
  {
    "text": "even if you're doing like you know floating point or the integer and you've",
    "start": "292399",
    "end": "297799"
  },
  {
    "text": "gone around the horn you've you've overflowed I don't think that's true so yeah Java scripts got some weird",
    "start": "297799",
    "end": "305689"
  },
  {
    "text": "corners now in defense of JavaScript you know it was written in a week and so I'm",
    "start": "305689",
    "end": "312409"
  },
  {
    "text": "willing to cut us some slack but you know sometimes if you're doing front-end",
    "start": "312409",
    "end": "318589"
  },
  {
    "text": "development a lot of problems is is that well you can choose any language you want to do front-end development as long",
    "start": "318589",
    "end": "324259"
  },
  {
    "text": "as it's JavaScript right that's the only game in town if you want to do web client site development you're doing",
    "start": "324259",
    "end": "331219"
  },
  {
    "text": "JavaScript and then what some of you are thinking right now you're thinking well now I can you know use a transpiler and",
    "start": "331219",
    "end": "337369"
  },
  {
    "text": "use some other language like an elm or typescript and that's true you just have",
    "start": "337369",
    "end": "344449"
  },
  {
    "text": "to set up a simple modern JavaScript environment with a bunch of tools some of these aren't actually all that modern",
    "start": "344449",
    "end": "349639"
  },
  {
    "text": "anymore in JavaScript terms because they're you know a few weeks old but you've got all these these tools these",
    "start": "349639",
    "end": "356689"
  },
  {
    "text": "are some ones I picked at random but I've sort of got this thought in my head it's like if I have to have an NPM tool",
    "start": "356689",
    "end": "362869"
  },
  {
    "text": "that I install that helps me create projects for my project maybe we're",
    "start": "362869",
    "end": "368119"
  },
  {
    "text": "doing it wrong right that's that's actually kind of a convoluted if i--if setting up the project and all of my",
    "start": "368119",
    "end": "373999"
  },
  {
    "text": "dependencies is that hard maybe it's too hard but some of these are quite",
    "start": "373999",
    "end": "379279"
  },
  {
    "text": "frustrating and in fact if you look at the image in the background I had a tendency to a lot of these tools are",
    "start": "379279",
    "end": "385129"
  },
  {
    "text": "knives and I think that's my subconscious trying to tell me something",
    "start": "385129",
    "end": "390579"
  },
  {
    "text": "but there's actually an even more fundamental problem to a lot of this due to javascript in the browser and that's",
    "start": "390579",
    "end": "397519"
  },
  {
    "text": "that it's interpreted and so for every single javascript file you've got to",
    "start": "397519",
    "end": "402979"
  },
  {
    "text": "download that file and you can make that faster by minifying it that helps still you still have to download it and",
    "start": "402979",
    "end": "410700"
  },
  {
    "text": "then you have to take that file and you have to tokenize it and find those individual syntactic tokens that you",
    "start": "410700",
    "end": "415860"
  },
  {
    "text": "care about not you personally but the browser has to do that god I wouldn't",
    "start": "415860",
    "end": "422220"
  },
  {
    "text": "wanna have to do that personally that'd be no no no let's run this JavaScript okay let's pull it apart by hand you know",
    "start": "422220",
    "end": "428430"
  },
  {
    "text": "and after you've tokenized that you got a big list of tokens then you've got to parse that and build a syntax tree and",
    "start": "428430",
    "end": "434180"
  },
  {
    "text": "then you execute that tree and this is a slow process relatively speaking and",
    "start": "434180",
    "end": "441570"
  },
  {
    "text": "it's one of the reasons why I interpreted languages are kind of slow but what if there's a way to avoid all",
    "start": "441570",
    "end": "449040"
  },
  {
    "text": "these steps what if you could compile code for the browser what if you could compile that JavaScript or anything",
    "start": "449040",
    "end": "456420"
  },
  {
    "text": "right well that would solve a lot of problems right you would well tokenizing",
    "start": "456420",
    "end": "462540"
  },
  {
    "text": "and building trees is what compilers do and so if you could compile that code",
    "start": "462540",
    "end": "467820"
  },
  {
    "text": "then you could skip those two steps if you could compile code that would run on",
    "start": "467820",
    "end": "472950"
  },
  {
    "text": "the browser you wouldn't be stuck with JavaScript you could pick a different language you could do it in rust for",
    "start": "472950",
    "end": "480840"
  },
  {
    "text": "example or C++ because who doesn't want to build a web app and C++ guess what",
    "start": "480840",
    "end": "488700"
  },
  {
    "text": "everybody pointers are back and the tooling could be a lot simpler that is",
    "start": "488700",
    "end": "496590"
  },
  {
    "text": "what web assembly is trying to do web assembly is an assembly language for the",
    "start": "496590",
    "end": "501600"
  },
  {
    "text": "web it's and that's actually a slight misnomer and we'll get into that in greater detail what it really is is it's",
    "start": "501600",
    "end": "508380"
  },
  {
    "text": "a virtual machine for the web it's running in the browser so uh quick show hands from the audience so if I ask for",
    "start": "508380",
    "end": "516090"
  },
  {
    "text": "a show of hands how many of you won't raise your hand just kidding",
    "start": "516090",
    "end": "522710"
  },
  {
    "text": "how many of you have programmed in assembly language before okay how many",
    "start": "522710",
    "end": "528360"
  },
  {
    "text": "of you been paid to do it a handful okay how many just did it in university and then have not touched it",
    "start": "528360",
    "end": "535920"
  },
  {
    "text": "since yeah I did assembly language in the 80s when I was in high school and I'm in my",
    "start": "535920",
    "end": "544480"
  },
  {
    "text": "late 40s and I'm on the old side for having done it and so I thought it might be worthwhile to do a little refresher",
    "start": "544480",
    "end": "551079"
  },
  {
    "text": "on what machine code is how sembly works and I'll go kind of quick because I I",
    "start": "551079",
    "end": "557259"
  },
  {
    "text": "really want to spend more time in the demo than I do want to talking about the past but there's it kind of builds up it's relevant so as we know computers",
    "start": "557259",
    "end": "566230"
  },
  {
    "text": "only to understand ones and zeros right that's the thing they always teach you when you're a little kid about computers you're first learning about them but",
    "start": "566230",
    "end": "574149"
  },
  {
    "text": "that is literally true actually is not literally true it really only understands voltages all right and then",
    "start": "574149",
    "end": "580420"
  },
  {
    "text": "we say those voltages are ones and zeros but what we end up programming in to a microprocessor is a series of",
    "start": "580420",
    "end": "587199"
  },
  {
    "text": "instructions that are a patterns pattern of ones and zeros and we can represent that lots of ways so here is a simple",
    "start": "587199",
    "end": "594610"
  },
  {
    "text": "little assembly program that just does a doubly nested loop on the left here I've got an address just a random address in hex and memory",
    "start": "594610",
    "end": "602189"
  },
  {
    "text": "we've got a binary representation of those instructions to the microprocessor now you can see trying to code in binary",
    "start": "602189",
    "end": "609009"
  },
  {
    "text": "that would be very painful that's hard to read I just all I see is just a pattern I don't really see any meaning",
    "start": "609009",
    "end": "615910"
  },
  {
    "text": "in there and so we could do it in hex instead and now that would be a little easier because it's a little easier to",
    "start": "615910",
    "end": "622540"
  },
  {
    "text": "read those but the the true moment of",
    "start": "622540",
    "end": "629069"
  },
  {
    "text": "parenting all the good metaphor I'm failing but the true more powerful",
    "start": "629069",
    "end": "635410"
  },
  {
    "text": "version of doing that is to create symbols and so over here we have assembly language come on cursor go to the right there we",
    "start": "635410",
    "end": "640689"
  },
  {
    "text": "go and so each of these symbols interestingly corresponds to exactly one",
    "start": "640689",
    "end": "646029"
  },
  {
    "text": "byte that the instructor the microprocessor receives and so there's a one-to-one relationship between that",
    "start": "646029",
    "end": "651130"
  },
  {
    "text": "assembly language and the byte that gets sent to the microprocessor this is a 6502 assembly language because that was",
    "start": "651130",
    "end": "658569"
  },
  {
    "text": "the what I programmed on in the 80s when I was kid and it's kind of interesting to look at this because you can see",
    "start": "658569",
    "end": "663790"
  },
  {
    "text": "different things about that microprocessor here so for example you can see the in the addresses",
    "start": "663790",
    "end": "670899"
  },
  {
    "text": "here we got loop 2 which is address 0 2 0 4 and if we see the jump to loop 2 you",
    "start": "670899",
    "end": "678399"
  },
  {
    "text": "can see right over here there's the 0 2 0 4 and you can see the the big endian",
    "start": "678399",
    "end": "683500"
  },
  {
    "text": "notation there which is kind of neat that's not something that I've you know",
    "start": "683500",
    "end": "689470"
  },
  {
    "text": "really ever have to think about on a daily basis you all learn about you know a little Indian and big Indian notation but it doesn't really come up very often",
    "start": "689470",
    "end": "695550"
  },
  {
    "text": "one programming in Ruby so but so this was assembly and so we started out you",
    "start": "695550",
    "end": "701980"
  },
  {
    "text": "know doing hex and binary and stuff like that and really really early primitive computers assembly was a great move forward because it allowed us to program",
    "start": "701980",
    "end": "708490"
  },
  {
    "text": "in symbols that we recognized things that we could actually think think about ldy saying load the value into the Y",
    "start": "708490",
    "end": "715029"
  },
  {
    "text": "register is way easier to understand because you got the LD y to remind you what it means as opposed to a 0 which",
    "start": "715029",
    "end": "722130"
  },
  {
    "text": "you could mean anything right and so assembly was a great move forward",
    "start": "722130",
    "end": "728170"
  },
  {
    "text": "in programming and everyone loved it except for von Norman as it turned out he has a great quote here he was using",
    "start": "728170",
    "end": "735670"
  },
  {
    "text": "grad students to hand assemble programs and then put them in and of course grad",
    "start": "735670",
    "end": "744730"
  },
  {
    "text": "students being the lazy human beings that all good programmers are I decided",
    "start": "744730",
    "end": "750069"
  },
  {
    "text": "to write an assembler and he got angry when he found out they'd written an assembler he said it was a waste of a",
    "start": "750069",
    "end": "757449"
  },
  {
    "text": "valuable scientific computing instrument to use it to do clerical work now I find",
    "start": "757449",
    "end": "763660"
  },
  {
    "text": "this an extraordinarily funny so um how many of you say that your day job of",
    "start": "763660",
    "end": "769360"
  },
  {
    "text": "programming is using computers do clerical work that's like everything we",
    "start": "769360",
    "end": "774459"
  },
  {
    "text": "do right I work for an insurance company in the US for about 12 years insurance is clerical work I mean I've",
    "start": "774459",
    "end": "783790"
  },
  {
    "text": "got this magic device that we all have in our pockets mine so you're telling me how much time I have left and I don't",
    "start": "783790",
    "end": "789790"
  },
  {
    "text": "even use it for clerical work I look at at the watch you know well I guess cat",
    "start": "789790",
    "end": "795519"
  },
  {
    "text": "videos on the internet is that still a funny cliche I'm gonna have lost track but but I use it to watch worthless",
    "start": "795519",
    "end": "802500"
  },
  {
    "text": "entertainment I don't use it for clerical work I use it for entertainment and so I think this is a great example",
    "start": "802500",
    "end": "808780"
  },
  {
    "text": "of just sometimes even the greatest geniuses can sometimes have a blind spot",
    "start": "808780",
    "end": "814510"
  },
  {
    "text": "as to the potential of the thing and it's kind of funny in hindsight yeah",
    "start": "814510",
    "end": "819550"
  },
  {
    "text": "which is always 20/20 of course but he would be proud of me because that code we were looking at earlier is actually",
    "start": "819550",
    "end": "825460"
  },
  {
    "text": "the first assembly program that I ever wrote and I actually wrote out the",
    "start": "825460",
    "end": "831580"
  },
  {
    "text": "assembly on the left here on paper and I still have this I kept it after 30 years",
    "start": "831580",
    "end": "837880"
  },
  {
    "text": "and then I put the memory address and then I hand assembled it into hex and",
    "start": "837880",
    "end": "842890"
  },
  {
    "text": "then I had a circuit board and I could key in the hex code into the keypad there so von Neumann would be proud",
    "start": "842890",
    "end": "852570"
  },
  {
    "text": "maybe eventually of course we simply",
    "start": "852570",
    "end": "858340"
  },
  {
    "text": "gave way to higher order languages like C and C++ and and and eventually things that we use today more often and I know",
    "start": "858340",
    "end": "866320"
  },
  {
    "text": "we could take that C code and combine it and compile it right into that machine",
    "start": "866320",
    "end": "871600"
  },
  {
    "text": "code and so we didn't need to even think about what the instruction set on that microprocessor looked like anymore and",
    "start": "871600",
    "end": "876970"
  },
  {
    "text": "that was a great advancement forward and you could run it on your microprocessor and everything was good but there was a",
    "start": "876970",
    "end": "884020"
  },
  {
    "text": "small problem with that and that is that there are a lot of microprocessors in the world and so if you had some say a",
    "start": "884020",
    "end": "892030"
  },
  {
    "text": "video game you wrote aside from differences of hardware architecture the physical microprocessor",
    "start": "892030",
    "end": "897220"
  },
  {
    "text": "might be like a motorola versus an Intel microprocessor have different instructions sets and so the assembly",
    "start": "897220",
    "end": "903580"
  },
  {
    "text": "code the the machine code you needed to generate was different and so you had to compile it twice and then as",
    "start": "903580",
    "end": "911040"
  },
  {
    "text": "backwards-compatible microprocessors came out people would compile it to the lowest common denominator so you've got",
    "start": "911040",
    "end": "917320"
  },
  {
    "text": "a 286 machine but the code you're running is for an 80 86 microprocessor",
    "start": "917320",
    "end": "923680"
  },
  {
    "text": "and so it still runs on your 286 but can't take advantage of the advanced",
    "start": "923680",
    "end": "928780"
  },
  {
    "text": "features that make it more powerful and so that was a bit of a problem and so we",
    "start": "928780",
    "end": "934690"
  },
  {
    "text": "solved it using the solve that we always use in computer programming which is we created another layer of",
    "start": "934690",
    "end": "939880"
  },
  {
    "text": "abstraction and in this case the layer of abstraction was the virtual machine I first ran into this idea in Java in the",
    "start": "939880",
    "end": "947710"
  },
  {
    "text": "in the 90s with the java virtual machine but it's not a it's not a new idea",
    "start": "947710",
    "end": "954160"
  },
  {
    "text": "but the idea there was is that if we could create a virtual microprocessor that we compiled everything to instead then that would be a lot a lot easier",
    "start": "954160",
    "end": "960880"
  },
  {
    "text": "then I could write it once and debug it everywhere as opposed to writing it once and running it everywhere and or and so",
    "start": "960880",
    "end": "968860"
  },
  {
    "text": "that worked pretty well and so this C code here now is Java code and we compile that through Java bytecode and",
    "start": "968860",
    "end": "974950"
  },
  {
    "text": "then that runs on the virtual processor which then interpret runs it as interpreted against the physical",
    "start": "974950",
    "end": "982510"
  },
  {
    "text": "microprocessor and that was great and it actually led to some advantages",
    "start": "982510",
    "end": "989830"
  },
  {
    "text": "where you could start doing things like well I can compile this code just in time so I can take that bytecode and",
    "start": "989830",
    "end": "995350"
  },
  {
    "text": "compile it into machine code as needed and I could compile it to the exact",
    "start": "995350",
    "end": "1001770"
  },
  {
    "text": "specific microprocessor you had it didn't have to be lowest common denominator and that is what we're doing",
    "start": "1001770",
    "end": "1010680"
  },
  {
    "text": "with webassembly webassembly is that same layer of abstraction on top of a same virtual microprocessor but it's",
    "start": "1010680",
    "end": "1017100"
  },
  {
    "text": "running in your browser and it doesn't do the just-in-time compilation yet but",
    "start": "1017100",
    "end": "1022290"
  },
  {
    "text": "it will because it's such an obvious thing to do and there the browser's can",
    "start": "1022290",
    "end": "1027329"
  },
  {
    "text": "implement that quite easily well not easily but they could search it's very it's a very doable thing web",
    "start": "1027329",
    "end": "1033959"
  },
  {
    "text": "assembly is just that same concept of virtual machine but in a browser and",
    "start": "1033959",
    "end": "1039300"
  },
  {
    "text": "it's worth noting people often ask what browsers support this well I've got four",
    "start": "1039300",
    "end": "1045209"
  },
  {
    "text": "icons there which you probably recognize right we've got Chrome Safari Internet Explorer sorry edge years and years of",
    "start": "1045209",
    "end": "1054330"
  },
  {
    "text": "habit I actually totally did that by mistake that wasn't a joke and because",
    "start": "1054330",
    "end": "1059430"
  },
  {
    "text": "we all know Safari is the new ie and and there's the fart speaking of sorry and",
    "start": "1059430",
    "end": "1065400"
  },
  {
    "text": "Safari and all four of these major browser vendors support web assembly very very thoroughly",
    "start": "1065400",
    "end": "1071670"
  },
  {
    "text": "and even their mobile equivalents also support them so you can run web assembly code in Safari on your iPhone or in in",
    "start": "1071670",
    "end": "1079890"
  },
  {
    "text": "Chrome on your Android phone and so that's kind of interesting because that",
    "start": "1079890",
    "end": "1085470"
  },
  {
    "text": "means I could run this stuff on my phone so here's how web assembly sort of lives",
    "start": "1085470",
    "end": "1092490"
  },
  {
    "text": "in the browser to think of it conceptually the main thing to understand is that a web assembly module",
    "start": "1092490",
    "end": "1097980"
  },
  {
    "text": "is say it's a it's a wasm file and we use a dot wisedom extension and it's just another file that's downloaded from",
    "start": "1097980",
    "end": "1104400"
  },
  {
    "text": "your web server just like your CSS just like your HTML just like your JavaScript and so it's just another resource that",
    "start": "1104400",
    "end": "1110550"
  },
  {
    "text": "web servers serve off it's got content type application slash is it lasts more web assembly I can't",
    "start": "1110550",
    "end": "1116910"
  },
  {
    "text": "remember but so you might have to tweak your web server to have an extra content type but other than that it's just a",
    "start": "1116910",
    "end": "1123690"
  },
  {
    "text": "straight-up it's very typical it's just another file to download and in the browser itself you can see here on the",
    "start": "1123690",
    "end": "1129660"
  },
  {
    "text": "Left we've got our trifecta front-end web development our CSS or HTML and our",
    "start": "1129660",
    "end": "1134670"
  },
  {
    "text": "JavaScript and three separate files and then we have this web assembly module here and then we're showing that the",
    "start": "1134670",
    "end": "1141510"
  },
  {
    "text": "virtual machine they're sort of symbolically and I've got these arrows showing how they can interact and so you",
    "start": "1141510",
    "end": "1149460"
  },
  {
    "text": "can see I've got an arrow pointing both directions from the web assembly to the JavaScript and the JavaScript to the web assembly and that's because JavaScript",
    "start": "1149460",
    "end": "1156240"
  },
  {
    "text": "is used to instantiate that web assembly and then you can call functions that you",
    "start": "1156240",
    "end": "1161850"
  },
  {
    "text": "have expect exported in that web assembly module but web assembly can also call JavaScript functions that have",
    "start": "1161850",
    "end": "1167520"
  },
  {
    "text": "been imported into it so they can call each other so you can do callbacks and stuff like that and we also of course",
    "start": "1167520",
    "end": "1174390"
  },
  {
    "text": "use JavaScript to manipulate the Dom but there's a really significant arrow missing and that's the error right here",
    "start": "1174390",
    "end": "1181320"
  },
  {
    "text": "what assembly can't talk to the Dom directly not yet we're all web assembly",
    "start": "1181320",
    "end": "1187500"
  },
  {
    "text": "can do is interact with JavaScript and JavaScript can interact with that and so you can do Dom manipulation but you have",
    "start": "1187500",
    "end": "1192510"
  },
  {
    "text": "to create these bridge functions between web assembly written in JavaScript to do those sorts of things so if you want to",
    "start": "1192510",
    "end": "1198150"
  },
  {
    "text": "you know insert an element then you'd have to call a JavaScript function that would insert that element for you",
    "start": "1198150",
    "end": "1204990"
  },
  {
    "text": "so that's that's sort of a missing piece it makes things a little more complicated or as I like to say",
    "start": "1204990",
    "end": "1210490"
  },
  {
    "text": "interesting and it's sort of the ecosystem they live in I'm gonna get",
    "start": "1210490",
    "end": "1217810"
  },
  {
    "text": "into actually building some simple stuff with webassembly and I'm gonna be using two main languages to do this of course",
    "start": "1217810",
    "end": "1224530"
  },
  {
    "text": "I'm going to using JavaScript because we have to use JavaScript to actually",
    "start": "1224530",
    "end": "1229590"
  },
  {
    "text": "create that web of some instantiate that webassembly module and to get it to start doing anything and for the web",
    "start": "1229590",
    "end": "1236440"
  },
  {
    "text": "assembly code I'm gonna use a web assembly text format so web assembly is",
    "start": "1236440",
    "end": "1244090"
  },
  {
    "text": "actually slightly miss named it's really web byte code right that's that's the",
    "start": "1244090",
    "end": "1249850"
  },
  {
    "text": "key innovation is we haven't created an assembly language for the browser we've created a byte code for the browser and",
    "start": "1249850",
    "end": "1255940"
  },
  {
    "text": "so webassembly text format is the assembly language for that byte code I",
    "start": "1255940",
    "end": "1264130"
  },
  {
    "text": "will say that I do not recommend anyone use web assembly text format for production code because who wants to",
    "start": "1264130",
    "end": "1270790"
  },
  {
    "text": "build their web apps in assembly language I mean other than me but it is",
    "start": "1270790",
    "end": "1276550"
  },
  {
    "text": "interesting to see how it all works those are the two main languages I'm gonna be using today to show how web",
    "start": "1276550",
    "end": "1282070"
  },
  {
    "text": "assembly works I am going to do a little bit of rust at the end I'm not gonna code it I'm just gonna show that it does",
    "start": "1282070",
    "end": "1287350"
  },
  {
    "text": "indeed work I'm not actually a very strong rust developer so I cobbled together a simple implementation of",
    "start": "1287350",
    "end": "1293440"
  },
  {
    "text": "fizzbuzz and then and then I swap it out Martha Stewart style so so let's get",
    "start": "1293440",
    "end": "1300670"
  },
  {
    "text": "started so here is a simple web assembly module in web assembly text format you can see",
    "start": "1300670",
    "end": "1306910"
  },
  {
    "text": "here we've got this little keyword of the top module that says hey this is a module here we're exporting a function",
    "start": "1306910",
    "end": "1313090"
  },
  {
    "text": "we're gonna export it as ad and internally it's referenced as dollar ad and then here's our implementation to",
    "start": "1313090",
    "end": "1319030"
  },
  {
    "text": "that function all right we see here we that ad function takes a parameter named dollar a and it's a 32-bit integer takes",
    "start": "1319030",
    "end": "1326380"
  },
  {
    "text": "another parameter dollar B it's a 32-bit integer and it has a result a return value of a 32-bit integer so this is a",
    "start": "1326380",
    "end": "1333970"
  },
  {
    "text": "very complicated function can we add a plus B yes yes we can and",
    "start": "1333970",
    "end": "1339270"
  },
  {
    "text": "then we in the implementation here we get those two local values off of those parameters and then we call add and then",
    "start": "1339270",
    "end": "1346260"
  },
  {
    "text": "we get a results and it's worth noting that webassembly is a stacked based",
    "start": "1346260",
    "end": "1353360"
  },
  {
    "text": "virtual machine and so what that means is that there's no local variables there",
    "start": "1353360",
    "end": "1359340"
  },
  {
    "text": "actually is capability for local variables but you don't need to use them as a matter of course and so here we are",
    "start": "1359340",
    "end": "1366660"
  },
  {
    "text": "our add functions been called our stack is empty so we call get local dollar a",
    "start": "1366660",
    "end": "1375150"
  },
  {
    "text": "and that gets that dollar a parameter and pushes that onto the stack then we",
    "start": "1375150",
    "end": "1381750"
  },
  {
    "text": "call get local with dollar B and unsurprisingly it does exactly the same thing so now we've got a stack with the",
    "start": "1381750",
    "end": "1386790"
  },
  {
    "text": "values of 5 and 10 on it when we call add it pops both of those values off the",
    "start": "1386790",
    "end": "1392370"
  },
  {
    "text": "stack adds them together and pushes that value back onto the stack so we're just",
    "start": "1392370",
    "end": "1398550"
  },
  {
    "text": "using the stack to keep track of our state now for adding two numbers together this is pretty straightforward but you could see how this could get",
    "start": "1398550",
    "end": "1404430"
  },
  {
    "text": "messy quick right if you're trying to do anything any kind of math problem it has parentheses in it it gets hard but at",
    "start": "1404430",
    "end": "1412020"
  },
  {
    "text": "the end of the function we have a single value on the stack that's the return value and so that's that's that's that",
    "start": "1412020",
    "end": "1420090"
  },
  {
    "text": "stack based thing working there we go there's our return value to do this from",
    "start": "1420090",
    "end": "1427830"
  },
  {
    "text": "the JavaScript side you have to instantiate it and so here we've got two ways that you can Stan she ate the first",
    "start": "1427830",
    "end": "1434700"
  },
  {
    "text": "one they both use promises and so you could also use async await but we call fetch to go pull down that Bassem file",
    "start": "1434700",
    "end": "1441510"
  },
  {
    "text": "and then we get a response so we get the bytes out of that response and we use",
    "start": "1441510",
    "end": "1447270"
  },
  {
    "text": "those bytes to instantiate it and then once we instantiate it we get a module that we can use and that's okay it's a",
    "start": "1447270",
    "end": "1454410"
  },
  {
    "text": "little less performant than just calling instantiate streaming which we'll start",
    "start": "1454410",
    "end": "1459980"
  },
  {
    "text": "assembling our it'll start interpreting like interpreting that web assembly",
    "start": "1459980",
    "end": "1465030"
  },
  {
    "text": "module right off the bat so here's the difference here calling web sembly instantiate with bytes is",
    "start": "1465030",
    "end": "1471330"
  },
  {
    "text": "okay calling with instantiate streaming is better and my examples actually use",
    "start": "1471330",
    "end": "1476580"
  },
  {
    "text": "the first format because when I first put this talk together or I don't know it's been about nine months now Safari",
    "start": "1476580",
    "end": "1482430"
  },
  {
    "text": "was having a little bit of trouble with the fur the second syntax and so I was easy on it but uh so we just you say",
    "start": "1482430",
    "end": "1491490"
  },
  {
    "text": "what would somebody instantiating handed bytes that's really all there is to it once you've got that module it's just a",
    "start": "1491490",
    "end": "1497730"
  },
  {
    "text": "bag of functions so module instance two exports exports it's where all the exported functions are at and we have an",
    "start": "1497730",
    "end": "1504570"
  },
  {
    "text": "ad there we pass in our five and ten and we get 15 back as our X and so this works in either of these scenarios when",
    "start": "1504570",
    "end": "1515460"
  },
  {
    "text": "I mentioned that we can also call back from web assembly modules into JavaScript and so here we've got the you",
    "start": "1515460",
    "end": "1523170"
  },
  {
    "text": "know that that calls to add on the left here we've got our JavaScript code on the right here we have sort of a block",
    "start": "1523170",
    "end": "1529200"
  },
  {
    "text": "representation of our web assembly module and we see it's got a dollar add the dollar subtract in a dollar log and",
    "start": "1529200",
    "end": "1535610"
  },
  {
    "text": "dollar log is an imported function that allows us to call this console dot log",
    "start": "1535610",
    "end": "1541460"
  },
  {
    "text": "that I've implemented here I did it as an arrow function simply because it looked better on one line of code that's",
    "start": "1541460",
    "end": "1548190"
  },
  {
    "text": "the only reason it doesn't have to be an error function to do an import this is",
    "start": "1548190",
    "end": "1558030"
  },
  {
    "text": "what you have to do on the web assembly text format size so down here in the bottom will say import and we got these",
    "start": "1558030",
    "end": "1563340"
  },
  {
    "text": "two magic strings J s and log and then we say hey take this function you're importing and assign it to dollar log",
    "start": "1563340",
    "end": "1569610"
  },
  {
    "text": "and I'm fully expecting it to only take a 32-bit integer as a parameter you might notice that I'm logging numbers",
    "start": "1569610",
    "end": "1576450"
  },
  {
    "text": "there's a reason for that what I'll get to and so that's what you have to do on",
    "start": "1576450",
    "end": "1582690"
  },
  {
    "text": "the web assembly side on the JavaScript side what you have to do is you create this imports object that you see here in",
    "start": "1582690",
    "end": "1588450"
  },
  {
    "text": "the middle and this imports object has just a doubly nested dictionary",
    "start": "1588450",
    "end": "1594200"
  },
  {
    "text": "JavaScript object and that jsn that log correspond to those two magic",
    "start": "1594200",
    "end": "1599850"
  },
  {
    "text": "strings that were in the down here in the import and once you have that",
    "start": "1599850",
    "end": "1607110"
  },
  {
    "text": "imports object you pass it into your call to instantiate streaming as the second argument and now all the things",
    "start": "1607110",
    "end": "1613169"
  },
  {
    "text": "that are in there are potentially available to that web assembly module and so this is how you can hand",
    "start": "1613169",
    "end": "1618750"
  },
  {
    "text": "functions into web assembly for it to call back on there's actually another",
    "start": "1618750",
    "end": "1625620"
  },
  {
    "text": "way to get code running inside of web assembly and that's with a start",
    "start": "1625620",
    "end": "1632120"
  },
  {
    "text": "instruction here so I'm saying start dollar main and what start dollar main",
    "start": "1632120",
    "end": "1637200"
  },
  {
    "text": "does in web assembly text format is it says when you are instantiated start",
    "start": "1637200",
    "end": "1642330"
  },
  {
    "text": "running the main function you can think of that as a void main or maybe a constructor depending on how you want to",
    "start": "1642330",
    "end": "1647669"
  },
  {
    "text": "think about it but it's a way of kicking off that code and so you could create a module that has no exports and only has imports and",
    "start": "1647669",
    "end": "1655350"
  },
  {
    "text": "main is what starts it off running and then it just calls back in or interacts with the JavaScript in the breath",
    "start": "1655350",
    "end": "1660690"
  },
  {
    "text": "through the browser interacts with the browser through JavaScript that it imported in fact that probably is if you",
    "start": "1660690",
    "end": "1668220"
  },
  {
    "text": "really wanted to build that web app and C++ or rust that'd probably be the way to tackle it yeah there we go another",
    "start": "1668220",
    "end": "1678000"
  },
  {
    "text": "slide just showing that better I mentioned that I had a log function that",
    "start": "1678000",
    "end": "1685620"
  },
  {
    "text": "took numbers so this is one of the things that everyone kind of groans at with web assembly is when I say it",
    "start": "1685620",
    "end": "1692460"
  },
  {
    "text": "doesn't know what strings are like how do we program without strings everything's a string in fact what",
    "start": "1692460",
    "end": "1700200"
  },
  {
    "text": "Miceli doesn't even know what a raised are it just doesn't have a concept for a raise and if you think about it that",
    "start": "1700200",
    "end": "1706740"
  },
  {
    "text": "actually makes a lot of sense right a microprocessor doesn't know what a raise are a microprocessor doesn't know the",
    "start": "1706740",
    "end": "1712830"
  },
  {
    "text": "strings are those are structures that were brought in later as part of higher-order programming languages web",
    "start": "1712830",
    "end": "1718650"
  },
  {
    "text": "assembly starting to be that low-level technologies to enable higher level programming languages other than",
    "start": "1718650",
    "end": "1723659"
  },
  {
    "text": "javascript in the browser and so it makes sense that it would only operate with numbers but there is a way to get",
    "start": "1723659",
    "end": "1729870"
  },
  {
    "text": "around that because at some point you do need to actually do strings and that has to do with a shared",
    "start": "1729870",
    "end": "1735419"
  },
  {
    "text": "memory and so in webassembly you've got this concept of a shared memory module and here we're importing it right there",
    "start": "1735419",
    "end": "1744499"
  },
  {
    "text": "and it's imported in the imports object exactly the same way that imported functions are and then once you have",
    "start": "1744499",
    "end": "1751739"
  },
  {
    "text": "that shared memory you can start manipulating it so the data statement is a constant just when this module loads",
    "start": "1751739",
    "end": "1759210"
  },
  {
    "text": "shove this right here and so I'm saying in position zero Chev the value of 13 so I 32 console 0",
    "start": "1759210",
    "end": "1766940"
  },
  {
    "text": "13 so that puts a hard-coded value in there but when in code in your main",
    "start": "1766940",
    "end": "1773759"
  },
  {
    "text": "function for example you can also manipulate that and so here I'm saying I'm pushing on to the stack by 32 Const",
    "start": "1773759",
    "end": "1781289"
  },
  {
    "text": "of 1 says at position 1 value of 23 is",
    "start": "1781289",
    "end": "1787169"
  },
  {
    "text": "the next value on the stack and then store it and so you can manipulate this as well this is a lot of code for not a",
    "start": "1787169",
    "end": "1794489"
  },
  {
    "text": "lot of work isn't it on the JavaScript",
    "start": "1794489",
    "end": "1800730"
  },
  {
    "text": "side you have to create that memory object so I've got a web assembly memory and then there it is being imported all",
    "start": "1800730",
    "end": "1809309"
  },
  {
    "text": "right so when we create it nulls it all out there's our import and we pass that imports into our instantiate streaming",
    "start": "1809309",
    "end": "1817529"
  },
  {
    "text": "and then this is running that code we're just looking at so 12 13 and 23 automatically get populated and then we",
    "start": "1817529",
    "end": "1825929"
  },
  {
    "text": "can in JavaScript take that memory buffer and put it through un8 array and then just treat it like an array and go",
    "start": "1825929",
    "end": "1833070"
  },
  {
    "text": "access those values so that's a way of sharing data back and forth between",
    "start": "1833070",
    "end": "1839190"
  },
  {
    "text": "JavaScript and web assembly and you can manipulate that buffer as well and just",
    "start": "1839190",
    "end": "1844919"
  },
  {
    "text": "say Sherrod's you know some 3 equals 42 it chefs 42 a position 3 and so you can",
    "start": "1844919",
    "end": "1851879"
  },
  {
    "text": "manipulate this quite easily more much more easily on the JavaScript side than you can on the web assembly side and so",
    "start": "1851879",
    "end": "1859379"
  },
  {
    "text": "you can use this to do strings so I said webassembly doesn't do strings that's",
    "start": "1859379",
    "end": "1865379"
  },
  {
    "text": "not completely true there actually is this idea of a string",
    "start": "1865379",
    "end": "1870420"
  },
  {
    "text": "constant in the web assembly text format so right here I've said at position zero put this string and that last bit of",
    "start": "1870420",
    "end": "1879120"
  },
  {
    "text": "number there that slice zero zero that is saying select zero means a number",
    "start": "1879120",
    "end": "1885270"
  },
  {
    "text": "follows and then I put the number zero which means I have made a null",
    "start": "1885270",
    "end": "1892620"
  },
  {
    "text": "terminated string what's old is new again but it's it's neat because it's",
    "start": "1892620",
    "end": "1900210"
  },
  {
    "text": "actually supporting utf-8 so this is you know I used emojis here this is hello",
    "start": "1900210",
    "end": "1905880"
  },
  {
    "text": "world and emoji right yep the waving hand you got the little globe icon I live in the US so I use the",
    "start": "1905880",
    "end": "1912630"
  },
  {
    "text": "you know the the the Western Hemisphere facing I had to pick one I was like I",
    "start": "1912630",
    "end": "1919200"
  },
  {
    "text": "want the one that has my house in it so but so you can store that string right",
    "start": "1919200",
    "end": "1924270"
  },
  {
    "text": "in there and then what you can do is if you want to return a string as you can",
    "start": "1924270",
    "end": "1930000"
  },
  {
    "text": "return the address where the string starts again can anyone say pointers",
    "start": "1930000",
    "end": "1937610"
  },
  {
    "text": "what's all this new again right and so now you've got a pointer to that string",
    "start": "1937610",
    "end": "1943350"
  },
  {
    "text": "and you know at the end of the string there's a zero so you can then say start here find the zero take everything",
    "start": "1943350",
    "end": "1948600"
  },
  {
    "text": "in-between convert it to text and you can do that from JavaScript here and so this is some",
    "start": "1948600",
    "end": "1954630"
  },
  {
    "text": "quick code I'm not going to go deep into it but the key thing here is we're using the text decoder and setting it up for",
    "start": "1954630",
    "end": "1961470"
  },
  {
    "text": "utf-8 and then we can go into that that memory and pull out particularly like",
    "start": "1961470",
    "end": "1968550"
  },
  {
    "text": "right here you can when you say create that new array you can say starting at position whatever and so in this case",
    "start": "1968550",
    "end": "1975450"
  },
  {
    "text": "would be starting at position zero grab me this whole array and then we can look for that zero and then slice that array",
    "start": "1975450",
    "end": "1982380"
  },
  {
    "text": "down to the size we want and then we can decode that using the text decoder and now we can return a string from",
    "start": "1982380",
    "end": "1988620"
  },
  {
    "text": "webassembly to JavaScript now that string is hard-coded",
    "start": "1988620",
    "end": "1996080"
  },
  {
    "text": "is you in there if you wanted to generate strings or hand strings in it gets Messier because it doesn't really",
    "start": "1996390",
    "end": "2002140"
  },
  {
    "text": "you'd have to write all kinds of string manipulation routines so I actually implemented a full version of fizzbuzz",
    "start": "2002140",
    "end": "2008360"
  },
  {
    "text": "that had a model-view-controller patter and used strings and everything and I",
    "start": "2008360",
    "end": "2013700"
  },
  {
    "text": "had to figure out how to convert numbers into strings and so I had to write I 2a from C and I had to write a function to",
    "start": "2013700",
    "end": "2020750"
  },
  {
    "text": "do to do powers in webassembly it took me three days to build fizzbuzz with",
    "start": "2020750",
    "end": "2026120"
  },
  {
    "text": "strings in web assembly text format I learned a lot it was a fun exercise you can go look at the wonderful code rivals",
    "start": "2026120",
    "end": "2033350"
  },
  {
    "text": "Enterprise fizzbuzz let me tell you but yes so this is how you can do strings if",
    "start": "2033350",
    "end": "2039560"
  },
  {
    "text": "you need to so that is useful there's a bunch of other stuff that's in the in",
    "start": "2039560",
    "end": "2044930"
  },
  {
    "text": "the web assembly text format you've got these idea of local variables or you can just define a local you've got global",
    "start": "2044930",
    "end": "2052340"
  },
  {
    "text": "variables which are sort of like shared memory but they're just at one discrete value that javascript can see this sort",
    "start": "2052340",
    "end": "2059480"
  },
  {
    "text": "of stack based stuff can get messy and so you can use parenthesis for s expressions and it starts looking kind",
    "start": "2059480",
    "end": "2065540"
  },
  {
    "text": "of Lisp e which is kind of fun if you like this if you like pairing up",
    "start": "2065540",
    "end": "2072500"
  },
  {
    "text": "parentheses all the time and there's also this idea of tables and tables are",
    "start": "2072500",
    "end": "2078110"
  },
  {
    "text": "sort of like a shared memory for functions so it's a it's a table of",
    "start": "2078110",
    "end": "2083179"
  },
  {
    "text": "function pointers and so you can shove functions in there and JavaScript can",
    "start": "2083180",
    "end": "2088310"
  },
  {
    "text": "shut functions in there so it's a way of allowing you do things like be tables or function pointers in that lower language",
    "start": "2088310",
    "end": "2096760"
  },
  {
    "text": "speaking other languages right now if you want to play something with web assembly other than what we're doing here today by and large rust is your",
    "start": "2098800",
    "end": "2107000"
  },
  {
    "text": "best bet rust I think has the best support for web assembly I didn't have to install",
    "start": "2107000",
    "end": "2112520"
  },
  {
    "text": "anything particularly special to make it work I mean I had some stuff I had to figure out but it wasn't it was all rust",
    "start": "2112520",
    "end": "2119060"
  },
  {
    "text": "stuff eyes using cargo to bring it all in and wasn't anything particularly unusual C++ is decent got decent support",
    "start": "2119060",
    "end": "2124940"
  },
  {
    "text": "as well there's a wonderful tool called in scriptum which we'll take LLVM bit code and transpile",
    "start": "2124940",
    "end": "2132410"
  },
  {
    "text": "it I guess transpile compile trans symbol I don't know what the word would be here but to webassembly bytecode and",
    "start": "2132410",
    "end": "2139640"
  },
  {
    "text": "so that's a piece of in scriptum ein scripting will actually go further it'll",
    "start": "2139640",
    "end": "2144710"
  },
  {
    "text": "create web assembly it'll create all of your glue javascript you'll create your HTML it'll create your CSS and so you can create a simple command-line",
    "start": "2144710",
    "end": "2151550"
  },
  {
    "text": "application and it'll it'll make a terminal in a browser so it's a full",
    "start": "2151550",
    "end": "2158120"
  },
  {
    "text": "compile my C program to something that I can do on the web and so there's good",
    "start": "2158120",
    "end": "2164000"
  },
  {
    "text": "support there it's a little more challenging than Avigail but it is well",
    "start": "2164000",
    "end": "2169820"
  },
  {
    "text": "supported and Microsoft's really kind of doubled down on web assembly they've built a blazer some of you probably",
    "start": "2169820",
    "end": "2175970"
  },
  {
    "text": "heard a blazer I think there was yeah a blazer is actually sitting on top of all this and so what they've done is they've",
    "start": "2175970",
    "end": "2182300"
  },
  {
    "text": "taken mono and compiled it to web assembly and so they took so you've got",
    "start": "2182300",
    "end": "2189620"
  },
  {
    "text": "the common language runtime which is a virtual machine running in the web assembly virtual machine so you've got a",
    "start": "2189620",
    "end": "2195290"
  },
  {
    "text": "virtual machine in a virtual machine in the browser yo dog but it's actually",
    "start": "2195290",
    "end": "2204440"
  },
  {
    "text": "very powerful and they've created a lot of the glue code to interact with the Dom so that you can just treat it as a compilation target and so laser is",
    "start": "2204440",
    "end": "2210980"
  },
  {
    "text": "actually pretty cool and so if you want to want to support you want to do something like that that's the one thing that I think would be I'd be willing to",
    "start": "2210980",
    "end": "2218330"
  },
  {
    "text": "do production code with blazer I think these other things are still kind of green and they need a little bit more maturity before I'd I'd want to go",
    "start": "2218330",
    "end": "2225890"
  },
  {
    "text": "all in but if you want to build tech stacks that make use of this this stuff is really useful so let's do a demo let's",
    "start": "2225890",
    "end": "2233930"
  },
  {
    "text": "watch me actually code in this assembly language is everyone ready to watch me fail yay if I succeed I get applause if",
    "start": "2233930",
    "end": "2242990"
  },
  {
    "text": "I fail I get laughter either way it's a win ok so I've got some background here",
    "start": "2242990",
    "end": "2253310"
  },
  {
    "text": "yeah I do okay so I've got a whoo all",
    "start": "2253310",
    "end": "2259280"
  },
  {
    "text": "screaming here with jasmine as a testing framework for JavaScript enough of you so it's just a unit",
    "start": "2259280",
    "end": "2265670"
  },
  {
    "text": "testing framework that's what I'm going to use I've got a little speck file here I've got a wasm debthelper and this is",
    "start": "2265670",
    "end": "2273170"
  },
  {
    "text": "just a little function I wrote that loads the web assembly module and it returns the export section so here's",
    "start": "2273170",
    "end": "2278630"
  },
  {
    "text": "that response and then I get the bytes then I get the module so this is the the slow bad way but with instead of with",
    "start": "2278630",
    "end": "2286220"
  },
  {
    "text": "promises I'm using async await and they return that exports and so in fizzbuzz",
    "start": "2286220",
    "end": "2291230"
  },
  {
    "text": "here then I'll describe fizzbuzz and since strings are hard I'm not going to return fizz and Buzz",
    "start": "2291230",
    "end": "2296690"
  },
  {
    "text": "and fizzbuzz I'm gonna return negative 1 for fizz negative 2 for Baz and negative",
    "start": "2296690",
    "end": "2301700"
  },
  {
    "text": "3 for fizzbuzz so we can't do fizzles on negative numbers sorry",
    "start": "2301700",
    "end": "2307240"
  },
  {
    "text": "and then I've got this little spec helper here which just make sure the tests aren't running a random order which normally I would want but because",
    "start": "2307750",
    "end": "2315230"
  },
  {
    "text": "it's a demo that's confusing and so I'm gonna go and start up my web server here",
    "start": "2315230",
    "end": "2321280"
  },
  {
    "text": "using my wonderful Python trick that I learned at another conference years ago that'll just create a web server in my",
    "start": "2321280",
    "end": "2328130"
  },
  {
    "text": "NDC Oslo 2019 folder and then if I go to localhost 8080 command shift are you can",
    "start": "2328130",
    "end": "2337640"
  },
  {
    "text": "say hey there's no specs because I haven't written any so let's write a test is this text big enough is that",
    "start": "2337640",
    "end": "2344450"
  },
  {
    "text": "readable by the way in the back ok I try try to make it as big as I could and still fit it on the screen so okay so",
    "start": "2344450",
    "end": "2351770"
  },
  {
    "text": "describe and I've also got one of those n minus-1 Mac keyboards that are really",
    "start": "2351770",
    "end": "2359480"
  },
  {
    "text": "awkward to type out so please forgive me if I fumble through this so we're going",
    "start": "2359480",
    "end": "2365480"
  },
  {
    "text": "to describe fizzbuzz I'm going to use arrow functions here and we're gonna say need it before each and that has to have",
    "start": "2365480",
    "end": "2375170"
  },
  {
    "text": "it done because it's asynchronous it also needs to be a sync",
    "start": "2375170",
    "end": "2384160"
  },
  {
    "text": "and so I can call this subject equals",
    "start": "2384760",
    "end": "2391620"
  },
  {
    "text": "load wasm and we're gonna bring in slash is because plasm so this is going to be",
    "start": "2392070",
    "end": "2400780"
  },
  {
    "text": "loading that web assembly module and that is asynchronous so it needs we need to know what we need to wait for it and",
    "start": "2400780",
    "end": "2407410"
  },
  {
    "text": "once we have that we can just called done and that will load up my module new each time between each test and say its",
    "start": "2407410",
    "end": "2415260"
  },
  {
    "text": "returns - that returns the number it is given",
    "start": "2415260",
    "end": "2424830"
  },
  {
    "text": "and we can say expect this not subject",
    "start": "2428250",
    "end": "2435360"
  },
  {
    "text": "dot fizzbuzz 1 to be 1 so we give it a 1",
    "start": "2435600",
    "end": "2442390"
  },
  {
    "text": "we get a 1 right this first test you always write for fizzbuzz let's run those tests and see if I did it",
    "start": "2442390",
    "end": "2447880"
  },
  {
    "text": "correctly did I do something wrong here did I not save it I may in the wrong",
    "start": "2447880",
    "end": "2457660"
  },
  {
    "text": "folder wow I'm failing some this is the part where you laugh I'm sure surely I'm",
    "start": "2457660",
    "end": "2467020"
  },
  {
    "text": "doing something boneheaded here oh it timed out that's actually what would we",
    "start": "2467020",
    "end": "2475030"
  },
  {
    "text": "expect because we're going out we're trying to load a file from the server and it's not there so we got a 5 we got",
    "start": "2475030",
    "end": "2483010"
  },
  {
    "text": "a time out so that is what it should be doing so let's let's build a ym file or",
    "start": "2483010",
    "end": "2488080"
  },
  {
    "text": "a lat file we'll call it fizzbuzz Wow",
    "start": "2488080",
    "end": "2493410"
  },
  {
    "text": "and now we're going to use a couple different tools to compile this once we get it working but let's let's code it",
    "start": "2493410",
    "end": "2498700"
  },
  {
    "text": "up first module so I need a module and I want to export function called fizzbuzz",
    "start": "2498700",
    "end": "2507180"
  },
  {
    "text": "there we go and fizzbuzz is a funk named",
    "start": "2508050",
    "end": "2513870"
  },
  {
    "text": "dollar fizzbuzz and so that's all big deal we're just mapping a functioning",
    "start": "2513870",
    "end": "2519210"
  },
  {
    "text": "fizzbuzz to an external string then we can define a funk called fizzbuzz and",
    "start": "2519210",
    "end": "2525500"
  },
  {
    "text": "say it takes a parameter T - and we want",
    "start": "2525500",
    "end": "2537420"
  },
  {
    "text": "it to return they want it to do the the simplest thing you can do so we'll say I",
    "start": "2537420",
    "end": "2544050"
  },
  {
    "text": "32 Const 1 okay so always return 1 that'll make our test",
    "start": "2544050",
    "end": "2552090"
  },
  {
    "text": "pass so we've got a couple options for compiling this one option is is I have a a tool as part of a visual studio code",
    "start": "2552090",
    "end": "2559740"
  },
  {
    "text": "an extension which is the webassembly binary now that's not the but suddenly",
    "start": "2559740",
    "end": "2565890"
  },
  {
    "text": "binary tool kit it's in my slide I can't remember the name of it off the top my head but I can do here save as webassembly binary file it'll ask me for",
    "start": "2565890",
    "end": "2573780"
  },
  {
    "text": "the file name I'll save it and now I've got a waggon file that I look I can see",
    "start": "2573780",
    "end": "2579180"
  },
  {
    "text": "my way as an file is it's binary so doesn't want to look at it but if I say I want to open it anyhow it will",
    "start": "2579180",
    "end": "2584580"
  },
  {
    "text": "disassemble it and so we can see there's my fizzbuzz implementation that returns a 1 and it's added this type structure",
    "start": "2584580",
    "end": "2591360"
  },
  {
    "text": "saying hey well you know we've got a type which is a function that takes a 32-bit integer and so this function is",
    "start": "2591360",
    "end": "2596790"
  },
  {
    "text": "of that type so it adds that as well and you see our X export but otherwise it's pretty much the code I wrote so that's",
    "start": "2596790",
    "end": "2603480"
  },
  {
    "text": "kind of neat and so we should be able to if we can get to the right window here where you run this and watch it not want",
    "start": "2603480",
    "end": "2613590"
  },
  {
    "text": "to work hmm do I have a typo",
    "start": "2613590",
    "end": "2620690"
  },
  {
    "text": "oh yeah I do that's what I did wrong thank you pair programming for the win I",
    "start": "2622510",
    "end": "2630480"
  },
  {
    "text": "need a results that is of i-32 that is what it's doing wrong so this would be a",
    "start": "2630480",
    "end": "2639520"
  },
  {
    "text": "great time to show you the other way to compile this code so I've got a tool here if we look I've got this",
    "start": "2639520",
    "end": "2648220"
  },
  {
    "text": "I wanted the background that lets",
    "start": "2648220",
    "end": "2654070"
  },
  {
    "text": "background there we go okay if you look at I've got this whack bill and all this",
    "start": "2654070",
    "end": "2663190"
  },
  {
    "text": "does is it removes the existing fizzbuzz and then it used as a tool called webbot wabbit",
    "start": "2663190",
    "end": "2668490"
  },
  {
    "text": "yes it's called wabbit the webassembly binary toolkit and wabbit has a tool",
    "start": "2668490",
    "end": "2674920"
  },
  {
    "text": "called wattle azzam and it takes a lat and converts it into a wisdom these",
    "start": "2674920",
    "end": "2682300"
  },
  {
    "text": "names are great I just love that it's called wabbit they actually point out",
    "start": "2682300",
    "end": "2688000"
  },
  {
    "text": "that that's how it's pronounced in the in the on the webpage about it because they really want you to know that they're making an Elmer Fudd joke but I",
    "start": "2688000",
    "end": "2696550"
  },
  {
    "text": "can call wet build that Sh and that will",
    "start": "2696550",
    "end": "2702160"
  },
  {
    "text": "remove the old one and create a new one and so that's another way of doing that there we go returns the number it was",
    "start": "2702160",
    "end": "2708580"
  },
  {
    "text": "given hooray but wait there's more let's",
    "start": "2708580",
    "end": "2719590"
  },
  {
    "text": "make this do some more things right we don't want to do to be hard-coded so we need another test it returns other",
    "start": "2719590",
    "end": "2727810"
  },
  {
    "text": "numbers it is given all right so let's give it a two and run our tests and we",
    "start": "2727810",
    "end": "2738070"
  },
  {
    "text": "see that that fails because one is not to imagine that unless you're using javascript and then it's probably",
    "start": "2738070",
    "end": "2744310"
  },
  {
    "text": "greater than yeah so we'll go in here and so the problem here of course is",
    "start": "2744310",
    "end": "2750609"
  },
  {
    "text": "that we're returning a hard-coded one so let's get that local value that dollar num instead so we",
    "start": "2750609",
    "end": "2755780"
  },
  {
    "text": "get local dollar num and get rid of the",
    "start": "2755780",
    "end": "2760790"
  },
  {
    "text": "Const and if we do wet build again now",
    "start": "2760790",
    "end": "2767300"
  },
  {
    "text": "it's passing so but that's not a very",
    "start": "2767300",
    "end": "2772430"
  },
  {
    "text": "good fizzbuzz right right now it's just it's an echo function we want something more than that so I'm gonna say it",
    "start": "2772430",
    "end": "2779630"
  },
  {
    "text": "returns -1 for multiples of 3 so if it",
    "start": "2779630",
    "end": "2791090"
  },
  {
    "text": "pass it to 3 I should get back a minus 1 and I typed that wrong in the test there",
    "start": "2791090",
    "end": "2799010"
  },
  {
    "text": "we go if I run that you see that it says Scott 3 expected minus 1 so we can fix",
    "start": "2799010",
    "end": "2808460"
  },
  {
    "text": "that and by saying we need to check to see if it's equal to 3 or not so I 32 Const 3 and then we can say EQ",
    "start": "2808460",
    "end": "2819230"
  },
  {
    "text": "is it equal that's going to return 0 or not zero for whether it's equal and we",
    "start": "2819230",
    "end": "2825410"
  },
  {
    "text": "can run that through the if statement which says run this code if the stack is 0 or not zero pop the stack look at it",
    "start": "2825410",
    "end": "2831980"
  },
  {
    "text": "and evaluate it and we can say I 32 Const negative 1 return and then if we",
    "start": "2831980",
    "end": "2843320"
  },
  {
    "text": "get down here where the cursor is at our stack will be empty so we have to then return the number so we still need to",
    "start": "2843320",
    "end": "2848990"
  },
  {
    "text": "turn around and get local again let's do that",
    "start": "2848990",
    "end": "2853990"
  },
  {
    "text": "bill bit Russ we're doing better so",
    "start": "2858369",
    "end": "2865558"
  },
  {
    "text": "let's do other multiples of three and",
    "start": "2866729",
    "end": "2876009"
  },
  {
    "text": "we'll hand it to six and this will get rid of our hard-coded this will force us to do a modulus so that fails and so",
    "start": "2876009",
    "end": "2887319"
  },
  {
    "text": "we'll go back to the wet file has anyone ever seen that JavaScript talk called wet yeah that's what I think of every",
    "start": "2887319",
    "end": "2895089"
  },
  {
    "text": "single time I work with web assembly text format Wow so and here I need to do",
    "start": "2895089",
    "end": "2901269"
  },
  {
    "text": "basically the same thing and so I don't always reuse code when I do I copy and paste put in a five there put in the",
    "start": "2901269",
    "end": "2910989"
  },
  {
    "text": "minus two there because I'm a pro and if",
    "start": "2910989",
    "end": "2916180"
  },
  {
    "text": "we go in here and compile that you see that that works oh wait no it doesn't",
    "start": "2916180",
    "end": "2923170"
  },
  {
    "text": "what are you wrong oh I did the room I got I got ahead of myself I need to say",
    "start": "2923170",
    "end": "2932049"
  },
  {
    "text": "Const 3 and then I need to say remainder underscore equal so that divides gives",
    "start": "2932049",
    "end": "2937119"
  },
  {
    "text": "me the remainder of that division on unsigned and now I can say if that is 0",
    "start": "2937119",
    "end": "2947130"
  },
  {
    "text": "then it's minus 1 otherwise it's it's whatever it was I am just I swear I know",
    "start": "2947130",
    "end": "2958569"
  },
  {
    "text": "what I'm doing Oh eqz so I need to say",
    "start": "2958569",
    "end": "2970119"
  },
  {
    "text": "if that is equal to 0 then put true on the on it otherwise it's false see how",
    "start": "2970119",
    "end": "2977019"
  },
  {
    "text": "much you're learning by watching me fail there we go so that passes and we got",
    "start": "2977019",
    "end": "2984489"
  },
  {
    "text": "let's go ahead and do multiples of 5 as well real quick here",
    "start": "2984489",
    "end": "2992699"
  },
  {
    "text": "returns - to four multiples of five and I'm gonna cheat and do two tests at once",
    "start": "2993210",
    "end": "2998350"
  },
  {
    "text": "here there we go and so we have two",
    "start": "2998350",
    "end": "3010110"
  },
  {
    "text": "failing tests and we'll go into here and",
    "start": "3010110",
    "end": "3015510"
  },
  {
    "text": "now we do that cut big copy and paste now I make the joke about I don't know as you reuse code and we put a minus two",
    "start": "3015510",
    "end": "3023880"
  },
  {
    "text": "there and so that's that's working so",
    "start": "3023880",
    "end": "3031680"
  },
  {
    "text": "but you're looking at this code you're thinking wow that's a lot of duplication so a refactor is an order so and I can",
    "start": "3031680",
    "end": "3039300"
  },
  {
    "text": "show you that real quick we can create another function called is multiple",
    "start": "3039300",
    "end": "3045260"
  },
  {
    "text": "takes a pram named dollar num and it's an i-32 a per am its dollar div and",
    "start": "3045260",
    "end": "3054180"
  },
  {
    "text": "that's an i-32 and it returns a results it's an i-32 and all this is going to do",
    "start": "3054180",
    "end": "3060740"
  },
  {
    "text": "is basically this except instead of",
    "start": "3060740",
    "end": "3068700"
  },
  {
    "text": "having a constant there will do a div we would divide it and then we'll do equals",
    "start": "3068700",
    "end": "3074190"
  },
  {
    "text": "so that function should be good and then in here when we can instead say shove these two values on there and then call",
    "start": "3074190",
    "end": "3081050"
  },
  {
    "text": "dollar is multiple and so we got rid of two lines of code let's",
    "start": "3081050",
    "end": "3094200"
  },
  {
    "text": "see if that works real quick still good excellent and so I want to",
    "start": "3094200",
    "end": "3101590"
  },
  {
    "text": "show real quick here the s expression syntax that I mentioned earlier because this gets kind of hard to read so you",
    "start": "3101590",
    "end": "3107080"
  },
  {
    "text": "can start wrapping these things in parenthesis and do things like this that",
    "start": "3107080",
    "end": "3117850"
  },
  {
    "text": "looks more like a programming language doesn't it right I know we can do the",
    "start": "3117850",
    "end": "3123520"
  },
  {
    "text": "same thing down here we can do the same thing in that function down there at the bottom and we can do with the if statement as well we can see if then and",
    "start": "3123520",
    "end": "3135790"
  },
  {
    "text": "we say return like that we don't need the end anymore and honestly we could",
    "start": "3135790",
    "end": "3142480"
  },
  {
    "text": "even make that just a one-line if because I know that's going to trigger someone and then we could very easily",
    "start": "3142480",
    "end": "3151180"
  },
  {
    "text": "then do the same thing for 3 and minus 1",
    "start": "3151180",
    "end": "3156600"
  },
  {
    "text": "and then just for completeness like that",
    "start": "3156600",
    "end": "3164580"
  },
  {
    "text": "and so let's compile that really quick real quick and I've got I'm probably got",
    "start": "3164580",
    "end": "3171160"
  },
  {
    "text": "an extra parenthesis somewhere I'm missing a parenthesis there we go",
    "start": "3171160",
    "end": "3178410"
  },
  {
    "text": "still passes excellence so I'm gonna swap this out for a rust implementation",
    "start": "3181560",
    "end": "3187500"
  },
  {
    "text": "I've got this rust implementation here it does fizzbuzz already I'm going to",
    "start": "3187500",
    "end": "3193000"
  },
  {
    "text": "break it and say if it's a multiple three return negative ten instead so that we can see it fail I'm gonna change",
    "start": "3193000",
    "end": "3199840"
  },
  {
    "text": "my spec to load up fizz bizarrest Azzam and I'm going to use this little rust",
    "start": "3199840",
    "end": "3207010"
  },
  {
    "text": "build script here which is out on my github you can check it out but all it's doing is just telling calling the rust",
    "start": "3207010",
    "end": "3212260"
  },
  {
    "text": "compiler with a particular target and some other arguments this were mostly just things I put in there to make it",
    "start": "3212260",
    "end": "3218020"
  },
  {
    "text": "work so I do say slash rust build and we've",
    "start": "3218020",
    "end": "3224080"
  },
  {
    "text": "got now this rust wasm and we reload",
    "start": "3224080",
    "end": "3230320"
  },
  {
    "text": "that we can see there complains that minus ten is not one but it still called it it didn't care that it was rust we",
    "start": "3230320",
    "end": "3236080"
  },
  {
    "text": "swapped out webassembly text format for rust we fix our rust code and make that",
    "start": "3236080",
    "end": "3242710"
  },
  {
    "text": "this the negative one it should be rerun it you see all our tests now pass so",
    "start": "3242710",
    "end": "3249850"
  },
  {
    "text": "that's the demo so got about five",
    "start": "3249850",
    "end": "3260350"
  },
  {
    "text": "minutes left here here's some resources that I found online these slides are on my github so you can you can down them",
    "start": "3260350",
    "end": "3265570"
  },
  {
    "text": "them so if you don't get a picture don't feel bad you can download it as a PDF webassembly dot org is the official site",
    "start": "3265570",
    "end": "3271690"
  },
  {
    "text": "it's got all the bytecode described it is targeted towards people who want to build compilers as opposed to people who",
    "start": "3271690",
    "end": "3278800"
  },
  {
    "text": "want to code in it and so it's not the best resource but it was useful for this purpose Mozilla developer Network",
    "start": "3278800",
    "end": "3285220"
  },
  {
    "text": "Stockman tation on web assembly covers the the JavaScript side of things and so a lot of good information there the web",
    "start": "3285220",
    "end": "3292570"
  },
  {
    "text": "assembly binary toolkit wabbits is what i was using to compile this the web",
    "start": "3292570",
    "end": "3298360"
  },
  {
    "text": "assembly toolkit for visual studio code was the Visual Studio code extension that I was using to also assemble not",
    "start": "3298360",
    "end": "3303940"
  },
  {
    "text": "compile assemble this code Rustin and scriptum are both good tools to check",
    "start": "3303940",
    "end": "3309040"
  },
  {
    "text": "out for playing with higher level languages if you want to do some web assembly",
    "start": "3309040",
    "end": "3314050"
  },
  {
    "text": "and then there's this wonderful resource awsome lazon languages talks about all the stuff that's happening in this space they've got a big list of languages and",
    "start": "3314050",
    "end": "3321220"
  },
  {
    "text": "they've got either an egg a chick sitting in an egg or a chick or a chicken it's like icons",
    "start": "3321220",
    "end": "3329110"
  },
  {
    "text": "to show you how fully baked the implementations are so there's a lot of eggs on there let's I'll be honest but",
    "start": "3329110",
    "end": "3335580"
  },
  {
    "text": "but there's a lot of cool stuff out there and this awesome lazon is the Akira T the list of just interesting",
    "start": "3335580",
    "end": "3340840"
  },
  {
    "text": "webassembly things I found one thing someone wrote a webassembly interpreter in Python I don't know that I would ever",
    "start": "3340840",
    "end": "3347080"
  },
  {
    "text": "need to use that but it's a fun exercise so check out those resources this is a",
    "start": "3347080",
    "end": "3354730"
  },
  {
    "text": "my intro to webassembly this is where you can find these slides the yasm fizzbuzz is the the the enterprise",
    "start": "3354730",
    "end": "3361810"
  },
  {
    "text": "fizzbuzz completely with strings and model-view-controller patterns everything that I developed with minimal",
    "start": "3361810",
    "end": "3366910"
  },
  {
    "text": "JavaScript glue code I'm working on a sort of a toy project right now to call that I'm calling a chiasm which is allow",
    "start": "3366910",
    "end": "3376810"
  },
  {
    "text": "you to using web components to create all the standard glue code you would need to do web assembly applications I'm",
    "start": "3376810",
    "end": "3385000"
  },
  {
    "text": "still playing with that it's very very preliminary I don't think I've even made my repo public yet but I will at some",
    "start": "3385000",
    "end": "3391420"
  },
  {
    "text": "point so you can check that out if you want to try and put web assembly in a browser without having to write all that JavaScript glue code so that's something",
    "start": "3391420",
    "end": "3398020"
  },
  {
    "text": "I should probably add to this slide and I'm guy Royce with data robot checks out",
    "start": "3398020",
    "end": "3403810"
  },
  {
    "text": "and yeah it's all I got are there any questions I got three minutes right",
    "start": "3403810",
    "end": "3411580"
  },
  {
    "text": "there Oh question is what is the best you what",
    "start": "3411580",
    "end": "3416710"
  },
  {
    "text": "about what I think the best use case is and so obviously this is an opinion question so this isn't a fact which is",
    "start": "3416710",
    "end": "3422950"
  },
  {
    "text": "fine I don't know if this is the best use case because right now you really just do compute computation with it",
    "start": "3422950",
    "end": "3428920"
  },
  {
    "text": "right you can't do any IO any browser manipulation you have to write bridge functions to do that kind of stuff and",
    "start": "3428920",
    "end": "3435670"
  },
  {
    "text": "so I think as it stands now an interesting use case would be taken machine learning models and embed them",
    "start": "3435670",
    "end": "3441760"
  },
  {
    "text": "into web assembly not to build not to build models from machine learning but",
    "start": "3441760",
    "end": "3446980"
  },
  {
    "text": "to take the model and put it into a web assembly module so you can have that that model being able to make predictions right",
    "start": "3446980",
    "end": "3452979"
  },
  {
    "text": "there and the browser so yeah so say it's edge computing right and so I think that that's one interesting application",
    "start": "3452979",
    "end": "3459450"
  },
  {
    "text": "so I don't know if it's the best but it's an interesting one I dunno I haven't played with this at",
    "start": "3459450",
    "end": "3464859"
  },
  {
    "text": "all but I know unity supports web assembly so that's like a compilation target for a Unity game program so",
    "start": "3464859",
    "end": "3470650"
  },
  {
    "text": "that's kind of cool but it's generating a lot of JavaScript glue code as well so",
    "start": "3470650",
    "end": "3476489"
  },
  {
    "text": "any other questions and I can't see the top row so oh sorry",
    "start": "3476489",
    "end": "3483910"
  },
  {
    "text": "I can't I have to look down I feel like I'm a judge [Laughter]",
    "start": "3483910",
    "end": "3490420"
  },
  {
    "text": "so the question is is uh that he found the s-expressions interesting and he's wondering if there's any use for a lisp",
    "start": "3498750",
    "end": "3506160"
  },
  {
    "text": "in generating web assembly or using using lisp in that way I don't have a good answer for you I don't know I",
    "start": "3506160",
    "end": "3513480"
  },
  {
    "text": "wouldn't be surprised if someone's tried that I think the web assembly text formats just taking inspiration from",
    "start": "3513480",
    "end": "3519030"
  },
  {
    "text": "there because it's stacked based putting those parentheses makes it possible by humans that's really so they're stealing",
    "start": "3519030",
    "end": "3525720"
  },
  {
    "text": "an idea from Lisp I wouldn't I don't see any reason why you couldn't have something that compiles list to what let",
    "start": "3525720",
    "end": "3531359"
  },
  {
    "text": "assembly I think you may have just volunteered yourself for an open source project so any others debugging tools",
    "start": "3531359",
    "end": "3543330"
  },
  {
    "text": "that's a great question a little bit you'll notice that web it gave me error",
    "start": "3543330",
    "end": "3548520"
  },
  {
    "text": "messages that were actually fairly meaningful if you run into any kind of problem during running chrome will give",
    "start": "3548520",
    "end": "3556200"
  },
  {
    "text": "you meaningful error messages it'll say things like hey there was nothing on the stack when you exited that function and",
    "start": "3556200",
    "end": "3562170"
  },
  {
    "text": "it will complain it's actually like stepping through your web assembly code not that I'm aware of",
    "start": "3562170",
    "end": "3568950"
  },
  {
    "text": "so that's a thing that needs to be built yet so it's all kind of green it's kind",
    "start": "3568950",
    "end": "3574560"
  },
  {
    "text": "of new and so this is kind of bleeding edge stuff so I think I use console dot",
    "start": "3574560",
    "end": "3580500"
  },
  {
    "text": "log I think that's my debugger so we're at 10 20 so our 11 20 so that's all I",
    "start": "3580500",
    "end": "3588510"
  },
  {
    "text": "got oh thanks a lot you can ask me questions later bill [Applause]",
    "start": "3588510",
    "end": "3598619"
  }
]