[
  {
    "text": "so in this session we are going to talk about scaling your micro services with",
    "start": "5779",
    "end": "11880"
  },
  {
    "text": "grpc containers kubernetes Etc right",
    "start": "11880",
    "end": "17160"
  },
  {
    "text": "so we'll start talking about what's jrpc and like why grpc should be something that you",
    "start": "17160",
    "end": "23699"
  },
  {
    "text": "should consider in order to build microservices because microservices you guys know is kind of like the new",
    "start": "23699",
    "end": "30840"
  },
  {
    "text": "buzzword in the tech right we are kind of very much indulged into the phase",
    "start": "30840",
    "end": "37440"
  },
  {
    "text": "where everything that we want to build is kind of somewhere somewhat related to",
    "start": "37440",
    "end": "42719"
  },
  {
    "text": "microservices we are gone are the days for the monolith although ah I still",
    "start": "42719",
    "end": "48480"
  },
  {
    "text": "like recently worked somewhere where a lot of monolith code was there but okay",
    "start": "48480",
    "end": "53840"
  },
  {
    "text": "we'll be talking about those things we'll be talking uh how exactly kubernetes come into the picture a lot",
    "start": "53840",
    "end": "61440"
  },
  {
    "text": "of things we are going to discuss so without any further delay let's just start",
    "start": "61440",
    "end": "67280"
  },
  {
    "text": "so who am I why I'm here I am sanket Singh I'm a software engineer at Google",
    "start": "67500",
    "end": "72979"
  },
  {
    "text": "uh at Google I work with Google pay I'm not sure how many of you guys have used it but I work with the client team for",
    "start": "72979",
    "end": "80100"
  },
  {
    "text": "Google pay previously worked with Google Cloud as well uh I previously worked with LinkedIn",
    "start": "80100",
    "end": "86159"
  },
  {
    "text": "again as a software engineer in the Enterprise provisioning team uh apart from",
    "start": "86159",
    "end": "92700"
  },
  {
    "text": "the regular software engineering work that we get and the jira tickets we have to solve I spent some time in also",
    "start": "92700",
    "end": "99960"
  },
  {
    "text": "training and teaching students online around foundations of computer science",
    "start": "99960",
    "end": "105259"
  },
  {
    "text": "dbms data structures a bit of Dev Etc kind of like a big uh superhero fan a",
    "start": "105259",
    "end": "113040"
  },
  {
    "text": "bit of Marvel and DC stuff is going to be there in the presentation so just to",
    "start": "113040",
    "end": "118680"
  },
  {
    "text": "make things a bit light-hearted right so if you get the references give a thumbs up",
    "start": "118680",
    "end": "123840"
  },
  {
    "text": "Okay so what to expect from the session right what and why about grpc why it actually",
    "start": "123840",
    "end": "132540"
  },
  {
    "text": "came into the picture why we are talking about why we are talking now about things around RPC",
    "start": "132540",
    "end": "137819"
  },
  {
    "text": "comparisons and comparisons with other conventions so comparison with the rest",
    "start": "137819",
    "end": "143040"
  },
  {
    "text": "and everything right will be also talking about how you can set up a basic grpc server",
    "start": "143040",
    "end": "150120"
  },
  {
    "text": "and client in Python right although it supports multiple languages but we can see a bit of python and how exactly",
    "start": "150120",
    "end": "157200"
  },
  {
    "text": "containers in kubernetes come into the picture and how exactly you you can use this in order to scale your micro",
    "start": "157200",
    "end": "163200"
  },
  {
    "text": "services okay so",
    "start": "163200",
    "end": "168420"
  },
  {
    "text": "before we move forward to grpc lets ah",
    "start": "168420",
    "end": "173459"
  },
  {
    "text": "get based on the favorite that we have rest right so ah rest is more or less",
    "start": "173459",
    "end": "180660"
  },
  {
    "text": "like a convention for us it defines a lot of things a lot of applications that you guys might have already built or",
    "start": "180660",
    "end": "187680"
  },
  {
    "text": "might be building or maybe you have used may have exposed some of some of the",
    "start": "187680",
    "end": "193019"
  },
  {
    "text": "rest API endpoints right so rest is something that we already use it's widely accepted widely used I I believe",
    "start": "193019",
    "end": "201000"
  },
  {
    "text": "that most of the organizations uh nowadays definitely have some part somewhere dedicated towards which is",
    "start": "201000",
    "end": "208200"
  },
  {
    "text": "using rest and in the micro Services world we use these apis in order to",
    "start": "208200",
    "end": "214379"
  },
  {
    "text": "communicate right the rest apis in order to communicate it's kind of flexible it doesn't put a",
    "start": "214379",
    "end": "219900"
  },
  {
    "text": "lot of restriction for you as a developer right it's easy to use like writing a basic rest API in",
    "start": "219900",
    "end": "227519"
  },
  {
    "text": "something like node or python is going to be a five minute thing for us right",
    "start": "227519",
    "end": "233099"
  },
  {
    "text": "even less than that sometimes so it's easy to use it's kind of like widely",
    "start": "233099",
    "end": "238319"
  },
  {
    "text": "accepted right it's compatible with browsers like whatever browsers we are",
    "start": "238319",
    "end": "243659"
  },
  {
    "text": "using currently nowadays it's compatible with it right",
    "start": "243659",
    "end": "249000"
  },
  {
    "text": "a lot of things also comes along with the rest conventions like we have predefined set of codes the status codes",
    "start": "249000",
    "end": "256139"
  },
  {
    "text": "that we have defined in order to see what is the current status of the I would say service that we are having",
    "start": "256139",
    "end": "262440"
  },
  {
    "text": "right the API that we are that we have written along with that there are dedicated Frameworks I'm not sure how",
    "start": "262440",
    "end": "269100"
  },
  {
    "text": "many of you guys have used it but definitely you must have heard about it like Django rails which are like",
    "start": "269100",
    "end": "275040"
  },
  {
    "text": "dedicated dedicatedly walking around rest right most of the scaffoldings and",
    "start": "275040",
    "end": "281280"
  },
  {
    "text": "everything work with rest and they are like power packed with all the support",
    "start": "281280",
    "end": "286380"
  },
  {
    "text": "rest from our uh out of the box so rest is something that is already there like",
    "start": "286380",
    "end": "291900"
  },
  {
    "text": "it was already there for quite some time",
    "start": "291900",
    "end": "295520"
  },
  {
    "text": "and here comes grpc so you must have already heard about RPC",
    "start": "297000",
    "end": "303360"
  },
  {
    "text": "remote procedure calls right so it's an open source system developed",
    "start": "303360",
    "end": "309000"
  },
  {
    "text": "by Google grpc is an open source system developed by Google in 2015. now if you think the",
    "start": "309000",
    "end": "315720"
  },
  {
    "text": "G in the grpc is Google that's not the case it's nowhere written but we'll",
    "start": "315720",
    "end": "321360"
  },
  {
    "text": "assume Maybe ok so Google doesn't tell everything right",
    "start": "321360",
    "end": "327720"
  },
  {
    "text": "so they are not even telling the full form but it was developed by Google in 2015 so",
    "start": "327720",
    "end": "333120"
  },
  {
    "text": "quite recent it uses HTTP 2.0 one of the most",
    "start": "333120",
    "end": "338460"
  },
  {
    "text": "important features that grpc comes out of the box that definitely enhances the",
    "start": "338460",
    "end": "345660"
  },
  {
    "text": "overall I would say performance of your apis it uses something called as Proto call",
    "start": "345660",
    "end": "351060"
  },
  {
    "text": "buffers we also call them as protobuf Proto Proto buffers whatever you want to",
    "start": "351060",
    "end": "357780"
  },
  {
    "text": "say it is again one of the most highlighted features that grpc provides",
    "start": "357780",
    "end": "363120"
  },
  {
    "text": "we are going to talk about protocol buffers we will try to write one as well apart from that grpc is fast it's secure",
    "start": "363120",
    "end": "372360"
  },
  {
    "text": "it contains features like automatic load balancing and much more right so it has",
    "start": "372360",
    "end": "377699"
  },
  {
    "text": "a lot lot of things to offer right and it makes sense for us like we are in",
    "start": "377699",
    "end": "383100"
  },
  {
    "text": "2022 and it makes sense for us to understand that okay apart from rest again comparing rest directly to",
    "start": "383100",
    "end": "390539"
  },
  {
    "text": "something like grpc won't be a very valid comparison rest is just a convention right but when",
    "start": "390539",
    "end": "398220"
  },
  {
    "text": "I say rest then I mean your regular Json apis when you consume Json you return",
    "start": "398220",
    "end": "403979"
  },
  {
    "text": "Json everything that we are actually I would say referring when I compare rest",
    "start": "403979",
    "end": "409680"
  },
  {
    "text": "with grpc because grpc is not just convention it's a full end-to-end technology that you can use in order to",
    "start": "409680",
    "end": "416880"
  },
  {
    "text": "write services and again it's going to be super fast",
    "start": "416880",
    "end": "421520"
  },
  {
    "text": "but why now like we are kinda kinda comfortable with rest right we have",
    "start": "422220",
    "end": "428580"
  },
  {
    "text": "Frameworks we are consuming the apis things are going fine right there is",
    "start": "428580",
    "end": "434160"
  },
  {
    "text": "already a straight way in which we can build our applications why do we want to",
    "start": "434160",
    "end": "439979"
  },
  {
    "text": "add something spicy to it let's see",
    "start": "439979",
    "end": "444860"
  },
  {
    "text": "so if something is already going good does not make doesn't mean that it is not",
    "start": "445259",
    "end": "450840"
  },
  {
    "text": "having any kind of problems to be very honest saying that there are some problems with rest is kind of like",
    "start": "450840",
    "end": "457199"
  },
  {
    "text": "an opinionated thing I am saying problems with rest it's kind of like an opinion right you might not find these",
    "start": "457199",
    "end": "464280"
  },
  {
    "text": "as a problem right but let's see few of the things that we have so in Json in the earlier days we had",
    "start": "464280",
    "end": "472860"
  },
  {
    "text": "this type checking issues right for API changes you have to do semantic versioning like you must have either",
    "start": "472860",
    "end": "479340"
  },
  {
    "text": "encountered an API or you must have made an API with that slash V1 slash V2",
    "start": "479340",
    "end": "484500"
  },
  {
    "text": "everything like you have to specifically version your apis every time streaming is something that doesn't come",
    "start": "484500",
    "end": "492180"
  },
  {
    "text": "out of the box for rest right you cannot do bi-directional streaming kind of a thing",
    "start": "492180",
    "end": "498360"
  },
  {
    "text": "there are other solution like web sockets and everything but it doesn't come out of the box",
    "start": "498360",
    "end": "503460"
  },
  {
    "text": "by default it supports HTTP 1.1 I know that a lot of networking thing we are",
    "start": "503460",
    "end": "508860"
  },
  {
    "text": "like discussing I can't help I used to work in the network networking team only",
    "start": "508860",
    "end": "513959"
  },
  {
    "text": "earlier at Google so just bear with me we'll be coming to the coding part but uh talking about rests HTTP support it",
    "start": "513959",
    "end": "521520"
  },
  {
    "text": "by default supports HTTP 1.1 you can migrate to the latest version but it by",
    "start": "521520",
    "end": "529560"
  },
  {
    "text": "default give you this functionality only you can of of course migrate it you have",
    "start": "529560",
    "end": "534660"
  },
  {
    "text": "to do manual validations and one of the most important I would say pointer that",
    "start": "534660",
    "end": "540180"
  },
  {
    "text": "exists there with rest is the management of the client-side libraries if you are consuming a rest API",
    "start": "540180",
    "end": "547260"
  },
  {
    "text": "with python there is a separate library that is maintained by a separate",
    "start": "547260",
    "end": "552540"
  },
  {
    "text": "organization if by Ruby separate if by node.js separate like whatever language",
    "start": "552540",
    "end": "558899"
  },
  {
    "text": "or framework you are using there is a separate dedicated team or separate dedicated Community separate dedicated",
    "start": "558899",
    "end": "565980"
  },
  {
    "text": "set of developers who are creating this client-side apis for these Technologies",
    "start": "565980",
    "end": "571500"
  },
  {
    "text": "right now just think about it if in rest in the later upcoming days we",
    "start": "571500",
    "end": "578220"
  },
  {
    "text": "make some changes then you can't expect every client-side library to get",
    "start": "578220",
    "end": "583800"
  },
  {
    "text": "migrated in single day right this is again one of the I would say",
    "start": "583800",
    "end": "589800"
  },
  {
    "text": "problems that you may think that okay we will deal with it when the time comes but again this can be an issue",
    "start": "589800",
    "end": "598160"
  },
  {
    "text": "and we have grpc to the rescue right these problems specifically grpc",
    "start": "598200",
    "end": "604680"
  },
  {
    "text": "is definitely able to handle because by default grpc gives the support of HTT HTTP 2.0",
    "start": "604680",
    "end": "611220"
  },
  {
    "text": "we are not going to talk very much in depth around how HTTP 2.0 is like faster",
    "start": "611220",
    "end": "617279"
  },
  {
    "text": "than the previous version but in a nutshell you can understand it gives us new features like Multiplex and",
    "start": "617279",
    "end": "622920"
  },
  {
    "text": "multiplexing and everything so it definitely increases your efficiency",
    "start": "622920",
    "end": "630480"
  },
  {
    "text": "instead of Json instead of Json like in the rest apis or let's say if we go even",
    "start": "630480",
    "end": "635700"
  },
  {
    "text": "even back like before the days of rest soap simple object access protocol I'm",
    "start": "635700",
    "end": "641279"
  },
  {
    "text": "not sure how many of you guys have even heard about it then we used to share XML",
    "start": "641279",
    "end": "647820"
  },
  {
    "text": "I believe everybody must have at least seen some example I know it's like old age stuff XML and like soap I I'm not",
    "start": "647820",
    "end": "656459"
  },
  {
    "text": "sure if you have heard about it but yes these things do exist and the thing is we will be comparing XML",
    "start": "656459",
    "end": "663480"
  },
  {
    "text": "and Json with our protocol buffers but as per the convention says and to be",
    "start": "663480",
    "end": "669420"
  },
  {
    "text": "very honest grpc puts this as a restriction that you have to use protocol buffers and we'll see there are",
    "start": "669420",
    "end": "675060"
  },
  {
    "text": "definitely some benefits of protocol buffers over Json and XML",
    "start": "675060",
    "end": "681959"
  },
  {
    "text": "because of protocol buffers the API contract that we are going to build is going to be strict right and",
    "start": "681959",
    "end": "689459"
  },
  {
    "text": "this functionality comes out of the box you don't have to put anything extra any other framework any other service to do",
    "start": "689459",
    "end": "696540"
  },
  {
    "text": "it this strict API contract is going to help us to do all the validation kind of stuff",
    "start": "696540",
    "end": "701760"
  },
  {
    "text": "there are built-in code generators I will talk about what what I mean by being built-in code generators but you",
    "start": "701760",
    "end": "708360"
  },
  {
    "text": "can say that the problem of different client-side libraries for different",
    "start": "708360",
    "end": "714240"
  },
  {
    "text": "languages and Frameworks is something that grpc solves we will talk about it",
    "start": "714240",
    "end": "719579"
  },
  {
    "text": "it has services like in build load balancing and apart from that",
    "start": "719579",
    "end": "725519"
  },
  {
    "text": "for the streaming part you can do bi-directional streaming as well directly server to client streaming as",
    "start": "725519",
    "end": "732180"
  },
  {
    "text": "well client to server streaming as well and your basic unary requests as well and",
    "start": "732180",
    "end": "739920"
  },
  {
    "text": "it is more secure and of course we are going to talk about the fact that it's",
    "start": "739980",
    "end": "746459"
  },
  {
    "text": "faster than rest right it's definitely faster so",
    "start": "746459",
    "end": "752160"
  },
  {
    "text": "if you if ah like there is no if if you will see a lot of I have linked a few",
    "start": "752160",
    "end": "757380"
  },
  {
    "text": "stack Overflow links in my presentation that you can find in the speaker notes I",
    "start": "757380",
    "end": "762839"
  },
  {
    "text": "don't write speaker notes I instead put some reference links but uh you will",
    "start": "762839",
    "end": "767880"
  },
  {
    "text": "find that in the normal production you will find seven to eight percent I would",
    "start": "767880",
    "end": "773820"
  },
  {
    "text": "say efficiency increase with grpc and that is going to be significantly big if",
    "start": "773820",
    "end": "779339"
  },
  {
    "text": "you talk with if you talk on scale right if you talk with the things like the scale at which Google or let's say any",
    "start": "779339",
    "end": "787380"
  },
  {
    "text": "social media works these things are going to be important so",
    "start": "787380",
    "end": "793740"
  },
  {
    "text": "how is it faster so there is a concept of serialization and deserialization of data into binary",
    "start": "793740",
    "end": "801660"
  },
  {
    "text": "format that protocol buffer use I'll be showing an example in front of you in just a moment but the thing is protocol",
    "start": "801660",
    "end": "808200"
  },
  {
    "text": "buffer serializes your data like you are going to send a message right in Json we always used to send our J like let's say",
    "start": "808200",
    "end": "815459"
  },
  {
    "text": "an ID text this and that in a complete Json and send it to the API either to",
    "start": "815459",
    "end": "821639"
  },
  {
    "text": "consume or receive it from the API right and so we do the same thing using XML",
    "start": "821639",
    "end": "827459"
  },
  {
    "text": "right so in protocol buffers it does not directly",
    "start": "827459",
    "end": "833279"
  },
  {
    "text": "send your protocol buffer in the communication medium it first serializes that data into binary format",
    "start": "833279",
    "end": "841260"
  },
  {
    "text": "and our favorite binary can definitely reduce the whole overall size to a very extreme",
    "start": "841260",
    "end": "848700"
  },
  {
    "text": "limit we have already talked about the fact that it uses HTTP 2.0 it can support",
    "start": "848700",
    "end": "855300"
  },
  {
    "text": "multiple type of streaming and things like inbuilt load balancing",
    "start": "855300",
    "end": "861360"
  },
  {
    "text": "so this is an example right so I have taken this example from one of the medium",
    "start": "861360",
    "end": "866760"
  },
  {
    "text": "articles again Linked In the speaker notes right so for a string medium",
    "start": "866760",
    "end": "872880"
  },
  {
    "text": "right if you just want to send a string medium and we have three ways to send it",
    "start": "872880",
    "end": "878160"
  },
  {
    "text": "you can send it via Json you can send it via XML you can send it with the protocol buffers",
    "start": "878160",
    "end": "884399"
  },
  {
    "text": "if you send it by a Json this is how the overall format if this is how the overall information that will be sent",
    "start": "884399",
    "end": "890120"
  },
  {
    "text": "looks like the above one is XML it's big right its definitely definitely",
    "start": "890120",
    "end": "896699"
  },
  {
    "text": "big and you can see with protocol buffers that it serializes your data into the binary",
    "start": "896699",
    "end": "903360"
  },
  {
    "text": "format and it is quite small and this is just for one basic small string like medium",
    "start": "903360",
    "end": "911160"
  },
  {
    "text": "if you have a very big chunk of messages on that you want to send or receive this",
    "start": "911160",
    "end": "917579"
  },
  {
    "text": "is going to be really helpful right so according to the official",
    "start": "917579",
    "end": "923779"
  },
  {
    "text": "documentation that Google releases protocol buffers are Google's language neutral so first of all this is language",
    "start": "923779",
    "end": "931260"
  },
  {
    "text": "neutral no matter what technology you are using this is going to work platform neutral",
    "start": "931260",
    "end": "936959"
  },
  {
    "text": "extensible mechanism for serializing structure data think XML",
    "start": "936959",
    "end": "942959"
  },
  {
    "text": "but smaller faster and simpler right you can Define",
    "start": "942959",
    "end": "950579"
  },
  {
    "text": "how you want your data to be structured once and then you can use special",
    "start": "950579",
    "end": "955920"
  },
  {
    "text": "generated source code easily write and read your structured data to form a",
    "start": "955920",
    "end": "961560"
  },
  {
    "text": "variety of data streams using a variety of languages right so Google officially",
    "start": "961560",
    "end": "966899"
  },
  {
    "text": "mentions it that Google is going to handle the generation of the code for all of the languages we will see an",
    "start": "966899",
    "end": "973800"
  },
  {
    "text": "example with python as well so Google took it upon itself right as I",
    "start": "973800",
    "end": "980699"
  },
  {
    "text": "said there is a problem right the problem of the client-side libraries that there are different communities who",
    "start": "980699",
    "end": "987120"
  },
  {
    "text": "are maintaining the client-side libraries but that's not the case with grpc for with grpc if you are using grpc",
    "start": "987120",
    "end": "993959"
  },
  {
    "text": "with your microservices then whatever changes are going to be there it is going to be shipped",
    "start": "993959",
    "end": "1000800"
  },
  {
    "text": "managed maintained just by Google most of the languages that we at least in",
    "start": "1000800",
    "end": "1007699"
  },
  {
    "text": "2022 use Java node c-sharp go Ruby Python and there are separate other",
    "start": "1007699",
    "end": "1014360"
  },
  {
    "text": "languages also for which Googles releases the support the thing is all you have to do is just",
    "start": "1014360",
    "end": "1021680"
  },
  {
    "text": "prepare your protocol buffers and the automatic code generator the",
    "start": "1021680",
    "end": "1027140"
  },
  {
    "text": "compilers that Google releases you have to just use that and it will generate the code for you that you can directly",
    "start": "1027140",
    "end": "1032298"
  },
  {
    "text": "consume you don't have like all of this code generation part is abstracted you don't have to care about it you just",
    "start": "1032299",
    "end": "1039079"
  },
  {
    "text": "have to care about the logic that you want to write with your service and that's it you don't need to care about",
    "start": "1039079",
    "end": "1044120"
  },
  {
    "text": "the fact that whether the client Side Library is currently supporting some feature or not everything is going to be",
    "start": "1044120",
    "end": "1050000"
  },
  {
    "text": "handled at one point of time by Google so this is something that I would say",
    "start": "1050000",
    "end": "1055760"
  },
  {
    "text": "the whole load Google took it upon themselves so we can see a small example right and",
    "start": "1055760",
    "end": "1063860"
  },
  {
    "text": "let's see uh like how this overall code generation thing works right",
    "start": "1063860",
    "end": "1071320"
  },
  {
    "text": "okay so how much time we have okay",
    "start": "1073400",
    "end": "1077380"
  },
  {
    "text": "so let's do one thing I guess this screen is not working",
    "start": "1083600",
    "end": "1091179"
  },
  {
    "text": "okay just a second",
    "start": "1107240",
    "end": "1110440"
  },
  {
    "text": "okay so this is like a basic python I would say",
    "start": "1116539",
    "end": "1122980"
  },
  {
    "text": "project I'm not sure it's like hardly having 100 lines of code even less but",
    "start": "1124640",
    "end": "1129980"
  },
  {
    "text": "it's a small python service that I have created and what do we do uh",
    "start": "1129980",
    "end": "1136760"
  },
  {
    "text": "yeah sure",
    "start": "1136760",
    "end": "1139360"
  },
  {
    "text": "Okay cool so it's a small python service that I have built right and first of all",
    "start": "1145280",
    "end": "1152419"
  },
  {
    "text": "before we do anything else let us talk about the Proto this is the protocol",
    "start": "1152419",
    "end": "1157580"
  },
  {
    "text": "buffer right so this is the overall syntax that you have to use in order to prepare a",
    "start": "1157580",
    "end": "1164059"
  },
  {
    "text": "protocol buffer it's going to be a strict contract it's going to be a straight contract that you have to use right for example we are going to define",
    "start": "1164059",
    "end": "1171820"
  },
  {
    "text": "a message object that is going to be called as to do item this is going to",
    "start": "1171820",
    "end": "1177140"
  },
  {
    "text": "have two parameters an ID that is going to be an integer and a text that is",
    "start": "1177140",
    "end": "1182240"
  },
  {
    "text": "going to be a string now this is something that is going to be now strict from here you cannot pass anything else",
    "start": "1182240",
    "end": "1190400"
  },
  {
    "text": "in your text or ID like any other data you can but but we can do that with Json",
    "start": "1190400",
    "end": "1195679"
  },
  {
    "text": "right we can have a key and whatever value we put we can do that but that's not the case which uh with protocol",
    "start": "1195679",
    "end": "1202760"
  },
  {
    "text": "buffers right if you want to have something which is optional that's your that you are not going to send every",
    "start": "1202760",
    "end": "1208280"
  },
  {
    "text": "time for example like in rest we have this syntax where",
    "start": "1208280",
    "end": "1213500"
  },
  {
    "text": "if you are going to do something like slash API slash V1 slash to do and it's",
    "start": "1213500",
    "end": "1220220"
  },
  {
    "text": "a get request you get all the to-do's but if you do slash API slash V1 slash",
    "start": "1220220",
    "end": "1226520"
  },
  {
    "text": "to do slash one and it's a get request you get the first to do right so you can define a message",
    "start": "1226520",
    "end": "1234200"
  },
  {
    "text": "object like to do item which is having ah which is uh to do request which is going to have an optional ID if you want",
    "start": "1234200",
    "end": "1241039"
  },
  {
    "text": "to send an ID you can send it otherwise it is going to be optional so this kind of a syntax is going to work if you want",
    "start": "1241039",
    "end": "1246380"
  },
  {
    "text": "to send an array of items you have to specifically mention that it is going to be like for here for array you have to",
    "start": "1246380",
    "end": "1253400"
  },
  {
    "text": "mention it as repeated and things are going to work like that and",
    "start": "1253400",
    "end": "1259460"
  },
  {
    "text": "here you define your RPC now in grpc again as I said grpc apart",
    "start": "1259460",
    "end": "1265700"
  },
  {
    "text": "from being a technology gives you a set of conventions as well just like rest right in rest the major form of",
    "start": "1265700",
    "end": "1272660"
  },
  {
    "text": "information is what your resource for example to do is a resource you create",
    "start": "1272660",
    "end": "1278000"
  },
  {
    "text": "your apis you create the URLs for the apis based on the resource",
    "start": "1278000",
    "end": "1283100"
  },
  {
    "text": "what grpc recommends grpc says that you should you should build this urls based",
    "start": "1283100",
    "end": "1291200"
  },
  {
    "text": "on action like when you have to create to do just say slash create to do when",
    "start": "1291200",
    "end": "1296840"
  },
  {
    "text": "you have to do read to do just say slash read to do right so you have to be yeah",
    "start": "1296840",
    "end": "1302900"
  },
  {
    "text": "like you have to Define your action instead of resource right and this is how you define just your RPC",
    "start": "1302900",
    "end": "1310039"
  },
  {
    "text": "RPC create to do read to do it is going to take a to-do item create to do is going to create a like receiver to do",
    "start": "1310039",
    "end": "1317179"
  },
  {
    "text": "item and return a to-do item as well for re to do you are going to receive a to-do request that is of course having",
    "start": "1317179",
    "end": "1324200"
  },
  {
    "text": "an optional ID that we already discussed about and it is going to return to do items that it can return one item like",
    "start": "1324200",
    "end": "1330500"
  },
  {
    "text": "it is just a dummy I would say Proto buffer okay now",
    "start": "1330500",
    "end": "1337039"
  },
  {
    "text": "as I said this is the basic protocol buffer that we have right",
    "start": "1337039",
    "end": "1342919"
  },
  {
    "text": "now Google release Google released this compiler for different I would say",
    "start": "1342919",
    "end": "1349159"
  },
  {
    "text": "language even for python there is a dedicated one so you can just use the grpc tools dot protoc in order to",
    "start": "1349159",
    "end": "1356360"
  },
  {
    "text": "generate some code as I said that is going to act as your client-side code right so",
    "start": "1356360",
    "end": "1364640"
  },
  {
    "text": "if I show you the exact code what it generates so here you can see there are two files to do underscore pb2 dot grpc",
    "start": "1364640",
    "end": "1374500"
  },
  {
    "text": "one is this one and ah sorry and this one right so these are the two set of",
    "start": "1374500",
    "end": "1379520"
  },
  {
    "text": "files that this automatic I would say compiler kind of a thing is going to do",
    "start": "1379520",
    "end": "1385760"
  },
  {
    "text": "so if you read this file if you want to read this file you will see that it is going to define",
    "start": "1385760",
    "end": "1392960"
  },
  {
    "text": "something called as a stub it is going to do everything on its own it's going to Define your URL for slash create to do it is",
    "start": "1392960",
    "end": "1401299"
  },
  {
    "text": "going to set everything like set all the codes and detail whatever it has to do it is going to do everything on its own",
    "start": "1401299",
    "end": "1407179"
  },
  {
    "text": "like all of this code is going to get generated you don't have to care what is getting generated you just have to use",
    "start": "1407179",
    "end": "1413059"
  },
  {
    "text": "it right everything is going to be managed by Google if there is any change if there is any",
    "start": "1413059",
    "end": "1420140"
  },
  {
    "text": "Nuance that is going to get changed it will automatically get shipped right",
    "start": "1420140",
    "end": "1425299"
  },
  {
    "text": "and then and the most important part these kind",
    "start": "1425299",
    "end": "1431720"
  },
  {
    "text": "of compilers is available in all of the languages that supports grpc right okay",
    "start": "1431720",
    "end": "1437480"
  },
  {
    "text": "then all you have to do is just start setting up a server right",
    "start": "1437480",
    "end": "1442940"
  },
  {
    "text": "so we are going to like start writing the request I can show the exact code as well but you can we can go here by step",
    "start": "1442940",
    "end": "1449240"
  },
  {
    "text": "by step so we'll be defining two functions create to do read to do right",
    "start": "1449240",
    "end": "1454340"
  },
  {
    "text": "right apart from that we are going to set up the survey in order to set up the server all you have to do is just make a",
    "start": "1454340",
    "end": "1461919"
  },
  {
    "text": "just mention that what port you have to use right ah later we are going to",
    "start": "1461919",
    "end": "1467120"
  },
  {
    "text": "containerize it as well right and you all you have to do is",
    "start": "1467120",
    "end": "1472700"
  },
  {
    "text": "add to do servicer to server right like this function is already getting",
    "start": "1472700",
    "end": "1477919"
  },
  {
    "text": "generated from the client-side code that we got all you have to do is just create the object of the to-do service that we",
    "start": "1477919",
    "end": "1484280"
  },
  {
    "text": "just created here this to do service we created all we have to do just pass the object and the server context that we",
    "start": "1484280",
    "end": "1491000"
  },
  {
    "text": "have to pass and we can start the server right for the implementation all you have to",
    "start": "1491000",
    "end": "1496760"
  },
  {
    "text": "do is again consume the same protocol buffer messages right so here",
    "start": "1496760",
    "end": "1503360"
  },
  {
    "text": "you can see that we are creating ah for create to do we are creating a to",
    "start": "1503360",
    "end": "1509539"
  },
  {
    "text": "do item for this to to do item we are setting an ID setting a text and then we",
    "start": "1509539",
    "end": "1515059"
  },
  {
    "text": "are just uh returning that reply I have already maintained I am also maintaining",
    "start": "1515059",
    "end": "1520940"
  },
  {
    "text": "a to-do's to-do's array just to ensure some kind of a I would say persistence and same thing in read to Do's that you",
    "start": "1520940",
    "end": "1528440"
  },
  {
    "text": "have to just create this to do items now the thing is if we are not going to follow the data types that we have",
    "start": "1528440",
    "end": "1534140"
  },
  {
    "text": "mentioned if we are going to send anything else ins instead of the integer or the string",
    "start": "1534140",
    "end": "1540440"
  },
  {
    "text": "that we have defined it's going star it will start throwing error so it is going to be strict the contract is going to be",
    "start": "1540440",
    "end": "1545600"
  },
  {
    "text": "strict okay apart from that you can also set up your client",
    "start": "1545600",
    "end": "1551120"
  },
  {
    "text": "so in order to set up the client all you have to do is set up a Channel with the corresponding servers Post Port",
    "start": "1551120",
    "end": "1557600"
  },
  {
    "text": "you have to create a stub and you can just start making the call so here you can see we are making the call of create",
    "start": "1557600",
    "end": "1563840"
  },
  {
    "text": "to do and create to do expects a to-do item as well so we are going to create a",
    "start": "1563840",
    "end": "1569360"
  },
  {
    "text": "to do item object here with id1 let us say text is equals to new to do and we",
    "start": "1569360",
    "end": "1574580"
  },
  {
    "text": "are going to just make a call and that's it right if you have to read to Do's you can just again make a request object",
    "start": "1574580",
    "end": "1581299"
  },
  {
    "text": "with the expectation and you can just make the call so I would say",
    "start": "1581299",
    "end": "1588919"
  },
  {
    "text": "in the first impression this might look like a lot of work to do you have to prepare a protocol buffer you have to",
    "start": "1588919",
    "end": "1594440"
  },
  {
    "text": "use the compiler to create all of the code right then you can start writing your server and the client",
    "start": "1594440",
    "end": "1601340"
  },
  {
    "text": "yes of course in very small scale application like if you definitely have to make a to-do app",
    "start": "1601340",
    "end": "1607520"
  },
  {
    "text": "this is too much right this is going to be very beneficial when you have large",
    "start": "1607520",
    "end": "1612799"
  },
  {
    "text": "scale application when you have a very big application where a lot of apis you have written there are a lot of micro",
    "start": "1612799",
    "end": "1618620"
  },
  {
    "text": "services that you have in those kind of cases these kind of implementations where you have strict contract is going",
    "start": "1618620",
    "end": "1624799"
  },
  {
    "text": "to help you a lot so again you can just run your python",
    "start": "1624799",
    "end": "1631520"
  },
  {
    "text": "server and from the client you can start making the calls and it will just directly connect we can definitely see",
    "start": "1631520",
    "end": "1638000"
  },
  {
    "text": "our demonstration as well but as I said for the pros and cons if you",
    "start": "1638000",
    "end": "1644299"
  },
  {
    "text": "will see grpc is going to be if if you are just if you have just started right your first like you are creating your",
    "start": "1644299",
    "end": "1650779"
  },
  {
    "text": "first to do application then something like something like grpc can be a bit overwhelming",
    "start": "1650779",
    "end": "1656299"
  },
  {
    "text": "rest is simple I will definitely agree to the fact and you guys might agree to",
    "start": "1656299",
    "end": "1662299"
  },
  {
    "text": "the same thing as well that rest is quite simple right it's not as complicated and there are not a lot of",
    "start": "1662299",
    "end": "1668480"
  },
  {
    "text": "steps to get onboarded it literally takes less than five minutes to create a rest API with python but with grpc you",
    "start": "1668480",
    "end": "1676220"
  },
  {
    "text": "have to do some steps but if you have a lot of micro services that are interacting right and then later just",
    "start": "1676220",
    "end": "1683299"
  },
  {
    "text": "think about it in the later stages if the contracts of one micro service changes",
    "start": "1683299",
    "end": "1689240"
  },
  {
    "text": "then in the other micro Services also it will be a strict implementation to do right so there are benefits there are",
    "start": "1689240",
    "end": "1696320"
  },
  {
    "text": "pros and cons both for grpc as well and for rest again it depends on what",
    "start": "1696320",
    "end": "1702080"
  },
  {
    "text": "business use case we have it depends on what are our requirements what is the scale that we are working on based on",
    "start": "1702080",
    "end": "1708020"
  },
  {
    "text": "that we have to make a choice but",
    "start": "1708020",
    "end": "1713779"
  },
  {
    "text": "this was about grpc like in this talk I added two components one",
    "start": "1713779",
    "end": "1719779"
  },
  {
    "text": "was grpc that is going to help you make your services faster the interaction the efficiency is going to be increased",
    "start": "1719779",
    "end": "1726260"
  },
  {
    "text": "right apart from that apart from that our favorite containers right I'm not",
    "start": "1726260",
    "end": "1732860"
  },
  {
    "text": "sure how many of you guys have used it but definitely you must have heard about docker right the containers like there",
    "start": "1732860",
    "end": "1739880"
  },
  {
    "text": "are other Technologies available as well but using containerization",
    "start": "1739880",
    "end": "1745700"
  },
  {
    "text": "we can definitely scale up and improve our micro Services even further",
    "start": "1745700",
    "end": "1755320"
  },
  {
    "text": "and that leads us to something called as kubernetes",
    "start": "1756679",
    "end": "1762080"
  },
  {
    "text": "so again kubernetes is something released by Google so earlier and still till till this date we",
    "start": "1762080",
    "end": "1770299"
  },
  {
    "text": "use something called as Borg right Borges and internal Google tech",
    "start": "1770299",
    "end": "1776480"
  },
  {
    "text": "and you can say that kubernetes is just a sophisticated cleaner open source",
    "start": "1776480",
    "end": "1783380"
  },
  {
    "text": "version of Borg right what kubernetes is kubernetes is container orchestrator if like if I",
    "start": "1783380",
    "end": "1792860"
  },
  {
    "text": "have to Define kubernetes in two words its container orchestrator the same thing Borg is still doing right and we",
    "start": "1792860",
    "end": "1801260"
  },
  {
    "text": "we are heavily dependent on bark but we cannot just release Borg make it open source right",
    "start": "1801260",
    "end": "1807799"
  },
  {
    "text": "everybody can use it no so there are some changes ah that were done and that",
    "start": "1807799",
    "end": "1814279"
  },
  {
    "text": "led to the technology kubernetes right I would say that kubernetes is one of",
    "start": "1814279",
    "end": "1821779"
  },
  {
    "text": "the I would say most important things if you are working on scale ah that exist out there in the developer Community",
    "start": "1821779",
    "end": "1828340"
  },
  {
    "text": "kubernetes is also called as k8s like just remove the K just remove the S",
    "start": "1828340",
    "end": "1834740"
  },
  {
    "text": "there are eight characters in between we are lazy we replace the eight characters with eight and it creates so a lot of",
    "start": "1834740",
    "end": "1842480"
  },
  {
    "text": "time you will find people saying it as K eights but",
    "start": "1842480",
    "end": "1848320"
  },
  {
    "text": "kubernetes has got a lot of I would say use cases being a container orchestrator",
    "start": "1849200",
    "end": "1855640"
  },
  {
    "text": "kubernetes can do a lot of things on the go very easily",
    "start": "1855640",
    "end": "1860720"
  },
  {
    "text": "first of all like there are some terminologies that we can talk about so there is a there is",
    "start": "1860720",
    "end": "1866419"
  },
  {
    "text": "something called as pod right so the smallest unit that you can build is a pod right and it works on the",
    "start": "1866419",
    "end": "1874399"
  },
  {
    "text": "I'm not sure like what's the better version to say it but there's like a master node and there are like worker",
    "start": "1874399",
    "end": "1881419"
  },
  {
    "text": "nodes let us not ah let us call it as worker nodes so what kubernetes does is",
    "start": "1881419",
    "end": "1887720"
  },
  {
    "text": "it manages everything on the go if one of the worker if one of the worker nodes",
    "start": "1887720",
    "end": "1892820"
  },
  {
    "text": "goes down it will automatically turn up one more right on the go if you want",
    "start": "1892820",
    "end": "1899000"
  },
  {
    "text": "that you uh if you if you feel the need that you want to have more workers you can scale or deployment by just one",
    "start": "1899000",
    "end": "1905600"
  },
  {
    "text": "Command right and kubernetes has got a very significant I would say support for",
    "start": "1905600",
    "end": "1912260"
  },
  {
    "text": "most of the platforms right be it if you are developing your server on Linux Mac",
    "start": "1912260",
    "end": "1918320"
  },
  {
    "text": "or Windows right and definitely the documentations is really very good",
    "start": "1918320",
    "end": "1924380"
  },
  {
    "text": "so let us talk about it",
    "start": "1924380",
    "end": "1929140"
  },
  {
    "text": "so what I have done here is like in the actual implementation here also if you will see I have changed the client code",
    "start": "1934960",
    "end": "1941600"
  },
  {
    "text": "to a basic flask kind of an application if you will see client dot py I've like",
    "start": "1941600",
    "end": "1947779"
  },
  {
    "text": "commented out all of this and I have created this basic flask API where I can",
    "start": "1947779",
    "end": "1953659"
  },
  {
    "text": "have one slash create to do and slash read to do it is again consuming all of",
    "start": "1953659",
    "end": "1958940"
  },
  {
    "text": "the grpc code in the same manner right",
    "start": "1958940",
    "end": "1963398"
  },
  {
    "text": "then all you have to do is containerize your server and the client for",
    "start": "1965980",
    "end": "1971960"
  },
  {
    "text": "containerization we can use Docker right so this is a basic I would say Docker",
    "start": "1971960",
    "end": "1977360"
  },
  {
    "text": "file that we have to create we have to just mention the environment right inside in the inside the container we",
    "start": "1977360",
    "end": "1983539"
  },
  {
    "text": "have to just copy our requirements.txt that is going to have all the libraries that we have will be copying the server",
    "start": "1983539",
    "end": "1989899"
  },
  {
    "text": "and we'll be installing all the required dependencies and we will be again using",
    "start": "1989899",
    "end": "1996380"
  },
  {
    "text": "the same I would say code generator in order to create the stubs and things",
    "start": "1996380",
    "end": "2001600"
  },
  {
    "text": "will be done apart from that you have to create a",
    "start": "2001600",
    "end": "2006760"
  },
  {
    "text": "Docker file again similar like to server you have to create it for the client right as the client is a flask cap so",
    "start": "2006760",
    "end": "2013840"
  },
  {
    "text": "you need to have these environment variables uh set and running",
    "start": "2013840",
    "end": "2019860"
  },
  {
    "text": "then what you can do is you can build your container and then you can",
    "start": "2020620",
    "end": "2025659"
  },
  {
    "text": "run it we'll talk about like why exactly containers come into the picture but you",
    "start": "2025659",
    "end": "2032019"
  },
  {
    "text": "can just set up your Docker container like this you will find this network",
    "start": "2032019",
    "end": "2037659"
  },
  {
    "text": "micro Services flag that I have mentioned so in order to in order like first of all we are setting up our",
    "start": "2037659",
    "end": "2044500"
  },
  {
    "text": "containers then we are going to push this container to kubernetes so in order for two containers to interact it's a",
    "start": "2044500",
    "end": "2051220"
  },
  {
    "text": "good way that we set up a networking mechanism so Docker also ships with that",
    "start": "2051220",
    "end": "2056500"
  },
  {
    "text": "so we have set up a micro services like I've just named the channel to be microservices and then the same thing we",
    "start": "2056500",
    "end": "2064118"
  },
  {
    "text": "have to do for the client as well is just that the ports will be different one port is like separate for a port for",
    "start": "2064119",
    "end": "2070179"
  },
  {
    "text": "client and separate for Server apart from that in the client code if you will see I'm using a host as grpc server uh",
    "start": "2070179",
    "end": "2077560"
  },
  {
    "text": "if you see here right this is the host that we are using so it is going to get that from the",
    "start": "2077560",
    "end": "2083858"
  },
  {
    "text": "environment variable for our Docker instance and",
    "start": "2083859",
    "end": "2089220"
  },
  {
    "text": "things will be done this will containerize the whole application now the thing is why do we need to containerize",
    "start": "2089320",
    "end": "2095800"
  },
  {
    "text": "back again like quite a few years back when Cloud",
    "start": "2095800",
    "end": "2101140"
  },
  {
    "text": "systems like gcp AWS all of the all of these things were not exactly in place",
    "start": "2101140",
    "end": "2107940"
  },
  {
    "text": "bare metals that we say in technical terms were there you have to manually set up a machine",
    "start": "2107940",
    "end": "2114220"
  },
  {
    "text": "you have to manually turn up your servers if you have to scale it up you have to scale the like the ability of",
    "start": "2114220",
    "end": "2120940"
  },
  {
    "text": "your machine or you have to put separate machines and then came these cloud services came into the picture AWS gcp",
    "start": "2120940",
    "end": "2128980"
  },
  {
    "text": "that made things a bit more virtual right you can just go and create a",
    "start": "2128980",
    "end": "2136300"
  },
  {
    "text": "virtual server and things are done now how exactly containers fit into this",
    "start": "2136300",
    "end": "2143380"
  },
  {
    "text": "it provides you kind of like a protected environment otherwise you don't know that on one actual Cloud machine which",
    "start": "2143380",
    "end": "2150940"
  },
  {
    "text": "is there in their data center how many actual servers are working so maybe",
    "start": "2150940",
    "end": "2156579"
  },
  {
    "text": "two different I would say applications are running on the same machine and they are interacting with each other or maybe",
    "start": "2156579",
    "end": "2163420"
  },
  {
    "text": "you just uh log into one of the ec2 hosts and you are able to access someone",
    "start": "2163420",
    "end": "2169119"
  },
  {
    "text": "else file so that's why containerization comes into the picture it's a bit uh it makes the overall environment more",
    "start": "2169119",
    "end": "2174880"
  },
  {
    "text": "secure and in order to use kubernetes it makes sense to use these containers",
    "start": "2174880",
    "end": "2182099"
  },
  {
    "text": "now for setting up kubernetes it's just like one single file that you have to create",
    "start": "2182260",
    "end": "2187960"
  },
  {
    "text": "a yaml file it's just a bit of configurations that you have to do and that's it right so in the configurations",
    "start": "2187960",
    "end": "2195040"
  },
  {
    "text": "only what you can do is you can mention how many replicas of the pods you want",
    "start": "2195040",
    "end": "2200140"
  },
  {
    "text": "to have five seven ten and these are going to be changeable on the go like",
    "start": "2200140",
    "end": "2205599"
  },
  {
    "text": "you are running already your server right it's already having its five instances running and you want to scale",
    "start": "2205599",
    "end": "2211119"
  },
  {
    "text": "up it can be done right so all you have to do",
    "start": "2211119",
    "end": "2217780"
  },
  {
    "text": "initially in order to set up your kubernetes in order to set up the kubernetes all",
    "start": "2217780",
    "end": "2224020"
  },
  {
    "text": "you have to do is just prepare a yaml file in the yaml file set up the containers for both client and the",
    "start": "2224020",
    "end": "2231099"
  },
  {
    "text": "server right so here you can see for the grpc client as well as the server both of them I have mentioned here I am not",
    "start": "2231099",
    "end": "2237940"
  },
  {
    "text": "pulling the image from Docker Hub or let's say Google Cloud right I am",
    "start": "2237940",
    "end": "2243339"
  },
  {
    "text": "pulling the image directly from my local that's why the image pull policy is never right apart from that we have to",
    "start": "2243339",
    "end": "2250960"
  },
  {
    "text": "expose what ports these containers are going to use inside kubernetes and",
    "start": "2250960",
    "end": "2258400"
  },
  {
    "text": "the previous yaml files that I showed you these are for setting up your deployment servers now in order to",
    "start": "2258400",
    "end": "2264280"
  },
  {
    "text": "access these deployment servers you have to create Services again just few",
    "start": "2264280",
    "end": "2270339"
  },
  {
    "text": "configurations that you have to do right you have to set up the service you have to ex expose the ports right and here",
    "start": "2270339",
    "end": "2279640"
  },
  {
    "text": "you can see in the client this is for the server the client is interacting the server we are going to enter we will be",
    "start": "2279640",
    "end": "2284680"
  },
  {
    "text": "interacting with the client in the client you can mention this type as cluster IP node port or load balancer",
    "start": "2284680",
    "end": "2290500"
  },
  {
    "text": "and yes you heard it right so if you are integrating kubernetes with let us say AWS Google Cloud",
    "start": "2290500",
    "end": "2297820"
  },
  {
    "text": "platform digitalocean whatever like available Cloud platforms are there which supports kubernetes deployment you",
    "start": "2297820",
    "end": "2305200"
  },
  {
    "text": "can use directly their load balancers we are not going to use it because again depends on what service you are using it",
    "start": "2305200",
    "end": "2311980"
  },
  {
    "text": "may charge you but again if you have to scale up things on the go having a load balancer makes a lot of sense because it",
    "start": "2311980",
    "end": "2318520"
  },
  {
    "text": "will automatically route the request to the least like let's say whatever policy you are using based on that it is going",
    "start": "2318520",
    "end": "2324640"
  },
  {
    "text": "to Route the request to the corresponding server and that's it and that's it this is all",
    "start": "2324640",
    "end": "2331780"
  },
  {
    "text": "you have to do in order to set up a kubernetes I would say application now let's see ah",
    "start": "2331780",
    "end": "2340260"
  },
  {
    "text": "ok so let us try to see that how when I",
    "start": "2353380",
    "end": "2359200"
  },
  {
    "text": "said that if you have a kubernetes I would say instance running you can scale up or scale down your deployments that",
    "start": "2359200",
    "end": "2365980"
  },
  {
    "text": "is going to be easy so because we are doing this deployment on the local we are not using any dedicated Cloud",
    "start": "2365980",
    "end": "2372040"
  },
  {
    "text": "platform that is going to give us the IPS and everything you can use tools like mini Cube mini cube is something",
    "start": "2372040",
    "end": "2377560"
  },
  {
    "text": "that you can use for both Linux as well as Mac right and apart from that",
    "start": "2377560",
    "end": "2383740"
  },
  {
    "text": "uh there is a tool called as cube CTL so you can do something like Cube CTL",
    "start": "2383740",
    "end": "2392099"
  },
  {
    "text": "okay I am not able to exactly see but Cube CTL apply minus F and let us say",
    "start": "2395980",
    "end": "2403240"
  },
  {
    "text": "the yaml file that you have written is server.yaml right",
    "start": "2403240",
    "end": "2409480"
  },
  {
    "text": "okay it says these are created so it ah directly created a kubernetes",
    "start": "2409480",
    "end": "2415900"
  },
  {
    "text": "instance for us now what we can do is we can go to the mini mini Cube dashboard",
    "start": "2415900",
    "end": "2422560"
  },
  {
    "text": "so mini cube is a tool you can directly install it we are not going to see the installation and everything we will just",
    "start": "2422560",
    "end": "2427839"
  },
  {
    "text": "see exactly how you can do it so let's say if you do mini Cube dashboard",
    "start": "2427839",
    "end": "2434160"
  },
  {
    "text": "one second",
    "start": "2435520",
    "end": "2438420"
  },
  {
    "text": "okay it is going to fire up the dashboard for us where we can see if the services are up",
    "start": "2452859",
    "end": "2460300"
  },
  {
    "text": "so let me show you is going to be a local dashboard if you are using any Cloud platform then you can you will be",
    "start": "2460300",
    "end": "2466240"
  },
  {
    "text": "having their dedicated dashboards okay",
    "start": "2466240",
    "end": "2471339"
  },
  {
    "text": "and let's see let's",
    "start": "2471339",
    "end": "2476280"
  },
  {
    "text": "so let us go to deployments okay now here you can see",
    "start": "2477280",
    "end": "2482560"
  },
  {
    "text": "because we mentioned that for each for both like client and server we want five replicas each so these five replicas are",
    "start": "2482560",
    "end": "2490839"
  },
  {
    "text": "working so if you will open you can see all the logs and dedicated I would",
    "start": "2490839",
    "end": "2496599"
  },
  {
    "text": "say action items for them now let us say that you want to scale up right you want",
    "start": "2496599",
    "end": "2502420"
  },
  {
    "text": "to scale up your deployment to let's say 10 right ah just a second yep so what you can say",
    "start": "2502420",
    "end": "2508900"
  },
  {
    "text": "is Cube CTL",
    "start": "2508900",
    "end": "2513119"
  },
  {
    "text": "scale deployment and let us say for the server instead of five replicas now we",
    "start": "2514660",
    "end": "2519820"
  },
  {
    "text": "want to have 10 all you have to do is just pass a flag minus minus replica is equals to ten",
    "start": "2519820",
    "end": "2525940"
  },
  {
    "text": "and it says the server scaled now if you go here you can see",
    "start": "2525940",
    "end": "2532240"
  },
  {
    "text": "from five dedicated instances now you have ten its that easy",
    "start": "2532240",
    "end": "2537880"
  },
  {
    "text": "right it is that easy to just scale up at any point of time right so that's",
    "start": "2537880",
    "end": "2543460"
  },
  {
    "text": "where kubernetes come into the picture that if you have a lot of micro services and if you if at any point of time any",
    "start": "2543460",
    "end": "2550839"
  },
  {
    "text": "one of the service you want to scale up scale down if you want to have very high availability so a lot of times we have",
    "start": "2550839",
    "end": "2557800"
  },
  {
    "text": "dedicated Services which is expected to have extremely high availability then",
    "start": "2557800",
    "end": "2563680"
  },
  {
    "text": "kubernetes is something that we can directly use if any of the nodes goes down it is going to turn up at the same",
    "start": "2563680",
    "end": "2571180"
  },
  {
    "text": "moment of time one more replica for it right so kubernetes is going to help us",
    "start": "2571180",
    "end": "2576280"
  },
  {
    "text": "with that and if you like if let's say if you want to test your kubernetes that is like we are not we have not deployed",
    "start": "2576280",
    "end": "2581980"
  },
  {
    "text": "it on any Cloud platform if you want to just test your kubernetes to in on your local you can set up something called as",
    "start": "2581980",
    "end": "2587980"
  },
  {
    "text": "Ingress right that comes ah as a by default support for kubernetes and you",
    "start": "2587980",
    "end": "2593200"
  },
  {
    "text": "will be able to make a call directly through Ingress so",
    "start": "2593200",
    "end": "2598619"
  },
  {
    "text": "At Last At Last I would like to say that if we have if we have like ah when I was",
    "start": "2599380",
    "end": "2607720"
  },
  {
    "text": "working with LinkedIn the whole architecture was exactly set up with microservices so if you have a huge",
    "start": "2607720",
    "end": "2615940"
  },
  {
    "text": "bunch of microservices that are interacting with each other then you can use both grpc and kubernetes as",
    "start": "2615940",
    "end": "2625060"
  },
  {
    "text": "two separate fronts which will help you to scale up your services using grpc not",
    "start": "2625060",
    "end": "2631420"
  },
  {
    "text": "only you get efficiency not only you get better reliability and",
    "start": "2631420",
    "end": "2636700"
  },
  {
    "text": "security but you get contracts which are going to be strict",
    "start": "2636700",
    "end": "2641920"
  },
  {
    "text": "with kubernetes and containerizations all you have to do is just see what is",
    "start": "2641920",
    "end": "2648160"
  },
  {
    "text": "the expectation and whenever you want to scale it up you can scale up your services you can manage inter-service",
    "start": "2648160",
    "end": "2654940"
  },
  {
    "text": "Communications containerization automatically is going to be there because it's the requirement for setting",
    "start": "2654940",
    "end": "2661119"
  },
  {
    "text": "up kubernetes and what not so on and on I would say grpc is something",
    "start": "2661119",
    "end": "2667960"
  },
  {
    "text": "definitely worth a try ah if you are building something very small I at least",
    "start": "2667960",
    "end": "2673060"
  },
  {
    "text": "never use something like I would have never used something like jrpc for something very small but I would say",
    "start": "2673060",
    "end": "2679000"
  },
  {
    "text": "that if there is like very complex communication that you have to do jrpc",
    "start": "2679000",
    "end": "2684339"
  },
  {
    "text": "makes a lot of sense cool so I guess we have some time so ah",
    "start": "2684339",
    "end": "2690339"
  },
  {
    "text": "we can ah definitely take up some questions if you have",
    "start": "2690339",
    "end": "2694859"
  },
  {
    "text": "Okay so",
    "start": "2705339",
    "end": "2708359"
  },
  {
    "text": "so as I said apart like of course you can do the load balancing part manually also like grpc",
    "start": "2715240",
    "end": "2722560"
  },
  {
    "text": "comes with its inbuilt capability for load balancing so let me show you so",
    "start": "2722560",
    "end": "2729720"
  },
  {
    "text": "foreign",
    "start": "2749140",
    "end": "2751318"
  },
  {
    "text": "side load balancing this is a very good article from Microsoft",
    "start": "2758400",
    "end": "2764040"
  },
  {
    "text": "I'm not sure why for understanding grpc we have a Microsoft article but ah you can see",
    "start": "2768760",
    "end": "2775900"
  },
  {
    "text": "that for the client side load balancing the client that you have set up ah grpc",
    "start": "2775900",
    "end": "2780940"
  },
  {
    "text": "comes with its inbuilt capability of doing the load balancing right uh you",
    "start": "2780940",
    "end": "2786099"
  },
  {
    "text": "can have separate strategies like whatever strategy you want to have for the load balancing part you can do that",
    "start": "2786099",
    "end": "2791680"
  },
  {
    "text": "all the DNS resolution and everything is going to be done right so if you go here",
    "start": "2791680",
    "end": "2796720"
  },
  {
    "text": "for the strategy part it defines two strategies the pick first and the round robin and",
    "start": "2796720",
    "end": "2803319"
  },
  {
    "text": "all you have to do is just configure your load balancing there and whatever servers you will be having it will",
    "start": "2803319",
    "end": "2808960"
  },
  {
    "text": "automatically reroute your requests because you have dedicated you have set up a dedicated channel in order to",
    "start": "2808960",
    "end": "2815560"
  },
  {
    "text": "connect the client to the server now it's grpc it will which will be deciding",
    "start": "2815560",
    "end": "2821079"
  },
  {
    "text": "if let's say you set it up it will be grpc which will be deciding what server to hit so you can definitely use that",
    "start": "2821079",
    "end": "2827800"
  },
  {
    "text": "like I've already added this article in the speaker notes so you can also read about it",
    "start": "2827800",
    "end": "2834299"
  },
  {
    "text": "is there any or something I guess",
    "start": "2840359",
    "end": "2845759"
  },
  {
    "text": "uh I'm not sure about the browser part but yes there is some support that has been released with the browser I myself",
    "start": "2850180",
    "end": "2856420"
  },
  {
    "text": "have never worked with grpc on browser but initial in the initial days it was definitely a hiccup with the browsers",
    "start": "2856420",
    "end": "2862839"
  },
  {
    "text": "but yes there exists some support so I might have to look at it but I have not first-handedly used uh grpc with browser",
    "start": "2862839",
    "end": "2869980"
  },
  {
    "text": "so yeah we have to check it up",
    "start": "2869980",
    "end": "2873960"
  },
  {
    "text": "okay okay",
    "start": "2876160",
    "end": "2881940"
  },
  {
    "text": "is there any best practices around sharing portable buffers in those cigars",
    "start": "2886839",
    "end": "2893079"
  },
  {
    "text": "sharing protocol like again you can Define your protocol buffer as a in a similar manner that you define a",
    "start": "2893079",
    "end": "2898599"
  },
  {
    "text": "contract right and the client side as I said the client-side library that Google",
    "start": "2898599",
    "end": "2904119"
  },
  {
    "text": "provides is going to automatically generate the code for everyone let's say you have three services that are",
    "start": "2904119",
    "end": "2910599"
  },
  {
    "text": "consuming sending the same protocol buffer like either consuming or sending now all you have to do is use the same",
    "start": "2910599",
    "end": "2917319"
  },
  {
    "text": "protocol buffer signature right a common protocol buffer signature is going to get used and whatever client side like",
    "start": "2917319",
    "end": "2923440"
  },
  {
    "text": "you can set it up separately and whatever client-side Library you are using let's say a ruby service node service python service you can use the",
    "start": "2923440",
    "end": "2931240"
  },
  {
    "text": "Python's compiler and the Gen code generator that to generate the same",
    "start": "2931240",
    "end": "2936280"
  },
  {
    "text": "protocol buffer code for python or node service and same for Ruby service now if",
    "start": "2936280",
    "end": "2941440"
  },
  {
    "text": "you are using the same generated code then it is automatically going to ensure the fact that you are",
    "start": "2941440",
    "end": "2947800"
  },
  {
    "text": "handling the contract in the same manner in all the three services so it's going to be common there",
    "start": "2947800",
    "end": "2954299"
  },
  {
    "text": "yeah anyone",
    "start": "2956500",
    "end": "2959400"
  },
  {
    "text": "foreign so I I'm assuming that whenever we do",
    "start": "2982000",
    "end": "2987640"
  },
  {
    "text": "any kind of debugging logging or anything we do on the service end right the the thing about sending a binary is",
    "start": "2987640",
    "end": "2995319"
  },
  {
    "text": "when you are going to send the message then over the network you are sending a binary so it's like a",
    "start": "2995319",
    "end": "3002460"
  },
  {
    "text": "small payload right it does the serialization and deserialization part on the end service",
    "start": "3002460",
    "end": "3009359"
  },
  {
    "text": "so when you are going to get the message it will decide it's not like you are sending the message it serializes it and",
    "start": "3009359",
    "end": "3016680"
  },
  {
    "text": "the other service is going to consume the serialized must know it is going to deserialize it so for the debugging and",
    "start": "3016680",
    "end": "3022680"
  },
  {
    "text": "logging part there won't be an issue it's just that when you are sending the message on the network the overall data",
    "start": "3022680",
    "end": "3029460"
  },
  {
    "text": "packet that you are sending is now small right so the same amount of information is getting sent with a smaller packet",
    "start": "3029460",
    "end": "3037619"
  },
  {
    "text": "that leads to a faster transmitting transmission of the overall data so for",
    "start": "3037619",
    "end": "3042720"
  },
  {
    "text": "the debugging and logging purpose because you do it on the end service right you like we just don't go to the",
    "start": "3042720",
    "end": "3048180"
  },
  {
    "text": "network layer and then see okay where's where's our packet that's the same thing",
    "start": "3048180",
    "end": "3053220"
  },
  {
    "text": "here we are just going to debug on the end service and things should be fine and like for debugging like whatever",
    "start": "3053220",
    "end": "3058680"
  },
  {
    "text": "technology you're using python Ruby there are dedicated debugging tools we can use",
    "start": "3058680",
    "end": "3065119"
  },
  {
    "text": "oh",
    "start": "3066780",
    "end": "3069319"
  },
  {
    "text": "what do we what do we I mean what are we talking talking about about",
    "start": "3082680",
    "end": "3087780"
  },
  {
    "text": "the contract always",
    "start": "3087780",
    "end": "3090440"
  },
  {
    "text": "applications that exists on",
    "start": "3093660",
    "end": "3097039"
  },
  {
    "text": "talk about something else okay so let me give an example so let's say that you",
    "start": "3105859",
    "end": "3111599"
  },
  {
    "text": "have we have a node service let's say we have two services so uh one service is",
    "start": "3111599",
    "end": "3117780"
  },
  {
    "text": "exposing an API and one service is consuming an API so while consuming an API let us say",
    "start": "3117780",
    "end": "3124980"
  },
  {
    "text": "sorry while exposing an API let us say the API expected you to send an integer",
    "start": "3124980",
    "end": "3131280"
  },
  {
    "text": "right for some let us say cost when you are sending a request from the",
    "start": "3131280",
    "end": "3137339"
  },
  {
    "text": "other side you didn't send an integer you send a string so how you",
    "start": "3137339",
    "end": "3143040"
  },
  {
    "text": "are going to check you have to do manual validation right that is not the case with grpc",
    "start": "3143040",
    "end": "3148559"
  },
  {
    "text": "the moment the other service is going to try is going to violate the protocol buffer that's BS that will be a strict",
    "start": "3148559",
    "end": "3154680"
  },
  {
    "text": "that's a strict contract it's going to throw an error on that on their end only that hey I didn't expect a string please",
    "start": "3154680",
    "end": "3161460"
  },
  {
    "text": "send a text that's the part you don't have to do manual validation right like I still",
    "start": "3161460",
    "end": "3167280"
  },
  {
    "text": "remember writing my first express application and dedicatedly writing separate middlewares for validations but",
    "start": "3167280",
    "end": "3174960"
  },
  {
    "text": "that kind of hustle that kind of like again that extra code that you we will be writing is kinda getting saved here",
    "start": "3174960",
    "end": "3182040"
  },
  {
    "text": "right so I guess that answers the question",
    "start": "3182040",
    "end": "3187099"
  },
  {
    "text": "so if your authenticated users only are trying to access so how about you like",
    "start": "3198119",
    "end": "3205559"
  },
  {
    "text": "like what's the problem with a regular authentication Service like I'm not like",
    "start": "3205559",
    "end": "3211740"
  },
  {
    "text": "we just we just want an authenticated user only to uh access our API right",
    "start": "3211740",
    "end": "3217200"
  },
  {
    "text": "that's",
    "start": "3217200",
    "end": "3220040"
  },
  {
    "text": "okay so first thing is uh securing on the transport layer like the message part because we are serializing and",
    "start": "3244559",
    "end": "3251460"
  },
  {
    "text": "deserializing the data the okay I'm not sure if I mentioned that in the talk or the question but the serialization and",
    "start": "3251460",
    "end": "3257880"
  },
  {
    "text": "deserialization of the data happens on the end client it doesn't it",
    "start": "3257880",
    "end": "3262980"
  },
  {
    "text": "doesn't like any other Intruder cannot just pass or like read the message in",
    "start": "3262980",
    "end": "3268619"
  },
  {
    "text": "between so you will be getting a binary right you are not going to get our raw data first thing uh offer secure",
    "start": "3268619",
    "end": "3275579"
  },
  {
    "text": "communication comes directly here so that's first level of security apart from that you can have manual like in",
    "start": "3275579",
    "end": "3282359"
  },
  {
    "text": "just the same manner like your rest regular rest apis have their dedicated uh validation and authentication you can",
    "start": "3282359",
    "end": "3289680"
  },
  {
    "text": "do the same setup here as well so like the serialization part happens on the end machine it's not like we can",
    "start": "3289680",
    "end": "3295940"
  },
  {
    "text": "intercept the CL like intercept the communication in between will be getting a binary we won't be able to see okay",
    "start": "3295940",
    "end": "3302579"
  },
  {
    "text": "what's inside that uh",
    "start": "3302579",
    "end": "3308059"
  },
  {
    "text": "okay so like uh for dedicated yeah that that makes sense that we have a better token strategy that we can directly send",
    "start": "3325559",
    "end": "3332819"
  },
  {
    "text": "over the headers uh for grpc that like dedicated headers doesn't exist but yes",
    "start": "3332819",
    "end": "3339839"
  },
  {
    "text": "you can use a separate I would say a separate service you can definitely create for your authentication and",
    "start": "3339839",
    "end": "3346380"
  },
  {
    "text": "authorization right I'm not sure about any headers that we can send with grpc we have to maybe look at it but yes like",
    "start": "3346380",
    "end": "3352500"
  },
  {
    "text": "a dedicated authentication Service you can definitely build on the grpc",
    "start": "3352500",
    "end": "3357740"
  },
  {
    "text": "yep sure",
    "start": "3361760",
    "end": "3365059"
  },
  {
    "text": "for example",
    "start": "3374599",
    "end": "3377900"
  },
  {
    "text": "okay so uh so let me understand the question so",
    "start": "3388339",
    "end": "3393839"
  },
  {
    "text": "from the client to the server if let's say if at any point of time we are not able to complete the communication right",
    "start": "3393839",
    "end": "3401119"
  },
  {
    "text": "we can have retry mechanisms there in the same way that we have like if it it's reaching our message key if it's",
    "start": "3404700",
    "end": "3411119"
  },
  {
    "text": "add the message queue then we can have manual uh workarounds like the retry part if let us say in the layer lets",
    "start": "3411119",
    "end": "3417780"
  },
  {
    "text": "because in the transport layer ah we have this TCP like in the TCP protocol",
    "start": "3417780",
    "end": "3425520"
  },
  {
    "text": "we have this sense of I would say security about the fact that a packet that we are going to send it's going to",
    "start": "3425520",
    "end": "3430920"
  },
  {
    "text": "be like a reliable way of communication right so for that part we are again going to use the same transport layer",
    "start": "3430920",
    "end": "3436380"
  },
  {
    "text": "but for if let us say if we are able to receive the message uh on our message queue like it's a queue that's uh set we",
    "start": "3436380",
    "end": "3443760"
  },
  {
    "text": "have set up in between the two servers we can have dedicated retry mechanism setup in place",
    "start": "3443760",
    "end": "3449900"
  },
  {
    "text": "yeah sure sir like",
    "start": "3452359",
    "end": "3456200"
  },
  {
    "text": "okay so the same word like again first uh sorry first of all uh like versioning",
    "start": "3465540",
    "end": "3471540"
  },
  {
    "text": "as I said issue might not be an issue for everyone first thing second thing ah using protocol buffers as I said uh",
    "start": "3471540",
    "end": "3478559"
  },
  {
    "text": "whenever we are going to change the Proto buff all we have to do is just do the Regeneration of the uh code using",
    "start": "3478559",
    "end": "3485940"
  },
  {
    "text": "the compilers it is going to handle everything you don't have to set up a separate like set of routes to expose",
    "start": "3485940",
    "end": "3493020"
  },
  {
    "text": "the I would say new set of contracts if you have a new protocol buffer set up in place all you have to do is just do the",
    "start": "3493020",
    "end": "3500640"
  },
  {
    "text": "recompilation of the code everything is going to get generated for you that's how we are going to avoid separate",
    "start": "3500640",
    "end": "3506880"
  },
  {
    "text": "dedicated versioning that we have to now uh let me answer now let us say now you",
    "start": "3506880",
    "end": "3512700"
  },
  {
    "text": "consider a case when let us say one of our service is not consuming the updated protobuf right so there can be case that",
    "start": "3512700",
    "end": "3520079"
  },
  {
    "text": "let us say we updated the Proto buff most of the services are consuming but",
    "start": "3520079",
    "end": "3525900"
  },
  {
    "text": "still there are a dedicated like still there is a service that is not consuming",
    "start": "3525900",
    "end": "3531480"
  },
  {
    "text": "the updated protobufs in those kind of cases we have to do some manual checks right we have to make sure that our",
    "start": "3531480",
    "end": "3537839"
  },
  {
    "text": "previous Proto buff is getting supported but you don't have to reroute everything",
    "start": "3537839",
    "end": "3543180"
  },
  {
    "text": "or like write new routes like for API versioning that we do we have a separate set of routes slash V1 then slash V2",
    "start": "3543180",
    "end": "3549780"
  },
  {
    "text": "then slash V3 we don't have to do that all we can do is the same RPC the previous RPC is also getting supported",
    "start": "3549780",
    "end": "3556319"
  },
  {
    "text": "by few of the servers that other services that are still not migrated can use and then later by with time we can",
    "start": "3556319",
    "end": "3563760"
  },
  {
    "text": "do that or you can have a stricter implementation that no matter what if",
    "start": "3563760",
    "end": "3569760"
  },
  {
    "text": "this like the updated protobuf you are not going to use we are not going to support it so again whatever kind of",
    "start": "3569760",
    "end": "3575460"
  },
  {
    "text": "like migration we want to have we can do that cool so",
    "start": "3575460",
    "end": "3581780"
  },
  {
    "text": "thank you for your time you guys were a fantastic audience",
    "start": "3582299",
    "end": "3586819"
  }
]