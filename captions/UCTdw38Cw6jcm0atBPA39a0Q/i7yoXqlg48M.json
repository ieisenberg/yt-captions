[
  {
    "text": "thank you all for coming i don't recognize any of you nor can i recall why i'm here now without further ado",
    "start": "10160",
    "end": "16800"
  },
  {
    "text": "my name is aaron powell and this is docker from scratch uh there's some contact details and stuff if you want to",
    "start": "16800",
    "end": "23119"
  },
  {
    "text": "find me afterwards or follow me on twitter or anything like that i'll also be around the retify booth just around",
    "start": "23119",
    "end": "28800"
  },
  {
    "text": "the corner for most of the day if you want to come and have a chat after this talk",
    "start": "28800",
    "end": "34640"
  },
  {
    "text": "so obviously this is a talk about docker when we talk about docker we talk about",
    "start": "34640",
    "end": "40719"
  },
  {
    "text": "a whole bunch of different things we talk about things like immutable infrastructure or doing containerized architectures using",
    "start": "40719",
    "end": "46480"
  },
  {
    "text": "micro services and deploying them into cloud infrastructure using kubernetes or dcos or swarm",
    "start": "46480",
    "end": "52559"
  },
  {
    "text": "we talk about how we can use docker to make our development environment almost identical to our product and production environment how we you know we build",
    "start": "52559",
    "end": "59199"
  },
  {
    "text": "this stuff and we ship it and nothing changes as we roll across all the different environments that we're using",
    "start": "59199",
    "end": "64559"
  },
  {
    "text": "within our application we have no rollback we always roll forward and all that kind of stuff",
    "start": "64559",
    "end": "70479"
  },
  {
    "text": "this is not a talk about that part of docker we are not going to be covering off",
    "start": "71040",
    "end": "76320"
  },
  {
    "text": "things like kubernetes or anything like that this is a talk about the basics",
    "start": "76320",
    "end": "82080"
  },
  {
    "text": "this is a talk targeted to people that maybe doc has been something that they've wanted to learn but have just never found the time or it's something",
    "start": "82080",
    "end": "88479"
  },
  {
    "text": "that you've heard about but you don't even know what it's what its concepts are how to use it or like what value it",
    "start": "88479",
    "end": "94640"
  },
  {
    "text": "could bring into what you're building as applications or anything like that this is a talk where we're going to",
    "start": "94640",
    "end": "101119"
  },
  {
    "text": "start from scratch and throughout the course of the talk we'll understand what i mean why and why i'm putting the",
    "start": "101119",
    "end": "106320"
  },
  {
    "text": "emphasis emphasis on from scratch so there's a bunch of other docker content",
    "start": "106320",
    "end": "112399"
  },
  {
    "text": "that will cover off all the stuff that i showed in the previous slides you know things about you know doing clustered architecture in",
    "start": "112399",
    "end": "117920"
  },
  {
    "text": "production and all that kind of stuff so kind of this could be a entry point to you know maybe i want to go and learn",
    "start": "117920",
    "end": "123840"
  },
  {
    "text": "some more about that afterwards hopefully that's what you take away from this talk but i said this is this is intended to help you get started with",
    "start": "123840",
    "end": "129599"
  },
  {
    "text": "docker and kind of talk about my experience when i first was getting into docker and uh working out where to go from there",
    "start": "129599",
    "end": "136000"
  },
  {
    "text": "so i want to just start with some useful terminology so that we understand a bit about what docker is and some of the",
    "start": "136000",
    "end": "141280"
  },
  {
    "text": "concepts that i'm going to introduce over the course of this talk so that we can understand them in the context of what we're going to be doing",
    "start": "141280",
    "end": "148800"
  },
  {
    "text": "so first off i just want to clarify docker is not a virtual machine docker is about",
    "start": "148800",
    "end": "155360"
  },
  {
    "text": "isolation it's uh it's come from like linux and the unix world a concept called ch root",
    "start": "155360",
    "end": "162879"
  },
  {
    "text": "which is basically creating user space isolation with inside of the kernel",
    "start": "162879",
    "end": "167920"
  },
  {
    "text": "so you are almost running something that is a full-blown uh",
    "start": "167920",
    "end": "174319"
  },
  {
    "text": "linux kernel uh with inside of it but it's still separate from uh the other processes are running here it's often",
    "start": "174319",
    "end": "180319"
  },
  {
    "text": "thought about almost like process isolation as well",
    "start": "180319",
    "end": "185319"
  },
  {
    "text": "the terminology that i'm going to use a lot is the idea of an image an image is your starting point when",
    "start": "185599",
    "end": "191360"
  },
  {
    "text": "building something from docker an image is used to baseline a bunch of reproducible",
    "start": "191360",
    "end": "197599"
  },
  {
    "text": "output uh thinking about it from i'm i'm a developer from or that's my background",
    "start": "197599",
    "end": "203519"
  },
  {
    "text": "i'm not an ops person so i think of things in developer context and when i think about an image",
    "start": "203519",
    "end": "208959"
  },
  {
    "text": "from an oo programming perspective an image is a class definition",
    "start": "208959",
    "end": "214560"
  },
  {
    "text": "from that we then have containers a container is a running image",
    "start": "215120",
    "end": "220319"
  },
  {
    "text": "it's made from some kind of image that we started with so it's the implementation of a class it's an object created from a class again using an oo",
    "start": "220319",
    "end": "227360"
  },
  {
    "text": "programming analogy there um often times when uh when i was first getting started with docker or when i'm",
    "start": "227360",
    "end": "233519"
  },
  {
    "text": "talking to people about docker they'll often confuse the the idea of an image and a container and they think that the",
    "start": "233519",
    "end": "239200"
  },
  {
    "text": "words are usually used interchangeably but they're not they're very different concepts and we'll see how that happens",
    "start": "239200",
    "end": "245760"
  },
  {
    "text": "and and what the differences are as we start doing some of the demos uh shortly",
    "start": "245760",
    "end": "252560"
  },
  {
    "text": "and the final bit of technology i want to talk about is the host the host is the machine that is running docker i'm",
    "start": "252640",
    "end": "258000"
  },
  {
    "text": "running a windows laptop i'm going to be using linux docker containers",
    "start": "258000",
    "end": "263040"
  },
  {
    "text": "so that kind of works a little bit differently than if i was running a native linux laptop um i'm not going to",
    "start": "263040",
    "end": "268639"
  },
  {
    "text": "be talking about windows containers i think there's some other content throughout the week if you're interested in windows containers because there's",
    "start": "268639",
    "end": "274160"
  },
  {
    "text": "some fundamental differences between linux and windows containers but basically the crux of it is",
    "start": "274160",
    "end": "279759"
  },
  {
    "text": "the host is the machine that docker is installed on for all intent and purpose docker is installed on my windows machine and i'm going to be working with",
    "start": "279759",
    "end": "285919"
  },
  {
    "text": "linux how that works um i can chat to you afterwards if you want to understand some of the nitty gritty",
    "start": "285919",
    "end": "291440"
  },
  {
    "text": "internals but i won't dive too much into that so",
    "start": "291440",
    "end": "296479"
  },
  {
    "text": "we tend to interact with docker from a command line uh this is a standard command that you might be running with docker uh so it's made up of the docker",
    "start": "296479",
    "end": "303759"
  },
  {
    "text": "cli tool that we work with um we then provide that with a command that we're gonna execute against docker in",
    "start": "303759",
    "end": "309600"
  },
  {
    "text": "this case it's a run command we have some options that we passed to run a it flag and a dash dash rm and",
    "start": "309600",
    "end": "316639"
  },
  {
    "text": "i'll talk about what those do throughout the demos that we do in a moment",
    "start": "316639",
    "end": "321840"
  },
  {
    "text": "we then have some arguments we pass to the command this is actually those two arguments here the first is the image that we're",
    "start": "321840",
    "end": "328479"
  },
  {
    "text": "going to be using so that's ubuntu and then some kind of an execution executable to",
    "start": "328479",
    "end": "333759"
  },
  {
    "text": "run with inside of the ubuntu container and this case it's going to be slash bin bash",
    "start": "333759",
    "end": "340479"
  },
  {
    "text": "okay so that's enough time spent in powerpoint we're going to spend pretty much the rest of the talk at a command line as i go through live demos and",
    "start": "341039",
    "end": "348080"
  },
  {
    "text": "we're going to cross our fingers and hope that none of my live demos fail um i gave this talk a couple of days ago",
    "start": "348080",
    "end": "354160"
  },
  {
    "text": "and i got through most of them without any failures but you know today is a new day so let's see how how kind the",
    "start": "354160",
    "end": "360560"
  },
  {
    "text": "demogods are going to be to meet today i'm going to start with the canonical hello world example of docker",
    "start": "360560",
    "end": "367199"
  },
  {
    "text": "so i've got that command uh whoops i probably should close my slide so that everyone actually can see my command",
    "start": "367199",
    "end": "373039"
  },
  {
    "text": "line okay okay so i've got a command here",
    "start": "373039",
    "end": "379520"
  },
  {
    "text": "that i'm going to execute pretty much similar to the one that we had with inside of the powerpoint slides just a moment ago using docker run i'm passing",
    "start": "379520",
    "end": "386560"
  },
  {
    "text": "in a flag dash i t this flag or this argument i'm passing to run is to say that i want an",
    "start": "386560",
    "end": "392400"
  },
  {
    "text": "interactive docker container started so this allows me to then",
    "start": "392400",
    "end": "397840"
  },
  {
    "text": "connect to std in essentially and i can type and interact with that container as",
    "start": "397840",
    "end": "403280"
  },
  {
    "text": "it's been run then we're starting with the ubuntu image and executing the command bin bash",
    "start": "403280",
    "end": "409360"
  },
  {
    "text": "so let's run that so here we go i've been dropped into what looks like a unix prompt",
    "start": "409360",
    "end": "416319"
  },
  {
    "text": "i can run unix commands such as ls ac here i've got a file system very unix looking file",
    "start": "416319",
    "end": "423599"
  },
  {
    "text": "system and now i'm because now i am running inside of an ubuntu image i can",
    "start": "423599",
    "end": "428960"
  },
  {
    "text": "make directory uh call it foo so i can then create something that",
    "start": "428960",
    "end": "434479"
  },
  {
    "text": "sits at the root of this file system a folder called foo so on and so forth so my container is up and running i can",
    "start": "434479",
    "end": "441280"
  },
  {
    "text": "you know do a whole bunch of stuff with that and i can see what it uh play around with a linux machine running",
    "start": "441280",
    "end": "448000"
  },
  {
    "text": "on my windows box i can also run a command and i'll just",
    "start": "448000",
    "end": "453599"
  },
  {
    "text": "edit it from another another shell called ps which this lists the containers that are",
    "start": "453599",
    "end": "458800"
  },
  {
    "text": "running on my machine so you can see i've got a container here it's got a container id of four nine fe zero zero a",
    "start": "458800",
    "end": "465680"
  },
  {
    "text": "and so on and so forth uh it started from an ubuntu image it had a command it was created 47 seconds ago it was still",
    "start": "465680",
    "end": "471759"
  },
  {
    "text": "up 45 seconds ago it's got a name of loving men's",
    "start": "471759",
    "end": "477440"
  },
  {
    "text": "obviously i've got this zoomed a little bit so it wouldn't normally wrap but for the sake of readability particularly people are back i've",
    "start": "477440",
    "end": "483520"
  },
  {
    "text": "increased the font size of touch but it would normally format it a little bit better so there's my running container i can see",
    "start": "483520",
    "end": "489599"
  },
  {
    "text": "it and find some basic information about it i can exit that container drop back to",
    "start": "489599",
    "end": "494960"
  },
  {
    "text": "my command line if i come over here and docker ps again that container's been stopped it's not running anymore because i sent i i",
    "start": "494960",
    "end": "502639"
  },
  {
    "text": "exited the application that the container was running so it's shut down because it's running just a single process until it's until that process is",
    "start": "502639",
    "end": "509039"
  },
  {
    "text": "told to not run any longer i can still see that container by running docker ps dash a",
    "start": "509039",
    "end": "516399"
  },
  {
    "text": "or expand that to double dash all so this lists all containers uh regardless of their status on the machine ps just",
    "start": "516399",
    "end": "523120"
  },
  {
    "text": "lists the the current uh running images running containers whereas this is listing all containers started and",
    "start": "523120",
    "end": "528560"
  },
  {
    "text": "stopped so you can see here i have one it was exited 19 seconds ago now i could say docker and if i wanted",
    "start": "528560",
    "end": "537040"
  },
  {
    "text": "to do something with that container let's say i want to restart it i can do docker start",
    "start": "537040",
    "end": "542240"
  },
  {
    "text": "and then i need to provide it some kind of unique identifier for that container that i want to start in this case i want to",
    "start": "542240",
    "end": "548080"
  },
  {
    "text": "start container id 4 9 f etc etc but because i only have to provide enough",
    "start": "548080",
    "end": "554160"
  },
  {
    "text": "uniqueness that docker can work out the rest for me i can give it just four i",
    "start": "554160",
    "end": "559279"
  },
  {
    "text": "can give it four nine i tend to just use two characters because that tends to be as much uniqueness as you necessarily",
    "start": "559279",
    "end": "564959"
  },
  {
    "text": "need i could also use the name loving benz if i wanted to as well so i can start that docker ps and we can see that",
    "start": "564959",
    "end": "571519"
  },
  {
    "text": "was up one second ago i can then attach to it",
    "start": "571519",
    "end": "576720"
  },
  {
    "text": "and i'm back on there ls and we see that file system that we saw before you can see that the food",
    "start": "576720",
    "end": "582320"
  },
  {
    "text": "folder is still there and all that kind of stuff uh if i was to do docker stop",
    "start": "582320",
    "end": "588959"
  },
  {
    "text": "49 i can then send a stop command to that running container",
    "start": "588959",
    "end": "595040"
  },
  {
    "text": "which can be coming back over to this terminal so that's containers exited i'm back at my powershell prompt instead of",
    "start": "595040",
    "end": "600240"
  },
  {
    "text": "being my my bash prompt that i was before so uh what that essentially has done is it",
    "start": "600240",
    "end": "605920"
  },
  {
    "text": "sends um it sent a an exit signal across to the running container which is then told the process that's running in that",
    "start": "605920",
    "end": "611120"
  },
  {
    "text": "container to exit and it will gracefully shut down uh the final thing i'm just going to",
    "start": "611120",
    "end": "616160"
  },
  {
    "text": "remove that container so docker rm let's do some cleanup remove 49. now if",
    "start": "616160",
    "end": "621680"
  },
  {
    "text": "i do docker ps i have nothing left in my container list either running or stopped",
    "start": "621680",
    "end": "627839"
  },
  {
    "text": "okay so that's like i said a kinetic canonical hello world example",
    "start": "627839",
    "end": "632880"
  },
  {
    "text": "let's go to something else all right so",
    "start": "632880",
    "end": "638639"
  },
  {
    "text": "this is where we start seeing the difference between an image and a container and because an image is our starting point i can make multiple",
    "start": "639200",
    "end": "645200"
  },
  {
    "text": "containers based off of the same image and that's what i'm doing here i'm creating three different ubuntu containers but they're all based",
    "start": "645200",
    "end": "652079"
  },
  {
    "text": "off of the same ubuntu image i've added a couple additional flags dash d which starts this container in a",
    "start": "652079",
    "end": "658880"
  },
  {
    "text": "detached mode so while it is still a dash i t so it's still interactive it's detached which means that my",
    "start": "658880",
    "end": "666160"
  },
  {
    "text": "terminal is not immediately connected to it i have to use docker attached to then attach that that container later on",
    "start": "666160",
    "end": "672480"
  },
  {
    "text": "passing dash dash rm flag which basically means that when this container stops remove yourself",
    "start": "672480",
    "end": "677760"
  },
  {
    "text": "this is really useful when you're doing prototyping or demos like this and stuff like that i i want to start off a bunch of containers but i don't want them",
    "start": "677760",
    "end": "683279"
  },
  {
    "text": "sitting around like that space on disk that i don't need particularly if i'm just testing something out or prototyping typing",
    "start": "683279",
    "end": "689760"
  },
  {
    "text": "something i just want it to to go away when i'm done i'm also doing dash name which is giving this a i'm specifying",
    "start": "689760",
    "end": "695279"
  },
  {
    "text": "the name so instead of getting a uniquely generated name like loving underscore benz i'm saying that these",
    "start": "695279",
    "end": "700560"
  },
  {
    "text": "are named ubuntu one through three so let's run that",
    "start": "700560",
    "end": "706000"
  },
  {
    "text": "so starting up the multiple containers and you'll see that it's output the ids of each of those containers that have been run",
    "start": "706000",
    "end": "712320"
  },
  {
    "text": "and now i can go over and attach them so i'm just going to open up a couple more powershell terminals",
    "start": "712320",
    "end": "720560"
  },
  {
    "text": "just resize them with touch okay so if we do docker attach ubuntu 1",
    "start": "721440",
    "end": "728000"
  },
  {
    "text": "docker attach one two two and then",
    "start": "728000",
    "end": "733760"
  },
  {
    "text": "i bet you can guess what i'm attaching to here if i can type correctly okay whoops",
    "start": "733760",
    "end": "740639"
  },
  {
    "text": "it entered properly on all of them okay cool now i'm inside of all three of these uh let's take number one and just make",
    "start": "740639",
    "end": "747600"
  },
  {
    "text": "directory of through at the root be ls on that one and then say go to number two",
    "start": "747600",
    "end": "754320"
  },
  {
    "text": "well they they started with the same looking file system they because they're all isolated they don't know about each other they",
    "start": "754320",
    "end": "760079"
  },
  {
    "text": "can't talk to each other um they don't share a file system anything i do on the file system of one container",
    "start": "760079",
    "end": "766560"
  },
  {
    "text": "is not available to the file system of another container so i've obviously added a folder to one but",
    "start": "766560",
    "end": "771839"
  },
  {
    "text": "it's not available anywhere else so i i have that isolation of process so this batch process is isolated per container",
    "start": "771839",
    "end": "780240"
  },
  {
    "text": "if i was to say docker stop ubuntu two we'll stop that one uh my middle",
    "start": "780240",
    "end": "788320"
  },
  {
    "text": "powershell terminal has dropped back to just the powershell prompt and if we do uh process list all",
    "start": "788320",
    "end": "794240"
  },
  {
    "text": "uh you'll see that i only have ubuntu one and three running because the uh because it had the rm flag it cleaned",
    "start": "794240",
    "end": "800480"
  },
  {
    "text": "itself up when it stopped cool and let's just exit the others i don't need them open for",
    "start": "800480",
    "end": "805839"
  },
  {
    "text": "um any longer we've killed everything that we needed all right so let's just clean everything up",
    "start": "805839",
    "end": "811279"
  },
  {
    "text": "a little bit until focus comes in and let's go to our next demo",
    "start": "811279",
    "end": "818000"
  },
  {
    "text": "all right so i said that the file systems are isolated so i can't i don't know what happens in ubuntu one in ubuntu i don't",
    "start": "818160",
    "end": "825199"
  },
  {
    "text": "have any way to interact between them but what if i did want to have something that's shared between them",
    "start": "825199",
    "end": "830639"
  },
  {
    "text": "these are transients so far that if i kill them i remove them i don't have any of the files that was created within",
    "start": "830639",
    "end": "836000"
  },
  {
    "text": "them i've got no way to get those files back out and this is where i want to introduce the concept of docker volumes you see a",
    "start": "836000",
    "end": "841920"
  },
  {
    "text": "new argument that i've included here dash v dash v is short for volume and what that",
    "start": "841920",
    "end": "847839"
  },
  {
    "text": "does is it creates a mount point between the host that the container has been run",
    "start": "847839",
    "end": "853120"
  },
  {
    "text": "from and the container itself so it takes an argument that's um got two parts to it",
    "start": "853120",
    "end": "859040"
  },
  {
    "text": "one which is the directory of the local container the directory on the host that you want to mount",
    "start": "859040",
    "end": "865040"
  },
  {
    "text": "and then what is the folder on the container that you want to mount that to so because i'm running this in a",
    "start": "865040",
    "end": "870959"
  },
  {
    "text": "batch file i'm mounting the current working directory percent cd percent and i'm going to mount that to a directory",
    "start": "870959",
    "end": "876560"
  },
  {
    "text": "called slash files now this one it also introduces something that i tend",
    "start": "876560",
    "end": "882720"
  },
  {
    "text": "to use docker for and that is like executing a single process that i",
    "start": "882720",
    "end": "887839"
  },
  {
    "text": "maybe don't want to have on my actual machine i treat my laptop as a very transient",
    "start": "887839",
    "end": "892959"
  },
  {
    "text": "device if it dies i'll take it to the microsoft store and go it's dead and hopefully they'll give me a new one",
    "start": "892959",
    "end": "899519"
  },
  {
    "text": "it doesn't necessarily work that way but that's at least the hope so i don't tend to install a whole lot of software on my machine",
    "start": "899519",
    "end": "906079"
  },
  {
    "text": "i'll have some you know core tools that i use day-to-day but you know i had a scenario the other month where",
    "start": "906079",
    "end": "913360"
  },
  {
    "text": "uh i was doing a technical interview at retify and someone had sent me a raf file of",
    "start": "913360",
    "end": "919600"
  },
  {
    "text": "a coding exercise that we get candidates to do it's a a raw file",
    "start": "919600",
    "end": "924720"
  },
  {
    "text": "i was like i checked my watch it was still 2017 i hadn't gone back to 2005 and had not",
    "start": "924720",
    "end": "930320"
  },
  {
    "text": "paid for a winrar license still uh i was like as an archiving format i don't remember the last time i like used",
    "start": "930320",
    "end": "936320"
  },
  {
    "text": "rar in the wild i had a similar instance with 7-zip so like that one was even more obscure",
    "start": "936320",
    "end": "941360"
  },
  {
    "text": "so i don't have anything on my machine that can un-rather well okay so what's what would someone",
    "start": "941360",
    "end": "946399"
  },
  {
    "text": "normally do they'd go and download 7-zip but not me i i'm going to use this once",
    "start": "946399",
    "end": "951440"
  },
  {
    "text": "so i'm going to find a docker image that does it i don't actually like i don't need 7-zip long-term i just i want to be",
    "start": "951440",
    "end": "958560"
  },
  {
    "text": "able to run a process terminate and it's gone away and i don't need it anymore so i found a docker image out there",
    "start": "958560",
    "end": "965839"
  },
  {
    "text": "max c and something something slash unra so this usually uses the the unix",
    "start": "965839",
    "end": "971199"
  },
  {
    "text": "unrar command and amount of volume of my machine",
    "start": "971199",
    "end": "976480"
  },
  {
    "text": "and then i tell it to unrar that particular file so let's just run that uh so this is not",
    "start": "976480",
    "end": "983199"
  },
  {
    "text": "the code that the candidate send me i was not going to show that uh from a privacy standpoint i did not want to",
    "start": "983199",
    "end": "989120"
  },
  {
    "text": "share that uh ndc this is something i found in my inbox from there's a raw file or something",
    "start": "989120",
    "end": "995600"
  },
  {
    "text": "from codeplex from 2010 i think so it's some really old code um",
    "start": "995600",
    "end": "1002720"
  },
  {
    "text": "okay cool uh oh hang on i need to need to delete it from when i ran the",
    "start": "1002720",
    "end": "1008079"
  },
  {
    "text": "demo earlier today and just made sure everything still worked okay so let's just try again",
    "start": "1008079",
    "end": "1015600"
  },
  {
    "text": "so here we go it's unraring a whole bunch of net code dropping that to disk and then",
    "start": "1017600",
    "end": "1025678"
  },
  {
    "text": "i have here a trunk folder which is then the contents of that raw file and you'll",
    "start": "1025679",
    "end": "1031520"
  },
  {
    "text": "have to obviously trust me that that's the contents of that raw file but you can see the output window um did",
    "start": "1031520",
    "end": "1036839"
  },
  {
    "text": "that there we go that's how you can use docker for just like a single run process you know something you just want",
    "start": "1036839",
    "end": "1041918"
  },
  {
    "text": "to prototype with or something you want to play around with you don't want to have to go through the whole effort of installing three versions of java",
    "start": "1041919",
    "end": "1047839"
  },
  {
    "text": "because you want to test across three different java runtimes you can just pull down a docking container of each of the different versions and test an",
    "start": "1047839",
    "end": "1053280"
  },
  {
    "text": "application against those so speaking of java",
    "start": "1053280",
    "end": "1058720"
  },
  {
    "text": "let's go on to our next demo",
    "start": "1058720",
    "end": "1062320"
  },
  {
    "text": "so this is not java this is node um there's that many versions of node and",
    "start": "1064720",
    "end": "1071440"
  },
  {
    "text": "every other week there's either a preview build or there's a new long-term service build that's out or something",
    "start": "1071440",
    "end": "1077120"
  },
  {
    "text": "like that so if you're building something on node and maybe you're building like a redistributable package and something",
    "start": "1077120",
    "end": "1083520"
  },
  {
    "text": "you're publishing in open source how do you effectively make sure that that works across quite a large variety of",
    "start": "1083520",
    "end": "1088880"
  },
  {
    "text": "node versions well the easiest way is pull down a docker image that has of all the",
    "start": "1088880",
    "end": "1093919"
  },
  {
    "text": "different versions that you want to test with make a container from that run your test inside of it see if it",
    "start": "1093919",
    "end": "1099200"
  },
  {
    "text": "passes there we go rather than you know having to install something like nvm and manage multiple local",
    "start": "1099200",
    "end": "1105280"
  },
  {
    "text": "installs of node and stuff like that you quite easily use the docker image for that so",
    "start": "1105280",
    "end": "1111600"
  },
  {
    "text": "we run this starts up and we have console.log hello in dc",
    "start": "1111600",
    "end": "1118640"
  },
  {
    "text": "so i'm inside of the node.js rebel because that's where i've been dropped by running this um this command you'll",
    "start": "1118640",
    "end": "1124320"
  },
  {
    "text": "notice uh that i didn't have a argument past the node colon",
    "start": "1124320",
    "end": "1129919"
  },
  {
    "text": "version number because i just want to execute whatever the default command that that image would run when a",
    "start": "1129919",
    "end": "1135440"
  },
  {
    "text": "container is created from that in this case it's just going to execute no dot exe well sorry it's not going to execute node. it actually is going to just",
    "start": "1135440",
    "end": "1141360"
  },
  {
    "text": "execute node it's no exits unix so i end up inside of the node repl so i",
    "start": "1141360",
    "end": "1146640"
  },
  {
    "text": "can do like const fs and then pull in like node modules",
    "start": "1146640",
    "end": "1152320"
  },
  {
    "text": "uh if i hey there's another demo value excellent um and then do like fs read directory",
    "start": "1152320",
    "end": "1159840"
  },
  {
    "text": "of slash and then errors paths",
    "start": "1159840",
    "end": "1166080"
  },
  {
    "text": "paths so if we just log all of that out",
    "start": "1167280",
    "end": "1171760"
  },
  {
    "text": "we realize that i've fat fingered something else and",
    "start": "1172320",
    "end": "1177360"
  },
  {
    "text": "yeah it's paths i call the variable path and then i'd call paths when i try and output it",
    "start": "1177679",
    "end": "1182799"
  },
  {
    "text": "so but there we go so that's like inside of then a document container so i can use node to inspect that and you see",
    "start": "1182799",
    "end": "1188640"
  },
  {
    "text": "that it's still a unix file system at the at the end of the day i can see all the same stuff there so i can traverse",
    "start": "1188640",
    "end": "1194000"
  },
  {
    "text": "it um that's good for interacting with a particular single process and this is obviously a single",
    "start": "1194000",
    "end": "1200000"
  },
  {
    "text": "process that's running with inside of my container i don't have kind of the ability to do anything else with it cool",
    "start": "1200000",
    "end": "1207039"
  },
  {
    "text": "so let's jump out of that clear it off and we'll go on to number five",
    "start": "1207039",
    "end": "1214640"
  },
  {
    "text": "okay so this time i want to do something i i want to actually run an application with",
    "start": "1214720",
    "end": "1220559"
  },
  {
    "text": "inside of node with inside of a container so i've got a application here",
    "start": "1220559",
    "end": "1226640"
  },
  {
    "text": "um i'm not going to go into the details about how this node app works i don't want this to become a node talk i i",
    "start": "1226640",
    "end": "1231760"
  },
  {
    "text": "appreciate that this is probably a fairly complex node application so i don't want to i don't want to dwell on how node works or anything like that but",
    "start": "1231760",
    "end": "1239200"
  },
  {
    "text": "the crux of it is it's going to be a web server so just just trust me that that's a web server in node",
    "start": "1239200",
    "end": "1245050"
  },
  {
    "text": "[Laughter] so i'm going to start up a server i'm going to bind that to port 3000 uh and",
    "start": "1245050",
    "end": "1250880"
  },
  {
    "text": "then i want to be able to obviously get a response from that okay so",
    "start": "1250880",
    "end": "1256000"
  },
  {
    "text": "we'll run oh sorry i'll just go back uh so we're using volume mounting again you'll see",
    "start": "1256000",
    "end": "1262720"
  },
  {
    "text": "we're mounting the source into a src directory i'm also then running another",
    "start": "1262720",
    "end": "1267760"
  },
  {
    "text": "command another argument dash w which sets the working directory for the process that's being executed to",
    "start": "1267760",
    "end": "1274799"
  },
  {
    "text": "slash src so the where i've mounted to uh they've got the image then and then",
    "start": "1274799",
    "end": "1279840"
  },
  {
    "text": "i'm saying you're going to execute instead of just dropping you at the node repl i want to execute a particular",
    "start": "1279840",
    "end": "1285280"
  },
  {
    "text": "node a particular file using the node.js application so i'm going to execute node",
    "start": "1285280",
    "end": "1290400"
  },
  {
    "text": "and app.js now if i didn't so it knows where that file is because of the slash",
    "start": "1290400",
    "end": "1295679"
  },
  {
    "text": "w flag if i didn't do that i could do like slash src app.js and it would",
    "start": "1295679",
    "end": "1301039"
  },
  {
    "text": "do exactly the same thing okay cool so we'll start that up run that into touch mode so the",
    "start": "1301039",
    "end": "1307360"
  },
  {
    "text": "server is up and running um and i can docker ps",
    "start": "1307360",
    "end": "1314320"
  },
  {
    "text": "see that yeah cool there we go it's up and running all right so let's go curl localhost",
    "start": "1314320",
    "end": "1321360"
  },
  {
    "text": "localhost 3000.",
    "start": "1321360",
    "end": "1326080"
  },
  {
    "text": "we've got an error it hasn't been able to resolve or it couldn't connect to the server well but hang on a sec i said",
    "start": "1331280",
    "end": "1337520"
  },
  {
    "text": "like i didn't fat finger that right i said it was port 3000 if we go back to app.js",
    "start": "1337520",
    "end": "1343840"
  },
  {
    "text": "yep supposed to be listed on port 3000 okay um maybe there's something in the logs",
    "start": "1344320",
    "end": "1349919"
  },
  {
    "text": "so docker logs node server's up and running if i",
    "start": "1349919",
    "end": "1355840"
  },
  {
    "text": "tell it to follow the logs well it's like the process is definitely running because they're still trying to write logs out",
    "start": "1355840",
    "end": "1361919"
  },
  {
    "text": "okay well uh let's just go curl again",
    "start": "1361919",
    "end": "1367679"
  },
  {
    "text": "local host 3000",
    "start": "1367679",
    "end": "1372120"
  },
  {
    "text": "well it didn't crash the process like there's nothing in my logs that says it's crashed",
    "start": "1374080",
    "end": "1379840"
  },
  {
    "text": "well what's gone wrong i know what's gone wrong because i wrote these demos right",
    "start": "1379840",
    "end": "1385360"
  },
  {
    "text": "so what's happened is the process is running it's listening on that port but i haven't told it",
    "start": "1385360",
    "end": "1392240"
  },
  {
    "text": "to actually map inbound connections to that port so let's have a look at the",
    "start": "1392240",
    "end": "1398400"
  },
  {
    "text": "information about this container so i can use node inspect and then provide it with an id3 container so i've",
    "start": "1398400",
    "end": "1405440"
  },
  {
    "text": "inspected the node container that we've got running and there is a network section here",
    "start": "1405440",
    "end": "1412240"
  },
  {
    "text": "and here in lies the problem the container itself has not got any",
    "start": "1412400",
    "end": "1420000"
  },
  {
    "text": "ports mapped to it the container itself is running the container the application inside of the",
    "start": "1420000",
    "end": "1425360"
  },
  {
    "text": "container is listening on that port but the container doesn't have any ports bound to its host",
    "start": "1425360",
    "end": "1432000"
  },
  {
    "text": "okay cool so we'll just uh stop the node container we'll come back over",
    "start": "1432000",
    "end": "1437679"
  },
  {
    "text": "here that'll exit in a moment so this so this is where um stop is",
    "start": "1437679",
    "end": "1444159"
  },
  {
    "text": "useful because it's sending a because it's sending the shutdown command to that process um",
    "start": "1444159",
    "end": "1450000"
  },
  {
    "text": "it's not doing like a hard stop it's not just you know uh doing like a a kill dash uh dash f or anything on that it's",
    "start": "1450000",
    "end": "1456159"
  },
  {
    "text": "sending the proper sig term processes uh commands across to the process so it will shut down gracefully so if you do",
    "start": "1456159",
    "end": "1461360"
  },
  {
    "text": "have an application running it will then do all the proper cleanup you know if it's got to release database connections and stuff",
    "start": "1461360",
    "end": "1467679"
  },
  {
    "text": "like that it can do all that clean up nicely before it shuts down it's not just you've pulled the power from me",
    "start": "1467679",
    "end": "1473679"
  },
  {
    "text": "okay so let's go to step six okay",
    "start": "1473679",
    "end": "1480000"
  },
  {
    "text": "and we'll come back to our run and now",
    "start": "1480000",
    "end": "1486400"
  },
  {
    "text": "we have a dash p flag so the dash p is that we're going to do port binding so dash p is port uh you",
    "start": "1486400",
    "end": "1492559"
  },
  {
    "text": "can have as many dash p's as you want with inside of it and you can so you can bind multiple ports to a container so",
    "start": "1492559",
    "end": "1497840"
  },
  {
    "text": "the process can list on listen on multiple ports this could be useful if you're running something like uh rabbitmq is a good example of this it",
    "start": "1497840",
    "end": "1504480"
  },
  {
    "text": "has the management port and it has the the cue listening port so you you could bind two ports on that",
    "start": "1504480",
    "end": "1511360"
  },
  {
    "text": "and the the port bindings kind of similar to the way that we do volume mounting is",
    "start": "1511360",
    "end": "1516880"
  },
  {
    "text": "something on the host column something on the container so in this case i can map whatever port i want on",
    "start": "1516880",
    "end": "1523440"
  },
  {
    "text": "my host to port 3000 on the container and to illustrate this on map port 8080",
    "start": "1523440",
    "end": "1528640"
  },
  {
    "text": "on my host through to port 3000 on the container so we'll run that again",
    "start": "1528640",
    "end": "1535279"
  },
  {
    "text": "and we can pop that up it's clear and if we curl",
    "start": "1535279",
    "end": "1543039"
  },
  {
    "text": "local localhost hey you think i'd be better at writing localhost by now like how many years",
    "start": "1543039",
    "end": "1549520"
  },
  {
    "text": "i've been writing that out so if i now call on 8080 excellent there we go",
    "start": "1549520",
    "end": "1554559"
  },
  {
    "text": "we've got our hello world back as we expected uh 3000 will still send back that error that we",
    "start": "1554559",
    "end": "1560080"
  },
  {
    "text": "again that we would expect because we're not binding anything to port 3000 on my",
    "start": "1560080",
    "end": "1565279"
  },
  {
    "text": "host it's not being able to do any any redirections across to a container so if we go back and say docker inspect node",
    "start": "1565279",
    "end": "1573039"
  },
  {
    "text": "so just go back and have a look at what our network settings now look like you see that ports the array of ports has been fleshed out",
    "start": "1573039",
    "end": "1579520"
  },
  {
    "text": "a bit we have port 3000 on tcp so you can map both udp and tcp ports into a",
    "start": "1579520",
    "end": "1585120"
  },
  {
    "text": "docker container obviously i'm only doing tcp in this case uh what i p on the host so if you've got",
    "start": "1585120",
    "end": "1590880"
  },
  {
    "text": "like multiple um nics within side of the host that you're running docker on you",
    "start": "1590880",
    "end": "1596000"
  },
  {
    "text": "could map incoming requests on one particular nick across to a particular container um if so desired uh so that's",
    "start": "1596000",
    "end": "1604000"
  },
  {
    "text": "what the host ip is all about and then the host port is what port on my machine so yeah like i said you can map whatever",
    "start": "1604000",
    "end": "1609600"
  },
  {
    "text": "port you want locally across to whatever port you want on your server so you can have everything listening on port 80",
    "start": "1609600",
    "end": "1615520"
  },
  {
    "text": "with inside of docker containers but on local dev or in",
    "start": "1615520",
    "end": "1621760"
  },
  {
    "text": "inside of your production system before your reverse proxy they're all running on like random ports and stuff like that",
    "start": "1621760",
    "end": "1628559"
  },
  {
    "text": "now when you do port binding you don't have to do the uh the host port colon syntax you can just do i want to bind",
    "start": "1628559",
    "end": "1635440"
  },
  {
    "text": "like port 3000. what i'll do is it'll randomly choose a port on your machine and then you're gonna have to go into docker inspect and find",
    "start": "1635440",
    "end": "1641919"
  },
  {
    "text": "out what that port is and stuff like that just a bit annoying also we can do docker ps",
    "start": "1641919",
    "end": "1647279"
  },
  {
    "text": "and we'll see the port information uh across on the far right hand side of that left hand side of that",
    "start": "1647279",
    "end": "1653360"
  },
  {
    "text": "right wait it's backwards to me anyway you get my point and we can also see there all the",
    "start": "1653360",
    "end": "1659120"
  },
  {
    "text": "different ports that we've got bound okay so let's just stop node again and we're going to jump over",
    "start": "1659120",
    "end": "1665600"
  },
  {
    "text": "to our next demo",
    "start": "1665600",
    "end": "1669158"
  },
  {
    "text": "all right so our command that we're getting was like it was starting to get a little bit big",
    "start": "1671200",
    "end": "1676960"
  },
  {
    "text": "to run our node application we had to volume out we had to specify ports we set working directories um",
    "start": "1676960",
    "end": "1683679"
  },
  {
    "text": "like a whole bunch of stuff like we're having to set and if i want to get a colleague on my team to just hey check",
    "start": "1683679",
    "end": "1689039"
  },
  {
    "text": "out this like little note app that i've written uh it's just it's really useful just parsing out you're",
    "start": "1689039",
    "end": "1694799"
  },
  {
    "text": "downloading all your payslips from your um when you're transitioning between payroll systems which is something we're",
    "start": "1694799",
    "end": "1700320"
  },
  {
    "text": "we're actually doing at ratify at the moment uh having to send round this like massive command line argument set that you got",
    "start": "1700320",
    "end": "1705919"
  },
  {
    "text": "to do someone is going to fat finger that at some point and it's like and then i get the call and say hey uh your command doesn't work it's like oh okay",
    "start": "1705919",
    "end": "1712799"
  },
  {
    "text": "so how do we make that a bit more reproducible well we can start building our own images to do that",
    "start": "1712799",
    "end": "1719039"
  },
  {
    "text": "and this is where i want to introduce another file called dockerfile uh so a dockerfile is",
    "start": "1719039",
    "end": "1725679"
  },
  {
    "text": "an instruction set it's a dsl of how to create an image uh in docker",
    "start": "1725679",
    "end": "1731360"
  },
  {
    "text": "and it's there we then use that to basically execute a bunch of commands that we can then create an image that we can then",
    "start": "1731360",
    "end": "1737279"
  },
  {
    "text": "run as a container later on so we always start with a from command",
    "start": "1737279",
    "end": "1742720"
  },
  {
    "text": "inside of our docker file because our docker image that we're creating has to",
    "start": "1742720",
    "end": "1748000"
  },
  {
    "text": "start from something else and think about the title from scratch that's what the",
    "start": "1748000",
    "end": "1754000"
  },
  {
    "text": "that was the joke yeah um so in this one this image i'm doing uh from node 774",
    "start": "1754000",
    "end": "1763120"
  },
  {
    "text": "particular build of that i'm saying that this image exposes port 3000 so that's just telling people that are going to be",
    "start": "1763120",
    "end": "1768960"
  },
  {
    "text": "starting this as a container later on that they know that they're going to need to do some port mapping should they so desire they cannot do",
    "start": "1768960",
    "end": "1775279"
  },
  {
    "text": "port mapping it's just not going to be a very useful application i'm going to run a command on that image which is going to make a directory",
    "start": "1775279",
    "end": "1781279"
  },
  {
    "text": "called src and instead of doing volume mounting so the person doesn't have to volume out",
    "start": "1781279",
    "end": "1787200"
  },
  {
    "text": "that on their machine and i don't have to ship them the app.js file i'm actually going to execute the copy",
    "start": "1787200",
    "end": "1792320"
  },
  {
    "text": "command which will then copy the file from my machine into the image",
    "start": "1792320",
    "end": "1798159"
  },
  {
    "text": "it's copying it into the src folder and set the working directory as src and",
    "start": "1798159",
    "end": "1803279"
  },
  {
    "text": "then cmd excuse me is the command that the container will execute when it starts up",
    "start": "1803279",
    "end": "1810000"
  },
  {
    "text": "so it's going to execute node app.js now this time instead of just like i",
    "start": "1810000",
    "end": "1815520"
  },
  {
    "text": "can't just use docker run because i'm trying to create an image here right and docker runs all about running containers from an image so to do that first i need",
    "start": "1815520",
    "end": "1823120"
  },
  {
    "text": "to build an image from my docker file so this is where we use the docker build command docker build dash t so i'm going",
    "start": "1823120",
    "end": "1829520"
  },
  {
    "text": "to tag that image with something that i can understand rather than just like dealing with the massive image id that i",
    "start": "1829520",
    "end": "1835039"
  },
  {
    "text": "would normally get that i would get generated i'm going to tag this as my node.js app i have to tell it where to find the docker file so i'm just saying",
    "start": "1835039",
    "end": "1841600"
  },
  {
    "text": "dot current directory uh if i so by convention it will look for a file named docker file you can change that",
    "start": "1841600",
    "end": "1849120"
  },
  {
    "text": "file name to whatever you want but then you have to specify another argument that is the name of the docker file with",
    "start": "1849120",
    "end": "1854240"
  },
  {
    "text": "inside of a working with inside of a particular directory by convention docker file is just a is what people",
    "start": "1854240",
    "end": "1859679"
  },
  {
    "text": "would be using so on line five we build an image and then on line seven we're going to do docker run",
    "start": "1859679",
    "end": "1865440"
  },
  {
    "text": "immediately remove on shutdown we do our port binding detach and then the node.js application",
    "start": "1865440",
    "end": "1872480"
  },
  {
    "text": "so we're going to start that image as a container i'm not going to send any commands after that because i would just",
    "start": "1872480",
    "end": "1877919"
  },
  {
    "text": "want it to execute its default command so we run that",
    "start": "1877919",
    "end": "1883120"
  },
  {
    "text": "so the first thing uh it's doing the build and you'll see that it's going through each step that i've got in that docker file",
    "start": "1883120",
    "end": "1889200"
  },
  {
    "text": "from a particular base container it'll pull that down if i don't already have it it will execute",
    "start": "1889200",
    "end": "1894640"
  },
  {
    "text": "expose so that that's put in there so on and so forth and now i have a built image at the end of the day which i can",
    "start": "1894640",
    "end": "1900640"
  },
  {
    "text": "then start as a container which i have done and that's h6e etc so i can go back and execute my",
    "start": "1900640",
    "end": "1907919"
  },
  {
    "text": "curl on local host",
    "start": "1907919",
    "end": "1913120"
  },
  {
    "text": "eddy there we go now i can do docker images",
    "start": "1913120",
    "end": "1918320"
  },
  {
    "text": "and i can list out all the images that i've got on my machine so you'll see there on the top i've got a new one called node.js app it was created 33",
    "start": "1918320",
    "end": "1925440"
  },
  {
    "text": "seconds ago it has a size of 59 megabytes because that's basically the side of the size of a node.js image",
    "start": "1925440",
    "end": "1933200"
  },
  {
    "text": "that i'm using here and i've added a couple of k over the top of that or maybe 1k over the top of that",
    "start": "1933200",
    "end": "1940080"
  },
  {
    "text": "and obviously i've got a whole bunch of other images already on my machine so now i can just do docker stop node",
    "start": "1940080",
    "end": "1946880"
  },
  {
    "text": "that will stop that container oh wait no i didn't give it a name there was eight",
    "start": "1946880",
    "end": "1952399"
  },
  {
    "text": "uh we'll stop that one shut it down and then i can remove that image if i don't want it on my machine",
    "start": "1952399",
    "end": "1958880"
  },
  {
    "text": "anymore a sec terminate process if we do docker",
    "start": "1958880",
    "end": "1964640"
  },
  {
    "text": "rmi so we used rm to remove a container rmi to remove an image",
    "start": "1964640",
    "end": "1970559"
  },
  {
    "text": "and this will be node.js app and we've deleted a whole bunch of um",
    "start": "1970559",
    "end": "1977760"
  },
  {
    "text": "stuff that was inside of uh on disk for me so i've freed up a bit of uh disk",
    "start": "1977760",
    "end": "1982880"
  },
  {
    "text": "space cool so that's how we can create something that we can ship as a reusable",
    "start": "1982880",
    "end": "1987919"
  },
  {
    "text": "and that's where you can start seeing how you would build applications and then you start sharing an application that's a containerized",
    "start": "1987919",
    "end": "1994240"
  },
  {
    "text": "architecture around and it starts from this docker file is where we really start with",
    "start": "1994240",
    "end": "1999440"
  },
  {
    "text": "all right so on to our next demo all right we still had a couple of",
    "start": "1999440",
    "end": "2005600"
  },
  {
    "text": "command line arguments we had to execute there though we still had to say that we you know we wanted to do some port bindings and so on and so forth",
    "start": "2005600",
    "end": "2011840"
  },
  {
    "text": "there's another way that we can start up a docker container and that is with docker",
    "start": "2011840",
    "end": "2017600"
  },
  {
    "text": "compose docker compose is really useful about how we can start describing an environment that we want to run using",
    "start": "2017600",
    "end": "2025039"
  },
  {
    "text": "using docker so this by convention uses a file called docker dash compose.yaml or dot yml uses the yaml",
    "start": "2025039",
    "end": "2032960"
  },
  {
    "text": "syntax to create that so i've got a very basic docker",
    "start": "2032960",
    "end": "2038159"
  },
  {
    "text": "compose file here it's got two components to it it's got services and it's got networks",
    "start": "2038159",
    "end": "2043760"
  },
  {
    "text": "services are the containers that you're going to start with inside of your dockerfile and then networks are",
    "start": "2043760",
    "end": "2050638"
  },
  {
    "text": "how we can do some isolation i'm not going to dive too much in networks right now because we're going to see networks a bit later on",
    "start": "2050639",
    "end": "2055919"
  },
  {
    "text": "so here we can pre-define a bunch of stuff though i can pre-define my port binding so i can say that port",
    "start": "2055919",
    "end": "2062560"
  },
  {
    "text": "8080 is going to bind onto port 3000 i can specify the when it's built it's",
    "start": "2062560",
    "end": "2068000"
  },
  {
    "text": "going to build and a particular docker file that's going to be built from and this if i had multiple applications i",
    "start": "2068000",
    "end": "2074240"
  },
  {
    "text": "could start writing out multiple services with inside of here now this time we're going to use a different command line tool docker dash",
    "start": "2074240",
    "end": "2080800"
  },
  {
    "text": "compose composes is essentially a separate product with inside of the docker family so we we have docker",
    "start": "2080800",
    "end": "2087358"
  },
  {
    "text": "compose instead of docker space compose it's not a command on the docker cli uh so on line five i'm using docking",
    "start": "2087359",
    "end": "2094398"
  },
  {
    "text": "pose uh specifying the file that i want to use as my compose file current working directory dot compose yaml",
    "start": "2094399",
    "end": "2100160"
  },
  {
    "text": "and i'm gonna say stand up that environment but in particular i want to stand up the node service with inside of that compose",
    "start": "2100160",
    "end": "2106880"
  },
  {
    "text": "file so i've had multiple services i could stand all of them up by just doing docker compose up",
    "start": "2106880",
    "end": "2112480"
  },
  {
    "text": "if i wanted to stand up one i'd do docker compose and then the specific service name which is what i'm doing here",
    "start": "2112480",
    "end": "2117839"
  },
  {
    "text": "uh line seven is uh once that process is exited i just wanna do a docker compose",
    "start": "2117839",
    "end": "2123200"
  },
  {
    "text": "clean up so docking compose rm and i'm just doing a force rm you know kill everything with fire so that's how you",
    "start": "2123200",
    "end": "2129599"
  },
  {
    "text": "would stand up and then clean up with using docker compose",
    "start": "2129599",
    "end": "2134640"
  },
  {
    "text": "oops so if we run now you'll see it's doing a few",
    "start": "2134640",
    "end": "2140000"
  },
  {
    "text": "different things it's creating it creates a network it's creating that image again because i",
    "start": "2140000",
    "end": "2145760"
  },
  {
    "text": "deleted that image in the last step um of the last demo so it's got to create that image from scratch",
    "start": "2145760",
    "end": "2152319"
  },
  {
    "text": "and then it's started that container from that image you see right at the bottom node underscore one which",
    "start": "2152800",
    "end": "2158400"
  },
  {
    "text": "is the name that's been assigned uh it's up and running and then uh we can do we do our curl but",
    "start": "2158400",
    "end": "2165040"
  },
  {
    "text": "i won't do that demo again um because we've seen it all run before uh but you can see yeah there we go uh you'll notice that the the name of both the",
    "start": "2165040",
    "end": "2171920"
  },
  {
    "text": "image and the running container uh have um a prefix on them and that's the",
    "start": "2171920",
    "end": "2177359"
  },
  {
    "text": "current working directory the so docker from scratch is my current folder so that's that's how it's done that you can use in the compose",
    "start": "2177359",
    "end": "2183440"
  },
  {
    "text": "file you can control the name and we'll see that shortly so just to exit",
    "start": "2183440",
    "end": "2189440"
  },
  {
    "text": "the node.js process it's going to shut down give it a second while that process is exiting",
    "start": "2189440",
    "end": "2196880"
  },
  {
    "text": "stop there we go oops there we go and then that's done all of it's clean up again",
    "start": "2197760",
    "end": "2204400"
  },
  {
    "text": "all right on to more demos",
    "start": "2204400",
    "end": "2211040"
  },
  {
    "text": "all right so like i said i tend not to install software on my machine",
    "start": "2211200",
    "end": "2216560"
  },
  {
    "text": "if i can help it as a net developer so it does a lot of",
    "start": "2216560",
    "end": "2222079"
  },
  {
    "text": "asp.net web dev there's one thing that you kind of can't",
    "start": "2222079",
    "end": "2227599"
  },
  {
    "text": "get away with not installing and it's sql server until docker",
    "start": "2227599",
    "end": "2233760"
  },
  {
    "text": "so i don't actually have sql server installed on my machine instead i use",
    "start": "2233760",
    "end": "2239040"
  },
  {
    "text": "sql server inside of a docker container and that's using the",
    "start": "2239040",
    "end": "2244160"
  },
  {
    "text": "linux implementation of microsoft sql server from from microsoft",
    "start": "2244160",
    "end": "2249440"
  },
  {
    "text": "and i can quite easily start that up i'm going to use a compose file again to do this",
    "start": "2250320",
    "end": "2255520"
  },
  {
    "text": "just because it simplifies some stuff so binding port so port 1433 which is the standard sql server port",
    "start": "2255520",
    "end": "2262240"
  },
  {
    "text": "i'm creating a new network that i'm going to shove all that stuff in there the image is microsoft ms sql linux",
    "start": "2262240",
    "end": "2267520"
  },
  {
    "text": "server linux and then i have to provide some other stuff",
    "start": "2267520",
    "end": "2272560"
  },
  {
    "text": "this is a sql server you've got to accept a license agreement i'm probably going to want an sa password on that so i can connect to it and you know be able",
    "start": "2272560",
    "end": "2279200"
  },
  {
    "text": "to interact with it so we use environment variables here and that's what that new section in the",
    "start": "2279200",
    "end": "2284640"
  },
  {
    "text": "compose file is for we have an environment section and these are environment variables that are going to be inside of that container so inside",
    "start": "2284640",
    "end": "2290800"
  },
  {
    "text": "of that container if i was to echo m i would say accept underscore euler",
    "start": "2290800",
    "end": "2296720"
  },
  {
    "text": "is y and we would see my super strong sa password so",
    "start": "2296720",
    "end": "2302560"
  },
  {
    "text": "if we were to run that so this time using docker compose i'm actually not building a new image i'm",
    "start": "2302560",
    "end": "2308800"
  },
  {
    "text": "just running the the baseline sql server image uh",
    "start": "2308800",
    "end": "2314079"
  },
  {
    "text": "there we go it's uh it's crashed for some lovely reason that is deep within",
    "start": "2314079",
    "end": "2320160"
  },
  {
    "text": "side of sql server uh awesome um you can trust me that that",
    "start": "2320160",
    "end": "2326640"
  },
  {
    "text": "would normally work uh so um what i'm not doing here is i'm not doing",
    "start": "2326640",
    "end": "2331839"
  },
  {
    "text": "any kind of volume mounting or anything like that if you if you are running a database be it a sql server or or",
    "start": "2331839",
    "end": "2337760"
  },
  {
    "text": "any kind of anything with persistent stories you're probably going to want to volume out so that as the container is shut down you don't",
    "start": "2337760",
    "end": "2343280"
  },
  {
    "text": "lose all the data that's in your database or your your redis case or whatever it might be",
    "start": "2343280",
    "end": "2349119"
  },
  {
    "text": "cool i'm not going to try and debug why that's failed i've got plenty of other demos that we can get onto",
    "start": "2349200",
    "end": "2356640"
  },
  {
    "text": "anyway and hope that none of them also suffer the same fate because most of them require sql server",
    "start": "2356640",
    "end": "2364320"
  },
  {
    "text": "okay uh wait where was i okay cool",
    "start": "2364320",
    "end": "2371680"
  },
  {
    "text": "so i'm now uh i want to talk about how we can use the compose to actually start representing our environment that's what",
    "start": "2371680",
    "end": "2376960"
  },
  {
    "text": "i said that is is one of the useful aspects of the compose file is that you can represent how your whole application",
    "start": "2376960",
    "end": "2383520"
  },
  {
    "text": "architecture would look so to do this i'm just going to send up i've got an asp.net core application that runs",
    "start": "2383520",
    "end": "2390560"
  },
  {
    "text": "inside of a docking container and i want to this asp.net application i wanted to then talk to a sql server",
    "start": "2390560",
    "end": "2399599"
  },
  {
    "text": "but because i don't have sql server installed i'm going to rely on uh",
    "start": "2399839",
    "end": "2405119"
  },
  {
    "text": "on this and i just realized i forgot to increase my font size in every increase in everything but visual studio",
    "start": "2405119",
    "end": "2410960"
  },
  {
    "text": "uh so visual studio actually has pretty decent support for docker uh it does have some",
    "start": "2410960",
    "end": "2417359"
  },
  {
    "text": "rough edges that i've hit a couple of times doing these demos and fingers crossed that i don't get hit by them right now if they do i'm gonna have",
    "start": "2417359",
    "end": "2424800"
  },
  {
    "text": "to quickly try and make them work and we'll just do a little song and dance and everyone you know don't watch as",
    "start": "2424800",
    "end": "2430319"
  },
  {
    "text": "things fail but i've now got two services with inside of this compose file i have the demo app which",
    "start": "2430319",
    "end": "2436880"
  },
  {
    "text": "is my asp.net core application um it's got a docker file that it starts uh bases itself off uh which tells it to",
    "start": "2436880",
    "end": "2443599"
  },
  {
    "text": "use the asp.net call one one um docker image stuff like that uh we're gonna",
    "start": "2443599",
    "end": "2449599"
  },
  {
    "text": "stand that up and it's to be up and running and then sql server is also going to be stood up",
    "start": "2449599",
    "end": "2454640"
  },
  {
    "text": "basically all the same information that we had previously and what i'm actually going to be doing is",
    "start": "2454640",
    "end": "2460079"
  },
  {
    "text": "i'm going to be putting them on i've got multiple networks to find so that's the other thing that i've got in here you see at the bottom i've got two networks",
    "start": "2460079",
    "end": "2466560"
  },
  {
    "text": "um one with one called web and one called db because what i'm starting to do is i'm",
    "start": "2466560",
    "end": "2471680"
  },
  {
    "text": "defining my architecture that maybe my sql server that's not going to be publicly accessible it's going to be on a network",
    "start": "2471680",
    "end": "2478319"
  },
  {
    "text": "that's firewall blocked you can't access that from the public internet so i'm putting this into a separate network",
    "start": "2478319",
    "end": "2485599"
  },
  {
    "text": "to the web server but the web server still needs to be able to talk to the sql server so they're also going to share a network",
    "start": "2485599",
    "end": "2492400"
  },
  {
    "text": "and we'll see how we can do some fun stuff with network isolation uh as we sort of explore these demos but and i",
    "start": "2492400",
    "end": "2498720"
  },
  {
    "text": "start off by hitting f5 and watching to see whether or not visual studio is just going to do an operation",
    "start": "2498720",
    "end": "2504640"
  },
  {
    "text": "error which is what it has been doing a couple of times on me through these demos",
    "start": "2504640",
    "end": "2511040"
  },
  {
    "text": "okay so it's basically going through this compose file it's executing a bunch of stuff creating a couple of images",
    "start": "2511040",
    "end": "2517760"
  },
  {
    "text": "it then has a compile error which i've not hit before and this is where i start crying a little to myself",
    "start": "2517760",
    "end": "2524560"
  },
  {
    "text": "um no it's actually got a bunch of stuff hanging around from earlier on uh just make sure i have so i have",
    "start": "2524560",
    "end": "2531119"
  },
  {
    "text": "something up and running i'm just gonna kill so if you don't care about sending a a",
    "start": "2531119",
    "end": "2536319"
  },
  {
    "text": "nice exit code you could kill dash f uh sorry uh i can not kill uh docker rm",
    "start": "2536319",
    "end": "2543280"
  },
  {
    "text": "f it's like i just want this container to go away bam that'll kill that that doesn't send a",
    "start": "2543280",
    "end": "2550000"
  },
  {
    "text": "nice shutdown to the process it's running it's just like bam you're dead um and that's then gonna hopefully and",
    "start": "2550000",
    "end": "2556319"
  },
  {
    "text": "then rm means it's gonna clean itself up uh i just need to clean up some networks i",
    "start": "2556319",
    "end": "2561920"
  },
  {
    "text": "think yep work prune uh yep let's get rid of all the",
    "start": "2561920",
    "end": "2568400"
  },
  {
    "text": "networks that i don't actually need and now hopefully i'll be able to",
    "start": "2568400",
    "end": "2574000"
  },
  {
    "text": "check what i've got in my images i'm just gonna remove the demo",
    "start": "2574000",
    "end": "2579040"
  },
  {
    "text": "demo app image as well so that ah dash",
    "start": "2579040",
    "end": "2585520"
  },
  {
    "text": "i can forcibly remove an image so if i try and remove an image that a container is running on it'll stop me if i dash f",
    "start": "2585520",
    "end": "2591680"
  },
  {
    "text": "it's just kill i just go like get rid of everything um so that",
    "start": "2591680",
    "end": "2596720"
  },
  {
    "text": "gets rid of that and psa so i now actually have to actually i have to kill these images docker",
    "start": "2596720",
    "end": "2603680"
  },
  {
    "text": "uh rm-f of 31 55b and 16.",
    "start": "2603680",
    "end": "2611520"
  },
  {
    "text": "and that is how we kill with fire anything that's running in docker",
    "start": "2611520",
    "end": "2616960"
  },
  {
    "text": "uh just ps make sure everything's gone images network",
    "start": "2617520",
    "end": "2624400"
  },
  {
    "text": "all right cool we are hopefully back to being in a position where i can hit f5",
    "start": "2624400",
    "end": "2630560"
  },
  {
    "text": "and not have visual studio complain at me",
    "start": "2630560",
    "end": "2635240"
  },
  {
    "text": "one of the fun things about doing live demos is that if you do actually want to practice you've got to make sure that you really clean up after yourself",
    "start": "2636079",
    "end": "2643280"
  },
  {
    "text": "excellent operation failed in visual studio so this is where we do the song and dance",
    "start": "2643440",
    "end": "2648880"
  },
  {
    "text": "as my demos just completely fall apart um i just have to go back and re-execute",
    "start": "2648880",
    "end": "2655359"
  },
  {
    "text": "all those rms again rm-f e5 and 13.",
    "start": "2655359",
    "end": "2662480"
  },
  {
    "text": "images um i of demo app",
    "start": "2662480",
    "end": "2667920"
  },
  {
    "text": "dev and docker network froon",
    "start": "2667920",
    "end": "2673200"
  },
  {
    "text": "oops prune yes all righty we are going to relaunch",
    "start": "2673200",
    "end": "2678560"
  },
  {
    "text": "visual studio um the visual studio docker tooling it seems that i i and this i'm just going to like",
    "start": "2678560",
    "end": "2685200"
  },
  {
    "text": "totally eat my words in about two minutes time uh but it seems that if it if you've got visual studio running",
    "start": "2685200",
    "end": "2690960"
  },
  {
    "text": "you've tried to execute a bunch of stuff in docker they have failed it then sort of hangs around inside of visual studio",
    "start": "2690960",
    "end": "2696880"
  },
  {
    "text": "and you can't re-kill it which is really kind of frustrating so you have to kind of close visual studio kill everything",
    "start": "2696880",
    "end": "2702960"
  },
  {
    "text": "open visual studio um cross your fingers hit f5 again cry to yourself when it",
    "start": "2702960",
    "end": "2708640"
  },
  {
    "text": "doesn't work and go thank you for coming um see me outside and i might try and get it working at another point um",
    "start": "2708640",
    "end": "2716400"
  },
  {
    "text": "yeah i actually i i hit that operation exception um earlier today so i i'm",
    "start": "2716400",
    "end": "2721440"
  },
  {
    "text": "getting quite good at recovering from that point uh as as you can see by the fact that i've been able to just talk",
    "start": "2721440",
    "end": "2726720"
  },
  {
    "text": "through um a pretty spectacular demo failure and visual studio error and a bunch of stuff like that all right cool",
    "start": "2726720",
    "end": "2732480"
  },
  {
    "text": "so our web application is up and running um i can",
    "start": "2732480",
    "end": "2737680"
  },
  {
    "text": "i have a sql server that is also up and running and i can prove it this time because i have link pad here",
    "start": "2737680",
    "end": "2744880"
  },
  {
    "text": "and i'm connecting connecting to uh localhost for team 1433",
    "start": "2744880",
    "end": "2751119"
  },
  {
    "text": "there is currently no databases in there other than the standard sql server databases",
    "start": "2751119",
    "end": "2757200"
  },
  {
    "text": "and let's register with inside of our application uh",
    "start": "2757359",
    "end": "2762400"
  },
  {
    "text": "demo user this is where i try and remember what the password policy that i have on this",
    "start": "2762400",
    "end": "2767839"
  },
  {
    "text": "application is because i did like 10 attempts to register um the other day oh sweet there we go uh okay cool so",
    "start": "2767839",
    "end": "2775760"
  },
  {
    "text": "this is talk to the sql server the sql server has gone well you don't actually have the database ready",
    "start": "2775760",
    "end": "2782079"
  },
  {
    "text": "that's cool i mean your first migrations just gonna run those give it a couple of moments so this is",
    "start": "2782079",
    "end": "2788880"
  },
  {
    "text": "the the web server is talking to that it's going to run the it's going to set up the identity database with inside of",
    "start": "2788880",
    "end": "2795440"
  },
  {
    "text": "that because i'm just using local identity i'm not using anything there i can refresh the",
    "start": "2795440",
    "end": "2800839"
  },
  {
    "text": "page actually no we won't log in instead i'll come back here",
    "start": "2800839",
    "end": "2809119"
  },
  {
    "text": "that we have created a database called doc from scratch",
    "start": "2809680",
    "end": "2814800"
  },
  {
    "text": "inside of a sql server that's running on docker using efs code migrations from a",
    "start": "2814800",
    "end": "2819839"
  },
  {
    "text": "web server that's running in docker as well so this is this is now starting to look like what",
    "start": "2819839",
    "end": "2825520"
  },
  {
    "text": "we might want to use as a production architecture and you're probably not going to want to use the sql the defaults",
    "start": "2825520",
    "end": "2831599"
  },
  {
    "text": "asp.net core application in production but you get the idea i could then go through the registration",
    "start": "2831599",
    "end": "2837760"
  },
  {
    "text": "process create myself an account um",
    "start": "2837760",
    "end": "2844040"
  },
  {
    "text": "and password there we go register there we go i'm now logged in",
    "start": "2844960",
    "end": "2850800"
  },
  {
    "text": "as a user um now if i was to stop everything and then start it all back up that",
    "start": "2850800",
    "end": "2856880"
  },
  {
    "text": "database would still have the data with inside of it so i could then re-log in because it's still that same container",
    "start": "2856880",
    "end": "2862800"
  },
  {
    "text": "it's just being shut down and restarted if i was to remove that container and then launch the application again i",
    "start": "2862800",
    "end": "2870079"
  },
  {
    "text": "wouldn't be able to log in because i will have killed all that data and this is where volume mounting is useful so you'd mount all the um the directories",
    "start": "2870079",
    "end": "2876319"
  },
  {
    "text": "that sql server writes it's um it's actual data based files too um you'd mount that as a volume and then you",
    "start": "2876319",
    "end": "2883680"
  },
  {
    "text": "would basically persist that across you know machines or whatnot",
    "start": "2883680",
    "end": "2889920"
  },
  {
    "text": "cool um the the other thing that if we just do docker ps that will notice is that it's",
    "start": "2890079",
    "end": "2896319"
  },
  {
    "text": "been given this name the sql server in particular has been given this name of demo app underscore sequel um so like",
    "start": "2896319",
    "end": "2902240"
  },
  {
    "text": "that's given some conventions based off of the um the context where the con the compose",
    "start": "2902240",
    "end": "2907839"
  },
  {
    "text": "file was executed uh that could be a little bit annoying for how we want to connect to that database like what's it actually named",
    "start": "2907839",
    "end": "2914319"
  },
  {
    "text": "if we want to connect to it well this is where networks can become",
    "start": "2914319",
    "end": "2919520"
  },
  {
    "text": "really useful so you'll see here in the network section of the sql database i've said that the database that's here the",
    "start": "2919520",
    "end": "2926400"
  },
  {
    "text": "container name is going to be demo app underscore sql because i've specified that but the alias of that container",
    "start": "2926400",
    "end": "2932640"
  },
  {
    "text": "inside of that network is called sql so that when i look at my app settings",
    "start": "2932640",
    "end": "2940880"
  },
  {
    "text": "and i look at the database connection string here i'm just saying sql 1433 so i don't really care what the name of",
    "start": "2940880",
    "end": "2947599"
  },
  {
    "text": "that container that's been started is i don't even have to specify a name i can just",
    "start": "2947599",
    "end": "2952960"
  },
  {
    "text": "call it lovely benz if you want to call it lovely bends docker when you first launch it but the",
    "start": "2952960",
    "end": "2958319"
  },
  {
    "text": "alias that's going to have on the network is going to be sql so this is kind of like if you're doing a hostname hack inside of windows",
    "start": "2958319",
    "end": "2964240"
  },
  {
    "text": "cool okay so i'm just going to kill everything docker stop i don't know docker rm kill with",
    "start": "2964240",
    "end": "2970960"
  },
  {
    "text": "fire 6e 588 and then we're gonna",
    "start": "2970960",
    "end": "2976160"
  },
  {
    "text": "docker rmi of demo app dev and docker network prune clean up",
    "start": "2976160",
    "end": "2983760"
  },
  {
    "text": "all the networks that we've generated and now i'm going to check out another",
    "start": "2983760",
    "end": "2989599"
  },
  {
    "text": "demo so like i said",
    "start": "2989599",
    "end": "2996000"
  },
  {
    "text": "part of what we hopefully wanting to do is we want to use networks to start segregating things and maybe represent",
    "start": "2996000",
    "end": "3001440"
  },
  {
    "text": "something that's behind a firewall that can't be externally accessed well i mean i don't want my sql server",
    "start": "3001440",
    "end": "3007359"
  },
  {
    "text": "publicly accessible i might have a super strong sa password like this",
    "start": "3007359",
    "end": "3012480"
  },
  {
    "text": "but someone might work it out so now in the compose file i've actually removed any port bindings",
    "start": "3012480",
    "end": "3018880"
  },
  {
    "text": "so this sql server is not port bound but it still is exposing a port it's still",
    "start": "3018880",
    "end": "3025440"
  },
  {
    "text": "listening for connections on that port and it's listening for them inside of the docker network",
    "start": "3025440",
    "end": "3031119"
  },
  {
    "text": "so this is why my demo application my web application resides in its web network publicly accessible and the db",
    "start": "3031119",
    "end": "3038000"
  },
  {
    "text": "network which is internally accessible and only things that can access the database are on that network",
    "start": "3038000",
    "end": "3044079"
  },
  {
    "text": "so we're going to launch this again uh we'll wait for visual shooter to crash then i'll just cry a little and we'll clean up everything",
    "start": "3044079",
    "end": "3050640"
  },
  {
    "text": "but we'll give it a moment there's still like a whole bunch of steps in compose before it falls over",
    "start": "3050640",
    "end": "3056720"
  },
  {
    "text": "hey works first time uh okay so so this will start up and i'm",
    "start": "3056720",
    "end": "3062720"
  },
  {
    "text": "not particularly interested in the web but that'll open up again anyway",
    "start": "3062720",
    "end": "3069318"
  },
  {
    "text": "all right so everything's up and running let's jump back to linkpad",
    "start": "3070640",
    "end": "3076480"
  },
  {
    "text": "if i was to refresh my sql server connection this will ultimately time out because i didn't do",
    "start": "3076800",
    "end": "3084400"
  },
  {
    "text": "port binding as we saw in our node examples earlier it won't connect",
    "start": "3084400",
    "end": "3090880"
  },
  {
    "text": "but i can still come here i'm going to hit register if we set all the stuff in here appropriately",
    "start": "3091359",
    "end": "3098800"
  },
  {
    "text": "oops",
    "start": "3098800",
    "end": "3101119"
  },
  {
    "text": "it'll still talk to the sql server i can still say apply migrations",
    "start": "3104160",
    "end": "3109359"
  },
  {
    "text": "so the website can still talk to the sql server but you can't it might be running on your machine but",
    "start": "3109359",
    "end": "3114800"
  },
  {
    "text": "you do not have access to it that is unless you go say",
    "start": "3114800",
    "end": "3120800"
  },
  {
    "text": "docker network ls so just wanted to find out the names of the",
    "start": "3120800",
    "end": "3126319"
  },
  {
    "text": "networks okay so let's create an image oh sorry let's create create a container and we're going to join this network",
    "start": "3126319",
    "end": "3133119"
  },
  {
    "text": "that's in use so docker run remove",
    "start": "3133119",
    "end": "3138880"
  },
  {
    "text": "dash network so i'm going to jump onto that network",
    "start": "3138880",
    "end": "3145040"
  },
  {
    "text": "and then just use the ubuntu and we'll jump into bash okay so if i was to go oh actually not",
    "start": "3145040",
    "end": "3151520"
  },
  {
    "text": "that one sorry so the default ubuntu image doesn't have ping installed",
    "start": "3151520",
    "end": "3158400"
  },
  {
    "text": "that can be a little bit of a nuisance so i created one called ping okay so if i was to go ping sql",
    "start": "3158400",
    "end": "3167119"
  },
  {
    "text": "can't do anything if i was to",
    "start": "3167119",
    "end": "3172480"
  },
  {
    "text": "go docker network work sorry let's just grab that network again",
    "start": "3172480",
    "end": "3179040"
  },
  {
    "text": "so this time i want to jump onto the database network so docker run",
    "start": "3179040",
    "end": "3185280"
  },
  {
    "text": "rm network is going to be that aaron ping bin bash",
    "start": "3186480",
    "end": "3194240"
  },
  {
    "text": "okay so now if i go ping sql there's our sql server so network isolation basically means",
    "start": "3194240",
    "end": "3200319"
  },
  {
    "text": "that anything on that network can talk to anything else that's on that network but it can't talk to things that aren't there so here because i'm on the seat on",
    "start": "3200319",
    "end": "3207280"
  },
  {
    "text": "the databases network i can talk to it so i could if i had like this the command line util to sql server i could",
    "start": "3207280",
    "end": "3213760"
  },
  {
    "text": "be using that to talk to sql server but i don't have it and whereas this one here it doesn't know about the sql sql host it can't",
    "start": "3213760",
    "end": "3220160"
  },
  {
    "text": "access it so and that is how we can use network isolation from compose files to separate parts of",
    "start": "3220160",
    "end": "3227760"
  },
  {
    "text": "our architecture out all right so i have one more demo that i'm just going to let's close visual",
    "start": "3227760",
    "end": "3233599"
  },
  {
    "text": "studio because i don't need visual studio open that so i said that the uh the title of this",
    "start": "3233599",
    "end": "3239359"
  },
  {
    "text": "talk was docker from scratch i just want to talk a bit about scratch itself so scratch is kind of a special",
    "start": "3239359",
    "end": "3246000"
  },
  {
    "text": "concept with inside of docker everything has to start from a base image",
    "start": "3246000",
    "end": "3251280"
  },
  {
    "text": "but the most basic base image that you start from with docker is called scratch",
    "start": "3251280",
    "end": "3257760"
  },
  {
    "text": "so i can create a a container or sorry create an image that then you turn into",
    "start": "3257760",
    "end": "3262800"
  },
  {
    "text": "a run into containers from scratch the thing is that scratch is really bare",
    "start": "3262800",
    "end": "3269040"
  },
  {
    "text": "bones like it is about running a single process it doesn't give you anything it doesn't",
    "start": "3269040",
    "end": "3274640"
  },
  {
    "text": "have anything inside of it it doesn't even have been sh the most primitive shell in unix it doesn't have that",
    "start": "3274640",
    "end": "3279920"
  },
  {
    "text": "doesn't have bash nothing but if you've got a process that you want to execute you want to do it super",
    "start": "3279920",
    "end": "3285359"
  },
  {
    "text": "lightweight or you can do that with doc with with scratch so",
    "start": "3285359",
    "end": "3291040"
  },
  {
    "text": "the only way that you can use scratch i can't do docker run and specify scratch as an image name because it's technically not an image name but i can",
    "start": "3291040",
    "end": "3297599"
  },
  {
    "text": "create a docker file that says from scratch type back to the title um",
    "start": "3297599",
    "end": "3303520"
  },
  {
    "text": "this case what i'm actually doing is i'm using docker to run a go application i was trying to",
    "start": "3303520",
    "end": "3309839"
  },
  {
    "text": "think what was the most simple application that i could run inside of uh well compiled down to a native",
    "start": "3309839",
    "end": "3314960"
  },
  {
    "text": "process and that was go i know nothing about writing go so i copied the hello world demo uh so",
    "start": "3314960",
    "end": "3322160"
  },
  {
    "text": "i'm going to run i have yeah i love a little go application whoops",
    "start": "3322160",
    "end": "3328079"
  },
  {
    "text": "somewhere i have app.go it is really awesome anyone that knows how to write go will know that that's",
    "start": "3328079",
    "end": "3333680"
  },
  {
    "text": "really awesome i'm going to use docker run so i'm actually going to run a container on line 5",
    "start": "3333680",
    "end": "3339200"
  },
  {
    "text": "to run the go compiler because i don't have go installed on my machine so i'm going to run the go compiler out of a container",
    "start": "3339200",
    "end": "3345040"
  },
  {
    "text": "it's going to generate me a binary that's going to because it's volume mounted right back to my windows machine",
    "start": "3345040",
    "end": "3351040"
  },
  {
    "text": "i'm then going to create an image using my docker file it's going to copy that binary into the root of the container",
    "start": "3351040",
    "end": "3357680"
  },
  {
    "text": "that's our root of the image i'm then going to run that and then i'm going to remove it all uh clean up after",
    "start": "3357680",
    "end": "3363920"
  },
  {
    "text": "myself so this is how we get like the idea here",
    "start": "3363920",
    "end": "3369040"
  },
  {
    "text": "is we're starting to build out a like a basic build process i'm using docker to containerize",
    "start": "3369040",
    "end": "3374400"
  },
  {
    "text": "my ci cd process i'm building an application uh there so",
    "start": "3374400",
    "end": "3380559"
  },
  {
    "text": "here is the output from go and then we had a whole bunch of stuff before that which was",
    "start": "3380559",
    "end": "3387200"
  },
  {
    "text": "compiling go building image running container cleaning up everything after itself",
    "start": "3387200",
    "end": "3393520"
  },
  {
    "text": "and that is how you finally finish with docker from scratch",
    "start": "3393520",
    "end": "3399160"
  },
  {
    "text": "so just some like closing on on kind of what we've covered across in this talk",
    "start": "3405119",
    "end": "3411680"
  },
  {
    "text": "scratch is not particularly useful as an image i just like just going to be honest it's it's not a very useful one",
    "start": "3411680",
    "end": "3417520"
  },
  {
    "text": "unless you're basically creating your own base images so you're creating ubuntu or alpine or",
    "start": "3417520",
    "end": "3423359"
  },
  {
    "text": "any other kind of general purpose os style image with inside of docker",
    "start": "3423359",
    "end": "3429040"
  },
  {
    "text": "or you're trying to do something super high performance particularly if you're obviously you're compiling something down to a native",
    "start": "3429040",
    "end": "3435119"
  },
  {
    "text": "process then you can use scratch but it's not going to be useful for a lot of things",
    "start": "3435119",
    "end": "3440400"
  },
  {
    "text": "asp.net applications you're not really going to run them out of a scratch image",
    "start": "3440400",
    "end": "3446040"
  },
  {
    "text": "images are really great for experimenting uh",
    "start": "3446480",
    "end": "3451760"
  },
  {
    "text": "running a single use process is really it's quite powerful i can i can stand up something like unra because i have no",
    "start": "3451760",
    "end": "3457599"
  },
  {
    "text": "need to install winrar for the like one time every three or four years that i need to unriver and archive on my",
    "start": "3457599",
    "end": "3463599"
  },
  {
    "text": "machine or i can i want to just play around with something in go because i don't know i don't really know how to",
    "start": "3463599",
    "end": "3468960"
  },
  {
    "text": "programming go i don't know if i ever want to become a go programmer but maybe i want to just experiment see what it's",
    "start": "3468960",
    "end": "3474640"
  },
  {
    "text": "like basically try out the basic syntax well rather than installing the go build chain on my machine i can just run it",
    "start": "3474640",
    "end": "3480000"
  },
  {
    "text": "out of a container compose is used and it's all about",
    "start": "3480000",
    "end": "3486000"
  },
  {
    "text": "representing environments that's what we're doing with the docker compose file we start building up services with inside of that that represent the",
    "start": "3486000",
    "end": "3491839"
  },
  {
    "text": "applications we want to run and the dependencies that those applications have on each other so we can you know if",
    "start": "3491839",
    "end": "3497280"
  },
  {
    "text": "i have an application that needs sql server and a redis case sure um it's using rabbitmq and and a few",
    "start": "3497280",
    "end": "3503359"
  },
  {
    "text": "things like that i could i define those all as services and how i can stand them up um we used this at a client that i",
    "start": "3503359",
    "end": "3510319"
  },
  {
    "text": "was working with to basically represent their dev environment because they were using rabbit and redis and",
    "start": "3510319",
    "end": "3515920"
  },
  {
    "text": " and stuff like that and you'd install redis on your first day and like set all that stuff up on your",
    "start": "3515920",
    "end": "3521440"
  },
  {
    "text": "first day and then six months later your implement your instance has been configured completely differently to",
    "start": "3521440",
    "end": "3527119"
  },
  {
    "text": "prod because you've gone in there and you tweaked some settings and stuff like that well using the compose file we can say this is what the standard",
    "start": "3527119",
    "end": "3532960"
  },
  {
    "text": "environment looks like and this is how you stand that up and using all the same configs that you'd be running in you know",
    "start": "3532960",
    "end": "3538559"
  },
  {
    "text": "on a product environment or that i'm running on my machine and that you're running on your machine and you're running on your machine we're running",
    "start": "3538559",
    "end": "3544079"
  },
  {
    "text": "the same thing it removes that well it worked on my machine well how did you configure your you know redis cache",
    "start": "3544079",
    "end": "3550400"
  },
  {
    "text": "everyone's running it exactly the same i'm aaron pal that was docker from",
    "start": "3550400",
    "end": "3556960"
  },
  {
    "text": "scratch thank you very much [Applause]",
    "start": "3556960",
    "end": "3567920"
  }
]