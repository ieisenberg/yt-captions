[
  {
    "text": "everybody filters in um don't worry there's just a you can take your seats just a few slides where we",
    "start": "320",
    "end": "6160"
  },
  {
    "text": "introduce myself from the talk my name's ian cooper you can find me on twitter as i cooper",
    "start": "6160",
    "end": "11440"
  },
  {
    "text": "uh my dms are open and i'm usually happy to engage a little bit about anything i'm talking about",
    "start": "11440",
    "end": "17359"
  },
  {
    "text": "um today's talk what is going to be about um if we have a synchronous api so you can think of those as events or",
    "start": "17359",
    "end": "22720"
  },
  {
    "text": "messages how do we go about owning and managing them i do quite a few talks about",
    "start": "22720",
    "end": "29119"
  },
  {
    "text": "you know how we build event driven architectures and how we design them and this one's more about well you've got one",
    "start": "29119",
    "end": "34719"
  },
  {
    "text": "how do you look after it how do you do all those things that kind of like fall into the the line of",
    "start": "34719",
    "end": "40079"
  },
  {
    "text": "admin for your api so i am it says that i'm old i only ever",
    "start": "40079",
    "end": "45760"
  },
  {
    "text": "really draw attention to the bottom point i got my start in speaking because",
    "start": "45760",
    "end": "50879"
  },
  {
    "text": "i still do around a user group and when we started there was nobody else to talk apart from us um that's just led me up here doesn't",
    "start": "50879",
    "end": "57520"
  },
  {
    "text": "mean i'm particularly any kind of genius uh any of us really can do this and i do encourage you to",
    "start": "57520",
    "end": "63600"
  },
  {
    "text": "have a stab but it's great and all of you will know something that someone else doesn't know and very",
    "start": "63600",
    "end": "69280"
  },
  {
    "text": "easy i find to think but i don't know anything and it's like actually but if you you do know some things you just",
    "start": "69280",
    "end": "75439"
  },
  {
    "text": "don't realize you know them and there'll be a junior dev somewhere that wants to know what you know right",
    "start": "75439",
    "end": "81759"
  },
  {
    "text": "uh and i work on an open source project called brighter we do it's a messaging framework for",
    "start": "81759",
    "end": "87200"
  },
  {
    "text": "net developers we have a python version called brightside all right we can talk about we're going",
    "start": "87200",
    "end": "92560"
  },
  {
    "text": "to talk about the notion of endpoints what are they why are they important to us and we get a little bit into bits of",
    "start": "92560",
    "end": "97680"
  },
  {
    "text": "domain driven design a little bit of the ideas of contracts then we'll talk about the notion of",
    "start": "97680",
    "end": "103439"
  },
  {
    "text": "having decided what endpoints are in the world of asynchronous kind of conversations we'll talk a little bit",
    "start": "103439",
    "end": "108720"
  },
  {
    "text": "about um discovery of those endpoints and then we'll get into describing them",
    "start": "108720",
    "end": "114000"
  },
  {
    "text": "at the end points and particularly the contracts they hold uh and then we'll get a little bit into some of the things interesting things we",
    "start": "114000",
    "end": "119680"
  },
  {
    "text": "can do once we have those like using it for infrastructure as code and explore some of the ideas we've been",
    "start": "119680",
    "end": "126159"
  },
  {
    "text": "playing with one of the things that i like to make sure we are all agreed on first of all",
    "start": "126159",
    "end": "131680"
  },
  {
    "text": "though is what do we mean by an asynchronous api right what's a",
    "start": "131680",
    "end": "137280"
  },
  {
    "text": "synchronous conversation and it seemed for extinctless conversation both parties must be present for communication to succeed",
    "start": "137280",
    "end": "144319"
  },
  {
    "text": "right you both have to be there at the same time and the canonical example is of course a phone call",
    "start": "144319",
    "end": "149920"
  },
  {
    "text": "right iphone you up if you're not there there is no communication",
    "start": "149920",
    "end": "154959"
  },
  {
    "text": "right now nowadays the only person that phones me is my mum my mom is in her 80s so that i think",
    "start": "154959",
    "end": "160400"
  },
  {
    "text": "that's fair and she likes to hear my voice occasionally everybody else just uses whatsapp or",
    "start": "160400",
    "end": "165680"
  },
  {
    "text": "messenger or signal or whatever whatever mechanism we have agreed to send messages over and the reason people do",
    "start": "165680",
    "end": "171599"
  },
  {
    "text": "that is because it's easier typical protocols here for synchronous",
    "start": "171599",
    "end": "176800"
  },
  {
    "text": "open api graphql grpc thrift and soap so asynchronous conversation is the",
    "start": "176800",
    "end": "182480"
  },
  {
    "text": "other kind that khan we're really used to using in an asynchronous conversation the receiver does not need to be present at",
    "start": "182480",
    "end": "189280"
  },
  {
    "text": "the same time as the sender communicates with them using store and 4 to pick up the message later",
    "start": "189280",
    "end": "196319"
  },
  {
    "text": "chronicle example would be snail mail in a letterbox right i send you a letter",
    "start": "196319",
    "end": "201519"
  },
  {
    "text": "if you're american it goes and lives in one of these nice mailboxes of the flag if your british just pops through our door",
    "start": "201519",
    "end": "206560"
  },
  {
    "text": "um what it means is you can get to the mail whenever right whenever you're ready when you come home",
    "start": "206560",
    "end": "212159"
  },
  {
    "text": "at the end of the day there's the mail waiting for you didn't need to be present when i sent it so i decouple",
    "start": "212159",
    "end": "219840"
  },
  {
    "text": "sender and receiver in terms of in in time they don't need to both be available at the same time which",
    "start": "220000",
    "end": "225519"
  },
  {
    "text": "generally increases the valuability of our platform it is much easier to build a platform where i don't have to have",
    "start": "225519",
    "end": "231440"
  },
  {
    "text": "you both available at the same time right some probability theory that you probably did on maths years ago",
    "start": "231440",
    "end": "237840"
  },
  {
    "text": "explains she is much easier to get up time where you don't have to both be simultaneously available",
    "start": "237840",
    "end": "244239"
  },
  {
    "text": "um and the real question is how do we describe these kinds of things so what's up effect etcetera are those kind of things you use today they're all",
    "start": "244640",
    "end": "251120"
  },
  {
    "text": "asynchronous conversations and protocols today like rabbitmq kafka sns they're all",
    "start": "251120",
    "end": "257680"
  },
  {
    "text": "asynchronous right okay let's talk about endpoints",
    "start": "257680",
    "end": "264079"
  },
  {
    "text": "so uh back in the day there was a a toolkit called i think it's an open source version now called windows",
    "start": "264560",
    "end": "270080"
  },
  {
    "text": "communication foundation um built by some smart people outdated",
    "start": "270080",
    "end": "275120"
  },
  {
    "text": "nowadays it's very based around principles like soap but it had a quite nice definition of what an end point was",
    "start": "275120",
    "end": "281680"
  },
  {
    "text": "and really based on that endpoints are places where messages sent or received and they define the information required",
    "start": "281680",
    "end": "288240"
  },
  {
    "text": "for the message exchange so just a conceptual idea right but we have an app",
    "start": "288240",
    "end": "293360"
  },
  {
    "text": "and our app wants to basically send messages or receive messages and what we do that through is an end point and it",
    "start": "293360",
    "end": "300240"
  },
  {
    "text": "isn't necessarily just for messaging right even for something synchronous so you know we can think about an http endpoint somewhere where we send and",
    "start": "300240",
    "end": "306560"
  },
  {
    "text": "receive http or we can think about you know a messaging endpoint for kafka it's somewhere where we send and receive",
    "start": "306560",
    "end": "312240"
  },
  {
    "text": "kafka right in order for an endpoint to be useful to us we have to think about where messages",
    "start": "312240",
    "end": "318000"
  },
  {
    "text": "should be sent how they should be sent and what they should look like",
    "start": "318000",
    "end": "323120"
  },
  {
    "text": "and what wcf used to call these the abcs address binding and contract which is kind of easy to remember so i quite like",
    "start": "323600",
    "end": "329600"
  },
  {
    "text": "that uh little model of how these things work all right so so what are these things in terms of",
    "start": "329600",
    "end": "337039"
  },
  {
    "text": "um uh what the messages should look like right we'll worry about basically where they should where and how they should be",
    "start": "337039",
    "end": "342880"
  },
  {
    "text": "sent in a second but what are these things in terms of what they should look like",
    "start": "342880",
    "end": "347919"
  },
  {
    "text": "what are we sending okay let's do a little bit of ddd theory",
    "start": "347919",
    "end": "354320"
  },
  {
    "text": "so i have a business usually that i am working for in terms of delivering software",
    "start": "354320",
    "end": "361280"
  },
  {
    "text": "and the business does some stuff and we talk about that being the domain right so i currently work just to take away",
    "start": "361280",
    "end": "367919"
  },
  {
    "text": "our domain is the domain of what the technical quick commerce getting you your food before it gets cold right and",
    "start": "367919",
    "end": "374800"
  },
  {
    "text": "now people are extending into getting your groceries before effectively you i don't know get thirsty",
    "start": "374800",
    "end": "381840"
  },
  {
    "text": "and within that domain we may define a number of sub domains so the remains big",
    "start": "382639",
    "end": "387680"
  },
  {
    "text": "and hard to think about and much we don't want to build huge monoliths anymore all right to deal with the whole thing so it's put up in smaller parts",
    "start": "387680",
    "end": "395199"
  },
  {
    "text": "like how do we onboard a restaurant how do we determine if a restaurant is currently available",
    "start": "395199",
    "end": "401120"
  },
  {
    "text": "to offer food and typically what we would then do is",
    "start": "401120",
    "end": "406639"
  },
  {
    "text": "say okay we need to basically create a model of that sub domain",
    "start": "406639",
    "end": "414240"
  },
  {
    "text": "so bounded context in ddt just a model of our our our domains our subdomains in this",
    "start": "414240",
    "end": "420479"
  },
  {
    "text": "case we could model any given sub domain in a quite",
    "start": "420479",
    "end": "425840"
  },
  {
    "text": "large number of ways a bounded context is just one model right we've chosen to basically",
    "start": "425840",
    "end": "431759"
  },
  {
    "text": "represent it in c sharp or java or all those things would be equally valid models the",
    "start": "431759",
    "end": "438400"
  },
  {
    "text": "bounded context just says here is our model right here is how we chose to represent that",
    "start": "438400",
    "end": "444560"
  },
  {
    "text": "if we are lucky there is a kind of one-to-one alignment between sub-domains like hey we've got a",
    "start": "444560",
    "end": "450720"
  },
  {
    "text": "settlement about restaurant onboarding we've got one about rational availability and we have a context for each of them",
    "start": "450720",
    "end": "456319"
  },
  {
    "text": "in more legacy systems you tend to find that that alignment slips right what happens is we begin to think",
    "start": "456319",
    "end": "462319"
  },
  {
    "text": "about our domain in new ways our business may pivot or change we may not want to really consider onboarding",
    "start": "462319",
    "end": "468639"
  },
  {
    "text": "restaurants to really be a domain we deal with so much anymore and we may find effectively we now have a new",
    "start": "468639",
    "end": "474400"
  },
  {
    "text": "sub-domain to think about and our old bounded context form as part of that that's why we do this exercise called context matrix and ddd right but for the",
    "start": "474400",
    "end": "481520"
  },
  {
    "text": "minute let's just assume we have a nice perfect world in which sub-domains and bounded contexts are",
    "start": "481520",
    "end": "487039"
  },
  {
    "text": "pretty much the same thing but just to be aware they're not right and the bounded context is the",
    "start": "487039",
    "end": "493440"
  },
  {
    "text": "code the schemas even the team boundaries basically that represent a given domain right so",
    "start": "493440",
    "end": "500319"
  },
  {
    "text": "you can think of it almost like a business capability it's the people the processes and the technology that go to basically make up our representation of",
    "start": "500319",
    "end": "506720"
  },
  {
    "text": "a given sub domain that's what the boundary context means and within that bounded context we agree",
    "start": "506720",
    "end": "512000"
  },
  {
    "text": "the meaning of certain terms you'll notice here that we have both a restaurant and restaurant on boarding",
    "start": "512000",
    "end": "517680"
  },
  {
    "text": "and we have a restaurant and now what's going to be called restaurant availability and one on the other side um",
    "start": "517680",
    "end": "523279"
  },
  {
    "text": "and we may not agree in those two models what a restaurant looks like",
    "start": "523279",
    "end": "529519"
  },
  {
    "text": "restaurant on boarding may care about things like the address they make about the phone number make about the name of",
    "start": "529519",
    "end": "534720"
  },
  {
    "text": "the manager effectively use on shift at a given time but the restaurant availability may just care about the",
    "start": "534720",
    "end": "539839"
  },
  {
    "text": "hours that the restaurant keeps how long it takes basically to close down the restaurant at the end of the evening so that they won't do his service there",
    "start": "539839",
    "end": "546839"
  },
  {
    "text": "etc all right so we're modeling quite different things although they're both a restaurant we",
    "start": "546839",
    "end": "552080"
  },
  {
    "text": "call that a poly scene as a name for a bound of context right",
    "start": "552080",
    "end": "557440"
  },
  {
    "text": "and so we've got this idea of different representations of a domain concept",
    "start": "557440",
    "end": "562680"
  },
  {
    "text": "now well we'll talk about apis rather than ddd so how is that relevant",
    "start": "563360",
    "end": "571199"
  },
  {
    "text": "so in this model it's quite likely that what happens is i on board a restaurant and having onboarded a restaurant the",
    "start": "572160",
    "end": "577440"
  },
  {
    "text": "information about a new restaurant flows to our restaurant availability service where effectively someone can go in and",
    "start": "577440",
    "end": "583279"
  },
  {
    "text": "start entering things like shift hours so our restaurant availability service needs to",
    "start": "583279",
    "end": "588480"
  },
  {
    "text": "know about restaurants which have been created by restaurant management and typically if we're going to be",
    "start": "588480",
    "end": "593680"
  },
  {
    "text": "asynchronous in order to increase the availability of our platform then it means restaurant management is raising",
    "start": "593680",
    "end": "598959"
  },
  {
    "text": "some kind of event saying here's a new restaurant or here's an updated restaurant or you know",
    "start": "598959",
    "end": "604640"
  },
  {
    "text": "someone took that restaurant out of our out of our platform and the restaurant based availability service has to listen to those messages",
    "start": "604640",
    "end": "612880"
  },
  {
    "text": "so what is the content of that message where does it come from",
    "start": "612880",
    "end": "618640"
  },
  {
    "text": "well we have a relationship here between restaurant management which effectively seems to own",
    "start": "618640",
    "end": "625200"
  },
  {
    "text": "this this conversation it's the person initiating the conversation and restaurant availability who is",
    "start": "625200",
    "end": "630880"
  },
  {
    "text": "essentially receiving information and we tend to think about them as being upstream and downstream",
    "start": "630880",
    "end": "639279"
  },
  {
    "text": "the downstream the receiver depends upon the upstream team if the",
    "start": "639279",
    "end": "644560"
  },
  {
    "text": "upstream team makes changes to its model the downstream team would need to react the reason we talk about downstream and",
    "start": "644560",
    "end": "650079"
  },
  {
    "text": "upstream is the analogy would be you think of two cities one on a showing a river and one",
    "start": "650079",
    "end": "656480"
  },
  {
    "text": "is upstream and one is downstream if the upstream city starts dumping all of its",
    "start": "656480",
    "end": "661760"
  },
  {
    "text": "waste completely untreated into the river it may well be that the downstream city is drinking that as it's drinking",
    "start": "661760",
    "end": "668320"
  },
  {
    "text": "water that's a problem for the downstream city so what we say is we should try and",
    "start": "668320",
    "end": "674880"
  },
  {
    "text": "manage this relationship so that the restaurant management team the upstream team",
    "start": "674880",
    "end": "680640"
  },
  {
    "text": "are not just basically destroying the lives of the downstream team",
    "start": "680640",
    "end": "686399"
  },
  {
    "text": "and so we say that they have a customer and supplier relationship that the upstream team is the supplier",
    "start": "686399",
    "end": "691680"
  },
  {
    "text": "the downstream team is the customer and the upstream team should think about looking after the needs of their",
    "start": "691680",
    "end": "698079"
  },
  {
    "text": "customers otherwise we end up in this kind of",
    "start": "698079",
    "end": "703600"
  },
  {
    "text": "world right conformance this is kind of like we have a supplier",
    "start": "703600",
    "end": "709200"
  },
  {
    "text": "an upstream and a downstream but that don't really care and in this model what happens is the",
    "start": "709200",
    "end": "714800"
  },
  {
    "text": "restaurant team we're doing on the onboarding they say we're going to take our internal data",
    "start": "714800",
    "end": "722000"
  },
  {
    "text": "structure that represents a restaurant and we're just going to serialize that out as the message",
    "start": "722000",
    "end": "728560"
  },
  {
    "text": "or if they've decided for some benighted reason to do event sourcing oh",
    "start": "728560",
    "end": "733600"
  },
  {
    "text": "or all of our event sourcing events we'll just basically expose them and send them down the system hey we've got",
    "start": "733600",
    "end": "739920"
  },
  {
    "text": "internal domain events saying a restaurant's been on board well we're just that's what we'll send over kafka to everybody else telling them there's a",
    "start": "739920",
    "end": "746079"
  },
  {
    "text": "new restaurant all right and the problem with that is as soon as that team says oh i've got interesting",
    "start": "746079",
    "end": "752560"
  },
  {
    "text": "refactoring here maybe we need to change the restaurant identifier from being",
    "start": "752560",
    "end": "757760"
  },
  {
    "text": "this integer because we've got super scale now and that identity number on the sql server is no longer working for",
    "start": "757760",
    "end": "763920"
  },
  {
    "text": "us we're going to shift over to dynamo and use a guide instead",
    "start": "763920",
    "end": "768880"
  },
  {
    "text": "they completely break the downstream team who've been sitting there going we've got lovely integers for our restaurants and that's what we've been",
    "start": "769680",
    "end": "774880"
  },
  {
    "text": "collating all this time right every time you make a change a downstream team system breaks",
    "start": "774880",
    "end": "782079"
  },
  {
    "text": "because their schemer is the schemer you have internally",
    "start": "782079",
    "end": "787200"
  },
  {
    "text": "so the first rule is just don't do this right don't expose your internal domain model",
    "start": "787200",
    "end": "795360"
  },
  {
    "text": "on your events leaving your api because when you want to change it you'll break everyone upstream of you",
    "start": "795360",
    "end": "802880"
  },
  {
    "text": "well downstream is your other okay or you can't change anything because you're",
    "start": "802880",
    "end": "809360"
  },
  {
    "text": "breaking people down stream maybe right like i said you can't change that your brake at all right",
    "start": "809360",
    "end": "815600"
  },
  {
    "text": "so what are our options well one option is if the upstream team and not being particularly helpful",
    "start": "815600",
    "end": "822639"
  },
  {
    "text": "for whatever reason they're not particularly good team players is that the downstream team or being builds what they call an anti-corruption",
    "start": "822639",
    "end": "828800"
  },
  {
    "text": "layer so anti-corruption layer provides an ad hoc translation service per customer that translates the format used",
    "start": "828800",
    "end": "834639"
  },
  {
    "text": "by the supplier that answered by the customer in other words i build something that says when i get their",
    "start": "834639",
    "end": "840639"
  },
  {
    "text": "message i'll turn it into something i can use internally consistently so it'll",
    "start": "840639",
    "end": "846320"
  },
  {
    "text": "always look like this and i don't have to keep changing my code the only thing i have to do when the upstream team",
    "start": "846320",
    "end": "851839"
  },
  {
    "text": "changes them their internal representation is figure out it broke go to my anti-corruption layer fix it and",
    "start": "851839",
    "end": "859040"
  },
  {
    "text": "then effectively it'll flow through my system correctly",
    "start": "859040",
    "end": "863360"
  },
  {
    "text": "that's kind of our least worst option the only slight problem with this is a",
    "start": "864320",
    "end": "871120"
  },
  {
    "text": "if there's a whole load of people listening to restaurant onboarding so certainly in my in you know in my current field",
    "start": "871120",
    "end": "877279"
  },
  {
    "text": "lots of people want this restaurant data right they want to basically know about restaurants they're all writing anti-corruption",
    "start": "877279",
    "end": "883440"
  },
  {
    "text": "layers and the second thing is if the upstream team don't tell you before they decide",
    "start": "883440",
    "end": "888560"
  },
  {
    "text": "to change their internal model and you break everybody you still got to fix everything even they've got one place to",
    "start": "888560",
    "end": "893680"
  },
  {
    "text": "fix it for each individual team right if you're lucky they're telling you you can go and fix your anti-corruption",
    "start": "893680",
    "end": "899680"
  },
  {
    "text": "layer that doesn't always work because they don't necessarily know you exist so that's kind of your least worst",
    "start": "899680",
    "end": "905680"
  },
  {
    "text": "option the other option is what domain driven design calls an open host service which",
    "start": "905680",
    "end": "911360"
  },
  {
    "text": "is just a fancy name for saying get restaurant management to expose a proper api",
    "start": "911360",
    "end": "918240"
  },
  {
    "text": "okay so an open host sales reduces duplication and many anti-corruption layers by supporting shared models the",
    "start": "918240",
    "end": "924320"
  },
  {
    "text": "upstream team agrees to sport an external model that might differ from their internal one and implies an open",
    "start": "924320",
    "end": "930079"
  },
  {
    "text": "host model that supplier agrees to support and customers depend upon what does that mean so what happens it means is restaurant management say okay we are",
    "start": "930079",
    "end": "937279"
  },
  {
    "text": "going to define what we send and you can rely on that",
    "start": "937279",
    "end": "942560"
  },
  {
    "text": "it'll be like an api we'll publish it somewhere and we'll say this is what a restaurant looks like it may not be how we represent it",
    "start": "942560",
    "end": "950079"
  },
  {
    "text": "internally in fact we may keep changing how we represent it internally",
    "start": "950079",
    "end": "955440"
  },
  {
    "text": "but when we send something externally this is the shape it will have if we want to change that shape there's now a",
    "start": "955440",
    "end": "962320"
  },
  {
    "text": "process of negotiation between us and all of the consumers",
    "start": "962320",
    "end": "967440"
  },
  {
    "text": "it may be that we ask you to be tolerant readers right so tolerant reader just means",
    "start": "967600",
    "end": "973199"
  },
  {
    "text": "effectively you'll accept things that aren't necessarily exactly the shape you",
    "start": "973199",
    "end": "978480"
  },
  {
    "text": "predicted but they don't harm you in any way so if somebody adds new fields that you don't",
    "start": "978480",
    "end": "984480"
  },
  {
    "text": "understand you don't care you just ignore those because they're not somebody else and they're not for you",
    "start": "984480",
    "end": "989519"
  },
  {
    "text": "but you have the data that you want right you might agree early on with this team",
    "start": "989519",
    "end": "995040"
  },
  {
    "text": "that certain fields you you can have sensible defaults for if they're missing you'll have sensible default right it's",
    "start": "995040",
    "end": "1001279"
  },
  {
    "text": "missing the lat long don't worry you'll send them all to nil island right to zero zero not ireland",
    "start": "1001279",
    "end": "1007759"
  },
  {
    "text": "so you might ask the dowshin team to be a tolerant reader and that means essentially it makes it slightly easier",
    "start": "1007920",
    "end": "1012959"
  },
  {
    "text": "to do some things add some new fields that new customers need um effectively drop some fields that most people aren't",
    "start": "1012959",
    "end": "1018880"
  },
  {
    "text": "actually using uh in a kind of st as a phase process i stopped producing data there you start",
    "start": "1018880",
    "end": "1025520"
  },
  {
    "text": "defaulting it until you can actually drop it and get rid of it right we've moved from doing lat long to three words",
    "start": "1025520",
    "end": "1030959"
  },
  {
    "text": "or something like that but the key idea is you agree a contract",
    "start": "1030959",
    "end": "1038240"
  },
  {
    "text": "okay you agree some kind of stable contract that you'll give other people",
    "start": "1038240",
    "end": "1043760"
  },
  {
    "text": "and we talk about this as being necessary coupling right here's the thing right i could build up i could",
    "start": "1043760",
    "end": "1049840"
  },
  {
    "text": "build some software that was completely decoupled if it sat like on my computer in a basement attached to nothing and it",
    "start": "1049840",
    "end": "1055679"
  },
  {
    "text": "would be utterly useless to anybody right so what we have to do is accept that you",
    "start": "1055679",
    "end": "1061360"
  },
  {
    "text": "are going to have some kind of dependency on things upstream on you",
    "start": "1061360",
    "end": "1067760"
  },
  {
    "text": "there's a certain amount of coupling that happens a necessary coupling says actually in order to do our job",
    "start": "1067760",
    "end": "1074400"
  },
  {
    "text": "we have to listen to this information so it's necessary coupling because to",
    "start": "1074400",
    "end": "1080480"
  },
  {
    "text": "collaborate with us we must allow others to take a dependency on us right so we say okay we are going to accept",
    "start": "1080480",
    "end": "1086960"
  },
  {
    "text": "that this contract is a bit rigid that it can't change too often",
    "start": "1086960",
    "end": "1093360"
  },
  {
    "text": "that we the upstream team although we can make internal changes are limited as to the shape the new shapes we can give",
    "start": "1093360",
    "end": "1099520"
  },
  {
    "text": "restaurant by the fact that we have customers of it and we the downstream team have to recognize that you know we",
    "start": "1099520",
    "end": "1106320"
  },
  {
    "text": "have to take a dependency on somebody upstream but we have to take work so this",
    "start": "1106320",
    "end": "1112480"
  },
  {
    "text": "contract becomes quite important right and so that's why in a lot of cases when",
    "start": "1112480",
    "end": "1117679"
  },
  {
    "text": "we talk about apr is what we want to surface to people is you should think about how you design this",
    "start": "1117679",
    "end": "1124240"
  },
  {
    "text": "because it's going to be long lived once it's out there and you have a",
    "start": "1124240",
    "end": "1129280"
  },
  {
    "text": "number of consumers of it it's harder to change than some internal code you can't refactor",
    "start": "1129280",
    "end": "1136480"
  },
  {
    "text": "your api quite as easily right imagine you want to do the whole thing where you've exposed a an id which is",
    "start": "1136480",
    "end": "1142640"
  },
  {
    "text": "effectively an integer because you just picked up the identity field that was being generated for you in sql server",
    "start": "1142640",
    "end": "1148160"
  },
  {
    "text": "you couldn't scale sql server anymore so you moved to dynamo and you decided to you needed a good etcetera presenter and",
    "start": "1148160",
    "end": "1153360"
  },
  {
    "text": "you wanted to put it on a string right how would you do that well what you have to initially do is give new id",
    "start": "1153360",
    "end": "1159679"
  },
  {
    "text": "alongside old id because you have people depending on the old id format of using integer you just put the integer as a",
    "start": "1159679",
    "end": "1165919"
  },
  {
    "text": "string in new id and then you say to everybody please get off your old id when everyone says to",
    "start": "1165919",
    "end": "1171919"
  },
  {
    "text": "you we're off old id you can we're now reading the new id you can now say great now i'm going to start shipping new idea effectively as a good",
    "start": "1171919",
    "end": "1179360"
  },
  {
    "text": "when everyone accepts that you say okay now we're going to retire older ids there's only going to be new id that one",
    "start": "1179360",
    "end": "1184720"
  },
  {
    "text": "goes great then you say now we're going to create id again but it's just going to be a string it's going to be the same as new id and everyone goes great and",
    "start": "1184720",
    "end": "1191200"
  },
  {
    "text": "then you can say now we can get rid of new ideas right it's quite a lot of work so you have to think",
    "start": "1191200",
    "end": "1197520"
  },
  {
    "text": "about these things as being quite long-lived they need a little bit of forethought planning and they probably need a little bit of review typically",
    "start": "1197520",
    "end": "1203120"
  },
  {
    "text": "the best way to review them is to talk to the people who are going to consume it right and any subject experts you have and say hey let's all have a look",
    "start": "1203120",
    "end": "1209919"
  },
  {
    "text": "at my api and figure out if we think we can think what's wrong with it before we actually put it out there right just",
    "start": "1209919",
    "end": "1215280"
  },
  {
    "text": "think about conscious being long lived okay",
    "start": "1215280",
    "end": "1221039"
  },
  {
    "text": "uh habitable versus plant consumer yeah so this is habitability something we can all live with",
    "start": "1221039",
    "end": "1227120"
  },
  {
    "text": "all right so",
    "start": "1227120",
    "end": "1233039"
  },
  {
    "text": "you've figured out that what you actually need to do is not expose your internals somebody else",
    "start": "1233200",
    "end": "1238799"
  },
  {
    "text": "have an api except it's a long-term contract that you can't change easily um and you need to manage basically that",
    "start": "1238799",
    "end": "1245679"
  },
  {
    "text": "contract okay how does anybody else find out about it so let's imagine effectively i am",
    "start": "1245679",
    "end": "1252640"
  },
  {
    "text": "restaurant availability and i decide what i need is an upstream message from somebody basically who on boards",
    "start": "1252640",
    "end": "1258080"
  },
  {
    "text": "restaurants one question would be well where do i find this contract typically",
    "start": "1258080",
    "end": "1264480"
  },
  {
    "text": "in a lot of organizations i hop onto slack and i post a message in some general",
    "start": "1264480",
    "end": "1271280"
  },
  {
    "text": "forum saying anyone know who produces messages for new restaurants who has",
    "start": "1271280",
    "end": "1276320"
  },
  {
    "text": "this this is their favorite technique a few of you here's the other technique which basically is i go to github and i",
    "start": "1276320",
    "end": "1282080"
  },
  {
    "text": "search github for what i think the message might be called and see which team might produce anyone got that",
    "start": "1282080",
    "end": "1287760"
  },
  {
    "text": "a few more github searches than slack people yeah i mean this is very typical right i i've got a contract it exists i've",
    "start": "1287760",
    "end": "1295280"
  },
  {
    "text": "defined one but nobody can find it okay",
    "start": "1295280",
    "end": "1300960"
  },
  {
    "text": "the other problem is the inverse if i have a message and i need to change",
    "start": "1302080",
    "end": "1307760"
  },
  {
    "text": "it and to change that contract and then my first steps were in negotiation with",
    "start": "1307760",
    "end": "1312880"
  },
  {
    "text": "everybody that consumes it how do i find them right to find the producer how do i know who consumes my",
    "start": "1312880",
    "end": "1319120"
  },
  {
    "text": "message again typically someone posts a message saying anyone using this my this message",
    "start": "1319120",
    "end": "1325039"
  },
  {
    "text": "can they get in touch with you want to change it or i troll github saying i wonder if anyone's actually got my message schema",
    "start": "1325039",
    "end": "1331280"
  },
  {
    "text": "as part of their code base all right it's not very effective",
    "start": "1331280",
    "end": "1336000"
  },
  {
    "text": "so we need to document our asynchronous api somewhere right we need some mechanism to document them we need to",
    "start": "1336640",
    "end": "1342799"
  },
  {
    "text": "document our endpoints effectively um it's our contract what do we need what",
    "start": "1342799",
    "end": "1348080"
  },
  {
    "text": "do we need to document well we're going to need to document the channel what's the channel so a channel",
    "start": "1348080",
    "end": "1353600"
  },
  {
    "text": "is when messaging terms really just an abstract idea it's the virtual pipe that",
    "start": "1353600",
    "end": "1358960"
  },
  {
    "text": "that connects sender and receiver and we already use it for a whole range of concepts but it's really saying there is",
    "start": "1358960",
    "end": "1366080"
  },
  {
    "text": "something over which we can send messages that is somehow addressable so in kafka it's your topic right in",
    "start": "1366080",
    "end": "1373520"
  },
  {
    "text": "rabbit mq it's your routine key it's sns it's a topic as well right and that it says hey i want to send",
    "start": "1373520",
    "end": "1380159"
  },
  {
    "text": "messages to or from this thing so we need to understand what the channel is so you know where to find it",
    "start": "1380159",
    "end": "1386080"
  },
  {
    "text": "right way to protocol right if it's going to be kafka is it",
    "start": "1386080",
    "end": "1392320"
  },
  {
    "text": "going to be sns right ss is ready just http with semantics right",
    "start": "1392320",
    "end": "1397440"
  },
  {
    "text": "is it going to be mqp how are we sending this stuff what do you need to do to listen to the",
    "start": "1397440",
    "end": "1403919"
  },
  {
    "text": "things that i'm sending and then we need to say well i am the",
    "start": "1403919",
    "end": "1410799"
  },
  {
    "text": "sender right i am this app probably i might be useful to know who",
    "start": "1410799",
    "end": "1416080"
  },
  {
    "text": "the people are that own the app right which team are there any contact details um",
    "start": "1416080",
    "end": "1421760"
  },
  {
    "text": "do they have a repo somewhere and who subscribes to it right but you know they've got a documentation somewhere",
    "start": "1421760",
    "end": "1428240"
  },
  {
    "text": "saying hey this my app subscribes that message because that tells us",
    "start": "1428240",
    "end": "1434480"
  },
  {
    "text": "what's going on so endpoints as you remember is the",
    "start": "1434480",
    "end": "1440799"
  },
  {
    "text": "definition we had earlier placement message sent or received that they tell us where messages should be sent how they",
    "start": "1440799",
    "end": "1446880"
  },
  {
    "text": "should be sent and what they look like right so we've been discussing what should they look like",
    "start": "1446880",
    "end": "1453279"
  },
  {
    "text": "we're saying basically there should be a contract which is long-lived and we're saying also",
    "start": "1453279",
    "end": "1458559"
  },
  {
    "text": "we're discussing how they should be sent protocols like kafka or mqp and where they should be sent so channels right",
    "start": "1458559",
    "end": "1467520"
  },
  {
    "text": "okay so document a contract for an endpoint an endpoint for a message should be sent how they should be blah blah okay",
    "start": "1468240",
    "end": "1474240"
  },
  {
    "text": "so the message is the data that we send or receive is our contract effectively and it tends to have two things the",
    "start": "1474240",
    "end": "1480720"
  },
  {
    "text": "metadata the headers that we send so generally uh when we send something we need metadata",
    "start": "1480720",
    "end": "1487200"
  },
  {
    "text": "which really tells us how to process the message that's in flight it doesn't tell you what the data is that the",
    "start": "1487200",
    "end": "1493120"
  },
  {
    "text": "domain cares about but it says things to you like what is the id of this is there another message it correlates",
    "start": "1493120",
    "end": "1499360"
  },
  {
    "text": "with is it if it's a large message it's been broken up into a number of pieces is this basically do i expect to reply",
    "start": "1499360",
    "end": "1506640"
  },
  {
    "text": "if so do i tell you where to reply to me etcetera so metadata about processing the message",
    "start": "1506640",
    "end": "1513039"
  },
  {
    "text": "and then effectively the body which tells us essentially what is the actual content of the message we need to",
    "start": "1513039",
    "end": "1518720"
  },
  {
    "text": "document both usually the channel right where the message is going to flow the",
    "start": "1518720",
    "end": "1524640"
  },
  {
    "text": "address and the binding and the binding says there may well be information we need to",
    "start": "1524640",
    "end": "1531360"
  },
  {
    "text": "know as part of this protocol which tells us how to send messages uh to and from",
    "start": "1531360",
    "end": "1537760"
  },
  {
    "text": "this end point okay it may tell us um how to basically",
    "start": "1537760",
    "end": "1544000"
  },
  {
    "text": "uh authenticate ourselves in order to communicate with basically this endpoint right",
    "start": "1544000",
    "end": "1549600"
  },
  {
    "text": "it may tell us um [Music] where the uh",
    "start": "1549600",
    "end": "1555039"
  },
  {
    "text": "broker is that we need to connect to uh in terms of it's basically address in order to actually uh communicate over",
    "start": "1555039",
    "end": "1561039"
  },
  {
    "text": "this channel so there's technical information that we have to have alongside that um uh and it",
    "start": "1561039",
    "end": "1567760"
  },
  {
    "text": "may also have things like you know are we a binary we plain text all that kind of information",
    "start": "1567760",
    "end": "1574799"
  },
  {
    "text": "and in principle we can have multiple binaries for the same channel so in principle we might actually say hey we talk about basically a new",
    "start": "1574799",
    "end": "1581760"
  },
  {
    "text": "restaurant being created and we make that available for amqp and kafka and",
    "start": "1581760",
    "end": "1586880"
  },
  {
    "text": "this talk's not really about why we might want to do that but be aware that's possible",
    "start": "1586880",
    "end": "1593120"
  },
  {
    "text": "all right so let's say we want to describe endpoints how might we do that",
    "start": "1593120",
    "end": "1601120"
  },
  {
    "text": "okay so async api",
    "start": "1601120",
    "end": "1606240"
  },
  {
    "text": "is a emerging standard for documenting our endpoints who here",
    "start": "1606240",
    "end": "1613919"
  },
  {
    "text": "has used open api yeah quite a few of you so really async",
    "start": "1613919",
    "end": "1619440"
  },
  {
    "text": "api is just open api but for asynchronous apis instead",
    "start": "1619440",
    "end": "1624960"
  },
  {
    "text": "okay and uh open api was a direct inspiration used by the async api",
    "start": "1624960",
    "end": "1631520"
  },
  {
    "text": "developers initially although it's it's moving on from that so um uh it's looking at the bottom open",
    "start": "1631520",
    "end": "1638720"
  },
  {
    "text": "governance so async api has become part of the linux foundation so essentially it is it is owned and controlled by a",
    "start": "1638720",
    "end": "1645440"
  },
  {
    "text": "foundation effectively now so you have some kind of like uh continuance it has a community they're actually a very",
    "start": "1645440",
    "end": "1652000"
  },
  {
    "text": "welcoming community they have you can get invited to their regular kind of stand-up meetings about effectively",
    "start": "1652000",
    "end": "1658159"
  },
  {
    "text": "what's happening in their world or looking at new version specification they're currently working on three",
    "start": "1658159",
    "end": "1663600"
  },
  {
    "text": "there's a slack channel they are very very welcoming it is early enough in the lifespan of 18 kpi there's a small",
    "start": "1663600",
    "end": "1670399"
  },
  {
    "text": "enough uh community people coming involved the um you can get to know people in the",
    "start": "1670399",
    "end": "1676480"
  },
  {
    "text": "community quite easily and what they produce is a specification which is specification which says here's",
    "start": "1676480",
    "end": "1683360"
  },
  {
    "text": "how effectively you should document your apis and they also effectively produce",
    "start": "1683360",
    "end": "1691520"
  },
  {
    "text": "tooling which essentially lets you work with apis documented in that style",
    "start": "1692000",
    "end": "1698559"
  },
  {
    "text": "to produce new effects and we'll talk about that a little bit more later on towards the end part that in your head",
    "start": "1698559",
    "end": "1703840"
  },
  {
    "text": "that you can basically build tooling off it but we'll come back to that later all right",
    "start": "1703840",
    "end": "1709120"
  },
  {
    "text": "okay so generally what you do with async api is you document an app what do you",
    "start": "1709120",
    "end": "1715200"
  },
  {
    "text": "mean by an app well we just mean you know some uh process that effectively you intend to",
    "start": "1715200",
    "end": "1721039"
  },
  {
    "text": "run that has some kind of functionality and generally your app",
    "start": "1721039",
    "end": "1726080"
  },
  {
    "text": "has a role and it may have more than one role and it can act as a producer as a consumer or both so",
    "start": "1726080",
    "end": "1734159"
  },
  {
    "text": "it's a producer it's sending messages if it's a consumer it's consumed messages often absolutely both right i receive",
    "start": "1734159",
    "end": "1739919"
  },
  {
    "text": "messages i do some work and i generate new ones so i'm both a producer and a consumer and we document what that",
    "start": "1739919",
    "end": "1746080"
  },
  {
    "text": "individual app produces and consumes okay we send messages over channels and they",
    "start": "1746080",
    "end": "1752480"
  },
  {
    "text": "are hosted on a server um uh and maybe more than one channel so the channel must be addressable in other",
    "start": "1752480",
    "end": "1758240"
  },
  {
    "text": "words we have to have to give the channel a unique identifier of some sort so i know effectively that you are",
    "start": "1758240",
    "end": "1763520"
  },
  {
    "text": "talking about this channel or post another channel specification right if i'm receiving one and sending two that",
    "start": "1763520",
    "end": "1769760"
  },
  {
    "text": "might be three channels right so generally channels they've on a server",
    "start": "1769760",
    "end": "1774880"
  },
  {
    "text": "um it's a little bit of a historic thing channels living on a server because generally with pub sub we don't really",
    "start": "1774880",
    "end": "1781840"
  },
  {
    "text": "care so much about the server we we have a notion really more of effectively of a broker that we might care about um and",
    "start": "1781840",
    "end": "1788640"
  },
  {
    "text": "the server abstraction tends to think more in terms of hey i am a thing",
    "start": "1788640",
    "end": "1794000"
  },
  {
    "text": "hosting an api whereas really in pub sub land in messaging we think more of",
    "start": "1794000",
    "end": "1799440"
  },
  {
    "text": "hey here is a channel i can subscribe to so three will fix that slightly um but",
    "start": "1799440",
    "end": "1804640"
  },
  {
    "text": "for now server what we tend to use it for in most pub sub models is where is the broker that i'm using",
    "start": "1804640",
    "end": "1811440"
  },
  {
    "text": "okay there's a message effectively definition you have to have a payload or a header",
    "start": "1811440",
    "end": "1816640"
  },
  {
    "text": "um async api is reasonably open to how you choose to define",
    "start": "1816640",
    "end": "1823039"
  },
  {
    "text": "the contract that you're going to basically produce in your api so by default you can just use json schema to",
    "start": "1823039",
    "end": "1828720"
  },
  {
    "text": "say this is what my message looks like but it also supports you choosing to use things like avro those of you who don't",
    "start": "1828720",
    "end": "1835600"
  },
  {
    "text": "know what avro is it's a standard that came out of the kafka community for defining basically a schemer it has both",
    "start": "1835600",
    "end": "1840720"
  },
  {
    "text": "a binary and a plain text format but you can also use effectively protobuf so you can use any other kind",
    "start": "1840720",
    "end": "1847120"
  },
  {
    "text": "of major players in terms of basically schema definition for things you're sending um",
    "start": "1847120",
    "end": "1853360"
  },
  {
    "text": "and a channel also basically has a protocol by which matches your exchange so kafka or sns etc and what happens is",
    "start": "1853360",
    "end": "1860799"
  },
  {
    "text": "you define a binding at multiple levels inside async you'll see this more clean",
    "start": "1860799",
    "end": "1865840"
  },
  {
    "text": "a second async api to define how essentially that protocol is applied to",
    "start": "1865840",
    "end": "1871440"
  },
  {
    "text": "either channel definitions to how messages work or effectively to how the server is",
    "start": "1871440",
    "end": "1876799"
  },
  {
    "text": "constructed we'll see that so all right so what does the document structure i",
    "start": "1876799",
    "end": "1881919"
  },
  {
    "text": "sync api look like so you have basically an async api object is the root object it says kind of document object model",
    "start": "1881919",
    "end": "1887600"
  },
  {
    "text": "all things live off that all right below that we have an info object which is meta specification this",
    "start": "1887600",
    "end": "1893440"
  },
  {
    "text": "is where you effectively say my team built this this is how you get in touch with us um uh we are the owners",
    "start": "1893440",
    "end": "1900720"
  },
  {
    "text": "effectively of this particular specification all right and so if you are a producer of a message they would",
    "start": "1900720",
    "end": "1907279"
  },
  {
    "text": "someone would then know you're the team effectively that i need to talk to about basically the stuff that's been produced if you're a consumer",
    "start": "1907279",
    "end": "1913840"
  },
  {
    "text": "vice versa right it has a service object which is basically a connection just for the",
    "start": "1913840",
    "end": "1919120"
  },
  {
    "text": "server so essentially depending on the role this may affect you this may be um",
    "start": "1919120",
    "end": "1924960"
  },
  {
    "text": "uh your app could actually be acting as a server um in some of the models and other models but once potential",
    "start": "1924960",
    "end": "1931360"
  },
  {
    "text": "messaging tends to be basically just the address of the brokers that's where your kafka broker is that's where your",
    "start": "1931360",
    "end": "1936480"
  },
  {
    "text": "private mq brokers etc you can have multiple servers so you can effectively say here is my production instance here",
    "start": "1936480",
    "end": "1943600"
  },
  {
    "text": "is my qa instance here is my local dev instance and you can list them kind of",
    "start": "1943600",
    "end": "1949200"
  },
  {
    "text": "all so that effectively people can figure out which one they should they should be talking to all right",
    "start": "1949200",
    "end": "1954880"
  },
  {
    "text": "a channels object which basically says okay what are we sending and what are we",
    "start": "1954880",
    "end": "1959919"
  },
  {
    "text": "sending over it so overall the channel subject has a name and says essentially the name of this channel which is actually just",
    "start": "1959919",
    "end": "1966159"
  },
  {
    "text": "disambiguated from other channels and maps well to say a topic on kafka for",
    "start": "1966159",
    "end": "1971279"
  },
  {
    "text": "example beneath that is a channel item an operation object which is a bit complicated",
    "start": "1971279",
    "end": "1977200"
  },
  {
    "text": "operation objects essentially say am i sending or am i receiving on this",
    "start": "1977200",
    "end": "1982640"
  },
  {
    "text": "channel and what am i sending or receiving what is the message there's also effectively an operation id",
    "start": "1982640",
    "end": "1990000"
  },
  {
    "text": "which kind of names the operation which is mainly used for things like code generation right",
    "start": "1990000",
    "end": "1996159"
  },
  {
    "text": "now uh there's also a components object and the components object lets you kind of",
    "start": "1996159",
    "end": "2002080"
  },
  {
    "text": "say actually rather than defining that thing in line i'd like to put it in my components section",
    "start": "2002080",
    "end": "2008159"
  },
  {
    "text": "and typically what that's used for is a message definition right let's put my message definition in here rather than",
    "start": "2008159",
    "end": "2014720"
  },
  {
    "text": "in lining it inside the actual definition of the channel okay",
    "start": "2014720",
    "end": "2020320"
  },
  {
    "text": "and tags so i can tag a given specification in case that helps me organize it and make it more searchable et cetera",
    "start": "2020320",
    "end": "2027600"
  },
  {
    "text": "so uh async object has an id means you need to convert identifier basically the top level that's all it really requires so",
    "start": "2028799",
    "end": "2035279"
  },
  {
    "text": "here i'm using an example from my open source project saying here's a typical song project we use i'm just going to",
    "start": "2035279",
    "end": "2040480"
  },
  {
    "text": "give it an id here's an info object um so again i'm just using one from my",
    "start": "2040480",
    "end": "2047600"
  },
  {
    "text": "source project you can see there's the name of the project the url where you're going to find us how you email us for support",
    "start": "2047600",
    "end": "2053599"
  },
  {
    "text": "license which is probably a bit weird internally right you just probably ignore that",
    "start": "2053599",
    "end": "2058638"
  },
  {
    "text": "internally but a description of the app which is very useful a title version number of your your version of",
    "start": "2058639",
    "end": "2064960"
  },
  {
    "text": "specification right so all very useful and some tags uh so we can help find it",
    "start": "2064960",
    "end": "2071440"
  },
  {
    "text": "right service object all i'm doing here is defining a local one but you could obviously define production et cetera",
    "start": "2071440",
    "end": "2077200"
  },
  {
    "text": "i'm just telling you where to find the broker that i'm going to use and in my case here i'm going to use kafka and i'm",
    "start": "2077200",
    "end": "2082960"
  },
  {
    "text": "saying effectively you can find the instance that we're that i'm running my local one at localhost 9092 right and obviously for a",
    "start": "2082960",
    "end": "2089358"
  },
  {
    "text": "production system you'd have the actual production url of your kafka cluster",
    "start": "2089359",
    "end": "2095599"
  },
  {
    "text": "this then is a channel so you can see it's called for example greeting here in the top corner ignore",
    "start": "2095599",
    "end": "2101040"
  },
  {
    "text": "the scribe for the second we'll come back to that and then effectively just imagine we're saying there's an operation performing on that channel",
    "start": "2101040",
    "end": "2107440"
  },
  {
    "text": "here's a summary of the operation here's a description of which is longer and here's a message the message you know",
    "start": "2107440",
    "end": "2112880"
  },
  {
    "text": "says a hash ref we'll come back to that saying but all it means is go and look in this part in the",
    "start": "2112880",
    "end": "2118160"
  },
  {
    "text": "components section of this definition rather than in line to find what the message looks like it just",
    "start": "2118160",
    "end": "2123599"
  },
  {
    "text": "makes it clear cleaner all right so we're saying just in the summary",
    "start": "2123599",
    "end": "2129520"
  },
  {
    "text": "we send a greeting here and the description says hey this is how we send greeting to another service and we call",
    "start": "2129520",
    "end": "2135359"
  },
  {
    "text": "the operation send greeting so obviously what we're defining is we send something on a channel",
    "start": "2135359",
    "end": "2141680"
  },
  {
    "text": "notice we use the word subscribe that's a bit weird right why is it subscribe",
    "start": "2141680",
    "end": "2146960"
  },
  {
    "text": "okay so this is anomaly that still exists in 18 kpi 2 which will get fixed",
    "start": "2146960",
    "end": "2152880"
  },
  {
    "text": "and that is because originally when it was built uh it was built by people dealing with things like web sockets the you could",
    "start": "2152880",
    "end": "2159599"
  },
  {
    "text": "the server was kind of a role your app might be in and if you were in the role of a server",
    "start": "2159599",
    "end": "2165839"
  },
  {
    "text": "you were exposing operations to people and one of those operations was you can subscribe to me because i send messages",
    "start": "2165839",
    "end": "2174079"
  },
  {
    "text": "right and when they flip that over for a consumer they're like well i guess the consumer",
    "start": "2174079",
    "end": "2180880"
  },
  {
    "text": "you can publish to them and actually in some ways that kind of works right if i think about how sns and sqs work right i",
    "start": "2180880",
    "end": "2187680"
  },
  {
    "text": "i i do as sqs give you permission to publish to my queue from sns right",
    "start": "2187680",
    "end": "2193760"
  },
  {
    "text": "but it's a bit weird for most of us so i'll show you later but and with three it gets fixed and they're just going to use the term center and receive to mean",
    "start": "2193760",
    "end": "2200320"
  },
  {
    "text": "what we would understand to mean but when you come across this first first of all you will do a little bit of double taking go",
    "start": "2200320",
    "end": "2206480"
  },
  {
    "text": "that doesn't make any sense just history about where the spec came from early versions",
    "start": "2206480",
    "end": "2213280"
  },
  {
    "text": "ref so ref just lets you basically say hey this lives elsewhere um you can say",
    "start": "2213280",
    "end": "2218400"
  },
  {
    "text": "it lives in the same file by using a page fragment indicator um to say effectively go look in the component",
    "start": "2218400",
    "end": "2223520"
  },
  {
    "text": "section that's where my definition of greetings lives more usefully you can say it lives in another",
    "start": "2223520",
    "end": "2229200"
  },
  {
    "text": "file why is this useful because typically with a message contract you'll",
    "start": "2229200",
    "end": "2234640"
  },
  {
    "text": "both want to have have it for the producer saying i send this and for the",
    "start": "2234640",
    "end": "2239680"
  },
  {
    "text": "consumer saying this is what i read now you can go to the effort of saying actually producer and consumer are not",
    "start": "2239680",
    "end": "2246000"
  },
  {
    "text": "necessarily the same because the consumer mates used to consume only a fraction of that message they may only",
    "start": "2246000",
    "end": "2251599"
  },
  {
    "text": "want four of the five fields they could choose to define that which lets you get a very simple version what we call",
    "start": "2251599",
    "end": "2257359"
  },
  {
    "text": "consumer driven contracts which lets you say well if i drop that field do any of",
    "start": "2257359",
    "end": "2263359"
  },
  {
    "text": "my consumers actually use it i haven't seen many folks actually do that most folks are just like it'd be",
    "start": "2263359",
    "end": "2270079"
  },
  {
    "text": "nice to get everyone to document their endpoints and if the producer's gonna tell us what their message is the consumer will just say that's what i use",
    "start": "2270079",
    "end": "2276880"
  },
  {
    "text": "right so uh sometimes with this stuff it's you're better off getting to to",
    "start": "2276880",
    "end": "2281920"
  },
  {
    "text": "phase one um with most teams than you are effectively worrying about wouldn't it be nice to have a proper cdc over it",
    "start": "2281920",
    "end": "2289520"
  },
  {
    "text": "all right so this is what a component looks like with a message inside it we've done by ref you can see essentially the message",
    "start": "2289520",
    "end": "2296160"
  },
  {
    "text": "got a name we have a whole load of effectively fields more interestingly perhaps we have these",
    "start": "2296160",
    "end": "2302560"
  },
  {
    "text": "traits and payload so all we're saying is that this is the message message has a payload and we're effectively breaking",
    "start": "2302560",
    "end": "2308800"
  },
  {
    "text": "out to make it easier to read in the same component space we've defined an area called schemas and",
    "start": "2308800",
    "end": "2314960"
  },
  {
    "text": "we're going to put our actual message our payload schema into there traits",
    "start": "2314960",
    "end": "2320720"
  },
  {
    "text": "traits basically say hey there's something i want you to effectively merge in",
    "start": "2320720",
    "end": "2326800"
  },
  {
    "text": "right and typically quite often a major use case for this is things like headers so you can define somewhere in a file um",
    "start": "2326800",
    "end": "2333440"
  },
  {
    "text": "a set of common headers that you use without your in your enterprise when you're sending messages so maybe you",
    "start": "2333440",
    "end": "2339040"
  },
  {
    "text": "effectively want to define that you use we'll talk about it later the cloud event specification you could write up",
    "start": "2339040",
    "end": "2344720"
  },
  {
    "text": "traits for cloud events and you bring them in here and you just say merge those properties into my messages right",
    "start": "2344720",
    "end": "2350160"
  },
  {
    "text": "that's what trades me so",
    "start": "2350160",
    "end": "2355599"
  },
  {
    "text": "going back to what we were saying earlier about how we define endpoints",
    "start": "2355599",
    "end": "2360880"
  },
  {
    "text": "right our async api objects effectively in our info objects are essentially describing an endpoint the metadata",
    "start": "2360880",
    "end": "2367520"
  },
  {
    "text": "about it our channel object effectively a little bit the information some of the information there the metadata about um",
    "start": "2367520",
    "end": "2375599"
  },
  {
    "text": "what's the name of the operation etc effectively what am i performing to some extent our metadata about the",
    "start": "2375599",
    "end": "2381680"
  },
  {
    "text": "end point um but there's also information really about the channel right but that's a bit",
    "start": "2381680",
    "end": "2387040"
  },
  {
    "text": "of a mix between server and the channels object the server is effectively the location that you need to go to to talk",
    "start": "2387040",
    "end": "2392640"
  },
  {
    "text": "to the channel and the channel is effectively the name of the particular topic or the routine key whatever your",
    "start": "2392640",
    "end": "2397839"
  },
  {
    "text": "pla your broker of choice gives you and the binding information is spread across servers channels and operation",
    "start": "2397839",
    "end": "2403839"
  },
  {
    "text": "objects but we can fulfill the kind of criteria that we established earlier right um ac kpi 3 i mentioned",
    "start": "2403839",
    "end": "2411680"
  },
  {
    "text": "that earlier so the nice thing about ac kpi 3 is they've they're addressing a few of these non-sequentials ac kpi 2 is",
    "start": "2411680",
    "end": "2418000"
  },
  {
    "text": "really i i would think it's probably early adopters or late adopters rather whereas 18 kpi 3 i would hope would be",
    "start": "2418000",
    "end": "2424400"
  },
  {
    "text": "the one to go for early majority and you can see under operations what we now have is",
    "start": "2424400",
    "end": "2431839"
  },
  {
    "text": "we say um this is this operation id refers to an action which in our case is",
    "start": "2431839",
    "end": "2437119"
  },
  {
    "text": "receive right but there's another one called send so i'm actually saying what do i do",
    "start": "2437119",
    "end": "2442800"
  },
  {
    "text": "not basically what do i expose and then a description etc on the binding and channels with their messages",
    "start": "2442800",
    "end": "2449760"
  },
  {
    "text": "get lifted out so i can define a channel like for example restaurant on boarded",
    "start": "2449760",
    "end": "2455440"
  },
  {
    "text": "with this message what is the restaurant onboarded message look like and i can define",
    "start": "2455440",
    "end": "2460640"
  },
  {
    "text": "for a given app am i a sender or a receiver to that channel that lets us lift channel definitions",
    "start": "2460640",
    "end": "2466800"
  },
  {
    "text": "with their messages out into a separate file which means we can say okay when i'm",
    "start": "2466800",
    "end": "2472319"
  },
  {
    "text": "documenting what i've got i want to document that i've got channels that live on a broker",
    "start": "2472319",
    "end": "2477520"
  },
  {
    "text": "right and i have apps that essentially either send or receive on that channel so three is a little bit better at",
    "start": "2477520",
    "end": "2484079"
  },
  {
    "text": "thinking about how we actually structure pub sub applications generally",
    "start": "2484079",
    "end": "2489920"
  },
  {
    "text": "okay so um if i'm going to use async api uh there's a nice thing called product",
    "start": "2492960",
    "end": "2498960"
  },
  {
    "text": "it's slightly sliced off at the top async api studio async api studio lets me write my yaml it's also available in",
    "start": "2498960",
    "end": "2505359"
  },
  {
    "text": "json json yaml the same thing right um on the left hand side uh and then",
    "start": "2505359",
    "end": "2511359"
  },
  {
    "text": "effectively i see on the right hand side a generated html definition which",
    "start": "2511359",
    "end": "2516400"
  },
  {
    "text": "provides if you like out of the box here's some documentation that's viewable by human beings who don't want",
    "start": "2516400",
    "end": "2522079"
  },
  {
    "text": "to read yammer okay um we also because we nowadays that's",
    "start": "2522079",
    "end": "2527520"
  },
  {
    "text": "you know path of course have basically a plug-in for visual code which lets you",
    "start": "2527520",
    "end": "2532640"
  },
  {
    "text": "essentially do exactly the same thing so basically we'll recognize async api yaml and it will generate a preview of the",
    "start": "2532640",
    "end": "2538960"
  },
  {
    "text": "html that you would generate if you used that awesome um",
    "start": "2538960",
    "end": "2544319"
  },
  {
    "text": "it has increasing support across a range of enterprise-friendly tools you know what backstage is",
    "start": "2544319",
    "end": "2551040"
  },
  {
    "text": "a few of you backstage comes out of spotify it's basically their internal tool for",
    "start": "2551040",
    "end": "2558240"
  },
  {
    "text": "documenting things that developers want to share with each other including documentation of endpoints etc and apis",
    "start": "2558240",
    "end": "2566160"
  },
  {
    "text": "it'll also do some code generation stuff for you so it supports async api effectively alongside open api and",
    "start": "2566160",
    "end": "2573119"
  },
  {
    "text": "graphql and grpc and everything else they support but 18 kpis are kind of first class citizen now in in backstage",
    "start": "2573119",
    "end": "2580079"
  },
  {
    "text": "so that's if you have a whole load of these and you want to basically host them somewhere that's one way of doing",
    "start": "2580079",
    "end": "2585359"
  },
  {
    "text": "it there are a whole range of tools appearing which begin to support acn kpi",
    "start": "2585359",
    "end": "2592079"
  },
  {
    "text": "so i'm going to pick a couple of them because i want to give you an impression of an ecosystem that's emerging around",
    "start": "2592079",
    "end": "2597920"
  },
  {
    "text": "it and why asian kpi's worth buying into over just it's a this thing that's basically no one knows",
    "start": "2597920",
    "end": "2603680"
  },
  {
    "text": "about apart from me and so this effectively is called keep it keeper has an interesting thing cupid",
    "start": "2603680",
    "end": "2608800"
  },
  {
    "text": "says well given you have effectively got apps that have send and receive i can",
    "start": "2608800",
    "end": "2614480"
  },
  {
    "text": "build a graph of those so i can graph out the nodes which show you effectively what's talking to what",
    "start": "2614480",
    "end": "2620720"
  },
  {
    "text": "inside your enterprise right just use a react to do that the slight limitation today",
    "start": "2620720",
    "end": "2626560"
  },
  {
    "text": "um and it's feedback that the 18k player community has but i'm not sure it'll be addressed in three",
    "start": "2626560",
    "end": "2632560"
  },
  {
    "text": "is that we don't really know if your app receives foo and produces",
    "start": "2632560",
    "end": "2638079"
  },
  {
    "text": "bar and bars whether there's a connection between foo and either bar or bars in other words if",
    "start": "2638079",
    "end": "2644560"
  },
  {
    "text": "we flow through thinking of basically some kind of workflow when i get through i do some action and i and i and i",
    "start": "2644560",
    "end": "2651119"
  },
  {
    "text": "basically raise bar or when i flow through i i i take some kind of action and in the good case i",
    "start": "2651119",
    "end": "2657200"
  },
  {
    "text": "raise barb and error ray baz there's no way of understanding whether the messages that you raise aren't anyway",
    "start": "2657200",
    "end": "2663280"
  },
  {
    "text": "catch the message you receive as though there's no tracing right that's an obstacle for all of us in",
    "start": "2663280",
    "end": "2668960"
  },
  {
    "text": "event space but uh not that anyone else has solved it yet but it's still a need",
    "start": "2668960",
    "end": "2674000"
  },
  {
    "text": "okay talk about how tracing helps later this is event catalogue this is the come we're all everyone's a bit excited about",
    "start": "2674000",
    "end": "2680720"
  },
  {
    "text": "the minute um it's another open source project uh async api it's someone said we need",
    "start": "2680720",
    "end": "2687040"
  },
  {
    "text": "to build catalogues for our events we've got to visualize them we better document our apis it was i think",
    "start": "2687040",
    "end": "2693040"
  },
  {
    "text": "an independent of async api project but it's support chasing kpi and i think the ac kpi community is very excited about",
    "start": "2693040",
    "end": "2699680"
  },
  {
    "text": "it and it's a really nice tool for effectively um adding your apis in visualizing basically how they talk to",
    "start": "2699680",
    "end": "2706079"
  },
  {
    "text": "each other one we're looking at quite aggressively it's early days for it but we've been",
    "start": "2706079",
    "end": "2712079"
  },
  {
    "text": "engaging with the maintainer who's very proactive and giving some feedback on",
    "start": "2712079",
    "end": "2719838"
  },
  {
    "text": "stuff that we need in it but it's looking very nice and you get these nice visualizations which certainly helps",
    "start": "2719920",
    "end": "2726640"
  },
  {
    "text": "okay describing contracts so there are emerging standards for this",
    "start": "2726640",
    "end": "2734000"
  },
  {
    "text": "section of the contract with an async api i said async api the box is default is json schema there are some emerging",
    "start": "2734000",
    "end": "2739440"
  },
  {
    "text": "standards one of the most interesting ones is cloud events cloud events",
    "start": "2739440",
    "end": "2745200"
  },
  {
    "text": "documents metadata not payloads metadata right",
    "start": "2745200",
    "end": "2751359"
  },
  {
    "text": "and it comes mainly out of vendors wanting to basically agree a common standard for metadata for events so if",
    "start": "2751359",
    "end": "2758400"
  },
  {
    "text": "you are in say azure and listening to platform events they have basically a",
    "start": "2758400",
    "end": "2764160"
  },
  {
    "text": "payload but they have a set of headers right and the idea is across basically various platforms they wanted to agree",
    "start": "2764160",
    "end": "2771680"
  },
  {
    "text": "what the header structures would look like for events that they're raising so that tooling effectively could listen to",
    "start": "2771680",
    "end": "2776720"
  },
  {
    "text": "et cetera apart from aws he doesn't want to be involved because they're the market leader and you know open standards um but",
    "start": "2776720",
    "end": "2784319"
  },
  {
    "text": "uh can events effectively say what should ahead look like right cloud events are interested in events",
    "start": "2784319",
    "end": "2790880"
  },
  {
    "text": "and not commands what is the difference uh okay so events are facts and commands are",
    "start": "2790880",
    "end": "2797839"
  },
  {
    "text": "instructions an event is i am thirsty i could really do with a cup of tea or",
    "start": "2797839",
    "end": "2803119"
  },
  {
    "text": "just i am thirsty would be an event right a command is please make me a cup of tea",
    "start": "2803119",
    "end": "2810079"
  },
  {
    "text": "right that's the difference generally with a command we probably expect to reply",
    "start": "2810079",
    "end": "2816800"
  },
  {
    "text": "right there are fire and forget commands but generally we tend to reply so far and forget the problem would be please make me a cup of tea and effectively i",
    "start": "2816800",
    "end": "2823280"
  },
  {
    "text": "know what happened but generally i'm i'm expecting a cup of tea or someone's saying yeah i'll get get your cup of tea",
    "start": "2823280",
    "end": "2829119"
  },
  {
    "text": "right events are one way in the all the time they just say something happened i don't",
    "start": "2829119",
    "end": "2834160"
  },
  {
    "text": "expect a response right later on i might receive a signal that relates to some workflow but i don't",
    "start": "2834160",
    "end": "2840559"
  },
  {
    "text": "expect a response with an event events don't know their subscribers for",
    "start": "2840559",
    "end": "2846079"
  },
  {
    "text": "that reason events are raised into the ether in case anyone cares about them but i don't really know who they are",
    "start": "2846079",
    "end": "2852240"
  },
  {
    "text": "commands always tend to have a known receiver right i know who the person that makes tears and i'm going to",
    "start": "2852240",
    "end": "2857599"
  },
  {
    "text": "address them as opposed to anybody else because that's how i get my cup of tea",
    "start": "2857599",
    "end": "2863040"
  },
  {
    "text": "and events have zero to many subscribers right you may have no subscribers you may be raising events and no one cares",
    "start": "2863760",
    "end": "2870400"
  },
  {
    "text": "um uh commands tend to have one one one subscriber the person i'm talking to who's going to carry out this operation",
    "start": "2870400",
    "end": "2876960"
  },
  {
    "text": "i'm asking for right so typically when you have workflows where effectively",
    "start": "2876960",
    "end": "2882480"
  },
  {
    "text": "you know there's another step which someone has to do you too often before you can complete your step you send them",
    "start": "2882480",
    "end": "2888800"
  },
  {
    "text": "a command if it's like i've got some work and when i'm done with it i'm done and i don't really care what happens next that's an",
    "start": "2888800",
    "end": "2894880"
  },
  {
    "text": "event right so cloud events really only supports the information on the right hand side so",
    "start": "2894880",
    "end": "2901599"
  },
  {
    "text": "it's not going to give you information like what's the reply to header and things like that right it doesn't want to do that it just wants to say i care",
    "start": "2901599",
    "end": "2908000"
  },
  {
    "text": "about events because a lot of its cases optimizing for platform events coming from uh cloud providers",
    "start": "2908000",
    "end": "2916160"
  },
  {
    "text": "yeah okay so when we are talking about cloud events we we say event consists of metadata",
    "start": "2917520",
    "end": "2924400"
  },
  {
    "text": "payload the metadata which we care about doesn't tell us anything about the payload has required an optional attributes and",
    "start": "2924400",
    "end": "2930480"
  },
  {
    "text": "cloud events so the required events are an id a source who's sending the message a",
    "start": "2930480",
    "end": "2935599"
  },
  {
    "text": "spec version which version of cloud events am i going to does my basically attributes come from",
    "start": "2935599",
    "end": "2941440"
  },
  {
    "text": "and a type which is the name plus version so greeting v1 greeting v2 base says what is my message and which",
    "start": "2941440",
    "end": "2946880"
  },
  {
    "text": "version message is it all in one it has a data content type it says when",
    "start": "2946880",
    "end": "2952240"
  },
  {
    "text": "you look at the payload what what what is it is it plain text is it binary right",
    "start": "2952240",
    "end": "2958240"
  },
  {
    "text": "and a schema and it says if you want to know what the payload looks like you should go here and that's where the",
    "start": "2958240",
    "end": "2963760"
  },
  {
    "text": "payload is defined but it has says nothing about how that payload is defined it just says there's a",
    "start": "2963760",
    "end": "2968960"
  },
  {
    "text": "definition over here and you can put that in right and there are optional attributes those two data type of schema you don't have to have those for cloud",
    "start": "2968960",
    "end": "2975200"
  },
  {
    "text": "events all right subject which qualifies the source that says what is this about",
    "start": "2975200",
    "end": "2981520"
  },
  {
    "text": "right and a time when did i send it right pretty obvious okay",
    "start": "2981520",
    "end": "2986559"
  },
  {
    "text": "obviously nothing about data so cloud events can be basically binary",
    "start": "2986559",
    "end": "2991599"
  },
  {
    "text": "or structured um if you thought publish and subscribe was a bit confusing this is even worse",
    "start": "2991599",
    "end": "2999040"
  },
  {
    "text": "right so the cloud events basically binary and structured is nothing to do with whether you are sending information",
    "start": "2999040",
    "end": "3005839"
  },
  {
    "text": "in binary or kind of plain text format what they mean by that is binary says oh",
    "start": "3005839",
    "end": "3011520"
  },
  {
    "text": "the protocol i'm using has some idea of metadata of headers for",
    "start": "3011520",
    "end": "3017119"
  },
  {
    "text": "messages just use that structured says ignore all that whether",
    "start": "3017119",
    "end": "3022319"
  },
  {
    "text": "it has it or not put it all in the body and have the body have an envelope and a body",
    "start": "3022319",
    "end": "3028720"
  },
  {
    "text": "right it supports a whole set of protocols",
    "start": "3028720",
    "end": "3035680"
  },
  {
    "text": "more probably appeared since i put this slide together and they tend to be quite responsive about adding new ones",
    "start": "3035680",
    "end": "3042559"
  },
  {
    "text": "okay binary looks a bit like that so this is kafka i can't which version kafka starts to support headers in but effectively",
    "start": "3042559",
    "end": "3048800"
  },
  {
    "text": "you can see all the ce underscore properties they are cloud events properties saying effectively hey here",
    "start": "3048800",
    "end": "3056160"
  },
  {
    "text": "effectively is my version my type my source my idea my time right etcetera",
    "start": "3056160",
    "end": "3063599"
  },
  {
    "text": "okay and then this would be that the same thing in structured it's clever kafka right but it's saying",
    "start": "3063599",
    "end": "3069520"
  },
  {
    "text": "effectively actually the first thing i need to do is define this body and this is plain text and the body",
    "start": "3069520",
    "end": "3076559"
  },
  {
    "text": "is going to effectively say okay here are all my headers then here is my actual application data",
    "start": "3076559",
    "end": "3083920"
  },
  {
    "text": "all right it is up to you which you prefer",
    "start": "3083920",
    "end": "3088960"
  },
  {
    "text": "gosh we've had a lot of fights and about this internally at my place um i think uh my personal preference is use binary",
    "start": "3088960",
    "end": "3096960"
  },
  {
    "text": "works available because the broker has made available the option for",
    "start": "3096960",
    "end": "3103440"
  },
  {
    "text": "you to basically separate out the metadata information and it may be possible for you to use that in the",
    "start": "3103440",
    "end": "3109839"
  },
  {
    "text": "broker to do operations about inspecting the body so for example with sns i can",
    "start": "3109839",
    "end": "3114960"
  },
  {
    "text": "create a filter that effectively just looks in the header and says i'm going to route things over here or i'm not",
    "start": "3114960",
    "end": "3120640"
  },
  {
    "text": "going to give you these messages etc so i would tend to use the support for effectively explicit",
    "start": "3120640",
    "end": "3127359"
  },
  {
    "text": "metadata if you can if you can and only use basically putting in the body uh if",
    "start": "3127359",
    "end": "3132640"
  },
  {
    "text": "you have to all right given that i have schemas i might want to store them somewhere",
    "start": "3132640",
    "end": "3138960"
  },
  {
    "text": "although i am pointing at confluence scheme registry it is just to give you an example of what they do in a picture",
    "start": "3138960",
    "end": "3145200"
  },
  {
    "text": "i'm not advocating and use this over others so generally a schema registry effectively says i am",
    "start": "3145200",
    "end": "3152240"
  },
  {
    "text": "just a huge big dictionary where you can store your schemas and generally your producer will register one and your",
    "start": "3152240",
    "end": "3158160"
  },
  {
    "text": "consumer will consume one something like uh confluence scheme registry actually lets you",
    "start": "3158160",
    "end": "3163920"
  },
  {
    "text": "check at runtime whether messages that are being sent or received conform to the schema i'm a little bit",
    "start": "3163920",
    "end": "3171280"
  },
  {
    "text": "i don't know whether that's necessarily a great idea i would tend to do that want to do that at design time and not have you release something that",
    "start": "3171280",
    "end": "3176800"
  },
  {
    "text": "basically would break somebody else but you can also use it for that and they also provide the ability to do some",
    "start": "3176800",
    "end": "3182800"
  },
  {
    "text": "kind of forwards and backwards compatibility all right so generally one of the big problems in",
    "start": "3182800",
    "end": "3188400"
  },
  {
    "text": "messaging is versioning in other words i change my contract and i don't think about everybody that's involved and",
    "start": "3188400",
    "end": "3195200"
  },
  {
    "text": "essentially i break people um tools like like the confluence scheme",
    "start": "3195200",
    "end": "3200720"
  },
  {
    "text": "registry tend to give you schema versioning in other words what they will do for you is they will tell you when you upload a new schema whether it is",
    "start": "3200720",
    "end": "3208000"
  },
  {
    "text": "forwards or backwards compatible with older with older versions of the message that's a useful health indicator to you",
    "start": "3208000",
    "end": "3214880"
  },
  {
    "text": "to say i might have broken somebody right it's quite possible you chosen to drop a feel",
    "start": "3214880",
    "end": "3220480"
  },
  {
    "text": "that nobody is using which case you haven't broken anybody but you have to negotiate at that point to determine",
    "start": "3220480",
    "end": "3225760"
  },
  {
    "text": "whether you've actually broken somebody it's one reason why i'm not a huge fan of runtime checks is because actually i might not have broken anybody",
    "start": "3225760",
    "end": "3232559"
  },
  {
    "text": "it is if you like a slightly less full-fledged version of consumer-driven contracts",
    "start": "3232559",
    "end": "3239040"
  },
  {
    "text": "consumer-driven contracts effectively say the consumer is exactly what they use and the producer effectively",
    "start": "3239040",
    "end": "3245760"
  },
  {
    "text": "validates that effectively their schema matches all of those consumer contracts",
    "start": "3245760",
    "end": "3251200"
  },
  {
    "text": "what we're doing here is just saying is when i look at this version of your schema and i look at the last version of",
    "start": "3251200",
    "end": "3257599"
  },
  {
    "text": "the schema what can i tell you about the compatibility of it right if someone was to consume that message beforehand and",
    "start": "3257599",
    "end": "3264000"
  },
  {
    "text": "consume all the fields on it with all those relevant types would they break based on this new message effectively",
    "start": "3264000",
    "end": "3270079"
  },
  {
    "text": "and it'll ignore things like i'm adding fields etcetera effectively knows that you can tolerate those",
    "start": "3270079",
    "end": "3275839"
  },
  {
    "text": "but what it will do effectively is say you would break whereas cdc would say i will look at exactly what's being",
    "start": "3275839",
    "end": "3281760"
  },
  {
    "text": "consumed you can drop a field if no one's consuming it right but cdc tooling is there's not really",
    "start": "3281760",
    "end": "3287680"
  },
  {
    "text": "anyone who's producing anything that useful pact exists basically for http it",
    "start": "3287680",
    "end": "3293040"
  },
  {
    "text": "also has some support for messaging it doesn't to my mind work particularly well because you're faking out brokers by",
    "start": "3293040",
    "end": "3300079"
  },
  {
    "text": "using mocks in the middle and it's over complicated i think for what it needs to be which is really hey i can effectively",
    "start": "3300079",
    "end": "3305680"
  },
  {
    "text": "demonstrate by looking you know a simple set operation whether or not effectively you should support that but there's poor",
    "start": "3305680",
    "end": "3312000"
  },
  {
    "text": "support for cdc at the minute the best thing out there at the minute probably are scheme registries um this is free",
    "start": "3312000",
    "end": "3317599"
  },
  {
    "text": "open source right so you can go and grab confluence skin registry it is um",
    "start": "3317599",
    "end": "3322640"
  },
  {
    "text": "it is not not tied to kafka you can use it for other basically um systems it supports basically avro plain text and",
    "start": "3322640",
    "end": "3329200"
  },
  {
    "text": "protobuf for the schema definition of the protocol observability all right so we mentioned",
    "start": "3329200",
    "end": "3335440"
  },
  {
    "text": "effectively that where you know one of the problems particularly messaging was tracing",
    "start": "3335440",
    "end": "3340720"
  },
  {
    "text": "understanding basically the flow we also obviously want to have some observability of our messages in",
    "start": "3340720",
    "end": "3345839"
  },
  {
    "text": "production so we can manage them properly so one of the things that i would",
    "start": "3345839",
    "end": "3351359"
  },
  {
    "text": "probably want to do here is essentially say use something like open telemetry what",
    "start": "3351359",
    "end": "3357760"
  },
  {
    "text": "happens to open telemetry is this operation i'm onboarding a restaurant and when i onboard a restaurant messages",
    "start": "3357760",
    "end": "3362960"
  },
  {
    "text": "flow throughout my system and set up the things that need restaurants would be what we call a span and within that span",
    "start": "3362960",
    "end": "3368960"
  },
  {
    "text": "effectively there are child spans that essentially say i am now inside restaurant availability which is doing",
    "start": "3368960",
    "end": "3375119"
  },
  {
    "text": "whatever it does with me right and what happens is you can serialize the span information for open telemetry into your",
    "start": "3375119",
    "end": "3381680"
  },
  {
    "text": "headers so that effectively you pass it along as kind of a kind of context to",
    "start": "3381680",
    "end": "3387200"
  },
  {
    "text": "everybody who down the line typically a span effectively has an",
    "start": "3387200",
    "end": "3392559"
  },
  {
    "text": "operation name a start finish timestamp a context and various attributes that you define right okay the infrastructure",
    "start": "3392559",
    "end": "3400079"
  },
  {
    "text": "is code uh that's probably the interesting bit at the end so how are we using things like ac kpi so one of the",
    "start": "3400079",
    "end": "3405920"
  },
  {
    "text": "interesting things with acn kpi you can do once you defined it all and you published it is you can parse it and the 18 kpi uh",
    "start": "3405920",
    "end": "3414480"
  },
  {
    "text": "and its github provides a parser which will basically parse the the json or yaml for you essentially and turn it",
    "start": "3414480",
    "end": "3421040"
  },
  {
    "text": "into an object model and then effectively you can use the object model",
    "start": "3421040",
    "end": "3426559"
  },
  {
    "text": "out of the box as the generator that works either react or nun templates but you could use other things",
    "start": "3426559",
    "end": "3432640"
  },
  {
    "text": "because the generator and the piles are separate projects once you pass something that actually lets you say i'm going to create a use react to create a",
    "start": "3432640",
    "end": "3439119"
  },
  {
    "text": "template and i'm going to turn what i've passed into something else i'm going to produce",
    "start": "3439119",
    "end": "3444640"
  },
  {
    "text": "a new document right so this file produces one or more new files",
    "start": "3444640",
    "end": "3449760"
  },
  {
    "text": "right so here's an example of the react template doing that essentially we say hey i've",
    "start": "3449760",
    "end": "3455520"
  },
  {
    "text": "got basically some async api um what i'm going to do here a bit hard",
    "start": "3455520",
    "end": "3460559"
  },
  {
    "text": "to recon so i'm going to basically say look at that basically determine whether i have any channels so it has published",
    "start": "3460559",
    "end": "3466559"
  },
  {
    "text": "there are some i'm subscribing so am i do i have a kafka subscription on any of",
    "start": "3466559",
    "end": "3472000"
  },
  {
    "text": "my channels if so what i'm going to do is create a new file called kafka yaml and effectively i'm going to basically",
    "start": "3472000",
    "end": "3478640"
  },
  {
    "text": "spit out some configuration information based on reading the bindings for that particular",
    "start": "3478640",
    "end": "3484480"
  },
  {
    "text": "endpoint right don't write the detail but just understand the principle",
    "start": "3484480",
    "end": "3490160"
  },
  {
    "text": "okay so what we do with that then is you well the simple thing you could do is generate some html documentation",
    "start": "3491920",
    "end": "3497920"
  },
  {
    "text": "but what we do that is effectively provision infrastructure so we take that",
    "start": "3497920",
    "end": "3503520"
  },
  {
    "text": "take some pollumi uh basically feed that yama into bulimia and say to bulimia please go and generate the relevant",
    "start": "3503520",
    "end": "3509760"
  },
  {
    "text": "infrastructure for us go and create the kafka topics go and basically do all the security that we need effectively i'm",
    "start": "3509760",
    "end": "3515920"
  },
  {
    "text": "going to provision stuff what that saves us from is you know something goes wrong in production uh somebody cleaning up",
    "start": "3515920",
    "end": "3522799"
  },
  {
    "text": "things these topics aren't needed anymore deletes half of them turns out basically you needed one uh well that's",
    "start": "3522799",
    "end": "3528480"
  },
  {
    "text": "ever happened uh and effectively you want to recreate them and rather than having to redeploy all the apps because",
    "start": "3528480",
    "end": "3533760"
  },
  {
    "text": "the apps basically create their own infrastructure you effectively have declarative states so you can essentially say hey to pollute me please",
    "start": "3533760",
    "end": "3540880"
  },
  {
    "text": "recreate everything for me because somebody broke it um",
    "start": "3540880",
    "end": "3546000"
  },
  {
    "text": "okay uh there are lots of other ideas probably that the work from this model but that's one that basically we started",
    "start": "3546000",
    "end": "3551839"
  },
  {
    "text": "to use and i think it's a really interesting capability that comes out of putting",
    "start": "3551839",
    "end": "3557359"
  },
  {
    "text": "stuff into 18 kpis the ability to then um use uh turn that into basically uh",
    "start": "3557359",
    "end": "3563680"
  },
  {
    "text": "something that's paused and then generate new artifacts from it typically what we do is we we just",
    "start": "3563680",
    "end": "3569200"
  },
  {
    "text": "generate because we take the original yaml generate some new yaml because you can't have enough yam all right and then",
    "start": "3569200",
    "end": "3574880"
  },
  {
    "text": "our code effectively reads that yaml and does does stuff with it uh which is just simpler than getting anything to unsound",
    "start": "3574880",
    "end": "3580400"
  },
  {
    "text": "18 kpi we just get to understand the six or seven things we need in order to provision the infrastructure",
    "start": "3580400",
    "end": "3587520"
  },
  {
    "text": "all right and you can do scaffolding so you could do use the same thing to do code generation so effectively if you",
    "start": "3587520",
    "end": "3592799"
  },
  {
    "text": "always tend to write your the way a worker that consumes messages from kafka",
    "start": "3592799",
    "end": "3598000"
  },
  {
    "text": "in the same way teams can basically just say you know what i'm going to define my endpoint in",
    "start": "3598000",
    "end": "3603359"
  },
  {
    "text": "async api press a button effectively and i'll get the first version generated and i just go and write basically the",
    "start": "3603359",
    "end": "3609119"
  },
  {
    "text": "relevant code right which saves all that grunt work of doing all that",
    "start": "3609119",
    "end": "3614319"
  },
  {
    "text": "configuration and getting it right imagine if you just got a template that you want to use",
    "start": "3614319",
    "end": "3619599"
  },
  {
    "text": "all right and i say it ends a bit abruptly i can't think of a you know way of letting you all down gently but um",
    "start": "3619599",
    "end": "3627359"
  },
  {
    "text": "but there you go all right that's that thanks very much",
    "start": "3627359",
    "end": "3633640"
  }
]