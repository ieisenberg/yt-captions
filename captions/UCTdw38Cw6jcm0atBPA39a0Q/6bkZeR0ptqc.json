[
  {
    "start": "0",
    "end": "20000"
  },
  {
    "text": "awesome so welcome everyone i'm happy uh some of you made it today and the rest are watching from youtube i think so",
    "start": "7440",
    "end": "14400"
  },
  {
    "text": "welcome to my talk reliable client server data transport for f-sharp applications",
    "start": "14400",
    "end": "20720"
  },
  {
    "start": "20000",
    "end": "53000"
  },
  {
    "text": "today uh we'll be talking about a little bit about me about the context of what we're doing",
    "start": "20720",
    "end": "26560"
  },
  {
    "text": "how uh what the problems are in what we're doing and how a tool i've built called faber",
    "start": "26560",
    "end": "32719"
  },
  {
    "text": "remoting attempts to solve it and why it's solved in the best way for f-sharp i think so we'll compare it a little bit",
    "start": "32719",
    "end": "38719"
  },
  {
    "text": "with existing solutions and compare and compare what the differences are and then we will go a little bit beyond the",
    "start": "38719",
    "end": "45360"
  },
  {
    "text": "basics and talk about the goodies included that you might not know about if you're using fable remoting in",
    "start": "45360",
    "end": "51840"
  },
  {
    "text": "f-sharp applications so a little bit about me i am a dot-net engineer from the netherlands i work and",
    "start": "51840",
    "end": "58559"
  },
  {
    "start": "53000",
    "end": "82000"
  },
  {
    "text": "live there i also do all the things that have to do with javascript and c sharp and f sharp",
    "start": "58559",
    "end": "63680"
  },
  {
    "text": "i work with data intensive applications so i work with time series how to work with them how to",
    "start": "63680",
    "end": "70960"
  },
  {
    "text": "aggregate them visualize them analyze them et cetera et cetera but i am also an open source contributor and",
    "start": "70960",
    "end": "76799"
  },
  {
    "text": "maintainer of a bunch of f-sharp tools one of them is fable remoting so that's what i'm talking about today",
    "start": "76799",
    "end": "82880"
  },
  {
    "start": "82000",
    "end": "135000"
  },
  {
    "text": "all right so in the context of what we're doing we're building full stack of f sharp applications so we have f sharp",
    "start": "82880",
    "end": "89439"
  },
  {
    "text": "on the back end f sharp on the front end and we're trying to basically let them talk to each other",
    "start": "89439",
    "end": "95280"
  },
  {
    "text": "and the problem is how we do that in a type safe manner how we do that in a way so that it just gets",
    "start": "95280",
    "end": "100960"
  },
  {
    "text": "makes it easier and takes off all the boring details out of",
    "start": "100960",
    "end": "106240"
  },
  {
    "text": "the way so it's important that we are talking about an a full stack application where you",
    "start": "106240",
    "end": "112560"
  },
  {
    "text": "and your team have access to both the client and the front end and the back end",
    "start": "112560",
    "end": "118320"
  },
  {
    "text": "because this is where fable remoting will really really make sense i will talk about a little bit later about why",
    "start": "118320",
    "end": "125040"
  },
  {
    "text": "it doesn't make sense for external for external clients but we can we will get to that in a bit",
    "start": "125040",
    "end": "131599"
  },
  {
    "text": "so yeah the idea is how to make them talk to each other in a type safe manner so the problem and it's",
    "start": "131599",
    "end": "138720"
  },
  {
    "start": "135000",
    "end": "247000"
  },
  {
    "text": "quoted here because it's a solved problem mostly there are solutions for this problem to make client server",
    "start": "138720",
    "end": "145200"
  },
  {
    "text": "communication type safe and there are and i will talk about the solutions in",
    "start": "145200",
    "end": "150400"
  },
  {
    "text": "the uh in the in in a bit so the problem is",
    "start": "150400",
    "end": "155840"
  },
  {
    "text": "initially is that client server interactions are very very involved if you have dealt with them in a after a",
    "start": "155840",
    "end": "162640"
  },
  {
    "text": "couple of years they get they become obvious to you but if you're just getting started it might become like",
    "start": "162640",
    "end": "168400"
  },
  {
    "text": "this whole complicated thing of getting data from a to b while you don't actually care about the details a lot of",
    "start": "168400",
    "end": "174720"
  },
  {
    "text": "people don't care about how data goes from a to b and um if you're doing that",
    "start": "174720",
    "end": "180000"
  },
  {
    "text": "for the first time it can feel like you've done a lot just before you even started implementing your back-end logic",
    "start": "180000",
    "end": "186319"
  },
  {
    "text": "and your front-end interactions so when you talk about client-server interactions you have a lot to do with",
    "start": "186319",
    "end": "191599"
  },
  {
    "text": "data over the wire so you have to think about what the format should be from one side to the other how to take that",
    "start": "191599",
    "end": "198319"
  },
  {
    "text": "format into a how to serialize it into something that goes over the wire like a string or",
    "start": "198319",
    "end": "204560"
  },
  {
    "text": "or bytes and then have to deserialize it back on the front end or the or the back end",
    "start": "204560",
    "end": "210319"
  },
  {
    "text": "of course you also have to know all about the http resources and what they return and everything from that so that",
    "start": "210319",
    "end": "215920"
  },
  {
    "text": "it can be quite it can be quite involved and of course keeping those two in sync",
    "start": "215920",
    "end": "221360"
  },
  {
    "text": "is another problem that's that needs to be tackled because sometimes you change something like a an",
    "start": "221360",
    "end": "228080"
  },
  {
    "text": "http endpoint and then that that change has to propagate back to the front end but you usually don't know because it's",
    "start": "228080",
    "end": "234159"
  },
  {
    "text": "a string so if it changes on the back and you have to manually change that on the front end and these changes are",
    "start": "234159",
    "end": "239280"
  },
  {
    "text": "sometimes uh invisible you don't know about them there are again solutions to this problem outside of fable remoting",
    "start": "239280",
    "end": "245680"
  },
  {
    "text": "and i will talk about them in a second so um let's go back to the client server",
    "start": "245680",
    "end": "250799"
  },
  {
    "start": "247000",
    "end": "321000"
  },
  {
    "text": "interactions and talk about the basics of them like there are multiple ways the backend and the front",
    "start": "250799",
    "end": "256880"
  },
  {
    "text": "line can communicate but let's say a simple get request to an api resource",
    "start": "256880",
    "end": "262960"
  },
  {
    "text": "called api to do's so imagine you have on the front end a module called api which has a bunch of functions that talk",
    "start": "262960",
    "end": "269360"
  },
  {
    "text": "to your backend right so in the function body of that uh on in the api module you have a bunch",
    "start": "269360",
    "end": "276240"
  },
  {
    "text": "of functions like to do's which is a function that will make a request to the back end to get all the to-do's and do",
    "start": "276240",
    "end": "282400"
  },
  {
    "text": "something with them on the front end probably just showing them on screen so the the implementation of that involves",
    "start": "282400",
    "end": "290080"
  },
  {
    "text": "making the http request knowing the right endpoints having the server um having the server",
    "start": "290080",
    "end": "296479"
  },
  {
    "text": "serialize the results back to the front end and the front end have has to deserialize the results again before you",
    "start": "296479",
    "end": "302479"
  },
  {
    "text": "could actually do something with the with the list you uh you you asked for from the back end so from",
    "start": "302479",
    "end": "310720"
  },
  {
    "text": "the first call from the api to do's all the way down to having an instance of the to-do list there's a lot going on",
    "start": "310720",
    "end": "316560"
  },
  {
    "text": "there and keeping that in sync is a is a problem another thing which is even more involved is a post request where",
    "start": "316560",
    "end": "323759"
  },
  {
    "start": "321000",
    "end": "361000"
  },
  {
    "text": "you have a function called add to do it takes some input that needs to be serialized and then it has to be dcls on",
    "start": "323759",
    "end": "329759"
  },
  {
    "text": "the backend the backend does something serializes the output and then the front end has to deserialize that output",
    "start": "329759",
    "end": "336160"
  },
  {
    "text": "before it can do anything with it so again it's really involved to work with these with these",
    "start": "336160",
    "end": "342000"
  },
  {
    "text": "interactions especially for beginners i'm not saying this is not this is not doable of course it is but",
    "start": "342000",
    "end": "347520"
  },
  {
    "text": "i think i think we can do better and that's what faber remoting brings into the table",
    "start": "347520",
    "end": "353039"
  },
  {
    "text": "so if we talk about these two in in raw http",
    "start": "353039",
    "end": "358560"
  },
  {
    "text": "mechanism this is how they look like but if we introduce faber remoting to the mix everything in between just goes away so",
    "start": "358560",
    "end": "366000"
  },
  {
    "start": "361000",
    "end": "427000"
  },
  {
    "text": "you have the api the the api module it had this to do function which had a function body",
    "start": "366000",
    "end": "372960"
  },
  {
    "text": "right that function body will just disappear it's just a function that will be implemented automatically you call it",
    "start": "372960",
    "end": "380880"
  },
  {
    "text": "and after a while you get the results back from the from the back end deserialized in the right type without",
    "start": "380880",
    "end": "387120"
  },
  {
    "text": "you having to do anything with json or knowing where the url is i'll show you a",
    "start": "387120",
    "end": "392319"
  },
  {
    "text": "little bit about how it works but it's all implementation details basically you don't care about it",
    "start": "392319",
    "end": "397440"
  },
  {
    "text": "so this is from the get from the get request point of view as you can see i also removed the get from",
    "start": "397440",
    "end": "404000"
  },
  {
    "text": "the from the from the things you have to think about because you actually don't",
    "start": "404000",
    "end": "409360"
  },
  {
    "text": "care it's just a function call you get the data you want and you can do stuff with it same with the post request again it you",
    "start": "409360",
    "end": "417039"
  },
  {
    "text": "don't even need to know whether it's post request or a get request you just know i'm sending some input and i'm",
    "start": "417039",
    "end": "422400"
  },
  {
    "text": "getting some data back from the back end and everything in between is taken care of",
    "start": "422400",
    "end": "427520"
  },
  {
    "start": "427000",
    "end": "572000"
  },
  {
    "text": "so there are existing solutions to this um having the back end and the front end be",
    "start": "427520",
    "end": "433759"
  },
  {
    "text": "in sync but all of them in the context of f sharp apps have a bit of problems i've tried to tackle the problems",
    "start": "433759",
    "end": "440240"
  },
  {
    "text": "partially and i've made some solutions that work either for the back end or just for the back end or just for the",
    "start": "440240",
    "end": "445759"
  },
  {
    "text": "front end so and i'm still unhappy with how it how it came out so for example we",
    "start": "445759",
    "end": "451440"
  },
  {
    "text": "can build a rest api in fsharp and have the swagger documentation for it and so that from the swagger",
    "start": "451440",
    "end": "457520"
  },
  {
    "text": "documentations you can build you can auto generate a client from fable so that you can call it but",
    "start": "457520",
    "end": "464800"
  },
  {
    "text": "in like the f-sharp major web frameworks there isn't like a good way to build the",
    "start": "464800",
    "end": "469919"
  },
  {
    "text": "the docker documentation from your types so you have to either somehow",
    "start": "469919",
    "end": "475759"
  },
  {
    "text": "generate them yourself or write write out the docs by hand which again is not",
    "start": "475759",
    "end": "480960"
  },
  {
    "text": "good and it requires a comp uh um a code",
    "start": "480960",
    "end": "486000"
  },
  {
    "text": "generation build step all of these solution solutions require code generation build step which is something i wanted to walk away from when i",
    "start": "486000",
    "end": "493680"
  },
  {
    "text": "implemented faber remoting same problem for graphql they're building a back end is possible",
    "start": "493680",
    "end": "500479"
  },
  {
    "text": "the front end can use can you snowflake to auto generate the client but again you have to you have to code",
    "start": "500479",
    "end": "507280"
  },
  {
    "text": "generate the client it's not always like and and the back end is not straight forward to build i",
    "start": "507280",
    "end": "513360"
  },
  {
    "text": "think when you have to do with graphql there it has to people have to have some specific knowledge about graphql before",
    "start": "513360",
    "end": "518560"
  },
  {
    "text": "you can start implementing fields and have it working i'm not saying it doesn't work it does work but for the",
    "start": "518560",
    "end": "524159"
  },
  {
    "text": "context of just a front end like the simplest way we can do i think is with fable remote as i will show in a bit",
    "start": "524159",
    "end": "530880"
  },
  {
    "text": "there's also gpgrpc which is an rpc an rpc library from",
    "start": "530880",
    "end": "536320"
  },
  {
    "text": "google it it has been a wh it has been around for a long time everybody knows it works but",
    "start": "536320",
    "end": "541519"
  },
  {
    "text": "again go generation step and fable doesn't really know how to work with generated clients",
    "start": "541519",
    "end": "548640"
  },
  {
    "text": "unless you somehow generate a typescript client and write a binding for it which again more work",
    "start": "548640",
    "end": "555120"
  },
  {
    "text": "just for just for getting something like this to work so faber remoting if you take this",
    "start": "555120",
    "end": "560880"
  },
  {
    "text": "if you take this existing solution server removing combines a bit of open api rest with the grpc so remote take is",
    "start": "560880",
    "end": "568160"
  },
  {
    "text": "an rpc la is an rpc implementation but okay so let's talk about it so remoting",
    "start": "568160",
    "end": "574720"
  },
  {
    "start": "572000",
    "end": "663000"
  },
  {
    "text": "is an rpc implementation that doesn't require anything else outside of fsharp",
    "start": "574720",
    "end": "579760"
  },
  {
    "text": "itself so unlike for example grpc which uses the protofiles to describe the service",
    "start": "579760",
    "end": "586640"
  },
  {
    "text": "describe the request and outputs you can use f-sharp types to describe those because that's what you're working with",
    "start": "586640",
    "end": "591920"
  },
  {
    "text": "you're working with f-sharp all over the place so why not just use the language itself to to implement the services",
    "start": "591920",
    "end": "598320"
  },
  {
    "text": "um it's very easy to set up i'll show in a bit it has no code generation setup required",
    "start": "598320",
    "end": "603680"
  },
  {
    "text": "for either front end or back end you just use it the actual generation is happening in",
    "start": "603680",
    "end": "608720"
  },
  {
    "text": "runtime so that's again implementation details and it runs everywhere on fsharp so remoting has",
    "start": "608720",
    "end": "615519"
  },
  {
    "text": "been around for quite some time since 2017 and ever since that time i've been building more and more",
    "start": "615519",
    "end": "621920"
  },
  {
    "text": "uh adapters for new frameworks so if you have we have giraffe and saturn which is the same adapter there's one for swave",
    "start": "621920",
    "end": "628399"
  },
  {
    "text": "there's one for asp.net core middleware for your next isotoric web framework if you need one so it will work basically",
    "start": "628399",
    "end": "635600"
  },
  {
    "text": "everywhere there are some adapters for azure functions if you want to use them there and again on the client even",
    "start": "635600",
    "end": "640959"
  },
  {
    "text": "though despite despite the name faber remoting there's a client for fable and there's a client for",
    "start": "640959",
    "end": "647040"
  },
  {
    "text": "net clients so if you have something like a like a desktop app or server to server communication you could",
    "start": "647040",
    "end": "653040"
  },
  {
    "text": "use the net client to uh to bridge both your back end like your server to server",
    "start": "653040",
    "end": "658320"
  },
  {
    "text": "communication or your desktop to back-end communication it doesn't really matter",
    "start": "658320",
    "end": "663839"
  },
  {
    "start": "663000",
    "end": "786000"
  },
  {
    "text": "okay so how does it look like so by sim like the simplest the simplest",
    "start": "663839",
    "end": "669760"
  },
  {
    "text": "contract you can come up with is um is this so where do you put this code so",
    "start": "669760",
    "end": "676000"
  },
  {
    "text": "basically when you have a full stack fsharp application with fable on the back end on the front end and f sharp on",
    "start": "676000",
    "end": "681680"
  },
  {
    "text": "the back end you usually have a shared project or you can have a shared project",
    "start": "681680",
    "end": "686800"
  },
  {
    "text": "which is used by both the shared projects defines the shared types and the share types is where we",
    "start": "686800",
    "end": "693200"
  },
  {
    "text": "will put these definitions and service and contracts people call them contracts",
    "start": "693200",
    "end": "698800"
  },
  {
    "text": "i call them sometimes protocols it doesn't really matter this is just the definition of your client server",
    "start": "698800",
    "end": "703920"
  },
  {
    "text": "interaction you look at it and you know what it does you know what it what it needs and what it outputs so here we",
    "start": "703920",
    "end": "710639"
  },
  {
    "text": "define um the shared data in this case i'm defining a record called to do",
    "start": "710639",
    "end": "716720"
  },
  {
    "text": "which will be the output of uh would i have to do which has id description",
    "start": "716720",
    "end": "721760"
  },
  {
    "text": "you know you know the journal there's also a new to do input which will be an input of a function and then i describe",
    "start": "721760",
    "end": "728240"
  },
  {
    "text": "the and then i implement or define the api just the shape of it in this case in the",
    "start": "728240",
    "end": "734880"
  },
  {
    "text": "shared types i just define how the shape of the api looks like i don't implement it here because we don't know about the",
    "start": "734880",
    "end": "741360"
  },
  {
    "text": "implementation yet actually we don't care the client doesn't care about the implementation it only knows this is how",
    "start": "741360",
    "end": "747360"
  },
  {
    "text": "my api looks like and i can use it and i can use it i can call these",
    "start": "747360",
    "end": "752880"
  },
  {
    "text": "functions and get the data back from the front end so here i have an api that has two functions to do is which takes unit",
    "start": "752880",
    "end": "759600"
  },
  {
    "text": "meaning it doesn't have any input and returns a list of to-do's as output now notice that every function has to be",
    "start": "759600",
    "end": "766079"
  },
  {
    "text": "async because all of these all of these operations are asynchronous they're going out to the back end getting the",
    "start": "766079",
    "end": "771519"
  },
  {
    "text": "data and coming back and then there's another um there's another function called add to",
    "start": "771519",
    "end": "777120"
  },
  {
    "text": "do which takes in this case a record as input and gives you a to do back from",
    "start": "777120",
    "end": "782480"
  },
  {
    "text": "the front from the back end all right so far so good",
    "start": "782480",
    "end": "787920"
  },
  {
    "start": "786000",
    "end": "858000"
  },
  {
    "text": "so on the back end so now you have the shared implementation the shared shape the shared uh definition",
    "start": "787920",
    "end": "794720"
  },
  {
    "text": "but you don't but on the back end you want to have the actual implementation what code should run when these",
    "start": "794720",
    "end": "801120"
  },
  {
    "text": "functions are called so on the back end you basically implement an instance of this shape of this record because the",
    "start": "801120",
    "end": "807920"
  },
  {
    "text": "last the last type here is just a record where each field is a function so",
    "start": "807920",
    "end": "813680"
  },
  {
    "text": "you when you implement the logic what you do is you create an instance of that record where each function has its",
    "start": "813680",
    "end": "820160"
  },
  {
    "text": "implementation like this this is the simplest way to define a shared uh",
    "start": "820160",
    "end": "825760"
  },
  {
    "text": "an implementation for the for the shared protocol right so you can implement the functions separately and use them in the",
    "start": "825760",
    "end": "831680"
  },
  {
    "text": "definition you could initialize them directly from the record it doesn't really matter how you create",
    "start": "831680",
    "end": "837839"
  },
  {
    "text": "an instance of this thing doesn't really matter and i'll show you later how you could",
    "start": "837839",
    "end": "842880"
  },
  {
    "text": "how you could use implicit dependencies to use inside of these functions i'll show you that in a bit but that's a bit more advanced so this is",
    "start": "842880",
    "end": "849440"
  },
  {
    "text": "the basic shape of how you implement it after you've implemented it you start using faber remodeling because",
    "start": "849440",
    "end": "856079"
  },
  {
    "text": "this far this has nothing to do with any library this is just f sharp code and this is where fable remoting comes into",
    "start": "856079",
    "end": "861680"
  },
  {
    "start": "858000",
    "end": "918000"
  },
  {
    "text": "play it it is basically one function call to turn that to turn that instance of the",
    "start": "861680",
    "end": "868839"
  },
  {
    "text": "implementation into our into an http http handler meaning that it's now its",
    "start": "868839",
    "end": "874560"
  },
  {
    "text": "own uh its own service thing that can be exposed out to http so you don't have to",
    "start": "874560",
    "end": "881920"
  },
  {
    "text": "know how it maps the http requests to these functions and how it turns back you only have to know that",
    "start": "881920",
    "end": "888639"
  },
  {
    "text": "after you created this api it can be used from your giraffe app in this case because i'm using http handler if you",
    "start": "888639",
    "end": "894720"
  },
  {
    "text": "were working with swave you would have had build web parts because wave works with web part so basically you start",
    "start": "894720",
    "end": "900959"
  },
  {
    "text": "with create api and the api comes from this value and then",
    "start": "900959",
    "end": "906560"
  },
  {
    "text": "what you get out is basically a small web service that knows how to expect requests and",
    "start": "906560",
    "end": "912399"
  },
  {
    "text": "and handle the responses okay so you've implemented this on the back end you have an http handler",
    "start": "912399",
    "end": "918560"
  },
  {
    "start": "918000",
    "end": "1004000"
  },
  {
    "text": "you could use that uh i'll show you a bit how to use that from giraffe but then on the front end what you do is",
    "start": "918560",
    "end": "923760"
  },
  {
    "text": "almost the same you say remoting create api and then you tell it to build a proxy of",
    "start": "923760",
    "end": "930639"
  },
  {
    "text": "this to do api definition okay so to do api is just the",
    "start": "930639",
    "end": "936160"
  },
  {
    "text": "definition and the build proxy function will create an instance of the to-do api like a proper instance that gets a",
    "start": "936160",
    "end": "942720"
  },
  {
    "text": "record but the implementation of this record from the front-end is actually just saying",
    "start": "942720",
    "end": "948720"
  },
  {
    "text": "okay i have this implementation it won't run the logic you implemented on the backend because it doesn't know anything",
    "start": "948720",
    "end": "954720"
  },
  {
    "text": "about it but it knows how to send the request to the back end serializing the inputs getting the data",
    "start": "954720",
    "end": "960959"
  },
  {
    "text": "back deserializing it and getting the results so the proxy is like a fake",
    "start": "960959",
    "end": "966000"
  },
  {
    "text": "to-do api that doesn't do what it does on the back end but just goes out to the back end gets the data and makes it",
    "start": "966000",
    "end": "971759"
  },
  {
    "text": "available for your front end and you could use it immediately like in this async computation expression here you",
    "start": "971759",
    "end": "977279"
  },
  {
    "text": "could use it immediately you call the function and you already have an instance of the to-do list from here",
    "start": "977279",
    "end": "982880"
  },
  {
    "text": "which you can immediately use like looping over it and printing out printing out the data",
    "start": "982880",
    "end": "989600"
  },
  {
    "text": "so this is the very basics of how to work with fab remoting as you can see like no code",
    "start": "989600",
    "end": "997600"
  },
  {
    "text": "generation step nothing no http you didn't even know that there is an http",
    "start": "997600",
    "end": "1002639"
  },
  {
    "text": "in between which is kind of nice all right so we talked about um how the",
    "start": "1002639",
    "end": "1009040"
  },
  {
    "start": "1004000",
    "end": "1090000"
  },
  {
    "text": "build http handler creates well an http handler and if you're working with giraffe you will know that http handler",
    "start": "1009040",
    "end": "1015600"
  },
  {
    "text": "is something that you can use but you don't have to so this is very important about remoting is that",
    "start": "1015600",
    "end": "1021759"
  },
  {
    "text": "it's opt in you use it alongside your web app so if you already had a giraffe",
    "start": "1021759",
    "end": "1027280"
  },
  {
    "text": "web app like the one above here it's probably the result of your some of some kind of composition route whatever you",
    "start": "1027280",
    "end": "1033360"
  },
  {
    "text": "want to call that but your web app is your existing giraffe app and you want to combine it with remoting you just use",
    "start": "1033360",
    "end": "1040079"
  },
  {
    "text": "the choose function which will combine your web app with the remoting service this is also",
    "start": "1040079",
    "end": "1046319"
  },
  {
    "text": "the way of creating multiple protocols if you want to create multiple apis for different",
    "start": "1046319",
    "end": "1053679"
  },
  {
    "text": "for different purposes or for example for different where is it",
    "start": "1053679",
    "end": "1060799"
  },
  {
    "text": "okay i didn't have it apparently here but basically because of this you could",
    "start": "1061280",
    "end": "1066720"
  },
  {
    "text": "use the same giraffe constructs to use and to implement your for example your",
    "start": "1066720",
    "end": "1073200"
  },
  {
    "text": "security so you could say requires authentication and then goes to this this remoting service because it works",
    "start": "1073200",
    "end": "1080240"
  },
  {
    "text": "really nice with giraffe but also the same with the other with the other frameworks",
    "start": "1080240",
    "end": "1086720"
  },
  {
    "text": "so this is how you combine the apis you have if you have multiple okay so now",
    "start": "1086880",
    "end": "1093360"
  },
  {
    "start": "1090000",
    "end": "1308000"
  },
  {
    "text": "let's talk about the supported types and this is very important because that's literally in the title",
    "start": "1093360",
    "end": "1099120"
  },
  {
    "text": "being reliable what does reliable mean when it when you talk about communication between front-end and",
    "start": "1099120",
    "end": "1104400"
  },
  {
    "text": "back-end i think the most uh the most annoying thing i had to do when working with full stack",
    "start": "1104400",
    "end": "1110880"
  },
  {
    "text": "apps is that i have to just i had to simplify my type definitions to make them easily serializable so i have some",
    "start": "1110880",
    "end": "1118960"
  },
  {
    "text": "structure i'm working with on the back end and i had to completely like serialize it to the front end but the",
    "start": "1118960",
    "end": "1124640"
  },
  {
    "text": "front end doesn't understand some types that i'm working with so i had to simplify that and and make it nice",
    "start": "1124640",
    "end": "1131120"
  },
  {
    "text": "um just to be able to work with them and to be able to work them from the front end and i don't like that so when with",
    "start": "1131120",
    "end": "1136640"
  },
  {
    "text": "faber remoting you can use all the types you want so all f sharp types all primitives such as",
    "start": "1136640",
    "end": "1144400"
  },
  {
    "text": "like you know the primitives string boolean integers whatever but also more complicated primitives like",
    "start": "1144400",
    "end": "1151360"
  },
  {
    "text": "like the decimal like big integers or date time offset all these things work out of the box and they preserve their",
    "start": "1151360",
    "end": "1157679"
  },
  {
    "text": "precision if you ever like you've ever worked with a.net back end and has to return decimals back to",
    "start": "1157679",
    "end": "1163520"
  },
  {
    "text": "the front end it will return a number which is which loses its its precision",
    "start": "1163520",
    "end": "1168640"
  },
  {
    "text": "or it has to be something something less but with faber remoting it just um",
    "start": "1168640",
    "end": "1174400"
  },
  {
    "text": "it preserves oh it preserves everything you don't lose anything through that it's through that conversion",
    "start": "1174400",
    "end": "1180160"
  },
  {
    "text": "besides the primitives you also can work with all f sharp types so anything from",
    "start": "1180160",
    "end": "1185840"
  },
  {
    "text": "options to results to unions and any combination of of any of them so you can make really complicated",
    "start": "1185840",
    "end": "1192400"
  },
  {
    "text": "object graphs and as long as they're in here then they then you know they will work so you can make whatever you",
    "start": "1192400",
    "end": "1200240"
  },
  {
    "text": "want in the middle you can make nested uh recursive trees they will all they",
    "start": "1200240",
    "end": "1205440"
  },
  {
    "text": "will all work some of the bcl collections are like the base class library are supported such as",
    "start": "1205440",
    "end": "1211760"
  },
  {
    "text": "resize array in this case it's called list uh hasset and dictionary just because some people already have data in that",
    "start": "1211760",
    "end": "1217919"
  },
  {
    "text": "shape and they wanted to bring that over to the front end you can do that also",
    "start": "1217919",
    "end": "1223120"
  },
  {
    "text": "nullable is supported so that's also nice what you can't what you can't transport between client and server are",
    "start": "1223120",
    "end": "1230240"
  },
  {
    "text": "classes because fable does not support deserializing things into classes and",
    "start": "1230240",
    "end": "1237039"
  },
  {
    "text": "generally you don't want to just think of everything you want to send from the backend to the front end as data pure",
    "start": "1237039",
    "end": "1242480"
  },
  {
    "text": "data nothing that has to do with with logic and if you need something",
    "start": "1242480",
    "end": "1247600"
  },
  {
    "text": "that that is a class then you implement the class on the front end for example and you serialize",
    "start": "1247600",
    "end": "1253280"
  },
  {
    "text": "the data you need to reit to re initialize it so if you have something like um",
    "start": "1253280",
    "end": "1259200"
  },
  {
    "text": "i don't know like a com the complex numbers don't for example the complex type from the system numerics is not",
    "start": "1259200",
    "end": "1264880"
  },
  {
    "text": "supported but you could easily like turn that into just the components you need to and send it back over from the front",
    "start": "1264880",
    "end": "1271840"
  },
  {
    "text": "end to the back end what we will also add soon is uh date",
    "start": "1271840",
    "end": "1276880"
  },
  {
    "text": "date only and time only because these are just added in dot net six so working on those i think the pr is ready",
    "start": "1276880",
    "end": "1283840"
  },
  {
    "text": "to just merge things together and push a package so yeah supported types is a huge thing",
    "start": "1283840",
    "end": "1290320"
  },
  {
    "text": "the feb remoting includes a huge huge set of huge suite of integration tests",
    "start": "1290320",
    "end": "1296240"
  },
  {
    "text": "that make sure all of this works so it generally it uses a test a test project and goes through",
    "start": "1296240",
    "end": "1303039"
  },
  {
    "text": "really horrendous schemes to to test this with",
    "start": "1303039",
    "end": "1308799"
  },
  {
    "start": "1308000",
    "end": "1507000"
  },
  {
    "text": "okay so besides uh besides the functions that we're talking about how they see how",
    "start": "1308799",
    "end": "1314880"
  },
  {
    "text": "they serialize from json and back to back to from json to json etc etc we also have",
    "start": "1314880",
    "end": "1321280"
  },
  {
    "text": "sometimes to work with files so the way we did this with fabe remoting",
    "start": "1321280",
    "end": "1326880"
  },
  {
    "text": "is that if you want if you have to if you have to upload something or download",
    "start": "1326880",
    "end": "1332559"
  },
  {
    "text": "something from the back end you could basically say okay my input takes a byte array if i'm uploading",
    "start": "1332559",
    "end": "1339679"
  },
  {
    "text": "and my output takes and my output returns an async of a byte array if i'm downloading and in this",
    "start": "1339679",
    "end": "1345919"
  },
  {
    "text": "case i have here an example protocol called resize a resize image which takes",
    "start": "1345919",
    "end": "1351120"
  },
  {
    "text": "an image you want to upload the backend resizes it and it returns it as byte array",
    "start": "1351120",
    "end": "1357039"
  },
  {
    "text": "to the front end so the way you would work with that from the front and like now the implementation on the back end",
    "start": "1357039",
    "end": "1362400"
  },
  {
    "text": "is we assume it's implemented you assume we are using some kind of ski a sharp library or something to resize the image",
    "start": "1362400",
    "end": "1368880"
  },
  {
    "text": "but then on the front end how does the front end work with this so fab remoting will add a bunch of extension methods to",
    "start": "1368880",
    "end": "1374480"
  },
  {
    "text": "byte arrays to and from byte arrays so for example if you have an input element which gives",
    "start": "1374480",
    "end": "1380799"
  },
  {
    "text": "you a file if it has type a file on change it will give you a file when someone has selected a file to upload",
    "start": "1380799",
    "end": "1387840"
  },
  {
    "text": "and file will have an extension method called read as byte array so once you",
    "start": "1387840",
    "end": "1392880"
  },
  {
    "text": "have once you have obtained an instance of a file from your fable app you could say read as",
    "start": "1392880",
    "end": "1398400"
  },
  {
    "text": "uh byte array and you could use that as input for the function in fable remoting and then from the bytes you get back",
    "start": "1398400",
    "end": "1404960"
  },
  {
    "text": "there's another extension method called save file as which allows you to save it to your",
    "start": "1404960",
    "end": "1410400"
  },
  {
    "text": "computer now the interesting thing about this is that when you use byte array on its own as",
    "start": "1410400",
    "end": "1417840"
  },
  {
    "text": "input it completely bypasses the json serialization thing so it uses",
    "start": "1417840",
    "end": "1423039"
  },
  {
    "text": "uh it uses a raw binary transport when you're talking when you're only using that as input and the same thing goes",
    "start": "1423039",
    "end": "1429520"
  },
  {
    "text": "with the output so if you only return async of byte array it knows that this is this does not need to do any",
    "start": "1429520",
    "end": "1436480"
  },
  {
    "text": "json serialization thing it bypasses it it writes everything to the to the output stream",
    "start": "1436480",
    "end": "1441760"
  },
  {
    "text": "now this is for people who work with with who optimize memory they will know",
    "start": "1441760",
    "end": "1446960"
  },
  {
    "text": "that this is not optimal because using a byte array means that it's already allocated in the memory on the",
    "start": "1446960",
    "end": "1453200"
  },
  {
    "text": "back end so there are some room for improvement here of somehow you",
    "start": "1453200",
    "end": "1458799"
  },
  {
    "text": "returning a stream instead of returning getting a stream and returning a stream",
    "start": "1458799",
    "end": "1464240"
  },
  {
    "text": "instead of using a byte array on its own but that requires some i know it's possible i think we'll make we'll",
    "start": "1464240",
    "end": "1471279"
  },
  {
    "text": "implement that soon but i think it requires some trickery on the fable side of things because there are no",
    "start": "1471279",
    "end": "1476720"
  },
  {
    "text": "streams on the fabled side of things so we have to build things on top of it to make it",
    "start": "1476720",
    "end": "1481840"
  },
  {
    "text": "look like it's a stream but anyways you could if you work with files this is how you would do it",
    "start": "1481840",
    "end": "1487120"
  },
  {
    "text": "so if you know their files are not are not too big or they're okay to to work with",
    "start": "1487120",
    "end": "1492640"
  },
  {
    "text": "them by allocating the whole thing if you still think this is not good you could use a normal http endpoint to",
    "start": "1492640",
    "end": "1498799"
  },
  {
    "text": "implement file uploads because like we said it's an opt-in thing you could use it alongside your project",
    "start": "1498799",
    "end": "1506720"
  },
  {
    "start": "1507000",
    "end": "1574000"
  },
  {
    "text": "okay so we talked about json transport being the being the data format when serializing",
    "start": "1508000",
    "end": "1515039"
  },
  {
    "text": "and serializing uh but also some very brave souls decided that it's also good to have another data another data",
    "start": "1515039",
    "end": "1522480"
  },
  {
    "text": "transport format and this case it is message pack so by adding a single line",
    "start": "1522480",
    "end": "1528480"
  },
  {
    "text": "to your remoting initialization code called remoting dot with binary serialization",
    "start": "1528480",
    "end": "1534320"
  },
  {
    "text": "of course on both sides the whole transport layer changes into using message pack instead of json which is a",
    "start": "1534320",
    "end": "1540400"
  },
  {
    "text": "compact a compact form of data and it's a lot faster just make sure you you also",
    "start": "1540400",
    "end": "1546080"
  },
  {
    "text": "a lot faster to encode a lot faster to deserialize and it has the same coverage for the",
    "start": "1546080",
    "end": "1551760"
  },
  {
    "text": "json for the json types so there's no types that are better serialized with json than with message",
    "start": "1551760",
    "end": "1557440"
  },
  {
    "text": "back they're all supported just make sure that when you have these out these responses that you",
    "start": "1557440",
    "end": "1564480"
  },
  {
    "text": "can that you enable compression because that will even make the the payload size even smaller when you for for your",
    "start": "1564480",
    "end": "1570799"
  },
  {
    "text": "traffic so this is really really nice okay so",
    "start": "1570799",
    "end": "1576720"
  },
  {
    "start": "1574000",
    "end": "1669000"
  },
  {
    "text": "now we get to the real stuff so i showed you how to create this instance",
    "start": "1576720",
    "end": "1582159"
  },
  {
    "text": "from uh from the record on the back end and give it to remoting dot from value",
    "start": "1582159",
    "end": "1588080"
  },
  {
    "text": "but really really okay you could you could use that if you have um you could use that as well but the",
    "start": "1588080",
    "end": "1595760"
  },
  {
    "text": "there are better ways there are better ways to in to create the instance on the back end so the instance usually has",
    "start": "1595760",
    "end": "1602320"
  },
  {
    "text": "some dependencies right if you work with asp.net core or with anything that has to do with uh",
    "start": "1602320",
    "end": "1609600"
  },
  {
    "text": "yeah basically everything has to do with mvc and svn core you know that you can inject some dependencies and use them in",
    "start": "1609600",
    "end": "1616240"
  },
  {
    "text": "your functions now these dependencies are not part of your definition and they i think they should they shouldn't be",
    "start": "1616240",
    "end": "1622159"
  },
  {
    "text": "like your definition is just how the client is communicating with the with the back end if the back end is",
    "start": "1622159",
    "end": "1627679"
  },
  {
    "text": "using some kind of weird dependencies i don't know like i configuration or ilogger",
    "start": "1627679",
    "end": "1632799"
  },
  {
    "text": "these are the base things that you sometimes need to hook up to some logging sync like elasticsearch or",
    "start": "1632799",
    "end": "1638320"
  },
  {
    "text": "whatnot so long story short you need the cont the http context",
    "start": "1638320",
    "end": "1644480"
  },
  {
    "text": "to create these um these instances and you can do that so you have another function called from",
    "start": "1644480",
    "end": "1650480"
  },
  {
    "text": "context which gives you the http context of the request of the request",
    "start": "1650480",
    "end": "1655600"
  },
  {
    "text": "that that from which you can create the instance okay in this case i'm using it",
    "start": "1655600",
    "end": "1661200"
  },
  {
    "text": "here as input but i'm not actually using it to create the to-do ipi i'm just returning it which is possible that's",
    "start": "1661200",
    "end": "1667120"
  },
  {
    "text": "the easiest way but what you could do is for example have the uh record",
    "start": "1667120",
    "end": "1673520"
  },
  {
    "start": "1669000",
    "end": "1721000"
  },
  {
    "text": "the record instance be dependent on a couple of things like the like the configuration and like the logger and",
    "start": "1673520",
    "end": "1680159"
  },
  {
    "text": "use those two in the definition of each function or just the functions that need them et cetera et cetera and then from",
    "start": "1680159",
    "end": "1686720"
  },
  {
    "text": "the context you could require these services you could require these framework injected services by asp.net",
    "start": "1686720",
    "end": "1693600"
  },
  {
    "text": "i'm talking about giraffe in this case because only giraffe is giraffe and saturn are connected to asp.net core so",
    "start": "1693600",
    "end": "1700960"
  },
  {
    "text": "and asp.net core has a lot of injected things that injected services that you could require and use in your",
    "start": "1700960",
    "end": "1706880"
  },
  {
    "text": "application so here in this case we're only requiring the config requiring the logger and using them to create our",
    "start": "1706880",
    "end": "1714960"
  },
  {
    "text": "record instance so you could easily hook up the things that are available from asp.net core",
    "start": "1714960",
    "end": "1721200"
  },
  {
    "start": "1721000",
    "end": "1986000"
  },
  {
    "text": "all right so far so good okay so before we get into more of this i'll start actually",
    "start": "1722000",
    "end": "1728799"
  },
  {
    "text": "showing you how to showing an example okay does this work",
    "start": "1728799",
    "end": "1735039"
  },
  {
    "text": "yeah okay so here i have basically this i have a basic uh safe stack application i'll try",
    "start": "1735039",
    "end": "1742000"
  },
  {
    "text": "and talk to you about in a bit about safe stack uh because it includes faber remoting by default as the way to",
    "start": "1742000",
    "end": "1748799"
  },
  {
    "text": "communicate and here i have uh basically deleted a bunch of stuff where i have the protocol",
    "start": "1748799",
    "end": "1755520"
  },
  {
    "text": "here it has two things it has to do's and add to do",
    "start": "1755520",
    "end": "1760720"
  },
  {
    "text": "you you've seen you've seen this before right i just showed you so we have a to-do which is our shared type",
    "start": "1760720",
    "end": "1767440"
  },
  {
    "text": "and we have the i to do's api which is the shape of the protocol sometimes",
    "start": "1767440",
    "end": "1772640"
  },
  {
    "text": "there will be an i as a prefix prefix because it also can",
    "start": "1772640",
    "end": "1777840"
  },
  {
    "text": "be considered as an interface kinda so there's an i there and then the implementation will not have an eye the",
    "start": "1777840",
    "end": "1784799"
  },
  {
    "text": "concrete implementation so here i have the the shared type that i want to implement",
    "start": "1784799",
    "end": "1791360"
  },
  {
    "text": "and on the server let's see where is the server",
    "start": "1791360",
    "end": "1795840"
  },
  {
    "text": "so on the server uh we have the we have it here but it's not implemented so what",
    "start": "1797279",
    "end": "1802799"
  },
  {
    "text": "i will do i will i will implement it the way i will do it if i'm doing production style code so i want to be able to",
    "start": "1802799",
    "end": "1809440"
  },
  {
    "text": "easily inject dependencies i want to be able to use these dependencies from the from the",
    "start": "1809440",
    "end": "1815919"
  },
  {
    "text": "from the functions without too much fluffing around with propagating everything manually i don't",
    "start": "1815919",
    "end": "1821600"
  },
  {
    "text": "like that i'll just use whatever asp.net core has given me so what i have is",
    "start": "1821600",
    "end": "1828080"
  },
  {
    "text": "well it's it's an implementation",
    "start": "1828080",
    "end": "1834000"
  },
  {
    "text": "let's see okay let me increase the size okay so what i have",
    "start": "1834880",
    "end": "1841360"
  },
  {
    "text": "here is a class okay is a class that is uh that has these two",
    "start": "1841360",
    "end": "1848240"
  },
  {
    "text": "functions this class still doesn't have to do anything with the itodose api okay it",
    "start": "1848240",
    "end": "1854399"
  },
  {
    "text": "has two functions to do's which returns the to-do's from this concurrent dictionary and there's an ad to do which",
    "start": "1854399",
    "end": "1860640"
  },
  {
    "text": "takes a description and returns the added to do or the updated to do if it's",
    "start": "1860640",
    "end": "1865919"
  },
  {
    "text": "already there okay so i want to use this to create the to do's api and i could do",
    "start": "1865919",
    "end": "1872799"
  },
  {
    "text": "that by creating an instance from it but actually it's a lot easier to do this so i will have",
    "start": "1872799",
    "end": "1880559"
  },
  {
    "text": "a member member this i usually call it build and build",
    "start": "1880559",
    "end": "1887200"
  },
  {
    "text": "returns a i to do this api",
    "start": "1887200",
    "end": "1893200"
  },
  {
    "text": "where to do's where the implementation of the to do's function is coming from",
    "start": "1893200",
    "end": "1898799"
  },
  {
    "text": "this dot to do's and add to do is",
    "start": "1898799",
    "end": "1904840"
  },
  {
    "text": "this don't add to do all right so we have this build function",
    "start": "1904840",
    "end": "1912000"
  },
  {
    "text": "that initializes each function and uses the reason i'm using this is because",
    "start": "1912000",
    "end": "1917039"
  },
  {
    "text": "i want to have some dependencies injected in the constructor and using them in the function bodies without",
    "start": "1917039",
    "end": "1922240"
  },
  {
    "text": "having to say that they have that they explicitly require this or that there are multiple ways to do this this is the",
    "start": "1922240",
    "end": "1927919"
  },
  {
    "text": "one i think is the easiest that gets stuff done of course you could do it on many multiple ways like i've shown you",
    "start": "1927919",
    "end": "1933600"
  },
  {
    "text": "in the in the slide but let's say here i wanted i logger of",
    "start": "1933600",
    "end": "1939840"
  },
  {
    "text": "well it's a logger of type i logger of this thing",
    "start": "1939840",
    "end": "1946559"
  },
  {
    "text": "okay now i know i can gen i can i can generate this i can instantiate this myself but i want to let asp.net core",
    "start": "1946840",
    "end": "1953440"
  },
  {
    "text": "generate it for me i want it to be injected by the framework i might also need like i http client",
    "start": "1953440",
    "end": "1959440"
  },
  {
    "text": "factory like things these weird things that that can be added in here so i could get the logger and actually",
    "start": "1959440",
    "end": "1966640"
  },
  {
    "text": "use it here so let's say logger log information",
    "start": "1966640",
    "end": "1974480"
  },
  {
    "text": "adding to do with the description",
    "start": "1975120",
    "end": "1981360"
  },
  {
    "text": "description okay so we've injected the logger we've used",
    "start": "1982000",
    "end": "1987440"
  },
  {
    "start": "1986000",
    "end": "2038000"
  },
  {
    "text": "we've used it so how do we create how do you create the web app from it so the the way to do that is you have to",
    "start": "1987440",
    "end": "1994240"
  },
  {
    "text": "use something called service config which will configure services",
    "start": "1994240",
    "end": "2001519"
  },
  {
    "text": "configure services let's see let's configure services it",
    "start": "2001519",
    "end": "2006559"
  },
  {
    "text": "takes the services you want to configure and that's an iservice collection",
    "start": "2006559",
    "end": "2012880"
  },
  {
    "text": "and well returns itself but i don't want to return itself i want to [Music]",
    "start": "2012880",
    "end": "2019760"
  },
  {
    "text": "add a singleton of the to do",
    "start": "2019760",
    "end": "2026799"
  },
  {
    "text": "api so i'm added i've added a singleton instance of this to do api so every time",
    "start": "2027039",
    "end": "2033600"
  },
  {
    "text": "it's required it will give this that same instance back okay",
    "start": "2033600",
    "end": "2038720"
  },
  {
    "start": "2038000",
    "end": "2089000"
  },
  {
    "text": "so now that i've registered it i can use it from the context and",
    "start": "2038720",
    "end": "2043919"
  },
  {
    "text": "here i will do that so here i will say from context which is a",
    "start": "2043919",
    "end": "2049679"
  },
  {
    "text": "a function of the context which is in http",
    "start": "2049679",
    "end": "2055200"
  },
  {
    "text": "context yes the http context",
    "start": "2055200",
    "end": "2061839"
  },
  {
    "text": "getservice so i will require",
    "start": "2062960",
    "end": "2069358"
  },
  {
    "text": "the to do api which automatically requires everything that is a dependency of this class",
    "start": "2069359",
    "end": "2076320"
  },
  {
    "text": "without me having to give it explicitly and now that i have a to do api instance",
    "start": "2076320",
    "end": "2081599"
  },
  {
    "text": "i could say dot build which gives me the instance",
    "start": "2081599",
    "end": "2086878"
  },
  {
    "text": "of of that record so i know this is a bit of a round",
    "start": "2086879",
    "end": "2092079"
  },
  {
    "text": "roundabout way but it is it effectively makes sure makes it easy to use dependencies from asp.net core and have",
    "start": "2092079",
    "end": "2099119"
  },
  {
    "text": "them available here so because build returns that i to do api thing that we talked about and that's how we hook it",
    "start": "2099119",
    "end": "2105440"
  },
  {
    "text": "up to azure to asp.net core and saturn in this case all right so we want we won't need this",
    "start": "2105440",
    "end": "2112640"
  },
  {
    "text": "anymore so let's give that a try see if it works web app",
    "start": "2112640",
    "end": "2118160"
  },
  {
    "text": "registered here run the app all right",
    "start": "2118160",
    "end": "2123680"
  },
  {
    "text": "dotnet run and wait for it a little bit to compile because this is both back end",
    "start": "2125680",
    "end": "2130880"
  },
  {
    "text": "and front end now i haven't changed a lot on the front end because i just simplified the add to do instead of",
    "start": "2130880",
    "end": "2136560"
  },
  {
    "text": "taking it to do now it takes a string so i didn't change a lot here this is just",
    "start": "2136560",
    "end": "2142240"
  },
  {
    "text": "an elmish an lms front-end that uses the api so the api here",
    "start": "2142240",
    "end": "2150240"
  },
  {
    "text": "okay now that shouldn't open the back end it should open the front-end but that's okay um",
    "start": "2150720",
    "end": "2156240"
  },
  {
    "text": "let's see so the to-dos api is constructed here again the front line doesn't care about",
    "start": "2156240",
    "end": "2162880"
  },
  {
    "start": "2160000",
    "end": "2219000"
  },
  {
    "text": "how that it was created or constructed on the on the back end it only knows okay i will create a proxy for this",
    "start": "2162880",
    "end": "2168240"
  },
  {
    "text": "thing and call it to be able to do stuff on the back end all right so let me",
    "start": "2168240",
    "end": "2174400"
  },
  {
    "text": "go to 8080 i guess localhost 8080",
    "start": "2174400",
    "end": "2180400"
  },
  {
    "text": "well there you go it's it's empty but yeah it's empty because",
    "start": "2180400",
    "end": "2185520"
  },
  {
    "text": "the concurrent dictionary is an in-memory collection every time i restart the server it will it will be",
    "start": "2185520",
    "end": "2190960"
  },
  {
    "text": "empty so let me add stuff learn f-sharp",
    "start": "2190960",
    "end": "2197920"
  },
  {
    "text": "i've added it and now it's add stuff so learn of sharp learn fable remoting",
    "start": "2198640",
    "end": "2205760"
  },
  {
    "text": "and have fun",
    "start": "2205760",
    "end": "2209599"
  },
  {
    "text": "okay now if i refresh it should get those back because i know it's adding them right now on the client side of",
    "start": "2210880",
    "end": "2216800"
  },
  {
    "text": "things but if i refresh hey it gets them so let's look at the",
    "start": "2216800",
    "end": "2223119"
  },
  {
    "start": "2219000",
    "end": "2339000"
  },
  {
    "text": "logs so here we have",
    "start": "2223119",
    "end": "2228480"
  },
  {
    "text": "adding to do learn f sharp so it did register everything it did call",
    "start": "2228480",
    "end": "2233520"
  },
  {
    "text": "my functionality from the from the front end without having to do anything basically",
    "start": "2233520",
    "end": "2239280"
  },
  {
    "text": "and of course because this is injected it knows everything so here",
    "start": "2239280",
    "end": "2244400"
  },
  {
    "text": "you can actually see that it's using these routes which you can overwrite if",
    "start": "2244400",
    "end": "2249520"
  },
  {
    "text": "you want but we but this is rpc so it will it will look like this where the function name is part of the url",
    "start": "2249520",
    "end": "2257839"
  },
  {
    "text": "okay you could actually look at what it's doing it's",
    "start": "2257839",
    "end": "2262880"
  },
  {
    "text": "let's look at for example at the network tab and listen to the the xhr",
    "start": "2262880",
    "end": "2272960"
  },
  {
    "text": "more things send so we could look at it it's",
    "start": "2273680",
    "end": "2279040"
  },
  {
    "text": "sent a request to add to do it's sent an array where it has one element",
    "start": "2279040",
    "end": "2286720"
  },
  {
    "text": "that string that i sent and then it got these things back this this is the response that i got",
    "start": "2286720",
    "end": "2292160"
  },
  {
    "text": "back and it was added to the to the list on the front end all right",
    "start": "2292160",
    "end": "2297359"
  },
  {
    "text": "so it's not using anything weird like even if you look at the request the only thing that is remoting specific is i",
    "start": "2297359",
    "end": "2304079"
  },
  {
    "text": "think an is a specif is a specialized header maybe like request headers",
    "start": "2304079",
    "end": "2310960"
  },
  {
    "text": "uh let's see i thought we sent an extra header maybe",
    "start": "2311440",
    "end": "2320400"
  },
  {
    "text": "yeah x remoting proxy just just have you need to if you need to analyze them on the on the back end",
    "start": "2320400",
    "end": "2326400"
  },
  {
    "text": "you can differentiate remoting requests from other requests using this header just just in case",
    "start": "2326400",
    "end": "2332240"
  },
  {
    "text": "all right this is pretty much how it works i think",
    "start": "2332240",
    "end": "2338599"
  },
  {
    "start": "2339000",
    "end": "2436000"
  },
  {
    "text": "i think this is all there is like almost all there is to it well i'll talk a bit about there's more but it basically this",
    "start": "2340079",
    "end": "2347520"
  },
  {
    "text": "is all there is to it if you want to add if you want to add new things you simply go back to your shared interface",
    "start": "2347520",
    "end": "2354480"
  },
  {
    "text": "add a new function and implement add a new function and just by adding a new function to the definition you will get errors the",
    "start": "2354480",
    "end": "2361680"
  },
  {
    "text": "compiler will tell you what to do next so if you add a function here it will tell you well you actually well let's",
    "start": "2361680",
    "end": "2368720"
  },
  {
    "text": "say to do by id it takes a good and returns an async of",
    "start": "2368720",
    "end": "2378000"
  },
  {
    "text": "to do option right so just by adding it here well it's now automatically",
    "start": "2378000",
    "end": "2383200"
  },
  {
    "text": "available from the front end but it's not really because it needs to be implemented on the server so the server",
    "start": "2383200",
    "end": "2388960"
  },
  {
    "text": "will give you give you a compile error saying well you haven't implemented this function yet so you could immediately",
    "start": "2388960",
    "end": "2395920"
  },
  {
    "text": "start start doing that let's see if well i won't implement it it's just too",
    "start": "2395920",
    "end": "2401920"
  },
  {
    "text": "boring but i just wanted to show you that each change in the definition will propagate throughout the application",
    "start": "2401920",
    "end": "2407920"
  },
  {
    "text": "will probably get throughout the back end which will tell you okay these things change you have to accommodate for these changes the same thing on the",
    "start": "2407920",
    "end": "2414319"
  },
  {
    "text": "back on the front end if you change the name of the function for example you have to change it on the back end as well because otherwise",
    "start": "2414319",
    "end": "2420560"
  },
  {
    "text": "it's it's not there anymore and the compiler will tell you so this is really um",
    "start": "2420560",
    "end": "2425680"
  },
  {
    "text": "the power of depending on the compiler to tell you these things and",
    "start": "2425680",
    "end": "2431359"
  },
  {
    "text": "just making sure that the serialization and the and the data transport is working properly",
    "start": "2431359",
    "end": "2436880"
  },
  {
    "start": "2436000",
    "end": "2635000"
  },
  {
    "text": "all right so that was it for the little demo what i want to show you more is",
    "start": "2436880",
    "end": "2443280"
  },
  {
    "text": "about the so i've showed you how to require and use dependencies um",
    "start": "2443280",
    "end": "2450480"
  },
  {
    "text": "next up i'll talk a little bit about documentation so i've talked about how this is actually",
    "start": "2450480",
    "end": "2457599"
  },
  {
    "text": "for internal use but even for internal use having a bit of documentation like an interactive documentation is nice",
    "start": "2457599",
    "end": "2464560"
  },
  {
    "text": "so this there's a feature in remoting that's called well the doc the automatic documentation",
    "start": "2464560",
    "end": "2470720"
  },
  {
    "text": "generation let me uh let me do that let me add that to the server here",
    "start": "2470720",
    "end": "2476319"
  },
  {
    "text": "so if i go to server i have i need two things at least i need the docs which is",
    "start": "2476319",
    "end": "2482800"
  },
  {
    "text": "docs create for i to to do's",
    "start": "2482800",
    "end": "2488720"
  },
  {
    "text": "i to do api is it to do api is it to-do's api yeah there you go",
    "start": "2488720",
    "end": "2496800"
  },
  {
    "text": "i need the docs and i need like this is the docs builder and this is the",
    "start": "2496800",
    "end": "2503040"
  },
  {
    "text": "to-do's api docs it is remoting a documentation",
    "start": "2503040",
    "end": "2510560"
  },
  {
    "text": "give it a title like to do api and for now just an empty list of routes",
    "start": "2510560",
    "end": "2517280"
  },
  {
    "text": "okay so the documentation is a function that takes the name which is the title of the documentation page",
    "start": "2517280",
    "end": "2523839"
  },
  {
    "text": "and takes this list of documentation for specific enhanced",
    "start": "2523839",
    "end": "2529920"
  },
  {
    "text": "documentation for specific routes because even if i just give it an empty list of routes it will automatically",
    "start": "2529920",
    "end": "2536000"
  },
  {
    "text": "generate docks for the existing ones so let's start using that",
    "start": "2536000",
    "end": "2543040"
  },
  {
    "text": "remoting dot with docs i want that to go to api slash to do",
    "start": "2544319",
    "end": "2551839"
  },
  {
    "text": "slash docs and give it this docs all right",
    "start": "2551839",
    "end": "2557920"
  },
  {
    "text": "i'm not sure if it's started okay okay recompiled that's good",
    "start": "2557920",
    "end": "2565359"
  },
  {
    "text": "let's go to localhost 8005 because this is running on the back end right and then api",
    "start": "2565359",
    "end": "2571520"
  },
  {
    "text": "to do docs okay so without doing anything it",
    "start": "2571520",
    "end": "2577359"
  },
  {
    "text": "generated this page which allows you to call these functions now this shows you a little bit of what's happening under",
    "start": "2577359",
    "end": "2584079"
  },
  {
    "text": "the hood because it shows it shows you that for a function that doesn't need any inputs it's mapped to a get request",
    "start": "2584079",
    "end": "2590880"
  },
  {
    "text": "and and one that does need input like the one ad to do it is mapped to a post",
    "start": "2590880",
    "end": "2596240"
  },
  {
    "text": "function we could go here and say try it out it returns an empty list",
    "start": "2596240",
    "end": "2603520"
  },
  {
    "text": "an ad to do takes a request body this is not very like you end user friendly but maybe a little",
    "start": "2603520",
    "end": "2610000"
  },
  {
    "text": "bit developer friendly too it's it's not perfect i know but it is something instead of just having to use the ui to",
    "start": "2610000",
    "end": "2616880"
  },
  {
    "text": "do this so add to do will take learn learn f sharp for example",
    "start": "2616880",
    "end": "2624400"
  },
  {
    "text": "try it out gives you the to do back now if you try this out you get the you get a list of to do is from here so",
    "start": "2624400",
    "end": "2630400"
  },
  {
    "text": "this is just a little interactive ui to to do the to do things here",
    "start": "2630400",
    "end": "2635680"
  },
  {
    "start": "2635000",
    "end": "2727000"
  },
  {
    "text": "and i think they become more attractive when you start enhancing the docs so if i have here i say docs",
    "start": "2635680",
    "end": "2643200"
  },
  {
    "text": "i choose the route i want to enhance in this case the api",
    "start": "2643200",
    "end": "2649920"
  },
  {
    "text": "the what is it called add to do api",
    "start": "2649920",
    "end": "2654560"
  },
  {
    "text": "this is the right this is how i choose the route i never have to know what the url has to be at the end i just tell it",
    "start": "2655200",
    "end": "2661839"
  },
  {
    "text": "well it's the add to do function that i want to choose and this is also type safe like you can't you can't choose",
    "start": "2661839",
    "end": "2667200"
  },
  {
    "text": "something that's not part of the api so add to do",
    "start": "2667200",
    "end": "2672319"
  },
  {
    "text": "let's say docs uh give it a description",
    "start": "2672319",
    "end": "2677760"
  },
  {
    "text": "adds a new to do to the back end",
    "start": "2677760",
    "end": "2684079"
  },
  {
    "text": "and let's give it some examples so example are also",
    "start": "2684079",
    "end": "2689599"
  },
  {
    "text": "type safe so fun api is api dot",
    "start": "2689599",
    "end": "2696000"
  },
  {
    "text": "well add to do learn f sharp let's make another one",
    "start": "2696000",
    "end": "2704520"
  },
  {
    "text": "learn f-sharp learn remoting okay",
    "start": "2706079",
    "end": "2711119"
  },
  {
    "text": "so this is like one route if you need more routes then you just go here and start adding new ones",
    "start": "2711440",
    "end": "2718480"
  },
  {
    "text": "so this will be enhanced once",
    "start": "2718480",
    "end": "2722160"
  },
  {
    "start": "2727000",
    "end": "2770000"
  },
  {
    "text": "all right it's restarted let's refresh add to do now has",
    "start": "2727920",
    "end": "2733359"
  },
  {
    "text": "a drop down of the examples so you go example one it will have this one try it out",
    "start": "2733359",
    "end": "2739359"
  },
  {
    "text": "example two learn remoting try it out and now if you go back to this one try it out you'll get both of them and it",
    "start": "2739359",
    "end": "2746319"
  },
  {
    "text": "adds the description here so it's it's kind of nice it's not",
    "start": "2746319",
    "end": "2751920"
  },
  {
    "text": "perfect it needs more love but for now it it works quite nice",
    "start": "2751920",
    "end": "2757359"
  },
  {
    "text": "all right so this is the this is the generated",
    "start": "2757359",
    "end": "2763040"
  },
  {
    "text": "docs even if you don't want to do that by hand you could just rely on the empty list of things and it will generate the",
    "start": "2763040",
    "end": "2768400"
  },
  {
    "text": "docs for you okay so there are more things here to learn",
    "start": "2768400",
    "end": "2773839"
  },
  {
    "start": "2770000",
    "end": "2907000"
  },
  {
    "text": "from there is like the remoting with error handler with error handler which allows you with",
    "start": "2773839",
    "end": "2780800"
  },
  {
    "text": "which allows you for example if something wrong happens on the back end that you did not expect you did not account for like any exception that",
    "start": "2780800",
    "end": "2787520"
  },
  {
    "text": "happened whether you when you called the database or read a file you didn't have access to an exception will be thrown",
    "start": "2787520",
    "end": "2794480"
  },
  {
    "text": "but what happens is that what happens is that the exceptions are all proper are all going through this",
    "start": "2794480",
    "end": "2800640"
  },
  {
    "text": "global error handler in which you can choose in which you can choose whether you want",
    "start": "2800640",
    "end": "2806560"
  },
  {
    "text": "to either propagate more error information down to the front end let's see the type",
    "start": "2806560",
    "end": "2812000"
  },
  {
    "text": "actually so the handler is type error handler and if i can",
    "start": "2812000",
    "end": "2818880"
  },
  {
    "text": "ah i think it's error",
    "start": "2818880",
    "end": "2824400"
  },
  {
    "text": "error dot i'm pretty sure it it it took more than",
    "start": "2824800",
    "end": "2831520"
  },
  {
    "text": "just the the just the exception anyways there's the the it's a part it's",
    "start": "2831520",
    "end": "2836960"
  },
  {
    "text": "a part of documentation i did not prepare for this one uh but basically you have access both to the http context",
    "start": "2836960",
    "end": "2843520"
  },
  {
    "text": "again and the error that occurred and you can choose what to do with that when propagating the error information back",
    "start": "2843520",
    "end": "2850000"
  },
  {
    "text": "to the front end so i don't know if you've seen it but i've definitely seen some",
    "start": "2850000",
    "end": "2855119"
  },
  {
    "text": "production applications showing stack traces on their pages when things fail which is not what you want so for with",
    "start": "2855119",
    "end": "2862160"
  },
  {
    "text": "the error handler with airhead you could choose specific information to return based on the based",
    "start": "2862160",
    "end": "2867280"
  },
  {
    "text": "on the exception itself and then on the front end it will actually throw an exception so you know",
    "start": "2867280",
    "end": "2873599"
  },
  {
    "text": "if you call things from the from the remoting thing from the remoting proxy you have to try catch it in case uh in",
    "start": "2873599",
    "end": "2880720"
  },
  {
    "text": "case something goes wrong there are ways to work around that such that you never have to try catch it but just do only",
    "start": "2880720",
    "end": "2887599"
  },
  {
    "text": "like you can wrap it and make it return either the thing or a result of the error but other than that it will you",
    "start": "2887599",
    "end": "2894960"
  },
  {
    "text": "know if something goes wrong on the back end it will throw an exception on the front head",
    "start": "2894960",
    "end": "2901839"
  },
  {
    "text": "all right what else let's see",
    "start": "2902079",
    "end": "2908480"
  },
  {
    "start": "2907000",
    "end": "2937000"
  },
  {
    "text": "all right so yeah to get started with this where do you where do you start there's a bunch of libraries in fable remoting but the easiest way to",
    "start": "2908559",
    "end": "2914640"
  },
  {
    "text": "get started with it is to go to safe stack and install the template and dotnet.net new save that's what i did",
    "start": "2914640",
    "end": "2921359"
  },
  {
    "text": "that's what i did when i make this example instead i just rewrote the back end a little bit to",
    "start": "2921359",
    "end": "2927520"
  },
  {
    "text": "make it more usable for this demo so that's the easiest way basically it's it's been it's been there by default for",
    "start": "2927520",
    "end": "2934240"
  },
  {
    "text": "a while now um looks like i am wrapping up so i want to",
    "start": "2934240",
    "end": "2942240"
  },
  {
    "start": "2937000",
    "end": "3079000"
  },
  {
    "text": "make some special thanks to web sharper because when i started learning f-sharp i looked",
    "start": "2942240",
    "end": "2949040"
  },
  {
    "text": "at web sharper which is another full stack f-sharp web app platform",
    "start": "2949040",
    "end": "2954559"
  },
  {
    "text": "basically allows you to write f sharp on the client on the front end and lets you build your application with it a huge",
    "start": "2954559",
    "end": "2961760"
  },
  {
    "text": "fan and i when i saw their remoting feature i really wanted i was mind blown but",
    "start": "2961760",
    "end": "2968240"
  },
  {
    "text": "when fable started supporting a proper reflection system on the front end",
    "start": "2968240",
    "end": "2973760"
  },
  {
    "text": "that's where the the click for me was to start actually implementing faber remoting but then for",
    "start": "2973760",
    "end": "2979520"
  },
  {
    "text": "fable i so web shopper was a huge inspiration for me to start building this thing",
    "start": "2979520",
    "end": "2985280"
  },
  {
    "text": "of course i want to thank alfonso for building fable he and he always put up with my issues",
    "start": "2985280",
    "end": "2991359"
  },
  {
    "text": "about reflection not working as i expected even though sometimes it's not good but right now it's very very uh it",
    "start": "2991359",
    "end": "2998160"
  },
  {
    "text": "has a very solid reflection system that you you can use it's really nice and of",
    "start": "2998160",
    "end": "3003520"
  },
  {
    "text": "course fab remoting is not just me it's been there for five almost five years now and i've had a lot of really really",
    "start": "3003520",
    "end": "3010839"
  },
  {
    "text": "amazing contributors who do things that are a lot complicated than than i understand",
    "start": "3010839",
    "end": "3016160"
  },
  {
    "text": "really like for example kirams has been implementing the message back implementation from scratch even though",
    "start": "3016160",
    "end": "3021520"
  },
  {
    "text": "remoting itself wasn't designed to be configurable to to be to switch out the",
    "start": "3021520",
    "end": "3027040"
  },
  {
    "text": "transport the transport data format but there are good use cases for this",
    "start": "3027040",
    "end": "3032400"
  },
  {
    "text": "where like you have a lot of binary data a lot of like a lot i know a lot of people uh",
    "start": "3032400",
    "end": "3037599"
  },
  {
    "text": "some people use it for moving things like 3d models from the back into",
    "start": "3037599",
    "end": "3043680"
  },
  {
    "text": "the front end and it's usually in in bytes so it apparently is a lot easier and better to",
    "start": "3043680",
    "end": "3049440"
  },
  {
    "text": "use a binary the binary format for this uh of course cody has been helping me a",
    "start": "3049440",
    "end": "3054880"
  },
  {
    "text": "lot for in february emoting and other and other projects uh diego has helped me with",
    "start": "3054880",
    "end": "3060720"
  },
  {
    "text": "this a long time ago with implementing it it had a websocket it had a websocket branch i think but then it it moved out",
    "start": "3060720",
    "end": "3068000"
  },
  {
    "text": "to its own library because fabler remoting is just stateless functions there's no there's no persisted states",
    "start": "3068000",
    "end": "3074400"
  },
  {
    "text": "in the in these functions and a lot many many more contributors",
    "start": "3074400",
    "end": "3080240"
  },
  {
    "start": "3079000",
    "end": "3167000"
  },
  {
    "text": "and with that uh would love to hear from you if you have any questions",
    "start": "3080319",
    "end": "3086558"
  },
  {
    "text": "[Music] are you yes able to write your own example",
    "start": "3092960",
    "end": "3100319"
  },
  {
    "text": "in the developer friendly way like you shown before excuse me sorry",
    "start": "3100319",
    "end": "3106720"
  },
  {
    "text": "what do you mean write my own example in the in the editor after writing",
    "start": "3106720",
    "end": "3113200"
  },
  {
    "text": "oh yeah um good one actually so the question is if if you had already",
    "start": "3114880",
    "end": "3120640"
  },
  {
    "text": "defined examples can you write more let me check",
    "start": "3120640",
    "end": "3126559"
  },
  {
    "text": "yes you can there's only one way to find out it does",
    "start": "3128000",
    "end": "3133760"
  },
  {
    "text": "it does work so i think the example the the drop downs simply like pre-populate populate the input for",
    "start": "3133760",
    "end": "3141280"
  },
  {
    "text": "this one all right anything else",
    "start": "3141280",
    "end": "3148319"
  },
  {
    "text": "if not then thanks a lot for coming and i hope you enjoyed the talk see you next time",
    "start": "3148319",
    "end": "3154690"
  },
  {
    "text": "[Applause]",
    "start": "3154690",
    "end": "3159920"
  },
  {
    "text": "you",
    "start": "3167440",
    "end": "3169520"
  }
]