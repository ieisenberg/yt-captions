[
  {
    "text": "how's lunch wow now I'm used to being loud but that was very loud did you have a good lunch",
    "start": "7080",
    "end": "14960"
  },
  {
    "text": "yes now whenever I get a slot that is right after lunch I tend to always tell people about my G background so I'm half",
    "start": "14960",
    "end": "21600"
  },
  {
    "text": "Spanish half Moroccan and if I don't get a siesta you don't get a siesta",
    "start": "21600",
    "end": "28039"
  },
  {
    "text": "okay um now I'm here to to talk to you today about uh observability and",
    "start": "28039",
    "end": "33520"
  },
  {
    "text": "basically how to effectively spy on your systems if you will now my name is lla",
    "start": "33520",
    "end": "39960"
  },
  {
    "text": "bua I'm a software engineer solution architect I work for a company called particular software where we build and",
    "start": "39960",
    "end": "45320"
  },
  {
    "text": "service bus and you can find me online you can find me here feel free to come and chat to",
    "start": "45320",
    "end": "51199"
  },
  {
    "text": "me now uh I'm assuming everyone knows what observability is but you know I",
    "start": "51199",
    "end": "58879"
  },
  {
    "text": "still want to take some time to ensure that we align on the definition of that",
    "start": "58879",
    "end": "63920"
  },
  {
    "text": "right so for a system to be observable we basically want to be able to",
    "start": "63920",
    "end": "69119"
  },
  {
    "text": "understand how it's behaving and that means both the expected State and the",
    "start": "69119",
    "end": "74240"
  },
  {
    "text": "unexpected state that the system may arrive to which kind of means that you need to be able to know what you don't",
    "start": "74240",
    "end": "80880"
  },
  {
    "text": "know now also we want to be able to do that Based on data that is stored",
    "start": "80880",
    "end": "86720"
  },
  {
    "text": "outside of the system so no going into your SQL ser database and querying data",
    "start": "86720",
    "end": "91759"
  },
  {
    "text": "that doesn't mean that your system is observable because you're going into the system to get that Insight we want to be",
    "start": "91759",
    "end": "97439"
  },
  {
    "text": "able to do that based on information that is stored outside of the system and we also want to use specialized tools to",
    "start": "97439",
    "end": "103960"
  },
  {
    "text": "actually analyze and query that information and our main goal is that we can then extract actionable insights",
    "start": "103960",
    "end": "110920"
  },
  {
    "text": "from that information to then go back to our application improve it make some changes and see what you know what can",
    "start": "110920",
    "end": "117640"
  },
  {
    "text": "be improved maybe there's a bug to fix or maybe there's some performance that we want to improve upon okay cool now",
    "start": "117640",
    "end": "125439"
  },
  {
    "text": "the question is why would you want this in your system and there are actually multiple reasons why you would want to",
    "start": "125439",
    "end": "132120"
  },
  {
    "text": "make your system more observable the first one is actually the reason that I got so interested in observability",
    "start": "132120",
    "end": "139000"
  },
  {
    "text": "because like I said I work for a company called particular software we build on service bus which is a framework that",
    "start": "139000",
    "end": "144840"
  },
  {
    "text": "makes it easier for you to build message driven event driven type of systems but before I join the company I spent years",
    "start": "144840",
    "end": "151480"
  },
  {
    "text": "building these systems out there in the field and although I love these types of architectures one of the things that I",
    "start": "151480",
    "end": "158360"
  },
  {
    "text": "really hated about it is that it's incredibly hard to troubleshoot failures",
    "start": "158360",
    "end": "164080"
  },
  {
    "text": "because usually something fails and you see something that happens an exception somewhere but in order to understand",
    "start": "164080",
    "end": "171239"
  },
  {
    "text": "where that came from you usually have to go find the root cause five six seven Services up so that made it really",
    "start": "171239",
    "end": "178400"
  },
  {
    "text": "complex and that's one of the reasons that I got into observability but it could also be",
    "start": "178400",
    "end": "184400"
  },
  {
    "text": "because you know you want to get a better sense of how your system is performing whether it's healthy whether",
    "start": "184400",
    "end": "190319"
  },
  {
    "text": "everything is running so basically focus a little bit more on monitoring because",
    "start": "190319",
    "end": "195440"
  },
  {
    "text": "again we're in this microservice distributed system type of space or you know distributed ball of balls of mud",
    "start": "195440",
    "end": "201159"
  },
  {
    "text": "whatever you're building it's all good but the thing is that when someone says",
    "start": "201159",
    "end": "206519"
  },
  {
    "text": "is the system up that becomes a more tricky question to answer because that means",
    "start": "206519",
    "end": "212360"
  },
  {
    "text": "that all of the services should be up or maybe not necessarily maybe we want to know whether you know we can fulfill",
    "start": "212360",
    "end": "218360"
  },
  {
    "text": "orders and maybe there's just this reporting thing that is down so that becomes a a more difficult question to",
    "start": "218360",
    "end": "224239"
  },
  {
    "text": "answer as well we also may want to get better insights into the performance of our",
    "start": "224239",
    "end": "231040"
  },
  {
    "text": "system because again because we've split everything up and components are interacting usually we're not that",
    "start": "231040",
    "end": "237439"
  },
  {
    "text": "interested in the performance of individual component we have perfect tools that can help us create that",
    "start": "237439",
    "end": "243599"
  },
  {
    "text": "insights like a bunch of the the jet brains tools right but now in this",
    "start": "243599",
    "end": "249159"
  },
  {
    "text": "distributed context we actually want to be able to say okay you know this business process how long does that take",
    "start": "249159",
    "end": "255879"
  },
  {
    "text": "how much latency was there how long does it take overall for it to complete another reason could also be to",
    "start": "255879",
    "end": "263440"
  },
  {
    "text": "catch side effects now I'm not only talking about failures but also the stuff that tends to linger in your",
    "start": "263440",
    "end": "268600"
  },
  {
    "text": "system right who's ever been in a situation where they finally find the bug and you're",
    "start": "268600",
    "end": "274400"
  },
  {
    "text": "looking at like all of your data and it's like oo this has been here for two",
    "start": "274400",
    "end": "279560"
  },
  {
    "text": "years right those are the things I'm talking about so observability can help us catch those a little bit up front as",
    "start": "279560",
    "end": "285720"
  },
  {
    "text": "well hopefully next it could also be to get additional insight into your user",
    "start": "285720",
    "end": "291320"
  },
  {
    "text": "segment Behavior right our our user our user base can be really large and we can",
    "start": "291320",
    "end": "296720"
  },
  {
    "text": "have groups of those users that are behaving very differently us using the system in different ways so we might",
    "start": "296720",
    "end": "302120"
  },
  {
    "text": "also want to get additional insight into how they are using the system what types of failures that they are running into",
    "start": "302120",
    "end": "308080"
  },
  {
    "text": "and what types of issues that we see for them as well uh it could also be a way to better",
    "start": "308080",
    "end": "314360"
  },
  {
    "text": "manage how we release features because if you have a really large application and you're introducing a new feature you",
    "start": "314360",
    "end": "320560"
  },
  {
    "text": "just don't want to go all in and release it to your entire customer base what we usually want to do is release it to a",
    "start": "320560",
    "end": "327440"
  },
  {
    "text": "part of our user base and then take a look at you know how's this running is everything going well how do our users",
    "start": "327440",
    "end": "334400"
  },
  {
    "text": "like it are there any issues occurring and things like that before we then go big",
    "start": "334400",
    "end": "339880"
  },
  {
    "text": "bang um and then finally chaos engineering which is a very good technique to unleash Chaos on your",
    "start": "339880",
    "end": "345960"
  },
  {
    "text": "system but the idea is basically that we're just going to start pressuring it to see where it starts failing first and",
    "start": "345960",
    "end": "352160"
  },
  {
    "text": "then based on that information go and actually improve how our system is behaving right but without any idea of",
    "start": "352160",
    "end": "359479"
  },
  {
    "text": "how how your system is behaving from the outside how are you going to go and fix that chaos that you're now",
    "start": "359479",
    "end": "366599"
  },
  {
    "text": "perceiving now I find that we're actually in a really interesting period when it comes to observability in this",
    "start": "366599",
    "end": "372599"
  },
  {
    "text": "industry because over the last few years the industry has both been implementing and adopting the open Telemetry project",
    "start": "372599",
    "end": "380199"
  },
  {
    "text": "now open Telemetry is an open source observability project framework and it's",
    "start": "380199",
    "end": "385599"
  },
  {
    "text": "a project led by the cloud native Computing foundation and it's actually their second highest velocity project",
    "start": "385599",
    "end": "392440"
  },
  {
    "text": "after kubernetes so it's a pretty crazy um and it it basically provides a",
    "start": "392440",
    "end": "398720"
  },
  {
    "text": "set of apis and sdks and and Frameworks that enable us to basically standardize",
    "start": "398720",
    "end": "405280"
  },
  {
    "text": "how we instrument how we generate and how we collect all of that information all that Telemetry from our",
    "start": "405280",
    "end": "412840"
  },
  {
    "text": "applications it is also available cross runtime and crossplatform 11 11 languages is it 12 okay so 12",
    "start": "412840",
    "end": "420879"
  },
  {
    "text": "languages there you go so even if you find yourself in a multi- text tack type of situation then you can still use the",
    "start": "420879",
    "end": "428240"
  },
  {
    "text": "same apis and still get that same understanding now there are three",
    "start": "428240",
    "end": "434280"
  },
  {
    "text": "so-called observability signals maybe for we'll talk about that later uh traces logs and metrics now I'm going to",
    "start": "434280",
    "end": "441560"
  },
  {
    "text": "assume that you already know what these are since this is a not an intro intro type of session but what I'm trying to",
    "start": "441560",
    "end": "448080"
  },
  {
    "text": "do with this uh with with the session is give you some insight about the goals of the open Telemetry project and what",
    "start": "448080",
    "end": "454440"
  },
  {
    "text": "they're giving us uh for these signals what's what's added for us why is it",
    "start": "454440",
    "end": "460240"
  },
  {
    "text": "interesting and let's start with logs like this is the oldest type of observability we know right who who's",
    "start": "460240",
    "end": "465919"
  },
  {
    "text": "ever used logs in a system okay yeah that's everyone so we basically went",
    "start": "465919",
    "end": "471479"
  },
  {
    "text": "through a whole trajectory when it comes to this like first we would just log to the event log and file system and we",
    "start": "471479",
    "end": "477560"
  },
  {
    "text": "would use like Frameworks like Ser log and unlog and whatever it is and then we were like oh you know it's kind of messy",
    "start": "477560",
    "end": "484319"
  },
  {
    "text": "that people put whatever text in there so we also went from random text to more",
    "start": "484319",
    "end": "489720"
  },
  {
    "text": "structured type of logging we also sort of transitioned from keeping all this stuff on file system to more centralized",
    "start": "489720",
    "end": "496319"
  },
  {
    "text": "type of logging so we've seen the pains and we've made improvements but there are still many issues",
    "start": "496319",
    "end": "503360"
  },
  {
    "text": "today now first of all there's very weak integration with other observability signals so if if you're using logging in",
    "start": "503360",
    "end": "510440"
  },
  {
    "text": "your system but you also have metrics you're also starting to use distribute tracing connecting those things together",
    "start": "510440",
    "end": "516800"
  },
  {
    "text": "is not something that could be done out of the box that's something that open Telemetry aims to",
    "start": "516800",
    "end": "522320"
  },
  {
    "text": "fix uh this is usually this was usually so hard because we're using different types of collection agents but also",
    "start": "522320",
    "end": "529360"
  },
  {
    "text": "because there's a mismatch in the way that we label logs and the other signals as",
    "start": "529360",
    "end": "535240"
  },
  {
    "text": "well now there's also no standardized way to include the origin or Source",
    "start": "535240",
    "end": "540560"
  },
  {
    "text": "information so what also tended to happen is that we're looking at all of our logs which are beautifully",
    "start": "540560",
    "end": "546240"
  },
  {
    "text": "centralized in some kind of tool that we're using and then looking at those statements and where's this coming from",
    "start": "546240",
    "end": "552839"
  },
  {
    "text": "like we we're just interchanging problems right because before we we kept it on the file system and we spent hours",
    "start": "552839",
    "end": "559680"
  },
  {
    "text": "trying to figure out which server to log into to get to the right log file and then we standardized everything and it's",
    "start": "559680",
    "end": "566279"
  },
  {
    "text": "in one place but now we don't understand where the lock statements came from so we keep playing that",
    "start": "566279",
    "end": "571959"
  },
  {
    "text": "game and then finally it also really lacks a standard propagation mechanism if you want to pass something along to",
    "start": "571959",
    "end": "578480"
  },
  {
    "text": "then further enrich a lock statement down the line there was no standard way to do",
    "start": "578480",
    "end": "583519"
  },
  {
    "text": "this now what open Telemetry does is it basically introduced a unified log data",
    "start": "583519",
    "end": "589200"
  },
  {
    "text": "model which is nothing more than just an agreement a shared contract of what a",
    "start": "589200",
    "end": "594240"
  },
  {
    "text": "log statement should actually include right now it also includes support for",
    "start": "594240",
    "end": "600480"
  },
  {
    "text": "distributed context propagation so that we can pass along information to then",
    "start": "600480",
    "end": "606040"
  },
  {
    "text": "improve other lock statements down the road or even other signals we'll see more about that",
    "start": "606040",
    "end": "611160"
  },
  {
    "text": "later and it also does standardized log correlation that's also based on",
    "start": "611160",
    "end": "617040"
  },
  {
    "text": "multiple things that are included in that log data model there are three um three things on on which we do that log",
    "start": "617040",
    "end": "624399"
  },
  {
    "text": "correlation and that's time of execution and the execution context and finally where did this information come",
    "start": "624399",
    "end": "631480"
  },
  {
    "text": "from which before was a very very frustrating manual",
    "start": "631480",
    "end": "637240"
  },
  {
    "text": "exercise now when it comes to metrics um metrics also already existed long before",
    "start": "637240",
    "end": "643079"
  },
  {
    "text": "the open Telemetry project came to be so one of the focus points of the open",
    "start": "643079",
    "end": "648360"
  },
  {
    "text": "Telemetry U project is actually to make this work with existing metric protocols",
    "start": "648360",
    "end": "654160"
  },
  {
    "text": "and standards like for example Prometheus or statsd now another thing that they",
    "start": "654160",
    "end": "659440"
  },
  {
    "text": "considered for those of you who don't know that open Telemetry is basically based on two other standards open sensus",
    "start": "659440",
    "end": "665880"
  },
  {
    "text": "and open tracing where open tracing is focused on distributed tracing alone but open sensus had support for both",
    "start": "665880",
    "end": "672079"
  },
  {
    "text": "distributed tracing and metrics so there were already people using metrics with",
    "start": "672079",
    "end": "677120"
  },
  {
    "text": "that open sensus standard so there was also a migration path for those open sensus users so that we can really",
    "start": "677120",
    "end": "683839"
  },
  {
    "text": "transfer everyone to this one this one standard and it doesn't become like just",
    "start": "683839",
    "end": "689639"
  },
  {
    "text": "the next standard that we come up with and then the next one and the next one and then finally the most",
    "start": "689639",
    "end": "695519"
  },
  {
    "text": "interesting part for me is actually is that this they they want to have this ability to correlate metrics to other",
    "start": "695519",
    "end": "702240"
  },
  {
    "text": "signals so that when you can see that a metric is off you can actually connect that to okay which traces and logs are",
    "start": "702240",
    "end": "708480"
  },
  {
    "text": "connected to something that is feeding into this metric causing this Spike and then finally we have traces",
    "start": "708480",
    "end": "716120"
  },
  {
    "text": "again like I said we had distrib uh we had open sensors and open tracing so here they wanted a clear migration path",
    "start": "716120",
    "end": "722079"
  },
  {
    "text": "for any users of any of those previous standards and the goal was also to be vendor agnostic I mean this is actually",
    "start": "722079",
    "end": "728480"
  },
  {
    "text": "true for all of the signals right but um basically the goal was to have a",
    "start": "728480",
    "end": "734240"
  },
  {
    "text": "standard format in which that data is being stored in which that data is being collected and also to make sure that you",
    "start": "734240",
    "end": "741519"
  },
  {
    "text": "have the power over your data and that you're not faced with the situation where you're using a vendor and you want",
    "start": "741519",
    "end": "747480"
  },
  {
    "text": "to get your data and they're like yeah that's so basically to give you that flexibility to use whichever tool you",
    "start": "747480",
    "end": "754120"
  },
  {
    "text": "want whenever you want and it also means that you Al you only need or we as developers only need",
    "start": "754120",
    "end": "761000"
  },
  {
    "text": "to learn a single set of apis or conventions which makes it a lot easier",
    "start": "761000",
    "end": "766199"
  },
  {
    "text": "especially when we want to switch because before it was like okay I know how to use application insights but the other tool whole other",
    "start": "766199",
    "end": "774279"
  },
  {
    "text": "API so when we have different signals usually one of the questions that comes",
    "start": "774399",
    "end": "780120"
  },
  {
    "text": "up is okay which one do I use and when and as with any question in this industry the answer",
    "start": "780120",
    "end": "786560"
  },
  {
    "text": "is it depends awesome so one of the things I like to",
    "start": "786560",
    "end": "791800"
  },
  {
    "text": "do is let's look at the strength and weaknesses of each and then based on that make decisions right so for metrics",
    "start": "791800",
    "end": "799079"
  },
  {
    "text": "you usually we want to get some insight into the health of our system is it or maybe even like is it performant right",
    "start": "799079",
    "end": "806320"
  },
  {
    "text": "and usually we'll show that information on beautiful d dashboards which then nobody looks at and that's why we need",
    "start": "806320",
    "end": "812120"
  },
  {
    "text": "alerts right so that actually we get an email that tells us you know something is going wrong and that's when we will",
    "start": "812120",
    "end": "818639"
  },
  {
    "text": "go look at the dashboards now the thing with metrics is that it's basically an aggregated value",
    "start": "818639",
    "end": "825519"
  },
  {
    "text": "we're capturing very little context but aggregating that information so that it can show us a trend of how things are",
    "start": "825519",
    "end": "832720"
  },
  {
    "text": "sort of progressing over time but that also means that we're losing a lot of context that's just something that we do",
    "start": "832720",
    "end": "839160"
  },
  {
    "text": "in order to be able to get that idea of a trend when it comes to logs they're",
    "start": "839160",
    "end": "845759"
  },
  {
    "text": "awesome because they're human readable well you know if we put enough time to make it actually human",
    "start": "845759",
    "end": "852040"
  },
  {
    "text": "readable um but it allows you to add a high amount of detail as much as you",
    "start": "852040",
    "end": "857839"
  },
  {
    "text": "want really and the one of the downsides is that becomes really difficult to",
    "start": "857839",
    "end": "863560"
  },
  {
    "text": "start connecting those logs across multiple Services it also covers a",
    "start": "863560",
    "end": "868600"
  },
  {
    "text": "really small scope and I find them today the best sort of use case for them is to",
    "start": "868600",
    "end": "874880"
  },
  {
    "text": "use them in startup and shutdown scenarios and when it comes to application specific insights into what",
    "start": "874880",
    "end": "880440"
  },
  {
    "text": "your system is doing I would prefer traces because they give you the deepest amounts of insights that you would be",
    "start": "880440",
    "end": "886839"
  },
  {
    "text": "able to get from what is happening in the system why because basically oh it",
    "start": "886839",
    "end": "892120"
  },
  {
    "text": "can give you that idea of performance over a whole Trace right and that Trace could represent a business trans",
    "start": "892120",
    "end": "899040"
  },
  {
    "text": "transaction really it could go over multiple services but you still get that full picture also it gives you insight",
    "start": "899040",
    "end": "906240"
  },
  {
    "text": "into the flow of events what is happening after what in which order and what's leading to what apart from that",
    "start": "906240",
    "end": "913199"
  },
  {
    "text": "you can also sort of see how that data is changing as you go through those multiple spans or units of work if you",
    "start": "913199",
    "end": "920639"
  },
  {
    "text": "will you could see in the first service there's a variable um discount that's set to zero and then we have some",
    "start": "920639",
    "end": "927000"
  },
  {
    "text": "discount service that that actually calculates the discount because I don't know you're a silver customer something",
    "start": "927000",
    "end": "932440"
  },
  {
    "text": "like that and then we see that value being filled in if you're capturing that down the",
    "start": "932440",
    "end": "937560"
  },
  {
    "text": "line it will give you the sort of most insight about the internal state of your",
    "start": "937560",
    "end": "943079"
  },
  {
    "text": "system and I really find that this has the richest data model because you can also add you know attributes that give",
    "start": "943079",
    "end": "949560"
  },
  {
    "text": "that basically like a key value uh dictionary that gives you an idea of you know all of the things that make sense",
    "start": "949560",
    "end": "955800"
  },
  {
    "text": "within that context that could give you Insight in what's going on but you could also capture events to signal that",
    "start": "955800",
    "end": "961279"
  },
  {
    "text": "something is is happening that is of importance I basically like to think of",
    "start": "961279",
    "end": "967440"
  },
  {
    "text": "metrics are telling you that something is going on but if you want to figure out what and where and how then logs and",
    "start": "967440",
    "end": "975040"
  },
  {
    "text": "traces are usually what you're to what you're really looking at now one of the questions that I tend",
    "start": "975040",
    "end": "981600"
  },
  {
    "text": "to get a lot is that people you know we've been building distributed systems for a while we haven't necessarily",
    "start": "981600",
    "end": "988079"
  },
  {
    "text": "always been paying attention to actually making them observable so sometimes I get this question of like yeah you know",
    "start": "988079",
    "end": "994920"
  },
  {
    "text": "I have this large distributed system I want to make it observable where should I start because it's not that I can go",
    "start": "994920",
    "end": "1000880"
  },
  {
    "text": "back and start asking for weeks and weeks and weeks to now make this observable and one of the things that I",
    "start": "1000880",
    "end": "1007319"
  },
  {
    "text": "um I think is a good idea is to basically start at the edges of individual components because again",
    "start": "1007319",
    "end": "1015000"
  },
  {
    "text": "thinking that we are in this distributed systems Landscapes right and we have multiple components that are interacted",
    "start": "1015000",
    "end": "1021759"
  },
  {
    "text": "get to interacting together usually our blind spots are where that interservice",
    "start": "1021759",
    "end": "1027480"
  },
  {
    "text": "communication is happening how services are communicating together what data is coming back what decisions are being",
    "start": "1027480",
    "end": "1033319"
  },
  {
    "text": "made based on that information and that's usually where we're blind now the thing is that it's also",
    "start": "1033319",
    "end": "1041438"
  },
  {
    "text": "the easiest place to add instrumentation and from there on you can basically start working your way in as you see fit",
    "start": "1041439",
    "end": "1048679"
  },
  {
    "text": "and as you see necessary and I'm saying that that's the easiest way to add instrumentation because the community",
    "start": "1048679",
    "end": "1055280"
  },
  {
    "text": "has us really covered here with instrumentation libraries now you will see a bunch of",
    "start": "1055280",
    "end": "1061000"
  },
  {
    "text": "Frameworks that are appearing on your screen and if you look at them with the lens of that inter service communication",
    "start": "1061000",
    "end": "1068559"
  },
  {
    "text": "we can already start closing a lot of gaps right HTP client asp.net core",
    "start": "1068559",
    "end": "1073799"
  },
  {
    "text": "grpc but also the Azure SDK and the AWS SDK if maybe you're sending a message or",
    "start": "1073799",
    "end": "1079520"
  },
  {
    "text": "you're publishing an event or storing something on blob whatever it is right so if you think about it that way we're",
    "start": "1079520",
    "end": "1086880"
  },
  {
    "text": "already closing a lot of those blind spots and all of these libraries either have built-in instrumentation or offer a",
    "start": "1086880",
    "end": "1094240"
  },
  {
    "text": "dedicated instrumentation library that you can then pull in and",
    "start": "1094240",
    "end": "1099480"
  },
  {
    "text": "enable so you might be thinking okay awesome then let's just turn on every",
    "start": "1099559",
    "end": "1106559"
  },
  {
    "text": "instrumentation library on the planet and that's it our system is now observable we are done",
    "start": "1106559",
    "end": "1113760"
  },
  {
    "text": "right but sorry that's when you start to look at",
    "start": "1113760",
    "end": "1119960"
  },
  {
    "text": "all of that information and you're like okay I can see a lot of traces spans I",
    "start": "1119960",
    "end": "1125159"
  },
  {
    "text": "can see a lot of logs I see a lot of metrics but wait a second I'm still not",
    "start": "1125159",
    "end": "1130880"
  },
  {
    "text": "understanding what is going on because sometimes they're just too noisy and in some cases they're not noisy enough",
    "start": "1130880",
    "end": "1137760"
  },
  {
    "text": "they're not giving you enough insight into what is going on so these instrumentation libraries are a very",
    "start": "1137760",
    "end": "1144000"
  },
  {
    "text": "great start they're basically giving us that first step but that we still need to be able to go back and take a look at",
    "start": "1144000",
    "end": "1150880"
  },
  {
    "text": "how do we then need to add information to that to then you know make it actually information that is actionable",
    "start": "1150880",
    "end": "1157159"
  },
  {
    "text": "for us right and I feel that that's why we need an observability",
    "start": "1157159",
    "end": "1163640"
  },
  {
    "text": "strategy now we're all Engineers um are we all Engineers I don't want to assume",
    "start": "1163640",
    "end": "1169000"
  },
  {
    "text": "okay most of us are so and the thing is that when we're looking at Frameworks",
    "start": "1169000",
    "end": "1174039"
  },
  {
    "text": "like these we're like okay how do we start using this and how do we enable all of this but if we want to be really",
    "start": "1174039",
    "end": "1179799"
  },
  {
    "text": "effective and really successful at making our system observable across all of the components that we have we need",
    "start": "1179799",
    "end": "1186919"
  },
  {
    "text": "to take a couple of steps back and basically create alignment within your",
    "start": "1186919",
    "end": "1192640"
  },
  {
    "text": "organization especially if you have multiple teams that are working on a single system",
    "start": "1192640",
    "end": "1200159"
  },
  {
    "text": "one of the things that you should ask yourself is what goal are we trying to achieve with all of this Telemetry that",
    "start": "1200159",
    "end": "1206400"
  },
  {
    "text": "we are collecting right and that has to be a clear goal not like oh I watched",
    "start": "1206400",
    "end": "1212039"
  },
  {
    "text": "this cool session at NDC and it seems like a good idea no I mean there's always a need that we're trying to",
    "start": "1212039",
    "end": "1218320"
  },
  {
    "text": "fulfill right and like I talked about in the beginning there are many reasons and many benefits to making your system",
    "start": "1218320",
    "end": "1225240"
  },
  {
    "text": "observable but I really believe it's important that you're doing it for the right reasons a next question to ask yourself",
    "start": "1225240",
    "end": "1232880"
  },
  {
    "text": "is who is going to use this Telemetry and to what end and the reason that I",
    "start": "1232880",
    "end": "1238080"
  },
  {
    "text": "find this question so important is because I made the mistake years and years ago to be on a team where we had",
    "start": "1238080",
    "end": "1244440"
  },
  {
    "text": "this epic to create dashboards and beautiful metrics and we spent weeks",
    "start": "1244440",
    "end": "1250559"
  },
  {
    "text": "working on that thing like it was very very pretty and very sophisticated based on application insights guess who looked",
    "start": "1250559",
    "end": "1257919"
  },
  {
    "text": "at it nobody ever right so that was a",
    "start": "1257919",
    "end": "1263280"
  },
  {
    "text": "completely wasted effort complete waste of our time and of all the resources",
    "start": "1263280",
    "end": "1268720"
  },
  {
    "text": "that we use and that's why I think we should have a lot of clarity who's going to be looking at that data and what are",
    "start": "1268720",
    "end": "1275360"
  },
  {
    "text": "they expecting to get from that information also ask yourself which",
    "start": "1275360",
    "end": "1281720"
  },
  {
    "text": "signals do we already use today now odds are that you're logging as I saw all the hands go up and how is that information",
    "start": "1281720",
    "end": "1289360"
  },
  {
    "text": "currently being used maybe you're already using metrics and the next question then is can we introduce new",
    "start": "1289360",
    "end": "1295200"
  },
  {
    "text": "signals maybe you're not doing distributed tracing yet who's doing that actually just out of",
    "start": "1295200",
    "end": "1300600"
  },
  {
    "text": "curiosity okay a couple of hands but maybe you're like this is really cool and I want to start to use it but you",
    "start": "1300600",
    "end": "1307159"
  },
  {
    "text": "need to create that alignment across your organization because even if you have the decision power to say within",
    "start": "1307159",
    "end": "1313480"
  },
  {
    "text": "our team we're doing distributed tracing okay but then you still have this very narrow View of what's happening in your",
    "start": "1313480",
    "end": "1319840"
  },
  {
    "text": "system you really want to create that alignment across all of the",
    "start": "1319840",
    "end": "1325559"
  },
  {
    "text": "teams and then finally what I ALS always recommend is to have a couple of questions ready that can give you",
    "start": "1325559",
    "end": "1332039"
  },
  {
    "text": "insight into what should this Telemetry actually be able to answer for me and I'm going to give you a couple of",
    "start": "1332039",
    "end": "1338559"
  },
  {
    "text": "examples now the first one that I like to bring up is okay who's ever gotten a",
    "start": "1338559",
    "end": "1344679"
  },
  {
    "text": "ticket to fix an issue and then try to reproduce it and it's like yeah well it works on my machine yeah everyone right",
    "start": "1344679",
    "end": "1353919"
  },
  {
    "text": "and the thing is that this user that actually opened that ticket I mean they",
    "start": "1353919",
    "end": "1359600"
  },
  {
    "text": "weren't psychotic they actually saw some friction but this the thing is that users aren't usually in that mindset of",
    "start": "1359600",
    "end": "1367440"
  },
  {
    "text": "let me think about every step I'm taking so that if an exception maybe occurs I'm able to tell them exactly what I did",
    "start": "1367440",
    "end": "1374480"
  },
  {
    "text": "they're not in that mind in that frame of mind right but what if you would be able to basically connect a specific",
    "start": "1374480",
    "end": "1381480"
  },
  {
    "text": "user action to your Telemetry and be able to say oh that was John Friday 3 p.m. and then you would get that insight",
    "start": "1381480",
    "end": "1388679"
  },
  {
    "text": "and actually see what happened there or how easily can you group similar",
    "start": "1388679",
    "end": "1393799"
  },
  {
    "text": "Behavior together things that stand out in performance or in latency or maybe in",
    "start": "1393799",
    "end": "1399520"
  },
  {
    "text": "specific attributes like oh these are premium customers can you identify the most low",
    "start": "1399520",
    "end": "1406640"
  },
  {
    "text": "generating operations that are happening in your system like are they happening at a specific time of the day or are",
    "start": "1406640",
    "end": "1412279"
  },
  {
    "text": "they very specific to a specific region or something like that might give you some insight in where you need to scale",
    "start": "1412279",
    "end": "1418240"
  },
  {
    "text": "or rearrange can you identify which users are stressing the system what are they",
    "start": "1418240",
    "end": "1424480"
  },
  {
    "text": "doing in what order and why and finally how easily can you find",
    "start": "1424480",
    "end": "1430520"
  },
  {
    "text": "suspicious events throughout the system now these are just a couple of my examples the idea is that you come up",
    "start": "1430520",
    "end": "1437159"
  },
  {
    "text": "with your own question so that whenever someone is creating a new feature or changing some kind of",
    "start": "1437159",
    "end": "1443880"
  },
  {
    "text": "logic they can actually look at these questions and then ask themselves what",
    "start": "1443880",
    "end": "1448960"
  },
  {
    "text": "Telemetry do I need to create in order to be able to answer those questions and that can then feed into what I like to",
    "start": "1448960",
    "end": "1456159"
  },
  {
    "text": "call observability guidelines right now these guidelines should be then again",
    "start": "1456159",
    "end": "1461400"
  },
  {
    "text": "available to every team across the organization so that you get the same quality of instrumentation independent",
    "start": "1461400",
    "end": "1467679"
  },
  {
    "text": "of the team who worked on it um so one of the things to include",
    "start": "1467679",
    "end": "1474200"
  },
  {
    "text": "there is which signals are available to us right like I said you don't want one team in the while to start introducing",
    "start": "1474200",
    "end": "1480840"
  },
  {
    "text": "someone that they never is go nobody's ever going to look at we need to have that communication also if this is sort",
    "start": "1480840",
    "end": "1487360"
  },
  {
    "text": "of a new topic in your organization have some guidelines on which scenarios best",
    "start": "1487360",
    "end": "1492559"
  },
  {
    "text": "fit each signal in your specific context what do you expect to see and also the",
    "start": "1492559",
    "end": "1498399"
  },
  {
    "text": "questions that the Telemetry should answer that we just looked at and then finally also some of the best practices",
    "start": "1498399",
    "end": "1504600"
  },
  {
    "text": "that they should consider when they're creating application specific Telemetry now when it comes to best",
    "start": "1504600",
    "end": "1511559"
  },
  {
    "text": "practices there's like whole books written on the subject so oh and I have a bunch of those in the resources at the",
    "start": "1511559",
    "end": "1517440"
  },
  {
    "text": "end if you want to learn more but what I did is made my own selection of the ones that you know I feel are important and I",
    "start": "1517440",
    "end": "1523600"
  },
  {
    "text": "really want to share with you here today the first one is around handling error scenarios right because at least I",
    "start": "1523600",
    "end": "1531279"
  },
  {
    "text": "feel that you know the more experience I gain and the older I get I I'm more convinced that just creating a feature",
    "start": "1531279",
    "end": "1537000"
  },
  {
    "text": "is the easy part of the job and I'm thinking of everything that could go wrong and how we're supposed to handle that is where things get tricky right so",
    "start": "1537000",
    "end": "1544399"
  },
  {
    "text": "what we want to do is whenever something occur whenever you know an error occurs we want to capture any possible failure",
    "start": "1544399",
    "end": "1551080"
  },
  {
    "text": "scenario so that we can get insight into what happened there now at that point we",
    "start": "1551080",
    "end": "1556200"
  },
  {
    "text": "also want to make sure that we signal those those failures to the observability back end by setting the",
    "start": "1556200",
    "end": "1561279"
  },
  {
    "text": "right statuses so that we can easily search for them later and find",
    "start": "1561279",
    "end": "1566399"
  },
  {
    "text": "those we want to include error information right from your um error message stack trays inner exceptions all",
    "start": "1566399",
    "end": "1573120"
  },
  {
    "text": "of that and then another thing that you could do is consider adding additional information when a failure occurs",
    "start": "1573120",
    "end": "1580480"
  },
  {
    "text": "because maybe sometimes you don't want to add all of that information for all the successful scenarios but in case",
    "start": "1580480",
    "end": "1587120"
  },
  {
    "text": "something happens you want to add some additional information so that's captured and you get more context",
    "start": "1587120",
    "end": "1592679"
  },
  {
    "text": "specifically because you know this is something that you're going to be looking",
    "start": "1592679",
    "end": "1597720"
  },
  {
    "text": "into another really important thing is that any instrumentation should never",
    "start": "1597840",
    "end": "1603760"
  },
  {
    "text": "cause business failures because at the end of the day no matter how important",
    "start": "1603760",
    "end": "1609440"
  },
  {
    "text": "right the Telemetry is and observability is it is not a mission critical uh",
    "start": "1609440",
    "end": "1614880"
  },
  {
    "text": "component of our application right at the end of the day our business needs to be running so if we then go and add",
    "start": "1614880",
    "end": "1622720"
  },
  {
    "text": "instrumentation code and we deploy that and people can't order stuff anymore",
    "start": "1622720",
    "end": "1627880"
  },
  {
    "text": "then that's not a great scenario to be in so it's really important that you think thoroughly about the code that",
    "start": "1627880",
    "end": "1634120"
  },
  {
    "text": "you're added that you're adding that you also test that as part of your testing strategy as",
    "start": "1634120",
    "end": "1641440"
  },
  {
    "text": "well another one I want to talk about is context propagation because in order to make all of the Telemetry that we have",
    "start": "1641840",
    "end": "1647919"
  },
  {
    "text": "even more insightful it needs to be connected right and that's one of the goals of the baggage API now this is",
    "start": "1647919",
    "end": "1656440"
  },
  {
    "text": "also actually listed as an observability signal but I think it's kind of a special one because this doesn't",
    "start": "1656440",
    "end": "1662799"
  },
  {
    "text": "necessarily end up like like directly in your observability back end now this is",
    "start": "1662799",
    "end": "1669360"
  },
  {
    "text": "available for different signals and it basically allows you to capture information that you're then going to pass on that you can then use to further",
    "start": "1669360",
    "end": "1677320"
  },
  {
    "text": "improve other signals that you're emitting at a later point but you have",
    "start": "1677320",
    "end": "1682399"
  },
  {
    "text": "to be really really really careful with this and actually consider in most cases not to use it because it doesn't come",
    "start": "1682399",
    "end": "1689720"
  },
  {
    "text": "without risks first of all it does have an impact on latency because you're adding stuff on that that is being",
    "start": "1689720",
    "end": "1695880"
  },
  {
    "text": "propagated across multiple Services now if you're just adding some small information it's probably not that",
    "start": "1695880",
    "end": "1702200"
  },
  {
    "text": "problem so but you have to be aware that you can't add a collection of 25,000 products on that",
    "start": "1702200",
    "end": "1709559"
  },
  {
    "text": "and then the most important one is that everything that you add on baggage is going to be available on every hop after",
    "start": "1709559",
    "end": "1717039"
  },
  {
    "text": "that especially if you have on auto instrumentation enabled and that is really important to be aware of because",
    "start": "1717039",
    "end": "1723720"
  },
  {
    "text": "it also means that if you are integrating with third parties you don't know what's in baggage",
    "start": "1723720",
    "end": "1729519"
  },
  {
    "text": "because you don't know what that third party put into baggage so you might be exposed to information that they put on",
    "start": "1729519",
    "end": "1735000"
  },
  {
    "text": "there but the reverse is also true whatever you put on there could be seen",
    "start": "1735000",
    "end": "1741279"
  },
  {
    "text": "by third party uh third parties that you're integrating with because that that data is being passed along in",
    "start": "1741279",
    "end": "1747159"
  },
  {
    "text": "another HTTP header right and that's M makes it especially tricky when it comes",
    "start": "1747159",
    "end": "1752720"
  },
  {
    "text": "to sensitive information right now I would say that this is true for any kind",
    "start": "1752720",
    "end": "1758039"
  },
  {
    "text": "of telemetry that you collect but you don't want any personally identifiable",
    "start": "1758039",
    "end": "1763240"
  },
  {
    "text": "information in there nothing that can be traced back to an individual because",
    "start": "1763240",
    "end": "1768360"
  },
  {
    "text": "then you get a gdpr request and you're like what I don't I don't know right so",
    "start": "1768360",
    "end": "1775080"
  },
  {
    "text": "use an ID or something but that can't be necessarily traced to an individual also financial healthc care",
    "start": "1775080",
    "end": "1781640"
  },
  {
    "text": "data something that you want to stay aware from passwords connection",
    "start": "1781640",
    "end": "1786799"
  },
  {
    "text": "information any type of infrastructure information right how many times have we",
    "start": "1786799",
    "end": "1792279"
  },
  {
    "text": "not checked in a connection string like these things happen even though we all know this these these are like you know",
    "start": "1792279",
    "end": "1798880"
  },
  {
    "text": "honest mistakes we're not always paying as much attention as we would want to so how do you keep this data out well",
    "start": "1798880",
    "end": "1807279"
  },
  {
    "text": "one of the first tools that I always refer to are code reviews now I have a sort of different",
    "start": "1807279",
    "end": "1814279"
  },
  {
    "text": "approach I find especially when I'm talking to a lot of peers I see that they don't necessarily look at PR",
    "start": "1814279",
    "end": "1820000"
  },
  {
    "text": "reviews the same way as I do and I basically look at it with multiple hats",
    "start": "1820000",
    "end": "1825200"
  },
  {
    "text": "so when a feature is built in and someone pings me for a review I will go to that PR and first put on my feature",
    "start": "1825200",
    "end": "1831760"
  },
  {
    "text": "hat okay what were the requirements would this work did we forget any you know edge cases or um maybe are there",
    "start": "1831760",
    "end": "1839559"
  },
  {
    "text": "any design decisions that are important that we need to maybe talk about That's My First Hat and then I'll be like okay",
    "start": "1839559",
    "end": "1845600"
  },
  {
    "text": "let me look at this from the testing perspective right is this sufficiently tested did we forget any any any test",
    "start": "1845600",
    "end": "1852080"
  },
  {
    "text": "cases that are important and so on and then you can put on your third observability hat and see okay did we",
    "start": "1852080",
    "end": "1860360"
  },
  {
    "text": "add enough Telemetry or did we add too much Telemetry to get insight into",
    "start": "1860360",
    "end": "1865399"
  },
  {
    "text": "what's going on what are we adding on here is there any sensitive information in there and things like",
    "start": "1865399",
    "end": "1872519"
  },
  {
    "text": "that but there are also other ways of course to handle this you can also you know encrypt certain information",
    "start": "1872519",
    "end": "1878639"
  },
  {
    "text": "tokenize certain information and also for example mask and redact something",
    "start": "1878639",
    "end": "1884000"
  },
  {
    "text": "out and of course this is not something that you want to trust your teams with",
    "start": "1884000",
    "end": "1890159"
  },
  {
    "text": "right you rather do this in a centralized way you don't want to rely on individuals remembering to actually",
    "start": "1890159",
    "end": "1896519"
  },
  {
    "text": "do that and then that's something that uh open Telemetry processors can basically help us with right let's say",
    "start": "1896519",
    "end": "1904039"
  },
  {
    "text": "that you choose to encrypt certain information then you could have a processor through which all the",
    "start": "1904039",
    "end": "1909600"
  },
  {
    "text": "Telemetry goes and that basically is then maybe encrypted and then pass to",
    "start": "1909600",
    "end": "1914840"
  },
  {
    "text": "the next processor if there is one in line so we were basically going to manipulate that data before it's",
    "start": "1914840",
    "end": "1921159"
  },
  {
    "text": "exported to the observability back end sort of reminds me of the pipes and filters",
    "start": "1921159",
    "end": "1926600"
  },
  {
    "text": "pattern we can basically further enrich or filter some of that information out",
    "start": "1926600",
    "end": "1932039"
  },
  {
    "text": "and there are different types of processors that you can use per Telemetry signal again be a little bit careful",
    "start": "1932039",
    "end": "1939519"
  },
  {
    "text": "here because that's going to run on all of the Telemetry that you collect so don't do some crazy stuff in there be",
    "start": "1939519",
    "end": "1946120"
  },
  {
    "text": "aware that that can also slow slow things down and at the end of the day your goal with that Telemetry",
    "start": "1946120",
    "end": "1952080"
  },
  {
    "text": "information is to get it into the observability back end as quickly as possible so that it can actually feed",
    "start": "1952080",
    "end": "1958080"
  },
  {
    "text": "our insights and our metrics and and all of that and that brings me to the last best",
    "start": "1958080",
    "end": "1964519"
  },
  {
    "text": "practice uh that I want to talk about today and that's cemetry correlation because we already talked about the",
    "start": "1964519",
    "end": "1970240"
  },
  {
    "text": "multiple signals and there are different reasons why we'd want to use individual ones right each individual signal",
    "start": "1970240",
    "end": "1977440"
  },
  {
    "text": "provides its own type of value but when it really becomes powerful is when we",
    "start": "1977440",
    "end": "1982799"
  },
  {
    "text": "are able to connect all of that information together because that would further",
    "start": "1982799",
    "end": "1989000"
  },
  {
    "text": "strengthen our our observability if we see that there's a metric off and we would be able to connect that to the traces and from the traces be able to",
    "start": "1989000",
    "end": "1995720"
  },
  {
    "text": "look at the locks without having to do any manual exercise then based on that",
    "start": "1995720",
    "end": "2001440"
  },
  {
    "text": "information that is just linked already there for us then we're losing a lot less time so so that reduces the mean",
    "start": "2001440",
    "end": "2009080"
  },
  {
    "text": "time to resolve which is a metric that gives us insight into how quickly we're able to resolve an incident when it",
    "start": "2009080",
    "end": "2017279"
  },
  {
    "text": "occurs so what we want to do is collect connect our logs and traces so basically",
    "start": "2017279",
    "end": "2022679"
  },
  {
    "text": "what's going to happen is that in our log format we're going to have the trace ID and the span ID included so that that",
    "start": "2022679",
    "end": "2028559"
  },
  {
    "text": "information is connected if you're looking at traces you know how to find logs and the other way around as well and we can also consider capturing",
    "start": "2028559",
    "end": "2036480"
  },
  {
    "text": "Trace ID in what's called metric exemplars but here we have to be a",
    "start": "2036480",
    "end": "2042360"
  },
  {
    "text": "little bit careful to not introduce what is called cardinality",
    "start": "2042360",
    "end": "2047560"
  },
  {
    "text": "explosion now what is that exactly well think of a metrics as something that you",
    "start": "2047560",
    "end": "2053118"
  },
  {
    "text": "can add labels too right so let's say that we want to capture a metric for the amount of failures that is possibly",
    "start": "2053119",
    "end": "2059599"
  },
  {
    "text": "happening in our system and we want to add a label to that to get insight into which H HTTP status code was that but we",
    "start": "2059599",
    "end": "2068118"
  },
  {
    "text": "also want to capture the environment in which that may be occurring now when you think about the cardinality you have to",
    "start": "2068119",
    "end": "2075158"
  },
  {
    "text": "think about every possible single label value each of those labels could have",
    "start": "2075159",
    "end": "2081158"
  },
  {
    "text": "and that is your cardinality now depending on which observability back end you use sometimes",
    "start": "2081159",
    "end": "2088679"
  },
  {
    "text": "a series is created for each individual unique combination and this is fine but imagine",
    "start": "2088679",
    "end": "2095919"
  },
  {
    "text": "if you add something like request ID your span ID then it could just have this explosion of possible options",
    "start": "2095919",
    "end": "2103440"
  },
  {
    "text": "making your bill very very expensive and also your ability to query not so great",
    "start": "2103440",
    "end": "2109960"
  },
  {
    "text": "but there are tools out there that actually support high cardinality like honeycom you're welcome",
    "start": "2109960",
    "end": "2116960"
  },
  {
    "text": "Martin so it's important to just have that insight into how's that observability back and working and and",
    "start": "2116960",
    "end": "2123040"
  },
  {
    "text": "to have that in the back of your mind these are some additional best",
    "start": "2123040",
    "end": "2128960"
  },
  {
    "text": "practices for me for you and then time for me to take a sip of",
    "start": "2128960",
    "end": "2134560"
  },
  {
    "text": "water okay so with this in mind we've now taken the time to actually make all",
    "start": "2137839",
    "end": "2143960"
  },
  {
    "text": "that Telemetry that we are collecting actionable right we want to be able to actually use this to improve our system",
    "start": "2143960",
    "end": "2150960"
  },
  {
    "text": "so at this point we might want to say okay we have this high quality",
    "start": "2150960",
    "end": "2156280"
  },
  {
    "text": "instrumentation now it's really safe to collect all of the",
    "start": "2156280",
    "end": "2161519"
  },
  {
    "text": "things and I would say that that's true but then at some point there's this manager looking at a piece of paper in",
    "start": "2161920",
    "end": "2167960"
  },
  {
    "text": "their office like my gosh what is this right because if you're in a very very",
    "start": "2167960",
    "end": "2173400"
  },
  {
    "text": "high throughput scenario even if it's super actionable that might just be way too much information to store and it can",
    "start": "2173400",
    "end": "2180680"
  },
  {
    "text": "become expensive right and this is where you want to be thinking about okay maybe",
    "start": "2180680",
    "end": "2186359"
  },
  {
    "text": "we should start sampling some of that data now you can do that with logs and traces but for the rest of this session",
    "start": "2186359",
    "end": "2192200"
  },
  {
    "text": "I'm going to be focusing on tracing now to solve this problem we",
    "start": "2192200",
    "end": "2197560"
  },
  {
    "text": "basically need to start to ask ourselves what data do I actually use because if you think about all of the traces that",
    "start": "2197560",
    "end": "2204079"
  },
  {
    "text": "are emitted by a single system you have a very large set of successful traces at",
    "start": "2204079",
    "end": "2209680"
  },
  {
    "text": "least that's what I hope for you then you have this small set of",
    "start": "2209680",
    "end": "2214800"
  },
  {
    "text": "errors that might be occurring you have some that stand out because they're high in latency and then some that you know",
    "start": "2214800",
    "end": "2220640"
  },
  {
    "text": "are interesting because they carry a few attributes that make them interesting within your specific business",
    "start": "2220640",
    "end": "2228040"
  },
  {
    "text": "context but do you really want to keep all of them or would it actually be",
    "start": "2228040",
    "end": "2233680"
  },
  {
    "text": "sufficient to take a random sample of those successful traces and then keep",
    "start": "2233680",
    "end": "2239400"
  },
  {
    "text": "all of the other interesting ones right we also always want that random sample of the successful ones to have a",
    "start": "2239400",
    "end": "2245359"
  },
  {
    "text": "baseline as well so what would be sufficient in order for your system to",
    "start": "2245359",
    "end": "2250480"
  },
  {
    "text": "be observable and again that's where it comes back to your observability strategy what is it that you want to",
    "start": "2250480",
    "end": "2257079"
  },
  {
    "text": "achieve so if you're like I want to be able to debug any request that happens",
    "start": "2257079",
    "end": "2263000"
  },
  {
    "text": "in the system well then you can't sample then you just need to keep everything and pay the bill or if you would say",
    "start": "2263000",
    "end": "2270200"
  },
  {
    "text": "well I want to be able to debug systemwide problems that you would get away with a lot less traces if you would",
    "start": "2270200",
    "end": "2278319"
  },
  {
    "text": "like to say you know I want to understand the Baseline behavior of your system you can even further reduce that",
    "start": "2278319",
    "end": "2284640"
  },
  {
    "text": "but it could even be that you just walked into a system landscape where there's like zero",
    "start": "2284640",
    "end": "2290680"
  },
  {
    "text": "documentation and you're like I don't know how the system works and I'm basically going from Department to",
    "start": "2290680",
    "end": "2296520"
  },
  {
    "text": "department and they're telling me different stories and it's going to take me seven months to just figure out how this works it's also something you could",
    "start": "2296520",
    "end": "2303119"
  },
  {
    "text": "do with observability just get an idea of how is the system interacting but then just 1% would maybe be enough",
    "start": "2303119",
    "end": "2310400"
  },
  {
    "text": "to get an idea of how things are working so again it's really important to understand what your goal",
    "start": "2310400",
    "end": "2317520"
  },
  {
    "text": "is and then once that clear we can start looking at the different types of sampling strategies that are available",
    "start": "2317520",
    "end": "2324160"
  },
  {
    "text": "to us now there are two ways to sample traces there's head sampling and tail",
    "start": "2324160",
    "end": "2329880"
  },
  {
    "text": "sampling available with head sampling what's basically going to happen is that we're",
    "start": "2329880",
    "end": "2335520"
  },
  {
    "text": "going to make the sampling decision at the beginning of the trace so basically at the beginning we're going to make a",
    "start": "2335520",
    "end": "2341480"
  },
  {
    "text": "decision of this is interesting and we want to keep it or not basically the root span is making",
    "start": "2341480",
    "end": "2347400"
  },
  {
    "text": "that decision and that's then being forwarded to the rest of the system Now the default way in which this",
    "start": "2347400",
    "end": "2353680"
  },
  {
    "text": "worked is based on the parent based sampler which is a composite one and is",
    "start": "2353680",
    "end": "2358880"
  },
  {
    "text": "most commonly used with a trace ID ratio based sampler why did I make that so difficult",
    "start": "2358880",
    "end": "2366880"
  },
  {
    "text": "now that one is really good if you want to get unbiased samplings like purely",
    "start": "2366880",
    "end": "2372560"
  },
  {
    "text": "random but it's also going to be um repeatable so even if at any point",
    "start": "2372560",
    "end": "2378560"
  },
  {
    "text": "you're basically going to execute that sampling decision again it's basically going to be",
    "start": "2378560",
    "end": "2385000"
  },
  {
    "text": "deterministic and then it's important to remember that your spans are still created they're just not being recorded",
    "start": "2385000",
    "end": "2392599"
  },
  {
    "text": "but Martin has a very good blog post on why you shouldn't necessarily care about that I still want to mention it because",
    "start": "2392599",
    "end": "2398599"
  },
  {
    "text": "I don't know what types of systems you're building if you care about performance to the point of I don't know",
    "start": "2398599",
    "end": "2404640"
  },
  {
    "text": "ticks then maybe this is something you want to be aware about aware of when it",
    "start": "2404640",
    "end": "2410359"
  },
  {
    "text": "comes to tail sampling it's completely different because what we're going to do is we're going to collect all of the",
    "start": "2410359",
    "end": "2416920"
  },
  {
    "text": "spans that pertain to that specific trace and at the end decide whether we want to keep it or",
    "start": "2416920",
    "end": "2424000"
  },
  {
    "text": "not that basically that we are allowed to do that based on the overall Trace",
    "start": "2424000",
    "end": "2429480"
  },
  {
    "text": "duration right this is a slow one based on the status this failed so we want to definitely keep it or based on the span",
    "start": "2429480",
    "end": "2437119"
  },
  {
    "text": "attributes values and again you're you'll be like",
    "start": "2437119",
    "end": "2442400"
  },
  {
    "text": "okay but how do I choose between them you're giving me all of these options so it's game of trade-offs again right head",
    "start": "2442400",
    "end": "2449480"
  },
  {
    "text": "uh head sampling is very easy to to configure and it's easy to understand because you know at the beginning what's",
    "start": "2449480",
    "end": "2455040"
  },
  {
    "text": "going to happen right non-sample traces also are not going to affect latency",
    "start": "2455040",
    "end": "2460800"
  },
  {
    "text": "because you're not going to collect anything because you already know that you're not going to need it so nothing is going to be forwarded nothing's going",
    "start": "2460800",
    "end": "2467359"
  },
  {
    "text": "to be collected that also means that you have reduced data",
    "start": "2467359",
    "end": "2472400"
  },
  {
    "text": "transmission but that sampling decision also needs to be propagated and it needs to be respected by all of the upcoming",
    "start": "2472400",
    "end": "2479680"
  },
  {
    "text": "services but the main downside is that it's impossible to anticipate whether",
    "start": "2479680",
    "end": "2484960"
  },
  {
    "text": "this Trace is going to be interesting right you don't know whether this is going to fail up front and you don't",
    "start": "2484960",
    "end": "2490440"
  },
  {
    "text": "know whether this is going to be slow up front maybe there's even specific",
    "start": "2490440",
    "end": "2495599"
  },
  {
    "text": "attributes that you don't know at this point in time but you only know at the end now when it comes to tail sampling",
    "start": "2495599",
    "end": "2503520"
  },
  {
    "text": "that allows you to fix that problem because you can basically put yourself in a position where you never lose an",
    "start": "2503520",
    "end": "2508960"
  },
  {
    "text": "important Trace again because you have full control on what is important and what is not there is going to be a latency and",
    "start": "2508960",
    "end": "2516200"
  },
  {
    "text": "performance impact because you're collecting all of those spans until the trace is completed before you make that",
    "start": "2516200",
    "end": "2522200"
  },
  {
    "text": "decision on whether to keep it or not it's also tricky to sort of figure out like when is a trace finished because we",
    "start": "2522200",
    "end": "2529079"
  },
  {
    "text": "can't always know that right especially if we have things like automated retries",
    "start": "2529079",
    "end": "2534520"
  },
  {
    "text": "or we're being rate limited and we're sort of respecting that that limit that's being imposed on us then things",
    "start": "2534520",
    "end": "2540400"
  },
  {
    "text": "might just take longer than we expect so usually this is fixed with just a cut off time four or five seconds whatever",
    "start": "2540400",
    "end": "2546559"
  },
  {
    "text": "it is but that means that sometimes we could just be breaking it off a bit",
    "start": "2546559",
    "end": "2553040"
  },
  {
    "text": "early you're still exposed to potentially unpredictable costs when you're doing tail sampling because if",
    "start": "2553040",
    "end": "2560240"
  },
  {
    "text": "we're saying we're going to collect all errors and then there's an Azure outage we still have a huge Spike into",
    "start": "2560240",
    "end": "2567520"
  },
  {
    "text": "the amount of traces that we're collecting and there's also pressure on the service that is making the sampling",
    "start": "2567520",
    "end": "2573800"
  },
  {
    "text": "decisions although there are ways to mitigate that as well and it's sort of trickier to get right I",
    "start": "2573800",
    "end": "2580559"
  },
  {
    "text": "mean with flexibility you know it's always a bit complicated to handle",
    "start": "2580559",
    "end": "2587640"
  },
  {
    "text": "that now one of the questions that then tends to come up is okay where do I Implement my sampling strategies because",
    "start": "2587640",
    "end": "2594200"
  },
  {
    "text": "if you look at a lot of those simple getting started samples out there usually they make use of a sort of",
    "start": "2594200",
    "end": "2599960"
  },
  {
    "text": "direct export to the backend right we're collecting information and we've added exporter to application Insight or h or",
    "start": "2599960",
    "end": "2607680"
  },
  {
    "text": "whatever it is so that information is being sent by the service to the observability back end now that exposes",
    "start": "2607680",
    "end": "2614880"
  },
  {
    "text": "us to a couple of challenges because there's an increased load on that service it also means that we're exposed",
    "start": "2614880",
    "end": "2622400"
  },
  {
    "text": "to communication issues with that backend service and there's also no Central configuration point so if you",
    "start": "2622400",
    "end": "2628960"
  },
  {
    "text": "want to change how certain things behave you have to change it across all of your services and redeploy them",
    "start": "2628960",
    "end": "2636720"
  },
  {
    "text": "so that's a bit tricky finally also no Central data management pipelines so",
    "start": "2637280",
    "end": "2642880"
  },
  {
    "text": "those are real challenges and it could expose us to business failures but luckily there are other options",
    "start": "2642880",
    "end": "2648359"
  },
  {
    "text": "available to us to visualize a little bit how this works we still have each",
    "start": "2648359",
    "end": "2653440"
  },
  {
    "text": "individual service that is receiving processing and exporting Telemetry",
    "start": "2653440",
    "end": "2658480"
  },
  {
    "text": "information directly to the observability backend when it comes to other options",
    "start": "2658480",
    "end": "2665440"
  },
  {
    "text": "there's the open Telemetry collector help us out now this is basically a vendor agnostic implementation yet again",
    "start": "2665440",
    "end": "2671440"
  },
  {
    "text": "that's sort of true across the board that allows you to sort of receive process and Export Telemetry data and",
    "start": "2671440",
    "end": "2678319"
  },
  {
    "text": "the main goal is to sort of be a mediation layer between all of your services and that observability backend",
    "start": "2678319",
    "end": "2685160"
  },
  {
    "text": "and it makes it a lot easier to adjust all of those things because it's centralizing that configuration",
    "start": "2685160",
    "end": "2691119"
  },
  {
    "text": "management it also offloads those risks of failures and handles those error",
    "start": "2691119",
    "end": "2696520"
  },
  {
    "text": "scenarios so if it can communicate with the observability back end it can just retry and hang on to that data just a",
    "start": "2696520",
    "end": "2702160"
  },
  {
    "text": "little bit longer for example and it also allows you to start scaling per signal if you're saying like we're doing",
    "start": "2702160",
    "end": "2708839"
  },
  {
    "text": "mostly distributed tracing now just a little bit of logging then you can also sort of tweak those things",
    "start": "2708839",
    "end": "2716079"
  },
  {
    "text": "independently now one of the options to deploy the open Telemetry collector is to use a side car Option now in this",
    "start": "2717160",
    "end": "2725599"
  },
  {
    "text": "case what we're basically going to do is release a sidecar per service right and",
    "start": "2725599",
    "end": "2731400"
  },
  {
    "text": "that offloads all of those responsibilities that we talked about to that side car service and the individual",
    "start": "2731400",
    "end": "2737839"
  },
  {
    "text": "business service service can just focus on what it's supposed to do the business stuff right it can handle things like",
    "start": "2737839",
    "end": "2745800"
  },
  {
    "text": "batching and retries and encryption and compression and all of that it can also",
    "start": "2745800",
    "end": "2751319"
  },
  {
    "text": "then um usually you want that running on the same node as your service why",
    "start": "2751319",
    "end": "2757400"
  },
  {
    "text": "because that that way you don't have any latency right but it can still sort of",
    "start": "2757400",
    "end": "2762960"
  },
  {
    "text": "handle those concerns individually outside the process of your business service and can also handle those",
    "start": "2762960",
    "end": "2769400"
  },
  {
    "text": "communication issues that might occur with the back end to visualize how that looks like we",
    "start": "2769400",
    "end": "2776040"
  },
  {
    "text": "now have each individual service with a side card that is the open Telemetry collector and the individual service",
    "start": "2776040",
    "end": "2782839"
  },
  {
    "text": "sends that information to its side car which then will propagate it further to",
    "start": "2782839",
    "end": "2788079"
  },
  {
    "text": "the observability back end after it's done its processing and all of that",
    "start": "2788079",
    "end": "2794400"
  },
  {
    "text": "information another option is to use the Gateway cluster option now in this case",
    "start": "2794559",
    "end": "2801599"
  },
  {
    "text": "we basically have a standalone service that is running the open Telemetry collector if you will now this is easy",
    "start": "2801599",
    "end": "2809800"
  },
  {
    "text": "to scale with a load balancer and actually required if you're doing tail based",
    "start": "2809800",
    "end": "2815040"
  },
  {
    "text": "sampling um why is that important because every span that pertains to an",
    "start": "2815040",
    "end": "2820319"
  },
  {
    "text": "individual Trace needs to be handled Always by the same open Telemetry collector instance so that it can make a",
    "start": "2820319",
    "end": "2827040"
  },
  {
    "text": "decision at the end of whether to keep it or not now that looks like this so now we",
    "start": "2827040",
    "end": "2832760"
  },
  {
    "text": "have our individual services that are just collecting that information sending it through to the centralized open",
    "start": "2832760",
    "end": "2838200"
  },
  {
    "text": "Telemetry collector which is then doing that receiving processing and exporting to the observability back",
    "start": "2838200",
    "end": "2845599"
  },
  {
    "text": "end and you could even like you know go a little crazy and sort of have a hybrid",
    "start": "2845599",
    "end": "2851160"
  },
  {
    "text": "implementation of this where you have a single service that always has a side car or maybe not for all your services",
    "start": "2851160",
    "end": "2857559"
  },
  {
    "text": "but where it makes sense and then the open Telemetry collector in the Middle where would that make sense if you have",
    "start": "2857559",
    "end": "2863920"
  },
  {
    "text": "some very individual concerns to handle for a specific service maybe you want",
    "start": "2863920",
    "end": "2869319"
  },
  {
    "text": "some specific service processing there that doesn't make sense for all the Telemetry but would be useful in the",
    "start": "2869319",
    "end": "2876880"
  },
  {
    "text": "specific context of a single service and then you can go totally",
    "start": "2876880",
    "end": "2882240"
  },
  {
    "text": "crazy put a load balancer in the middle and actually scale out the",
    "start": "2882240",
    "end": "2887319"
  },
  {
    "text": "collector so again many options and you're asking like okay which one right",
    "start": "2887319",
    "end": "2895760"
  },
  {
    "text": "now the thing is that in order to answer that question you need to get insight into how much Telemetry you're",
    "start": "2895760",
    "end": "2902920"
  },
  {
    "text": "collecting right we can we need to get a sense of the scale that you expect now",
    "start": "2902920",
    "end": "2908800"
  },
  {
    "text": "as Engineers we also have a tendency to over interpret the skill that we're",
    "start": "2908800",
    "end": "2915000"
  },
  {
    "text": "going to receive right we're looking to cater for 100,000 users how many do you have 10 right so it's important to start",
    "start": "2915000",
    "end": "2923160"
  },
  {
    "text": "small because the reality is that you're probably not Google or Amazon Netflix",
    "start": "2923160",
    "end": "2929200"
  },
  {
    "text": "Spotify whatever it is so it's important to start really simple and to look at",
    "start": "2929200",
    "end": "2936400"
  },
  {
    "text": "what I actually need you don't want to introduce all of that infrastructure complexity from the get-go so what I",
    "start": "2936400",
    "end": "2943400"
  },
  {
    "text": "would usually start with is with the centralized open Telemetry collector and build your way up from there to whatever",
    "start": "2943400",
    "end": "2949920"
  },
  {
    "text": "it is that you actually really need so in short keep it simple start small and",
    "start": "2949920",
    "end": "2956119"
  },
  {
    "text": "build your way up as you actually see a need to build yourself",
    "start": "2956119",
    "end": "2962920"
  },
  {
    "text": "up and that is bringing me to the end of this session now if we want to be really successful",
    "start": "2962920",
    "end": "2970799"
  },
  {
    "text": "at making our systems observable we can treat it as an afterthought and that's",
    "start": "2970799",
    "end": "2976960"
  },
  {
    "text": "why already you can probably Google observability driven development it has to be part of you know your train of",
    "start": "2976960",
    "end": "2983640"
  },
  {
    "text": "thought as you're you know developing new features as you're editing parts of your codebase and as you're building the",
    "start": "2983640",
    "end": "2990520"
  },
  {
    "text": "system it's always going to have to be present those observability guidelines right how do I make my system observable",
    "start": "2990520",
    "end": "2998079"
  },
  {
    "text": "what are the questions that we need to answer so it's important that you build",
    "start": "2998079",
    "end": "3003319"
  },
  {
    "text": "an observability strategy and that you have that shared across your organization so that it doesn't depend",
    "start": "3003319",
    "end": "3010000"
  },
  {
    "text": "on individual teams who are just really thorough or who may maybe have all of",
    "start": "3010000",
    "end": "3015040"
  },
  {
    "text": "that knowledge we want the same quality of telemetry across all of those teams that we have because otherwise you're",
    "start": "3015040",
    "end": "3022119"
  },
  {
    "text": "just looking at your observability backend seeing really useful information and then there's a blind spot",
    "start": "3022119",
    "end": "3030040"
  },
  {
    "text": "again also you need to play that game of tradeoffs right what is it that you need",
    "start": "3030640",
    "end": "3036480"
  },
  {
    "text": "the most what is it that you're you know what are you uh willing to the effort",
    "start": "3036480",
    "end": "3043160"
  },
  {
    "text": "that you're willing to put into it what are you willing to pay and that's where you can start looking into different",
    "start": "3043160",
    "end": "3049200"
  },
  {
    "text": "types of sampling strategies and looking into different types of deployment",
    "start": "3049200",
    "end": "3055240"
  },
  {
    "text": "models now if you are looking to learn more about observability they have this",
    "start": "3055240",
    "end": "3060440"
  },
  {
    "text": "beautiful hashtag that you can look for for any content out there but as always",
    "start": "3060440",
    "end": "3067200"
  },
  {
    "text": "I also have additional resources available for you um a bunch of Articles a bunch of books that are very good",
    "start": "3067200",
    "end": "3074440"
  },
  {
    "text": "reads and yeah you can always feel free to reach out if you have any questions as",
    "start": "3074440",
    "end": "3080240"
  },
  {
    "text": "well thank you for listening",
    "start": "3080240",
    "end": "3084680"
  }
]