[
  {
    "start": "0",
    "end": "147000"
  },
  {
    "text": "arrow i hope you all can see me and yeah i think i can encourage everyone to turn",
    "start": "14920",
    "end": "21760"
  },
  {
    "text": "your cameras on um i probably wouldn't be able to see you but at least it will make the entire",
    "start": "21760",
    "end": "30240"
  },
  {
    "text": "room a little bit more cozy and friendly if you can see each",
    "start": "30240",
    "end": "36399"
  },
  {
    "text": "other faces i think i'm about",
    "start": "36399",
    "end": "43120"
  },
  {
    "text": "ready to start [Music]",
    "start": "43120",
    "end": "48399"
  },
  {
    "text": "yeah i think it's 12 41 brisbane time which is 1 40 pm",
    "start": "48399",
    "end": "53440"
  },
  {
    "text": "sydney time so if i didn't mess up with time that's my session and i'm going to talk about the",
    "start": "53440",
    "end": "59440"
  },
  {
    "text": "serverless platforms and my name is ilya i'm a senior i.t",
    "start": "59440",
    "end": "64640"
  },
  {
    "text": "consultant helping various small and large businesses as well as startups i'm also a mentor",
    "start": "64640",
    "end": "71200"
  },
  {
    "text": "for queensland government i'm a man at the river city labs which is a local",
    "start": "71200",
    "end": "76240"
  },
  {
    "text": "startup co-working space and i would like to thank the ndc sydney for this",
    "start": "76240",
    "end": "82640"
  },
  {
    "text": "opportunity to present here over the last couple of years i've been very lucky and i had an opportunity to",
    "start": "82640",
    "end": "89439"
  },
  {
    "text": "work on a few uh cloud-based serverless solutions using aws and therefore i would like to",
    "start": "89439",
    "end": "97840"
  },
  {
    "text": "share some of my experience today and some of my knowledge i got over the last couple years i'll try to",
    "start": "97840",
    "end": "104960"
  },
  {
    "text": "keep my talk platform agnostic as many cloud providers",
    "start": "104960",
    "end": "110079"
  },
  {
    "text": "offer similar things and i've also done a bit of research and",
    "start": "110079",
    "end": "115280"
  },
  {
    "text": "will present serverless services comparison from different cloud providers uh just keep in mind",
    "start": "115280",
    "end": "121680"
  },
  {
    "text": "that my main experience in aws and i think it's going to be quite",
    "start": "121680",
    "end": "128319"
  },
  {
    "text": "challenging for me to get some immediate feedback but i'm going to monitor your messages",
    "start": "128319",
    "end": "133520"
  },
  {
    "text": "in this chat and maybe it's like uh chat later it's like channel for the room too",
    "start": "133520",
    "end": "139520"
  },
  {
    "text": "and i will try to answer all your questions during my presentation or at the end right",
    "start": "139520",
    "end": "146959"
  },
  {
    "text": "so let's start i think before we will dive into details let's us take a brief walkthrough into the",
    "start": "146959",
    "end": "154080"
  },
  {
    "start": "147000",
    "end": "147000"
  },
  {
    "text": "history so traditionally applications uh have been installed on by metal servers",
    "start": "154080",
    "end": "161920"
  },
  {
    "text": "and therefore they couldn't be really decoupled from underlying hardware it gave a lot of control over the",
    "start": "161920",
    "end": "167760"
  },
  {
    "text": "implementation but also required significant initial investments and a lot of effort maintaining and upgrading",
    "start": "167760",
    "end": "175040"
  },
  {
    "text": "hardware the development of virtualization techniques in late 90s an introduction of some",
    "start": "175040",
    "end": "183280"
  },
  {
    "text": "modern hypervisors such as vmware allowed us to abstract the operating system from the hardware",
    "start": "183280",
    "end": "190720"
  },
  {
    "text": "so major cloud providers made the next step allowing customers to think less about",
    "start": "190720",
    "end": "197040"
  },
  {
    "text": "virtual machines provisioning so they could just spin up some virtual machines in a few minutes it's something like ec2",
    "start": "197040",
    "end": "204319"
  },
  {
    "text": "in from aws in 2013",
    "start": "204319",
    "end": "210239"
  },
  {
    "text": "a docker container was introduced and it was i would say the beginning of uh",
    "start": "210239",
    "end": "218080"
  },
  {
    "text": "operating system level virtualization so it allowed actually to deploy applications in",
    "start": "218640",
    "end": "226159"
  },
  {
    "text": "using a deployment technique called containers and it allows us to create some packages with all applications all",
    "start": "226159",
    "end": "232560"
  },
  {
    "text": "dependencies and shape them to the",
    "start": "232560",
    "end": "238239"
  },
  {
    "text": "operating system so basically it allowed to abstract some operating system and it also solved the problem when something",
    "start": "238239",
    "end": "244799"
  },
  {
    "text": "runs in your machine but doesn't work on other people devices so",
    "start": "244799",
    "end": "250239"
  },
  {
    "text": "it doesn't work in test production something that happens quite often and i think the next step is basically",
    "start": "250239",
    "end": "257680"
  },
  {
    "text": "serverless and serverless computing delegates infrastructure provisioning configuration and management of third",
    "start": "257680",
    "end": "262960"
  },
  {
    "text": "party such as microsoft azure google cloud or aws",
    "start": "262960",
    "end": "268160"
  },
  {
    "text": "and initially started with a thing called function as a service and the functions are basically just",
    "start": "268160",
    "end": "274000"
  },
  {
    "text": "snippets of code that can be executed independently and i think the beauty of",
    "start": "274000",
    "end": "279199"
  },
  {
    "text": "this implementation that the provider decides when to create or destroy replicas of the software and",
    "start": "279199",
    "end": "286000"
  },
  {
    "text": "will respond to increased load by creating more or less of this replicas",
    "start": "286000",
    "end": "291759"
  },
  {
    "text": "which makes them much cheaper and those solutions they also vary green because the underlying hardware is",
    "start": "291759",
    "end": "299199"
  },
  {
    "text": "utilized way more efficiently so",
    "start": "299199",
    "end": "304320"
  },
  {
    "text": "it allows us to worry less about infrastructure and think more about the code and with",
    "start": "304320",
    "end": "309840"
  },
  {
    "text": "the time definition of serverless expanded and cloud providers started offering a bunch of other tools",
    "start": "309840",
    "end": "315840"
  },
  {
    "text": "such as event buses queues uh even the databases or services to run",
    "start": "315840",
    "end": "321840"
  },
  {
    "text": "something like docker containers so it all starts with the reason",
    "start": "321840",
    "end": "329039"
  },
  {
    "text": "and i think i would like to take a step back and consider a majority of questions that i'm getting",
    "start": "329039",
    "end": "334639"
  },
  {
    "text": "from startup founders from different clients as a technologist and those",
    "start": "334639",
    "end": "341360"
  },
  {
    "text": "questions are why should we move to the cloud why should we use different programming languages like",
    "start": "341360",
    "end": "347280"
  },
  {
    "text": "csharp.net java python node.js what is microservices architecture",
    "start": "347280",
    "end": "353520"
  },
  {
    "text": "why should we use containers why should we pay for managed services and why should we go serverless",
    "start": "353520",
    "end": "361680"
  },
  {
    "text": "and i think my favorite answer to all these questions is that people don't buy drills they buy",
    "start": "361680",
    "end": "368639"
  },
  {
    "text": "holes so it doesn't really matter what do you use to make things happen",
    "start": "368639",
    "end": "374560"
  },
  {
    "text": "there is a great article by ben kehoe explaining that serverless is a state of",
    "start": "374560",
    "end": "380000"
  },
  {
    "text": "mind allowing to focus more on business logic and the product value should drive",
    "start": "380000",
    "end": "386160"
  },
  {
    "text": "implementation not technology preferences",
    "start": "386160",
    "end": "390880"
  },
  {
    "text": "the chart on the screen is showing how modern deployment techniques help businesses to increase their focus on",
    "start": "392400",
    "end": "397680"
  },
  {
    "text": "business value and decrease concerns about infrastructure and provisioning however on the other side it comes with",
    "start": "397680",
    "end": "404960"
  },
  {
    "text": "less control over the stack implementation and therefore it's extremely important",
    "start": "404960",
    "end": "410880"
  },
  {
    "text": "to know when and why we should use serverless by understanding its benefits and limitations",
    "start": "410880",
    "end": "418960"
  },
  {
    "text": "so i think quite obviously that the main benefit of serverless is that there are no servers to manage",
    "start": "418960",
    "end": "426160"
  },
  {
    "text": "so well we know that there are still some servers there are still some operating systems runtimes containers",
    "start": "426160",
    "end": "431360"
  },
  {
    "text": "but they all managed by cloud providers so there is no such thing for business as maintenance windows or",
    "start": "431360",
    "end": "438479"
  },
  {
    "text": "we don't need a patch operating system we don't need to install any updates or we don't need to upgrade the software",
    "start": "438479",
    "end": "445360"
  },
  {
    "text": "because it's not supported anymore it's important to know that serverless",
    "start": "445360",
    "end": "451440"
  },
  {
    "text": "is not just compute services but helps a bunch of other things like even api gateways and that's why it",
    "start": "451440",
    "end": "459039"
  },
  {
    "text": "comes together as a bundle which makes a big benefit if you think about some",
    "start": "459039",
    "end": "466160"
  },
  {
    "text": "networking let's say so built-in scalability is another benefit of using serverless architecture",
    "start": "466160",
    "end": "472479"
  },
  {
    "text": "there is no need to worry about scalability and load balancing uh so you can see on the screen that",
    "start": "472479",
    "end": "480080"
  },
  {
    "start": "477000",
    "end": "477000"
  },
  {
    "text": "an extremely simplified schema of traditional application load balancing let's say the right to clients each of",
    "start": "480080",
    "end": "486560"
  },
  {
    "text": "them makes a simultaneous call or request to the server both requests are sent over the internet",
    "start": "486560",
    "end": "493919"
  },
  {
    "text": "they pass a firewall and arrive to the load balancer that redirects request 1",
    "start": "493919",
    "end": "498960"
  },
  {
    "text": "to server a and request b to server or request to the server b",
    "start": "498960",
    "end": "504479"
  },
  {
    "text": "if there is a sudden spike in a number of requests then some additional services c and d",
    "start": "504479",
    "end": "510479"
  },
  {
    "text": "can be provisioned yes there is a way to set up an auto scaling groups that can handle server",
    "start": "510479",
    "end": "516240"
  },
  {
    "text": "setup for you and create them in minutes but it obviously takes some time and effort",
    "start": "516240",
    "end": "521518"
  },
  {
    "text": "so in a serverless world if there are multiple simultaneous requests then the vendor will spin up",
    "start": "521519",
    "end": "527040"
  },
  {
    "text": "run and and as many functions or lambdas as needed",
    "start": "527040",
    "end": "533760"
  },
  {
    "text": "the providers often use containers behind the scene but we shouldn't really worry about them",
    "start": "533760",
    "end": "540560"
  },
  {
    "text": "so in our scenario if there are more concurrent requests coming at the same time then",
    "start": "540560",
    "end": "546080"
  },
  {
    "text": "our serverless application will handle them as easily as you know",
    "start": "546080",
    "end": "551200"
  },
  {
    "text": "one by creating just additional instances of our function so",
    "start": "551200",
    "end": "557440"
  },
  {
    "text": "and as you can see from the table on your screens major cloud providers allow at least one",
    "start": "557440",
    "end": "564000"
  },
  {
    "text": "thousand parallel executions and they support automatic scaling",
    "start": "564000",
    "end": "569120"
  },
  {
    "text": "this means that your application will be able to process an extremely high number of requests just as well as it can",
    "start": "569120",
    "end": "575279"
  },
  {
    "text": "handle a single request from a single user and unlike traditional architecture it will not be",
    "start": "575279",
    "end": "580399"
  },
  {
    "text": "overwhelmed by sudden increase of requests so basically it means that you can build",
    "start": "580399",
    "end": "586000"
  },
  {
    "text": "very scalable applications right from the beginning",
    "start": "586000",
    "end": "591839"
  },
  {
    "text": "and that's where we find the next huge benefit of serverless platforms it",
    "start": "592080",
    "end": "597920"
  },
  {
    "text": "is a pay-as-you-go model this means that you only charged for what you use and",
    "start": "597920",
    "end": "604000"
  },
  {
    "text": "the good news is that all three major cloud providers offer at least one million of lambda",
    "start": "604000",
    "end": "609279"
  },
  {
    "text": "executions per month for free yes there could be some additional services that you have to pay for",
    "start": "609279",
    "end": "615839"
  },
  {
    "text": "such as api gateway but and they will increase the overall cost",
    "start": "615839",
    "end": "621200"
  },
  {
    "text": "however most prototypes or proof of concepts can be built and released without",
    "start": "621200",
    "end": "626880"
  },
  {
    "text": "infrastructure investments so you will start paying for the infrastructure only after your application will gain some traffic",
    "start": "626880",
    "end": "632880"
  },
  {
    "text": "and ideally will start generating some income high availability is another and",
    "start": "632880",
    "end": "639680"
  },
  {
    "text": "resilience is another benefit of serverless so for example aws lambdas will run functions in multiple",
    "start": "639680",
    "end": "645680"
  },
  {
    "text": "availability zones across multiple regions so basically",
    "start": "645680",
    "end": "652160"
  },
  {
    "text": "it means that if there is any service interruption in one",
    "start": "652160",
    "end": "657360"
  },
  {
    "text": "availability zone then you're still fine because the function will just execute another one",
    "start": "657360",
    "end": "665200"
  },
  {
    "text": "it's important to remember that cloud providers still have some issues with their service they're quite",
    "start": "665360",
    "end": "671440"
  },
  {
    "text": "unlikely to happen but they happen all the time and sometimes entire regions can go down",
    "start": "671440",
    "end": "677279"
  },
  {
    "text": "and again in a traditional architecture approach you should think about",
    "start": "677279",
    "end": "682480"
  },
  {
    "text": "creating maybe a failover plan which might require provision of some",
    "start": "682480",
    "end": "688800"
  },
  {
    "text": "backup instances and then in case of some emergency or incident the traffic can be redirected",
    "start": "688800",
    "end": "695839"
  },
  {
    "text": "at any moment it can be automated but again it comes with additional costs",
    "start": "695839",
    "end": "700959"
  },
  {
    "text": "you shouldn't really worry about them when you go serverless decreased latency is another advantage",
    "start": "700959",
    "end": "706800"
  },
  {
    "text": "because there is no origin server so the code can run closer to your clients utilizing access points on a",
    "start": "706800",
    "end": "713600"
  },
  {
    "text": "global scale however again the implementation can be slightly different provided by provider",
    "start": "713600",
    "end": "720959"
  },
  {
    "text": "from the architecture perspective i think serverless encourages the adoption of new mindset",
    "start": "722160",
    "end": "727519"
  },
  {
    "text": "and that's the nature of serverless it's actually forcing developers and architects to design systems using microservices so",
    "start": "727519",
    "end": "734800"
  },
  {
    "text": "different components they can be isolated and deployed independently which means",
    "start": "734800",
    "end": "740880"
  },
  {
    "text": "that the release cycle becomes much shorter because you only update one component instead of",
    "start": "740880",
    "end": "746320"
  },
  {
    "text": "releasing the entire monolith application and another benefit that each component can",
    "start": "746320",
    "end": "752560"
  },
  {
    "text": "actually have its own runtime can use different programming languages like one function can be written in",
    "start": "752560",
    "end": "758320"
  },
  {
    "text": "javascript another one in python or another one in c sharp with no issues and i think the",
    "start": "758320",
    "end": "764160"
  },
  {
    "text": "last kind of big benefit that i found is that serverless is awesome like in any area of business",
    "start": "764160",
    "end": "770399"
  },
  {
    "text": "you would like to work with very passionate and intelligent people and i think including software",
    "start": "770399",
    "end": "776320"
  },
  {
    "text": "development it is actually important to be surrounded by those passionate people and uh from my experience everyone who",
    "start": "776320",
    "end": "783760"
  },
  {
    "text": "was involved in some serverless solutions development and testing actually wanted to learn",
    "start": "783760",
    "end": "788800"
  },
  {
    "text": "more wanted to contribute and was definitely more engaged so i think your",
    "start": "788800",
    "end": "794560"
  },
  {
    "text": "using serverless is making your company more attractive for proactive and talented engineers",
    "start": "794560",
    "end": "802240"
  },
  {
    "text": "well let's have a look at limitations and i think the most known one is a cold start of functions so",
    "start": "802959",
    "end": "809600"
  },
  {
    "text": "the very first cold start happens when the first request comes in after",
    "start": "809600",
    "end": "814880"
  },
  {
    "text": "deployment then the service needs to download the code load the code and all dependencies all modules and run",
    "start": "814880",
    "end": "822880"
  },
  {
    "text": "the code after that request is getting processed the instance stays alive to be reused",
    "start": "822880",
    "end": "828399"
  },
  {
    "text": "for subsequent requests and in majority of cases uh in idle instance lifetime is about 10",
    "start": "828399",
    "end": "835040"
  },
  {
    "text": "minutes for aws lambdas 20 minutes for azure functions between five minutes and five hours for",
    "start": "835040",
    "end": "841199"
  },
  {
    "text": "google cloud functions and as for coal star duration",
    "start": "841199",
    "end": "847279"
  },
  {
    "start": "844000",
    "end": "844000"
  },
  {
    "text": "you can see some of the stats published by michael shilkov in the end of the last year and",
    "start": "847279",
    "end": "853120"
  },
  {
    "text": "he was talking about difference between different runtimes or programming languages",
    "start": "853120",
    "end": "858639"
  },
  {
    "text": "so you can see that it varies from a few hundred milliseconds to up to",
    "start": "858639",
    "end": "864880"
  },
  {
    "text": "10 or even like 12 seconds and obviously it is noticeable difference particularly if it's used for the customer facing",
    "start": "864880",
    "end": "871519"
  },
  {
    "text": "user interface so it should be taken into consideration what programming languages language you use whether it's compiled",
    "start": "871519",
    "end": "878079"
  },
  {
    "text": "or not and cloud vendors they're all aware of this problem",
    "start": "878079",
    "end": "883360"
  },
  {
    "text": "and they are dealing with these type of issues in the end of last year aws introduced a concept of provision",
    "start": "883360",
    "end": "889600"
  },
  {
    "text": "concurrency that will allow to keep certain amount of functions initialized all the time and microsoft",
    "start": "889600",
    "end": "897040"
  },
  {
    "text": "has done something similar launched preformed instances and uh but unfortunately they come with",
    "start": "897040",
    "end": "902959"
  },
  {
    "text": "additional costs because if you want to keep one of the fun actions always warm you need to pay for that",
    "start": "902959",
    "end": "909440"
  },
  {
    "text": "another obvious limitation is a stateless nature of functions and timeouts different cloud providers offer 9 to 15",
    "start": "911040",
    "end": "918560"
  },
  {
    "text": "minutes of maximum execution time per request which might not be enough to complete a",
    "start": "918560",
    "end": "924160"
  },
  {
    "text": "task especially if your task is huge and you're dealing with gigabytes of data functions are",
    "start": "924160",
    "end": "930399"
  },
  {
    "text": "stateless by design so the next invocation doesn't know anything about the previous one",
    "start": "930399",
    "end": "935759"
  },
  {
    "text": "unless a persistent storage is used the use of some persistent storage such",
    "start": "935759",
    "end": "942240"
  },
  {
    "text": "as s3 bucket from aws or let's say blob storage from azure comes with the next limitation which is",
    "start": "942240",
    "end": "949199"
  },
  {
    "text": "a bandwidth and input output bottlenecks even though major cloud providers they",
    "start": "949199",
    "end": "954320"
  },
  {
    "text": "utilize extremely fast networks with extremely fast data transfers",
    "start": "954320",
    "end": "960160"
  },
  {
    "text": "within their networks they are still much slower than just and less predictable than just solid",
    "start": "960160",
    "end": "965759"
  },
  {
    "text": "state drive mounted to let's say a virtual machine also",
    "start": "965759",
    "end": "971120"
  },
  {
    "text": "functions have a memory allocation limits like it's three gigabytes for avs",
    "start": "971120",
    "end": "976240"
  },
  {
    "text": "lambdas it's typically 1.5 gigabyte for azure functions i think it's two gigabytes for the google cloud",
    "start": "976240",
    "end": "982160"
  },
  {
    "text": "functions so the serverless compute services might not be suitable if you need to perform",
    "start": "982160",
    "end": "987839"
  },
  {
    "text": "a calculation that requires more memory",
    "start": "987839",
    "end": "992959"
  },
  {
    "text": "another limitation that not all programming language is natively supported aws supports quite a few like node.js",
    "start": "992959",
    "end": "999519"
  },
  {
    "text": "c-sharp java python ruby and go azure functions work with node.js",
    "start": "999519",
    "end": "1005759"
  },
  {
    "text": "c-sharp java python typescript i think you can even deploy powershell",
    "start": "1005759",
    "end": "1012399"
  },
  {
    "text": "and google supports node.js python and go so overall you can see that only two",
    "start": "1012399",
    "end": "1018160"
  },
  {
    "text": "languages supported by all platforms namely node.js and python",
    "start": "1018160",
    "end": "1024720"
  },
  {
    "text": "logs and monitoring is another i would say quite difficult and",
    "start": "1024720",
    "end": "1030558"
  },
  {
    "text": "interesting thing uh because when we're talking about distributed services you need to make sure that you have some sort of",
    "start": "1030559",
    "end": "1036880"
  },
  {
    "text": "correlation idea that you can pass through multiple services",
    "start": "1036880",
    "end": "1042240"
  },
  {
    "text": "and the logs will not be very easily accessible and that's why there is a bunch of different third-party tools",
    "start": "1042240",
    "end": "1049200"
  },
  {
    "text": "or third-party allow internal tools to analyze logs and metrics come",
    "start": "1049200",
    "end": "1055760"
  },
  {
    "text": "in such as i think elasticsearch like elk stack or",
    "start": "1055760",
    "end": "1062000"
  },
  {
    "text": "splunk and maybe another thing that i would like to highlight is the use of",
    "start": "1062000",
    "end": "1068640"
  },
  {
    "text": "common code like if you need to share some code let's say multiple functions require the",
    "start": "1068640",
    "end": "1074080"
  },
  {
    "text": "same business or code logic and in this case if you're making some",
    "start": "1074080",
    "end": "1079440"
  },
  {
    "text": "changes to one of the shared libraries you need to distribute them to all affected components and i think it's not",
    "start": "1079440",
    "end": "1087360"
  },
  {
    "text": "necessarily a bad thing because it actually enforces some discipline it forces",
    "start": "1087360",
    "end": "1092640"
  },
  {
    "text": "developers and architects to build very independent services which is a key to decoupled architecture",
    "start": "1092640",
    "end": "1098240"
  },
  {
    "text": "however we know that in practice sometimes it doesn't work that way and but i like what sam newman said in",
    "start": "1098240",
    "end": "1104000"
  },
  {
    "text": "his book called building microservices back in 2014 that the evils of too much coupling",
    "start": "1104000",
    "end": "1111360"
  },
  {
    "text": "between the services by shared code are far worse than the problems caused by code duplication so",
    "start": "1111360",
    "end": "1118320"
  },
  {
    "text": "i think sometimes you can actually duplicate a bit of your code but make sure that your services are",
    "start": "1118320",
    "end": "1125200"
  },
  {
    "text": "independent so it's more about finding i think that balance which is quite significant challenge for system",
    "start": "1125200",
    "end": "1131440"
  },
  {
    "text": "architects and finally serverless architecture relies on",
    "start": "1131440",
    "end": "1137280"
  },
  {
    "text": "extensive usage of many different services including the databases messaging services",
    "start": "1137280",
    "end": "1142559"
  },
  {
    "text": "notification services api gateways authentication providers which makes it actually quite difficult",
    "start": "1142559",
    "end": "1149120"
  },
  {
    "text": "to migrate from one cloud provider to another and that's why they exist because i think",
    "start": "1149120",
    "end": "1155120"
  },
  {
    "text": "all major cloud providers they can actually see that if they only provision virtual machines",
    "start": "1155120",
    "end": "1161360"
  },
  {
    "text": "or something to run docker containers they can you can easily jump from one vendor to another",
    "start": "1161360",
    "end": "1167840"
  },
  {
    "text": "as soon as you start using serverless you're kind of getting some bender looking",
    "start": "1167840",
    "end": "1175200"
  },
  {
    "start": "1174000",
    "end": "1174000"
  },
  {
    "text": "all right so if you remember i started this talk saying that serverless is just another tool",
    "start": "1175360",
    "end": "1180640"
  },
  {
    "text": "that allows to make things happen so let's define now when we can use serverless",
    "start": "1180640",
    "end": "1185760"
  },
  {
    "text": "architecture and when we should avoid it and i think i will start with a bit of",
    "start": "1185760",
    "end": "1190799"
  },
  {
    "text": "controversial one because i believe that serverless is great for weapon mobile apis",
    "start": "1190799",
    "end": "1197120"
  },
  {
    "text": "and this is mainly due to its scalability and latency so it's particularly great for applications with",
    "start": "1197120",
    "end": "1202640"
  },
  {
    "text": "unpredictable load or some predictable traffic surges so for example",
    "start": "1202640",
    "end": "1207840"
  },
  {
    "text": "if you run an application which is used let's say by schools then you can predict that a lot of",
    "start": "1207840",
    "end": "1213440"
  },
  {
    "text": "traffic will be in the morning hours uh or and there will be probably not much traffic on the",
    "start": "1213440",
    "end": "1219840"
  },
  {
    "text": "weekends or school holidays or public holidays so the serverless architecture will",
    "start": "1219840",
    "end": "1225679"
  },
  {
    "text": "actually allow you to not pay for expensive high-end servers to be fully utilized",
    "start": "1225679",
    "end": "1230720"
  },
  {
    "text": "only for a couple hours a day use case for serverless can be to",
    "start": "1230720",
    "end": "1236320"
  },
  {
    "text": "integrate a bunch of existing apis exposing only one endpoint to the client",
    "start": "1236320",
    "end": "1243200"
  },
  {
    "text": "it's great for automated and current services we that doesn't really that don't require a",
    "start": "1243520",
    "end": "1249200"
  },
  {
    "text": "server uh constantly running so it can be also used to backup some databases uh or",
    "start": "1249200",
    "end": "1256720"
  },
  {
    "text": "perform some ci cd tasks change the cloud configuration regularly get some data from the third",
    "start": "1256720",
    "end": "1262799"
  },
  {
    "text": "party providers multimedia processing it's probably one of the most common",
    "start": "1262799",
    "end": "1268559"
  },
  {
    "text": "scenarios so like if you will if you google what is the most typical use case for serverless you will find this one",
    "start": "1268559",
    "end": "1274880"
  },
  {
    "text": "so when the file is uploaded to the storage service something is getting triggered the function does some file",
    "start": "1274880",
    "end": "1280799"
  },
  {
    "text": "transformation such as image trimming resizing and those",
    "start": "1280799",
    "end": "1287039"
  },
  {
    "text": "lambdas like those functions will be easily integrated with a bunch of other cloud services such as",
    "start": "1287120",
    "end": "1292159"
  },
  {
    "text": "face recognition so you can basically do a face recognition just write in a couple lines of code",
    "start": "1292159",
    "end": "1299600"
  },
  {
    "text": "event stream batch processing it's all great for serverless",
    "start": "1300000",
    "end": "1306400"
  },
  {
    "text": "because it lets you to utilize software from third-party software from third-party provider and integrate",
    "start": "1306400",
    "end": "1313679"
  },
  {
    "text": "with a bunch of different things like payment system authentication providers communication systems so as soon as there is some sort of",
    "start": "1313679",
    "end": "1319840"
  },
  {
    "text": "event is happening you can go and set up some workers that will do",
    "start": "1319840",
    "end": "1325600"
  },
  {
    "text": "a bunch of stuff based on the event one demand scaling is ideal feed for",
    "start": "1325600",
    "end": "1332960"
  },
  {
    "text": "data collection workloads so serverless architecture is resilient to large traffic spikes with minimal",
    "start": "1332960",
    "end": "1339520"
  },
  {
    "text": "risk of losing data and i'm going actually to talk about one particular implementation of this scenario shortly",
    "start": "1339520",
    "end": "1348000"
  },
  {
    "text": "some non-complex iot services like aws alex skills or iot hub from asia and other",
    "start": "1348000",
    "end": "1355440"
  },
  {
    "text": "they can be really good use cases for the serverless integrations however there is a caveat that if your",
    "start": "1355440",
    "end": "1362640"
  },
  {
    "text": "system is used by thousands devices and in one request per second",
    "start": "1362640",
    "end": "1367919"
  },
  {
    "text": "then it will become extremely expensive and as i mentioned before ci cd pipeline",
    "start": "1367919",
    "end": "1373360"
  },
  {
    "text": "is quite an interesting area for serverless implementation so you can do some github hooks that will trigger automated tests",
    "start": "1373360",
    "end": "1380400"
  },
  {
    "text": "website builds deployments etc serverless is not great for things like",
    "start": "1380400",
    "end": "1388320"
  },
  {
    "text": "predictable and constantly high system load then the user functions can be significantly more expensive comparing",
    "start": "1388320",
    "end": "1394640"
  },
  {
    "text": "to virtual machines",
    "start": "1394640",
    "end": "1399760"
  },
  {
    "text": "it's not great for complex and long processing tasks so they actually designed the functions",
    "start": "1399760",
    "end": "1405440"
  },
  {
    "text": "designed to execute small chunks of code and in most cases it's achievable however if your",
    "start": "1405440",
    "end": "1411600"
  },
  {
    "text": "function has to make acn calls to other apis or download gigabytes of data then serverless is probably not",
    "start": "1411600",
    "end": "1418000"
  },
  {
    "text": "the best option and parallelism can be also tricky so it's not really possible to run",
    "start": "1418000",
    "end": "1424559"
  },
  {
    "text": "multiple threads within one function so you need to probably execute multiple functions that can run",
    "start": "1424559",
    "end": "1430000"
  },
  {
    "text": "it simultaneously and then somehow sync them so as i said",
    "start": "1430000",
    "end": "1435679"
  },
  {
    "text": "there is a bunch of memory limitations and limited non-persistent",
    "start": "1435679",
    "end": "1443120"
  },
  {
    "text": "disk space allocation so if you need a lot of resources high memory or lots of disk space uh to",
    "start": "1443120",
    "end": "1450720"
  },
  {
    "text": "read write a lot of lots of data into the backend systems again it's not going to be the great use",
    "start": "1450720",
    "end": "1457120"
  },
  {
    "text": "for you and we've also discussed a few limitations related to the call starter",
    "start": "1457120",
    "end": "1463039"
  },
  {
    "text": "functions and we know that cloud providers working on that",
    "start": "1463039",
    "end": "1468720"
  },
  {
    "text": "however if you have some sla agreements based on the average response time then",
    "start": "1468720",
    "end": "1476159"
  },
  {
    "text": "you need to consider carefully what programming languages and runtime you use",
    "start": "1476159",
    "end": "1481760"
  },
  {
    "text": "all right let's look at something more practical i've been working on",
    "start": "1481760",
    "end": "1488640"
  },
  {
    "text": "ingestion api and i've been actually working on the business intelligence project and",
    "start": "1488640",
    "end": "1495840"
  },
  {
    "text": "i think at a very high level for all business intelligence products uh you need to",
    "start": "1495840",
    "end": "1503600"
  },
  {
    "text": "get the data process extract some value and present to a client by the website",
    "start": "1503600",
    "end": "1510000"
  },
  {
    "text": "in a form of reports dashboards via the mobile app and if anyone ever worked with business",
    "start": "1510000",
    "end": "1515760"
  },
  {
    "text": "intelligence or artificial intelligence solutions then you will probably agree that the",
    "start": "1515760",
    "end": "1521360"
  },
  {
    "text": "quality of data is crucial you wouldn't be able to train a model if your data is bad you wouldn't be able",
    "start": "1521360",
    "end": "1529360"
  },
  {
    "text": "to get any valuable data insights for business if your service data is",
    "start": "1529360",
    "end": "1534880"
  },
  {
    "text": "wrong or inaccurate so in our case we receive data from more than 25",
    "start": "1534880",
    "end": "1541840"
  },
  {
    "text": "different data providers and majority of data contains daily figures and coming in the morning",
    "start": "1541840",
    "end": "1546880"
  },
  {
    "text": "between 5 am and 9 am some of the data providers were internal some of them were external",
    "start": "1546880",
    "end": "1553520"
  },
  {
    "text": "some businesses had apis however many of them offered in venue solutions that could be",
    "start": "1553520",
    "end": "1559360"
  },
  {
    "text": "accessed only by vpn the maturity of this api could be also different as well as authentication",
    "start": "1559360",
    "end": "1566400"
  },
  {
    "text": "required some vendors just push some data by ftp servers or have their own ftp for others",
    "start": "1566400",
    "end": "1573279"
  },
  {
    "text": "the preferred way was just to push encrypted data to the cloud storage so we had to download it",
    "start": "1573279",
    "end": "1578480"
  },
  {
    "text": "and decrypt so basically lots of different scenarios so the business needs was to unify",
    "start": "1578480",
    "end": "1586320"
  },
  {
    "text": "the process of data retrieval by creating a single data integration solution for all providers",
    "start": "1586320",
    "end": "1593279"
  },
  {
    "text": "uh it was also important to make sure that we receive only requested data so vendors could couldn't push any",
    "start": "1593279",
    "end": "1599760"
  },
  {
    "text": "unexpected data sets to the ftp server cloud storage we also would like to verify the data",
    "start": "1599760",
    "end": "1605919"
  },
  {
    "text": "sets before saving them into our data warehouse so if some fields are missing",
    "start": "1605919",
    "end": "1611440"
  },
  {
    "text": "or in their own format then we would like to actually reject those files",
    "start": "1611440",
    "end": "1616640"
  },
  {
    "text": "obviously all data should be encrypted in transient and at rest and also we were looking to find a",
    "start": "1616640",
    "end": "1622320"
  },
  {
    "text": "costly effective solution to handle spikes because at that moment we had many quite",
    "start": "1622320",
    "end": "1627440"
  },
  {
    "text": "expensive virtual machines provisioned and they were running 24 7",
    "start": "1627440",
    "end": "1632799"
  },
  {
    "text": "but they've been only utilized for a few hours in a day in the morning so a few",
    "start": "1632799",
    "end": "1640559"
  },
  {
    "text": "assumptions were made based on historical data like we were expecting to receive 35 000 files daily the",
    "start": "1640559",
    "end": "1645840"
  },
  {
    "text": "average size of the file was 3 megabytes the maximum size was 150 megabytes",
    "start": "1645840",
    "end": "1652000"
  },
  {
    "text": "and um the load spikes were between five and nine am so because we were talking",
    "start": "1652000",
    "end": "1658320"
  },
  {
    "text": "about daily data from previous day so let's",
    "start": "1658320",
    "end": "1663760"
  },
  {
    "start": "1661000",
    "end": "1661000"
  },
  {
    "text": "have a very quick look at the proposed architecture i just wanna show you how the serverless solution can be built",
    "start": "1663760",
    "end": "1670159"
  },
  {
    "text": "and it is intentionally simplified version of the workflow with the purpose to demonstrate way of thinking",
    "start": "1670159",
    "end": "1675760"
  },
  {
    "text": "rather than the actual design so first of all we decided that it would be nice to",
    "start": "1675760",
    "end": "1681679"
  },
  {
    "text": "control what kind of data we would like to receive by defining job requests that's how we called it",
    "start": "1681679",
    "end": "1688720"
  },
  {
    "text": "based on a schedule so we needed a scheduling service to read some job request schedules",
    "start": "1688720",
    "end": "1695279"
  },
  {
    "text": "and generate actual data requests it's a straightforward task we decided",
    "start": "1695279",
    "end": "1701200"
  },
  {
    "text": "to create a function so we used aws so we created aws lambda that was periodically triggered by cloud",
    "start": "1701200",
    "end": "1708799"
  },
  {
    "text": "watch event all jab requests then they were stored in a serverless",
    "start": "1708799",
    "end": "1714320"
  },
  {
    "text": "nosql database called dynamodb so basically cloudwatch triggers lambda",
    "start": "1714320",
    "end": "1720080"
  },
  {
    "text": "lambda generates some dynamic items keeps them in the database",
    "start": "1720080",
    "end": "1726559"
  },
  {
    "text": "then we would like to allow data providers clients to retrieve such jobs requests by rest api",
    "start": "1726559",
    "end": "1732320"
  },
  {
    "text": "so basically we just wanted to give them opportunity to read some stuff from our database so in order",
    "start": "1732320",
    "end": "1738799"
  },
  {
    "text": "to achieve this we used api gateway service which is another serverless thing",
    "start": "1738799",
    "end": "1745120"
  },
  {
    "text": "which triggers a lambda and that lambda reads from dynamodb",
    "start": "1745120",
    "end": "1750320"
  },
  {
    "text": "and passes back to the client so we would like also to secure that endpoint",
    "start": "1750320",
    "end": "1755679"
  },
  {
    "text": "so we used aws cognito for users authentication which is another serverless",
    "start": "1755679",
    "end": "1762159"
  },
  {
    "text": "authentication provider and we use jwc tokens for requests",
    "start": "1762159",
    "end": "1769600"
  },
  {
    "text": "the files that they were going to receive could be really large so they could be like 100",
    "start": "1770159",
    "end": "1775600"
  },
  {
    "text": "megabytes so they couldn't really be sent by http api gateway",
    "start": "1775600",
    "end": "1781200"
  },
  {
    "text": "because there is some payload size limitations so in this case it makes sense to actually upload files directly",
    "start": "1781200",
    "end": "1787520"
  },
  {
    "text": "to s3 bucket which is a storage service so the access was provided also by cognito identity",
    "start": "1787520",
    "end": "1794320"
  },
  {
    "text": "pools when the user could actually exchange the jwc token for temporary credentials to access the",
    "start": "1794320",
    "end": "1801440"
  },
  {
    "text": "aws resources directly and upload data to s3 bucket as soon as file",
    "start": "1801440",
    "end": "1807600"
  },
  {
    "text": "arrives to s3 bucket it sends a message to the queue which triggers a sequence of lambdas to read",
    "start": "1807600",
    "end": "1814640"
  },
  {
    "text": "the file check if this file was expected update the job request status validate the",
    "start": "1814640",
    "end": "1820080"
  },
  {
    "text": "content save data to staging tables in our database so we actually used sqs service",
    "start": "1820080",
    "end": "1828080"
  },
  {
    "text": "more like an orchestrator for different lambdas however step functions i think it could",
    "start": "1828080",
    "end": "1833520"
  },
  {
    "text": "be used as well as event bridge but that's basically that event based",
    "start": "1833520",
    "end": "1841600"
  },
  {
    "text": "triggers obviously when something go goes wrong and it can",
    "start": "1841600",
    "end": "1848799"
  },
  {
    "text": "go wrong at any moment uh we would like to get notified",
    "start": "1848799",
    "end": "1854640"
  },
  {
    "text": "if let's say validation fails so then we used the cloud watch to keep all the",
    "start": "1854640",
    "end": "1861279"
  },
  {
    "text": "logs and also amazon sns which is simple notification service",
    "start": "1861279",
    "end": "1867200"
  },
  {
    "text": "to send email notifications to the tech support or the sns can actually call another",
    "start": "1867200",
    "end": "1874159"
  },
  {
    "text": "lambda and that lambda will publish or send some messages to our slack channel",
    "start": "1874159",
    "end": "1880720"
  },
  {
    "start": "1881000",
    "end": "1881000"
  },
  {
    "text": "so we didn't want to build a distributed monolith so we just ended up creating a bunch of",
    "start": "1881600",
    "end": "1886799"
  },
  {
    "text": "microservices and none of them actually knows about each other so the only way they can communicate to",
    "start": "1886799",
    "end": "1893840"
  },
  {
    "text": "each other is by some shared services and those three services as you can see it's like api gateway so we have like",
    "start": "1893840",
    "end": "1900000"
  },
  {
    "text": "one api gateway for all services or sms sqs which is queue",
    "start": "1900000",
    "end": "1906399"
  },
  {
    "text": "and notification services kms is just key management service route 53 it's for dns",
    "start": "1906399",
    "end": "1913200"
  },
  {
    "text": "configuration so that's why they could all be deployed completely separately",
    "start": "1913200",
    "end": "1919279"
  },
  {
    "text": "and this should be really the shared services only service that is kind of coupled with",
    "start": "1919279",
    "end": "1925519"
  },
  {
    "text": "others and i believe that such an architecture will be very similar in other cloud",
    "start": "1925519",
    "end": "1930640"
  },
  {
    "text": "vendors with the only difference that the message broker will be like azure service bus or google",
    "start": "1930640",
    "end": "1938000"
  },
  {
    "text": "cloud pops up service instead of sql sns",
    "start": "1938000",
    "end": "1943200"
  },
  {
    "text": "and i would like just to briefly mention the outcomes we had i'd like to focus on performance and cost observations",
    "start": "1943360",
    "end": "1949840"
  },
  {
    "text": "so we have completed throughput and load tests and in the throughput test we",
    "start": "1949840",
    "end": "1956159"
  },
  {
    "text": "just try to load a lot of lots of small files simultaneously",
    "start": "1956159",
    "end": "1962000"
  },
  {
    "text": "unfortunately there were some network bandwidth constraints related to the network",
    "start": "1962000",
    "end": "1967440"
  },
  {
    "text": "throughput and latency however we could observe that as soon as file landed to a s3 bucket",
    "start": "1967440",
    "end": "1973039"
  },
  {
    "text": "then it was processed in a few hundred milliseconds so we have never seen more than 68",
    "start": "1973039",
    "end": "1978720"
  },
  {
    "text": "messages in the cube when we submitted 1000 small files",
    "start": "1978720",
    "end": "1983518"
  },
  {
    "text": "the entire process involved 9000 function executions so basically 9000 lambdas were created or",
    "start": "1983840",
    "end": "1991760"
  },
  {
    "text": "invoked did some stuff and then ended five thousand dining already be rewrites",
    "start": "1991760",
    "end": "1997279"
  },
  {
    "text": "four thousand messages sent to sqs 9000 calls to s3 bucket so it sounds like for 1000 files it took",
    "start": "1997279",
    "end": "2003760"
  },
  {
    "text": "only two minutes but a lot of calls were made and in the load test",
    "start": "2003760",
    "end": "2009360"
  },
  {
    "text": "we were trying to load 3000 large files of the size of 91 gigabyte",
    "start": "2009360",
    "end": "2014640"
  },
  {
    "text": "and on average it took only 15 seconds to process a file which is pretty good and that's",
    "start": "2014640",
    "end": "2021279"
  },
  {
    "text": "mainly based on the content validation because um",
    "start": "2021279",
    "end": "2026480"
  },
  {
    "text": "the functions were run a bit longer because we're doing some json checks etc so i'm probably not going to dive into",
    "start": "2027279",
    "end": "2032480"
  },
  {
    "text": "details but and we could see a small increase in terms of messages in queue",
    "start": "2032480",
    "end": "2038799"
  },
  {
    "text": "75 messages but not dramatic at all",
    "start": "2038799",
    "end": "2043518"
  },
  {
    "text": "and even though we were talking that we still required 38 different events to happen",
    "start": "2043840",
    "end": "2049520"
  },
  {
    "text": "such as calls to batteries services lambdas dynamodb etc",
    "start": "2049520",
    "end": "2055679"
  },
  {
    "text": "per session to process a single file it still was fairly quick and it was",
    "start": "2056240",
    "end": "2061839"
  },
  {
    "text": "actually fairly cheap so we were doing some cost estimation we just picked a random client who was",
    "start": "2061839",
    "end": "2067839"
  },
  {
    "text": "going to actually send us 40 000 files per year based on an assumption that",
    "start": "2067839",
    "end": "2074480"
  },
  {
    "text": "let's say we have 100 customers per year which is roughly 4 million files to be processed which is 12 terabytes of data",
    "start": "2074480",
    "end": "2082158"
  },
  {
    "text": "and then we used the price for each service and intentionally didn't count three tier for our estimate and as a",
    "start": "2082159",
    "end": "2088960"
  },
  {
    "text": "result we only got the variable cost like 462 american dollars per year",
    "start": "2088960",
    "end": "2095520"
  },
  {
    "text": "and fixed cost was like 63 dollars per year and that's mainly for the dna setting and some other",
    "start": "2095520",
    "end": "2103520"
  },
  {
    "text": "guards so it seems to be a great price for cloud based on demand solution with",
    "start": "2103520",
    "end": "2109200"
  },
  {
    "text": "the built-in scalability availability because previously to support the same thing we had to run i",
    "start": "2109200",
    "end": "2114240"
  },
  {
    "text": "think five virtual machines and the cost was probably 20",
    "start": "2114240",
    "end": "2121200"
  },
  {
    "text": "times higher at least 20 times higher so it's been a great saving for the",
    "start": "2121200",
    "end": "2126960"
  },
  {
    "text": "company and uh if the if there is no transactions due to corvid 19 or something like that",
    "start": "2126960",
    "end": "2134079"
  },
  {
    "text": "then you don't need to pay for anything there are only some fixed costs but",
    "start": "2134079",
    "end": "2140240"
  },
  {
    "text": "otherwise you don't pay for anything and if you just getting a sudden spike you're ready to scale up",
    "start": "2140240",
    "end": "2147200"
  },
  {
    "text": "automatically at any moment so what we learned by implementing our",
    "start": "2147200",
    "end": "2154079"
  },
  {
    "text": "solution i would like to start with the value of infrastructures code and this is probably what i like the",
    "start": "2154079",
    "end": "2160480"
  },
  {
    "text": "most about cloud development and i will be honest with you i don't like",
    "start": "2160480",
    "end": "2165839"
  },
  {
    "text": "reading documentation i think nobody does or they lie i don't like documentation on how to set",
    "start": "2165839",
    "end": "2172640"
  },
  {
    "text": "up an environment uh the problem is that it often doesn't really cover everything",
    "start": "2172640",
    "end": "2178640"
  },
  {
    "text": "or not updated or it was written for windows server 2003 and you are trying to configure similar",
    "start": "2178640",
    "end": "2184160"
  },
  {
    "text": "things for windows server 2019 so that's why it easily becomes a",
    "start": "2184160",
    "end": "2189520"
  },
  {
    "text": "nightmare and it takes hours to and days to actually deploy and test",
    "start": "2189520",
    "end": "2195359"
  },
  {
    "text": "so for this reason infrastructure configuration definition files that can be used to set up environment is the",
    "start": "2195359",
    "end": "2200560"
  },
  {
    "text": "best documentation ever because it's self-explanatory in our",
    "start": "2200560",
    "end": "2205760"
  },
  {
    "text": "case we just created a bunch of cloud formation templates to build cloud infrastructure for all services using authentication",
    "start": "2205760",
    "end": "2212160"
  },
  {
    "text": "service error handling service and others so if you want to really know what's going on in terms of",
    "start": "2212160",
    "end": "2217520"
  },
  {
    "text": "infrastructure for the error handling service you just go to the tml file and you can see clearly what",
    "start": "2217520",
    "end": "2223200"
  },
  {
    "text": "what's been created why it's been created what parameters they considered",
    "start": "2223200",
    "end": "2230560"
  },
  {
    "text": "so all templates they take a few parameters one of them is environment identifier so each developer can create",
    "start": "2231200",
    "end": "2238240"
  },
  {
    "text": "its own isolated environment that will be set up exactly the same way as uh integration qa",
    "start": "2238240",
    "end": "2245520"
  },
  {
    "text": "uat prod and product environments and i",
    "start": "2245520",
    "end": "2253119"
  },
  {
    "text": "think that cloud providers they have a very strong support for infrastructures code",
    "start": "2253119",
    "end": "2258240"
  },
  {
    "text": "and they actually start releasing modern mod tools like aws release cdk basically that's something that actually",
    "start": "2258240",
    "end": "2264240"
  },
  {
    "text": "helps you to create the entire infrastructure using um using typescript",
    "start": "2264240",
    "end": "2271838"
  },
  {
    "text": "all infrastructure changes should be deployed after the code review and actually in our company would not",
    "start": "2272800",
    "end": "2279520"
  },
  {
    "text": "allow to make any changes via the console so all changes should be",
    "start": "2279520",
    "end": "2284800"
  },
  {
    "text": "traceable and easy to identify when and why something went wrong that's why all changes should be made in",
    "start": "2284800",
    "end": "2292800"
  },
  {
    "text": "the infrastructure files and committed to the github repository or any other repository",
    "start": "2292800",
    "end": "2299280"
  },
  {
    "text": "of your choice and also it enables security as code so security specialists can be involved",
    "start": "2299280",
    "end": "2305599"
  },
  {
    "text": "in the code review process early which is great because security concerns could be addressed early in the software development cycle so they can",
    "start": "2305599",
    "end": "2312000"
  },
  {
    "text": "have a look at your let's say how you create dynamic table and they can say oh we",
    "start": "2312000",
    "end": "2317760"
  },
  {
    "text": "basically require a different type of encryption so it's great you don't need to change",
    "start": "2317760",
    "end": "2323200"
  },
  {
    "text": "anything after you release the production you can actually do it straight away",
    "start": "2323200",
    "end": "2329839"
  },
  {
    "start": "2329000",
    "end": "2329000"
  },
  {
    "text": "the role of devops uh is different i think as soon as you adopt",
    "start": "2331040",
    "end": "2336640"
  },
  {
    "text": "infrastructures code then it becomes developer's responsibility you cannot",
    "start": "2336640",
    "end": "2341680"
  },
  {
    "text": "really ask your devops department to create a new queue on a nosql database table",
    "start": "2341680",
    "end": "2347680"
  },
  {
    "text": "every time you need it because you need it all the time and that's why it's important that every",
    "start": "2347680",
    "end": "2353280"
  },
  {
    "text": "developer now should understand the services they're using and their constraints so if using data",
    "start": "2353280",
    "end": "2358880"
  },
  {
    "text": "mdb you should be familiar with dynamic you should understand the constraints",
    "start": "2358880",
    "end": "2365200"
  },
  {
    "text": "it's increasing it increases the importance of professional development for everyone in the team",
    "start": "2365359",
    "end": "2370880"
  },
  {
    "text": "and that's why i encourage actually everyone to start",
    "start": "2370880",
    "end": "2377920"
  },
  {
    "text": "thinking about getting some certification regardless of your role whether you're a business analyst a developer a tester",
    "start": "2377920",
    "end": "2385280"
  },
  {
    "text": "or even a project manager because everyone who is working on a serverless application now becomes a devops engineer and",
    "start": "2385280",
    "end": "2393119"
  },
  {
    "text": "the great thing is that it's not boring and it helps to increase the level of",
    "start": "2393119",
    "end": "2398480"
  },
  {
    "text": "engagement and commitment among team members and this applies to qa engineers too",
    "start": "2398480",
    "end": "2405839"
  },
  {
    "start": "2402000",
    "end": "2402000"
  },
  {
    "text": "they're part of devops world which is exciting but it's also challenging",
    "start": "2405839",
    "end": "2410880"
  },
  {
    "text": "and we found that testing of serverless application is far more complicated because a lot of things",
    "start": "2410880",
    "end": "2416640"
  },
  {
    "text": "happening under the hood i found that unit testing is actually less valuable because you're trying to",
    "start": "2416640",
    "end": "2422240"
  },
  {
    "text": "mock the behavior of cloud services so",
    "start": "2422240",
    "end": "2427280"
  },
  {
    "text": "that's why it's not really helpful just to write unit tests and qa",
    "start": "2427280",
    "end": "2433280"
  },
  {
    "text": "engineers need to be able to familiar with some login services so they can actually understand",
    "start": "2433280",
    "end": "2440240"
  },
  {
    "text": "what's going on under the hood they should be able to monitor the messages if you deal with",
    "start": "2440240",
    "end": "2445520"
  },
  {
    "text": "sqs or cues event buses they should be able to test what happens",
    "start": "2445520",
    "end": "2451280"
  },
  {
    "text": "to the messages what happens in that letter cues and it is way more than just testing a user",
    "start": "2451280",
    "end": "2458160"
  },
  {
    "text": "interface against expected results so they need to have some common line",
    "start": "2458160",
    "end": "2464839"
  },
  {
    "text": "skills scripting skills to be able to write some automated tests",
    "start": "2464839",
    "end": "2471200"
  },
  {
    "text": "and that's the good news because those challenges they actually encourage to adopt automated testing practices",
    "start": "2471200",
    "end": "2480079"
  },
  {
    "start": "2480000",
    "end": "2480000"
  },
  {
    "text": "another important lesson we learned is that automated ci cd pipelines are required for serverless applications",
    "start": "2480079",
    "end": "2486319"
  },
  {
    "text": "so for those who are not familiar aci stands for continuous integration cd means continuous delivery or continuous",
    "start": "2486319",
    "end": "2491920"
  },
  {
    "text": "deployment and continuous integration is basically a practice when all developers commit the code",
    "start": "2491920",
    "end": "2497760"
  },
  {
    "text": "changes to a shared code base and the automated pipeline can immediately build the code",
    "start": "2497760",
    "end": "2503440"
  },
  {
    "text": "run unit tests identify some issues with rainy continuous delivery means that the",
    "start": "2503440",
    "end": "2508560"
  },
  {
    "text": "artifacts from the previous stage can be automatically get deployed",
    "start": "2508560",
    "end": "2514319"
  },
  {
    "text": "to a staging environment acceptance test can run there ensure that functionality is working as",
    "start": "2514319",
    "end": "2520000"
  },
  {
    "text": "expected in a similar to production environment continuous deployment can actually automate even",
    "start": "2520000",
    "end": "2525680"
  },
  {
    "text": "deployment to the production environment so the serverless deployments are very",
    "start": "2525680",
    "end": "2531280"
  },
  {
    "text": "sensitive and they can be quite challenging due to the decentralization of cloud services",
    "start": "2531280",
    "end": "2538160"
  },
  {
    "text": "so additionally there are many restrictions related to the cloud services to prevent the loss of data of the accidental loss of",
    "start": "2538160",
    "end": "2544960"
  },
  {
    "text": "data so for example in aws you cannot delete a s3 bucket unless you clear all the files from that market",
    "start": "2544960",
    "end": "2552160"
  },
  {
    "text": "and that's why when you have your deployment script you need to incorporate all this logic so you need to do some",
    "start": "2552160",
    "end": "2558880"
  },
  {
    "text": "checks is your bucket empty if yes yes you can delete it so we created just a lot of deployment",
    "start": "2558880",
    "end": "2565520"
  },
  {
    "text": "configurations as set of cli commands and",
    "start": "2565520",
    "end": "2571200"
  },
  {
    "text": "we also did code review of these pipelines so basically we just created uml diagrams if that happens then we should",
    "start": "2571200",
    "end": "2578079"
  },
  {
    "text": "do that etc etc and one of the most common issues i have seen related to deployment",
    "start": "2578079",
    "end": "2584400"
  },
  {
    "text": "automation is that the process is defined by one person and no one really knows how it works it just works however",
    "start": "2584400",
    "end": "2592880"
  },
  {
    "text": "the second opinion is extremely important when it comes to serverless applications deployment uh",
    "start": "2592880",
    "end": "2599520"
  },
  {
    "text": "because we're talking about dozens of different services with their own specifics and it's always good to have someone else to have a look at",
    "start": "2599520",
    "end": "2605599"
  },
  {
    "text": "what actually you're trying to achieve that's why i encourage everyone to have some",
    "start": "2605599",
    "end": "2611200"
  },
  {
    "text": "mandatory code reviews of deployment scripts and they should be also tested by qa",
    "start": "2611200",
    "end": "2619200"
  },
  {
    "text": "engineers so in terms of implementation we tried a bunch of different tools we just ended up defining our",
    "start": "2619200",
    "end": "2625520"
  },
  {
    "text": "ci cd process as the one that you can see on the screen our repository contains application code",
    "start": "2625520",
    "end": "2631119"
  },
  {
    "text": "deployment script cloud formation templates and automated tests so cloud formation templates with all",
    "start": "2631119",
    "end": "2637280"
  },
  {
    "text": "services defined here and automated tests they're basically a",
    "start": "2637280",
    "end": "2643760"
  },
  {
    "text": "mix of some cli commands in human tests that were sent to the go cd server and",
    "start": "2643760",
    "end": "2649040"
  },
  {
    "text": "the go cd server was just running that cloud formation and oh sorry the powershell script that was just",
    "start": "2649040",
    "end": "2655359"
  },
  {
    "text": "preparing the deployment created cloudformation templates deployed everything running automated tests",
    "start": "2655359",
    "end": "2662720"
  },
  {
    "text": "and the go cd agent was also created in a serverless container so with all these like three steps and",
    "start": "2662720",
    "end": "2669200"
  },
  {
    "text": "the beauty of this solution was that the ghost agent was removed after successful deployment so again you only pay for what you use",
    "start": "2669200",
    "end": "2678240"
  },
  {
    "start": "2681000",
    "end": "2681000"
  },
  {
    "text": "and just to summarize the main points we have discussed today that serverless is",
    "start": "2681280",
    "end": "2686400"
  },
  {
    "text": "considered as the next stage of the system development deployment techniques after virtual machines and containers",
    "start": "2686400",
    "end": "2692800"
  },
  {
    "text": "all main cloud providers invest a lot into serverless space and this area is expected to grow",
    "start": "2692800",
    "end": "2699359"
  },
  {
    "text": "further and we have talked about why we should consider serverless and it's not",
    "start": "2699359",
    "end": "2704480"
  },
  {
    "text": "about the technology itself it's about increased value on business value or increased focus on",
    "start": "2704480",
    "end": "2712240"
  },
  {
    "text": "business value there are still many limitations of serverless",
    "start": "2712240",
    "end": "2717520"
  },
  {
    "text": "that we should be aware of however for some use cases the benefits such as scalability cost effectiveness and high",
    "start": "2717520",
    "end": "2723760"
  },
  {
    "text": "availability outweigh disadvantages infrastructure code is great it",
    "start": "2723760",
    "end": "2731359"
  },
  {
    "text": "increases the quality of deployment significantly i think early involvement of qa",
    "start": "2731359",
    "end": "2737280"
  },
  {
    "text": "engineers and security teams is very beneficial",
    "start": "2737280",
    "end": "2742800"
  },
  {
    "text": "on the other side it requires a good understanding of cloud platforms by all parties involved not just devops",
    "start": "2742800",
    "end": "2750400"
  },
  {
    "text": "everyone is devops now and in fact developers create code and restructure",
    "start": "2750400",
    "end": "2756960"
  },
  {
    "text": "side by side so testers need to be able to test all services under the hood",
    "start": "2756960",
    "end": "2762640"
  },
  {
    "text": "including some message brokers that letter queues logs other",
    "start": "2762640",
    "end": "2769119"
  },
  {
    "text": "please invest into ci cd pipelines development it will pay out because properly",
    "start": "2769280",
    "end": "2775920"
  },
  {
    "text": "configured pipelines allow to create and delete entire environments in just minutes like",
    "start": "2775920",
    "end": "2781760"
  },
  {
    "text": "if you need to create an environment for penetration testing you just can spin it up in like two minutes and then after the",
    "start": "2781760",
    "end": "2788240"
  },
  {
    "text": "testing you can delete it each developer can have its own completely isolated environment",
    "start": "2788240",
    "end": "2794400"
  },
  {
    "text": "it's really beautiful when it's created in the right way deployment script should be reviewed and",
    "start": "2794400",
    "end": "2801119"
  },
  {
    "text": "tested because serverless applications can be very fragile and they integrate dozens of",
    "start": "2801119",
    "end": "2806960"
  },
  {
    "text": "different independent services so it's actually important to avoid any manual interventions by the web based",
    "start": "2806960",
    "end": "2813040"
  },
  {
    "text": "console keep all configuration scripts in the repository enforce code reviews for deployment",
    "start": "2813040",
    "end": "2820319"
  },
  {
    "text": "scripts and testing i think that's all i'd like to share today uh",
    "start": "2820319",
    "end": "2827839"
  },
  {
    "text": "thanks for being here and i'm just going to check if we've got",
    "start": "2827839",
    "end": "2833040"
  },
  {
    "text": "any questions or yeah feel free just",
    "start": "2833040",
    "end": "2845839"
  },
  {
    "text": "you",
    "start": "2845920",
    "end": "2848000"
  }
]