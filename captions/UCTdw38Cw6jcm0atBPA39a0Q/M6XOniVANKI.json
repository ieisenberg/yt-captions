[
  {
    "text": "all right I think it's a time for me to get started that means it's time for you all to sit down and shut up",
    "start": "1040",
    "end": "7859"
  },
  {
    "text": "how's everyone doing today was was lunch good I I didn't need any lunch because I was",
    "start": "7859",
    "end": "13920"
  },
  {
    "text": "well I screw it off not nerves or anything I was just chatting with people so uh welcome to my talk understanding",
    "start": "13920",
    "end": "21720"
  },
  {
    "text": "probabilistic data structures with 112 000 and 92 UFO sightings uh I apologize",
    "start": "21720",
    "end": "27060"
  },
  {
    "text": "in advance if I'm a little hoarse it's possible that I drank too much last night",
    "start": "27060",
    "end": "32578"
  },
  {
    "text": "actually I've just been nursing this cold for like six weeks so I thought I'd come to Norway and share with you all so my name is Guy Royce I'm a developer",
    "start": "32579",
    "end": "40260"
  },
  {
    "text": "Advocate at redis I like to say that there are three things on the slide that matter one of the matters to you and one",
    "start": "40260",
    "end": "47219"
  },
  {
    "text": "of them matters to me and one of them matters too my boss",
    "start": "47219",
    "end": "53899"
  },
  {
    "text": "and what my boss wants you to know is that redis is more than just a cash it could be a database it's got a lot of",
    "start": "54980",
    "end": "61140"
  },
  {
    "text": "it's more than getting set it stores more than strings it does a lot of stuff we're gonna talk a little bit about some of the stuff that it does today uh",
    "start": "61140",
    "end": "67979"
  },
  {
    "text": "there's some probability data structures that are available in redis are most going to talk about probability data structures and then I'll talk a little",
    "start": "67979",
    "end": "73560"
  },
  {
    "text": "bit about how you can use them from redis if you don't want to roll your own but we're going to go down into the details and how these things work so",
    "start": "73560",
    "end": "79380"
  },
  {
    "text": "that's the thing that matters my boss the thing that matters to me is all these Social Links here uh I",
    "start": "79380",
    "end": "85680"
  },
  {
    "text": "judge my values a human being based on I can't see the monitor it's over here",
    "start": "85680",
    "end": "92460"
  },
  {
    "text": "yeah no this is my most no yeah uh is that uh Twitter usernet right there so if you don't follow me on Twitter and",
    "start": "92460",
    "end": "98460"
  },
  {
    "text": "you're still willing to use Twitter uh then give me a follow please and if you're not going to use Twitter I'm on",
    "start": "98460",
    "end": "104520"
  },
  {
    "text": "Bluesky as well so all right guy.dev there uh and the thing on this slide that matters to you is that GitHub URL",
    "start": "104520",
    "end": "111659"
  },
  {
    "text": "right there so all of my code my slides slightly dated version I need to update that",
    "start": "111659",
    "end": "117360"
  },
  {
    "text": "um and all these examples that I'm going to show you today they're all out there on GitHub you can take a look at those on",
    "start": "117360",
    "end": "123060"
  },
  {
    "text": "your own in addition to a demo at the end that's on there I also have implemented several of these probabilistic data structures I'm going",
    "start": "123060",
    "end": "128880"
  },
  {
    "text": "to talk about in various programming languages some in Java some in JavaScript some in c-sharp so",
    "start": "128880",
    "end": "135840"
  },
  {
    "text": "pick your poison I don't think I did any of them in Python but does anyone care",
    "start": "135840",
    "end": "142379"
  },
  {
    "text": "so uh anyhow so that's me and I just want to point out that I did get guy.dev as a domain name",
    "start": "142379",
    "end": "148260"
  },
  {
    "text": "so there's that [Laughter] it only cost me 180 a year U.S but",
    "start": "148260",
    "end": "155280"
  },
  {
    "text": "totally worth it so a hundred and twelve thousand and ninety two so this is an oddly uh uh",
    "start": "155280",
    "end": "162720"
  },
  {
    "text": "specific number but it's also a surprisingly large number this is the number of UFO sightings reported in the",
    "start": "162720",
    "end": "169200"
  },
  {
    "text": "National UFO Research Center the new Fork um that has been logging UFO sightings",
    "start": "169200",
    "end": "175200"
  },
  {
    "text": "in the United States since about 1950 to present so 112 092 UFO sightings it's a",
    "start": "175200",
    "end": "181379"
  },
  {
    "text": "ton of data and um this data is kind of fun and interesting because it's got a lot of UFO sightings",
    "start": "181379",
    "end": "186900"
  },
  {
    "text": "and some of them are like hmm and some are them that person's on drugs",
    "start": "186900",
    "end": "193099"
  },
  {
    "text": "but I have this data and here's what it looks like um thanks to a wonderful man by the name of",
    "start": "193099",
    "end": "199500"
  },
  {
    "text": "Timothy Renner and I always always give him credit for this because I've gotten so much value out of his work he likes",
    "start": "199500",
    "end": "206099"
  },
  {
    "text": "to uh screen scrape weird data and then do data science with it and so he went to the new Forks website",
    "start": "206099",
    "end": "212760"
  },
  {
    "text": "screen scraped all their UFO signings and built a massive CSV file which is 112 093 lines long because there's a",
    "start": "212760",
    "end": "220019"
  },
  {
    "text": "header and then he used it to do all kinds of analysis he also screen scraped uh The",
    "start": "220019",
    "end": "226500"
  },
  {
    "text": "Big Field researcher organization's website and got uh 4092 is it four",
    "start": "226500",
    "end": "232019"
  },
  {
    "text": "thousand I do there's like four thousand and some odd Bigfoot sightings uh and it's statistical and machine learning",
    "start": "232019",
    "end": "238620"
  },
  {
    "text": "type stuff on those as well the UFO sightings are fun because he had he did a couple of uh",
    "start": "238620",
    "end": "244379"
  },
  {
    "text": "simple analyzes he did a histogram of the day of the year that UFO sightings are most likely to",
    "start": "244379",
    "end": "250140"
  },
  {
    "text": "occur in remember this is the United States that this is happening in any guess what day of the year is the most",
    "start": "250140",
    "end": "255540"
  },
  {
    "text": "common one for UFO sightings in the United States the 4th of July",
    "start": "255540",
    "end": "260820"
  },
  {
    "text": "that's right I always just imagine I I always I know it's right it's funny",
    "start": "260820",
    "end": "266940"
  },
  {
    "text": "right I always just imagine like this Father and Son sitting down to watch fireworks",
    "start": "266940",
    "end": "272360"
  },
  {
    "text": "and the son's saying dad is that a firework it's like no son that's UFO",
    "start": "272360",
    "end": "280099"
  },
  {
    "text": "um he also did an analysis to determine where the UFO sightings tend to occur it turns out like 80 of them happen within",
    "start": "281460",
    "end": "289740"
  },
  {
    "text": "100 kilometers of a U.S Air Base shocking",
    "start": "289740",
    "end": "295020"
  },
  {
    "text": "he did similar things with bigfoots where he would look at the Bigfoot data and would do clustering algorithms to",
    "start": "295020",
    "end": "300180"
  },
  {
    "text": "figure out where they tend to be grouped and ultimately found out that you can find Bigfoot in the woods",
    "start": "300180",
    "end": "307460"
  },
  {
    "text": "so and here I thought he was my father so but this is the data that it's in",
    "start": "308880",
    "end": "314040"
  },
  {
    "text": "this is an example of the data that's in there here we've got a summary of that that UFO sighting uh this is source is",
    "start": "314040",
    "end": "320699"
  },
  {
    "text": "well it's a summary it's exactly what you think it would be here we got three saucer-shaped ships very easy to say",
    "start": "320699",
    "end": "327180"
  },
  {
    "text": "high in the sky metallic but no shine rather dull gray they hovered overhead in a V formation",
    "start": "327180",
    "end": "332699"
  },
  {
    "text": "sounds like UFO to me this happened in Salem Oregon",
    "start": "332699",
    "end": "337740"
  },
  {
    "text": "because we've got the city and state that that happened in we've got a date time uh sometimes these are approximate sometimes they're a little more precise",
    "start": "337740",
    "end": "343440"
  },
  {
    "text": "these are just eyewitness accounts so it's going to be like oh it was you know no one's checking their watch right it's",
    "start": "343440",
    "end": "348600"
  },
  {
    "text": "just like oh it was this night and you know this one happened on September the 15th of 1950 at about two o'clock in the",
    "start": "348600",
    "end": "355080"
  },
  {
    "text": "afternoon we've got the shape of these UFO sightings uh disc is a shape there are",
    "start": "355080",
    "end": "361560"
  },
  {
    "text": "other things that are very unshaped like words that are used to describe shapes of UFO sightings like object and Light",
    "start": "361560",
    "end": "368900"
  },
  {
    "text": "um the duration in human terms so this is like 15 minutes or a couple of hours or that sort of thing it's",
    "start": "369660",
    "end": "376199"
  },
  {
    "text": "descriptive it's not like a numeric value the link back on the new Fork site for uh that sighting the full text of that",
    "start": "376199",
    "end": "384240"
  },
  {
    "text": "UFO sighting that UFO encounter we'll do some analysis on that later at the end of the talk and then the latitude and",
    "start": "384240",
    "end": "390720"
  },
  {
    "text": "longitude of the city where this happened so this could be fun data we could do lots of fun stuff with this we're going",
    "start": "390720",
    "end": "396720"
  },
  {
    "text": "to do statistical analysis at the end of the words that are used in UFO sightings",
    "start": "396720",
    "end": "403860"
  },
  {
    "text": "which is to say we're going to count them so so and we're going to I'm going to",
    "start": "403860",
    "end": "409740"
  },
  {
    "text": "demonstrate what probabilistic data structures are with some of this data so this is the big question what is a",
    "start": "409740",
    "end": "415500"
  },
  {
    "text": "probabilistic data structure now uh if you uh well actually let's do a show of hands how many here have heard of",
    "start": "415500",
    "end": "421919"
  },
  {
    "text": "probabilistic data structures okay a few of you technically should be all of you because I just use the phrase",
    "start": "421919",
    "end": "429319"
  },
  {
    "text": "but we'll go with this how many have actually used them in a production environment well I see like two hands so",
    "start": "429319",
    "end": "436860"
  },
  {
    "text": "so if you don't know what a probabilistic data structure is don't feel bad most of us don't that's why you're here",
    "start": "436860",
    "end": "442979"
  },
  {
    "text": "right I did a survey on Twitter when I was putting this talk together a couple years ago and uh",
    "start": "442979",
    "end": "448560"
  },
  {
    "text": "fully UH 60 like three out of five had never heard of them and um and one out",
    "start": "448560",
    "end": "454680"
  },
  {
    "text": "of five had heard the term but they didn't know what it was and the other one-fifth of the people had either knew",
    "start": "454680",
    "end": "460080"
  },
  {
    "text": "what they were or actually used them so you're in good company nobody knows what these things are",
    "start": "460080",
    "end": "466380"
  },
  {
    "text": "so that's why we're here but in order to explain what it's a probabilistic data structure is I think",
    "start": "466380",
    "end": "472259"
  },
  {
    "text": "it's best to talk about its evil twin the deterministic data structure",
    "start": "472259",
    "end": "477979"
  },
  {
    "text": "the deterministic data structure is well it's the data structures you're already using it's the ones you use every day",
    "start": "478139",
    "end": "483240"
  },
  {
    "text": "here I've got like lists sets arrays graphs tuples Stacks trees tables cues",
    "start": "483240",
    "end": "488520"
  },
  {
    "text": "right these are the the hash tables that you use or the uh well I'm guessing most",
    "start": "488520",
    "end": "493680"
  },
  {
    "text": "the folks here are probably.net right maybe fair to say ndc's a little.net heavy",
    "start": "493680",
    "end": "499259"
  },
  {
    "text": "um so these would be the dictionaries that you're using in c-sharp if you're a Java person these would be the hash Maps",
    "start": "499259",
    "end": "506160"
  },
  {
    "text": "but these are like the dictionaries and the lists and the sets these are the data structures we use all the time and the reason they're called deterministic",
    "start": "506160",
    "end": "511860"
  },
  {
    "text": "data structures is because well because they do what you tell them to like if I shove a bunch of data into a hash map",
    "start": "511860",
    "end": "519000"
  },
  {
    "text": "into a dictionary uh I expect to get it all back out and it doesn't change its Behavior based on",
    "start": "519000",
    "end": "525000"
  },
  {
    "text": "the order that I shove it in it's just it stores it reliably deterministically and I get it back",
    "start": "525000",
    "end": "531180"
  },
  {
    "text": "and um so that's a deterministic area structure and I'm going to dive into one deterministic data structure in",
    "start": "531180",
    "end": "536700"
  },
  {
    "text": "particular and we're going to talk about hash tables and how hash tables work now a lot of you probably took computer science and you took a data structure",
    "start": "536700",
    "end": "543720"
  },
  {
    "text": "class and so this might be review but there's a lot of people that didn't have a traditional uh um background and so I want to cover",
    "start": "543720",
    "end": "550260"
  },
  {
    "text": "this for for those as well and there's probably a lot of you that's like like crammed the information about how a hashtag Works in my brain so that I",
    "start": "550260",
    "end": "556260"
  },
  {
    "text": "could pass a test and then I haven't used it in 20 years which is me",
    "start": "556260",
    "end": "561899"
  },
  {
    "text": "um and so just for those who aren't familiar hash table is your dictionary right you you got the key value pairs I",
    "start": "561899",
    "end": "567600"
  },
  {
    "text": "I want to shovel like the city it's Salem and so I can pass that string into that hash table and get that key back",
    "start": "567600",
    "end": "573240"
  },
  {
    "text": "and get that value back out it's a kind of like a key Value Store and the reason that they're called hash",
    "start": "573240",
    "end": "580140"
  },
  {
    "text": "tables is because we use hashing functions to uh on the keys when we're inserting things into the hash table",
    "start": "580140",
    "end": "587100"
  },
  {
    "text": "so a hashing function can be thought of as well it's a function that does a deterministic Thing If you give us some",
    "start": "587100",
    "end": "592920"
  },
  {
    "text": "data and you give it a seed it will generate a numeric value out of that data and",
    "start": "592920",
    "end": "598440"
  },
  {
    "text": "that data could be a gigabyte or it could be a bite all right here",
    "start": "598440",
    "end": "603779"
  },
  {
    "text": "I've got the utf-8 if I can point to my screen again here those right there that's the utf-8 strings or the ASCII",
    "start": "603779",
    "end": "611339"
  },
  {
    "text": "strings bytes that make up the word Scully from the X-Files",
    "start": "611339",
    "end": "616740"
  },
  {
    "text": "and so if we shove Scully into the hashing function with a random seed number and we use those same values both",
    "start": "616740",
    "end": "622440"
  },
  {
    "text": "times we will get out a numeric value that's like say a 32-bit integer a 64-bit integer and it's worth noting I'm",
    "start": "622440",
    "end": "629100"
  },
  {
    "text": "I'm almost positive all of you have heard of hashing functions before but it's worth noting that when you're building a hash table you're not going",
    "start": "629100",
    "end": "635880"
  },
  {
    "text": "to use something like Shaw right you shot 256 for your hashing functions for your table it's gonna be",
    "start": "635880",
    "end": "641580"
  },
  {
    "text": "slow because those are cryptographic hashes those are made to be secure so that if you make a small change to your",
    "start": "641580",
    "end": "646740"
  },
  {
    "text": "data you get a random change to your output number whereas the type of hashing functions you would use for hash",
    "start": "646740",
    "end": "652620"
  },
  {
    "text": "table you don't care about small changes of data making bigger small changes to",
    "start": "652620",
    "end": "658260"
  },
  {
    "text": "your output number it's okay if they're close as long as they're smoothly distributed because performance matters",
    "start": "658260",
    "end": "664320"
  },
  {
    "text": "but you don't have to worry about anyone reverse engineering your keys right you know if you're hashing your password then that matters a lot but if you're",
    "start": "664320",
    "end": "670500"
  },
  {
    "text": "hashing a you know the word state so that you can access it later it doesn't matter so we're using simpler hashing",
    "start": "670500",
    "end": "675600"
  },
  {
    "text": "functions uh I'm in my examples I use murmur hash because there's a library for it but you",
    "start": "675600",
    "end": "681779"
  },
  {
    "text": "can even write your own so so hashing functions take Blobs of data and turn onto the numbers a hash",
    "start": "681779",
    "end": "687540"
  },
  {
    "text": "table then uses this concept and our hash table here is is this bit on the right it's got It's an array",
    "start": "687540",
    "end": "695820"
  },
  {
    "text": "it's just a fixed length array and in that array I'm this particular implementation is using linked lists",
    "start": "695820",
    "end": "701519"
  },
  {
    "text": "there are other choices other ways to do this but this is a really simple one and so what we do is we have a linked list",
    "start": "701519",
    "end": "708120"
  },
  {
    "text": "of we have an array of linked lists and they're all empty starting out and if I",
    "start": "708120",
    "end": "713279"
  },
  {
    "text": "want to add the City of Salem to my hash table I take the key City",
    "start": "713279",
    "end": "718680"
  },
  {
    "text": "I run it through a hashing function and I get a number and then I modulus that number with the",
    "start": "718680",
    "end": "724860"
  },
  {
    "text": "size of the array of linked lists and that gives me an index and then I",
    "start": "724860",
    "end": "730079"
  },
  {
    "text": "can go straight to that index and I can say add this value to the linked list or if",
    "start": "730079",
    "end": "735779"
  },
  {
    "text": "it's in the linked list already replace it and so here we do City we get ultimately",
    "start": "735779",
    "end": "741420"
  },
  {
    "text": "calculated one and we put City Salem in there and then when we've got to add something else",
    "start": "741420",
    "end": "747600"
  },
  {
    "text": "say the state we go through that same process and we get a different index and so we're we're building up these this array of linked lists with all the",
    "start": "747600",
    "end": "754140"
  },
  {
    "text": "values now what can happen here and this is why we use a linked list is that you know",
    "start": "754140",
    "end": "760380"
  },
  {
    "text": "we've only got 10 items in our little array here so we're going to get a collision and so when we go to add the shape of a",
    "start": "760380",
    "end": "765540"
  },
  {
    "text": "UFO to this hash table we're gonna we get one again and so rather than",
    "start": "765540",
    "end": "772800"
  },
  {
    "text": "just blow up or have problems we add another thing to the linked list and so we grow these linked lists over time if",
    "start": "772800",
    "end": "779279"
  },
  {
    "text": "the linked lists are getting too long we'll re we'll expand our array and we'll rehash everything and reallocate",
    "start": "779279",
    "end": "785399"
  },
  {
    "text": "everything when we go to read from these hash tables then we just follow the opposite",
    "start": "785399",
    "end": "791700"
  },
  {
    "text": "pattern we take the word a city we get the index we look at the index we walk the linked list until we find the word",
    "start": "791700",
    "end": "796920"
  },
  {
    "text": "City we don't find it then we return not found we do find it then we return the value",
    "start": "796920",
    "end": "802440"
  },
  {
    "text": "so that's like hash tables and in what three minutes so just a little Refresher",
    "start": "802440",
    "end": "809700"
  },
  {
    "text": "so uh and I bring this up because the principles in a hash table this hashing of keys or values and turning them into",
    "start": "809700",
    "end": "815940"
  },
  {
    "text": "indices and then storing things based on that index is a common pattern and how a",
    "start": "815940",
    "end": "821760"
  },
  {
    "text": "lot of probabilistic data structures work so there's a purpose this Refresher so when we pick our uh deterministic",
    "start": "821760",
    "end": "828839"
  },
  {
    "text": "data structures one thing we'll often look at is we'll look at the time complexity of our operations",
    "start": "828839",
    "end": "834540"
  },
  {
    "text": "and the space complexity of our operations and we'll make choices based on which one to use based on on that so",
    "start": "834540",
    "end": "840779"
  },
  {
    "text": "we might pick an array because it has a Time complexity that's very fast accessing an element in",
    "start": "840779",
    "end": "847200"
  },
  {
    "text": "the array is O of one constant time doesn't matter conversely we might say no no we don't",
    "start": "847200",
    "end": "853680"
  },
  {
    "text": "want to use an array because we that way space there's a bunch of empty values in there if we've got an array of integers I've got",
    "start": "853680",
    "end": "859860"
  },
  {
    "text": "integers that are unallocated that are just sitting there it's wasting space so I might want to choose a linked list",
    "start": "859860",
    "end": "865320"
  },
  {
    "text": "instead because the linked list is exactly as long as big as it needs to be and so it's got better space complexity",
    "start": "865320",
    "end": "872040"
  },
  {
    "text": "but to access things in the linked list you have to walk it and so it's got worse time complexity so basically",
    "start": "872040",
    "end": "878940"
  },
  {
    "text": "raise or fast but waste space a linked list",
    "start": "878940",
    "end": "885000"
  },
  {
    "text": "is compact but is slow and so you make these trade-offs when you're you're writing your software now most of us on",
    "start": "885000",
    "end": "890339"
  },
  {
    "text": "our day-to-day we just like man it's using array and it'll be fine or a link listen will be fine or I'll use a hash table to be fine and so in a lot of",
    "start": "890339",
    "end": "896880"
  },
  {
    "text": "times we're not really opposing the time and space complexity we're not making that specific comparison in our",
    "start": "896880",
    "end": "903420"
  },
  {
    "text": "brain we're we're often looking at the capabilities of that thing so we'll choose a hash table versus a list",
    "start": "903420",
    "end": "909720"
  },
  {
    "text": "because the hash table because we want to store things by keys and we'll choose a list because we have a list of things",
    "start": "909720",
    "end": "915360"
  },
  {
    "text": "and so we will look at them not necessarily based on their time and space but also based on their capability",
    "start": "915360",
    "end": "921540"
  },
  {
    "text": "and one of the capabilities that you can trade off on besides time and space and another capability you can look at is",
    "start": "921540",
    "end": "928139"
  },
  {
    "text": "accuracy accuracy complexity isn't a real word",
    "start": "928139",
    "end": "933180"
  },
  {
    "text": "but that's what I titled my slide but the idea here is that you can make a probabilistic data structure you make a",
    "start": "933180",
    "end": "938760"
  },
  {
    "text": "data structure that's probabilistic that will lie to you and so uh it might uh it'd be super fast",
    "start": "938760",
    "end": "946320"
  },
  {
    "text": "Maybe by orders of magnitude it'll be super small by orders of magnitude but two percent of the time it'll give you a",
    "start": "946320",
    "end": "952500"
  },
  {
    "text": "false positive and you're like well I don't want my data structures to do that",
    "start": "952500",
    "end": "958560"
  },
  {
    "text": "right right it's like no it must always tell me the truth under all circumstances well does it does is that actually",
    "start": "958560",
    "end": "964980"
  },
  {
    "text": "necessary because when you start scaling things up it sometimes doesn't matter",
    "start": "964980",
    "end": "970380"
  },
  {
    "text": "say uh say you're a really large uh online video provider",
    "start": "970380",
    "end": "976620"
  },
  {
    "text": "you know that rhymes with tube um and you need to count unique views of a",
    "start": "976620",
    "end": "983459"
  },
  {
    "text": "video unique user views does it matter if the total views is a",
    "start": "983459",
    "end": "988860"
  },
  {
    "text": "million or a million and seven is that really that important",
    "start": "988860",
    "end": "993899"
  },
  {
    "text": "is that important enough that you would store all one million and seven users in a table for that particular video or in",
    "start": "993899",
    "end": "1000440"
  },
  {
    "text": "some sort of data structure probably not probabilistic data structure solved this",
    "start": "1000440",
    "end": "1006620"
  },
  {
    "text": "problem where it's off by a little bit but it's close enough and this isn't actually that form of a concept",
    "start": "1006620",
    "end": "1012500"
  },
  {
    "text": "here we've got a wonderful picture of the Devil's Tower which I think is in Wyoming but it's in the Badlands I just can't remember it's in Wyoming or North",
    "start": "1012500",
    "end": "1018440"
  },
  {
    "text": "Dakota or South Dakota it's definitely up there somewhere but anyhow if you've seen Close Encounters",
    "start": "1018440",
    "end": "1024500"
  },
  {
    "text": "of the Third Kind then you know why I suddenly want mashed potatoes that's that's a joke for everyone over",
    "start": "1024500",
    "end": "1030319"
  },
  {
    "text": "50. um so this was featured this this mountain was featured it's called The Devil's",
    "start": "1030319",
    "end": "1036740"
  },
  {
    "text": "Towers featured in the movie Close Encounters of the Third Kind and this picture I have of it here is is a jpeg",
    "start": "1036740",
    "end": "1042760"
  },
  {
    "text": "obviously right and you can tell because if you look at that that pixel right",
    "start": "1042760",
    "end": "1047780"
  },
  {
    "text": "right there see it yeah it's the wrong shade of blue",
    "start": "1047780",
    "end": "1054400"
  },
  {
    "text": "because it's a JPEG and the compression is lossy jpegs are in a way are probabilistic you've lose some of your",
    "start": "1054559",
    "end": "1060919"
  },
  {
    "text": "data but it's good enough and so that's the same idea of the probabilistic data structure that's the",
    "start": "1060919",
    "end": "1066919"
  },
  {
    "text": "trade-off you're making it's a little bit lossy but it's good enough making sense so far",
    "start": "1066919",
    "end": "1072799"
  },
  {
    "text": "good I'm not crazy a lot of probabilistic data structures",
    "start": "1072799",
    "end": "1078679"
  },
  {
    "text": "can be thought of as sets of the Venn diagram variety but that are unusual",
    "start": "1078679",
    "end": "1084020"
  },
  {
    "text": "that can only do a limited set of operations and sometimes lies to you so like in in typical sets if you think",
    "start": "1084020",
    "end": "1091460"
  },
  {
    "text": "about like a set class in Java you can add things to the set you can remove things from the set you can get the",
    "start": "1091460",
    "end": "1098240"
  },
  {
    "text": "members of the set you can do intersections and differences and unions and all that sort of stuff you can test",
    "start": "1098240",
    "end": "1105080"
  },
  {
    "text": "and say is this thing in the set you can ask for membership you can get the cardinality to set which would be the number of items in it",
    "start": "1105080",
    "end": "1111460"
  },
  {
    "text": "probabilistic data structures are often sets that only do some of these things",
    "start": "1111460",
    "end": "1116900"
  },
  {
    "text": "and so you might have a probability data structure the test for membership I keep adding things to it and then I can say",
    "start": "1116900",
    "end": "1122360"
  },
  {
    "text": "is this thing in the set and it'll say yes or no or probably not",
    "start": "1122360",
    "end": "1127520"
  },
  {
    "text": "and probably is because it could be lying to you you can create a probabilistic data",
    "start": "1127520",
    "end": "1134059"
  },
  {
    "text": "structure that says how many things are in a set so as you add unique items like",
    "start": "1134059",
    "end": "1139340"
  },
  {
    "text": "say the username example from unique views of a video you can then get account of those how",
    "start": "1139340",
    "end": "1145400"
  },
  {
    "text": "many unique things are in that set you can do a frequency which is starting",
    "start": "1145400",
    "end": "1151580"
  },
  {
    "text": "to stretch the set analogy a little bit but if you think of it in terms of I added the star five times to the set and",
    "start": "1151580",
    "end": "1157280"
  },
  {
    "text": "I added the the square four times and the circle six times in the Triangle three times you can get a counting of",
    "start": "1157280",
    "end": "1164299"
  },
  {
    "text": "things so you can add these things to the set and then say well what's the frequency of this and this how many",
    "start": "1164299",
    "end": "1169760"
  },
  {
    "text": "times was this added you think of this maybe as a sorted set with a numeric value associated with it",
    "start": "1169760",
    "end": "1175400"
  },
  {
    "text": "um and there are data structures that are optimized for this there's also data structure the last one",
    "start": "1175400",
    "end": "1181820"
  },
  {
    "text": "we'll talk about around ranking where it's sort of like counting but instead of counting it just keeps the relative",
    "start": "1181820",
    "end": "1186980"
  },
  {
    "text": "order so every single time I add something to it it bumps the order around but I can't get reliable counts out of it but the relative frequency to",
    "start": "1186980",
    "end": "1195380"
  },
  {
    "text": "each other is is consistent and so I can find out that there are more circles than there are stars than there are",
    "start": "1195380",
    "end": "1202520"
  },
  {
    "text": "squares and there are triangles and so these are the sorts of things probabilistic data structures can do you",
    "start": "1202520",
    "end": "1207799"
  },
  {
    "text": "can also do a similarity on some of these sets with some of these data structures where you can measure how",
    "start": "1207799",
    "end": "1214100"
  },
  {
    "text": "similar one set that is probabilistic is to another we'll get into that when we talk about Min hash",
    "start": "1214100",
    "end": "1221200"
  },
  {
    "text": "there's a lot of choices out there and I just grabbed a few off the internet here I haven't looked at any all these in",
    "start": "1222559",
    "end": "1227600"
  },
  {
    "text": "detail some of them I haven't looked and I kind of know how they work but I don't have a talk ready and so it's not like in my brain the ones we're going to talk",
    "start": "1227600",
    "end": "1234799"
  },
  {
    "text": "about today are Bloom filters heavy Keepers and Min hash",
    "start": "1234799",
    "end": "1240740"
  },
  {
    "text": "and uh of these if you see the little dagger thing there the little like cross that",
    "start": "1240740",
    "end": "1247340"
  },
  {
    "text": "means that it's part of redis Stack and if it's got just a little the hyper",
    "start": "1247340",
    "end": "1252740"
  },
  {
    "text": "log logs the only one's got the double dagger that comes with with vanilla redis and so some of these are available in",
    "start": "1252740",
    "end": "1259039"
  },
  {
    "text": "redis's data structures you can just use and you don't really have to know how they work but it helps to know how they work because then when they do weird",
    "start": "1259039",
    "end": "1265100"
  },
  {
    "text": "things you can understand why they do weird things and so I'm going to talk about the ones that are highlighted in blue there's",
    "start": "1265100",
    "end": "1270500"
  },
  {
    "text": "several other here they're different varieties and um I mentioned red a stack and so we're",
    "start": "1270500",
    "end": "1277039"
  },
  {
    "text": "going to slide into the one slide that's an advertisement for redis here um so Retta stack is",
    "start": "1277039",
    "end": "1284000"
  },
  {
    "text": "honestly it's just redis it's redis with a bunch of extensions to give it new data types and new commands such as",
    "start": "1284000",
    "end": "1291380"
  },
  {
    "text": "probabilistic data structures or graph databases or a Time series Json objects",
    "start": "1291380",
    "end": "1297620"
  },
  {
    "text": "that kind of stuff so we've got one for uh Json search graph time series and",
    "start": "1297620",
    "end": "1303200"
  },
  {
    "text": "Bloom which is for the probabilistic data structures and so this is the version of redis I'm",
    "start": "1303200",
    "end": "1309260"
  },
  {
    "text": "running for all my demos that we'll see later it's an easy way to get it up and running it's just a honestly I always",
    "start": "1309260",
    "end": "1314600"
  },
  {
    "text": "run it in Docker get it up and running it's quick and easy and so it's it's how I run redis all the",
    "start": "1314600",
    "end": "1320419"
  },
  {
    "text": "time there's information on how to get it you can also just install it on your machine compile it even if you want to if you that's how you want to live your",
    "start": "1320419",
    "end": "1326419"
  },
  {
    "text": "life so so let's talk about some of these data structures in detail first and",
    "start": "1326419",
    "end": "1331940"
  },
  {
    "text": "foremost we're going to talk about the bloom filter and Bloom filter is nice because it kind of it builds on some of the ideas in the hash table it's",
    "start": "1331940",
    "end": "1337700"
  },
  {
    "text": "actually a little bit simpler",
    "start": "1337700",
    "end": "1340840"
  },
  {
    "text": "and a bloom filter is a set that you can add things to and you can test for membership and that's",
    "start": "1343940",
    "end": "1350419"
  },
  {
    "text": "it it's all it does all the operations are o of one so adding to the set",
    "start": "1350419",
    "end": "1356780"
  },
  {
    "text": "constant time saying is something in the set constant time in fact it's practically the exact",
    "start": "1356780",
    "end": "1362900"
  },
  {
    "text": "same code uh boom filters will respond with no this thing is not in the set if you ask",
    "start": "1362900",
    "end": "1368360"
  },
  {
    "text": "it or probably yes and so you can get false positives it'll",
    "start": "1368360",
    "end": "1374360"
  },
  {
    "text": "say probably back to you so nowhere probably they are of a fixed size so when you",
    "start": "1374360",
    "end": "1379580"
  },
  {
    "text": "create a bloom filter that's the size it is it can't get any bigger you can't change it after the fact so it's locked in time so when you create one make sure",
    "start": "1379580",
    "end": "1387080"
  },
  {
    "text": "you create it large enough for how much data you think you're going to be putting in that bloom filter but they are stupid stupid fast",
    "start": "1387080",
    "end": "1394520"
  },
  {
    "text": "here's how they work so you've got for a bloom filter you've got some hashing functions",
    "start": "1394520",
    "end": "1402020"
  },
  {
    "text": "um excuse me and uh those hashing functions have of course numeric seeds so that they spit",
    "start": "1402020",
    "end": "1407840"
  },
  {
    "text": "out different values and you've got a bit array that's of a fixed width and so this is literally I",
    "start": "1407840",
    "end": "1414500"
  },
  {
    "text": "actually implemented this in JavaScript and I used a Boolean array which is like stupid stupidly inefficient if you were",
    "start": "1414500",
    "end": "1420620"
  },
  {
    "text": "doing like this like in C you would literally just have a block of memory you need to be using bit shifting and stuff but conceptually you have a bit",
    "start": "1420620",
    "end": "1426860"
  },
  {
    "text": "array of just all zeros and so it starts out everything's empty there's all zeros",
    "start": "1426860",
    "end": "1432559"
  },
  {
    "text": "in it and uh you can add things to it so what we're",
    "start": "1432559",
    "end": "1438080"
  },
  {
    "text": "going to build here on these slides is is a",
    "start": "1438080",
    "end": "1443419"
  },
  {
    "text": "it's a little it's a little thing to say have I seen this UFO sighting before and so you can shove the title of the UFO",
    "start": "1443419",
    "end": "1450140"
  },
  {
    "text": "sighting into it and then it will and you can then ask it have you seen this before and it'll say no or probably and",
    "start": "1450140",
    "end": "1457220"
  },
  {
    "text": "so the first one we're going to add is a is my favorite UFO sighting out of the set that I've read so far which is",
    "start": "1457220",
    "end": "1462320"
  },
  {
    "text": "entitled Megatron in the bushes and this is the story is actually really",
    "start": "1462320",
    "end": "1468559"
  },
  {
    "text": "funny so these guys are driving down I think in New Mexico down a desert highway late",
    "start": "1468559",
    "end": "1475940"
  },
  {
    "text": "at night and uh they they feel an urge an important biological urge",
    "start": "1475940",
    "end": "1484159"
  },
  {
    "text": "and so they pull over and they find a bush to take care of this necessary bodily",
    "start": "1484159",
    "end": "1490159"
  },
  {
    "text": "function and as they're going to the bush one of the guys here is coming from the bush a sound that sounds like",
    "start": "1490159",
    "end": "1495320"
  },
  {
    "text": "Megatron transforming not from the movie but like from the 80s cartoon right that that",
    "start": "1495320",
    "end": "1502658"
  },
  {
    "text": "I'm proud of my imitation of Megatron and um and so they freak out",
    "start": "1504080",
    "end": "1510799"
  },
  {
    "text": "It's like because bushes aren't supposed to make that sound right and so they hop in their car and they",
    "start": "1510799",
    "end": "1516260"
  },
  {
    "text": "take off down the highway and then these this glow comes up from behind the mountain and chases them for like 50 miles down the road and I'm sure they",
    "start": "1516260",
    "end": "1523580"
  },
  {
    "text": "weren't high at all great story",
    "start": "1523580",
    "end": "1529279"
  },
  {
    "text": "sounds true to me so when we take this string about this",
    "start": "1529279",
    "end": "1535520"
  },
  {
    "text": "wonderful little story we run it through these hashing functions just like we did for the hash table",
    "start": "1535520",
    "end": "1541940"
  },
  {
    "text": "and we'll get numbers like a 32-bit integer Maybe",
    "start": "1541940",
    "end": "1547100"
  },
  {
    "text": "and then we will modulus these with the width of our Bloom filter which is just 10 10 bits we have a very small one",
    "start": "1547100",
    "end": "1554840"
  },
  {
    "text": "and this will give us an index but instead of adding things to a linked list or anything like that we just set",
    "start": "1554840",
    "end": "1560900"
  },
  {
    "text": "the bits to high so Megatron on the bushes turns into a bunch indices which turns into one one",
    "start": "1560900",
    "end": "1566779"
  },
  {
    "text": "and one in those positions when we go to read it we do exactly the",
    "start": "1566779",
    "end": "1572000"
  },
  {
    "text": "same thing we take Megatron in the bushes we run it through the fashion functions we get indices and then we",
    "start": "1572000",
    "end": "1577640"
  },
  {
    "text": "look and say are they all one if all of them are set High then the",
    "start": "1577640",
    "end": "1583159"
  },
  {
    "text": "answer is probably if any of them are zero we know that it couldn't have been added because nothing",
    "start": "1583159",
    "end": "1589460"
  },
  {
    "text": "was ever put in there that would set all of them to high if it had been added before they would all be set to high",
    "start": "1589460",
    "end": "1595220"
  },
  {
    "text": "then I'll be set to one so this is how we add a thing to a bloom filter",
    "start": "1595220",
    "end": "1601240"
  },
  {
    "text": "we can add another thing to the bloom filter here's another wonderful UFO sighting this one is in my hometown of",
    "start": "1601400",
    "end": "1606919"
  },
  {
    "text": "Columbus Ohio and this is exactly how it appears in the text the icina UFO when I",
    "start": "1606919",
    "end": "1612860"
  },
  {
    "text": "was about 13 years old the bad grammar is correct the all-upper case is correct",
    "start": "1612860",
    "end": "1618559"
  },
  {
    "text": "this is exactly how it shows up in the CSV file and so I'm preserving the original",
    "start": "1618559",
    "end": "1624860"
  },
  {
    "text": "and we run this through that same process and we get different indices but you'll notice that one of them the",
    "start": "1624860",
    "end": "1631760"
  },
  {
    "text": "one that I've got circled right there that one was one that I had before",
    "start": "1631760",
    "end": "1638179"
  },
  {
    "text": "that was part of Megatron in the bushes but we set the other ones to high",
    "start": "1638179",
    "end": "1643279"
  },
  {
    "text": "and it's fine and if we go and read Megatron from the bushes we get all ones and if we go and read I seen a UFO when I was about 13",
    "start": "1643279",
    "end": "1649880"
  },
  {
    "text": "years old we get all ones and so these are both probably in the bloom filter and this is why we don't just have like",
    "start": "1649880",
    "end": "1656720"
  },
  {
    "text": "one hashing function if we had one hashing function and we set it to set a Boolean then another one could come in",
    "start": "1656720",
    "end": "1662299"
  },
  {
    "text": "and collaborate and then we wouldn't know and so by increasing the number of hashing functions that we have we uh get",
    "start": "1662299",
    "end": "1667460"
  },
  {
    "text": "some redundancy so that the overlap the hash collisions don't make it invalid",
    "start": "1667460",
    "end": "1673340"
  },
  {
    "text": "but then because we have more hashing functions we need more Bits And so there's there's a formula for figuring",
    "start": "1673340",
    "end": "1678559"
  },
  {
    "text": "this out I got on a slide I'm not going to talk about how it works because there's a web calculator you can use instead",
    "start": "1678559",
    "end": "1685760"
  },
  {
    "text": "but what can happen of course is something probabilistic here we've got investigators from the",
    "start": "1685760",
    "end": "1692059"
  },
  {
    "text": "Bigfoot field researchers organized organization observing a glowing green blue sphere",
    "start": "1692059",
    "end": "1697340"
  },
  {
    "text": "and all of these indices that are generated are all collisions and so if I add this to the bloom filter",
    "start": "1697340",
    "end": "1704419"
  },
  {
    "text": "the state of the bloom filter doesn't change but I've added it and then if I go and read it and say have I seen this",
    "start": "1704419",
    "end": "1710779"
  },
  {
    "text": "it'd say yes you've seen this this has been added to the bloom filter because we had added it but if I hadn't",
    "start": "1710779",
    "end": "1717620"
  },
  {
    "text": "added it and I asked the question has this been added to the bloom filter it would say yeah probably even though it",
    "start": "1717620",
    "end": "1723020"
  },
  {
    "text": "hadn't been added to the bloom filter this is why it's probabilistic because the order you add things in kind of",
    "start": "1723020",
    "end": "1728059"
  },
  {
    "text": "matters and uh you can also see why uh if you if you extrapolate this out a few more",
    "start": "1728059",
    "end": "1733460"
  },
  {
    "text": "times why uh knowing how many things you want to put in your Bloomfield really really matters because what will",
    "start": "1733460",
    "end": "1738559"
  },
  {
    "text": "eventually happen is everything will be one you'll fill it up and then it's like an American it just",
    "start": "1738559",
    "end": "1745220"
  },
  {
    "text": "always says yes and so and you know it's like false",
    "start": "1745220",
    "end": "1751700"
  },
  {
    "text": "positives for everyone you get a false positive and you get a false positive so um so yeah that's that's in a",
    "start": "1751700",
    "end": "1758360"
  },
  {
    "text": "nutshell how a bloom Filter Works here's the formulas that I threaten to show you um they're actually not that bad you can",
    "start": "1758360",
    "end": "1763640"
  },
  {
    "text": "solve for K and then solve for p and guess for a position a number you want but uh just use the online calculator",
    "start": "1763640",
    "end": "1770659"
  },
  {
    "text": "and of course you can get you can use these from redis reddis has a command if you have read a",
    "start": "1770659",
    "end": "1776419"
  },
  {
    "text": "stack with with bloom in it you can call BF reserve and you give it a key name for redis and you give it an error rate",
    "start": "1776419",
    "end": "1783799"
  },
  {
    "text": "that is acceptable here I've selected half a percent and you give it a capacity so I'm expecting to have a",
    "start": "1783799",
    "end": "1789380"
  },
  {
    "text": "hundred things and I'm willing to accept a 99.5 accuracy rate",
    "start": "1789380",
    "end": "1795140"
  },
  {
    "text": "and so this will create one for me and then if I want to use it I call BF add I give it the key name and then the",
    "start": "1795140",
    "end": "1802279"
  },
  {
    "text": "word that I want to add and there's a multiple version of it called mad which is very attic",
    "start": "1802279",
    "end": "1809299"
  },
  {
    "text": "a small detail here that I think is kind of interesting is that you notice here come on I'm returning one one and then",
    "start": "1809299",
    "end": "1816919"
  },
  {
    "text": "down here it returns zero and one so that zero one is telling you whether the bloom filter changed or not",
    "start": "1816919",
    "end": "1823640"
  },
  {
    "text": "so you can actually just add something to it and know whether it was it uh was there or not so you can use this for",
    "start": "1823640",
    "end": "1829120"
  },
  {
    "text": "deduplication the zero there says I've added light already so the bloom filter didn't change when you added light",
    "start": "1829120",
    "end": "1835220"
  },
  {
    "text": "you can get that zero back though like in the case of the the BFRO seeing a green blue sphere",
    "start": "1835220",
    "end": "1841580"
  },
  {
    "text": "that would Return To Zero as well because the bloom filter didn't change it's still probabilistic it's just a little bit of extra data",
    "start": "1841580",
    "end": "1848659"
  },
  {
    "text": "and then the other command that's really there is bf.exists you give it the key name give it the value and it'll tell",
    "start": "1848659",
    "end": "1855020"
  },
  {
    "text": "you whether it's in there or not and I'll say yes I'll say no or probably and there is a multiple version of this",
    "start": "1855020",
    "end": "1861919"
  },
  {
    "text": "as well I always like one of my running jokes at work is I like to pronounce redis commands like their words",
    "start": "1861919",
    "end": "1867620"
  },
  {
    "text": "like so we've got a set data structure and you set add as s add or sad",
    "start": "1867620",
    "end": "1873380"
  },
  {
    "text": "yeah it's the loneliest of all redis commands um and like there's a increment by",
    "start": "1873380",
    "end": "1880340"
  },
  {
    "text": "uh in a hash to increment a numeric value in hash it's h anchor by and so I call it hinker B",
    "start": "1880340",
    "end": "1886240"
  },
  {
    "text": "so uh this one is mexists",
    "start": "1886240",
    "end": "1891320"
  },
  {
    "text": "which always sounds like Mexican extremists to me or something like that",
    "start": "1891320",
    "end": "1895899"
  },
  {
    "text": "so but anyhow yeah so here you just it Returns the same thing that you got when you added it so",
    "start": "1897500",
    "end": "1903500"
  },
  {
    "text": "that's Bloom fillers so let's talk about one that's not in redis let's talk about Min hash so we",
    "start": "1903500",
    "end": "1910700"
  },
  {
    "text": "got what about half an hour still yeah we're good on time we got plenty of time so minhash is um",
    "start": "1910700",
    "end": "1916580"
  },
  {
    "text": "I believe it was created by Google to determine whether a page had changed",
    "start": "1916580",
    "end": "1922760"
  },
  {
    "text": "enough to justify re-indexing it back in the early days like like I think in the late 90s early 2000s but I could be",
    "start": "1922760",
    "end": "1929419"
  },
  {
    "text": "totally wrong on that history someone from Google's watching this right now they're like he's so wrong you know okay",
    "start": "1929419",
    "end": "1936200"
  },
  {
    "text": "but uh so what they do is they determine set similarity between documents so uh let's say you all wrote term papers",
    "start": "1936200",
    "end": "1943399"
  },
  {
    "text": "and I wanted to see who cheated I could use this to compare all of the",
    "start": "1943399",
    "end": "1948860"
  },
  {
    "text": "term papers to each other and find how similar they were and get an index of if they're more",
    "start": "1948860",
    "end": "1955220"
  },
  {
    "text": "similar they might might they might you might have cheated who here cheated",
    "start": "1955220",
    "end": "1960320"
  },
  {
    "text": "someone's going to raise their hand and be a smart ass I know it um so you can use a Min hash to do this in",
    "start": "1960320",
    "end": "1966140"
  },
  {
    "text": "a probabilistic fashion so before we talk about that though we need to talk about how we can compare sets",
    "start": "1966140",
    "end": "1971899"
  },
  {
    "text": "so what is set similarity well it's just how similar two sets are here's a simple example we've got scalder and Molly here",
    "start": "1971899",
    "end": "1979159"
  },
  {
    "text": "face swapped and these are the states of the United States in which they've seen UFOs",
    "start": "1979159",
    "end": "1986360"
  },
  {
    "text": "and so scalder has seen them in California Nevada Oregon and Wyoming and New Mexico and Ohio",
    "start": "1986360",
    "end": "1993500"
  },
  {
    "text": "Molly has seen them in Florida Kansas South Carolina West by God Virginia",
    "start": "1993500",
    "end": "1999440"
  },
  {
    "text": "New Mexico and Ohio this looks real to me because New Mexico Area 51 Ohio has",
    "start": "1999440",
    "end": "2005620"
  },
  {
    "text": "Hangar 18 where the body is from Area 51 went in Dayton Ohio so probably it looks",
    "start": "2005620",
    "end": "2011620"
  },
  {
    "text": "legit but to calculate the jaccard similarity of these two sets what you do is you take the cardinality of the",
    "start": "2011620",
    "end": "2017440"
  },
  {
    "text": "intersection that's how many items are in the intersection that's Mexico and Ohio so there's two and you divide it by the number of items",
    "start": "2017440",
    "end": "2025000"
  },
  {
    "text": "in the union of the two sets which is 10. it's all of the ones that are on the page here and you divide them",
    "start": "2025000",
    "end": "2031240"
  },
  {
    "text": "and then you get a ratio and so these are 20 similar it's that simple not a not a complicated",
    "start": "2031240",
    "end": "2036940"
  },
  {
    "text": "calculation and so you could do this to documents",
    "start": "2036940",
    "end": "2042039"
  },
  {
    "text": "sort of so if you took all the words in a document and all the words in your document I'm going to point you to if I",
    "start": "2042039",
    "end": "2048280"
  },
  {
    "text": "took all the words in your term paper and all the words in your term your term paper put them in sets and got the intersection of those",
    "start": "2048280",
    "end": "2054460"
  },
  {
    "text": "um there'd be a lot of words in common because they'd both be in well I'm going to guess Norwegian",
    "start": "2054460",
    "end": "2060960"
  },
  {
    "text": "they might have been in English depends on where you went to school but um they're probably all in the same",
    "start": "2060960",
    "end": "2066878"
  },
  {
    "text": "language and so all this is really telling us if they're highly similar is it's English or it's Norwegian",
    "start": "2066879",
    "end": "2072240"
  },
  {
    "text": "and so that doesn't work well you know on the face of it so how can we",
    "start": "2072240",
    "end": "2077378"
  },
  {
    "text": "turn a document into a set to do a jaccard similarity comparison well you use a process called shingling",
    "start": "2077379",
    "end": "2084580"
  },
  {
    "text": "shingling is uh taking trigrams from the document and adding those to the set so",
    "start": "2084580",
    "end": "2090460"
  },
  {
    "text": "we take the first diagram we notice two and then we take another one that's just",
    "start": "2090460",
    "end": "2095679"
  },
  {
    "text": "shift over by one notice two R so they they overlay on top of each other like shingles on a roof",
    "start": "2095679",
    "end": "2102220"
  },
  {
    "text": "so it's not not really a very clever name and then we build up a set with all these values in it and uh so now this",
    "start": "2102220",
    "end": "2109599"
  },
  {
    "text": "text here we notice to our left further off into the mountains a bright glow this is the uh Megatron in the Bush's",
    "start": "2109599",
    "end": "2116380"
  },
  {
    "text": "story and um this builds up a little set and",
    "start": "2116380",
    "end": "2121720"
  },
  {
    "text": "then we can do a comparison right so now we can take Scholars report in Molly's report and compare these trigrams sets",
    "start": "2121720",
    "end": "2128380"
  },
  {
    "text": "of trigrams and get an intersection in a union and get a better jaccard",
    "start": "2128380",
    "end": "2133660"
  },
  {
    "text": "similarity score and here we see that they're you know about two-thirds the same",
    "start": "2133660",
    "end": "2140440"
  },
  {
    "text": "um and so Skinner is happy that uh skalder and Molly have seen a similar enough thing their reports are similar",
    "start": "2140440",
    "end": "2146260"
  },
  {
    "text": "enough but there's a problem with this any guess as to what it is",
    "start": "2146260",
    "end": "2153160"
  },
  {
    "text": "if I'm going to take everyone's papers here and turn them into Strings of sets of strings and then compare each one",
    "start": "2153160",
    "end": "2159880"
  },
  {
    "text": "that's going to take a while because I'm doing a bunch of string comparison and I've got you know it's a fully connected graph I got a every",
    "start": "2159880",
    "end": "2166000"
  },
  {
    "text": "single Paper has got to be compared to every single Paper not super practical",
    "start": "2166000",
    "end": "2171400"
  },
  {
    "text": "and so there's a way to calculate a Min hash off of this uh this this uh set the",
    "start": "2171400",
    "end": "2177339"
  },
  {
    "text": "shingled set and so the way it works is you walk through the entire set you run it through a hashing function",
    "start": "2177339",
    "end": "2182800"
  },
  {
    "text": "with its seed just like we did in the previous example and then we get new numbers for each",
    "start": "2182800",
    "end": "2188020"
  },
  {
    "text": "entry in this hash so in this example here 325 corresponds to we notice 2 489",
    "start": "2188020",
    "end": "2193599"
  },
  {
    "text": "is to notice 2R and then all the way to 312 corresponds to the mountains a",
    "start": "2193599",
    "end": "2200160"
  },
  {
    "text": "and then we take the smallest number out of that set and we do it again and we do it again",
    "start": "2202599",
    "end": "2208900"
  },
  {
    "text": "we're probably in practice do it more than three times but three fits on the screen",
    "start": "2208900",
    "end": "2214000"
  },
  {
    "text": "and then we get a set of numbers that we could do a jaccard similarity comparison against instead",
    "start": "2214000",
    "end": "2220180"
  },
  {
    "text": "so we do it here do the same thing for Molly we get different numbers but some of them are the same and we can take these",
    "start": "2220180",
    "end": "2226240"
  },
  {
    "text": "sets of numbers and do the Jacquard similarity on those sets of numbers instead and then here we get a less",
    "start": "2226240",
    "end": "2232240"
  },
  {
    "text": "granular number mostly because I use three hashing functions so there's just not going to be as as",
    "start": "2232240",
    "end": "2237520"
  },
  {
    "text": "precise of a number um but this is a lot more efficient",
    "start": "2237520",
    "end": "2242859"
  },
  {
    "text": "because now we're comparing everyone's numbers against everyone's numbers much faster operation than comparing a bunch of strings",
    "start": "2242859",
    "end": "2248859"
  },
  {
    "text": "and I kind of mentioned uh you know why is this less granular because I used fewer hashes so",
    "start": "2248859",
    "end": "2255460"
  },
  {
    "text": "that's Min hash uh Minh you can see how this would be really useful you can calculate that Min hash and hold on to",
    "start": "2255460",
    "end": "2261520"
  },
  {
    "text": "it and then when you come to that web page again you could say you could calculate them in hash and you've already you",
    "start": "2261520",
    "end": "2267700"
  },
  {
    "text": "don't have to store the previous page you'd have to store the previous Min hash and then you can compare them and see if it's worth indexing again so it",
    "start": "2267700",
    "end": "2273400"
  },
  {
    "text": "can be very powerful most of the the last and most complicated one which is top k",
    "start": "2273400",
    "end": "2281640"
  },
  {
    "text": "top K ranks items and specifically well it's really",
    "start": "2281859",
    "end": "2287740"
  },
  {
    "text": "heavykeeper is the thing we're going to talk about top K is a combination of a heavy keeper and a Min Heap I'm not",
    "start": "2287740",
    "end": "2294640"
  },
  {
    "text": "going to talk about how many heaps work we'll just take them on faith that they work the way they do and then I'm going to talk about the heavy keeper but the",
    "start": "2294640",
    "end": "2300280"
  },
  {
    "text": "idea here is that I want that that ranking without necessarily having accurate counts",
    "start": "2300280",
    "end": "2306460"
  },
  {
    "text": "and so I want to find Mike uh the top 10 most common common IP addresses that hit my site",
    "start": "2306460",
    "end": "2312339"
  },
  {
    "text": "and um and or I want to get like uh trending topics",
    "start": "2312339",
    "end": "2317440"
  },
  {
    "text": "and the cool thing with heavy keeper is is that it's erosive so as I add things to heavy keeper it",
    "start": "2317440",
    "end": "2322900"
  },
  {
    "text": "hangs on to them and I keep adding things but occasionally adding something will create a conflict inside of the",
    "start": "2322900",
    "end": "2328720"
  },
  {
    "text": "heavy keeper structure that results in the counts being dropped for values that are in there and so it keeps track it",
    "start": "2328720",
    "end": "2335079"
  },
  {
    "text": "sort of measures flow so as things come in like as I P addresses hit my server I",
    "start": "2335079",
    "end": "2340480"
  },
  {
    "text": "add them to this top K they will keep building up and then when it stops",
    "start": "2340480",
    "end": "2346000"
  },
  {
    "text": "happening other things will come in and chip away at its count until it's removed from the heavy keeper and so",
    "start": "2346000",
    "end": "2352599"
  },
  {
    "text": "it does this probabilistically of course they're actually kind of a complicated structure but we're going to dive into",
    "start": "2352599",
    "end": "2358000"
  },
  {
    "text": "it anyhow um they're again I said like I mentioned they're good for things like trending",
    "start": "2358000",
    "end": "2363040"
  },
  {
    "text": "topics uh or network traffic analysis if you've got hey what are the IPS that are hitting me most I bet they're hacking me",
    "start": "2363040",
    "end": "2369280"
  },
  {
    "text": "or they're trying to do some sort of DDOS or something like that a heavy keeper again has a bunch of",
    "start": "2369280",
    "end": "2375339"
  },
  {
    "text": "hashing functions with Associated seeds and then uh associated with each hashing",
    "start": "2375339",
    "end": "2382359"
  },
  {
    "text": "function is an array of buckets and then you can choose when you create this how wide it should be how wide",
    "start": "2382359",
    "end": "2388420"
  },
  {
    "text": "these arrays should be and then you create these you can choose how many hashing functions you want so you can basically choose a height and a width",
    "start": "2388420",
    "end": "2395260"
  },
  {
    "text": "and each bucket has a place for a hash value and it has a counter",
    "start": "2395260",
    "end": "2402599"
  },
  {
    "text": "brand new heavy keeper has nulls for all the hash values and has a count of zero",
    "start": "2403300",
    "end": "2409780"
  },
  {
    "text": "and so here's how it works let's add a value to our heavy keeper",
    "start": "2409780",
    "end": "2415060"
  },
  {
    "text": "let's add the word object we're going to add UFO shapes objects of shape technically",
    "start": "2415060",
    "end": "2421079"
  },
  {
    "text": "and so what we do is we take that object we run it through our hashing functions we get hash values out",
    "start": "2421079",
    "end": "2428020"
  },
  {
    "text": "which this is a pattern we've seen a couple times now and then we module so that with the width of our uh of our",
    "start": "2428020",
    "end": "2434980"
  },
  {
    "text": "heavy keeper and we get an index and what we do",
    "start": "2434980",
    "end": "2441579"
  },
  {
    "text": "is we ask ourselves at that index we'll look in that index and say is this index",
    "start": "2441579",
    "end": "2446980"
  },
  {
    "text": "in use is there a value in the hash if there isn't which is the case here",
    "start": "2446980",
    "end": "2453220"
  },
  {
    "text": "we'll claim it and so in this case this heavy keeper is",
    "start": "2453220",
    "end": "2458380"
  },
  {
    "text": "empty and so each of these values just gets populated and we we put our hash value in the hash position and we put",
    "start": "2458380",
    "end": "2464619"
  },
  {
    "text": "our count we take the count from zero to one",
    "start": "2464619",
    "end": "2469020"
  },
  {
    "text": "if we add object a second time it's going to go through",
    "start": "2469720",
    "end": "2475060"
  },
  {
    "text": "it's going to calculate these hash rows again it's going to get an index it's going to look in that index and it's going to say this index is taken",
    "start": "2475060",
    "end": "2481180"
  },
  {
    "text": "and it's going to say well is it mine is this 5062 here",
    "start": "2481180",
    "end": "2486460"
  },
  {
    "text": "match the value in here yes it does so we increment the count",
    "start": "2486460",
    "end": "2492700"
  },
  {
    "text": "and if as we add object over and over again the account will just keep getting bigger and bigger",
    "start": "2492700",
    "end": "2498420"
  },
  {
    "text": "and when we go to query this then we've got to we can ask heavy keeper say how",
    "start": "2498579",
    "end": "2503920"
  },
  {
    "text": "many times has object been added to you well then we just do that same reverse process where we take the object we get",
    "start": "2503920",
    "end": "2510280"
  },
  {
    "text": "the hash we modulus it we get it index and we go in there and we look at the index",
    "start": "2510280",
    "end": "2515560"
  },
  {
    "text": "the bucket index and say is this our hash yeah okay well there's the count we do that for all of them and we take the",
    "start": "2515560",
    "end": "2521800"
  },
  {
    "text": "largest count in our case these are all twos so we get two so when we carry this we get two",
    "start": "2521800",
    "end": "2528220"
  },
  {
    "text": "things so kind of this sounds like counting the",
    "start": "2528220",
    "end": "2533560"
  },
  {
    "text": "hard way right now right it's like counting with extra steps but it gets interesting when you start adding other things so another popular",
    "start": "2533560",
    "end": "2539859"
  },
  {
    "text": "UF UFO shape is light",
    "start": "2539859",
    "end": "2543720"
  },
  {
    "text": "and with light we do this calculation and in the first row we find an unclaimed bucket and so",
    "start": "2546880",
    "end": "2554079"
  },
  {
    "text": "we claim it and in the second row we find an unclaimed bucket and we claim it but in the third row we go there and we",
    "start": "2554079",
    "end": "2559900"
  },
  {
    "text": "say well there's something in this bucket and it's not us it's not ours what do we do",
    "start": "2559900",
    "end": "2565720"
  },
  {
    "text": "this is where it gets interesting so there is a possibility that the count will be reduced by one",
    "start": "2565720",
    "end": "2574980"
  },
  {
    "text": "and so because there's a conflict we'll basically roll the dice and determine whether we're going to erode that value",
    "start": "2575200",
    "end": "2580720"
  },
  {
    "text": "reduce that two to a one oh and if it if we knock it out if we",
    "start": "2580720",
    "end": "2586119"
  },
  {
    "text": "knock it till it's empty something else can come in there and take its place and this calculation is uses this fairly",
    "start": "2586119",
    "end": "2591880"
  },
  {
    "text": "simple math where the probability of Decay the probability of erosion of reducing that count by one is equal to a",
    "start": "2591880",
    "end": "2599380"
  },
  {
    "text": "magic rate value that we put in when we create the heavy keeper which is greater than one but very close to one",
    "start": "2599380",
    "end": "2606700"
  },
  {
    "text": "I'm using 1.05 and then we take that number to the power of negative the count so we've got",
    "start": "2606700",
    "end": "2612700"
  },
  {
    "text": "two things in there our count is two that we're trying to see if it erodes or not take it to negative two",
    "start": "2612700",
    "end": "2618339"
  },
  {
    "text": "and so if we got a small number in there our odds of erosion are high yeah 1.05 to the power of negative 2 is 0.907",
    "start": "2618339",
    "end": "2626619"
  },
  {
    "text": "so it's 98.7 likely that it'll erode If I Had a Million items in there or a thousand items you get a much smaller",
    "start": "2626619",
    "end": "2632619"
  },
  {
    "text": "number and the odds of the eroding are much lower and so uh this allows things that are",
    "start": "2632619",
    "end": "2639160"
  },
  {
    "text": "once once they get in there if you get a high count it's unlikely that they'll all Road",
    "start": "2639160",
    "end": "2644680"
  },
  {
    "text": "they will erode occasionally though if you've got like a one percent chance of erosion but things are just coming coming in they're conflicting with it",
    "start": "2644680",
    "end": "2650920"
  },
  {
    "text": "all the time you know it's going to come up you know you're going to roll natural one on that",
    "start": "2650920",
    "end": "2655960"
  },
  {
    "text": "20-sided die eventually right um it's going to happen and so it erodes it over time this is how white works so",
    "start": "2655960",
    "end": "2662440"
  },
  {
    "text": "well for trending topics because those things will be the council will erode so in our case we're going to say that",
    "start": "2662440",
    "end": "2668079"
  },
  {
    "text": "we roll the dice probably this is going to erode this is going to Decay and so uh that position there is still claimed",
    "start": "2668079",
    "end": "2676000"
  },
  {
    "text": "by the hash value of 1442 but now has a count of one it's been decreased",
    "start": "2676000",
    "end": "2683460"
  },
  {
    "text": "so now after the case occurred we can query the word light",
    "start": "2683500",
    "end": "2688599"
  },
  {
    "text": "and we get two hits the third row we get the mod index we we",
    "start": "2688599",
    "end": "2694359"
  },
  {
    "text": "go and look but it's not ours so we don't count it so we look at the other two that are ours and we see there's two ones and we say well there's a light has",
    "start": "2694359",
    "end": "2701980"
  },
  {
    "text": "been added to the heavy keeper once and when we go to query object we get two two and one for our numeric values and",
    "start": "2701980",
    "end": "2708400"
  },
  {
    "text": "we take the biggest of all of those the largest and we get value two and so the the count has been preserved and then",
    "start": "2708400",
    "end": "2714819"
  },
  {
    "text": "but as this scales up these things get torn away and and make can disappear",
    "start": "2714819",
    "end": "2720040"
  },
  {
    "text": "entirely what this means is that heavy keepers are actually terrible accounting because they because they're erosive in",
    "start": "2720040",
    "end": "2726520"
  },
  {
    "text": "nature they tend to um always underrepresent the count and so they're not actually good for",
    "start": "2726520",
    "end": "2732520"
  },
  {
    "text": "counting it's not the point of a heavy keeper the heavy Keeper's point is just to keep track of keep hold on to the things that are heavy and let the small",
    "start": "2732520",
    "end": "2739240"
  },
  {
    "text": "things just be eroded away and what we do is alongside this heavy",
    "start": "2739240",
    "end": "2745720"
  },
  {
    "text": "keeper we have a Min Heap and so every single time we add something to the heavy keeper",
    "start": "2745720",
    "end": "2750819"
  },
  {
    "text": "we'll look at the count that we have for that thing we just added and we'll say is this how does this compare to the Min",
    "start": "2750819",
    "end": "2756280"
  },
  {
    "text": "Heap and we'll add it to Min Heap and sort it and then it'll chop off all the things at the bottom so we'll just keep the top five there all the time",
    "start": "2756280",
    "end": "2763480"
  },
  {
    "text": "and so then things can be added and removed that that Min Heap and so then",
    "start": "2763480",
    "end": "2769300"
  },
  {
    "text": "when we use our top case structure and say give me the top five most commonly used words in UFO sightings we just",
    "start": "2769300",
    "end": "2775240"
  },
  {
    "text": "interrogate them in Heap and it tells us if we want to get the counts we can go into the heavy keeper and go look they're going to be inaccurate but they",
    "start": "2775240",
    "end": "2782140"
  },
  {
    "text": "will be relatively valuable they'll show you the ranking so",
    "start": "2782140",
    "end": "2787300"
  },
  {
    "text": "that was a little dense I know um to do it in redis you call Top K dot",
    "start": "2787300",
    "end": "2794079"
  },
  {
    "text": "Reserve you give it a key name you give it the number of things you want to keep track of so this is like the top three",
    "start": "2794079",
    "end": "2799480"
  },
  {
    "text": "UFO shapes you give it a width of how wide you want those arrays to be",
    "start": "2799480",
    "end": "2804940"
  },
  {
    "text": "and you give it a a depth which is how many hashing functions you want to use and you give it a Decay value which is",
    "start": "2804940",
    "end": "2811540"
  },
  {
    "text": "uh the reciprocal of that 1.05 that I showed you in my example",
    "start": "2811540",
    "end": "2816640"
  },
  {
    "text": "to add to a top K you just call Top K dot add give it a key name give it a thing or multiple things",
    "start": "2816640",
    "end": "2824020"
  },
  {
    "text": "so here we've had a disk three times we had a teardrop twice we've added light ones",
    "start": "2824020",
    "end": "2830079"
  },
  {
    "text": "and then if we want to say is this thing in the top K we can call Top take K dot",
    "start": "2830079",
    "end": "2835119"
  },
  {
    "text": "query give it a give it a shape and it'll say yes or no or we can say give me the count of a",
    "start": "2835119",
    "end": "2841780"
  },
  {
    "text": "particular thing and it will go into the heavy keeper and give you the count or we can say give me the top K items in",
    "start": "2841780",
    "end": "2848619"
  },
  {
    "text": "order and it will go to the Min Heap and just spit them out and so this is a complicated data",
    "start": "2848619",
    "end": "2854619"
  },
  {
    "text": "structure but it's actually very easy to use from redis so I have used this data structure to do this statistical",
    "start": "2854619",
    "end": "2860200"
  },
  {
    "text": "analysis on the shapes and the uh the words used in the UFO setting so let's uh let's slide over to a demo",
    "start": "2860200",
    "end": "2868740"
  },
  {
    "text": "so now I feel like I have to hunch over because this Podium is slightly low",
    "start": "2868900",
    "end": "2875260"
  },
  {
    "text": "here we go everyone see that there we go so what I've done is and I'm not going",
    "start": "2875260",
    "end": "2881200"
  },
  {
    "text": "to go into the code a ton here but what I've done is I've got this CSV file uh where's that here there it is",
    "start": "2881200",
    "end": "2888819"
  },
  {
    "text": "this is all the UFO sightings 112 102 wait a minute that's wrong",
    "start": "2888819",
    "end": "2897000"
  },
  {
    "text": "if I go to the top here what's that yeah I'm sure it was a great joke",
    "start": "2897099",
    "end": "2905079"
  },
  {
    "text": "um and Megatron in the bushes in here but there's there's a ton of these it's just it's just a CSV file very easy to work with and so what I do with the CSV",
    "start": "2905079",
    "end": "2911619"
  },
  {
    "text": "file is I in uh I've got two Python scripts one is going to parse the CSV",
    "start": "2911619",
    "end": "2916720"
  },
  {
    "text": "file using pandas and uh then I run it through uh nltk and",
    "start": "2916720",
    "end": "2922180"
  },
  {
    "text": "um and a bunch of other python stuff it kind of doesn't matter really ultimately",
    "start": "2922180",
    "end": "2927280"
  },
  {
    "text": "I'm using uh redis to do the top K stuff and so I I parse this out I run it",
    "start": "2927280",
    "end": "2932500"
  },
  {
    "text": "through nltk to get rid of like common words in English so it's not like a and another are the most common words used in UFO sightings and I uh",
    "start": "2932500",
    "end": "2940300"
  },
  {
    "text": "remove any numbers and stuff like that and then I start adding them to a two",
    "start": "2940300",
    "end": "2945400"
  },
  {
    "text": "top case structures one for the shapes and one for the words that are used in the uh in the sightings",
    "start": "2945400",
    "end": "2952720"
  },
  {
    "text": "so I'm just going to go ahead and run it so we're going to go python",
    "start": "2952720",
    "end": "2957960"
  },
  {
    "text": "I almost typed python don't ever go there",
    "start": "2958599",
    "end": "2963760"
  },
  {
    "text": "yes it's a site build.pi so build.pi is going to start kicking off here let's just go ahead and",
    "start": "2963760",
    "end": "2969700"
  },
  {
    "text": "begin that and so these are the sort of the normalized",
    "start": "2969700",
    "end": "2975280"
  },
  {
    "text": "text that I'm being added and we're adding this to a bloom filter or to a top case structure in redis so if I go",
    "start": "2975280",
    "end": "2981040"
  },
  {
    "text": "over here to redis this is redis inside it's a nice little GUI client for redis click on that local one refresh my keys",
    "start": "2981040",
    "end": "2989140"
  },
  {
    "text": "see I've got a data structure for UFO words and one for UFO shapes if I go down here and enter command and do like",
    "start": "2989140",
    "end": "2995560"
  },
  {
    "text": "top K Dot list is that big enough can everyone read it",
    "start": "2995560",
    "end": "3000660"
  },
  {
    "text": "or do I need to indigen it okay I'm gonna go with your silence and",
    "start": "3000660",
    "end": "3006780"
  },
  {
    "text": "assume that's big enough so if I could you copy that list words oops hang on",
    "start": "3006780",
    "end": "3012300"
  },
  {
    "text": "there we go so those are the words to pick so far it's lights object light sky saw like",
    "start": "3012300",
    "end": "3018000"
  },
  {
    "text": "one C moving bright oh and now the EC is I run through this",
    "start": "3018000",
    "end": "3024000"
  },
  {
    "text": "they change over time so so I'm adding these things to these top",
    "start": "3024000",
    "end": "3030420"
  },
  {
    "text": "case structures I could do top like a top K dot count UFO",
    "start": "3030420",
    "end": "3036839"
  },
  {
    "text": "words and Light",
    "start": "3036839",
    "end": "3042020"
  },
  {
    "text": "and if it helped if I could type the word count there's 1279 of them probably",
    "start": "3042300",
    "end": "3051960"
  },
  {
    "text": "so I've got another a little bit of code here though that is a little app that makes us look look a little nicer",
    "start": "3051960",
    "end": "3058859"
  },
  {
    "text": "oh there we go and we're going to run app.pi",
    "start": "3058859",
    "end": "3065660"
  },
  {
    "text": "and so now I've got a little web server running if I go to localhost support 6001",
    "start": "3067920",
    "end": "3075839"
  },
  {
    "text": "it goes out and it's just basically querying it's doing the commands that I just did uh but just through a rest call",
    "start": "3075839",
    "end": "3082020"
  },
  {
    "text": "periodically a rest call it's not really restful it's it's just a call",
    "start": "3082020",
    "end": "3089099"
  },
  {
    "text": "um and so you see that you see light lights the common words here the UFO shapes are kind of fun light is the",
    "start": "3089099",
    "end": "3094740"
  },
  {
    "text": "number one shape uh followed by Circle which is a shape",
    "start": "3094740",
    "end": "3100140"
  },
  {
    "text": "triangle which is a shape I guess sphere is a shape it's just three-dimensional other",
    "start": "3100140",
    "end": "3106559"
  },
  {
    "text": "is a shape a known disc Fireball",
    "start": "3106559",
    "end": "3112020"
  },
  {
    "text": "that's my favorite shape when I'm playing d d oval and formation it's a formation that's a shape so um so",
    "start": "3112020",
    "end": "3119460"
  },
  {
    "text": "yeah so this is uh going out there and hit pause there for a moment I panicked",
    "start": "3119460",
    "end": "3124740"
  },
  {
    "text": "and then I heard my fan kick off on my computer um",
    "start": "3124740",
    "end": "3129780"
  },
  {
    "text": "the Python scripts are doing quite a bit of compute so but yeah so this is my fun little demo kind of worthless kind of",
    "start": "3129780",
    "end": "3135720"
  },
  {
    "text": "fun those are the best kind of demos aren't they so let's go ahead and get back to the slides here",
    "start": "3135720",
    "end": "3143900"
  },
  {
    "text": "okay no come on there we go so um",
    "start": "3149819",
    "end": "3156359"
  },
  {
    "text": "this is a little slide full of resources if you want to play around with this stuff yourself there's a wonderful blog post from Bloom",
    "start": "3156359",
    "end": "3162839"
  },
  {
    "text": "filters by example that uh had a great visualization that helped me think about how to visualize uh balloon filters we",
    "start": "3162839",
    "end": "3168660"
  },
  {
    "text": "got a bloom filter calculator which I mentioned earlier this is if you want to decide what your value should be you can use that there's a tutorial on Min hash",
    "start": "3168660",
    "end": "3175500"
  },
  {
    "text": "which was very very useful in putting together this talk and there's a white paper on heavy keeper which I read so",
    "start": "3175500",
    "end": "3182280"
  },
  {
    "text": "that you don't have to uh we've got the UFO sightings data set",
    "start": "3182280",
    "end": "3187380"
  },
  {
    "text": "put together by Tim Renner if you want to go download this and play with it yourself the National UFO Reporting Center is the",
    "start": "3187380",
    "end": "3194640"
  },
  {
    "text": "source of those the newfork.org real real website real organization I don't know if it's really UFO",
    "start": "3194640",
    "end": "3200040"
  },
  {
    "text": "sightings or not um got a kind of a dated blog post at this point I probably should take it out of the slide here on uh called me top K",
    "start": "3200040",
    "end": "3207839"
  },
  {
    "text": "written by one of my co-workers who actually was the person who implemented the top K data structure in redis stack",
    "start": "3207839",
    "end": "3214200"
  },
  {
    "text": "and then we've got if you want to get rid of Stack there's a URL for it and if you want to check out redis Insight which is a little GUI client I was using",
    "start": "3214200",
    "end": "3221160"
  },
  {
    "text": "um it's actually you can go there and download it but it's also in the Microsoft store and in the app store for Apple so you can just download it that",
    "start": "3221160",
    "end": "3227339"
  },
  {
    "text": "way and um yeah I work at redis if I we have a",
    "start": "3227339",
    "end": "3232500"
  },
  {
    "text": "Discord server so if you have questions and you want about redis or anything ping me on there",
    "start": "3232500",
    "end": "3237540"
  },
  {
    "text": "uh we got free classes and we actually uh my co-worker Simon is putting together a class on probability data",
    "start": "3237540",
    "end": "3243359"
  },
  {
    "text": "structures right now so we have one coming soon and um sign up for free version on",
    "start": "3243359",
    "end": "3248460"
  },
  {
    "text": "rediscloud there's QR code for my slides so you don't have to write any of this stuff down so go ahead and scan that it'll",
    "start": "3248460",
    "end": "3254940"
  },
  {
    "text": "take you to the repo this QR code will never give you up nor let you down",
    "start": "3254940",
    "end": "3260460"
  },
  {
    "text": "and I think I've got a little bit of time here a little bit early so if there are any questions I can take a question or two",
    "start": "3260460",
    "end": "3267740"
  },
  {
    "text": "you may have to shop because I can't necessarily see if you're on this corner so if anyone got any questions",
    "start": "3267740",
    "end": "3272940"
  },
  {
    "text": "you're like no I don't have any questions this is like the densest damn talk that I've ever attended so okay",
    "start": "3272940",
    "end": "3278700"
  },
  {
    "text": "well in that case thank you very much I'll be hanging out afterwards so feel free to come up to me then",
    "start": "3278700",
    "end": "3283740"
  },
  {
    "text": "thank you thank you",
    "start": "3283740",
    "end": "3288800"
  }
]