[
  {
    "start": "0",
    "end": "184000"
  },
  {
    "text": "all right welcome to advanced workflows functions I appreciate everyone coming",
    "start": "9450",
    "end": "16470"
  },
  {
    "text": "to the last session of the day I was a little bit concerned about jet lag but",
    "start": "16470",
    "end": "21900"
  },
  {
    "text": "it's actually morning where I'm from so I'm waking up right now so it's perfect timing if you're here about nine hours",
    "start": "21900",
    "end": "29520"
  },
  {
    "text": "ago for the keynote there was a mention of 1982 sort of a magical year where mr.",
    "start": "29520",
    "end": "37440"
  },
  {
    "text": "Neal was introduced to computers that's about the same time that this game came",
    "start": "37440",
    "end": "43170"
  },
  {
    "text": "out and something that left a huge impression on me it's a text-based adventure game you can tell from the",
    "start": "43170",
    "end": "48930"
  },
  {
    "text": "packaging though they really spun quite quite a visual there you can see the",
    "start": "48930",
    "end": "54510"
  },
  {
    "text": "sort of skull you can see the castle you can see the imagery of the dungeon and",
    "start": "54510",
    "end": "60890"
  },
  {
    "text": "this is when I visited the catacombs in Paris and it was how I visualized as a",
    "start": "60890",
    "end": "67440"
  },
  {
    "text": "kid playing the game that would be a dungeon and back then we had to have a huge imagination because this is",
    "start": "67440",
    "end": "75180"
  },
  {
    "text": "actually what the game looked like right so well it was it exactly as the the cover promised but I want to use this as",
    "start": "75180",
    "end": "82080"
  },
  {
    "text": "some context to relate what I'm going to talk about just really briefly a little",
    "start": "82080",
    "end": "87360"
  },
  {
    "text": "bit about myself I'm a cloud advocate at Microsoft if you're not sure what that means feel free to stop me afterwards",
    "start": "87360",
    "end": "93509"
  },
  {
    "text": "I'll be happy to explain it we've got so many terms in the industry right now it's hard to keep up with that I've been",
    "start": "93509",
    "end": "100470"
  },
  {
    "text": "professionally developing for a capital really long time so I'll just leave it at that I've written a few history books",
    "start": "100470",
    "end": "108240"
  },
  {
    "text": "I think I released a Silverlight 5 book about two weeks before everyone figured out that I was going to die and I",
    "start": "108240",
    "end": "115619"
  },
  {
    "text": "released the windows runtime book just a few weeks before that platform shifted",
    "start": "115619",
    "end": "120630"
  },
  {
    "text": "and so as a result of that legacy I have a lot of developers asked me to write a book about JavaScript so figured that",
    "start": "120630",
    "end": "129810"
  },
  {
    "text": "out so it was a former MVP I joined Microsoft so you can't be an MVP in that Microsoft I try to follow a hundred",
    "start": "129810",
    "end": "136799"
  },
  {
    "text": "percent plant-based diet but I'm sure that something in the food supply sneaks in there so I say it slightly less and",
    "start": "136799",
    "end": "142770"
  },
  {
    "text": "this is how you can get in touch with me either through Twitter or direct through email happy to take",
    "start": "142770",
    "end": "147930"
  },
  {
    "text": "your feedback and suggestions just a fun fact I'm actually my ancestors are from",
    "start": "147930",
    "end": "154260"
  },
  {
    "text": "Norway they came from a town called licinus with one s and I guess at Ellis",
    "start": "154260",
    "end": "159510"
  },
  {
    "text": "Island an extra s was added this is my first time in Norway so I plan to come back and visit that town what I want to",
    "start": "159510",
    "end": "167400"
  },
  {
    "text": "cover today is level sake get on the same page of serverless as one of those terms we can't take for granted because no one",
    "start": "167400",
    "end": "174120"
  },
  {
    "text": "can agree on what it means talk about durable functions hopefully throw a lot of code out there that makes",
    "start": "174120",
    "end": "180540"
  },
  {
    "text": "sense and then we'll have some time for Q&A afterwards so the first thing we'll",
    "start": "180540",
    "end": "185760"
  },
  {
    "start": "184000",
    "end": "408000"
  },
  {
    "text": "tackle is what is this amazing newfound everything should be called serverless",
    "start": "185760",
    "end": "191069"
  },
  {
    "text": "right so let's talk a little bit about how we got the server lists I think a",
    "start": "191069",
    "end": "197010"
  },
  {
    "text": "lot of us are still familiar with the physical servers that we own everything",
    "start": "197010",
    "end": "202439"
  },
  {
    "text": "this was early in my career basically had to worry about power how to get access how to install the operating",
    "start": "202439",
    "end": "207810"
  },
  {
    "text": "system how to patch keep things up to date there's a lot of responsibility for that a lot of late night calls a lot of",
    "start": "207810",
    "end": "215159"
  },
  {
    "text": "weekends keeping things up fortunately infrastructure as a service came along and this abstracts the hardware out and",
    "start": "215159",
    "end": "222150"
  },
  {
    "text": "we're pretty much responsible for the operating system and everything on top one of the best things that came out of",
    "start": "222150",
    "end": "228709"
  },
  {
    "text": "infrastructure-as-a-service courses that pave the way to bring workloads to the web so I can take my virtual image and I",
    "start": "228709",
    "end": "236340"
  },
  {
    "text": "can run that workload in the cloud then we have platform as a service this abstracts everything but the platform",
    "start": "236340",
    "end": "242849"
  },
  {
    "text": "itself so as a web developer if I'm building a web API I can focus on my web project and not",
    "start": "242849",
    "end": "251370"
  },
  {
    "text": "have to worry about maintaining the operating system does anyone here work with iis server out of curiosity or has",
    "start": "251370",
    "end": "259049"
  },
  {
    "text": "in the past so a few hands I can see through the blur of of lighting so we don't have to become experts at iis it's",
    "start": "259049",
    "end": "266639"
  },
  {
    "text": "fully managed for us so we just focus on the web project and deploy it which is great server lists takes that one step",
    "start": "266639",
    "end": "272970"
  },
  {
    "text": "further and it abstracts the platform and we focus on the code and I'll show",
    "start": "272970",
    "end": "278279"
  },
  {
    "text": "you what that means in a second I like to do a little bit of a gut check",
    "start": "278279",
    "end": "283410"
  },
  {
    "text": "this is not an industry defined standard but this is what I proposed as an idea",
    "start": "283410",
    "end": "288870"
  },
  {
    "text": "of what separates serverless from fully managed and the one that's most controversial that people tend to",
    "start": "288870",
    "end": "295410"
  },
  {
    "text": "disagree with me on is this so I only get billed for active in vacations I think a lot of times what people market",
    "start": "295410",
    "end": "302250"
  },
  {
    "text": "as serverless is really fully managed and the distinction here is how does the code scale and am i paying for something",
    "start": "302250",
    "end": "309090"
  },
  {
    "text": "if I'm not actually using it the way as your functions work which is a service",
    "start": "309090",
    "end": "314460"
  },
  {
    "text": "platform on on Azure is you're billed based on how many times the code is",
    "start": "314460",
    "end": "319800"
  },
  {
    "text": "called and then you're billed for something called a gigabit second which I'll come back to it's it's actually some people explain it in a complicated",
    "start": "319800",
    "end": "327180"
  },
  {
    "text": "way but it's pretty straightforward when you see it graphed out this is what it would take for a million invitations",
    "start": "327180",
    "end": "333810"
  },
  {
    "text": "taken up about 128 megabytes of memory for a second each which is pretty slow",
    "start": "333810",
    "end": "339180"
  },
  {
    "text": "right if your function takes a second every time to call and that's free if we",
    "start": "339180",
    "end": "344460"
  },
  {
    "text": "have more activity than that let's say we go up to 5 million in the pricing calculator it's like 4 dollars and 40",
    "start": "344460",
    "end": "351600"
  },
  {
    "text": "cents US so it'd be I don't know what 300 something is it Crone how do you",
    "start": "351600",
    "end": "359550"
  },
  {
    "text": "pronounce it anyone the local currency Crone's all right okay yeah maybe 40",
    "start": "359550",
    "end": "369419"
  },
  {
    "text": "yeah that's right 40 yeah 400 people are going man this is getting expensive quick so why serverless the first thing",
    "start": "369419",
    "end": "376590"
  },
  {
    "text": "is micro billing there's potentially a lower cost and we'll talk about that distinctiveness in a second but if I'm",
    "start": "376590",
    "end": "383550"
  },
  {
    "text": "not running workloads I'm not paying anything if I have a massive amount of workloads I'm paying for those but I",
    "start": "383550",
    "end": "389010"
  },
  {
    "text": "also have a massive amount of user so it's kind of a positive I have less server to worry about we'll look at that",
    "start": "389010",
    "end": "395580"
  },
  {
    "text": "I've elasticity so the platform is managing the scale for me and in most",
    "start": "395580",
    "end": "401610"
  },
  {
    "text": "cases we end up with a rapid development lifecycle because there's features of server lists that make it easier to",
    "start": "401610",
    "end": "407850"
  },
  {
    "text": "develop so as your functions is code and events and if you're curious and you've",
    "start": "407850",
    "end": "413640"
  },
  {
    "start": "408000",
    "end": "895000"
  },
  {
    "text": "never seen where the logo for as your functions came from it's been revealed to you right here",
    "start": "413640",
    "end": "419340"
  },
  {
    "text": "right now the secret is out as your",
    "start": "419340",
    "end": "424379"
  },
  {
    "text": "functions takes a set of events and every time I'm gonna demo a Web API because it's the easiest thing to demo",
    "start": "424379",
    "end": "430919"
  },
  {
    "text": "but it does a disservice to functions to imply that it's only API services can",
    "start": "430919",
    "end": "436379"
  },
  {
    "text": "run based on triggers based on events like file uploads based on events like messages in a queue so there's a lot of",
    "start": "436379",
    "end": "443099"
  },
  {
    "text": "reasons why a piece of code might be executed that code is called it does something one of the benefits of this",
    "start": "443099",
    "end": "450569"
  },
  {
    "text": "platform is most cases you can use a language of your choice a runtime of your choice to build that code out and",
    "start": "450569",
    "end": "456750"
  },
  {
    "text": "then you have side effects you have outputs you might manipulate a database you might return a value so that's it at",
    "start": "456750",
    "end": "463800"
  },
  {
    "text": "a very high-level nutshell here's an example of a function we basically",
    "start": "463800",
    "end": "469669"
  },
  {
    "text": "attribute it so we're tagging this method is going to behave as a piece of",
    "start": "469669",
    "end": "474960"
  },
  {
    "text": "function code then we have a trigger and again there's multiple triggers in this case it's in the HTTP trigger notice I'm",
    "start": "474960",
    "end": "482190"
  },
  {
    "text": "not setting up a web controller I'm saying here's how I want you to call my code letting the platform take care of",
    "start": "482190",
    "end": "488759"
  },
  {
    "text": "the rest I have bindings that make it easy to interact with other resources in this",
    "start": "488759",
    "end": "495240"
  },
  {
    "text": "case I have a binding for a queue and a binding for a table and I'm using dependency injection to have a logging",
    "start": "495240",
    "end": "502529"
  },
  {
    "text": "mechanism injected for me in the body of the function I can do something like take the trigger",
    "start": "502529",
    "end": "509430"
  },
  {
    "text": "and it hands off all the information I need so I get that request object and I",
    "start": "509430",
    "end": "514529"
  },
  {
    "text": "can parse it out and figure out what is the component of the request if I want",
    "start": "514529",
    "end": "519599"
  },
  {
    "text": "to add something to the queue I can use that binding notice that I'm not spinning up a new class I'm not parsing",
    "start": "519599",
    "end": "526199"
  },
  {
    "text": "a connection string I'm not doing anything else but taking that attribute",
    "start": "526199",
    "end": "531240"
  },
  {
    "text": "that was passed in that parameter and interacting with it and then this is an example of me working with the table the",
    "start": "531240",
    "end": "537810"
  },
  {
    "text": "tables handed to me and I interact with it so when we're working with Azure",
    "start": "537810",
    "end": "542850"
  },
  {
    "text": "storage the nice thing about the server list platform and everything I'm going to show you today",
    "start": "542850",
    "end": "548320"
  },
  {
    "text": "is that there's a fully capable local environment that you can debug and run and execute without connecting through",
    "start": "548320",
    "end": "554650"
  },
  {
    "text": "the cloud there's a storage emulator as your functions are backed by storage for",
    "start": "554650",
    "end": "559810"
  },
  {
    "text": "things like logging and automatically has access to things like queues and tables that come with storage and then",
    "start": "559810",
    "end": "566170"
  },
  {
    "text": "there's a storage Explorer that's a cross-platform tool that allows you to interact with that storage both locally",
    "start": "566170",
    "end": "573010"
  },
  {
    "text": "and in the cloud anyone here work with storage Explorer by the way have",
    "start": "573010",
    "end": "578650"
  },
  {
    "text": "familiarity so most people are familiar with that so for those of you not familiar with functions I want to do a",
    "start": "578650",
    "end": "584080"
  },
  {
    "text": "really quick demo and just do a live creation of a function what could possibly go wrong",
    "start": "584080",
    "end": "589450"
  },
  {
    "text": "I'm just going to keep the default app I'm going to trigger it from HTTP I'm",
    "start": "589450",
    "end": "594760"
  },
  {
    "text": "going to make this anonymous so I don't have to worry too much about authentication or authorization and this",
    "start": "594760",
    "end": "601780"
  },
  {
    "text": "is going to spin up a new project and it's going to create a function at a function app can have multiple functions",
    "start": "601780",
    "end": "609100"
  },
  {
    "text": "in it think of a function app as a unit of scale when your application is scaled",
    "start": "609100",
    "end": "615130"
  },
  {
    "text": "out it scales out at the function app level so whatever I group into this project is going to scale together so if",
    "start": "615130",
    "end": "622570"
  },
  {
    "text": "I have related logical endpoints that's what's going to drive the decision to",
    "start": "622570",
    "end": "627670"
  },
  {
    "text": "make these multiple methods in a single function app versus separate now this is showing you what I showed you in the",
    "start": "627670",
    "end": "633970"
  },
  {
    "text": "slides is just basically echoing a name back we're going to make it a little more interesting I'm going to turn it",
    "start": "633970",
    "end": "639640"
  },
  {
    "text": "into a proxy then I'm basically going to say if string is null or whitespace the",
    "start": "639640",
    "end": "648880"
  },
  {
    "text": "name that's passed in return new bad request object result need the name I've",
    "start": "648880",
    "end": "658390"
  },
  {
    "text": "always been very thorough with my error messages and then what I'm going to do is something a little bit different I'm",
    "start": "658390",
    "end": "664570"
  },
  {
    "text": "gonna actually create a new client and",
    "start": "664570",
    "end": "670360"
  },
  {
    "text": "this is my favorite borrowed feature in Visual Studio pulling the usings",
    "start": "670360",
    "end": "678640"
  },
  {
    "text": "automatically actually I did that incorrectly but get around that and then I'm going to do",
    "start": "678640",
    "end": "684310"
  },
  {
    "text": "a wait text equals no let's do txt var",
    "start": "684310",
    "end": "692290"
  },
  {
    "text": "tax equals a wait client get string async and the name so I'm assuming that",
    "start": "692290",
    "end": "699520"
  },
  {
    "text": "we've passed in a valid HTTP request I'm just saving typing and I'm going to assume that that comes back okay and",
    "start": "699520",
    "end": "708190"
  },
  {
    "text": "just return the text so we're going to go ahead and start this without",
    "start": "708190",
    "end": "715090"
  },
  {
    "text": "debugging so there's a little less overhead now what this is going to do is it's going to launch the function app",
    "start": "715090",
    "end": "720520"
  },
  {
    "text": "host this is a cross-platform host it'll run on Mac on Linux and on Windows and",
    "start": "720520",
    "end": "727090"
  },
  {
    "text": "it's the same host that runs in Azure so I'm getting the same experience and here",
    "start": "727090",
    "end": "732490"
  },
  {
    "text": "it's parsed out my function app and it found an end point for me to interact",
    "start": "732490",
    "end": "738070"
  },
  {
    "text": "with so I'm just going to grab this end point will copy that let's come over to",
    "start": "738070",
    "end": "745510"
  },
  {
    "text": "a web browser and paste that in so the",
    "start": "745510",
    "end": "751000"
  },
  {
    "text": "default paste is going to basically come back and tell me it needs the name that's fine this is the perfect place to",
    "start": "751000",
    "end": "758890"
  },
  {
    "text": "insert a shameless plug for my blog blog Jeremy lick nice calm and it goes out in",
    "start": "758890",
    "end": "764890"
  },
  {
    "text": "spins and we're over conference Wi-Fi there's probably and boom we get the source for my blog that right now is",
    "start": "764890",
    "end": "771430"
  },
  {
    "text": "hosted on medium but is being migrated to Hugo so this HTML will be cleaned up a lot",
    "start": "771430",
    "end": "777640"
  },
  {
    "text": "more but that's it that's a function in process so let's go ahead and maximize",
    "start": "777640",
    "end": "786370"
  },
  {
    "text": "this back and close this out so that's",
    "start": "786370",
    "end": "793600"
  },
  {
    "text": "just a really short demo of course I'm not here today to talk to you about functions I'm here to talk to you about",
    "start": "793600",
    "end": "799990"
  },
  {
    "text": "durable functions so setting the stage for what I just showed you the triggers",
    "start": "799990",
    "end": "806740"
  },
  {
    "text": "that can invoke a function are many these are not all the triggers these are the most commonly used ones the bindings",
    "start": "806740",
    "end": "814210"
  },
  {
    "text": "that make it easy to work with code that you put your side effects into or update or manipulate are all so many",
    "start": "814210",
    "end": "822370"
  },
  {
    "text": "and the billing I talked about the gigabit ii the billing is pretty",
    "start": "822370",
    "end": "827600"
  },
  {
    "text": "straightforward left to right is time the vertical access is how much memory",
    "start": "827600",
    "end": "835610"
  },
  {
    "text": "and we get billed for the area under the curve so you can imagine that if",
    "start": "835610",
    "end": "840709"
  },
  {
    "text": "something takes a really long time to run under this runtime it's going to be more expensive and there are other are",
    "start": "840709",
    "end": "845779"
  },
  {
    "text": "other models to host it but for the server list consumption based model that's how it works and also if you",
    "start": "845779",
    "end": "851630"
  },
  {
    "text": "consume a large amount of memory that also raises the cost and that can help drive some of the decisions around",
    "start": "851630",
    "end": "858709"
  },
  {
    "text": "whether or not you're going to use server lists so it's interesting is a lot of times we",
    "start": "858709",
    "end": "864230"
  },
  {
    "text": "have processes that are a long duration but they're not really a lot of compute time now the function I just showed you",
    "start": "864230",
    "end": "871010"
  },
  {
    "text": "I'm getting billed for the time it's waiting for my website to return the results and it just doesn't seem fair",
    "start": "871010",
    "end": "877070"
  },
  {
    "text": "that if a website is really slow that I'm getting billed for that so that's one of the the side effects or issues",
    "start": "877070",
    "end": "884690"
  },
  {
    "text": "with the functions out of the box a lot of times we have this idea that we're computing and then we're waiting for",
    "start": "884690",
    "end": "889880"
  },
  {
    "text": "something and then we compute the actual compute is really fast just the duration takes a longer time so",
    "start": "889880",
    "end": "896630"
  },
  {
    "start": "895000",
    "end": "958000"
  },
  {
    "text": "what are durable functions and how do they help us in this scenario",
    "start": "896630",
    "end": "902350"
  },
  {
    "text": "well there's challenges with server list specifically as your functions out of the box one is that there's no state you",
    "start": "902350",
    "end": "909110"
  },
  {
    "text": "have to manage the state yourself so if you're trying to do a workflow and keep track of state and come back to things",
    "start": "909110",
    "end": "914810"
  },
  {
    "text": "there's a lot of effort involved things like asynchronous dependencies then",
    "start": "914810",
    "end": "920630"
  },
  {
    "text": "become complex let's say I'm waiting asynchronously for something to happen then I get that result have another",
    "start": "920630",
    "end": "926450"
  },
  {
    "text": "asynchronous that's either going to be long-running or you're going to be jumping through hoops to optimize that",
    "start": "926450",
    "end": "931610"
  },
  {
    "text": "there's also no state that I mentioned that there's no state in the functions they're designed for a shorter duration",
    "start": "931610",
    "end": "938660"
  },
  {
    "text": "that's how the billing model is out of the box there's also no state I'm not",
    "start": "938660",
    "end": "944089"
  },
  {
    "text": "sure if I mentioned that and putting together complex workflows is",
    "start": "944089",
    "end": "949540"
  },
  {
    "text": "to put it bluntly complex so sorry to be redundant but that's the reality and",
    "start": "949540",
    "end": "955040"
  },
  {
    "text": "there's no state by the way all right so what's still hard with this well one of",
    "start": "955040",
    "end": "960800"
  },
  {
    "start": "958000",
    "end": "1064000"
  },
  {
    "text": "these would be what I call a synchronous sequential operations go out get something wait for it come back get",
    "start": "960800",
    "end": "966620"
  },
  {
    "text": "something come back that's going to be difficult to do in a cost-effective way even more difficult is fan out and fan",
    "start": "966620",
    "end": "974149"
  },
  {
    "text": "in so I want to build a search engine aggregator you put in your search term in parallel I want to go out to Google",
    "start": "974149",
    "end": "981410"
  },
  {
    "text": "I'm sorry I work with Microsoft to being then Google and this is in parallel Alta",
    "start": "981410",
    "end": "987950"
  },
  {
    "text": "Vista Lykos some of the other servers I get the results pull them back together call",
    "start": "987950",
    "end": "993230"
  },
  {
    "text": "another function to process it so that's another pattern I may have this idea of",
    "start": "993230",
    "end": "998270"
  },
  {
    "text": "external events correlation so let's say I have a process that has three steps",
    "start": "998270",
    "end": "1003459"
  },
  {
    "text": "and I want to raise an event to say step ones done step twos done steps three done how do I manage that in code and in",
    "start": "1003459",
    "end": "1011230"
  },
  {
    "text": "serverless what if I have something that's long-running that's doing something interesting that I just want",
    "start": "1011230",
    "end": "1017110"
  },
  {
    "text": "to pull every once a while and ask it where are you at how are things going etc so this is a process that's ongoing",
    "start": "1017110",
    "end": "1023920"
  },
  {
    "text": "and its sole purpose is to provide me an endpoint to get information maybe I have",
    "start": "1023920",
    "end": "1030220"
  },
  {
    "text": "a process that I kick off as a job that's long-running and I want to get the status of that job",
    "start": "1030220",
    "end": "1036160"
  },
  {
    "text": "and allow it to continue running but I get that status in an asynchronous way and then what if there's human",
    "start": "1036160",
    "end": "1042610"
  },
  {
    "text": "interaction let's say that I have a customer service ticket come in and I",
    "start": "1042610",
    "end": "1047770"
  },
  {
    "text": "basically want someone to interact so that triggers an event but if they don't",
    "start": "1047770",
    "end": "1052809"
  },
  {
    "text": "interact within a period of time I want to automatically escalate that how do I",
    "start": "1052809",
    "end": "1058270"
  },
  {
    "text": "correlate those two things that timeout wait and that human interaction so",
    "start": "1058270",
    "end": "1065650"
  },
  {
    "start": "1064000",
    "end": "1131000"
  },
  {
    "text": "durable functions are designed to simplify everything I talked about they're actually based on something",
    "start": "1065650",
    "end": "1071650"
  },
  {
    "text": "that's an open-source framework called the durable task framework that exists you can use it in dotnet applications",
    "start": "1071650",
    "end": "1077830"
  },
  {
    "text": "today there's just a specialized version of that used to extend",
    "start": "1077830",
    "end": "1082960"
  },
  {
    "text": "as your functions on the agile platform the way it works is we start with a",
    "start": "1082960",
    "end": "1089160"
  },
  {
    "text": "standard as your function that function kicks off an Orchestrator function the",
    "start": "1089160",
    "end": "1095500"
  },
  {
    "text": "orchestrator is what's managing the workflow you can have multiple workflows you can also have nested workflows and",
    "start": "1095500",
    "end": "1102370"
  },
  {
    "text": "we'll look at that the orchestrator function itself has some rules that we'll get into so it's basically just",
    "start": "1102370",
    "end": "1109000"
  },
  {
    "text": "managing the workflow the steps within the workflow are fanned out to what's called activity functions activities are",
    "start": "1109000",
    "end": "1116590"
  },
  {
    "text": "what actually performs the work as part of this orchestration so it looks sort",
    "start": "1116590",
    "end": "1122560"
  },
  {
    "text": "of like this the client kicks off the orchestrator there's activities I may have a sub Orchestrator that has its own",
    "start": "1122560",
    "end": "1129400"
  },
  {
    "text": "activities so some of the rules that bind this whole engine is this idea of",
    "start": "1129400",
    "end": "1136810"
  },
  {
    "start": "1131000",
    "end": "1263000"
  },
  {
    "text": "reliable execution the way the orchestrator works is when it goes to sleep if something interesting happens",
    "start": "1136810",
    "end": "1143920"
  },
  {
    "text": "that wakes it back up it replays the data to get to a certain point so it",
    "start": "1143920",
    "end": "1149650"
  },
  {
    "text": "needs to be reliable in that the same input has the same output because it uses these checkpoints that are at every",
    "start": "1149650",
    "end": "1156160"
  },
  {
    "text": "time it's waiting for something to happen there's a checkpoint it saves and plays back to so you need to have that",
    "start": "1156160",
    "end": "1162370"
  },
  {
    "text": "predictable workflow it saves a history so that it can manage these checkpoints",
    "start": "1162370",
    "end": "1169050"
  },
  {
    "text": "it has to be deterministic if you do something like if I roll dice and",
    "start": "1169050",
    "end": "1174280"
  },
  {
    "text": "randomly go to one activity or another the orchestrator is going to fail because it has to have a deterministic",
    "start": "1174280",
    "end": "1179650"
  },
  {
    "text": "path and we'll talk about how that's managed but there are non-deterministic steps right you have side-effects you're",
    "start": "1179650",
    "end": "1186610"
  },
  {
    "text": "going to update a database you're gonna send a message you're gonna have information that comes out as a result",
    "start": "1186610",
    "end": "1192160"
  },
  {
    "text": "so those are encapsulated within these special types called activities the",
    "start": "1192160",
    "end": "1198610"
  },
  {
    "text": "orchestrator function needs to be non-blocking it runs single threaded for optimization so if I do an iteration or",
    "start": "1198610",
    "end": "1206200"
  },
  {
    "text": "I do a thread sleep 10,000 I'm basically halting all of my orchestrators on that",
    "start": "1206200",
    "end": "1211990"
  },
  {
    "text": "particular process because of this we don't await anything",
    "start": "1211990",
    "end": "1217940"
  },
  {
    "text": "just inside the orchestrator that's not part of the orchestrator client the",
    "start": "1217940",
    "end": "1223010"
  },
  {
    "text": "client provides things that you can inspect things that will kick off activities those are what you await and",
    "start": "1223010",
    "end": "1228770"
  },
  {
    "text": "that's where the magic happens that it automatically saves State and I'm setting this context because we're gonna",
    "start": "1228770",
    "end": "1234170"
  },
  {
    "text": "go into code and it'll make a lot more sense when you see it in action I promise we can do things like have",
    "start": "1234170",
    "end": "1241190"
  },
  {
    "text": "infinite loops but I mentioned earlier that there's an orchestration history so how do we manage that the orchestrator",
    "start": "1241190",
    "end": "1247670"
  },
  {
    "text": "actually has a special function called continue as new that allows that loop to keep running and flushes the history",
    "start": "1247670",
    "end": "1255140"
  },
  {
    "text": "periodically and you determine when and how that happens and the unit of work and what we're doing is a durable task",
    "start": "1255140",
    "end": "1261860"
  },
  {
    "text": "and I'll show you what those look like so this is my vision I I set out to create a text-based adventure game",
    "start": "1261860",
    "end": "1268280"
  },
  {
    "start": "1263000",
    "end": "1447000"
  },
  {
    "text": "turned out it was pretty simple basically you join a game you have two",
    "start": "1268280",
    "end": "1274310"
  },
  {
    "text": "minutes to confirm that you're really committed to playing it if not you're killed I'm sorry that's just the the way",
    "start": "1274310",
    "end": "1280130"
  },
  {
    "text": "it's set up you pick up a weapon you slay a monster with the weapon the monster drops a treasure you get the",
    "start": "1280130",
    "end": "1286550"
  },
  {
    "text": "treasure you win the game hopefully you do that within a reasonable timeframe but that's the whole point of this talk",
    "start": "1286550",
    "end": "1292790"
  },
  {
    "text": "is long-running stateful workflows so what seems pretty simple can actually",
    "start": "1292790",
    "end": "1298670"
  },
  {
    "text": "look complicated when we put boxes and lines together and say I'm an architect now I've done a diagram but seriously",
    "start": "1298670",
    "end": "1305510"
  },
  {
    "text": "this is the new user flow what it's going to do is kick off some parallel jobs to create the universe then it's",
    "start": "1305510",
    "end": "1311930"
  },
  {
    "text": "going to kick off a monitor that checks is the user still alive is a user still alive etc it's also going to kick off an",
    "start": "1311930",
    "end": "1318890"
  },
  {
    "text": "orchestration waiting for the confirmation so if we look inside that confirmation that confirmation is going",
    "start": "1318890",
    "end": "1326000"
  },
  {
    "text": "to wait for that manual intervention yes I'm committed to playing the game or if two minutes is hit and there's no",
    "start": "1326000",
    "end": "1334160"
  },
  {
    "text": "confirmation it's just going to kill the user unfortunately there's the user monitor",
    "start": "1334160",
    "end": "1340460"
  },
  {
    "text": "checking to see is the user either dead or have they won the game and then",
    "start": "1340460",
    "end": "1345500"
  },
  {
    "text": "there's a game set up the game set up sequential because we're dealing with table storage",
    "start": "1345500",
    "end": "1351710"
  },
  {
    "text": "and we need to do something like take an inventory item put it on a monster put a monster inside a room put a user inside",
    "start": "1351710",
    "end": "1358250"
  },
  {
    "text": "a room so instead of dealing with complex concurrency we know that that user is one workflow so we'll do that",
    "start": "1358250",
    "end": "1364810"
  },
  {
    "text": "sequentially and then finally we have a game loop that is expecting two things",
    "start": "1364810",
    "end": "1369890"
  },
  {
    "text": "to happen to win the game killing the monster and grabbing the treasure so",
    "start": "1369890",
    "end": "1375020"
  },
  {
    "text": "it's waiting on those two events so to get started there's an extension it's",
    "start": "1375020",
    "end": "1380030"
  },
  {
    "text": "probably a newer version now but this is the screenshot when I took it that you basically pull in and you get packaged",
    "start": "1380030",
    "end": "1386270"
  },
  {
    "text": "and that pulls in the version of the durable task framework frasier functions and then this is a standard as your",
    "start": "1386270",
    "end": "1395090"
  },
  {
    "text": "function this is kicked off by an HTTP trigger so it's very similar to what I",
    "start": "1395090",
    "end": "1400310"
  },
  {
    "text": "just showed you however if we dissect this further we'll see that there's an",
    "start": "1400310",
    "end": "1406370"
  },
  {
    "text": "orchestration client that's injected this is one of the bindings that then",
    "start": "1406370",
    "end": "1412010"
  },
  {
    "text": "allows me to control and interact excuse-me interact with orchestrations and i can do things like start a new",
    "start": "1412010",
    "end": "1419750"
  },
  {
    "text": "orchestration and pass it a piece of information to uniquely identify that orchestration it gets an ID but we",
    "start": "1419750",
    "end": "1426590"
  },
  {
    "text": "probably have some business data like a inventory item number or in this case a username that makes that workflow unique",
    "start": "1426590",
    "end": "1434330"
  },
  {
    "text": "and then that a weight doesn't successfully wait for that orchestration",
    "start": "1434330",
    "end": "1439910"
  },
  {
    "text": "to run it just schedules it kicks it off comes back says it's scheduled you're good to go so you're not blocking your",
    "start": "1439910",
    "end": "1446210"
  },
  {
    "text": "function call so let's start a new game what I'm going to do is I've got a",
    "start": "1446210",
    "end": "1452090"
  },
  {
    "start": "1447000",
    "end": "1565000"
  },
  {
    "text": "console that's running in the background so that I can send some messages to it",
    "start": "1452090",
    "end": "1457250"
  },
  {
    "text": "that we monitor so I'm going to run that it's a very simple connection string",
    "start": "1457250",
    "end": "1462440"
  },
  {
    "text": "connected to local storage right now and then I'm going to go into my durable",
    "start": "1462440",
    "end": "1467990"
  },
  {
    "text": "dungeon and I'm gonna start this and",
    "start": "1467990",
    "end": "1473690"
  },
  {
    "text": "this is going to build and scan it and this time when it looks inside the project we're going to see it finds a",
    "start": "1473690",
    "end": "1480620"
  },
  {
    "text": "lot of endpoints a lot of workflows and in api's as anyone here worked with htdp",
    "start": "1480620",
    "end": "1486810"
  },
  {
    "text": "repple by the way show hands so this is an easy way to interact with endpoints it's a global tool for dotnet core and",
    "start": "1486810",
    "end": "1494070"
  },
  {
    "text": "what I can do is use it to post and get and interact with api's without pulling",
    "start": "1494070",
    "end": "1499290"
  },
  {
    "text": "up the UI for postman for example which I'm sure a lot of people have used so",
    "start": "1499290",
    "end": "1504630"
  },
  {
    "text": "what I'm going to do is just set the base URL that's how we start and when you set the base URL in this case I",
    "start": "1504630",
    "end": "1511200"
  },
  {
    "text": "don't have this augmented with swagger but if we did it would actually pull swagger and figure out what the",
    "start": "1511200",
    "end": "1518370"
  },
  {
    "text": "characteristics of the API are but in this case I'm just going to say post new",
    "start": "1518370",
    "end": "1523860"
  },
  {
    "text": "user so that's a function in point and I have this configured to open up visual",
    "start": "1523860",
    "end": "1530430"
  },
  {
    "text": "studio code for me to write the payload and a new user just has a name so we're",
    "start": "1530430",
    "end": "1536580"
  },
  {
    "text": "going to give the name Jan we'll save that and close it and we get this 200 ok",
    "start": "1536580",
    "end": "1546180"
  },
  {
    "text": "if we come over to our console we can see that there's a giant gigantic indigo",
    "start": "1546180",
    "end": "1552240"
  },
  {
    "text": "basilisk a spacious room was prepared there's a hefty Morningstar a magic",
    "start": "1552240",
    "end": "1557430"
  },
  {
    "text": "diamond so we have all these cool elements and now there's 2 minutes to confirm we're ready so that kicks things",
    "start": "1557430",
    "end": "1564450"
  },
  {
    "text": "off so let's talk about what happened first the orchestration client this is",
    "start": "1564450",
    "end": "1570810"
  },
  {
    "text": "able to start a new orchestration it's able to get the status of a running",
    "start": "1570810",
    "end": "1575820"
  },
  {
    "text": "orchestration it's able to terminate a running orchestration so if you have a management console it's able to raise an",
    "start": "1575820",
    "end": "1582930"
  },
  {
    "text": "event so in form an orchestration that something happened and it can also purge the history for an instance so you can",
    "start": "1582930",
    "end": "1589560"
  },
  {
    "text": "do cleanup routines so the first thing this create user thing did was these parallel functions to create the",
    "start": "1589560",
    "end": "1596100"
  },
  {
    "text": "universe so I want to show you what that looks like in code I'm going to come back over here and first we have these",
    "start": "1596100",
    "end": "1604560"
  },
  {
    "text": "dungeon functions this is what kicks things off let me just pull this in so",
    "start": "1604560",
    "end": "1612480"
  },
  {
    "text": "for a new user we have an HD trigger we've got our console we've got",
    "start": "1612480",
    "end": "1619980"
  },
  {
    "text": "a table reference and we've got an orchestration client so this is pulling out the user it's going out to the table",
    "start": "1619980",
    "end": "1628799"
  },
  {
    "text": "to check to see if the user already exists if the user exists that says we got a problem there's already a user and",
    "start": "1628799",
    "end": "1634350"
  },
  {
    "text": "then it's kicking off to workflows so this new user parallel functions and",
    "start": "1634350",
    "end": "1639510"
  },
  {
    "text": "this user monitor workflow so the ongoing monitor for the user and then it",
    "start": "1639510",
    "end": "1644669"
  },
  {
    "text": "just says ok I think everything's fine so when we look at the parallel user",
    "start": "1644669",
    "end": "1650370"
  },
  {
    "text": "workflow I've got these separated into different files here's the main",
    "start": "1650370",
    "end": "1658130"
  },
  {
    "text": "orchestration piece so notice that it's triggered with an orchestration trigger just like we had an HTTP trigger this is",
    "start": "1658130",
    "end": "1665520"
  },
  {
    "text": "triggered with an orchestration trigger I'm getting the user name and then here's a list of tasks create user",
    "start": "1665520",
    "end": "1672360"
  },
  {
    "text": "create monster create room create inventory and I just do in a weight task",
    "start": "1672360",
    "end": "1677610"
  },
  {
    "text": "1 all keep in mind that each of these tasks were called off of the context",
    "start": "1677610",
    "end": "1683010"
  },
  {
    "text": "remember I said we don't know wait for anything that's not on the context and then when it's done they cause a sub",
    "start": "1683010",
    "end": "1689490"
  },
  {
    "text": "Orchestrator that kicks off the confirmation workflow so I'm doing that as a sub workflow so what that means is",
    "start": "1689490",
    "end": "1695820"
  },
  {
    "text": "this parallel workflow won't end until the confirmation workflow ends they're tied together and this is just to",
    "start": "1695820",
    "end": "1702240"
  },
  {
    "text": "demonstrate how that works if we look at a given activity these are the units of",
    "start": "1702240",
    "end": "1707669"
  },
  {
    "text": "tasks that can have side effects these don't have to be deterministic so this is triggered as an activity trigger it's",
    "start": "1707669",
    "end": "1715140"
  },
  {
    "text": "a table in a queue and this is literally just going in and creating a user and the bindings make my codes exists the",
    "start": "1715140",
    "end": "1723380"
  },
  {
    "text": "succinct and compact it's passed in I basically get a client create the user",
    "start": "1723380",
    "end": "1729299"
  },
  {
    "text": "I'm done we do a similar thing to create the monster to create the room and to create the inventory so that's the the",
    "start": "1729299",
    "end": "1735960"
  },
  {
    "text": "parallel workflow and it just automatically waits for all those parallel functions to end and then it",
    "start": "1735960",
    "end": "1741600"
  },
  {
    "text": "continues through so the thing it does as the sub workflow is this user confirmation workflow that's setting a",
    "start": "1741600",
    "end": "1749309"
  },
  {
    "text": "timer and then it's also waiting for human interaction if we look at the code for",
    "start": "1749309",
    "end": "1755910"
  },
  {
    "text": "that I'm going to come into confirmation functions and we've got user",
    "start": "1755910",
    "end": "1764400"
  },
  {
    "text": "confirmation workflow so again this is kicked off with an orchestration trigger",
    "start": "1764400",
    "end": "1769520"
  },
  {
    "text": "we're getting the user and I'm calling an activity to add something to a queue",
    "start": "1769520",
    "end": "1776040"
  },
  {
    "text": "because remember I can't await add to the queue asynchronously myself because I'm in an orchestration so I can wrap",
    "start": "1776040",
    "end": "1782910"
  },
  {
    "text": "that in an activity and that activity is sending it into the console just for information now here's how I'm doing a",
    "start": "1782910",
    "end": "1789030"
  },
  {
    "text": "time-out loop I'm basically creating a cancellation token getting time off the",
    "start": "1789030",
    "end": "1794580"
  },
  {
    "text": "context this is what makes it deterministic if I did date time UTC now that would change with every run if I",
    "start": "1794580",
    "end": "1801540"
  },
  {
    "text": "get it off the context it's consistent every time this orchestration flows through so I get that I'm adding a",
    "start": "1801540",
    "end": "1808020"
  },
  {
    "text": "timespan I'm also waiting for this approval event to happen and then I",
    "start": "1808020",
    "end": "1814650"
  },
  {
    "text": "create the timer and I'm waiting for either thing to happen either get the approval or the timer files fires so two",
    "start": "1814650",
    "end": "1822540"
  },
  {
    "text": "minutes or an approval if I got the approval I cancel the timeout confirm",
    "start": "1822540",
    "end": "1828900"
  },
  {
    "text": "the user and then I kick off this sequential workflow that we'll look at in a minute otherwise I basically",
    "start": "1828900",
    "end": "1837060"
  },
  {
    "text": "timeout and I call an activity to kill the user so if we look at our activities",
    "start": "1837060",
    "end": "1842190"
  },
  {
    "text": "I'm gonna skip over confirm user for now kill user is basically just going out to",
    "start": "1842190",
    "end": "1848340"
  },
  {
    "text": "a table and it's setting the user is alive to false it's a pretty pretty",
    "start": "1848340",
    "end": "1854400"
  },
  {
    "text": "simple way to kill the user so that's what's in that workflow now if we go back over to our console I've been",
    "start": "1854400",
    "end": "1860610"
  },
  {
    "text": "talking long enough that the workflow kicked off and Jan has died because I've",
    "start": "1860610",
    "end": "1866130"
  },
  {
    "text": "spent too much time talking my two minutes went up and it's game over for Jan so having done that this is another",
    "start": "1866130",
    "end": "1875250"
  },
  {
    "text": "picture from the catacombs let's look at status checking and some of the internals of how we got to where we're",
    "start": "1875250",
    "end": "1882810"
  },
  {
    "start": "1877000",
    "end": "1956000"
  },
  {
    "text": "at so what I can do in my htdp repple is I can and I'm just going to steal this",
    "start": "1882810",
    "end": "1888510"
  },
  {
    "text": "from a webpage so you don't have to see me fumbling with typing and we're gonna",
    "start": "1888510",
    "end": "1895140"
  },
  {
    "text": "do user actually I will fumble with typing user confirmation user monitor so we're gonna get check status part of the",
    "start": "1895140",
    "end": "1902760"
  },
  {
    "text": "path is a username and then user confirmation workflow that's going to",
    "start": "1902760",
    "end": "1909150"
  },
  {
    "text": "call out to the endpoint comes back it tells me that that's a completed process and the other one is the user what was",
    "start": "1909150",
    "end": "1920400"
  },
  {
    "text": "the user Monitor workflow does a similar thing if we look at the code for this",
    "start": "1920400",
    "end": "1928130"
  },
  {
    "text": "this is going to be in Dungeon functions once again the entry point is just a",
    "start": "1928130",
    "end": "1934950"
  },
  {
    "text": "standard trigger HTTP trigger I'm checking on the status of this user what",
    "start": "1934950",
    "end": "1941760"
  },
  {
    "text": "I do is I have a helper job that sends out a Corian says give me the instances",
    "start": "1941760",
    "end": "1947190"
  },
  {
    "text": "that have this workflow name and this user and then it just simply queries the status and returns it so that's how we",
    "start": "1947190",
    "end": "1954030"
  },
  {
    "text": "can do that ongoing set of basically checking status and monitoring it now",
    "start": "1954030",
    "end": "1960300"
  },
  {
    "start": "1956000",
    "end": "2024000"
  },
  {
    "text": "behind the scenes a few things have happened if I jump into my storage",
    "start": "1960300",
    "end": "1966050"
  },
  {
    "text": "Explorer and I open up my tables we can",
    "start": "1966050",
    "end": "1973350"
  },
  {
    "text": "see that there's this durable functions hub history and that's a history of",
    "start": "1973350",
    "end": "1978420"
  },
  {
    "text": "everything that's happened up to this point which is quite a bit of history for a short time talking and then we",
    "start": "1978420",
    "end": "1984960"
  },
  {
    "text": "have these instances that show that there were a total of three workflows and they're all completed so behind the",
    "start": "1984960",
    "end": "1993240"
  },
  {
    "text": "scenes durable functions creates a set of control queues and a set of tables to",
    "start": "1993240",
    "end": "1998580"
  },
  {
    "text": "keep track of history store checkpoints and ensure that the orchestrations are",
    "start": "1998580",
    "end": "2003590"
  },
  {
    "text": "running correctly and that's what we quarry behind the scenes and then you can see I've created sort of the",
    "start": "2003590",
    "end": "2009380"
  },
  {
    "text": "elements of my universe here there's the inventory there's the monster and these",
    "start": "2009380",
    "end": "2016490"
  },
  {
    "text": "are partitioned user and then have keys based on what the items are so that's a little bit",
    "start": "2016490",
    "end": "2022549"
  },
  {
    "text": "behind the scenes for that now just as an aside one of the advantages you get",
    "start": "2022549",
    "end": "2028190"
  },
  {
    "start": "2024000",
    "end": "2100000"
  },
  {
    "text": "from using durable functions is some advanced error handling so you can use trycatch within your code that's",
    "start": "2028190",
    "end": "2034820"
  },
  {
    "text": "perfectly fine as long as it's in a deterministic way you're not rolling dice within the block",
    "start": "2034820",
    "end": "2040029"
  },
  {
    "text": "any failure inside an activity will throw an exception so the orchestrator will receive an exception from that and",
    "start": "2040029",
    "end": "2046970"
  },
  {
    "text": "if the exceptions not caught the workflow is going to end with a failed status that you can query for and look",
    "start": "2046970",
    "end": "2053569"
  },
  {
    "text": "into however you can manage your activities you can set up when you call",
    "start": "2053569",
    "end": "2058908"
  },
  {
    "text": "those async activities without changing the code of your activity it might be updating a table doing something like",
    "start": "2058909",
    "end": "2064669"
  },
  {
    "text": "that you can setup retries and retry interval a back off interval a timeout",
    "start": "2064669",
    "end": "2069980"
  },
  {
    "text": "you can even create a function that it'll call back and say should I retry again or not so you have some",
    "start": "2069980",
    "end": "2075710"
  },
  {
    "text": "flexibility with that this is an example of what that would look like here we're saying if it doesn't work try again",
    "start": "2075710",
    "end": "2081440"
  },
  {
    "text": "after five seconds and try it a maximum of three times and then we're calling it with that retry and if you don't like",
    "start": "2081440",
    "end": "2088158"
  },
  {
    "text": "flaky function pass as a magic string as long as it's in something that you can",
    "start": "2088159",
    "end": "2093470"
  },
  {
    "text": "access from types from the code you can do the name of right and then pass it as a solid reference so let's look at",
    "start": "2093470",
    "end": "2101839"
  },
  {
    "start": "2100000",
    "end": "2185000"
  },
  {
    "text": "sequential workflow monitoring with the user that we don't let die let's actually create a user that survives the",
    "start": "2101839",
    "end": "2109430"
  },
  {
    "text": "process so I'm going to come back to host new user that's going to pop up in",
    "start": "2109430",
    "end": "2118520"
  },
  {
    "text": "Visual Studio again and this time let's make a user named Emma I'm gonna save",
    "start": "2118520",
    "end": "2127609"
  },
  {
    "text": "that and close so I get my okay if I go",
    "start": "2127609",
    "end": "2133520"
  },
  {
    "text": "to my console it's showing me that it's created the user and we're waiting for",
    "start": "2133520",
    "end": "2138770"
  },
  {
    "text": "confirmation so I'm gonna go ahead and post that confirmation so I'm going to",
    "start": "2138770",
    "end": "2145490"
  },
  {
    "text": "post confirm user and it's the same structure I basically",
    "start": "2145490",
    "end": "2153620"
  },
  {
    "text": "pass it the name save that and close that if we look at our console we see",
    "start": "2153620",
    "end": "2163170"
  },
  {
    "text": "we've accepted the challenge and now it's giving us some context she's standing in a room there's broken",
    "start": "2163170",
    "end": "2168990"
  },
  {
    "text": "pottery the user confirmation workflows complete there's a glowing mace there's",
    "start": "2168990",
    "end": "2174420"
  },
  {
    "text": "a glowing red Gorgon or growling red Gorgon so glowing mace growling Gorgon",
    "start": "2174420",
    "end": "2179580"
  },
  {
    "text": "and M is alive but hasn't found the treasure yet so let's walk through what",
    "start": "2179580",
    "end": "2185940"
  },
  {
    "start": "2185000",
    "end": "2337000"
  },
  {
    "text": "happened when I confirm so the first thing it did was kicked off a sequential workflow so we created the inventory the",
    "start": "2185940",
    "end": "2192780"
  },
  {
    "text": "monster the room but we didn't tie anything together until Emma made the commitment the code for that looks like",
    "start": "2192780",
    "end": "2202290"
  },
  {
    "text": "this we've got a confirm user which is",
    "start": "2202290",
    "end": "2210270"
  },
  {
    "text": "just an HCP trigger and that's going to",
    "start": "2210270",
    "end": "2216510"
  },
  {
    "text": "come in and it's going to do some things like make sure the users there make sure the user is alive if everything looks",
    "start": "2216510",
    "end": "2222540"
  },
  {
    "text": "good and it's got the confirmation workflow because it wants to know it's running remember the workflow was waiting for",
    "start": "2222540",
    "end": "2230850"
  },
  {
    "text": "either the timeout to fire or for that event to come that the user confirmed this is how we send the message that",
    "start": "2230850",
    "end": "2237960"
  },
  {
    "text": "they confirmed we go out we grab that that client so we give it the username",
    "start": "2237960",
    "end": "2242990"
  },
  {
    "text": "this is here and the name of the workflow when we grab that workflow we",
    "start": "2242990",
    "end": "2249300"
  },
  {
    "text": "just raise an event called approval toss true so that's what we did we just sent",
    "start": "2249300",
    "end": "2255210"
  },
  {
    "text": "to that user confirmation workflow and said yes they're approved so if we go back to the user confirmation workflow",
    "start": "2255210",
    "end": "2266160"
  },
  {
    "text": "if it gets that message right here so",
    "start": "2266160",
    "end": "2271410"
  },
  {
    "text": "it's waiting for either the approval or the timeout if it gets the approval it's starting a new workflow called",
    "start": "2271410",
    "end": "2278480"
  },
  {
    "text": "sequential user workflow it's over here and it's gonna be a",
    "start": "2278480",
    "end": "2284820"
  },
  {
    "text": "little anti-climatic after seeing the fan out fan in we're",
    "start": "2284820",
    "end": "2289920"
  },
  {
    "text": "just simply awaiting in sequence so we're saying basically put the user in the room but the inventory in the room",
    "start": "2289920",
    "end": "2296040"
  },
  {
    "text": "put the monster in the room give the monster the treasure and now start a new",
    "start": "2296040",
    "end": "2302100"
  },
  {
    "text": "workflow that monitors the game so we only kick off that game monitor workflow if the user commits and we can come back",
    "start": "2302100",
    "end": "2309810"
  },
  {
    "text": "to our repple and we can do a check",
    "start": "2309810",
    "end": "2315030"
  },
  {
    "text": "status this time we'll do Emma and the user monitor workflow is running because",
    "start": "2315030",
    "end": "2323430"
  },
  {
    "text": "she's still alive she hasn't died and she hasn't won the game we also now have",
    "start": "2323430",
    "end": "2328650"
  },
  {
    "text": "a game monitor workflow and that is also",
    "start": "2328650",
    "end": "2334890"
  },
  {
    "text": "running so speaking of that user monitor workflow and game monitor workflow I",
    "start": "2334890",
    "end": "2341460"
  },
  {
    "start": "2337000",
    "end": "2518000"
  },
  {
    "text": "have two different long-running workflows to show you two different ways that you can do this with durable",
    "start": "2341460",
    "end": "2347280"
  },
  {
    "text": "functions I'm gonna come back over to the code and go back into monitor",
    "start": "2347280",
    "end": "2353220"
  },
  {
    "text": "functions and the first thing we'll look at is the monitor user so the monitor",
    "start": "2353220",
    "end": "2361890"
  },
  {
    "text": "user comes out make sure it's a valid user and it's checking so this is an activity basically to see did the user",
    "start": "2361890",
    "end": "2368700"
  },
  {
    "text": "get the treasure did anything interesting happen and it's just sending out information to the console based on",
    "start": "2368700",
    "end": "2374730"
  },
  {
    "text": "that if we look at the user Monitor workflow this is setting up an expiry",
    "start": "2374730",
    "end": "2380670"
  },
  {
    "text": "time and it's actually checking every 20 seconds how's the game status going so",
    "start": "2380670",
    "end": "2386340"
  },
  {
    "text": "we basically monitor the user while we're not timed out so I didn't want",
    "start": "2386340",
    "end": "2391890"
  },
  {
    "text": "this to run infinitely if someone accidentally left it on so it runs for an hour hopefully we're not here an hour",
    "start": "2391890",
    "end": "2397380"
  },
  {
    "text": "from now so it'll timeout automatically and then it's just setting up a next check and",
    "start": "2397380",
    "end": "2403770"
  },
  {
    "text": "creating a timer so it says 20 seconds let's check again 20 seconds let's check again we're an hour out we're just going",
    "start": "2403770",
    "end": "2410100"
  },
  {
    "text": "to give up and it's check check check if we timeout we in",
    "start": "2410100",
    "end": "2416070"
  },
  {
    "text": "we in the function and we basically tell you it's either timed out or it's done",
    "start": "2416070",
    "end": "2421200"
  },
  {
    "text": "and if it's done it's because the user won the game and this check right here",
    "start": "2421200",
    "end": "2426210"
  },
  {
    "text": "returns a boolean so it's true if everything's done false if it's not and it'll be true if the user dies or if",
    "start": "2426210",
    "end": "2432780"
  },
  {
    "text": "the user gets the treasure so that's one way to do it so that's on a timer every 20 seconds how's the game going",
    "start": "2432780",
    "end": "2438650"
  },
  {
    "text": "there's another way that we can do this and that's the game monitor workflow and",
    "start": "2438650",
    "end": "2444270"
  },
  {
    "text": "the game monitor workflow is waiting for two events killing the monster and",
    "start": "2444270",
    "end": "2449340"
  },
  {
    "text": "getting the treasure so we just set up a wait for those external events and we do",
    "start": "2449340",
    "end": "2454500"
  },
  {
    "text": "a weight task when all and it's as simple as that it's just going to wait and unless those two events come in the",
    "start": "2454500",
    "end": "2461940"
  },
  {
    "text": "game maunder workflow is just going to keep running now I could have done the timer if I want the timeout I could also",
    "start": "2461940",
    "end": "2467520"
  },
  {
    "text": "have another function that will go out and kill the the workflow but right now this workflow is just perpetually",
    "start": "2467520",
    "end": "2473910"
  },
  {
    "text": "waiting for those two events to come in and we'll look at how those events come in in a second if we look at our table",
    "start": "2473910",
    "end": "2482040"
  },
  {
    "text": "that was set up now if we refresh this you're gonna see there's a monster is",
    "start": "2482040",
    "end": "2490070"
  },
  {
    "text": "alive true and we've got some inventory items right here so it's got a warm",
    "start": "2490070",
    "end": "2496730"
  },
  {
    "text": "diamond if we look at the room the room now is going to if I scroll over you can",
    "start": "2496730",
    "end": "2503550"
  },
  {
    "text": "see that the user or the monster and the inventory item are placed in the room so",
    "start": "2503550",
    "end": "2510120"
  },
  {
    "text": "everything's tied together and the games in a state ready and waiting for something interesting to happen I'm sure",
    "start": "2510120",
    "end": "2516360"
  },
  {
    "text": "you're waiting for something interesting to happen too so let's go ahead and in this game we have a few steps to make",
    "start": "2516360",
    "end": "2522450"
  },
  {
    "text": "that happen first thing I'm going to do is have Emma pick up the weapon so I'm",
    "start": "2522450",
    "end": "2529140"
  },
  {
    "text": "just getting the template for this and of course all this code is open source and I'm showing you the walkthrough so",
    "start": "2529140",
    "end": "2534780"
  },
  {
    "text": "you can do this on your own and I'm just going to come back and do a reality check it's a glowing mace so if I'm",
    "start": "2534780",
    "end": "2542220"
  },
  {
    "text": "gonna post to my action in point",
    "start": "2542220",
    "end": "2546920"
  },
  {
    "text": "and my action is to have Emma get the",
    "start": "2547560",
    "end": "2556900"
  },
  {
    "text": "glowing mace so we'll save that close out if we go to our console successfully",
    "start": "2556900",
    "end": "2565600"
  },
  {
    "text": "grab the glowing mace you see that at the bottom so the next thing we need to do is kill the monster with the mace so",
    "start": "2565600",
    "end": "2574150"
  },
  {
    "text": "we have a little bit more complex command here I'm going to post to my",
    "start": "2574150",
    "end": "2581200"
  },
  {
    "text": "action this time I'm going to do a kill",
    "start": "2581200",
    "end": "2588340"
  },
  {
    "text": "action the target is a growling indigo was a",
    "start": "2588340",
    "end": "2595090"
  },
  {
    "text": "basilisk growling red Gorgon and instead",
    "start": "2595090",
    "end": "2606610"
  },
  {
    "text": "of the magic mace we're doing it with the glowing mace which I'm not quite sure what the difference is apparently the magic mace is a little more magical",
    "start": "2606610",
    "end": "2613150"
  },
  {
    "text": "than the glowing one that's my best guess for you so we'll do that again okay we pop over to our console so we",
    "start": "2613150",
    "end": "2621010"
  },
  {
    "text": "valiantly killed the glowing red Gorgon and they dropped a worn diamond so the",
    "start": "2621010",
    "end": "2628630"
  },
  {
    "text": "last task and I'll let everyone here",
    "start": "2628630",
    "end": "2633790"
  },
  {
    "text": "sort out how a diamond gets worn but it could happen so we're going to name Emma",
    "start": "2633790",
    "end": "2647160"
  },
  {
    "text": "action get and our target this time is a",
    "start": "2647280",
    "end": "2654550"
  },
  {
    "text": "worn diamond I was really hoping for the bloody Commodore 64 that's my favorite",
    "start": "2654550",
    "end": "2660520"
  },
  {
    "text": "treasure but alas the randomness did not align and it helps if I close out so it",
    "start": "2660520",
    "end": "2669730"
  },
  {
    "text": "actually posts so we get an OK and it says it's won the game but what's",
    "start": "2669730",
    "end": "2676600"
  },
  {
    "text": "interesting is right now the game monitor is done because it got it's too events now you can see Emma's won the",
    "start": "2676600",
    "end": "2686170"
  },
  {
    "text": "game finally mo monitoring's done so that kicked off a little later because that was on a timer and now if we look",
    "start": "2686170",
    "end": "2693460"
  },
  {
    "text": "at our status for our different workflows let's go back into our hub",
    "start": "2693460",
    "end": "2699790"
  },
  {
    "text": "instances we can see we had a lot more workflows for Emma but everything is",
    "start": "2699790",
    "end": "2705790"
  },
  {
    "text": "completed there's nothing running so everything's concluded and closed out",
    "start": "2705790",
    "end": "2710910"
  },
  {
    "text": "so I want to just show you how we raise the the message and then we'll cover a",
    "start": "2710910",
    "end": "2718270"
  },
  {
    "start": "2711000",
    "end": "2980000"
  },
  {
    "text": "couple other points so if we go inside to dungeon functions this is where we",
    "start": "2718270",
    "end": "2724660"
  },
  {
    "text": "have our actions actually action functions makes more sense right I named",
    "start": "2724660",
    "end": "2731260"
  },
  {
    "text": "these actually quite well so this is again an HCP trigger and what it's going",
    "start": "2731260",
    "end": "2738880"
  },
  {
    "text": "to do is it's going to take all the information in its parsing out is the user actually there's the user alive",
    "start": "2738880",
    "end": "2744550"
  },
  {
    "text": "does the monster exists is the the inventory that the user is trying to get",
    "start": "2744550",
    "end": "2750390"
  },
  {
    "text": "there's a get method if the actions kill there's a kill method and if we look at",
    "start": "2750390",
    "end": "2755770"
  },
  {
    "text": "the let's look at the get method first so the get method is simply a method",
    "start": "2755770",
    "end": "2764920"
  },
  {
    "text": "that I can call directly from within code there's nothing special this isn't a service endpoint it's just an internal",
    "start": "2764920",
    "end": "2770710"
  },
  {
    "text": "method that I'm calling to separate out code but what it's doing is it's checking the target seeing if the room",
    "start": "2770710",
    "end": "2777100"
  },
  {
    "text": "has the target grabbing the target and the key thing to look at is if what Emma",
    "start": "2777100",
    "end": "2783400"
  },
  {
    "text": "grabbed is a treasure it's going to tell us that the user nabbed the treasure and it's going to go find that game monitor",
    "start": "2783400",
    "end": "2790300"
  },
  {
    "text": "workflow because there's one running for him as game and it's gonna raise the event got treasure so that's the first",
    "start": "2790300",
    "end": "2798610"
  },
  {
    "text": "event that it's waiting for otherwise it's gonna say target not found or tried to get target that doesn't exist",
    "start": "2798610",
    "end": "2804670"
  },
  {
    "text": "the monster logic also has to figure out does the user have the weapon is the monster in the room did we name the",
    "start": "2804670",
    "end": "2811240"
  },
  {
    "text": "monster correctly is the monster actually still alive because you could try to kill it twice and it'll come back",
    "start": "2811240",
    "end": "2817150"
  },
  {
    "text": "with a snarky tried to kill a ghost but if it's alive and everything pans out",
    "start": "2817150",
    "end": "2824940"
  },
  {
    "text": "it's going to do a similar thing where it's going to update the table mark the user or mark the monster is dead and",
    "start": "2824940",
    "end": "2831759"
  },
  {
    "text": "then it's finding that game monitor workflow again and it's raising that event.kill monster",
    "start": "2831759",
    "end": "2837309"
  },
  {
    "text": "so it's signaling into the event that can happen now that's how that code",
    "start": "2837309",
    "end": "2842319"
  },
  {
    "text": "works there's a another open source project that you can find a link out to",
    "start": "2842319",
    "end": "2847329"
  },
  {
    "text": "it that's part of the Microsoft ignite tour this is a tour that was after the",
    "start": "2847329",
    "end": "2853269"
  },
  {
    "text": "ignite event and we had a server list module where we did a more corporate",
    "start": "2853269",
    "end": "2858369"
  },
  {
    "text": "focused example and this is a skew and a skew is an inventory item and it has a",
    "start": "2858369",
    "end": "2864430"
  },
  {
    "text": "lifetime so you can add a SKU to a catalog but then there's some",
    "start": "2864430",
    "end": "2869650"
  },
  {
    "text": "expectations the SKU needs to have its price correctly set and needs to have a description and needs have an image and",
    "start": "2869650",
    "end": "2875619"
  },
  {
    "text": "it needs all these things to happen before it can be active and visible in the catalogue and so that example uses a",
    "start": "2875619",
    "end": "2882910"
  },
  {
    "text": "long running workflow like this to wait for those events to happen and it actually uses a vent grid which is a",
    "start": "2882910",
    "end": "2889119"
  },
  {
    "text": "messaging service to send those messages in and it just relays them it gets the message okay the description was added",
    "start": "2889119",
    "end": "2895449"
  },
  {
    "text": "let me find the workflow for the SKU and raise the event to the SKU that that description was added so that's how that",
    "start": "2895449",
    "end": "2902019"
  },
  {
    "text": "workflow works so as a summary of what I showed you with these orchestration",
    "start": "2902019",
    "end": "2907329"
  },
  {
    "text": "contexts we're only awaiting on tasks derived by the context if we try to wait on something else the orchestration will",
    "start": "2907329",
    "end": "2914559"
  },
  {
    "text": "actually throw an exception because it'll detect that it's non-deterministic because you're waiting something it",
    "start": "2914559",
    "end": "2920079"
  },
  {
    "text": "doesn't have control over there is a flag on the context that if you have",
    "start": "2920079",
    "end": "2925359"
  },
  {
    "text": "something like you want to log something only the first time it kicks off you can",
    "start": "2925359",
    "end": "2931359"
  },
  {
    "text": "check is replay and because the logging doesn't have a side-effect except in the log itself which it's not a side-effect",
    "start": "2931359",
    "end": "2937390"
  },
  {
    "text": "in the workflow or the state that's acceptable so if is replay will do this thing",
    "start": "2937390",
    "end": "2942579"
  },
  {
    "text": "you can kick off new orchestrations but you have to do them inside of activities and I'm not sure why",
    "start": "2942579",
    "end": "2948820"
  },
  {
    "text": "they don't put this on the orchestration trigger the ability to create a new orchestration but they don't so if you",
    "start": "2948820",
    "end": "2955810"
  },
  {
    "text": "try to wait and bring in an orchestration binding you're not awaiting on the context it's going to",
    "start": "2955810",
    "end": "2962110"
  },
  {
    "text": "throw an exception but you can have an activity that you await on the activity and tell the activity to kick off the",
    "start": "2962110",
    "end": "2967450"
  },
  {
    "text": "orchestration and that works fine and date/time is only real on your context you got to get used to if you're",
    "start": "2967450",
    "end": "2973810"
  },
  {
    "text": "checking time you check context get UTC date as opposed to day time now so",
    "start": "2973810",
    "end": "2981370"
  },
  {
    "start": "2980000",
    "end": "3196000"
  },
  {
    "text": "there's some advanced concepts that come around this there is the possibility of cross app communication so if I have",
    "start": "2981370",
    "end": "2988060"
  },
  {
    "text": "multiple orchestrators and different function apps I can set up and this is using a pretty straightforward HTTP set",
    "start": "2988060",
    "end": "2997060"
  },
  {
    "text": "of requests so it's using an HCP endpoint basically to kick off another Orchestrator and then it's going out and",
    "start": "2997060",
    "end": "3004050"
  },
  {
    "text": "getting the status but you could use cues you can use messaging there's other ways to communicate between",
    "start": "3004050",
    "end": "3010880"
  },
  {
    "text": "orchestrations the way orchestrations work is there's a concept called partitions that orchestrations are",
    "start": "3010880",
    "end": "3018090"
  },
  {
    "text": "scaled across there's a default of four you can configure it up to sixteen on a host and then you can also run multiple",
    "start": "3018090",
    "end": "3024600"
  },
  {
    "text": "hosts and scale across hosts and there's guidance in the documentation for that you can also throttle concurrency so you",
    "start": "3024600",
    "end": "3031980"
  },
  {
    "text": "can determine how many requests certain set of partitions can handle at the same time and then there's this concept",
    "start": "3031980",
    "end": "3038340"
  },
  {
    "text": "called extended sessions now I talked about the checkpoint and the replay so every time it's coming in it's replaying",
    "start": "3038340",
    "end": "3044940"
  },
  {
    "text": "all these messages up to a certain point you may have a process that times out in",
    "start": "3044940",
    "end": "3050340"
  },
  {
    "text": "30 seconds and it's doing a check and doing that well if you don't set up an",
    "start": "3050340",
    "end": "3055980"
  },
  {
    "text": "extended session it's still going to replay even in that short period of time if I can figure that to be an extended",
    "start": "3055980",
    "end": "3063390"
  },
  {
    "text": "session it'll say okay what they're telling me is we can keep this in memory and just wait in memory and not hydrate",
    "start": "3063390",
    "end": "3069720"
  },
  {
    "text": "everything to disk and basically override the default behavior so you get",
    "start": "3069720",
    "end": "3074760"
  },
  {
    "text": "less history and you get a little bit more performance out of that now I talked about high availability basically",
    "start": "3074760",
    "end": "3082350"
  },
  {
    "text": "everything is managed through a storage account so the queues the backing tables",
    "start": "3082350",
    "end": "3087750"
  },
  {
    "text": "are in a storage account you can create a globally redundant storage account so",
    "start": "3087750",
    "end": "3094110"
  },
  {
    "text": "that redundancy is built into how you set up the storage account you could have multiple orchestrations in",
    "start": "3094110",
    "end": "3099120"
  },
  {
    "text": "different regions using a storage account that's not globally redundant and then that becomes your point of",
    "start": "3099120",
    "end": "3104430"
  },
  {
    "text": "failure but if you have a geo redundant storage and you have geo redundant",
    "start": "3104430",
    "end": "3109590"
  },
  {
    "text": "orchestrations they're all kept in sync because they're talking to the same storage client and it's handling that",
    "start": "3109590",
    "end": "3115080"
  },
  {
    "text": "replication behind the scenes for you for performance and scale numbers this",
    "start": "3115080",
    "end": "3120810"
  },
  {
    "text": "is more it's not as interesting in the talk but I wanted this in the deck for you to refer to there's a performance",
    "start": "3120810",
    "end": "3128520"
  },
  {
    "text": "target of five sequential activities per second per instance this is assuming",
    "start": "3128520",
    "end": "3134580"
  },
  {
    "text": "that it's a reasonably returned activity obviously if the activity itself takes a",
    "start": "3134580",
    "end": "3139710"
  },
  {
    "text": "minute but if you ever return directly from the activity this is the the level",
    "start": "3139710",
    "end": "3144990"
  },
  {
    "text": "fan-out 100 per second per instance this kind of helps you based on the volume of controllers you're bringing through",
    "start": "3144990",
    "end": "3150660"
  },
  {
    "text": "durable functions figure out partitions and if you need multiple function apps",
    "start": "3150660",
    "end": "3155910"
  },
  {
    "text": "running and then you can actually unit test these now this is a little bit",
    "start": "3155910",
    "end": "3161190"
  },
  {
    "text": "dated I apologize for not updating this but it was a rabbit hole I didn't want",
    "start": "3161190",
    "end": "3166890"
  },
  {
    "text": "to go through at the last minute but the newer version actually goes away from these base clients to interfaces but",
    "start": "3166890",
    "end": "3174840"
  },
  {
    "text": "originally if you're using the the version here you can mock a base class",
    "start": "3174840",
    "end": "3180270"
  },
  {
    "text": "and you can set up expectations you can create a mock logging mechanism you can",
    "start": "3180270",
    "end": "3185400"
  },
  {
    "text": "create a mock orchestration status response so you can fully unit test it and the newer version uses interfaces so",
    "start": "3185400",
    "end": "3192150"
  },
  {
    "text": "you even have more flexibility with mocking those interfaces now before I",
    "start": "3192150",
    "end": "3197400"
  },
  {
    "text": "dive into the the summary I did create a utility because all of these are API is",
    "start": "3197400",
    "end": "3204480"
  },
  {
    "text": "that you can access over HTTP so I",
    "start": "3204480",
    "end": "3210030"
  },
  {
    "text": "created a very simple front-end I'm going to take full credit for the UI design I added a",
    "start": "3210030",
    "end": "3215540"
  },
  {
    "text": "both fonts and padding tags myself I'm very proud of this I don't want anyone",
    "start": "3215540",
    "end": "3221780"
  },
  {
    "text": "to freak out if you look at the the source code for this because this will",
    "start": "3221780",
    "end": "3228170"
  },
  {
    "text": "run and give you a front-end that interacts with everything but if we look",
    "start": "3228170",
    "end": "3234620"
  },
  {
    "text": "at the code what you're gonna find is there's a disturbing lack of any fancy",
    "start": "3234620",
    "end": "3241160"
  },
  {
    "text": "JavaScript framework just using vanilla jazz so it's just straightforward",
    "start": "3241160",
    "end": "3246850"
  },
  {
    "text": "JavaScript and we're using these things that some people who have lived and died",
    "start": "3246850",
    "end": "3252740"
  },
  {
    "text": "in angular and react might not even know there's a good element by ID but you can",
    "start": "3252740",
    "end": "3259010"
  },
  {
    "text": "walk through this this code base I tried to keep it simple but this basically it's showing the status of the different",
    "start": "3259010",
    "end": "3265130"
  },
  {
    "text": "workflows allows me to enter user so I'm going to use the handle that I used to use when I played doom and quake back in",
    "start": "3265130",
    "end": "3272150"
  },
  {
    "text": "the day which was Nicodemus and when I start typing it it starts monitoring and",
    "start": "3272150",
    "end": "3277310"
  },
  {
    "text": "they turn grey because it's unknown status right now I haven't done anything interesting so I can create a new user",
    "start": "3277310",
    "end": "3284080"
  },
  {
    "text": "and all of a sudden you see the user monitor and the run user parallel",
    "start": "3284080",
    "end": "3290270"
  },
  {
    "text": "workflow those kick off and the universe is now waiting for Nicodemus so it's",
    "start": "3290270",
    "end": "3295760"
  },
  {
    "text": "waiting for the confirmation so I can come here and notice that the user confirmation workflow kicked off so I'll",
    "start": "3295760",
    "end": "3302900"
  },
  {
    "text": "click confirm and now these turn red because these workflows are done and now",
    "start": "3302900",
    "end": "3309650"
  },
  {
    "text": "we've got the user in the game monitor workflow running and we've got some context here we can see the description",
    "start": "3309650",
    "end": "3315680"
  },
  {
    "text": "of the room there's a moaning indigo troll so that would be interesting to",
    "start": "3315680",
    "end": "3321230"
  },
  {
    "text": "put up with right alright this is we're getting better with the treasure though there's a magic zark trilogy set which",
    "start": "3321230",
    "end": "3328250"
  },
  {
    "text": "I'm pretty excited about and we're back to a glowing hack so I'm not sure what that's all about but let's go ahead and",
    "start": "3328250",
    "end": "3334400"
  },
  {
    "text": "get the glowing axe okay now I'm holding on to the glowing",
    "start": "3334400",
    "end": "3341500"
  },
  {
    "text": "axe so now I can kill and I could say",
    "start": "3341500",
    "end": "3347730"
  },
  {
    "text": "something with something else just to show you that it actually handles these",
    "start": "3347730",
    "end": "3353920"
  },
  {
    "text": "cases action failed user doesn't have something else it only has the glowing",
    "start": "3353920",
    "end": "3358930"
  },
  {
    "text": "axe so let's go ahead and kill the moaning indigo troll with the glowing",
    "start": "3358930",
    "end": "3365710"
  },
  {
    "text": "axe and it drops the magic Zork trilogy",
    "start": "3365710",
    "end": "3371770"
  },
  {
    "text": "set so let's get the magic Zork trilogy",
    "start": "3371770",
    "end": "3378160"
  },
  {
    "text": "set and we won the game so this code",
    "start": "3378160",
    "end": "3384040"
  },
  {
    "text": "will show you how with all those end points that I was manually posting to you could architect an application",
    "start": "3384040",
    "end": "3389530"
  },
  {
    "text": "around those end points and workflows and work with them that way so to recap this code gives you examples",
    "start": "3389530",
    "end": "3397660"
  },
  {
    "text": "of the a synchronous sequential workflows fan out and fan in external",
    "start": "3397660",
    "end": "3404050"
  },
  {
    "text": "eventing there's a couple examples of that a long-running game monitor a",
    "start": "3404050",
    "end": "3410370"
  },
  {
    "text": "long-running API that game monitor runs for a long period of time but you can",
    "start": "3410370",
    "end": "3415630"
  },
  {
    "text": "pull it and check status and then that human interaction that timeout and escalation so all these elements are",
    "start": "3415630",
    "end": "3422020"
  },
  {
    "text": "available I've got I'll actually tweet out the link to the full deck but these",
    "start": "3422020",
    "end": "3428050"
  },
  {
    "text": "are the main links for what I covered here it's the emulator they explore the durable functions and if you go to the",
    "start": "3428050",
    "end": "3434560"
  },
  {
    "text": "github repo that repo has step-by-step instructions to set everything up and walk through that we've got about three",
    "start": "3434560",
    "end": "3441730"
  },
  {
    "text": "minutes so what I'm gonna do is go ahead and close out but I'll stay for any",
    "start": "3441730",
    "end": "3447220"
  },
  {
    "text": "questions that you have you can always feel free to email me and talk to me thank you once again for spending the",
    "start": "3447220",
    "end": "3453550"
  },
  {
    "text": "end of your first day at in DC with me I appreciate everyone [Applause]",
    "start": "3453550",
    "end": "3462659"
  }
]