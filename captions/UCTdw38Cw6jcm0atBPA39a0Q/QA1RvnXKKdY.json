[
  {
    "text": "oh I guess that means it's time or at least nearly time people are still fighting in Tal just mentioned the cause",
    "start": "3960",
    "end": "10620"
  },
  {
    "text": "of this slide I have started since Caribbean dev conf last October where I",
    "start": "10620",
    "end": "18510"
  },
  {
    "text": "did a whole talk where I originally wanted to just have nothing up at all on",
    "start": "18510",
    "end": "25020"
  },
  {
    "text": "the screen and the organizers are we can't have nothing do you want your profile and picture uh player is like that's the worst thing that could",
    "start": "25020",
    "end": "30960"
  },
  {
    "text": "possibly be up there where you just put be kind as sort of a theme for the talk",
    "start": "30960",
    "end": "36480"
  },
  {
    "text": "and I thought sure what I want to have that before at the start and end of",
    "start": "36480",
    "end": "41640"
  },
  {
    "text": "every talk I do now at least ones that I'm doing sort of on my own when I'm co-presenting it's kind of a",
    "start": "41640",
    "end": "47730"
  },
  {
    "text": "more awkward to get it in there so I've got a different bit of white on every slide that I have like this but I figure",
    "start": "47730",
    "end": "54960"
  },
  {
    "text": "I could hopefully move the industry a bit in terms of yo understanding of",
    "start": "54960",
    "end": "61140"
  },
  {
    "text": "c-sharp and understanding of versioning today and dates and times but actually if I can move people just a little bit",
    "start": "61140",
    "end": "66630"
  },
  {
    "text": "to be a tiny bit kinder and I'm sure you're all lovely people already but if",
    "start": "66630",
    "end": "72000"
  },
  {
    "text": "just being prompted makes you do one more act of kindness then that possibly",
    "start": "72000",
    "end": "77159"
  },
  {
    "text": "has more impact on the world than anything else I can do so that's why I'm doing it okay however we're really",
    "start": "77159",
    "end": "84780"
  },
  {
    "text": "talking about versioning today because I'm still on a quest to find a topic",
    "start": "84780",
    "end": "90840"
  },
  {
    "text": "that I can submit and still get accepted but that no one shows up to I've tried dates and times I thought",
    "start": "90840",
    "end": "98070"
  },
  {
    "text": "most people would think those are pretty boring but people still came I've tried versioning and you're all still here",
    "start": "98070",
    "end": "104030"
  },
  {
    "text": "this afternoon with Jennifer we're trying feminism you know if I can't bore people away maybe I can scare people",
    "start": "104030",
    "end": "110009"
  },
  {
    "text": "away but please do come it'll be great but I seem to be drawn to topics that I",
    "start": "110009",
    "end": "116549"
  },
  {
    "text": "find fascinating and many other people don't so we're talking about versioning",
    "start": "116549",
    "end": "122430"
  },
  {
    "text": "or maybe we're talking about hobby really how many of you know her Nobby a",
    "start": "122430",
    "end": "128298"
  },
  {
    "text": "few okay her Nobby is a game of trust and communication it's a collaborative",
    "start": "128299",
    "end": "133950"
  },
  {
    "text": "game I'm not going to go into all the rules and things but you're you trying to build something together and",
    "start": "133950",
    "end": "139380"
  },
  {
    "text": "you can see each other's pieces but not your own and you can give tiny tiny",
    "start": "139380",
    "end": "144990"
  },
  {
    "text": "limited information and you have to trust that everyone else is we're all",
    "start": "144990",
    "end": "151680"
  },
  {
    "text": "working to the same goals and the reason I mentioned this is I learnt an RB a few",
    "start": "151680",
    "end": "158190"
  },
  {
    "text": "weeks ago at code mash and it only struck me sort of ten minutes before giving this presentation for the first",
    "start": "158190",
    "end": "164220"
  },
  {
    "text": "time that her Nabi and versioning are intimately linked okay versioning is a game of trust and",
    "start": "164220",
    "end": "171840"
  },
  {
    "text": "communication I have a very small amount of information I can put in a version number at least you",
    "start": "171840",
    "end": "178470"
  },
  {
    "text": "I could put version 2.1 point 0 - the one where i fixed the bug that does this",
    "start": "178470",
    "end": "184110"
  },
  {
    "text": "but it's still preview because but I don't think anyone would use that so if we're using normal version numbers we",
    "start": "184110",
    "end": "190110"
  },
  {
    "text": "have a very limited amount of information but we have to trust each other that we're not going to screw each other over so that sort of goes back to",
    "start": "190110",
    "end": "199830"
  },
  {
    "text": "the be kind as well we are all in this collaboratively if you try to play versioning in a competitive way it's not",
    "start": "199830",
    "end": "206940"
  },
  {
    "text": "going to work out well for anyone so I",
    "start": "206940",
    "end": "212130"
  },
  {
    "text": "want to think somewhat high level at least for most of the talk out of",
    "start": "212130",
    "end": "218100"
  },
  {
    "text": "interest how many of you are dotnet developers ok good right that means I",
    "start": "218100",
    "end": "223739"
  },
  {
    "text": "have to speak relatively quickly so that I can talk about the diamond dependency problem in dotnet specifically but we're",
    "start": "223739",
    "end": "231570"
  },
  {
    "text": "not just going to talk about one kind of version so we're going to think about why we have versions at all how they're",
    "start": "231570",
    "end": "239160"
  },
  {
    "text": "very very contextual a bit about compatibility and all the joy of that we",
    "start": "239160",
    "end": "246660"
  },
  {
    "text": "will wonder after a while you know how many of you came this morning thinking",
    "start": "246660",
    "end": "251880"
  },
  {
    "text": "how is the world not collapsed yet ok a few of you hopefully as you leave you're",
    "start": "251880",
    "end": "257760"
  },
  {
    "text": "all be going how how is it all working it's a little bit like when you look at",
    "start": "257760",
    "end": "262950"
  },
  {
    "text": "a bicycle and think that's a very vertical thing and you're saying I need to just keep it vertical the whole time",
    "start": "262950",
    "end": "268950"
  },
  {
    "text": "that's never going to work and somehow this seems to have been the case for versioning in net and I'm going",
    "start": "268950",
    "end": "276990"
  },
  {
    "text": "to hopefully put forward some ways of improving things so starting with why we",
    "start": "276990",
    "end": "282330"
  },
  {
    "text": "have versioning at all I mentioned communication and versions are pretty much always some form of",
    "start": "282330",
    "end": "289500"
  },
  {
    "text": "communication representing almost a contract between different parties who",
    "start": "289500",
    "end": "295830"
  },
  {
    "text": "those parties are can vary immensely but there you're trying to give information",
    "start": "295830",
    "end": "301740"
  },
  {
    "text": "about something else through this version and the something",
    "start": "301740",
    "end": "307979"
  },
  {
    "text": "else can be multiple different things so we usually if you start saying version",
    "start": "307979",
    "end": "313919"
  },
  {
    "text": "people often think libraries because that's sort of the things that we consume and produce most that the",
    "start": "313919",
    "end": "320970"
  },
  {
    "text": "versions change the most but Mads and I were talking yesterday about c-sharp 8 and referring back to things that were",
    "start": "320970",
    "end": "327330"
  },
  {
    "text": "introduced in c-sharp seven and 7.1 and seven point two and thinking about c-sharp nine so clearly languages can be",
    "start": "327330",
    "end": "334289"
  },
  {
    "text": "versioned and platforms can be versioned I'll show you some of some of the dotnet",
    "start": "334289",
    "end": "339780"
  },
  {
    "text": "related version numbers at the moment books can be versioned which is a very nice segue to say the fourth edition of",
    "start": "339780",
    "end": "345960"
  },
  {
    "text": "c-sharp in depth is kind of hitting the printer's really really soon but I'm",
    "start": "345960",
    "end": "351330"
  },
  {
    "text": "communicating something in that in that sense that if you've got the third",
    "start": "351330",
    "end": "357539"
  },
  {
    "text": "edition the fourth edition is going to be different because it's not got the same version number if I said the fourth",
    "start": "357539",
    "end": "363389"
  },
  {
    "text": "edition was coming out and you bought it and it was exactly the same as the third edition you would feel treated cheated",
    "start": "363389",
    "end": "370700"
  },
  {
    "text": "you would have trusted me on something and I would have misled you you see what I mean that it is all about trust and",
    "start": "370700",
    "end": "377130"
  },
  {
    "text": "trying to communicate something these are all to do with change so broadly if",
    "start": "377130",
    "end": "384530"
  },
  {
    "text": "something doesn't need to ever change it doesn't need to be versioned you could",
    "start": "384530",
    "end": "390900"
  },
  {
    "text": "give it version one and it will always be version one and that's kind of boring so just don't bother so evolution is",
    "start": "390900",
    "end": "398700"
  },
  {
    "text": "clearly going to be part of why we have versioning at all",
    "start": "398700",
    "end": "403830"
  },
  {
    "text": "and in general the the aspects of how code can evolve and how all the aspects",
    "start": "403830",
    "end": "410280"
  },
  {
    "text": "of code the the many things that go together by the time you've got something running how those can all",
    "start": "410280",
    "end": "415590"
  },
  {
    "text": "evolve in parallel is something that we don't think about enough in general and",
    "start": "415590",
    "end": "421100"
  },
  {
    "text": "versioning is just one aspect of that and all of this is important because the",
    "start": "421100",
    "end": "426750"
  },
  {
    "text": "point of versioning within computing is generally so that we can have some kind",
    "start": "426750",
    "end": "431940"
  },
  {
    "text": "of predictability some kind of trust that if I smush together all of these 15",
    "start": "431940",
    "end": "438060"
  },
  {
    "text": "different things with 15 different versions they will work because I know that a different set of versions of the",
    "start": "438060",
    "end": "445740"
  },
  {
    "text": "same things worked and people have told me whether it's through semantic",
    "start": "445740",
    "end": "451110"
  },
  {
    "text": "versioning or something else that you given this set of versions works this",
    "start": "451110",
    "end": "456300"
  },
  {
    "text": "slightly different set of versions should work so I've talked about",
    "start": "456300",
    "end": "466410"
  },
  {
    "text": "versions a lot what do we know about versions we've actually got a fair amount of common ground here that we",
    "start": "466410",
    "end": "472050"
  },
  {
    "text": "haven't we don't tend to put into words so versions are almost always textual I",
    "start": "472050",
    "end": "477690"
  },
  {
    "text": "can't remember seeing any version that wasn't some form of text and usually in",
    "start": "477690",
    "end": "485610"
  },
  {
    "text": "my experience and this may well be different around the world it's usually ASCII and it may or may not be human",
    "start": "485610",
    "end": "494580"
  },
  {
    "text": "memorable so as an example of something that you could argue is actually binary rather than text take a git hash that is",
    "start": "494580",
    "end": "503160"
  },
  {
    "text": "a version of the code base or the repository it doesn't need to be code",
    "start": "503160",
    "end": "508280"
  },
  {
    "text": "that's a way of identifying this is what was in the repository at that point and",
    "start": "508280",
    "end": "514400"
  },
  {
    "text": "we happen to see it as a hash that's all in hex so it is textual and ASCII but",
    "start": "514400",
    "end": "520800"
  },
  {
    "text": "you could argue that's actually a binary version it's the the hashes raw bytes",
    "start": "520800",
    "end": "527120"
  },
  {
    "text": "versions may or may not be a form of identity and in many cases this is",
    "start": "527720",
    "end": "535890"
  },
  {
    "text": "absolutely desirable so libraries if you download no to time",
    "start": "535890",
    "end": "542220"
  },
  {
    "text": "and I'll refer to no to time many times it is not to what to get you all to start using it because I'm sure you're",
    "start": "542220",
    "end": "547980"
  },
  {
    "text": "all using it already but it's just a handy thing to have a concrete example",
    "start": "547980",
    "end": "553259"
  },
  {
    "text": "if you download Notre time 1.2.3 which is now years old today and then you",
    "start": "553259",
    "end": "560670"
  },
  {
    "text": "download 1.2.3 tomorrow you absolutely expect them to be exactly the same if",
    "start": "560670",
    "end": "569549"
  },
  {
    "text": "you talk to an API as in a Web API some",
    "start": "569549",
    "end": "574949"
  },
  {
    "text": "kind of web service and it says I am version 1 of this API do you expect it",
    "start": "574949",
    "end": "583230"
  },
  {
    "text": "to be exactly the same if you hit version 1 tomorrow can it return more",
    "start": "583230",
    "end": "588540"
  },
  {
    "text": "data can it accept more fields we'll talk a little bit about that later on but the point is that the context",
    "start": "588540",
    "end": "596040"
  },
  {
    "text": "matters and that identity isn't always as simple as it sounds",
    "start": "596040",
    "end": "603019"
  },
  {
    "text": "we've said that there usually text and in one particular case they're often",
    "start": "604069",
    "end": "611309"
  },
  {
    "text": "numbers and a sequence of numbers so semantic versioning in particular gives",
    "start": "611309",
    "end": "618779"
  },
  {
    "text": "us a partial ordering and it's only partial so if I say which comes first",
    "start": "618779",
    "end": "624269"
  },
  {
    "text": "one point one point zero or one point two point zero it's pretty obvious which",
    "start": "624269",
    "end": "629309"
  },
  {
    "text": "of those was released first if I ask you which was released first out of one point one point one and one point two",
    "start": "629309",
    "end": "636419"
  },
  {
    "text": "point one who knows so it is only partial and you shouldn't infer more",
    "start": "636419",
    "end": "644519"
  },
  {
    "text": "than you can if I give you a git commit commit hash if I give you two of those",
    "start": "644519",
    "end": "650699"
  },
  {
    "text": "which comes first it doesn't provide enough context in itself you need to go to another system",
    "start": "650699",
    "end": "656669"
  },
  {
    "text": "git will be able to show you when each of them was committed and maybe one is an ancestor of the other maybe they are",
    "start": "656669",
    "end": "662869"
  },
  {
    "text": "sort of siblings and don't have a common ancestor at all or sorry neither is a common ancestor of the other",
    "start": "662869",
    "end": "670730"
  },
  {
    "text": "so there are all these aspects of versions that we may have just taken for",
    "start": "671060",
    "end": "676530"
  },
  {
    "text": "granted before I haven't told you anything new yet I suspect and I may",
    "start": "676530",
    "end": "682440"
  },
  {
    "text": "well not do so for most of this talk and that's fine I can still achieve my goal",
    "start": "682440",
    "end": "687870"
  },
  {
    "text": "without you learning anything new because my goal is that you think about versioning more okay there are also",
    "start": "687870",
    "end": "698720"
  },
  {
    "text": "potential for aliases like I'm not a Linux hardcore person but I gather that",
    "start": "698720",
    "end": "706200"
  },
  {
    "text": "Debbie and 9 is also called stretch and I know there are various other aliases in various other flavors of Linux and",
    "start": "706200",
    "end": "713850"
  },
  {
    "text": "there can also be marketing names like Visual Studio 2017 was Visual Studio 15",
    "start": "713850",
    "end": "719580"
  },
  {
    "text": "and Visual Studio 2019 is Visual Studio 16 and whereas as time is advancing",
    "start": "719580",
    "end": "727320"
  },
  {
    "text": "faster than the version number we're okay when it was sort of Visual Studio 13 was in 2012 I think or maybe that was",
    "start": "727320",
    "end": "737100"
  },
  {
    "text": "vs 2013 they were a little bit close together and easy to confuse but that's",
    "start": "737100",
    "end": "742980"
  },
  {
    "text": "the difference between a marketing name and the the version number that we would",
    "start": "742980",
    "end": "748170"
  },
  {
    "text": "use for anything where we want to be kind of reliable and then you've got marketing names that end up being really",
    "start": "748170",
    "end": "755040"
  },
  {
    "text": "confusing like Java 6 versus Java 1.6 and goodness knows what's going on there",
    "start": "755040",
    "end": "762199"
  },
  {
    "text": "so I've said about some confusing version numbers here are some more so",
    "start": "762650",
    "end": "767940"
  },
  {
    "text": "this is when I put together the slide this slide and I'll probably never update it because it doesn't really",
    "start": "767940",
    "end": "773880"
  },
  {
    "text": "matter how current it is but this was current at one particular time so we had",
    "start": "773880",
    "end": "779070"
  },
  {
    "text": "dotnet the desktop framework for point 7.2 and lots of numbers for dotnet core",
    "start": "779070",
    "end": "787230"
  },
  {
    "text": "so you download an SDK that was to point to point 200 that provided to point to",
    "start": "787230",
    "end": "795180"
  },
  {
    "text": "point 1 is the runtime and that runtime implements dotnet standard 2.0",
    "start": "795180",
    "end": "802430"
  },
  {
    "text": "and that sdk has the version of the compiler Rozlyn or the Microsoft's eShop",
    "start": "802529",
    "end": "808259"
  },
  {
    "text": "compiler implementation Rozlyn that supports c-sharp 7.3 and if you've",
    "start": "808259",
    "end": "814439"
  },
  {
    "text": "installed Visual Studio 2017 and the current version that was 15.9 then that",
    "start": "814439",
    "end": "819839"
  },
  {
    "text": "will work well with all of this so when I say that we need to know how versions",
    "start": "819839",
    "end": "826410"
  },
  {
    "text": "work together as well as how they evolve independently this is the sort of thing I'm talking about and here we've got",
    "start": "826410",
    "end": "833189"
  },
  {
    "text": "several different versioning schemes within just one slide talking about one",
    "start": "833189",
    "end": "838980"
  },
  {
    "text": "family of products the.net core SDK version number is particularly",
    "start": "838980",
    "end": "845160"
  },
  {
    "text": "interesting because of the way that Microsoft has sort of decided to have",
    "start": "845160",
    "end": "850350"
  },
  {
    "text": "its sort of four numbers rather than three so there could be a two point two",
    "start": "850350",
    "end": "856259"
  },
  {
    "text": "point 201 which you could sort of think of as two point two point two point one",
    "start": "856259",
    "end": "861439"
  },
  {
    "text": "and there's a document explaining why they're doing that and what everything",
    "start": "861439",
    "end": "867750"
  },
  {
    "text": "means and that's a really good thing and it doesn't matter too much to me at",
    "start": "867750",
    "end": "872879"
  },
  {
    "text": "least that it's not a very familiar versioning scheme if you read the",
    "start": "872879",
    "end": "877920"
  },
  {
    "text": "documentation you will know what it means you will be able to make predictions about what will be in a",
    "start": "877920",
    "end": "883230"
  },
  {
    "text": "particular version compared with other versions another example of the same",
    "start": "883230",
    "end": "889439"
  },
  {
    "text": "sort of thing the being deliberate about version numbers is this business about",
    "start": "889439",
    "end": "895709"
  },
  {
    "text": "dotnet standard 2.0 I was in a conference call after several emails",
    "start": "895709",
    "end": "902149"
  },
  {
    "text": "around what we should call the next version of.net standard that's the",
    "start": "902149",
    "end": "908819"
  },
  {
    "text": "version that will ship with dotnet core 3.0 and be supported by 3.0 and not be",
    "start": "908819",
    "end": "917279"
  },
  {
    "text": "supported by dotnet core 2.0 2.1 or 2.2 I haven't yet heard about the dotnet",
    "start": "917279",
    "end": "922920"
  },
  {
    "text": "core 2.3 it could happen who knows so we",
    "start": "922920",
    "end": "927959"
  },
  {
    "text": "considered dotnet standard 3.0 dotnet",
    "start": "927959",
    "end": "934110"
  },
  {
    "text": "standard 2019 dotnet standard a dotnet standard 2.1 thought net standard 2.5",
    "start": "934110",
    "end": "942050"
  },
  {
    "text": "and we looked at the pros and cons of each of these and I was in this",
    "start": "942050",
    "end": "948509"
  },
  {
    "text": "conference call for an hour and had previously responded on emails but this was actually the culmination of a lot of",
    "start": "948509",
    "end": "955350"
  },
  {
    "text": "work that Kathleen dollar and Mo and lots of people have been doing to try to",
    "start": "955350",
    "end": "960779"
  },
  {
    "text": "work out all these pros and cons and I offer this to you as a model of Industry",
    "start": "960779",
    "end": "966750"
  },
  {
    "text": "doing it right possibly coming to a different conclusion than you would have come to because it's kind of",
    "start": "966750",
    "end": "974670"
  },
  {
    "text": "counterintuitive that net core 2.1 doesn't support net standard 2.1 when",
    "start": "974670",
    "end": "980790"
  },
  {
    "text": "you know it was true for dotnet called 2.0 supported dotnet standard 2.0 but",
    "start": "980790",
    "end": "987720"
  },
  {
    "text": "part of the reason for choosing 2.1 run 3.0 is to break that tie within",
    "start": "987720",
    "end": "993990"
  },
  {
    "text": "developers minds and the sooner we do that the better if we have dotnet core 3.0 supports dotnet standard 3.0 then if",
    "start": "993990",
    "end": "1001160"
  },
  {
    "text": "you haven't already got the idea that those are tied together you would probably get the idea and then when",
    "start": "1001160",
    "end": "1006410"
  },
  {
    "text": "things change later on maybe in five years time dotnet core won't be the",
    "start": "1006410",
    "end": "1011449"
  },
  {
    "text": "primary implementation of dotnet standard there may be some may be a",
    "start": "1011449",
    "end": "1017689"
  },
  {
    "text": "company that one of you will start will come up with a completely new implementation and that will be",
    "start": "1017689",
    "end": "1023809"
  },
  {
    "text": "absolutely fine and this sort of goes back to all Scott's demos earlier on so",
    "start": "1023809",
    "end": "1030350"
  },
  {
    "text": "we don't want it to be tied to dotnet core so we break people's mental model",
    "start": "1030350",
    "end": "1036770"
  },
  {
    "text": "as early as we can and all of this is a great example of people actually taking",
    "start": "1036770",
    "end": "1041808"
  },
  {
    "text": "the time to think and taking the time to say what am i communicating where am i",
    "start": "1041809",
    "end": "1047030"
  },
  {
    "text": "if I've got to break trust with people because they've assumed things that maybe they shouldn't have assumed anyway",
    "start": "1047030",
    "end": "1053030"
  },
  {
    "text": "but do because we're human what can we do so in some ways this is the key slide",
    "start": "1053030",
    "end": "1059120"
  },
  {
    "text": "as the key example of what I want all of you to do which is go away and anything",
    "start": "1059120",
    "end": "1064130"
  },
  {
    "text": "that you are versioning think about how your it and the impact let's go back to",
    "start": "1064130",
    "end": "1072470"
  },
  {
    "text": "thinking about context so I've mentioned some things that can be versioned",
    "start": "1072470",
    "end": "1078590"
  },
  {
    "text": "already books and all of the things on the previous slides applications office",
    "start": "1078590",
    "end": "1086000"
  },
  {
    "text": "can be versioned operating systems can be versioned languages platforms libraries protocols many levels so yeah",
    "start": "1086000",
    "end": "1095390"
  },
  {
    "text": "we've got HTTP two layered on top of I've no idea does anyone happen to know",
    "start": "1095390",
    "end": "1100790"
  },
  {
    "text": "whether TCP and tcp/ip have versions beyond you know we know the address",
    "start": "1100790",
    "end": "1108200"
  },
  {
    "text": "versions we're mostly still on for even though we should have moved to six but",
    "start": "1108200",
    "end": "1113600"
  },
  {
    "text": "are there separate versions of IP that evolve over time as well I honestly",
    "start": "1113600",
    "end": "1119270"
  },
  {
    "text": "don't know but all of these certainly can be you know we we know about pop3 imap4 etc and things that are built on",
    "start": "1119270",
    "end": "1127309"
  },
  {
    "text": "top of those protocols so where you have API so the the Google Cloud Storage API",
    "start": "1127309",
    "end": "1133840"
  },
  {
    "text": "currently on version one as far as I'm aware and at some point maybe there'll",
    "start": "1133840",
    "end": "1138860"
  },
  {
    "text": "be a version two built on top of other protocols with their own versions and",
    "start": "1138860",
    "end": "1148690"
  },
  {
    "text": "beyond things that are published we work with versions every day within source",
    "start": "1148690",
    "end": "1153860"
  },
  {
    "text": "control you know what is the current version what what's the last commit of a particular file or even a particular",
    "start": "1153860",
    "end": "1160490"
  },
  {
    "text": "resource you know this particular slide deck I did in PowerPoint the one this",
    "start": "1160490",
    "end": "1166760"
  },
  {
    "text": "afternoon Jennifer and I will be presenting we've done in Google slides and it has a version history so that's",
    "start": "1166760",
    "end": "1173210"
  },
  {
    "text": "versioned as well and when you're designing a versioning scheme",
    "start": "1173210",
    "end": "1178490"
  },
  {
    "text": "you must not assume that the versioning scheme you've used successfully for many",
    "start": "1178490",
    "end": "1184640"
  },
  {
    "text": "things in the past applies to things in the future that are different so for",
    "start": "1184640",
    "end": "1192169"
  },
  {
    "text": "example you know Mads is here designing c-sharp 9 if math said Jo what everyone",
    "start": "1192169",
    "end": "1197780"
  },
  {
    "text": "in dotnet uses semantic versioning therefore if I'm building c-sharp 9 I can break everyone's code it's fine we",
    "start": "1197780",
    "end": "1204559"
  },
  {
    "text": "don't make any process that promises about backward compatibility we could steal classes by default yeah it doesn't",
    "start": "1204559",
    "end": "1212419"
  },
  {
    "text": "work you've got to know the context because that will change who's using",
    "start": "1212419",
    "end": "1217760"
  },
  {
    "text": "these versions and what you're trying to communicate with them and the impact of breaking things you also need to know",
    "start": "1217760",
    "end": "1226700"
  },
  {
    "text": "how your dependencies so I've mostly been talking about the versions that we",
    "start": "1226700",
    "end": "1232159"
  },
  {
    "text": "publish but the reverse is true as well I mentioned that there's a doc explaining the SDK version where a doc",
    "start": "1232159",
    "end": "1238700"
  },
  {
    "text": "explaining net standard versioning and I don't know whether as doc explaining c-sharp versioning but mostly it's all",
    "start": "1238700",
    "end": "1244460"
  },
  {
    "text": "backward compatible so it's kind of okay but you need to understand what people",
    "start": "1244460",
    "end": "1249770"
  },
  {
    "text": "are trying to tell you when they publish versions and know that that won't always",
    "start": "1249770",
    "end": "1255620"
  },
  {
    "text": "mean the same thing for exactly the same reason is you need to think of a new versioning scheme each time here it can",
    "start": "1255620",
    "end": "1261770"
  },
  {
    "text": "be an existing one but you need to reconsider it each time you're doing something in a different context every",
    "start": "1261770",
    "end": "1268580"
  },
  {
    "text": "time you're consuming things from different contexts you need to ask what people are telling you so let's give in",
    "start": "1268580",
    "end": "1275600"
  },
  {
    "text": "to one particular versioning scheme this is probably amongst ourselves the most",
    "start": "1275600",
    "end": "1281650"
  },
  {
    "text": "well understood semantic versioning and we'll think",
    "start": "1281650",
    "end": "1288230"
  },
  {
    "text": "particularly in the context of libraries and probably for the remaining 38",
    "start": "1288230",
    "end": "1293780"
  },
  {
    "text": "minutes we'll talk about libraries for a while and their network API s-- for a",
    "start": "1293780",
    "end": "1299030"
  },
  {
    "text": "while and these are just two examples that but they're probably the ones that affect most of us the most",
    "start": "1299030",
    "end": "1305650"
  },
  {
    "text": "so semantic versioning we have a major number a minor number and a patch number",
    "start": "1305650",
    "end": "1311510"
  },
  {
    "text": "and we can have something saying it's a pre-release and it's interesting that",
    "start": "1311510",
    "end": "1316549"
  },
  {
    "text": "there are multiple ways of showing a pre-release because this is a ga version",
    "start": "1316549",
    "end": "1321650"
  },
  {
    "text": "if it were zero point two point three that would be a pre-release if it's one point two point three - beta",
    "start": "1321650",
    "end": "1327169"
  },
  {
    "text": "one that's a pre-release I'm not sure whether it's really a good idea to have",
    "start": "1327169",
    "end": "1333080"
  },
  {
    "text": "zero point something means something differently yeah what version should I",
    "start": "1333080",
    "end": "1338360"
  },
  {
    "text": "use before the first release of one I'll use zero point something what version number should I use before the release",
    "start": "1338360",
    "end": "1344360"
  },
  {
    "text": "of two I'll use I can't use one I'll use two point zero point zero beta 1 and we",
    "start": "1344360",
    "end": "1349670"
  },
  {
    "text": "have inconsistencies but yeah it's backwardly compatible with what people",
    "start": "1349670",
    "end": "1355640"
  },
  {
    "text": "have been doing in a somewhat at hoc way for years and years and years so to",
    "start": "1355640",
    "end": "1362110"
  },
  {
    "text": "teach all of your grandmother's to suck eggs so to speak if you make a breaking",
    "start": "1362110",
    "end": "1368450"
  },
  {
    "text": "change you bump the major version number if you make a non-breaking change that",
    "start": "1368450",
    "end": "1375050"
  },
  {
    "text": "is backward compatible you bump the minor version number and if you make a",
    "start": "1375050",
    "end": "1382210"
  },
  {
    "text": "change that is backward and forward compatible you bump the patch number now",
    "start": "1382210",
    "end": "1388490"
  },
  {
    "text": "what do I mean by backward and forward compatible I tend to think of what can I safely do if I'm consuming a library if",
    "start": "1388490",
    "end": "1397850"
  },
  {
    "text": "I am currently if I have code that I believe is okay using 1.1.1 then I can",
    "start": "1397850",
    "end": "1407930"
  },
  {
    "text": "safely move to one point two point three and everything should still work because it's backward compatible one point two",
    "start": "1407930",
    "end": "1415700"
  },
  {
    "text": "point three will say is ordered later than one point one point one even if",
    "start": "1415700",
    "end": "1421850"
  },
  {
    "text": "they didn't come out chronologically that way and so that should be fine the reverse",
    "start": "1421850",
    "end": "1429080"
  },
  {
    "text": "is not true I cannot go from one point two point three back to one point one point one and expect that my code will still build",
    "start": "1429080",
    "end": "1435950"
  },
  {
    "text": "or execute if you're in an environment that doesn't have a separate build step",
    "start": "1435950",
    "end": "1442040"
  },
  {
    "text": "because maybe there's a new feature in one point two that wasn't in one point one my code uses it so if I try to",
    "start": "1442040",
    "end": "1448730"
  },
  {
    "text": "downgrade to one point one bang that's fine that's not the case for patches",
    "start": "1448730",
    "end": "1455060"
  },
  {
    "text": "that should be backward and forward compatible if I'm using one point two",
    "start": "1455060",
    "end": "1460280"
  },
  {
    "text": "point three I should be able to go back to one point two point two everything",
    "start": "1460280",
    "end": "1466640"
  },
  {
    "text": "should still build if you're in a build kind of environment and the only changes",
    "start": "1466640",
    "end": "1472460"
  },
  {
    "text": "you know there must be some reason for having a new version number there must be something changed but it",
    "start": "1472460",
    "end": "1478130"
  },
  {
    "text": "can only be implementation details so there can be some kind of bug that I fixed or that the library provider has",
    "start": "1478130",
    "end": "1485480"
  },
  {
    "text": "fixed rather and I might see that change so it's reasonable for my application to",
    "start": "1485480",
    "end": "1490610"
  },
  {
    "text": "start failing because it turned out I was relying on something that was fixed in 1.2.3 but it should definitely still",
    "start": "1490610",
    "end": "1497930"
  },
  {
    "text": "build and nothing else should have changed now there's a problem in",
    "start": "1497930",
    "end": "1506150"
  },
  {
    "text": "everything I've just described does",
    "start": "1506150",
    "end": "1511280"
  },
  {
    "text": "anyone want to venture a guess as to what I'm going on to next Oh either",
    "start": "1511280",
    "end": "1518780"
  },
  {
    "text": "you're all shy or haven't thought about this quite enough is I've talked about compatibility and not breaking people",
    "start": "1518780",
    "end": "1526360"
  },
  {
    "text": "and I don't think we really understand what that means we sort of think we do",
    "start": "1526360",
    "end": "1533660"
  },
  {
    "text": "um I've kind of explained it that if I have code that builds against 1.1.1 it",
    "start": "1533660",
    "end": "1540290"
  },
  {
    "text": "should still build against 1.2.3 or let's just be simpler one point one code",
    "start": "1540290",
    "end": "1546680"
  },
  {
    "text": "builds should build in one point two let's forget about the patch things what",
    "start": "1546680",
    "end": "1552110"
  },
  {
    "text": "does that mean I can do let's stick with c-sharp for the moment what can I do",
    "start": "1552110",
    "end": "1557560"
  },
  {
    "text": "between one point one and one point two if I'm creating no design one point two",
    "start": "1557560",
    "end": "1563350"
  },
  {
    "text": "what can I do that's going to be compatible at a class nope not if I'm",
    "start": "1563350",
    "end": "1571460"
  },
  {
    "text": "going to be really strict about this I assert that I could you know playing",
    "start": "1571460",
    "end": "1577310"
  },
  {
    "text": "devil's advocate as a as a user I could create an application that builds",
    "start": "1577310",
    "end": "1583640"
  },
  {
    "text": "against one point one and then you add a class and my code no longer net no longer builds because maybe I've got a",
    "start": "1583640",
    "end": "1589160"
  },
  {
    "text": "class with the same name as the one that you've added and I've got using directives for both namespaces and",
    "start": "1589160",
    "end": "1594560"
  },
  {
    "text": "suddenly things are ambiguous okay so that's a fairly big new way of doing features as how",
    "start": "1594560",
    "end": "1600740"
  },
  {
    "text": "what else might I be able to do that slightly smaller yeah optional",
    "start": "1600740",
    "end": "1606830"
  },
  {
    "text": "parameters what about optional premises",
    "start": "1606830",
    "end": "1610630"
  },
  {
    "text": "adding a new parameter so to an existing method I've got one method that's foo",
    "start": "1613600",
    "end": "1619160"
  },
  {
    "text": "and it takes int X and you're saying I can change that from foo int X to foo",
    "start": "1619160",
    "end": "1624680"
  },
  {
    "text": "int x equals x in y equals zero right you've skipped on two slides in fact",
    "start": "1624680",
    "end": "1632590"
  },
  {
    "text": "because that so to some extent that is",
    "start": "1632590",
    "end": "1637970"
  },
  {
    "text": "source compatible it's definitely not binary compatible if someone has built",
    "start": "1637970",
    "end": "1643340"
  },
  {
    "text": "code so say I have built my application that relies on foo int X and I've got",
    "start": "1643340",
    "end": "1650870"
  },
  {
    "text": "that executable already built and then I just plunk one-point-two DLL over the",
    "start": "1650870",
    "end": "1657620"
  },
  {
    "text": "top and try to run it it'll say well no I was expecting something new optional parameters are a compile time thing I",
    "start": "1657620",
    "end": "1664310"
  },
  {
    "text": "was expecting to find a method with one parameter there is no such method anymore bang okay maybe you say that's",
    "start": "1664310",
    "end": "1671030"
  },
  {
    "text": "fine I will make it just i'll only care about source compatibility which you may",
    "start": "1671030",
    "end": "1677780"
  },
  {
    "text": "well only compare about care about source compatibility and this is where",
    "start": "1677780",
    "end": "1683780"
  },
  {
    "text": "context matters again I'll come back to that in a sec when I finished this example but even source compatibility",
    "start": "1683780",
    "end": "1689630"
  },
  {
    "text": "isn't enough there because suppose I have a method accepting an action of int",
    "start": "1689630",
    "end": "1696340"
  },
  {
    "text": "previously I could have done a method group conversion of that method from the library and passed that as an argument",
    "start": "1696340",
    "end": "1703280"
  },
  {
    "text": "to the the method that accepts an action of it I can't do that when I've got only",
    "start": "1703280",
    "end": "1709640"
  },
  {
    "text": "a method with two parameters so maybe you say I'll do overloading instead I'll",
    "start": "1709640",
    "end": "1716870"
  },
  {
    "text": "keep my foo that takes an int and add a foo that takes an int X int Y and that",
    "start": "1716870",
    "end": "1723890"
  },
  {
    "text": "sounds good that gets round that particular problem it then causes another problem if you try to do a",
    "start": "1723890",
    "end": "1729740"
  },
  {
    "text": "methyl group conversion and there are two methods one accepts action int and what accept action int int and",
    "start": "1729740",
    "end": "1737390"
  },
  {
    "text": "now you've got an ambiguous overload resolution problem so I contend that",
    "start": "1737390",
    "end": "1743960"
  },
  {
    "text": "almost anything and math suggested something yesterday that may just about",
    "start": "1743960",
    "end": "1750170"
  },
  {
    "text": "work but I suspect I can break it because I usually can I contend that any",
    "start": "1750170",
    "end": "1756500"
  },
  {
    "text": "public API change you make could break someone if they tried hard enough to be",
    "start": "1756500",
    "end": "1763010"
  },
  {
    "text": "broken okay and yeah if if you were to give some cast iron guarantee no I will",
    "start": "1763010",
    "end": "1770300"
  },
  {
    "text": "pay you five million pounds if if you are broken by this upgrade well then",
    "start": "1770300",
    "end": "1776840"
  },
  {
    "text": "it's going to be quite easy for someone to claim that five million pounds adding a method well I had an extension method",
    "start": "1776840",
    "end": "1783470"
  },
  {
    "text": "that was being called before and now it's not and Matt is claiming that adding a property might be safe so at",
    "start": "1783470",
    "end": "1791420"
  },
  {
    "text": "some point it's on my stack to traitor oh no reflection I I think it's reasonable to ignore reflection if you",
    "start": "1791420",
    "end": "1798200"
  },
  {
    "text": "are using reflection and peeking up my private fields then you know if I were",
    "start": "1798200",
    "end": "1805340"
  },
  {
    "text": "if I were writing this I I claim that I won't break anyone I would definitely put something in saying reflection",
    "start": "1805340",
    "end": "1812360"
  },
  {
    "text": "doesn't count because that really is what's intended to be an implementation",
    "start": "1812360",
    "end": "1818330"
  },
  {
    "text": "detail so many of you I'm sure you some",
    "start": "1818330",
    "end": "1825020"
  },
  {
    "text": "oh sorry is that another thing that might be a if you have another method",
    "start": "1825020",
    "end": "1832580"
  },
  {
    "text": "with the same name as the property that was added that's exactly what I'll be trying and depending on the lookup rules",
    "start": "1832580",
    "end": "1840740"
  },
  {
    "text": "apparently there's cunning things to change that depending on whether you're",
    "start": "1840740",
    "end": "1846110"
  },
  {
    "text": "trying to invoke things but if the property is itself a delegate type that could be invoked then I think it'll get",
    "start": "1846110",
    "end": "1852890"
  },
  {
    "text": "weird as I keep saying my life is full of corner cases I'm sure I'll find one",
    "start": "1852890",
    "end": "1859310"
  },
  {
    "text": "somewhere and so that means if we were to be really strict about semantic",
    "start": "1859310",
    "end": "1864350"
  },
  {
    "text": "versioning we would only have at one point oh and one point 0.1 and one point 0.2 we can do patches but we",
    "start": "1864350",
    "end": "1871620"
  },
  {
    "text": "could never have another minor version does that sound like a the world that",
    "start": "1871620",
    "end": "1877050"
  },
  {
    "text": "you want to live in no because taking a new major version is a big deal you are saying trust me it",
    "start": "1877050",
    "end": "1886980"
  },
  {
    "text": "might break this is a scary thing you probably don't want to do it unless you really really have to expect some pain",
    "start": "1886980",
    "end": "1894980"
  },
  {
    "text": "so instead we're in a situation where we know that something we have treated as",
    "start": "1894980",
    "end": "1901230"
  },
  {
    "text": "black or white as a boolean toggle no is this binary compatible is this source compatible really isn't and that's the",
    "start": "1901230",
    "end": "1910980"
  },
  {
    "text": "first thing that I think we should be trying to change as an industry and it will be very definitely language",
    "start": "1910980",
    "end": "1916560"
  },
  {
    "text": "sensitive it could well be that in Java or in JavaScript or some other language that there are all kinds of non breaking",
    "start": "1916560",
    "end": "1923610"
  },
  {
    "text": "changes and there could be a bunch of theoretically breaking changes that no one's actually going to worry about but",
    "start": "1923610",
    "end": "1932640"
  },
  {
    "text": "I think we should do better if we start caring about versioning more we will do better in terms of tooling and say okay",
    "start": "1932640",
    "end": "1939540"
  },
  {
    "text": "I'm going to I want to publish this as one point one point oh is it actually",
    "start": "1939540",
    "end": "1946200"
  },
  {
    "text": "compatible according to my rules that could then be machine consumable in some",
    "start": "1946200",
    "end": "1952410"
  },
  {
    "text": "way both at your producer side saying I",
    "start": "1952410",
    "end": "1957420"
  },
  {
    "text": "want to check it and then anyone else can see right what standards are you holding yourself up to in terms of",
    "start": "1957420",
    "end": "1962850"
  },
  {
    "text": "compatibility",
    "start": "1962850",
    "end": "1965480"
  },
  {
    "text": "that's one simple example where we were talking about a single library what",
    "start": "1971690",
    "end": "1979010"
  },
  {
    "text": "happens if that library has dependencies what happens if that library wants to",
    "start": "1979010",
    "end": "1984800"
  },
  {
    "text": "take a new dependency hands up those who think so say no to time notice time may",
    "start": "1984800",
    "end": "1993290"
  },
  {
    "text": "indeed start to take your dependency on Microsoft dot dot X tensions or",
    "start": "1993290",
    "end": "1998330"
  },
  {
    "text": "abstractions or whatever it is okay hands up those of you who think that I can do that in a patch version no one",
    "start": "1998330",
    "end": "2006820"
  },
  {
    "text": "hands up those of you who think I can do it in a minor version just a couple and",
    "start": "2006820",
    "end": "2012430"
  },
  {
    "text": "major version ok most out of people who voted major version was the biggest one",
    "start": "2012430",
    "end": "2018910"
  },
  {
    "text": "right I would probably go with major in",
    "start": "2018910",
    "end": "2024160"
  },
  {
    "text": "that case would it make any difference if this was actually a brand-new library",
    "start": "2024160",
    "end": "2031150"
  },
  {
    "text": "that no one else could have had dependencies on it's a gray area and",
    "start": "2031150",
    "end": "2037870"
  },
  {
    "text": "we'll get into why that is in a bit suppose I have a dependency on Microsoft",
    "start": "2037870",
    "end": "2044290"
  },
  {
    "text": "extensions logging version I have no idea what version it's actually at but suppose I've got a dependency on 1.2 and",
    "start": "2044290",
    "end": "2051310"
  },
  {
    "text": "I want to upgrade that dependency to one point two point one can I do that in a",
    "start": "2051310",
    "end": "2057250"
  },
  {
    "text": "patch bump of no time minor bumper no",
    "start": "2057250",
    "end": "2062530"
  },
  {
    "text": "time and does that require a major bump of node assignment ok roughly equal and",
    "start": "2062530",
    "end": "2068980"
  },
  {
    "text": "people didn't want to commit which is absolutely fine I would say patch in",
    "start": "2068980",
    "end": "2075100"
  },
  {
    "text": "that case I'm sort of propagating the the trust that I have in the Microsoft",
    "start": "2075100",
    "end": "2081429"
  },
  {
    "text": "folks saying oh we haven't actually broken the public API here so I'm saying well I haven't broken the public API I",
    "start": "2081429",
    "end": "2088000"
  },
  {
    "text": "exposed transitively what about if I take a new minor version of Microsoft",
    "start": "2088000",
    "end": "2094690"
  },
  {
    "text": "abstractions logging is that a patch version no I'm seeing a few nodes in a",
    "start": "2094690",
    "end": "2100540"
  },
  {
    "text": "few hands is it a minor version yes and is it a major version a couple and of course the answer is",
    "start": "2100540",
    "end": "2109990"
  },
  {
    "text": "there's no single right answer here I would tend to aside from anything else because it's really easy to remember say",
    "start": "2109990",
    "end": "2116440"
  },
  {
    "text": "if you're taking a new major version you bump your major version if you're taking a new minor version you bump your mind",
    "start": "2116440",
    "end": "2121869"
  },
  {
    "text": "version if you're taking a patch you bump your patch and taking a new dependency is effectively going from",
    "start": "2121869",
    "end": "2127750"
  },
  {
    "text": "version zero to version whatever it is that you accept so that would typically",
    "start": "2127750",
    "end": "2132910"
  },
  {
    "text": "be a major version if you're taking a new dependency on a library that you are",
    "start": "2132910",
    "end": "2138460"
  },
  {
    "text": "producing yeah that's really tricky because you've got a workout and this is a thought process that we go",
    "start": "2138460",
    "end": "2145119"
  },
  {
    "text": "through in my team producing the dotnet client libraries for Google cloud",
    "start": "2145119",
    "end": "2150760"
  },
  {
    "text": "platform services we go through a thought experiment of right if I do this",
    "start": "2150760",
    "end": "2155800"
  },
  {
    "text": "in a particular way who could it break and you can imagine again just like with",
    "start": "2155800",
    "end": "2164980"
  },
  {
    "text": "the the c-sharp specific code examples you can imagine I have this customer who",
    "start": "2164980",
    "end": "2172020"
  },
  {
    "text": "adopts this set of versions and then they update to my new version do they",
    "start": "2172020",
    "end": "2181090"
  },
  {
    "text": "get broken or not and if they get broken then maybe I should bump it up by a",
    "start": "2181090",
    "end": "2186280"
  },
  {
    "text": "major version but it ends up getting silly so suppose I'm suppose I have a",
    "start": "2186280",
    "end": "2192880"
  },
  {
    "text": "new off library within the Google API so and this is something that we're considering and this is absolutely a",
    "start": "2192880",
    "end": "2198040"
  },
  {
    "text": "concrete example slightly simplified but concrete example so we have a GAC's",
    "start": "2198040",
    "end": "2203770"
  },
  {
    "text": "library which is common Google API extensions we're at 2.5 of gacks",
    "start": "2203770",
    "end": "2210580"
  },
  {
    "text": "we would like to introduce a new off library to get rid of our old off library dependencies that end up",
    "start": "2210580",
    "end": "2216580"
  },
  {
    "text": "depending on a bunch of stuff we don't want to depend on so I will create a",
    "start": "2216580",
    "end": "2221859"
  },
  {
    "text": "Google dot off for the sake of convenience 1.0 in the new version of",
    "start": "2221859",
    "end": "2228280"
  },
  {
    "text": "gaxx you know by what I've said before it should be gapps 3.0 that takes dependency on Google auth 1.0 but",
    "start": "2228280",
    "end": "2236220"
  },
  {
    "text": "actually who could possibly be broken by an dependency on a library that didn't exist well in theory in several years",
    "start": "2236220",
    "end": "2244660"
  },
  {
    "text": "time we might have a Google door off 2.0 and people could have been depending on",
    "start": "2244660",
    "end": "2249880"
  },
  {
    "text": "a really old version of gaxx cax 2.5 and google door off 2.0 and so updating to",
    "start": "2249880",
    "end": "2256990"
  },
  {
    "text": "GAX 2.6 that depends on off 1.0 could break them or break dax break their",
    "start": "2256990",
    "end": "2265510"
  },
  {
    "text": "dependency on gax because gaxx 2.6 depends on something in 1.0 that's broken in 2.0 i don't think that's going",
    "start": "2265510",
    "end": "2274180"
  },
  {
    "text": "to happen though i think anyone who takes a far distant future dependency on",
    "start": "2274180",
    "end": "2280450"
  },
  {
    "text": "earth is living in the far distant future and wouldn't have a really old dependency on GAX and i realized that",
    "start": "2280450",
    "end": "2288040"
  },
  {
    "text": "having a slide with actual concrete examples might have made this easier to follow but you're all very smart people",
    "start": "2288040",
    "end": "2294900"
  },
  {
    "text": "so we've said that when we do that eventually that's just gonna be a minor boot boost because we thought about it",
    "start": "2294900",
    "end": "2302980"
  },
  {
    "text": "and we have considered these cases and we're acting in good faith and we know",
    "start": "2302980",
    "end": "2308950"
  },
  {
    "text": "that people are trusting us and hopefully that they'll be able to get in touch if things go wrong I mentioned",
    "start": "2308950",
    "end": "2316980"
  },
  {
    "text": "contexts earlier on and how that affects you how you version thing X depends upon",
    "start": "2316980",
    "end": "2324910"
  },
  {
    "text": "on what thing X is and that a library is different to a language there's more to",
    "start": "2324910",
    "end": "2331330"
  },
  {
    "text": "context than that because there's knowing how the thing is going to be used so if you are writing a library how",
    "start": "2331330",
    "end": "2337930"
  },
  {
    "text": "many of you write libraries that are only used within your own company lots",
    "start": "2337930",
    "end": "2343390"
  },
  {
    "text": "right now at Google we build from head as in if I commit a change to a library",
    "start": "2343390",
    "end": "2350619"
  },
  {
    "text": "everyone starts using that next time they build and that means I can do something without we often don't have",
    "start": "2350619",
    "end": "2359290"
  },
  {
    "text": "explicit versioning it's just well Pinder this particular commit number effectively things were working means I",
    "start": "2359290",
    "end": "2367690"
  },
  {
    "text": "can do something I would never dream of doing a node a time between major in a major version I can remove a method",
    "start": "2367690",
    "end": "2374859"
  },
  {
    "text": "shock because I can see all the code that could possibly call it it's like it",
    "start": "2374859",
    "end": "2380720"
  },
  {
    "text": "was all internal within one assembly in c-sharp and that's an awesome situation",
    "start": "2380720",
    "end": "2387589"
  },
  {
    "text": "to be in and it sounds like many of you are in that at which point maybe you don't care about the binary",
    "start": "2387589",
    "end": "2392990"
  },
  {
    "text": "compatibility things because you know that people aren't going to ship a binary that was built against a",
    "start": "2392990",
    "end": "2399740"
  },
  {
    "text": "different version of your library yeah maybe because that then depends on",
    "start": "2399740",
    "end": "2406549"
  },
  {
    "text": "dependencies if everything that ship is that shipped is built at the same time",
    "start": "2406549",
    "end": "2413420"
  },
  {
    "text": "then you're in a good state but this business about binary compatibility the",
    "start": "2413420",
    "end": "2419869"
  },
  {
    "text": "idea of code that was built against one point 1.0 will it work against one point",
    "start": "2419869",
    "end": "2425180"
  },
  {
    "text": "2.0 and that it doesn't work for the optional parameter version I'm not picking on you it's it's just a really",
    "start": "2425180",
    "end": "2431779"
  },
  {
    "text": "convenient example thank you for giving it that's really important because we",
    "start": "2431779",
    "end": "2439279"
  },
  {
    "text": "can have multiple dependencies and complex apps do have multiple dependencies so suppose your application",
    "start": "2439279",
    "end": "2446930"
  },
  {
    "text": "depends on library X that depends on no",
    "start": "2446930",
    "end": "2452299"
  },
  {
    "text": "design 1.1 and it depends on library Y that depends on notice I'm 1.2 when that",
    "start": "2452299",
    "end": "2459619"
  },
  {
    "text": "application is deployed notice I'm 1.2 is going to be deployed with it so library X that was built",
    "start": "2459619",
    "end": "2465980"
  },
  {
    "text": "against 1.1 is going to end up having to work against 1.2 and that should be ok",
    "start": "2465980",
    "end": "2472730"
  },
  {
    "text": "if I've done my job properly as notice I'm maintainer I'm looking for binary and source compatibility so that should",
    "start": "2472730",
    "end": "2479480"
  },
  {
    "text": "be fine and then this happens hopefully",
    "start": "2479480",
    "end": "2484519"
  },
  {
    "text": "you can still read that near the back it's the exact same example as I gave before just now except instead of 1.1",
    "start": "2484519",
    "end": "2492380"
  },
  {
    "text": "and 1.2 we've got one point two and three point two and there is no reason",
    "start": "2492380",
    "end": "2502519"
  },
  {
    "text": "to believe that this should work okay with current build tools as far as",
    "start": "2502519",
    "end": "2508800"
  },
  {
    "text": "I'm aware and please if I'm spouting nonsense tell me well feel free to say say now but as far as I'm aware with",
    "start": "2508800",
    "end": "2516780"
  },
  {
    "text": "current project formats and whatever in in.net you will end up running",
    "start": "2516780",
    "end": "2522080"
  },
  {
    "text": "everything against a single version of libs II which is version 3.2 and you",
    "start": "2522080",
    "end": "2528960"
  },
  {
    "text": "have to hope that lib X still works maybe it will maybe it won't that's one",
    "start": "2528960",
    "end": "2535380"
  },
  {
    "text": "way we can get into Diamond dependencies and here's a slightly different one book",
    "start": "2535380",
    "end": "2541740"
  },
  {
    "text": "with exactly the same result it's slightly simpler I depend on a library that depends on something else Lib Zed",
    "start": "2541740",
    "end": "2548070"
  },
  {
    "text": "and it depends on an early version and my application directly depends on libs e3 point - now I've said there is no",
    "start": "2548070",
    "end": "2558960"
  },
  {
    "text": "reason that this should work how many of you are running any kind of net website",
    "start": "2558960",
    "end": "2566060"
  },
  {
    "text": "okay chances are you're all in this situation or rather probably the",
    "start": "2566060",
    "end": "2571650"
  },
  {
    "text": "previous situation because as soon as insurv libs ed I say Jason net do you",
    "start": "2571650",
    "end": "2581730"
  },
  {
    "text": "want to look at all your dependencies and what they're transitive dependencies are and reckon that they're all using",
    "start": "2581730",
    "end": "2588750"
  },
  {
    "text": "the same major version of Jason net I don't think so so we're lucky that",
    "start": "2588750",
    "end": "2595550"
  },
  {
    "text": "although I trust that James has been diligent and actually has only bumped",
    "start": "2595550",
    "end": "2600960"
  },
  {
    "text": "the major version of Jason net when he's needed to I suspect that even the braking changes aren't very braking what",
    "start": "2600960",
    "end": "2609300"
  },
  {
    "text": "version of Jason dot let's react now is it thirteen twelve thirteen something like that imagine in version fifteen say",
    "start": "2609300",
    "end": "2616340"
  },
  {
    "text": "James Newton King thinks oh yeah we've got Newton soft Jason no one calls it",
    "start": "2616340",
    "end": "2623250"
  },
  {
    "text": "Newton soft Jason maybe I'll move everything into a namespace of Jason net",
    "start": "2623250",
    "end": "2629750"
  },
  {
    "text": "okay I can do that in version fifteen it's it's a new major semantic version",
    "start": "2629750",
    "end": "2635690"
  },
  {
    "text": "that really would cause everything to fail now I know there are",
    "start": "2635690",
    "end": "2642160"
  },
  {
    "text": "all kinds of interesting plans with dotnet core having its own lightweight jason reader and things but i would",
    "start": "2642160",
    "end": "2648190"
  },
  {
    "text": "contend that the fact that things are still working is more through",
    "start": "2648190",
    "end": "2653890"
  },
  {
    "text": "coincidence and probably pressure on james to keep things compatible than on",
    "start": "2653890",
    "end": "2659740"
  },
  {
    "text": "good engineering so i think we need to try to fix this i believe there are ways",
    "start": "2659740",
    "end": "2667540"
  },
  {
    "text": "of doing it but it will require language changes and probably nougat changes and",
    "start": "2667540",
    "end": "2673060"
  },
  {
    "text": "maybe course ALR changes although i don't think so certainly the desktop framework was quite capable of loading",
    "start": "2673060",
    "end": "2679240"
  },
  {
    "text": "two different versions of the same assembly at the same time yay it's just that there's no way of building a",
    "start": "2679240",
    "end": "2685390"
  },
  {
    "text": "project file so that you'll end up deploying two different versions of the same assembly at the same time it's",
    "start": "2685390",
    "end": "2691000"
  },
  {
    "text": "possible that if you had them both in the GAC and you had strongly named",
    "start": "2691000",
    "end": "2696520"
  },
  {
    "text": "dependencies with the full version number you would end up getting multiple versions but maybe you want to do this",
    "start": "2696520",
    "end": "2705360"
  },
  {
    "text": "so that this situation works that liv-ex ends up using an entirely isolated copy",
    "start": "2705360",
    "end": "2712750"
  },
  {
    "text": "of the version that it expected rather than the application using 3.2 now there",
    "start": "2712750",
    "end": "2721690"
  },
  {
    "text": "are two situations for Lib X here one is that it's using Lib Z purely as an implementation detail yeah",
    "start": "2721690",
    "end": "2730150"
  },
  {
    "text": "maybe it's parsing it's Jason configuration file and populating some objects and that's fine or maybe it's",
    "start": "2730150",
    "end": "2739030"
  },
  {
    "text": "something like no de time dot serialization Jason net which is deliberately designed to work with Jason",
    "start": "2739030",
    "end": "2744970"
  },
  {
    "text": "net and you can pass it adjacent settings or adjacent sterilizer settings",
    "start": "2744970",
    "end": "2750580"
  },
  {
    "text": "and it will configure it to work nicely with the node a time types you the the public API is intertwined with the Jason",
    "start": "2750580",
    "end": "2758230"
  },
  {
    "text": "net API those are different situations that we cannot tell apart at the moment",
    "start": "2758230",
    "end": "2764800"
  },
  {
    "text": "so I think when we express a dependency we need to be able to say I want this to",
    "start": "2764800",
    "end": "2770680"
  },
  {
    "text": "effectively be I'm part of my transient API transitive API sorry very different or I want this",
    "start": "2770680",
    "end": "2778099"
  },
  {
    "text": "to be a private implementation detail and then in c-sharp nine when we have the idea of references that are private",
    "start": "2778099",
    "end": "2784789"
  },
  {
    "text": "or public we can say alright okay compiler you should give me an error if I have any method accepting or returning",
    "start": "2784789",
    "end": "2792189"
  },
  {
    "text": "something that is from a private implementation detail yeah that's that's",
    "start": "2792189",
    "end": "2797509"
  },
  {
    "text": "not allowed and that would let us reason about things much better and remember that we're all about trust and",
    "start": "2797509",
    "end": "2803539"
  },
  {
    "text": "communication and reasoning about what will work based on this very limited information even with what I'm proposing",
    "start": "2803539",
    "end": "2814699"
  },
  {
    "text": "which I do expect to write a blog post about at some point we don't necessarily end up with goodness because suppose",
    "start": "2814699",
    "end": "2822859"
  },
  {
    "text": "Libs ed has some kind of static cache that we expect to work that we expect if",
    "start": "2822859",
    "end": "2830839"
  },
  {
    "text": "we call please get me the ID for you know some name and it will generate an",
    "start": "2830839",
    "end": "2839660"
  },
  {
    "text": "idea if it needs to and always return the same thing well if we can load the two separate assemblies that's fine",
    "start": "2839660",
    "end": "2845509"
  },
  {
    "text": "except we've now got two caches that maybe we're expecting to only get one oh and the other language feature that we",
    "start": "2845509",
    "end": "2852229"
  },
  {
    "text": "may need in c-sharp as well as stopping us from doing things is allowing us to",
    "start": "2852229",
    "end": "2858559"
  },
  {
    "text": "do things we've got external EEOC's already that say oh i want to refer to this assembly we need some way of",
    "start": "2858559",
    "end": "2865130"
  },
  {
    "text": "getting in the project system saying i depend on both of these these are both",
    "start": "2865130",
    "end": "2870589"
  },
  {
    "text": "public dependencies so they're part of you know maybe this is not--it only serialization jason net and this is some",
    "start": "2870589",
    "end": "2879140"
  },
  {
    "text": "other maybe not date and time but some geographic thing and it's integration",
    "start": "2879140",
    "end": "2884569"
  },
  {
    "text": "with jason net and they both exposed json settings and i need to be able to pass things around and from app 1.0 i",
    "start": "2884569",
    "end": "2891319"
  },
  {
    "text": "need to be able to say oh i'm referring to the json net 1.2 or jason net 3.2 so",
    "start": "2891319",
    "end": "2899420"
  },
  {
    "text": "we need some better integration of what I'm talking about with relation to all",
    "start": "2899420",
    "end": "2904759"
  },
  {
    "text": "my depend sieze so there are issues there but I think if we start thinking about",
    "start": "2904759",
    "end": "2912230"
  },
  {
    "text": "versioning you may have caught a little theme there then we can actually achieve an awful lot more I'm going to close",
    "start": "2912230",
    "end": "2919670"
  },
  {
    "text": "with an example of how things can be very different from the library perspective and I was planning when I",
    "start": "2919670",
    "end": "2930079"
  },
  {
    "text": "prepared the slides originally I was planning on saying this is how Google does API versioning already at that",
    "start": "2930079",
    "end": "2936890"
  },
  {
    "text": "point it was a forward-looking statement I have a we have an API improvement",
    "start": "2936890",
    "end": "2942890"
  },
  {
    "text": "proposal thing internally where we can write up standards effectively and then",
    "start": "2942890",
    "end": "2949010"
  },
  {
    "text": "get them reviewed and what I'm going to describe is what what I have been",
    "start": "2949010",
    "end": "2955819"
  },
  {
    "text": "proposing and then in fact while I was away at another conference a bunch of people thought sure what we",
    "start": "2955819",
    "end": "2962630"
  },
  {
    "text": "want to actually do it quite differently so I don't know in two weeks time whether this is going to work or",
    "start": "2962630",
    "end": "2967640"
  },
  {
    "text": "something else will work but it's it's a valid proposal I'm explicitly not saying",
    "start": "2967640",
    "end": "2973970"
  },
  {
    "text": "that this is what you ought to be doing for API versioning because you need to",
    "start": "2973970",
    "end": "2979940"
  },
  {
    "text": "think about all kinds of people many many different people there the number of stakeholders for versioning of a",
    "start": "2979940",
    "end": "2987079"
  },
  {
    "text": "networked API is huge you need to think about the people who are going to use it",
    "start": "2987079",
    "end": "2992569"
  },
  {
    "text": "your end users and hopefully that will be the largest set of stakeholders and",
    "start": "2992569",
    "end": "2997720"
  },
  {
    "text": "probably the ones most sensitive to Peyton then you've got the people",
    "start": "2997720",
    "end": "3002980"
  },
  {
    "text": "building the api's you you may within your company have ten different API s and you're the poor chump who's",
    "start": "3002980",
    "end": "3009849"
  },
  {
    "text": "responsible for designing this version strategy that all of the others are going to have to abide by so you better",
    "start": "3009849",
    "end": "3015190"
  },
  {
    "text": "make it easy for them to evolve their API as they go forward you probably want",
    "start": "3015190",
    "end": "3021130"
  },
  {
    "text": "to make it so that they can evolve it and test an idea with a certain set of",
    "start": "3021130",
    "end": "3027240"
  },
  {
    "text": "end-users before they commit to it maybe you've got some infrastructure that",
    "start": "3027240",
    "end": "3033220"
  },
  {
    "text": "needs to support this version and you've got people like me who",
    "start": "3033220",
    "end": "3038980"
  },
  {
    "text": "client libraries to make it easier for the end-users and they'll need to understand the versioning to and",
    "start": "3038980",
    "end": "3044040"
  },
  {
    "text": "certainly in our case in Google you've got API reviewers who need to be able to",
    "start": "3044040",
    "end": "3049359"
  },
  {
    "text": "see are you were doing this in the previous version you're doing this in the new version that's not a backward",
    "start": "3049359",
    "end": "3055150"
  },
  {
    "text": "compatible change just as I said that we need the idea of rules of well this is",
    "start": "3055150",
    "end": "3061450"
  },
  {
    "text": "compatible and this isn't compatible in a language so it is with an API you may",
    "start": "3061450",
    "end": "3067630"
  },
  {
    "text": "think suppose you're just calling a JSON API to return the weather and you currently return it in Celsius so you",
    "start": "3067630",
    "end": "3076090"
  },
  {
    "text": "return a JSON object with temperature : no one you may think it's fine to start",
    "start": "3076090",
    "end": "3082030"
  },
  {
    "text": "saying Joe I'm going to start returning it in Fahrenheit as well but in a completely backward compatible way I",
    "start": "3082030",
    "end": "3088090"
  },
  {
    "text": "will do another property called Fahrenheit and that will be you know whatever it it's 33 I don't know and",
    "start": "3088090",
    "end": "3094619"
  },
  {
    "text": "then some user start complaining because they're trying to consume this response",
    "start": "3094619",
    "end": "3099790"
  },
  {
    "text": "on an Arduino and your response is now bigger than it was before and it's crashed their machine because it hasn't",
    "start": "3099790",
    "end": "3106750"
  },
  {
    "text": "got enough memory but you need to decide does that mean you can never ever add",
    "start": "3106750",
    "end": "3111760"
  },
  {
    "text": "any fields to your API that's probably not what you want to say but you want to",
    "start": "3111760",
    "end": "3117700"
  },
  {
    "text": "do this deliberately so you need to think of all your stakeholders in Google",
    "start": "3117700",
    "end": "3125050"
  },
  {
    "text": "we describe our API is in protocol buffers which are basically schemas",
    "start": "3125050",
    "end": "3130450"
  },
  {
    "text": "effectively schemas and then descriptions of our pcs and they look a",
    "start": "3130450",
    "end": "3138460"
  },
  {
    "text": "bit like this I know I had a bug last time I gave this talking I don't know whether I fix it now but so we have a",
    "start": "3138460",
    "end": "3145720"
  },
  {
    "text": "service that's got an RPC that takes a request then gets a keyring and the request has a single field that's a name",
    "start": "3145720",
    "end": "3152590"
  },
  {
    "text": "and you get the idea so what kind of",
    "start": "3152590",
    "end": "3158470"
  },
  {
    "text": "versions will be come up with for this do we need the idea of minor version and",
    "start": "3158470",
    "end": "3166950"
  },
  {
    "text": "this will depend on your API within Google I'm just gonna skip some",
    "start": "3166950",
    "end": "3173930"
  },
  {
    "text": "slides because we're running short on time within Google this is our current",
    "start": "3173930",
    "end": "3179060"
  },
  {
    "text": "proposal that we have the idea of an experimental API version that can be",
    "start": "3179060",
    "end": "3184940"
  },
  {
    "text": "broken at any time so the API producer team might decide to just take the",
    "start": "3184940",
    "end": "3190520"
  },
  {
    "text": "endpoint down and please I see people taking photos only take photos hey this is something I might consider don't",
    "start": "3190520",
    "end": "3196760"
  },
  {
    "text": "assume this is actually what Google does or is going to do so experimental is",
    "start": "3196760",
    "end": "3203060"
  },
  {
    "text": "unstable really unstable it might exist but you know give you completely",
    "start": "3203060",
    "end": "3210110"
  },
  {
    "text": "different responses tomorrow we've got an alpha version which is under debate",
    "start": "3210110",
    "end": "3217790"
  },
  {
    "text": "should that be stable or unstable if it has to be stable then it's harder to",
    "start": "3217790",
    "end": "3223970"
  },
  {
    "text": "change okay because maybe we've got maybe in version 1 of version v1 alpha 1",
    "start": "3223970",
    "end": "3232430"
  },
  {
    "text": "you have an RPC and you have a way of representing errors and you say oh I'll",
    "start": "3232430",
    "end": "3237770"
  },
  {
    "text": "just return a string and then you want a bit more information so you would like to change the type of that field to be",
    "start": "3237770",
    "end": "3244190"
  },
  {
    "text": "an error message it's unfortunately the protobuf declaration for a data type is",
    "start": "3244190",
    "end": "3253490"
  },
  {
    "text": "called message so when I say an error message I mean message error that",
    "start": "3253490",
    "end": "3259070"
  },
  {
    "text": "probably has a string field called message and detail and things so can I",
    "start": "3259070",
    "end": "3264290"
  },
  {
    "text": "change a field that was previously of type string to one called error definitely not in a compatible way so if",
    "start": "3264290",
    "end": "3272630"
  },
  {
    "text": "I'm doing this at an alpha level maybe we'll say that doesn't necessarily need",
    "start": "3272630",
    "end": "3278060"
  },
  {
    "text": "to be stable when it comes to beta they tend to be public and maybe we can't",
    "start": "3278060",
    "end": "3284090"
  },
  {
    "text": "communicate with our stakeholders as much our end users because we haven't",
    "start": "3284090",
    "end": "3289700"
  },
  {
    "text": "done it as an opt-in thing anyone can just hit this API it's harder to communicate we don't have consent to",
    "start": "3289700",
    "end": "3295340"
  },
  {
    "text": "email everyone maybe so we're more likely to make things stable and then",
    "start": "3295340",
    "end": "3300410"
  },
  {
    "text": "you really do need to do multiple versions of the ape and you probably need to keep these up for longer so if you've got a service",
    "start": "3300410",
    "end": "3307170"
  },
  {
    "text": "implementing if you've got an endpoint implementing V 1 B 2 and V 1 B 2 sorry V",
    "start": "3307170",
    "end": "3313560"
  },
  {
    "text": "1 B 2 1 and V 1 B 2 you probably need to keep both of those up in parallel for longer but eventually you get to V 1",
    "start": "3313560",
    "end": "3321750"
  },
  {
    "text": "woohoo you ship glorious victory parties",
    "start": "3321750",
    "end": "3328410"
  },
  {
    "text": "all around and then you want to add a new feature and this is where I have",
    "start": "3328410",
    "end": "3333720"
  },
  {
    "text": "been sticking to my guns possibly to my colleagues annoyance various colleagues",
    "start": "3333720",
    "end": "3340050"
  },
  {
    "text": "want to be able to say oh we'll just go back to beta 2 V 1 beta 2 I'm saying no that sounds like it comes before V 1 you",
    "start": "3340050",
    "end": "3348410"
  },
  {
    "text": "something beta 1 always comes before that something you've shipped V 1 you're",
    "start": "3348410",
    "end": "3354780"
  },
  {
    "text": "doing a new thing to some extent so we've got this idea of V 1 you can read",
    "start": "3354780",
    "end": "3360090"
  },
  {
    "text": "this as V 1 point 1 alpha 1 V 1 point 1 beta 1 but the key is there's no V 1",
    "start": "3360090",
    "end": "3367230"
  },
  {
    "text": "point 1 ever the only GA general availability version of the API is just",
    "start": "3367230",
    "end": "3374160"
  },
  {
    "text": "the major version because accepting you",
    "start": "3374160",
    "end": "3379590"
  },
  {
    "text": "know the the the version numbers here end up within namespaces and all kinds",
    "start": "3379590",
    "end": "3384720"
  },
  {
    "text": "of things and we want to be able to just upgrade things seamlessly and people",
    "start": "3384720",
    "end": "3389760"
  },
  {
    "text": "will get more or less information depending on what they happen to expect so if you build against V 1 with an old",
    "start": "3389760",
    "end": "3399210"
  },
  {
    "text": "version of a client library you'll only see some fields that you get back maybe the fields will have come across the",
    "start": "3399210",
    "end": "3404640"
  },
  {
    "text": "network but you won't have the code to access them but you can just update to a later client library version of the API",
    "start": "3404640",
    "end": "3412740"
  },
  {
    "text": "version v1 I don't think I have a slide but we deliberately made the decision",
    "start": "3412740",
    "end": "3419550"
  },
  {
    "text": "our client libraries have the API version number is part of the nougat",
    "start": "3419550",
    "end": "3424980"
  },
  {
    "text": "package name so Google Cloud storage v1 which means if we ever do have Google",
    "start": "3424980",
    "end": "3430050"
  },
  {
    "text": "Cloud storage v2 you can have both of those packages you can depend on both of",
    "start": "3430050",
    "end": "3435540"
  },
  {
    "text": "them and migrate some of you code and then the rest of your code and it should be wonderful but this business",
    "start": "3435540",
    "end": "3443370"
  },
  {
    "text": "about new features get wrapped into v1 is entirely different I would never do that in no time I can't release 1.0.0",
    "start": "3443370",
    "end": "3451140"
  },
  {
    "text": "again ever so there's no sense of identity this is one scheme you may want",
    "start": "3451140",
    "end": "3458730"
  },
  {
    "text": "a sense of identity you might want to say okay well I've got two ideas of version number the sort of the the major",
    "start": "3458730",
    "end": "3464970"
  },
  {
    "text": "that describes the end point and everything generated uses that but you could also specify maybe a date field or",
    "start": "3464970",
    "end": "3472980"
  },
  {
    "text": "some way of saying the API at this point so that then your Arduino people can say",
    "start": "3472980",
    "end": "3479640"
  },
  {
    "text": "I would like your API to behave as it did at this point in time and your",
    "start": "3479640",
    "end": "3485460"
  },
  {
    "text": "server can then say alright well I wasn't populating Fahrenheit back then I'll stop they all remove it from my",
    "start": "3485460",
    "end": "3491610"
  },
  {
    "text": "canonical response but you've got to have infrastructure to do that so you",
    "start": "3491610",
    "end": "3497520"
  },
  {
    "text": "need to balance the the extra work that the infrastructure team need to do and how do you test do you test all of your",
    "start": "3497520",
    "end": "3504360"
  },
  {
    "text": "requests against all of your possible versions every time you deploy and by",
    "start": "3504360",
    "end": "3510360"
  },
  {
    "text": "the time you deploy it a thousand times and you have a hundred tests you're now running a hundred thousand tests every",
    "start": "3510360",
    "end": "3516900"
  },
  {
    "text": "time may not be feasible that was",
    "start": "3516900",
    "end": "3523020"
  },
  {
    "text": "probably somewhat confusing which was almost intentional because the whole",
    "start": "3523020",
    "end": "3528630"
  },
  {
    "text": "point was not for you to learn Google's versioning scheme but to learn that it's complicated that there are",
    "start": "3528630",
    "end": "3535620"
  },
  {
    "text": "lots of decisions to make with lots of different variables of about here how much time does the infrastructure team",
    "start": "3535620",
    "end": "3541590"
  },
  {
    "text": "have is it actually you're in a small company and you're just trying to get api's out so whatever's the most simple",
    "start": "3541590",
    "end": "3547950"
  },
  {
    "text": "will work because otherwise you will run out of money and just the company will collapse it's all complicated we are",
    "start": "3547950",
    "end": "3557190"
  },
  {
    "text": "really bad at several things in software Jennifer was talking about accessibility earlier on we're awful at error handling",
    "start": "3557190",
    "end": "3564630"
  },
  {
    "text": "in general we're awful at anything that requires understanding other human beings which is why diver",
    "start": "3564630",
    "end": "3571230"
  },
  {
    "text": "one of the many reasons diversity is important but virtually is one thing I",
    "start": "3571230",
    "end": "3576450"
  },
  {
    "text": "hope I've persuaded you today to spend a bit of time consciously thinking about",
    "start": "3576450",
    "end": "3581520"
  },
  {
    "text": "and documenting why you make the decisions that you make about any",
    "start": "3581520",
    "end": "3586530"
  },
  {
    "text": "versions that you produce and finally and it's sort of the same point be kind",
    "start": "3586530",
    "end": "3591780"
  },
  {
    "text": "to anyone who's using your code whether that's colleagues and users whoever it is thank you very much",
    "start": "3591780",
    "end": "3597380"
  },
  {
    "text": "[Applause]",
    "start": "3597380",
    "end": "3606139"
  }
]