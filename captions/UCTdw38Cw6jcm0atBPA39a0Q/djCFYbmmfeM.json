[
  {
    "start": "0",
    "end": "111000"
  },
  {
    "text": "hello everyone nice to be here I would actually prefer to be import or because",
    "start": "709",
    "end": "7890"
  },
  {
    "text": "I love port wine but it's fine this way also we're here today and I'm sure I",
    "start": "7890",
    "end": "14190"
  },
  {
    "text": "will try to convince you that you need to forget about HTTP in when you were",
    "start": "14190",
    "end": "19650"
  },
  {
    "text": "talking about micro services we'll just we'll chat on slack at the end to see if",
    "start": "19650",
    "end": "26760"
  },
  {
    "text": "I actually managed to go ahead to convince you to forget about HTTP Oh Who",
    "start": "26760",
    "end": "32488"
  },
  {
    "text": "am I let me see if this works also I'm a Software Architect at a",
    "start": "32489",
    "end": "39570"
  },
  {
    "text": "company named in dava here in Romania so here is five o'clock I'm two hours ahead",
    "start": "39570",
    "end": "46800"
  },
  {
    "text": "of you I teach dotnet on Saturdays and I often write on my blog",
    "start": "46800",
    "end": "52800"
  },
  {
    "text": "Adina codes don't ask me why this domain but worse I actually write things about",
    "start": "52800",
    "end": "60480"
  },
  {
    "text": "the problems I encountered when writing code and so on not as often as I would",
    "start": "60480",
    "end": "65549"
  },
  {
    "text": "like to but I do that also I organize a user group here we moved online and it's",
    "start": "65549",
    "end": "73020"
  },
  {
    "text": "going pretty well I'm trying to reach as many people as I can in terms of meetups",
    "start": "73020",
    "end": "78840"
  },
  {
    "text": "so online allowed us to do that so a short agenda for today we're going to",
    "start": "78840",
    "end": "85740"
  },
  {
    "text": "talk about monoliths because we cannot talk about micro services without going",
    "start": "85740",
    "end": "90960"
  },
  {
    "text": "through monoliths and then we're gonna see a few options about inter-service",
    "start": "90960",
    "end": "97170"
  },
  {
    "text": "communication going from HTTP calls and RPC a little G RPC but you already know",
    "start": "97170",
    "end": "104130"
  },
  {
    "text": "that Sean had talked about this and also about messaging and different types of",
    "start": "104130",
    "end": "110700"
  },
  {
    "text": "messaging so monolith if I would have",
    "start": "110700",
    "end": "116009"
  },
  {
    "start": "111000",
    "end": "325000"
  },
  {
    "text": "been in the room with you guys I would ask you who here loves monoliths and I",
    "start": "116009",
    "end": "122009"
  },
  {
    "text": "would want a raise of hands and I admit I love monolith just because the life",
    "start": "122009",
    "end": "129899"
  },
  {
    "text": "was easier than you had a big chunk of code you got that from a repo somewhere EFS",
    "start": "129899",
    "end": "136740"
  },
  {
    "text": "or whatever old-style source control system and then you implemented",
    "start": "136740",
    "end": "142620"
  },
  {
    "text": "something and then if you wanted to build a system you press built and you",
    "start": "142620",
    "end": "148260"
  },
  {
    "text": "could have gone to take a coffee because usually the build took very long so that",
    "start": "148260",
    "end": "155340"
  },
  {
    "text": "one it was very self-contained I mean everything you would you need it was in there in terms of code and dependencies",
    "start": "155340",
    "end": "162150"
  },
  {
    "text": "it was a single code base so you didn't need to worry about I don't know",
    "start": "162150",
    "end": "167250"
  },
  {
    "text": "different languages that you do are not familiar with if the model it was in",
    "start": "167250",
    "end": "173040"
  },
  {
    "text": "c-sharp or java it was about C sharp or Java and that's it nothing else it was a",
    "start": "173040",
    "end": "179880"
  },
  {
    "text": "single deployable unit I mean in terms of releases either it worked or it",
    "start": "179880",
    "end": "186350"
  },
  {
    "text": "didn't work but usually the guys from the ops and the developers that work on",
    "start": "186350",
    "end": "191970"
  },
  {
    "text": "that monolith I had to take extra time to do the deploys depending on the",
    "start": "191970",
    "end": "198120"
  },
  {
    "text": "business domain so the life for developers was very easy in terms of",
    "start": "198120",
    "end": "203820"
  },
  {
    "text": "dependencies and breaking stuff it was very obvious if you broke something because it was in the same place so in",
    "start": "203820",
    "end": "212220"
  },
  {
    "text": "terms of dependencies you didn't need to worry about that no getting NuGet",
    "start": "212220",
    "end": "217260"
  },
  {
    "text": "packages from somewhere you just in references a reference a library that",
    "start": "217260",
    "end": "222990"
  },
  {
    "text": "was already there and your dependency the class you needed we instantiate it",
    "start": "222990",
    "end": "229260"
  },
  {
    "text": "was there so that single technology stack made our life easier",
    "start": "229260",
    "end": "234390"
  },
  {
    "text": "in terms of deploys and downtimes well it wasn't so nice for our businesses or",
    "start": "234390",
    "end": "242220"
  },
  {
    "text": "our clients businesses because down times were pretty big depending on the",
    "start": "242220",
    "end": "247800"
  },
  {
    "text": "size of that monolith or in the business down times would take very long of",
    "start": "247800",
    "end": "254400"
  },
  {
    "text": "course there were and there are a lot of options behind the load balancers you take one",
    "start": "254400",
    "end": "261540"
  },
  {
    "text": "server down update that and you leave only one the other server and so on",
    "start": "261540",
    "end": "267090"
  },
  {
    "text": "to minimize the down times but also the long build times affected the",
    "start": "267090",
    "end": "272280"
  },
  {
    "text": "productivity of developers and that's why nowadays more and more developers go",
    "start": "272280",
    "end": "277830"
  },
  {
    "text": "and implement micro services as the I don't know the go-to architectural",
    "start": "277830",
    "end": "283199"
  },
  {
    "text": "approach ok if you start the project from scratch all the developers go and said oh we're gonna do marker services",
    "start": "283199",
    "end": "290210"
  },
  {
    "text": "even if it's not needed in every case continuous delivery well it didn't work",
    "start": "290210",
    "end": "297930"
  },
  {
    "text": "with monolids it was almost zero and it's hard to test",
    "start": "297930",
    "end": "303270"
  },
  {
    "text": "think about the scenarios where you deployed that monolith and you",
    "start": "303270",
    "end": "308430"
  },
  {
    "text": "implemented the add-on or breaking change and then you had to bring over an",
    "start": "308430",
    "end": "313979"
  },
  {
    "text": "army of testers to do small rations to do every kind of testing that was needed",
    "start": "313979",
    "end": "319950"
  },
  {
    "text": "for the system to be healthy we delivered in production",
    "start": "319950",
    "end": "325699"
  },
  {
    "start": "325000",
    "end": "440000"
  },
  {
    "text": "ok so issues but our life was pretty much easy",
    "start": "325699",
    "end": "330860"
  },
  {
    "text": "how about scaling the modern level yelling the monolith usually implied ok",
    "start": "330860",
    "end": "337560"
  },
  {
    "text": "we have this machine on this size then we give a bigger machine write more",
    "start": "337560",
    "end": "345419"
  },
  {
    "text": "resources and more CPU but this meant",
    "start": "345419",
    "end": "350729"
  },
  {
    "text": "that we can only scale of course I mean giving a bigger machine to handle the load it was necessary I'm not saying",
    "start": "350729",
    "end": "361410"
  },
  {
    "text": "that this is the only way to scale up to scale a monolith but usually this costs",
    "start": "361410",
    "end": "367680"
  },
  {
    "text": "a lot of money and it not necessarily implies that if you have twice as bigger",
    "start": "367680",
    "end": "373770"
  },
  {
    "text": "machine it will cost you double the money nope we do not have this this relation",
    "start": "373770",
    "end": "380849"
  },
  {
    "text": "it might cost you I don't know triple the money four times the money for a double in size machine and I'm not",
    "start": "380849",
    "end": "387900"
  },
  {
    "text": "talking about storage or anything in terms of resources to handle that load another thing that wasn't so nice with",
    "start": "387900",
    "end": "395610"
  },
  {
    "text": "the monolith is that well if I don't know there were parts of the application that didn't need scaling I mean",
    "start": "395610",
    "end": "403310"
  },
  {
    "text": "functionalities or certain areas that weren't used that much me you had no",
    "start": "403310",
    "end": "408930"
  },
  {
    "text": "other option than to scale that also so in terms of costs for the business it",
    "start": "408930",
    "end": "416520"
  },
  {
    "text": "wasn't so let's say not nice okay for example if the login functionality",
    "start": "416520",
    "end": "422910"
  },
  {
    "text": "wasn't that that used right why scale that I mean if you have an ID you know a",
    "start": "422910",
    "end": "427920"
  },
  {
    "text": "power intensive or a search of some kind in your in your app that needs extra",
    "start": "427920",
    "end": "433560"
  },
  {
    "text": "power then you can scale that also the problem is in monolids you cannot do that okay so then we think",
    "start": "433560",
    "end": "442380"
  },
  {
    "start": "440000",
    "end": "613000"
  },
  {
    "text": "away with the IT evolving and the demand of load increasing we thought hey let's",
    "start": "442380",
    "end": "450450"
  },
  {
    "text": "play this monolith so you started to read about many different design and micro services and different types of",
    "start": "450450",
    "end": "457260"
  },
  {
    "text": "architecture and instead okay I'm gonna do micro services and this micro",
    "start": "457260",
    "end": "462420"
  },
  {
    "text": "services basically were carved a carved out of the monolith what it is it's a",
    "start": "462420",
    "end": "469800"
  },
  {
    "text": "smaller part of monolith it's not a monolith has its own database and it's",
    "start": "469800",
    "end": "474990"
  },
  {
    "text": "easy to deploy and more than that it's supposed to be standalone",
    "start": "474990",
    "end": "480500"
  },
  {
    "text": "because stand alone allows you to maintain it more easier only that it's",
    "start": "480500",
    "end": "488520"
  },
  {
    "text": "not necessarily true right because if you split your big ball of mud into",
    "start": "488520",
    "end": "495510"
  },
  {
    "text": "smaller pieces it might give you I don't know more",
    "start": "495510",
    "end": "500970"
  },
  {
    "text": "headaches why because introduces complexity and sometimes you have cascading effects in",
    "start": "500970",
    "end": "508710"
  },
  {
    "text": "case of failure and you need to keep an eye of Airy close eye on this micro",
    "start": "508710",
    "end": "514919"
  },
  {
    "text": "services you need to monitor them you need to introduce extra layers of",
    "start": "514920",
    "end": "519990"
  },
  {
    "text": "keeping an eye on these like I don't know extra monitoring tools and there's",
    "start": "519990",
    "end": "527430"
  },
  {
    "text": "words and so on more ops people right so now you so realize that your",
    "start": "527430",
    "end": "534390"
  },
  {
    "text": "services architecture that should be independent and should allow to have",
    "start": "534390",
    "end": "541230"
  },
  {
    "text": "independent units we'll give you something like this like you so realize",
    "start": "541230",
    "end": "546990"
  },
  {
    "text": "you need data from some other service and your go-to option to fix that days",
    "start": "546990",
    "end": "552600"
  },
  {
    "text": "is transferred that in the case of Monell it was easy it wasn't desert in the same boundary",
    "start": "552600",
    "end": "558300"
  },
  {
    "text": "now you need to communicate to other services somehow and usually that",
    "start": "558300",
    "end": "564990"
  },
  {
    "text": "communication is done to http clients right server to server you do a call and",
    "start": "564990",
    "end": "571080"
  },
  {
    "text": "then you realize that you need more and more data from other sides and you need",
    "start": "571080",
    "end": "576750"
  },
  {
    "text": "more data and more data and you get something like this you need to make your small and independent units",
    "start": "576750",
    "end": "583260"
  },
  {
    "text": "communicate somehow and to go to option when you first start with micro services is HTTP request no matter what kind of",
    "start": "583260",
    "end": "591510"
  },
  {
    "text": "HTTP that is the go-to option I did it myself so you soon end up with something like",
    "start": "591510",
    "end": "599250"
  },
  {
    "text": "this right it's a modern architecture you have independent units that are",
    "start": "599250",
    "end": "605010"
  },
  {
    "text": "scalable with their own database REST API eyes and so on you end with some and",
    "start": "605010",
    "end": "611640"
  },
  {
    "text": "I put something like that or maybe with something like that so you so realize",
    "start": "611640",
    "end": "617340"
  },
  {
    "start": "613000",
    "end": "707000"
  },
  {
    "text": "that your monolithic alive as a developer was very nice and cozy and you",
    "start": "617340",
    "end": "623970"
  },
  {
    "text": "have no problems you didn't have the same problems as you have now but if you",
    "start": "623970",
    "end": "629850"
  },
  {
    "text": "think and look around in the industry you see that Amazon for example makes",
    "start": "629850",
    "end": "638780"
  },
  {
    "text": "150 API calls to build a page it's a lot",
    "start": "638780",
    "end": "644670"
  },
  {
    "text": "for a single trait right so imagine how many micro services they have and you",
    "start": "644670",
    "end": "650430"
  },
  {
    "text": "look at last six and they have like five billions of API calls per days and from",
    "start": "650430",
    "end": "657600"
  },
  {
    "text": "these 97.7 are internal so it's not like",
    "start": "657600",
    "end": "662610"
  },
  {
    "text": "a client app calling server side up it's like interest",
    "start": "662610",
    "end": "668130"
  },
  {
    "text": "communication and then you think okay these guys can do it I can do it also I",
    "start": "668130",
    "end": "673590"
  },
  {
    "text": "mean I don't have such a big app I do not have such chip mungus infrastructure",
    "start": "673590",
    "end": "679350"
  },
  {
    "text": "I should be able to do it and then you realize your options and the go to",
    "start": "679350",
    "end": "685470"
  },
  {
    "text": "options as I already mentioned is make an HTTP call it is very easy it's",
    "start": "685470",
    "end": "691830"
  },
  {
    "text": "synchronous we all are familiar with HTTP code we have an HTTP request right",
    "start": "691830",
    "end": "698490"
  },
  {
    "text": "Heather's body HTTP verb and so on we pretend that we have REST API eyes with",
    "start": "698490",
    "end": "704940"
  },
  {
    "text": "all everything in there and we do these calls but these calls are api to api",
    "start": "704940",
    "end": "710670"
  },
  {
    "start": "707000",
    "end": "776000"
  },
  {
    "text": "like service to service and what happens is your Rico's request goes out it's",
    "start": "710670",
    "end": "716790"
  },
  {
    "text": "processed by the other side and then you get the response back it's very easy and",
    "start": "716790",
    "end": "722100"
  },
  {
    "text": "we all are familiar with this and we are happy but what happens if your request",
    "start": "722100",
    "end": "729540"
  },
  {
    "text": "is processed from the other side and something happens over the network and",
    "start": "729540",
    "end": "735600"
  },
  {
    "text": "you do not get the response back of course you're very sad but how do you",
    "start": "735600",
    "end": "742020"
  },
  {
    "text": "handle that because if you think of this API to EPA called needs to be monitored",
    "start": "742020",
    "end": "749060"
  },
  {
    "text": "right because you might not even know that a request has been made first you",
    "start": "749060",
    "end": "756060"
  },
  {
    "text": "do login tracing you log everything there you throw exceptions you I don't",
    "start": "756060",
    "end": "761520"
  },
  {
    "text": "know a dirty your code with every kind of I don't know try caches and",
    "start": "761520",
    "end": "767450"
  },
  {
    "text": "monitoring stuff just to present this kind of issues happening but the idea is",
    "start": "767450",
    "end": "774540"
  },
  {
    "text": "that you cannot prevent them because for example if when you should request and",
    "start": "774540",
    "end": "783300"
  },
  {
    "start": "776000",
    "end": "824000"
  },
  {
    "text": "the other side doesn't receive the request how do you tell that the request has taken place or that has taken place",
    "start": "783300",
    "end": "792140"
  },
  {
    "text": "why the other and received right so then I mean I don't know I don't want to get",
    "start": "792140",
    "end": "799500"
  },
  {
    "text": "into details but is simple right you issue requests the other side is down what happens well",
    "start": "799500",
    "end": "804840"
  },
  {
    "text": "we are you either wait and log and you retry and you need to implement retry",
    "start": "804840",
    "end": "813150"
  },
  {
    "text": "mechanism yourself and the best scenario you will get a timeout if the other side",
    "start": "813150",
    "end": "819660"
  },
  {
    "text": "it's not down in together 500 and lock that and so on right and then he said",
    "start": "819660",
    "end": "825030"
  },
  {
    "start": "824000",
    "end": "1015000"
  },
  {
    "text": "okay HTTP calls simple let improve a bit and then you said hmm maybe it's",
    "start": "825030",
    "end": "832980"
  },
  {
    "text": "perfectly fine to use this I mean as the first step working with micro services is just fine but how about timeouts how",
    "start": "832980",
    "end": "842820"
  },
  {
    "text": "long do you wait for the other side to respond how do you decide that okay",
    "start": "842820",
    "end": "850110"
  },
  {
    "text": "after 30 seconds I will issue a timeout my calling party or how do i implement a",
    "start": "850110",
    "end": "857790"
  },
  {
    "text": "retry about availability if the other side is down how do what do I do",
    "start": "857790",
    "end": "863460"
  },
  {
    "text": "I really should request the other part it will still be down right how about",
    "start": "863460",
    "end": "869880"
  },
  {
    "text": "reliability if the network has an issue okay it's inside my on premise",
    "start": "869880",
    "end": "875190"
  },
  {
    "text": "infrastructure or in cloud and so on but the infrastructure is not reliable I",
    "start": "875190",
    "end": "880560"
  },
  {
    "text": "mean once you get a request over the network you need to assume that is not",
    "start": "880560",
    "end": "886200"
  },
  {
    "text": "reliable you cannot pretend that everything will work yes it works on my",
    "start": "886200",
    "end": "892170"
  },
  {
    "text": "machine in your machine but not necessarily in the production environment how about retries I mean we're trying",
    "start": "892170",
    "end": "901730"
  },
  {
    "text": "for how long how many times in what time",
    "start": "901730",
    "end": "906810"
  },
  {
    "text": "span right and the deal is that in HTTP clients that we do ourselves no matter",
    "start": "906810",
    "end": "913950"
  },
  {
    "text": "the language we do not have this returning out of the box we need to",
    "start": "913950",
    "end": "920430"
  },
  {
    "text": "implement the retrying everything by ourselves of course there is Paulie or",
    "start": "920430",
    "end": "926010"
  },
  {
    "text": "similar libraries that Allah was to implement retries policies but pretty",
    "start": "926010",
    "end": "931620"
  },
  {
    "text": "much we need to do manual work prevent this but how about coupling I mean how do you",
    "start": "931620",
    "end": "939220"
  },
  {
    "text": "distribute these HTTP clients there is a service PE and you said you have micro",
    "start": "939220",
    "end": "945790"
  },
  {
    "text": "services that's independent units and so on but you need somehow to make the the",
    "start": "945790",
    "end": "951700"
  },
  {
    "text": "parties aware of the interface definition language okay what is the",
    "start": "951700",
    "end": "958450"
  },
  {
    "text": "answer that the other part can't understand and what is the response that the first part you can understand right",
    "start": "958450",
    "end": "964930"
  },
  {
    "text": "so we end up doing that alone now get packages I come from dotnet world and",
    "start": "964930",
    "end": "970060"
  },
  {
    "text": "the Nugget packages are you go to option and I've seen projects where we had a",
    "start": "970060",
    "end": "975610"
  },
  {
    "text": "nose lots of Nugget packages that contained not only the HT client and the interface",
    "start": "975610",
    "end": "984100"
  },
  {
    "text": "is that we need but also creating hard business logic for those crimes and it",
    "start": "984100",
    "end": "992320"
  },
  {
    "text": "was a mess and yet okay so let's be aware of these and then",
    "start": "992320",
    "end": "998140"
  },
  {
    "text": "if we say okay we're fine we implemented retry policies okay we're fine with coupling the package and code distribute",
    "start": "998140",
    "end": "1005280"
  },
  {
    "text": "distributions and so on let's increase the throughput and wanting to increase",
    "start": "1005280",
    "end": "1010710"
  },
  {
    "text": "the throughput you pretty much go to async there are so many parodies",
    "start": "1010710",
    "end": "1016320"
  },
  {
    "text": "nowadays that allow you to work with icing if you come from a dotnet word that is the sink weight that makes it",
    "start": "1016320",
    "end": "1022890"
  },
  {
    "text": "very easier for us to work with parallel right and then you said hmm",
    "start": "1022890",
    "end": "1028319"
  },
  {
    "text": "I have an idea I'm gonna use it a thing because I'm gonna get rid of all these problems it will solve pretty much all",
    "start": "1028320",
    "end": "1035189"
  },
  {
    "text": "the problems I have from using HTTP and I'm not waiting for a response to to",
    "start": "1035190",
    "end": "1042930"
  },
  {
    "text": "come back but is it an HTTP protocol it's a transport right so saying that",
    "start": "1042930",
    "end": "1050340"
  },
  {
    "text": "it's perfectly fine to use async calls because it gives you the impression that it distributes the load and you increase",
    "start": "1050340",
    "end": "1057180"
  },
  {
    "text": "the throughput it doesn't work because you'll have the same exact issues but",
    "start": "1057180",
    "end": "1063720"
  },
  {
    "text": "not only that your requests will request the responses will",
    "start": "1063720",
    "end": "1069980"
  },
  {
    "text": "often come back out of order and nope",
    "start": "1069980",
    "end": "1075539"
  },
  {
    "text": "you cannot serve more requests is the appearance of it and you can serve the requests faster because you're not",
    "start": "1075539",
    "end": "1081450"
  },
  {
    "text": "blocking something and you're not wait waiting for a response you have the",
    "start": "1081450",
    "end": "1086700"
  },
  {
    "text": "promise that the response will come back but what if that Rico's require a",
    "start": "1086700",
    "end": "1092429"
  },
  {
    "text": "response hasn't come back how do you will know what requests you issued in",
    "start": "1092429",
    "end": "1100049"
  },
  {
    "text": "the first and E you can log but why log",
    "start": "1100049",
    "end": "1105419"
  },
  {
    "text": "everything I mean understand doing defensive programming but not at that",
    "start": "1105419",
    "end": "1110970"
  },
  {
    "text": "level so what happens here if the words I'm I'm pushing an eye that",
    "start": "1110970",
    "end": "1120570"
  },
  {
    "start": "1112000",
    "end": "1189000"
  },
  {
    "text": "is increased by one and under time span of 20 seconds you assert an API right so",
    "start": "1120570",
    "end": "1128240"
  },
  {
    "text": "pretty much what I want to see here is to measure how many requests I can post",
    "start": "1128240",
    "end": "1133950"
  },
  {
    "text": "in 20 seconds timespan and it says here I push that number three thousand and",
    "start": "1133950",
    "end": "1139830"
  },
  {
    "text": "five hundred requests pretty much who they went right we issued those requests",
    "start": "1139830",
    "end": "1148260"
  },
  {
    "text": "but what if I told you that the receiving party was them I'm using I",
    "start": "1148260",
    "end": "1156120"
  },
  {
    "text": "think I'm using async look at how many requests I pushed to the network but where is the",
    "start": "1156120",
    "end": "1165330"
  },
  {
    "text": "reliability here there is a guarantee that I received my request and we",
    "start": "1165330",
    "end": "1170760"
  },
  {
    "text": "understand other side nope so using async doesn't give you",
    "start": "1170760",
    "end": "1177690"
  },
  {
    "text": "something extra is more than that it gives you the impression that you pushed",
    "start": "1177690",
    "end": "1183990"
  },
  {
    "text": "more requests so you increase the throughput but you still have the same problem right so if you go back to HTTP",
    "start": "1183990",
    "end": "1192029"
  },
  {
    "start": "1189000",
    "end": "1313000"
  },
  {
    "text": "in general it doesn't matter what paradigm use it in when programming that it's sync by nature that's it and not",
    "start": "1192029",
    "end": "1201570"
  },
  {
    "text": "only that you make for each HTTP client now the in.net at least that problem is pretty",
    "start": "1201570",
    "end": "1207790"
  },
  {
    "text": "much solved but when using an issuing the new request to an HTTP client you",
    "start": "1207790",
    "end": "1214060"
  },
  {
    "text": "make a new TCP connection for each request absolutely and there are no",
    "start": "1214060",
    "end": "1219910"
  },
  {
    "text": "retries out of the box you add poly you add everything and there are no delivery",
    "start": "1219910",
    "end": "1226180"
  },
  {
    "text": "guarantee hey you issued the request on the site that issues the request everything is fine ok ask something from",
    "start": "1226180",
    "end": "1233170"
  },
  {
    "text": "the other side that's it I'm waiting for a death promise that the response will come back and it doesn't come back and location",
    "start": "1233170",
    "end": "1241510"
  },
  {
    "text": "transparency there is a pretty big issue here this you need to know exactly where",
    "start": "1241510",
    "end": "1248680"
  },
  {
    "text": "are you calling you need to know the domain you need to note maybe the port",
    "start": "1248680",
    "end": "1255010"
  },
  {
    "text": "assigned to your app why not and if you are on Paramus you need to have big lists with all your",
    "start": "1255010",
    "end": "1262810"
  },
  {
    "text": "apps and when your apps are changing in terms of domain or environments you need",
    "start": "1262810",
    "end": "1269230"
  },
  {
    "text": "to be very careful to change in your documents that you have and to remember",
    "start": "1269230",
    "end": "1277390"
  },
  {
    "text": "that you need to update your URLs the new URLs and internal HTTP is very good",
    "start": "1277390",
    "end": "1287710"
  },
  {
    "text": "for public facing API in terms of client apps I don't know mobile apps and so on it's",
    "start": "1287710",
    "end": "1294430"
  },
  {
    "text": "very good and it's very familiar to every junior developer if you match them",
    "start": "1294430",
    "end": "1300130"
  },
  {
    "text": "to them HTTP they will know that they have a body Heather and so on verbs and",
    "start": "1300130",
    "end": "1307600"
  },
  {
    "text": "pretty much everything they need get going and it's easy to debug right but",
    "start": "1307600",
    "end": "1313810"
  },
  {
    "start": "1313000",
    "end": "1357000"
  },
  {
    "text": "what happens if a new API comes in into discussion how about service discovery",
    "start": "1313810",
    "end": "1322200"
  },
  {
    "text": "let's say you do not have an API management fancy stuff like in the cloud",
    "start": "1322200",
    "end": "1328990"
  },
  {
    "text": "your on-premise you will need to document and to make the other services",
    "start": "1328990",
    "end": "1335410"
  },
  {
    "text": "aware that hey there is a new service in the network that you need to call and you",
    "start": "1335410",
    "end": "1340960"
  },
  {
    "text": "need to change all the parties involved if you have one new micro service that",
    "start": "1340960",
    "end": "1347020"
  },
  {
    "text": "needs to communicate with other three then you need to inform the other trees three micro services that hey here's the",
    "start": "1347020",
    "end": "1354370"
  },
  {
    "text": "new service you need how about timers we we briefly talked",
    "start": "1354370",
    "end": "1359740"
  },
  {
    "start": "1357000",
    "end": "1408000"
  },
  {
    "text": "about this but since the network is not reliable we need to expect time out and in timeouts and retries and so on brings",
    "start": "1359740",
    "end": "1367600"
  },
  {
    "text": "us a lot of let's call it patterns that and problems that we didn't have before",
    "start": "1367600",
    "end": "1374430"
  },
  {
    "text": "like we try policies and I will mention here a few a few patterns like circuit",
    "start": "1374430",
    "end": "1382270"
  },
  {
    "text": "breaker bohag bulkhead fallback and many others that we weren't aware before okay",
    "start": "1382270",
    "end": "1389650"
  },
  {
    "text": "we're gonna implement this retry policy document everything okay we thank God there is these libraries that take care",
    "start": "1389650",
    "end": "1396460"
  },
  {
    "text": "of these kinds of patterns for us but it's not so easy progressed so we need",
    "start": "1396460",
    "end": "1405700"
  },
  {
    "text": "to learn something new in terms of tracing there is there are a few options",
    "start": "1405700",
    "end": "1412600"
  },
  {
    "start": "1408000",
    "end": "1492000"
  },
  {
    "text": "you need to trace what request write HTTP request more than that so for each",
    "start": "1412600",
    "end": "1420940"
  },
  {
    "text": "request you issue through your api's you need to have something that will give",
    "start": "1420940",
    "end": "1428770"
  },
  {
    "text": "you the possibility to see okay I'm in the service a and I call service B that",
    "start": "1428770",
    "end": "1435550"
  },
  {
    "text": "service B as a response to my request needs to call some service old C right",
    "start": "1435550",
    "end": "1441220"
  },
  {
    "text": "you need to create all these passes to leave traces be able to debug in a way",
    "start": "1441220",
    "end": "1447220"
  },
  {
    "text": "or another what happens inside your system and it's not very easy to do",
    "start": "1447220",
    "end": "1452860"
  },
  {
    "text": "because you need to add correlation IDs and to store that those somewhere right",
    "start": "1452860",
    "end": "1460270"
  },
  {
    "text": "you can add correlation idea to Heather's or whatever technology stack",
    "start": "1460270",
    "end": "1466480"
  },
  {
    "text": "you you need but it's still a piece of work and microservices promote the glt and",
    "start": "1466480",
    "end": "1473800"
  },
  {
    "text": "the productivity and there's a team that isn't independent in their knows the business does the job delivers there",
    "start": "1473800",
    "end": "1479770"
  },
  {
    "text": "right but look that it's not so easy okay so now saying that HTTP okay maybe",
    "start": "1479770",
    "end": "1488830"
  },
  {
    "text": "it's not such a good options between the inter-service communication you say oh",
    "start": "1488830",
    "end": "1494610"
  },
  {
    "start": "1492000",
    "end": "1600000"
  },
  {
    "text": "recently there is something called G RPC still uses HTTP but HTTP too",
    "start": "1494610",
    "end": "1500590"
  },
  {
    "text": "it's very developer friendly and its high performance does very well to",
    "start": "1500590",
    "end": "1506500"
  },
  {
    "text": "serial nation and so on let's go ahead and use it maybe you've",
    "start": "1506500",
    "end": "1513790"
  },
  {
    "text": "seen Sean presentation but I will go to this very briefly its contract base you",
    "start": "1513790",
    "end": "1520030"
  },
  {
    "text": "basically specified what you need there are no nugget packages or whatever code",
    "start": "1520030",
    "end": "1527920"
  },
  {
    "text": "references you only reference these files and since it's you it uses HTTP to",
    "start": "1527920",
    "end": "1533920"
  },
  {
    "text": "it's inherently faster than previous HTTP the serialization makes it very",
    "start": "1533920",
    "end": "1542370"
  },
  {
    "text": "performant because it has a smaller payload but the deal is that you cannot",
    "start": "1542370",
    "end": "1548410"
  },
  {
    "text": "like debug this this is binary and you need special tools for it but it's",
    "start": "1548410",
    "end": "1554770"
  },
  {
    "text": "available in many language languages which well it may be beneficial for the",
    "start": "1554770",
    "end": "1561910"
  },
  {
    "text": "system because maybe you have a component that is written in go or in Java that you need to communicate with",
    "start": "1561910",
    "end": "1567640"
  },
  {
    "text": "right and also it has some code generation out of the box which is very nice and as a concept GRP steve relies",
    "start": "1567640",
    "end": "1576850"
  },
  {
    "text": "on these proto files that have a specific syntax and this proto files",
    "start": "1576850",
    "end": "1583660"
  },
  {
    "text": "will stay and will be let's call it shared in a way but Rob the ICD system",
    "start": "1583660",
    "end": "1591000"
  },
  {
    "text": "through your api's right so now you have no code references you have this proto",
    "start": "1591000",
    "end": "1597700"
  },
  {
    "text": "file that isn't common right so how it",
    "start": "1597700",
    "end": "1602860"
  },
  {
    "start": "1600000",
    "end": "1841000"
  },
  {
    "text": "looks it's basically like this it's you define this service you have here like service",
    "start": "1602860",
    "end": "1610010"
  },
  {
    "text": "called phoebo it's an RPC has a name has parameter and returns a type of data and",
    "start": "1610010",
    "end": "1617060"
  },
  {
    "text": "then you go there and specify the tapes types of data that are used by our service and pretty much this is it",
    "start": "1617060",
    "end": "1624140"
  },
  {
    "text": "you have the specification interface definition language and you're good to go using command-line tools and so on it",
    "start": "1624140",
    "end": "1630770"
  },
  {
    "text": "will generate code for you in no matter what language do you need right so G RPC",
    "start": "1630770",
    "end": "1638290"
  },
  {
    "text": "might be a good candidate right but we as a developer and I a new thing we kind",
    "start": "1638290",
    "end": "1648050"
  },
  {
    "text": "of need to think of some non-functional requirements we call them any farce in",
    "start": "1648050",
    "end": "1654620"
  },
  {
    "text": "architecture world what is a non-functional requirement it's pretty",
    "start": "1654620",
    "end": "1660470"
  },
  {
    "text": "much something that cannot be attested by a manual tester to validate in terms of functionality but it really helps the",
    "start": "1660470",
    "end": "1668090"
  },
  {
    "text": "business in terms of how the application of the system in itself should behave we",
    "start": "1668090",
    "end": "1675560"
  },
  {
    "text": "need to think about availability right we need to see if our services are up we",
    "start": "1675560",
    "end": "1680750"
  },
  {
    "text": "need to monitor that and we need to say hey those nines with 999 point many",
    "start": "1680750",
    "end": "1688010"
  },
  {
    "text": "nines availability right oh it's related",
    "start": "1688010",
    "end": "1693860"
  },
  {
    "text": "to that we need to see how fault tolerant our is our system we need to",
    "start": "1693860",
    "end": "1702410"
  },
  {
    "text": "think about latency and throughput of the system and of course reliability",
    "start": "1702410",
    "end": "1709070"
  },
  {
    "text": "some of these are in a way generating the others and are very",
    "start": "1709070",
    "end": "1715340"
  },
  {
    "text": "closely related to each other observability how do you observe a",
    "start": "1715340",
    "end": "1721070"
  },
  {
    "text": "system that is made of so many pieces and in itself each piece needs to be",
    "start": "1721070",
    "end": "1728270"
  },
  {
    "text": "available needs to have a high enough support and needs to be fault tolerant",
    "start": "1728270",
    "end": "1734260"
  },
  {
    "text": "because if you take into account the latency then your system might be he'll behave",
    "start": "1734260",
    "end": "1740059"
  },
  {
    "text": "well or not so well in different circumstances and also resilience right",
    "start": "1740059",
    "end": "1745989"
  },
  {
    "text": "so if we think about micro-services and all these things that should be in my",
    "start": "1745989",
    "end": "1752570"
  },
  {
    "text": "opinion might not be a popular opinion should be like common sense from for",
    "start": "1752570",
    "end": "1759349"
  },
  {
    "text": "every developer if your client or the business doesn't care about these you as",
    "start": "1759349",
    "end": "1766159"
  },
  {
    "text": "a developer should care about this because I know it's very easy to say in",
    "start": "1766159",
    "end": "1771859"
  },
  {
    "text": "front of your computer and write call deliver functionality you see immediately the response of what you are",
    "start": "1771859",
    "end": "1778940"
  },
  {
    "text": "doing but these things are very important for certain domains for",
    "start": "1778940",
    "end": "1785899"
  },
  {
    "text": "certain businesses right for example think about I don't know Black Friday or special promotion for a business that is",
    "start": "1785899",
    "end": "1793129"
  },
  {
    "text": "online like I don't Amazon right they need to process the requests fast as",
    "start": "1793129",
    "end": "1799009"
  },
  {
    "text": "fast as they can to take the clients money and also needs to be available so that to be able to take the clients",
    "start": "1799009",
    "end": "1806329"
  },
  {
    "text": "money right needs to be reliable if we think like okay maybe not to take the",
    "start": "1806329",
    "end": "1813409"
  },
  {
    "text": "clients money twice or so on right I need to be observable they need to have some ops guys to monitor the system the",
    "start": "1813409",
    "end": "1822289"
  },
  {
    "text": "in case of an extreme loading they need to scale very fast and if that load",
    "start": "1822289",
    "end": "1827719"
  },
  {
    "text": "decreases they need to decrease to let's say reduce their costs with the infrastructure and so on right now we",
    "start": "1827719",
    "end": "1836089"
  },
  {
    "text": "need to take into account all these things when designing and implementing something and if we think about marker",
    "start": "1836089",
    "end": "1844429"
  },
  {
    "start": "1841000",
    "end": "2130000"
  },
  {
    "text": "services there is the coupling court right beforehand when we talked about",
    "start": "1844429",
    "end": "1851479"
  },
  {
    "text": "all object-oriented programming and so on we said okay coupling high cohesion",
    "start": "1851479",
    "end": "1858709"
  },
  {
    "text": "location and so on then when we grow when you think about systems in their",
    "start": "1858709",
    "end": "1865909"
  },
  {
    "text": "entirety we need to think about logical coupling of the components in the systems and",
    "start": "1865909",
    "end": "1871280"
  },
  {
    "text": "temporal coupling and what HTTP pretty much does is to enforce a coupling",
    "start": "1871280",
    "end": "1879430"
  },
  {
    "text": "temporal because we need both systems to be up if those system needs to communicate with each other logical",
    "start": "1879430",
    "end": "1886480"
  },
  {
    "text": "coupling just because we need to share some way the interface definition",
    "start": "1886480",
    "end": "1892310"
  },
  {
    "text": "language so both parties know what to expect from each other right so even in",
    "start": "1892310",
    "end": "1901070"
  },
  {
    "text": "micro-services if we are using HTTP clients we have these op links that",
    "start": "1901070",
    "end": "1906490"
  },
  {
    "text": "supposedly micro service is solve but we go back to the monolith and introduce",
    "start": "1906490",
    "end": "1913040"
  },
  {
    "text": "nugget packages and code sharing and so on and we kind of defeat the purpose",
    "start": "1913040",
    "end": "1918070"
  },
  {
    "text": "okay moving on HTTP it is done it's not",
    "start": "1918070",
    "end": "1924650"
  },
  {
    "text": "so good but it's the first step when you do micro services the idea is it's with",
    "start": "1924650",
    "end": "1931160"
  },
  {
    "text": "micro services if you first do HTTP requests between between them then we",
    "start": "1931160",
    "end": "1936620"
  },
  {
    "text": "need to take a step back and say hey what other options do I have and then you have G RPC and after a",
    "start": "1936620",
    "end": "1944120"
  },
  {
    "text": "while same he lets evolve our architecture and move on and moving on means maybe at first doing",
    "start": "1944120",
    "end": "1952700"
  },
  {
    "text": "remote procedure calls a message broker and how this is looking like RPC in",
    "start": "1952700",
    "end": "1959330"
  },
  {
    "text": "terms of message broker it's kind of API called where indeed we try systems together but",
    "start": "1959330",
    "end": "1966770"
  },
  {
    "text": "we preserve their encapsulation and we make some external system calls look",
    "start": "1966770",
    "end": "1972950"
  },
  {
    "text": "local and there are no direct codependency oh how it's done basically we have a two",
    "start": "1972950",
    "end": "1980870"
  },
  {
    "text": "systems that write communicate with each other so a request goes but it goes through a queue not directly to a",
    "start": "1980870",
    "end": "1987260"
  },
  {
    "text": "service and from that queue it's picked up by let's call it handler service V",
    "start": "1987260",
    "end": "1993020"
  },
  {
    "text": "right and the service B processes the requests get the answer back to the",
    "start": "1993020",
    "end": "1998780"
  },
  {
    "text": "first service for the thank you it's replied right let me show you something",
    "start": "1998780",
    "end": "2005170"
  },
  {
    "text": "so I have here an RPC server RPC service",
    "start": "2005170",
    "end": "2010190"
  },
  {
    "text": "is not exactly correct instead I am using rabbitmq as a message broker but let me",
    "start": "2010190",
    "end": "2017600"
  },
  {
    "text": "show you something so in here I have this server I hope",
    "start": "2017600",
    "end": "2024020"
  },
  {
    "text": "it's big enough in terms of font so it's the server it's a console app I will",
    "start": "2024020",
    "end": "2029929"
  },
  {
    "text": "show you that also that awaits request and in the other side I will have a",
    "start": "2029929",
    "end": "2035179"
  },
  {
    "text": "client that issues requests right so the left-hand side wait and the other side",
    "start": "2035179",
    "end": "2042470"
  },
  {
    "text": "ask something and what s is same an i",
    "start": "2042470",
    "end": "2048320"
  },
  {
    "text": "right ok so it's a request response but",
    "start": "2048320",
    "end": "2055010"
  },
  {
    "text": "through a queue let me show how this queue looks this is rabbitmq the",
    "start": "2055010",
    "end": "2061669"
  },
  {
    "text": "interface is very nice and you have here the queues and when you start doing this",
    "start": "2061669",
    "end": "2071560"
  },
  {
    "text": "ok so the client will send an eye that's it an eye that is increased by 1 you see",
    "start": "2071560",
    "end": "2078230"
  },
  {
    "text": "that this queue has incoming stuff right",
    "start": "2078230",
    "end": "2085580"
  },
  {
    "text": "and this also but the server doesn't",
    "start": "2085580",
    "end": "2091040"
  },
  {
    "text": "process anything so let's see this is",
    "start": "2091040",
    "end": "2096408"
  },
  {
    "text": "request reply and the request reply means that it's not a sink I mean you",
    "start": "2096409",
    "end": "2105530"
  },
  {
    "text": "issue requests you wait for the response and that's it the response may not come",
    "start": "2105530",
    "end": "2111350"
  },
  {
    "text": "back but the issue is that the request you you you're giving there the through",
    "start": "2111350",
    "end": "2118820"
  },
  {
    "text": "the queue won't be lost anymore you will know that the request was there so just",
    "start": "2118820",
    "end": "2129770"
  },
  {
    "text": "the sec what do you gain versus HTTP right adding a queue you don't lose the",
    "start": "2129770",
    "end": "2135000"
  },
  {
    "start": "2130000",
    "end": "2176000"
  },
  {
    "text": "requests because the requests will stay in that queue until some some something",
    "start": "2135000",
    "end": "2141359"
  },
  {
    "text": "a consumer will be able to pick those and process them if it's needed you can",
    "start": "2141359",
    "end": "2147480"
  },
  {
    "text": "add more instances of consumers process the requests is like adding more more",
    "start": "2147480",
    "end": "2152970"
  },
  {
    "text": "servers to be able to handle the load and you can apparently spread the load and yes you can process more requests",
    "start": "2152970",
    "end": "2160890"
  },
  {
    "text": "because it's done through a different protocol than HTTP called AMQP and we'll",
    "start": "2160890",
    "end": "2165900"
  },
  {
    "text": "talk about at the end but issue is it still sink and you need to match the",
    "start": "2165900",
    "end": "2171900"
  },
  {
    "text": "request with the response like in terms of HTTP so pretty much you didn't solve",
    "start": "2171900",
    "end": "2177960"
  },
  {
    "start": "2176000",
    "end": "2231000"
  },
  {
    "text": "anything but you solve the let's call it real life the temporal coupling issue",
    "start": "2177960",
    "end": "2184950"
  },
  {
    "text": "because if the processing party is someone said that you lose the ability",
    "start": "2184950",
    "end": "2191420"
  },
  {
    "text": "yeah you kind of but I'm sure I'm gonna show you it's the code is very easy so",
    "start": "2191420",
    "end": "2196970"
  },
  {
    "text": "messaging what's a message right it's like an envelope with the body at the header so if a request has headers and a",
    "start": "2196970",
    "end": "2206069"
  },
  {
    "text": "body and a verb translating that to the message you will have the same body in",
    "start": "2206069",
    "end": "2211920"
  },
  {
    "text": "the body of the message and the Heather like dictionary true this envelope",
    "start": "2211920",
    "end": "2220500"
  },
  {
    "text": "it's the headers in a message is no matter what message broker you are using",
    "start": "2220500",
    "end": "2225990"
  },
  {
    "text": "is the same it's a dictionary where you can add whatever you want in there so",
    "start": "2225990",
    "end": "2231740"
  },
  {
    "start": "2231000",
    "end": "2350000"
  },
  {
    "text": "messaging as a concept as a whole will give you a loosely coupled the integration you won't have like nugget",
    "start": "2231740",
    "end": "2238680"
  },
  {
    "text": "packages flying around to reference in different systems and it doesn't require",
    "start": "2238680",
    "end": "2245039"
  },
  {
    "text": "both system to be up more than that he can give you a lot of flexibility in",
    "start": "2245039",
    "end": "2251490"
  },
  {
    "text": "terms of what you can do with the messages for example you can create something like pipelines made of from",
    "start": "2251490",
    "end": "2258930"
  },
  {
    "text": "these cubes called the enrichers right - I don't know - add something",
    "start": "2258930",
    "end": "2264810"
  },
  {
    "text": "threat to your messages and then you're gonna send that message to a different queue to be picked up by consumers and",
    "start": "2264810",
    "end": "2270780"
  },
  {
    "text": "so on but if you heard about cap tail theorem",
    "start": "2270780",
    "end": "2276140"
  },
  {
    "text": "you cannot have three three things at the same time you can have only two and",
    "start": "2276140",
    "end": "2285170"
  },
  {
    "text": "messaging system straight consistency or availability but the fact that you are",
    "start": "2285170",
    "end": "2293070"
  },
  {
    "text": "not losing messages increased is your real I built right everything that goes",
    "start": "2293070",
    "end": "2298260"
  },
  {
    "text": "through your system is there somewhere but is there and not only that is there you can replay that if there have they",
    "start": "2298260",
    "end": "2309270"
  },
  {
    "text": "have this concept of dead letter Q where some messages that can't be processed go",
    "start": "2309270",
    "end": "2315660"
  },
  {
    "text": "there and you can see them see those there you can pick up from there and so",
    "start": "2315660",
    "end": "2320940"
  },
  {
    "text": "on you can create rules depending on the message brokers or you are using and so on but compared to HTTP you have a",
    "start": "2320940",
    "end": "2328800"
  },
  {
    "text": "reliable system in a way right but you want to lose requests or messages",
    "start": "2328800",
    "end": "2334500"
  },
  {
    "text": "because those messages go through something work you usually and stay",
    "start": "2334500",
    "end": "2339780"
  },
  {
    "text": "there even if the other party is down what will happen is when the other party will",
    "start": "2339780",
    "end": "2345540"
  },
  {
    "text": "come back up where those messages will be processed okay I have another small",
    "start": "2345540",
    "end": "2355350"
  },
  {
    "start": "2350000",
    "end": "2494000"
  },
  {
    "text": "demo let me close this out okay RPC",
    "start": "2355350",
    "end": "2362690"
  },
  {
    "text": "close",
    "start": "2362690",
    "end": "2365690"
  },
  {
    "text": "just a sec okay so I have here something that is a",
    "start": "2369580",
    "end": "2377440"
  },
  {
    "text": "simply sends messages like the same I in a time span and you'll see that not only",
    "start": "2377440",
    "end": "2383470"
  },
  {
    "text": "the throughput is way higher than we've seen before",
    "start": "2383470",
    "end": "2388500"
  },
  {
    "text": "they've 70,000 and so on and time is passing and this is going is going there",
    "start": "2389640",
    "end": "2396430"
  },
  {
    "text": "so I'm mimicking the fact that I'm issuing requests or creating messages",
    "start": "2396430",
    "end": "2402330"
  },
  {
    "text": "right the fact is nothing consumes them there isn't the receiving party is not up",
    "start": "2402330",
    "end": "2409450"
  },
  {
    "text": "right so pretty big amount of messages process and if I'm looking through the",
    "start": "2409450",
    "end": "2417330"
  },
  {
    "text": "rabbitmq look let me just zoom a bit I",
    "start": "2417330",
    "end": "2423120"
  },
  {
    "text": "have this cold pump you're very inspired where I have this amount of messages and",
    "start": "2423120",
    "end": "2432060"
  },
  {
    "text": "are there because nothing consumed them nothing received there also someone",
    "start": "2432060",
    "end": "2440260"
  },
  {
    "text": "mentioned in the chat that I can also send in the RabbitMQ in the interface",
    "start": "2440260",
    "end": "2445270"
  },
  {
    "text": "yes you can also do that so not only that you have a visibility in terms of",
    "start": "2445270",
    "end": "2453400"
  },
  {
    "text": "how many messages went through your queue and so on how many are ready how many are published the total and so on",
    "start": "2453400",
    "end": "2460030"
  },
  {
    "text": "you can also get messages from there VCC is such a big payload because it's",
    "start": "2460030",
    "end": "2468400"
  },
  {
    "text": "only an int 0 1 2 or 3 and so on increasing I in that 20 seconds time",
    "start": "2468400",
    "end": "2474700"
  },
  {
    "text": "spent but the messages are here so whenever the other system will be back",
    "start": "2474700",
    "end": "2480250"
  },
  {
    "text": "up because now is down will pick up the messages and it will process it process",
    "start": "2480250",
    "end": "2485560"
  },
  {
    "text": "those right so reliability okay so let's",
    "start": "2485560",
    "end": "2491230"
  },
  {
    "text": "see further what we have a think distributed system supposed supposed to",
    "start": "2491230",
    "end": "2498850"
  },
  {
    "text": "be async because we want the best out of those illa teas so to do this at first",
    "start": "2498850",
    "end": "2507770"
  },
  {
    "text": "you can do something like this you issue a request to a cube other requests rikuo or as many requests",
    "start": "2507770",
    "end": "2514010"
  },
  {
    "text": "as you can and there will be a handler that will pick up these requests or messages and will respond in another",
    "start": "2514010",
    "end": "2521089"
  },
  {
    "text": "queue and in the other hand there will be something picking them up right so",
    "start": "2521089",
    "end": "2527690"
  },
  {
    "text": "picking them up what you'll need to do is to see what you sent in these",
    "start": "2527690",
    "end": "2536390"
  },
  {
    "text": "messages right and you say oh how am i how much messages how many messages I'm",
    "start": "2536390",
    "end": "2541849"
  },
  {
    "text": "sending 100,000 and something compared to 1,000 or three hundreds when using",
    "start": "2541849",
    "end": "2548990"
  },
  {
    "text": "HTTP very cool but what happens if you add the database you need to send",
    "start": "2548990",
    "end": "2555170"
  },
  {
    "text": "something to process something and then save that's something in a database well then you have a different set of",
    "start": "2555170",
    "end": "2562280"
  },
  {
    "text": "problems because we all know that the",
    "start": "2562280",
    "end": "2571640"
  },
  {
    "text": "database is let's say limited you can",
    "start": "2571640",
    "end": "2576829"
  },
  {
    "text": "indeed process more requests are using async you try to get through your system",
    "start": "2576829",
    "end": "2581839"
  },
  {
    "text": "as many requests as you can or messages right you can process them faster because the protocol is different in",
    "start": "2581839",
    "end": "2588380"
  },
  {
    "text": "this case you do not lose them so you increase the reliability but in some",
    "start": "2588380",
    "end": "2593450"
  },
  {
    "text": "cases you may move your problem some other sides of the system and in this",
    "start": "2593450",
    "end": "2598970"
  },
  {
    "text": "case is database because and also eventual consistency remains or becomes",
    "start": "2598970",
    "end": "2604760"
  },
  {
    "text": "the problem depending on how you design your system what is the solution because",
    "start": "2604760",
    "end": "2611030"
  },
  {
    "start": "2609000",
    "end": "2659000"
  },
  {
    "text": "we know the connection pool is cars we have I don't like 100 1000 or whatever but if the throughput is so much bigger",
    "start": "2611030",
    "end": "2620180"
  },
  {
    "text": "than your connection pool you'll have issues and how you can solve this is by",
    "start": "2620180",
    "end": "2626839"
  },
  {
    "text": "batch processing the messages or I don't know maybe we use the semaphore to",
    "start": "2626839",
    "end": "2632299"
  },
  {
    "text": "process the meme in batches or add more consumers but adding more",
    "start": "2632299",
    "end": "2638780"
  },
  {
    "text": "consumers for the same queue will end you up in the same place right because",
    "start": "2638780",
    "end": "2646460"
  },
  {
    "text": "you're still gonna have 100 connections to the database and you have like three consumers consuming five messages per",
    "start": "2646460",
    "end": "2653060"
  },
  {
    "text": "second or so on and maybe the numbers don't add up",
    "start": "2653060",
    "end": "2658160"
  },
  {
    "text": "right so why use a messaging system with micro-services and why switch from the",
    "start": "2658160",
    "end": "2666950"
  },
  {
    "start": "2659000",
    "end": "2675000"
  },
  {
    "text": "HTTP to this messaging stuff because as we see it solves some issues but the",
    "start": "2666950",
    "end": "2673220"
  },
  {
    "text": "introduces on others so for agility I would say because you have faster",
    "start": "2673220",
    "end": "2678349"
  },
  {
    "start": "2675000",
    "end": "2804000"
  },
  {
    "text": "development once you get a grasp of it there is no integration process there",
    "start": "2678349",
    "end": "2683810"
  },
  {
    "text": "are no not yet packages or whatever packages to share in there you depend",
    "start": "2683810",
    "end": "2689119"
  },
  {
    "text": "only on a response or or not this design of a system that will give you the",
    "start": "2689119",
    "end": "2696079"
  },
  {
    "text": "maximum benefits themes will still have full ownership of understanding of the",
    "start": "2696079",
    "end": "2702230"
  },
  {
    "text": "code base but there is the slides let learning curve when moving from the HTTP",
    "start": "2702230",
    "end": "2709369"
  },
  {
    "text": "to my ear to my two messaging because you do not have this part in requesting",
    "start": "2709369",
    "end": "2715310"
  },
  {
    "text": "something waiting for response or debugging at the breakpoint it was",
    "start": "2715310",
    "end": "2720710"
  },
  {
    "text": "happening and so on and usually when you're on your local development machine",
    "start": "2720710",
    "end": "2726560"
  },
  {
    "text": "everything works smooth but you realize soon that well if you need the messages",
    "start": "2726560",
    "end": "2732530"
  },
  {
    "text": "to be in order and sometimes there aren't in order and so on you'll be in",
    "start": "2732530",
    "end": "2738859"
  },
  {
    "text": "you lose the debug enos of the of the entire system but that can also be",
    "start": "2738859",
    "end": "2744470"
  },
  {
    "text": "solved you need to trace you traced also in HTTP you can switch technologies if",
    "start": "2744470",
    "end": "2750890"
  },
  {
    "text": "needed so having this this broker and these queues will allow you to switch",
    "start": "2750890",
    "end": "2757599"
  },
  {
    "text": "microservices technologies maybe you should see that i'll go or python is",
    "start": "2757599",
    "end": "2763540"
  },
  {
    "text": "suitable enough tech or language for a specific part of your system",
    "start": "2763540",
    "end": "2769910"
  },
  {
    "text": "then you can switch it maybe you find that dotnet is not so good in nano parsing messages or whatever or Java",
    "start": "2769910",
    "end": "2776450"
  },
  {
    "text": "isn't or Java is better why not and then you can switch okay I'm gonna I'm deciding that starting tomorrow that",
    "start": "2776450",
    "end": "2783920"
  },
  {
    "text": "part of the system will be written in a different language so you can go ahead assign that small part of the system",
    "start": "2783920",
    "end": "2791420"
  },
  {
    "text": "what specific team I think we will see the job done and then you will need to",
    "start": "2791420",
    "end": "2797480"
  },
  {
    "text": "do just the deploy and that's it you can have things working in there so not only",
    "start": "2797480",
    "end": "2805970"
  },
  {
    "start": "2804000",
    "end": "2850000"
  },
  {
    "text": "agility but you'll have better scalability and you have increased throughput with micro services right",
    "start": "2805970",
    "end": "2813049"
  },
  {
    "text": "because from a small machine you go to a bigger machine and you could scale up",
    "start": "2813049",
    "end": "2819200"
  },
  {
    "text": "but now not only you can scale up you can scale out so the two ways of scaling",
    "start": "2819200",
    "end": "2824470"
  },
  {
    "text": "by adding more machines or adding on certain machine Moore's the processing",
    "start": "2824470",
    "end": "2831200"
  },
  {
    "text": "power or maybe more memory and also why not",
    "start": "2831200",
    "end": "2836390"
  },
  {
    "text": "scaling up you can do all these things by having marker services and a",
    "start": "2836390",
    "end": "2841490"
  },
  {
    "text": "messaging system in here because it will give you back something that HTTP didn't",
    "start": "2841490",
    "end": "2847700"
  },
  {
    "text": "give you in the first place and also you will have increased throughput I mean you saw the difference we here I had an",
    "start": "2847700",
    "end": "2854510"
  },
  {
    "start": "2850000",
    "end": "2883000"
  },
  {
    "text": "old machine that the difference was this but in the current machine I had one",
    "start": "2854510",
    "end": "2859700"
  },
  {
    "text": "thousand and something messages process which is it's a lot right think of I",
    "start": "2859700",
    "end": "2865700"
  },
  {
    "text": "don't know IOC a sensor data that comes",
    "start": "2865700",
    "end": "2870710"
  },
  {
    "text": "in your system and needs to be processed and so on I mean you need to be fast",
    "start": "2870710",
    "end": "2876470"
  },
  {
    "text": "there to process as much as you can you have an increase to the messaging will give you that also elasticity you can",
    "start": "2876470",
    "end": "2884569"
  },
  {
    "start": "2883000",
    "end": "2898000"
  },
  {
    "text": "scale down a reduced cost you can spin another instance that will consume your app to process faster then you can kill",
    "start": "2884569",
    "end": "2893119"
  },
  {
    "text": "one of those consumers as soon as your load period ends up not only that but it",
    "start": "2893119",
    "end": "2899750"
  },
  {
    "start": "2898000",
    "end": "2919000"
  },
  {
    "text": "will give you a lot of ILIT ease reliability that way better than in HTTP like stability",
    "start": "2899750",
    "end": "2907040"
  },
  {
    "text": "reliability twice increased throughput elasticity and pretty much a lot of",
    "start": "2907040",
    "end": "2913640"
  },
  {
    "text": "elytis performance and filter tolerance out-of-the-box what tools framers and",
    "start": "2913640",
    "end": "2920300"
  },
  {
    "start": "2919000",
    "end": "2989000"
  },
  {
    "text": "options do you have there are a lot other they call them buses or message brokers or simply",
    "start": "2920300",
    "end": "2928250"
  },
  {
    "text": "messaging systems they pretty much all relies on we rely on cues of some kind",
    "start": "2928250",
    "end": "2936070"
  },
  {
    "text": "with different level of abstraction and service pass now it's very cool and it's",
    "start": "2936070",
    "end": "2942920"
  },
  {
    "text": "not only very cool they have a free course available if you look on their site on distributed systems whatever",
    "start": "2942920",
    "end": "2950839"
  },
  {
    "text": "system you will see here like MQM Q with Q or something it's the same relies on",
    "start": "2950839",
    "end": "2958250"
  },
  {
    "text": "Q's right kafka 0 and Q and many more in",
    "start": "2958250",
    "end": "2965540"
  },
  {
    "text": "case of these systems the level of abstraction is more or less depending on",
    "start": "2965540",
    "end": "2970910"
  },
  {
    "text": "it and the protocol they use is maybe HTTP on a forum or others but in this",
    "start": "2970910",
    "end": "2980180"
  },
  {
    "text": "case I choose random cube because is the first one I got the chance to work with",
    "start": "2980180",
    "end": "2986349"
  },
  {
    "text": "and more than that if we look at the types of these systems we can look at",
    "start": "2986349",
    "end": "2993740"
  },
  {
    "start": "2989000",
    "end": "3045000"
  },
  {
    "text": "simply queues that will all familiar with actor model there was a talk today",
    "start": "2993740",
    "end": "2999140"
  },
  {
    "text": "about actor models akkad net and so on and message brokers what's the cue",
    "start": "2999140",
    "end": "3004960"
  },
  {
    "text": "simply the sender sent something through a queue or receivers pulls from that queue and it's very useful for point",
    "start": "3004960",
    "end": "3012400"
  },
  {
    "text": "upon point communication messages are ordered in timestamp so is the most",
    "start": "3012400",
    "end": "3018010"
  },
  {
    "text": "basic queuing system that messaging system that you can you can get its pull",
    "start": "3018010",
    "end": "3024609"
  },
  {
    "text": "mode so the receiver will take things from there right and as on sqs and many",
    "start": "3024609",
    "end": "3031750"
  },
  {
    "text": "others you you can also do it yourself but you will lose the the",
    "start": "3031750",
    "end": "3037450"
  },
  {
    "text": "fostering options that are offered out of the box and the dead-letter queues and so on of these systems after model",
    "start": "3037450",
    "end": "3046780"
  },
  {
    "start": "3045000",
    "end": "3063000"
  },
  {
    "text": "early on a cadet net are born from reactive programming I wouldn't get into",
    "start": "3046780",
    "end": "3053200"
  },
  {
    "text": "details here because there was a talk today it have they have at most once",
    "start": "3053200",
    "end": "3058960"
  },
  {
    "text": "delivery and usually run on top of other systems if they are born in a way from",
    "start": "3058960",
    "end": "3065829"
  },
  {
    "text": "the reactive manifesto because the system this needs to be responsive enough resilient and message drivel and",
    "start": "3065829",
    "end": "3073150"
  },
  {
    "text": "elastic because nowadays let's take the modern web right if we go to a website",
    "start": "3073150",
    "end": "3078970"
  },
  {
    "text": "and then we click a button and nothing happens where we wait and we see the",
    "start": "3078970",
    "end": "3084460"
  },
  {
    "text": "spinner in the air we turned to what with is this crappy website I'm gonna",
    "start": "3084460",
    "end": "3090790"
  },
  {
    "text": "look some other website right so the more the data is increasing so the",
    "start": "3090790",
    "end": "3097750"
  },
  {
    "text": "storage is very cheap the amount of data to transfer into our system is very big",
    "start": "3097750",
    "end": "3103619"
  },
  {
    "text": "so we need to process data faster and to respond faster to adapt to the needs of",
    "start": "3103619",
    "end": "3110980"
  },
  {
    "text": "the modern web right by the way this reactive manifesto as an FYI was first",
    "start": "3110980",
    "end": "3117369"
  },
  {
    "text": "mentioned in 73 and 2009 it was the",
    "start": "3117369",
    "end": "3123579"
  },
  {
    "text": "first Java version but well the message",
    "start": "3123579",
    "end": "3128890"
  },
  {
    "start": "3127000",
    "end": "3222000"
  },
  {
    "text": "brokers are different species of these messaging systems there are like a",
    "start": "3128890",
    "end": "3134470"
  },
  {
    "text": "control tower that control airplanes that are in the airports and so on what",
    "start": "3134470",
    "end": "3143260"
  },
  {
    "text": "happens in a message broker they supervise everything they know how to handle let's call it who load they know",
    "start": "3143260",
    "end": "3150579"
  },
  {
    "text": "how to route messaging messages on different queues depending on some",
    "start": "3150579",
    "end": "3156849"
  },
  {
    "text": "routing keys for example RabbitMQ does this they can have one or many consumers",
    "start": "3156849",
    "end": "3164589"
  },
  {
    "text": "and they can handle connection in these connections of these consumers out-of-the-box and very well",
    "start": "3164589",
    "end": "3171340"
  },
  {
    "text": "and also they have this dead letter Q concept which means that a message is that can't be processed or sent there a",
    "start": "3171340",
    "end": "3178150"
  },
  {
    "text": "certain amount of time that is configurable and also it's configured from figure above by some other other",
    "start": "3178150",
    "end": "3186640"
  },
  {
    "text": "means depending on its system and go to this letter Q and you won't lose that",
    "start": "3186640",
    "end": "3191680"
  },
  {
    "text": "message you will find it there like garbage poison message is also called the guarantees of these message brokers",
    "start": "3191680",
    "end": "3199990"
  },
  {
    "text": "are of three sides and they use different protocols",
    "start": "3199990",
    "end": "3205590"
  },
  {
    "text": "other examples of message brokers right Oh Nets RabbitMQ Nets by example it's",
    "start": "3206460",
    "end": "3213100"
  },
  {
    "text": "used by HTC HTC demons Ericsson and so on and they",
    "start": "3213100",
    "end": "3219550"
  },
  {
    "text": "have handle loads big loads very well about the guarantee of delivering there",
    "start": "3219550",
    "end": "3226720"
  },
  {
    "start": "3222000",
    "end": "3275000"
  },
  {
    "text": "are just three of them and each of them I will just mention briefly exactly what",
    "start": "3226720",
    "end": "3232450"
  },
  {
    "text": "it means like your request will be delivered to a cure and consumer exactly once at least once right and at most",
    "start": "3232450",
    "end": "3239770"
  },
  {
    "text": "once depending on the types of message delivery types you need in your system",
    "start": "3239770",
    "end": "3247150"
  },
  {
    "text": "you might end up in troubles or not but that deserves a totally different talk",
    "start": "3247150",
    "end": "3254850"
  },
  {
    "text": "so if the business needs specific and order messages you need to choose one of",
    "start": "3254850",
    "end": "3262090"
  },
  {
    "text": "these if the order doesn't matter maybe you can choose any of these and so on",
    "start": "3262090",
    "end": "3267850"
  },
  {
    "text": "and another thing not all old message brokers support all three kinds right",
    "start": "3267850",
    "end": "3276330"
  },
  {
    "start": "3275000",
    "end": "3419000"
  },
  {
    "text": "light weights cues are first-in first-out usually and support this awesome protocol that I really enjoyed",
    "start": "3276420",
    "end": "3283290"
  },
  {
    "text": "and pretty much all of them have at least once delivered mqp I mentioned it",
    "start": "3283290",
    "end": "3290350"
  },
  {
    "text": "briefly it's a protocol born a long time",
    "start": "3290350",
    "end": "3295720"
  },
  {
    "text": "ago now has the version of one one zero it's a let's call it nurtured by the OSS",
    "start": "3295720",
    "end": "3304240"
  },
  {
    "text": "the um it has a guarantee message delivery",
    "start": "3304240",
    "end": "3310030"
  },
  {
    "text": "you have no DNS resolve and no new DCP connections with each message you pass",
    "start": "3310030",
    "end": "3316180"
  },
  {
    "text": "through and it has programmatic routing grid tries are out of the box and also",
    "start": "3316180",
    "end": "3325000"
  },
  {
    "text": "by hand you can acknowledge or not acknowledge something a message",
    "start": "3325000",
    "end": "3330220"
  },
  {
    "text": "processing out of the box right so",
    "start": "3330220",
    "end": "3336510"
  },
  {
    "text": "compared to HTTP now we have a lot of things out of the box just by changing",
    "start": "3336510",
    "end": "3341740"
  },
  {
    "text": "the protocol and how it looks this AMQP in it took me awhile to find this",
    "start": "3341740",
    "end": "3348340"
  },
  {
    "text": "picture so it's basically like a channel right because it has this concept of a",
    "start": "3348340",
    "end": "3354100"
  },
  {
    "text": "channel and inside the channel you have back and forth that's called ways of sending messages",
    "start": "3354100",
    "end": "3361090"
  },
  {
    "text": "and if you look at this I don't know red one think of a connection as being the",
    "start": "3361090",
    "end": "3367240"
  },
  {
    "text": "red rubber stuff and the channels are the words inside of it I think I did",
    "start": "3367240",
    "end": "3372760"
  },
  {
    "text": "that you open a connection once and then you move data to it right compared to HTTP or for which each",
    "start": "3372760",
    "end": "3380470"
  },
  {
    "text": "request you need to do another TCP connection another TCP connection and so on and that's one of the reasons that",
    "start": "3380470",
    "end": "3387610"
  },
  {
    "text": "makes em to be very fast another example I can give you that we use like a ship",
    "start": "3387610",
    "end": "3395620"
  },
  {
    "text": "service bus that behind-the-scenes uses queues and so on but we change the",
    "start": "3395620",
    "end": "3401890"
  },
  {
    "text": "protocol and we ended up like doubling the throughput in our system just by",
    "start": "3401890",
    "end": "3407260"
  },
  {
    "text": "changing the protocol so if you you already using this kind of system look",
    "start": "3407260",
    "end": "3415780"
  },
  {
    "text": "for mqp it will pay out so depending on the",
    "start": "3415780",
    "end": "3421030"
  },
  {
    "start": "3419000",
    "end": "3433000"
  },
  {
    "text": "broker you have you can have point-to-point okay so from point A to point B I need to send the message",
    "start": "3421030",
    "end": "3428520"
  },
  {
    "text": "something like this based on a routing key Oh some kind or you can run out or",
    "start": "3428520",
    "end": "3435790"
  },
  {
    "start": "3433000",
    "end": "3452000"
  },
  {
    "text": "broadcast Oh your consumers will get a copy of the",
    "start": "3435790",
    "end": "3442400"
  },
  {
    "text": "same message a shirt if you're talking about cloud as",
    "start": "3442400",
    "end": "3448970"
  },
  {
    "text": "the similar card said but it's called Asia topics right this topic exchange in",
    "start": "3448970",
    "end": "3456770"
  },
  {
    "start": "3452000",
    "end": "3498000"
  },
  {
    "text": "rabbit is called topic because you can assign a routing key that has a pattern and depending on the routing here",
    "start": "3456770",
    "end": "3462619"
  },
  {
    "text": "sending it will end up in a queue or another queue depending on what you add",
    "start": "3462619",
    "end": "3468020"
  },
  {
    "text": "in here so starred means that if we have a word and in front and orange and then",
    "start": "3468020",
    "end": "3473690"
  },
  {
    "text": "something else it might go in q1 and if you have lazy dot something then it or",
    "start": "3473690",
    "end": "3482089"
  },
  {
    "text": "surely end up in the second queue where we'll be processed by a consumer right",
    "start": "3482089",
    "end": "3487369"
  },
  {
    "text": "and it's very powerful think of this scenario about I don't know sending waltz with a different",
    "start": "3487369",
    "end": "3493430"
  },
  {
    "text": "severity or your Ops guys some",
    "start": "3493430",
    "end": "3499040"
  },
  {
    "start": "3498000",
    "end": "3529000"
  },
  {
    "text": "preferences enterprise integration patterns we'll have more details and a",
    "start": "3499040",
    "end": "3505430"
  },
  {
    "text": "lot of details and it's very useful to read and also designing data intensive application you might want to have a",
    "start": "3505430",
    "end": "3513079"
  },
  {
    "text": "look at this it both of these are like Bibles in terms of not size but in terms",
    "start": "3513079",
    "end": "3521720"
  },
  {
    "text": "of know-how around micro services and integrating different different systems",
    "start": "3521720",
    "end": "3529450"
  },
  {
    "start": "3529000",
    "end": "3546000"
  },
  {
    "text": "what I want to say is that distributed systems in their way of being are about",
    "start": "3529720",
    "end": "3536540"
  },
  {
    "text": "trade-offs and you need to be very careful about picking what is really",
    "start": "3536540",
    "end": "3542480"
  },
  {
    "text": "important for your business for your client and bear in mind that HTTP is not",
    "start": "3542480",
    "end": "3549020"
  },
  {
    "start": "3546000",
    "end": "3600000"
  },
  {
    "text": "the only option worse when you first start with micro services do that it is the easy way out but then as soon as you",
    "start": "3549020",
    "end": "3556220"
  },
  {
    "text": "can investigate and move on evolve your architecture because it will",
    "start": "3556220",
    "end": "3561470"
  },
  {
    "text": "only make your system better and more reliable and will add all the LEDs",
    "start": "3561470",
    "end": "3566630"
  },
  {
    "text": "you're so and many others so remember that HTTP is not reliable",
    "start": "3566630",
    "end": "3572960"
  },
  {
    "text": "and you lose requests and you do not even know that request was made and with",
    "start": "3572960",
    "end": "3580400"
  },
  {
    "text": "messaging you can process more you have increased your boot you have reliability and you won't have that temporal",
    "start": "3580400",
    "end": "3586400"
  },
  {
    "text": "coupling so I think time's up thank you for being here it was a",
    "start": "3586400",
    "end": "3594619"
  },
  {
    "text": "pleasure for me I'm very sorry that I couldn't have in be in the same room with you guys you can find me on Twitter",
    "start": "3594619",
    "end": "3601700"
  },
  {
    "text": "and also you can find me on slack if you have questions I saw some small the",
    "start": "3601700",
    "end": "3607760"
  },
  {
    "text": "tooltips popping up but let's meet on on snack if you have questions thank you",
    "start": "3607760",
    "end": "3613550"
  },
  {
    "text": "guys enjoyed the race or the rest of your conference okay thank you very much",
    "start": "3613550",
    "end": "3620500"
  },
  {
    "text": "thank you",
    "start": "3620500",
    "end": "3623589"
  },
  {
    "text": "you",
    "start": "3629609",
    "end": "3631670"
  }
]