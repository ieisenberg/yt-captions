[
  {
    "start": "0",
    "end": "84000"
  },
  {
    "text": "my name is Jimmy Bogart you can find my talks and presentations on my github at",
    "start": "329",
    "end": "5430"
  },
  {
    "text": "github.com /j Bogart you can also follow me on twitter @ @j bogart and i blog",
    "start": "5430",
    "end": "10860"
  },
  {
    "text": "about this and a lot of other topics on my blog at also Jimmy Bogart comm so",
    "start": "10860",
    "end": "17070"
  },
  {
    "text": "this talk is a story of distributed system failures and some patterns and",
    "start": "17070",
    "end": "22410"
  },
  {
    "text": "practices we can put into place to help now I would say to eliminate those failures but help to address them and",
    "start": "22410",
    "end": "29670"
  },
  {
    "text": "this story actually starts off with a developer colleague of mine we'll call him bill",
    "start": "29670",
    "end": "35370"
  },
  {
    "text": "mainly because that's actually his name bill bill came to me with this really worried look on his face like he was",
    "start": "35370",
    "end": "41250"
  },
  {
    "text": "almost sweating he was so worried now bill is a pretty kind of straight-laced even-keeled sort of person so if he",
    "start": "41250",
    "end": "48629"
  },
  {
    "text": "comes to me looking really worried like some developers are pretty high-strung and I'm like ok I'll talk him down",
    "start": "48629",
    "end": "53640"
  },
  {
    "text": "there's nothing really wrong but bill comes to me with the worried look in his face I know something is really really wrong obviously cuz to me he says hey",
    "start": "53640",
    "end": "60870"
  },
  {
    "text": "I'm reviewing some code for a client that is for an e-commerce website that's",
    "start": "60870",
    "end": "67200"
  },
  {
    "text": "about to get shipped and I saw some stuff that had me really really worried I said ok bill you know I I believe him",
    "start": "67200",
    "end": "73229"
  },
  {
    "text": "because again he never he never gets worried it was it okay let's grab a conference room put the code on the",
    "start": "73229",
    "end": "78869"
  },
  {
    "text": "screen and then just show me what you're talking about just just walk me through what you see here and study showed me",
    "start": "78869",
    "end": "84060"
  },
  {
    "start": "84000",
    "end": "84000"
  },
  {
    "text": "these just a little six six little lines of code that looks so simple and innocuous but hit a lot of really big",
    "start": "84060",
    "end": "91619"
  },
  {
    "text": "problems underneath the covers and so I've kind of distilled it down to these six lines of code now these are the most",
    "start": "91619",
    "end": "97890"
  },
  {
    "text": "important six lines of code in this application because this is the part where they click the button that says place order and all the stuff happens to",
    "start": "97890",
    "end": "105450"
  },
  {
    "text": "actually take their money processor order and do everything so if this page doesn't work then the company doesn't",
    "start": "105450",
    "end": "111720"
  },
  {
    "text": "make money so it's very very important that this that this set of code works so I said okay bill I just walk me through",
    "start": "111720",
    "end": "117869"
  },
  {
    "text": "what you see here and just kind of walk me through what's going on here so he says okay the first thing we do as",
    "start": "117869",
    "end": "123060"
  },
  {
    "text": "part of processing a payment when they click that very very important button is first we grab the customer from the",
    "start": "123060",
    "end": "129899"
  },
  {
    "text": "database so they have a cart some card information they hate place so we're gonna go grab some information",
    "start": "129899",
    "end": "135250"
  },
  {
    "text": "out of the database I said okay nothing too bad here so we're gonna go ahead and take that customer information and the",
    "start": "135250",
    "end": "141340"
  },
  {
    "text": "card information and create an order based on the cart and customer detail it's like okay so far so good",
    "start": "141340",
    "end": "147760"
  },
  {
    "text": "okay now that we have their card information we have the total now we're going to go ahead and call the stripe",
    "start": "147760",
    "end": "153040"
  },
  {
    "text": "payment service to post a payment to stripe it's like okay okay next after we",
    "start": "153040",
    "end": "160800"
  },
  {
    "text": "successfully call stripe we need to tell the customer hey thank you for your order so in this case we're using an",
    "start": "160800",
    "end": "167230"
  },
  {
    "text": "email service called send grid to go send the thank-you email to the customer",
    "start": "167230",
    "end": "172800"
  },
  {
    "text": "now finally we actually need to notify downstream systems to be able to actually process the order and ship it",
    "start": "172800",
    "end": "178420"
  },
  {
    "text": "out the door so this case we're using RabbitMQ to publish a message saying hey we've we've created an order now a",
    "start": "178420",
    "end": "185050"
  },
  {
    "text": "downstream shipping service to actually process it and then finally we redirect",
    "start": "185050",
    "end": "190330"
  },
  {
    "text": "the customer to a thank-you page thank you for your order blah blah blah around all of this is a database",
    "start": "190330",
    "end": "196840"
  },
  {
    "text": "transaction you don't see it here because it's part of every single request but that's one thing with you have as part of this as well as around",
    "start": "196840",
    "end": "202690"
  },
  {
    "text": "all of this we have a database transaction to make sure everything succeeds or fails so based on these six",
    "start": "202690",
    "end": "208720"
  },
  {
    "text": "lines of code you should either be like really worried about what's going on here or very interested in how or what's",
    "start": "208720",
    "end": "215050"
  },
  {
    "text": "actually going to happen here so nowhere in any of this six lines of code did you see any kind of try-catch",
    "start": "215050",
    "end": "222269"
  },
  {
    "text": "like nothing nothing in here assumes that any kind of failure can occur",
    "start": "222269",
    "end": "227680"
  },
  {
    "text": "everything just assumes that everything will succeed all the time forever and ever and there's one thing that I've",
    "start": "227680",
    "end": "233140"
  },
  {
    "text": "learned from building a lot of distributed systems is that failure is always an option for these kinds of",
    "start": "233140",
    "end": "238209"
  },
  {
    "start": "236000",
    "end": "236000"
  },
  {
    "text": "systems in fact like Google still goes down Gmail can go down so if Amazon",
    "start": "238209",
    "end": "243280"
  },
  {
    "text": "Google and Gmail if those things can still go down like what hope do we have as mere developers so this code just",
    "start": "243280",
    "end": "249820"
  },
  {
    "text": "assumed that everything has not like five nines or six nines of uptime it just has 100% uptime all the time and so",
    "start": "249820",
    "end": "256989"
  },
  {
    "text": "like for some code that could be okay but for something like this where I'm calling my systems and other people's systems then I've to start to really",
    "start": "256989",
    "end": "263830"
  },
  {
    "text": "think about what happens when those other systems go or if they fail so I had them walk",
    "start": "263830",
    "end": "268970"
  },
  {
    "text": "through it's okay yes there's nothing in here that deals with any kind of failures so let's just walk through each",
    "start": "268970",
    "end": "275240"
  },
  {
    "text": "of these different calls and those six lines of code and say what happens when",
    "start": "275240",
    "end": "280340"
  },
  {
    "text": "each of those lines of codes fails for whatever reason and I mean very explicit with my language I don't say what",
    "start": "280340",
    "end": "286460"
  },
  {
    "text": "happens if that that system fails I say what happens when because when",
    "start": "286460",
    "end": "291890"
  },
  {
    "text": "developers and especially the business when they hear if something fails they get these like happy years like no nothing ever fails ever that's such a",
    "start": "291890",
    "end": "298940"
  },
  {
    "text": "remote possibility that let's just let's just like sweep it under the rug and who cares and so I'm being very explicit",
    "start": "298940",
    "end": "304700"
  },
  {
    "text": "assay when something fails to force developers and our business to think about those situations so I broke it",
    "start": "304700",
    "end": "312260"
  },
  {
    "text": "down we started a whiteboard everything that's going on here and we broke it down to those those six things that were going on here and so I wanted to do is",
    "start": "312260",
    "end": "319580"
  },
  {
    "text": "basically for each line of code in there what happens both from the system perspective as well as the end-user",
    "start": "319580",
    "end": "325280"
  },
  {
    "text": "perspective when each of those calls fails so the very first call that",
    "start": "325280",
    "end": "330680"
  },
  {
    "text": "happened was I would go grab information out of the database the customer information and then I went insert an",
    "start": "330680",
    "end": "336080"
  },
  {
    "text": "order so what happens when that call fails well I don't have any trycatch",
    "start": "336080",
    "end": "343430"
  },
  {
    "text": "right so some exception happens but we were wrapping everything inside a database transaction and so the database",
    "start": "343430",
    "end": "350060"
  },
  {
    "text": "transaction would never actually commit so in this case if that call fails then",
    "start": "350060",
    "end": "355220"
  },
  {
    "text": "the transaction rolls back not very nice error shown to the end-user which is",
    "start": "355220",
    "end": "360320"
  },
  {
    "text": "still a problem right like an error shown to you when you just put your credit card information in is like the",
    "start": "360320",
    "end": "366680"
  },
  {
    "text": "worst thing you could possibly see in fact I start to go like check my credit card statement say Oh something failed",
    "start": "366680",
    "end": "372440"
  },
  {
    "text": "here so it's still not a good thing from the end-user perspective but at least the system is still in a consistent",
    "start": "372440",
    "end": "378140"
  },
  {
    "text": "state said okay now let's move on to the next call what happens when that call to",
    "start": "378140",
    "end": "383780"
  },
  {
    "text": "stripe fails now we start to look at this and say well what's a real possibility that something like that can",
    "start": "383780",
    "end": "389660"
  },
  {
    "text": "actually happen but it turns out that because we're using just a web api call we could have the possibility that we",
    "start": "389660",
    "end": "396110"
  },
  {
    "text": "made a call to that API we assume that it failed because we just timed out from waiting for success",
    "start": "396110",
    "end": "402890"
  },
  {
    "text": "result to come back we said well I tried to call stripe I waited for 30 seconds and nothing",
    "start": "402890",
    "end": "408140"
  },
  {
    "text": "happened so I'll just assume and it failed but it actually could have succeeded so even this is a partial",
    "start": "408140",
    "end": "413660"
  },
  {
    "text": "success partial failure state but just assuming that something went wrong for whatever reason what what is the",
    "start": "413660",
    "end": "421070"
  },
  {
    "text": "experience for the end-user well because we get that exception the database",
    "start": "421070",
    "end": "426170"
  },
  {
    "text": "transaction never commits the transaction rolls back and we think that no money actually is posted to the",
    "start": "426170",
    "end": "432500"
  },
  {
    "text": "account so so far like it's it's still not a great experience for the end-user",
    "start": "432500",
    "end": "437990"
  },
  {
    "text": "right we never want to show the end-user that yellow screen of death from asp net right that we never ever want to show",
    "start": "437990",
    "end": "443300"
  },
  {
    "text": "that to the end-user especially when they're putting in their their payment information so it's not a great",
    "start": "443300",
    "end": "449060"
  },
  {
    "text": "experience for the end-user but at least the system is inconsistent consistent state now this is where things get",
    "start": "449060",
    "end": "455420"
  },
  {
    "text": "interesting what happens when syn grid fails there he bad things start to",
    "start": "455420",
    "end": "461420"
  },
  {
    "text": "happen because we we made the call to the database to insert an order we made",
    "start": "461420",
    "end": "467720"
  },
  {
    "text": "the call to stripe the strike call succeeded we tried to tell the customer about it butts in great failed because we get an",
    "start": "467720",
    "end": "475220"
  },
  {
    "text": "exception the database transaction rolls back but we still took their money so",
    "start": "475220",
    "end": "480440"
  },
  {
    "text": "not a good thing so the customer says oh okay you got an error page and then I go",
    "start": "480440",
    "end": "485750"
  },
  {
    "text": "check my credit card statement and it says that it paid for this so what do they do they call customer service or",
    "start": "485750",
    "end": "491000"
  },
  {
    "text": "email them saying you took my money but where's my stuff where's my order the customer service rep or admin goes and",
    "start": "491000",
    "end": "497990"
  },
  {
    "text": "looked in the system and finds there's no order again not a good not a very",
    "start": "497990",
    "end": "504170"
  },
  {
    "text": "good state to be in at this point the customers mad the probably going to go on to Yelp and right and really bad things about your business all because",
    "start": "504170",
    "end": "510440"
  },
  {
    "text": "we didn't have anything that dealt with that failure over there what about rabbitmq this is where things",
    "start": "510440",
    "end": "517760"
  },
  {
    "text": "start to really get bad by the way so in this case the call to the database succeeded initially but the transaction",
    "start": "517760",
    "end": "524210"
  },
  {
    "text": "rolls back so again we don't have any record of their order except probably some logs I guess like that's when you",
    "start": "524210",
    "end": "530180"
  },
  {
    "text": "know things are really bad eBay store I have to go with log to see where that order was we took their money and we told them about it",
    "start": "530180",
    "end": "537600"
  },
  {
    "text": "via send grid but we have no record of the order so well we never notify any downstream systems they have an email",
    "start": "537600",
    "end": "544260"
  },
  {
    "text": "saying hey you you actually took my money and you said here's the order but when we go look up at the order in the database it doesn't exist so again a",
    "start": "544260",
    "end": "551400"
  },
  {
    "text": "very very bad state to be in expect lots of bad Yelp reviews from this as well and the final really bad thing that can",
    "start": "551400",
    "end": "558240"
  },
  {
    "text": "happen is what happens when the database transaction fails now this can still happen on occasion",
    "start": "558240",
    "end": "563850"
  },
  {
    "text": "let's say we have like database constraints or just some kind of hiccup happens talking to the database in fact",
    "start": "563850",
    "end": "570000"
  },
  {
    "text": "if you've ever used as your sequel you have to really just expect failures all the time with that in fact some of the",
    "start": "570000",
    "end": "576570"
  },
  {
    "text": "connection providers will just retry like five times because the connections could be so spotty there so we even",
    "start": "576570",
    "end": "582330"
  },
  {
    "text": "though like in in real life we may expect transactions to always succeed and practice those transactions can fail",
    "start": "582330",
    "end": "588450"
  },
  {
    "text": "so in this case what's the experience for the end user well we charge the customer and we told",
    "start": "588450",
    "end": "597420"
  },
  {
    "text": "them we charged them and said thank you for your order and we notifying downstream systems but the transaction",
    "start": "597420",
    "end": "602730"
  },
  {
    "text": "rollback so there is no record the order so at this point the systems state is royal royal EF at this point there's no",
    "start": "602730",
    "end": "610590"
  },
  {
    "text": "record of the order in the database downstream systems we're trying to fulfill an order that doesn't exist whatsoever and so basically everyone is",
    "start": "610590",
    "end": "617160"
  },
  {
    "text": "mad at us because of the things we've done here so we we walked three to this lake okay maybe we can deal with the",
    "start": "617160",
    "end": "625140"
  },
  {
    "text": "stripe failure but as we start to touch more and more systems the system gets more and more in a bad state and so at",
    "start": "625140",
    "end": "631620"
  },
  {
    "text": "this point bill and I are like okay what do we do now right now what's our strategy for",
    "start": "631620",
    "end": "638940"
  },
  {
    "text": "dealing with failures I mean like well we'll try again next time but this like",
    "start": "638940",
    "end": "646680"
  },
  {
    "start": "641000",
    "end": "641000"
  },
  {
    "text": "shrugging your shoulders and like yeah it can't actually fail it's probably not good for business and again this is when",
    "start": "646680",
    "end": "652320"
  },
  {
    "text": "you start to see things show up I'm like front page of hacker news because all these things went wrong I have friends",
    "start": "652320",
    "end": "658200"
  },
  {
    "text": "that have built systems just like this and they've lost thousands and thousands of dollars because of these kinds of failures so just like shrugging their",
    "start": "658200",
    "end": "664470"
  },
  {
    "text": "shoulders and just everything succeeds it's probably not a good idea now the main problem is that",
    "start": "664470",
    "end": "671630"
  },
  {
    "text": "we had this database transaction that kept the database transaction consistent but it didn't touch any of the other",
    "start": "671630",
    "end": "678089"
  },
  {
    "text": "systems that we were talking to so what if we can just kind of extend that boundary that transaction I'm just like",
    "start": "678089",
    "end": "684390"
  },
  {
    "text": "map all the way over to all the other systems were talking to that would be",
    "start": "684390",
    "end": "690660"
  },
  {
    "text": "nice if that was possible or feasible but in reality none of those other systems will support anything like this",
    "start": "690660",
    "end": "696420"
  },
  {
    "text": "concept of a distributed transaction and in fact a performance if you ever try to",
    "start": "696420",
    "end": "701490"
  },
  {
    "text": "do this Zoomer here ever try to do that the old like WS extensions the",
    "start": "701490",
    "end": "706500"
  },
  {
    "text": "webservice extensions that try to do this let's see there was WS transactions WS reliable messaging WS reliability",
    "start": "706500",
    "end": "714510"
  },
  {
    "text": "like they try three or four times to build a web service protocol to be able to do this they all failed spectacularly",
    "start": "714510",
    "end": "720680"
  },
  {
    "text": "and so this is just not really possible and on top of that to try to achieve",
    "start": "720680",
    "end": "726029"
  },
  {
    "text": "this is such a big performance hit that no one even attempts to try to do this anymore so we can't just put the entire",
    "start": "726029",
    "end": "733380"
  },
  {
    "start": "732000",
    "end": "732000"
  },
  {
    "text": "world in a transaction that's not how the real world works anyway so we just can't try to just extend that line out",
    "start": "733380",
    "end": "738959"
  },
  {
    "text": "there so instead we have to build our systems in the communication to assume that these different calls will fail and",
    "start": "738959",
    "end": "745589"
  },
  {
    "start": "743000",
    "end": "743000"
  },
  {
    "text": "then plan for the worst according to what happens when those other things fail so luckily for us there are much",
    "start": "745589",
    "end": "753450"
  },
  {
    "start": "746000",
    "end": "746000"
  },
  {
    "text": "smarter people that had seen these kinds of problems and distributed systems and had delineated different options for how",
    "start": "753450",
    "end": "761040"
  },
  {
    "text": "to deal with these different kinds of failures and the classic paper on this is from Gregg our hope I think it's how",
    "start": "761040",
    "end": "766830"
  },
  {
    "start": "766000",
    "end": "766000"
  },
  {
    "text": "you pronounce it it original paper was Starbucks doesn't use two-phase commit",
    "start": "766830",
    "end": "771839"
  },
  {
    "text": "I think Starbucks noticed that and said please don't use our name and this weird paper and so now it's your coffee shop",
    "start": "771839",
    "end": "778110"
  },
  {
    "text": "doesn't use two-phase commit and in this paper he walks through a real-world scenario of you walking into maybe not a",
    "start": "778110",
    "end": "784920"
  },
  {
    "text": "Starbucks but a coffee shop and then how those coffee shops deal with a messiness",
    "start": "784920",
    "end": "789990"
  },
  {
    "text": "of a distributed system which is you the person buying something the cashier as",
    "start": "789990",
    "end": "795300"
  },
  {
    "text": "well as maybe someone also processing the order or may can your coffee behind-the-scenes that's that's a much Messier system than just",
    "start": "795300",
    "end": "802410"
  },
  {
    "text": "you know a single in process operation and so you looked at that real world system and said when things fail between",
    "start": "802410",
    "end": "809310"
  },
  {
    "text": "these different handshakes and handoffs what are the different options for dealing with those failures so given any",
    "start": "809310",
    "end": "815339"
  },
  {
    "text": "two resources where I have to coordinate some kind of activity what are the four different ways we can address those",
    "start": "815339",
    "end": "821010"
  },
  {
    "text": "different failures option one if I'm trying some operation with resource a",
    "start": "821010",
    "end": "827130"
  },
  {
    "text": "and another up and then in some action with resource B is to just simply ignore the failure so if resource B action",
    "start": "827130",
    "end": "834330"
  },
  {
    "text": "fails just ignore it for whatever reason now you might say like well we didn't we",
    "start": "834330",
    "end": "840870"
  },
  {
    "text": "just say we don't want to ignore failures right we want to take people's money so this may not that may not be an",
    "start": "840870",
    "end": "846720"
  },
  {
    "text": "option for a lot of the different systems we talk to but it could be for example do you want your system to go",
    "start": "846720",
    "end": "852750"
  },
  {
    "text": "down because you can't write to your log probably not so if something goes wrong",
    "start": "852750",
    "end": "858870"
  },
  {
    "text": "with logging you probably still want to be able to take people's money so there are some cases where we will be talking",
    "start": "858870",
    "end": "863880"
  },
  {
    "text": "to external systems where we just don't care if those other systems fail they're not critical for the business option two",
    "start": "863880",
    "end": "870900"
  },
  {
    "text": "is to retry that operation that is I perform some operation with resource a I",
    "start": "870900",
    "end": "876839"
  },
  {
    "text": "do some action with resource P it fails and instead of giving up on it I just try it again now there's a lot more",
    "start": "876839",
    "end": "884940"
  },
  {
    "text": "detail behind being able to do retries I have to worry about can that operation actually be retried in the first place",
    "start": "884940",
    "end": "892010"
  },
  {
    "text": "so we have to do some investigation to make sure that if I try that operation again it can actually be retried we also have",
    "start": "892010",
    "end": "898950"
  },
  {
    "text": "to worry about what happens if I retry and it fails again do I just retry forever probably not so",
    "start": "898950",
    "end": "905160"
  },
  {
    "text": "we will have to think about how we want to handle a case where something is constantly failing like what ifs in",
    "start": "905160",
    "end": "910410"
  },
  {
    "text": "grade went down for a day do we just retry and retry retry with all these processes hung probably not so have to",
    "start": "910410",
    "end": "916020"
  },
  {
    "text": "worry about some kind of policy around how we retry the next option is to have",
    "start": "916020",
    "end": "922170"
  },
  {
    "text": "some kind of undo action that is I try an action with resource a I try an action of the resource B resource B",
    "start": "922170",
    "end": "928709"
  },
  {
    "text": "fails so I perform some kind of undo with the action from resource a now this",
    "start": "928709",
    "end": "934769"
  },
  {
    "text": "could be something like a database transaction rollback but it may not and may be some kind of compensating action",
    "start": "934769",
    "end": "940230"
  },
  {
    "text": "where I'm undoing I'm taking a new action to undo the action of that previous thing now the final one is the",
    "start": "940230",
    "end": "950160"
  },
  {
    "text": "most complicated one which is to have this idea of a coordinated transaction",
    "start": "950160",
    "end": "955319"
  },
  {
    "text": "between these two resources now there's lots more arrows in this one but the basic idea is that I split my my",
    "start": "955319",
    "end": "961680"
  },
  {
    "text": "coordination into two phases one is the prepare phase and one is the commit phase and each resource is talking back",
    "start": "961680",
    "end": "968759"
  },
  {
    "text": "to some kind of coordinator to be able to handle and manage that communication and those different operations now",
    "start": "968759",
    "end": "977100"
  },
  {
    "text": "you've actually have probably seen this in real life if anyone here has had to purchase an apartment or purchase a",
    "start": "977100",
    "end": "983339"
  },
  {
    "text": "house that operation of you going and buying it involves this coordinator and",
    "start": "983339",
    "end": "988740"
  },
  {
    "text": "these these transactions and these this two phases approach so if I'm going to",
    "start": "988740",
    "end": "994079"
  },
  {
    "text": "buy a house there's usually some kind of a third party broker involved and there's usually some kind of deposit",
    "start": "994079",
    "end": "999509"
  },
  {
    "text": "there's also an agreement on the seller that says yes I want to sell this for this amount and so this third party",
    "start": "999509",
    "end": "1005540"
  },
  {
    "text": "coordinators is talking to each of the interested parties to say yes do you want to sell this house at this price do",
    "start": "1005540",
    "end": "1011509"
  },
  {
    "text": "you want to buy this house at this price yes you do yes you do okay now let's go ahead and sign all the papers so this is",
    "start": "1011509",
    "end": "1019639"
  },
  {
    "text": "a possibility in the case where each of these different resources can have this kind of communication but it does come",
    "start": "1019639",
    "end": "1026089"
  },
  {
    "text": "at a cost and expense in the real world the cost is like money I have to pay",
    "start": "1026089",
    "end": "1031250"
  },
  {
    "text": "this third party to be able to just like watch me sign papers but in our distributive systems land you can see",
    "start": "1031250",
    "end": "1037130"
  },
  {
    "text": "that the more there arrows are going around the more communication that has to happen and so there's a there's an",
    "start": "1037130",
    "end": "1043668"
  },
  {
    "text": "overhead to be able to do something like this it also introduces the possibility of more failures that can happen so I",
    "start": "1043669",
    "end": "1049880"
  },
  {
    "text": "want to make sure that all those arrows are very solid and not like a like a broken line arrow or a dotted arrow that",
    "start": "1049880",
    "end": "1056840"
  },
  {
    "text": "that these things can these things will absolutely succeed it's not a bullet proof protocol either in that second",
    "start": "1056840",
    "end": "1063830"
  },
  {
    "text": "round after I do the commit if that second commit to the second resource fails then again the system is",
    "start": "1063830",
    "end": "1069450"
  },
  {
    "text": "in a inconsistent state so it's not perfect but it can be able to provide",
    "start": "1069450",
    "end": "1074940"
  },
  {
    "text": "this kind of coordinated transaction between two different resources so these",
    "start": "1074940",
    "end": "1080460"
  },
  {
    "text": "are our four options dealing with failures between two different resources so bill and I had a master plan where we",
    "start": "1080460",
    "end": "1087180"
  },
  {
    "start": "1085000",
    "end": "1085000"
  },
  {
    "text": "take each of those external resources examine the possibilities based on those",
    "start": "1087180",
    "end": "1092340"
  },
  {
    "start": "1088000",
    "end": "1088000"
  },
  {
    "text": "four different option and pick the best option based on what was technically feasible as well as what was most",
    "start": "1092340",
    "end": "1098370"
  },
  {
    "text": "desirable from the business perspective now this is where you do actually have to involve the business in your",
    "start": "1098370",
    "end": "1103710"
  },
  {
    "text": "discussions you can't just decide oh well we'll just do a retry because that may have implications for the end-user",
    "start": "1103710",
    "end": "1109740"
  },
  {
    "text": "as well see and anytime we're affecting the end-user experience we do need to involve the business to say hey you know",
    "start": "1109740",
    "end": "1116790"
  },
  {
    "text": "if we retry this the user may see this in their bank account that sort of thing so we need to make sure that we we involve the business and these",
    "start": "1116790",
    "end": "1122790"
  },
  {
    "text": "discussions Oh more systems failures next door all right all right first up",
    "start": "1122790",
    "end": "1132960"
  },
  {
    "start": "1132000",
    "end": "1132000"
  },
  {
    "text": "was stripe so four options again our ignore retry undo and coordinate so the",
    "start": "1132960",
    "end": "1140640"
  },
  {
    "text": "first up is to ignore again just a reminder these are the six lines of code we had before so what would it what",
    "start": "1140640",
    "end": "1146700"
  },
  {
    "text": "would look like to ignore a failure of stripe probably like a try-catch around",
    "start": "1146700",
    "end": "1153300"
  },
  {
    "text": "calling stripe and then when the exception happens just swallow the exception but we kind of want people's",
    "start": "1153300",
    "end": "1159630"
  },
  {
    "text": "money you know we we do need to get their money too in order to fulfill the order so just like ignoring failure from",
    "start": "1159630",
    "end": "1165420"
  },
  {
    "text": "stripe it's probably not we want to do and in fact I don't think I'd even talk to the business about this they just give you this weird look like why are",
    "start": "1165420",
    "end": "1171720"
  },
  {
    "start": "1166000",
    "end": "1166000"
  },
  {
    "text": "you coming to this or I come to me with this option just get out of my office so we probably don't want to just ignore fail payment however I bet that you have",
    "start": "1171720",
    "end": "1179070"
  },
  {
    "text": "seen this in real life I bet you have seen a case where a payment failed and the business is like don't worry about",
    "start": "1179070",
    "end": "1185160"
  },
  {
    "text": "it you're good it's okay I've seen this sometimes especially in places where that credit card machine fails like you",
    "start": "1185160",
    "end": "1192090"
  },
  {
    "text": "can't connect because of whatever reason and the person that's performing that it has an option like well do I just go",
    "start": "1192090",
    "end": "1197520"
  },
  {
    "text": "ahead and give them the food or dye say no we need to wait for other payment or you have to give me cash that sort of thing",
    "start": "1197520",
    "end": "1203490"
  },
  {
    "text": "so in our electronic world I probably don't want to ignore it but in the real world this kind of thing does happen",
    "start": "1203490",
    "end": "1210590"
  },
  {
    "text": "option two is a retry now this is where we have to be careful because if I'm",
    "start": "1210590",
    "end": "1216690"
  },
  {
    "start": "1212000",
    "end": "1212000"
  },
  {
    "text": "making a call to stripe remember we said that even though the stripe call may have failed from our perspective that",
    "start": "1216690",
    "end": "1222629"
  },
  {
    "text": "doesn't mean it actually failed on the server side because we could have called stripe and waited 30 seconds for a",
    "start": "1222629",
    "end": "1229679"
  },
  {
    "text": "minute for a response nothing came back and we said well I guess it failed because they didn't get back to me but",
    "start": "1229679",
    "end": "1235529"
  },
  {
    "text": "it could have meant that I waited 30 seconds to not 31 seconds or 60 seconds so not 61 seconds because it actually",
    "start": "1235529",
    "end": "1241860"
  },
  {
    "text": "did succeed on the server side so in this case really we need to make sure that if I call the stripe again that it",
    "start": "1241860",
    "end": "1248190"
  },
  {
    "text": "don't accidentally charge the customer twice because that's almost worse than not charging them at all right",
    "start": "1248190",
    "end": "1254399"
  },
  {
    "text": "like have you ever seen getting double charged you're probably gonna be somewhat upset and again Yelp bad",
    "start": "1254399",
    "end": "1260669"
  },
  {
    "text": "reviews etc etc so when you're dealing with looking at retries you have to know",
    "start": "1260669",
    "end": "1265740"
  },
  {
    "text": "how to Google for how to be able to do this and the key word here for retries in order to be able to try something",
    "start": "1265740",
    "end": "1271590"
  },
  {
    "text": "more than one time and have it only happened once is idempotent or idempotency the idea behind idempotency",
    "start": "1271590",
    "end": "1279809"
  },
  {
    "text": "is that I can try some operation multiple times and the side effect only happens once or I can try something",
    "start": "1279809",
    "end": "1286769"
  },
  {
    "text": "multiple times and it only happens once so when I Google like little goo is stripe idempotency their documentation",
    "start": "1286769",
    "end": "1293850"
  },
  {
    "text": "come up it says yes we do support this and the idea behind idempotent requests",
    "start": "1293850",
    "end": "1299340"
  },
  {
    "text": "is stripe doesn't can't really tell one request from the other so if I have someone posting the same payment twice",
    "start": "1299340",
    "end": "1307259"
  },
  {
    "text": "I can't just look at the information and just assume that it's going to be a duplicate so if it sees the same name",
    "start": "1307259",
    "end": "1314009"
  },
  {
    "text": "the same price around the same time stripe still want to assume that that's the exact same request it could just",
    "start": "1314009",
    "end": "1320159"
  },
  {
    "text": "mean that someone just like click really fast or something so I have to tell stripe that this this request has some",
    "start": "1320159",
    "end": "1327749"
  },
  {
    "text": "sort of unique identifier to identify this attempt at payment or something else in the future so this is",
    "start": "1327749",
    "end": "1336240"
  },
  {
    "text": "a an artificial idempotency as opposed to a natural item potency so if I tell someone to turn the light on I can tell",
    "start": "1336240",
    "end": "1342540"
  },
  {
    "text": "them multiple times and if they the lights already on there's nothing for them to do in this case there's no sort",
    "start": "1342540",
    "end": "1348570"
  },
  {
    "text": "of natural item potency that's there so stripe says you have to tell me some kind of unique key or identifier that",
    "start": "1348570",
    "end": "1354720"
  },
  {
    "text": "said distinguishes this payment versus something else so we looked at this",
    "start": "1354720",
    "end": "1359850"
  },
  {
    "text": "request and said what is distinct about this transaction versus some other transaction and we need to pass that",
    "start": "1359850",
    "end": "1366750"
  },
  {
    "text": "information over to stripe to this item potency key header so we looked at the",
    "start": "1366750",
    "end": "1372510"
  },
  {
    "text": "request and said what is what is the thing that distinguishes this business transaction versus someone just clicking",
    "start": "1372510",
    "end": "1378300"
  },
  {
    "text": "really fast and putting something in the cart and hitting place order again and it came down to the cart ID you could",
    "start": "1378300",
    "end": "1385710"
  },
  {
    "text": "also use the order ID but it's basically something that represents this logical order that I can then pass over to",
    "start": "1385710",
    "end": "1391650"
  },
  {
    "text": "stripe to say if I happen to call stripe servers twice with the same cart ID or",
    "start": "1391650",
    "end": "1397920"
  },
  {
    "text": "order ID then it only processes that payment once but you have to explicitly do this so by the way if you're using",
    "start": "1397920",
    "end": "1402990"
  },
  {
    "text": "stripe today like do look at this because if someone double clicks or something like that this will catch",
    "start": "1402990",
    "end": "1409890"
  },
  {
    "text": "those of those problems and just make sure that the customer only gets charged once because you have people like my mother who double clicks everything on",
    "start": "1409890",
    "end": "1417090"
  },
  {
    "text": "the web everything now this this just allows this to be retried but you don't",
    "start": "1417090",
    "end": "1423750"
  },
  {
    "text": "see any code around here that actually performs the retry so we still to figure out like well what what is actually",
    "start": "1423750",
    "end": "1429150"
  },
  {
    "text": "making a calling this over again so there's none of that here we just said well we're able to do a retry and then",
    "start": "1429150",
    "end": "1435450"
  },
  {
    "text": "we'll figure out how the retries actually happened sometime in the future",
    "start": "1435450",
    "end": "1440840"
  },
  {
    "text": "option 3 is undo now this one is a little bit trickier because you have to think about what is the logical undo or",
    "start": "1440840",
    "end": "1447690"
  },
  {
    "start": "1441000",
    "end": "1441000"
  },
  {
    "text": "compensating action for whatever action you were performing and so there's nothing really like easily Google with",
    "start": "1447690",
    "end": "1454110"
  },
  {
    "text": "this you just have to kind of think what is the action in performing and is there an equal and opposite action that you",
    "start": "1454110",
    "end": "1459570"
  },
  {
    "text": "can do to undo the actions that you did previously so in our case we're looking",
    "start": "1459570",
    "end": "1464610"
  },
  {
    "text": "at stripe is a logical undo of posting a payment I can have like there's a credit versus",
    "start": "1464610",
    "end": "1472259"
  },
  {
    "text": "debit accounts in this case I'm posting a payment and so their concept of undoing a posted payment is a refund a",
    "start": "1472259",
    "end": "1479960"
  },
  {
    "text": "refund is a call that you make to stripe where we give it the original payment ID and it will post the payment back to",
    "start": "1479960",
    "end": "1487080"
  },
  {
    "text": "that person's account from that exact same amount so it would look something",
    "start": "1487080",
    "end": "1493620"
  },
  {
    "text": "like this where I would have that same set of code where I was trying to call all these different services and if",
    "start": "1493620",
    "end": "1500909"
  },
  {
    "text": "something fails then what I'll do is go ahead and call stripe again to refund",
    "start": "1500909",
    "end": "1507299"
  },
  {
    "text": "the payment there's still something missing here though because I had that that transaction that was around",
    "start": "1507299",
    "end": "1513059"
  },
  {
    "text": "everything so in this case I'll actually pull in the transaction as part of this operations well I'll say begin the",
    "start": "1513059",
    "end": "1518789"
  },
  {
    "text": "transaction do all your stuff commit the transaction and if something fails then I will say go ahead and cause the stripe",
    "start": "1518789",
    "end": "1525990"
  },
  {
    "text": "service to refund the payment and a rollback of database transaction now I",
    "start": "1525990",
    "end": "1531990"
  },
  {
    "text": "know some of you are looking at this and says well what happens Jimmy said I should never see what happens if something fails what happen when",
    "start": "1531990",
    "end": "1537870"
  },
  {
    "text": "something fails what happens when the stripe service refund fails ok let's go",
    "start": "1537870",
    "end": "1547769"
  },
  {
    "text": "on to option 4 I mean you guys they like you it just",
    "start": "1547769",
    "end": "1552840"
  },
  {
    "text": "starts to getting a rabbit hole of all these different things that can fail so we would have to worry about that in the future as well okay option four is",
    "start": "1552840",
    "end": "1559110"
  },
  {
    "text": "coordinating now we said earlier that most modern web services aren't built with any kind of like transactional",
    "start": "1559110",
    "end": "1565380"
  },
  {
    "text": "support in mind it's assumed that whenever I call the API that there is a transaction behind the scenes but I",
    "start": "1565380",
    "end": "1571080"
  },
  {
    "text": "can't coordinate like more than one call NORC i coordinate this call with some other thing that's going on I can't",
    "start": "1571080",
    "end": "1576270"
  },
  {
    "text": "coordinate a transaction with stripe and syn grid that's just not possible so it",
    "start": "1576270",
    "end": "1581790"
  },
  {
    "text": "looked at this and said well did it have some kind of like some kind of coordinated activity that's a two-step",
    "start": "1581790",
    "end": "1587280"
  },
  {
    "text": "flow where I prepare the payment and then then actually commit the payment later on and it turns out they do",
    "start": "1587280",
    "end": "1592800"
  },
  {
    "text": "actually support this it's called a two-step payment flow if you've ever gone to a hotel where they ask for your",
    "start": "1592800",
    "end": "1599340"
  },
  {
    "text": "credit card they'll put a charge on it for like I didn't it my nights room or something like that but it won't actually post to your account if you log",
    "start": "1599340",
    "end": "1606360"
  },
  {
    "text": "in to your account it said it will say pending transaction and that transaction will be pending for like your the length",
    "start": "1606360",
    "end": "1612300"
  },
  {
    "text": "your stay and then when you check out they'll either deduct whatever that you've purchased or they'll just remove",
    "start": "1612300",
    "end": "1618360"
  },
  {
    "text": "that authorized payments and it never gets posted to your account so we could",
    "start": "1618360",
    "end": "1624390"
  },
  {
    "text": "do this where we have a two-step payment flow in this case what we'll do is we can call stripe initially to authorize a",
    "start": "1624390",
    "end": "1631200"
  },
  {
    "text": "certain amount and then after everything else has succeeded then we'll go ahead and post the payment so it looks",
    "start": "1631200",
    "end": "1637920"
  },
  {
    "text": "something like this way I had the same triquetra on everything but this time I said image just me posting a payment",
    "start": "1637920",
    "end": "1643770"
  },
  {
    "text": "I'll first post an authorization to payment to pay something and then if",
    "start": "1643770",
    "end": "1648990"
  },
  {
    "text": "everything succeeds then later on I will go ahead and post the capture down at",
    "start": "1648990",
    "end": "1654120"
  },
  {
    "text": "the bottom now again we said what happens when this second call fails actually if that call fails we're",
    "start": "1654120",
    "end": "1661080"
  },
  {
    "text": "actually in not a bad state because if something happens here I can log something and then the then the stripe",
    "start": "1661080",
    "end": "1667650"
  },
  {
    "text": "administrator can log into the stripe admin user interface and they can see all the striped payments that have not",
    "start": "1667650",
    "end": "1673350"
  },
  {
    "text": "succeeded and they go and say you know capture capture capture capture for all of those so it is able to kind of be in",
    "start": "1673350",
    "end": "1679440"
  },
  {
    "text": "this half okay States and then administrator can then go fix things later on okay so that was",
    "start": "1679440",
    "end": "1688260"
  },
  {
    "text": "stripe no stripe is gonna look a lot different from the options that we'll see from cengage SendGrid and RabbitMQ",
    "start": "1688260",
    "end": "1694200"
  },
  {
    "text": "because stripe is a you know it's about money right so we want to make sure that those things are very successful but sing great of rabbitmq are very",
    "start": "1694200",
    "end": "1701070"
  },
  {
    "text": "different they have a lot they've a lot different guarantees that we'll have for their services and they're optimizing",
    "start": "1701070",
    "end": "1706590"
  },
  {
    "text": "for different kind of usage scenarios so looking at syn grid option one would be",
    "start": "1706590",
    "end": "1714660"
  },
  {
    "text": "to ignore this now this is where we can go to our business and say what happens",
    "start": "1714660",
    "end": "1720240"
  },
  {
    "text": "if syndra's goes down is it okay if we still process the order do we want to to",
    "start": "1720240",
    "end": "1726180"
  },
  {
    "text": "fail the entire order process if I can't send them an email saying thank you for your order business may say no or they",
    "start": "1726180",
    "end": "1733440"
  },
  {
    "text": "may say yes I don't know um usually they'd say no like I don't want to like I don't want to prevent my business from",
    "start": "1733440",
    "end": "1739710"
  },
  {
    "text": "taking money if I can't just email people that seems a bit silly so in this case our ignore could be a viable option",
    "start": "1739710",
    "end": "1746420"
  },
  {
    "text": "so it looks something like this where instead of me calling the same grid service directly what I'll do is I'll",
    "start": "1746420",
    "end": "1751800"
  },
  {
    "text": "wrap it in a try-catch where I'll try the send grade service and if something",
    "start": "1751800",
    "end": "1757890"
  },
  {
    "text": "fails I'll just log an exception if I do need to actually send the order email",
    "start": "1757890",
    "end": "1763830"
  },
  {
    "text": "success email outs then it made to do some more processing like flag the order or needing an email or something like",
    "start": "1763830",
    "end": "1769830"
  },
  {
    "text": "that to have something processing behind the scenes but the general idea is that I don't couple myself in this case to",
    "start": "1769830",
    "end": "1776640"
  },
  {
    "text": "send grits up time if syn grid is down it'll just go on and keep on going",
    "start": "1776640",
    "end": "1782390"
  },
  {
    "text": "option two is a retry so you can google this you go send grid idempotency send",
    "start": "1782930",
    "end": "1789420"
  },
  {
    "text": "great retries and what you'll find is a lot of Stack Overflow questions with no",
    "start": "1789420",
    "end": "1794580"
  },
  {
    "text": "answers but like 20 comments which that's a bad place to be in right like if you google something and Stack",
    "start": "1794580",
    "end": "1800490"
  },
  {
    "text": "Overflow has no answers but just comments like I'm in trouble then so there's no such thing as item potent",
    "start": "1800490",
    "end": "1805830"
  },
  {
    "text": "requests force in grid there's a good reason for this so syn grid optimizes",
    "start": "1805830",
    "end": "1811110"
  },
  {
    "text": "for speed so when you call send grid it's going to send that email as fast as possible now",
    "start": "1811110",
    "end": "1816330"
  },
  {
    "text": "about stripe now stripe I want to be able to handle like calling the API",
    "start": "1816330",
    "end": "1821820"
  },
  {
    "text": "multiple times so every time I call it if I pass in that that key it's gonna have to look up in its list of",
    "start": "1821820",
    "end": "1827789"
  },
  {
    "text": "transactions have I charged this customer before now syn grid if it's optimizing for speed I just want to make",
    "start": "1827789",
    "end": "1833669"
  },
  {
    "text": "these lookups to say oh have you sent this email before let me go check oh there it is don't send the email out so force in",
    "start": "1833669",
    "end": "1840029"
  },
  {
    "text": "grid that's that's not part of its business model so it's not going to allow these retries so if I call send",
    "start": "1840029",
    "end": "1846059"
  },
  {
    "text": "grit twice those emails will get sent twice so we don't want to call send gray",
    "start": "1846059",
    "end": "1852389"
  },
  {
    "start": "1851000",
    "end": "1851000"
  },
  {
    "text": "twice unless we're ok with duplicate emails now this is where I get I talk to the business and I ask them would you",
    "start": "1852389",
    "end": "1858690"
  },
  {
    "text": "rather have at like zero or one email sent out so like it either succeeds or",
    "start": "1858690",
    "end": "1865440"
  },
  {
    "text": "fails and if it fails I don't send me out or would you want to have at least one email gets sent out so if I try it",
    "start": "1865440",
    "end": "1871200"
  },
  {
    "text": "more than one time there's a possibility that the user gets more than one email and of course the business says neither",
    "start": "1871200",
    "end": "1876720"
  },
  {
    "text": "I wanted to happen exactly once but distributive systems there's no such thing as exactly once we can try to put",
    "start": "1876720",
    "end": "1883169"
  },
  {
    "text": "that in there but it's just impossible so we're left with this choice of do we want at most one email go out or at",
    "start": "1883169",
    "end": "1889409"
  },
  {
    "text": "least one email and have to leave it to the business to decide which one is the most appropriate option option 3 undo as",
    "start": "1889409",
    "end": "1900409"
  },
  {
    "text": "much as I would like to be able to undo emails we can't unsend emails right",
    "start": "1900409",
    "end": "1906440"
  },
  {
    "start": "1905000",
    "end": "1905000"
  },
  {
    "text": "there's no I like click the button I guess Gmail has this now doesn't it",
    "start": "1906440",
    "end": "1912330"
  },
  {
    "text": "liking an unsent an email and how does it do that well it just doesn't send the email right away it just waits 10",
    "start": "1912330",
    "end": "1917639"
  },
  {
    "text": "seconds to say I won't send this email right away Steve about 10 seconds to change your mind and if you changed your",
    "start": "1917639",
    "end": "1923100"
  },
  {
    "text": "mind I won't unsend it I just won't send it at all but we can't we can't retract emails as",
    "start": "1923100",
    "end": "1929730"
  },
  {
    "text": "much as I want to so what's the what's the compensating action here sorry we",
    "start": "1929730",
    "end": "1937649"
  },
  {
    "text": "screwed up I've had to send these emails before the I'm sorry I screwed up emails to customers it's not fun but that is a",
    "start": "1937649",
    "end": "1944580"
  },
  {
    "text": "compensating action from the business we can do sorry about the problem let us compensate you with a",
    "start": "1944580",
    "end": "1950040"
  },
  {
    "text": "coupon or it'll compensate you with bonus points or something like that so we could have some kind of business of a",
    "start": "1950040",
    "end": "1955590"
  },
  {
    "text": "compensating action but not from the like low technical perspective option",
    "start": "1955590",
    "end": "1962400"
  },
  {
    "text": "for coordinates I don't even know what that means for email like how would you",
    "start": "1962400",
    "end": "1967680"
  },
  {
    "text": "call like I'm gonna put my finger on the email and then I'm gonna do the transaction if when this thing succeeds",
    "start": "1967680",
    "end": "1973080"
  },
  {
    "text": "I'll lift my finger off the email and then you get sent out the door like that that's not a thing that happens with email so there's like there's nothing",
    "start": "1973080",
    "end": "1978900"
  },
  {
    "text": "for this [Music] finally it's RabbitMQ now RabbitMQ is",
    "start": "1978900",
    "end": "1986490"
  },
  {
    "start": "1982000",
    "end": "1982000"
  },
  {
    "text": "gonna be very very similar to email because RabbitMQ deals with messages so kind of a very similar kind of options",
    "start": "1986490",
    "end": "1992790"
  },
  {
    "text": "available for us but our decision about what to do may be different because in this case the things we do with RabbitMQ",
    "start": "1992790",
    "end": "1999030"
  },
  {
    "text": "may be more important than just sending someone an email so option one would be to ignore this would look again like I",
    "start": "1999030",
    "end": "2006590"
  },
  {
    "text": "have a try-catch around trying to talk to rabbitmq and if something fails then I still need to notify downstream",
    "start": "2006590",
    "end": "2013670"
  },
  {
    "text": "systems so what I'll do is I'll just flag the order as needing to have this thing sent out the door so that's some",
    "start": "2013670",
    "end": "2019700"
  },
  {
    "text": "kind of like maybe a background process looks for orders they needed to have their message sent out the door and then",
    "start": "2019700",
    "end": "2026240"
  },
  {
    "text": "it just once a day or or maybe once an hour or whatever it might be looks for those orders and then go ahead and",
    "start": "2026240",
    "end": "2031310"
  },
  {
    "text": "finishes this operation so this could be a possibility for us but we still need to have something that is sending those",
    "start": "2031310",
    "end": "2036950"
  },
  {
    "text": "messages out the door option two is a retry so rabbitmq and some brokers do",
    "start": "2036950",
    "end": "2044120"
  },
  {
    "text": "have a concept of a retried many one here is used as your service bus as your service bus has duplicate message",
    "start": "2044120",
    "end": "2050750"
  },
  {
    "text": "detection you have to turn it on and what we'll do is we'll keep track of messages for a certain period of time",
    "start": "2050750",
    "end": "2056690"
  },
  {
    "text": "like thirty seconds five minutes some kind of configurable amount of time and what it'll do is every time I call to",
    "start": "2056690",
    "end": "2063980"
  },
  {
    "text": "send a message it will check to see if it sent any of those messages in the last amount of time and if you already",
    "start": "2063980",
    "end": "2069320"
  },
  {
    "text": "have and won't send a message however just like the web service if I wait longer than that then that message will",
    "start": "2069320",
    "end": "2076159"
  },
  {
    "text": "get sent out the door so in this case like rabbitmq doesn't support that kind of operation so rabbiting queue doesn't have a",
    "start": "2076160",
    "end": "2082070"
  },
  {
    "text": "concept or retry if I try a message again in RabbitMQ it will get sense again now",
    "start": "2082070",
    "end": "2089040"
  },
  {
    "text": "rabbitmq doesn't have any concept of retries so i don't have to worry I don't think about what RabbitMQ is going to do",
    "start": "2089040",
    "end": "2095378"
  },
  {
    "text": "with those retries i have to think about what all those downstream consumers are going to be able to do with duplicate",
    "start": "2095379",
    "end": "2100510"
  },
  {
    "text": "messages coming in so this is one of those things like I don't if I don't have control over these other consumers",
    "start": "2100510",
    "end": "2106030"
  },
  {
    "text": "of these messages then I may not be able to do retries at all and just say I can't guarantee that those downstream",
    "start": "2106030",
    "end": "2111430"
  },
  {
    "text": "systems will be able to handle duplicate messages so this may not be a possibility for us option 3 is undo just",
    "start": "2111430",
    "end": "2121810"
  },
  {
    "text": "like email so we can't unsend a message I can't like take the message back and like notify everybody oops I'm sorry",
    "start": "2121810",
    "end": "2127900"
  },
  {
    "start": "2123000",
    "end": "2123000"
  },
  {
    "text": "please don't do well like ignore that last one and then a compensating message would be I would be weird I have the",
    "start": "2127900",
    "end": "2134710"
  },
  {
    "start": "2131000",
    "end": "2131000"
  },
  {
    "text": "order placed event and then right after that like haha just kidding order wasn't really placed events that's not a thing",
    "start": "2134710",
    "end": "2141730"
  },
  {
    "text": "that people do and so in this case the compensating message could be would be weird there are cases where this does",
    "start": "2141730",
    "end": "2147700"
  },
  {
    "text": "happen let's say that I have an order that was placed but then the customer calls and said I made a mistake can you cancel that order",
    "start": "2147700",
    "end": "2154060"
  },
  {
    "text": "and then depending on where the order is in the order process I'll have different actions I can perform so like from the business",
    "start": "2154060",
    "end": "2160869"
  },
  {
    "text": "perspective they may be able to do something like this that's where we start to come in to different policies and business rules around the each of",
    "start": "2160869",
    "end": "2167950"
  },
  {
    "text": "these different actions option for coordinates revenue q does not support",
    "start": "2167950",
    "end": "2174400"
  },
  {
    "start": "2171000",
    "end": "2171000"
  },
  {
    "text": "this no no real broker out there supports this kind of operation any more of coordinating transactions some of the",
    "start": "2174400",
    "end": "2181510"
  },
  {
    "text": "more older brokers and Q's do but they perform horribly so you when using",
    "start": "2181510",
    "end": "2187240"
  },
  {
    "text": "something like MSM q and sequel server you can actually coordinate a transaction for both of those resources",
    "start": "2187240",
    "end": "2192400"
  },
  {
    "text": "but it's like 10 times slower when you do so so for our systems that's not a performance hit we're willing to take",
    "start": "2192400",
    "end": "2198520"
  },
  {
    "text": "and so for for modern brokers they just don't support this kind of operation at all because it's such an expensive thing",
    "start": "2198520",
    "end": "2204579"
  },
  {
    "text": "to do so looking at all the different services and all the different options",
    "start": "2204579",
    "end": "2209829"
  },
  {
    "text": "like there's not any consistency about what things are supported between each different ones and the",
    "start": "2209829",
    "end": "2215530"
  },
  {
    "text": "this rules are now getting really wonky about all these different things and if I tried to encode all of this into that",
    "start": "2215530",
    "end": "2221440"
  },
  {
    "text": "one six set of six lines of code be these like nested try caches and if something fails over here then I have to",
    "start": "2221440",
    "end": "2227440"
  },
  {
    "text": "do some operation over there but if that still fails then like oh god we still recover from that so this is where Bill",
    "start": "2227440",
    "end": "2232600"
  },
  {
    "text": "and I took a step back and we said this is getting too complicated like maybe",
    "start": "2232600",
    "end": "2238030"
  },
  {
    "start": "2235000",
    "end": "2235000"
  },
  {
    "text": "the maybe the main problem here is not that these things can fail at any point",
    "start": "2238030",
    "end": "2243040"
  },
  {
    "text": "time they may be the main problems that we're trying to do all of these operations in a single button click we're trying to do too much when a user",
    "start": "2243040",
    "end": "2250060"
  },
  {
    "text": "clicks that button so can we avoid exceptions by braking in this process",
    "start": "2250060",
    "end": "2256570"
  },
  {
    "start": "2253000",
    "end": "2253000"
  },
  {
    "text": "coupling and stop trying to do so much in the concept on context of a single button click now I've actually worked in",
    "start": "2256570",
    "end": "2263860"
  },
  {
    "text": "e-commerce I've worked on a very large calm web site in the cart checkout operation and so I know like what real",
    "start": "2263860",
    "end": "2269470"
  },
  {
    "text": "businesses do with this and what we'll be describing from here on out is how these large organizations actually solve",
    "start": "2269470",
    "end": "2276490"
  },
  {
    "text": "this process coupling so in order to figure out what things can be broken out",
    "start": "2276490",
    "end": "2283390"
  },
  {
    "text": "we have to look at each of these different operations and ask the business does this thing need to happen when the button is clicked or can it",
    "start": "2283390",
    "end": "2290680"
  },
  {
    "text": "happen sometime in the future and that's not again a decision that I can make as a developer but I have to pose that",
    "start": "2290680",
    "end": "2296200"
  },
  {
    "text": "question of the business can we do do I have to do this now or can we do it sometime in the future do we have to do",
    "start": "2296200",
    "end": "2302770"
  },
  {
    "text": "it when they click the button or do we have some kind of background process or they can take up these things the first",
    "start": "2302770",
    "end": "2308920"
  },
  {
    "text": "up is stripe so this is again a business discussion because in some cases we may",
    "start": "2308920",
    "end": "2316300"
  },
  {
    "text": "need to try to charge the customer when they've clicked a button but there are other cases where we may not want to",
    "start": "2316300",
    "end": "2321840"
  },
  {
    "text": "Amazon for example they don't charge you when you click that button there's some kind of background thing that works to",
    "start": "2321840",
    "end": "2327460"
  },
  {
    "text": "be able to do that and the reason why they have that is because they have like effectively infinite supply or inventory",
    "start": "2327460",
    "end": "2334540"
  },
  {
    "text": "and so there's no need to say like well I can only allow a certain number of people to be able to buy this thing so I",
    "start": "2334540",
    "end": "2340810"
  },
  {
    "text": "need to make sure that when you click the button that I take your money right at that point in time but there are",
    "start": "2340810",
    "end": "2345970"
  },
  {
    "text": "other cases where the they do try to take your money at that time so something that has a very finite",
    "start": "2345970",
    "end": "2351640"
  },
  {
    "text": "amount of resources so something like a movie ticket where I'm picking a seat where I want to sit so the case they",
    "start": "2351640",
    "end": "2359020"
  },
  {
    "text": "want to make sure that the business from the business perspective they're only selling seats to people that actually pay so in that case they'll do things",
    "start": "2359020",
    "end": "2366130"
  },
  {
    "text": "like have that little timer that stresses me out that's counting down from five minutes it's like you must pick your seat and put all the",
    "start": "2366130",
    "end": "2371350"
  },
  {
    "text": "information in there and what they're doing is we receipts and making sure that you can actually pay when you hit the button but in our case in this",
    "start": "2371350",
    "end": "2378550"
  },
  {
    "text": "actual real-world application we wouldn't talk to the business of like you know it would be nice if we could take their money but it's not required",
    "start": "2378550",
    "end": "2384160"
  },
  {
    "text": "if you won't have to take the money at that point in time so in this case what we did was we did a try where we said",
    "start": "2384160",
    "end": "2390400"
  },
  {
    "text": "we're gonna try to take the money and if something fails then we'll just mark the payment has failed and then some kind of",
    "start": "2390400",
    "end": "2395920"
  },
  {
    "text": "background processor will be looking for orders with failed payments and then what we can try to retry them at that",
    "start": "2395920",
    "end": "2401020"
  },
  {
    "text": "point in time next up with sim grid we ask the",
    "start": "2401020",
    "end": "2406540"
  },
  {
    "text": "business so what what is sin grid that need to be actually connected to what is this what is the thing in this process",
    "start": "2406540",
    "end": "2411760"
  },
  {
    "text": "that should kick off or initiate me it's emailing the customer so I said is it",
    "start": "2411760",
    "end": "2417070"
  },
  {
    "text": "when they when we insert an order into the database is that the thing that should kick off this email to the user",
    "start": "2417070",
    "end": "2422800"
  },
  {
    "text": "like no not really it's not like it's not as important that we just we have",
    "start": "2422800",
    "end": "2427960"
  },
  {
    "text": "the order it's actually when they pay for it that we should then send the",
    "start": "2427960",
    "end": "2433270"
  },
  {
    "text": "email out so is that okay is there a way for us to connect syn grid with stripe so that when a syn grid payment is",
    "start": "2433270",
    "end": "2439840"
  },
  {
    "text": "successful then we go ahead and send the email and we can do this using web hooks you can also do this if you use things",
    "start": "2439840",
    "end": "2446260"
  },
  {
    "text": "like logic apps or what's whatever the Amazon version of this or if this than that these kind of like event-driven",
    "start": "2446260",
    "end": "2452790"
  },
  {
    "text": "widgets that says when this thing happens go do this other thing",
    "start": "2452790",
    "end": "2458170"
  },
  {
    "text": "and so we looked at stripe it has the ability of a web hook that says every time a stripe payment is successful call",
    "start": "2458170",
    "end": "2464170"
  },
  {
    "text": "this API over here and then you can do whatever you want that API call unfortunately for our real world",
    "start": "2464170",
    "end": "2469840"
  },
  {
    "text": "scenario this wasn't this wasn't good enough for us so while it's nice that it's there we",
    "start": "2469840",
    "end": "2475000"
  },
  {
    "text": "needed to have more kind of business logic that happen for the email and so what this wasn't an appropriate solution for us",
    "start": "2475000",
    "end": "2481680"
  },
  {
    "text": "the final one was RabbitMQ we said when I when I create this order do I need to",
    "start": "2481950",
    "end": "2488170"
  },
  {
    "text": "do I want to couple the uptime of rabbitmq to me processing this order and again this is a question for the",
    "start": "2488170",
    "end": "2494859"
  },
  {
    "text": "business we do need to Nutini Sinise message out eventually but they're not",
    "start": "2494859",
    "end": "2499960"
  },
  {
    "text": "necessarily case I have to do it at this point in time so the way we can separate out RabbitMQ from our database",
    "start": "2499960",
    "end": "2505990"
  },
  {
    "text": "transaction is to use an outbox pattern and now it backs pattern my stab would",
    "start": "2505990",
    "end": "2512200"
  },
  {
    "text": "basically store the messages temporarily in our database so when I create the order I'm not just inserting the order",
    "start": "2512200",
    "end": "2518440"
  },
  {
    "text": "information I'm also inserting messages into like a messages table and then something behind-the-scenes is looking",
    "start": "2518440",
    "end": "2524080"
  },
  {
    "text": "in the database for messages to be sent and then we'll send them out the door via rabbitmq so in code it would look",
    "start": "2524080",
    "end": "2530950"
  },
  {
    "text": "like this where instead of me calling bus dot publish and said I'm inserting",
    "start": "2530950",
    "end": "2536380"
  },
  {
    "text": "something into our database that is that message is eventually going to get sent out the door and then some kind of",
    "start": "2536380",
    "end": "2542830"
  },
  {
    "text": "background processor is going to look for any kind of unsent messages and then we'll actually take the messages off the",
    "start": "2542830",
    "end": "2549099"
  },
  {
    "text": "database and send it out the door via RabbitMQ again we were still not quite",
    "start": "2549099",
    "end": "2557619"
  },
  {
    "text": "there because we looked at all like let me look at that final set of code it was still just not very explicit about what",
    "start": "2557619",
    "end": "2563800"
  },
  {
    "text": "all the things that were happening there and it's just again a bunch of try caches and write everything else so we",
    "start": "2563800",
    "end": "2568990"
  },
  {
    "text": "looked at said we're just we're still just doing way way too much in the context of a single button click and if",
    "start": "2568990",
    "end": "2574450"
  },
  {
    "start": "2569000",
    "end": "2569000"
  },
  {
    "text": "we looked at modern ecommerce systems modern ecommerce uses background processing to actually fulfill the",
    "start": "2574450",
    "end": "2579970"
  },
  {
    "start": "2575000",
    "end": "2575000"
  },
  {
    "text": "orders so what we need to do is introduce some kind of workflow to manage the process that given the order",
    "start": "2579970",
    "end": "2586060"
  },
  {
    "text": "and remove as much responsibility as possible from that initial button click but as part of this we're still going to",
    "start": "2586060",
    "end": "2592839"
  },
  {
    "text": "have some constraints around these different operations so I looked at each of the different services we were",
    "start": "2592839",
    "end": "2599109"
  },
  {
    "text": "talking to and said what are the what are the things that need to happen as part of each individual item so",
    "start": "2599109",
    "end": "2605560"
  },
  {
    "text": "stripe we said do we need to do this now or can we process this offline so in the case of stripe our business said we want",
    "start": "2605560",
    "end": "2613190"
  },
  {
    "text": "to minimize the checkout fallout rate the fallout rate is someone that starts the checkout process and then abandons",
    "start": "2613190",
    "end": "2618829"
  },
  {
    "text": "it and says too much junk is going on I tried it for this thing blowing up at me whatever so in this case what we'll do",
    "start": "2618829",
    "end": "2625880"
  },
  {
    "text": "is try to minimize that as much as possible by moving the stripe processing from the button click and doing that",
    "start": "2625880",
    "end": "2632480"
  },
  {
    "text": "offline instead this is what we actually did in my real calm ecommerce experience",
    "start": "2632480",
    "end": "2638180"
  },
  {
    "text": "we even turned off all validation like all of it you're there's annoying things you'd see the credit card if you",
    "start": "2638180",
    "end": "2643790"
  },
  {
    "text": "accidentally switched to numbers it's like that's not a valid credit card number it's called the lunch accor the Loon cheque there's a there's a built-in",
    "start": "2643790",
    "end": "2651050"
  },
  {
    "text": "checksum into credit card numbers that you can use to check to see if it's a valid credit card number or not users",
    "start": "2651050",
    "end": "2657140"
  },
  {
    "text": "hate to see that message because like they thought they entered it in right and they just switched to numbers and",
    "start": "2657140",
    "end": "2663200"
  },
  {
    "text": "it's saying that's not a valid credit card number like yes it is so now I have to take your credit card out like put it up next to the screen be like oh there's",
    "start": "2663200",
    "end": "2669650"
  },
  {
    "text": "where I messed up right there so when I worked in calm our e-commerce we just",
    "start": "2669650",
    "end": "2674720"
  },
  {
    "text": "turned all that off like all of it so there's someone messed up hitting in their credit card we would call them",
    "start": "2674720",
    "end": "2679970"
  },
  {
    "text": "sometime in the future say oops we couldn't process your credit card payment and actually talk to a human to be able to then finish that order send",
    "start": "2679970",
    "end": "2688730"
  },
  {
    "text": "grid and rabbitmq are very similar and that we don't have there's no there's no requirement to process these are to do",
    "start": "2688730",
    "end": "2694490"
  },
  {
    "text": "these things and the context of the single button click so all these things we're not actually required to do the",
    "start": "2694490",
    "end": "2699740"
  },
  {
    "text": "concept and the context of that one single button click so these things now",
    "start": "2699740",
    "end": "2707030"
  },
  {
    "text": "need to be coordinated and some kind of background process or a workflow so let's go to see I'm gonna skip this",
    "start": "2707030",
    "end": "2713329"
  },
  {
    "start": "2711000",
    "end": "2711000"
  },
  {
    "text": "actually starting that yes so it looks something like this we'll have requests",
    "start": "2713329",
    "end": "2718579"
  },
  {
    "text": "come in and the only thing that thing does now is just insert a row into the database and then something is then",
    "start": "2718579",
    "end": "2723829"
  },
  {
    "text": "pulling those information off the database and kicking off some kind of processor behind the scenes some kind of",
    "start": "2723829",
    "end": "2729260"
  },
  {
    "text": "order processor that then coordinates the activities between these different back-end services now at this point we",
    "start": "2729260",
    "end": "2737510"
  },
  {
    "text": "need to figure out like what is that workflow look like we didn't want to go like buy a workflow solution off the",
    "start": "2737510",
    "end": "2742790"
  },
  {
    "text": "shelf it's too expensive so we'll be writing code to figure out how to and process the orders and there are a",
    "start": "2742790",
    "end": "2748109"
  },
  {
    "text": "few different workflow patterns off the shelf that we can look at to be able to process those orders effectively the",
    "start": "2748109",
    "end": "2755039"
  },
  {
    "start": "2755000",
    "end": "2755000"
  },
  {
    "text": "first pattern is known as the routing or routing slip pattern if I'm in the UK the routing slip pattern is this idea",
    "start": "2755039",
    "end": "2761250"
  },
  {
    "text": "that I have a message with all the different destinations and then that message just flows from one endpoint to",
    "start": "2761250",
    "end": "2766799"
  },
  {
    "text": "the next until it reaches its final destination so it looks something like this we're that background task would post",
    "start": "2766799",
    "end": "2773190"
  },
  {
    "text": "the message first to the stripe messaging in point one stripe finishes processing it gets forwarded on to the",
    "start": "2773190",
    "end": "2778829"
  },
  {
    "text": "next process and then once that finishes it go if it gets forward on to the next one and then the thing that kicks everything off will just say send this",
    "start": "2778829",
    "end": "2785549"
  },
  {
    "text": "message to all three of these different endpoints now we looked at this one and said well there's still some workflow",
    "start": "2785549",
    "end": "2791609"
  },
  {
    "text": "constraints we have like syn grid should only happen if stripe succeeds but RabbitMQ is a different story maybe that",
    "start": "2791609",
    "end": "2798569"
  },
  {
    "text": "doesn't have that kind of coupling available so this enforces a very linear flow but for us this workflow process",
    "start": "2798569",
    "end": "2804900"
  },
  {
    "text": "didn't need to have that linear flow so it wasn't a very good fit another",
    "start": "2804900",
    "end": "2810059"
  },
  {
    "start": "2810000",
    "end": "2810000"
  },
  {
    "text": "pattern is the saga pattern and the sangga pattern the canonical example is a booking holiday and the general idea",
    "start": "2810059",
    "end": "2816269"
  },
  {
    "text": "is you can't coordinate the transaction of all the different parts of booking a",
    "start": "2816269",
    "end": "2821670"
  },
  {
    "text": "holiday into one single transaction so if I'm booking a rental car looking a hotel booking of flights you can't get",
    "start": "2821670",
    "end": "2828359"
  },
  {
    "text": "like a conference call with all those three people together right like no one ever does that so",
    "start": "2828359",
    "end": "2833789"
  },
  {
    "text": "instead I have to book each individual thing separate from each other so it starts out with okay I'll book the rental car that was successful next",
    "start": "2833789",
    "end": "2840089"
  },
  {
    "text": "thing we'll do is book the hotel that was successful but if I fail and booking a flight then what I need to do is",
    "start": "2840089",
    "end": "2845130"
  },
  {
    "text": "cancel the reservations of the other two so this kind of simplified flow works",
    "start": "2845130",
    "end": "2850650"
  },
  {
    "text": "really well if I have compensating actions for those different operations but we've already seen that two of our",
    "start": "2850650",
    "end": "2856529"
  },
  {
    "text": "operations don't have compensating actions like I can't unsend an email and I can't unsend a message",
    "start": "2856529",
    "end": "2862109"
  },
  {
    "text": "so this saga a pattern works well for very simple business scenarios but ours is more complex this is not going to",
    "start": "2862109",
    "end": "2867750"
  },
  {
    "text": "work for us now the final pattern available to us is going to be the process manager pattern which is",
    "start": "2867750",
    "end": "2873329"
  },
  {
    "start": "2871000",
    "end": "2871000"
  },
  {
    "text": "basically none of the simple stuff works and so now you're just completely up to your own device about building out some",
    "start": "2873329",
    "end": "2879269"
  },
  {
    "text": "kind of a workflow process so in this case",
    "start": "2879269",
    "end": "2884369"
  },
  {
    "text": "we'll have some kind of central thing that manages the overall order processing pipeline where it receives",
    "start": "2884369",
    "end": "2890970"
  },
  {
    "text": "notifications that a new order is ready to be processed and is out coordinating communication between these other",
    "start": "2890970",
    "end": "2896069"
  },
  {
    "text": "third-party services to fulfill the entire business business order and again",
    "start": "2896069",
    "end": "2903839"
  },
  {
    "text": "we have we have another choice in front of us what is the what does that coordination actually look like between",
    "start": "2903839",
    "end": "2908880"
  },
  {
    "text": "that central process manager and these other things going on behind the scenes and from the micro services world there",
    "start": "2908880",
    "end": "2915900"
  },
  {
    "text": "are two main patterns that are identified for this kind of process management they're known as orchestration and",
    "start": "2915900",
    "end": "2921720"
  },
  {
    "start": "2920000",
    "end": "2920000"
  },
  {
    "text": "choreography also known as like command based versus event based command base is",
    "start": "2921720",
    "end": "2926789"
  },
  {
    "text": "gonna be very very procedural and it's look it's gonna be some process manager saying hey do this thing okay now I",
    "start": "2926789",
    "end": "2934140"
  },
  {
    "text": "think to go do this thing okay now a thing through you go do that other thing and choreography is more event based",
    "start": "2934140",
    "end": "2939420"
  },
  {
    "text": "where I just publish that in events it gets broadcast to all the different subscribers and then I wait to hear back",
    "start": "2939420",
    "end": "2945150"
  },
  {
    "text": "what the results of all the different processing was and my choice between",
    "start": "2945150",
    "end": "2950849"
  },
  {
    "text": "each of these is really good in depend on that process coupling do I need to make sure that this thing happens first",
    "start": "2950849",
    "end": "2956369"
  },
  {
    "text": "before other things or it does it not matter the order in which things get hot to get processed so again I have to go",
    "start": "2956369",
    "end": "2964470"
  },
  {
    "text": "back to those lists of things that were happening and look at the process coupling stripe I need to make sure",
    "start": "2964470",
    "end": "2969960"
  },
  {
    "text": "happens first before I do anything else I don't want to send a thank-you email unless that payment was successful so in",
    "start": "2969960",
    "end": "2977549"
  },
  {
    "text": "this case I actually want to orchestrate the call with stripe to make sure that that thing happens first before I go do",
    "start": "2977549",
    "end": "2983010"
  },
  {
    "text": "any of the other operations send grid I don't need a quote I don't need to tie",
    "start": "2983010",
    "end": "2989640"
  },
  {
    "text": "to anything else so force in grid and for RabbitMQ I can actually use choreography that is event based",
    "start": "2989640",
    "end": "2994799"
  },
  {
    "text": "notification for those so it start to",
    "start": "2994799",
    "end": "2999809"
  },
  {
    "text": "look like this we have the initial request coming in from the outside where all via post to our API and that set at",
    "start": "2999809",
    "end": "3006799"
  },
  {
    "text": "work the only thing that's doing is inserting a row into a database and that's it so I have a high",
    "start": "3006799",
    "end": "3013400"
  },
  {
    "text": "confidence that that can succeed like if I can't infer to Road to a database then like I can't do anything else in my",
    "start": "3013400",
    "end": "3019220"
  },
  {
    "text": "system so we want to make sure that that operation has a high degree of success so we'll want to make sure that that",
    "start": "3019220",
    "end": "3025040"
  },
  {
    "text": "database is highly available maybe primary secondary or some kind of replicated mode to really make sure that",
    "start": "3025040",
    "end": "3030590"
  },
  {
    "text": "I can insert I can I can insert rows into a database at any point in time now",
    "start": "3030590",
    "end": "3036350"
  },
  {
    "text": "from there something then looks for orders that need processing is going to kick off our process manager so our our",
    "start": "3036350",
    "end": "3048040"
  },
  {
    "text": "web code now looks like this so we've removed those six lines of code and just basically boiled down to like three",
    "start": "3048040",
    "end": "3054230"
  },
  {
    "text": "lines of code which is first go ahead and create the order from the card information we'll save the order to the",
    "start": "3054230",
    "end": "3059900"
  },
  {
    "text": "database and then we'll send a message to kick off this background process to actually do the work so that that",
    "start": "3059900",
    "end": "3066890"
  },
  {
    "text": "message to the to kick off the set of work is going to be sent to a process manager to be able to take that and",
    "start": "3066890",
    "end": "3073220"
  },
  {
    "text": "actually perform the operation so the next part is then receiving that message and then coordinating with stripe to",
    "start": "3073220",
    "end": "3080390"
  },
  {
    "text": "actually perform that first step in the process so in this case I'm using a library called and service bus to make",
    "start": "3080390",
    "end": "3087890"
  },
  {
    "text": "this part easier I don't want to code process managers by hand myself so in this case in service bus just kind of",
    "start": "3087890",
    "end": "3094040"
  },
  {
    "text": "removes a lot of that plumbing junk to make my life a bit easier here so it looks something like this where I have",
    "start": "3094040",
    "end": "3099230"
  },
  {
    "text": "this process order saga which is a process manager implementation it received the process order command that",
    "start": "3099230",
    "end": "3105830"
  },
  {
    "text": "came from the front end it's going to do some logging and then all it's going to do is then send a message to the stripe",
    "start": "3105830",
    "end": "3111530"
  },
  {
    "text": "payment payment processor to go ahead and process that order so it receives",
    "start": "3111530",
    "end": "3117470"
  },
  {
    "text": "the message from the outside and that's going to send them send a message out to stripe to say okay receive the order now",
    "start": "3117470",
    "end": "3122600"
  },
  {
    "text": "go ahead and process that payment then on the stripe side it's receiving that",
    "start": "3122600",
    "end": "3128780"
  },
  {
    "text": "notification to say I would I you need to now process this payment it's going to make the call to stripe to process",
    "start": "3128780",
    "end": "3135590"
  },
  {
    "text": "the payment based on the information it finds and then based on the success or failure of that it's going to return that back out and reply back to the",
    "start": "3135590",
    "end": "3143390"
  },
  {
    "text": "original process manager to say this is the result of trying to process this payment so inside that awaits type",
    "start": "3143390",
    "end": "3151850"
  },
  {
    "text": "service process payment you can probably imagine some kind of like try-catch that says if stripe fails then just go ahead",
    "start": "3151850",
    "end": "3157490"
  },
  {
    "text": "and return back a result of false to say it wasn't successful and then we'll leave it up to the process manager to",
    "start": "3157490",
    "end": "3164690"
  },
  {
    "text": "decide how to deal with failures so my stripe processor is not the thing that's",
    "start": "3164690",
    "end": "3170450"
  },
  {
    "text": "managing what to do with failures it's merely returning the result of the operation to let the process manager",
    "start": "3170450",
    "end": "3176150"
  },
  {
    "text": "have all the business logic of what to do so that reply comes back as a new",
    "start": "3176150",
    "end": "3181850"
  },
  {
    "text": "message to the process manager and the process manager then receives that message and they can make a decision so",
    "start": "3181850",
    "end": "3187310"
  },
  {
    "text": "if I want to put in some kind of retry policy for stripe to say let's go ahead and try this stripe call again we could",
    "start": "3187310",
    "end": "3196370"
  },
  {
    "text": "send another message to strive to be able to do so or if I want to say try it five times wait a day tried five times",
    "start": "3196370",
    "end": "3202040"
  },
  {
    "text": "again that could all be done in the context of my process manager but if it's successful then I can notify these",
    "start": "3202040",
    "end": "3208520"
  },
  {
    "text": "downstream systems so it looks something like this receiving the process payment results I",
    "start": "3208520",
    "end": "3213680"
  },
  {
    "text": "will check to see the success or failure of that payments so if it didn't succeed",
    "start": "3213680",
    "end": "3218930"
  },
  {
    "text": "this is where we had the business logic of what to do based on that so this case I just I just saying let's just mark the",
    "start": "3218930",
    "end": "3224240"
  },
  {
    "text": "payment is failed we could do something like try the stripe payment again keep track of it inside my process manager",
    "start": "3224240",
    "end": "3230210"
  },
  {
    "text": "but if if it's successful then at the bottom what we'll do is go ahead and publish out a message is saying okay",
    "start": "3230210",
    "end": "3235910"
  },
  {
    "text": "stripe succeeded we'll go ahead and say notify downstream systems that our order was accepted so the final piece is the",
    "start": "3235910",
    "end": "3246290"
  },
  {
    "text": "RabbitMQ and SendGrid part but I noticed that syn grid just needs to be notified when payment was successful so syn grit",
    "start": "3246290",
    "end": "3253520"
  },
  {
    "text": "could actually just be another subscriber to this event that payment is successful just like all the other",
    "start": "3253520",
    "end": "3259400"
  },
  {
    "text": "downstream systems like the any kind of fulfillment service in the backend so",
    "start": "3259400",
    "end": "3265640"
  },
  {
    "text": "same great just becomes yet another subscriber to that that payments successful event so the thank-you sender",
    "start": "3265640",
    "end": "3273380"
  },
  {
    "text": "this is the send grid service now the same grid endpoint receives the order accepted event based on the",
    "start": "3273380",
    "end": "3278770"
  },
  {
    "text": "pushing and says okay now I will go ahead and send you the think email based on that or being accepted and that order",
    "start": "3278770",
    "end": "3285040"
  },
  {
    "text": "accepted events it doesn't care why that happens so it's not connected to the business logic about when orders or why",
    "start": "3285040",
    "end": "3291490"
  },
  {
    "text": "orders that getting accepted it just gets notified when this occurs okay then go ahead and perform this additional",
    "start": "3291490",
    "end": "3297100"
  },
  {
    "text": "operation and all the other different downstream processes are also connected to the same individual event so the",
    "start": "3297100",
    "end": "3304060"
  },
  {
    "text": "fulfillment services or shipping services they're also connected to this order except an event so I'm lined up a",
    "start": "3304060",
    "end": "3311560"
  },
  {
    "text": "picture that looks like this and this picture is like this is more complicated",
    "start": "3311560",
    "end": "3316660"
  },
  {
    "text": "right like I'm introducing a lot more things into the mixer instead of having everything happening in the single the",
    "start": "3316660",
    "end": "3323140"
  },
  {
    "text": "context of a single button click now I'm rate reducing messaging I'm introducing communication patterns with request",
    "start": "3323140",
    "end": "3330130"
  },
  {
    "text": "response and pub/sub I'm introducing this pattern in the middle of this process manager so this is a lot more",
    "start": "3330130",
    "end": "3336580"
  },
  {
    "text": "stuff to do but with this with this in place I have a much higher degree of success of orders actually getting",
    "start": "3336580",
    "end": "3343330"
  },
  {
    "text": "processed and when I worked in a large e-commerce shop this is exactly what we",
    "start": "3343330",
    "end": "3348850"
  },
  {
    "text": "did we didn't use queues because they didn't really they were really didn't exist at the time we had a table that",
    "start": "3348850",
    "end": "3354670"
  },
  {
    "text": "you said order requests and it is processed flag and we would just loop over the table so we basically invented",
    "start": "3354670",
    "end": "3361240"
  },
  {
    "text": "a queue as part of our order request process we had an order processor that did exactly this it would walk through",
    "start": "3361240",
    "end": "3366370"
  },
  {
    "text": "all the different things that needed to happen with an order and coordinated the operations of each of those different",
    "start": "3366370",
    "end": "3372370"
  },
  {
    "text": "things so this is where Bill and I got to at the very end he felt very good",
    "start": "3372370",
    "end": "3377980"
  },
  {
    "text": "about things but we looked at this picture and we only had one week left on the contract so this is like this is too",
    "start": "3377980",
    "end": "3384280"
  },
  {
    "text": "much to do so in real life the thing the choice we actually picked was about 40 minutes ago sorry in real life we",
    "start": "3384280",
    "end": "3391540"
  },
  {
    "text": "actually went with the undo action so we would try to post a payment to stripe and if that failed then we would just",
    "start": "3391540",
    "end": "3397750"
  },
  {
    "text": "refund the money because that was all that the business had appetite to do but in modern e-commerce systems they start",
    "start": "3397750",
    "end": "3403480"
  },
  {
    "text": "to introduce these more complex interaction patterns to be able to get have a much higher degree of success",
    "start": "3403480",
    "end": "3409260"
  },
  {
    "text": "with the most important part of the business just taking the customers order so if",
    "start": "3409260",
    "end": "3416830"
  },
  {
    "text": "you want more information about this the best resource that I have for you is the",
    "start": "3416830",
    "end": "3422730"
  },
  {
    "text": "poorly named but it's a great great book enterprise integration patterns and so all these different patterns we've",
    "start": "3422730",
    "end": "3428290"
  },
  {
    "text": "talked about this the person that wrote this Gregg our hope also that coffee shop doesn't do two-phase commits and so",
    "start": "3428290",
    "end": "3434590"
  },
  {
    "text": "all the patterns I described here actually documented as part of this along with much much more so if we're interested in reading more about this I",
    "start": "3434590",
    "end": "3440800"
  },
  {
    "text": "encourage you to check this out it's not like a Dan Brown book it's on a page-turner it's very thick it's a",
    "start": "3440800",
    "end": "3447640"
  },
  {
    "text": "patterns book right so you don't just read it front to back it also doubles as a personal safety device so it's very",
    "start": "3447640",
    "end": "3453790"
  },
  {
    "text": "large and thick so if you're getting robbed you can smack someone with it but it is a great book to have around so",
    "start": "3453790",
    "end": "3461080"
  },
  {
    "text": "thank you very much this was six little lines of fail I hope you enjoy the rest of your conference thanks [Applause]",
    "start": "3461080",
    "end": "3475739"
  }
]