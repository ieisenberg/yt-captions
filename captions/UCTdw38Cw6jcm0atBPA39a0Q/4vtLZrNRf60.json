[
  {
    "start": "0",
    "end": "54000"
  },
  {
    "text": "good morning everyone welcome to this session dot into anything with time",
    "start": "5900",
    "end": "11580"
  },
  {
    "text": "providers so just very quickly so I",
    "start": "11580",
    "end": "17220"
  },
  {
    "text": "guess a lot of my career I've worked with sort of the data science he type",
    "start": "17220",
    "end": "23009"
  },
  {
    "text": "people like a optin work with people who I don't know they've put really really smart people sometimes they're only just",
    "start": "23009",
    "end": "32040"
  },
  {
    "text": "added to the real world they might lack",
    "start": "32040",
    "end": "37829"
  },
  {
    "text": "a little bit of discipline and you know you politely got to put it or you know restructure things behind the scenes and",
    "start": "37829",
    "end": "43739"
  },
  {
    "text": "make them look like rockstars more or less in the finance world they're in honest quants I mean in the rest of the",
    "start": "43739",
    "end": "50010"
  },
  {
    "text": "world their data scientists so and just",
    "start": "50010",
    "end": "56570"
  },
  {
    "text": "you know it's just a little bit of a bit of prose so I mean you might think it's",
    "start": "56570",
    "end": "62579"
  },
  {
    "text": "the end you might think it's a full-stop it's a piece of punctuation that angyeo",
    "start": "62579",
    "end": "67740"
  },
  {
    "text": "sentences it's absolutely not if you thought those things you're wrong because as convinced Kandinsky says it's",
    "start": "67740",
    "end": "76650"
  },
  {
    "text": "everything starts the dot you know you put your pen at paper you start drawing your drawing a character anyway it's",
    "start": "76650",
    "end": "82800"
  },
  {
    "text": "just a reframe really it's not necessarily true and then you've you've",
    "start": "82800",
    "end": "88590"
  },
  {
    "text": "got next exclamation like a little dot down the bottom so things unfolding from",
    "start": "88590",
    "end": "96660"
  },
  {
    "text": "an origin the Big Bang anyway is a bit of a three-dimensional thing going on there which we'll get back to so in",
    "start": "96660",
    "end": "105420"
  },
  {
    "text": "limits we've got the slash so they've changed it on us oh well but it's still it's like an exploring a namespace or a",
    "start": "105420",
    "end": "113910"
  },
  {
    "text": "space that were interested in so why a",
    "start": "113910",
    "end": "125370"
  },
  {
    "start": "123000",
    "end": "249000"
  },
  {
    "text": "type provider in the first place is really a very simple device quite often",
    "start": "125370",
    "end": "130590"
  },
  {
    "text": "it's just a way of reducing friction and we could have sort of covered the",
    "start": "130590",
    "end": "136410"
  },
  {
    "text": "Appling aspect just sometimes I mean",
    "start": "136410",
    "end": "142140"
  },
  {
    "text": "some people are very immediate in the way they approach their work like mathematicians they got an idea they want to work with it they want some data",
    "start": "142140",
    "end": "148320"
  },
  {
    "text": "very quickly so how do you get that to them quickly and in a lot of",
    "start": "148320",
    "end": "155040"
  },
  {
    "text": "environments it's kind of I feel like the tie provider is just one more step from where people already are they've",
    "start": "155040",
    "end": "160140"
  },
  {
    "text": "got a large object model and architects have spent a lot of time putting that",
    "start": "160140",
    "end": "166560"
  },
  {
    "text": "together so why not just go that extra step of providing a tie provider",
    "start": "166560",
    "end": "172140"
  },
  {
    "text": "I haven't actually so a really simple example it's just got the you know a",
    "start": "172140",
    "end": "197190"
  },
  {
    "text": "shop we've got this reference type thing",
    "start": "197190",
    "end": "201890"
  },
  {
    "text": "that's some so maybe that's some so that'd be this guy flip out yay all",
    "start": "204680",
    "end": "214230"
  },
  {
    "text": "right so bin-debug so we're just pausing into something live in the environment",
    "start": "214230",
    "end": "221360"
  },
  {
    "text": "this is actually probably not necessarily a type of either behind the scenes but I type provider could just",
    "start": "221360",
    "end": "227390"
  },
  {
    "text": "walk through a file system it's pretty dull pretty ordinary but just a quick",
    "start": "227390",
    "end": "233220"
  },
  {
    "text": "sort of an example of what we're talking about",
    "start": "233220",
    "end": "237319"
  },
  {
    "text": "you know what I'm I just",
    "start": "240400",
    "end": "244480"
  },
  {
    "start": "249000",
    "end": "327000"
  },
  {
    "text": "so it could be more elaborate upstairs there's a company called smart bear I had a quick chat to them they've got no",
    "start": "250520",
    "end": "258440"
  },
  {
    "text": "idea that this even exists I try to tell them but no go have a chat to them so they've got restful api there's actually",
    "start": "258440",
    "end": "267410"
  },
  {
    "text": "a swagger based type provider so it will",
    "start": "267410",
    "end": "272660"
  },
  {
    "text": "automatically generate code for the rest based calls that you're you're going you",
    "start": "272660",
    "end": "278450"
  },
  {
    "text": "need to make and from there you might",
    "start": "278450",
    "end": "285670"
  },
  {
    "text": "you might wonder so is our type",
    "start": "285670",
    "end": "291020"
  },
  {
    "text": "providers our dot now only thing type providers are now supported on donate core I think it's still a little bit",
    "start": "291020",
    "end": "300260"
  },
  {
    "text": "edgy you probably want to stay away from from them a little bit longer on dotnet call the example that I've been working",
    "start": "300260",
    "end": "307820"
  },
  {
    "text": "with I actually went back to the mono based stuff because I've been developing on a Mac so mono and standard I believe",
    "start": "307820",
    "end": "316340"
  },
  {
    "text": "it is I need to talk to a sort of packaging expert actually at this point but it's looking it's looking pretty",
    "start": "316340",
    "end": "322160"
  },
  {
    "text": "good and it's pretty encouraging so",
    "start": "322160",
    "end": "328270"
  },
  {
    "start": "327000",
    "end": "372000"
  },
  {
    "text": "moving on it's more into the reasons why you even won't care about these sorts of",
    "start": "328270",
    "end": "334370"
  },
  {
    "text": "things and it's sort of I kind of believe in a concept of notation as a as a tool of thought should be able to read",
    "start": "334370",
    "end": "341660"
  },
  {
    "text": "the code it should be self-explanatory you should be able to sit down with a business user and they should be able to",
    "start": "341660",
    "end": "347660"
  },
  {
    "text": "sort of see their their algorithms expressed in a way that they understand or know with a little bit of explanation",
    "start": "347660",
    "end": "353840"
  },
  {
    "text": "I don't feel like that's always the case in c-sharp possibly that's mostly",
    "start": "353840",
    "end": "360110"
  },
  {
    "text": "idiomatic but you know idioms stick with",
    "start": "360110",
    "end": "365570"
  },
  {
    "text": "a language you know whether the features are there or not unfortunately it's just one of those things anyway there's",
    "start": "365570",
    "end": "374510"
  },
  {
    "start": "372000",
    "end": "417000"
  },
  {
    "text": "Dawn's meta paper which is pretty interesting so it's just as a reference I didn't really want to read through it",
    "start": "374510",
    "end": "381010"
  },
  {
    "text": "that deeply I'm not going to try and flip to it just",
    "start": "381010",
    "end": "386909"
  },
  {
    "text": "now but it's something it's about metaprogramming in general in the",
    "start": "386909",
    "end": "392550"
  },
  {
    "text": "references section there's a secretary PL and we discover that these ideas are actually quite old and there's like a",
    "start": "392550",
    "end": "400129"
  },
  {
    "text": "1978 reference there and it's really I suppose this is maturity",
    "start": "400129",
    "end": "408990"
  },
  {
    "text": "[Music]",
    "start": "408990",
    "end": "412059"
  },
  {
    "start": "417000",
    "end": "458000"
  },
  {
    "text": "so I mean the good idea is basically and it's a response to heterogeneous environments you either go the polyglot",
    "start": "418250",
    "end": "425480"
  },
  {
    "text": "route which is you know you just learn every language Under the Sun and it's kind of I think it's fun while you're",
    "start": "425480",
    "end": "431510"
  },
  {
    "text": "young and and you know bright-eyed things pretty much I think at some point",
    "start": "431510",
    "end": "436940"
  },
  {
    "text": "I filled organizations need to see code as an asset and it's nice to have a",
    "start": "436940",
    "end": "443660"
  },
  {
    "text": "single environment a single language or a couple of world chosen languages you",
    "start": "443660",
    "end": "449270"
  },
  {
    "text": "know we need to make some decisions on these things it's kind of that's my feeling so one day I was a bit confused",
    "start": "449270",
    "end": "461540"
  },
  {
    "start": "458000",
    "end": "502000"
  },
  {
    "text": "to have up to the financial crisis and just kind of like what is it I do I've",
    "start": "461540",
    "end": "466700"
  },
  {
    "text": "been like several different industries so I asked my five-year-old daughter",
    "start": "466700",
    "end": "472030"
  },
  {
    "text": "what is it I do and she answered she looked up to heaven and took a breath",
    "start": "472030",
    "end": "479540"
  },
  {
    "text": "and looked at me said daddy it's like this it's like you've got a magnet and",
    "start": "479540",
    "end": "488440"
  },
  {
    "text": "you use the magnet to attract some numbers use some work on the numbers and",
    "start": "488440",
    "end": "494810"
  },
  {
    "text": "then you send them off okay it's that's not too bad I can work with that",
    "start": "494810",
    "end": "501790"
  },
  {
    "text": "so you know if basically we had a really nice keynote the other day and we're",
    "start": "501790",
    "end": "509330"
  },
  {
    "start": "502000",
    "end": "533000"
  },
  {
    "text": "talking about all the different encodings and so on you know it's just you know I kind would",
    "start": "509330",
    "end": "514700"
  },
  {
    "text": "go on to say the set of natural numbers you know we map that to the Univ Universal set of symbols and then we can",
    "start": "514700",
    "end": "521990"
  },
  {
    "text": "that's just the way people do they encourage things and we work with these ideas any way I like my daughter's",
    "start": "521990",
    "end": "529130"
  },
  {
    "text": "definition better so anyway girls rock basically and we go",
    "start": "529130",
    "end": "536060"
  },
  {
    "start": "533000",
    "end": "602000"
  },
  {
    "text": "on to Elon Musk he did a ill-fated interview recently which affected his",
    "start": "536060",
    "end": "541580"
  },
  {
    "text": "share price quite badly but I don't know if you caught that but so Joey says I'm",
    "start": "541580",
    "end": "548209"
  },
  {
    "text": "looking P do you describe as a business magnate and Elon replied I prefer magnet which",
    "start": "548209",
    "end": "554779"
  },
  {
    "text": "it's not too bad and magnets so important and you know that they fund",
    "start": "554779",
    "end": "560930"
  },
  {
    "text": "the mineral two generators and we're gonna be talking about generative type providers so on that note I was can only",
    "start": "560930",
    "end": "568699"
  },
  {
    "text": "hear a quick word for dave grohl and it's just it's just a song really so",
    "start": "568699",
    "end": "574009"
  },
  {
    "text": "just as a quick interlude was gonna skip",
    "start": "574009",
    "end": "581089"
  },
  {
    "text": "actually that one like that song like",
    "start": "581089",
    "end": "587660"
  },
  {
    "text": "that song as I do is basically Dave Grohl's drumbeat which is pretty awesome",
    "start": "587660",
    "end": "593170"
  },
  {
    "start": "602000",
    "end": "693000"
  },
  {
    "text": "so Joe be able answer me better on this",
    "start": "603250",
    "end": "608829"
  },
  {
    "text": "C sharp is becoming more and more functional there are lots of interesting functional features coming on so this is",
    "start": "608829",
    "end": "619399"
  },
  {
    "text": "not as true as it was but I think Dave Grohl's drum beat a lot of musicians from that time say killed hair metal",
    "start": "619399",
    "end": "626959"
  },
  {
    "text": "from the 80s so just have it let's just savor that John beard for one second",
    "start": "626959",
    "end": "633100"
  },
  {
    "text": "[Music]",
    "start": "634180",
    "end": "639480"
  },
  {
    "text": "and then when dave was later working out",
    "start": "644100",
    "end": "650470"
  },
  {
    "text": "when he's gonna do with his life you came up with songs like this",
    "start": "650470",
    "end": "655560"
  },
  {
    "text": "this is embarrassing chicks dig it",
    "start": "663050",
    "end": "670069"
  },
  {
    "text": "[Music] [Applause] [Music]",
    "start": "674820",
    "end": "685130"
  },
  {
    "text": "about a minute in there's an awesome riff anyway I'm an ex katashi I would tell here we",
    "start": "685130",
    "end": "694820"
  },
  {
    "text": "go so back into so the generator lyric I'm a generator firing whenever you quit",
    "start": "694820",
    "end": "700630"
  },
  {
    "text": "yeah whatever it is you go out and it's on can i co be that solid that reliable",
    "start": "700630",
    "end": "709580"
  },
  {
    "text": "that useful and then back into why you came so day 261 Adrienne Turner often",
    "start": "709580",
    "end": "720230"
  },
  {
    "text": "he's got a bit of a drum beat he's talking about organizations becoming data-driven he talks about competitive",
    "start": "720230",
    "end": "729650"
  },
  {
    "text": "advantage and so on he puts far more eloquently than I do but there are companies becoming best of class and we",
    "start": "729650",
    "end": "736670"
  },
  {
    "text": "often will go into talking about machine learning and you've heard the the",
    "start": "736670",
    "end": "742400"
  },
  {
    "text": "speeches many times and I'm just really talking about a very very simple thing of making those people productive so the",
    "start": "742400",
    "end": "750290"
  },
  {
    "text": "Cagle survey from 2017 so it's still current essentially when it comes to",
    "start": "750290",
    "end": "755930"
  },
  {
    "text": "data science there's just a lot of it's a kind of a running joke basically the",
    "start": "755930",
    "end": "762440"
  },
  {
    "text": "amount of legwork that people have to do to collect data callate it clean it anyway tie providers",
    "start": "762440",
    "end": "769250"
  },
  {
    "text": "are a response to this not a popularity",
    "start": "769250",
    "end": "776890"
  },
  {
    "text": "acted upon one as as yet but it's something that I think is is growing",
    "start": "776890",
    "end": "785950"
  },
  {
    "text": "so I mean just the whole of data size thing YouTube on a once said you to or what happens when three musicians and a",
    "start": "787780",
    "end": "794410"
  },
  {
    "text": "dyslexic get together he being a dyslexic just knew different kinds of people you know it was just got to",
    "start": "794410",
    "end": "799870"
  },
  {
    "text": "facilitate them when we're not all engineer so we don't all think logically and just because you don't think he",
    "start": "799870",
    "end": "805450"
  },
  {
    "text": "doesn't doesn't mean you're not smart doesn't mean you don't have a massive contribution to make that's been my",
    "start": "805450",
    "end": "814300"
  },
  {
    "text": "experience I've worked with some amazing people so and just as a proxy to the",
    "start": "814300",
    "end": "822400"
  },
  {
    "text": "rest of the world you know mathematicians often said they do their best work before 30 should we",
    "start": "822400",
    "end": "830170"
  },
  {
    "text": "be wasting their time you know should we I mean you said you see the Bright Young Things and in the work place you know",
    "start": "830170",
    "end": "836430"
  },
  {
    "text": "sometimes the running joke in an organization is oh that's a job for the intern yeah it's kind of you know all we",
    "start": "836430",
    "end": "845380"
  },
  {
    "text": "need more interns it's just some amazing processes that happen and it's maybe not",
    "start": "845380",
    "end": "851890"
  },
  {
    "text": "the best use of time we're going to get into the code sort of show me the code type providers from the ground up so",
    "start": "851890",
    "end": "859800"
  },
  {
    "text": "what a type provide is made off so see",
    "start": "859800",
    "end": "868720"
  },
  {
    "text": "we flick and will show us the cut yes we see some code so he's a very quick thing",
    "start": "868720",
    "end": "879450"
  },
  {
    "text": "so there's b-type is some basically a static type that's been created behind the scenes we've got to get CSB and down",
    "start": "882470",
    "end": "894890"
  },
  {
    "text": "below we've got a little a very simple three row thing that has been iterated",
    "start": "894890",
    "end": "901790"
  },
  {
    "text": "over and it is now displayed and usable then this is pretty pretty basic but you",
    "start": "901790",
    "end": "910400"
  },
  {
    "text": "know different properties we've got a method down the bottom so I'm not maybe",
    "start": "910400",
    "end": "917450"
  },
  {
    "text": "sit down the bottom here I should explain it I'm not sure Kyle quick show of hands does anybody used F sharp here",
    "start": "917450",
    "end": "923780"
  },
  {
    "text": "before one two three four okay we've got a few good so this is a",
    "start": "923780",
    "end": "930890"
  },
  {
    "text": "reprobate environment that we've got here I should have explained up top we've got a script in fsx as they're",
    "start": "930890",
    "end": "939440"
  },
  {
    "text": "called an F sharp speak and down the bottom are the results of the repple so",
    "start": "939440",
    "end": "947900"
  },
  {
    "text": "just get rid that as well for now so I'll just go through that quickly again",
    "start": "947900",
    "end": "953120"
  },
  {
    "text": "so we created the type just here",
    "start": "953120",
    "end": "957640"
  },
  {
    "text": "is alright there we go so and then we're",
    "start": "963660",
    "end": "970410"
  },
  {
    "text": "just doing our executing this line which is not very well named but it's just just simple examples we hit it where you",
    "start": "970410",
    "end": "978180"
  },
  {
    "text": "get an execution down the bottom that's an array down bottom these so these",
    "start": "978180",
    "end": "986490"
  },
  {
    "text": "little I've got these ligatures things turned on they're actually not they kind",
    "start": "986490",
    "end": "991890"
  },
  {
    "text": "of go what's that character it's actually two of those can you see that so square bracket and a pipe essentially",
    "start": "991890",
    "end": "1003280"
  },
  {
    "text": "anyway just different examples we've got static methods being created and so on",
    "start": "1003490",
    "end": "1008920"
  },
  {
    "text": "but more or less if we go back to the our world is type of ideas mostly",
    "start": "1008920",
    "end": "1015230"
  },
  {
    "text": "emulate oh whoa you could probably do your creation of functions and so on but the idiomatically again I mean that's it",
    "start": "1015230",
    "end": "1021980"
  },
  {
    "text": "the idiom is probably the most important thing at this point the way they used is a way of dynamically creating types so",
    "start": "1021980",
    "end": "1029089"
  },
  {
    "text": "nothing that earth-shattering in terms so so far it's all very familiar so just",
    "start": "1029090",
    "end": "1037459"
  },
  {
    "text": "a few things about these members so we'll go back into the slides just quickly",
    "start": "1037460",
    "end": "1044860"
  },
  {
    "text": "[Music]",
    "start": "1045150",
    "end": "1048289"
  },
  {
    "start": "1049000",
    "end": "1322000"
  },
  {
    "text": "we didn't cover the entry point but we'll come back to that when we go back in so classes basically it's associated",
    "start": "1051120",
    "end": "1061390"
  },
  {
    "text": "with set theory basically a collection of things what are the things now yeah",
    "start": "1061390",
    "end": "1071980"
  },
  {
    "text": "analogous to a rosetree which you computer scientists we were probably professional programmers so a binary",
    "start": "1071980",
    "end": "1080020"
  },
  {
    "text": "tree you've got a left and a right side you traverse the tree grows tree just",
    "start": "1080020",
    "end": "1085090"
  },
  {
    "text": "says something with many members and then each node you can branch off so",
    "start": "1085090",
    "end": "1091830"
  },
  {
    "text": "just quickly if you've quick who's dealt with reflection here it yep",
    "start": "1091830",
    "end": "1097840"
  },
  {
    "text": "sure obviously just a little yeah so",
    "start": "1097840",
    "end": "1109450"
  },
  {
    "text": "interestingly this is kind of a little bit surprising it's kind of sometimes if you work with an TV framework you look",
    "start": "1109450",
    "end": "1115120"
  },
  {
    "text": "at these monstrous inheritance hierarchies and it's just oh my gosh you",
    "start": "1115120",
    "end": "1121000"
  },
  {
    "text": "put this together but then you kind of look through it and sometimes you see these little gems and you go this is in",
    "start": "1121000",
    "end": "1126400"
  },
  {
    "text": "kind you see them and go this is why object programming exists this is this is really nicely expressed so underneath",
    "start": "1126400",
    "end": "1135030"
  },
  {
    "text": "all of these different member types there's not a class called member info",
    "start": "1135030",
    "end": "1141690"
  },
  {
    "text": "it's a little bit surprising because I'm even so these little the : arrow is",
    "start": "1141690",
    "end": "1150820"
  },
  {
    "text": "basically casting to something at a higher level in the hierarchy so",
    "start": "1150820",
    "end": "1159660"
  },
  {
    "text": "provided type definition which is just a type basically it's a type we're going to generate it comes from type info",
    "start": "1159660",
    "end": "1167680"
  },
  {
    "text": "we're sent subsequently comes from member info so it's kind of we've got this its hierarchy and everything's",
    "start": "1167680",
    "end": "1173470"
  },
  {
    "text": "related provided methods also constructors fields and properties so I",
    "start": "1173470",
    "end": "1180250"
  },
  {
    "text": "mean that's that's everything that it's made of right the surprising thing",
    "start": "1180250",
    "end": "1188170"
  },
  {
    "text": "for me it's not surprised now but when I was first investigating this was Oh types are also a member which then goes",
    "start": "1188170",
    "end": "1196240"
  },
  {
    "text": "into the definition of inner classes some inner classes everybody's familiar with the inner classes here or I",
    "start": "1196240",
    "end": "1202390"
  },
  {
    "text": "probably shouldn't phrase the question that way but inner classes you've got a",
    "start": "1202390",
    "end": "1207610"
  },
  {
    "text": "namespace but within the class itself acts like a kind of a namespace in you can define new classes within that class",
    "start": "1207610",
    "end": "1215910"
  },
  {
    "text": "and that's kind of where that 3-dimensional idea comes from it's like you know you have this makeshift",
    "start": "1215910",
    "end": "1223680"
  },
  {
    "text": "namespace that's just been created on fly you've got small members in it got small members again thank goodness we",
    "start": "1223680",
    "end": "1232060"
  },
  {
    "text": "don't have multiple inheritance to think about just because I I can't picture",
    "start": "1232060",
    "end": "1237910"
  },
  {
    "text": "that in my head but I can picture single inheritance okay but anyway so that's",
    "start": "1237910",
    "end": "1248800"
  },
  {
    "text": "just really just a little bit more about",
    "start": "1248800",
    "end": "1254710"
  },
  {
    "text": "inheritance so when we're doing provided types there's another little surprise there which is turns out to be quite",
    "start": "1254710",
    "end": "1260650"
  },
  {
    "text": "useful and I don't know whether this is true in c-sharp so I've never actually tried it and I don't know if it's true",
    "start": "1260650",
    "end": "1267580"
  },
  {
    "text": "in the F sharp way of composing classes",
    "start": "1267580",
    "end": "1273720"
  },
  {
    "text": "either but within type providers you can actually inherit it's called a data",
    "start": "1273720",
    "end": "1279790"
  },
  {
    "text": "backing store in this in this case from any structure in the arbitrary structure including tuples which is probably a",
    "start": "1279790",
    "end": "1287080"
  },
  {
    "text": "little bit disconcerting but it's quite convenient when to get into the",
    "start": "1287080",
    "end": "1293470"
  },
  {
    "text": "definitions of these things",
    "start": "1293470",
    "end": "1296549"
  },
  {
    "text": "we'll stop there with the slides we're gonna run his check so I just wanted to",
    "start": "1298890",
    "end": "1310600"
  },
  {
    "text": "dive into the code at this point okay",
    "start": "1310600",
    "end": "1316840"
  },
  {
    "text": "so type providers and we'll go through the slides in a second but some",
    "start": "1316840",
    "end": "1323890"
  },
  {
    "start": "1322000",
    "end": "1402000"
  },
  {
    "text": "providers have it's kind of interesting",
    "start": "1323890",
    "end": "1329380"
  },
  {
    "text": "Don Don Simon has done he's always tried to bridge this gap between C sharp and F",
    "start": "1329380",
    "end": "1336160"
  },
  {
    "text": "sharp he's trying to make the F sharp features usable from C sharp and and vice versa he's done a great job so",
    "start": "1336160",
    "end": "1341830"
  },
  {
    "text": "sometimes his programming style like certainly in his tie provider work",
    "start": "1341830",
    "end": "1347010"
  },
  {
    "text": "resembles an object-oriented approach which I don't know I've been out of out",
    "start": "1347010",
    "end": "1354820"
  },
  {
    "text": "of the object-oriented space for quite a while too I find that a little bit as concerning so I had to go ahead and undo",
    "start": "1354820",
    "end": "1360400"
  },
  {
    "text": "that a little bit and use a feature called functional application which",
    "start": "1360400",
    "end": "1368380"
  },
  {
    "text": "basically just dropping commas and brackets and makes them a little bit more flexible and easier to work with",
    "start": "1368380",
    "end": "1374170"
  },
  {
    "text": "but the reason I did that was mostly so that I could resemble the way that you",
    "start": "1374170",
    "end": "1380800"
  },
  {
    "text": "think about types and classes in c-sharp or even f-sharp just just the way you",
    "start": "1380800",
    "end": "1386500"
  },
  {
    "text": "have like a static constructor it keyword at the beginning but anyway let's just go into helper functions very",
    "start": "1386500",
    "end": "1392800"
  },
  {
    "text": "quickly oh thank you again",
    "start": "1392800",
    "end": "1398430"
  },
  {
    "start": "1402000",
    "end": "1892000"
  },
  {
    "text": "and that's cruel too so I had that ready",
    "start": "1407090",
    "end": "1412550"
  },
  {
    "text": "to go sorry about that now this does actually",
    "start": "1412550",
    "end": "1419510"
  },
  {
    "text": "this code does need to be tidied up a bit I've just sort of had it as a I'll just show that the project structure",
    "start": "1419510",
    "end": "1425530"
  },
  {
    "text": "because I basically feel like the documentation around tie providers needs to get a lot better the only examples",
    "start": "1425530",
    "end": "1432230"
  },
  {
    "text": "need to be a lot better as well so wanted to have a ton of projects with you know all these different types of ways of working with expressions and",
    "start": "1432230",
    "end": "1441040"
  },
  {
    "text": "ways of building these things up",
    "start": "1441040",
    "end": "1445240"
  },
  {
    "text": "so essentially got a bunch of definitions constructor a field and",
    "start": "1449740",
    "end": "1458180"
  },
  {
    "text": "method a property there's a little bit of probably getting a little bit too",
    "start": "1458180",
    "end": "1464750"
  },
  {
    "text": "terse here so property to expand out a bit but the ginger says forget a getter",
    "start": "1464750",
    "end": "1470360"
  },
  {
    "text": "and a setter or an index getter anyway this down below is typically what you'll",
    "start": "1470360",
    "end": "1477500"
  },
  {
    "text": "see in a Thai provider definition is so you're a private property you've got a",
    "start": "1477500",
    "end": "1482900"
  },
  {
    "text": "name a type and a bunch of other named properties that you can you can play",
    "start": "1482900",
    "end": "1489260"
  },
  {
    "text": "with I just I want to simplify that so",
    "start": "1489260",
    "end": "1495220"
  },
  {
    "text": "going back to an example you just and this isn't the best example I had to",
    "start": "1496210",
    "end": "1501410"
  },
  {
    "text": "apologize for that but you've got you're just dealing with a field in a name and a type and that's that's it if you want",
    "start": "1501410",
    "end": "1507530"
  },
  {
    "text": "to be static then you do static in front here",
    "start": "1507530",
    "end": "1513460"
  },
  {
    "text": "and and then sorry that I had support",
    "start": "1515120",
    "end": "1520340"
  },
  {
    "text": "static fields in time providers do they",
    "start": "1520340",
    "end": "1524950"
  },
  {
    "text": "so a static method",
    "start": "1526059",
    "end": "1529720"
  },
  {
    "text": "so I don't know I mean it's just a namespace way of doing this I don't know",
    "start": "1531440",
    "end": "1539779"
  },
  {
    "text": "that kind of if you're doing a lot of this kind I think it kinda kind of makes sense after a while so there's that get",
    "start": "1539779",
    "end": "1549409"
  },
  {
    "text": "rid of that back to normal so the this",
    "start": "1549409",
    "end": "1560629"
  },
  {
    "text": "idea of sort of in a generative type provider I mentioned its idea of a tree",
    "start": "1560629",
    "end": "1566149"
  },
  {
    "text": "I mean there's some very lots of the examples out there the structures involved are quite flat the things like",
    "start": "1566149",
    "end": "1572990"
  },
  {
    "text": "we're traversing across in creating dynamically with the exception of the the swagger type provider and she's",
    "start": "1572990",
    "end": "1579500"
  },
  {
    "text": "incredibly useful so the basically when",
    "start": "1579500",
    "end": "1590809"
  },
  {
    "text": "I put this to talk together I came up with with far much it's far too much material to present so",
    "start": "1590809",
    "end": "1596029"
  },
  {
    "text": "I've really kind of I focused it in on quite a complex example and that's to do",
    "start": "1596029",
    "end": "1603919"
  },
  {
    "text": "with something so first of all hands up at cosmos DB who's familiar with cosmos",
    "start": "1603919",
    "end": "1610519"
  },
  {
    "text": "to be yes it's so a better version of",
    "start": "1610519",
    "end": "1616850"
  },
  {
    "text": "that if I can be contentious here's something called k DB + from KX comm",
    "start": "1616850",
    "end": "1625840"
  },
  {
    "text": "essentially a way of accelerating calculations and you've got a relationship database in time series and",
    "start": "1626169",
    "end": "1633429"
  },
  {
    "text": "streaming and all this stuff anyway basically at the end of the day you've got an ast that you're working with and",
    "start": "1633429",
    "end": "1640610"
  },
  {
    "text": "I just want to show you that very quickly it sounds very too much to deal with but this is the ast we've got a few",
    "start": "1640610",
    "end": "1648889"
  },
  {
    "text": "different constructs we've got a list we've got a bunch of things that are primitives down to about here and then",
    "start": "1648889",
    "end": "1656210"
  },
  {
    "text": "you've got a bunch of things which are a vector and then built with those primitives you've got tables and",
    "start": "1656210",
    "end": "1662659"
  },
  {
    "text": "dictionaries and other things that you're already familiar with so and that's this idea of recursion we",
    "start": "1662659",
    "end": "1669780"
  },
  {
    "text": "keep coming up with it dealing with it again again so we've got I mean one of",
    "start": "1669780",
    "end": "1677790"
  },
  {
    "text": "you do serialization where recursing over these structures putting it onto the wire taking it off the wire",
    "start": "1677790",
    "end": "1683850"
  },
  {
    "text": "recreating the structures but that's roughly the same thing we're going to do",
    "start": "1683850",
    "end": "1690000"
  },
  {
    "text": "with the type provider as well in a moment so very quickly again so back to",
    "start": "1690000",
    "end": "1699950"
  },
  {
    "text": "so I've just done this is a script at this point some data",
    "start": "1702080",
    "end": "1710660"
  },
  {
    "text": "because - here we go so",
    "start": "1716780",
    "end": "1726550"
  },
  {
    "text": "I thought that a simpler way to actually show the results of recursion would be just to actually just output a string",
    "start": "1726780",
    "end": "1733710"
  },
  {
    "text": "because we're kind of the type providers",
    "start": "1733710",
    "end": "1738900"
  },
  {
    "text": "can become a little bit mysterious I suppose so very quickly if I were to",
    "start": "1738900",
    "end": "1747230"
  },
  {
    "text": "execute this reset the ripple",
    "start": "1747230",
    "end": "1766490"
  },
  {
    "text": "so in this approach it's kind of spicy really though some main steps we just go",
    "start": "1767060",
    "end": "1773330"
  },
  {
    "text": "back to the slides quickly in all the type providers you basically either got a spec which is provided for you in a",
    "start": "1773330",
    "end": "1781760"
  },
  {
    "text": "swag or example you've got a spec you refer to the specification and you you",
    "start": "1781760",
    "end": "1787040"
  },
  {
    "text": "know what the structures will look like or you can infer what the specification would be like in it they're CSV type",
    "start": "1787040",
    "end": "1794990"
  },
  {
    "text": "provider you can look at the columns and you go well that's obviously an integer because there are no strings in there or",
    "start": "1794990",
    "end": "1802310"
  },
  {
    "text": "you you guess you don't know if the shop is that maybe it's just maybe just lucky",
    "start": "1802310",
    "end": "1807560"
  },
  {
    "text": "it's the first hundred rows or whatever it is so you increase the data set or whatever this one's temporal it's a day this",
    "start": "1807560",
    "end": "1814430"
  },
  {
    "text": "one's you know a floating-point I mean that's kind of simple but and we've",
    "start": "1814430",
    "end": "1819770"
  },
  {
    "text": "probably seen these in so in this one we you could use the return data as the",
    "start": "1819770",
    "end": "1828590"
  },
  {
    "text": "specification itself and infer based off that so that's what this first section",
    "start": "1828590",
    "end": "1836330"
  },
  {
    "text": "is doing then this pipes across into this project to a string so we know what it kind of looks like anyway so that's",
    "start": "1836330",
    "end": "1845030"
  },
  {
    "text": "gonna show your result without I just killed it okay one two three and so very",
    "start": "1845030",
    "end": "1856640"
  },
  {
    "text": "quickly so I should back up to 300",
    "start": "1856640",
    "end": "1866900"
  },
  {
    "text": "essentially how to unpack the recursion",
    "start": "1878250",
    "end": "1887250"
  },
  {
    "text": "there is this kind of a nice algorithm behind this",
    "start": "1891270",
    "end": "1896370"
  },
  {
    "start": "1892000",
    "end": "1952000"
  },
  {
    "text": "this is this info spec thing you gonna see this this list",
    "start": "1901360",
    "end": "1906489"
  },
  {
    "text": "you've got dictionaries flip is",
    "start": "1906489",
    "end": "1912789"
  },
  {
    "text": "basically a table in KDB speak there's mathematical sort of reason for",
    "start": "1912789",
    "end": "1920470"
  },
  {
    "text": "that you're kind of converting like a dictionary of vectors and if you flip them then they become columns so it's",
    "start": "1920470",
    "end": "1927279"
  },
  {
    "text": "kind of is there's a nice kind of mapping between those two things and I'm",
    "start": "1927279",
    "end": "1932919"
  },
  {
    "text": "just producing a specification for each of these things that you we encounter so",
    "start": "1932919",
    "end": "1938499"
  },
  {
    "text": "we're traversing this tree the ast and producing the spec basically and then",
    "start": "1938499",
    "end": "1947289"
  },
  {
    "text": "there's a bit where we're producing project a string which is we're going to",
    "start": "1947289",
    "end": "1954249"
  },
  {
    "start": "1952000",
    "end": "2407000"
  },
  {
    "text": "each these nodes and we're saying what that should look like and that's this",
    "start": "1954249",
    "end": "1961809"
  },
  {
    "text": "here so",
    "start": "1961809",
    "end": "1965609"
  },
  {
    "text": "yeah sure yeah totally yeah yeah that's",
    "start": "1969830",
    "end": "2007989"
  },
  {
    "text": "the typewriter its generator gonna fly yeah subsequently you can link that up",
    "start": "2007989",
    "end": "2018309"
  },
  {
    "text": "to compiled code and so is behind the",
    "start": "2018309",
    "end": "2029739"
  },
  {
    "text": "scenes to make them work and that's kind of why I want to follow up with like I",
    "start": "2029739",
    "end": "2037419"
  },
  {
    "text": "don't know I run the F sharp user group in Sydney probably to run them quarterly but just come up with additional online",
    "start": "2037419",
    "end": "2046499"
  },
  {
    "text": "teaching material and documentation it's not as I don't believe it's as hard as",
    "start": "2046499",
    "end": "2052510"
  },
  {
    "text": "it sounds it I haven't done a great job of explaining the recursion essentially",
    "start": "2052510",
    "end": "2058118"
  },
  {
    "text": "I was gonna go through well let's just I'm gonna go to board quickly and will",
    "start": "2058119",
    "end": "2064690"
  },
  {
    "text": "made me dig into a few slides but you",
    "start": "2064690",
    "end": "2069730"
  },
  {
    "text": "just imagine each node is a dot",
    "start": "2069730",
    "end": "2073378"
  },
  {
    "text": "we want to create the type and members",
    "start": "2081039",
    "end": "2086378"
  },
  {
    "text": "and you know at whatever depth going down this way essentially so just going",
    "start": "2086379",
    "end": "2098299"
  },
  {
    "text": "to generics really quickly so you've got some type concepts we'll call us",
    "start": "2098299",
    "end": "2111160"
  },
  {
    "text": "actually class up here's a class and that might have a type so we if we",
    "start": "2111160",
    "end": "2119329"
  },
  {
    "text": "recurse down we go to here and we see the members in most of which to use I",
    "start": "2119329",
    "end": "2128000"
  },
  {
    "text": "think that depth first search we come back we only know what the members will",
    "start": "2128000",
    "end": "2135980"
  },
  {
    "text": "be completely at this once we've done we've books traverse and explore all these things to here at which point",
    "start": "2135980",
    "end": "2142819"
  },
  {
    "text": "because we need to know like say there's a some row but it's going to iterate",
    "start": "2142819",
    "end": "2149359"
  },
  {
    "text": "over and that has properties the only way we can define those is if we know this T ahead of time and then we",
    "start": "2149359",
    "end": "2155660"
  },
  {
    "text": "discover oh to have that T than that definition needs to be here so there's a little bit of we create a definition and",
    "start": "2155660",
    "end": "2162349"
  },
  {
    "text": "then we we shift it back to this point here so it's like a two step create definition and then if that's what this",
    "start": "2162349",
    "end": "2169359"
  },
  {
    "text": "if you remember the top level I had a left shift functional operator",
    "start": "2169359",
    "end": "2176690"
  },
  {
    "text": "and that's what the left shift was doing was just moving this T back to here so then we can create the class that's",
    "start": "2176690",
    "end": "2185000"
  },
  {
    "text": "really the only headache if so some",
    "start": "2185000",
    "end": "2191180"
  },
  {
    "text": "really good to to path sort of the process beyond that",
    "start": "2191180",
    "end": "2196640"
  },
  {
    "text": "it's quite a dynamic mechanism so let's",
    "start": "2196640",
    "end": "2203180"
  },
  {
    "text": "put that I heard a rumor that c-sharp is",
    "start": "2203180",
    "end": "2212120"
  },
  {
    "text": "actually going to get tie providers support maybe you have to write them",
    "start": "2212120",
    "end": "2219590"
  },
  {
    "text": "natively in c-sharp at which point awning to reevaluate",
    "start": "2219590",
    "end": "2225350"
  },
  {
    "text": "what the best sort of deployment story is and so on I still feel that there are",
    "start": "2225350",
    "end": "2231260"
  },
  {
    "text": "some advantages to expressing things in a shop so with them",
    "start": "2231260",
    "end": "2237860"
  },
  {
    "text": "f-sharp being a CLR best feature",
    "start": "2237860",
    "end": "2244820"
  },
  {
    "text": "mechanism what if you want to call it",
    "start": "2244820",
    "end": "2248500"
  },
  {
    "text": "once you get to compiled code I think you can access time providers through",
    "start": "2251050",
    "end": "2258050"
  },
  {
    "text": "this if you let's be honest there are a few rough edges and it'd be nice if they",
    "start": "2258050",
    "end": "2264910"
  },
  {
    "text": "weren't there but they are fixable and so the question was again Jo sorry",
    "start": "2264910",
    "end": "2274000"
  },
  {
    "text": "so the SDK the mechanism I haven't done",
    "start": "2280259",
    "end": "2289239"
  },
  {
    "text": "this so I can't say definitively but it looks like you can create these provider",
    "start": "2289239",
    "end": "2295449"
  },
  {
    "text": "type definitions from the c-sharp codebase looks like the compilers sort",
    "start": "2295449",
    "end": "2303549"
  },
  {
    "text": "of interactive mechanism which lets you live code against these things that's so",
    "start": "2303549",
    "end": "2308739"
  },
  {
    "text": "you can use the information but can you live explore from c-sharp at this point",
    "start": "2308739",
    "end": "2313809"
  },
  {
    "text": "that's not possible to my knowledge but once you've done the exploration and you",
    "start": "2313809",
    "end": "2320199"
  },
  {
    "text": "you're bringing the data back you can access it through through c-sharp",
    "start": "2320199",
    "end": "2326019"
  },
  {
    "text": "because i'm essentially if you go down the path of deploying this these specs",
    "start": "2326019",
    "end": "2332919"
  },
  {
    "text": "get stored in a directory and you've got little tiny assemblies which to get",
    "start": "2332919",
    "end": "2337989"
  },
  {
    "text": "loaded in so theoretically and I've done",
    "start": "2337989",
    "end": "2343839"
  },
  {
    "text": "this from a CSI perspective I'd like to explore this small you can load these little tiny assemblies in and just code",
    "start": "2343839",
    "end": "2351729"
  },
  {
    "text": "against them as you normally would",
    "start": "2351729",
    "end": "2354929"
  },
  {
    "text": "that's the story I'm not completely sure of at this point I'm need to explore",
    "start": "2359219",
    "end": "2366400"
  },
  {
    "text": "that more there are experts in the F sharp community who would be able to say",
    "start": "2366400",
    "end": "2373239"
  },
  {
    "text": "it definitively",
    "start": "2373239",
    "end": "2375539"
  },
  {
    "text": "yeah it's sort of like a well known location and there's some ongoing work with the.net core there's where that",
    "start": "2378240",
    "end": "2385320"
  },
  {
    "text": "well-known location is because we're now talking about Mac OS and things like that so there are a few there are some",
    "start": "2385320",
    "end": "2390330"
  },
  {
    "text": "changes going on and so the the talk that I wanted to do was look here we are",
    "start": "2390330",
    "end": "2396240"
  },
  {
    "text": "under call and we can do this on any operating system I did have a lot of",
    "start": "2396240",
    "end": "2402300"
  },
  {
    "text": "stuff running on net core all right so at some point I got frustrated with the",
    "start": "2402300",
    "end": "2408300"
  },
  {
    "start": "2407000",
    "end": "2662000"
  },
  {
    "text": "project system and I just thought you know what this is I'm just sticking with that with mono and and I think it's done",
    "start": "2408300",
    "end": "2415109"
  },
  {
    "text": "this standard so I'm not even like the talk you know about this more Joe the",
    "start": "2415109",
    "end": "2421070"
  },
  {
    "text": "there's this type forwarding mechanism that's going on behind the scenes and I I just don't I feel a bit uncomfortable",
    "start": "2421070",
    "end": "2426330"
  },
  {
    "text": "with it because I don't know exactly what DLL we're pointing at now suppose that's just my own hang-up",
    "start": "2426330",
    "end": "2433369"
  },
  {
    "text": "anyway I've got a little bit of them settling with a new way of doing dotnet too before I feel comfortable with that",
    "start": "2433369",
    "end": "2440220"
  },
  {
    "text": "I don't feel I don't know it's just",
    "start": "2440220",
    "end": "2445260"
  },
  {
    "text": "there's a lot of change going on with this hold on the core thing if you're doing just don't like or if you want to support yeah I support different",
    "start": "2445260",
    "end": "2453720"
  },
  {
    "text": "frameworks soon I don't know we're all going through it I guess I mean yep",
    "start": "2453720",
    "end": "2464450"
  },
  {
    "text": "that's that's correct so there needs to be a versioning story perhaps you build that into the pointing",
    "start": "2476219",
    "end": "2483969"
  },
  {
    "text": "mechanism which might be a string pointing to the so the restful the",
    "start": "2483969",
    "end": "2489579"
  },
  {
    "text": "swagger API as part of the string so yeah it needs to be taken care of so",
    "start": "2489579",
    "end": "2497049"
  },
  {
    "text": "yeah but if you're in a dynamic environment sometimes that's desirable though right so I mean and that's kind",
    "start": "2497049",
    "end": "2503619"
  },
  {
    "text": "of one of the nice things about f-sharp scripts is the compiler slash",
    "start": "2503619",
    "end": "2510489"
  },
  {
    "text": "interactive environment will show you where the where the issues are so any get warnings and so on so if you're got",
    "start": "2510489",
    "end": "2520150"
  },
  {
    "text": "an architecture team who haven't quite said it all on their final canonical",
    "start": "2520150",
    "end": "2525279"
  },
  {
    "text": "layout whatever that's going to be it's kind of nice of the scripts break you know I want a warning and then and I",
    "start": "2525279",
    "end": "2532599"
  },
  {
    "text": "also like the f-sharp environment as well so I like the idea that you have",
    "start": "2532599",
    "end": "2541329"
  },
  {
    "text": "just I haven't touched now Josie expert on the the c-sharp scripting side I",
    "start": "2541329",
    "end": "2546420"
  },
  {
    "text": "played with it quite quite early on in the piece and haven't touched it since",
    "start": "2546420",
    "end": "2552309"
  },
  {
    "text": "so I don't know how mature it's become probably it's um a lot better when I first touched it but when you're in a",
    "start": "2552309",
    "end": "2561009"
  },
  {
    "text": "type safe language it's nice to statically know like it it's nice to",
    "start": "2561009",
    "end": "2567099"
  },
  {
    "text": "know ahead of time whether without I mean you you know unit testing can be",
    "start": "2567099",
    "end": "2572979"
  },
  {
    "text": "frustrating you know you can do any theoretical you do anything with the unit test but it's just nice being off",
    "start": "2572979",
    "end": "2578499"
  },
  {
    "text": "the back I think he's still do need unit tests but it's nice to be able to back off a little bit and had the compiler do",
    "start": "2578499",
    "end": "2583779"
  },
  {
    "text": "a bit more work for you you like him he's a a logical flow through the code and the API changed so this is broken",
    "start": "2583779",
    "end": "2592790"
  },
  {
    "text": "something I want to know sir otherwise you're in a linux bash scripting kind of",
    "start": "2592790",
    "end": "2602160"
  },
  {
    "text": "a world where you don't know until run time so there's that anyone questions",
    "start": "2602160",
    "end": "2611100"
  },
  {
    "text": "any other questions",
    "start": "2611100",
    "end": "2613820"
  },
  {
    "text": "totally",
    "start": "2622460",
    "end": "2625460"
  },
  {
    "text": "yep",
    "start": "2632720",
    "end": "2635720"
  },
  {
    "text": "I'm sorry yes totally so we're building",
    "start": "2648380",
    "end": "2665550"
  },
  {
    "start": "2662000",
    "end": "2814000"
  },
  {
    "text": "into that mechanism and that's part of the magic of type providers and I'll",
    "start": "2665550",
    "end": "2674130"
  },
  {
    "text": "tell you two limitations in a second but but generally for you know 80% 90% of",
    "start": "2674130",
    "end": "2679140"
  },
  {
    "text": "the use cases you just you point I provided it goes off and spins up these",
    "start": "2679140",
    "end": "2686630"
  },
  {
    "text": "these schemas so to speak and then you just dot into them normally you work it's just a normal",
    "start": "2686630",
    "end": "2692460"
  },
  {
    "text": "coding environment the limitations being sorry it really just augments and",
    "start": "2692460",
    "end": "2707460"
  },
  {
    "text": "enhances see it just really built on that mechanism yeah it if you've got an",
    "start": "2707460",
    "end": "2715320"
  },
  {
    "text": "environment doesn't change very much and you know do you don't need tie providers this such but yeah",
    "start": "2715320",
    "end": "2721790"
  },
  {
    "text": "yeah yeah so when if you're deploying in",
    "start": "2733610",
    "end": "2758190"
  },
  {
    "text": "this sort of this sea Sharples f-sharp kind of world and it's kind of I work in",
    "start": "2758190",
    "end": "2764340"
  },
  {
    "text": "as often working a scripting based environment when I'm exploring but if you follow the chain of events this is",
    "start": "2764340",
    "end": "2773550"
  },
  {
    "text": "something I should know more about but the answer is yes it basically creates it and assembly in the same way c-sharp",
    "start": "2773550",
    "end": "2780270"
  },
  {
    "text": "would its aisle at the other day intermediate language code it just loads",
    "start": "2780270",
    "end": "2788370"
  },
  {
    "text": "it in just like any other assembly yeah",
    "start": "2788370",
    "end": "2794330"
  },
  {
    "text": "yes",
    "start": "2799970",
    "end": "2802970"
  },
  {
    "start": "2814000",
    "end": "3140000"
  },
  {
    "text": "that's the story that needs to improve as I I like distributed systems and I",
    "start": "2814160",
    "end": "2820049"
  },
  {
    "text": "often work in this environment so I",
    "start": "2820049",
    "end": "2825769"
  },
  {
    "text": "think it's mostly an IDE issue I've kind of experimented with this quite a bit so",
    "start": "2825769",
    "end": "2831630"
  },
  {
    "text": "like at the the command line I can I know something's there I dot into it",
    "start": "2831630",
    "end": "2837450"
  },
  {
    "text": "because it's kind of interesting on the command line just like a Linux command line I can create you have FSI",
    "start": "2837450",
    "end": "2844769"
  },
  {
    "text": "environment and I can dot into these things what we need I think for",
    "start": "2844769",
    "end": "2851700"
  },
  {
    "text": "certainly for Ryder which I've been using last last few months from jetbrains is a case cache invalidation",
    "start": "2851700",
    "end": "2861950"
  },
  {
    "text": "mechanism because the way the ideas have actually usually created and this is me",
    "start": "2861950",
    "end": "2867660"
  },
  {
    "text": "guessing and you know based on experience is that they don't expect things to change so it's mostly that the",
    "start": "2867660",
    "end": "2875910"
  },
  {
    "text": "cache says it's an old version of information is there so I just would",
    "start": "2875910",
    "end": "2881279"
  },
  {
    "text": "restart the IDE but I made it a feature request on this on this point maybe Joe",
    "start": "2881279",
    "end": "2890430"
  },
  {
    "text": "will do something amazing with link pad and like a very localized cash or cash",
    "start": "2890430",
    "end": "2896420"
  },
  {
    "text": "invalidation so if something yeah it can",
    "start": "2896420",
    "end": "2903329"
  },
  {
    "text": "get confused any other questions",
    "start": "2903329",
    "end": "2909980"
  },
  {
    "text": "but mostly so real-time environments and",
    "start": "2911710",
    "end": "2917619"
  },
  {
    "text": "that this actually is the question actually bothers me so I like real-time environments quite a lot in a real-time",
    "start": "2917619",
    "end": "2926230"
  },
  {
    "text": "environment there's no reason why it shouldn't be able to create a new spec and let you continue on happily so and",
    "start": "2926230",
    "end": "2935130"
  },
  {
    "text": "yeah just that there's nothing no nice no reason why that shouldn't work but",
    "start": "2935130",
    "end": "2940540"
  },
  {
    "text": "yeah question of resources and so on and",
    "start": "2940540",
    "end": "2946210"
  },
  {
    "text": "prioritization but yeah so what time is",
    "start": "2946210",
    "end": "2953560"
  },
  {
    "text": "it how we doing for time do you want to",
    "start": "2953560",
    "end": "2959560"
  },
  {
    "text": "just continue on for another five minutes and then break for lunch yeah cool any other questions so I can maybe",
    "start": "2959560",
    "end": "2967119"
  },
  {
    "text": "address them in there I",
    "start": "2967119",
    "end": "2970380"
  },
  {
    "text": "so KTB I use I was part of a start-up we",
    "start": "2980790",
    "end": "2986640"
  },
  {
    "text": "quite I got to choose what happens",
    "start": "2986640",
    "end": "2993330"
  },
  {
    "text": "depending on what my next role is yeah",
    "start": "2993330",
    "end": "2999240"
  },
  {
    "text": "well really just flexibly being able to pull up a data set and work with it I",
    "start": "3004300",
    "end": "3009470"
  },
  {
    "text": "mean it's it's quite a simple mechanism if you kind of break away from it I mean",
    "start": "3009470",
    "end": "3016580"
  },
  {
    "text": "at the discriminative unions I'm not sure if you're familiar with those well pattern recognition is a c-sharp",
    "start": "3016580",
    "end": "3023540"
  },
  {
    "text": "feature right so casting to a pattern based on something you're expecting it's",
    "start": "3023540",
    "end": "3030110"
  },
  {
    "text": "not such a bad thing in every day but it just shapes that shaped a little bit of",
    "start": "3030110",
    "end": "3035300"
  },
  {
    "text": "frustration and timee off the thing like maybe you go several servers the first step is which server am I talking to",
    "start": "3035300",
    "end": "3040970"
  },
  {
    "text": "next step is I want to send a query to that server that choosing of the service",
    "start": "3040970",
    "end": "3047900"
  },
  {
    "text": "could be a tie provider if it's kind of",
    "start": "3047900",
    "end": "3055160"
  },
  {
    "text": "with things and part of this time I could've taken the talk in terms of a survey of all the different type of",
    "start": "3055160",
    "end": "3061310"
  },
  {
    "text": "matters that are currently available and I just I chose there try and stay a",
    "start": "3061310",
    "end": "3067190"
  },
  {
    "text": "little bit more specific and I can't answer that question less friction",
    "start": "3067190",
    "end": "3076580"
  },
  {
    "text": "essentially that's the way I see it Explorer she definitely into things that are changing on a daily basis or you",
    "start": "3076580",
    "end": "3084710"
  },
  {
    "text": "know it's certainly not every minute but",
    "start": "3084710",
    "end": "3090609"
  },
  {
    "text": "I would to mind tone that is this like oh I'll just restart the IDE on that there's something new out there which",
    "start": "3091060",
    "end": "3096680"
  },
  {
    "text": "it's not recognizing I don't mind that too much at this point so I'm in the future if this feature goes mainstream I",
    "start": "3096680",
    "end": "3104450"
  },
  {
    "text": "think that's something that's kind of that's for me I mean I don't yeah it's",
    "start": "3104450",
    "end": "3111950"
  },
  {
    "text": "sort of a scenario what this was designed for it's like something that changes semi-regularly I think there's",
    "start": "3111950",
    "end": "3117830"
  },
  {
    "text": "mostly what people they're they're kind of paradigm but I'd like it be more",
    "start": "3117830",
    "end": "3122840"
  },
  {
    "text": "immediate anything else yeah cool",
    "start": "3122840",
    "end": "3133890"
  },
  {
    "text": "okay so I might just see what else I had on the slide just quickly this goes to",
    "start": "3133890",
    "end": "3143290"
  },
  {
    "text": "Joe's question quickly on the there's this concept though there's kind of some",
    "start": "3143290",
    "end": "3148420"
  },
  {
    "text": "weird words like there's word erasure so the class being in closure what happens",
    "start": "3148420",
    "end": "3154090"
  },
  {
    "text": "if you're an environment that doesn't have an any idea of what type provider",
    "start": "3154090",
    "end": "3159340"
  },
  {
    "text": "is and now see this erasure concept anyway I'm thinking a little bit too",
    "start": "3159340",
    "end": "3164560"
  },
  {
    "text": "creative but um it's essentially a structure that",
    "start": "3164560",
    "end": "3169900"
  },
  {
    "text": "c-sharp would understand without the ty provide a mechanism if that was needed",
    "start": "3169900",
    "end": "3176100"
  },
  {
    "text": "so something we're kind of we've looked at the examples I was this is a bit more specific in terms of a really central",
    "start": "3179400",
    "end": "3186670"
  },
  {
    "text": "feature for ty providers is the idea of an expression again I do Janet Ruth Ty",
    "start": "3186670",
    "end": "3198520"
  },
  {
    "text": "providers providers I've not explored the Eurasian mechanism I usually when I'm building one I'll",
    "start": "3198520",
    "end": "3203860"
  },
  {
    "text": "create it so that there will be in there Asia but it's just it's Nexus you if you",
    "start": "3203860",
    "end": "3209770"
  },
  {
    "text": "want an example check out the CSV type provided by Thomas and Gustavo tours",
    "start": "3209770",
    "end": "3215860"
  },
  {
    "text": "petrotech Petra check",
    "start": "3215860",
    "end": "3219180"
  },
  {
    "text": "one would think yeah that's the way I",
    "start": "3224000",
    "end": "3236610"
  },
  {
    "text": "always go I haven't quite understood why you need an AirAsia I need to talk to",
    "start": "3236610",
    "end": "3244050"
  },
  {
    "text": "Don or something about that yeah I would agree with you",
    "start": "3244050",
    "end": "3249450"
  },
  {
    "text": "so careful what's the point view what's the point of having an eraser in the first place possibly it's to do with so",
    "start": "3249450",
    "end": "3258120"
  },
  {
    "text": "there's so an FTE TFTP tie provider if you're stepping into a namespace that",
    "start": "3258120",
    "end": "3263640"
  },
  {
    "text": "could be infinitely large which is one of things so that there's this laser",
    "start": "3263640",
    "end": "3270000"
  },
  {
    "text": "implementation where you can only go and get the extra ah time yeah I only go get",
    "start": "3270000",
    "end": "3279960"
  },
  {
    "text": "the information if you need it so I mean there's there's more to type providers but yeah anyway central as the",
    "start": "3279960",
    "end": "3287310"
  },
  {
    "text": "expressions and then I was walls going to dig into how you piece an expression",
    "start": "3287310",
    "end": "3293910"
  },
  {
    "text": "together but something with it",
    "start": "3293910",
    "end": "3301309"
  },
  {
    "text": "it's really just on unfuse probably an",
    "start": "3301640",
    "end": "3308750"
  },
  {
    "text": "interesting thing evolution of typewriters is that you generate a type",
    "start": "3308750",
    "end": "3314010"
  },
  {
    "text": "but it's it's available to C sharp F sharp in any normal use case like you",
    "start": "3314010",
    "end": "3321000"
  },
  {
    "text": "might have anyway you just do a class of",
    "start": "3321000",
    "end": "3327090"
  },
  {
    "text": "type T where this T is a provided type and just use it just as per normal",
    "start": "3327090",
    "end": "3335570"
  },
  {
    "text": "that's currently not possible so you'd have to generate the whole thing but anyway that's um that's kind of all I've",
    "start": "3335570",
    "end": "3344970"
  },
  {
    "text": "got prepared and thanks very much for coming so",
    "start": "3344970",
    "end": "3349670"
  }
]