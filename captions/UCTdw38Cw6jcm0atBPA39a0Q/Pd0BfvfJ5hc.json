[
  {
    "text": "all right that's a full room I had no idea that se- surf was going to be this popular so uh I'm happy with that for",
    "start": "5319",
    "end": "10679"
  },
  {
    "text": "the record that's good um so I'm really happy you're here to learn about the past the present and the future of",
    "start": "10679",
    "end": "16118"
  },
  {
    "text": "crossed request forgery I actually did a PhD on SE surf cross request forgery in",
    "start": "16119",
    "end": "21160"
  },
  {
    "text": "short is sees surf um and when you start writing talk titles the past of SE serve",
    "start": "21160",
    "end": "26439"
  },
  {
    "text": "then you kind of feel old so uh this thing has been around for a long time um it's still a problem it has shifted a",
    "start": "26439",
    "end": "33719"
  },
  {
    "text": "bit shape shifted things have gotten better but attackers found ways to make our lives miserable again as well so U",
    "start": "33719",
    "end": "40079"
  },
  {
    "text": "that's essentially what we're going to talk about right here the goal of this talk is that you walk away with a solid",
    "start": "40079",
    "end": "45200"
  },
  {
    "text": "understanding of SE surf a solid understanding of the variations and you learn how to defend your applications",
    "start": "45200",
    "end": "51559"
  },
  {
    "text": "because that's the end goal not how to exploit things that might be useful and fun but it's about Defending Your",
    "start": "51559",
    "end": "57359"
  },
  {
    "text": "application so if you're hoping for something else I'm sorry I'll have to disappoint you let's start at the",
    "start": "57359",
    "end": "63400"
  },
  {
    "text": "beginning what the hell is C surf like um who here does not know what c surve",
    "start": "63400",
    "end": "70320"
  },
  {
    "text": "means all right that is very dting everybody's like yeah yeah C surf we know all about it so uh I'm going to",
    "start": "70320",
    "end": "76159"
  },
  {
    "text": "explain it anyway because I have the slide so I apologies for that but C surf cross-site request forgery is a cookie",
    "start": "76159",
    "end": "82159"
  },
  {
    "text": "based problem so it basically means if you have a web application and you're using cookies to keep track of some form",
    "start": "82159",
    "end": "88360"
  },
  {
    "text": "of authentication state you might be in trouble that's cross request fory and it exists because the browser is very",
    "start": "88360",
    "end": "95520"
  },
  {
    "text": "liberal or naive when it's handling cookies that's a legacy thing and browsers happily attach cookies to",
    "start": "95520",
    "end": "100799"
  },
  {
    "text": "outgoing requests regardless of where they're coming from so let me let me walk you through a scenario of cross",
    "start": "100799",
    "end": "105920"
  },
  {
    "text": "forgery I'm going to use restor grade as an example so a restaurant review application I I kind of like restaurants",
    "start": "105920",
    "end": "111880"
  },
  {
    "text": "and good food and all of that stuff so combining that with absc uh makes perfect sense so my training app for",
    "start": "111880",
    "end": "117560"
  },
  {
    "text": "courses and talks is a restaurant review app application also helps that everybody in the world knows how that",
    "start": "117560",
    "end": "123039"
  },
  {
    "text": "works so that's very convenient so what happens when a user goes to restor grade.com they authenticate to the",
    "start": "123039",
    "end": "129280"
  },
  {
    "text": "application this is a traditional server side app by the way like uh Java server Pages or PHP or whatever the thing we've",
    "start": "129280",
    "end": "135480"
  },
  {
    "text": "been doing in the past uh if you want to call it that and you log in with your username password or whatever you're",
    "start": "135480",
    "end": "140519"
  },
  {
    "text": "doing multiactor and in the end you get a response back you get a cookie and that cookie tracks your authentication",
    "start": "140519",
    "end": "146640"
  },
  {
    "text": "State and I'm purposely being vague here because this can be anything can be a session ID can be some client side stuff",
    "start": "146640",
    "end": "152599"
  },
  {
    "text": "you keep in a cookie which is probably not a good idea but people are doing it or can even be some fancy token that is",
    "start": "152599",
    "end": "158599"
  },
  {
    "text": "stored in the cookie it doesn't matter what it is it's based on a cookie whenever you create a new review the",
    "start": "158599",
    "end": "164200"
  },
  {
    "text": "browser is going to send a request out to the back end and when the well the application is going to send it and when the browser sees the request leave Brer",
    "start": "164200",
    "end": "171200"
  },
  {
    "text": "is like hold on this request is going to app. rest.com I have a cookie for that and it attaches the cookie to the",
    "start": "171200",
    "end": "177040"
  },
  {
    "text": "request and the back end will know who you are they will open up the the cookie whatever is in there like oh yeah that's Philip from 2 minutes ago bam create a",
    "start": "177040",
    "end": "184080"
  },
  {
    "text": "review for Philip and off we go that is a normal legitimate scenario you can see at the bottom we have like this dirty",
    "start": "184080",
    "end": "190080"
  },
  {
    "text": "form represented data like old stuff from way in the past that's how this works in traditional",
    "start": "190080",
    "end": "196680"
  },
  {
    "text": "applications all right so far so good what's the problem here well curf comes",
    "start": "196680",
    "end": "201959"
  },
  {
    "text": "into play once there is this established authentication State once that's present in the browser the attacker can start",
    "start": "201959",
    "end": "208080"
  },
  {
    "text": "launching Cerf attacks and this happens happens when a user visits a page that has some attacker controlled content for",
    "start": "208080",
    "end": "215319"
  },
  {
    "text": "example you might visit funny cat pictures.com or in the case of food you're going to visit malicious food.com",
    "start": "215319",
    "end": "222040"
  },
  {
    "text": "that's my evil domain um malicious food has some images about evil food trying to trap you um which is actually really",
    "start": "222040",
    "end": "228720"
  },
  {
    "text": "awesome that you can generate these things nowadays um a malicious food um",
    "start": "228720",
    "end": "234159"
  },
  {
    "text": "doesn't really look malicious it just shows you some stuff but behind the scenes it has malicious Behavior behind",
    "start": "234159",
    "end": "240280"
  },
  {
    "text": "the scenes the attacker is loading a hidden iframe and in that hidden if frame the attacker is creating a form",
    "start": "240280",
    "end": "246239"
  },
  {
    "text": "and a form will point to app. rest.com and theer will automatically submit that hidden form and it will trigger a",
    "start": "246239",
    "end": "252200"
  },
  {
    "text": "request to our Target application from your browser your the victims here and",
    "start": "252200",
    "end": "257359"
  },
  {
    "text": "when the request leaves the browser there in Step One the browser is like hold on I have a cookie for app. rest.com slaps it on the request and",
    "start": "257359",
    "end": "263880"
  },
  {
    "text": "sends it out and the back end is vulnerable here the back end is mistaken and it's like oo a request for a new",
    "start": "263880",
    "end": "270120"
  },
  {
    "text": "review it takes the cookie oh that's Philip creates the review bam and you get a response and everybody's happy",
    "start": "270120",
    "end": "275199"
  },
  {
    "text": "well at least the attacker is Happy the app is naively happy and the user has been victimized in this case I know this",
    "start": "275199",
    "end": "281880"
  },
  {
    "text": "is a silly example like creating restaurant reviews I mean the restaurant business is Cutthroat but not that bad",
    "start": "281880",
    "end": "289240"
  },
  {
    "text": "but imagine this happens on a banking website uh if this happens on sending emails on all kinds of transactions this",
    "start": "289240",
    "end": "295639"
  },
  {
    "text": "could have some really serious consequences all right that is crossy request forgery what I'm going to do",
    "start": "295639",
    "end": "302120"
  },
  {
    "text": "next is I'm going to use a whole bunch of demos throughout the stock to see to show you things in action and so we can",
    "start": "302120",
    "end": "307840"
  },
  {
    "text": "investigate what's happening why things are happening and what we are supposed to do about that all right so let's take",
    "start": "307840",
    "end": "315080"
  },
  {
    "text": "a look at a SE serf example for SE serf um well I have a version of the restor",
    "start": "315080",
    "end": "322680"
  },
  {
    "text": "grade application right here it's a very simple restaurant review app so there's not nothing really special about it um",
    "start": "322680",
    "end": "329120"
  },
  {
    "text": "we can log in and in this case I'm going to enable the Legacy application so we want some form based endpoints um we'll",
    "start": "329120",
    "end": "335759"
  },
  {
    "text": "talk about other types of apps later on if you log in um we now have a cookie",
    "start": "335759",
    "end": "341120"
  },
  {
    "text": "you can see that we have a session ID stored here and that session ID is basically how the server keeps track of",
    "start": "341120",
    "end": "347000"
  },
  {
    "text": "who we are so we can see some reviews we can create a review uh here as well",
    "start": "347000",
    "end": "352759"
  },
  {
    "text": "like very exciting demo I know uh it's super awesome and you can go back to the",
    "start": "352759",
    "end": "358240"
  },
  {
    "text": "reviews and we now have created created a review it's not a to-do application so it's a little bit better but you kind of",
    "start": "358240",
    "end": "364560"
  },
  {
    "text": "get the idea um and you can see the request to create the review is right",
    "start": "364560",
    "end": "369800"
  },
  {
    "text": "here we call new review it's a post request um no it's a get request this is a post request um it has a a body like a",
    "start": "369800",
    "end": "378199"
  },
  {
    "text": "post body that is being sent and so on and so on that's normal traditional Behavior so how are we going to attack",
    "start": "378199",
    "end": "383319"
  },
  {
    "text": "this well if the attacker wants to Target this all they have to do is send a similar request from A Different Page",
    "start": "383319",
    "end": "388560"
  },
  {
    "text": "in the browser I have this malicious food page right here with some images of",
    "start": "388560",
    "end": "393919"
  },
  {
    "text": "malicious food in this case and that all the way at the bottom we have um I have",
    "start": "393919",
    "end": "400240"
  },
  {
    "text": "made it very explicit the malicious behavior it's supposed to be hidden and there's going to be a hidden ey frame um",
    "start": "400240",
    "end": "407520"
  },
  {
    "text": "somewhere apparently it's not showing but there's a hidden ey frame trust me what we can do now as the attackers I'm",
    "start": "407520",
    "end": "413039"
  },
  {
    "text": "going to put on my evil head here's the SE surf page with the images and blah blah blah and here's where we include",
    "start": "413039",
    "end": "418919"
  },
  {
    "text": "the I frame and this if frame is essentially um where we want to launch our attack and right now um there's a",
    "start": "418919",
    "end": "426599"
  },
  {
    "text": "post in here as well so that's essentially um what we can do to launch the attack we have a form we point the",
    "start": "426599",
    "end": "432319"
  },
  {
    "text": "form to rest.com we provide some hidden values that we want to include there and that's how you would launch the attack",
    "start": "432319",
    "end": "439160"
  },
  {
    "text": "against the application all right that's crossed request forgery if you would load this you can see the request going",
    "start": "439160",
    "end": "446199"
  },
  {
    "text": "out here in the background this is the evil page but the network tab shows the request and you can see the payload is",
    "start": "446199",
    "end": "451560"
  },
  {
    "text": "traditional C surf C surf working well and that's essentially what's going on right here that's how the attacker",
    "start": "451560",
    "end": "457120"
  },
  {
    "text": "launches the attack if you would go back here as the user the victim user and you would um reload the list of reviews you",
    "start": "457120",
    "end": "464800"
  },
  {
    "text": "will see that our attack is now right here that's cross- side request forgery",
    "start": "464800",
    "end": "470440"
  },
  {
    "text": "all right that's not good in case you're wondering that's not really supposed to",
    "start": "470440",
    "end": "476919"
  },
  {
    "text": "happen all right so takeaway number one curf",
    "start": "478319",
    "end": "484960"
  },
  {
    "text": "attacks affect traditional service side applications they have been a problem since somewhere in the 2000s I don't",
    "start": "484960",
    "end": "490800"
  },
  {
    "text": "know the exact date that somebody came up with this but when they did everyone was like oh crap that's not good and we",
    "start": "490800",
    "end": "496319"
  },
  {
    "text": "have have been fixing SE surf ever since basically all right used to be a real problem still is a problem today but",
    "start": "496319",
    "end": "502919"
  },
  {
    "text": "we'll get to that in a minute first of all um now that everybody's like oh c surve that's awesome um now I and I I",
    "start": "502919",
    "end": "509639"
  },
  {
    "text": "can talk about myself I'm Philip D I'm from Belgium and I'm a security expert so I do security um I help developers",
    "start": "509639",
    "end": "515839"
  },
  {
    "text": "understand security simple or complex security topics uh through trainings uh courses workshops at conferences like",
    "start": "515839",
    "end": "521360"
  },
  {
    "text": "NDC security so I see some familiar faces who are there on the API security Workshop um on Monday and Tuesday so um",
    "start": "521360",
    "end": "528160"
  },
  {
    "text": "welcome back I also um do Consulting I like to help people solve problems",
    "start": "528160",
    "end": "534720"
  },
  {
    "text": "because it makes sure that whatever I'm teaching in trainings is actually relevant and use",
    "start": "534720",
    "end": "539880"
  },
  {
    "text": "um I'm an ozero ambassador and Google developer expert um these are recognitions from Dev program so I don't work for these companies but they like",
    "start": "539880",
    "end": "546440"
  },
  {
    "text": "what I'm doing in the community and sharing resources so they send me some free t-shirts every now and then and stuff like that and in return I mention",
    "start": "546440",
    "end": "553560"
  },
  {
    "text": "them on my slides and then finally I organize a course in Belgium called SE abde and SE upde is a one-week course in",
    "start": "553560",
    "end": "560680"
  },
  {
    "text": "person on ABAC where we bring in speakers from all over the world and they teach about application security",
    "start": "560680",
    "end": "566519"
  },
  {
    "text": "and it's um really fun it's really good we have delicious food it's Belgium so we also have delicious beer after the",
    "start": "566519",
    "end": "572959"
  },
  {
    "text": "course so that's perfectly possible as well so if you ever need an excuse to visit Belgium this is how you can do it",
    "start": "572959",
    "end": "578600"
  },
  {
    "text": "on your employer dime so uh keep note of that it happens in June this year so if you want to be there uh make sure to",
    "start": "578600",
    "end": "584800"
  },
  {
    "text": "look into that if you want to grab a copy of the slides um there's a QR code you can scan it doesn't point to a c",
    "start": "584800",
    "end": "590760"
  },
  {
    "text": "surf website trust me it just takes you to my website um where you can grab a copy but they're also on LinkedIn or",
    "start": "590760",
    "end": "596160"
  },
  {
    "text": "madon and if you just go to my website um I'm not not that hard to find so you can grab it from there so no issues all",
    "start": "596160",
    "end": "603880"
  },
  {
    "text": "right that's enough about the intro a very long intro so let's talk about some",
    "start": "603880",
    "end": "610399"
  },
  {
    "text": "real content here so how do we stop SE serve attacks well traditional C server",
    "start": "610399",
    "end": "616880"
  },
  {
    "text": "attacks are stopped well actually there's a problem we we can't really stop traditional C",
    "start": "616880",
    "end": "622360"
  },
  {
    "text": "server attacks in a sense that you can't detect which request is the forged one",
    "start": "622360",
    "end": "627800"
  },
  {
    "text": "because it looks identical from a from a a service perspective you get two requests one is legitimate from",
    "start": "627800",
    "end": "633560"
  },
  {
    "text": "the application one is malicious from malicious food.com and they kind of look identical and back in the day somebody",
    "start": "633560",
    "end": "639399"
  },
  {
    "text": "came up with a defense like what if we can make the legitimate requests look legitimate and then we can reject",
    "start": "639399",
    "end": "645440"
  },
  {
    "text": "everything else and that kind of solves a problem and we call that synchronizer tokens and it's not pretty but it works",
    "start": "645440",
    "end": "652639"
  },
  {
    "text": "and the idea is as follows the legitimate application will include a secret value in the form like it creates",
    "start": "652639",
    "end": "658680"
  },
  {
    "text": "a secret secret value for this specific user their session and includes that secret in the form and whenever you",
    "start": "658680",
    "end": "664320"
  },
  {
    "text": "submit that form it's going to be a hidden form field you don't see it as a user but when you submit the form the secret is going to be in the data at the",
    "start": "664320",
    "end": "671240"
  },
  {
    "text": "bottom right there and the server will get the request like ah a review for",
    "start": "671240",
    "end": "676279"
  },
  {
    "text": "Philip hold on I gave Philip this secret token before is it present in the data oh yeah it is it's the same one awesome",
    "start": "676279",
    "end": "683440"
  },
  {
    "text": "then it must have come from the legitimate application because I put it in the page and nobody else will be able to read it from the page P the",
    "start": "683440",
    "end": "690240"
  },
  {
    "text": "assumption is if an attacker can read HTML pages from different websites you have a whole other bunch of problems",
    "start": "690240",
    "end": "696480"
  },
  {
    "text": "that's not cerve in that case you're done and forget about cerve focus on the other issue that's more important so",
    "start": "696480",
    "end": "702839"
  },
  {
    "text": "that's essentially synchronizer token so when the attacker comes around the attacker can try and laune the the",
    "start": "702839",
    "end": "709040"
  },
  {
    "text": "attack and they can send the request and the cookie will be there but they have to provide a token",
    "start": "709040",
    "end": "714440"
  },
  {
    "text": "as well otherwise it's not going to work so if there's no token well here's the request if there's no no token then the",
    "start": "714440",
    "end": "720160"
  },
  {
    "text": "server is going to be like no no no uh there's no C surf token here go away or something else um the attacker can guess",
    "start": "720160",
    "end": "727440"
  },
  {
    "text": "maybe like the token today is 17 very very low chance that this will",
    "start": "727440",
    "end": "733639"
  },
  {
    "text": "succeed especially if you're at C- surf token is supposed to be random like cryptographically secure random long",
    "start": "733639",
    "end": "739040"
  },
  {
    "text": "enough and all of that stuff it's unguessable it's basically a solid defense against cross-side request",
    "start": "739040",
    "end": "744519"
  },
  {
    "text": "forgery and that is how you prevent se- surf in traditional server side applications all right SE synchronizer",
    "start": "744519",
    "end": "751160"
  },
  {
    "text": "tokens are a good C serve defense um they have some issues like if you have a million users you would have to keep",
    "start": "751160",
    "end": "756880"
  },
  {
    "text": "track of a million random values in memory that's probably not the best use of memory so there's variations on this",
    "start": "756880",
    "end": "763040"
  },
  {
    "text": "pattern that um allow you to push it to the clients in a secure way so I'm not going to talk about these things in too",
    "start": "763040",
    "end": "768519"
  },
  {
    "text": "much detail but just know that there's Alternatives here as well",
    "start": "768519",
    "end": "773600"
  },
  {
    "text": "awesome what's the problem with this well the problem with this is that developers have to",
    "start": "773600",
    "end": "779800"
  },
  {
    "text": "implement this and I'm not saying that you're lazy I'm just saying I'm just",
    "start": "779800",
    "end": "785519"
  },
  {
    "text": "saying that if nobody explicitly told you about it chances that you have a defense against this are very very slim",
    "start": "785519",
    "end": "792800"
  },
  {
    "text": "and we've seen that in the past as well and some Frameworks have started doing this by default and Ruby on Rails was",
    "start": "792800",
    "end": "798839"
  },
  {
    "text": "definitely one of them the first one that started doing this by default but a lot of applications a lot of um",
    "start": "798839",
    "end": "804240"
  },
  {
    "text": "applications built without modern and secure Frameworks will not have that defense build buil in and that means",
    "start": "804240",
    "end": "810160"
  },
  {
    "text": "that they are vulnerable to cross- at request forgery and that was a huge problem back in the day like literally a",
    "start": "810160",
    "end": "816240"
  },
  {
    "text": "very big problem what if there's a better way to",
    "start": "816240",
    "end": "822040"
  },
  {
    "text": "fix this right what if we can just fix the underlying cause instead of asking",
    "start": "822040",
    "end": "827760"
  },
  {
    "text": "developers to start generating secrets and checking them and this and that and the underlying cause would be the fact",
    "start": "827760",
    "end": "833399"
  },
  {
    "text": "that the browser gladly attaches cookies to outgoing requests that's a legacy thing that's something they came up with",
    "start": "833399",
    "end": "839759"
  },
  {
    "text": "I don't know in the '90s and 15 years later they were probably like crap we should not have done that but here we",
    "start": "839759",
    "end": "846240"
  },
  {
    "text": "are with cookie tracking and third party cookies and sea serve and all of that stuff and for sea serve the answer is a",
    "start": "846240",
    "end": "853519"
  },
  {
    "text": "samide cookie you have cross-site request forgery and same side cookies you can",
    "start": "853519",
    "end": "860560"
  },
  {
    "text": "kind of see where this is going right I have a very good image that explains same side cookies that's a joke no this does not",
    "start": "860560",
    "end": "867440"
  },
  {
    "text": "explain anything um for now I don't think you have to worry about AI based presentations on complex security topics",
    "start": "867440",
    "end": "874000"
  },
  {
    "text": "so uh we're we're good well I'm good for now I don't know why this one does not have a face by the way just eyes this",
    "start": "874000",
    "end": "880480"
  },
  {
    "text": "very scary and they look like potatoes not cookies but that's a different story",
    "start": "880480",
    "end": "886240"
  },
  {
    "text": "anyway um let me explain samide cookies in a way that actually does make sense",
    "start": "886240",
    "end": "892720"
  },
  {
    "text": "same side is a new cookie flag well new it's it's by now like five six years old",
    "start": "892720",
    "end": "898920"
  },
  {
    "text": "but it's a cookie flag you can add to a cookie telling the browser this cookie should only be used for same side",
    "start": "898920",
    "end": "905639"
  },
  {
    "text": "requests so whenever you set a cookie as a legitimate application you add that same side flag you can see right there",
    "start": "905639",
    "end": "912160"
  },
  {
    "text": "and the browser will mark it in the cookie store like this is a same side cookie and whenever you send a request what's a site by the way very important",
    "start": "912160",
    "end": "918880"
  },
  {
    "text": "detail what is a site the browser thinks about sites as the ET like the com",
    "start": "918880",
    "end": "924560"
  },
  {
    "text": "the.uk plus one so in this case we have com and restor grade so restor grade.com is",
    "start": "924560",
    "end": "931560"
  },
  {
    "text": "the site here and everything under restor grade.com considers is considered to be same site so whenever your",
    "start": "931560",
    "end": "937240"
  },
  {
    "text": "legitimate application makes a request it's going to go out the browser it's going to look at the request like hold on it goes to app. rest.com it is same",
    "start": "937240",
    "end": "944759"
  },
  {
    "text": "side do I have cookies like oh yeah this one and it's same side here good enough bam attaches the cookie it goes out and",
    "start": "944759",
    "end": "950800"
  },
  {
    "text": "the application knows who you are and creates a revie everybody happy you can see where this is going right the",
    "start": "950800",
    "end": "957399"
  },
  {
    "text": "attacker comes around user visits this malicious food.com the attacker sends a request the request goes out the browser",
    "start": "957399",
    "end": "963360"
  },
  {
    "text": "sees like it's going to app. rest.com I have cookies oh it's same site and this",
    "start": "963360",
    "end": "968519"
  },
  {
    "text": "is a cross site request it's Doom as well but it's also plus one so it's",
    "start": "968519",
    "end": "973920"
  },
  {
    "text": "we're here malicious food is a different site so this is a cross-site request",
    "start": "973920",
    "end": "979319"
  },
  {
    "text": "cross- site request forgery that's where the name kind of comes from and the browser will not attach same side",
    "start": "979319",
    "end": "984399"
  },
  {
    "text": "cookies so the back end in this case doesn't get a cookie it's like who the hell are you I I don't know what to do here and the request will fail and",
    "start": "984399",
    "end": "992079"
  },
  {
    "text": "that's same side cookies let's call that a present of Crosset request fory samide cookies are really really good at",
    "start": "992079",
    "end": "999399"
  },
  {
    "text": "neutralizing se- serf they take away the underlying cause of the browser just like yeah yeah whatever here's a cookie",
    "start": "999399",
    "end": "1005759"
  },
  {
    "text": "only for same side requests will the cookie be present and that's a good thing it's actually so",
    "start": "1005759",
    "end": "1012680"
  },
  {
    "text": "good that Google decided in 2020 like almost four years ago it's going fast",
    "start": "1012680",
    "end": "1019759"
  },
  {
    "text": "almost three years ago Google decided like yeah this thing seems to work quite well you know what we're going to do",
    "start": "1019759",
    "end": "1025480"
  },
  {
    "text": "we're going to make this the default cookie Behavior you actually wanted to do that in March 2020 that was a",
    "start": "1025480",
    "end": "1031678"
  },
  {
    "text": "scheduled timeline and then like the whole world crashed down because of some crazy pandemic so Google was like yeah",
    "start": "1031679",
    "end": "1038240"
  },
  {
    "text": "probably we shouldn't add to that by now breaking a bunch of websites so they postpone it six months and in August",
    "start": "1038240",
    "end": "1043558"
  },
  {
    "text": "2020 they flipped the switch on this Behavior meaning that all cookies without",
    "start": "1043559",
    "end": "1050080"
  },
  {
    "text": "the same side non attribute would be considered same s side that means that every cookie set by default if you had a",
    "start": "1050080",
    "end": "1056320"
  },
  {
    "text": "PHP app which has been running since like 2001 like most PHP apps I'm very",
    "start": "1056320",
    "end": "1061919"
  },
  {
    "text": "sorry by the way if you're a PHP developer I'm going to get beaten up after this talk",
    "start": "1061919",
    "end": "1067280"
  },
  {
    "text": "but I'll Escape through the back exit anyway if you're building an app and you",
    "start": "1067280",
    "end": "1072440"
  },
  {
    "text": "don't set any specific same site attributes Chrome is going to treat it as same site anyway that's what this",
    "start": "1072440",
    "end": "1077760"
  },
  {
    "text": "means so for 90% or something of users all cookies become same site unless you",
    "start": "1077760",
    "end": "1083840"
  },
  {
    "text": "explicitly opt out of this default Behavior that's a massive step forward",
    "start": "1083840",
    "end": "1089480"
  },
  {
    "text": "for cross-site request fory protections so let's take a look at what this",
    "start": "1089480",
    "end": "1094720"
  },
  {
    "text": "means if you have paid attention to My Demo you may have seen I'm using Chrome and I did Cerf and it still worked",
    "start": "1094720",
    "end": "1101559"
  },
  {
    "text": "that's because I'm a cheater so um what I actually did is I marked my cookie in",
    "start": "1101559",
    "end": "1107520"
  },
  {
    "text": "my application here I set same side To None to to make it work in Chrome so I",
    "start": "1107520",
    "end": "1113280"
  },
  {
    "text": "explicitly opted out of this Behavior otherwise the demo would have broken and it would not have been very interesting",
    "start": "1113280",
    "end": "1118400"
  },
  {
    "text": "so what we can do now is we can make same site we can set it to Lex there's like two modes of configuration that's a",
    "start": "1118400",
    "end": "1124240"
  },
  {
    "text": "lot of details that don't really matter but Lex is a good setting for most applications all right so what happens",
    "start": "1124240",
    "end": "1131159"
  },
  {
    "text": "in our demo well first of all I'm going to remove the existing cookie to make sure we get a new",
    "start": "1131159",
    "end": "1136840"
  },
  {
    "text": "one there we go reload the application Rel log in for the Legacy",
    "start": "1136840",
    "end": "1143400"
  },
  {
    "text": "app and there we go and you can now see here is the property same side in our cookie store you have the same side",
    "start": "1143400",
    "end": "1149320"
  },
  {
    "text": "property which is now set to La so this is marked as a same side cookie all right what happens to our attch well",
    "start": "1149320",
    "end": "1155960"
  },
  {
    "text": "first of all we can still add reviews like normal the quality of reviews is going",
    "start": "1155960",
    "end": "1162080"
  },
  {
    "text": "down fast by the way but what happens if we launch our attack well the predictable thing is going to happen",
    "start": "1162080",
    "end": "1167960"
  },
  {
    "text": "that's reload the page you can um excuse me that's my",
    "start": "1167960",
    "end": "1176840"
  },
  {
    "text": "mistake I'm screwing things up now so",
    "start": "1180200",
    "end": "1184679"
  },
  {
    "text": "um let me do this again uh well you already saw what happened here so that's good I don't have to show you um we now",
    "start": "1187679",
    "end": "1194000"
  },
  {
    "text": "get uh we sent the same request um it's a cross-side request going to rate.com",
    "start": "1194000",
    "end": "1199280"
  },
  {
    "text": "from malicious food.com and it gets us a 4 or3 forbidden that's essentially",
    "start": "1199280",
    "end": "1204559"
  },
  {
    "text": "because the the server doesn't detect any cookie anymore it doesn't know who we are so we're not authenticated it's",
    "start": "1204559",
    "end": "1209679"
  },
  {
    "text": "like yeah I don't know what to do with this and the problem goes away all right that's same side cookies in action why",
    "start": "1209679",
    "end": "1215679"
  },
  {
    "text": "did I set this to LX I said Chrome does this by default but other browsers do not um so that's why in the config you",
    "start": "1215679",
    "end": "1221679"
  },
  {
    "text": "still have to set it you can't just rely on like yeah yeah Chrome users are protected against C Surf and screw everybody else that's not a very good",
    "start": "1221679",
    "end": "1228760"
  },
  {
    "text": "strategy um so I would just recommend to set same site on your cookies and then every browser will respect it as well",
    "start": "1228760",
    "end": "1235120"
  },
  {
    "text": "all right that's essentially how we mitigate crossy request",
    "start": "1235120",
    "end": "1242320"
  },
  {
    "text": "forgery that's a takeaway here about Chrome and so on and so",
    "start": "1246400",
    "end": "1251880"
  },
  {
    "text": "on some of you are probably like seriously it's been in let me check 20",
    "start": "1253400",
    "end": "1260039"
  },
  {
    "text": "minutes and we're talking about serers side apps apart from those two PHP developers who were like yeah this is",
    "start": "1260039",
    "end": "1265760"
  },
  {
    "text": "awesome everybody else is like this doesn't really matter right what the hell I'm building apis I'm one of the",
    "start": "1265760",
    "end": "1270840"
  },
  {
    "text": "cool guys and that brings us to API based security like what about C surf",
    "start": "1270840",
    "end": "1276400"
  },
  {
    "text": "for apis well C surf is very very relevant for apis if your API relies on",
    "start": "1276400",
    "end": "1283240"
  },
  {
    "text": "cookies all right and that sounds a bit weird like yeah yeah cookies are this very old s or apis use tokens and so on",
    "start": "1283240",
    "end": "1291000"
  },
  {
    "text": "that's true a lot of apis rely on other forms of authentic of carrying authentication State than something",
    "start": "1291000",
    "end": "1296600"
  },
  {
    "text": "handled automatically by the browser however a lot of apis rely on cookies",
    "start": "1296600",
    "end": "1302880"
  },
  {
    "text": "especially if you have a legacy application that is being transformed into an API based application it's not",
    "start": "1302880",
    "end": "1308159"
  },
  {
    "text": "uncommon to rely on authentication State carried in cookies it actually works really well cookies are very well",
    "start": "1308159",
    "end": "1313960"
  },
  {
    "text": "handled by the browser sometimes a bit too liberal but overall cookies work well well and if you're building o out",
    "start": "1313960",
    "end": "1320080"
  },
  {
    "text": "front end applications if you were in my talk last year you learned you shouldn't do that and you switch to a BFF pattern",
    "start": "1320080",
    "end": "1326080"
  },
  {
    "text": "a back end for front end and guess what a backend for front end uses cookies so cookie based apis while not the norm are",
    "start": "1326080",
    "end": "1333840"
  },
  {
    "text": "definitely not uncommon they are they exist and they are not that rare so what",
    "start": "1333840",
    "end": "1339640"
  },
  {
    "text": "about C surfit apis well I have some slides on that you can have a API based",
    "start": "1339640",
    "end": "1344679"
  },
  {
    "text": "application I I refactored the slide I changed this to a different icon check and we now have an API based application",
    "start": "1344679",
    "end": "1352480"
  },
  {
    "text": "seriously PowerPoint development is really really easy sometimes um what does that mean it means you log in one",
    "start": "1352480",
    "end": "1358039"
  },
  {
    "text": "way or another by calling an endpoint you get a response a cookie is being set and that cookie carries your authentication State and whenever you",
    "start": "1358039",
    "end": "1364360"
  },
  {
    "text": "send a request it's now a Json request not a form submission it's a Json request to create a review the cookie is",
    "start": "1364360",
    "end": "1370320"
  },
  {
    "text": "there the API extracts information from the cookie knows that I'm Philip and creates a review in my name all right",
    "start": "1370320",
    "end": "1376200"
  },
  {
    "text": "what about cross-side request forgery well cross side request fory happens in the same way the attacker can launch",
    "start": "1376200",
    "end": "1382960"
  },
  {
    "text": "something from malicious food.com can construct a form and submit that form to an API",
    "start": "1382960",
    "end": "1389320"
  },
  {
    "text": "endpoint which is like what well if you massage the data in the form enough you",
    "start": "1389320",
    "end": "1395400"
  },
  {
    "text": "can make a form submit data that parses as Json it's a very weird thing but it",
    "start": "1395400",
    "end": "1400720"
  },
  {
    "text": "works really well and I'm going to show you in a demo in a second but you can make a form submit Json data to a back",
    "start": "1400720",
    "end": "1406400"
  },
  {
    "text": "end and if the API is a bit naive it's like it's it looks like Jason and it pares like Jason so it must be Jason and",
    "start": "1406400",
    "end": "1412440"
  },
  {
    "text": "Bam off you go new review created um for that user on an API based",
    "start": "1412440",
    "end": "1417520"
  },
  {
    "text": "application all right of course attackers have evolved as well and instead of doing weird form things with",
    "start": "1417520",
    "end": "1423720"
  },
  {
    "text": "like Json submitting forms you can also launch the same thing as a fetch based attack you can just write some",
    "start": "1423720",
    "end": "1428760"
  },
  {
    "text": "JavaScript with a fetch request and send it to an API endpoint and then you can write actual Json instead of Weir form",
    "start": "1428760",
    "end": "1434240"
  },
  {
    "text": "stuff that looks like Json and that would also work in practice as a se- surf attack all right so that's",
    "start": "1434240",
    "end": "1441200"
  },
  {
    "text": "essentially the danger with apis and at this point you're thinking like yeah yeah come on really well yeah",
    "start": "1441200",
    "end": "1449279"
  },
  {
    "text": "really this happens in practice here's a story from OK cubid a dating site they had an API based application relied on",
    "start": "1449279",
    "end": "1455360"
  },
  {
    "text": "cookies and accepted Json based um requests from the attacker allowing you",
    "start": "1455360",
    "end": "1461720"
  },
  {
    "text": "to send messages to other users on the platform which is one of the features that you probably don't want to enable",
    "start": "1461720",
    "end": "1466880"
  },
  {
    "text": "on a dating website all right let's look at curf against apis and defenses",
    "start": "1466880",
    "end": "1474520"
  },
  {
    "text": "against that okay so what we're going to do is first of all I'm going to reset my same",
    "start": "1474520",
    "end": "1481159"
  },
  {
    "text": "site Behavior that's one thing in the legitimate application",
    "start": "1481159",
    "end": "1487399"
  },
  {
    "text": "we're going to remove our cookies and we're going to log in again",
    "start": "1487399",
    "end": "1493200"
  },
  {
    "text": "now if I don't pick this box I actually get an API based application because it's the same app it just has two",
    "start": "1493200",
    "end": "1498720"
  },
  {
    "text": "endpoints a form based submission and the rest are API based requests so if you do this um we can look at the",
    "start": "1498720",
    "end": "1505240"
  },
  {
    "text": "reviews we can add a review hello test and submit this and",
    "start": "1505240",
    "end": "1512640"
  },
  {
    "text": "you can see that the post here now contains Json data that's essentially what the application is submitting and",
    "start": "1512640",
    "end": "1518520"
  },
  {
    "text": "what the API is processing that's essentially um how the API works now to",
    "start": "1518520",
    "end": "1525000"
  },
  {
    "text": "carry out a curver Tech against the API we can do uh both approaches so let me",
    "start": "1525000",
    "end": "1531679"
  },
  {
    "text": "um first do the form based submission so let's remove this form that's the old one we don't need that anymore and let's",
    "start": "1531679",
    "end": "1537600"
  },
  {
    "text": "um copy paste the one from below to submit Json you can see here",
    "start": "1537600",
    "end": "1544480"
  },
  {
    "text": "the trick to submit Json is the name of the field is the first part of a Json object and the value of the field is the",
    "start": "1544480",
    "end": "1551559"
  },
  {
    "text": "second part of adjacent object and if you tell the browser to handle this as the content type text SL plane it will",
    "start": "1551559",
    "end": "1557399"
  },
  {
    "text": "not encode any characters to like form representations it will just take name add an equal sign value bam and that's",
    "start": "1557399",
    "end": "1564600"
  },
  {
    "text": "the data you will submit to an endpoint so we set it to Tech plane we point it to an API endpoint SL API Resturant One",
    "start": "1564600",
    "end": "1571679"
  },
  {
    "text": "reviews we send a post request and that should cover things so let's save this",
    "start": "1571679",
    "end": "1578080"
  },
  {
    "text": "and see if the demo actually works clear um and reload you can see here is",
    "start": "1578080",
    "end": "1585120"
  },
  {
    "text": "a post request to a review's endpoint um you can see the payload you can see the",
    "start": "1585120",
    "end": "1590279"
  },
  {
    "text": "equal sign right here and chrome actually recognizes this as Jason it's a form submission and chrome the parser in",
    "start": "1590279",
    "end": "1596279"
  },
  {
    "text": "Chrome is like it looks like looks good enough like Jason we'll just parse it as Jason and off we go so this is a form",
    "start": "1596279",
    "end": "1602039"
  },
  {
    "text": "submission hitting API endpoints creating reviews and if you would go back here um to our Burger Master",
    "start": "1602039",
    "end": "1608480"
  },
  {
    "text": "restaurant you will see that we have our sea surf right here that should scare you by the",
    "start": "1608480",
    "end": "1615480"
  },
  {
    "text": "way if you're a bit more advanced um as an attacker so let's make the attacker a bit Advanced we'll disable the frame",
    "start": "1615480",
    "end": "1622520"
  },
  {
    "text": "we'll comment that out and we'll do the fetch based C server attack so we basically have the same request um but",
    "start": "1622520",
    "end": "1628120"
  },
  {
    "text": "now as a fetch request and I'll launch it automatically when the after two seconds of loading the application so",
    "start": "1628120",
    "end": "1634559"
  },
  {
    "text": "let's do that and go to the attacker page here clear reload wait for two",
    "start": "1634559",
    "end": "1640600"
  },
  {
    "text": "seconds and boom there's your reviews always happy when it works U there's your review it's a fetch request now and",
    "start": "1640600",
    "end": "1647320"
  },
  {
    "text": "it's submits that to the application all right in case you're wondering that's not good this is not",
    "start": "1647320",
    "end": "1654240"
  },
  {
    "text": "good how do you fix this someone come on same side cookies",
    "start": "1654240",
    "end": "1662320"
  },
  {
    "text": "yes absolutely same side is it's like the it like I said it takes the underlying cuse away so it doesn't",
    "start": "1662320",
    "end": "1668320"
  },
  {
    "text": "matter how you send a request because the browser will simply reject it so same side Le let's enable that again go",
    "start": "1668320",
    "end": "1674360"
  },
  {
    "text": "back here we have to reauthenticate because I'm a crappy developer but uh no worries and we launch the attack",
    "start": "1674360",
    "end": "1681919"
  },
  {
    "text": "again and you will see now that it it succeeds because I'm also a crappy",
    "start": "1681919",
    "end": "1689640"
  },
  {
    "text": "demo shower so let's remove the cookie the reason is that the browser still had the cookie so it doesn't get overwritten",
    "start": "1689640",
    "end": "1696039"
  },
  {
    "text": "with a new same side flag so now it's a same side cookie and now the request",
    "start": "1696039",
    "end": "1702080"
  },
  {
    "text": "will fail when we send it because there's no cookie 403 and it fails all",
    "start": "1702080",
    "end": "1707159"
  },
  {
    "text": "right",
    "start": "1707159",
    "end": "1709440"
  },
  {
    "text": "so same side cookies also prevent C surf in API based",
    "start": "1715640",
    "end": "1720720"
  },
  {
    "text": "applications what's the takeaway here the takeaway is if your API relies on cookies for authentication State you",
    "start": "1720720",
    "end": "1726080"
  },
  {
    "text": "have to think about cross-site request forgery maybe you can get away with Sam",
    "start": "1726080",
    "end": "1731480"
  },
  {
    "text": "side cookies that's a good thing um but it's something you have to actively think about all right so same side",
    "start": "1731480",
    "end": "1738240"
  },
  {
    "text": "cookies effectively mitigate cross-side request forgery",
    "start": "1738240",
    "end": "1744240"
  },
  {
    "text": "attacks so I wasted 30 minutes of your time to talk about sea serf just to tell you like yeah Cerf is solved it's it's",
    "start": "1746200",
    "end": "1752720"
  },
  {
    "text": "no problem we're done so enjoy lunch no don't leave yet it's not done um there",
    "start": "1752720",
    "end": "1760640"
  },
  {
    "text": "there's a little bit more to it in the beginning I mentioned this variation on sea surf right and if",
    "start": "1760640",
    "end": "1769320"
  },
  {
    "text": "variation is actually becoming more and more popular and a variation is would be",
    "start": "1769320",
    "end": "1775000"
  },
  {
    "text": "aptly named as a cross origin but same side request",
    "start": "1775000",
    "end": "1780360"
  },
  {
    "text": "forgery you would abbreviate that as c c RF but I'm not going to say Corf like 20",
    "start": "1781080",
    "end": "1786880"
  },
  {
    "text": "times it doesn't really sound well so cross origin request for what what what does that mean well site was com plus",
    "start": "1786880",
    "end": "1793640"
  },
  {
    "text": "one like the ET plus1 rest.com but the origin includ includes a full host name",
    "start": "1793640",
    "end": "1799320"
  },
  {
    "text": "and it means if you can send a request from a subdomain of the site like evil. rest.com and you send it to api.",
    "start": "1799320",
    "end": "1806279"
  },
  {
    "text": "rest.com it is same site they both have the same site it's cross origin and it's",
    "start": "1806279",
    "end": "1812519"
  },
  {
    "text": "request forgery and guess what's going to be present on the same side request same side cookies so that's not",
    "start": "1812519",
    "end": "1820600"
  },
  {
    "text": "good so let's go back to our demo scenario what does this mean this means",
    "start": "1820600",
    "end": "1827039"
  },
  {
    "text": "that if we take our exact same attack scenario that failed right here and we",
    "start": "1827039",
    "end": "1832799"
  },
  {
    "text": "launch it from a malicious subdomain malicious. rog.com",
    "start": "1832799",
    "end": "1840519"
  },
  {
    "text": "it works because here's a post with a 200 okay that is cross origin request",
    "start": "1840799",
    "end": "1850039"
  },
  {
    "text": "forgery wow you really should be up here because there's a lot of people looking at me like I'm an idiot it's",
    "start": "1851679",
    "end": "1858320"
  },
  {
    "text": "what the who would do that I mean come on nobody gives somebody else control over a suain what are you talking about",
    "start": "1858320",
    "end": "1865840"
  },
  {
    "text": "we trust our users our developers no nobody will do that well actually you're absolutely correct there's no good",
    "start": "1865840",
    "end": "1872480"
  },
  {
    "text": "reason somebody would do that right sometimes just happens that's one one thing that can happen or the more",
    "start": "1872480",
    "end": "1879240"
  },
  {
    "text": "logical reason is maybe your DNS is not as tight as it should be maybe you've",
    "start": "1879240",
    "end": "1886600"
  },
  {
    "text": "been using using C names to point to all kinds of cloud properties whenever you delete something on Azure you don't",
    "start": "1886600",
    "end": "1892080"
  },
  {
    "text": "clean up the C name which means you have a bunch of C names hanging hanging",
    "start": "1892080",
    "end": "1897120"
  },
  {
    "text": "around dangling cname Point records and that c name used to point to something and now it points to",
    "start": "1897120",
    "end": "1903320"
  },
  {
    "text": "nothing and guess who's looking for those things attackers and if they find",
    "start": "1903320",
    "end": "1908639"
  },
  {
    "text": "something like blah blah. pragmatic web.com pointing to nothing or to an IP address that is no longer assigned and",
    "start": "1908639",
    "end": "1915080"
  },
  {
    "text": "they assign something with that specific IP address or they create a property on AWS on Azure that matches your cname",
    "start": "1915080",
    "end": "1921320"
  },
  {
    "text": "record all of a sudden they can access it through your DNS records like what's",
    "start": "1921320",
    "end": "1927080"
  },
  {
    "text": "the old rest.com pointing to something controlled by the attacker and that's not good because now",
    "start": "1927080",
    "end": "1934240"
  },
  {
    "text": "the attacker controls something in your site allowing them to perform same site",
    "start": "1934240",
    "end": "1940440"
  },
  {
    "text": "request forgery against your applications and if you're skeptical about this this is becoming a bigger and",
    "start": "1940440",
    "end": "1946880"
  },
  {
    "text": "bigger problem bug bounty hunters are looking for this there's like a whole article ond mdn Mozilla developer",
    "start": "1946880",
    "end": "1952880"
  },
  {
    "text": "Network on subdomain takeover and companies like Microsoft have really struggle in",
    "start": "1952880",
    "end": "1958519"
  },
  {
    "text": "keeping track of all your subdomains and I challenge all of you if you have access to DNS records look into your DNS",
    "start": "1958519",
    "end": "1965440"
  },
  {
    "text": "records and you'll find dangling C names trust me even I had one and I don't even",
    "start": "1965440",
    "end": "1970919"
  },
  {
    "text": "run real applications somebody contacted me like hey I found this something I don't if you remember what it was",
    "start": "1970919",
    "end": "1976559"
  },
  {
    "text": "something something pratic web.com pointing to nothing and I register something there and now I can do nothing",
    "start": "1976559",
    "end": "1982360"
  },
  {
    "text": "really because I don't really have much running there but still it was a real problem this is getting more and more",
    "start": "1982360",
    "end": "1990720"
  },
  {
    "text": "common so the conclusion here is cerve is dead Long Live cor if you want to",
    "start": "1990720",
    "end": "1995760"
  },
  {
    "text": "call it that and I'm I'm not joking here like SE surve is actually mitigated by same side",
    "start": "1995760",
    "end": "2001880"
  },
  {
    "text": "cookies that's true and yes we have really good sea serve defenses but mitigating cross origin request for3",
    "start": "2001880",
    "end": "2007639"
  },
  {
    "text": "that's not that easy because same side is not going to protect you and you're like yeah yeah but you're",
    "start": "2007639",
    "end": "2014279"
  },
  {
    "text": "making this up right you just had an hour to fill on NDC security so you just made up stuff in PowerPoint and",
    "start": "2014279",
    "end": "2019679"
  },
  {
    "text": "everybody's like ha that's pretty funny but not a problem well no I'm not",
    "start": "2019679",
    "end": "2025679"
  },
  {
    "text": "attackers are actually abusing this and this is a story from last year against grafana so if you installed grafana and",
    "start": "2025679",
    "end": "2031120"
  },
  {
    "text": "somebody got control of a subdomain where that grafana instance was running on the same side they could attack that",
    "start": "2031120",
    "end": "2038159"
  },
  {
    "text": "instance just like that and full access by the way they could compromise your entire installation through this",
    "start": "2038159",
    "end": "2043480"
  },
  {
    "text": "mechanism this is not a joke this is something that happens in practice and it's really really",
    "start": "2043480",
    "end": "2051598"
  },
  {
    "text": "dangerous but it's very weird because this is not supposed to happen because if you look at the",
    "start": "2051960",
    "end": "2059520"
  },
  {
    "text": "details of those stories the reason that API based applications are being targeted it's because the API had a very",
    "start": "2059520",
    "end": "2067560"
  },
  {
    "text": "specific vulnerability and it meant that the API is accepting content types that they shouldn't be accepting because if",
    "start": "2067560",
    "end": "2074638"
  },
  {
    "text": "you look at the Okay Cupid story U let me jump back a slide actually if you",
    "start": "2074639",
    "end": "2080118"
  },
  {
    "text": "look at the details for that story it said right here at the",
    "start": "2080119",
    "end": "2085960"
  },
  {
    "text": "bottom that it accepted posts with content type text SL plane so you're sending data we",
    "start": "2085960",
    "end": "2092760"
  },
  {
    "text": "submitted that form with text/plain we're sending data to an API telling like yeah this is is just plain textt",
    "start": "2092760",
    "end": "2097880"
  },
  {
    "text": "and API is like let's parse it as Jason bam and that's the problem and that vulnerability is actually really really",
    "start": "2097880",
    "end": "2104040"
  },
  {
    "text": "common and I'll show you or I'll walk you through the details of why this problem exists and what you can do to",
    "start": "2104040",
    "end": "2110640"
  },
  {
    "text": "fix it and there's a a couple of steps to take into account here this is the",
    "start": "2110640",
    "end": "2115880"
  },
  {
    "text": "more complicated part of the presentation but also the last part so no worries what's the problem let's start",
    "start": "2115880",
    "end": "2123200"
  },
  {
    "text": "by looking at the vulnerability vulnerability is here's my post endpoint or the definition of my",
    "start": "2123200",
    "end": "2128839"
  },
  {
    "text": "post endpoint and I did not specify a content type and I also did a bit of",
    "start": "2128839",
    "end": "2134400"
  },
  {
    "text": "extra effort to make sure that Json parses this Json let's leave that in the middle uh there's plenty of stories that",
    "start": "2134400",
    "end": "2139680"
  },
  {
    "text": "illustrate that this is a real world vulnerability what I should have done is I should have done uh I should have",
    "start": "2139680",
    "end": "2144839"
  },
  {
    "text": "added a consumes um consumes equals application SL Json",
    "start": "2144839",
    "end": "2151960"
  },
  {
    "text": "and this will trigger a feature in Spring this is Java spring a feature that will check the content type to make",
    "start": "2151960",
    "end": "2157200"
  },
  {
    "text": "sure it's Jason and otherwise it will reject the request that's what I should have done as a developer now what does",
    "start": "2157200",
    "end": "2163280"
  },
  {
    "text": "this mean um let's save",
    "start": "2163280",
    "end": "2169359"
  },
  {
    "text": "this this has zero impact on the legitimate client application so our",
    "start": "2169359",
    "end": "2174599"
  },
  {
    "text": "client if we log in here as a user still works because we actually did submit",
    "start": "2174599",
    "end": "2180359"
  },
  {
    "text": "application Json but nobody ever checked it so now things are going to work so let's add a",
    "start": "2180359",
    "end": "2185720"
  },
  {
    "text": "review there we go all right so that still works the attack",
    "start": "2185720",
    "end": "2192920"
  },
  {
    "text": "however is going to fail now the attack is going to here it is it's going to laune the",
    "start": "2192920",
    "end": "2199560"
  },
  {
    "text": "attack is sent and then we get like a 415 unsupported media type as an error that's the framework because we said",
    "start": "2199560",
    "end": "2205599"
  },
  {
    "text": "like hey this accepts application Json the framework is like do a check it's not application Json go away that's",
    "start": "2205599",
    "end": "2211800"
  },
  {
    "text": "essentially what's going on right there that's expected behavior and now our API is",
    "start": "2211800",
    "end": "2217599"
  },
  {
    "text": "protected why and that's the the complex part because of how the browser deals",
    "start": "2217599",
    "end": "2222839"
  },
  {
    "text": "with cross origin requests let's go to the attacker code try to stick with me here we have specified content type text",
    "start": "2222839",
    "end": "2230560"
  },
  {
    "text": "slpl this fetch request is equivalent to a form submission like the actual",
    "start": "2230560",
    "end": "2237400"
  },
  {
    "text": "requests apart from the equal sign and the payload are identical and that means that if you send a Json a JavaScript",
    "start": "2237400",
    "end": "2244760"
  },
  {
    "text": "based request with fetch or xhr that is exactly identical to what you can do with a form the browser will just allow",
    "start": "2244760",
    "end": "2250680"
  },
  {
    "text": "you to send it because whether you do it with a form or JavaScript it makes no difference but if the moment you start",
    "start": "2250680",
    "end": "2255960"
  },
  {
    "text": "doing fancy things that you cannot do with forms the browser will be like hold on that's a new capability that's course",
    "start": "2255960",
    "end": "2264200"
  },
  {
    "text": "course origin resource sharing and we enabled that in 2009 so new is relevant",
    "start": "2264200",
    "end": "2269280"
  },
  {
    "text": "um but it's probably before some of you were born but that's a different story but um if you want to do something",
    "start": "2269280",
    "end": "2275680"
  },
  {
    "text": "like this you can you're perfectly allowed to do that a lot of applications do that but if you want to do that the",
    "start": "2275680",
    "end": "2281440"
  },
  {
    "text": "browser will be like hold on that's something that we didn't allow before so first I'm going to ask the server for",
    "start": "2281440",
    "end": "2287920"
  },
  {
    "text": "permission before I send that request because if the server has been running happily since 2008 against that again",
    "start": "2287920",
    "end": "2294520"
  },
  {
    "text": "that PHP server it's been running since 2008 maybe it doesn't know that this is possible maybe it doesn't know about",
    "start": "2294520",
    "end": "2300280"
  },
  {
    "text": "these new features and then I don't want to compromise it just by sending this cross origin request that I that before did not exist in the browser world so",
    "start": "2300280",
    "end": "2307119"
  },
  {
    "text": "this is something new and the browser will ask permission first however there's a second feature",
    "start": "2307119",
    "end": "2313040"
  },
  {
    "text": "here and that's the mode if you set mode to no course you tell the browser like",
    "start": "2313040",
    "end": "2318240"
  },
  {
    "text": "let's just pretend course doesn't exist and the browser plays along here it's like okay yeah let's let's do that",
    "start": "2318240",
    "end": "2324480"
  },
  {
    "text": "it's 2008 again everybody's happy",
    "start": "2324480",
    "end": "2329839"
  },
  {
    "text": "then and when you do that and you try to send this the browser is like yeah man but it's 2008 we we can't do that that",
    "start": "2329839",
    "end": "2336960"
  },
  {
    "text": "so it's going to revert back to something um that it knew existed in 2008 so if we send this no course but a",
    "start": "2336960",
    "end": "2343119"
  },
  {
    "text": "custom content type which is something that doesn't work it's not allowed and we send it the browser will be like yeah",
    "start": "2343119",
    "end": "2348640"
  },
  {
    "text": "that custom content type I can't do that so let's just use TCH plane right that's good enough you can see at the bottom",
    "start": "2348640",
    "end": "2354160"
  },
  {
    "text": "that the API is like uh-uh no text SL plane that's not allowed so this doesn't work what can we do well we can tell the",
    "start": "2354160",
    "end": "2360880"
  },
  {
    "text": "browser let's pretend it's post 2009 and course exists we can do that no problem",
    "start": "2360880",
    "end": "2368599"
  },
  {
    "text": "and when you tell the browser the course exists the browser is like oh content dip application Json I'll send that for",
    "start": "2368599",
    "end": "2373839"
  },
  {
    "text": "you no problem absolutely but I'm going to ask for permission first and the browser is",
    "start": "2373839",
    "end": "2380040"
  },
  {
    "text": "going to use an options request that's the course pre-light the browser is going to ask the server like hey man I don't know if you've been updated since",
    "start": "2380040",
    "end": "2386440"
  },
  {
    "text": "2009 but here's what I'm going to do I'm going to send you a request from malicious. rest.com and I'm going to use",
    "start": "2386440",
    "end": "2391720"
  },
  {
    "text": "post for that and I'm going to include a custom content type header what do you",
    "start": "2391720",
    "end": "2397000"
  },
  {
    "text": "think about that and in this instance the server is like word I don't know and the browser is like o sorry I asked and",
    "start": "2397000",
    "end": "2403440"
  },
  {
    "text": "it would will not send that request you can see that right here in the options so this is like a probe an ask for",
    "start": "2403440",
    "end": "2408760"
  },
  {
    "text": "permission and the browser includes request headress browser basically says like hey um I'm coming from origin I'm",
    "start": "2408760",
    "end": "2415480"
  },
  {
    "text": "coming from l. rest.com and I would like to send a post request access control request method and I would like to",
    "start": "2415480",
    "end": "2422280"
  },
  {
    "text": "include a content type header in that post request and the server in this case is not configured with course it's newer",
    "start": "2422280",
    "end": "2428839"
  },
  {
    "text": "than 2008 it's like since this morning so it's pretty up to date um it's newer",
    "start": "2428839",
    "end": "2434359"
  },
  {
    "text": "than 2008 but it doesn't have a course policy so it doesn't know or it knows that this is not allowed and it simply",
    "start": "2434359",
    "end": "2439440"
  },
  {
    "text": "says uh-uh by not responding positively the browser says like the service says like sorry hands off and the browser",
    "start": "2439440",
    "end": "2446040"
  },
  {
    "text": "doesn't send the actual request and that's why you get the error right here that's the error here it could not",
    "start": "2446040",
    "end": "2452680"
  },
  {
    "text": "be sent because nobody opted into this that's essentially how you can use course as a defense so by ensuring your",
    "start": "2452680",
    "end": "2459920"
  },
  {
    "text": "API is properly implemented requires the proper content types this problem shouldn't exist in the first place which",
    "start": "2459920",
    "end": "2465440"
  },
  {
    "text": "tells you that okay Cupid screwed it up and grafana screwed it up actually in",
    "start": "2465440",
    "end": "2471160"
  },
  {
    "text": "grafana they really did some effort to screw it up because you should read the story they did not accept text/plain but",
    "start": "2471160",
    "end": "2478920"
  },
  {
    "text": "their check that they did on the server for God knows what reason was like if the content type header includes the",
    "start": "2478920",
    "end": "2484599"
  },
  {
    "text": "word Json that's good enough for us so there's this trick in the browser where you can send Tex /pl semicolon Json and",
    "start": "2484599",
    "end": "2492160"
  },
  {
    "text": "the browser is like that's Tex plane and grafo was like it contains Jason must be good and that was the bypass they had",
    "start": "2492160",
    "end": "2499400"
  },
  {
    "text": "it's a it's really really weird all",
    "start": "2499400",
    "end": "2503960"
  },
  {
    "text": "right now saying things like your API should",
    "start": "2504480",
    "end": "2510119"
  },
  {
    "text": "always check the proper content type it's really good advice but it also put puts the burden on you and if",
    "start": "2510119",
    "end": "2518240"
  },
  {
    "text": "it fails it fails miserably there's a second problem sometimes you have a post",
    "start": "2518240",
    "end": "2523839"
  },
  {
    "text": "request without a body which also makes no sense except that post is about State",
    "start": "2523839",
    "end": "2528880"
  },
  {
    "text": "changing operations and one of the very common bodyless endpoints is a logout endpoint so you have log out Cerf where",
    "start": "2528880",
    "end": "2536000"
  },
  {
    "text": "you would just call log out endpoints wherever you can find them and you would lock users out all the time which is very annoying but it's not supposed to",
    "start": "2536000",
    "end": "2542720"
  },
  {
    "text": "happen but if you don't have a body you don't have a content type and you can't restrict access and so and so one and that brings me to the last piece of",
    "start": "2542720",
    "end": "2549440"
  },
  {
    "text": "content there's a defense in depth mechanism you can use or a configuration option you can use to force the use of",
    "start": "2549440",
    "end": "2556000"
  },
  {
    "text": "course pre-f flights so you can add something to your application that if the attacker wants to send a request",
    "start": "2556000",
    "end": "2561680"
  },
  {
    "text": "they are forced to use course with a pre-light which will fail because of your server policy and prevents those",
    "start": "2561680",
    "end": "2569240"
  },
  {
    "text": "types of attacks and this is a really really sophisticated mechanism so uh stick with me we enable",
    "start": "2569240",
    "end": "2578160"
  },
  {
    "text": "here a specific server side um Handler and it's called a cerve header enforcer",
    "start": "2578400",
    "end": "2584359"
  },
  {
    "text": "because it's a very tough name and the header enforcer does one thing it checks if your request contains a static custom",
    "start": "2584359",
    "end": "2591280"
  },
  {
    "text": "header X csrf or X the name of your dog whatever you want to call it um you're",
    "start": "2591280",
    "end": "2596640"
  },
  {
    "text": "absolutely fine to call this whatever you want with a static value like one or 42 or true or oo is awesome what",
    "start": "2596640",
    "end": "2603359"
  },
  {
    "text": "whatever it works for you that's uh basically how this is why does this matter because adding custom request",
    "start": "2603359",
    "end": "2610240"
  },
  {
    "text": "headers to requests on Cross origin requests I have",
    "start": "2610240",
    "end": "2615520"
  },
  {
    "text": "to say is not possible in 2008 it only became possible thanks to course and",
    "start": "2615520",
    "end": "2622319"
  },
  {
    "text": "whenever you want to do something that became possible thanks to course the browser is like hold on I'm going to ask for permission first and then the server",
    "start": "2622319",
    "end": "2629480"
  },
  {
    "text": "is going to be like uh no thank you and the problem will go away so here I have made the AP AP vulnerable",
    "start": "2629480",
    "end": "2636800"
  },
  {
    "text": "again so I removed this I added this restriction and that means that if we",
    "start": "2636800",
    "end": "2641920"
  },
  {
    "text": "log in again so we have an active session if you launch the attack it's not going to fail with a 415 or 43 but",
    "start": "2641920",
    "end": "2650079"
  },
  {
    "text": "this time um well I should no it's still going to",
    "start": "2650079",
    "end": "2657359"
  },
  {
    "text": "fail I should um also update my attack or reset my attack so text SL",
    "start": "2657359",
    "end": "2664880"
  },
  {
    "text": "plane and no course mode so now it will trigger our SE serve",
    "start": "2665000",
    "end": "2672680"
  },
  {
    "text": "header enforcer and the enforcer is going to say bad request go away that's the 400 you see there good call somewh",
    "start": "2672680",
    "end": "2678880"
  },
  {
    "text": "here in the front so that's a 400 that's our defense kick in like hold on hold on first of all this was not supposed to",
    "start": "2678880",
    "end": "2685160"
  },
  {
    "text": "happen and second of all the header is not present so you think you're like yeah but theor can add a header right",
    "start": "2685160",
    "end": "2690839"
  },
  {
    "text": "how hard can that be well if you add the header in no course mod adding the header it's not that hard hard it's X",
    "start": "2690839",
    "end": "2698040"
  },
  {
    "text": "csrf well it is hard have to type correctly this is a normal keyboard you",
    "start": "2698040",
    "end": "2705079"
  },
  {
    "text": "want you should watch me on a phone it's it's a nightmare all right so we can add this custom header and send the request but",
    "start": "2705079",
    "end": "2712040"
  },
  {
    "text": "we have enabled no course mode and the brow be like uhuh we're pretending it's 2008 no custom headers for you 400 so if",
    "start": "2712040",
    "end": "2719480"
  },
  {
    "text": "we enable course mode you already saw that an action like yeah yeah we can do course mode but when we do course mode",
    "start": "2719480",
    "end": "2725960"
  },
  {
    "text": "Brower is like let's pretend it's 2024 but I have to ask permission first and the options will fail and you can see",
    "start": "2725960",
    "end": "2732359"
  },
  {
    "text": "that in the options the browser is asking for permission and it's asking permission to send a custom X csrf",
    "start": "2732359",
    "end": "2738720"
  },
  {
    "text": "header and the server is like I don't know malicious. rest.com go away please",
    "start": "2738720",
    "end": "2744240"
  },
  {
    "text": "BR okay and that's it and that's essentially how you prevent cross",
    "start": "2744240",
    "end": "2749640"
  },
  {
    "text": "request for you in apis all right this mechanism works",
    "start": "2749640",
    "end": "2754680"
  },
  {
    "text": "really well by the way one of the the cool things oh yeah one more thing the reason this works is because I've um",
    "start": "2754680",
    "end": "2762280"
  },
  {
    "text": "implemented the application in such a way that it actually does send that header so if you look here on the",
    "start": "2762280",
    "end": "2767800"
  },
  {
    "text": "headers for the legitimate application I have this angular Interceptor that actually sends this x csrf header on",
    "start": "2767800",
    "end": "2774839"
  },
  {
    "text": "every outgoing request very easy very simple and this doesn't require a pre-flight because we're same origin if",
    "start": "2774839",
    "end": "2781119"
  },
  {
    "text": "your same origin that has always been allowed even in 2008 or earlier say origin requests are precourse they don't",
    "start": "2781119",
    "end": "2788160"
  },
  {
    "text": "require a pre-flight so this has zero impact on your application which is good it acts as a solid SE surve defense",
    "start": "2788160",
    "end": "2797119"
  },
  {
    "text": "against your apis which is also good and you should also of course enforce the proper content types all",
    "start": "2797119",
    "end": "2805280"
  },
  {
    "text": "right good this works in practice I'm not just inventing this um Dominic sitting in the",
    "start": "2805280",
    "end": "2811960"
  },
  {
    "text": "back uh has builds dend identity server and they have a BFF Library um for oart front ends BFS and they use this exact",
    "start": "2811960",
    "end": "2818760"
  },
  {
    "text": "mechanism in practice to prevent C serve attacks out of the box so um this actually is used in practice as well",
    "start": "2818760",
    "end": "2826520"
  },
  {
    "text": "look at that a practical talk on security I hope we'll see at the end",
    "start": "2826520",
    "end": "2833079"
  },
  {
    "text": "with the cards so apis can rely on course as a SE surve",
    "start": "2833079",
    "end": "2839440"
  },
  {
    "text": "defense so course cross origin resource sharing is really good at helping you prevent sea surve against your API while",
    "start": "2839440",
    "end": "2846280"
  },
  {
    "text": "enabling legitimate cross origin traffic because your policy can say like oh of course I want to accept things from",
    "start": "2846280",
    "end": "2852440"
  },
  {
    "text": "Super cool. rest.com but not malicious l.com that's perfectly possible as well",
    "start": "2852440",
    "end": "2857800"
  },
  {
    "text": "all right so that's essentially what's going on here you should check your apis for these content type problems they're",
    "start": "2857800",
    "end": "2862920"
  },
  {
    "text": "more common than you might think and it highly depends on the framework on how strict this is enforced so write a test",
    "start": "2862920",
    "end": "2869040"
  },
  {
    "text": "for your endpoints that if you accept application Json throw it some text text/plain with a Json payload and see",
    "start": "2869040",
    "end": "2875720"
  },
  {
    "text": "see what happens that should be a default test in your test speed to ensure your endpoints behave the way you",
    "start": "2875720",
    "end": "2880920"
  },
  {
    "text": "think they should behave all",
    "start": "2880920",
    "end": "2886039"
  },
  {
    "text": "right that was we're deep in the rabbit hole now so uh before we I send you to",
    "start": "2887520",
    "end": "2892720"
  },
  {
    "text": "lunch let's try and climb out of the rabbit hole with a nice overview of what you can do to protect yourself first of",
    "start": "2892720",
    "end": "2899079"
  },
  {
    "text": "all if you're not using cookies C surf is not a problem if you're using something else then something added",
    "start": "2899079",
    "end": "2905119"
  },
  {
    "text": "automatically by the browser there is no cross side or cross origin request forgery I'm very sorry for wasting an",
    "start": "2905119",
    "end": "2911440"
  },
  {
    "text": "hour of your life talking about something that might not be relevant you will not get that back no refunds",
    "start": "2911440",
    "end": "2918760"
  },
  {
    "text": "so if you're using cookies or if you're relying on cookies you have to think about SE surf",
    "start": "2918760",
    "end": "2924839"
  },
  {
    "text": "protection so I have a flowchart let's start uh with asking a question is the application the only one within its",
    "start": "2924839",
    "end": "2931680"
  },
  {
    "text": "site like if I'm deploying rest.com the front end on on app. rate.com and API on",
    "start": "2931680",
    "end": "2937880"
  },
  {
    "text": "api. rest.com and there's nothing else I don't have any other DNS records then the application is always going to be",
    "start": "2937880",
    "end": "2944119"
  },
  {
    "text": "same side with only itself there's never going to be a second same side",
    "start": "2944119",
    "end": "2949359"
  },
  {
    "text": "property then you can use same side cookies why not but only if you can",
    "start": "2949359",
    "end": "2954680"
  },
  {
    "text": "guarantee that there's nothing ever same side that might be controlled by the",
    "start": "2954680",
    "end": "2959839"
  },
  {
    "text": "attacker and the application itself doesn't count because if the attacker can control the app well C serve doesn't",
    "start": "2959839",
    "end": "2965240"
  },
  {
    "text": "matter they can just send whatever they want from within the app and you're done anyway so crossy scripting trumps cerve",
    "start": "2965240",
    "end": "2971319"
  },
  {
    "text": "in that case all right in many cases this is not true in many cases you will have additional properties within the",
    "start": "2971319",
    "end": "2977520"
  },
  {
    "text": "same site like the ET plus one and in that case you have to apply other C serf",
    "start": "2977520",
    "end": "2984079"
  },
  {
    "text": "defenses if you're a traditional application traditional server side apps that's for the PHP developers in the",
    "start": "2984079",
    "end": "2989920"
  },
  {
    "text": "room um there's no real mechanism that works well against against cross origin",
    "start": "2989920",
    "end": "2996359"
  },
  {
    "text": "requests except to traditional application level defenses like synchronizer tokens or a variation on",
    "start": "2996359",
    "end": "3001520"
  },
  {
    "text": "that pattern that works well because it doesn't depend on sness Cross sness or same sness it's just tied to the session",
    "start": "3001520",
    "end": "3008280"
  },
  {
    "text": "of the user so that one will work well there's plenty of implementation patterns libraries offering that so look",
    "start": "3008280",
    "end": "3013799"
  },
  {
    "text": "into a defense like that and if the application is not traditional server side maybe it's an API based application",
    "start": "3013799",
    "end": "3020240"
  },
  {
    "text": "if it's an API based application you can use scores according to the guidelines I discussed here in this presentation the",
    "start": "3020240",
    "end": "3026319"
  },
  {
    "text": "talk is recorded by the way so you can revisit the guidelines later on on YouTube as well and take it from there",
    "start": "3026319",
    "end": "3032599"
  },
  {
    "text": "and if your application is not API based  if I know man sorry about the language they bleep",
    "start": "3032599",
    "end": "3039160"
  },
  {
    "text": "it out later um seriously I I don't know what you're building um come talk to me afterwards and we can see if Cerf might",
    "start": "3039160",
    "end": "3045240"
  },
  {
    "text": "be a problem there or not all right key takeaways first of all cerve matters when you rely on cookies for tracking",
    "start": "3045240",
    "end": "3051760"
  },
  {
    "text": "authentication State that's takeway number one takeway number two same same side cookies mitigate sea surf but it",
    "start": "3051760",
    "end": "3058040"
  },
  {
    "text": "has evolved into a cross origin based attack that is same side like subdomain takeovers leading to curf is well cor is",
    "start": "3058040",
    "end": "3065680"
  },
  {
    "text": "a real problem and then third if you're building API based applications which most of us I'm guessing are doing then",
    "start": "3065680",
    "end": "3071400"
  },
  {
    "text": "you can rely on course as a defense against cross star request forgery my slide was too small to put the full",
    "start": "3071400",
    "end": "3077359"
  },
  {
    "text": "words on there but cross origin cross side it works against both and it's a really good defense and of course you",
    "start": "3077359",
    "end": "3082839"
  },
  {
    "text": "can combine same side with the defense as I talked about here if that's relevant for you as well thank you very",
    "start": "3082839",
    "end": "3089119"
  },
  {
    "text": "much enjoy lunch and enjoy the rest of the",
    "start": "3089119",
    "end": "3093240"
  },
  {
    "text": "conference",
    "start": "3096680",
    "end": "3099680"
  }
]