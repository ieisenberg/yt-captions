[
  {
    "start": "0",
    "end": "145000"
  },
  {
    "text": "okay let's get started i see i see no way that that could uh",
    "start": "8160",
    "end": "14880"
  },
  {
    "text": "that could that's a problem so yes welcome attendees to day three of",
    "start": "14880",
    "end": "21920"
  },
  {
    "text": "ndc sydney please would you give a big virtual hand and a warm welcome to the ndc virtual stage deploying docker for",
    "start": "21920",
    "end": "29679"
  },
  {
    "text": "database devops dominance it's dan good morning all um well at least it's",
    "start": "29679",
    "end": "37040"
  },
  {
    "text": "uh morning in sydney it's uh i believe near the middle of the night for for",
    "start": "37040",
    "end": "42640"
  },
  {
    "text": "dylan and uh it's late afternoon for myself so",
    "start": "42640",
    "end": "48000"
  },
  {
    "text": "we've got uh got some sun going down while it's coming up for you guys",
    "start": "48000",
    "end": "54160"
  },
  {
    "text": "so as dylan mentioned this is deploying docker for database devops",
    "start": "54320",
    "end": "59359"
  },
  {
    "text": "dominance and i am dan a lot uh and",
    "start": "59359",
    "end": "65680"
  },
  {
    "text": "you know we'll make powerpoint work here there we go uh so quick intro about myself",
    "start": "65680",
    "end": "71600"
  },
  {
    "text": "i'm a principal for westminster partners based out of chicago in the united states",
    "start": "71600",
    "end": "76880"
  },
  {
    "text": "i've been bouncing around the industry since 2011. i have fairly deep experience with a",
    "start": "76880",
    "end": "83119"
  },
  {
    "text": "number of databases some uh more unfortunate than others",
    "start": "83119",
    "end": "88159"
  },
  {
    "text": "uh early in my career i was a dba and then as as one of my colleagues said i got",
    "start": "88159",
    "end": "94479"
  },
  {
    "text": "better and now i'm a software engineer developer you see my twitter github linkedin um",
    "start": "94479",
    "end": "101360"
  },
  {
    "text": "you know feel free to reach out to me twitter is usually the best way",
    "start": "101360",
    "end": "106560"
  },
  {
    "text": "so why are we here um what do we need to pull this off so that",
    "start": "107840",
    "end": "114399"
  },
  {
    "text": "would be the docker portion of our talk today um what are we talking about unit",
    "start": "114399",
    "end": "119920"
  },
  {
    "text": "testing and we'll do an example workflow and some time for questions",
    "start": "119920",
    "end": "126079"
  },
  {
    "text": "um i generally like to have my talks be fairly informal so if you have a question feel free to drop it in the",
    "start": "126079",
    "end": "131840"
  },
  {
    "text": "chat or unmute yourself and uh shout it out i'll do my best to answer or",
    "start": "131840",
    "end": "139360"
  },
  {
    "text": "not answer if the answer is coming later",
    "start": "139360",
    "end": "143840"
  },
  {
    "start": "145000",
    "end": "300000"
  },
  {
    "text": "so uh it should come as no surprise to anyone that databases are special",
    "start": "145840",
    "end": "151840"
  },
  {
    "text": "and there are a lot of reasons for this um among them your database holds",
    "start": "151840",
    "end": "157680"
  },
  {
    "text": "your data so uh dylan was mentioning earlier that he's got a production database that he does the random number",
    "start": "157680",
    "end": "163760"
  },
  {
    "text": "generation against and this is rather scary right",
    "start": "163760",
    "end": "169360"
  },
  {
    "text": "and so you know ordinarily when we think about deploying changes to our databases",
    "start": "169519",
    "end": "175680"
  },
  {
    "text": "we have a bit of a mess um",
    "start": "175680",
    "end": "181440"
  },
  {
    "text": "for one simple fact unlike an application where hope the deployment went wrong we'll just grab",
    "start": "181599",
    "end": "186800"
  },
  {
    "text": "the uh we'll grab the artifacts that we had deployed before",
    "start": "186800",
    "end": "192879"
  },
  {
    "text": "we'll throw them back out there and nobody will be any wiser we can't simply redeploy the data within",
    "start": "192879",
    "end": "198239"
  },
  {
    "text": "a database right as a result",
    "start": "198239",
    "end": "203280"
  },
  {
    "text": "our database deployments often look a lot like write a script divisor rollback plan",
    "start": "203280",
    "end": "210560"
  },
  {
    "text": "backup and deploy don't forget and you're handing that deployment off to your dba team to do it",
    "start": "210560",
    "end": "216640"
  },
  {
    "text": "when they feel like it and then pray or cry or you know just hope that it goes goes",
    "start": "216640",
    "end": "223440"
  },
  {
    "text": "well um and so this this is a challenge right as particularly when we think about our",
    "start": "223440",
    "end": "229680"
  },
  {
    "text": "applications um and we have you know these wonderful continuous integration and continuous deployment processes",
    "start": "229680",
    "end": "237599"
  },
  {
    "text": "so wouldn't it be nice to know the databases changes your team spent month on months on we're going to succeed",
    "start": "237760",
    "end": "245599"
  },
  {
    "text": "ideally without losing data or taking down the environment or anything like that",
    "start": "245599",
    "end": "252159"
  },
  {
    "text": "maybe we could leverage the same continuous integration continuous deployment processes we already use for",
    "start": "252799",
    "end": "258239"
  },
  {
    "text": "our applications to help this help us or",
    "start": "258239",
    "end": "263840"
  },
  {
    "text": "how do we solve for needing to have a database to test our deploys against right",
    "start": "263840",
    "end": "269759"
  },
  {
    "text": "even if you think about like well we've got the deployment stuff all down maybe it's a little janky",
    "start": "269759",
    "end": "275360"
  },
  {
    "text": "you know we hand it off to the dbas there's a rollback plan we're all good",
    "start": "275360",
    "end": "280960"
  },
  {
    "text": "but then there's always that round of well we need to make sure we test all this stuff together and that testing",
    "start": "281199",
    "end": "286880"
  },
  {
    "text": "usually happens in production um all these questions sort of sum up to",
    "start": "286880",
    "end": "293759"
  },
  {
    "text": "why would we want to do something like this anyway devops for davids",
    "start": "293759",
    "end": "299520"
  },
  {
    "start": "300000",
    "end": "385000"
  },
  {
    "text": "so we'll start with some definitions just make sure we're all on the same page this morning",
    "start": "300080",
    "end": "306320"
  },
  {
    "text": "so devops a set of software development processes that combine software development and information technology",
    "start": "306320",
    "end": "312960"
  },
  {
    "text": "operations to shorten the system's development lifecycle while delivering features fixes and updates frequently in",
    "start": "312960",
    "end": "318639"
  },
  {
    "text": "close alignment with business objectives thank you wikipedia um",
    "start": "318639",
    "end": "324720"
  },
  {
    "text": "continuous integration um ideally you are integrating your code",
    "start": "324720",
    "end": "329759"
  },
  {
    "text": "into a shared repository frequently running an automated build and ideally",
    "start": "329759",
    "end": "335360"
  },
  {
    "text": "automated tests and then lastly continuous delivery so this would be the ability to get",
    "start": "335360",
    "end": "342080"
  },
  {
    "text": "changes of all types including new features configuration changes bug fixes",
    "start": "342080",
    "end": "348160"
  },
  {
    "text": "experiments into production or into the hands of users safely and quickly",
    "start": "348160",
    "end": "353600"
  },
  {
    "text": "but also in a sustainable way this is generally manifested as an",
    "start": "353600",
    "end": "359280"
  },
  {
    "text": "automated release process that allows push button release of those continuous integration artifacts",
    "start": "359280",
    "end": "366240"
  },
  {
    "text": "for some environments you may do it automatically so for example you may",
    "start": "366240",
    "end": "371840"
  },
  {
    "text": "have continuous deployment to your dev or test environment but generally pushing automatically to",
    "start": "371840",
    "end": "378560"
  },
  {
    "text": "your production environment is a little scary",
    "start": "378560",
    "end": "382880"
  },
  {
    "text": "so what are the advantages of using a continuous integration or continuous",
    "start": "384479",
    "end": "389600"
  },
  {
    "start": "385000",
    "end": "560000"
  },
  {
    "text": "deployment process with our data definition language and data markup ddl dml",
    "start": "389600",
    "end": "397759"
  },
  {
    "text": "so your ddl and dml is part of the application code base just like your",
    "start": "398319",
    "end": "404479"
  },
  {
    "text": "application code so just like whether it's c sharp or ruby or java or rust or",
    "start": "404479",
    "end": "411120"
  },
  {
    "text": "you know javascript what have you those sql scripts that define your",
    "start": "411120",
    "end": "417039"
  },
  {
    "text": "database are part of the applications definition right",
    "start": "417039",
    "end": "423199"
  },
  {
    "text": "if we practice continuous integration continuous deployment in conjunction with storing ddl and dnl and source",
    "start": "423199",
    "end": "429599"
  },
  {
    "text": "control everyone gets to see the entire picture of the process",
    "start": "429599",
    "end": "435280"
  },
  {
    "text": "and they get to participate as it's moving on so there's no longer any well you'll have to connect to the",
    "start": "435280",
    "end": "440800"
  },
  {
    "text": "database and use whatever tool that you're using whether it's sql server management studio azure data studio",
    "start": "440800",
    "end": "448479"
  },
  {
    "text": "toad data grip whatever to be able to see the shape of the database um or to",
    "start": "448840",
    "end": "453919"
  },
  {
    "text": "be able to you know like just look at it right",
    "start": "453919",
    "end": "459120"
  },
  {
    "text": "next uh your database is going to share a common development build and deployment",
    "start": "460080",
    "end": "465759"
  },
  {
    "text": "mechanism so it's very nice if when you open visual",
    "start": "465759",
    "end": "470960"
  },
  {
    "text": "studio you have your database scripts there right with you right alongside your application code if you're using visual",
    "start": "470960",
    "end": "476879"
  },
  {
    "text": "studio you know whatever you're using right if it's close at hand",
    "start": "476879",
    "end": "482319"
  },
  {
    "text": "you can definitively answer what was deployed for the entire application rather than",
    "start": "483199",
    "end": "490160"
  },
  {
    "text": "just for your database or sorry rather than just for your for your application code itself right this is so this is a",
    "start": "490160",
    "end": "496639"
  },
  {
    "text": "question that is i hope that you never have to uh have to take on yourself but i've seen",
    "start": "496639",
    "end": "503360"
  },
  {
    "text": "it in my own past where so what exactly did you deploy",
    "start": "503360",
    "end": "508960"
  },
  {
    "text": "um yeah we deployed some stuff",
    "start": "508960",
    "end": "513599"
  },
  {
    "text": "what do you mean it's not working and uh lastly",
    "start": "514240",
    "end": "519839"
  },
  {
    "text": "building and testing your database can help identify issues such as misspellings missing objects or",
    "start": "519839",
    "end": "526080"
  },
  {
    "text": "unexpected regressions so you know that could be something like you renamed a table and all of a sudden",
    "start": "526080",
    "end": "532560"
  },
  {
    "text": "all the stored procedures that depend on that table broke or perhaps you were renaming a column and",
    "start": "532560",
    "end": "541040"
  },
  {
    "text": "dropped an l adding an extra e or something",
    "start": "541040",
    "end": "545839"
  },
  {
    "text": "and so all of these lead us to want to use",
    "start": "546320",
    "end": "551600"
  },
  {
    "text": "all of those things that we do with applications with our database code as well or at least they should",
    "start": "551600",
    "end": "558079"
  },
  {
    "text": "so what tools do we need to make this happen",
    "start": "558959",
    "end": "564080"
  },
  {
    "start": "560000",
    "end": "665000"
  },
  {
    "text": "all right so the talk is called deploying docker for database devops dominance so we're",
    "start": "564080",
    "end": "569279"
  },
  {
    "text": "going to start with docker and the simplest way to get started using",
    "start": "569279",
    "end": "576640"
  },
  {
    "text": "docker for your database is to use it for your local development environment um",
    "start": "576640",
    "end": "582480"
  },
  {
    "text": "how many out there use a machine where it is difficult to install",
    "start": "582480",
    "end": "589200"
  },
  {
    "text": "microsoft sql server yeah yeah i got at least one",
    "start": "589200",
    "end": "595200"
  },
  {
    "text": "uh or where you might not want to have a postgres database hanging around or",
    "start": "595200",
    "end": "601360"
  },
  {
    "text": "you know god help you oracle or dv2 right these are all available as docker",
    "start": "601360",
    "end": "607760"
  },
  {
    "text": "containers docker is a really nice thing you run up the container you do your work",
    "start": "607760",
    "end": "612800"
  },
  {
    "text": "and then you turn it off so that it doesn't kill your battery while you are enjoying the conference",
    "start": "612800",
    "end": "620079"
  },
  {
    "text": "or doing whatever else you're doing",
    "start": "620079",
    "end": "624079"
  },
  {
    "text": "ultimately we can leverage these as well for integration into our testing and",
    "start": "626079",
    "end": "631839"
  },
  {
    "text": "deployment pipeline and we'll get to that in a little bit the important thing here",
    "start": "631839",
    "end": "638959"
  },
  {
    "text": "these may not be appropriate for production workloads i know that",
    "start": "638959",
    "end": "644079"
  },
  {
    "text": "both uh microsoft and amazon have done a fair amount of work to uh",
    "start": "644079",
    "end": "649760"
  },
  {
    "text": "to get some reliable storage along with their kubernetes but production workloads containerized",
    "start": "649760",
    "end": "656240"
  },
  {
    "text": "databases and yeah it still doesn't feel great but we can absolutely use them",
    "start": "656240",
    "end": "661279"
  },
  {
    "text": "temporarily now i mentioned kubernetes so this is",
    "start": "661279",
    "end": "667519"
  },
  {
    "start": "665000",
    "end": "795000"
  },
  {
    "text": "the other side hosting right we need some place to flip these um",
    "start": "667519",
    "end": "673120"
  },
  {
    "text": "so i mentioned that we're going to be leveraging this during our building deployment pipeline",
    "start": "673120",
    "end": "679120"
  },
  {
    "text": "and i'm building to something here so just stay with me but we're going to need somewhere to temporarily host our docker images right",
    "start": "679120",
    "end": "686160"
  },
  {
    "text": "actually run up containers to be able to access um where they're going",
    "start": "686160",
    "end": "691200"
  },
  {
    "text": "to run and they're not going to just fall over for no reason but where we don't really care if you know that we",
    "start": "691200",
    "end": "697040"
  },
  {
    "text": "can just tear them up and down fairly quickly um so in this case we don't have to",
    "start": "697040",
    "end": "703440"
  },
  {
    "text": "worry too much about orchestration um unless you're going to perform some",
    "start": "703440",
    "end": "708880"
  },
  {
    "text": "fairly in-depth integration testing um the main concerns are finding something that's going to have enough storage",
    "start": "708880",
    "end": "715200"
  },
  {
    "text": "space and not going to kind of fall over when you restore your you know",
    "start": "715200",
    "end": "721839"
  },
  {
    "text": "50 gigabyte database to it so we've got some possibilities um azure container instances",
    "start": "721839",
    "end": "730160"
  },
  {
    "text": "azure kubernetes service um and then amazon either ecs or eks",
    "start": "730160",
    "end": "737279"
  },
  {
    "text": "and then you know if we're running a discrete build server we can use the discrete build server itself",
    "start": "737279",
    "end": "743519"
  },
  {
    "text": "and in this case um in that case that that may be the preferred option which we'll we'll get",
    "start": "743519",
    "end": "749120"
  },
  {
    "text": "to why that is a little bit later",
    "start": "749120",
    "end": "754160"
  },
  {
    "text": "um and so in a lot of cases these are going to come down to",
    "start": "754160",
    "end": "759600"
  },
  {
    "text": "how much orchestration you need and how much cost you're willing to take on as part of",
    "start": "759600",
    "end": "764880"
  },
  {
    "text": "this sort of operational build and deployment process right so something like azure container instances",
    "start": "764880",
    "end": "771360"
  },
  {
    "text": "is very cheap um something like eks might not be right it",
    "start": "771360",
    "end": "776560"
  },
  {
    "text": "kind of comes down to where you are",
    "start": "776560",
    "end": "780880"
  },
  {
    "text": "now pause for any questions everyone's still awake which is good",
    "start": "781760",
    "end": "788399"
  },
  {
    "text": "at least everyone i can see is still awake",
    "start": "788399",
    "end": "792160"
  },
  {
    "text": "all right",
    "start": "794000",
    "end": "796399"
  },
  {
    "text": "now how many of you have your database code in source control today",
    "start": "799440",
    "end": "806880"
  },
  {
    "text": "one two i'll assume that everyone who doesn't have their camera on",
    "start": "808480",
    "end": "813680"
  },
  {
    "text": "um which is good right uh we should we should this is something that we should",
    "start": "813680",
    "end": "819600"
  },
  {
    "text": "do um but it's just a collection of scripts",
    "start": "819600",
    "end": "825120"
  },
  {
    "text": "that's kind of uh it can be kind of frustrating so um we want to think about using uh using a",
    "start": "825120",
    "end": "833600"
  },
  {
    "text": "better tool for this so something uh that's either state-based",
    "start": "833600",
    "end": "838800"
  },
  {
    "text": "or migration-based so uh state-based tools um",
    "start": "838800",
    "end": "845519"
  },
  {
    "text": "essentially generate a diff script to upgrade the database by comparing",
    "start": "845519",
    "end": "850560"
  },
  {
    "text": "what you have in an actual existing database against what you have in your model and",
    "start": "850560",
    "end": "856320"
  },
  {
    "text": "generating a script to make all the changes which that can then be either automated",
    "start": "856320",
    "end": "861839"
  },
  {
    "text": "or run manually so some examples sql server data tools",
    "start": "861839",
    "end": "867199"
  },
  {
    "text": "radiate sql source control both pretty good at this",
    "start": "867199",
    "end": "872720"
  },
  {
    "text": "but there are some challenges there specifically around making data changes",
    "start": "872720",
    "end": "880079"
  },
  {
    "text": "data type changes naming things naming things is one of the the two great challenges of computer",
    "start": "880079",
    "end": "886639"
  },
  {
    "text": "science along with cash invalidation and off by one errors um",
    "start": "886639",
    "end": "893440"
  },
  {
    "text": "so the other side of this is we have what are called migration-based tools and so this is essentially",
    "start": "894480",
    "end": "901600"
  },
  {
    "text": "unlike a state-based tool where you can generate a diff script against any",
    "start": "901600",
    "end": "906639"
  },
  {
    "text": "version of your database and migrate all the changes",
    "start": "906639",
    "end": "911680"
  },
  {
    "text": "a migration-based tool goes at discrete points of migration so",
    "start": "911680",
    "end": "916800"
  },
  {
    "text": "we have i'll create a table create another table i'll create a foreign key",
    "start": "916800",
    "end": "923040"
  },
  {
    "text": "and each of those would be a different migration or could be a different migration",
    "start": "923040",
    "end": "928880"
  },
  {
    "text": "and so you have what's called a baseline version and then you make changes and those changes when you deploy them have",
    "start": "928880",
    "end": "934959"
  },
  {
    "text": "to be applied in order so this makes doing things like",
    "start": "934959",
    "end": "941199"
  },
  {
    "text": "updates data or data types or naming a little bit smoother",
    "start": "941199",
    "end": "947279"
  },
  {
    "text": "so some examples we have flyway liquid base those are the two large",
    "start": "947279",
    "end": "952880"
  },
  {
    "text": "sort of cross-platform ones uh along with things like ruby on rails migrations uh entity framework core if",
    "start": "952880",
    "end": "960160"
  },
  {
    "text": "you you uh do the database migrations that come with that um other orm migration tools tend to",
    "start": "960160",
    "end": "966560"
  },
  {
    "text": "work the same way so",
    "start": "966560",
    "end": "971600"
  },
  {
    "text": "version control databases you should do it and so i'm going to switch over and just kind of show at least in",
    "start": "971600",
    "end": "979040"
  },
  {
    "text": "visual studio what this looks like for sql server data tools i'm going to",
    "start": "979040",
    "end": "984240"
  },
  {
    "text": "combine a couple of concepts that were one that i'll cover momentarily",
    "start": "984240",
    "end": "990560"
  },
  {
    "start": "990000",
    "end": "1118000"
  },
  {
    "text": "so in visual studio we have and dylan let me",
    "start": "990560",
    "end": "995839"
  },
  {
    "text": "know if this is large enough for people to see so",
    "start": "995839",
    "end": "1001519"
  },
  {
    "text": "in visual studio we can have what are called database projects so in this case",
    "start": "1001519",
    "end": "1006800"
  },
  {
    "text": "i've got two one that is just the database and one that's the tests and i'll get to the idea of",
    "start": "1006800",
    "end": "1012800"
  },
  {
    "text": "testing a database in a moment but we simply have um",
    "start": "1012800",
    "end": "1018800"
  },
  {
    "text": "tables that have definitions",
    "start": "1018800",
    "end": "1025320"
  },
  {
    "text": "both in t sql and you know there's a designer of course as well and this is all nicely organized and in",
    "start": "1025679",
    "end": "1032880"
  },
  {
    "text": "visual studio and i can do things like click build",
    "start": "1032880",
    "end": "1039839"
  },
  {
    "text": "and it actually does a build and produces an artifact that i can use to deploy",
    "start": "1041439",
    "end": "1046959"
  },
  {
    "text": "against another database now or it can fail which is fun",
    "start": "1046959",
    "end": "1056160"
  },
  {
    "text": "this is why demo is a four letter word and you don't mess with your demos right before your presentation",
    "start": "1058320",
    "end": "1064480"
  },
  {
    "text": "the maximum number of 200 errors has been reached",
    "start": "1066640",
    "end": "1071679"
  },
  {
    "text": "yes yeah that was always one of my favorites as well",
    "start": "1072799",
    "end": "1077840"
  },
  {
    "text": "uh so in any case it looks like i'm missing something from this",
    "start": "1077919",
    "end": "1083679"
  },
  {
    "text": "installation of visual studio which is not unexpected",
    "start": "1083679",
    "end": "1088720"
  },
  {
    "text": "so in any case you can kind of get the point we've got all of our scripts they're in a solution in visual studio",
    "start": "1089120",
    "end": "1095520"
  },
  {
    "text": "these are in fact checked into a github that you can go and pass judgment on",
    "start": "1095520",
    "end": "1101600"
  },
  {
    "text": "if you wish and then there's the other concept that we have here which is tests so let me",
    "start": "1101600",
    "end": "1108720"
  },
  {
    "text": "switch back and we will let me switch back to the actual",
    "start": "1108720",
    "end": "1114160"
  },
  {
    "text": "presentation yeah so unit testing so this is something we do",
    "start": "1114160",
    "end": "1120960"
  },
  {
    "start": "1118000",
    "end": "1330000"
  },
  {
    "text": "in our application code but did you know you can do it with your database code",
    "start": "1120960",
    "end": "1126320"
  },
  {
    "text": "so first a quick question do you have business logic in your database",
    "start": "1126320",
    "end": "1132000"
  },
  {
    "text": "so if you don't think that yeah if you if you don't think that you do then the question that i would ask you is do you",
    "start": "1134160",
    "end": "1140000"
  },
  {
    "text": "have foreign keys or default constraints or",
    "start": "1140000",
    "end": "1145120"
  },
  {
    "text": "uh unique indexes or anything like that because if you have any of those then you have business logic in your database",
    "start": "1145120",
    "end": "1150960"
  },
  {
    "text": "even if you aren't necessarily thinking about it that way right and so all of that business logic ought",
    "start": "1150960",
    "end": "1157280"
  },
  {
    "text": "to be tested just the same as we ought to test all of our applications business logic um so you now you might write",
    "start": "1157280",
    "end": "1166240"
  },
  {
    "text": "a huge api that has no unit tests in it but you shouldn't um and we all sort of generally accept",
    "start": "1166240",
    "end": "1172080"
  },
  {
    "text": "that um but unit testing in your database is is kind",
    "start": "1172080",
    "end": "1177280"
  },
  {
    "text": "of important as well particularly because",
    "start": "1177280",
    "end": "1182400"
  },
  {
    "text": "things like sql server or db2 or postgres are not always",
    "start": "1182400",
    "end": "1189039"
  },
  {
    "text": "particularly picky about telling you when a change that you have made will totally mess you up um",
    "start": "1189039",
    "end": "1197360"
  },
  {
    "text": "oh look you changed the name of that table that's referred to in 40 stored procedures",
    "start": "1197360",
    "end": "1202559"
  },
  {
    "text": "well guess you'll find out the next time you run one of those 40 stored procedures",
    "start": "1202559",
    "end": "1207840"
  },
  {
    "text": "unit testing helps with this so does building your database right but",
    "start": "1208000",
    "end": "1213039"
  },
  {
    "text": "don't necessarily have to do them both so there are a few uh",
    "start": "1213039",
    "end": "1218320"
  },
  {
    "text": "do database unit testing frameworks that are available um i quite like t sql t um",
    "start": "1218320",
    "end": "1224720"
  },
  {
    "text": "it's a open source one for sql server um there's also redgate sql test",
    "start": "1224720",
    "end": "1231840"
  },
  {
    "text": "db fit ndv unit db test driven which",
    "start": "1231840",
    "end": "1236880"
  },
  {
    "text": "does just sql server and oracle of all things",
    "start": "1236880",
    "end": "1241600"
  },
  {
    "text": "and of course as with everything unit tests can only be effective when you run them preferably in an automated fashion",
    "start": "1243120",
    "end": "1251039"
  },
  {
    "text": "so and i'm going to go pop back out to visual studio so we can take a look at what one of these tests actually looks",
    "start": "1251039",
    "end": "1257360"
  },
  {
    "text": "like in a very sort of basic fashion i'm happy to answer some more questions",
    "start": "1257360",
    "end": "1263679"
  },
  {
    "text": "about t sql t if anyone has them after after we get done here",
    "start": "1263679",
    "end": "1269440"
  },
  {
    "text": "so all of the tests are defined as stored",
    "start": "1269440",
    "end": "1274720"
  },
  {
    "text": "procedures and they'll kind of look like this now obviously this is very simplistic",
    "start": "1274720",
    "end": "1280799"
  },
  {
    "text": "it's just counting the number of records that are found in a lookup table but",
    "start": "1280799",
    "end": "1286960"
  },
  {
    "text": "and it looks the same right you know we have in a range act and assert pattern",
    "start": "1287600",
    "end": "1294400"
  },
  {
    "text": "so arrange",
    "start": "1294400",
    "end": "1301039"
  },
  {
    "text": "act and then the act and assert are kind of in the same same place here",
    "start": "1301120",
    "end": "1306559"
  },
  {
    "text": "and so this um things like this can point out when you have problems",
    "start": "1306559",
    "end": "1313679"
  },
  {
    "text": "and so it's worth looking into maybe starting to use",
    "start": "1313679",
    "end": "1319640"
  },
  {
    "text": "any questions about that go back to the",
    "start": "1320159",
    "end": "1326000"
  },
  {
    "text": "all right so the last component that we need here",
    "start": "1327520",
    "end": "1332799"
  },
  {
    "start": "1330000",
    "end": "1385000"
  },
  {
    "text": "of course is the build server um so you're going to need a build server",
    "start": "1332799",
    "end": "1338240"
  },
  {
    "text": "that can run your pipeline in online fashion i'm guessing you have one of those already",
    "start": "1338240",
    "end": "1344000"
  },
  {
    "text": "so one that builds your application server ought to be able to build your databases as well",
    "start": "1344080",
    "end": "1349760"
  },
  {
    "text": "um fairly popular ones um the most important factor here though is",
    "start": "1349760",
    "end": "1356559"
  },
  {
    "text": "it should choose it should support whatever tools we have chosen already um so that's you know you",
    "start": "1356559",
    "end": "1363520"
  },
  {
    "text": "don't want to have to do a lot of extra finagling to get all of this to work",
    "start": "1363520",
    "end": "1369520"
  },
  {
    "text": "so sql server and net azure devops is a great choice um",
    "start": "1369520",
    "end": "1374559"
  },
  {
    "text": "as i mentioned earlier something that runs on on your own build server might be better",
    "start": "1374559",
    "end": "1381039"
  },
  {
    "text": "and so we will look at that as well so what does this all look like",
    "start": "1381120",
    "end": "1389840"
  },
  {
    "start": "1385000",
    "end": "1456000"
  },
  {
    "text": "how do we put this all together in a way that leverages all the things that we're doing to build",
    "start": "1390080",
    "end": "1397280"
  },
  {
    "text": "a database run tests maybe run some integration tests um and then not leave a giant",
    "start": "1397280",
    "end": "1403760"
  },
  {
    "text": "footprint behind so",
    "start": "1403760",
    "end": "1409760"
  },
  {
    "text": "this is a very basic devops pipeline right restore the code build the database project or generate",
    "start": "1410559",
    "end": "1417039"
  },
  {
    "text": "the migrations depending on your tool create a docker container with a",
    "start": "1417039",
    "end": "1422080"
  },
  {
    "text": "database potentially restore a backup so that is",
    "start": "1422080",
    "end": "1427679"
  },
  {
    "text": "you know if you are you know depending on where you are in your",
    "start": "1427679",
    "end": "1432720"
  },
  {
    "text": "product maturity right deploy build database code run unit tests and then clean up right",
    "start": "1432720",
    "end": "1440240"
  },
  {
    "text": "so at least for me i tend to do lots of these things in the cloud i don't want things sitting around",
    "start": "1440240",
    "end": "1446640"
  },
  {
    "text": "where microsoft can continue to build me money as much as i like giving money to microsoft i don't like giving it",
    "start": "1446640",
    "end": "1453200"
  },
  {
    "text": "unnecessarily there's some additional work that we can",
    "start": "1453200",
    "end": "1458799"
  },
  {
    "start": "1456000",
    "end": "1509000"
  },
  {
    "text": "do here so if we think about it holistically between an application and the database",
    "start": "1458799",
    "end": "1465440"
  },
  {
    "text": "we can build the application in the database we run our unit tests in the application",
    "start": "1465600",
    "end": "1473039"
  },
  {
    "text": "we have to deploy the database container first run the unit tests in the database",
    "start": "1473039",
    "end": "1478720"
  },
  {
    "text": "deploy applications to containers and then use that to run all of your integration tests",
    "start": "1478720",
    "end": "1484720"
  },
  {
    "text": "and so that's obviously a a potentially much wider topic but",
    "start": "1484720",
    "end": "1491360"
  },
  {
    "text": "then we can have a success or failure and we already know that whatever we've done",
    "start": "1491679",
    "end": "1499039"
  },
  {
    "text": "is going to work out very well so now what does this look in practice",
    "start": "1499039",
    "end": "1508240"
  },
  {
    "text": "so we're going to look at this actually in azure devops here momentarily",
    "start": "1511919",
    "end": "1516960"
  },
  {
    "text": "and then as as we're actually executing the demo we'll talk further about uh",
    "start": "1517200",
    "end": "1523679"
  },
  {
    "text": "some improvements that can be made so",
    "start": "1523679",
    "end": "1528600"
  },
  {
    "text": "all right and everyone see the lovely azure devops",
    "start": "1530960",
    "end": "1536799"
  },
  {
    "text": "it's like they're we're going to come out of 2020 with uh some catchphrases can you see my screen",
    "start": "1538799",
    "end": "1544960"
  },
  {
    "text": "i think you're on mute no really you're on mute why is there a cat climbing on your head",
    "start": "1544960",
    "end": "1553120"
  },
  {
    "text": "uh that's usually what people ask me",
    "start": "1553120",
    "end": "1557840"
  },
  {
    "text": "right so we can see our pipeline here so in this case we're building a main",
    "start": "1558400",
    "end": "1565200"
  },
  {
    "text": "database doing our database tests and then i'm using azure container",
    "start": "1565200",
    "end": "1570960"
  },
  {
    "text": "instances to simply deploy a docker container very quickly",
    "start": "1570960",
    "end": "1576960"
  },
  {
    "text": "so creating it to get creating a container resource group",
    "start": "1576960",
    "end": "1582640"
  },
  {
    "text": "creating the test container so that's just a in this case",
    "start": "1582640",
    "end": "1589120"
  },
  {
    "text": "2017 sql server again in the don't update your demos right before you",
    "start": "1590480",
    "end": "1596559"
  },
  {
    "text": "demo them category um",
    "start": "1596559",
    "end": "1602158"
  },
  {
    "text": "a couple of things here and i can make the the yamo for this available if you promise not to hack my database that doesn't hang on for very long",
    "start": "1602640",
    "end": "1610960"
  },
  {
    "text": "we then deploy our main database objects to the container the test database objects the container",
    "start": "1610960",
    "end": "1618400"
  },
  {
    "text": "we run the tests which for t sql t simply involves running",
    "start": "1618400",
    "end": "1624159"
  },
  {
    "text": "a single command get our test results out",
    "start": "1624799",
    "end": "1632799"
  },
  {
    "text": "publish the test results and then if this succeeds we can publish the main database if it fails we don't",
    "start": "1632880",
    "end": "1640640"
  },
  {
    "text": "and at the end we clean it up we'll go ahead and",
    "start": "1640640",
    "end": "1646320"
  },
  {
    "text": "kick one of these off",
    "start": "1646320",
    "end": "1650200"
  },
  {
    "text": "we can see this running we'll see if i get a",
    "start": "1655360",
    "end": "1662398"
  },
  {
    "text": "see if it gets uh a build agent right away",
    "start": "1663279",
    "end": "1669760"
  },
  {
    "text": "in the meantime um any questions from anyone",
    "start": "1669760",
    "end": "1675480"
  },
  {
    "text": "so one question in the chat someone saying when would you consider using integration tests versus database tests",
    "start": "1682320",
    "end": "1689600"
  },
  {
    "text": "and someone else saying yep which i assume means they had the same question",
    "start": "1689600",
    "end": "1694640"
  },
  {
    "start": "1694000",
    "end": "1729000"
  },
  {
    "text": "yeah so uh when would i consider using integration test versus database tests so i would uh",
    "start": "1694720",
    "end": "1701360"
  },
  {
    "text": "ideally and of course we don't live in an ideal world but ideally i would use both um so",
    "start": "1701360",
    "end": "1707679"
  },
  {
    "text": "just the same as you wouldn't use either unit tests or integration tests for your application code",
    "start": "1707679",
    "end": "1714799"
  },
  {
    "text": "i would prefer to use both unit tests and integration tests however",
    "start": "1715200",
    "end": "1720960"
  },
  {
    "text": "we don't live in an ideal world and i think the uh",
    "start": "1720960",
    "end": "1727360"
  },
  {
    "start": "1729000",
    "end": "1968000"
  },
  {
    "text": "where i would draw the line is if you already have unit testing going",
    "start": "1729760",
    "end": "1735200"
  },
  {
    "text": "in your database then it's easy to add on to that if you're starting from scratch and you already have a rather",
    "start": "1735200",
    "end": "1740720"
  },
  {
    "text": "large database that is a project with a capital p",
    "start": "1740720",
    "end": "1746960"
  },
  {
    "text": "um and so in that case it's probably going to be easier to get this working with",
    "start": "1746960",
    "end": "1753440"
  },
  {
    "text": "integration tests simply for for no other reason than",
    "start": "1753440",
    "end": "1758880"
  },
  {
    "text": "you already have a database that you can restore into a container and run and you probably already have whether it's",
    "start": "1758880",
    "end": "1766080"
  },
  {
    "text": "postman or soap ui or something else that can test your application or you know some selenium pests or",
    "start": "1766080",
    "end": "1773360"
  },
  {
    "text": "what have you um and so it's it's really to me a question",
    "start": "1773360",
    "end": "1779200"
  },
  {
    "text": "of of time and money um at that point would you like to answer the question",
    "start": "1779200",
    "end": "1785360"
  },
  {
    "text": "there anthony would you say that there's a just sort of following on from that question came",
    "start": "1785360",
    "end": "1790480"
  },
  {
    "text": "to me um so something that i've often seen is code where certain database operations are mocked",
    "start": "1790480",
    "end": "1796240"
  },
  {
    "text": "for the sake of making the tests easy to run um have you ever seen kind of you you mock the database when you're testing the",
    "start": "1796240",
    "end": "1802559"
  },
  {
    "text": "code but then use database testing separately to verify that element of the behavior and then you assume that when",
    "start": "1802559",
    "end": "1808559"
  },
  {
    "text": "you plug them into one another in production they're going to work properly is that something you've worked with",
    "start": "1808559",
    "end": "1814559"
  },
  {
    "text": "yeah well so mocking databases is something i'm very familiar with anyone",
    "start": "1814720",
    "end": "1821360"
  },
  {
    "text": "any who's i've worked with oracle that's very easy to mock uh but i suspect that's not entirely what",
    "start": "1821360",
    "end": "1826480"
  },
  {
    "text": "you're what you're going after um yeah so uh",
    "start": "1826480",
    "end": "1832880"
  },
  {
    "text": "mocking your database in in your local development environment and then sort of testing your database",
    "start": "1832880",
    "end": "1838320"
  },
  {
    "text": "separately um and and hoping that that all works together in production is uh",
    "start": "1838320",
    "end": "1845760"
  },
  {
    "text": "i have seen it done i have seen it work",
    "start": "1845760",
    "end": "1851360"
  },
  {
    "text": "it's not something that i would necessarily uh",
    "start": "1851360",
    "end": "1856158"
  },
  {
    "text": "bet my career on if i were if i were to say that i i think um you know if you have a choice",
    "start": "1857120",
    "end": "1864159"
  },
  {
    "text": "there you should ideally be be",
    "start": "1864159",
    "end": "1869600"
  },
  {
    "text": "giving your developer something that looks like the real database to develop against anyway",
    "start": "1869600",
    "end": "1875039"
  },
  {
    "text": "but then you you want to be able to uh test that before it gets to",
    "start": "1875039",
    "end": "1880399"
  },
  {
    "text": "production yeah tips on seeding complex large",
    "start": "1880399",
    "end": "1887600"
  },
  {
    "text": "databases other than building massive seed scripts manually carefully and so as we're i'll get to that question in a",
    "start": "1887600",
    "end": "1893760"
  },
  {
    "text": "in a second in a second there um uh",
    "start": "1893760",
    "end": "1899360"
  },
  {
    "text": "so one thing that you guys have noticed over here probably is that uh there are some kind of slow things about this",
    "start": "1899360",
    "end": "1906880"
  },
  {
    "text": "continuous integration pipeline um which are pretty much",
    "start": "1906880",
    "end": "1912399"
  },
  {
    "text": "oh straight to uh azure container instances and they're not",
    "start": "1912399",
    "end": "1917600"
  },
  {
    "text": "not not the quickest to start from scratch so in this case um at some point i'll do a",
    "start": "1917600",
    "end": "1923600"
  },
  {
    "text": "dedicated build server which will speed this process up significantly because i won't have to",
    "start": "1923600",
    "end": "1930000"
  },
  {
    "text": "do all this so it's already have docker running um so tips on seeding complex large",
    "start": "1930000",
    "end": "1937279"
  },
  {
    "text": "databases so is this um so so james is that are you thinking about like lookup tables or the",
    "start": "1937279",
    "end": "1944720"
  },
  {
    "text": "actual data that they have like the actual data from the from the database",
    "start": "1944720",
    "end": "1951760"
  },
  {
    "text": "like the actual like transactional data i guess i should say both okay",
    "start": "1955840",
    "end": "1962559"
  },
  {
    "text": "yeah so",
    "start": "1962559",
    "end": "1965120"
  },
  {
    "start": "1968000",
    "end": "2374000"
  },
  {
    "text": "for lookup um so for lookup tables um it should",
    "start": "1969679",
    "end": "1976880"
  },
  {
    "text": "generally be possible to to create that script if you have an existing database that you're creating",
    "start": "1976880",
    "end": "1983760"
  },
  {
    "text": "this off of you can sort of reverse engineer the data um so sql server has some tools for this i know there are",
    "start": "1983760",
    "end": "1990720"
  },
  {
    "text": "third-party tools that do that fairly well as well",
    "start": "1990720",
    "end": "1995360"
  },
  {
    "text": "you can also script that out so that you",
    "start": "1996320",
    "end": "2000240"
  },
  {
    "text": "pull it out um",
    "start": "2001440",
    "end": "2005840"
  },
  {
    "text": "but for the actual data that you have uh the actual transactional data my",
    "start": "2008880",
    "end": "2015360"
  },
  {
    "text": "general preference would be to restore from a backup",
    "start": "2015360",
    "end": "2020158"
  },
  {
    "text": "now there are considerations there such as uh you don't have uh",
    "start": "2020640",
    "end": "2027760"
  },
  {
    "text": "if you have the need to scrub your data clean it de-identify it",
    "start": "2027760",
    "end": "2034480"
  },
  {
    "text": "you know that may be a challenge um",
    "start": "2034480",
    "end": "2039120"
  },
  {
    "text": "yeah i certainly so i would certainly draw the line look up data i would consider storing in source",
    "start": "2041279",
    "end": "2047919"
  },
  {
    "text": "control um the assuming it's it's not i mean",
    "start": "2047919",
    "end": "2053839"
  },
  {
    "text": "assuming it's not uh created by users at runtime um",
    "start": "2053839",
    "end": "2059200"
  },
  {
    "text": "you know in like a wordpress type situation or something like that um but your actual transactional data i",
    "start": "2059200",
    "end": "2065679"
  },
  {
    "text": "would expect should come from a uh",
    "start": "2065679",
    "end": "2069679"
  },
  {
    "text": "should come from a backup in my opinion",
    "start": "2071760",
    "end": "2076240"
  },
  {
    "text": "all right when unit testing code there may be dependencies which mean you cannot unit test",
    "start": "2077280",
    "end": "2082800"
  },
  {
    "text": "are there such scenarios which yeah um so good question there um",
    "start": "2082800",
    "end": "2091599"
  },
  {
    "text": "dependencies which mean you cannot unit test so in in the in the sql server land",
    "start": "2091599",
    "end": "2098079"
  },
  {
    "text": "um and i'm most familiar with that so i'll kind of answer from that perspective um",
    "start": "2098079",
    "end": "2103520"
  },
  {
    "text": "i would think the the one of the big ones would be any sort of cross database querying uh",
    "start": "2103520",
    "end": "2109760"
  },
  {
    "text": "tends not to turn out so well um or cross server querying",
    "start": "2109760",
    "end": "2115280"
  },
  {
    "text": "um i would",
    "start": "2115280",
    "end": "2120000"
  },
  {
    "text": "i would strongly argue that uh things you cannot unit test in an",
    "start": "2121359",
    "end": "2127599"
  },
  {
    "text": "application things you can't test in a sql database if you if you are having the conversation that you say i cannot unit",
    "start": "2127599",
    "end": "2133839"
  },
  {
    "text": "test this um then there's some rethinking of the architecture that probably needs to be done",
    "start": "2133839",
    "end": "2139839"
  },
  {
    "text": "um because we we ought to be able to create seams such",
    "start": "2139839",
    "end": "2146400"
  },
  {
    "text": "that things are able to be unit tested um",
    "start": "2146400",
    "end": "2151119"
  },
  {
    "text": "and at least in the sql world the database world the",
    "start": "2153119",
    "end": "2158720"
  },
  {
    "text": "unit test frameworks all provide the ability to to mock certain pieces of",
    "start": "2158720",
    "end": "2164400"
  },
  {
    "text": "uh the underlying database platform such that you don't have to",
    "start": "2164400",
    "end": "2169920"
  },
  {
    "text": "like worry about permanently changing data in your backup so",
    "start": "2169920",
    "end": "2174960"
  },
  {
    "text": "it creates those same sorts of uh you know repeatable run unit tests that",
    "start": "2174960",
    "end": "2180640"
  },
  {
    "text": "you have you should have in your application",
    "start": "2180640",
    "end": "2184320"
  },
  {
    "text": "that can i answer the question anthony",
    "start": "2185680",
    "end": "2190040"
  },
  {
    "text": "up for the purpose of running automated tests i have suggestions for when that would be an issue",
    "start": "2201359",
    "end": "2206720"
  },
  {
    "text": "uh so",
    "start": "2206720",
    "end": "2211920"
  },
  {
    "text": "ideally again we don't live in the ideal world but ideally you would have a",
    "start": "2213520",
    "end": "2218880"
  },
  {
    "text": "a representative sample of your database that was not uh terrifically large",
    "start": "2218880",
    "end": "2224640"
  },
  {
    "text": "um so mentioned over um over on the",
    "start": "2224640",
    "end": "2230400"
  },
  {
    "text": "the screen that i'm sharing like six minutes 30 seconds for this is is kind of",
    "start": "2230800",
    "end": "2235920"
  },
  {
    "text": "kind of a bit long so now imagine you add a 50 gigabyte database restore on top of",
    "start": "2235920",
    "end": "2242640"
  },
  {
    "text": "that right even if i take um you know i'm going to take adam's suggestion there and",
    "start": "2242640",
    "end": "2248560"
  },
  {
    "text": "and use the docker that's available on the build agent um",
    "start": "2248560",
    "end": "2255200"
  },
  {
    "text": "which full disclosure it wasn't when i did this originally um",
    "start": "2255200",
    "end": "2260720"
  },
  {
    "text": "you know even then you're talking about adding 50 gigabytes of data somewhere and that's not necessarily quick",
    "start": "2260720",
    "end": "2268079"
  },
  {
    "text": "um it also could be costly um so ideally you have",
    "start": "2268079",
    "end": "2273680"
  },
  {
    "text": "a database that is small enough that it restores quickly but diverse enough that it has all the",
    "start": "2273680",
    "end": "2280640"
  },
  {
    "text": "data you need um i think that uh if you are if all you",
    "start": "2280640",
    "end": "2285839"
  },
  {
    "text": "have are multi-terabyte databases um then probably",
    "start": "2285839",
    "end": "2291760"
  },
  {
    "text": "using real data in your tests is uh is probably gonna not it's probably gonna",
    "start": "2291760",
    "end": "2296960"
  },
  {
    "text": "be a non-starter um but that you would want to look at doing a decent",
    "start": "2296960",
    "end": "2303760"
  },
  {
    "text": "selection of mock data and again that's something you can either roll your restaurant yourself or",
    "start": "2303760",
    "end": "2310480"
  },
  {
    "text": "there are some tools that can help you with that red gate makes some excellent ones",
    "start": "2310480",
    "end": "2315760"
  },
  {
    "text": "redgate does not pay me is happen to make excellent tools",
    "start": "2315760",
    "end": "2320799"
  },
  {
    "text": "so brandon is that kind of that answer your question there as much as it can be answered",
    "start": "2321520",
    "end": "2328560"
  },
  {
    "text": "yeah great so uh notice this succeeded over",
    "start": "2328880",
    "end": "2334640"
  },
  {
    "text": "here it took a decent amount of time we could cut this down",
    "start": "2334640",
    "end": "2341000"
  },
  {
    "text": "but when we finish it we do get a nice report of",
    "start": "2341200",
    "end": "2347920"
  },
  {
    "text": "all two of our unit tests passed which is great now i can",
    "start": "2349280",
    "end": "2354400"
  },
  {
    "text": "deploy this with some certainty that the the two things i'm testing are not going to blow up",
    "start": "2354400",
    "end": "2359839"
  },
  {
    "text": "and cause any problems all",
    "start": "2359839",
    "end": "2366640"
  },
  {
    "text": "right back to powerpoint",
    "start": "2366839",
    "end": "2370880"
  },
  {
    "start": "2374000",
    "end": "2824000"
  },
  {
    "text": "right so we saw the example pipeline in action",
    "start": "2375440",
    "end": "2379680"
  },
  {
    "text": "so i do have some additional thoughts on this and then we'll have some additional time for questions",
    "start": "2380880",
    "end": "2387680"
  },
  {
    "text": "so there are some things that this uh doesn't work very well for um",
    "start": "2387920",
    "end": "2394640"
  },
  {
    "text": "data type changes um particularly so",
    "start": "2394880",
    "end": "2400240"
  },
  {
    "text": "changing something from a 32-bit integer to a 64-bit integer most databases are going to handle that fairly smoothly um",
    "start": "2400240",
    "end": "2407359"
  },
  {
    "text": "but if you're going the other direction or if you're changing from say an integer type to a character type",
    "start": "2407359",
    "end": "2414160"
  },
  {
    "text": "now you have a much much bigger challenge if you're using something like flyway or",
    "start": "2414160",
    "end": "2419680"
  },
  {
    "text": "liquid base where you have a migration script and you can write all of the logic to fix that",
    "start": "2419680",
    "end": "2425920"
  },
  {
    "text": "during your migration it's going to come out fairly smoothly if you're using something state-based",
    "start": "2425920",
    "end": "2432079"
  },
  {
    "text": "then you sign yourself up for a fairly large challenge and it's not great",
    "start": "2432079",
    "end": "2439119"
  },
  {
    "text": "um any sort of large-scale refactoring so for example uh if i'm going to change",
    "start": "2439119",
    "end": "2445359"
  },
  {
    "text": "the names of all of the tables in my database to something randomized and put views in their place",
    "start": "2445359",
    "end": "2453040"
  },
  {
    "text": "um don't know if i want to try to shove that through a continuous integration",
    "start": "2453040",
    "end": "2458400"
  },
  {
    "text": "pipeline um i might be better off simply writing some scripts to do it and",
    "start": "2458400",
    "end": "2465040"
  },
  {
    "text": "doing that out of band in a service outage um and then lastly and kind of uh in",
    "start": "2465040",
    "end": "2472880"
  },
  {
    "text": "reference to uh to the question about multi-terabyte databases",
    "start": "2472880",
    "end": "2478160"
  },
  {
    "text": "um this isn't we aren't really going to want to use this for load testing",
    "start": "2478160",
    "end": "2484960"
  },
  {
    "text": "so in addition to some of the size and time",
    "start": "2484960",
    "end": "2493599"
  },
  {
    "text": "constraints right one of the things inherent in continuous integration can do with deployment is",
    "start": "2493599",
    "end": "2499440"
  },
  {
    "text": "that your database is that all of your builds should happen quickly otherwise",
    "start": "2499440",
    "end": "2505119"
  },
  {
    "text": "they're they're not as useful so quick story uh from a project my company",
    "start": "2505119",
    "end": "2511440"
  },
  {
    "text": "worked on the uh the development build took 40 minutes to run",
    "start": "2511440",
    "end": "2517440"
  },
  {
    "text": "um which is awful um",
    "start": "2517440",
    "end": "2522960"
  },
  {
    "text": "so can any of you guess how many times they actually merged to develop every day",
    "start": "2522960",
    "end": "2528880"
  },
  {
    "text": "it was greater than zero yeah yeah it was more like once or twice",
    "start": "2531119",
    "end": "2538400"
  },
  {
    "text": "right and so we don't want we don't want the time we spend in our",
    "start": "2538400",
    "end": "2544079"
  },
  {
    "text": "in our builds to be a blocker to actually doing our builds right because now we've",
    "start": "2544079",
    "end": "2551440"
  },
  {
    "text": "all of the advantages that we get from everything that we've talked about we now know um and that load testing falls in that",
    "start": "2551440",
    "end": "2558720"
  },
  {
    "text": "category um the the other thing to think about with load testing is um",
    "start": "2558720",
    "end": "2565599"
  },
  {
    "text": "if you load test your database in isolation of all of the other things that happen to be running",
    "start": "2565599",
    "end": "2571280"
  },
  {
    "text": "on the server around it you're not necessarily going to get a true picture of where the application is",
    "start": "2571280",
    "end": "2576960"
  },
  {
    "text": "having performance challenges also if we're load testing against anything other than a production data",
    "start": "2576960",
    "end": "2582880"
  },
  {
    "text": "set with a production level workload you again",
    "start": "2582880",
    "end": "2589599"
  },
  {
    "text": "are not going to get a really good picture of where you have problems so",
    "start": "2589599",
    "end": "2596240"
  },
  {
    "text": "i'll say this once again load testing in a continuous integration process like this is a bad idea",
    "start": "2596240",
    "end": "2604720"
  },
  {
    "text": "not that you cannot leverage the automation tools to do it but i would strongly strongly urge you",
    "start": "2605119",
    "end": "2612400"
  },
  {
    "text": "not to so uh for all of you in the audience can",
    "start": "2612400",
    "end": "2618960"
  },
  {
    "text": "you think of anything else any other cases where this might be problematic or",
    "start": "2618960",
    "end": "2624240"
  },
  {
    "text": "where you might run into some edge cases corner cases",
    "start": "2624240",
    "end": "2629920"
  },
  {
    "text": "oops i just chopped off my foot cases",
    "start": "2629920",
    "end": "2634440"
  },
  {
    "text": "one of the weirdest ones i've ever seen is correlation between uh ansi strings and unicode strings",
    "start": "2646160",
    "end": "2652400"
  },
  {
    "text": "because that only shows up when you're running things over a connection when you copy and paste your code into the query analyzer and run it it's fine",
    "start": "2652400",
    "end": "2659520"
  },
  {
    "text": "because it pauses it using the correct character type i've had some real fascinating stuff",
    "start": "2659520",
    "end": "2664800"
  },
  {
    "text": "with stuff that worked when you tested it and then didn't work when you did it for real so i i don't know if that answers your",
    "start": "2664800",
    "end": "2670560"
  },
  {
    "text": "question but that was a lot of fun yeah yeah that one's uh",
    "start": "2670560",
    "end": "2678160"
  },
  {
    "text": "go back to the the data type changes data data types are are a weird thing",
    "start": "2678800",
    "end": "2686160"
  },
  {
    "text": "um yeah especially for for us americans because",
    "start": "2688839",
    "end": "2694160"
  },
  {
    "text": "we tend to uh we tend to ignore the fact that there could be anything other than roman characters out there",
    "start": "2694160",
    "end": "2699839"
  },
  {
    "text": "um",
    "start": "2699839",
    "end": "2702839"
  },
  {
    "text": "well in any case uh what if the live data is changing",
    "start": "2705119",
    "end": "2710160"
  },
  {
    "text": "quickly and the thing you want to deploy has data across tables with some foreign key constraints",
    "start": "2710160",
    "end": "2716480"
  },
  {
    "text": "yeah so uh that would be another one where um",
    "start": "2716480",
    "end": "2721680"
  },
  {
    "text": "i would say that you can probably use this sort of continuous integration continuous deployment um in fact you",
    "start": "2722079",
    "end": "2729119"
  },
  {
    "text": "could probably even um get a pretty decent unit test or integration test around that",
    "start": "2729119",
    "end": "2736160"
  },
  {
    "text": "um the the challenge there is going to be how your database platform handles",
    "start": "2736160",
    "end": "2742400"
  },
  {
    "text": "actually implementing the foreign key constraint in the database so",
    "start": "2742400",
    "end": "2748800"
  },
  {
    "text": "what i mean by that is it might work fine in your tests even when you're",
    "start": "2748800",
    "end": "2754880"
  },
  {
    "text": "putting data in and changing data and having all that but you may run into an issue where uh",
    "start": "2754880",
    "end": "2762079"
  },
  {
    "text": "in the production database um you",
    "start": "2762079",
    "end": "2766960"
  },
  {
    "text": "you're deploying these tables and foreign key constraints and you accidentally",
    "start": "2767359",
    "end": "2773040"
  },
  {
    "text": "take down access for all of your users um and so for that i would suggest",
    "start": "2773040",
    "end": "2779920"
  },
  {
    "text": "a good outage window um so it's just something that you would",
    "start": "2779920",
    "end": "2785119"
  },
  {
    "text": "want to think about so you don't run into um the customer service people",
    "start": "2785119",
    "end": "2790960"
  },
  {
    "text": "ringing you up and grabbing at you",
    "start": "2790960",
    "end": "2794960"
  },
  {
    "text": "or losing losing users right you know depending on how how bad the",
    "start": "2796240",
    "end": "2801680"
  },
  {
    "text": "outage is what else anything else",
    "start": "2801680",
    "end": "2808880"
  },
  {
    "text": "would i do blue green deploys for dbs um",
    "start": "2808880",
    "end": "2815960"
  },
  {
    "text": "go back to [Music]",
    "start": "2820480",
    "end": "2824768"
  },
  {
    "start": "2824000",
    "end": "2879000"
  },
  {
    "text": "yeah so um databases are special uh",
    "start": "2826800",
    "end": "2832560"
  },
  {
    "text": "and so unfortunately they don't lend themselves really well to a blue green deploy um",
    "start": "2832560",
    "end": "2840400"
  },
  {
    "text": "it's not to say that i wouldn't",
    "start": "2841119",
    "end": "2845318"
  },
  {
    "text": "so when i think about that the challenge really is that you have your",
    "start": "2852800",
    "end": "2858880"
  },
  {
    "text": "you're going to have to choose a time when you cut off access to your blue environment so you can get the same set",
    "start": "2858880",
    "end": "2865599"
  },
  {
    "text": "of data into your green environment um",
    "start": "2865599",
    "end": "2870880"
  },
  {
    "text": "it's like having a tough time wrapping my head around how that would actually work in practice",
    "start": "2871040",
    "end": "2879040"
  },
  {
    "start": "2879000",
    "end": "2949000"
  },
  {
    "text": "we did actually try and do it once years ago it's very very hard",
    "start": "2879599",
    "end": "2884558"
  },
  {
    "text": "yeah you basically the problem in a nutshell is uh customer creates a record it goes into the blue database then you",
    "start": "2885680",
    "end": "2891520"
  },
  {
    "text": "flip over to the green one you can replicate code trivially um we ended up using a like a primary replica",
    "start": "2891520",
    "end": "2897920"
  },
  {
    "text": "configuration and uh at any point it wasn't true blue green",
    "start": "2897920",
    "end": "2903040"
  },
  {
    "text": "because it wasn't kind of switching everything but it was like right we'll switch everything from the primary to the replica upgrade the replicator",
    "start": "2903040",
    "end": "2908400"
  },
  {
    "text": "primary and then the old primary can sort of slowly fall away and we tended to use that for doing system maintenance",
    "start": "2908400",
    "end": "2915200"
  },
  {
    "text": "which uh didn't affect the state of the data as we're doing things like operating system patches and those kinds of things",
    "start": "2915200",
    "end": "2922319"
  },
  {
    "text": "so you'd have the same data replicated between a box that didn't have the latest microsoft update and the one that",
    "start": "2922319",
    "end": "2928000"
  },
  {
    "text": "did and if everything was good after 24 hours the replica became the primary and the old primary but doing doing blue",
    "start": "2928000",
    "end": "2934720"
  },
  {
    "text": "green on on data and here it is the question i was looking forward to so you need to roll back a release",
    "start": "2934720",
    "end": "2940800"
  },
  {
    "text": "how do you deal with reverting database changes that could lose data created in a recent change",
    "start": "2940800",
    "end": "2948240"
  },
  {
    "start": "2949000",
    "end": "3047000"
  },
  {
    "text": "yeah",
    "start": "2949440",
    "end": "2951680"
  },
  {
    "text": "um well so the the the uh that this is this is the real challenge",
    "start": "2954839",
    "end": "2960000"
  },
  {
    "text": "right um is you say you've you've created",
    "start": "2960000",
    "end": "2965920"
  },
  {
    "text": "you know you've done your migration you have new data that is",
    "start": "2965920",
    "end": "2971200"
  },
  {
    "text": "um you know whether you updated some data or you changed it you changed the structure you took them back you took a",
    "start": "2971200",
    "end": "2976480"
  },
  {
    "text": "backup before you deployed so you know you have a known good state",
    "start": "2976480",
    "end": "2982559"
  },
  {
    "text": "but you don't but you you've you've had the new one be",
    "start": "2983680",
    "end": "2989760"
  },
  {
    "text": "on for a while and users have been using it",
    "start": "2989760",
    "end": "2996480"
  },
  {
    "text": "um and so uh really there's there's not a great automated way to handle this",
    "start": "2996839",
    "end": "3003599"
  },
  {
    "text": "uh unfortunately it essentially boils down to are you willing to",
    "start": "3003599",
    "end": "3010079"
  },
  {
    "text": "lose a bit of customer data and go back to your known good backup and so you know if you've only been online for like",
    "start": "3010079",
    "end": "3015359"
  },
  {
    "text": "five minutes maybe that's okay or are you going to uh",
    "start": "3015359",
    "end": "3022480"
  },
  {
    "text": "you know do something where you restore your known good to",
    "start": "3022960",
    "end": "3028480"
  },
  {
    "text": "a separate server or the same server and migrate the data as best you can",
    "start": "3028480",
    "end": "3034800"
  },
  {
    "text": "but unfortunately no not a great not a great automated way to do that",
    "start": "3034960",
    "end": "3042319"
  },
  {
    "text": "um i wish i had a better answer for that",
    "start": "3042319",
    "end": "3048319"
  },
  {
    "start": "3047000",
    "end": "3129000"
  },
  {
    "text": "again this is something that uh my team back when i was at spotlight we dabbled with a lot of the stuff you've been talking",
    "start": "3048559",
    "end": "3054559"
  },
  {
    "text": "about is stuff that we were also sort of trying to figure out um and one of the things that helped there",
    "start": "3054559",
    "end": "3060720"
  },
  {
    "text": "was we if at all possible we would avoid doing the",
    "start": "3060720",
    "end": "3066160"
  },
  {
    "text": "data schema change and the code change that populated it at the same time so",
    "start": "3066160",
    "end": "3071200"
  },
  {
    "text": "classic example you you roll out a release which adds a new column and then you need to roll back now the column's not there anymore what happens to all",
    "start": "3071200",
    "end": "3076960"
  },
  {
    "text": "the data that the customers put in the column while it was live so what we do is we'd roll the column out first but",
    "start": "3076960",
    "end": "3082880"
  },
  {
    "text": "the code that talked to it wouldn't be accessible to production customers only test scripts that had you know the",
    "start": "3082880",
    "end": "3088079"
  },
  {
    "text": "magical cookie or connected directly to the apis would do it um and we'd give it",
    "start": "3088079",
    "end": "3093119"
  },
  {
    "text": "you know 48 hours to make sure everything was good and then we'd roll out the code because at that point if we",
    "start": "3093119",
    "end": "3098960"
  },
  {
    "text": "had to roll back the code deployment we knew the data would still be there it's just you couldn't talk to it anymore",
    "start": "3098960",
    "end": "3104240"
  },
  {
    "text": "but it is you know there are i think certainly questions around state management and you know rollbacks and",
    "start": "3104240",
    "end": "3111200"
  },
  {
    "text": "stuff that when the second you switch a feature on a customer gives you information and goes remember this this",
    "start": "3111200",
    "end": "3116400"
  },
  {
    "text": "is yours now um at that point rolling back is just really not an option because it's like",
    "start": "3116400",
    "end": "3121839"
  },
  {
    "text": "well no we can't you know that's got to stay so nice it's a really interesting",
    "start": "3121839",
    "end": "3127119"
  },
  {
    "text": "discussion yeah so this this is where so i as i've mentioned and as i showed i've",
    "start": "3127119",
    "end": "3133440"
  },
  {
    "start": "3129000",
    "end": "3385000"
  },
  {
    "text": "been uh i've preferred sql server data tools in the past it's one of those where i'm i'm",
    "start": "3133440",
    "end": "3140319"
  },
  {
    "text": "more and more defaulting to something like flyway or liquid base or something where you",
    "start": "3140319",
    "end": "3145920"
  },
  {
    "text": "where where it is yes exactly you fall forward um",
    "start": "3145920",
    "end": "3150960"
  },
  {
    "text": "whereas like oh this didn't work we'll make a change that reverts it",
    "start": "3150960",
    "end": "3157520"
  },
  {
    "text": "by moving the state of the database forward",
    "start": "3157520",
    "end": "3165000"
  },
  {
    "text": "um yeah so we'll go back over here",
    "start": "3167280",
    "end": "3173440"
  },
  {
    "text": "and this is my last slide which is questions i have about five minutes left um so any any other questions that we",
    "start": "3173440",
    "end": "3180559"
  },
  {
    "text": "have so uh one one question which is",
    "start": "3180559",
    "end": "3186800"
  },
  {
    "text": "i guess slightly unrelated to the topic but i'm curious of your uh opinion about nosql databases obviously",
    "start": "3186800",
    "end": "3194640"
  },
  {
    "text": "you know you're somebody who spent a lot of time working with relational databases um",
    "start": "3194640",
    "end": "3199839"
  },
  {
    "text": "what are you have you done much work with things like and couch and you know ravendb",
    "start": "3199839",
    "end": "3206160"
  },
  {
    "text": "so  yes um cassandra yes cosmos yes um",
    "start": "3206160",
    "end": "3214319"
  },
  {
    "text": "i like relational databases because for 90 of your problem space they're going to solve your problem really well",
    "start": "3216000",
    "end": "3222960"
  },
  {
    "text": "um but there are cases where it makes sense to use nosql where you're",
    "start": "3222960",
    "end": "3229440"
  },
  {
    "text": "storing a document or you know you can allow your",
    "start": "3229440",
    "end": "3236079"
  },
  {
    "text": "your application your api to worry about all of the business logic around what",
    "start": "3236079",
    "end": "3241680"
  },
  {
    "text": "that object should look like and you don't need a database to do that for you um and i think that's where things like",
    "start": "3241680",
    "end": "3247760"
  },
  {
    "text": "like or couch or flavor of the month maria",
    "start": "3247760",
    "end": "3253520"
  },
  {
    "text": "maria's relationship i guess you know all of those work really well um",
    "start": "3253520",
    "end": "3259200"
  },
  {
    "text": "we've also um at my firm been using postgres a lot more recently because you",
    "start": "3259200",
    "end": "3264640"
  },
  {
    "text": "get really the best of both worlds there you get a nice relational database that has",
    "start": "3264640",
    "end": "3269920"
  },
  {
    "text": "some really fantastic document capabilities um",
    "start": "3269920",
    "end": "3275200"
  },
  {
    "text": "yeah nothing nothing wrong with the sequel nothing at all i'm kind of the same camp as you i like the relational model",
    "start": "3276480",
    "end": "3282960"
  },
  {
    "text": "because it uh i find the constraints reassuring uh but was very impressed with postgres and how that handle kind",
    "start": "3282960",
    "end": "3289200"
  },
  {
    "text": "of documents as part of a relational model it's like yeah everything makes sense up to this point so after that point it's just json in a json column",
    "start": "3289200",
    "end": "3296240"
  },
  {
    "text": "and that'll be fine so yeah and it's it's interesting when you look",
    "start": "3296240",
    "end": "3301760"
  },
  {
    "text": "at sql server and microsoft has tried to solve the same problem and i don't think done really well yeah because they used",
    "start": "3301760",
    "end": "3308000"
  },
  {
    "text": "xml for it but so i just noticed emily said in the chat for all those reasons we built nevermoor i've not heard of",
    "start": "3308000",
    "end": "3313280"
  },
  {
    "text": "nevermoor emily um you want to tell us what it is",
    "start": "3313280",
    "end": "3318079"
  },
  {
    "text": "i probably can't do it just it's based in sequel but it's a adjacent",
    "start": "3319119",
    "end": "3324799"
  },
  {
    "text": "blob store so yeah cool check it out as well no requests",
    "start": "3324799",
    "end": "3331119"
  },
  {
    "text": "oh awesome all right cool right we got about another two minutes",
    "start": "3331119",
    "end": "3336880"
  },
  {
    "text": "are there any other questions or dog comments we've had some pretty good discussions",
    "start": "3336880",
    "end": "3342880"
  },
  {
    "text": "so far over the course of this yeah martin for that one i would i would",
    "start": "3342880",
    "end": "3348720"
  },
  {
    "text": "suggest if you really need to index into your documents then yeah a true nosql or",
    "start": "3348720",
    "end": "3354000"
  },
  {
    "text": "even something like elasticsearch is probably going to be a bit better than using postgres or sql",
    "start": "3354000",
    "end": "3359680"
  },
  {
    "text": "server or you give to your junior developers and they will build a relational database on top of it and",
    "start": "3359680",
    "end": "3365200"
  },
  {
    "text": "think they're really clever for having done it this is also a solution",
    "start": "3365200",
    "end": "3370640"
  },
  {
    "text": "no comment cool all right thank you very much dan",
    "start": "3370640",
    "end": "3377119"
  },
  {
    "text": "awesome",
    "start": "3377119",
    "end": "3380119"
  }
]