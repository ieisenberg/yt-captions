[
  {
    "text": "I'm glad there's not too many people",
    "start": "6620",
    "end": "12059"
  },
  {
    "text": "here because this means they're like the most interested in the topic and that's",
    "start": "12059",
    "end": "19410"
  },
  {
    "text": "what I wanted to do before we start before I even introduced myself how many",
    "start": "19410",
    "end": "26220"
  },
  {
    "text": "people here know angular okay cool",
    "start": "26220",
    "end": "31560"
  },
  {
    "text": "how many people here know in jerax okay",
    "start": "31560",
    "end": "37350"
  },
  {
    "text": "that's going to be scary and quite a few okay I want to make sure kind of what",
    "start": "37350",
    "end": "44460"
  },
  {
    "text": "expectations were sitting here how many people are expecting 101 level talks",
    "start": "44460",
    "end": "50780"
  },
  {
    "text": "okay how many of you are expecting proved advanced I'd best practice kind",
    "start": "50780",
    "end": "56579"
  },
  {
    "text": "of talk cool most people didn't raise their hands for polls so I don't know",
    "start": "56579",
    "end": "65250"
  },
  {
    "text": "what this means okay now we can start",
    "start": "65250",
    "end": "73190"
  },
  {
    "text": "for for those who don't know me most people I guess my name is Maliki I am ratify consultant",
    "start": "73460",
    "end": "82740"
  },
  {
    "text": "I've been doing fair bit of web with",
    "start": "82740",
    "end": "87930"
  },
  {
    "text": "jQuery and knockout and okay I didn't scare you interesting and angular and",
    "start": "87930",
    "end": "95750"
  },
  {
    "text": "surprisingly react over maybe I think it started in 2004 our scares of JavaScript",
    "start": "95750",
    "end": "104550"
  },
  {
    "text": "until 2007 there was a lead developer who who was doing JavaScript was at the",
    "start": "104550",
    "end": "111720"
  },
  {
    "text": "time prototype and script oculus and I was like wow this is just magic I would",
    "start": "111720",
    "end": "117150"
  },
  {
    "text": "never be able to do this few years later I was using angularjs and my blog was goofed up dotnet there was popular just",
    "start": "117150",
    "end": "125970"
  },
  {
    "text": "for one plot post that talks about how she was dropped down with anger yes it",
    "start": "125970",
    "end": "131640"
  },
  {
    "text": "was that hard ng options you those who used it would actually know",
    "start": "131640",
    "end": "137569"
  },
  {
    "text": "then okay let's do angular and stuff and I created this user group for angular in",
    "start": "137569",
    "end": "143090"
  },
  {
    "text": "G Sydney and we usually have this thing in ng Sydney where there is an open talk",
    "start": "143090",
    "end": "149629"
  },
  {
    "text": "session an open talk usually means I bring some links and some tips and",
    "start": "149629",
    "end": "154909"
  },
  {
    "text": "tricks and some news either from the official angular weekly update when it",
    "start": "154909",
    "end": "162409"
  },
  {
    "text": "started or just the github issues or just Twitter and then we discuss it with",
    "start": "162409",
    "end": "169370"
  },
  {
    "text": "people and they would you know talk about it and you know have discussions and stuff and it started because I",
    "start": "169370",
    "end": "177049"
  },
  {
    "text": "didn't have a speaker at one month for the second slot but then people liked it so much that it became a constant one so",
    "start": "177049",
    "end": "184359"
  },
  {
    "text": "this session is only going to be saved or be good if you know we try to get the",
    "start": "184359",
    "end": "190579"
  },
  {
    "text": "spirit of open talk and you know we go talking to together if you have been",
    "start": "190579",
    "end": "197959"
  },
  {
    "text": "following the hashtag in DC Sydney for the last couple of days you will also",
    "start": "197959",
    "end": "203930"
  },
  {
    "text": "know I'm a Twitter addict so there is that as well",
    "start": "203930",
    "end": "209689"
  },
  {
    "text": "oh yeah last couple of things about me is I contributed a little bit to anger",
    "start": "209689",
    "end": "215509"
  },
  {
    "text": "still I was one of the ten worldwide supports people for angular CLI one and",
    "start": "215509",
    "end": "221930"
  },
  {
    "text": "then I'm not doing much of that these days because I'm doing react and angular",
    "start": "221930",
    "end": "228590"
  },
  {
    "text": "at the same time which is crazy sorry",
    "start": "228590",
    "end": "234169"
  },
  {
    "text": "for the long introductions but last couple of slides I wanted to do before we get to the content is a lot of like",
    "start": "234169",
    "end": "241370"
  },
  {
    "text": "some of the examples I'll be using are from code samples that are MIT license from the book angular development",
    "start": "241370",
    "end": "248900"
  },
  {
    "text": "especially the second edition which is now early access one so thanks Rico for making that available I also should",
    "start": "248900",
    "end": "257449"
  },
  {
    "text": "be sharing a few slides from Jacqueline",
    "start": "257449",
    "end": "262940"
  },
  {
    "text": "Jean a really awesome Google developer expert",
    "start": "262940",
    "end": "268750"
  },
  {
    "text": "in Malaysia who is like really nailed how to show in TRX that I thought I",
    "start": "268750",
    "end": "276310"
  },
  {
    "text": "wouldn't be able to do any better and I just got there so that's that now a lot",
    "start": "276310",
    "end": "284260"
  },
  {
    "text": "of people said they know in jaracz and as much as they scared me this",
    "start": "284260",
    "end": "289570"
  },
  {
    "text": "allows me to get a few ideas of what people think and your ex is you don't",
    "start": "289570",
    "end": "296200"
  },
  {
    "text": "even need to press your hand just what what are you thinking in jaracz is I know it's public you need a little bit",
    "start": "296200",
    "end": "304960"
  },
  {
    "text": "of you know bravery to do that and you don't need to be you know impacted by",
    "start": "304960",
    "end": "310300"
  },
  {
    "text": "this you know what was in your ex - yeah",
    "start": "310300",
    "end": "314250"
  },
  {
    "text": "yeah yeah yeah that's perfect so there's",
    "start": "318600",
    "end": "327130"
  },
  {
    "text": "a one-world III forgot to put into this presentation and would have made it much",
    "start": "327130",
    "end": "332380"
  },
  {
    "text": "better singleton if all the data all the variables that you have in your",
    "start": "332380",
    "end": "339669"
  },
  {
    "text": "application they're in one massive object singleton object that's what",
    "start": "339669",
    "end": "346570"
  },
  {
    "text": "people when they talk about reduction in Jurek's and all this kind of stuff they call the state I never understood what",
    "start": "346570",
    "end": "352419"
  },
  {
    "text": "the state means English is a second language for me I'm not sure I get it 100% and I was like always confused when",
    "start": "352419",
    "end": "363370"
  },
  {
    "text": "people say in directs or Redux helps you manage the state on like what state and state is just the variables the",
    "start": "363370",
    "end": "370690"
  },
  {
    "text": "properties in your component now it starts to make sense to me so that's that's pretty cool and a funny thing if",
    "start": "370690",
    "end": "379780"
  },
  {
    "text": "you look at Redux slides alive sorry I'm documentation sufficient documentation",
    "start": "379780",
    "end": "385450"
  },
  {
    "text": "they will say that Redux it's just an implementation of like it can be",
    "start": "385450",
    "end": "390700"
  },
  {
    "text": "implemented using ArcGIS scan method and now I'm like",
    "start": "390700",
    "end": "396139"
  },
  {
    "text": "well scam me what's the scanner sorry operate or even I'm not entirely sure",
    "start": "396139",
    "end": "401419"
  },
  {
    "text": "what that is and scan operator is",
    "start": "401419",
    "end": "407270"
  },
  {
    "text": "assembly if you subscribe to an observable you get results over time now",
    "start": "407270",
    "end": "414529"
  },
  {
    "text": "if you have something like map that gets results over time and just transforms them and give them back",
    "start": "414529",
    "end": "421419"
  },
  {
    "text": "scan it's kind of just the same except it can sometimes use the last result",
    "start": "421419",
    "end": "428930"
  },
  {
    "text": "that was emitted before so if I have for example a counter which is like a you",
    "start": "428930",
    "end": "434120"
  },
  {
    "text": "PQ's reduct slash and your X example",
    "start": "434120",
    "end": "439969"
  },
  {
    "text": "everybody loves it for simple things you have the result for example the counters",
    "start": "439969",
    "end": "445759"
  },
  {
    "text": "now at one and then you're doing an increment which means the result will be",
    "start": "445759",
    "end": "452479"
  },
  {
    "text": "2 so it is your emitting a new result but you're also using the previous",
    "start": "452479",
    "end": "458499"
  },
  {
    "text": "values and of course using the Bria's values is optional and everybody here",
    "start": "458499",
    "end": "468490"
  },
  {
    "text": "said they kind of have an idea of what",
    "start": "468490",
    "end": "474759"
  },
  {
    "text": "angular and maybe in your ex are doing so simple idea is that you have this one",
    "start": "474759",
    "end": "483490"
  },
  {
    "text": "object the singleton and you you you put",
    "start": "483490",
    "end": "490430"
  },
  {
    "text": "it in this tool so the store is just a class that has the object with all the",
    "start": "490430",
    "end": "495620"
  },
  {
    "text": "changes coming in as an observable so if you want to catch the changes you select",
    "start": "495620",
    "end": "501349"
  },
  {
    "text": "what part of this object you want because if one one component might be",
    "start": "501349",
    "end": "507889"
  },
  {
    "text": "interested in user name one component might be interested in product list one on one component might be interested in",
    "start": "507889",
    "end": "514219"
  },
  {
    "text": "the quantity of a specific product so you take the whole object and you get",
    "start": "514219",
    "end": "519529"
  },
  {
    "text": "the one B's that you want in your component and there's a select you get it as an observable and when you want to",
    "start": "519529",
    "end": "526279"
  },
  {
    "text": "make changes like add product to basket or anything like that you",
    "start": "526279",
    "end": "532310"
  },
  {
    "text": "dispatch an action and we will talk more about what this means so this action is like increment I want",
    "start": "532310",
    "end": "540620"
  },
  {
    "text": "to do something so then you would look at okay what's my current state what do",
    "start": "540620",
    "end": "546110"
  },
  {
    "text": "I need to do and then this action will call the reducer we'll talk about what",
    "start": "546110",
    "end": "551390"
  },
  {
    "text": "the reducer is but the reducer is simply how do I calculate the value of the counter because the data is a way let's",
    "start": "551390",
    "end": "559880"
  },
  {
    "text": "elect to get the data from this one object also it is one object but you keep changing that object the values in",
    "start": "559880",
    "end": "565730"
  },
  {
    "text": "this object from the reducers and I'll be showing you how this happens because the reducer creates a new object or",
    "start": "565730",
    "end": "572650"
  },
  {
    "text": "state and then this will trigger observable which will trigger the",
    "start": "572650",
    "end": "578360"
  },
  {
    "text": "component and stuff now the one thing missing in in in this piece is how do we",
    "start": "578360",
    "end": "584750"
  },
  {
    "text": "do think is a synchronously because if I have a counter and I increment it and",
    "start": "584750",
    "end": "592580"
  },
  {
    "text": "then I call the reducer to say okay instead of zero it's a one and then selected that's all fine but what if I",
    "start": "592580",
    "end": "599480"
  },
  {
    "text": "have something saying a synchronous in redux world the simplest way to do this",
    "start": "599480",
    "end": "606170"
  },
  {
    "text": "is return a promise which has changed a new action when when you're done with a",
    "start": "606170",
    "end": "611570"
  },
  {
    "text": "promise when you're done with that extra quest or whatever in in grx because we",
    "start": "611570",
    "end": "616850"
  },
  {
    "text": "have rxjs with all its power instead of a promise we'll use an observable and we",
    "start": "616850",
    "end": "622130"
  },
  {
    "text": "will look at what this means as well but let's star symbol",
    "start": "622130",
    "end": "627490"
  },
  {
    "text": "the most ubiquitous Redux or indirect example you're ever find and I found it",
    "start": "629780",
    "end": "640440"
  },
  {
    "text": "in that book originally and I was like okay that's perfect I need to mention that book but after that I found that",
    "start": "640440",
    "end": "646550"
  },
  {
    "text": "there are like it it you can also find it in a few different examples in like",
    "start": "646550",
    "end": "651600"
  },
  {
    "text": "different places as well so here I have a counter I reset the counter and I can",
    "start": "651600",
    "end": "657740"
  },
  {
    "text": "increment and decrement now the one",
    "start": "657740",
    "end": "663840"
  },
  {
    "text": "thing I want you to notice in here especially people who who don't know injure is that I have the counter in two",
    "start": "663840",
    "end": "670380"
  },
  {
    "text": "places there if I do that and I go to",
    "start": "670380",
    "end": "679460"
  },
  {
    "text": "reductive tools might refresh going to",
    "start": "679460",
    "end": "689150"
  },
  {
    "text": "keep let it be sure instead how's the code for this one",
    "start": "689150",
    "end": "695370"
  },
  {
    "text": "works so I have a component in here before I show how it interacts with in",
    "start": "695370",
    "end": "702390"
  },
  {
    "text": "durricks I have two buttons once this is increment and well this is decrement as",
    "start": "702390",
    "end": "708690"
  },
  {
    "text": "then the value as I said is coming as an observable that's why we're using the sink pipe in there but then there is",
    "start": "708690",
    "end": "717360"
  },
  {
    "text": "another child component and the child component all it's doing is just saying",
    "start": "717360",
    "end": "725390"
  },
  {
    "text": "the value so these two places the first one that says the counter and the",
    "start": "725390",
    "end": "730680"
  },
  {
    "text": "counter and child they're just to say that I have two components both responding to the same value now in this",
    "start": "730680",
    "end": "738150"
  },
  {
    "text": "example because it's meant to be symbol the child is directly under the baron so",
    "start": "738150",
    "end": "743580"
  },
  {
    "text": "we could have actually used props as well but what if the child is under like a few components away again if you're",
    "start": "743580",
    "end": "751020"
  },
  {
    "text": "using the user name you might have the user name at the top right in there and",
    "start": "751020",
    "end": "756120"
  },
  {
    "text": "you might have a form that says your name and you copy the user names things like that that was why when I",
    "start": "756120",
    "end": "764419"
  },
  {
    "text": "when I went to start my react gig went",
    "start": "764419",
    "end": "769669"
  },
  {
    "text": "to the other senior days and on the gig and he he didn't know that I didn't grx and he didn't know that a new rack did",
    "start": "769669",
    "end": "775999"
  },
  {
    "text": "relax so he tried to explain Redux to me and the one thing he said was you know",
    "start": "775999",
    "end": "782359"
  },
  {
    "text": "what relax does is just the things that we use so that whenever we want to pass one value down throw too many components",
    "start": "782359",
    "end": "790970"
  },
  {
    "text": "we don't have to go through props of each one entirely true or like he don't use the result just for",
    "start": "790970",
    "end": "798289"
  },
  {
    "text": "that and again about why it works but it certainly helps with that as well so how",
    "start": "798289",
    "end": "806059"
  },
  {
    "text": "would we get something like this to to work I never remember why that they've tools",
    "start": "806059",
    "end": "811970"
  },
  {
    "text": "didn't work because you need to have a special interactive tools module to add",
    "start": "811970",
    "end": "818629"
  },
  {
    "text": "to this but this was meant to be like pair pawns so first we need to get in",
    "start": "818629",
    "end": "828289"
  },
  {
    "text": "directs itself right now there are new schematics that allow you to just add in",
    "start": "828289",
    "end": "833929"
  },
  {
    "text": "direct to this I'll show them later but for now what I want you to look at for",
    "start": "833929",
    "end": "840049"
  },
  {
    "text": "those who don't know index is you get",
    "start": "840049",
    "end": "845179"
  },
  {
    "text": "the store as this store again it just wraps with the data just wraps the state",
    "start": "845179",
    "end": "851720"
  },
  {
    "text": "and because they have special support for lazy loading in your app component",
    "start": "851720",
    "end": "859729"
  },
  {
    "text": "in the part that's not lazy loaded you'd say for root but you also have something",
    "start": "859729",
    "end": "864739"
  },
  {
    "text": "called for feature for if you have some lazy loaded modules that has its own state and you want to join only after",
    "start": "864739",
    "end": "871069"
  },
  {
    "text": "you do the lazy loading so we say for root and then we we say okay we want to",
    "start": "871069",
    "end": "877609"
  },
  {
    "text": "have a property name now this counter state it's nothing this is just a property name the actual state that we",
    "start": "877609",
    "end": "886939"
  },
  {
    "text": "have is this one my is the whole object encounters is just a property could have",
    "start": "886939",
    "end": "892110"
  },
  {
    "text": "called it a Packer of cold at whatever then I'm saying not I'm not saying the value directly in there I'm I'm saying",
    "start": "892110",
    "end": "898680"
  },
  {
    "text": "this thing called reducer reducer means this is a function that you call to get",
    "start": "898680",
    "end": "904080"
  },
  {
    "text": "the value so if I go there you'll see I",
    "start": "904080",
    "end": "910410"
  },
  {
    "text": "have a simple function and this function takes 30 for those who already know",
    "start": "910410",
    "end": "915810"
  },
  {
    "text": "interaction who didn't expect one or one thing I was just for the rest we need to",
    "start": "915810",
    "end": "921360"
  },
  {
    "text": "go through this quickly so this function simply takes what was the existing state",
    "start": "921360",
    "end": "928980"
  },
  {
    "text": "you remember when we talked about scan",
    "start": "928980",
    "end": "934910"
  },
  {
    "text": "it takes existing state in here in an X and then Y is a new thing and get the",
    "start": "937010",
    "end": "942960"
  },
  {
    "text": "result so here it takes the existing state and if there is nothing there is a",
    "start": "942960",
    "end": "948840"
  },
  {
    "text": "default property so this is and it's just pub script it means if it is undefined set it to zero then it takes",
    "start": "948840",
    "end": "957030"
  },
  {
    "text": "action and we will see what action means action is just another simple object it's meant to be a json object that's",
    "start": "957030",
    "end": "962640"
  },
  {
    "text": "not how any RX does it but it just meant to be something that you can serialize",
    "start": "962640",
    "end": "970970"
  },
  {
    "text": "to Jason and then it checks it should have a property called type and this type tells the reducer what to do with",
    "start": "971360",
    "end": "977430"
  },
  {
    "text": "it so this very simple example you have increment and in this case you say okay",
    "start": "977430",
    "end": "983940"
  },
  {
    "text": "I'll take the old one and add to it if this decrement of takes the old one and read like take from it otherwise you",
    "start": "983940",
    "end": "992820"
  },
  {
    "text": "just return this as is now this works slightly better in in react because in",
    "start": "992820",
    "end": "1001339"
  },
  {
    "text": "in in react when you select or they call it interconnect it will check by",
    "start": "1001339",
    "end": "1007880"
  },
  {
    "text": "reference if this state changed it or not and then if it didn't change it will",
    "start": "1007880",
    "end": "1013430"
  },
  {
    "text": "not give it to to the component angular",
    "start": "1013430",
    "end": "1019870"
  },
  {
    "text": "doesn't always like work way although it has full support for",
    "start": "1019870",
    "end": "1025069"
  },
  {
    "text": "doing this as well like you can do change detection angular in many ways you can implement your own like it's",
    "start": "1025069",
    "end": "1030649"
  },
  {
    "text": "more flexible in in that sense but then what this means is that we can we can go",
    "start": "1030649",
    "end": "1037640"
  },
  {
    "text": "and say okay I want to select this current state property I could have also done this something like that as well",
    "start": "1037640",
    "end": "1050710"
  },
  {
    "text": "and it just creates the observable in my real good I usually do this directly and",
    "start": "1050710",
    "end": "1066500"
  },
  {
    "text": "because this is I have to get it so I'm",
    "start": "1066500",
    "end": "1072049"
  },
  {
    "text": "just put on this around it and whatever and then with the same store the store",
    "start": "1072049",
    "end": "1078260"
  },
  {
    "text": "in indirect is how you get both the dispatch and the selected slightly",
    "start": "1078260",
    "end": "1083899"
  },
  {
    "text": "different from reduction if you have done that with with react I just tell it",
    "start": "1083899",
    "end": "1090350"
  },
  {
    "text": "I have this type increment now if I want to implement a reset I could have also",
    "start": "1090350",
    "end": "1097700"
  },
  {
    "text": "have done something similar where I'm here saying reset and I could have said",
    "start": "1097700",
    "end": "1104539"
  },
  {
    "text": "the value that I want to reset to to zero for example or one or whatever I",
    "start": "1104539",
    "end": "1109640"
  },
  {
    "text": "want to reset it to but the convention for this kind of thing is to call a tab a looot and whatever thing you want on",
    "start": "1109640",
    "end": "1116480"
  },
  {
    "text": "there and if we're going to talk best practices for a while very very quickly",
    "start": "1116480",
    "end": "1122899"
  },
  {
    "text": "you always want to follow conventions when you're dealing with Jurek's because",
    "start": "1122899",
    "end": "1130130"
  },
  {
    "text": "that's the whole point if you ask me why would I use injects is it to manage my",
    "start": "1130130",
    "end": "1135919"
  },
  {
    "text": "state because my state's complex I never understand what complex it means as well by the way but it is the only reason",
    "start": "1135919",
    "end": "1146870"
  },
  {
    "text": "you'd use and directs in my mind is because it gives you structure it gives",
    "start": "1146870",
    "end": "1152510"
  },
  {
    "text": "you conventions there are million ways you can do application development in angular you",
    "start": "1152510",
    "end": "1159009"
  },
  {
    "text": "can boot like most people will will know okay I will not use HTTP client directly",
    "start": "1159009",
    "end": "1165789"
  },
  {
    "text": "in the component I'll boot it in a service but how will I get the data from",
    "start": "1165789",
    "end": "1171669"
  },
  {
    "text": "there and how will I bus the data to to that and all this sort of thing there are million ways you can do this and the",
    "start": "1171669",
    "end": "1181149"
  },
  {
    "text": "good thing about ng rx or reduction general is that it defines buttons for",
    "start": "1181149",
    "end": "1186909"
  },
  {
    "text": "doing everything for getting that off writing that you know for example you'll",
    "start": "1186909",
    "end": "1192879"
  },
  {
    "text": "always have an effect between your component and your service and and this",
    "start": "1192879",
    "end": "1199299"
  },
  {
    "text": "makes you think about okay I want an action for starting an ajax request and the what an action for finishing an",
    "start": "1199299",
    "end": "1205330"
  },
  {
    "text": "adjective quest successfully and they want an action for finishing with arrows",
    "start": "1205330",
    "end": "1211059"
  },
  {
    "text": "they start thinking about all these things start like knowing what to do is it now in here all we did was just",
    "start": "1211059",
    "end": "1220139"
  },
  {
    "text": "creating that I could even even create the actions themselves like us classes",
    "start": "1220139",
    "end": "1228659"
  },
  {
    "text": "but the way like conventional react",
    "start": "1228659",
    "end": "1234940"
  },
  {
    "text": "sorry it generates would do it it's like that so here we have a simple search",
    "start": "1234940",
    "end": "1243070"
  },
  {
    "text": "feature you think of to complete whatever and one way you would do this",
    "start": "1243070",
    "end": "1250600"
  },
  {
    "text": "is first you want the type the type is a string it's meant to be a string because",
    "start": "1250600",
    "end": "1257399"
  },
  {
    "text": "when you set up the store dev tools it just needs to read JSON and actually a",
    "start": "1257399",
    "end": "1263799"
  },
  {
    "text": "funny thing is in Redux if you're using the docs there are some helper tools that make sure you don't use classes for",
    "start": "1263799",
    "end": "1270759"
  },
  {
    "text": "actions to make sure you don't put any methods in there or anything is it doesn't make them just a simple G some",
    "start": "1270759",
    "end": "1277480"
  },
  {
    "text": "simplified link button injects they say we just use a class because its typescript and we're fun and but at the",
    "start": "1277480",
    "end": "1284230"
  },
  {
    "text": "end of the day you still should never ever put anything in here other than your payload and your type",
    "start": "1284230",
    "end": "1290920"
  },
  {
    "text": "it's just convenience to to have a class in there because you can just say here",
    "start": "1290920",
    "end": "1296650"
  },
  {
    "text": "for my types I'm going like which we usually group actions by the things that",
    "start": "1296650",
    "end": "1305500"
  },
  {
    "text": "I relate to so if you have for example a bookstore you have all the books actions in one place all the Logan actions in",
    "start": "1305500",
    "end": "1313330"
  },
  {
    "text": "one place etc so you put the types in",
    "start": "1313330",
    "end": "1318550"
  },
  {
    "text": "there you and because you don't want to just deal with strings you might want to",
    "start": "1318550",
    "end": "1323790"
  },
  {
    "text": "create constants for them but because you're grouping reactions anyway why",
    "start": "1323790",
    "end": "1329680"
  },
  {
    "text": "don't you also group his action names the reaction types themselves so that's what we're doing there the nice thing is",
    "start": "1329680",
    "end": "1336940"
  },
  {
    "text": "if I hover over this or actually if you",
    "start": "1336940",
    "end": "1343900"
  },
  {
    "text": "do it like this now the type that you",
    "start": "1343900",
    "end": "1349870"
  },
  {
    "text": "see in there I'm going to get like very",
    "start": "1349870",
    "end": "1355780"
  },
  {
    "text": "inception kind of thing there but what is the type of type",
    "start": "1355780",
    "end": "1361980"
  },
  {
    "text": "it's no string and it's not enum and that's the beauty of it and that's why",
    "start": "1367270",
    "end": "1375130"
  },
  {
    "text": "it works so actually it is this exact",
    "start": "1375130",
    "end": "1382789"
  },
  {
    "text": "value of of the enum you notice that",
    "start": "1382789",
    "end": "1388809"
  },
  {
    "text": "which means if I say all the search actions like if I have a search action",
    "start": "1390400",
    "end": "1404570"
  },
  {
    "text": "it will be one of these this means if I filter that the type is search success",
    "start": "1404570",
    "end": "1409850"
  },
  {
    "text": "then I know that the thing I have is exactly this one and I can read the payload list let's look at how the",
    "start": "1409850",
    "end": "1417640"
  },
  {
    "text": "reducers are doing it now in the reducer",
    "start": "1417640",
    "end": "1426289"
  },
  {
    "text": "we have the same idea we have the state as it is now and the first time indirect",
    "start": "1426289",
    "end": "1433370"
  },
  {
    "text": "cause the reducer it cause it was undefined and undefined okay so when it's undefined it will set",
    "start": "1433370",
    "end": "1439820"
  },
  {
    "text": "it to the initial state which is this thing nothing special here and it it",
    "start": "1439820",
    "end": "1446630"
  },
  {
    "text": "sends it a search action now search action if you notice was this alright so",
    "start": "1446630",
    "end": "1457909"
  },
  {
    "text": "it means it's one of these three however",
    "start": "1457909",
    "end": "1462850"
  },
  {
    "text": "keep open if I if I know for example",
    "start": "1465880",
    "end": "1474770"
  },
  {
    "text": "that it is a search so here I'm doing switch on the type if it is search",
    "start": "1474770",
    "end": "1479900"
  },
  {
    "text": "success you notice here I didn't need to cast and now it knows this is just table",
    "start": "1479900",
    "end": "1491690"
  },
  {
    "text": "script being beautiful I get too excited about time stretch",
    "start": "1491690",
    "end": "1496760"
  },
  {
    "text": "more than angular and react and interacts and everything else so if if",
    "start": "1496760",
    "end": "1503870"
  },
  {
    "text": "it is a success it already knows like there is a feature that says ok it's over all all and the type cannot be this",
    "start": "1503870",
    "end": "1512210"
  },
  {
    "text": "and it can still be a failure for sure is that then so in this context it will",
    "start": "1512210",
    "end": "1517970"
  },
  {
    "text": "know that the action is a success and you can do this now anybody here does",
    "start": "1517970",
    "end": "1523070"
  },
  {
    "text": "not know what the three dots mean I'm",
    "start": "1523070",
    "end": "1530560"
  },
  {
    "text": "trying to see who here sorry who here knows what these three dots mean okay",
    "start": "1530560",
    "end": "1542110"
  },
  {
    "text": "yeah exactly so that means that state it",
    "start": "1548650",
    "end": "1555500"
  },
  {
    "text": "must have other properties other than search query in search results so let's",
    "start": "1555500",
    "end": "1566800"
  },
  {
    "text": "say when we want to start the search we will not if there was an error we",
    "start": "1567340",
    "end": "1573470"
  },
  {
    "text": "will not clear it until we actually get results this puppy is a requirement it might not be but you notice in here we",
    "start": "1573470",
    "end": "1579650"
  },
  {
    "text": "used if we had an error we'll still have it in there because as all the properties that kittens are and this is",
    "start": "1579650",
    "end": "1586280"
  },
  {
    "text": "kind of important because as I said you might know that change it like",
    "start": "1586280",
    "end": "1594280"
  },
  {
    "text": "comparisons in JavaScript they're always on reference so if I go ahead and say here",
    "start": "1594280",
    "end": "1609890"
  },
  {
    "text": "b1 equals equals I didn't even do treble a closed p2 it's still false right so I",
    "start": "1609890",
    "end": "1626270"
  },
  {
    "text": "might here have a properties of search results from search results they work the same way like objects if I don't",
    "start": "1626270",
    "end": "1633539"
  },
  {
    "text": "want to modify search results if for example when I start the search let's",
    "start": "1633539",
    "end": "1638789"
  },
  {
    "text": "say I don't want to clear until we actually commit the search whatever I might not want to modify all the",
    "start": "1638789",
    "end": "1646559"
  },
  {
    "text": "components that are affected by this because if I replace an object that's going to anything that relies on that",
    "start": "1646559",
    "end": "1654690"
  },
  {
    "text": "it's going to change because you think it's a different object so that's why people do thing is when they say okay",
    "start": "1654690",
    "end": "1660000"
  },
  {
    "text": "now if I want to modify only one element in an array then I have to modify the",
    "start": "1660000",
    "end": "1665460"
  },
  {
    "text": "whole array I have to like what let's say we have an update let's say we want",
    "start": "1665460",
    "end": "1670770"
  },
  {
    "text": "to update one of the results in this case what I might want to do is say",
    "start": "1670770",
    "end": "1676500"
  },
  {
    "text": "state dot search result dot map maybe",
    "start": "1676500",
    "end": "1684450"
  },
  {
    "text": "result",
    "start": "1684450",
    "end": "1687049"
  },
  {
    "text": "then I'll say maybe if result that ID or whatever you know is the thing I want I",
    "start": "1690970",
    "end": "1696779"
  },
  {
    "text": "return something different which might be action to be loot for example if if",
    "start": "1696779",
    "end": "1703299"
  },
  {
    "text": "the action was all about updating the",
    "start": "1703299",
    "end": "1708580"
  },
  {
    "text": "lot otherwise I'll just return result",
    "start": "1708580",
    "end": "1713999"
  },
  {
    "text": "and you will see this pattern a lot in indirect applications because that's",
    "start": "1713999",
    "end": "1724450"
  },
  {
    "text": "embarrassing so a lot of people would do this thing",
    "start": "1724450",
    "end": "1733989"
  },
  {
    "text": "for one reason because if I modified one element in their race and I want the component that has the whole array the",
    "start": "1733989",
    "end": "1740409"
  },
  {
    "text": "whole list to know that there was a modification and map would create a new array so that will make it know that it",
    "start": "1740409",
    "end": "1747070"
  },
  {
    "text": "is a new one but if I have a component for each search result I don't want the components for the executive for the",
    "start": "1747070",
    "end": "1753009"
  },
  {
    "text": "existing results to to say sorry two things as I change it even though they",
    "start": "1753009",
    "end": "1758139"
  },
  {
    "text": "didn't that's why I try to make sure I return the same reference to so that the",
    "start": "1758139",
    "end": "1767229"
  },
  {
    "text": "components will check by reference and it'll be good nothing changed it except for the ones that I want to be change it and this is",
    "start": "1767229",
    "end": "1774519"
  },
  {
    "text": "one thing you'd see in most indirect applications and that's why I I go again",
    "start": "1774519",
    "end": "1785830"
  },
  {
    "text": "and say the point of in jerax or",
    "start": "1785830",
    "end": "1791019"
  },
  {
    "text": "reduction general is that you have an extractor you have one specific way to do things everywhere but because we're",
    "start": "1791019",
    "end": "1800259"
  },
  {
    "text": "talking about search and we're talking about doing actions that would involve",
    "start": "1800259",
    "end": "1809609"
  },
  {
    "text": "as extra close",
    "start": "1809609",
    "end": "1813269"
  },
  {
    "text": "let's see how you would do effects and what are effects at all first thing if I",
    "start": "1815620",
    "end": "1825200"
  },
  {
    "text": "want an effect then I want to implement another beef one thing to like or not in",
    "start": "1825200",
    "end": "1831920"
  },
  {
    "text": "angular is they really really really",
    "start": "1831920",
    "end": "1841090"
  },
  {
    "text": "love splitting everything into modules even if they're interconnected didn't you kind of have to use them together",
    "start": "1841090",
    "end": "1847160"
  },
  {
    "text": "and stuff like that and injure X is no exception to that so we have a much",
    "start": "1847160",
    "end": "1853840"
  },
  {
    "text": "longer app module in here what I want to",
    "start": "1853840",
    "end": "1858950"
  },
  {
    "text": "highlight is we have the store module it's not much different from what we saw",
    "start": "1858950",
    "end": "1867740"
  },
  {
    "text": "before we have two values we passed them",
    "start": "1867740",
    "end": "1873380"
  },
  {
    "text": "one for them is the route and we'll talk about that if we have time and then we",
    "start": "1873380",
    "end": "1880250"
  },
  {
    "text": "have another effect module which is just how to do the effect which is again eyetality for doing a synchronous",
    "start": "1880250",
    "end": "1889100"
  },
  {
    "text": "requests so we will go and see how to implement that next while we are here",
    "start": "1889100",
    "end": "1897190"
  },
  {
    "text": "there's also a very nice thing in here let me do if I can very very quickly",
    "start": "1897190",
    "end": "1907990"
  },
  {
    "text": "so what this router thing doesn't it's a",
    "start": "1917380",
    "end": "1922940"
  },
  {
    "text": "bit interesting because when Ange Oryx came originally she created their own router room they wanted the router to",
    "start": "1922940",
    "end": "1928730"
  },
  {
    "text": "create actions so that you can also change your state based on route changes and stuff like that and then angular",
    "start": "1928730",
    "end": "1934760"
  },
  {
    "text": "were like come on we change the trousers a lot already why don't we combine efforts and we just use the one router",
    "start": "1934760",
    "end": "1942230"
  },
  {
    "text": "and pretty much what was meant for indirect became what the router we have today and it went through a lot of",
    "start": "1942230",
    "end": "1948049"
  },
  {
    "text": "revisions and improvements ever since but then they needed to do the same",
    "start": "1948049",
    "end": "1954080"
  },
  {
    "text": "thing and that's why we have this instead of your extra router or injuries to router whatever they call it",
    "start": "1954080",
    "end": "1961419"
  },
  {
    "text": "still connecting router and",
    "start": "1961419",
    "end": "1969370"
  },
  {
    "text": "nbx Angie who you knows what was nbx",
    "start": "1976940",
    "end": "1982658"
  },
  {
    "text": "it's an awesome tool I keep telling people about all the time it's not a new one anybody knows what mbx okay what",
    "start": "1982749",
    "end": "1992659"
  },
  {
    "text": "what version of mbm do we use okay what",
    "start": "1992659",
    "end": "1999889"
  },
  {
    "text": "version of note two people use somebody's using Tim recent stuff yeah",
    "start": "1999889",
    "end": "2009669"
  },
  {
    "text": "yeah have you ever thought about the version of know that you're using is that you're using you know it's totally",
    "start": "2009669",
    "end": "2015789"
  },
  {
    "text": "fine to stop think about it but not",
    "start": "2015789",
    "end": "2022659"
  },
  {
    "text": "entirely on topic but I like to talk about it a lot and very quickly MDX",
    "start": "2022659",
    "end": "2030309"
  },
  {
    "text": "allows you to do two things use a globe",
    "start": "2030309",
    "end": "2035830"
  },
  {
    "text": "a tool that you normally would use globally but without global install so",
    "start": "2035830",
    "end": "2041229"
  },
  {
    "text": "quite often if I play with angular CLI instead of ng I'd say angular / CLI and",
    "start": "2041229",
    "end": "2047049"
  },
  {
    "text": "then I might do it next because I like to play was a 7.0 Peter as I knew my app",
    "start": "2047049",
    "end": "2055108"
  },
  {
    "text": "that lets just like mbm installed AG",
    "start": "2055109",
    "end": "2061169"
  },
  {
    "text": "angular CLI next and then in G new whatever all the time because I don't",
    "start": "2061169",
    "end": "2067839"
  },
  {
    "text": "like to keep being worried about the latest version of my app however if you",
    "start": "2067839",
    "end": "2074169"
  },
  {
    "text": "run this inside an app that already has",
    "start": "2074169",
    "end": "2079240"
  },
  {
    "text": "a global that already has a globally installed package instead of having to",
    "start": "2079240",
    "end": "2085000"
  },
  {
    "text": "call the whole package name you can call whatever binary schools so we know that",
    "start": "2085000",
    "end": "2091710"
  },
  {
    "text": "angular CLI does it like closets F and G and it will just detect that in my node",
    "start": "2091710",
    "end": "2100359"
  },
  {
    "text": "modules in my bin folder the reason ng in there and just use that",
    "start": "2100359",
    "end": "2108010"
  },
  {
    "text": "which is pretty cool back on topic hopefully this one will work so the one",
    "start": "2108010",
    "end": "2126940"
  },
  {
    "text": "thing I want to talk about and show and Curtis didn't get to show before is this",
    "start": "2126940",
    "end": "2133660"
  },
  {
    "text": "thing called reductive tools you connect",
    "start": "2133660",
    "end": "2140290"
  },
  {
    "text": "to it by saying you know Stewart dev tools module just another module and you",
    "start": "2140290",
    "end": "2146680"
  },
  {
    "text": "tell it if it is how much data it pulls from everything and now you look at",
    "start": "2146680",
    "end": "2151869"
  },
  {
    "text": "these these are the actions so if I look",
    "start": "2151869",
    "end": "2158800"
  },
  {
    "text": "here it's just an object which has a type nothing special and this is the",
    "start": "2158800",
    "end": "2163900"
  },
  {
    "text": "first thing that ever happens and it",
    "start": "2163900",
    "end": "2169600"
  },
  {
    "text": "shows you what what state you have so here I have my reducer and that was kind of maybe the example didn't have the",
    "start": "2169600",
    "end": "2177010"
  },
  {
    "text": "best name because this is really a property name mushy they shouldn't have called the diffusor don't do that but it",
    "start": "2177010",
    "end": "2183550"
  },
  {
    "text": "just shows that you might be thinking because I'm giving it a reducer this is",
    "start": "2183550",
    "end": "2189369"
  },
  {
    "text": "a reducer but it really is just a property name like a counter like whatever and of course it can be complex",
    "start": "2189369",
    "end": "2194619"
  },
  {
    "text": "property like we're seeing in here now",
    "start": "2194619",
    "end": "2202109"
  },
  {
    "text": "the interesting thing about this is sometimes I do something you know like okay this action I dispatch it this",
    "start": "2204500",
    "end": "2213900"
  },
  {
    "text": "action which just means make redux orange or eggs do its thing on it and call the reducers and get me the data",
    "start": "2213900",
    "end": "2221040"
  },
  {
    "text": "and they selected to be updated and all this cancer so oh why did that feel",
    "start": "2221040",
    "end": "2227490"
  },
  {
    "text": "changed why what what happened that caused that change in more often than",
    "start": "2227490",
    "end": "2233130"
  },
  {
    "text": "not like by default in it tells you only",
    "start": "2233130",
    "end": "2238250"
  },
  {
    "text": "what fields changed which is sometimes useful but also more often than not I",
    "start": "2238250",
    "end": "2247589"
  },
  {
    "text": "find myself wanting to just go to the state and simply check once the whole",
    "start": "2247589",
    "end": "2258270"
  },
  {
    "text": "state is like and again it's brilliant sir here said it's just a thing it's an",
    "start": "2258270",
    "end": "2265559"
  },
  {
    "text": "object for the whole state and that's the whole thing is in your application this is going to grow a lot so here we",
    "start": "2265559",
    "end": "2271740"
  },
  {
    "text": "have one thing for the router and just add it by simply the router connecting",
    "start": "2271740",
    "end": "2281849"
  },
  {
    "text": "module linear is just tell it okay what property to put the route information in",
    "start": "2281849",
    "end": "2287839"
  },
  {
    "text": "so I said my route to do sir which I shouldn't have caught that yes that's",
    "start": "2287839",
    "end": "2296700"
  },
  {
    "text": "what you get there and then it gives you all this information so we can act on it",
    "start": "2296700",
    "end": "2303740"
  },
  {
    "text": "but in in your application you might have like multiple taps in the UI for",
    "start": "2303740",
    "end": "2309150"
  },
  {
    "text": "real ambolyn that's literally the projects that I'm working on except was",
    "start": "2309150",
    "end": "2314730"
  },
  {
    "text": "react not was the same idea you have different tabs each tab is like we might",
    "start": "2314730",
    "end": "2322020"
  },
  {
    "text": "have products orders or hotels and flies for example if you are booking website",
    "start": "2322020",
    "end": "2327780"
  },
  {
    "text": "whatever and maybe completely different teams might be already working on that and because each of them",
    "start": "2327780",
    "end": "2336700"
  },
  {
    "text": "would have their own like namespace if you main in in the station's they all",
    "start": "2336700",
    "end": "2342890"
  },
  {
    "text": "deal with it but sometimes I need Church things I might need for example username",
    "start": "2342890",
    "end": "2348650"
  },
  {
    "text": "or some access token whatever there that would also be in just a shared one here",
    "start": "2348650",
    "end": "2355759"
  },
  {
    "text": "and that that'll simply works now talking about authentication talking",
    "start": "2355759",
    "end": "2363170"
  },
  {
    "text": "about HTTP and stuff what what is this effect saying about like crazy thing",
    "start": "2363170",
    "end": "2368299"
  },
  {
    "text": "let's just have a look so it fix our",
    "start": "2368299",
    "end": "2378109"
  },
  {
    "text": "services there's just services you see you can take this injectable",
    "start": "2378109",
    "end": "2385660"
  },
  {
    "text": "you can and just like any other service you can inject other services into it so",
    "start": "2385660",
    "end": "2390710"
  },
  {
    "text": "in here the constructor we see that we inject this product service there to be",
    "start": "2390710",
    "end": "2398240"
  },
  {
    "text": "able to do certain stuff this is where we implement the HTT because one nice thing about doing indirect you separate",
    "start": "2398240",
    "end": "2405789"
  },
  {
    "text": "the logic for for example calling HTTP and stuff like that and maybe some rules",
    "start": "2405789",
    "end": "2411259"
  },
  {
    "text": "on the data from what happens after I get this data which is controlled by the",
    "start": "2411259",
    "end": "2417259"
  },
  {
    "text": "effect so similar to the state like when",
    "start": "2417259",
    "end": "2422329"
  },
  {
    "text": "we talked about here in in the Select with a selector just gives you an",
    "start": "2422329",
    "end": "2430039"
  },
  {
    "text": "observable of the part of the state that you want here you get an observable this",
    "start": "2430039",
    "end": "2437420"
  },
  {
    "text": "actions it's just an observable of all the actions that will be triggered in",
    "start": "2437420",
    "end": "2442849"
  },
  {
    "text": "the application and then this means for example let's say",
    "start": "2442849",
    "end": "2448960"
  },
  {
    "text": "we do the search you can create your own",
    "start": "2451770",
    "end": "2457799"
  },
  {
    "text": "property and no one will will will be calling this property directly you will",
    "start": "2457799",
    "end": "2463990"
  },
  {
    "text": "not be coming listening your application directly in directs will be calling it for you just like it calls the reducers",
    "start": "2463990",
    "end": "2470020"
  },
  {
    "text": "and the way indirect knows that it needs to call it for you is because he put this effect on it okay and then you can",
    "start": "2470020",
    "end": "2484930"
  },
  {
    "text": "say okay I want some actions and when",
    "start": "2484930",
    "end": "2490420"
  },
  {
    "text": "these actions are dispatch it I want to do something else so for example what",
    "start": "2490420",
    "end": "2497109"
  },
  {
    "text": "we're looking at here is something that says when you start search I want to",
    "start": "2497109",
    "end": "2503470"
  },
  {
    "text": "call the HTTP request and if the request is success I want to dispatch this",
    "start": "2503470",
    "end": "2509260"
  },
  {
    "text": "action otherwise I want to stretch failure action let's look at how this done who here is brave enough to say",
    "start": "2509260",
    "end": "2518049"
  },
  {
    "text": "they don't know the vibe thing how many okay so here's a simple",
    "start": "2518049",
    "end": "2527890"
  },
  {
    "text": "one it's the old are exist your takes your observable and call dot map on it",
    "start": "2527890",
    "end": "2534880"
  },
  {
    "text": "call the switch map etc but the only problem was that was you would have to",
    "start": "2534880",
    "end": "2541059"
  },
  {
    "text": "import its operators separately and they magically appear on the on the object or",
    "start": "2541059",
    "end": "2548559"
  },
  {
    "text": "on the prototype but what this meant was if you if you never import dot map but",
    "start": "2548559",
    "end": "2558520"
  },
  {
    "text": "then some other library imports dot map for you you just use it you just use it",
    "start": "2558520",
    "end": "2563710"
  },
  {
    "text": "directly because it suddenly became available on the observable prototype but then if a newer version of the RB",
    "start": "2563710",
    "end": "2569980"
  },
  {
    "text": "does not use the dot map and then you your app starts breaking you're like why was this map working before and now it's",
    "start": "2569980",
    "end": "2576039"
  },
  {
    "text": "not so this offers this by separating all of",
    "start": "2576039",
    "end": "2582329"
  },
  {
    "text": "livable to be their own functions not on the observable prototype but then they needed some way to call them right and",
    "start": "2582329",
    "end": "2590239"
  },
  {
    "text": "that's this pipe thing in there it's simply a way is that what's going to do",
    "start": "2590239",
    "end": "2597059"
  },
  {
    "text": "it's going to take the observable value from sale cause the first observable",
    "start": "2597059",
    "end": "2602369"
  },
  {
    "text": "take the result of that cause a second observable take the result of that sorry I'll pray to and cause the set",
    "start": "2602369",
    "end": "2610079"
  },
  {
    "text": "operator give it the the new observable and all of this so actually every single",
    "start": "2610079",
    "end": "2618179"
  },
  {
    "text": "one of these is just a function that takes an observable I can prove it very quickly",
    "start": "2618179",
    "end": "2624349"
  },
  {
    "text": "if I look at this X it's just an",
    "start": "2631450",
    "end": "2636970"
  },
  {
    "text": "observable let just a function that takes an observable so injure X takes",
    "start": "2636970",
    "end": "2642609"
  },
  {
    "text": "advantage of that now we say just like reducers this will get called for every",
    "start": "2642609",
    "end": "2648160"
  },
  {
    "text": "single action so we want to short cut things quickly if you are not interested in this action and that's why they",
    "start": "2648160",
    "end": "2656230"
  },
  {
    "text": "provide it as this nice of type operator in there which is just a shortcut for",
    "start": "2656230",
    "end": "2664079"
  },
  {
    "text": "filter that this type equals this type that we give it here we're saying okay",
    "start": "2664079",
    "end": "2675039"
  },
  {
    "text": "yeah you know what the only part we're interested in in this action is the bay load which is like the search term so",
    "start": "2675039",
    "end": "2680289"
  },
  {
    "text": "just get that very quickly and because the payload is an object in",
    "start": "2680289",
    "end": "2685990"
  },
  {
    "text": "there we're using a very nice feature and typescript again tab script which is",
    "start": "2685990",
    "end": "2693460"
  },
  {
    "text": "the deconstruction which means if I have I could have just called this payload",
    "start": "2693460",
    "end": "2702430"
  },
  {
    "text": "and then say payload payload payload the",
    "start": "2702430",
    "end": "2707740"
  },
  {
    "text": "search query but instead of that because I know what they lose just an object",
    "start": "2707740",
    "end": "2715170"
  },
  {
    "text": "that has a search query I can just do that directly which is beautiful and",
    "start": "2715170",
    "end": "2726420"
  },
  {
    "text": "there is actually a fair bit of argument whether you want to use which map or not",
    "start": "2726420",
    "end": "2731500"
  },
  {
    "text": "in there I'll get to that once I finish cleaning but here was just you know",
    "start": "2731500",
    "end": "2741430"
  },
  {
    "text": "calling get products which you can simply very easily guess what it does",
    "start": "2741430",
    "end": "2746710"
  },
  {
    "text": "even without looking it simply well ignore rings around them of stuff it",
    "start": "2746710",
    "end": "2752140"
  },
  {
    "text": "just simulates calling HTTP calls so for our burbles just think of it as HTTP",
    "start": "2752140",
    "end": "2759039"
  },
  {
    "text": "call and it returns something in the game with our ideas they decided to move",
    "start": "2759039",
    "end": "2765760"
  },
  {
    "text": "everything to a pipe so now this thing like thank you fleece pipe as let it's",
    "start": "2765760",
    "end": "2774070"
  },
  {
    "text": "part of if this time for for this observable not for that observable so",
    "start": "2774070",
    "end": "2780609"
  },
  {
    "text": "say okay yep you're done you got the result let's return switch web just returns",
    "start": "2780609",
    "end": "2788410"
  },
  {
    "text": "unobservable just like map but instead of returning this evaluation observable",
    "start": "2788410",
    "end": "2794369"
  },
  {
    "text": "so pipe like what we're doing is just like return it just let it just a nice",
    "start": "2794369",
    "end": "2808030"
  },
  {
    "text": "pop script shortcuts they were saying return this observable which has a map which means from this super will return",
    "start": "2808030",
    "end": "2814420"
  },
  {
    "text": "this value and then it does that so here we're just returning an action of",
    "start": "2814420",
    "end": "2821080"
  },
  {
    "text": "success otherwise return action catch error is just like dot catch in the old",
    "start": "2821080",
    "end": "2828790"
  },
  {
    "text": "are exist but because now it's own thing not a property on on an object it",
    "start": "2828790",
    "end": "2834580"
  },
  {
    "text": "couldn't be just catch because it would then clash with the JavaScript keyword",
    "start": "2834580",
    "end": "2841350"
  },
  {
    "text": "so here we just say catch error do this and now look at this whole thing as a",
    "start": "2841350",
    "end": "2849430"
  },
  {
    "text": "pipe input output input all actions",
    "start": "2849430",
    "end": "2854730"
  },
  {
    "text": "output is actions that ng RX is going to",
    "start": "2854730",
    "end": "2860350"
  },
  {
    "text": "dispatch for you so you notice here we are returning the action we're not dispatching it and just because in",
    "start": "2860350",
    "end": "2865720"
  },
  {
    "text": "inside the effect we interact",
    "start": "2865720",
    "end": "2871420"
  },
  {
    "text": "automatically understand that if everything you return it will dispatch it for you here is a very quick trick",
    "start": "2871420",
    "end": "2879670"
  },
  {
    "text": "that you can also benefit from sometimes some people prefer if the data will",
    "start": "2879670",
    "end": "2886510"
  },
  {
    "text": "effect two different things and and they're not they're coming the data they refer to for example I might want to",
    "start": "2886510",
    "end": "2894940"
  },
  {
    "text": "close the Bob up and update like if I have a form that is",
    "start": "2894940",
    "end": "2901660"
  },
  {
    "text": "it is in in a pop-up for editing something I might want to say okay",
    "start": "2901660",
    "end": "2907950"
  },
  {
    "text": "product updated successfully and I might also say model clothes and it might be",
    "start": "2907950",
    "end": "2914380"
  },
  {
    "text": "to two different actions and the way you do this it's very simple once once you",
    "start": "2914380",
    "end": "2919420"
  },
  {
    "text": "know it you simply return an array of",
    "start": "2919420",
    "end": "2924820"
  },
  {
    "text": "actions and in jaracz is smart enough to notice that what you're returning is not",
    "start": "2924820",
    "end": "2930940"
  },
  {
    "text": "just an action it is an array of action and it's smart enough to dispatch each one of them for you",
    "start": "2930940",
    "end": "2937650"
  },
  {
    "text": "now one last and interesting usage of ng",
    "start": "2937650",
    "end": "2947160"
  },
  {
    "text": "RX effects is that you can also use it for extra debugging typically you don't",
    "start": "2947160",
    "end": "2954850"
  },
  {
    "text": "need to do this because if you're setting up store dev tools you know that's already cool but sometimes you",
    "start": "2954850",
    "end": "2960940"
  },
  {
    "text": "might want to add an extra thing here there whatever so you can easily do this",
    "start": "2960940",
    "end": "2970690"
  },
  {
    "text": "by saying okay you know what I want to check I want to console.log certain",
    "start": "2970690",
    "end": "2977470"
  },
  {
    "text": "actions and the way you do this this tab function or operator for those who don't",
    "start": "2977470",
    "end": "2983440"
  },
  {
    "text": "know it this is just a new equivalent of what relatively new because I think rx",
    "start": "2983440",
    "end": "2988800"
  },
  {
    "text": "of do in the old one so you used to do I mean in our rxg s used to just say to do",
    "start": "2988800",
    "end": "2999220"
  },
  {
    "text": "if you want to do something that doesn't affects the data or doesn't return anything just you know in the middle",
    "start": "2999220",
    "end": "3004370"
  },
  {
    "text": "like the console log in there so now because do again conflict with now is",
    "start": "3004370",
    "end": "3010950"
  },
  {
    "text": "that it is by itself it clashes with the two in do-while JavaScript that's why they called something else we should",
    "start": "3010950",
    "end": "3017670"
  },
  {
    "text": "stop you're really really fun for names with",
    "start": "3017670",
    "end": "3027410"
  },
  {
    "text": "naming is hard certainly but the attempt",
    "start": "3027410",
    "end": "3032460"
  },
  {
    "text": "it also has heritage old stream related stuff and the last thing I wanted to",
    "start": "3032460",
    "end": "3042930"
  },
  {
    "text": "show in here or talk about was why switch maps which map simply means if I",
    "start": "3042930",
    "end": "3048089"
  },
  {
    "text": "have a new search ignore the old search and start a new stream of events to to",
    "start": "3048089",
    "end": "3059609"
  },
  {
    "text": "output and let less usually why use it used a lot and things like autocomplete",
    "start": "3059609",
    "end": "3065369"
  },
  {
    "text": "and assertions kind of thing where every new letter you don't care about the previous ones now how would you test",
    "start": "3065369",
    "end": "3077599"
  },
  {
    "text": "reducers if you want to there's just functions you simply give it the input",
    "start": "3077599",
    "end": "3082799"
  },
  {
    "text": "to and expect that out but how would you",
    "start": "3082799",
    "end": "3087289"
  },
  {
    "text": "test components like like this one for",
    "start": "3088910",
    "end": "3096480"
  },
  {
    "text": "example I'll show this very quickly but",
    "start": "3096480",
    "end": "3103619"
  },
  {
    "text": "with not with components themselves but with I lost my test project",
    "start": "3103619",
    "end": "3114349"
  },
  {
    "text": "this one yeah",
    "start": "3119970",
    "end": "3123950"
  },
  {
    "text": "so if I have a Kanban you you know you always use this configure testing module",
    "start": "3128380",
    "end": "3135339"
  },
  {
    "text": "and you give it all tests and stuff now",
    "start": "3135339",
    "end": "3142079"
  },
  {
    "text": "you can just use the same stuff same store module bars but simply you give it",
    "start": "3142079",
    "end": "3150309"
  },
  {
    "text": "whatever you want so here you might have at a reducer just for this component we",
    "start": "3150309",
    "end": "3155680"
  },
  {
    "text": "might have anything and then the dependency injection will just work for you the store rule will just work in",
    "start": "3155680",
    "end": "3161680"
  },
  {
    "text": "will get you the data just as as you want",
    "start": "3161680",
    "end": "3165720"
  },
  {
    "text": "the interesting bit is because you do dependency injection you can just get",
    "start": "3176789",
    "end": "3185470"
  },
  {
    "text": "the store yourself the same way you get any other dependency any other injected",
    "start": "3185470",
    "end": "3190900"
  },
  {
    "text": "dependency and can then simulate",
    "start": "3190900",
    "end": "3197910"
  },
  {
    "text": "dispatches that's very nice effects can",
    "start": "3197910",
    "end": "3203650"
  },
  {
    "text": "be a bit more interesting though",
    "start": "3203650",
    "end": "3207568"
  },
  {
    "text": "yeah",
    "start": "3220370",
    "end": "3223370"
  },
  {
    "text": "now you see how to test an effect because an effect on their liveable zein",
    "start": "3227570",
    "end": "3234150"
  },
  {
    "text": "deliverables is coming and going in how would I do that there's a very interesting saying in here which is to",
    "start": "3234150",
    "end": "3242340"
  },
  {
    "text": "start with we're doing the same usual thing we're saying okay we'll do the",
    "start": "3242340",
    "end": "3250470"
  },
  {
    "text": "testing module we don't even need the effects module we can just do the fix",
    "start": "3250470",
    "end": "3257280"
  },
  {
    "text": "directly but then there is another very nice functions that a fixed slash",
    "start": "3257280",
    "end": "3263970"
  },
  {
    "text": "testing gives us you know this is similar to routing slash testing HTTP slash testing in angular self which is",
    "start": "3263970",
    "end": "3272670"
  },
  {
    "text": "this provide mock actions well provide mock actions means is that you can have",
    "start": "3272670",
    "end": "3278760"
  },
  {
    "text": "your own observable you might for example choose to make that a subject so",
    "start": "3278760",
    "end": "3284580"
  },
  {
    "text": "that you would push that like push actions to it and then or you can simply",
    "start": "3284580",
    "end": "3290640"
  },
  {
    "text": "replace it with something else then this will be much simpler now I'll show you how to do this so we're saying every time we we give you a different",
    "start": "3290640",
    "end": "3300720"
  },
  {
    "text": "observable for this call all the effects and I'll show right now just in the",
    "start": "3300720",
    "end": "3308400"
  },
  {
    "text": "other thing we're doing in here is that because our effects depend on the service we're just smoking it was use",
    "start": "3308400",
    "end": "3315510"
  },
  {
    "text": "value and I'm using just in here so you can just just to the Fen is like just give it a mock objects that they don't",
    "start": "3315510",
    "end": "3321450"
  },
  {
    "text": "care about now there are two ways to",
    "start": "3321450",
    "end": "3328560"
  },
  {
    "text": "test this there is a by-the-book way and there is a it just makes more sense for",
    "start": "3328560",
    "end": "3335430"
  },
  {
    "text": "people like me anyway",
    "start": "3335430",
    "end": "3339859"
  },
  {
    "text": "if you ever checked something for rxjs",
    "start": "3340780",
    "end": "3345880"
  },
  {
    "text": "you all will do this nice mark signals",
    "start": "3345880",
    "end": "3351109"
  },
  {
    "text": "and marbles saying this how they",
    "start": "3351109",
    "end": "3356750"
  },
  {
    "text": "demonstrate all all actions and all state changes from observables where's",
    "start": "3356750",
    "end": "3366349"
  },
  {
    "text": "the effect is slightly different well sorry it's kind of the same because it's just a stream of observable of",
    "start": "3366349",
    "end": "3373339"
  },
  {
    "text": "observable values so some the indirect",
    "start": "3373339",
    "end": "3378440"
  },
  {
    "text": "team they created this libraries that allows you to test it similar way to the",
    "start": "3378440",
    "end": "3384290"
  },
  {
    "text": "marbles so you tell it was the marble diagrams that you expect and then this will just work so anybody knows hot and",
    "start": "3384290",
    "end": "3394910"
  },
  {
    "text": "cold observables this is about like you",
    "start": "3394910",
    "end": "3401030"
  },
  {
    "text": "know does observable directly Bush data or does it only Bush that I when you subscribe to it",
    "start": "3401030",
    "end": "3408490"
  },
  {
    "text": "so you were saying create and observable we're getting it from the marbles",
    "start": "3409540",
    "end": "3417589"
  },
  {
    "text": "library and we're saying okay now for",
    "start": "3417589",
    "end": "3425660"
  },
  {
    "text": "actions will create an observable that already image data directly doesn't wait",
    "start": "3425660",
    "end": "3430700"
  },
  {
    "text": "for anybody and this is the marble equivalent of like you know something happens this is like the red thing in",
    "start": "3430700",
    "end": "3438619"
  },
  {
    "text": "here but be and then we connect this a to a value so that you know start with",
    "start": "3438619",
    "end": "3445099"
  },
  {
    "text": "at user for example and then we say okay we expect that we will get the user and",
    "start": "3445099",
    "end": "3453549"
  },
  {
    "text": "and then we will get this outcome thingy which is just the response now what we",
    "start": "3453549",
    "end": "3459440"
  },
  {
    "text": "didn't there this is an example of adding an effects that just as users and you have a service that does actual HTTP",
    "start": "3459440",
    "end": "3465589"
  },
  {
    "text": "requests and that's why we're saying for the HTTP requests just returns this response thingy again it is just an",
    "start": "3465589",
    "end": "3473359"
  },
  {
    "text": "observables that will only amid data when we will subscribe to it and they subscribe to it from the switch map of the effect just like we didn't",
    "start": "3473359",
    "end": "3480890"
  },
  {
    "text": "search but so this this response is just",
    "start": "3480890",
    "end": "3487250"
  },
  {
    "text": "for the service but this outcome is what we want to get so we're saying after the",
    "start": "3487250",
    "end": "3492950"
  },
  {
    "text": "a the B should come and they were saying expect that to match it is observable",
    "start": "3492950",
    "end": "3499430"
  },
  {
    "text": "which is outcome now if you understand marbles",
    "start": "3499430",
    "end": "3504470"
  },
  {
    "text": "enough to draw this diagram and you understand it enough to come later to",
    "start": "3504470",
    "end": "3510440"
  },
  {
    "text": "three months later and read it and understand what the test does good for",
    "start": "3510440",
    "end": "3516470"
  },
  {
    "text": "you use this okay when I was writing",
    "start": "3516470",
    "end": "3521840"
  },
  {
    "text": "applications myself I found that I'm not too smart like or smart enough to understand this kind of thing so I'm",
    "start": "3521840",
    "end": "3529310"
  },
  {
    "text": "doing it in a slightly more complex way but just it's sorry I mean it has more",
    "start": "3529310",
    "end": "3536240"
  },
  {
    "text": "steps but it's easier for me to understand and that's how I rewrote this test that's how I would also kind of",
    "start": "3536240",
    "end": "3543920"
  },
  {
    "text": "recommend doing this so now we got the",
    "start": "3543920",
    "end": "3549890"
  },
  {
    "text": "user we created action for add users just like above and she knows us and we",
    "start": "3549890",
    "end": "3556100"
  },
  {
    "text": "know what our outcome I I still called it outcomes there I usually call it a my own test I call it expected because",
    "start": "3556100",
    "end": "3562250"
  },
  {
    "text": "that's what the testing libraries also call but yet I want it to be faithful to",
    "start": "3562250",
    "end": "3569540"
  },
  {
    "text": "the original implementation and then I said okay now for ideas are the same way",
    "start": "3569540",
    "end": "3575300"
  },
  {
    "text": "in there but instead of returning that response thing you just called whatever data I just said observable of user",
    "start": "3575300",
    "end": "3583910"
  },
  {
    "text": "again this is just like observable off but now they also don't want to put",
    "start": "3583910",
    "end": "3590120"
  },
  {
    "text": "anything on even the observable as a static property and just separate it all",
    "start": "3590120",
    "end": "3596500"
  },
  {
    "text": "and then I say okay the effect that I",
    "start": "3596720",
    "end": "3601980"
  },
  {
    "text": "want to test in here which is adduser I subscribe to its I'm so which means I'm",
    "start": "3601980",
    "end": "3607830"
  },
  {
    "text": "expecting that something will happen how do I say I'm expecting or something will happen by waiting for it if I have this",
    "start": "3607830",
    "end": "3613950"
  },
  {
    "text": "dumb thing to be called at the end now",
    "start": "3613950",
    "end": "3619800"
  },
  {
    "text": "I'm saying when you get results expect that the type will be the time I'm",
    "start": "3619800",
    "end": "3626370"
  },
  {
    "text": "expecting and the payload will be the Bailey's I'm expecting in my real",
    "start": "3626370",
    "end": "3633870"
  },
  {
    "text": "project this eventually ends up into some utilities at just you know checks",
    "start": "3633870",
    "end": "3639080"
  },
  {
    "text": "the objects and there's also expect",
    "start": "3639080",
    "end": "3647390"
  },
  {
    "text": "actual to like depending on your library",
    "start": "3647390",
    "end": "3654930"
  },
  {
    "text": "you you have things like too much object and then you give it the object that has",
    "start": "3654930",
    "end": "3660810"
  },
  {
    "text": "the properties and it will automatically do it I could have done that but I",
    "start": "3660810",
    "end": "3669360"
  },
  {
    "text": "wanted to show you like what idea in general like and then once I give the",
    "start": "3669360",
    "end": "3677880"
  },
  {
    "text": "actions because so the test really",
    "start": "3677880",
    "end": "3683400"
  },
  {
    "text": "starts here so I give the actions provide mock actions gives it to the",
    "start": "3683400",
    "end": "3689520"
  },
  {
    "text": "effect and then this effect sorry and then this effect gets cold",
    "start": "3689520",
    "end": "3697910"
  },
  {
    "text": "unsubscribe works and I check the data is it Rogers out that's one way so that",
    "start": "3697910",
    "end": "3706920"
  },
  {
    "text": "was something I wanted to show I think",
    "start": "3706920",
    "end": "3713010"
  },
  {
    "text": "or kind of on time the last thing that you might be interested in knowing how",
    "start": "3713010",
    "end": "3722100"
  },
  {
    "text": "to do it we already talked about the state and everything is why would I use your ex as I said now",
    "start": "3722100",
    "end": "3732000"
  },
  {
    "text": "everything in your code becomes I'm going to dispatch this I'm going to select the data I'm going to write an",
    "start": "3732000",
    "end": "3740070"
  },
  {
    "text": "effect in the service it gives you structure for your application and the structure that is pretty popular so new",
    "start": "3740070",
    "end": "3748830"
  },
  {
    "text": "developers will be able to join and understand and if they don't understand to be able to Google to just enjoy eggs",
    "start": "3748830",
    "end": "3755130"
  },
  {
    "text": "but redux and understand how it works",
    "start": "3755130",
    "end": "3760519"
  },
  {
    "text": "now I kind of chose to go with crude",
    "start": "3761390",
    "end": "3768540"
  },
  {
    "text": "instead of going through all the examples and the slides but I think we",
    "start": "3768540",
    "end": "3775950"
  },
  {
    "text": "really talked about different things but there is even more that I was planning",
    "start": "3775950",
    "end": "3781050"
  },
  {
    "text": "to talk about but you have the best time sorry but there's another thing called entity which is just some utilities that",
    "start": "3781050",
    "end": "3789300"
  },
  {
    "text": "automatically give you things like select single items get all the data by",
    "start": "3789300",
    "end": "3795090"
  },
  {
    "text": "ID things like that it's relatively new or maybe end of last year but it's not",
    "start": "3795090",
    "end": "3805140"
  },
  {
    "text": "that popular unless you're using lucky grid with that an idiot and stuff like that that should be useful as well so",
    "start": "3805140",
    "end": "3813000"
  },
  {
    "text": "that was that if you have any questions you must stay and have talk about it",
    "start": "3813000",
    "end": "3819990"
  },
  {
    "text": "otherwise I think my fault stilling means that it's",
    "start": "3819990",
    "end": "3827270"
  }
]