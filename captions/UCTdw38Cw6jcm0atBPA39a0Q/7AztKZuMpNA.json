[
  {
    "start": "0",
    "end": "63000"
  },
  {
    "text": "everybody thanks very much for coming along I'm Ben I work for shine solutions",
    "start": "5760",
    "end": "11139"
  },
  {
    "text": "were a consultancy building software for helping enterprises build software the",
    "start": "11139",
    "end": "17050"
  },
  {
    "text": "usual shtick so who here is a react developer or was worked with react okay",
    "start": "17050",
    "end": "24760"
  },
  {
    "text": "has anyone done any work with react native okay this is interesting and when",
    "start": "24760",
    "end": "29800"
  },
  {
    "text": "react native first came out a lot of our clients got really really excited about the the prospects of a possibility of",
    "start": "29800",
    "end": "38320"
  },
  {
    "text": "sharing code between native apps and web apps and one of our clients sports but",
    "start": "38320",
    "end": "43570"
  },
  {
    "text": "actually had a legitimate reason to be excited and for the last couple of years",
    "start": "43570",
    "end": "48700"
  },
  {
    "text": "really easily took a couple of years now I've sort of had the privilege of working on a project internally they're",
    "start": "48700",
    "end": "54570"
  },
  {
    "text": "using react and react native I'm just going to kind of talk about some of our experiences that we've had out there and",
    "start": "54570",
    "end": "62860"
  },
  {
    "text": "the way in which we're going to do this is I'll start just by giving you a quick overview of the apps that they've sort",
    "start": "62860",
    "end": "69670"
  },
  {
    "start": "63000",
    "end": "130000"
  },
  {
    "text": "of re platformed and then i'm going to get into what's the same when what code is shared between the two platforms I'm",
    "start": "69670",
    "end": "76930"
  },
  {
    "text": "going to go pretty deep we're gonna get down to some kind of the source code level then I'm kind of get into what's",
    "start": "76930",
    "end": "83049"
  },
  {
    "text": "different you know what's what's what where do we choose to draw the line when it came to reuse and that's going to",
    "start": "83049",
    "end": "90580"
  },
  {
    "text": "cover things like styling and animations and even stuff that affects the relation user experience like um transitions and",
    "start": "90580",
    "end": "97479"
  },
  {
    "text": "things like that and then kind of again will be pretty down and dirty then but",
    "start": "97479",
    "end": "102850"
  },
  {
    "text": "then will come up for at the end I'm actually going to kind of do a more high-level overview of one thing that lots of people neglect to think about",
    "start": "102850",
    "end": "110950"
  },
  {
    "text": "very much when they start projects like this and that is what's kind of the developer experience going to be for a team because you know they have like the",
    "start": "110950",
    "end": "117340"
  },
  {
    "text": "least 25 devs working on this project at the moment and getting them all up to speed with this complex stack is is not",
    "start": "117340",
    "end": "123909"
  },
  {
    "text": "a trivial thing and having them all pointing sort of in the right direction you know it's not a trivial thing all",
    "start": "123909",
    "end": "130119"
  },
  {
    "start": "130000",
    "end": "400000"
  },
  {
    "text": "right so let's talk about the apps so if you don't know them Sportsbet are basically like an online bookie so if",
    "start": "130119",
    "end": "138220"
  },
  {
    "text": "you want our place it's on horses or dogs or trots or",
    "start": "138220",
    "end": "143430"
  },
  {
    "text": "sports or politics maybe you I - flies crawling up a wall",
    "start": "143430",
    "end": "148990"
  },
  {
    "text": "they've probably got a market for it and it's all online so they have a native",
    "start": "148990",
    "end": "155620"
  },
  {
    "text": "iOS app that's built with objective-c and a lot of their revenue actually comes through there through the native",
    "start": "155620",
    "end": "161320"
  },
  {
    "text": "app but they're getting a bit they're going to be tired of this codebase and Objective C in particular they've",
    "start": "161320",
    "end": "168310"
  },
  {
    "text": "experimented with Swift but the transition from Swift Tudors for three was really painful for them and they",
    "start": "168310",
    "end": "174640"
  },
  {
    "text": "were not sure that it was a good platform to continue with supports but",
    "start": "174640",
    "end": "179650"
  },
  {
    "text": "also have a mobile web app book using javascript and it uses backbone jeaious",
    "start": "179650",
    "end": "185260"
  },
  {
    "text": "and they also have a desktop site and that's written with um tickle so does",
    "start": "185260",
    "end": "192580"
  },
  {
    "text": "anyone here ever develop with tickle does anyone here know what tickle is",
    "start": "192580",
    "end": "197760"
  },
  {
    "text": "well exactly that was a problem it's they know we could really work on it",
    "start": "197760",
    "end": "203170"
  },
  {
    "text": "anymore because there wasn't really that many people around with the skills to to",
    "start": "203170",
    "end": "208180"
  },
  {
    "text": "build and then also this is a actually these are really complex apps like of all the apps that I've worked on for",
    "start": "208180",
    "end": "214360"
  },
  {
    "text": "different clients this is probably one of the most our different customers this is probably one of the most sophisticated client-side apps I've ever",
    "start": "214360",
    "end": "221710"
  },
  {
    "text": "worked on because there's lots a really complex business logic relating to bets",
    "start": "221710",
    "end": "227020"
  },
  {
    "text": "and bit placement and bit combinations and all sorts of different permutations and they were getting sick of having to",
    "start": "227020",
    "end": "233260"
  },
  {
    "text": "reemployment new features across all of these platforms every time they wanted to add something you know on the plus",
    "start": "233260",
    "end": "240220"
  },
  {
    "text": "side they did have feature teams so they didn't have teams siloed by platform which was great the head feature teams",
    "start": "240220",
    "end": "245380"
  },
  {
    "text": "but still each feature team had to have an iOS developer who would be working exclusively with objective-c and would",
    "start": "245380",
    "end": "251170"
  },
  {
    "text": "have a couple of web developers you know who will be working exclusively with JavaScript and no one could really do desktop anymore anyway everything was",
    "start": "251170",
    "end": "257200"
  },
  {
    "text": "kind of grinding to a halt on that front because almost nobody could work with it so they got sick of having to write the",
    "start": "257200",
    "end": "263530"
  },
  {
    "text": "same code over and over again they got sick of having to implement features in parallel and so reacting react native",
    "start": "263530",
    "end": "271000"
  },
  {
    "text": "the prospect to be able to share this complex business logic between clients while still being",
    "start": "271000",
    "end": "277120"
  },
  {
    "text": "able to have a good web experience and it's actually good native iOS experience was really compelling to them and so",
    "start": "277120",
    "end": "284110"
  },
  {
    "text": "they took a run at it and overall I'd say the experience has been pretty good so far so in production now we have",
    "start": "284110",
    "end": "292710"
  },
  {
    "text": "recognized of components components embedded inside the current iOS app we have react native react components for",
    "start": "292710",
    "end": "300010"
  },
  {
    "text": "this project embedded inside the current mobile web app we have a full responsive web site that is at new dot Sportsbet",
    "start": "300010",
    "end": "306610"
  },
  {
    "text": "comm today you that we're just owning the kinks out front and soon they're going to switch that across to the new domain at dub dub dub that's 48 com2",
    "start": "306610",
    "end": "313450"
  },
  {
    "text": "value and they're working on getting at the full iOS app shifted across to react",
    "start": "313450",
    "end": "318610"
  },
  {
    "text": "native right now yeah it's going quite well for them so instead of",
    "start": "318610",
    "end": "323620"
  },
  {
    "text": "demonstrating how much code they've been able to reuse and sort of the patterns that we've used to do it I'm kind of",
    "start": "323620",
    "end": "330100"
  },
  {
    "text": "uses example of this thing that they have or screen they have called multi builder and multi builders kind of this",
    "start": "330100",
    "end": "336060"
  },
  {
    "text": "tool that has that allows people to assemble combinations of bets on sports so here's the kind of the wreck the web",
    "start": "336060",
    "end": "342070"
  },
  {
    "text": "version on the left and so I'm just kind of this is soccer matches and I'm just selecting winners to play some place my",
    "start": "342070",
    "end": "350080"
  },
  {
    "text": "little bets and you can see the odds being recalculated down here so you know right now for every dollar I put in if",
    "start": "350080",
    "end": "355660"
  },
  {
    "text": "all of those teams won I'm gonna get almost two thousand dollars back for each dollar I put in there's a little",
    "start": "355660",
    "end": "361300"
  },
  {
    "text": "bit of animation there and transitions you know it's not too bad that's the web and then here's iOS running as well now",
    "start": "361300",
    "end": "368260"
  },
  {
    "text": "this is an older version of the ice up so the animations aren't running at this point but it's the same kind of deal",
    "start": "368260",
    "end": "374050"
  },
  {
    "text": "really and the cool part about this is that all of the business logic behind",
    "start": "374050",
    "end": "379630"
  },
  {
    "text": "this is the same and it's all built actually from one project but this is",
    "start": "379630",
    "end": "386170"
  },
  {
    "text": "this is a native iOS app it's not like a web viewer or anything like that in running and on an iPhone it's actually a",
    "start": "386170",
    "end": "392530"
  },
  {
    "text": "native iOS app with native iOS components and as a consequence you know good well performing animations and so",
    "start": "392530",
    "end": "398740"
  },
  {
    "text": "on and that is of course a web app so if we were to break it down almost half of the code is common and",
    "start": "398740",
    "end": "407050"
  },
  {
    "start": "400000",
    "end": "415000"
  },
  {
    "text": "I'm gonna now kind of describe to you how we achieve that and this sort of",
    "start": "407050",
    "end": "412730"
  },
  {
    "text": "pattern has scaled out to the rest of the app but we use multi builders as an example of you know what's the same so",
    "start": "412730",
    "end": "420710"
  },
  {
    "text": "has anyone here okay so the way the way in in summary when I talk about business",
    "start": "420710",
    "end": "426140"
  },
  {
    "text": "logic being common I mean we're using redux so people here use Redux at",
    "start": "426140",
    "end": "431180"
  },
  {
    "text": "offering me with their concepts so in in redux we use all the same action creators and we use all of the same",
    "start": "431180",
    "end": "437120"
  },
  {
    "text": "reducers and we also use all of the same container components people know much",
    "start": "437120",
    "end": "443750"
  },
  {
    "start": "440000",
    "end": "662000"
  },
  {
    "text": "about the contain a presentation pattern is it kind of okay I'll start from the you know start from fundamentals with it",
    "start": "443750",
    "end": "449750"
  },
  {
    "text": "so these days building UIs we really do focus on components you know that's been",
    "start": "449750",
    "end": "455210"
  },
  {
    "text": "behind the rule sort of revolution in the way that we are certainly know the way that we build web applications that",
    "start": "455210",
    "end": "460640"
  },
  {
    "text": "a unit of encapsulation is a really powerful one and react I think was",
    "start": "460640",
    "end": "465890"
  },
  {
    "text": "actually probably the first library to really have components first and",
    "start": "465890",
    "end": "471470"
  },
  {
    "text": "foremost you know sort of in its in its model the container presenter pattern is",
    "start": "471470",
    "end": "476510"
  },
  {
    "text": "where each thing in your screen actually has two parts so we kind of decoupling components into two parts we split them",
    "start": "476510",
    "end": "482180"
  },
  {
    "text": "into two sub components one we call the container component and that contains",
    "start": "482180",
    "end": "487580"
  },
  {
    "text": "all of the business logic relating to that component and the other part is what we call the presenter component and",
    "start": "487580",
    "end": "493370"
  },
  {
    "text": "that's really just the view based stuff and so that it really the presenter",
    "start": "493370",
    "end": "498980"
  },
  {
    "text": "component is just like a template you know in react it happens to be JavaScript but if you were using some other framework it would just be it",
    "start": "498980",
    "end": "505730"
  },
  {
    "text": "could be an HTML template or if you're using angular or view or whatever but it's really just it's it's very dumb",
    "start": "505730",
    "end": "511400"
  },
  {
    "text": "okay and all that it does is have a set of props passed into it from the container component and those props",
    "start": "511400",
    "end": "516710"
  },
  {
    "text": "comprise two parts so the data that that component is to display that presenter",
    "start": "516710",
    "end": "521750"
  },
  {
    "text": "component is to display and also any call back so that presenter component can invoke when the user does something",
    "start": "521750",
    "end": "527690"
  },
  {
    "text": "I click something inside the container I click something inside the on the screen or inside the component and those",
    "start": "527690",
    "end": "534560"
  },
  {
    "text": "callbacks go back up to the container component we really responsible for processing them and whatever and in the case of using a",
    "start": "534560",
    "end": "540620"
  },
  {
    "text": "Redux store the container component is actually responsible for sort of receiving notifications fundamentally",
    "start": "540620",
    "end": "547730"
  },
  {
    "text": "about what the current state of the application is in extracting the data needed for this particular component and",
    "start": "547730",
    "end": "552830"
  },
  {
    "text": "then when a callback is invoked back into the container by the presenter it",
    "start": "552830",
    "end": "558140"
  },
  {
    "text": "will dispatch an action to the Redux store but to be clear with the container presents a component pattern doesn't",
    "start": "558140",
    "end": "565310"
  },
  {
    "text": "actually require Redux ok all of the state management and sort of processing",
    "start": "565310",
    "end": "571970"
  },
  {
    "text": "if state could actually be done in the container and sometimes I've done that and other projects using reacts built-in",
    "start": "571970",
    "end": "576980"
  },
  {
    "text": "state or whatever but in this case we did actually use Redux this was a pretty big project so just to be clear about",
    "start": "576980",
    "end": "583820"
  },
  {
    "text": "what this kind of stuff looks like it would look at kind of the web presenter this is it here I'm just to kind of keep",
    "start": "583820",
    "end": "591200"
  },
  {
    "text": "because there's a bit code on the screen there I'm using what's called a stateless functional component and that's actually a component that is just",
    "start": "591200",
    "end": "597410"
  },
  {
    "text": "a function because all it does is take some input ice and props and just return sort of a little element hierarchy okay",
    "start": "597410",
    "end": "603770"
  },
  {
    "text": "it doesn't actually have any state of its own it's just a function that gets run over and over again as the app executes so we've got here just the",
    "start": "603770",
    "end": "610640"
  },
  {
    "text": "title at the top you know in this in this JSX it's being returned from the component we're then going to iterate",
    "start": "610640",
    "end": "617330"
  },
  {
    "text": "over some sports and sports that have been injected into the component and for each of them we're going to display the",
    "start": "617330",
    "end": "623300"
  },
  {
    "text": "sport name just here and then we've got some a little bit of logic here that says well if the if the sport matches",
    "start": "623300",
    "end": "630170"
  },
  {
    "text": "the one that's been selected I we've been also been notified about with sports been selected then we're going to alter the styling of it if you know if",
    "start": "630170",
    "end": "637790"
  },
  {
    "text": "this element gets clicked then we're going to invoke this callback that goes back out to the container and also we've",
    "start": "637790",
    "end": "644150"
  },
  {
    "text": "got some logic down here you know we've got these are these things are called markets so these are different sorts of types of bets that you can place on a",
    "start": "644150",
    "end": "651350"
  },
  {
    "text": "particular sport we just say well you know if there is currently a selected sport because maybe there isn't one will",
    "start": "651350",
    "end": "657410"
  },
  {
    "text": "display the markets available for that sport otherwise we just won't display anything that's what the presenter looks",
    "start": "657410",
    "end": "662779"
  },
  {
    "text": "like the container and this is kind of quite Redux specific code but just to",
    "start": "662779",
    "end": "668810"
  },
  {
    "text": "give you the general but we're using the react Redux bridge and using a function called connect",
    "start": "668810",
    "end": "674399"
  },
  {
    "text": "which is what's called a higher-order component and it takes it wraps that",
    "start": "674399",
    "end": "680130"
  },
  {
    "text": "presents it and produces what is called the container now automatically why is this logic in what why is this presenter",
    "start": "680130",
    "end": "687540"
  },
  {
    "text": "component to the redux store and in this case there's two functions that it takes one called Maps state two props where it",
    "start": "687540",
    "end": "692910"
  },
  {
    "text": "gets the Redux state and just gets the variables out of it that it needs and then that one called map dispatch two",
    "start": "692910",
    "end": "698730"
  },
  {
    "text": "props which is for handling actions that come into the presenter and then mapping",
    "start": "698730",
    "end": "703769"
  },
  {
    "text": "those to the actions that are dispatched to the store so that's roughly kind of",
    "start": "703769",
    "end": "709500"
  },
  {
    "text": "what a presenter and a container look like and you'll also have noticed in the",
    "start": "709500",
    "end": "715319"
  },
  {
    "start": "715000",
    "end": "747000"
  },
  {
    "text": "previous slide that the container is actually the thing that you drop onto the page so that the container contains the presenter inside of it okay and",
    "start": "715319",
    "end": "722279"
  },
  {
    "text": "presenters can actually render if they have sub components within them they'll",
    "start": "722279",
    "end": "727829"
  },
  {
    "text": "render the container and then that container will really its own presenter and so on down the tree and it's it's",
    "start": "727829",
    "end": "733980"
  },
  {
    "text": "important the reason I'm sort of being explicit about that is we'll get back to in a second alright so this is a really",
    "start": "733980",
    "end": "740699"
  },
  {
    "text": "great pattern because it sort of enables you to split these two things apart helps with testability and just avoiding",
    "start": "740699",
    "end": "745949"
  },
  {
    "text": "spaghetti code but it doesn't take a rocket scientist to see that this has got some cross-platform potential",
    "start": "745949",
    "end": "752010"
  },
  {
    "start": "747000",
    "end": "972000"
  },
  {
    "text": "because you can have one container and two possible presenters for it one for",
    "start": "752010",
    "end": "758699"
  },
  {
    "text": "use on iOS and one for usin web and this is actually fundamentally the pattern",
    "start": "758699",
    "end": "764490"
  },
  {
    "text": "that we've used for the app but then the question is well if if if the container",
    "start": "764490",
    "end": "770430"
  },
  {
    "text": "is the thing that gets rendered how do we say are we want you to render in this context in iOS presenter and in that",
    "start": "770430",
    "end": "776519"
  },
  {
    "text": "context of web presenter and react being react it's actually quite easy to to",
    "start": "776519",
    "end": "782370"
  },
  {
    "text": "just make it that a component is a prop that's passed into the container so we",
    "start": "782370",
    "end": "788069"
  },
  {
    "text": "can say hey I want to render the multi Builder container and I want it to use this presenter okay we can do that for",
    "start": "788069",
    "end": "794029"
  },
  {
    "text": "web we can do it for iOS as well",
    "start": "794029",
    "end": "798740"
  },
  {
    "text": "one thing to keep in mind though is that um there's this we sort of well I wouldn't we first started talking about",
    "start": "800230",
    "end": "806450"
  },
  {
    "text": "this we had this weird kind of chicken in the egg situation because we were like okay well what decides sort of the",
    "start": "806450",
    "end": "812030"
  },
  {
    "text": "presenters for the next layer down because there are lots of layers in this app you know if we consider multi build",
    "start": "812030",
    "end": "817100"
  },
  {
    "text": "at the very top level there is this multi builder component and then we've got this markets component that we talked about just before then there's",
    "start": "817100",
    "end": "823400"
  },
  {
    "text": "events and events lists displayed under that displaying all these different sporting events for example that list",
    "start": "823400",
    "end": "829100"
  },
  {
    "text": "contains rows each row can contains buttons how do we kind of model this and how do we make sure how do we reuse",
    "start": "829100",
    "end": "835880"
  },
  {
    "text": "containers but have it that the web version of each component gets used all the way down and on the web and that the",
    "start": "835880",
    "end": "841700"
  },
  {
    "text": "iOS version gets used all the way down and a native app and the short answer is that a parent presenter can reuse a",
    "start": "841700",
    "end": "850430"
  },
  {
    "text": "container but it can say which child presenter who wants to use and it can",
    "start": "850430",
    "end": "855620"
  },
  {
    "text": "say I want to use the web version and an iOS presenter can say I'm going to use the this container and I want you to use",
    "start": "855620",
    "end": "861830"
  },
  {
    "text": "an iOS version the presenter so ensure we start at the top with the multi",
    "start": "861830",
    "end": "867830"
  },
  {
    "text": "Builder container and it you know renders a multi Builder web presenter internally the multi will build a web",
    "start": "867830",
    "end": "874100"
  },
  {
    "text": "presenter renders a markets container and tells it to use a markets web presenter if Ben's it also renders an",
    "start": "874100",
    "end": "880550"
  },
  {
    "text": "events list container and that it tells it to use an events list web presenter and this chain can work all the way down",
    "start": "880550",
    "end": "887900"
  },
  {
    "text": "through the tree and so for iOS we can reuse the same containers except in this",
    "start": "887900",
    "end": "894650"
  },
  {
    "text": "case the multi builder iOS presenter says I want to just use the markets container but with the markets iOS",
    "start": "894650",
    "end": "900290"
  },
  {
    "text": "presenter and the outcomes listen and I want to use the outcomes this container bool the outcomes list iOS presenter so",
    "start": "900290",
    "end": "905480"
  },
  {
    "text": "each Red Box gets to decide the type of the next Red Box down but they're all reusing the same blue boxes the same",
    "start": "905480",
    "end": "911870"
  },
  {
    "text": "containers",
    "start": "911870",
    "end": "914440"
  },
  {
    "text": "and just to be explicit in case you're still a little bit confused relating it to the code we saw before the top level",
    "start": "917290",
    "end": "923529"
  },
  {
    "text": "we have this multi builder container it gets a presenter prop that is the multi builder web presenter the web presenter",
    "start": "923529",
    "end": "929139"
  },
  {
    "text": "renders a couple of containers and parameter eise's them with the appropriate web presenters and again all",
    "start": "929139",
    "end": "934990"
  },
  {
    "text": "the way down the tree but we do have a little bit of logic in here for example well we've got multiple rows multiple",
    "start": "934990",
    "end": "941980"
  },
  {
    "text": "event rows we're going to iterate over them and display a container each time containers can also take additional properties too for example you know what",
    "start": "941980",
    "end": "948430"
  },
  {
    "text": "the idea of this particular event is or you know if we've got a couple of buttons relating to different potential",
    "start": "948430",
    "end": "955240"
  },
  {
    "text": "outcomes on a on an event can do that as well and iterate over those and then",
    "start": "955240",
    "end": "960850"
  },
  {
    "text": "similarly with iOS we do the same kind of thing except in this case it nominates to use the iOS presenter we",
    "start": "960850",
    "end": "966370"
  },
  {
    "text": "thought with each container down the tree containers are reused and presenters a platform-specific and",
    "start": "966370",
    "end": "972269"
  },
  {
    "text": "basically its container presents a pattern all the way down throughout we've got a 150 thousand lines of code",
    "start": "972269",
    "end": "978009"
  },
  {
    "text": "now and this is the dominant pattern throughout our entire application but some of you may have looked at that and",
    "start": "978009",
    "end": "984190"
  },
  {
    "text": "gone well in some of that code I could see that you had you're iterating over sports like in two different places you",
    "start": "984190",
    "end": "990819"
  },
  {
    "text": "know in the web presenter you iterated over the sports to render a little container excitement in their iOS when",
    "start": "990819",
    "end": "996250"
  },
  {
    "text": "you you're doing the same isn't that duplicated code and you would be right and if you know I'm not sure if you know",
    "start": "996250",
    "end": "1003480"
  },
  {
    "text": "much about the react native ecosystem but you can actually take this reuse",
    "start": "1003480",
    "end": "1008880"
  },
  {
    "text": "further but we didn't so there is Microsoft have a framework called react",
    "start": "1008880",
    "end": "1014339"
  },
  {
    "text": "XP for example or there's an open source another open source framework called react native web that aims to unify at",
    "start": "1014339",
    "end": "1021389"
  },
  {
    "text": "the component level so in react native you know you have views and in you know",
    "start": "1021389",
    "end": "1028079"
  },
  {
    "text": "the web and the Dom you have divs and in react native you have text objects and",
    "start": "1028079",
    "end": "1033270"
  },
  {
    "text": "on the web you have spans okay Rack native web or react XP actually unify them into a single markup so views",
    "start": "1033270",
    "end": "1040938"
  },
  {
    "text": "transformed into dibs or react native views depending upon the platform that you're on but we decided not to do that",
    "start": "1040939",
    "end": "1048449"
  },
  {
    "text": "and the reason for that is well I'm gonna talk about it now and we'll just categorize it broadly",
    "start": "1048449",
    "end": "1054850"
  },
  {
    "start": "1052000",
    "end": "1355000"
  },
  {
    "text": "under what's what's different you know what's different between these these platforms here's the first thing the",
    "start": "1054850",
    "end": "1061600"
  },
  {
    "text": "styling is different okay so if we consider web consider this little",
    "start": "1061600",
    "end": "1067780"
  },
  {
    "text": "outcome button here the mark-up for the present or the code for the presenter looks a bit like this we have this",
    "start": "1067780",
    "end": "1074680"
  },
  {
    "text": "stateless functional component and most importantly we've just got a regular div and we specify a class name on it the",
    "start": "1074680",
    "end": "1082000"
  },
  {
    "text": "class names sort of pulled out of an object a stylesheet object here we do it",
    "start": "1082000",
    "end": "1087550"
  },
  {
    "text": "again here and here and this stylesheet in this case is set up using a CSS in",
    "start": "1087550",
    "end": "1094000"
  },
  {
    "text": "jeaious framework called type style which is just a CSS in J's framework for typescript but and it could it could",
    "start": "1094000",
    "end": "1103300"
  },
  {
    "text": "just as well be CSS modules or some other CSS framework but that's just what we chose to do in our case we do get to",
    "start": "1103300",
    "end": "1110470"
  },
  {
    "text": "describe the CSS using javascript we create an object and you know we can use",
    "start": "1110470",
    "end": "1115900"
  },
  {
    "text": "things like flexbox and so on and specify you know flex properties we can specify background colors you know and",
    "start": "1115900",
    "end": "1122140"
  },
  {
    "text": "the framework will be responsible for generating a stylesheet at runtime and inserting it into the page but at the",
    "start": "1122140",
    "end": "1129310"
  },
  {
    "text": "end of that's all CSS as web developers know and it's also class names iOS works",
    "start": "1129310",
    "end": "1135820"
  },
  {
    "text": "a little bit differently I guess for starters the markups a bit different in this case without using a helper",
    "start": "1135820",
    "end": "1142030"
  },
  {
    "text": "framework like react XP the markup so it will be different we have this included touchable highlight which comes from react native that's kind of for handling",
    "start": "1142030",
    "end": "1148840"
  },
  {
    "text": "touch events styling instead of using a class name we have just have a property",
    "start": "1148840",
    "end": "1153850"
  },
  {
    "text": "code style that is a that you know we can inject arbitrary styles into a view",
    "start": "1153850",
    "end": "1159610"
  },
  {
    "text": "component which is you know great so we've got some logic here that you know displays one style or another depending",
    "start": "1159610",
    "end": "1164680"
  },
  {
    "text": "upon whether the buttons selected or not you know whatever wrap native has its",
    "start": "1164680",
    "end": "1170140"
  },
  {
    "text": "own built-in sort of stylesheet object that you used for assembling what you know it calls a style sheet and this is",
    "start": "1170140",
    "end": "1175510"
  },
  {
    "text": "an interesting decision that the recognizer of team and not just made not necessarily a bad one is that they kind of took the best bits of CSS and sort of",
    "start": "1175510",
    "end": "1183610"
  },
  {
    "text": "ported them to the react native environment probably a really good example of that is flexbox",
    "start": "1183610",
    "end": "1189670"
  },
  {
    "text": "so they ported flexbox to their own environment for layout which is probably a pretty good idea plus simple CSS",
    "start": "1189670",
    "end": "1197290"
  },
  {
    "text": "properties like font size and font weight and you can sort of do tricks to",
    "start": "1197290",
    "end": "1202480"
  },
  {
    "text": "then override stars and so on which is kind of what's happening here for a selected button star but the key thing",
    "start": "1202480",
    "end": "1208030"
  },
  {
    "text": "there's still a key difference here and that is that um in on the web like class",
    "start": "1208030",
    "end": "1216340"
  },
  {
    "text": "names their class names their CSS class names worries in react native it's actually just an object that has a bunch",
    "start": "1216340",
    "end": "1222520"
  },
  {
    "text": "of properties in it you know on the web you don't want to be setting styles directly on a component it's just not",
    "start": "1222520",
    "end": "1228070"
  },
  {
    "text": "very performant you have to use class names and the other thing is that if you do want to use if you wanted to unify",
    "start": "1228070",
    "end": "1236050"
  },
  {
    "text": "these together and these react to XP and recognize you know file these models together you have to go the lowest",
    "start": "1236050",
    "end": "1241510"
  },
  {
    "text": "common denominator like what's common between the two platforms and web",
    "start": "1241510",
    "end": "1247150"
  },
  {
    "text": "developers in particular don't really like doing it I mean CSS you know it can be pretty nasty and it is what it is but system",
    "start": "1247150",
    "end": "1254350"
  },
  {
    "text": "web developers want to have the full C you know available CSS properties available to them you know and that",
    "start": "1254350",
    "end": "1262510"
  },
  {
    "text": "might at first seem a little pedantic but even for simple stuff like you know we have a responsive website so we need",
    "start": "1262510",
    "end": "1267820"
  },
  {
    "text": "to style responsive breakpoints and you know react native doesn't support anything like that okay",
    "start": "1267820",
    "end": "1273700"
  },
  {
    "text": "in fact sometimes frankly when it comes to building responsive it's naive to a responsive websites naive to think that",
    "start": "1273700",
    "end": "1279010"
  },
  {
    "text": "you can even do everything we CSS sometimes you have to have different marker you know sometimes on the desktop",
    "start": "1279010",
    "end": "1285520"
  },
  {
    "text": "version of your site you want extra stuff in the Dom you know I'm being displayed to the user there's on the mobile version you don't",
    "start": "1285520",
    "end": "1290890"
  },
  {
    "text": "and so knowing that knowing that even our templates might need to be different we chose to give ourselves that wiggle",
    "start": "1290890",
    "end": "1296740"
  },
  {
    "text": "room so instead of using a formula that we just had different presenters and sometimes the mark-up was pretty similar",
    "start": "1296740",
    "end": "1301990"
  },
  {
    "text": "sometimes developers starting on their iOS version of a page they'd already done in web would start just by copying",
    "start": "1301990",
    "end": "1308140"
  },
  {
    "text": "and pasting the web version and then starting to just tweak it change the divs to views and so on but having that wiggle room was really really useful for",
    "start": "1308140",
    "end": "1315010"
  },
  {
    "text": "us and it also was useful from UX perspective because as developers we",
    "start": "1315010",
    "end": "1320890"
  },
  {
    "text": "like to come up with generalizations in advance we like to come up with the gaud framework for building UX but it's",
    "start": "1320890",
    "end": "1329830"
  },
  {
    "text": "almost it's like a law of nature that UX designers will come up with something that cannot be done with",
    "start": "1329830",
    "end": "1335620"
  },
  {
    "text": "whatever god framework developers that come up with it's just like a cat dog thing it's just it's just the way it is",
    "start": "1335620",
    "end": "1342100"
  },
  {
    "text": "okay and there's nothing wrong with that that's their job you know and we have",
    "start": "1342100",
    "end": "1347530"
  },
  {
    "text": "that at sports but a lot we're UX is really really important we can't have a lowest common denominator styles styling",
    "start": "1347530",
    "end": "1353230"
  },
  {
    "text": "library second big difference is animation so on the web here's a little",
    "start": "1353230",
    "end": "1358540"
  },
  {
    "start": "1355000",
    "end": "1421000"
  },
  {
    "text": "animation you might have seen on the original video it's just this little multi builder box that pops up and down",
    "start": "1358540",
    "end": "1364000"
  },
  {
    "text": "from the bottom on the web we did this pretty traditionally using CSS styles so",
    "start": "1364000",
    "end": "1371650"
  },
  {
    "text": "react comes with this so the satellite project could react transition group that can we specify a bunch of styles",
    "start": "1371650",
    "end": "1378640"
  },
  {
    "text": "including CSS animations for example here and and then you can apply those",
    "start": "1378640",
    "end": "1384340"
  },
  {
    "text": "styles using timings and so on this is actually an idea that came from angular",
    "start": "1384340",
    "end": "1389410"
  },
  {
    "text": "originally and I just kind of poured it across to react and this is a reasonable way to do animations for the web there",
    "start": "1389410",
    "end": "1396220"
  },
  {
    "text": "are kind of gnarly aspects to it like for example this timeout here has to be coded to pretty much be the same as that",
    "start": "1396220",
    "end": "1401560"
  },
  {
    "text": "otherwise things can get kind of weird you can kind of refactor the duplication but it is a little bit kind of nasty and",
    "start": "1401560",
    "end": "1407410"
  },
  {
    "text": "it kind of points to there are some inherent mismatches between you know writing a JavaScript up like this and",
    "start": "1407410",
    "end": "1413170"
  },
  {
    "text": "using CSS to style things like animations and the reason that I kind of mentioned that is that an iOS it's",
    "start": "1413170",
    "end": "1422950"
  },
  {
    "start": "1421000",
    "end": "1517000"
  },
  {
    "text": "actually that they use a completely different approach to doing animations so rec narrative inside it has this",
    "start": "1422950",
    "end": "1429960"
  },
  {
    "text": "object available called animated and it's really awesome and you can have these special animated values that you",
    "start": "1429960",
    "end": "1436180"
  },
  {
    "text": "can apply like easing functions to and so on and trigger off transitions of",
    "start": "1436180",
    "end": "1441760"
  },
  {
    "text": "those values so that's what we're doing here and then we can have special views that use the special values and it all",
    "start": "1441760",
    "end": "1447880"
  },
  {
    "text": "just works seamlessly across the bridge into then and it's really cool because it's performant but it's declarative like the",
    "start": "1447880",
    "end": "1453850"
  },
  {
    "text": "animated API is fantastic in fact some people actually ported it back to the web it's so awesome",
    "start": "1453850",
    "end": "1459640"
  },
  {
    "text": "but again you kind of get into this weird uncanny valley situation where there are certain animations that are",
    "start": "1459640",
    "end": "1465220"
  },
  {
    "text": "possible on iOS that aren't possible on web and vice versa so again you're kind of going for lowest common denominator",
    "start": "1465220",
    "end": "1471490"
  },
  {
    "text": "and again UX people will they still want to think in terms of web and iOS and they will find a way to confound",
    "start": "1471490",
    "end": "1478000"
  },
  {
    "text": "whatever framework that you've decided to use there was definitely the case for us so in our case we pretty much again",
    "start": "1478000",
    "end": "1484750"
  },
  {
    "text": "benefited from having separate presented components this is a percentage component that because it has some state",
    "start": "1484750",
    "end": "1490540"
  },
  {
    "text": "of its own isn't a stateless functional component you know it is able to take",
    "start": "1490540",
    "end": "1496450"
  },
  {
    "text": "care of its own animations I mean personally I prefer using JavaScript for animations anyway and even back on the",
    "start": "1496450",
    "end": "1502570"
  },
  {
    "text": "web like we use the SS for those ones because it was easy but you know again if you go with a lowest common",
    "start": "1502570",
    "end": "1508390"
  },
  {
    "text": "denominator framework you lock yourself out of other more sophisticated j/s animation libraries like green sock and",
    "start": "1508390",
    "end": "1513640"
  },
  {
    "text": "so on you know all right finally we've got kind of the big one the big difference between these platforms in",
    "start": "1513640",
    "end": "1520720"
  },
  {
    "start": "1517000",
    "end": "1745000"
  },
  {
    "text": "this kind of transcends even technology and and what coders want to do and reuse and that is navigation so navigation on",
    "start": "1520720",
    "end": "1528550"
  },
  {
    "text": "the web is pretty straightforward so here's a little video of us navigating around the app the mobile web app and",
    "start": "1528550",
    "end": "1537270"
  },
  {
    "text": "let's start up the web one so anyone",
    "start": "1537270",
    "end": "1542980"
  },
  {
    "text": "want to kind of point out some differences in navigation between these what's something that spring to mind",
    "start": "1542980",
    "end": "1550110"
  },
  {
    "text": "sorry yeah that's one of them we've got a tab barred in the bottom as well",
    "start": "1551850",
    "end": "1557590"
  },
  {
    "text": "tab bars are pretty much a well-known paradigm for iOS apps but web they're",
    "start": "1557590",
    "end": "1562990"
  },
  {
    "text": "not really a thing that really makes sense and probably most significantly there were animated transitions there on the",
    "start": "1562990",
    "end": "1568210"
  },
  {
    "text": "iOS app on the web users are used to just quitting around screen changes and you know but on iOS users are not used",
    "start": "1568210",
    "end": "1575080"
  },
  {
    "text": "to that they know they that's a degradation of their experience they want really nice transitions from screen",
    "start": "1575080",
    "end": "1580240"
  },
  {
    "text": "to screen they'll notice if there's not even if it's they're not fully aware of it they'll notice it furthermore these",
    "start": "1580240",
    "end": "1585760"
  },
  {
    "text": "these animations and transitions they need to be interactive like sometimes you can drag to you can swipe a cross to",
    "start": "1585760",
    "end": "1592300"
  },
  {
    "text": "go forward forward and back inside the stack and if you let go halfway through it'll pop back to where it was like there's all these really sophisticated",
    "start": "1592300",
    "end": "1598720"
  },
  {
    "text": "transitions that come out of the box with iOS that web developers just don't have to think about normally and you can",
    "start": "1598720",
    "end": "1604210"
  },
  {
    "text": "actually do a little bit of animated transitions with web but people just aren't used to it and there's a risk",
    "start": "1604210",
    "end": "1609460"
  },
  {
    "text": "that you'll actually just confuse your users because you know if you swipe you know they used to swiping to go back you",
    "start": "1609460",
    "end": "1614770"
  },
  {
    "text": "know that's about the extent of navigation on the web you know or animated navigations on the web if you mess with that you'll just confuse them",
    "start": "1614770",
    "end": "1620910"
  },
  {
    "text": "that said there is one thing that the web does do better than native and I've",
    "start": "1620910",
    "end": "1627490"
  },
  {
    "text": "sort of see if anyone can kind of guess it I've got to put it out to desktop size to kind of give people a sense can",
    "start": "1627490",
    "end": "1634480"
  },
  {
    "text": "you see what sort of the difference is or maybe something important in here that web does better than native and you",
    "start": "1634480",
    "end": "1641680"
  },
  {
    "text": "begin it's sometimes described is the superpower of the web but it's also something that's so ubiquitous that we",
    "start": "1641680",
    "end": "1648010"
  },
  {
    "text": "just take it for granted these days the web has links we're sufficiently obvious",
    "start": "1648010",
    "end": "1653920"
  },
  {
    "text": "but links are really awesome like you can send them around and deep link you know and and that's a fantastic thing",
    "start": "1653920",
    "end": "1659980"
  },
  {
    "text": "about the web we take for granted it's fantastic and iOS iOS apps actually want links you know and they can support",
    "start": "1659980",
    "end": "1666910"
  },
  {
    "text": "links you know there's like Universal linking in iOS where you can have it you can provide a link to the user and they",
    "start": "1666910",
    "end": "1672550"
  },
  {
    "text": "click it and if the wit if the app is registered then it will load the app and go to that place in the app and if it's",
    "start": "1672550",
    "end": "1678910"
  },
  {
    "text": "not on their phone or whatever it just goes to the website like it's a really it's a really powerful mechanism you want to send out emails to users on",
    "start": "1678910",
    "end": "1684340"
  },
  {
    "text": "their phone or notifications with links links are really really important and I'll just",
    "start": "1684340",
    "end": "1689409"
  },
  {
    "text": "get back to that a little bit in a minute why I've sort of made that emphasis so when it comes to doing",
    "start": "1689409",
    "end": "1694629"
  },
  {
    "text": "navigation on the web it's all pretty straightforward so we used a fantastic reactor out a framework and Rec router",
    "start": "1694629",
    "end": "1701440"
  },
  {
    "text": "code kinda looks a bit like this assailant we've got a this is a little video here we're on the home page and we",
    "start": "1701440",
    "end": "1708070"
  },
  {
    "text": "kind of clicked multi builder from the menu that was a link and it took us to multi builder so to set this kind of to set this up",
    "start": "1708070",
    "end": "1713710"
  },
  {
    "text": "with react router we just bringing some components from that from that library we declare a top-level browser router",
    "start": "1713710",
    "end": "1721330"
  },
  {
    "text": "and then we just define routes inside of it the other thing is routes of themselves react components so we've got",
    "start": "1721330",
    "end": "1728590"
  },
  {
    "text": "one route here that for you know the route path renders a home web screen for",
    "start": "1728590",
    "end": "1733720"
  },
  {
    "text": "the multi builder path that renders the multi builder web screen and these routes can be composed in lots of",
    "start": "1733720",
    "end": "1738940"
  },
  {
    "text": "different ways just like any other react component it's fantastic it's awesome",
    "start": "1738940",
    "end": "1744028"
  },
  {
    "text": "linking is kind of another thing that we should talk about before we move on to",
    "start": "1744479",
    "end": "1749559"
  },
  {
    "start": "1745000",
    "end": "2009000"
  },
  {
    "text": "iOS because that's kind of the way in which you navigate around web apps you know we with react router you have this",
    "start": "1749559",
    "end": "1755109"
  },
  {
    "text": "thing called a link you can link to anywhere and you can click it'll put a a",
    "start": "1755109",
    "end": "1760509"
  },
  {
    "text": "clickable link in here on the screen and people can click them that's fantastic really actually under the hood all it's",
    "start": "1760509",
    "end": "1767169"
  },
  {
    "text": "doing is expanding out to an anchor tag a bit like this because and the reason I'm being clear about this usage is that",
    "start": "1767169",
    "end": "1775840"
  },
  {
    "text": "every R in the home web screen gets passed a set of props so it is embedded",
    "start": "1775840",
    "end": "1780999"
  },
  {
    "text": "inside a reactor out of route and because of that direct router react router passes at a special properties",
    "start": "1780999",
    "end": "1787509"
  },
  {
    "text": "actually the history the history object for the browser and you can push stuff so this is sort of a programmatic way to",
    "start": "1787509",
    "end": "1794559"
  },
  {
    "text": "navigate somewhere in your app okay functionally these are basically the same alright so let's talk a little bit",
    "start": "1794559",
    "end": "1801759"
  },
  {
    "text": "about iOS ok you're probably going to see in a second some scary the scariest",
    "start": "1801759",
    "end": "1807999"
  },
  {
    "text": "code in this presentation we're gonna use react navigation here for a long time was a bit of a running joke within",
    "start": "1807999",
    "end": "1813639"
  },
  {
    "text": "the react native community the sheer number of different navigation solutions that there but they seemed your kind of coalesced",
    "start": "1813639",
    "end": "1819859"
  },
  {
    "text": "on this one could react navigation and react navigation is good because they",
    "start": "1819859",
    "end": "1825229"
  },
  {
    "text": "have gone to the effort and there's considerable effort of reproducing all of the or many of the iOS transitions",
    "start": "1825229",
    "end": "1832549"
  },
  {
    "text": "kind of in react native in a performant way and at first not able you can think I'll do that myself but the the fact is",
    "start": "1832549",
    "end": "1839899"
  },
  {
    "text": "I mean I know people have done it and it's mutually there taking high frame rate videos of these transitions and their phone they're examining them with",
    "start": "1839899",
    "end": "1846169"
  },
  {
    "text": "loop A's that you know it takes a lot of effort to reproduce those things you don't want to do that if it yourself",
    "start": "1846169",
    "end": "1851299"
  },
  {
    "text": "this this team has gone to the effort of doing it however the the code can be quite complex to do with because it's",
    "start": "1851299",
    "end": "1857090"
  },
  {
    "text": "not just a set of routes anymore it's a whole set of nested navigators so in this case and we're bringing in a couple of objects from that library a couple of",
    "start": "1857090",
    "end": "1863419"
  },
  {
    "text": "functions from that library this sets up the tab down here at the bottom and it puts a couple of pages inside of at home",
    "start": "1863419",
    "end": "1871249"
  },
  {
    "text": "and multi builder each of which has its own stack we can you know set a default we can override tab images and icons and",
    "start": "1871249",
    "end": "1878960"
  },
  {
    "text": "so on each stack Navigator which is kind of this portion of the screen here we can put screens inside of it as well",
    "start": "1878960",
    "end": "1886279"
  },
  {
    "text": "you notice this is kind of weird because the tabs there's a Home tab and a multi builder tab for example but each tab has",
    "start": "1886279",
    "end": "1892849"
  },
  {
    "text": "its own the same screens repeated in it and that's kind of necessary to reproduce what users are used to on iOS",
    "start": "1892849",
    "end": "1899809"
  },
  {
    "text": "which is if you have multiple tabs that often retain their position so you basically need multiple versions of the",
    "start": "1899809",
    "end": "1905539"
  },
  {
    "text": "same screen accessible in different tabs again you can you know this is customizable in a bunch of different",
    "start": "1905539",
    "end": "1911299"
  },
  {
    "text": "ways this is a complex API it sort of relies on functions to generate components arguably to be too",
    "start": "1911299",
    "end": "1916940"
  },
  {
    "text": "complicated I think you know they're trying to clear up the API but it's kind of complex stuff to navigate around your",
    "start": "1916940",
    "end": "1922460"
  },
  {
    "text": "app for links we have for example if on the iOS homescreen you wanted to be able to navigate to Moldy builder here's a",
    "start": "1922460",
    "end": "1928789"
  },
  {
    "text": "touchable highlight it's got a event handler on it and you can again wreck",
    "start": "1928789",
    "end": "1934340"
  },
  {
    "text": "navigation index properties in two screens but this time the property is this is navigation property and you can",
    "start": "1934340",
    "end": "1940820"
  },
  {
    "text": "kind of push on to that kind of luck with the browser but also kind of different and screens are described",
    "start": "1940820",
    "end": "1946099"
  },
  {
    "text": "using strings but they're not really routes they call them routes but they're not routes as web developers know them so there's",
    "start": "1946099",
    "end": "1951270"
  },
  {
    "text": "all these kind of differences between these but sort of between the way that you would link with an iOS and web but",
    "start": "1951270",
    "end": "1961020"
  },
  {
    "text": "that said we can kind of unify a lot of this model like if we at the end of the day we have screens the navigation",
    "start": "1961020",
    "end": "1967470"
  },
  {
    "text": "between screens might be different but the screens themselves can at least share a lot of business logic and in fact we might want to reuse our we might",
    "start": "1967470",
    "end": "1974250"
  },
  {
    "text": "have a home container with a bunch of logic in it and we might make it that the iOS screen which is used with react",
    "start": "1974250",
    "end": "1979380"
  },
  {
    "text": "navigation still uses the home container but internally it uses a different presenter the web web screen which is",
    "start": "1979380",
    "end": "1986850"
  },
  {
    "text": "used by react router which is an entirely different kind of context it still uses the home container with a",
    "start": "1986850",
    "end": "1991920"
  },
  {
    "text": "different presenter you can sort of have this entry you can have common stuff up until a certain high-level point in your",
    "start": "1991920",
    "end": "1997350"
  },
  {
    "text": "app where navigation becomes a thing where you've got to go beyond screens and actually start thinking about navigation and the reason that I kind of",
    "start": "1997350",
    "end": "2004400"
  },
  {
    "text": "draw this out explicitly is that um you need to start when it comes to certain",
    "start": "2004400",
    "end": "2010940"
  },
  {
    "start": "2009000",
    "end": "2145000"
  },
  {
    "text": "function pieces functionality for example linking you need to have platform specific callbacks so for",
    "start": "2010940",
    "end": "2017780"
  },
  {
    "text": "example we know that the navigation code differs across platforms we want to reuse the home container but we know",
    "start": "2017780",
    "end": "2024560"
  },
  {
    "text": "that this code is different so one way to deal with this is to have a property that we pass in that has platform",
    "start": "2024560",
    "end": "2031100"
  },
  {
    "text": "specific behavior so this is a platform specific screen it's had a navigation object passed into it we're gonna have",
    "start": "2031100",
    "end": "2037160"
  },
  {
    "text": "it passed into the container this navigates a multi builder function that is responsible for triggering the sort",
    "start": "2037160",
    "end": "2042920"
  },
  {
    "text": "of the navigation to multi but it along with all of its transitions and so on and the same thing can happen with web",
    "start": "2042920",
    "end": "2049370"
  },
  {
    "text": "we can have a home web screen that has the same property but with the different",
    "start": "2049370",
    "end": "2055190"
  },
  {
    "text": "implementation in this case we know that we're being used in the context to react router we've got a history object and",
    "start": "2055190",
    "end": "2061190"
  },
  {
    "text": "therefore we can push a value to it it's kind of it's like a type of or it's analogous to polymorphism in",
    "start": "2061190",
    "end": "2066440"
  },
  {
    "text": "object-oriented programming we've got this function where the implementation differs and this this essentially",
    "start": "2066440",
    "end": "2071570"
  },
  {
    "text": "constitutes an escape hatch this is the this is the escape hatch mechanism when we use when we couldn't do stuffing",
    "start": "2071570",
    "end": "2079398"
  },
  {
    "text": "presenters and in this case we couldn't because because the at least in the case of react navigation the navigator",
    "start": "2079399",
    "end": "2084829"
  },
  {
    "text": "needed to be passed down from above this is the type of escape hatch that we used for platform-specific behavior because",
    "start": "2084829",
    "end": "2091789"
  },
  {
    "text": "what we really didn't want was to have code that would be it scattered throughout a codebase it was like if I",
    "start": "2091789",
    "end": "2097400"
  },
  {
    "text": "my OS do this any fun where do that because we do new that will just proliferate everywhere this is a more",
    "start": "2097400",
    "end": "2102680"
  },
  {
    "text": "declarative approach where everything is kind of wired together at the beginning from a container perspective",
    "start": "2102680",
    "end": "2108979"
  },
  {
    "text": "Recker outer supports doing this sort of thing so map dispatch the props gets a second argument called iron props and",
    "start": "2108979",
    "end": "2115579"
  },
  {
    "text": "that that gives access to any additional properties that are provided to the container so in this case navigate to multi builders was provided to the",
    "start": "2115579",
    "end": "2121789"
  },
  {
    "text": "container and it can just convert that to a function that gets passed to the presentation component so in this case",
    "start": "2121789",
    "end": "2127279"
  },
  {
    "text": "neither the container nor the component know anything or the present presenter know actually that they're on web or",
    "start": "2127279",
    "end": "2134359"
  },
  {
    "text": "whatever they don't know anything about the mechanism being used for navigation we use this for other platform specific",
    "start": "2134359",
    "end": "2140660"
  },
  {
    "text": "things as well all right so to summarize",
    "start": "2140660",
    "end": "2147559"
  },
  {
    "start": "2145000",
    "end": "2314000"
  },
  {
    "text": "what's different CSS and animations you can fall into a real uncanny valley trap from both a coding perspective and a",
    "start": "2147559",
    "end": "2153619"
  },
  {
    "text": "usability perspective if you try and unify these models enough at least that's what we found navigation with a",
    "start": "2153619",
    "end": "2159019"
  },
  {
    "text": "completely different paradigms it's naive to think that you can have exactly the same code because you will degrade",
    "start": "2159019",
    "end": "2164089"
  },
  {
    "text": "the user experience finally the good news is that with a bit of thought you can give yourself well-structured escape",
    "start": "2164089",
    "end": "2170329"
  },
  {
    "text": "hatches for functionality we've found that really important and I'd like to kind of I could you know in right there",
    "start": "2170329",
    "end": "2178069"
  },
  {
    "text": "it's all been very technical so far but there is one more aspect that's been really crucial to this project and that",
    "start": "2178069",
    "end": "2183440"
  },
  {
    "text": "is the developer experience because there's a lot there's a lot of tech kind of going on here and plus we also have",
    "start": "2183440",
    "end": "2189319"
  },
  {
    "text": "an you know sports bed they had a bunch of web developers and a bunch of iOS developers and I didn't want them they",
    "start": "2189319",
    "end": "2196130"
  },
  {
    "text": "didn't want there to be much separation between them anymore there are all one team really working on",
    "start": "2196130",
    "end": "2201949"
  },
  {
    "text": "one platform sometimes the app was iOS and sometimes it was web but they really had feature parity they didn't want they",
    "start": "2201949",
    "end": "2208729"
  },
  {
    "text": "didn't want there to be people who were iowa's only in people who were web only and a big part of that was touring so I",
    "start": "2208729",
    "end": "2215930"
  },
  {
    "text": "had one question for you and that is how much you get a bunch of objective-c developers how might you convince a",
    "start": "2215930",
    "end": "2222660"
  },
  {
    "text": "bunch of objective-c developers to write JavaScript how much you get a bunch of",
    "start": "2222660",
    "end": "2227720"
  },
  {
    "text": "developers used to a static type system to use a dynamic type system like",
    "start": "2227720",
    "end": "2232980"
  },
  {
    "text": "JavaScript the answer kind of is well you don't actually make them use a dynamic type system you give them",
    "start": "2232980",
    "end": "2239040"
  },
  {
    "text": "something like typescript and this was a massive thing for the iOS developers because they knew that they would still have types the flipside of that is that",
    "start": "2239040",
    "end": "2246390"
  },
  {
    "text": "a really good way to cheese off a bunch of JavaScript developers is to force them to start using typescript but",
    "start": "2246390",
    "end": "2252180"
  },
  {
    "text": "frankly it was worth it not just from the perspective of getting objective-c developers on board but the size of this",
    "start": "2252180",
    "end": "2257790"
  },
  {
    "text": "codebase grew to typescript is just become invaluable to sort of maintaining",
    "start": "2257790",
    "end": "2263100"
  },
  {
    "text": "consistency across the codebase it's sort of like a medicine that tasted bad at first even for me and I was a Java",
    "start": "2263100",
    "end": "2270240"
  },
  {
    "text": "developer for 10 years and a JavaScript developer 5 years donar typescript seemed like a big pain to me in the end but now I'm grateful",
    "start": "2270240",
    "end": "2276960"
  },
  {
    "text": "and whenever I'm on looking at some code that's not using typescript I miss it missed typescript incredibly a second",
    "start": "2276960",
    "end": "2284610"
  },
  {
    "text": "part of the tooling was recommending not mandating we're recommending to developers that they use Visual Studio",
    "start": "2284610",
    "end": "2290160"
  },
  {
    "text": "code it integrates really well with typescript Objective C developers loved it because it gave them like completion",
    "start": "2290160",
    "end": "2296790"
  },
  {
    "text": "code completion out-of-the-box really easily not everyone uses that we have some people used to use IntelliJ and",
    "start": "2296790",
    "end": "2302070"
  },
  {
    "text": "stuff like that and that's fine but developers knowing that this was available to them and they could just start using it and it was going to be",
    "start": "2302070",
    "end": "2308190"
  },
  {
    "text": "pretty you know bear some resemblance to what they were used to with Xcode that was a real selling point next big sort",
    "start": "2308190",
    "end": "2316800"
  },
  {
    "start": "2314000",
    "end": "2446000"
  },
  {
    "text": "of significant part of this project was actually the build tooling so who knows what this project is any web developer",
    "start": "2316800",
    "end": "2326240"
  },
  {
    "text": "so all the web developers were kind of familiar with that in as much as anyone can be familiar with web pack because",
    "start": "2326240",
    "end": "2331740"
  },
  {
    "text": "it's a beast some of you might know this project this this product this is Xcode",
    "start": "2331740",
    "end": "2337340"
  },
  {
    "text": "so all of the iOS developers were familiar with this and both of these",
    "start": "2337340",
    "end": "2342870"
  },
  {
    "text": "were kind of crucial to the project web pack 2 a symbol that you know the final artifact team you deploy for the web in",
    "start": "2342870",
    "end": "2348210"
  },
  {
    "text": "Xcode to assemble the final artifact for iOS so whilst we already had teams with iOS",
    "start": "2348210",
    "end": "2354809"
  },
  {
    "text": "and web developers on them and we now wanted them all to think in terms of one code base you know being realistic there",
    "start": "2354809",
    "end": "2360270"
  },
  {
    "text": "are still times where someone with a web speciality would need to step in and do a bit of wrangling with webpack and",
    "start": "2360270",
    "end": "2365309"
  },
  {
    "text": "someone with you know a bit of a Xcode background would need to step in and do",
    "start": "2365309",
    "end": "2370650"
  },
  {
    "text": "a bit of wrangling with Xcode it's just a kind of inevitability here's the last one for he does anyone know what this is",
    "start": "2370650",
    "end": "2378078"
  },
  {
    "text": "this is Metro so Metro is Facebook's bundler for react native and Metro is a",
    "start": "2378950",
    "end": "2386430"
  },
  {
    "text": "whole thing in itself it uses Facebook's internal packaging system which is called haste which for example uses",
    "start": "2386430",
    "end": "2393720"
  },
  {
    "text": "absolute paths for everything you know as opposed to relative paths that we were used to using with tools like web pack Metro is well I mean put politely",
    "start": "2393720",
    "end": "2403650"
  },
  {
    "text": "on each team the the web developers would not really understand Xcode the iOS developers would not really",
    "start": "2403650",
    "end": "2409530"
  },
  {
    "text": "understand we're Peppard really no understood Metro we've got enough of it going to integrate typescript with it",
    "start": "2409530",
    "end": "2415319"
  },
  {
    "text": "but I'd be lying if I said that we've got a real handle on it and things have stabilized now but part of the problem",
    "start": "2415319",
    "end": "2421079"
  },
  {
    "text": "with a really complex tool chain like this is and this was one of the initial downsides of typescript is that you have",
    "start": "2421079",
    "end": "2428640"
  },
  {
    "text": "to take this very complex chain it's producing you know a web one codebase and output for web and output for iOS",
    "start": "2428640",
    "end": "2435180"
  },
  {
    "text": "and we wanted to prise apart that tool chain and Jam typescript into it and that was quite painful for quite a long",
    "start": "2435180",
    "end": "2440369"
  },
  {
    "text": "time but I think we've sorted it out now but I'd be lying if I said metros isn't something that still scares me a little",
    "start": "2440369",
    "end": "2445740"
  },
  {
    "text": "bit and finally the third big thing that I think that developers needed to we",
    "start": "2445740",
    "end": "2451740"
  },
  {
    "start": "2446000",
    "end": "2668000"
  },
  {
    "text": "needed to do or put it effort into with our developers was I guess we call it kind of branch all and changing their mindset because the thing about iOS",
    "start": "2451740",
    "end": "2459390"
  },
  {
    "text": "developers or objective-c cocoa developers and even like backbone developers is they're used to thinking",
    "start": "2459390",
    "end": "2466049"
  },
  {
    "text": "in a particular way about how you write code and how you build an app they're used to thinking in terms of classes and",
    "start": "2466049",
    "end": "2471480"
  },
  {
    "text": "objects but if you use react at all I mean sometimes I think of reactors being kind of like a gateway drug for",
    "start": "2471480",
    "end": "2477420"
  },
  {
    "text": "functional programming I react is a very functional front functional framework",
    "start": "2477420",
    "end": "2483299"
  },
  {
    "text": "like we've seen there lots of stateless components they're just a function it's just a function that takes in props and spits out a little fragment",
    "start": "2483299",
    "end": "2489750"
  },
  {
    "text": "of the component hierarchy and a lot of Deb's we observed over time had a lot of trouble switching to this especially for",
    "start": "2489750",
    "end": "2496740"
  },
  {
    "text": "what you might call performance anxiety they would get worried that these functions were getting executed over and over again it wasn't there going to be a",
    "start": "2496740",
    "end": "2502440"
  },
  {
    "text": "performance problem and hey maybe I'll just take a little value here you know and no one will notice but if you do",
    "start": "2502440",
    "end": "2508290"
  },
  {
    "text": "that with react it can punish you quite severely with really weird bugs basically so we had a lot of time where",
    "start": "2508290",
    "end": "2513930"
  },
  {
    "text": "people would be putting things in state that they didn't need to considering react components for example putting duplicated values in state or",
    "start": "2513930",
    "end": "2520830"
  },
  {
    "text": "derived values in state which sounds kind of esoteric but it's really important that if you're using react people got a handle on the fact that you",
    "start": "2520830",
    "end": "2527160"
  },
  {
    "text": "don't do this or if you do well actually you just don't do it but if you have",
    "start": "2527160",
    "end": "2532800"
  },
  {
    "text": "performance issues you don't store values on objects you don't store values in state you memorize at the function",
    "start": "2532800",
    "end": "2540270"
  },
  {
    "text": "level and you optimize certain functions using memorization which is sort of like a you know performance technique for",
    "start": "2540270",
    "end": "2546330"
  },
  {
    "text": "functional programming really took a long time for people get their heads around and there was the same was true of Redux the same rules for react apply",
    "start": "2546330",
    "end": "2553950"
  },
  {
    "text": "to redux you don't have duplicated state or derive state in your store also with Redux things like the way in which you",
    "start": "2553950",
    "end": "2562130"
  },
  {
    "text": "do asynchronous programming like you're going to make decisions about the way in which you use Redux and developers can",
    "start": "2562130",
    "end": "2567660"
  },
  {
    "text": "get confused if you haven't made those decisions clear to them you know and everyone's writing code in different ways so the way in which we dealt with",
    "start": "2567660",
    "end": "2574410"
  },
  {
    "text": "that was we put a lot of effort upfront into having sort of a boot boot camp sort of setup process where people could",
    "start": "2574410",
    "end": "2580920"
  },
  {
    "text": "could get familiar with this this tool chain and all the different parts of it you know typescript webpack Bennett",
    "start": "2580920",
    "end": "2586770"
  },
  {
    "text": "Xcode react native react type style for the styling you know how we tested",
    "start": "2586770",
    "end": "2592950"
  },
  {
    "text": "there's a lot of different bits and pieces to it that would go through this bootcamp which that was really small examples let them build up little dummy",
    "start": "2592950",
    "end": "2599790"
  },
  {
    "text": "apps from scratch to get a sense for how it all fitted together then when they actually came onto the project it was really important that we just review",
    "start": "2599790",
    "end": "2605730"
  },
  {
    "text": "reviewed reviewed we'd started with a small team about five we laid a little foundation with multi builder then we",
    "start": "2605730",
    "end": "2612380"
  },
  {
    "text": "most of us then went out and began tech became tech leagues on other teams and we initially then spent a lot of",
    "start": "2612380",
    "end": "2618620"
  },
  {
    "text": "time reviewing what those teams were doing which was hard you know one point something like half my time reviewing Co",
    "start": "2618620",
    "end": "2623960"
  },
  {
    "text": "but it was worth it because slowly the teams became self-sufficient they began to understand you know you don't cash",
    "start": "2623960",
    "end": "2630230"
  },
  {
    "text": "values on the way you'll get weird bugs they began to understand that we're doing a sink would reacted this way or",
    "start": "2630230",
    "end": "2635840"
  },
  {
    "text": "would Redux this way and an adjunctive that was it was real important for us to write general documentation about why",
    "start": "2635840",
    "end": "2642350"
  },
  {
    "text": "we're doing things certain ways and certain things that have caught people that in the past so that when we were doing a code review and we saw someone",
    "start": "2642350",
    "end": "2648290"
  },
  {
    "text": "doing something that we knew was just gonna be a foot gun down the track we could say you know don't do that do this",
    "start": "2648290",
    "end": "2654500"
  },
  {
    "text": "differently and they if they said why we didn't have to go and explain to them every time we could just say just go look at this link we've written down",
    "start": "2654500",
    "end": "2659810"
  },
  {
    "text": "while we've made these decisions and the problems that we've had in the past and that was really really important in",
    "start": "2659810",
    "end": "2665150"
  },
  {
    "text": "scaling this project up to 25 to 30 devs all right so let's wrap this up",
    "start": "2665150",
    "end": "2670820"
  },
  {
    "start": "2668000",
    "end": "2735000"
  },
  {
    "text": "in short the container presented pattern work for us with this tweak and it was",
    "start": "2670820",
    "end": "2676040"
  },
  {
    "text": "really really powerful and it's a consistent pattern that we use all the way through our code bases but there are",
    "start": "2676040",
    "end": "2682190"
  },
  {
    "text": "inevitably differences between the platforms especially navigation you've got to think about it from a UX",
    "start": "2682190",
    "end": "2688010"
  },
  {
    "text": "perspective a dev perspective there's a while there where we didn't even know how we're gonna do deep linking I",
    "start": "2688010",
    "end": "2693500"
  },
  {
    "text": "haven't really gone into a much detail but we were able to end up doing deep linking with react navigation it was a",
    "start": "2693500",
    "end": "2698960"
  },
  {
    "text": "little bit tricky but it is possible so we can now actually link into this app as well and finally developer experience",
    "start": "2698960",
    "end": "2705250"
  },
  {
    "text": "when using react in react native a web and native virus is really important",
    "start": "2705250",
    "end": "2710270"
  },
  {
    "text": "like getting all the developers for me with the tooling and getting all the patterns in place understood that",
    "start": "2710270",
    "end": "2716030"
  },
  {
    "text": "they're going and and understood that they're gonna have to get their heads around otherwise you know we can all get",
    "start": "2716030",
    "end": "2721580"
  },
  {
    "text": "pretty messy but we've been really happy with the results so far we've achieved the code reuse that we wanted to the",
    "start": "2721580",
    "end": "2727520"
  },
  {
    "text": "teams are all considering themselves working on one platform and yeah we're really looking forward to continuing to",
    "start": "2727520",
    "end": "2733550"
  },
  {
    "text": "roll out what's been done so far thanks very much",
    "start": "2733550",
    "end": "2738130"
  },
  {
    "start": "2735000",
    "end": "3200000"
  },
  {
    "text": "and questions you may not develop a",
    "start": "2740370",
    "end": "2751390"
  },
  {
    "text": "speed no not really",
    "start": "2751390",
    "end": "2757200"
  },
  {
    "text": "yep okay yeah well actually there is you know in terms of code organization there is only one code base and our code base",
    "start": "2763500",
    "end": "2770650"
  },
  {
    "text": "hierarchy is structured on components and there just happens you know there'll be there's a folder called multi builder",
    "start": "2770650",
    "end": "2775990"
  },
  {
    "text": "and it contains the multi builder container and it contains the multi Buddha iOS presenter and the multi builder Web present represented and the",
    "start": "2775990",
    "end": "2782500"
  },
  {
    "text": "entire code base is like that along with all the you know related reducers and action creators so there's not really",
    "start": "2782500",
    "end": "2788320"
  },
  {
    "text": "sure the builds draw from that tree in different ways and only grab certain",
    "start": "2788320",
    "end": "2793780"
  },
  {
    "text": "things but there's still just one tree and to be honest devs look you know to be fair they'll often implement one thing with one",
    "start": "2793780",
    "end": "2800140"
  },
  {
    "text": "platform first and then do the other one but there hasn't really been a speed difference between the two somewhat",
    "start": "2800140",
    "end": "2805600"
  },
  {
    "text": "prefer to do one before the other but that's about it no no it's been pretty",
    "start": "2805600",
    "end": "2815890"
  },
  {
    "text": "good and I mean now it's all you know all about we pull as much as possible in in redux and that's all extensively",
    "start": "2815890",
    "end": "2823360"
  },
  {
    "text": "tested so there's been fantastic times when we picked up a bug that the in web",
    "start": "2823360",
    "end": "2829900"
  },
  {
    "text": "we found a bug in web and fixed it and it was also happening in iOS no one knows yet and so like that's like that's",
    "start": "2829900",
    "end": "2836200"
  },
  {
    "text": "the Holy Grail oh my god we fixed a bug and it worked across both platforms that is exactly what they wanted and it's work for us any other questions",
    "start": "2836200",
    "end": "2842920"
  },
  {
    "text": "oh yeah",
    "start": "2842920",
    "end": "2845700"
  },
  {
    "text": "yeah and you sort of getting into UX territory there I mean there are times when UX there have been it's finally the",
    "start": "2858910",
    "end": "2865910"
  },
  {
    "text": "business really wanted everyone to move faster and they wanted everyone they supported everyone go into one code base",
    "start": "2865910",
    "end": "2871130"
  },
  {
    "text": "but there are still elements that business you want to push one platform forward a little bit more than the other so we've had to educate them that no no",
    "start": "2871130",
    "end": "2878480"
  },
  {
    "text": "we can move forward collectively but we are also the flip side of those we are bound together a little bit okay so it's",
    "start": "2878480",
    "end": "2884450"
  },
  {
    "text": "kind of rare for its kind of rare for the iOS app to display more stuff than",
    "start": "2884450",
    "end": "2889730"
  },
  {
    "text": "the wet you know the web app usually I guess web has the desktop breakpoint but",
    "start": "2889730",
    "end": "2894890"
  },
  {
    "text": "that's kind of a whole sort of thing in itself you know there's a little bit of code that for example reduces reaction",
    "start": "2894890",
    "end": "2900650"
  },
  {
    "text": "craters that are might only be used by web or only be used by always but that's pretty uncommon yeah any other questions",
    "start": "2900650",
    "end": "2907819"
  },
  {
    "text": "yep no not yet so Sportsbet went to a huge amount of effort to build their own",
    "start": "2907819",
    "end": "2913849"
  },
  {
    "text": "Android app a couple years ago and it looks great it's fantastic they are not they're not up for",
    "start": "2913849",
    "end": "2921589"
  },
  {
    "text": "rewriting that right now and also I mean Android recognize Eve Android isn't as mature so we're in no rush we're",
    "start": "2921589",
    "end": "2927770"
  },
  {
    "text": "honestly we did enough on our plate went with two platforms you know so we held off on Android now yep pretty much the",
    "start": "2927770",
    "end": "2941510"
  },
  {
    "text": "same as it normally is there's nothing I can't think of any react native specific",
    "start": "2941510",
    "end": "2948980"
  },
  {
    "text": "issues I mean in theory you can do you could do tricky stuff like loading",
    "start": "2948980",
    "end": "2955789"
  },
  {
    "text": "scripts by having the iOS app load executable code from a server and stuff like that and but the problem if you",
    "start": "2955789",
    "end": "2962690"
  },
  {
    "text": "choose Apple what if you do something like that and they fight and they find out and you choose them off like it's",
    "start": "2962690",
    "end": "2968960"
  },
  {
    "text": "not worth it it's like it would be devastating that we've had sometimes we get knocked back because of some little",
    "start": "2968960",
    "end": "2974029"
  },
  {
    "text": "thing we had a funny thing where we were talking about they mentioned World Cup or something like that in the app and they got",
    "start": "2974029",
    "end": "2980480"
  },
  {
    "text": "because technically it was it's it's a trademark violation to even talk about World Cup or something I was just crazy",
    "start": "2980480",
    "end": "2986030"
  },
  {
    "text": "and that was enough of the big deal you know little own playing chicken with Apple regarding dynamic code downloading",
    "start": "2986030",
    "end": "2993440"
  },
  {
    "text": "or anything like that so yeah just the usual turnaround time any other questions yep",
    "start": "2993440",
    "end": "3000600"
  },
  {
    "text": "as fine-grained as they needed to be so if you know if a component ever needed to get something out of state then or",
    "start": "3003280",
    "end": "3010230"
  },
  {
    "text": "dispatch in action to the story you would have a container but yeah you're right there are some times where we have",
    "start": "3010230",
    "end": "3015340"
  },
  {
    "text": "components without that are really just a presenter not that often though",
    "start": "3015340",
    "end": "3020520"
  },
  {
    "text": "there's often a container from you just about everything I probably it's time for one more yeah",
    "start": "3020520",
    "end": "3028320"
  },
  {
    "text": "that's right",
    "start": "3028320",
    "end": "3031500"
  },
  {
    "text": "execution time yeah okay so this has been a real thing for the iOS guys they're really paranoid about this so",
    "start": "3034490",
    "end": "3040799"
  },
  {
    "text": "and rightly so you know they don't want any degradation in the user experience because if there is management we'll",
    "start": "3040799",
    "end": "3047190"
  },
  {
    "text": "just take them out the back and flog them so then there are scenarios where the react programming model has I guess",
    "start": "3047190",
    "end": "3054930"
  },
  {
    "text": "a bit of an impedance mismatch with the with the cocoa and programming model so things like big lists and the way the",
    "start": "3054930",
    "end": "3062430"
  },
  {
    "text": "big lists are handled and the react native team have kind of put some things in place to have like big performant",
    "start": "3062430",
    "end": "3069210"
  },
  {
    "text": "lists but even those we found sometimes aren't enough and they've had to the guys at sports but have had to get down",
    "start": "3069210",
    "end": "3076170"
  },
  {
    "text": "and optimize a bit further they haven't had to so sometimes in react native if",
    "start": "3076170",
    "end": "3082650"
  },
  {
    "text": "you just want to do something that you cannot do with JavaScript like there were carousels I think and caressed oh",
    "start": "3082650",
    "end": "3087690"
  },
  {
    "text": "he can't really do with react native so you can with recognize if you can bridge out to a an objective-c component and",
    "start": "3087690",
    "end": "3093690"
  },
  {
    "text": "they've done that a bit but that was more because of just the it just there was nothing reckon a t'v before that",
    "start": "3093690",
    "end": "3098789"
  },
  {
    "text": "performance wise yeah we had a funny one",
    "start": "3098789",
    "end": "3104160"
  },
  {
    "text": "the other day where so we have visual to countdown timers in the app you know you know five minutes till this race starts",
    "start": "3104160",
    "end": "3110970"
  },
  {
    "text": "four minutes 59 seconds so on and so we have this timer that's sort of transmitting time changes down through",
    "start": "3110970",
    "end": "3116789"
  },
  {
    "text": "the output all the time every second and you needed to recompute if it was the",
    "start": "3116789",
    "end": "3122490"
  },
  {
    "text": "current day because they'd be smartly displayed components so might just say our one day to go and then I might go one hour 59 minutes or whatever you know",
    "start": "3122490",
    "end": "3129539"
  },
  {
    "text": "they'd have different formats and computing that actually turned out to be really expensive and we're really lucky with web because we didn't notice",
    "start": "3129539",
    "end": "3135630"
  },
  {
    "text": "because we were using Chrome most of the time and it was just really fast and you",
    "start": "3135630",
    "end": "3141059"
  },
  {
    "text": "know anyway the the the react native guys noticed it was kind of slow because they're forced to use apple's javascript",
    "start": "3141059",
    "end": "3148799"
  },
  {
    "text": "engine which is not as good as v8 basically and so they've had to put in javascript optimizations specifically to",
    "start": "3148799",
    "end": "3156930"
  },
  {
    "text": "deal with the fact that the javascript engine that they're going to be running this thing is known as fast that's the other bugbear of react native can be the",
    "start": "3156930",
    "end": "3164640"
  },
  {
    "text": "slow startup times because it's just going to pass a giant would of JavaScript it start at times but interesting with the guys just by",
    "start": "3164640",
    "end": "3171780"
  },
  {
    "text": "putting in a few dummy screens it's not another splash screen but like a dummy screen like a phase dummy screen it's",
    "start": "3171780",
    "end": "3178140"
  },
  {
    "text": "actually it's it hasn't really fazed their users at all it's just really good so that was a real win because we're",
    "start": "3178140",
    "end": "3184290"
  },
  {
    "text": "really worried about that we're like laughs this thing's gonna sit here for five seconds that's really bad good news is it doesn't it's only a second or two",
    "start": "3184290",
    "end": "3189930"
  },
  {
    "text": "and by putting some some skeleton screens in place people don't really notice yeah anything else no all right",
    "start": "3189930",
    "end": "3198000"
  },
  {
    "text": "great thanks for much everybody [Applause]",
    "start": "3198000",
    "end": "3202760"
  }
]