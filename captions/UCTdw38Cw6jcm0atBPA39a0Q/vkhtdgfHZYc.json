[
  {
    "start": "0",
    "end": "314000"
  },
  {
    "text": "customers develop test and deploy custom solutions to the cloud you can find me",
    "start": "120",
    "end": "5580"
  },
  {
    "text": "on Twitter at Jason Taylor Dev or on my blog jasontaylor.dev",
    "start": "5580",
    "end": "11580"
  },
  {
    "text": "today we're here to look at authorization with asp.net core basic approach and a flexible approach",
    "start": "11880",
    "end": "20039"
  },
  {
    "text": "a little bit of background information before we get started so authentication is the process of",
    "start": "20039",
    "end": "26519"
  },
  {
    "text": "determining a user's identity whereas authorization is the process which",
    "start": "26519",
    "end": "31859"
  },
  {
    "text": "establishes which resources a user can access authentication is independent of",
    "start": "31859",
    "end": "37680"
  },
  {
    "text": "authorization but it's important to remember that authorization requires an authenticated user",
    "start": "37680",
    "end": "44879"
  },
  {
    "text": "so authorization determines access to resources but what exactly is a resource",
    "start": "44879",
    "end": "50219"
  },
  {
    "text": "well it can be many things inside the application it could be a page a view or",
    "start": "50219",
    "end": "56219"
  },
  {
    "text": "a capability outside it could be access to data such as in a database or access",
    "start": "56219",
    "end": "61260"
  },
  {
    "text": "to a file in the file system authorization also includes defining and",
    "start": "61260",
    "end": "67979"
  },
  {
    "text": "enforcing access control rules as policies which are then used by the system to accept or reject Access",
    "start": "67979",
    "end": "75900"
  },
  {
    "text": "Control requests so in this talk we'll be focused on authorization",
    "start": "75900",
    "end": "81900"
  },
  {
    "text": "I'll demonstrate how to apply and enforce access control with basic",
    "start": "81900",
    "end": "88020"
  },
  {
    "text": "authorization capabilities built into asp.net core and I'll show you that in some cases",
    "start": "88020",
    "end": "93900"
  },
  {
    "text": "that approach is going to be difficult to maintain it will take a long time to",
    "start": "93900",
    "end": "99240"
  },
  {
    "text": "develop and it will decrease the overall maintainability of your system I'll then demonstrate a flexible",
    "start": "99240",
    "end": "105240"
  },
  {
    "text": "approach to authorization by extending asp.net course authorization capabilities and show you how you can",
    "start": "105240",
    "end": "112380"
  },
  {
    "text": "overcome those limitations now the sample app I'll be using is built using Blazer webassembly hosted on",
    "start": "112380",
    "end": "119460"
  },
  {
    "text": "asp.net core and at the end of the presentation I'll share the code and slides for that application",
    "start": "119460",
    "end": "126438"
  },
  {
    "text": "before we get started we'll have a little bit of background information on authorization with asp.net core and then",
    "start": "126479",
    "end": "132480"
  },
  {
    "text": "with blazer webassembly now asp.net core of course supports simple authorization capabilities and",
    "start": "132480",
    "end": "139620"
  },
  {
    "text": "that includes allowing an authenticated user and allowing an anonymous user",
    "start": "139620",
    "end": "145440"
  },
  {
    "text": "it also includes sophisted authorization capabilities such as role-based claims-based and policy based so basic",
    "start": "145440",
    "end": "153120"
  },
  {
    "text": "capabilities are very good it's easy to create custom authorization policies and what's more it's also easy",
    "start": "153120",
    "end": "160920"
  },
  {
    "text": "to customize the authorization middleware so you can extend the built-in authorization capabilities to",
    "start": "160920",
    "end": "167280"
  },
  {
    "text": "suit your needs at its simplest form authorization asp.net core requires applying an",
    "start": "167280",
    "end": "174540"
  },
  {
    "text": "authorized attribute to a controller action or razor page you can see in this",
    "start": "174540",
    "end": "180060"
  },
  {
    "text": "example I've applied the attribute to the account controller so that means",
    "start": "180060",
    "end": "185459"
  },
  {
    "text": "that any of the actions in this controller require an authenticated user",
    "start": "185459",
    "end": "191340"
  },
  {
    "text": "and of course that's a problem because now nobody can log in so we need to fix that",
    "start": "191340",
    "end": "197159"
  },
  {
    "text": "here I've moved the authorize attribute down to logout so you only need to be an",
    "start": "197159",
    "end": "202620"
  },
  {
    "text": "authenticated user to log out but anyone can log in as another example I've applied the",
    "start": "202620",
    "end": "208080"
  },
  {
    "text": "authorized attribute to the top of the account controller again and then the allow Anonymous attribute to the login",
    "start": "208080",
    "end": "215900"
  },
  {
    "text": "asp.net core also supports role-based authorization in this example we've used",
    "start": "216120",
    "end": "221220"
  },
  {
    "text": "that same authorizer tribute to specify the role of Administrators to access the",
    "start": "221220",
    "end": "227040"
  },
  {
    "text": "actions within the administrator's controller so that means an authenticated user just needs to be in the administrator's role",
    "start": "227040",
    "end": "234239"
  },
  {
    "text": "next up we specified two roles administrators and accounts now this",
    "start": "234239",
    "end": "239879"
  },
  {
    "text": "actually means or so you have to be an authenticated user and you need to be in either the administrator's role or the",
    "start": "239879",
    "end": "247319"
  },
  {
    "text": "accounts role in this case I've used the authorizer",
    "start": "247319",
    "end": "252360"
  },
  {
    "text": "tribute two times so first for the administrator's role second for the accounts role and this means that an",
    "start": "252360",
    "end": "259380"
  },
  {
    "text": "authenticated user will now need to be a member of both roles so you can see that using the authorize",
    "start": "259380",
    "end": "265740"
  },
  {
    "text": "attribute you can combine it in various ways to set your Access Control policy",
    "start": "265740",
    "end": "272460"
  },
  {
    "text": "it also supports policy-based authorization again through the authorized attribute here I've specified",
    "start": "272460",
    "end": "279060"
  },
  {
    "text": "that to access the employees controller the authenticated user must satisfy the",
    "start": "279060",
    "end": "285060"
  },
  {
    "text": "requirements of the employees only policy now it's quite easy to Define policies",
    "start": "285060",
    "end": "290280"
  },
  {
    "text": "you can see here we're doing it when we add our startup services so add authorization I'm adding a new policy",
    "start": "290280",
    "end": "297120"
  },
  {
    "text": "called employees only with a single requirement the requirement is that the authenticated user must have the",
    "start": "297120",
    "end": "304500"
  },
  {
    "text": "employee number claim the value of that claim is not important for this policy",
    "start": "304500",
    "end": "310440"
  },
  {
    "text": "next up we'll have a look at authorization and Blazer webassembly so it supports the same basic",
    "start": "310440",
    "end": "316259"
  },
  {
    "text": "authorization capabilities because of course it's an asp.net core technology also",
    "start": "316259",
    "end": "322259"
  },
  {
    "text": "it includes the same sophisticated authorization capabilities such as role-based claims-based and policy-based",
    "start": "322259",
    "end": "328380"
  },
  {
    "text": "view-based resource-based the list goes on it also includes helpful authorization",
    "start": "328380",
    "end": "333900"
  },
  {
    "text": "components such as authorized view which will allow you to selectively display content on your page and authorize route",
    "start": "333900",
    "end": "340620"
  },
  {
    "text": "view which will be able to restrict certain routes to certain users it's important to remember that with",
    "start": "340620",
    "end": "347160"
  },
  {
    "text": "blazer webassembly or really any front-end web technology that the authorization is just there to improve",
    "start": "347160",
    "end": "353160"
  },
  {
    "text": "the user experience those checks can easily be bypassed and so we have to still enforce authorization on the back",
    "start": "353160",
    "end": "359580"
  },
  {
    "text": "end so in Blazer we can apply the authorized attribute to a routable page here I've",
    "start": "359580",
    "end": "366960"
  },
  {
    "text": "restricted access to the home page to authenticated users in this case I've opened up the login",
    "start": "366960",
    "end": "373740"
  },
  {
    "text": "page to allow Anonymous in Blazer we can apply that authorized attribute at a",
    "start": "373740",
    "end": "379020"
  },
  {
    "text": "global level and so here even though all other Pages might be restricted the login page remains accessible",
    "start": "379020",
    "end": "386280"
  },
  {
    "text": "with role-based authorization we can use the authorized attribute and specify the recommended roles",
    "start": "386280",
    "end": "392759"
  },
  {
    "text": "policy-based authorization again here's a page we're specifying the employee's only policy so users requirements of the",
    "start": "392759",
    "end": "400860"
  },
  {
    "text": "employer's only policy assess this page so apply the authorized View",
    "start": "400860",
    "end": "408240"
  },
  {
    "text": "display content so the home link available to authenticated users counter",
    "start": "408240",
    "end": "415100"
  },
  {
    "text": "able to users who are a member of either the administration the accounts role and",
    "start": "415100",
    "end": "420419"
  },
  {
    "text": "the user's link will only be available to imp to users who satisfy the employees only policy",
    "start": "420419",
    "end": "427680"
  },
  {
    "text": "in this case I've specified that the login nav link is available to users who are not authenticated",
    "start": "427680",
    "end": "435138"
  },
  {
    "start": "435000",
    "end": "818000"
  },
  {
    "text": "so let's kick off with the first demo this is a simple one we're going to add a role to an existing application using",
    "start": "435479",
    "end": "443520"
  },
  {
    "text": "basic authorization capabilities now I have the sample app this is that",
    "start": "443520",
    "end": "449699"
  },
  {
    "text": "Blazer webassembly I've posted on asp.net core and it has some functionality built into it such as",
    "start": "449699",
    "end": "456060"
  },
  {
    "text": "season of users and roles and that sort of thing so I'm going to start just by logging in",
    "start": "456060",
    "end": "462740"
  },
  {
    "text": "okay so you can see it's pretty simple straight out of the box but I've built a user's page where I'm able to come in",
    "start": "469259",
    "end": "475800"
  },
  {
    "text": "and edit the roles assigned to a user and I also have a claims page so that we",
    "start": "475800",
    "end": "481860"
  },
  {
    "text": "can view the claims associated with the user you can see that we're passing the roles in as a claim so we have access to",
    "start": "481860",
    "end": "488220"
  },
  {
    "text": "that information on Blazer webassembly what I would like to do is to create a",
    "start": "488220",
    "end": "493979"
  },
  {
    "text": "new auditor role so that I can allow the auditor user access to certain things within this application I'd like them to",
    "start": "493979",
    "end": "500879"
  },
  {
    "text": "be able to use the counter fetch data and view a list of users",
    "start": "500879",
    "end": "506759"
  },
  {
    "text": "so let's see what code changes we'll need to make to do that so I have a DB initializer",
    "start": "506759",
    "end": "514919"
  },
  {
    "text": "and in that initializer I've specified some roles so you can see I have administrators accounts and operations",
    "start": "514919",
    "end": "521279"
  },
  {
    "text": "I'll duplicate that line and we'll go ahead and create a Auditors role",
    "start": "521279",
    "end": "528440"
  },
  {
    "text": "and if I scroll down here we're using asp.net core identity to create these roles so I'll duplicate this line too",
    "start": "528720",
    "end": "538100"
  },
  {
    "text": "and we'll create the auditor's role now that's going to get the role into",
    "start": "539060",
    "end": "546060"
  },
  {
    "text": "the system so I could then assign it to the auditor but now we need to actually use that role to secure access",
    "start": "546060",
    "end": "553140"
  },
  {
    "text": "so I'll start with the back end and securing the controllers the weather forecast controller is",
    "start": "553140",
    "end": "560160"
  },
  {
    "text": "currently accessible to administrators and operations so we'll add auditors",
    "start": "560160",
    "end": "566060"
  },
  {
    "text": "I also need to add access for the user's controller",
    "start": "566760",
    "end": "572100"
  },
  {
    "text": "and the roles controller now we'll go to the front end and we'll",
    "start": "572100",
    "end": "579839"
  },
  {
    "text": "update the nav menu let's get rid of that",
    "start": "579839",
    "end": "586580"
  },
  {
    "text": "there we go so you can see here the counter needs to be updated so this",
    "start": "587100",
    "end": "593640"
  },
  {
    "text": "is the authorized view component we're specifying the roles for accessing the counter link",
    "start": "593640",
    "end": "598860"
  },
  {
    "text": "fetch data we'll update that users will update that that's actually only accessible to administrators and",
    "start": "598860",
    "end": "606000"
  },
  {
    "text": "administrators sorry claims will update that to even auditor doesn't really require that",
    "start": "606000",
    "end": "612180"
  },
  {
    "text": "all right so now that that's done I just need to restart that application I can",
    "start": "612180",
    "end": "617399"
  },
  {
    "text": "log in as an administrator and assign that role to the auditor then",
    "start": "617399",
    "end": "622680"
  },
  {
    "text": "we'll log back in as an auditor and see if we have the correct level of access",
    "start": "622680",
    "end": "628459"
  },
  {
    "text": "okay here we go",
    "start": "638580",
    "end": "643100"
  },
  {
    "text": "okay so in users we can click edit on auditor and assign the order to roll hit",
    "start": "655320",
    "end": "661740"
  },
  {
    "text": "in save then we can log out and hopefully the auditor will have access to what they require",
    "start": "661740",
    "end": "668660"
  },
  {
    "text": "logging in if you're looking for the passwords for",
    "start": "669120",
    "end": "674760"
  },
  {
    "text": "this application of course they're hard-coded so you can find them in the DB initializer",
    "start": "674760",
    "end": "680100"
  },
  {
    "text": "I might want to take that out before we go to production I'm registering I don't want to do that",
    "start": "680100",
    "end": "687680"
  },
  {
    "text": "and password one two three exclamation mark",
    "start": "692820",
    "end": "701300"
  },
  {
    "text": "no there we go",
    "start": "702540",
    "end": "708360"
  },
  {
    "text": "okay so fingers crossed yes we have access to the counter page but we don't have",
    "start": "708360",
    "end": "714060"
  },
  {
    "text": "access to it so we have access to the Canon nav menu That's visible but we don't access access to the counter page",
    "start": "714060",
    "end": "719519"
  },
  {
    "text": "because I forgot to open that up too so if we go to the counter page here I have to update this",
    "start": "719519",
    "end": "726000"
  },
  {
    "text": "you can see it's easy to make mistakes with this approach we have to get it right",
    "start": "726000",
    "end": "733620"
  },
  {
    "text": "claims fetch data",
    "start": "733620",
    "end": "739459"
  },
  {
    "text": "users so many changes for such a little requirement",
    "start": "739740",
    "end": "745260"
  },
  {
    "text": "edit and this is a sample application this is not an organization a large Enterprise",
    "start": "745260",
    "end": "750660"
  },
  {
    "text": "application all right let's see if we can get our reload to do its magic",
    "start": "750660",
    "end": "756120"
  },
  {
    "text": "no we can that's okay",
    "start": "756120",
    "end": "762260"
  },
  {
    "text": "one last time it should be okay",
    "start": "765120",
    "end": "769519"
  },
  {
    "text": "here we go",
    "start": "771779",
    "end": "774500"
  },
  {
    "text": "logging in so we're seeing really an example here of role-based Access Control",
    "start": "778320",
    "end": "785940"
  },
  {
    "text": "and we're seeing that it's difficult to maintain and it's time consuming we tend to make mistakes",
    "start": "785940",
    "end": "793620"
  },
  {
    "text": "and those mistakes are not so easy to detect",
    "start": "793620",
    "end": "798200"
  },
  {
    "text": "okay counter yes fetch data yes users we've given them a little bit more",
    "start": "799200",
    "end": "805620"
  },
  {
    "text": "access than what we want we don't really want Auditors to be able to edit users but okay we don't really have fine grain",
    "start": "805620",
    "end": "811500"
  },
  {
    "text": "control of these permissions as yet and we've got claims and we can see that they're in the Auditors role",
    "start": "811500",
    "end": "817380"
  },
  {
    "text": "so that's it so in that demonstration in order to add a single role we had to make code",
    "start": "817380",
    "end": "824579"
  },
  {
    "start": "818000",
    "end": "1069000"
  },
  {
    "text": "changes we had to test those changes when we're ready to go to production of course we're going to have to push it",
    "start": "824579",
    "end": "829620"
  },
  {
    "text": "through our build and deployment pipeline the application is going to go offline just to add a new role and of",
    "start": "829620",
    "end": "836040"
  },
  {
    "text": "course there's probably going to be some bugs there so we'll have to go back and fix those we didn't document any of this",
    "start": "836040",
    "end": "841440"
  },
  {
    "text": "so nobody knows who has access to what it's just in code that shall come to us",
    "start": "841440",
    "end": "846720"
  },
  {
    "text": "as developers and say hey who has access to what and we'll go we don't know hang on let me do a full solution code review",
    "start": "846720",
    "end": "853139"
  },
  {
    "text": "and document this for you because the document is out of date so that's the basic approach to",
    "start": "853139",
    "end": "859200"
  },
  {
    "text": "authorization with asp.net core using role-based access control so what would a flexible approach to",
    "start": "859200",
    "end": "865320"
  },
  {
    "text": "authorization look like well first and foremost I want it to be easy to add new roles and to configure",
    "start": "865320",
    "end": "871560"
  },
  {
    "text": "Access Control I want to be able to also reconfigure access control for existing roles and I",
    "start": "871560",
    "end": "877980"
  },
  {
    "text": "don't want to have to do a deployment for that I want to remove roles without impacting",
    "start": "877980",
    "end": "883500"
  },
  {
    "text": "existing Access Control checks if I want to remove a role now I have to update a whole bunch of code to do that",
    "start": "883500",
    "end": "889980"
  },
  {
    "text": "and I want to easily view Access Control list I don't want the business to come to me and say who has access to what I",
    "start": "889980",
    "end": "896279"
  },
  {
    "text": "just want that information to be available to them and automatic not something that I have to create and",
    "start": "896279",
    "end": "901320"
  },
  {
    "text": "document each time because I'm not very good at documentation I wanted to support all of these above",
    "start": "901320",
    "end": "908160"
  },
  {
    "text": "features as standard application features okay it should be built into the application",
    "start": "908160",
    "end": "914940"
  },
  {
    "text": "so now let's run this demo again this time with flexible authorization capabilities and see how much easier it",
    "start": "914940",
    "end": "921360"
  },
  {
    "text": "is so this is the same application but",
    "start": "921360",
    "end": "927180"
  },
  {
    "text": "we've extended asp.net causal authorization capabilities to make it more flexible",
    "start": "927180",
    "end": "933240"
  },
  {
    "text": "so I'll log in as the admin as before the admin is the one who's responsible",
    "start": "933240",
    "end": "939180"
  },
  {
    "text": "for managing the roles",
    "start": "939180",
    "end": "942260"
  },
  {
    "text": "now there's a few more pages here you can see that I have the ability to",
    "start": "945120",
    "end": "950339"
  },
  {
    "text": "manage roles so I'll go ahead and create a role I could also",
    "start": "950339",
    "end": "956459"
  },
  {
    "text": "add a sorry I could also update a role name or delete a role and it will not impact the code in any way whatsoever",
    "start": "956459",
    "end": "964440"
  },
  {
    "text": "then I have this really nice Access Control page where on the left hand side I have defined permissions and across",
    "start": "964440",
    "end": "971699"
  },
  {
    "text": "the top I have the roles and it's easy for me to assign certain permissions to certain roles so I'll assign the",
    "start": "971699",
    "end": "978120"
  },
  {
    "text": "auditor's view roles few users configure access control that's a bit more access than what I",
    "start": "978120",
    "end": "984959"
  },
  {
    "text": "want them to have but we'll add a new permission soon and we'll give them counter and forecast",
    "start": "984959",
    "end": "990180"
  },
  {
    "text": "as well you can see that administrators automatically get all of the permissions and actually when I add a new permission",
    "start": "990180",
    "end": "997139"
  },
  {
    "text": "to the system they'll get that too we don't have to do anything for that okay those changes have already been",
    "start": "997139",
    "end": "1003980"
  },
  {
    "text": "saved it just happens automatically as we click so I'll log out no I won't log out I almost forgot I've got to assign",
    "start": "1003980",
    "end": "1011060"
  },
  {
    "text": "that role to the auditor so we'll jump over to here and hit edit",
    "start": "1011060",
    "end": "1017300"
  },
  {
    "text": "and hit save there we go that's like a demo failure averted",
    "start": "1017300",
    "end": "1023779"
  },
  {
    "text": "so lucky so now we can sign in as the auditor",
    "start": "1023779",
    "end": "1029199"
  },
  {
    "text": "localhost and password one two three",
    "start": "1029240",
    "end": "1036860"
  },
  {
    "text": "excellent so we've got counter we've got fetch data we have users we don't",
    "start": "1036860",
    "end": "1042798"
  },
  {
    "text": "actually have the ability to edit that's that's been cleaned up a little bit we've got our claims we have this",
    "start": "1042799",
    "end": "1048079"
  },
  {
    "text": "interesting permissions claim one one seven that number represents the",
    "start": "1048079",
    "end": "1053299"
  },
  {
    "text": "permissions that the user has we'll learn more about that later we've got our roles and we've got our",
    "start": "1053299",
    "end": "1058880"
  },
  {
    "text": "Access Control they currently got the ability to change Access Control we don't want that we'll fix that up with a",
    "start": "1058880",
    "end": "1064940"
  },
  {
    "text": "new permission okay",
    "start": "1064940",
    "end": "1070100"
  },
  {
    "text": "so you've seen the basic approach you've seen the flexible approach I think we already know the difference",
    "start": "1070100",
    "end": "1075799"
  },
  {
    "text": "but let's do a quick comparison with the basic approach we had to make code changes there was no way to avoid that",
    "start": "1075799",
    "end": "1081860"
  },
  {
    "text": "we had to test those changes we did that manually we have if we deployed to",
    "start": "1081860",
    "end": "1087140"
  },
  {
    "text": "production we'll have to build and deploy it the application is going to go offline we'll probably need to make some",
    "start": "1087140",
    "end": "1093020"
  },
  {
    "text": "bug fixes along the way for whatever we missed and we'll need to document those changes which of course we forgot to do",
    "start": "1093020",
    "end": "1099980"
  },
  {
    "text": "now with the flexible flexible approach we weren't really required we just",
    "start": "1099980",
    "end": "1105380"
  },
  {
    "text": "needed an authorized user or an administrator to go in and create the role and to assign the necessary",
    "start": "1105380",
    "end": "1111080"
  },
  {
    "text": "permissions to that role that just gave us free time right and that means that we can focus on building new features or",
    "start": "1111080",
    "end": "1118460"
  },
  {
    "text": "fixing bugs in some other way delivering business value rather than looking after Access Control",
    "start": "1118460",
    "end": "1125780"
  },
  {
    "text": "so let's have another demo now let's see how we can use flexible access control or flexible authorization to add a new",
    "start": "1125780",
    "end": "1133460"
  },
  {
    "text": "permission to support a new requirement so we'd like to add a view Access",
    "start": "1133460",
    "end": "1139580"
  },
  {
    "text": "Control permission so that Auditors have the ability to view access control and other users potentially too but not to",
    "start": "1139580",
    "end": "1146179"
  },
  {
    "text": "configure it not to change Access Control we'll stop the application running",
    "start": "1146179",
    "end": "1152480"
  },
  {
    "text": "so to do this I need to open up the permissions file",
    "start": "1152480",
    "end": "1159880"
  },
  {
    "text": "which I'm currently storing as an enumeration now depending on how many permissions you have and the approach",
    "start": "1160220",
    "end": "1166820"
  },
  {
    "text": "that you would like to take this enumeration may not work so well with you but we can discuss other options as",
    "start": "1166820",
    "end": "1174320"
  },
  {
    "text": "well so to add the new Access Control permission I'll just go",
    "start": "1174320",
    "end": "1180620"
  },
  {
    "text": "view Access Control equal to 128 which is the next number in the sequence and",
    "start": "1180620",
    "end": "1186919"
  },
  {
    "text": "we'll talk about how this works and what flags what the flags attribute means pretty soon but for now I just want you",
    "start": "1186919",
    "end": "1194000"
  },
  {
    "text": "to focus on we're adding this new permission view Access Control now we need to go to the access control",
    "start": "1194000",
    "end": "1201140"
  },
  {
    "text": "controller there might be a better name for that and here",
    "start": "1201140",
    "end": "1208400"
  },
  {
    "text": "at the top of the controller we've specified that for a user to access the",
    "start": "1208400",
    "end": "1213559"
  },
  {
    "text": "actions within this controller they must have the configure Access Control permission so you can see with this",
    "start": "1213559",
    "end": "1220039"
  },
  {
    "text": "approach it's still nice and declarative it's a little bit better in fact because we don't have a magic string we have a",
    "start": "1220039",
    "end": "1226280"
  },
  {
    "text": "nice strongly typed string to define the permission I don't want to apply that permission to the whole controller any longer",
    "start": "1226280",
    "end": "1233780"
  },
  {
    "text": "I want to apply view Access Control let me just copy that",
    "start": "1233780",
    "end": "1239660"
  },
  {
    "text": "if you access control for get configuration",
    "start": "1239660",
    "end": "1244899"
  },
  {
    "text": "and I want to apply configure access control for update",
    "start": "1245120",
    "end": "1251299"
  },
  {
    "text": "configuration okay so the control is done we need to fix up the nav menu which is on the",
    "start": "1251299",
    "end": "1258200"
  },
  {
    "text": "front end so I'll go to the shed components to the nav menu",
    "start": "1258200",
    "end": "1263600"
  },
  {
    "text": "and here scrolling down",
    "start": "1263600",
    "end": "1268640"
  },
  {
    "text": "where is it there it is so we've got a flexible authorized view I had to build",
    "start": "1268640",
    "end": "1274640"
  },
  {
    "text": "a new component to extend the out of the box authorized view so that I could Supply permissions",
    "start": "1274640",
    "end": "1281600"
  },
  {
    "text": "so for this particular one I want it to allow users to access if",
    "start": "1281600",
    "end": "1288440"
  },
  {
    "text": "they have view Access Control or",
    "start": "1288440",
    "end": "1295580"
  },
  {
    "text": "configure access control so I'm able to specify those permissions in fact I can",
    "start": "1295580",
    "end": "1301100"
  },
  {
    "text": "combine things like the authorize attribute in different ways to specify",
    "start": "1301100",
    "end": "1306440"
  },
  {
    "text": "my Access Control policy so next up I need to open up the page",
    "start": "1306440",
    "end": "1312620"
  },
  {
    "text": "that's the nav menu so I'll go to admin Access Control index",
    "start": "1312620",
    "end": "1319340"
  },
  {
    "text": "and this can be the same so configure access control or view Access Control",
    "start": "1319880",
    "end": "1326980"
  },
  {
    "text": "there we go and that's it for the code changes now we just need to run the",
    "start": "1332480",
    "end": "1338240"
  },
  {
    "text": "application we can log in as administrator assign the new permission to the Auditors role",
    "start": "1338240",
    "end": "1344120"
  },
  {
    "text": "and then check it no we're not finished I forgot one thing okay so we haven't changed the access",
    "start": "1344120",
    "end": "1351860"
  },
  {
    "text": "control page to restrict changing assigning permissions and so to do that",
    "start": "1351860",
    "end": "1357980"
  },
  {
    "text": "we'll take this little check box and we'll give it a different state if",
    "start": "1357980",
    "end": "1365299"
  },
  {
    "text": "the user is authorized to configure",
    "start": "1365299",
    "end": "1369039"
  },
  {
    "text": "we'll use the flexible authorized view component will specify the permissions",
    "start": "1371600",
    "end": "1379159"
  },
  {
    "text": "and we're going to say if the permissions dot configure Access Control",
    "start": "1379159",
    "end": "1387880"
  },
  {
    "text": "if they're authorized",
    "start": "1388700",
    "end": "1392440"
  },
  {
    "text": "getting a lot of help there but it's not the greatest help and if they're not authorized",
    "start": "1394700",
    "end": "1401480"
  },
  {
    "text": "okay so if they're authorized we'll leave the checkbox alone they can go and change",
    "start": "1401480",
    "end": "1407059"
  },
  {
    "text": "those those permissions if they're not authorized we'll just get rid of this change event",
    "start": "1407059",
    "end": "1413120"
  },
  {
    "text": "and go ahead and set it to disabled that should do it",
    "start": "1413120",
    "end": "1418419"
  },
  {
    "text": "okay so we'll run that and have a look at the difference that's made",
    "start": "1419900",
    "end": "1425740"
  },
  {
    "text": "okay I'll log in as an administrator",
    "start": "1438919",
    "end": "1442779"
  },
  {
    "text": "and we'll go to access control we see view Access Control we'll assign",
    "start": "1451520",
    "end": "1458659"
  },
  {
    "text": "that to auditor and we'll revoke configure Access Control we can go ahead and log out",
    "start": "1458659",
    "end": "1465320"
  },
  {
    "text": "and log back in as an auditor",
    "start": "1465320",
    "end": "1468880"
  },
  {
    "text": "so this code work to do when applying a new permission but that's normal we're not we'll",
    "start": "1470720",
    "end": "1477620"
  },
  {
    "text": "typically do that when we're creating a new feature or implementing a new Access Control policy",
    "start": "1477620",
    "end": "1484600"
  },
  {
    "text": "here we go access control and it's locked down we can see access control but we can't change it",
    "start": "1490760",
    "end": "1499179"
  },
  {
    "start": "1499000",
    "end": "1688000"
  },
  {
    "text": "all right so I want to give you now an overview of how this flexible authorization system works before we",
    "start": "1500539",
    "end": "1507559"
  },
  {
    "text": "dive into the code and see the actual engine we use this system to create the",
    "start": "1507559",
    "end": "1513320"
  },
  {
    "text": "necessary roles and permissions the roles are created on the front end using a component or a page that we've created",
    "start": "1513320",
    "end": "1519799"
  },
  {
    "text": "and the permissions are created in the back end and then are available to be assigned on the front end so we assign",
    "start": "1519799",
    "end": "1525919"
  },
  {
    "text": "those permissions to roles as required and this can be done by any authorized user who has the capability to assign",
    "start": "1525919",
    "end": "1532940"
  },
  {
    "text": "permissions we then add those permissions as a claim",
    "start": "1532940",
    "end": "1538159"
  },
  {
    "text": "to the authenticated user then we add permissions based Access",
    "start": "1538159",
    "end": "1544820"
  },
  {
    "text": "Control checks where required we can use the authorized attribute the",
    "start": "1544820",
    "end": "1550480"
  },
  {
    "text": "authorized view component and we can use the asp.net core I authorized service to",
    "start": "1550480",
    "end": "1557419"
  },
  {
    "text": "enforce those permissions now the actual engine behind this is ASP",
    "start": "1557419",
    "end": "1563659"
  },
  {
    "text": "net core policy authorization what we do is create Dynamic policies to represent",
    "start": "1563659",
    "end": "1571039"
  },
  {
    "text": "the permissions that have been specified in Access Control we also need to manage roles we know",
    "start": "1571039",
    "end": "1577880"
  },
  {
    "text": "that roles Define a logical grouping of users that administrators can create the new roles as required",
    "start": "1577880",
    "end": "1584059"
  },
  {
    "text": "they can assign permissions to the roles and we we need to take note that from",
    "start": "1584059",
    "end": "1590059"
  },
  {
    "text": "this point forward role-based authorization in our code should be avoided we're taking those names those",
    "start": "1590059",
    "end": "1597260"
  },
  {
    "text": "magic strings the roles out of the application so that our code base is",
    "start": "1597260",
    "end": "1602720"
  },
  {
    "text": "shielded from those organizational changes",
    "start": "1602720",
    "end": "1607120"
  },
  {
    "text": "managing permissions permissions of course to find granular access to resources we're much better to describe",
    "start": "1607820",
    "end": "1614299"
  },
  {
    "text": "exactly what a permission will give a user than we are if we just assign roles",
    "start": "1614299",
    "end": "1620480"
  },
  {
    "text": "to various capabilities developers create permissions as necessary and permissions are not",
    "start": "1620480",
    "end": "1627080"
  },
  {
    "text": "assigned directly to a user okay so we assign permissions to roles and then the",
    "start": "1627080",
    "end": "1632840"
  },
  {
    "text": "user inherits the permissions of any roles that they're a member of",
    "start": "1632840",
    "end": "1638419"
  },
  {
    "text": "the authorization engine as mentioned is built entirely using policy-based authorization we saw an example of an",
    "start": "1638419",
    "end": "1645620"
  },
  {
    "text": "authorization policy it was the employees only policy which required the user to have an employee number Claim",
    "start": "1645620",
    "end": "1651860"
  },
  {
    "text": "well we're building Dynamic policies to suit the permissions required",
    "start": "1651860",
    "end": "1657200"
  },
  {
    "text": "so we can use a custom authorized attribute or other ways to specify",
    "start": "1657200",
    "end": "1662240"
  },
  {
    "text": "required permissions and those required permissions are then translated into a policy name",
    "start": "1662240",
    "end": "1669500"
  },
  {
    "text": "so we're generating a policy name it's that policy name that will be used by a",
    "start": "1669500",
    "end": "1675740"
  },
  {
    "text": "custom policy provider to create the policy for us",
    "start": "1675740",
    "end": "1680779"
  },
  {
    "text": "now the policy will be dynamically created using a custom policy provider and we're going to see or how all of",
    "start": "1680779",
    "end": "1686960"
  },
  {
    "text": "that works so now I'll walk through we'll have a look at the flexible authorization",
    "start": "1686960",
    "end": "1692720"
  },
  {
    "start": "1688000",
    "end": "2019000"
  },
  {
    "text": "engine and how I was able to extend the capabilities of asp.net core to implement this and to make our life",
    "start": "1692720",
    "end": "1698240"
  },
  {
    "text": "easier okay we'll start with",
    "start": "1698240",
    "end": "1706000"
  },
  {
    "text": "permissions.cs we saw that briefly before",
    "start": "1706179",
    "end": "1710860"
  },
  {
    "text": "so permissions.cs is an enumeration it's currently int based and that means",
    "start": "1713600",
    "end": "1720320"
  },
  {
    "text": "that there's 32 possible permissions that we can Define for this system if we change it to long we can have up to 64",
    "start": "1720320",
    "end": "1727700"
  },
  {
    "text": "possible permissions if we're going to go over that for a complex application we'll need to think about a different",
    "start": "1727700",
    "end": "1733940"
  },
  {
    "text": "strategy for storing our permissions perhaps we'll put them in the database and that will change how we add",
    "start": "1733940",
    "end": "1740600"
  },
  {
    "text": "permissions to the users claims and it will also change how we produce the",
    "start": "1740600",
    "end": "1746840"
  },
  {
    "text": "policies to enforce those permissions but it will be the same engine there will be some changes required so we're",
    "start": "1746840",
    "end": "1753980"
  },
  {
    "text": "using flags and that allows us to combine these permissions in really interesting ways I created a net",
    "start": "1753980",
    "end": "1760880"
  },
  {
    "text": "interactive notebook so that we can explore this together so permissions in this example are using",
    "start": "1760880",
    "end": "1767600"
  },
  {
    "text": "the flags enumeration and we have permissions a through to e now you can see that those values are in powers of",
    "start": "1767600",
    "end": "1774260"
  },
  {
    "text": "two we also have some special values permissions none and permissions all",
    "start": "1774260",
    "end": "1779779"
  },
  {
    "text": "which is the complement of none now we can do really interesting things",
    "start": "1779779",
    "end": "1784820"
  },
  {
    "text": "with these permissions so you can see here I've defined some user permissions permissions a",
    "start": "1784820",
    "end": "1791299"
  },
  {
    "text": "or permission C and if we add the binary values of these permissions together",
    "start": "1791299",
    "end": "1796640"
  },
  {
    "text": "which is 1 and 100 we get zero zero one zero one so these flags represent the",
    "start": "1796640",
    "end": "1805220"
  },
  {
    "text": "individual permissions of A and C if we convert that to the integer value or the",
    "start": "1805220",
    "end": "1812240"
  },
  {
    "text": "decimal value then we get five and that's the value that was being stored",
    "start": "1812240",
    "end": "1817399"
  },
  {
    "text": "in the permissions claim and that's how we know using a single number what permissions the user has",
    "start": "1817399",
    "end": "1824179"
  },
  {
    "text": "we also defined required permissions the same way in this way we've got required permissions of A or B so if we're",
    "start": "1824179",
    "end": "1832220"
  },
  {
    "text": "authorizing a user against those required permissions this user the user needs to have either permission A or B",
    "start": "1832220",
    "end": "1840020"
  },
  {
    "text": "in this case the user would be authorized because they have a if we add these two permissions together",
    "start": "1840020",
    "end": "1845960"
  },
  {
    "text": "it's 1 and 10 binary and that converts to decimal 11 or 3.",
    "start": "1845960",
    "end": "1852980"
  },
  {
    "text": "so let's have a look at how we can use this so first thing I can do is I can just",
    "start": "1852980",
    "end": "1859360"
  },
  {
    "text": "right line the user permissions to the console the enumeration and it will give",
    "start": "1859360",
    "end": "1864679"
  },
  {
    "text": "me the string value so user permissions a comma C",
    "start": "1864679",
    "end": "1869840"
  },
  {
    "text": "the required permissions as you remember will be a comma B and then I can also output the decimal",
    "start": "1869840",
    "end": "1877279"
  },
  {
    "text": "value as an in which is 5 and 3. I can check permissions so we know what",
    "start": "1877279",
    "end": "1884360"
  },
  {
    "text": "the required and the user permissions are and they're authorized if they have",
    "start": "1884360",
    "end": "1890000"
  },
  {
    "text": "that particular permission so either A or B",
    "start": "1890000",
    "end": "1895100"
  },
  {
    "text": "here we're using the logical or operator to add a permission so they have a and C",
    "start": "1895100",
    "end": "1900919"
  },
  {
    "text": "we're adding B so they now have a b and c and here we're using the exclusive or",
    "start": "1900919",
    "end": "1907520"
  },
  {
    "text": "operator to remove that permission so back to A and C now these operators are",
    "start": "1907520",
    "end": "1913159"
  },
  {
    "text": "quite nice for adding and removing permissions but it's not something that you'll typically do with the flexible",
    "start": "1913159",
    "end": "1919159"
  },
  {
    "text": "authorization generally speaking the most that happens is we Loop through the wall rolls we build up a collection of",
    "start": "1919159",
    "end": "1926299"
  },
  {
    "text": "permissions for that user and we assign it to the claim so we're not tending to operate on permissions in this way but",
    "start": "1926299",
    "end": "1932299"
  },
  {
    "text": "it's good to know that you can now here is how we create those Dynamic",
    "start": "1932299",
    "end": "1937520"
  },
  {
    "text": "policy names that allow us the custom policy provider to generate a policy for",
    "start": "1937520",
    "end": "1942679"
  },
  {
    "text": "us we can see the required permissions A and B we're going to prefix the policy",
    "start": "1942679",
    "end": "1948620"
  },
  {
    "text": "name with the word permissions and then we're going to append to that the",
    "start": "1948620",
    "end": "1954140"
  },
  {
    "text": "decimal value of the permissions so this particular policy will be called",
    "start": "1954140",
    "end": "1960080"
  },
  {
    "text": "permissions 3 and based on that asp.net core will be able to build a new policy",
    "start": "1960080",
    "end": "1966700"
  },
  {
    "text": "extracting that three and then enforcing the required permissions and we'll see",
    "start": "1966700",
    "end": "1972020"
  },
  {
    "text": "how that works this is the reverse of that code where we take the policy name permissions uh I",
    "start": "1972020",
    "end": "1978919"
  },
  {
    "text": "don't know what that one will be a plus b and c and we take out I think it's seven and then we take out the",
    "start": "1978919",
    "end": "1984919"
  },
  {
    "text": "permissions value from the policy name there we go so we can see from that value of seven the required permissions",
    "start": "1984919",
    "end": "1991399"
  },
  {
    "text": "are a b and c and the policy name was permission seven",
    "start": "1991399",
    "end": "1997120"
  },
  {
    "text": "oh sorry that was just updating the required permissions and policy name so I read that wrong but here's how we can",
    "start": "1999140",
    "end": "2004899"
  },
  {
    "text": "get the permissions value so we're taking out the integer value passing it and then casting it into the permissions",
    "start": "2004899",
    "end": "2012039"
  },
  {
    "text": "type so if I run that again permission seven a b and c",
    "start": "2012039",
    "end": "2018940"
  },
  {
    "text": "so that's how the permissions CS works now let's have a look at some other",
    "start": "2018940",
    "end": "2023980"
  },
  {
    "start": "2019000",
    "end": "2507000"
  },
  {
    "text": "parts we've got to figure out the best place to move to next how about the policy name helper that's",
    "start": "2023980",
    "end": "2031299"
  },
  {
    "text": "a simple one we can check is it a valid policy name we can pass in the policy name and if it",
    "start": "2031299",
    "end": "2037840"
  },
  {
    "text": "starts with the prefix which is permissions uh then we're going to say yes that's",
    "start": "2037840",
    "end": "2043480"
  },
  {
    "text": "that's a valid policy name we can generate a policy name given a set of permissions and that'll be the prefix",
    "start": "2043480",
    "end": "2050138"
  },
  {
    "text": "and the permissions value we can get the permissions from a policy Name by using the prefix length and",
    "start": "2050139",
    "end": "2058780"
  },
  {
    "text": "grabbing that in value casting it back to permissions so that's just a nice little helper function",
    "start": "2058780",
    "end": "2065320"
  },
  {
    "text": "let's see what else we have we've got the authorizer tribute custom claim types are simple the claim name",
    "start": "2065320",
    "end": "2073060"
  },
  {
    "text": "will be permissions and we've just got a strongly typed value for that let's see",
    "start": "2073060",
    "end": "2080579"
  },
  {
    "text": "that one's just a little helpful one that I use to get a list of available permissions where I Loop through the",
    "start": "2081220",
    "end": "2087220"
  },
  {
    "text": "values of the enumeration and display the value so let's get into the important parts",
    "start": "2087220",
    "end": "2094599"
  },
  {
    "text": "here's the flexible authorization policy provider",
    "start": "2094599",
    "end": "2100320"
  },
  {
    "text": "so you can see it's based on the default authorization policy provider",
    "start": "2100420",
    "end": "2106000"
  },
  {
    "text": "and there can only be one policy provider for asp.net core so we base it on that and we ensure that we retain",
    "start": "2106000",
    "end": "2113260"
  },
  {
    "text": "calls to the base class to get the policy this is where it all happens you can see",
    "start": "2113260",
    "end": "2119680"
  },
  {
    "text": "in itself building the dynamic policy is quite simple this is all of it",
    "start": "2119680",
    "end": "2124720"
  },
  {
    "text": "so first we try to see if the policy has already been created because this may",
    "start": "2124720",
    "end": "2129940"
  },
  {
    "text": "not be the first time we've checked against these permissions if it has not been created if the policy",
    "start": "2129940",
    "end": "2136240"
  },
  {
    "text": "comes back as null and it is a valid policy name it's one of our permissions policies then we simply extract the",
    "start": "2136240",
    "end": "2143380"
  },
  {
    "text": "permissions value from it so we have the value of the enumeration there then we use the authorization policy",
    "start": "2143380",
    "end": "2150400"
  },
  {
    "text": "Builder to add a single requirement to that policy and that requirement is",
    "start": "2150400",
    "end": "2155440"
  },
  {
    "text": "permission authorization requirement and we pass in the required permissions we",
    "start": "2155440",
    "end": "2160480"
  },
  {
    "text": "then build that policy and add it to the options by policy name and the actual",
    "start": "2160480",
    "end": "2166000"
  },
  {
    "text": "policy itself now of course if the policy already existed we skip all of that and just",
    "start": "2166000",
    "end": "2172240"
  },
  {
    "text": "return the policy so the policies are created using a kind of lazy fashion and",
    "start": "2172240",
    "end": "2178420"
  },
  {
    "text": "if it's already been created once it will just be returned we need to look at the permission",
    "start": "2178420",
    "end": "2186520"
  },
  {
    "text": "authorization requirement now which was the only requirement of a permissions policy you can see that it's really just",
    "start": "2186520",
    "end": "2193119"
  },
  {
    "text": "a container for data it's based on the eye authorization requirement and it stores the required permissions",
    "start": "2193119",
    "end": "2199960"
  },
  {
    "text": "so there's another class that will actually help us to evaluate that and it's the policy authorization Handler",
    "start": "2199960",
    "end": "2207760"
  },
  {
    "text": "there's a little bit of code in here but in the end it's quite simple first we find the permissions claim and that",
    "start": "2207760",
    "end": "2214300"
  },
  {
    "text": "gives us all of the users permissions then we assess that against the required",
    "start": "2214300",
    "end": "2219520"
  },
  {
    "text": "permissions and if they're authorized we simply return context dot succeed with",
    "start": "2219520",
    "end": "2225940"
  },
  {
    "text": "the requirement and return task dot completed for anything else we're just",
    "start": "2225940",
    "end": "2230980"
  },
  {
    "text": "exiting they won't be authorized let's see what else we have",
    "start": "2230980",
    "end": "2238740"
  },
  {
    "text": "ah yes sometimes we're writing procedural code and with asp.net core",
    "start": "2239920",
    "end": "2245980"
  },
  {
    "text": "when we do that when we want to authorize procedural code we use the I",
    "start": "2245980",
    "end": "2251140"
  },
  {
    "text": "authorization service I've extended that within with a authorized async method",
    "start": "2251140",
    "end": "2257980"
  },
  {
    "text": "that allows us to pass in permissions and of course it's then just going to",
    "start": "2257980",
    "end": "2263380"
  },
  {
    "text": "authorize against a dynamic policy so all we do is say hey you want to authorize against permissions then",
    "start": "2263380",
    "end": "2269140"
  },
  {
    "text": "you'll need this policy which we just generate the name for on the Fly",
    "start": "2269140",
    "end": "2274420"
  },
  {
    "text": "yeah let me see we haven't looked at the",
    "start": "2274420",
    "end": "2279700"
  },
  {
    "text": "authorizer tribute attribute so the authorized attribute is based on the",
    "start": "2279700",
    "end": "2285520"
  },
  {
    "text": "standard out of the box one all it does is add a new permissions property which when you set the value",
    "start": "2285520",
    "end": "2291880"
  },
  {
    "text": "doesn't store the permissions value it actually just sets the policy name",
    "start": "2291880",
    "end": "2297040"
  },
  {
    "text": "so you know what we're doing here is we're saying authorize permissions a something like that but we could also do",
    "start": "2297040",
    "end": "2303420"
  },
  {
    "text": "authorize policy equals permissions one we're just making it easy for the user",
    "start": "2303420",
    "end": "2309820"
  },
  {
    "text": "to interact with the flexible authorization system and to specify their permissions in a very clean and",
    "start": "2309820",
    "end": "2315280"
  },
  {
    "text": "easy to understand way so we can set the policy name when we set the permissions and we can also get the permissions from",
    "start": "2315280",
    "end": "2322240"
  },
  {
    "text": "that policy name as required so we've extended asp.net course",
    "start": "2322240",
    "end": "2327579"
  },
  {
    "text": "authorization but it's still doing all the work it's just policy-based authorization under the hood",
    "start": "2327579",
    "end": "2335460"
  },
  {
    "text": "now there's some other bits and pieces there um let me see let me just make sure I",
    "start": "2336460",
    "end": "2342160"
  },
  {
    "text": "haven't missed anything from this section",
    "start": "2342160",
    "end": "2345540"
  },
  {
    "text": "now we looked at that okay how about inside of authorization on the server",
    "start": "2348099",
    "end": "2355119"
  },
  {
    "text": "we have the application user claims principle Factory",
    "start": "2355119",
    "end": "2360280"
  },
  {
    "text": "and that is the actual class that's responsible for adding the claim that",
    "start": "2360280",
    "end": "2366820"
  },
  {
    "text": "contains the user's permissions so you can see here we get the roles we Loop through the roles we build up the user",
    "start": "2366820",
    "end": "2373900"
  },
  {
    "text": "permissions based but the user inherits all of the role permissions for which they're a member of and we set the claim",
    "start": "2373900",
    "end": "2380020"
  },
  {
    "text": "so that's available there's a little bit of work required on",
    "start": "2380020",
    "end": "2385180"
  },
  {
    "text": "the front end as well but the work is there just to take a",
    "start": "2385180",
    "end": "2391540"
  },
  {
    "text": "take the roles from one format and convert them into another format",
    "start": "2391540",
    "end": "2399099"
  },
  {
    "text": "and that just makes it a little bit easier for us to work with otherwise for Blazer webassembly raw based",
    "start": "2399099",
    "end": "2404380"
  },
  {
    "text": "authorization doesn't actually work you need this little bit of code to get the roles claim into the right format",
    "start": "2404380",
    "end": "2412619"
  },
  {
    "text": "oh here's our flexible authorized view that's the component that we built to allow us to specify permissions and",
    "start": "2413260",
    "end": "2420040"
  },
  {
    "text": "therefore selectively show different components on a page and again it's driven by policy-based authorization",
    "start": "2420040",
    "end": "2425980"
  },
  {
    "text": "under the hood all right I think that's it for the Code",
    "start": "2425980",
    "end": "2433540"
  },
  {
    "text": "walkthrough does anyone have any questions on what we've covered so far",
    "start": "2433540",
    "end": "2439140"
  },
  {
    "text": "yes yes",
    "start": "2439359",
    "end": "2446460"
  },
  {
    "text": "[Music] so so you're saying that for the access",
    "start": "2453080",
    "end": "2459700"
  },
  {
    "text": "control view where it shows the permissions you couldn't really show it to the business because it's not easy to",
    "start": "2459700",
    "end": "2466180"
  },
  {
    "text": "associate a particular permission with a page and there's really not that much information there you could have a",
    "start": "2466180",
    "end": "2472780"
  },
  {
    "text": "description or something per permission would be nice and in actual fact I haven't even put spaces in between the",
    "start": "2472780",
    "end": "2478540"
  },
  {
    "text": "words so there's definitely some work that we can do there and one other thing is to apply some attributes to provide",
    "start": "2478540",
    "end": "2485680"
  },
  {
    "text": "additional information to each permission in the flag and of course that will depend on whether you're using",
    "start": "2485680",
    "end": "2491380"
  },
  {
    "text": "the enum or whether you decide to take a different approach for the storage of your permissions but yeah you can",
    "start": "2491380",
    "end": "2496540"
  },
  {
    "text": "certainly flesh that out further cool",
    "start": "2496540",
    "end": "2501240"
  },
  {
    "text": "all right let's continue slide deck",
    "start": "2501940",
    "end": "2506640"
  },
  {
    "start": "2507000",
    "end": "2627000"
  },
  {
    "text": "okay so in summary I've demonstrated authorization with asp.net core",
    "start": "2509020",
    "end": "2516700"
  },
  {
    "text": "you saw that with the basic approach to authorization with asp.net core and",
    "start": "2516700",
    "end": "2522820"
  },
  {
    "text": "using role-based access control doing something as simple as adding a new role took a lot of work we had to write code",
    "start": "2522820",
    "end": "2530800"
  },
  {
    "text": "we had to build we had to deploy we had to do bug fixes and we had to document",
    "start": "2530800",
    "end": "2536200"
  },
  {
    "text": "those changes which we didn't do and we did fix bugs right I didn't plan to do that that's just the nature of",
    "start": "2536200",
    "end": "2543099"
  },
  {
    "text": "that style of authorization It's tricky to get right but then we saw the flexible approach to",
    "start": "2543099",
    "end": "2549520"
  },
  {
    "text": "authorization which was built by extending asp.net cores authorization",
    "start": "2549520",
    "end": "2554859"
  },
  {
    "text": "capabilities and we could see then that adding a new role was trivial and that adding a new permission took",
    "start": "2554859",
    "end": "2562060"
  },
  {
    "text": "the expected amount of effort nothing more than is required now if your application is simple and it",
    "start": "2562060",
    "end": "2569920"
  },
  {
    "text": "has a small user base then the flexible authorization approach is probably Overkill",
    "start": "2569920",
    "end": "2575140"
  },
  {
    "text": "if you only have an administrator's role and a user's role you can definitely get",
    "start": "2575140",
    "end": "2580480"
  },
  {
    "text": "by with basic approach to authorization but for most production applications",
    "start": "2580480",
    "end": "2585520"
  },
  {
    "text": "especially those in large organizations the flexible approach is essential",
    "start": "2585520",
    "end": "2592060"
  },
  {
    "text": "it's going to Shield your code base from organizational changes it'll Shield your",
    "start": "2592060",
    "end": "2597880"
  },
  {
    "text": "your code base from Department renames from organizational restructures from new departments that are forming",
    "start": "2597880",
    "end": "2605079"
  },
  {
    "text": "it'll only require an administrator or an authenticated user to maintain those",
    "start": "2605079",
    "end": "2611380"
  },
  {
    "text": "changes depending on their access level and that's going to give us free time",
    "start": "2611380",
    "end": "2617260"
  },
  {
    "text": "time that we can use to fix bugs or develop to develop new features we'll be",
    "start": "2617260",
    "end": "2623260"
  },
  {
    "text": "providing greater business value as a result thank you for attending my presentation",
    "start": "2623260",
    "end": "2629680"
  },
  {
    "start": "2627000",
    "end": "2808000"
  },
  {
    "text": "today thank you for listening and if you're Keen to learn more you can access",
    "start": "2629680",
    "end": "2634720"
  },
  {
    "text": "the code and slides on GitHub so it's on github.com jasontaylordev",
    "start": "2634720",
    "end": "2640720"
  },
  {
    "text": "forward slash flexible asp.net core Dash authorization I hope you enjoy the rest",
    "start": "2640720",
    "end": "2646660"
  },
  {
    "text": "of your conference thank you [Applause]",
    "start": "2646660",
    "end": "2652300"
  },
  {
    "text": "thank you",
    "start": "2652300",
    "end": "2654420"
  },
  {
    "text": "now I've got plenty of time if anyone has further questions yes",
    "start": "2657339",
    "end": "2664319"
  },
  {
    "text": "so different levels of roles yeah so I guess it depends on how many levels you",
    "start": "2679359",
    "end": "2685359"
  },
  {
    "text": "need to support for your different levels of roles to support different levels of departments one thing that you",
    "start": "2685359",
    "end": "2691839"
  },
  {
    "text": "can do if it's just two levels then again it can just be metadata on the existing roles that can specify kind of",
    "start": "2691839",
    "end": "2698980"
  },
  {
    "text": "the higher level department but if you did want to do nested roles and that",
    "start": "2698980",
    "end": "2704140"
  },
  {
    "text": "needed to be represented in your application then potentially what you could do if using asp.net core identity",
    "start": "2704140",
    "end": "2710800"
  },
  {
    "text": "is to specify a parent role and basically build up a tree structure and",
    "start": "2710800",
    "end": "2715960"
  },
  {
    "text": "assign permissions to different levels of those roles now of course you then have to decide",
    "start": "2715960",
    "end": "2721900"
  },
  {
    "text": "are there permissions at different levels and do I navigate down that structure assigning those users of the",
    "start": "2721900",
    "end": "2727960"
  },
  {
    "text": "permissions as I go or will it just be permissions at the leaf nodes and so",
    "start": "2727960",
    "end": "2734140"
  },
  {
    "text": "only at the bottom level will the permissions be assigned so you have to figure out that for yourself obviously",
    "start": "2734140",
    "end": "2740140"
  },
  {
    "text": "it'll increase the complexity but in the end the user just gets that same set of permissions",
    "start": "2740140",
    "end": "2747180"
  },
  {
    "text": "any other questions yes",
    "start": "2748119",
    "end": "2751920"
  },
  {
    "text": "is it so the question is is it possible to combine this approach with regular policy-based authorization and yes I",
    "start": "2765160",
    "end": "2773380"
  },
  {
    "text": "haven't overridden the policy-based authorization system so you can still use you can still use policies you can",
    "start": "2773380",
    "end": "2781240"
  },
  {
    "text": "use roles I wouldn't recommend roles though you can use resource you can use",
    "start": "2781240",
    "end": "2787500"
  },
  {
    "text": "view based access control because all I did was really add permissions based",
    "start": "2787500",
    "end": "2793420"
  },
  {
    "text": "Access Control a question any anyone else",
    "start": "2793420",
    "end": "2800400"
  },
  {
    "text": "cool let's go get a coffee and enjoy the rest of the conference thanks everyone",
    "start": "2800500",
    "end": "2806020"
  },
  {
    "text": "cheers",
    "start": "2806020",
    "end": "2808560"
  }
]