[
  {
    "text": "all right well everyone thanks for coming I have to be perfectly honest with you",
    "start": "8029",
    "end": "14779"
  },
  {
    "text": "that preparing for this talk I was a nervous wreck it was I mean coming here",
    "start": "14779",
    "end": "23520"
  },
  {
    "text": "in DC London it's a big deal and I thought how am I going to do this a lot",
    "start": "23520",
    "end": "28980"
  },
  {
    "text": "of people were very considerate and consoling a friend's family letting me know you know it's going to be all right",
    "start": "28980",
    "end": "35730"
  },
  {
    "text": "you'll be fine just you just have to break the ice to tell a joke I'm not very funny and I",
    "start": "35730",
    "end": "42270"
  },
  {
    "text": "don't like a laugh so that's not going to work so the the next best solution",
    "start": "42270",
    "end": "47699"
  },
  {
    "text": "was tell them a story engage with your audience talk to them you know have some",
    "start": "47699",
    "end": "55500"
  },
  {
    "text": "sort of bond by you know relating something I thought I could just work tell the story so here we go",
    "start": "55500",
    "end": "63030"
  },
  {
    "text": "it's a story of The Very Hungry Caterpillar now once upon a time there",
    "start": "63030",
    "end": "71369"
  },
  {
    "text": "was a creepy-looking son look at that thing just gazing down those creepy eyes",
    "start": "71369",
    "end": "78360"
  },
  {
    "text": "gazing down on to a caterpillar that happened to be incredibly hungry not",
    "start": "78360",
    "end": "84869"
  },
  {
    "text": "only hungry but quite an intelligent caterpillar because it knew how to solve",
    "start": "84869",
    "end": "91259"
  },
  {
    "text": "this hunger problem we were going to need food so that's what happened lots",
    "start": "91259",
    "end": "98580"
  },
  {
    "text": "of food was eaten those apples and pears and this is good this went over five days a lot of eating happened what",
    "start": "98580",
    "end": "106770"
  },
  {
    "text": "happened now on the last day of all this eating's that you can see down here in",
    "start": "106770",
    "end": "114179"
  },
  {
    "text": "the same sitting one after the other ice cream than a pickle now I've done this",
    "start": "114179",
    "end": "120479"
  },
  {
    "text": "let me tell you I'm not surprised what happens next because it does definitely 100% result in a tummy ache now again",
    "start": "120479",
    "end": "133770"
  },
  {
    "text": "intelligent caterpillar knew what was going on knew how to resolve this problem went on a Dilys",
    "start": "133770",
    "end": "141620"
  },
  {
    "text": "felt a lot better now we don't have a little caterpillar anymore and we don't",
    "start": "141620",
    "end": "148080"
  },
  {
    "text": "have a hungry caterpillar anymore we have as the book tells us a big fat",
    "start": "148080",
    "end": "153120"
  },
  {
    "text": "caterpillar now the caterpillar through",
    "start": "153120",
    "end": "160500"
  },
  {
    "text": "some crazy means that I don't think anyone understands turns into a cocoon",
    "start": "160500",
    "end": "167450"
  },
  {
    "text": "does anyone know how I gotta pull it turns into a cocoon know anyone I did a",
    "start": "167450",
    "end": "174450"
  },
  {
    "text": "bit of research and what I came up with was sorcery it's just they end up in a cocoon and",
    "start": "174450",
    "end": "180870"
  },
  {
    "text": "that is fair enough now at the end of the cocoon part the wood I don't",
    "start": "180870",
    "end": "187620"
  },
  {
    "text": "understand emerges this lovely butterfly not only",
    "start": "187620",
    "end": "194790"
  },
  {
    "text": "is it beautiful but it also has upside-down wings yeah the wrong way",
    "start": "194790",
    "end": "200489"
  },
  {
    "text": "around and that that is the key now the",
    "start": "200489",
    "end": "205829"
  },
  {
    "text": "part I want to focus on really is the bit I don't understand the sorcery bit which is somehow we have a caterpillar",
    "start": "205829",
    "end": "214709"
  },
  {
    "text": "and it's some form of function that turns it into a cocoon of butterfly and",
    "start": "214709",
    "end": "224810"
  },
  {
    "text": "I have no idea why and we don't need to know why right it's just it's just what happens mother nature gives us now",
    "start": "224810",
    "end": "231239"
  },
  {
    "text": "Mother Nature has given us a function called make butterfly and this this is",
    "start": "231239",
    "end": "237420"
  },
  {
    "text": "it so we have make butterfly takes a caterpillar we get a cocoon butterfly back and that really is what is key is",
    "start": "237420",
    "end": "246510"
  },
  {
    "text": "that we don't know we don't care we just do it now it's not quite that simple",
    "start": "246510",
    "end": "255480"
  },
  {
    "text": "because I have seen out in the wild ugly butterflies look at this thing it's",
    "start": "255480",
    "end": "263039"
  },
  {
    "text": "all gone you know sticky outfits white wings where is the colour here it's",
    "start": "263039",
    "end": "269490"
  },
  {
    "text": "quite depressing for this poor butterfly but there is we've seen that we've seen",
    "start": "269490",
    "end": "276990"
  },
  {
    "text": "the story that you can make a beautiful butterfly so let's revisit what happened",
    "start": "276990",
    "end": "284100"
  },
  {
    "text": "and see if it's possible if we can work out what the trick is so what happened",
    "start": "284100",
    "end": "290760"
  },
  {
    "text": "is there's a caterpillar so I kind of fell there was food and so we feed a",
    "start": "290760",
    "end": "300120"
  },
  {
    "text": "caterpillar this happens and then somehow it ends up in a cocoon now this",
    "start": "300120",
    "end": "306930"
  },
  {
    "text": "may look like my wife's handbag but I assure you 100% that this is a",
    "start": "306930",
    "end": "313890"
  },
  {
    "text": "top-of-the-line cocoon so what happens is the caterpillar goes inside I don't",
    "start": "313890",
    "end": "319590"
  },
  {
    "text": "know how we have a sorcery and there's some wriggling around like this and lots",
    "start": "319590",
    "end": "326880"
  },
  {
    "text": "of crazy stuff goes on no one really knows and it's really hard to do this",
    "start": "326880",
    "end": "332790"
  },
  {
    "text": "standing up and then out comes a beautiful butterfly with the upside-down",
    "start": "332790",
    "end": "339630"
  },
  {
    "text": "wings right there we go that is how you make a beautiful butterfly",
    "start": "339630",
    "end": "345410"
  },
  {
    "text": "what is the secret someone tell me why did we not end up with one of those",
    "start": "345410",
    "end": "352440"
  },
  {
    "text": "boring white butterflies what I think it",
    "start": "352440",
    "end": "359130"
  },
  {
    "text": "is the food it's this particular combination of food maybe not entirely I",
    "start": "359130",
    "end": "366600"
  },
  {
    "text": "think maybe this what happened here somewhere is what caused the upside-down",
    "start": "366600",
    "end": "371910"
  },
  {
    "text": "wings but I can't can't be sure on that but feeding our caterpillar results in a",
    "start": "371910",
    "end": "382260"
  },
  {
    "text": "beautiful butterfly now we have a great",
    "start": "382260",
    "end": "387300"
  },
  {
    "text": "responsibility here today now that we know this secret we know how to make",
    "start": "387300",
    "end": "392340"
  },
  {
    "text": "them it's up to us to rid the world of the ugly white butterfly",
    "start": "392340",
    "end": "398780"
  },
  {
    "text": "I take out a web ad explaining to people",
    "start": "398870",
    "end": "404630"
  },
  {
    "text": "I'm doing this for free I'm really quite nice I have a web ad I say we're going to we've got the solution to this we're",
    "start": "404630",
    "end": "410479"
  },
  {
    "text": "going to feed your caterpillar and then I create a function and the function is",
    "start": "410479",
    "end": "420620"
  },
  {
    "text": "to create beautiful butterflies it takes in food and then what it does with that",
    "start": "420620",
    "end": "427729"
  },
  {
    "text": "food is this vast amount of food as we filter it out we get the right kind of",
    "start": "427729",
    "end": "433220"
  },
  {
    "text": "food out the stuff that we care about we feed our caterpillar so a wrong button",
    "start": "433220",
    "end": "439880"
  },
  {
    "text": "feed Oh caterpillar then we make the butterfly and what we end up with is a",
    "start": "439880",
    "end": "445180"
  },
  {
    "text": "function down the bottom here the the definition is beaut butterfly takes a",
    "start": "445180",
    "end": "451220"
  },
  {
    "text": "food returns a cocoon of butterfly now",
    "start": "451220",
    "end": "458110"
  },
  {
    "text": "this is all good and I'm going okay for a while but I start to get complaints people are saying my butterfly is coming",
    "start": "458110",
    "end": "465770"
  },
  {
    "text": "out or weird is not working it's not beautiful and so I need to get to the",
    "start": "465770",
    "end": "471139"
  },
  {
    "text": "bottom of this what can I do well the first thing we thought was what makes a",
    "start": "471139",
    "end": "477200"
  },
  {
    "text": "beautiful butterflies our food so let's look at logging the food so I throw this",
    "start": "477200",
    "end": "484250"
  },
  {
    "text": "in the middle here like alright whatever food comes in log it first then I can",
    "start": "484250",
    "end": "490190"
  },
  {
    "text": "see like if someone complains did they put the right food in did they give it everything it needs am i doing something",
    "start": "490190",
    "end": "496130"
  },
  {
    "text": "wrong the complaint still come in so I go what else could it be",
    "start": "496130",
    "end": "501919"
  },
  {
    "text": "maybe my butterfly is not in its cocoon for long enough so let's log that log",
    "start": "501919",
    "end": "509330"
  },
  {
    "text": "our time in cocoon we are that's good we",
    "start": "509330",
    "end": "514969"
  },
  {
    "text": "can take care of that now that may be perhaps sometimes you just end up with a",
    "start": "514969",
    "end": "523610"
  },
  {
    "text": "bad butterfly so let's if we get a bad butterfly let's retry the process all",
    "start": "523610",
    "end": "529400"
  },
  {
    "text": "right so we have our beautiful butterfly function now but what's wrong with it",
    "start": "529400",
    "end": "536770"
  },
  {
    "text": "what have we done to it because we wanted to log everything we filled it",
    "start": "536770",
    "end": "546030"
  },
  {
    "text": "full of this retry style log food load",
    "start": "546030",
    "end": "552100"
  },
  {
    "text": "timing cocoon we've made it incredibly ugly incredibly hard to understand and this is just the beginning right I think",
    "start": "552100",
    "end": "558760"
  },
  {
    "text": "the butterfly building business is you know quite complicated and so we're only",
    "start": "558760",
    "end": "567220"
  },
  {
    "text": "going to add more and more things to it more logging more error detection more",
    "start": "567220",
    "end": "572530"
  },
  {
    "text": "failure caching whatever it takes that's what we're going to put in to have a successful business but really the",
    "start": "572530",
    "end": "580210"
  },
  {
    "text": "problem is is that our food is up there",
    "start": "580210",
    "end": "585310"
  },
  {
    "text": "we do all this rubbish and then this is here so really our core business stuff",
    "start": "585310",
    "end": "591220"
  },
  {
    "text": "is now intermixed with all of this other application agnostic stuff that really",
    "start": "591220",
    "end": "596950"
  },
  {
    "text": "doesn't matter so what can we do to fix that well one idea is we could pull that",
    "start": "596950",
    "end": "606310"
  },
  {
    "text": "out and have a different function and then these other things we just call",
    "start": "606310",
    "end": "612130"
  },
  {
    "text": "that right I think that's a pretty good refactor to begin with so let's look at that here we are",
    "start": "612130",
    "end": "620830"
  },
  {
    "text": "I'll let butterfly service now it's what we pretty much started with let's food",
    "start": "620830",
    "end": "626560"
  },
  {
    "text": "you take the food in filtered feed our caterpillar make the butterfly and then",
    "start": "626560",
    "end": "635610"
  },
  {
    "text": "we have our beautiful butterfly here",
    "start": "635610",
    "end": "640620"
  },
  {
    "text": "pretty much the same as before but now instead we just call this and so we've",
    "start": "644080",
    "end": "649209"
  },
  {
    "text": "got our logic there it's all pretty nice and good except what we haven't done you",
    "start": "649209",
    "end": "654700"
  },
  {
    "text": "haven't reduced the complexity at all we've got our our domain logic is all",
    "start": "654700",
    "end": "661269"
  },
  {
    "text": "out our business logic is all sorted but what we haven't done is is reduce that",
    "start": "661269",
    "end": "668110"
  },
  {
    "text": "complexity is there any more thing is there anything else we can do can we refactor this further",
    "start": "668110",
    "end": "674560"
  },
  {
    "text": "yeah it is yes because otherwise it would be a really short talk if we look",
    "start": "674560",
    "end": "680260"
  },
  {
    "text": "at the butterfly service there it's type",
    "start": "680260",
    "end": "686920"
  },
  {
    "text": "is food a function food that returns",
    "start": "686920",
    "end": "692740"
  },
  {
    "text": "cocoon of butterfly if we look at the",
    "start": "692740",
    "end": "698470"
  },
  {
    "text": "retry function it also takes a food and",
    "start": "698470",
    "end": "706410"
  },
  {
    "text": "returns essentially what comes out of here long time.we cocoon which also takes food and returns the butterfly",
    "start": "706410",
    "end": "714190"
  },
  {
    "text": "service that puts it in so really they also return a food of cocoon butterfly",
    "start": "714190",
    "end": "719770"
  },
  {
    "text": "so we've got these three things of the same types surely we can just compose",
    "start": "719770",
    "end": "726550"
  },
  {
    "text": "them all together so that's what we're going to do the retry load time in",
    "start": "726550",
    "end": "732850"
  },
  {
    "text": "cocoon we're going to take care of we're going to refactor to this so everything",
    "start": "732850",
    "end": "737860"
  },
  {
    "text": "up here is stayed the same our food to log food has said stayed the same",
    "start": "737860",
    "end": "745020"
  },
  {
    "text": "pretty much but what we've done is we pulled the log time in cocoon out and we",
    "start": "745020",
    "end": "751000"
  },
  {
    "text": "just end the retry and we're just passing butterfly service as a function",
    "start": "751000",
    "end": "756339"
  },
  {
    "text": "into load time in cocoon and then into retry now what we're not doing here is",
    "start": "756339",
    "end": "762399"
  },
  {
    "text": "we're not doing function composition we're not saying all right take the output of one function and that now goes",
    "start": "762399",
    "end": "769690"
  },
  {
    "text": "into the input of the next because it wouldn't work we they don't line up like that what we're doing is we're actually",
    "start": "769690",
    "end": "775600"
  },
  {
    "text": "passing the tire function around so butterfly",
    "start": "775600",
    "end": "781480"
  },
  {
    "text": "service we just send that to a long time you cocoon because it after something of butterfly cocoon and the same with retry",
    "start": "781480",
    "end": "788800"
  },
  {
    "text": "at once sorry it once a food - butterfly - sorry food - the cocoon of butterfly",
    "start": "788800",
    "end": "794950"
  },
  {
    "text": "and so we just pass that in and we sorted it looks good it's a bit cleaner the issue I have though is that we have",
    "start": "794950",
    "end": "802120"
  },
  {
    "text": "these ugly braces around and our log",
    "start": "802120",
    "end": "807970"
  },
  {
    "text": "food up here is in the wrong place what if we could take it from here and move",
    "start": "807970",
    "end": "814870"
  },
  {
    "text": "it down to here then we end up just being able to compose everything that",
    "start": "814870",
    "end": "821350"
  },
  {
    "text": "we're looking for everything that we're doing that is application agnostic we're",
    "start": "821350",
    "end": "827350"
  },
  {
    "text": "just composing onto the butterfly service however we have a bit of an",
    "start": "827350",
    "end": "832779"
  },
  {
    "text": "issue here a log food takes a food and loves it that's all it really does right",
    "start": "832779",
    "end": "838990"
  },
  {
    "text": "it turns food so what we would need is for it to also meet the function type of",
    "start": "838990",
    "end": "848440"
  },
  {
    "text": "food people couldn't butterfly so we could change it around to do that but I",
    "start": "848440",
    "end": "853540"
  },
  {
    "text": "don't really want to I don't really want to do that so what what if we could somehow with another function make our",
    "start": "853540",
    "end": "861730"
  },
  {
    "text": "food log food function return this type so what we're going to do is we're going",
    "start": "861730",
    "end": "868900"
  },
  {
    "text": "to build it I'm going to start here with a blank slate and we know what we need",
    "start": "868900",
    "end": "875050"
  },
  {
    "text": "to get out it's here right at the bottom we need a function that takes a food",
    "start": "875050",
    "end": "880390"
  },
  {
    "text": "returns a cocoon of butterfly what we",
    "start": "880390",
    "end": "886780"
  },
  {
    "text": "have is the beautiful butterfly service we know we've got this it takes a hour",
    "start": "886780",
    "end": "894580"
  },
  {
    "text": "service here s also takes a food you can butterfly so all we need to do is if we",
    "start": "894580",
    "end": "902680"
  },
  {
    "text": "want to our food here we just take a food we log it and then we don't care about the result all we need to do",
    "start": "902680",
    "end": "911139"
  },
  {
    "text": "who is somehow join these up to do this now we have no control just as we had no",
    "start": "911139",
    "end": "917619"
  },
  {
    "text": "control over the mother native function to build a butterfly we can't change",
    "start": "917619",
    "end": "922660"
  },
  {
    "text": "this this is written we have no way of modifying this so how do we get access",
    "start": "922660",
    "end": "928959"
  },
  {
    "text": "to this food so it turns out that the",
    "start": "928959",
    "end": "935279"
  },
  {
    "text": "functions that are going to now use this are going to call it they don't care",
    "start": "935279",
    "end": "942850"
  },
  {
    "text": "all they want is this they don't know they don't need to know that they're not",
    "start": "942850",
    "end": "948850"
  },
  {
    "text": "actually getting this so all we need to do is create a new function that returns",
    "start": "948850",
    "end": "955499"
  },
  {
    "text": "that takes the food in returns the logs",
    "start": "955499",
    "end": "960819"
  },
  {
    "text": "and then returns the original service",
    "start": "960819",
    "end": "965859"
  },
  {
    "text": "and so that's what we've got here we just basically we have a new function that starts over here with this food it",
    "start": "965859",
    "end": "971769"
  },
  {
    "text": "does its thing and then adjust our passes that food in here and returns it and we're sorted now what's fancy about",
    "start": "971769",
    "end": "978999"
  },
  {
    "text": "this is what I'm going to name it I think this is I'm going to call it before we've got this function here that",
    "start": "978999",
    "end": "987639"
  },
  {
    "text": "takes a food returns tuna butterfly and",
    "start": "987639",
    "end": "993419"
  },
  {
    "text": "what we've done is we've applied a function to the input we're doing",
    "start": "993419",
    "end": "999759"
  },
  {
    "text": "something before we call the function and when we use it it looks like this so",
    "start": "999759",
    "end": "1008549"
  },
  {
    "text": "we had our our our food there like this and we're changing it now to this we're",
    "start": "1008549",
    "end": "1014970"
  },
  {
    "text": "saying okay we've got our butterfly service we've got we're not going to change that that's already written what",
    "start": "1014970",
    "end": "1022769"
  },
  {
    "text": "we want to do though is before we run we've got this fancy new function log",
    "start": "1022769",
    "end": "1027779"
  },
  {
    "text": "the food then we can continue with the load time and the retry that we looked",
    "start": "1027779",
    "end": "1032938"
  },
  {
    "text": "at before now the trick here",
    "start": "1032939",
    "end": "1038928"
  },
  {
    "text": "is that we don't apply we don't put the input into the function is that we're",
    "start": "1040429",
    "end": "1048178"
  },
  {
    "text": "passing the whole function now if we apply an input we don't get the signs we",
    "start": "1048179",
    "end": "1055410"
  },
  {
    "text": "apply the input we then have no way of calling before that's done we've lost access to that so the reason",
    "start": "1055410",
    "end": "1066870"
  },
  {
    "text": "this works is because food to cocoon of butterfly is what's called an arrow now",
    "start": "1066870",
    "end": "1077340"
  },
  {
    "text": "there's nothing that's all it is it's just an arrow is a function that returns this this time all it is is a pattern",
    "start": "1077340",
    "end": "1088190"
  },
  {
    "text": "alright so they are and the trick is",
    "start": "1089690",
    "end": "1096570"
  },
  {
    "text": "with the pattern is that that's all it is it's not going to solve problems that you can't solve now you still it's not",
    "start": "1096570",
    "end": "1104340"
  },
  {
    "text": "going to give you anything magical like that but what it will give you is a new",
    "start": "1104340",
    "end": "1109559"
  },
  {
    "text": "way of approaching that problem solving and a way of reducing the complexity and",
    "start": "1109559",
    "end": "1115200"
  },
  {
    "text": "removing what all the application agnostic stuff in there all right so",
    "start": "1115200",
    "end": "1124070"
  },
  {
    "text": "what we're going to do now is we're going to talk about what makes them",
    "start": "1124280",
    "end": "1129290"
  },
  {
    "text": "useful but first we'll we'll look at the pattern so we've discussed how this this",
    "start": "1129290",
    "end": "1137520"
  },
  {
    "text": "works and it's an arrow and it takes the",
    "start": "1137520",
    "end": "1144809"
  },
  {
    "text": "food of Cocoon butterfly",
    "start": "1144809",
    "end": "1148460"
  },
  {
    "text": "now we can generalize this by taking by",
    "start": "1151570",
    "end": "1157100"
  },
  {
    "text": "what is is we take a to any function that takes an a and returns a monad of B",
    "start": "1157100",
    "end": "1165860"
  },
  {
    "text": "now if you're not familiar with the concept of a monad you really don't need",
    "start": "1165860",
    "end": "1171169"
  },
  {
    "text": "to you if someone tells you something is a monad then that's all you need to know or really it just needs to be anything",
    "start": "1171169",
    "end": "1178010"
  },
  {
    "text": "that resembles that the pattern of the monad now some examples are a of the",
    "start": "1178010",
    "end": "1186200"
  },
  {
    "text": "option arrow here and we've taken a return and option of B which is is the",
    "start": "1186200",
    "end": "1192169"
  },
  {
    "text": "similar if your're coming from C sharp or some other language it could be nullable of B that's going to work if",
    "start": "1192169",
    "end": "1197659"
  },
  {
    "text": "you're looking at error handling you could have the result arrow now the most",
    "start": "1197659",
    "end": "1203929"
  },
  {
    "text": "important one in my opinion or at least the most fun one is the async arrow",
    "start": "1203929",
    "end": "1209990"
  },
  {
    "text": "which funnily enough is what the talks",
    "start": "1209990",
    "end": "1218750"
  },
  {
    "text": "are now I'm going to just step in and we're going to talk about the butterfly service just a little more but and then",
    "start": "1218750",
    "end": "1227390"
  },
  {
    "text": "we're going to move on to async so what I'm going to do is we thought it was sorcery before turning a butterfly into",
    "start": "1227390",
    "end": "1234169"
  },
  {
    "text": "a caterpillar sorry the other way around but I'm going to now turn it back so we",
    "start": "1234169",
    "end": "1239870"
  },
  {
    "text": "have this thing here and this is the trick with using arrows is that what you",
    "start": "1239870",
    "end": "1248150"
  },
  {
    "text": "want to do is always never apply the",
    "start": "1248150",
    "end": "1254330"
  },
  {
    "text": "caterpillar so what did our caterpillar to cocoon butterfly take or what was it",
    "start": "1254330",
    "end": "1263240"
  },
  {
    "text": "the made our server successful it was the feeding right so what you don't want",
    "start": "1263240",
    "end": "1268309"
  },
  {
    "text": "to do and what I'm going to do here is hopefully make it all awkward while I stroke my caress my caterpillar and feed",
    "start": "1268309",
    "end": "1275720"
  },
  {
    "text": "it watermelon see this this is everyone feel a bit awkward now does this feel a bit wrong",
    "start": "1275720",
    "end": "1282680"
  },
  {
    "text": "the reason it feels wrong is because it is wrong this is not what you want to do",
    "start": "1282680",
    "end": "1288260"
  },
  {
    "text": "you don't want to give your caterpillar watermelon before it's it's time and",
    "start": "1288260",
    "end": "1294350"
  },
  {
    "text": "that is the trick the trick is with arrows to keep that pattern is to never",
    "start": "1294350",
    "end": "1301580"
  },
  {
    "text": "apply the function right wait until right at the end and then do it so",
    "start": "1301580",
    "end": "1306680"
  },
  {
    "text": "you're keeping it as a function the whole way and that's how we get to this beautiful composition here that we came",
    "start": "1306680",
    "end": "1314030"
  },
  {
    "text": "up with before now you're probably sick of the whole butterfly analogy by now is that is that",
    "start": "1314030",
    "end": "1323630"
  },
  {
    "text": "agree agreement there I think it is all these love more butterflies okay I have",
    "start": "1323630",
    "end": "1330440"
  },
  {
    "text": "a feeling that someone's just trying to make me feel better all right so let's get rid of them what",
    "start": "1330440",
    "end": "1335900"
  },
  {
    "text": "if we took food and we renamed it why",
    "start": "1335900",
    "end": "1340940"
  },
  {
    "text": "don't we just rename all of these things and get rid of the butterfly let's take food away and call it events",
    "start": "1340940",
    "end": "1347930"
  },
  {
    "text": "let's rename two events we're filtering food here let's rename",
    "start": "1347930",
    "end": "1354320"
  },
  {
    "text": "this to filtering the events we already know food and events are the same thing",
    "start": "1354320",
    "end": "1361060"
  },
  {
    "text": "feed caterpillar maybe we could call this update States that's what we're",
    "start": "1362380",
    "end": "1369470"
  },
  {
    "text": "doing right we're we're changing the state of our caterpillar by giving up food and then making the butterfly while",
    "start": "1369470",
    "end": "1377420"
  },
  {
    "text": "that's the end bit that's where we commit what we're doing all right if we",
    "start": "1377420",
    "end": "1385010"
  },
  {
    "text": "go down to the bottom bit we've sorted this one out and really now what our butterfly service does is it takes",
    "start": "1385010",
    "end": "1390770"
  },
  {
    "text": "events in filters the ones that want updates some state and commits it what",
    "start": "1390770",
    "end": "1398150"
  },
  {
    "text": "can we do with our hour a beautiful butterfly thing down here well we could",
    "start": "1398150",
    "end": "1403340"
  },
  {
    "text": "change log food to log events we already have made that transition with food log",
    "start": "1403340",
    "end": "1409430"
  },
  {
    "text": "timing cocoon what is that what are we measuring when we love our timing cocoon perhaps the latency so we",
    "start": "1409430",
    "end": "1417220"
  },
  {
    "text": "log the latency now it turns out that retrying making butterflies and retrying",
    "start": "1417220",
    "end": "1425830"
  },
  {
    "text": "all of this event stuff it's the same so we leave that where it is and what we",
    "start": "1425830",
    "end": "1430930"
  },
  {
    "text": "end up with is up the top I'm going to name this our butterfly service really is something that processes events and",
    "start": "1430930",
    "end": "1439260"
  },
  {
    "text": "what we've got down here runs our service so what I'm going to do is let's",
    "start": "1439260",
    "end": "1448000"
  },
  {
    "text": "clean this up a little bit and we're going to do all of that renaming and this is what we've got",
    "start": "1448000",
    "end": "1453730"
  },
  {
    "text": "so we process events and then we weed all of those things",
    "start": "1453730",
    "end": "1459610"
  },
  {
    "text": "what would same thing that we did with the butterfly and then we run our service now I work for a company called",
    "start": "1459610",
    "end": "1466870"
  },
  {
    "text": "jet comm in the US and we wearing ecommerce and we have hundreds of things",
    "start": "1466870",
    "end": "1474970"
  },
  {
    "text": "in fact we have over ten hundred of them which is another story but we could call",
    "start": "1474970",
    "end": "1481450"
  },
  {
    "text": "this this essentially is a service or some people call the micro services but really what we've got here and what we",
    "start": "1481450",
    "end": "1489820"
  },
  {
    "text": "aim for where when I'm dealing with this sort of thing this processing of events",
    "start": "1489820",
    "end": "1496030"
  },
  {
    "text": "is to minimize it and write our service as a function that's what we've got",
    "start": "1496030",
    "end": "1502360"
  },
  {
    "text": "we've got a scene other processes events we've written out that's our that's our business logic there what we do with an",
    "start": "1502360",
    "end": "1508330"
  },
  {
    "text": "event and how we handle it but down here is where actually it does the servicing",
    "start": "1508330",
    "end": "1513910"
  },
  {
    "text": "bits and it's just a function now I'm",
    "start": "1513910",
    "end": "1518980"
  },
  {
    "text": "from Australia originally I've been living in the u.s. to the last two years and I tell you there's a few things I",
    "start": "1518980",
    "end": "1524380"
  },
  {
    "text": "really missed and it's great being here because a lot of our culture is very similar Australia too - with the Brits",
    "start": "1524380",
    "end": "1532090"
  },
  {
    "text": "now Cadbury is is really important",
    "start": "1532090",
    "end": "1537130"
  },
  {
    "text": "Cadbury if you're American and you haven't had Cadbury chocolate here it's so much better",
    "start": "1537130",
    "end": "1543040"
  },
  {
    "text": "it's really good but another thing I miss was Qi they don't have Qi they don't",
    "start": "1543040",
    "end": "1549860"
  },
  {
    "text": "they don't know who Stephen Fry is in America and I miss that now I was I got",
    "start": "1549860",
    "end": "1555770"
  },
  {
    "text": "here I arrived here and some have to put Qi on and I do and you wouldn't believe it did you call it a coincidence but I",
    "start": "1555770",
    "end": "1564020"
  },
  {
    "text": "think it's fade one of the questions he asked are what are the three things that",
    "start": "1564020",
    "end": "1569570"
  },
  {
    "text": "you need to write services as functions I kid you not this happened and I didn't",
    "start": "1569570",
    "end": "1579560"
  },
  {
    "text": "know any of this I was I'm glad i tuned in because now I can put it in my talk",
    "start": "1579560",
    "end": "1584570"
  },
  {
    "text": "and finally fill out that extra bit that gap and it turns out that there are",
    "start": "1584570",
    "end": "1589820"
  },
  {
    "text": "there are three things and you know they have all their banter and they get it wrong but what it came down to was this",
    "start": "1589820",
    "end": "1598420"
  },
  {
    "text": "the three things that you need to write your service as a function r1 futures",
    "start": "1598420",
    "end": "1608620"
  },
  {
    "text": "you need to make her to work well you need to return data from the future",
    "start": "1608620",
    "end": "1615170"
  },
  {
    "text": "now depending on what language you come from you've probably got this handle which is",
    "start": "1615170",
    "end": "1620420"
  },
  {
    "text": "a big thumbs up in a tick we don't have to worry about if you if you're in F sharp you've got a sink you can use all",
    "start": "1620420",
    "end": "1627560"
  },
  {
    "text": "of the async operations in fearing C sharp and there's lots of other languages that I'm not familiar with but",
    "start": "1627560",
    "end": "1633410"
  },
  {
    "text": "I'm told they deal with asynchronous operations as well so for the most part",
    "start": "1633410",
    "end": "1638840"
  },
  {
    "text": "I think it's a tick the only thing you have to worry about here is you have to",
    "start": "1638840",
    "end": "1644840"
  },
  {
    "text": "remember is to use it so the first thing is return data from the future now the",
    "start": "1644840",
    "end": "1651650"
  },
  {
    "text": "great thing about async is that allows you to do a lot of concurrent stuff",
    "start": "1651650",
    "end": "1658660"
  },
  {
    "text": "right and so that's what we get to next the second thing is you have to use",
    "start": "1658660",
    "end": "1667280"
  },
  {
    "text": "arrows that's what they came up with them Qi fits so perfectly have to use",
    "start": "1667280",
    "end": "1672620"
  },
  {
    "text": "arrows and look at this one here concurrent arrows right",
    "start": "1672620",
    "end": "1678020"
  },
  {
    "text": "so that's number two now we've spoken about arrows you know a little bit about",
    "start": "1678020",
    "end": "1684320"
  },
  {
    "text": "them we're not going to just get rid of we're not going to just move on from arrows yet remember an arrow is just a",
    "start": "1684320",
    "end": "1690500"
  },
  {
    "text": "function that returns an async did the third thing and we've spoken about these",
    "start": "1690500",
    "end": "1696679"
  },
  {
    "text": "a little bit what we're going to we're going to give it a name and we're going to delve into them a little more the third thing are filters and as we",
    "start": "1696679",
    "end": "1708410"
  },
  {
    "text": "can see here from what I believe is called Instagram I've never installed it but you can",
    "start": "1708410",
    "end": "1714320"
  },
  {
    "text": "change your photos right you can apply different things you can change what it looks like without touching the original",
    "start": "1714320",
    "end": "1720620"
  },
  {
    "text": "and that is what a filter does and that's what we're going to talk about so",
    "start": "1720620",
    "end": "1726559"
  },
  {
    "text": "let's go back a little bit let's go back to our process events thing here this is",
    "start": "1726559",
    "end": "1732260"
  },
  {
    "text": "our our little micro service and let's",
    "start": "1732260",
    "end": "1737690"
  },
  {
    "text": "talk about what we've got here so this process events takes events returns",
    "start": "1737690",
    "end": "1745450"
  },
  {
    "text": "let's call it you know our commits state and async result",
    "start": "1745450",
    "end": "1750460"
  },
  {
    "text": "taeksoo takes events async result that's an arrow we're good we're using async",
    "start": "1750460",
    "end": "1756650"
  },
  {
    "text": "tick that's the first number thing it's an arrow because it's that async",
    "start": "1756650",
    "end": "1762679"
  },
  {
    "text": "function and so we're good here so here we are we are doing what Stephen Fry",
    "start": "1762679",
    "end": "1768440"
  },
  {
    "text": "once we have our process events and it's an async arrow now our run service what",
    "start": "1768440",
    "end": "1777650"
  },
  {
    "text": "are we doing here so we're using our arrow and we're running before log",
    "start": "1777650",
    "end": "1784700"
  },
  {
    "text": "events so we're just changing things a little bit we're doing something we're",
    "start": "1784700",
    "end": "1790940"
  },
  {
    "text": "doing our side effects here we're logging our latency we're doing our retry these down here are our filters so",
    "start": "1790940",
    "end": "1799250"
  },
  {
    "text": "we've got this separation here of our arrow we've created this and then on top of our arrow we've got all of our",
    "start": "1799250",
    "end": "1806120"
  },
  {
    "text": "filters now a key thing to remember about filters",
    "start": "1806120",
    "end": "1812300"
  },
  {
    "text": "for them to really work is you have to be able to compose them and we're going",
    "start": "1812300",
    "end": "1818790"
  },
  {
    "text": "to look at some examples now and so the composition really here is we get the",
    "start": "1818790",
    "end": "1825330"
  },
  {
    "text": "arrow we pass that function into the next thing and we pass that function into the next filter and into the next",
    "start": "1825330",
    "end": "1832470"
  },
  {
    "text": "one and so on and so forth - absolutely no limits until you are completely done",
    "start": "1832470",
    "end": "1839340"
  },
  {
    "text": "with what you want to do now sort of fine and dandy if you are interested in",
    "start": "1839340",
    "end": "1845040"
  },
  {
    "text": "writing your services as functions which is you know certainly something to think",
    "start": "1845040",
    "end": "1851460"
  },
  {
    "text": "about but it demonstrates the points but you can you can use it for other things so let's not limit ourselves to that",
    "start": "1851460",
    "end": "1860659"
  },
  {
    "text": "alright so what we're going to do now is we're going to move away from our",
    "start": "1860960",
    "end": "1866070"
  },
  {
    "text": "micro-service path and we're going to look at something that is possibly a",
    "start": "1866070",
    "end": "1872160"
  },
  {
    "text": "little more common something that makes a request to HTTP request",
    "start": "1872160",
    "end": "1878010"
  },
  {
    "text": "so we have our make requesting here and what we're going to do is we're going to build a value called an arrow so make",
    "start": "1878010",
    "end": "1886230"
  },
  {
    "text": "requests so arrow actually ends up being hey it takes a request returns an async",
    "start": "1886230",
    "end": "1892320"
  },
  {
    "text": "response I'm sure we've all seen this whenever we call a some API some service",
    "start": "1892320",
    "end": "1899040"
  },
  {
    "text": "we call something we've got a request and then we're promised this future",
    "start": "1899040",
    "end": "1904440"
  },
  {
    "text": "value which is our async response now I don't know about you but in in these",
    "start": "1904440",
    "end": "1912360"
  },
  {
    "text": "responses it's always full of stuff I don't understand like to hundreds and do",
    "start": "1912360",
    "end": "1918810"
  },
  {
    "text": "we actually don't really know what to do with those things so what I'm going to do is just get rid",
    "start": "1918810",
    "end": "1924780"
  },
  {
    "text": "of it what I want to do is turn this asyncresponse return value to a string",
    "start": "1924780",
    "end": "1931740"
  },
  {
    "text": "just give me the content that's really what I called you for you may not want",
    "start": "1931740",
    "end": "1937380"
  },
  {
    "text": "to do this but it simplifies what we're trying to do here so what we want to do is call our result",
    "start": "1937380",
    "end": "1945880"
  },
  {
    "text": "a response sorry to string we're going to call we've got a function that grabs that response and turns into a string",
    "start": "1945880",
    "end": "1952570"
  },
  {
    "text": "but we haven't got a response yet because all we've got here is this function so what can we do we need to",
    "start": "1952570",
    "end": "1961600"
  },
  {
    "text": "fill in this little bit we need to create this filter that can do that for us so I'll make request that's where all",
    "start": "1961600",
    "end": "1970090"
  },
  {
    "text": "of our logic is that does whatever it needs to do we don't care about that just like the mother nature function to",
    "start": "1970090",
    "end": "1978730"
  },
  {
    "text": "create a butterfly we know nothing of it we don't need to and that's that's the that's what's fun here so we want to",
    "start": "1978730",
    "end": "1988060"
  },
  {
    "text": "turn this response into a string so what we're looking at is just changing the",
    "start": "1988060",
    "end": "1993460"
  },
  {
    "text": "the output there so we're going to look at a function that can do that for us okay so we start with our output I",
    "start": "1993460",
    "end": "2002430"
  },
  {
    "text": "always like to start with a what do I need to get out of this and basically we decided at the beginning we want to have",
    "start": "2002430",
    "end": "2009840"
  },
  {
    "text": "returned a function takes our request returns an async of string and so that's it here now what our input well we know",
    "start": "2009840",
    "end": "2019830"
  },
  {
    "text": "that - it's a request to a sink response so it's that function and if we look at",
    "start": "2019830",
    "end": "2028470"
  },
  {
    "text": "it we put those things side-by-side it's pretty clear what we need well we need a function here that turns that response",
    "start": "2028470",
    "end": "2037790"
  },
  {
    "text": "into the string now this is on the output and this is why using a think is",
    "start": "2037790",
    "end": "2044430"
  },
  {
    "text": "so great because we don't actually need to run the async we can use bind or map",
    "start": "2044430",
    "end": "2050010"
  },
  {
    "text": "or something that can get inside that that async and turn that response into a",
    "start": "2050010",
    "end": "2057090"
  },
  {
    "text": "string and so because of that we have a function that I'm going to call map out",
    "start": "2057090",
    "end": "2064220"
  },
  {
    "text": "because what it does is it Maps the output so we haven't run anything but we",
    "start": "2064220",
    "end": "2069990"
  },
  {
    "text": "can actually queue up this function - to do about change that change that response",
    "start": "2069990",
    "end": "2075620"
  },
  {
    "text": "so if we now use math out here all of a",
    "start": "2075620",
    "end": "2081260"
  },
  {
    "text": "sudden our arrow has that async string all right",
    "start": "2081260",
    "end": "2086360"
  },
  {
    "text": "now another thing that I like to do is application agnostic is add some form of",
    "start": "2086360",
    "end": "2092659"
  },
  {
    "text": "all token we're making this request and we need to say hey I'm allowed to so if",
    "start": "2092660",
    "end": "2098990"
  },
  {
    "text": "we want to add our auth token to think what what modification are we doing here",
    "start": "2098990",
    "end": "2105470"
  },
  {
    "text": "we we still want to return our request async string so what function do we need",
    "start": "2105470",
    "end": "2111050"
  },
  {
    "text": "well it turns out that we've sort of looked at this but we're going to change",
    "start": "2111050",
    "end": "2116690"
  },
  {
    "text": "it slightly because what we need to do is modify our input value which is the",
    "start": "2116690",
    "end": "2123980"
  },
  {
    "text": "request so let's try and build this function up as well so we know we want",
    "start": "2123980",
    "end": "2129230"
  },
  {
    "text": "exactly the same thing out we're not going to change that but we have our",
    "start": "2129230",
    "end": "2135200"
  },
  {
    "text": "arrow that's our input we know this and the diff what we're doing here is we",
    "start": "2135200",
    "end": "2142070"
  },
  {
    "text": "want to grab our request and modify it add our token and then return that",
    "start": "2142070",
    "end": "2148730"
  },
  {
    "text": "request this is familiar I hope because it looks the same as our before function",
    "start": "2148730",
    "end": "2157280"
  },
  {
    "text": "with the difference that it's actually returning a request this time so we do",
    "start": "2157280",
    "end": "2164600"
  },
  {
    "text": "the same thing we can compose these things together that's really nice and what we end up doing is returning a",
    "start": "2164600",
    "end": "2170240"
  },
  {
    "text": "function that takes our request as a adds that bearer token now with that new",
    "start": "2170240",
    "end": "2178370"
  },
  {
    "text": "request it pushes it into this function so we haven't had to adjust what our",
    "start": "2178370",
    "end": "2184100"
  },
  {
    "text": "input value is we haven't had needed access we just returned a new function that shows those types that matches",
    "start": "2184100",
    "end": "2191090"
  },
  {
    "text": "those types so I'm going to call this map in because it's mapping the input",
    "start": "2191090",
    "end": "2196720"
  },
  {
    "text": "and we throw that in there and while we do get a essentially where we're",
    "start": "2196720",
    "end": "2203090"
  },
  {
    "text": "modifying the request we're making some changes there but the is still the same they still line up so",
    "start": "2203090",
    "end": "2209090"
  },
  {
    "text": "we have that map in satisfies that now one of my favorite things I can do with",
    "start": "2209090",
    "end": "2216500"
  },
  {
    "text": "arrows is because we don't apply that function we can do whatever we like with",
    "start": "2216500",
    "end": "2223160"
  },
  {
    "text": "the input and output and it's actually possible to do things with the input and the output at exactly the same time so",
    "start": "2223160",
    "end": "2231140"
  },
  {
    "text": "let's look at log input output so",
    "start": "2231140",
    "end": "2236240"
  },
  {
    "text": "basically what I want to do here is right at the end I want to go all right I'm I want to make record that this was",
    "start": "2236240",
    "end": "2243590"
  },
  {
    "text": "but you know before I call our make requests we've got the we want to say",
    "start": "2243590",
    "end": "2249290"
  },
  {
    "text": "hey this is our input and this is our was our output so how do we do that we",
    "start": "2249290",
    "end": "2255440"
  },
  {
    "text": "we know what our output is what we want is still the request to a sink of string",
    "start": "2255440",
    "end": "2260480"
  },
  {
    "text": "we know what our input is it's still exactly the same a request of a sink",
    "start": "2260480",
    "end": "2265820"
  },
  {
    "text": "string that's our make request there that what we're doing here is again it's",
    "start": "2265820",
    "end": "2272630"
  },
  {
    "text": "pretty similar the way we create these filters is very similar to they're all",
    "start": "2272630",
    "end": "2278390"
  },
  {
    "text": "very similar our approach just as some slide to our variation so it's similar again to our before",
    "start": "2278390",
    "end": "2285280"
  },
  {
    "text": "function where we take our request and we log it the difference is our function",
    "start": "2285280",
    "end": "2291710"
  },
  {
    "text": "we want to take the string as well so we want access to the request and access to",
    "start": "2291710",
    "end": "2297830"
  },
  {
    "text": "the string and again that's possible we just have that take that function in and",
    "start": "2297830",
    "end": "2304420"
  },
  {
    "text": "it's no problems and the reason is again we have that monad style pattern where",
    "start": "2304420",
    "end": "2312230"
  },
  {
    "text": "we can pull that string out write a map or a bind that that will love that",
    "start": "2312230",
    "end": "2319520"
  },
  {
    "text": "string or apply that function so I'm going to call this function after and so",
    "start": "2319520",
    "end": "2325100"
  },
  {
    "text": "if we we now look at what we've accomplished we've got we've applied",
    "start": "2325100",
    "end": "2330230"
  },
  {
    "text": "after we've made some change to our request and string but our calling types",
    "start": "2330230",
    "end": "2336410"
  },
  {
    "text": "they don't care sorry our calling functions it's all the same as long as it matches that type",
    "start": "2336410",
    "end": "2341970"
  },
  {
    "text": "they don't need to know what's going on behind the scenes and I think this to me",
    "start": "2341970",
    "end": "2348660"
  },
  {
    "text": "is what I love most about using this pattern is that I've got I can access",
    "start": "2348660",
    "end": "2353910"
  },
  {
    "text": "the input I can access the output I can do things with it I can change the input I can change the output I can and I can",
    "start": "2353910",
    "end": "2362160"
  },
  {
    "text": "access them with after that exactly the same time so let's do a little bit of",
    "start": "2362160",
    "end": "2370680"
  },
  {
    "text": "revision and the reason we're going to do a little bit of revision is because it's time for the quiz portion of the of",
    "start": "2370680",
    "end": "2378540"
  },
  {
    "text": "the talk so Stephen Fry in Qi told us",
    "start": "2378540",
    "end": "2387840"
  },
  {
    "text": "sir inform me of the three things that we need for to make arrows really work",
    "start": "2387840",
    "end": "2393810"
  },
  {
    "text": "and in this case is talking about services as functions but it's really applicable across everything can anyone tell me what they are",
    "start": "2393810",
    "end": "2400580"
  },
  {
    "text": "okay this isn't the quiz bins but you warm up your voice boxes for the next bit so I'll tell you this bit return a",
    "start": "2400580",
    "end": "2406740"
  },
  {
    "text": "value from the future for async use arrows use that pattern and use filters",
    "start": "2406740",
    "end": "2416670"
  },
  {
    "text": "so as a refresher our future is out async our arrows are the asynchronous",
    "start": "2416670",
    "end": "2424950"
  },
  {
    "text": "functions that we're passing around and our filters are the things that are a",
    "start": "2424950",
    "end": "2431100"
  },
  {
    "text": "plate application agnostic and can be composed together so I'm going to give",
    "start": "2431100",
    "end": "2436170"
  },
  {
    "text": "you a few functions and this is where you're going to then tell me what they",
    "start": "2436170",
    "end": "2442110"
  },
  {
    "text": "are are they a future an arrow or a filter all right",
    "start": "2442110",
    "end": "2450300"
  },
  {
    "text": "so let's start out with something we've seen before this is the how to make a",
    "start": "2450300",
    "end": "2455310"
  },
  {
    "text": "butterfly function which for everyone who was upset and wanted more butterfly",
    "start": "2455310",
    "end": "2462150"
  },
  {
    "text": "references here they are so make butterfly function takes a",
    "start": "2462150",
    "end": "2469590"
  },
  {
    "text": "caterpillar return to cocoon of butterfly what is it",
    "start": "2469590",
    "end": "2475080"
  },
  {
    "text": "future arrow or filter arrow why is it",
    "start": "2475080",
    "end": "2482340"
  },
  {
    "text": "an arrow let's first let's see yes it's an arrow high-five so it's an arrow you got it right but",
    "start": "2482340",
    "end": "2489660"
  },
  {
    "text": "why is it an arrow what's the explanation it's because we match that",
    "start": "2489660",
    "end": "2496230"
  },
  {
    "text": "that definition that pattern where we take a an input and we return a",
    "start": "2496230",
    "end": "2504380"
  },
  {
    "text": "something of output and that's what this does it's done that's simple that's simple",
    "start": "2504380",
    "end": "2509640"
  },
  {
    "text": "now here's another plug for my company because then they say how did you talk about chairs and I go I tell them all",
    "start": "2509640",
    "end": "2515370"
  },
  {
    "text": "about dead get Jeff calm return to a",
    "start": "2515370",
    "end": "2521400"
  },
  {
    "text": "sink of string what's this is it a future an arrow or a filter it's a",
    "start": "2521400",
    "end": "2529500"
  },
  {
    "text": "future yeah it's a future it just returns a sink that's it well again I'm jumping ahead of it is it a future yes",
    "start": "2529500",
    "end": "2538020"
  },
  {
    "text": "yes it is Thank You doc brown there all right so it's a future because it all it",
    "start": "2538020",
    "end": "2543660"
  },
  {
    "text": "does is return that a sink what if we turned it to this get calm this is an",
    "start": "2543660",
    "end": "2554610"
  },
  {
    "text": "arrow yeah it is high-five it is an arrow now it's the",
    "start": "2554610",
    "end": "2562410"
  },
  {
    "text": "same thing as before because if you're new to F sharp this this might be maybe",
    "start": "2562410",
    "end": "2568560"
  },
  {
    "text": "less clear but what this is doing is it's taking unit which is sort of our",
    "start": "2568560",
    "end": "2574170"
  },
  {
    "text": "nothing value and returns an async of string so it still meets the are the the",
    "start": "2574170",
    "end": "2583770"
  },
  {
    "text": "something to a sink of something patent and so it is indeed a narrow now you",
    "start": "2583770",
    "end": "2591300"
  },
  {
    "text": "might think is there any value to this as an error and the answer is there's",
    "start": "2591300",
    "end": "2596940"
  },
  {
    "text": "tremendous value because this unit here",
    "start": "2596940",
    "end": "2602040"
  },
  {
    "text": "is a bit annoying it there's not really anything great that we can do with it normally we just pay parts in a unit and",
    "start": "2602040",
    "end": "2609390"
  },
  {
    "text": "we get this acing string back but with arrows and filters we can change that we",
    "start": "2609390",
    "end": "2615060"
  },
  {
    "text": "can do whatever we want with it we've got the power to modify that input and make it more flexible and and do what we",
    "start": "2615060",
    "end": "2622680"
  },
  {
    "text": "want okay so the next one logs success it takes something that is an a",
    "start": "2622680",
    "end": "2632460"
  },
  {
    "text": "to a sink of B and returns an A to a sink of B future arrow or filter and he",
    "start": "2632460",
    "end": "2643650"
  },
  {
    "text": "saw filter yes it is a filter and the",
    "start": "2643650",
    "end": "2649830"
  },
  {
    "text": "reason it's a filter and this is sort of the pattern to look for here is that it",
    "start": "2649830",
    "end": "2655560"
  },
  {
    "text": "takes what is essentially an arrow and it returns an arrow so when you see that",
    "start": "2655560",
    "end": "2661619"
  },
  {
    "text": "pattern you can go oh hey I can apply this to a narrower or you may look at",
    "start": "2661619",
    "end": "2667140"
  },
  {
    "text": "something and go oh I'm doing some logging of success can I turn this into",
    "start": "2667140",
    "end": "2672150"
  },
  {
    "text": "a filter and and use this pattern and compose everything together so it is",
    "start": "2672150",
    "end": "2677190"
  },
  {
    "text": "indeed a a filter now here's one for you",
    "start": "2677190",
    "end": "2684980"
  },
  {
    "text": "jump function takes a person and a trampoline and returns an async of",
    "start": "2685099",
    "end": "2690510"
  },
  {
    "text": "accident is this a future an arrow or a",
    "start": "2690510",
    "end": "2698790"
  },
  {
    "text": "filter none it's a very wonderful",
    "start": "2698790",
    "end": "2706530"
  },
  {
    "text": "observation now I'm going to actually call it a arrow and arrow",
    "start": "2706530",
    "end": "2714309"
  },
  {
    "text": "and the reason I am is because if we were to partially apply this jump person",
    "start": "2714309",
    "end": "2723180"
  },
  {
    "text": "what we would end up with is a trampoline or something to a sink of",
    "start": "2723180",
    "end": "2728259"
  },
  {
    "text": "something traveling to a think of of accident and so I'm going to sort of say",
    "start": "2728259",
    "end": "2733779"
  },
  {
    "text": "it's an arrow because it leads into the next thing of is this really useful you're going to come across this all the",
    "start": "2733779",
    "end": "2740439"
  },
  {
    "text": "time where you go oh I've got these three things that I want how do I make it into like it's not an arrow because I",
    "start": "2740439",
    "end": "2748359"
  },
  {
    "text": "have to partially apply everything it's annoying so there's some there's two ways that I approach this one is this",
    "start": "2748359",
    "end": "2755469"
  },
  {
    "text": "way which may you know let's just get this out of a way out of the way because",
    "start": "2755469",
    "end": "2760900"
  },
  {
    "text": "this is an arrow yeah and the reason it's what we've done here is essentially",
    "start": "2760900",
    "end": "2768249"
  },
  {
    "text": "we've combined those two values so it's a single input to our async of accident",
    "start": "2768249",
    "end": "2776249"
  },
  {
    "text": "so if you've got just a few things and you want to pass it around and modify that input then you know so one or two",
    "start": "2776249",
    "end": "2783429"
  },
  {
    "text": "maybe three you might want to consider this just that turn that into into a",
    "start": "2783429",
    "end": "2790089"
  },
  {
    "text": "tuple and pass that around and that becomes your arrow and that's a really good option and I use this all the time",
    "start": "2790089",
    "end": "2795939"
  },
  {
    "text": "I have filters that work on on couples so you can access the first and second",
    "start": "2795939",
    "end": "2801249"
  },
  {
    "text": "and map first map second and it's a and it's it's lovely and it works really",
    "start": "2801249",
    "end": "2806589"
  },
  {
    "text": "well however you may we've already seen an example of the other option is that if",
    "start": "2806589",
    "end": "2811660"
  },
  {
    "text": "you especially if you've got more than one value that you you want to pass",
    "start": "2811660",
    "end": "2817179"
  },
  {
    "text": "around this your input just put it in a type we were using the request type in",
    "start": "2817179",
    "end": "2822609"
  },
  {
    "text": "the last example put it in a type it may you know it may sort of change the way",
    "start": "2822609",
    "end": "2829839"
  },
  {
    "text": "that you approach code a little bit and the way that you pass your data but you get the huge benefits of arrows all",
    "start": "2829839",
    "end": "2836589"
  },
  {
    "text": "right now the next one this is the last",
    "start": "2836589",
    "end": "2841779"
  },
  {
    "text": "one so you're all relieved and you're doing well you've passed full marks allows you get this one I",
    "start": "2841779",
    "end": "2848430"
  },
  {
    "text": "guess filter bad words takes words of string and a sink of string and then",
    "start": "2848430",
    "end": "2856920"
  },
  {
    "text": "returns a string of a sing string what's this one it's a filter now I'm going to",
    "start": "2856920",
    "end": "2865740"
  },
  {
    "text": "call this a trick question and the reason is that it's similar it",
    "start": "2865740",
    "end": "2871890"
  },
  {
    "text": "looks like a filter doesn't it and this is this is one thing to look at but because what we've got here going on",
    "start": "2871890",
    "end": "2878520"
  },
  {
    "text": "here is carrying we actually will really struggle to compose it so remember I",
    "start": "2878520",
    "end": "2884730"
  },
  {
    "text": "throw this into to remember the two things to make that make filters great",
    "start": "2884730",
    "end": "2889740"
  },
  {
    "text": "is that it's you're passing in that function but also you need to compose",
    "start": "2889740",
    "end": "2894810"
  },
  {
    "text": "them so that you you can just write that long list of stuff so you could easily",
    "start": "2894810",
    "end": "2900840"
  },
  {
    "text": "refactor this one too to be a filter all right so I'm often asked by people about",
    "start": "2900840",
    "end": "2909180"
  },
  {
    "text": "debugging these things look crazy there's all this composition can you",
    "start": "2909180",
    "end": "2915570"
  },
  {
    "text": "deal with them now in my experience once I start to deal with async anyway I find",
    "start": "2915570",
    "end": "2922710"
  },
  {
    "text": "it incredibly it's nice to get the complexity especially when you're dealing with concurrency the complexity",
    "start": "2922710",
    "end": "2928920"
  },
  {
    "text": "of debugging increases so throwing a breakpoint in in in visual studio or",
    "start": "2928920",
    "end": "2935580"
  },
  {
    "text": "your editor of choice and waiting for it to hit and then making some sense of",
    "start": "2935580",
    "end": "2940890"
  },
  {
    "text": "what's going on while there's thirty other things happening at the same time is incredibly hard so what I tend to do",
    "start": "2940890",
    "end": "2950250"
  },
  {
    "text": "when I'm dealing with async is I have to do a lot of logging or I have to I have to write trace logs and and really look",
    "start": "2950250",
    "end": "2957270"
  },
  {
    "text": "at what's uh what's going on with the the output of that stuff so my answer is",
    "start": "2957270",
    "end": "2962610"
  },
  {
    "text": "pacing is already really hard so we're not making it any harder not on that",
    "start": "2962610",
    "end": "2968970"
  },
  {
    "text": "aspect what we do have though are filters and in my opinion the filters",
    "start": "2968970",
    "end": "2976650"
  },
  {
    "text": "and being able to add filters at any point of the flow is incredibly useful for",
    "start": "2976650",
    "end": "2983740"
  },
  {
    "text": "debugging after every change you make every filter you apply log the input in",
    "start": "2983740",
    "end": "2989020"
  },
  {
    "text": "the output log what's changed while you're figuring out what's going on you have easy control on what happens",
    "start": "2989020",
    "end": "2997330"
  },
  {
    "text": "without having to have to part your code and the core part of your code and",
    "start": "2997330",
    "end": "3002400"
  },
  {
    "text": "potentially introducing bugs there as you as you're adjusting things or you end up in a state of so many log",
    "start": "3002400",
    "end": "3008940"
  },
  {
    "text": "statements that you can never return so we lose that from when we start using",
    "start": "3008940",
    "end": "3014520"
  },
  {
    "text": "arrows and we we start to apply filters and debugging actually has a lot of power down all right so if you're",
    "start": "3014520",
    "end": "3024720"
  },
  {
    "text": "interested in learning a little more by all means come and talk to me there's a",
    "start": "3024720",
    "end": "3030030"
  },
  {
    "text": "few things that I use this as inspiration for this so you might be interested to check it out one is by",
    "start": "3030030",
    "end": "3037200"
  },
  {
    "text": "someone from Twitter and it's called your servers to function now in this they talked about futures services and",
    "start": "3037200",
    "end": "3044850"
  },
  {
    "text": "filters and it's pretty much what we've spoken about but we've renamed services as arrows so it's the same thing and in",
    "start": "3044850",
    "end": "3054030"
  },
  {
    "text": "this they talk about a project that they use a Twitter called of finagle and this",
    "start": "3054030",
    "end": "3060180"
  },
  {
    "text": "essentially allows you to to do that to write those services as functions so",
    "start": "3060180",
    "end": "3065430"
  },
  {
    "text": "that's a that's interesting another few things is how we get the where the arrow",
    "start": "3065430",
    "end": "3073500"
  },
  {
    "text": "concept comes from and and where I've",
    "start": "3073500",
    "end": "3080030"
  },
  {
    "text": "read is essentially this John Hughes has has two great papers generalizing monas",
    "start": "3080030",
    "end": "3086790"
  },
  {
    "text": "the arrows and then programming with arrows is really good but let's not forget the greatest inspiration for this",
    "start": "3086790",
    "end": "3091980"
  },
  {
    "text": "talk which is the Very Hungry Caterpillar",
    "start": "3091980",
    "end": "3096440"
  },
  {
    "text": "so this is an arrow it's simply just the",
    "start": "3098360",
    "end": "3104800"
  },
  {
    "text": "function takes an hour value returns an async of of something and just remember",
    "start": "3104800",
    "end": "3113140"
  },
  {
    "text": "that what makes this great is that you keep it together don't feed the",
    "start": "3113140",
    "end": "3118440"
  },
  {
    "text": "caterpillar watermelon at until right at the end then apply that function that",
    "start": "3118440",
    "end": "3125020"
  },
  {
    "text": "way if you pass it around you can apply all these filters so and then the three",
    "start": "3125020",
    "end": "3130330"
  },
  {
    "text": "things that you need to remember to be successful here is futures use the",
    "start": "3130330",
    "end": "3135670"
  },
  {
    "text": "future and async use the arrows there's asynchronous functions and then apply filters thank",
    "start": "3135670",
    "end": "3146020"
  },
  {
    "text": "you [Applause]",
    "start": "3146020",
    "end": "3151420"
  }
]