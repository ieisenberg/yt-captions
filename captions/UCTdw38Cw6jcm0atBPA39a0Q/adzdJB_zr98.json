[
  {
    "text": "um yeah I was up against uh a couple of pretty you know popular speakers so I'm",
    "start": "7720",
    "end": "12799"
  },
  {
    "text": "really glad that you guys showed up for this talk um my name is edin f I work in",
    "start": "12799",
    "end": "18039"
  },
  {
    "text": "the Netherlands for a company called info support um and I'm going to talk to you today about how do you get how you",
    "start": "18039",
    "end": "23119"
  },
  {
    "text": "get a grip on your mic Services running in kubernetes I'll say that up front it's a lot of kubernetes in this talk um",
    "start": "23119",
    "end": "29279"
  },
  {
    "text": "using a service mesh um maybe by show of hands who of you is already using",
    "start": "29279",
    "end": "34840"
  },
  {
    "text": "kubernetes in some form in production or okay quite some people because I assume",
    "start": "34840",
    "end": "40360"
  },
  {
    "text": "that you know a lot about or you know at least how kubernetes works and some of the concepts behind kubernetes I'm not",
    "start": "40360",
    "end": "46719"
  },
  {
    "text": "going to going to go into this in this in this uh in this talk so um let's dive",
    "start": "46719",
    "end": "52160"
  },
  {
    "text": "in what are we going to do first of all we going to look at why would you need or use a service mesh because there must",
    "start": "52160",
    "end": "58640"
  },
  {
    "text": "be a reason obviously uh for using that then we're going to look at the service mesh concept what is it what is the",
    "start": "58640",
    "end": "64960"
  },
  {
    "text": "service mesh and what you can do with it and then we're going to look at a specific implementation using stto there",
    "start": "64960",
    "end": "70400"
  },
  {
    "text": "are several implementations out there I'll name a few in the talk but I'm going to use stto for this uh for this",
    "start": "70400",
    "end": "76759"
  },
  {
    "text": "talks particularly um and then we're going to do some demos because I not want to only want to show you slides I",
    "start": "76759",
    "end": "83000"
  },
  {
    "text": "only want to show you what you can do with the service mesh and actually show you how that works and then we're going to look at observability we're going to",
    "start": "83000",
    "end": "89600"
  },
  {
    "text": "look at traffic routing or traffic shaping and we're going to do some resiliency testing or chaos engineering",
    "start": "89600",
    "end": "95439"
  },
  {
    "text": "as it is also known in the uh in the industry so why would you need a service",
    "start": "95439",
    "end": "101560"
  },
  {
    "text": "mesh well um I've been using service mesage for some some time now uh for a",
    "start": "101560",
    "end": "106920"
  },
  {
    "text": "couple of our customers and what we often see is that microservices is basically one of the yeah more popular",
    "start": "106920",
    "end": "113920"
  },
  {
    "text": "architectural choices nowadays so distributed systems or microservices but at least multiple parts that need to",
    "start": "113920",
    "end": "120159"
  },
  {
    "text": "communicate with each other um and that's yeah often how systems are built nowadays and that gives you lots of",
    "start": "120159",
    "end": "126600"
  },
  {
    "text": "advantages obviously um we're not going going to go into microservices in this talk but uh there are talks enough about",
    "start": "126600",
    "end": "133360"
  },
  {
    "text": "microservices but once you've chosen that architectural style um not only you get the advantages but also some",
    "start": "133360",
    "end": "139879"
  },
  {
    "text": "disadvantages and um one of them is complexity you get a lot of running Parts they have to intercommunicate with",
    "start": "139879",
    "end": "146959"
  },
  {
    "text": "each other uh we see customers with more than a 100 Services running in production um of everything very",
    "start": "146959",
    "end": "153239"
  },
  {
    "text": "distributed sometimes also with different Technologies so how are you going to manage all that and of course",
    "start": "153239",
    "end": "159760"
  },
  {
    "text": "kubernetes is one way of doing that and kubernetes has lots of cool uh tools to to do that but sometimes you need some",
    "start": "159760",
    "end": "166720"
  },
  {
    "text": "additional control or some additional insights into what's going on inside that cluster so um to run these Services",
    "start": "166720",
    "end": "174599"
  },
  {
    "text": "we need some controlled way of doing that and then you see you know practices like devops container ization which is",
    "start": "174599",
    "end": "180800"
  },
  {
    "text": "obviously nowadays um yeah almost everywhere um things like infra as code",
    "start": "180800",
    "end": "186000"
  },
  {
    "text": "we want to do everything as code so we can version it and we can uh uh put it into a version control system and",
    "start": "186000",
    "end": "192319"
  },
  {
    "text": "obviously also container orchestration because if you have multiple containers that have to you know collaborate then",
    "start": "192319",
    "end": "198920"
  },
  {
    "text": "you need some kind of orchestration and that's where kubernetes comes in so what we see often um during the last couple",
    "start": "198920",
    "end": "206120"
  },
  {
    "text": "of years is that containerization is obviously very important and very popular so well people start using",
    "start": "206120",
    "end": "212920"
  },
  {
    "text": "containerization they built a container it's not business critical yet it's some workload that they want to containerize",
    "start": "212920",
    "end": "219200"
  },
  {
    "text": "and then you know they want to do more it tastes like more so they get another container and another container and",
    "start": "219200",
    "end": "225040"
  },
  {
    "text": "these containers start communicating with each other and then um before you know it you need something like an",
    "start": "225040",
    "end": "230519"
  },
  {
    "text": "orchestrator well kubernetes obviously is one of the more popular orchestrators out there uh so that's what I'm going to",
    "start": "230519",
    "end": "237000"
  },
  {
    "text": "focus on in this talk but as time progresses more and more containers come in and you get you know pictures like",
    "start": "237000",
    "end": "244519"
  },
  {
    "text": "this or even bigger with even more services and then the people that have to run these services so the Ops people",
    "start": "244519",
    "end": "250200"
  },
  {
    "text": "or the dev Ops teams that have to run these Services they look like this what is going on here how are we going to",
    "start": "250200",
    "end": "256479"
  },
  {
    "text": "make sure that everything is up and running if something goes wrong in this entire mesh hence service mesh um where",
    "start": "256479",
    "end": "264000"
  },
  {
    "text": "does it go wrong can I see that can I have Telemetry or can I uh in one way or",
    "start": "264000",
    "end": "269240"
  },
  {
    "text": "another figure out where the issue is so this is a problem we need some more",
    "start": "269240",
    "end": "274600"
  },
  {
    "text": "control than what kubernetes can give us out of the box so that is why you could",
    "start": "274600",
    "end": "280320"
  },
  {
    "text": "opt for a service mesh and um this is the pun intended right without a service mesh you have a service mess uh that's",
    "start": "280320",
    "end": "287199"
  },
  {
    "text": "not always the case but as you can see throughout this session you can gain a lot more control over your services when",
    "start": "287199",
    "end": "293000"
  },
  {
    "text": "uh you start using a service mesh so what is a service mesh well",
    "start": "293000",
    "end": "298560"
  },
  {
    "text": "basically it is an INF structure layer um and it will control all the communication between the services that",
    "start": "298560",
    "end": "305080"
  },
  {
    "text": "are running in your cluster and it does it basically on a network level so",
    "start": "305080",
    "end": "310600"
  },
  {
    "text": "that's also what the name comes from it's a mesh that you basically will apply on top of your kubernetes cluster",
    "start": "310600",
    "end": "316759"
  },
  {
    "text": "and you can add all kinds of behaviors to the network at the network level and",
    "start": "316759",
    "end": "322960"
  },
  {
    "text": "by doing so you you can gain a lot of additional abilities because um well",
    "start": "322960",
    "end": "328639"
  },
  {
    "text": "these service meses have all kinds of features and I have a couple of here of them shown here like security you can",
    "start": "328639",
    "end": "334160"
  },
  {
    "text": "get mtls security between the services you can do traffic shaping or uh routing",
    "start": "334160",
    "end": "339520"
  },
  {
    "text": "which we will do in the demo later on but also observability AB testing all that kinds of stuff um and also",
    "start": "339520",
    "end": "346560"
  },
  {
    "text": "resiliency things like circuit breakers or retries you can do that on a network level so you don't have to do that",
    "start": "346560",
    "end": "353000"
  },
  {
    "text": "anymore in your code basically if you're writing the code for the services um and there's lots more so I'm going to show a",
    "start": "353000",
    "end": "359440"
  },
  {
    "text": "couple couple of them today but if you look at the documentation for the different service mches you will see that there's lots of features out there",
    "start": "359440",
    "end": "367000"
  },
  {
    "text": "um so how does this work well actually um the service meses almost always work",
    "start": "367000",
    "end": "372400"
  },
  {
    "text": "with the sidecar pattern and the sidecar pattern is a very well-known pattern out there um which basically says we're",
    "start": "372400",
    "end": "379400"
  },
  {
    "text": "going to run something alongside your application code and that will take over all communication so that sidecar will",
    "start": "379400",
    "end": "385680"
  },
  {
    "text": "offer all kinds of capabilities um there is something new which is called ambient mesh and that's",
    "start": "385680",
    "end": "391800"
  },
  {
    "text": "something that is now under development it's not production ready yet for for instance for for stto um but that's",
    "start": "391800",
    "end": "397840"
  },
  {
    "text": "something that's coming uh and that basically uh eliminates the need for a separate container uh it does things a",
    "start": "397840",
    "end": "404840"
  },
  {
    "text": "bit a little bit more um um yeah little bit more cheaper it can do it with less less resources but as I said it is not",
    "start": "404840",
    "end": "412160"
  },
  {
    "text": "production ready right now so for now we're going to look at the side car implementation pattern and what does this look like",
    "start": "412160",
    "end": "418919"
  },
  {
    "text": "this is a typal a typical application running inside kubernetes well in kubernetes you schedule Parts basically",
    "start": "418919",
    "end": "425479"
  },
  {
    "text": "and parts can contain uh containers and in this case we have some a web app uh",
    "start": "425479",
    "end": "430840"
  },
  {
    "text": "calling into a couple of web apis and this is the normal way these communication um uh the communication",
    "start": "430840",
    "end": "438000"
  },
  {
    "text": "lines are running so um as you might know kubernetes also has networking",
    "start": "438000",
    "end": "443400"
  },
  {
    "text": "infrastructure so every part can have a service and you can call into this service this is basically the Endo that",
    "start": "443400",
    "end": "449120"
  },
  {
    "text": "you can call call to communicate with for instance an API well what happens when I add a service mesh to this well",
    "start": "449120",
    "end": "457280"
  },
  {
    "text": "then we see these sidecar containers appearing so the Pod will be uh expanded",
    "start": "457280",
    "end": "463039"
  },
  {
    "text": "an additional container will be run inside the Pod and then all communication will be taken over by this",
    "start": "463039",
    "end": "468759"
  },
  {
    "text": "sidecar container and this runs basically a proxy um if you know for instance Envoy Envoy is a well-known",
    "start": "468759",
    "end": "475440"
  },
  {
    "text": "open source proxy product which is actually used by stto and this Envoy will be the proxy that will handle all",
    "start": "475440",
    "end": "482879"
  },
  {
    "text": "the communication um well this is pretty invasive right because you know all the",
    "start": "482879",
    "end": "489479"
  },
  {
    "text": "communication will run to this to the sidecar container but for your code like the code running in the application",
    "start": "489479",
    "end": "496319"
  },
  {
    "text": "container it's completely opaque you don't have to do anything for it because this is all done on the kubernetes",
    "start": "496319",
    "end": "503280"
  },
  {
    "text": "network level right so everything stays the same but on the network level things are configured differently",
    "start": "503280",
    "end": "510280"
  },
  {
    "text": "and because this is happening and this is what we call the data plane in a service mesh so um this is where all the",
    "start": "510280",
    "end": "516839"
  },
  {
    "text": "data between the application components will uh will travel and also when we add",
    "start": "516839",
    "end": "522320"
  },
  {
    "text": "the control plane or when we add the service mesh we will get a control plane and this control plane is basically well",
    "start": "522320",
    "end": "529440"
  },
  {
    "text": "mission control for the whole service mesh and the control play can also",
    "start": "529440",
    "end": "534640"
  },
  {
    "text": "communicate to all the proxies and that can be both ways so we can can configure all kinds of stuff",
    "start": "534640",
    "end": "541279"
  },
  {
    "text": "from the control plane and this configuration will then be pushed to all the proxies to influence the behavior",
    "start": "541279",
    "end": "547079"
  },
  {
    "text": "that they are um that they are doing but also all the Telemetry from all the communication is automatically pushed",
    "start": "547079",
    "end": "553040"
  },
  {
    "text": "back to the control plane for observability so that is what um that's where the power is basically of this",
    "start": "553040",
    "end": "560920"
  },
  {
    "text": "approach um we will see this later on how this works in the in the sample",
    "start": "560920",
    "end": "566200"
  },
  {
    "text": "application so as I said before there are several implementations of service meshes so stto is one of the uh more",
    "start": "566200",
    "end": "573320"
  },
  {
    "text": "popular ones it's it's used heavily out there but also linkerd uh console open service mesh and genic service mesh you",
    "start": "573320",
    "end": "580880"
  },
  {
    "text": "also see lots of uh companies uh offering a service mesh nowadays and most of them are open source sometimes",
    "start": "580880",
    "end": "587320"
  },
  {
    "text": "they're not but you have to look into that um and at the end I also have some some tips for you uh also don't you know",
    "start": "587320",
    "end": "594480"
  },
  {
    "text": "always go to one implementation you have to look at all of them to see what is best fitting for your context or for",
    "start": "594480",
    "end": "600680"
  },
  {
    "text": "your project um but for this session we're going to focus on sto so what is stto",
    "start": "600680",
    "end": "608920"
  },
  {
    "text": "well stto is a complete service Mass implementation it offers you lots of capabilities that we talked about uh and",
    "start": "608920",
    "end": "615800"
  },
  {
    "text": "it is basically built up out of open- source components that you might already know like I said Envoy but also",
    "start": "615800",
    "end": "622800"
  },
  {
    "text": "Prometheus grafana kiali those are all open source tools that are already out there but they are combined into this",
    "start": "622800",
    "end": "629800"
  },
  {
    "text": "service mesh offering um it is also a cloud native Computing Foundation graduated graduated project it has it",
    "start": "629800",
    "end": "636440"
  },
  {
    "text": "has been around for some time um and basically what you do if you want to have this service mesh in your",
    "start": "636440",
    "end": "642160"
  },
  {
    "text": "kubernetes cluster you have to install it and it then adds um a lot of crds",
    "start": "642160",
    "end": "648320"
  },
  {
    "text": "custom custom resource definitions to your kubernetes cluster and then you can add stto uh configurations to your",
    "start": "648320",
    "end": "655519"
  },
  {
    "text": "cluster um the cool thing is is that it supports multi Le protocols so not only",
    "start": "655519",
    "end": "661160"
  },
  {
    "text": "HTTP but also grpc websocket and TCP traffic so on of the things that you",
    "start": "661160",
    "end": "666839"
  },
  {
    "text": "will see later on in the demo if if I for instance uh in my sample application I communicate with a rabbit mq and this",
    "start": "666839",
    "end": "673600"
  },
  {
    "text": "Rabbit mq doesn't have a side car it is just running in the cluster but because",
    "start": "673600",
    "end": "678959"
  },
  {
    "text": "I am communicating to rabit mq from services that do have a sidecar I actually see this TCP level uh traffic",
    "start": "678959",
    "end": "686880"
  },
  {
    "text": "showing up in observability so that's an additional bonus that you get because all these communication Protocols are",
    "start": "686880",
    "end": "694880"
  },
  {
    "text": "supported so um this is a picture that I got from the stto documentation and here",
    "start": "694880",
    "end": "700240"
  },
  {
    "text": "you can again see this data plane what you see on top like the envoy proxy that will make sure that communication is",
    "start": "700240",
    "end": "706880"
  },
  {
    "text": "possible between these two services and you have this control plane that does all kinds of things like well Discovery",
    "start": "706880",
    "end": "712639"
  },
  {
    "text": "configuration certificates and obviously the metrics or observability um this is a very",
    "start": "712639",
    "end": "718440"
  },
  {
    "text": "simplified picture here obviously there are lots of running Parts in there if you want to know what actually is running under the covers I would suggest",
    "start": "718440",
    "end": "725639"
  },
  {
    "text": "to check out the iso documentation it's documented very well and very thoroughly",
    "start": "725639",
    "end": "730680"
  },
  {
    "text": "um and you can find out everything you need to know about uh what's happening under the covers so how do you get once you have",
    "start": "730680",
    "end": "738720"
  },
  {
    "text": "installed sto uh into your kubernetes cluster obviously that will uh install these custom resource definition but",
    "start": "738720",
    "end": "745079"
  },
  {
    "text": "also a couple of containers that are already running which is the control plane how can you make sure that if you",
    "start": "745079",
    "end": "750120"
  },
  {
    "text": "have a container of your own a service a micros service that you want to run um that the side card will be added well",
    "start": "750120",
    "end": "756079"
  },
  {
    "text": "there are several ways of doing that and one of those things is using the esto control um U CLI so ISO comes with a CLI",
    "start": "756079",
    "end": "765240"
  },
  {
    "text": "tool and what you can do is you grab your kubernetes file you kubernetes manifest file in which you describe your",
    "start": "765240",
    "end": "771279"
  },
  {
    "text": "deployments and your services and all that stuff and then you run ISO control Cube inject and you feed it this file",
    "start": "771279",
    "end": "778680"
  },
  {
    "text": "and then it will output a manifest file and then add lots of you know annotations and stuff to make sure that",
    "start": "778680",
    "end": "785040"
  },
  {
    "text": "once you apply this manifest file to your kubernetes cluster then everything is injected so the side car is injected",
    "start": "785040",
    "end": "791160"
  },
  {
    "text": "all the configuration is handled all the network level configuration is done for you you don't have to do anything for",
    "start": "791160",
    "end": "797040"
  },
  {
    "text": "that so that is one way of doing that but this is of course a little bit cumbersome because then once you when",
    "start": "797040",
    "end": "803040"
  },
  {
    "text": "when you want want to make a change to this manifest file you always have to do this inject step and that is not really",
    "start": "803040",
    "end": "809560"
  },
  {
    "text": "um what I would suggest so there is another way and this is the preferred way um and that is using uh automatic",
    "start": "809560",
    "end": "816560"
  },
  {
    "text": "injection because stto comes with an automatic injection um capability and",
    "start": "816560",
    "end": "822000"
  },
  {
    "text": "what you then can do is through annotations that you can add to your kubernetes manifest file you can inject",
    "start": "822000",
    "end": "828279"
  },
  {
    "text": "the side car so what you can see what I highlighted here in this code snippet uh there's an annotation card. S.I inject",
    "start": "828279",
    "end": "835639"
  },
  {
    "text": "is true and if the ketes cluster has been configured and and SEO has been",
    "start": "835639",
    "end": "841000"
  },
  {
    "text": "added to it then once you apply this kubernetes manifest file it will automatically add the side car for you",
    "start": "841000",
    "end": "847720"
  },
  {
    "text": "and do all the configuration under the covers so that's um it's pretty convenient and you can do this for",
    "start": "847720",
    "end": "853880"
  },
  {
    "text": "instance for an entire cluster or only for a certain namespace or only for certain manifest files that you uh that",
    "start": "853880",
    "end": "860320"
  },
  {
    "text": "you want to run so that's pretty easy this is also what I'm going to use in the demo later",
    "start": "860320",
    "end": "866320"
  },
  {
    "text": "on so speaking about this demo um I'm going to talk to you about a very simple",
    "start": "866320",
    "end": "872720"
  },
  {
    "text": "application because it's not about the application right it's about all the uh infrastructure stuff and it's for a",
    "start": "872720",
    "end": "878360"
  },
  {
    "text": "garage and a garage is basically very simple I've left out the part that you",
    "start": "878360",
    "end": "883959"
  },
  {
    "text": "can also buy stuff at a garage like the whole inventory stuff but basically you have customers with vehicles and they",
    "start": "883959",
    "end": "890360"
  },
  {
    "text": "come in and these vehicles can be serviced right you can change the tires or change the windscreen wipers or",
    "start": "890360",
    "end": "896279"
  },
  {
    "text": "whatever um and I've created a simple system for that and it was actually very",
    "start": "896279",
    "end": "901560"
  },
  {
    "text": "hard to identify multiple Services because it is so simple but bear with me it's all about um the service mesh stuff",
    "start": "901560",
    "end": "909199"
  },
  {
    "text": "so this is a kind of a domain picture very simple I have customer management",
    "start": "909199",
    "end": "914440"
  },
  {
    "text": "basically I can add customers these customers can have vehicles a customer can of course have multiple vehicles and",
    "start": "914440",
    "end": "921079"
  },
  {
    "text": "then I schedule maintenance jobs uh for a certain vehicle certain customers and",
    "start": "921079",
    "end": "926800"
  },
  {
    "text": "all the maintenance jobs in a certain day is the workshop planning it's as simple as that it is very uh it's not a",
    "start": "926800",
    "end": "933639"
  },
  {
    "text": "very elaborate application um so let me show you the application it is actually running on my",
    "start": "933639",
    "end": "940240"
  },
  {
    "text": "laptop I'm running Docker desktop here with the kubernetes enabled um I've installed estto and I'm running now this",
    "start": "940240",
    "end": "946720"
  },
  {
    "text": "application with the side cars so if I go to my browser and I will go to the homepage uh",
    "start": "946720",
    "end": "954120"
  },
  {
    "text": "I'm a developer by the way not a designer but you will see this quite instantly when you see my UI and let me",
    "start": "954120",
    "end": "960720"
  },
  {
    "text": "zoom in a little bit let me go so this is the homepage this is my uh",
    "start": "960720",
    "end": "968000"
  },
  {
    "text": "my awesome application and then I have customer management and I can add customers so let me register one let me",
    "start": "968000",
    "end": "974000"
  },
  {
    "text": "register myself as a customer uh the keyboard is a bit",
    "start": "974000",
    "end": "979079"
  },
  {
    "text": "slanted so I might be making lots of typos so I apologize up front uh well",
    "start": "979079",
    "end": "984240"
  },
  {
    "text": "Street one whatever it this doesn't one two three four",
    "start": "984240",
    "end": "990079"
  },
  {
    "text": "wow so I registered to customer and I can see its",
    "start": "1002759",
    "end": "1008000"
  },
  {
    "text": "details well Vehicle Management and I now actually um putting some data in the",
    "start": "1008000",
    "end": "1013639"
  },
  {
    "text": "system because I'm going to run a load test later on and if I don't have any data I won't see any traffic so that's why you have to sit through this I'm",
    "start": "1013639",
    "end": "1019519"
  },
  {
    "text": "sorry for that so let uh let me register a vehicle so",
    "start": "1019519",
    "end": "1024558"
  },
  {
    "text": "s123 GB it's a Volvo xt40 and it is my Volvo so I can select",
    "start": "1024559",
    "end": "1032280"
  },
  {
    "text": "a customer but there's only one in here so I register this customer and now I can register a maintenance job I can do",
    "start": "1032280",
    "end": "1039199"
  },
  {
    "text": "that for several dates so I can look back or I can schedule one in the in the future but I want to schedule one for",
    "start": "1039199",
    "end": "1044360"
  },
  {
    "text": "today and I want to change the tires on my Volvo",
    "start": "1044360",
    "end": "1050039"
  },
  {
    "text": "and now I can select the vehicle so doesn't get any more uh interesting than",
    "start": "1050039",
    "end": "1055080"
  },
  {
    "text": "that and then once when I am mechanic am a mechanic in the garage I can use the same system to say okay I've completed",
    "start": "1055080",
    "end": "1061960"
  },
  {
    "text": "this maintenance job and there were no issues complete and then it's completed",
    "start": "1061960",
    "end": "1068200"
  },
  {
    "text": "and that's all the functionality there so this is basically the the application so let me go back uh and",
    "start": "1068200",
    "end": "1075400"
  },
  {
    "text": "once what I'm going to do now I'm going to go into Visual Studio real quick and I'm going to start a load test because",
    "start": "1075400",
    "end": "1081520"
  },
  {
    "text": "what I'm going to do is I'm just going to fire HTTP request at the application uh requesting the customers the vehicles",
    "start": "1081520",
    "end": "1088280"
  },
  {
    "text": "and the workshop planning so I'm going to start an load test and call it LT and now it is",
    "start": "1088280",
    "end": "1095159"
  },
  {
    "text": "running in the back and that's something that we need later on so so when we go back to the slides what",
    "start": "1095159",
    "end": "1102320"
  },
  {
    "text": "is the well architecture I hardly um want to call it an architecture but what is this application made up of well we",
    "start": "1102320",
    "end": "1109200"
  },
  {
    "text": "have the web application that we just saw this is just an asp.net web application running in the browser and",
    "start": "1109200",
    "end": "1114600"
  },
  {
    "text": "it uses a couple of apis first of all the customer management API the Vehicle Management API and the workshop",
    "start": "1114600",
    "end": "1120120"
  },
  {
    "text": "management API um they all use a SQL Server uh with a separate databases in",
    "start": "1120120",
    "end": "1125480"
  },
  {
    "text": "there uh to store the data and then there's some other stuff in there there's a rabbit mq and there's a",
    "start": "1125480",
    "end": "1130679"
  },
  {
    "text": "notification service that's not interesting for this talk but you might see that in you know logging or in in",
    "start": "1130679",
    "end": "1136600"
  },
  {
    "text": "the metrics uh so you know it's there but that is not the focus of the stock it's basically about the web application",
    "start": "1136600",
    "end": "1142200"
  },
  {
    "text": "communicating with these apis and that's what we're going to dive into so what is the deployment picture",
    "start": "1142200",
    "end": "1150720"
  },
  {
    "text": "if you look at this from a kubernetes perspective well first of all we have the deployments the web app the customer",
    "start": "1150720",
    "end": "1156360"
  },
  {
    "text": "management Vehicle Management and workshop management apis they all have a service because we want to call into",
    "start": "1156360",
    "end": "1161960"
  },
  {
    "text": "them um and the web app will call into the services for the apis and then the end user the browser uh will call in",
    "start": "1161960",
    "end": "1168720"
  },
  {
    "text": "into the web app service so this is what is deployed on the machine but what I said it is deployed using sto so I've",
    "start": "1168720",
    "end": "1176480"
  },
  {
    "text": "added these annotations and I will show you the Manifest files in a moment so actually these services are running with",
    "start": "1176480",
    "end": "1183159"
  },
  {
    "text": "sidecars on the machine so this is what is running now um with some other stuff",
    "start": "1183159",
    "end": "1188520"
  },
  {
    "text": "behind it but that's not not very interesting so make a mental picture of this because this is what we're going to",
    "start": "1188520",
    "end": "1193840"
  },
  {
    "text": "fall back on uh throughout the demo so um",
    "start": "1193840",
    "end": "1199720"
  },
  {
    "text": "sto so stto is running now these capabilities we're going to look at them in a several steps and the first one we",
    "start": "1199720",
    "end": "1206679"
  },
  {
    "text": "going to look at is observability and the observability that",
    "start": "1206679",
    "end": "1211760"
  },
  {
    "text": "comes with STL uh you can look through several tools so you look at Telemetry",
    "start": "1211760",
    "end": "1217400"
  },
  {
    "text": "so so metrics and traces but you can also look at logging and these are the tools that are available you don't have",
    "start": "1217400",
    "end": "1223679"
  },
  {
    "text": "to install them all you can choose that um but these are available right now so first first of all is grafana and this",
    "start": "1223679",
    "end": "1230240"
  },
  {
    "text": "will give you lots of insights into Telemetry like um number of requests",
    "start": "1230240",
    "end": "1235600"
  },
  {
    "text": "number of bytes sent uh number of successful requests well we're going to look at that in a",
    "start": "1235600",
    "end": "1240960"
  },
  {
    "text": "moment uh Kali is very powerful it will give you all kinds of information about",
    "start": "1240960",
    "end": "1246320"
  },
  {
    "text": "the mesh whether or not everything is configured correctly if you see errors you will see you know red red uh uh",
    "start": "1246320",
    "end": "1253200"
  },
  {
    "text": "lines and and all kinds of metrics around uh the success and the success rate of the of the requests and Jagger",
    "start": "1253200",
    "end": "1259600"
  },
  {
    "text": "is basically endtoend tracing so you can get um endtoend tracing throughout your entire cluster so for instance when I",
    "start": "1259600",
    "end": "1266360"
  },
  {
    "text": "call into uh from the web app to the customer management API and this will send a message to Rabbit mq which will",
    "start": "1266360",
    "end": "1272960"
  },
  {
    "text": "be picked up by another service all those kind of communications are captured by uh sto and you will be able",
    "start": "1272960",
    "end": "1280000"
  },
  {
    "text": "to see that in the traces right so let me go over to uh my browser",
    "start": "1280000",
    "end": "1288120"
  },
  {
    "text": "again and let me open up one of those um tools which is grafana and like I said",
    "start": "1288120",
    "end": "1294360"
  },
  {
    "text": "the application is now in the back it is doing all kinds of requests so I'm just mimicking a couple of users um running",
    "start": "1294360",
    "end": "1301440"
  },
  {
    "text": "uh in the background it's not heavy traffic but it's just to generate some uh some nice metrics so when I go to",
    "start": "1301440",
    "end": "1307400"
  },
  {
    "text": "dashboards you can see that there are several dashboards available here for stto and the first one is the sto",
    "start": "1307400",
    "end": "1314000"
  },
  {
    "text": "control plane dashboard because that's also also made up of several uh containers running inside my kubernetes",
    "start": "1314000",
    "end": "1320679"
  },
  {
    "text": "cluster and you can see there's all kinds of metrics and I'm not going to go over all these graphs what it means",
    "start": "1320679",
    "end": "1327200"
  },
  {
    "text": "because some of them I don't even know what they actually uh mean um but um",
    "start": "1327200",
    "end": "1332360"
  },
  {
    "text": "yeah they give you an idea that you can see lots of stuff here around what's going on in the control plane also",
    "start": "1332360",
    "end": "1337960"
  },
  {
    "text": "things like resource utilization how much CPU how much memory uh how much go routines are being called um pilot push",
    "start": "1337960",
    "end": "1346799"
  },
  {
    "text": "information uh pilot is also around Discovery and all that kind of stuff so everything that the control play needs",
    "start": "1346799",
    "end": "1353600"
  },
  {
    "text": "to do its job uh you can see Telemetry here whether or not everything is up and running and what the performance",
    "start": "1353600",
    "end": "1359440"
  },
  {
    "text": "characteristics are and you might imagine that if something goes wrong in the cluster or something goes wrong with",
    "start": "1359440",
    "end": "1366159"
  },
  {
    "text": "your control plane this is the place to go because it will show you where things are happening what is going on what is",
    "start": "1366159",
    "end": "1371840"
  },
  {
    "text": "going wrong Etc and obviously um if we look at",
    "start": "1371840",
    "end": "1376880"
  },
  {
    "text": "scaling because this is all kubernetes right and one of the cool things about kubernetes that you can scale up uh uh",
    "start": "1376880",
    "end": "1382720"
  },
  {
    "text": "and scale out and of course these metrics you can also set alerts on them",
    "start": "1382720",
    "end": "1387960"
  },
  {
    "text": "so if you notice that okay my cluster is so busy I need to uh add some additional",
    "start": "1387960",
    "end": "1393600"
  },
  {
    "text": "resources then you can get alerts from the grafana dashboard if you want um",
    "start": "1393600",
    "end": "1399400"
  },
  {
    "text": "these are pre-made dashboards that I'm showing you right now but all these blades I think they're called or all",
    "start": "1399400",
    "end": "1405880"
  },
  {
    "text": "these these metrics you can create your own Dash so it's all up to you you can just create your own dashboards and then",
    "start": "1405880",
    "end": "1412440"
  },
  {
    "text": "show them on a large midor for instance with your devops team that's what I see often at",
    "start": "1412440",
    "end": "1418600"
  },
  {
    "text": "customers so that's the control plane dashboard but also there are for instance um service dashboards and",
    "start": "1418600",
    "end": "1426679"
  },
  {
    "text": "because it knows about the services because it's constantly tracking all the traffic between the services you see",
    "start": "1426679",
    "end": "1432840"
  },
  {
    "text": "these services that we have in our application the customer management API well like I said the log server rabbit",
    "start": "1432840",
    "end": "1438640"
  },
  {
    "text": "mq are in there also so this TCP traffic is being selected or is being detected",
    "start": "1438640",
    "end": "1444880"
  },
  {
    "text": "um but it's not running with a side car but the customer management API and the Vehicle Management API they are and if I",
    "start": "1444880",
    "end": "1450880"
  },
  {
    "text": "open those you can also get a lot of um information about requests the success",
    "start": "1450880",
    "end": "1456520"
  },
  {
    "text": "rate of requests what are the um the workloads what are the sizes of the",
    "start": "1456520",
    "end": "1461679"
  },
  {
    "text": "request all kinds of information that is really helpful when you start troubleshooting if something goes wrong",
    "start": "1461679",
    "end": "1468240"
  },
  {
    "text": "uh because yeah like I always said if everything works and everything is up and running and your customers are happy",
    "start": "1468240",
    "end": "1473399"
  },
  {
    "text": "then this is nice this is I candy right it looks like you're in control um but once things start going wrong this is",
    "start": "1473399",
    "end": "1480679"
  },
  {
    "text": "actually where you get the value from because you can see exactly what's going on and where you actually have an issue",
    "start": "1480679",
    "end": "1486000"
  },
  {
    "text": "in the system um so like I said request duration request sizes where requests",
    "start": "1486000",
    "end": "1492200"
  },
  {
    "text": "are coming from where requests are going to all those kinds of metrics you can just get um without doing anything I",
    "start": "1492200",
    "end": "1499159"
  },
  {
    "text": "haven't configured anything this is just a default installation of iso and you can also of course customize this but",
    "start": "1499159",
    "end": "1505679"
  },
  {
    "text": "out of the box this is what you get so I think that's pretty um powerful and pretty",
    "start": "1505679",
    "end": "1511640"
  },
  {
    "text": "valuable um another one is Kali and Kali",
    "start": "1511640",
    "end": "1517080"
  },
  {
    "text": "also gives you all kinds of information and the cool thing is that Kali is basically an open source Telemetry tool",
    "start": "1517080",
    "end": "1523960"
  },
  {
    "text": "or dashboarding tool but they've added all kinds of knowledge about so it knows",
    "start": "1523960",
    "end": "1529440"
  },
  {
    "text": "about is it running with a side car or not so if I for instance here go to Applications you can actually see all my",
    "start": "1529440",
    "end": "1535520"
  },
  {
    "text": "services running so the customer management API but the audit Lock Service is also a container missing",
    "start": "1535520",
    "end": "1542360"
  },
  {
    "text": "sidecar so it actually knows okay this is running inside your kubernetes cluster and I have Services",
    "start": "1542360",
    "end": "1547640"
  },
  {
    "text": "communicating with this thing that's why it picked up the uh the Telemetry but it doesn't have an stto side car what's",
    "start": "1547640",
    "end": "1554159"
  },
  {
    "text": "going on there that could be deliberate but from this dashboard you can immediately see whether or not you have",
    "start": "1554159",
    "end": "1560240"
  },
  {
    "text": "a side car running or not um the other cool thing and this is obviously always",
    "start": "1560240",
    "end": "1565640"
  },
  {
    "text": "very nice to demo is that you get a graph for free from the entire application and like I said there are",
    "start": "1565640",
    "end": "1572159"
  },
  {
    "text": "some other stuff in here so I have a um a filter setup so that I can leave out",
    "start": "1572159",
    "end": "1578120"
  },
  {
    "text": "some stuff but if I show you this this is actually um an overview of",
    "start": "1578120",
    "end": "1585240"
  },
  {
    "text": "the application and if I add some additional features like I want to see the traffic",
    "start": "1585240",
    "end": "1591440"
  },
  {
    "text": "distribution so what percentage of traffic is going where and then for the demo purposes of of course I want to see",
    "start": "1591440",
    "end": "1598240"
  },
  {
    "text": "traffic animation and then you actually see all the requests running through your system and also when something goes",
    "start": "1598240",
    "end": "1605520"
  },
  {
    "text": "wrong or a request is not handled correctly you will see a red arrow and you can also get all kinds of telemetry",
    "start": "1605520",
    "end": "1611799"
  },
  {
    "text": "around what's going on so if I pick for instance this one the workshop management API I get all kinds of",
    "start": "1611799",
    "end": "1617240"
  },
  {
    "text": "information okay it is healthy um it is in the pit stop name space how many requests per seconds I even can get the",
    "start": "1617240",
    "end": "1623960"
  },
  {
    "text": "traces of the individual requests and I can drill down all the way to individual",
    "start": "1623960",
    "end": "1629039"
  },
  {
    "text": "request um level so that is pretty powerful stuff and we're going to use",
    "start": "1629039",
    "end": "1634320"
  },
  {
    "text": "Kali throughout the demo um to show you what's going on in the cluster right um finally I'm going to",
    "start": "1634320",
    "end": "1641559"
  },
  {
    "text": "show you Yer which is also pretty awesome um and you can do all kinds of quers but now I'm going to sh focus on",
    "start": "1641559",
    "end": "1648480"
  },
  {
    "text": "the customer management API and if I say find traces then I can see all the traces that happen here so uh if I open",
    "start": "1648480",
    "end": "1655799"
  },
  {
    "text": "up one you can actually see that the web application called into the customer management API but if you have multiple",
    "start": "1655799",
    "end": "1662600"
  },
  {
    "text": "hops behind that that it calls into another service you will actually see a complete breakdown of this uh of this",
    "start": "1662600",
    "end": "1669480"
  },
  {
    "text": "call right so that's all about observability",
    "start": "1669480",
    "end": "1674880"
  },
  {
    "text": "um I've also put Prometheus up in here because lots of stuff under the covers around observability is also powered by",
    "start": "1674880",
    "end": "1681760"
  },
  {
    "text": "Prometheus also an open source Tool uh um so that's that's pretty cool and it's basically also more and more working",
    "start": "1681760",
    "end": "1688840"
  },
  {
    "text": "with open Telemetry which is also a standard so these are the tools that are used right now but if you want to use",
    "start": "1688840",
    "end": "1694200"
  },
  {
    "text": "different tools you can actually get the data in a standardized format and then use your own dashboarding tool if you",
    "start": "1694200",
    "end": "1701320"
  },
  {
    "text": "want so the next feature that I want to show you is traffic routing there's lots",
    "start": "1701320",
    "end": "1706679"
  },
  {
    "text": "of ways you can do traffic routing within uh uh within the service mesh so",
    "start": "1706679",
    "end": "1711840"
  },
  {
    "text": "here is the picture again of the application as it is running right now and what I'm want to do right now is I",
    "start": "1711840",
    "end": "1717200"
  },
  {
    "text": "want to introduce a new version of the customer management API so I've created",
    "start": "1717200",
    "end": "1722279"
  },
  {
    "text": "a second version and this will um if I query a customer it will add loyalty",
    "start": "1722279",
    "end": "1728039"
  },
  {
    "text": "information about the customer there's some kind of a loyalty status and then you get a gold silver or bronze medal",
    "start": "1728039",
    "end": "1733240"
  },
  {
    "text": "showing in the front end and I must say that the front end is already um equipped for this so it will just say",
    "start": "1733240",
    "end": "1740120"
  },
  {
    "text": "okay if there's a loyalty uh in the data that I get back I will show it and else I will not show it so it's already",
    "start": "1740120",
    "end": "1746440"
  },
  {
    "text": "knowing about these two versions um and this is of course a very simple change but this could be a completely new",
    "start": "1746440",
    "end": "1753000"
  },
  {
    "text": "version with all kinds of changes that you want to bring into production well obviously you can just deploy this",
    "start": "1753000",
    "end": "1759840"
  },
  {
    "text": "service and make sure that the end users hit this service and then fingers crossed and hope that everything goes",
    "start": "1759840",
    "end": "1765640"
  },
  {
    "text": "right but you all know that might go wrong we might have had all our unit",
    "start": "1765640",
    "end": "1771159"
  },
  {
    "text": "tests and integration tests but actually doing that in production is sometimes quite scary and um what you can do for",
    "start": "1771159",
    "end": "1778440"
  },
  {
    "text": "instance with ISO is that you say Okay I want to deploy this service and I want the traffic that is coming in for the",
    "start": "1778440",
    "end": "1785760"
  },
  {
    "text": "customer management API service I want to mirror that to the V2 service but I",
    "start": "1785760",
    "end": "1791000"
  },
  {
    "text": "don't want to send anything back to my end users they are all using V1 but I just want to mirror the traffic and see",
    "start": "1791000",
    "end": "1797120"
  },
  {
    "text": "what's going on and then obviously with these observability tools that I just showed you can keep a close watch on",
    "start": "1797120",
    "end": "1803440"
  },
  {
    "text": "that V2 service and see that everything is going right and obviously if this servers would you know do um",
    "start": "1803440",
    "end": "1810720"
  },
  {
    "text": "transactions in a database you have to make sure that that's that that doesn't interfere right with with the the the",
    "start": "1810720",
    "end": "1816919"
  },
  {
    "text": "normal production operation but in this case it's only queries so bear with me",
    "start": "1816919",
    "end": "1822039"
  },
  {
    "text": "this is a simple scenario but obviously if your application is up to it you can do all these things with all changes",
    "start": "1822039",
    "end": "1827760"
  },
  {
    "text": "that you want so what I'm going to do is I'm going to um deploy this V2 service",
    "start": "1827760",
    "end": "1834080"
  },
  {
    "text": "of the uh of the customer management API and that also gives me the ability to show you some of these manifest files",
    "start": "1834080",
    "end": "1840039"
  },
  {
    "text": "how I'm going to do this so this is is this visible in the",
    "start": "1840039",
    "end": "1845600"
  },
  {
    "text": "back yeah yeah okay um so this is the solution I'm going to give you a link to",
    "start": "1845600",
    "end": "1852200"
  },
  {
    "text": "the U to the GitHub repo afterwards so you can use this and you can play with this and I've described who you can do",
    "start": "1852200",
    "end": "1858240"
  },
  {
    "text": "the things that I'm doing right now you can do them yourself um and you might um well recognize the customer management",
    "start": "1858240",
    "end": "1864480"
  },
  {
    "text": "API the Vehicle Management API which is just asp.net core web apis right there's",
    "start": "1864480",
    "end": "1869760"
  },
  {
    "text": "nothing nothing fancy and they're running as containers on my machine um",
    "start": "1869760",
    "end": "1875000"
  },
  {
    "text": "interesting is this kubernetes folder in here because here you can see all the Manifest files for the different",
    "start": "1875000",
    "end": "1880080"
  },
  {
    "text": "services and I will show you the customer management V1 um manifest file",
    "start": "1880080",
    "end": "1886360"
  },
  {
    "text": "and this is nothing fancy this is just a default kubernetes manifest files for",
    "start": "1886360",
    "end": "1891919"
  },
  {
    "text": "for deployment so in this case what I said is we're looking at a deployment customer management API V1 it's running",
    "start": "1891919",
    "end": "1898039"
  },
  {
    "text": "in the pit stop namespace well if you've done kubernetes before you will recognize this nothing fancy or nothing",
    "start": "1898039",
    "end": "1904559"
  },
  {
    "text": "ISO specific about this um but for deploying this I have used a different",
    "start": "1904559",
    "end": "1910240"
  },
  {
    "text": "version of this manifest file and I will show you that one oh this is the V2 and this is basically the same file",
    "start": "1910240",
    "end": "1917559"
  },
  {
    "text": "with one addition and that's this annotation and like I said I'm using this Auto um inject functionality",
    "start": "1917559",
    "end": "1925639"
  },
  {
    "text": "because of this annotation when I deploy this to my kubernetes cluster automatically a side car is added so",
    "start": "1925639",
    "end": "1931360"
  },
  {
    "text": "that's the only thing that I needed to do to add this um another thing to notice is that",
    "start": "1931360",
    "end": "1937399"
  },
  {
    "text": "I have a separate surface for this deployment right so this is basically the endpoint that I'm going to use to",
    "start": "1937399",
    "end": "1942960"
  },
  {
    "text": "communicate with the service and there's something particular about this one because I am only routing traffic to",
    "start": "1942960",
    "end": "1951960"
  },
  {
    "text": "V1 and this is something that I always do if I have a version uh a version way",
    "start": "1951960",
    "end": "1957679"
  },
  {
    "text": "of deploying my containers because I have a V1 I specifically tell it to only",
    "start": "1957679",
    "end": "1962760"
  },
  {
    "text": "route to V1 traffic and this means that I can now deploy my V2 version without",
    "start": "1962760",
    "end": "1969039"
  },
  {
    "text": "it being called it will just only be the deployment is being spun up in my",
    "start": "1969039",
    "end": "1974159"
  },
  {
    "text": "kubernetes cluster but it will not get any traffic so I will do that right right now and for this I use just the",
    "start": "1974159",
    "end": "1981559"
  },
  {
    "text": "cube cuddle the cube control CLI so I'm going to say Cube CTL apply DF and then",
    "start": "1981559",
    "end": "1989279"
  },
  {
    "text": "I'm going to give it this customer management API V2 manifest file which is",
    "start": "1989279",
    "end": "1995760"
  },
  {
    "text": "basically the same as V1 with The annotation but then it uses a different version of the container which has the",
    "start": "1995760",
    "end": "2001159"
  },
  {
    "text": "V2 functionality right so I'm going to apply this and",
    "start": "2001159",
    "end": "2006360"
  },
  {
    "text": "then it says deployment create and the really weird thing is if I now go back to Kali for instance and we",
    "start": "2006360",
    "end": "2013880"
  },
  {
    "text": "focus on the uh customer management service so let me open that up for you",
    "start": "2013880",
    "end": "2019399"
  },
  {
    "text": "here we go we will never see V2 and why is that well because there's no traffic",
    "start": "2019399",
    "end": "2026279"
  },
  {
    "text": "being routed to V2 it will only pick it up once uh we have a um traffic that is",
    "start": "2026279",
    "end": "2032639"
  },
  {
    "text": "going to the to the version so that is why we don't see that here so let me",
    "start": "2032639",
    "end": "2038720"
  },
  {
    "text": "fix that so like I said we want to now mirror the traffic that is coming",
    "start": "2038720",
    "end": "2045039"
  },
  {
    "text": "into V1 and we want to mirror that to the V2 version of the service well in order to do that you have to create what",
    "start": "2045039",
    "end": "2052118"
  },
  {
    "text": "is called a virtual service and this is something that is stto specific so I'm going to show you the Manifest file and",
    "start": "2052119",
    "end": "2059200"
  },
  {
    "text": "this is the customer management API mirror um so what I do is I create two",
    "start": "2059200",
    "end": "2066240"
  },
  {
    "text": "additional resources in my cluster the first one is a destination Rule and this basically gives um certain labels that",
    "start": "2066240",
    "end": "2073599"
  },
  {
    "text": "I've added to my containers I give that um a name so V1 will mean that I will",
    "start": "2073599",
    "end": "2080720"
  },
  {
    "text": "Target all the containers that have a label version 1.0 and V2 means I have uh",
    "start": "2080720",
    "end": "2086440"
  },
  {
    "text": "that will Target all the containers that have a label V2 of 2.0 and then once I've created a destination rule I will",
    "start": "2086440",
    "end": "2093720"
  },
  {
    "text": "use that to create a virtual service and as you can see both these are stto",
    "start": "2093720",
    "end": "2099280"
  },
  {
    "text": "resources right this is not kubernetes but this is stto specific and this virtual service will",
    "start": "2099280",
    "end": "2106040"
  },
  {
    "text": "basically be overlay will be will be an overlay onto the serf the service for the uh customer um management API it",
    "start": "2106040",
    "end": "2114560"
  },
  {
    "text": "also running in the pit stop namespace and then I specify what I want to do and in this case on an HTTP level so on for",
    "start": "2114560",
    "end": "2122800"
  },
  {
    "text": "all the HTTP traffic and this is just web apis this is all HTTP I want want to",
    "start": "2122800",
    "end": "2128000"
  },
  {
    "text": "Route 100% of the traffic to V1 and I want to mirror 100% of the traffic to V2",
    "start": "2128000",
    "end": "2136359"
  },
  {
    "text": "and this will mean that it will get all the me all the messages that come in to V1 but it will never be sent back to the",
    "start": "2136359",
    "end": "2141680"
  },
  {
    "text": "end user right so I will uh apply this",
    "start": "2141680",
    "end": "2146920"
  },
  {
    "text": "file and I will do this like this and then you see that the",
    "start": "2146920",
    "end": "2153240"
  },
  {
    "text": "destination rule has been created and the virtual service has been created and now if I go back back to",
    "start": "2153240",
    "end": "2159160"
  },
  {
    "text": "Kali what we will see I'll zoom in a little bit let me lay lay this out for",
    "start": "2159160",
    "end": "2164359"
  },
  {
    "text": "you it's a little bit zoomed",
    "start": "2164359",
    "end": "2168200"
  },
  {
    "text": "in you will actually see that this now has a virtual service this purple thing means that it has a virtual service and",
    "start": "2169800",
    "end": "2175839"
  },
  {
    "text": "if I click on the service you can actually see",
    "start": "2175839",
    "end": "2181079"
  },
  {
    "text": "here that it has request routing and it has mirroring enabled so you immediately",
    "start": "2181560",
    "end": "2187200"
  },
  {
    "text": "see that Kali has all kinds of knowledge about sto specific stuff it sees that it has a virtual service it shows that in",
    "start": "2187200",
    "end": "2194040"
  },
  {
    "text": "the graph and it will show you what's going on there well now there's one thing because",
    "start": "2194040",
    "end": "2199960"
  },
  {
    "text": "we don't see V2 showing up here and that is because the service that I've created",
    "start": "2199960",
    "end": "2205400"
  },
  {
    "text": "up front is still only sending messages to V1 right so now I am able because the",
    "start": "2205400",
    "end": "2212200"
  },
  {
    "text": "mirroring is enabled and now I can safely remove this and say okay start using V1 or V2 or whatever you don't",
    "start": "2212200",
    "end": "2219880"
  },
  {
    "text": "have to Target a specific version anymore well I'm going to apply this",
    "start": "2219880",
    "end": "2226400"
  },
  {
    "text": "also and then the service will be reconfigured as you can see configured",
    "start": "2226520",
    "end": "2232520"
  },
  {
    "text": "here and now if we go back to Kali and wait a couple of of seconds we will actually see V2 coming up and we will",
    "start": "2232520",
    "end": "2238720"
  },
  {
    "text": "also see that traffic is flowing through V2 to the SQL Server because it's actually querying stuff in the database",
    "start": "2238720",
    "end": "2245680"
  },
  {
    "text": "but it is never sending the requests of or the the results back to the to the users there we go so now I have",
    "start": "2245680",
    "end": "2252359"
  },
  {
    "text": "introduced this service without hurting any of the customers so if I now go for instance to the front end and I open up",
    "start": "2252359",
    "end": "2259760"
  },
  {
    "text": "customer management is just V1 else I would see in the Loyalty status here",
    "start": "2259760",
    "end": "2265359"
  },
  {
    "text": "beneath beneath the email address and I can refresh as much as I want I only get results from V1 because I'm just",
    "start": "2265359",
    "end": "2271880"
  },
  {
    "text": "mirroring to V2 right so that makes sense but in the metrics you can already see that this is going",
    "start": "2271880",
    "end": "2278200"
  },
  {
    "text": "um go going through the service okay so now that we're pretty",
    "start": "2278200",
    "end": "2285000"
  },
  {
    "text": "happy because the service didn't crash we didn't see any error so it's probably running fine right so we can go to the",
    "start": "2285000",
    "end": "2291760"
  },
  {
    "text": "next step and then we could just throw it into production and say okay just load balance over V1 and V2 and then all",
    "start": "2291760",
    "end": "2298440"
  },
  {
    "text": "the users will get either V1 or V2 because that's the default implementation of the service but I'm",
    "start": "2298440",
    "end": "2305440"
  },
  {
    "text": "just a little bit more cautious because what I want to do actually is I want to do a canary release of V2 and basically",
    "start": "2305440",
    "end": "2312520"
  },
  {
    "text": "what I want to say is give me 25% of the people of the requests I will send them",
    "start": "2312520",
    "end": "2317920"
  },
  {
    "text": "to V2 and the other 75 to V1 because if still some something goes wrong or if",
    "start": "2317920",
    "end": "2323319"
  },
  {
    "text": "there's any other issues that I haven't foreseen then I only impact 25% of my customers and in this case I'm using a",
    "start": "2323319",
    "end": "2331480"
  },
  {
    "text": "percentage-based policy but you can also say uh users from this that use this",
    "start": "2331480",
    "end": "2337640"
  },
  {
    "text": "browser or that have this header or there are several ways you can Define",
    "start": "2337640",
    "end": "2342680"
  },
  {
    "text": "how this traffic should be shaped right so this is the simple way uh using um",
    "start": "2342680",
    "end": "2347800"
  },
  {
    "text": "percentages so what I'm going to do is I'm going to go back to vs code and I'm quickly going to show you what the",
    "start": "2347800",
    "end": "2354680"
  },
  {
    "text": "canary uh release looks like the Manifest file and also you see here the",
    "start": "2354680",
    "end": "2360760"
  },
  {
    "text": "destination rule that's the same V1 and V2 and now instead of mirroring I'm",
    "start": "2360760",
    "end": "2365800"
  },
  {
    "text": "saying on an HTTP level I want to have 75% to V1 and 25% to V2",
    "start": "2365800",
    "end": "2373720"
  },
  {
    "text": "and like I said this is where you have several different choices to to know to",
    "start": "2373720",
    "end": "2379119"
  },
  {
    "text": "um select a policy here so what I'm going to do again it's going to be a little bit boring to see me type all the",
    "start": "2379119",
    "end": "2385359"
  },
  {
    "text": "time um oh I'm going to apply the canary one and what you can then see is that",
    "start": "2385359",
    "end": "2392920"
  },
  {
    "text": "the destination rule is unchanged which the same destination rule but the virtual service has reconfigured and if",
    "start": "2392920",
    "end": "2398440"
  },
  {
    "text": "I go back to Kali we can instantly see that because when I select the service now and I look here at what's going",
    "start": "2398440",
    "end": "2406440"
  },
  {
    "text": "on oh now you can see it has not it doesn't",
    "start": "2406440",
    "end": "2412319"
  },
  {
    "text": "have mirroring but it has traffic shifting and it is now using this 2575",
    "start": "2412319",
    "end": "2417920"
  },
  {
    "text": "rule to um to divide the traffic and if we look at the distribution of the of",
    "start": "2417920",
    "end": "2424359"
  },
  {
    "text": "the traffic this will eventually because this is always looking 1 minute in the uh in um in history so this will",
    "start": "2424359",
    "end": "2431040"
  },
  {
    "text": "eventually go to 2575 and if I now go to the application",
    "start": "2431040",
    "end": "2437480"
  },
  {
    "text": "and I refresh this page this is V1 V1 V1 ah",
    "start": "2437480",
    "end": "2443200"
  },
  {
    "text": "V2 this is V1 this is V1 this is V1",
    "start": "2443200",
    "end": "2449720"
  },
  {
    "text": "V1 it's not exact science obviously but in roughly 25% of the times I get an",
    "start": "2450040",
    "end": "2456400"
  },
  {
    "text": "additional loyalty level so that means that my web application called the service and it was routed to V2 and it",
    "start": "2456400",
    "end": "2462359"
  },
  {
    "text": "got back data with a loyalty uh level in there so now 25% of of the customers",
    "start": "2462359",
    "end": "2468720"
  },
  {
    "text": "already see this new feature uh lighting up in the uh in the front end",
    "start": "2468720",
    "end": "2474440"
  },
  {
    "text": "right um to take it a step further what we can do now is we can say well you know what",
    "start": "2474440",
    "end": "2481599"
  },
  {
    "text": "um I want everyone to enjoy this um let me just remove the virtual service",
    "start": "2481599",
    "end": "2489119"
  },
  {
    "text": "right so what I can do and I can I can use the same um tool Cube Cube control",
    "start": "2489119",
    "end": "2494720"
  },
  {
    "text": "to remove stuff so I can say delete and then I will remove this Canary release",
    "start": "2494720",
    "end": "2501560"
  },
  {
    "text": "one and what this will do is will it will change because now the distribution",
    "start": "2501560",
    "end": "2506640"
  },
  {
    "text": "will be 50/50 because that's the default behavior of an kubernetes service it will just you know load balance between",
    "start": "2506640",
    "end": "2513720"
  },
  {
    "text": "the two services so if I now go back to the application I probably see more V2",
    "start": "2513720",
    "end": "2518960"
  },
  {
    "text": "calls than before and that's actually the case right",
    "start": "2518960",
    "end": "2526480"
  },
  {
    "text": "well and then the last step basically is why would we use V1 because everyone",
    "start": "2526480",
    "end": "2532280"
  },
  {
    "text": "wants this new cool feature right so we can now just remove V V1 from the",
    "start": "2532280",
    "end": "2537359"
  },
  {
    "text": "cluster and then everyone everybody will use V2 so I'm going to do the same thing",
    "start": "2537359",
    "end": "2542400"
  },
  {
    "text": "Cube cuddle delete DF oh",
    "start": "2542400",
    "end": "2548119"
  },
  {
    "text": "and then I'm going to ju just delete the V1 stto service um deployment sorry the",
    "start": "2548119",
    "end": "2554520"
  },
  {
    "text": "service will obviously still exist so V1 is now deleted and if I go to the Ser to the",
    "start": "2554520",
    "end": "2560960"
  },
  {
    "text": "service here I can refresh now as many times as I want I always get V2 and then",
    "start": "2560960",
    "end": "2566960"
  },
  {
    "text": "in Kali if we wait a couple of seconds then V1 will eventually be gone from the",
    "start": "2566960",
    "end": "2572119"
  },
  {
    "text": "entire cluster and everything is done with zero downtime so all requests that are being",
    "start": "2572119",
    "end": "2579680"
  },
  {
    "text": "made will um be routed and and nothing will break so and that's because you",
    "start": "2579680",
    "end": "2584880"
  },
  {
    "text": "know um the uh kubernetes and stto will make sure that everything uh is handled correctly and then the service will be",
    "start": "2584880",
    "end": "2591440"
  },
  {
    "text": "taken out of the cluster",
    "start": "2591440",
    "end": "2595440"
  },
  {
    "text": "right okay um next topic chaos engineering who has heard of chaos",
    "start": "2596960",
    "end": "2603599"
  },
  {
    "text": "engineering okay couple of people well chaos engineering is basically um I",
    "start": "2603599",
    "end": "2608680"
  },
  {
    "text": "think it was somewhere coined at Netflix at some point in time they had this Simeon Army in which they had all kinds",
    "start": "2608680",
    "end": "2615000"
  },
  {
    "text": "of tools that they just let loose on production workloads and they just you",
    "start": "2615000",
    "end": "2620440"
  },
  {
    "text": "know brought down stuff and then they were just confident that everything kept working which is I think pretty bold if",
    "start": "2620440",
    "end": "2626640"
  },
  {
    "text": "you can do that you probably have your architecture pretty much under control um but this is something you can that we",
    "start": "2626640",
    "end": "2632520"
  },
  {
    "text": "can also do with a service mesh so one of the things that I've done for this applic",
    "start": "2632520",
    "end": "2637800"
  },
  {
    "text": "in this web application I've added resiliency um I anyone heard of polyn",
    "start": "2637800",
    "end": "2644280"
  },
  {
    "text": "NET Framework the net Library so poly is a a framework or a library that you can",
    "start": "2644280",
    "end": "2649640"
  },
  {
    "text": "use to build in retry circuit breakers all that kinds of resiliency stuff so",
    "start": "2649640",
    "end": "2655240"
  },
  {
    "text": "the resiliency you want to test that but we could of course you know just tear",
    "start": "2655240",
    "end": "2662400"
  },
  {
    "text": "down the Vehicle Management API service in production but that's a little bit scary right because people are using it",
    "start": "2662400",
    "end": "2670000"
  },
  {
    "text": "all the time so how are we going to test this well this resiliency is built upon",
    "start": "2670000",
    "end": "2676040"
  },
  {
    "text": "the fact that when I do a request to the Vehicle Management to to any API but in this case we're targeting the Vehicle",
    "start": "2676040",
    "end": "2681839"
  },
  {
    "text": "Management API um if I do a request to this API and it fails then Polly will",
    "start": "2681839",
    "end": "2687800"
  },
  {
    "text": "just say okay there was a failure but I will retry so what I now want to do is using",
    "start": "2687800",
    "end": "2693760"
  },
  {
    "text": "the service mesh I want to introduce an HTT PP 500 error or something else you",
    "start": "2693760",
    "end": "2699200"
  },
  {
    "text": "can send back a very big request or you can introduce a delay or any kinds of",
    "start": "2699200",
    "end": "2705359"
  },
  {
    "text": "issues that you want to um simulate basically you can do that using the service mesh and it doesn't mean that",
    "start": "2705359",
    "end": "2712119"
  },
  {
    "text": "the service is broken but because all the communication is handled by the sidecar by the proxy they can just say",
    "start": "2712119",
    "end": "2719240"
  },
  {
    "text": "okay the request went fine but I will just return a 500 so the caller thinks that this service is down and that's",
    "start": "2719240",
    "end": "2725800"
  },
  {
    "text": "something that you can do so what does does this look like in STO um lingo well uh let me close this",
    "start": "2725800",
    "end": "2734520"
  },
  {
    "text": "up we go to the vehicle management and then false and in this case it's again a",
    "start": "2734520",
    "end": "2740960"
  },
  {
    "text": "virtual service so I'm adding um um Behavior to the uh the actual kubernetes",
    "start": "2740960",
    "end": "2746520"
  },
  {
    "text": "service for the vehicle management API in the pit stop namespace and what I'm going to say is",
    "start": "2746520",
    "end": "2753040"
  },
  {
    "text": "on an HTTP level I want to introduce a fault and theault must be an abort of",
    "start": "2753040",
    "end": "2758760"
  },
  {
    "text": "the request with an HTTP status code 500 or whatever if you've written something",
    "start": "2758760",
    "end": "2764640"
  },
  {
    "text": "that says if I get a 404 I need to do something well whatever HTTP status code",
    "start": "2764640",
    "end": "2769800"
  },
  {
    "text": "you want um and I want to do that in 25% of the time so 25% of the requests will",
    "start": "2769800",
    "end": "2775640"
  },
  {
    "text": "yield eventually an uh an error 500 and like I said again there are lots of",
    "start": "2775640",
    "end": "2781400"
  },
  {
    "text": "policies you can use here to insert issues delays timeouts you name it",
    "start": "2781400",
    "end": "2788040"
  },
  {
    "text": "there's lots of stuff that you can find in the documentation that you can do to simulate all kinds of issues to see",
    "start": "2788040",
    "end": "2793920"
  },
  {
    "text": "whether or not the rest of your application and the rest of your architecture actually can um handle",
    "start": "2793920",
    "end": "2799599"
  },
  {
    "text": "that so what I'm going to do now is I'm going to apply this to the",
    "start": "2799599",
    "end": "2805680"
  },
  {
    "text": "cluster and I'm going to throw in this vehicle management false",
    "start": "2809040",
    "end": "2814319"
  },
  {
    "text": "file here we go oh",
    "start": "2814319",
    "end": "2818839"
  },
  {
    "text": "yes so the virtual management API virtual service has been created so let's go back to yeah this a little bit",
    "start": "2823800",
    "end": "2830319"
  },
  {
    "text": "zoomed out can I zoom in here this is the Vehicle Management yeah this is",
    "start": "2830319",
    "end": "2837680"
  },
  {
    "text": "it so in a moment and it is a little bit weird how this is shown in the graph",
    "start": "2837760",
    "end": "2843319"
  },
  {
    "text": "because it will show in a moment an an additional vehicle man agement API service that will have errors oh here it",
    "start": "2843319",
    "end": "2849440"
  },
  {
    "text": "is already",
    "start": "2849440",
    "end": "2853440"
  },
  {
    "text": "ah but now you will see that the um the servic is this one is already orange and",
    "start": "2855280",
    "end": "2860640"
  },
  {
    "text": "this is the web API because the web API will get the errors so that is what is",
    "start": "2860640",
    "end": "2865760"
  },
  {
    "text": "showing here and then you can see if you look at the distribution that the service does not only has successful",
    "start": "2865760",
    "end": "2872920"
  },
  {
    "text": "requests oh I'm messing up the zoom here but we will also get um error requests",
    "start": "2872920",
    "end": "2880760"
  },
  {
    "text": "and if I leave this on for long enough then this will eventually go to 25% because 25% of all request will",
    "start": "2880760",
    "end": "2887640"
  },
  {
    "text": "eventually fail because I've injected this fault on the network level so if I",
    "start": "2887640",
    "end": "2893000"
  },
  {
    "text": "now go to the application and I go to Vehicle Management everything works I can just",
    "start": "2893000",
    "end": "2900160"
  },
  {
    "text": "open up I find my Volvo I can refresh I can do that many times it looks like",
    "start": "2900160",
    "end": "2906520"
  },
  {
    "text": "every everything is up and running from the front-end perspective and this is what we want right our customers doesn't need to know that there's something",
    "start": "2906520",
    "end": "2912520"
  },
  {
    "text": "going on but if I go to my logging and I'm using in this case I'm using seek to",
    "start": "2912520",
    "end": "2918720"
  },
  {
    "text": "pick up all the logging from the services and I focus on warnings then",
    "start": "2918720",
    "end": "2923880"
  },
  {
    "text": "you can see and we could look at the time stamp at a certain moment in time you can see all kinds of errors and it",
    "start": "2923880",
    "end": "2930119"
  },
  {
    "text": "says error occurred during request execution poly will retry exception",
    "start": "2930119",
    "end": "2935880"
  },
  {
    "text": "response status does not indicate success and it will say it is 500 can I hide",
    "start": "2935880",
    "end": "2943079"
  },
  {
    "text": "this not indicates oh it's wrapping here and you can see that this is actually the vehicle management controller that",
    "start": "2944240",
    "end": "2951559"
  },
  {
    "text": "received that error and then it did a retry and then it got an uh a successful",
    "start": "2951559",
    "end": "2957160"
  },
  {
    "text": "answer back so there's nothing wrong that is why I don't see any errors from the front end and now I can actually see",
    "start": "2957160",
    "end": "2964040"
  },
  {
    "text": "that the resiliency that I've built into the application is actually working because I've added these faults on a",
    "start": "2964040",
    "end": "2969480"
  },
  {
    "text": "network level",
    "start": "2969480",
    "end": "2973920"
  },
  {
    "text": "right okay um so those are a couple of features that you get out of the box",
    "start": "2975640",
    "end": "2981359"
  },
  {
    "text": "when using sto and like I said this is just the tip of the icebergs if you look in the documentation there's lots of",
    "start": "2981359",
    "end": "2987799"
  },
  {
    "text": "other stuff that you can do you can have much more elaborate uh traffic shaping schemes you can also for instance say",
    "start": "2987799",
    "end": "2994880"
  },
  {
    "text": "these Services can call into these services but not into other services you can do all kinds of security stuff you",
    "start": "2994880",
    "end": "3001119"
  },
  {
    "text": "name it everything that you can influence on a network level is basically available to you through the",
    "start": "3001119",
    "end": "3006599"
  },
  {
    "text": "service mesh so some final thoughts um looking",
    "start": "3006599",
    "end": "3012680"
  },
  {
    "text": "at this you might think I need this this is pretty cool stuff but um like I said",
    "start": "3012680",
    "end": "3019119"
  },
  {
    "text": "with microservices with kubernetes with everything that you introduce you introduce complexity you introduce new",
    "start": "3019119",
    "end": "3025319"
  },
  {
    "text": "things you have to learn so make sure that you have a need for a service mesh and also make sure that you have an",
    "start": "3025319",
    "end": "3032599"
  },
  {
    "text": "architectural fit because like I said before um the introduction of the V2 service",
    "start": "3032599",
    "end": "3039960"
  },
  {
    "text": "and my front end knowing about V1 and V2 and be inversion aware and having all",
    "start": "3039960",
    "end": "3046000"
  },
  {
    "text": "kinds of resiliency in there that is why I could just introduce that this way so",
    "start": "3046000",
    "end": "3051760"
  },
  {
    "text": "don't think that this service mesh is some kind of a magic want and that you say okay once I've included this service",
    "start": "3051760",
    "end": "3058240"
  },
  {
    "text": "mesh I don't have to think anymore as a developer about resiliency and all this stuff no you still have to have a cloud",
    "start": "3058240",
    "end": "3064480"
  },
  {
    "text": "native architecture that supports these kinds of things um version awareness",
    "start": "3064480",
    "end": "3070040"
  },
  {
    "text": "backwards compatibility all those things that you needed to think about before um you still need to do them but now you",
    "start": "3070040",
    "end": "3077160"
  },
  {
    "text": "get lots of value when you add this service match be because you can do all kinds of stuff that I just showed you",
    "start": "3077160",
    "end": "3083079"
  },
  {
    "text": "also think about the experience of your team if you have a team that are purely developers and don't they don't have a",
    "start": "3083079",
    "end": "3089520"
  },
  {
    "text": "lots of understanding of networking and all that kinds of stuff it can be pretty hard to know what's going on and to",
    "start": "3089520",
    "end": "3095079"
  },
  {
    "text": "configure everything so that's also something that you have to take into consideration um of course the",
    "start": "3095079",
    "end": "3102280"
  },
  {
    "text": "experience with kubernetes and what's going on there because you still need to know what's going on there um maybe you",
    "start": "3102280",
    "end": "3108680"
  },
  {
    "text": "have don't even have nonfunctional requirements because it is pretty cool if you can do zero dtime deployments but",
    "start": "3108680",
    "end": "3115880"
  },
  {
    "text": "if your C customers are accustomed to doing a release every Sunday and they're fine with it and they don't want to pay",
    "start": "3115880",
    "end": "3122440"
  },
  {
    "text": "anymore leave it it's fine it's only when you need these nonf functionals",
    "start": "3122440",
    "end": "3127839"
  },
  {
    "text": "then you need to look into this because it could help you to solve those issues um and finally if you have deployment",
    "start": "3127839",
    "end": "3135319"
  },
  {
    "text": "issues so if you don't have any issues and everything works fine and everything is is happy then don't introduce a",
    "start": "3135319",
    "end": "3140960"
  },
  {
    "text": "service Mash because it will only add certain complexity so um treat it as a tool and not as a a piece of",
    "start": "3140960",
    "end": "3148599"
  },
  {
    "text": "candy um also when you start working with a service mesh really thoroughly",
    "start": "3148599",
    "end": "3154640"
  },
  {
    "text": "document uh uh go to the documentation most of the service meshes have pretty good documentation which will show you",
    "start": "3154640",
    "end": "3161200"
  },
  {
    "text": "what's happening under the covers it will show you best practices what to do what not to do so make sure that you if",
    "start": "3161200",
    "end": "3167200"
  },
  {
    "text": "you choose eventually to use a service mesh read the documentation thoroughly because that will help you in the end",
    "start": "3167200",
    "end": "3173960"
  },
  {
    "text": "and it will show you all the it will shield for all the uh the uh the errors that others have",
    "start": "3173960",
    "end": "3180440"
  },
  {
    "text": "made um like I said this whole side car thing is something that people have complained about because obviously",
    "start": "3180440",
    "end": "3187520"
  },
  {
    "text": "having a sidecar always introduces performance overhead it can be very",
    "start": "3187520",
    "end": "3193319"
  },
  {
    "text": "small right because it's running in the same part on a kubernetes cluster so it will not be milliseconds but if raw",
    "start": "3193319",
    "end": "3200040"
  },
  {
    "text": "performance is something that you need if you're building some kind of a algorithmic trading application and you",
    "start": "3200040",
    "end": "3205079"
  },
  {
    "text": "need all the performance you can get then maybe using a service message not for you and you should solve it",
    "start": "3205079",
    "end": "3211640"
  },
  {
    "text": "somewhere else in your code or on another level um well to um overcome",
    "start": "3211640",
    "end": "3217480"
  },
  {
    "text": "this performance impact that is one of the reasons um this whole ambient mesh thing is around and most of the serice",
    "start": "3217480",
    "end": "3224280"
  },
  {
    "text": "meshes are looking into this so if you're interested in this and you want to have the least amount of overhead",
    "start": "3224280",
    "end": "3230400"
  },
  {
    "text": "then look at ambient mesh mode but that said ambient mesh doesn't have all the",
    "start": "3230400",
    "end": "3235839"
  },
  {
    "text": "features that you get from a sidecar deployment so it is a trade-off that you have to uh",
    "start": "3235839",
    "end": "3242000"
  },
  {
    "text": "investigate um and last but not least I've shown you stto stto is pretty cool linkerd is also pretty cool um I've",
    "start": "3242000",
    "end": "3249640"
  },
  {
    "text": "added in the um in the repository I'm going to show you there's also linkerd file so you can use that um so shop",
    "start": "3249640",
    "end": "3257839"
  },
  {
    "text": "around see what's out there but make sure that you know your requirements and then look at what is the best",
    "start": "3257839",
    "end": "3263240"
  },
  {
    "text": "implementation for you uh and also take into consideration what kind of project it is is it fully open source is it",
    "start": "3263240",
    "end": "3270520"
  },
  {
    "text": "backed by a large company and what is the customer that you're using it for um what do they want is it okay to use open",
    "start": "3270520",
    "end": "3277440"
  },
  {
    "text": "source is it not what is the policy there so make sure that you take that into",
    "start": "3277440",
    "end": "3282880"
  },
  {
    "text": "consideration okay um going to leave you with these two links if you want if you",
    "start": "3282880",
    "end": "3288000"
  },
  {
    "text": "go to .io you can get all kinds of information you can get the documentation of stto and if you scan",
    "start": "3288000",
    "end": "3294880"
  },
  {
    "text": "the QR code of your or you go to this link this is the pit stop application and within the pit stop application",
    "start": "3294880",
    "end": "3301079"
  },
  {
    "text": "there's a Wiki that you can check and there's a complete description on how to run this in kubernetes with um with esto",
    "start": "3301079",
    "end": "3309000"
  },
  {
    "text": "and all the files that I just showed you are in there so you can get a start from that okay",
    "start": "3309000",
    "end": "3316839"
  },
  {
    "text": "um thank you so much and enjoy the rest of the conference I have some time for questions so if anyone has a question",
    "start": "3316839",
    "end": "3322960"
  },
  {
    "text": "then I can do that but if not thank you so much and uh and enjoy",
    "start": "3322960",
    "end": "3329319"
  }
]