[
  {
    "start": "0",
    "end": "100000"
  },
  {
    "text": "so it looks like there's about a hundred percent more people here than I was expecting",
    "start": "4360",
    "end": "9520"
  },
  {
    "text": "just Troy huntin in the other room anyway stay here now you're here you're",
    "start": "9520",
    "end": "15940"
  },
  {
    "text": "not allowed to leave we're going to lock the door so my name is Andy Davies I work for a small financial smallish",
    "start": "15940",
    "end": "23500"
  },
  {
    "text": "financial company in Finland and while we make a service that my team cares a",
    "start": "23500",
    "end": "29680"
  },
  {
    "text": "lot about I don't mind the product it doesn't fascinate me if it doesn't I",
    "start": "29680",
    "end": "35230"
  },
  {
    "text": "don't dislike it what I like doing is making other developers lives easier and twelve factor market services is a way",
    "start": "35230",
    "end": "42580"
  },
  {
    "text": "that I can help them do that because they don't have to think so much about how the logs get into the right place",
    "start": "42580",
    "end": "49420"
  },
  {
    "text": "whereas the monitoring what library should have I installed I've forgotten to add this bit of runtime configuration",
    "start": "49420",
    "end": "55059"
  },
  {
    "text": "that only shows up in production so the 12 factor services help standardize the",
    "start": "55059",
    "end": "61600"
  },
  {
    "text": "way you develop applications doesn't have to be micro services but obviously",
    "start": "61600",
    "end": "67060"
  },
  {
    "text": "what we're going to be talking about and it aims to make it more consistent portable like Windows Linux that kind of",
    "start": "67060",
    "end": "74380"
  },
  {
    "text": "thing scalable and decorative there are some trade-offs and I don't agree with all of",
    "start": "74380",
    "end": "80230"
  },
  {
    "text": "the points in the 12 factor and I will point out which ones I don't like yeah",
    "start": "80230",
    "end": "86470"
  },
  {
    "text": "and they were originally written by Heroku for deploying applications to their platforms of service but they've",
    "start": "86470",
    "end": "94240"
  },
  {
    "text": "opened them to everyone and good guidelines in general that being said",
    "start": "94240",
    "end": "99330"
  },
  {
    "text": "the first one is the code base you should have one code base tracked in",
    "start": "99330",
    "end": "104890"
  },
  {
    "start": "100000",
    "end": "100000"
  },
  {
    "text": "revision control and many deploys now this means a one-to-one mapping with a",
    "start": "104890",
    "end": "110979"
  },
  {
    "text": "repository to an application lets you answer questions fairly quickly as well",
    "start": "110979",
    "end": "116470"
  },
  {
    "text": "where's the web URL it's in the repository called web UI rather than you know in a folder called documentation in",
    "start": "116470",
    "end": "122380"
  },
  {
    "text": "the utilities repository which is on a different account for reasons so you're going to try and remove some friction by",
    "start": "122380",
    "end": "128830"
  },
  {
    "text": "naming things and putting them in the right place but a lot of time people",
    "start": "128830",
    "end": "134200"
  },
  {
    "text": "want to put multiple applications in the same repository if you've got multiple applications in",
    "start": "134200",
    "end": "139450"
  },
  {
    "text": "the same repository each application itself could be a 12 factor application but what you've got in your repository",
    "start": "139450",
    "end": "144790"
  },
  {
    "text": "as a system not an application where this really comes into effect is a lot",
    "start": "144790",
    "end": "151000"
  },
  {
    "text": "of people online recently have been going on about these three companies who use mono repos and they're very big and",
    "start": "151000",
    "end": "158200"
  },
  {
    "text": "successful companies but they're using a mono repo so we should - which is a terrible way of doing things anyway but",
    "start": "158200",
    "end": "165900"
  },
  {
    "text": "you're not Microsoft scale or Google scale at a guess and we certainly aren't also at",
    "start": "165900",
    "end": "173739"
  },
  {
    "text": "least two of these companies have written file systems to get around the fact they have a mono repo now I don't",
    "start": "173739",
    "end": "179500"
  },
  {
    "text": "know about you but I really don't want to justify to a project manager that I need to write a file system because not",
    "start": "179500",
    "end": "185290"
  },
  {
    "text": "only would that take a long time I would fail and I could be develop delivering",
    "start": "185290",
    "end": "190300"
  },
  {
    "text": "business value instead so if you're going to be writing a file system perhaps you're solving the wrong problem",
    "start": "190300",
    "end": "196350"
  },
  {
    "text": "unless you've got a very good reason like the windows codebase for instance",
    "start": "196350",
    "end": "201840"
  },
  {
    "text": "the count point of this is that companies which are doing micro services and who write about it don't use mono",
    "start": "201840",
    "end": "209500"
  },
  {
    "text": "repos for the most part and Riot Games in specific in particular they write a",
    "start": "209500",
    "end": "217120"
  },
  {
    "text": "lot about how they do their engineering how they do their deployments so the engineering blog is a fascinating read I",
    "start": "217120",
    "end": "222700"
  },
  {
    "text": "highly recommend it but I think we need a more concrete example of me just",
    "start": "222700",
    "end": "227860"
  },
  {
    "text": "Wittering about repositories so if we have the stereotypical complicated",
    "start": "227860",
    "end": "232989"
  },
  {
    "text": "application it has some kind of cue we're gonna read things off the cue transform them to have some kind of HTTP",
    "start": "232989",
    "end": "239860"
  },
  {
    "text": "API to read them out of the datastore and some kind of background process which we'll be doing or probably",
    "start": "239860",
    "end": "246040"
  },
  {
    "text": "cleaning things up for gdpr compliance now if you're doing this like in 12",
    "start": "246040",
    "end": "252400"
  },
  {
    "text": "factor and reading it very much as one application per repository you can end",
    "start": "252400",
    "end": "257890"
  },
  {
    "text": "up with three repositories or consumer an API in a background but the problem",
    "start": "257890",
    "end": "264789"
  },
  {
    "text": "with this is these three things are going to share some stuff I mean they're all going to be writing",
    "start": "264789",
    "end": "271010"
  },
  {
    "text": "to the same database so there's probably some kind of models that they need to know they need to but it would be useful",
    "start": "271010",
    "end": "277700"
  },
  {
    "text": "to share between them what about acceptance testing you know if you want to write a test that says",
    "start": "277700",
    "end": "283250"
  },
  {
    "text": "given an event it should get consumed correctly then it should appear on the API and eventually get scrubbed up by",
    "start": "283250",
    "end": "288770"
  },
  {
    "text": "the background process where do you put those and also what about any infrastructure code that you've got so",
    "start": "288770",
    "end": "295880"
  },
  {
    "text": "if you're using terraform to spin up the actual database cluster that needs to go",
    "start": "295880",
    "end": "300950"
  },
  {
    "text": "somewhere as well so you could have a fourth repository of like stuff which",
    "start": "300950",
    "end": "308720"
  },
  {
    "text": "then becomes a dumping ground and and that doesn't feel right",
    "start": "308720",
    "end": "314770"
  },
  {
    "text": "so what I do in this case is just put it all in one repository so I've got a Mont",
    "start": "314770",
    "end": "320270"
  },
  {
    "text": "a mini mono repo rather than I have many mono repo so it's fine so we have a",
    "start": "320270",
    "end": "325310"
  },
  {
    "text": "source directory which has got our three main projects in it we've also gained a tests directory and a common directory",
    "start": "325310",
    "end": "331900"
  },
  {
    "text": "there's also a directory for infrastructure stuff which has got terraform scripts in in this case and then we've got some build publish and a",
    "start": "331900",
    "end": "340490"
  },
  {
    "text": "solution file in the route we've now got somewhere to stick all of our shared code dependencies if we've got some and",
    "start": "340490",
    "end": "346550"
  },
  {
    "text": "places to put our acceptance tests we've also contained what makes the services",
    "start": "346550",
    "end": "351770"
  },
  {
    "text": "boundary into one repository because this is one piece of functionality so",
    "start": "351770",
    "end": "357140"
  },
  {
    "text": "it's in one place just because there's several processes that make up this functionality doesn't mean that they",
    "start": "357140",
    "end": "362720"
  },
  {
    "text": "should be separate repositories it is a trade off with all these different things as it always is but we'll build",
    "start": "362720",
    "end": "370729"
  },
  {
    "text": "on this as we go through so the next factor is dependencies you should",
    "start": "370729",
    "end": "378080"
  },
  {
    "start": "374000",
    "end": "374000"
  },
  {
    "text": "explicitly declare an isolate them this one's nice and easy basically means don't use the GAC but no one wants to",
    "start": "378080",
    "end": "384620"
  },
  {
    "text": "anyway use an you get you're just you're making your dependencies decorative you",
    "start": "384620",
    "end": "391789"
  },
  {
    "text": "say I want this version of this package and it arrived you shouldn't be relying",
    "start": "391789",
    "end": "397159"
  },
  {
    "text": "on those packages to be there on the target machine",
    "start": "397159",
    "end": "402190"
  },
  {
    "text": "so it should be part of your build process to pull the packages in at one time and then deploy that one unit this",
    "start": "402190",
    "end": "408310"
  },
  {
    "text": "means not say copying your node.js application up to a server and then just running npm install and npm run and",
    "start": "408310",
    "end": "414430"
  },
  {
    "text": "hoping it works which it won't but this",
    "start": "414430",
    "end": "419560"
  },
  {
    "text": "goes further than you get packages it also means you shouldn't be using system",
    "start": "419560",
    "end": "425470"
  },
  {
    "text": "utilities this is a pretty terrible example but if you wanted to call out to",
    "start": "425470",
    "end": "431650"
  },
  {
    "text": "diggin and find some service by querying DNS you shouldn't just be calling dick",
    "start": "431650",
    "end": "436810"
  },
  {
    "text": "because how do you know that's available on the system that your application has been deployed to and if your block",
    "start": "436810",
    "end": "443560"
  },
  {
    "text": "deploying to Linux it's probably there if you're Doug blowing to Windows it almost certainly isn't I mean it isn't",
    "start": "443560",
    "end": "449590"
  },
  {
    "text": "my laptop but I'm a developer not a not only a container host you also end up",
    "start": "449590",
    "end": "457480"
  },
  {
    "text": "with the the problem of if you are deploying to say an alpine Linux container and that's got one version of",
    "start": "457480",
    "end": "464440"
  },
  {
    "text": "take on it but then someone else deploys it into an a buncha based container",
    "start": "464440",
    "end": "469450"
  },
  {
    "text": "that's got a different version of dig which has a slightly different output and now you've got to try and pass two outputs and you don't know which ones",
    "start": "469450",
    "end": "475240"
  },
  {
    "text": "which the way you get around this is just to package up the other utility",
    "start": "475240",
    "end": "481000"
  },
  {
    "text": "with your application deploy a copy of dig with your application if you need it or try not to",
    "start": "481000",
    "end": "487960"
  },
  {
    "text": "use something like this there's bound to be a new gate library further accessing DNS instead but by isolating that dig or",
    "start": "487960",
    "end": "497230"
  },
  {
    "text": "curl or whatever other dependencies you've got so specific known versions you now don't have to code around the",
    "start": "497230",
    "end": "503470"
  },
  {
    "text": "fact of your outputs might be different or or the it doesn't even exist it's",
    "start": "503470",
    "end": "511210"
  },
  {
    "text": "only a little thing I mean we don't often need to call out to system utilities but be careful if you have to",
    "start": "511210",
    "end": "520200"
  },
  {
    "start": "521000",
    "end": "521000"
  },
  {
    "text": "this is where I find it starts to get more interesting partially because I disagree with a lot of this",
    "start": "521320",
    "end": "528450"
  },
  {
    "text": "so the third tour factor says that your configuration should be stored in the environment and only in the environment",
    "start": "528450",
    "end": "536700"
  },
  {
    "text": "but if we're doing don''t applications we use the web config files or app config soar the don't echo uses a JSON",
    "start": "536700",
    "end": "545170"
  },
  {
    "text": "file you shouldn't be doing that according to these you need to read from environment variables now this is very",
    "start": "545170",
    "end": "551290"
  },
  {
    "text": "easy in donut go if you making a nice peanut core application you've already got the first two packages installed you",
    "start": "551290",
    "end": "558250"
  },
  {
    "text": "just add the third package and then add this line where's my pointer I'm not",
    "start": "558250",
    "end": "566620"
  },
  {
    "text": "very good at this AB this line which just says read from the environment variables with the prefix also note that",
    "start": "566620",
    "end": "572680"
  },
  {
    "text": "I'm using the configure services method to build a strongly typed configuration",
    "start": "572680",
    "end": "578290"
  },
  {
    "text": "object because and not using the configure app configuration method this",
    "start": "578290",
    "end": "584110"
  },
  {
    "text": "is because I do not like the AI configuration interface flowing around through code because you just access",
    "start": "584110",
    "end": "590050"
  },
  {
    "text": "properties by string names through that and now you've got binding issues happening later you try and access a",
    "start": "590050",
    "end": "595480"
  },
  {
    "text": "property by string name it may or may not be there not very good I'd rather get the binding error let's start up",
    "start": "595480",
    "end": "601320"
  },
  {
    "text": "this configure you know if you've got a property that's typed as a URL and you try and load something that's not a URL",
    "start": "601320",
    "end": "607600"
  },
  {
    "text": "own to it I'd rather the application failed to start then suddenly not work later when a bit of functionality is",
    "start": "607600",
    "end": "613810"
  },
  {
    "text": "called and our actual configuration in",
    "start": "613810",
    "end": "622840"
  },
  {
    "text": "this case just has a database connection string a database name rabbit and queue",
    "start": "622840",
    "end": "628360"
  },
  {
    "text": "host and a username and password now can anyone see any problems with the",
    "start": "628360",
    "end": "633970"
  },
  {
    "text": "configuration that's come from the environment with this and the clue is",
    "start": "633970",
    "end": "640140"
  },
  {
    "text": "don't store sensitive data in your environment just don't don't do it API",
    "start": "640140",
    "end": "646300"
  },
  {
    "text": "keys connection strings use gnomes and passwords these should not be in environment variables now when Heroku were doing the twelve",
    "start": "646300",
    "end": "654110"
  },
  {
    "text": "I think when you read an environment variable from the haricot application you're probably accessing some actual",
    "start": "654110",
    "end": "661430"
  },
  {
    "text": "key value store that's doing secure storage at a guess this is all speculation for they don't know for sure",
    "start": "661430",
    "end": "667190"
  },
  {
    "text": "rather than real environment variables because otherwise depending on how they host your application you might end up",
    "start": "667190",
    "end": "672590"
  },
  {
    "text": "reading someone else's environment variables which would probably not be good there's also if you have all the",
    "start": "672590",
    "end": "679910"
  },
  {
    "text": "data in environment variables it kind of implies that they're not being centrally managed and if you need to suddenly",
    "start": "679910",
    "end": "685490"
  },
  {
    "text": "revoke say an API key because it's been leaked you now have to find all the containers they've got it set as an",
    "start": "685490",
    "end": "691580"
  },
  {
    "text": "environment variable somewhere and change it and restart them so things",
    "start": "691580",
    "end": "697220"
  },
  {
    "text": "like connection strings it should be stored in console if you've not heard of",
    "start": "697220",
    "end": "702290"
  },
  {
    "text": "console it's a service discovery tool by Hoshi cope does a lots of other things as well such as service health checking",
    "start": "702290",
    "end": "708590"
  },
  {
    "text": "and also has a key value store but it's not secure storage",
    "start": "708590",
    "end": "713950"
  },
  {
    "text": "luckily actually can't make another tool and I think quite a lot of the talks in DC this year have mentioned vault and",
    "start": "713950",
    "end": "721130"
  },
  {
    "text": "console vault does secure credential storage and builds on top of console in",
    "start": "721130",
    "end": "726920"
  },
  {
    "text": "that you can store the actual values in encrypted format in console but you",
    "start": "726920",
    "end": "732320"
  },
  {
    "text": "access them to revolt which lets us do interesting things like only generating",
    "start": "732320",
    "end": "738680"
  },
  {
    "text": "a username and password for the database when you need one so rather than having a fixed connection string vault has a",
    "start": "738680",
    "end": "744920"
  },
  {
    "text": "connection to the database that lets it create new users and when your application needs to connect it asks",
    "start": "744920",
    "end": "751130"
  },
  {
    "text": "volt it VOC generates a username and password you then connect to the database to your stuff and then that",
    "start": "751130",
    "end": "757910"
  },
  {
    "text": "expires after a short amount of time to actually read your configuration out of",
    "start": "757910",
    "end": "763430"
  },
  {
    "text": "these we had one NuGet package which annoyingly has the console name at the",
    "start": "763430",
    "end": "768860"
  },
  {
    "text": "front I wanted to call it Microsoft extensions our configuration console because everything else is but Microsoft",
    "start": "768860",
    "end": "775430"
  },
  {
    "text": "is a protected prefix on NuGet so I couldn't but again all you need to do is",
    "start": "775430",
    "end": "781550"
  },
  {
    "text": "add one line add console and a prefix and now your application will try and",
    "start": "781550",
    "end": "787940"
  },
  {
    "text": "populate from both the environment variables and from console and then when",
    "start": "787940",
    "end": "793250"
  },
  {
    "text": "you actually want a database connection string then you go to volt and ask for it you could read it on startup but you",
    "start": "793250",
    "end": "800150"
  },
  {
    "text": "start getting into the interesting thing of volt is hosted somewhere so you need to connect your string to volt which",
    "start": "800150",
    "end": "805580"
  },
  {
    "text": "means you need to read from console to find out where volt is but you can't do both of those in the startup because when they're read from volt or if you",
    "start": "805580",
    "end": "813110"
  },
  {
    "text": "did an ad volt in this it would need to know where console was but it can't",
    "start": "813110",
    "end": "818210"
  },
  {
    "text": "access the console settings until the objects there so yeah it's a bit awkward but talking of connection trinks the",
    "start": "818210",
    "end": "830390"
  },
  {
    "start": "829000",
    "end": "829000"
  },
  {
    "text": "next point is that all you're backing services should be treated as attached resources now this made no sense to me",
    "start": "830390",
    "end": "836720"
  },
  {
    "text": "when they read it the first time what's an attached resource a backing service I understand that's another server cycle",
    "start": "836720",
    "end": "842570"
  },
  {
    "text": "but what what it means is anything that goes over a network boundary should be treated the same so if we have an",
    "start": "842570",
    "end": "850820"
  },
  {
    "text": "example of my cool applications in a container it's using console which is technically over as Network boundary but",
    "start": "850820",
    "end": "857450"
  },
  {
    "text": "it's talking to an instance on localhost so kind of doesn't count and then it has",
    "start": "857450",
    "end": "863060"
  },
  {
    "text": "connection strings to kafka Postgres and Twilio now Kafka and Postgres is",
    "start": "863060",
    "end": "868880"
  },
  {
    "text": "something that's going to be run by us probably it could be in a docker",
    "start": "868880",
    "end": "874850"
  },
  {
    "text": "container somewhere could be on me see two instances or it could be in Amazon's",
    "start": "874850",
    "end": "879950"
  },
  {
    "text": "RDS service but it's only a collection tree we don't know where it is we just",
    "start": "879950",
    "end": "886490"
  },
  {
    "text": "know that we have a connector string now if we wanted to move Postgres we could",
    "start": "886490",
    "end": "893120"
  },
  {
    "text": "move it to and then how you actually go about moving it is definitely the subject for another talk but let's say you spin up another instance of Postgres",
    "start": "893120",
    "end": "899540"
  },
  {
    "text": "because you've noticed that your database is beginning to die for storage reasons so you spin up a new instance",
    "start": "899540",
    "end": "904850"
  },
  {
    "text": "and you want to change where this application is looking for its Postgres",
    "start": "904850",
    "end": "909860"
  },
  {
    "text": "instance and all you need to do is change a configuration string and restart the service you don't have to",
    "start": "909860",
    "end": "917000"
  },
  {
    "text": "login and to the server and do anything you have to change the application and redeploy it so it should be a runtime",
    "start": "917000",
    "end": "925040"
  },
  {
    "text": "configuration to change your database this doesn't mean you can change your database in Postgres to sequel like by",
    "start": "925040",
    "end": "931280"
  },
  {
    "text": "just changing the connection string and no matter what anyone tells you about RMS you can't do that it doesn't work",
    "start": "931280",
    "end": "937360"
  },
  {
    "text": "there's completely different guarantees on on safety and transactions and yeah",
    "start": "937360",
    "end": "944410"
  },
  {
    "text": "but it also affects liked well ago we don't control Twilio I have no idea",
    "start": "944410",
    "end": "951110"
  },
  {
    "text": "where it is it's just as just a URL at this point but I could replace it with",
    "start": "951110",
    "end": "956120"
  },
  {
    "text": "something that looked like Twilio so for local testing I could have a I don't know one of those recording and replay",
    "start": "956120",
    "end": "962690"
  },
  {
    "text": "HTTP frameworks so you know if you're testing locally you probably don't want to be sending real text messages to",
    "start": "962690",
    "end": "968000"
  },
  {
    "text": "people but again it comes down to just a connector string so we're treating these",
    "start": "968000",
    "end": "973910"
  },
  {
    "text": "things as all the same a backing service can also be another one of your services",
    "start": "973910",
    "end": "981340"
  },
  {
    "text": "so in this case I've just got three third-party services but it could be",
    "start": "981340",
    "end": "986720"
  },
  {
    "text": "another one of your applications to",
    "start": "986720",
    "end": "990100"
  },
  {
    "text": "actually deploy and run your applications we need to have completely",
    "start": "992080",
    "end": "998660"
  },
  {
    "start": "993000",
    "end": "993000"
  },
  {
    "text": "separate build and run stages this goes back a bit to what I was saying earlier about not just copying your git",
    "start": "998660",
    "end": "1004750"
  },
  {
    "text": "repository of your NPM and p.m. your node application onto a server and running NPM install because well you",
    "start": "1004750",
    "end": "1012160"
  },
  {
    "text": "only have to go onto their bug tracker to see how much fun that causes so no",
    "start": "1012160",
    "end": "1017380"
  },
  {
    "text": "modifying things in production and you shouldn't need to recompile your application to deploy it to a new",
    "start": "1017380",
    "end": "1023440"
  },
  {
    "text": "environment so if we have our master",
    "start": "1023440",
    "end": "1029709"
  },
  {
    "text": "branch and because we're cool young developers with we're doing trial based development which doesn't mean no",
    "start": "1029709",
    "end": "1036760"
  },
  {
    "text": "branches it just means shorter branches so we create a feature branch we do a couple of commits to it and we open a",
    "start": "1036760",
    "end": "1043839"
  },
  {
    "text": "pull request the pull request automatically triggers a build which is",
    "start": "1043839",
    "end": "1049030"
  },
  {
    "text": "going to run the build script which is contained within the repository so it shouldn't matter what your build",
    "start": "1049030",
    "end": "1055180"
  },
  {
    "text": "server is as long as it can execute a bash grip in my case the bash script",
    "start": "1055180",
    "end": "1060610"
  },
  {
    "text": "looks something like this it's a bit trim down but say here we grab the mode",
    "start": "1060610",
    "end": "1066700"
  },
  {
    "text": "off the command line so it'll default to debug if you don't feel anything in it so the build machine obviously built in",
    "start": "1066700",
    "end": "1071710"
  },
  {
    "text": "release mode we find the name of the solution file build the thing find all",
    "start": "1071710",
    "end": "1076780"
  },
  {
    "text": "the test projects run all the tests then we publish to a known location and you'll see I'm publishing in Linux 64",
    "start": "1076780",
    "end": "1084190"
  },
  {
    "text": "mode as well and then we find all docker files in the repository and run a subscript which deals with dr. so we're",
    "start": "1084190",
    "end": "1092230"
  },
  {
    "text": "going to generate a docker container for each one you could also do things like baking a mais or generating new gates if",
    "start": "1092230",
    "end": "1098200"
  },
  {
    "text": "you're deploying with say octopus assuming your pull request is accepted",
    "start": "1098200",
    "end": "1105430"
  },
  {
    "text": "and you murdered to master the masterbuilt will then run this runs the exact same build script but then follows",
    "start": "1105430",
    "end": "1112510"
  },
  {
    "text": "it on by running the release script or publish it really should be called bit me the publish script just finds all the",
    "start": "1112510",
    "end": "1121990"
  },
  {
    "text": "docker files again and this time runs a docker publish which does something",
    "start": "1121990",
    "end": "1129010"
  },
  {
    "text": "similar to this find the latest version of the dock of I'll tag it with the",
    "start": "1129010",
    "end": "1134610"
  },
  {
    "text": "repository you want to push it to and then push it to that repository I do not understand why I need to tag a docker",
    "start": "1134610",
    "end": "1140290"
  },
  {
    "text": "file with the repository it's going to go to if I'm dengan to write docker push and the name of the repository makes no",
    "start": "1140290",
    "end": "1145630"
  },
  {
    "text": "sense to me but that's how it works so my publish step is completely",
    "start": "1145630",
    "end": "1150820"
  },
  {
    "text": "separate developers can run the build step on their local machine and get the same output as the build machine will",
    "start": "1150820",
    "end": "1156910"
  },
  {
    "text": "get if they run the publish it'll fail because they don't have the API key which is obviously taken through vault",
    "start": "1156910",
    "end": "1164940"
  },
  {
    "text": "we push our artifacts up to our container repository and at this point",
    "start": "1165000",
    "end": "1172050"
  },
  {
    "text": "something happens to make it go into say your test environment what that",
    "start": "1172050",
    "end": "1177850"
  },
  {
    "text": "something is you could probably fill a conference with",
    "start": "1177850",
    "end": "1183210"
  },
  {
    "text": "there are so many different ways to deploy in different ways I tried to come up with a generic way of saying then you",
    "start": "1183210",
    "end": "1189120"
  },
  {
    "text": "run this command and everything's happy but depending on what your cloud is how you're running on Tanners or if you're not using containers there's just too",
    "start": "1189120",
    "end": "1195600"
  },
  {
    "text": "many options in my case I tend to use terraform and just update a load",
    "start": "1195600",
    "end": "1201990"
  },
  {
    "text": "balancer to say use this new ami ID because I tend to use mis rather than doc of the Dennison and then I just kill",
    "start": "1201990",
    "end": "1209010"
  },
  {
    "text": "can't kill containers at random until then if the new one is up and running",
    "start": "1209010",
    "end": "1215240"
  },
  {
    "text": "but then when we want to push it into new environments we effectively run that",
    "start": "1215240",
    "end": "1221399"
  },
  {
    "text": "same piece of deployment script again but giving the new environment name so we're not regenerating the containers or",
    "start": "1221399",
    "end": "1227130"
  },
  {
    "text": "anything we're just changing the tag against them to say this is now also used in QA this is now also used in prod",
    "start": "1227130",
    "end": "1234529"
  },
  {
    "text": "because we're using console and volts to get our credentials of things we have no configuration to change between the",
    "start": "1234529",
    "end": "1241140"
  },
  {
    "text": "environments everything this environment specific is stored in the environments be that in environment variables console",
    "start": "1241140",
    "end": "1248100"
  },
  {
    "text": "or volt so our containers of event essentially very done on a local machine",
    "start": "1248100",
    "end": "1253679"
  },
  {
    "text": "you can run the local instance of console which just points it say a docker eyes direction of Postgres and",
    "start": "1253679",
    "end": "1261080"
  },
  {
    "text": "you don't have to change any kind of configuration then so this is just another thing that's trash trying to",
    "start": "1261080",
    "end": "1267330"
  },
  {
    "text": "remove a little bit of friction from a developer's life they can run the application locally then it will",
    "start": "1267330",
    "end": "1272549"
  },
  {
    "text": "probably work in the other environments now going back to our repository",
    "start": "1272549",
    "end": "1279419"
  },
  {
    "text": "structure from earlier we should execute the appers one or more stateless",
    "start": "1279419",
    "end": "1285330"
  },
  {
    "start": "1282000",
    "end": "1282000"
  },
  {
    "text": "protocol get away with putting three separate services in one repository because they",
    "start": "1285330",
    "end": "1292260"
  },
  {
    "text": "are separate stateless processes now what it means by stateless is that you",
    "start": "1292260",
    "end": "1300450"
  },
  {
    "text": "shouldn't be relying on requests that have previously happened to do the current request now when you need to",
    "start": "1300450",
    "end": "1308580"
  },
  {
    "text": "store something you're allowed to push it to a further backing stateless a backing service which can do",
    "start": "1308580",
    "end": "1313799"
  },
  {
    "text": "statefulness eventually you'll get down to a database something that actually is stateful but most of your services should be",
    "start": "1313799",
    "end": "1320309"
  },
  {
    "text": "stateless you are allowed to use memory",
    "start": "1320309",
    "end": "1325620"
  },
  {
    "text": "or disk but only for the duration of one operation so if you're handling many API",
    "start": "1325620",
    "end": "1331320"
  },
  {
    "text": "requests you can't write a file to disk in one API request and then expect it to be there on the next API request because",
    "start": "1331320",
    "end": "1336720"
  },
  {
    "text": "you might have multiple copies of the process so it's not on the same machine so the file isn't there that's where you",
    "start": "1336720",
    "end": "1342809"
  },
  {
    "text": "should go to a backing service excuse me",
    "start": "1342809",
    "end": "1349280"
  },
  {
    "text": "the interesting point comes with this is when you want to think about caching because we all end up putting caches in",
    "start": "1349280",
    "end": "1358169"
  },
  {
    "start": "1352000",
    "end": "1352000"
  },
  {
    "text": "various places but if you can't you reuse memory or disk between requests",
    "start": "1358169",
    "end": "1363330"
  },
  {
    "text": "how do you even catch something it's not that I mean if you're running many copies of container you're probably",
    "start": "1363330",
    "end": "1369690"
  },
  {
    "text": "going to have low cache hit rates anyway because the likelihood of a request hitting the same container is quite low",
    "start": "1369690",
    "end": "1376799"
  },
  {
    "text": "I do however do some caching but it's",
    "start": "1376799",
    "end": "1381900"
  },
  {
    "text": "always really small something that will just improve speed slightly it doesn't have to be there if I get a cache hit",
    "start": "1381900",
    "end": "1388620"
  },
  {
    "text": "great if I don't doesn't matter if you're doing something like consuming",
    "start": "1388620",
    "end": "1394200"
  },
  {
    "text": "off a Kafka topic maybe your topic could be what's the word the topic segments I",
    "start": "1394200",
    "end": "1401700"
  },
  {
    "text": "think that's the wrong word but I can't think what it is at the moment you could have each consumer subscribed to a",
    "start": "1401700",
    "end": "1407190"
  },
  {
    "text": "segment in a certain width the segment set up so that you would kind of improve",
    "start": "1407190",
    "end": "1413850"
  },
  {
    "text": "the likelihood of cache hits so it is possible but you tend to want to push",
    "start": "1413850",
    "end": "1420840"
  },
  {
    "text": "caching in front of you further away so you could have a caching service but it shouldn't be one of yours because by",
    "start": "1420840",
    "end": "1427320"
  },
  {
    "text": "definition it's not twelve factor say caching is a weird one much more",
    "start": "1427320",
    "end": "1434130"
  },
  {
    "text": "interesting is port bindings now exposing services for port binding means",
    "start": "1434130",
    "end": "1440700"
  },
  {
    "text": "that you should be hosting the HTTP server you shouldn't be using is or",
    "start": "1440700",
    "end": "1446280"
  },
  {
    "text": "anything else and this is not just for HTTP but it is the most common use case could also be XMPP or Kafka but you",
    "start": "1446280",
    "end": "1454499"
  },
  {
    "text": "shouldn't be using is now before Donna caught this was a pain because you were generally hosted by is and is gives you",
    "start": "1454499",
    "end": "1461909"
  },
  {
    "text": "loads of fun things XML configuration complexity killing app pulls at random",
    "start": "1461909",
    "end": "1468809"
  },
  {
    "text": "which is my favorite and SSL termination now one of these four things is",
    "start": "1468809",
    "end": "1475200"
  },
  {
    "text": "something that I like I don't want to have to deal with SSL termination however if I can get rid of XML",
    "start": "1475200",
    "end": "1480840"
  },
  {
    "text": "complexity and killing apples great I did try once to do SSL myself with an",
    "start": "1480840",
    "end": "1490379"
  },
  {
    "text": "application that was using owen in host self hosting and that was a pain nearly",
    "start": "1490379",
    "end": "1497429"
  },
  {
    "text": "as much pain as configuring is because you have to use an SSH and bind the",
    "start": "1497429",
    "end": "1502559"
  },
  {
    "text": "certificate to the application in the right location and to the port and then when you deploy a new version something's locked and everything fails",
    "start": "1502559",
    "end": "1509330"
  },
  {
    "text": "but if I learn about a certain feature of is we could have just had it configured as a reverse proxy now",
    "start": "1509330",
    "end": "1517259"
  },
  {
    "text": "reverse proxying in is is possible but if you google for it you'll have lots of pages which show you lots of screenshots",
    "start": "1517259",
    "end": "1522809"
  },
  {
    "text": "of where to click and that annoys me because I want a script to do it I don't want to click anything but if you do do",
    "start": "1522809",
    "end": "1530519"
  },
  {
    "text": "enough searching you'll eventually come across a guide on how to do it using nginx most interestingly the guide is",
    "start": "1530519",
    "end": "1537090"
  },
  {
    "text": "written by Microsoft and it says you know you can configure a web server to do SSL termination for you such as is",
    "start": "1537090",
    "end": "1544320"
  },
  {
    "text": "apache or nginx the guide will be an engine x because that's the easiest so I like the fact they're throwing shader is",
    "start": "1544320",
    "end": "1550230"
  },
  {
    "text": "as yeah so to do this within with nginx",
    "start": "1550230",
    "end": "1556080"
  },
  {
    "text": "is really simple for included most of the important bits of this your application listens to HTTP on a fairly",
    "start": "1556080",
    "end": "1563879"
  },
  {
    "text": "high support number whatever you want done it called default stuff 5000 nginx",
    "start": "1563879",
    "end": "1571679"
  },
  {
    "text": "oh and also your application only lists on localhost you can't listen on a public interface",
    "start": "1571679",
    "end": "1578029"
  },
  {
    "text": "nginx in your container listens on port 443 on the pub",
    "start": "1578029",
    "end": "1584440"
  },
  {
    "text": "interphase and effectively we'll just Ford all the requests after doing SSL submission to your application so we",
    "start": "1584440",
    "end": "1592750"
  },
  {
    "text": "modify our startup to for support number you don't have to I said it defaults to five thousands you could just assume one",
    "start": "1592750",
    "end": "1600490"
  },
  {
    "text": "thing to note is if you're doing service discovery don't publish this URL into console because you'll be scratching",
    "start": "1600490",
    "end": "1606610"
  },
  {
    "text": "your head for hours trying to work out why this code works on your machine but doesn't work when you promote it into a production environment because you're",
    "start": "1606610",
    "end": "1613450"
  },
  {
    "text": "publishing my service is available at localhost one two three four which is a different localhost of the thing trying",
    "start": "1613450",
    "end": "1619330"
  },
  {
    "text": "to access it say it don't publish this URL you want",
    "start": "1619330",
    "end": "1625630"
  },
  {
    "text": "to publish this URL at the top so this is an NGO next configuration file there",
    "start": "1625630",
    "end": "1631540"
  },
  {
    "text": "is a lot more that I've dropped out of this the URL at the bottom which I will show later on the end slide has the full",
    "start": "1631540",
    "end": "1638530"
  },
  {
    "text": "guide that Microsoft have written essentially this sets up listening on 443 and all interfaces we've named the",
    "start": "1638530",
    "end": "1645970"
  },
  {
    "text": "server example comm because that's a great server and we have a certificate set up so that we can do SSL termination",
    "start": "1645970",
    "end": "1652540"
  },
  {
    "text": "the important part is the last three lines last four lines technically anything under the location and slash",
    "start": "1652540",
    "end": "1659590"
  },
  {
    "text": "pass it through to local whole local host port one two three four and that's",
    "start": "1659590",
    "end": "1665110"
  },
  {
    "text": "it your application work can be serving under HTTP now you can bake this into",
    "start": "1665110",
    "end": "1671200"
  },
  {
    "text": "your into your docker container so when you're setting up docker containers I tend to have like the basic container",
    "start": "1671200",
    "end": "1676990"
  },
  {
    "text": "and then we have a services one which has got an instance of console configured on it and it's got nginx set",
    "start": "1676990",
    "end": "1682870"
  },
  {
    "text": "up ready to work so all you have to do is deploy your application and start listening on one two three four the only",
    "start": "1682870",
    "end": "1689860"
  },
  {
    "text": "problem with this is if your application needs to do anything with authorization",
    "start": "1689860",
    "end": "1696300"
  },
  {
    "text": "because the dotnet framework is reasonably clever in this in that if it",
    "start": "1696300",
    "end": "1702100"
  },
  {
    "text": "detects you're trying to do secure things and you're operating on HTTP not HTTP it won't let you do it and of",
    "start": "1702100",
    "end": "1710110"
  },
  {
    "text": "course if you're being posted stop that if you're doing this as far as",
    "start": "1710110",
    "end": "1717150"
  },
  {
    "text": "your application can tell it's on HTTP not HTTP so every time you try and",
    "start": "1717150",
    "end": "1722310"
  },
  {
    "text": "authenticate things will fail because is that you're you're not you're not running on a secure scheme then we're not gonna let you send passwords which",
    "start": "1722310",
    "end": "1728970"
  },
  {
    "text": "is good so we can get round this with the Microsoft asp net core HTTP overrides package you install this",
    "start": "1728970",
    "end": "1736350"
  },
  {
    "text": "and add we have these three lines nginx",
    "start": "1736350",
    "end": "1744510"
  },
  {
    "text": "will add as will others proxy headers so it'll tell you what the scheme was that",
    "start": "1744510",
    "end": "1749610"
  },
  {
    "text": "the request came in what the original IP address was and what the original host",
    "start": "1749610",
    "end": "1755460"
  },
  {
    "text": "was as well by adding this middleware when a request comes in with these",
    "start": "1755460",
    "end": "1761160"
  },
  {
    "text": "headers the middleware will rewrite the HTTP context object to have the same",
    "start": "1761160",
    "end": "1766740"
  },
  {
    "text": "scheme as this header and the host and the remote IP address so your application now thinks it's running on",
    "start": "1766740",
    "end": "1771810"
  },
  {
    "text": "HTTP so your authentication works again and I I'm sure I would have eventually",
    "start": "1771810",
    "end": "1778200"
  },
  {
    "text": "managed to solve this myself but probably not very quickly and there's a Microsoft package to do it because they",
    "start": "1778200",
    "end": "1783960"
  },
  {
    "text": "realize that if they're trying to promote you into using reverse proxies you should probably also make authentication work the other piece of",
    "start": "1783960",
    "end": "1792060"
  },
  {
    "text": "going through this middleware is it should be one of the very first ones you add just after you're debugging one and",
    "start": "1792060",
    "end": "1797160"
  },
  {
    "text": "before the authentication call if you add it after your vindication call when you're debugging it'll look like it",
    "start": "1797160",
    "end": "1802380"
  },
  {
    "text": "should work but it won't which is great fun now for actual deployment or",
    "start": "1802380",
    "end": "1808680"
  },
  {
    "text": "applications I tend to have hypocrisy running in front I assume that's how you pronounce her",
    "start": "1808680",
    "end": "1814830"
  },
  {
    "text": "proxy I don't know I've only recently started calling nginx nginx I always",
    "start": "1814830",
    "end": "1820440"
  },
  {
    "text": "call it endings because yeah but I don't apparentiy I'm wrong so anyway I have",
    "start": "1820440",
    "end": "1826050"
  },
  {
    "text": "her proxy running in front this is publicly facing and that's sending my all my requests to my application this",
    "start": "1826050",
    "end": "1833310"
  },
  {
    "text": "lets me do another fun thing which is to have different SSL certificates for internal and external so the public",
    "start": "1833310",
    "end": "1839880"
  },
  {
    "text": "facing has one SSL certificate a proxy does termination and then it starts a new SSL connection to everything inside",
    "start": "1839880",
    "end": "1845610"
  },
  {
    "text": "my network I Karim my this is a good thing but I've been told it is a good thing to do so I",
    "start": "1845610",
    "end": "1851010"
  },
  {
    "text": "do it and it's easy to set up but as we're software developers we tend to",
    "start": "1851010",
    "end": "1856769"
  },
  {
    "text": "like doing this kind of thing and we we're writing applications and we write a blog post about our new JavaScript",
    "start": "1856769",
    "end": "1863190"
  },
  {
    "text": "front-end framework and we post our blog posts to hacker news and read it and",
    "start": "1863190",
    "end": "1868500"
  },
  {
    "text": "suddenly the whole internet arrived because for five minutes we're the latest JavaScript framework in five",
    "start": "1868500",
    "end": "1874679"
  },
  {
    "text": "minutes time it won't matter because there'll be another six but we need to",
    "start": "1874679",
    "end": "1880529"
  },
  {
    "text": "deal with this spike of traffic and our one little application is probably not",
    "start": "1880529",
    "end": "1885630"
  },
  {
    "text": "going to manage it her proxy will be fine with it it's designed to do this but our little applications probably not",
    "start": "1885630",
    "end": "1891029"
  },
  {
    "text": "so much especially if it's in a little docker container so how do you handle concurrency in tour factor says that you",
    "start": "1891029",
    "end": "1899250"
  },
  {
    "start": "1895000",
    "end": "1895000"
  },
  {
    "text": "should scale out via the process model this essentially means when a big amount of work comes in run more which is great",
    "start": "1899250",
    "end": "1909830"
  },
  {
    "text": "but you have to be careful because a 1-12 factor application should be share",
    "start": "1909830",
    "end": "1915120"
  },
  {
    "text": "nothing so you shouldn't be sharing any kind of disks or state or anything memory or CPU so usually this would be",
    "start": "1915120",
    "end": "1924029"
  },
  {
    "text": "in kubernetes or many Amazon ec2 instances so hopefully it's distributed load everywhere but if you have a load",
    "start": "1924029",
    "end": "1931380"
  },
  {
    "text": "balancer and it scales up lots of these applications this is only the first tier of applications you've probably got some",
    "start": "1931380",
    "end": "1938250"
  },
  {
    "text": "backing services I hope those scale up as well because otherwise you've got one backing service which is suddenly being hit by 40 of",
    "start": "1938250",
    "end": "1944190"
  },
  {
    "text": "your service and now your denial of servicing yourself so yeah scale out by",
    "start": "1944190",
    "end": "1950010"
  },
  {
    "text": "the process model but be careful of downstream effects because they also need to scale or put queues in place",
    "start": "1950010",
    "end": "1955889"
  },
  {
    "text": "lots of cute but when you're scaling applications you have to be careful",
    "start": "1955889",
    "end": "1962010"
  },
  {
    "text": "about the next factor as well which is disposability you should be maximizing",
    "start": "1962010",
    "end": "1967380"
  },
  {
    "start": "1964000",
    "end": "1964000"
  },
  {
    "text": "robustness with faster startup and graceful shutdown in other words the quicker you can handle and stop handling",
    "start": "1967380",
    "end": "1973500"
  },
  {
    "text": "requests the better if we have this little graph with orange being our",
    "start": "1973500",
    "end": "1979260"
  },
  {
    "text": "littles like from reddit and it takes a long time for our containers to start up by",
    "start": "1979260",
    "end": "1985100"
  },
  {
    "text": "the time the spike has finished and has started to tail off we've only just started up our containers so we can't",
    "start": "1985100",
    "end": "1990960"
  },
  {
    "text": "deal with the load very quickly also if it takes a long time for the container",
    "start": "1990960",
    "end": "1995970"
  },
  {
    "text": "to shut down then we're effectively paying money for wasted resource because",
    "start": "1995970",
    "end": "2002740"
  },
  {
    "text": "you've got you're now consuming more CPUs so at some point it's costing so",
    "start": "2002740",
    "end": "2009350"
  },
  {
    "text": "you should shut down quicker also if you're starting up and shutting down",
    "start": "2009350",
    "end": "2014929"
  },
  {
    "text": "faster it means your service has less downtime if you're needing to change a configuration file or a configuration",
    "start": "2014929",
    "end": "2021380"
  },
  {
    "text": "values err which involves restarting the service it takes 10 minutes to restart then you've got a time when you're at",
    "start": "2021380",
    "end": "2027470"
  },
  {
    "text": "least one service down and if another one dies then maybe you haven't got any running and then if it takes a long time",
    "start": "2027470",
    "end": "2033260"
  },
  {
    "text": "to start up well you're still not serving requests it also states the",
    "start": "2033260",
    "end": "2038510"
  },
  {
    "text": "sudden shutdown should not cause data loss now there was an interesting story",
    "start": "2038510",
    "end": "2044150"
  },
  {
    "text": "I read about this couple of years ago which means I cannot find the link to it all the blogpost and I might have",
    "start": "2044150",
    "end": "2049970"
  },
  {
    "text": "imagined it I hope I didn't but it was a company that had a desktop application and this thing had a horrible memory",
    "start": "2049970",
    "end": "2057800"
  },
  {
    "text": "error which would cause it to die randomly a lot and it really annoyed the",
    "start": "2057800",
    "end": "2063378"
  },
  {
    "text": "users because obviously the applications shut down but they lost all the progress of whatever it was they were doing now",
    "start": "2063379",
    "end": "2070628"
  },
  {
    "text": "well it is they went in and wrote a lot of things to disk so that as they were doing the operation if the application",
    "start": "2070629",
    "end": "2077270"
  },
  {
    "text": "crashed it could just resume from where it left off and this is great I mean it solved the problem in a way that was",
    "start": "2077270",
    "end": "2084260"
  },
  {
    "text": "easier for them to manage but an interesting side effect of this was that the graceful shutdown for this",
    "start": "2084260",
    "end": "2090260"
  },
  {
    "text": "application took quite a long time and after a while some others why are we even bothering to do a graceful shutdown",
    "start": "2090260",
    "end": "2096169"
  },
  {
    "text": "if we can resume from an application crash with no data loss let's not gracefully shutdown let's just",
    "start": "2096169",
    "end": "2103609"
  },
  {
    "text": "terminate the application it'll just resume it'll be fine so they removed their graceful shutdown",
    "start": "2103609",
    "end": "2109160"
  },
  {
    "text": "and just went yeah terminate now oh by the way status code was success so good a good exit and they spent their",
    "start": "2109160",
    "end": "2117240"
  },
  {
    "text": "application up I'm not saying you should be trying to do this I mean fix the memory issue but graceful shutdowns in",
    "start": "2117240",
    "end": "2125310"
  },
  {
    "text": "the case of a micro service should mean stop handling new requests finish the",
    "start": "2125310",
    "end": "2130800"
  },
  {
    "text": "existing ones then switch off they shouldn't cause data loss because you",
    "start": "2130800",
    "end": "2136109"
  },
  {
    "text": "know hopefully it's each request is fairly small but yeah if you can make",
    "start": "2136109",
    "end": "2141119"
  },
  {
    "text": "things resumes but you can't because you're not allowed to write a disk yep our next point on the 12 factor is",
    "start": "2141119",
    "end": "2151310"
  },
  {
    "start": "2148000",
    "end": "2148000"
  },
  {
    "text": "development and productive productivity development and production with parity",
    "start": "2151310",
    "end": "2157670"
  },
  {
    "text": "all your environments should be the same as the as possible now the first part of",
    "start": "2157670",
    "end": "2164070"
  },
  {
    "text": "this is the obvious one its infrastructure each environment should be roughly the same maybe your",
    "start": "2164070",
    "end": "2170160"
  },
  {
    "text": "production environment has a lot more resource than your development environment but your test environment",
    "start": "2170160",
    "end": "2175500"
  },
  {
    "text": "should probably have at least some things so if you're running ten",
    "start": "2175500",
    "end": "2182099"
  },
  {
    "text": "instances of your application in production behind a load balancer and you're only running one instance in tests with no load balancer that's not",
    "start": "2182099",
    "end": "2188880"
  },
  {
    "text": "the same one instance with a load balancer that just sends everything that's better so you should try and keep things very",
    "start": "2188880",
    "end": "2195540"
  },
  {
    "text": "much similar so you know how things are going to work because a low balance of not being there might break in between",
    "start": "2195540",
    "end": "2202260"
  },
  {
    "text": "the in between the environments especially if you've got differing certificates to manage this we go on to",
    "start": "2202260",
    "end": "2209430"
  },
  {
    "start": "2209000",
    "end": "2209000"
  },
  {
    "text": "our next hash AKOP tool now I'd like to point out I'm not paid by Hoshi copter advertise their products I just like",
    "start": "2209430",
    "end": "2215310"
  },
  {
    "text": "them a lot but if they wish to pay me so",
    "start": "2215310",
    "end": "2220920"
  },
  {
    "text": "terrified terraform is for decorative infrastructure as an example we write",
    "start": "2220920",
    "end": "2227550"
  },
  {
    "text": "something like this it's Jason ish format this here says we want a Amazon",
    "start": "2227550",
    "end": "2233609"
  },
  {
    "text": "database instance locally like within the file it's going to be known as the storage one because I'm great at naming",
    "start": "2233609",
    "end": "2240089"
  },
  {
    "text": "things and it's going to be Postgres because that's the best database",
    "start": "2240089",
    "end": "2245580"
  },
  {
    "text": "and we're gonna use a teaching microbe because I'm stingy and don't want to pay for things the username and password in",
    "start": "2245580",
    "end": "2252240"
  },
  {
    "text": "this case are going to be pulled off the command line which is gonna come from vault because I don't want to use names",
    "start": "2252240",
    "end": "2258270"
  },
  {
    "text": "of passwords anyway now if we run this with no infrastructure in place this",
    "start": "2258270",
    "end": "2263880"
  },
  {
    "text": "will cause a database to be created if we run it with the database in place",
    "start": "2263880",
    "end": "2269010"
  },
  {
    "text": "already nothing will happen if we run it and someone has logged into the Edda breast console and tweaked the settings",
    "start": "2269010",
    "end": "2275280"
  },
  {
    "text": "because they wanted to have more disk space for whatever reason this will undo that change as it should do don't tweak",
    "start": "2275280",
    "end": "2281670"
  },
  {
    "text": "settings in the console change the config file and redeploy because now when we run this in every environment we",
    "start": "2281670",
    "end": "2288540"
  },
  {
    "text": "end up with exactly the same in each environment we can tweak certain things such as number of CPUs available amount",
    "start": "2288540",
    "end": "2296250"
  },
  {
    "text": "of storage on a per environment basis now I mentioned earlier about trying to",
    "start": "2296250",
    "end": "2304200"
  },
  {
    "text": "deploy applications and this is one way of deploying a docker container so this",
    "start": "2304200",
    "end": "2311970"
  },
  {
    "text": "would be our build server running this script it the first block is a resource",
    "start": "2311970",
    "end": "2317760"
  },
  {
    "text": "so this I've gotten the wrong word there it should be a data source this should",
    "start": "2317760",
    "end": "2324390"
  },
  {
    "text": "look up our existing ecs cluster because this will be managed by some other script so we'll have terraform scripts",
    "start": "2324390",
    "end": "2330870"
  },
  {
    "text": "in our repository which just deal with what what is needed by this application",
    "start": "2330870",
    "end": "2335990"
  },
  {
    "text": "but there'll be other scripts and things running to setup VP C's and security",
    "start": "2335990",
    "end": "2341070"
  },
  {
    "text": "groups on a higher level stuff that our application doesn't care about such as such that needs to function so in this",
    "start": "2341070",
    "end": "2348150"
  },
  {
    "text": "case we're going to look up a cluster it's gonna be called main because good naming again and we're gonna create a",
    "start": "2348150",
    "end": "2356610"
  },
  {
    "text": "task definition it's using Amazon's Fargate thing which means that I don't",
    "start": "2356610",
    "end": "2362070"
  },
  {
    "text": "have to think about ec2 hosts which makes me happier because that's less infrastructure to think about and each",
    "start": "2362070",
    "end": "2370080"
  },
  {
    "text": "one of these containers is going to be given one CPU and 256 micro memory",
    "start": "2370080",
    "end": "2375830"
  },
  {
    "text": "and it's going to be running one container which is going to come from",
    "start": "2375830",
    "end": "2380960"
  },
  {
    "text": "the app image on the command line so this is the same ID that our build",
    "start": "2380960",
    "end": "2386030"
  },
  {
    "text": "server would have passed through to publish the container so we can now use that same version finally we're going to",
    "start": "2386030",
    "end": "2392540"
  },
  {
    "text": "update the easiest service to use that task definition and push it into the",
    "start": "2392540",
    "end": "2398030"
  },
  {
    "text": "load balancer which is going to be listening or passing things through to 443 this is missing a lot of things to",
    "start": "2398030",
    "end": "2407900"
  },
  {
    "text": "make it work by the way I wouldn't recommend just copying this off the slide again there are some guides that",
    "start": "2407900",
    "end": "2414650"
  },
  {
    "text": "have a lot more information on how to do this I think I have a link to it at the end if not I will try and find it and",
    "start": "2414650",
    "end": "2419660"
  },
  {
    "text": "tweet it out later",
    "start": "2419660",
    "end": "2422319"
  },
  {
    "text": "so our environment which is tariffs or",
    "start": "2425380",
    "end": "2430700"
  },
  {
    "text": "managed looks like this this is our production version so we've had a",
    "start": "2430700",
    "end": "2435950"
  },
  {
    "text": "terraform script which probably set up Postgres for this kefka is probably not",
    "start": "2435950",
    "end": "2441830"
  },
  {
    "text": "our application concern and it'll have been looked up from somewhere Twilio is not something we can deploy so again our",
    "start": "2441830",
    "end": "2447590"
  },
  {
    "text": "script would not have anything to do with it but when you're developing locally you tend to not use quite the",
    "start": "2447590",
    "end": "2455630"
  },
  {
    "text": "same things as production so when we say development and production parity we",
    "start": "2455630",
    "end": "2461180"
  },
  {
    "text": "mean if I'm using production and we're using production in production using Postgres in production I should be using",
    "start": "2461180",
    "end": "2468470"
  },
  {
    "text": "Postgres when I developed locally should not be doing this because again as I",
    "start": "2468470",
    "end": "2474050"
  },
  {
    "text": "said your RM is not going to help with this it might work maybe a bit but it's",
    "start": "2474050",
    "end": "2479150"
  },
  {
    "text": "not worth trying I did have a previous slide that had Kafka switched out for rabbitmq because you know they're both",
    "start": "2479150",
    "end": "2484310"
  },
  {
    "text": "kind of to do with queues but they're very not the same so our environments",
    "start": "2484310",
    "end": "2489620"
  },
  {
    "text": "not only should they be the same but they should be very much the same classes so you hit the problems of say",
    "start": "2489620",
    "end": "2496910"
  },
  {
    "text": "the gooood type not quite matching up like sequel Lite I don't think has a good type I think it's just a string",
    "start": "2496910",
    "end": "2502430"
  },
  {
    "text": "internally and you have to map it into good and how do you know if it's using big-endian or little-endian to store it",
    "start": "2502430",
    "end": "2507980"
  },
  {
    "text": "so hopefully it's the same style as post-crisis but it might not be so maybe your application will or won't work make sure they're the same but it's",
    "start": "2507980",
    "end": "2516650"
  },
  {
    "text": "not only that the application and its resources are the same in each environment it's that it should actually",
    "start": "2516650",
    "end": "2522290"
  },
  {
    "text": "be the same in all environments very quickly once you've pushed a branch in",
    "start": "2522290",
    "end": "2528290"
  },
  {
    "text": "to test once you've pushed a branch in",
    "start": "2528290",
    "end": "2533720"
  },
  {
    "text": "to test it should only take a few minutes to a couple of hours to get your artifact into production well this is",
    "start": "2533720",
    "end": "2541250"
  },
  {
    "text": "important because if you've got multiple developers developing on the same application and you're both pushing into",
    "start": "2541250",
    "end": "2547790"
  },
  {
    "text": "tests in QA one of you is going to end up overwriting the other ones changes if it takes a long time to get through the",
    "start": "2547790",
    "end": "2554450"
  },
  {
    "text": "environments someone else will come along and start pushing their stuff into tests and then it'll be fine there's no",
    "start": "2554450",
    "end": "2559490"
  },
  {
    "text": "merge conflicts because you've not merged yet and you're gonna end up with more merge conflicts and no one likes a merge conflict interestingly someone",
    "start": "2559490",
    "end": "2567349"
  },
  {
    "text": "told me that the collective term for a group of programmers is a merge conflict",
    "start": "2567349",
    "end": "2572740"
  },
  {
    "text": "it seems to work yeah um if you need to",
    "start": "2572800",
    "end": "2577910"
  },
  {
    "text": "sign off things so if you're writing a new feature that's going to be visible to the environment to the environment",
    "start": "2577910",
    "end": "2583309"
  },
  {
    "text": "visible in the production environment to people but it needs sign-off from a",
    "start": "2583309",
    "end": "2589220"
  },
  {
    "text": "business person to say yes this is fine I I want this to go into production you don't want to gate it behind it's in QA",
    "start": "2589220",
    "end": "2595670"
  },
  {
    "text": "but we can't push it into production yet for this kind of thing you want to use feature toggles it's outside the scope",
    "start": "2595670",
    "end": "2601880"
  },
  {
    "text": "of toy factory applications but I like feature toggles a lot but please make them short-lived because otherwise you'll have a lot of problems yeah I",
    "start": "2601880",
    "end": "2610040"
  },
  {
    "text": "have an entire talk about people who've messed up with digital Solaris so large TTLs",
    "start": "2610040",
    "end": "2615230"
  },
  {
    "text": "like Tonto lives a bad thing shorter ones better shorter ones smaller branches smaller branches are better",
    "start": "2615230",
    "end": "2621140"
  },
  {
    "text": "make things smaller yes",
    "start": "2621140",
    "end": "2627260"
  },
  {
    "start": "2626000",
    "end": "2626000"
  },
  {
    "text": "nearly done so the next part is logs now",
    "start": "2627260",
    "end": "2632760"
  },
  {
    "text": "treating logs event streams I when I first read this I didn't quite understand what the point was I mean",
    "start": "2632760",
    "end": "2638069"
  },
  {
    "text": "what else is a log file if not a stream of events I mean it eats a but the 12",
    "start": "2638069",
    "end": "2646020"
  },
  {
    "text": "factor application we're not allowed to rely on the disk being there so we can't write log files to disk so where are we",
    "start": "2646020",
    "end": "2651390"
  },
  {
    "text": "gonna put them how are we going to get them somewhere that we can manage especially if we've got a lot of",
    "start": "2651390",
    "end": "2659369"
  },
  {
    "text": "containers running how are we going to get all of our logs into one place cuz I don't want to have to try and find the",
    "start": "2659369",
    "end": "2665040"
  },
  {
    "text": "container in the cluster of other containers and then attach some kind of console to it and then run cat on the on",
    "start": "2665040",
    "end": "2671819"
  },
  {
    "text": "the log file and hope that it returns the right stuff and go through them we want to push them all to elasticsearch",
    "start": "2671819",
    "end": "2677280"
  },
  {
    "text": "or some other centralized logging system it doesn't really matter at this point",
    "start": "2677280",
    "end": "2682579"
  },
  {
    "text": "but how do we actually get them there but especially if we're not allowed to touch disks and we don't want developers",
    "start": "2682579",
    "end": "2687900"
  },
  {
    "text": "to think about this the answer is to use file beat and essentially logs - you",
    "start": "2687900",
    "end": "2694980"
  },
  {
    "text": "don't have to worry about the specific implementations of this but we use file",
    "start": "2694980",
    "end": "2700440"
  },
  {
    "text": "beat logs - elasticsearch and then eventually cabañas stuffed on the front so we can do graphing and look at things",
    "start": "2700440",
    "end": "2705990"
  },
  {
    "text": "easily but we want to get our output from our application into file beat",
    "start": "2705990",
    "end": "2711809"
  },
  {
    "text": "without touching the disk and as the name file beat has the word file in it doesn't seem like it'd be a great fit if",
    "start": "2711809",
    "end": "2719609"
  },
  {
    "text": "it turns out it's got a feature to handle this so in our startup we've",
    "start": "2719609",
    "end": "2727940"
  },
  {
    "text": "wiped out all of the logging that comes by default in the framework and replaced",
    "start": "2727940",
    "end": "2733319"
  },
  {
    "text": "it with Siri log and we've just got a single console output which is going to write Jason on a single line now if",
    "start": "2733319",
    "end": "2741030"
  },
  {
    "text": "you've not come across Siri log before its structured logging so rather than just being a rendered",
    "start": "2741030",
    "end": "2746369"
  },
  {
    "text": "string of a log entry it is a template and then a key value pairs of all the",
    "start": "2746369",
    "end": "2751980"
  },
  {
    "text": "values that go into it which means you can query on individual values it means that this is the kind of thing you'll",
    "start": "2751980",
    "end": "2758220"
  },
  {
    "text": "get on your output but compressed onto one line super readable now this has got all the",
    "start": "2758220",
    "end": "2764310"
  },
  {
    "text": "information for a request coming into our application now if that's all coming",
    "start": "2764310",
    "end": "2770280"
  },
  {
    "text": "on to one line it's not very useful to the developers we can solve that what we",
    "start": "2770280",
    "end": "2776190"
  },
  {
    "text": "need to do primarily is get this into file beat somehow now farby this is the",
    "start": "2776190",
    "end": "2782369"
  },
  {
    "text": "entire conflict you need to make this work this place it says read off the standard input add an extra Field called",
    "start": "2782369",
    "end": "2789720"
  },
  {
    "text": "environment which will read from the environment variables for a variable called environment which will default to",
    "start": "2789720",
    "end": "2796680"
  },
  {
    "text": "local if the environment variable called environment is not there I need to get the word environment in there more time",
    "start": "2796680",
    "end": "2802200"
  },
  {
    "text": "so they don't help but and then we will output it and write all the stuff to our logstash server which is running",
    "start": "2802200",
    "end": "2808020"
  },
  {
    "text": "somewhere else now to how to actually hook these two things up together the output of our console and the input of",
    "start": "2808020",
    "end": "2814619"
  },
  {
    "text": "our file beat thing it's very simple this is the running of the application",
    "start": "2814619",
    "end": "2821070"
  },
  {
    "text": "beforehand this is the running of it now just pipe the output Linux pipes",
    "start": "2821070",
    "end": "2827660"
  },
  {
    "text": "greatest invention ever I mean anyone can have that that's um that's like a",
    "start": "2827660",
    "end": "2834859"
  },
  {
    "text": "515 character change in your in your docker file starting application locally",
    "start": "2834859",
    "end": "2840450"
  },
  {
    "text": "you might want to use something else to render your application now Siri render is a project that I've written to do",
    "start": "2840450",
    "end": "2847050"
  },
  {
    "text": "this which I should probably have the source because it's kind of useful essentially this reads the log file off",
    "start": "2847050",
    "end": "2854040"
  },
  {
    "text": "the command line and then reprocesses it and outputs it as if your application was outputting nice log messages so it's",
    "start": "2854040",
    "end": "2861090"
  },
  {
    "text": "quite useful for local development but by doing this the actual dealing of log",
    "start": "2861090",
    "end": "2868260"
  },
  {
    "text": "files was just this and that's what one",
    "start": "2868260",
    "end": "2874410"
  },
  {
    "text": "two three four lines and you could get away with two lines I suppose if you made them really long but developers now",
    "start": "2874410",
    "end": "2883200"
  },
  {
    "text": "don't have to worry about running out of disk space because they've forgotten to add a retention policy to how often they",
    "start": "2883200",
    "end": "2889320"
  },
  {
    "text": "write to log files they don't have to worry about file permissions or what directory their log files should be",
    "start": "2889320",
    "end": "2894359"
  },
  {
    "text": "written - because far being needed somewhere to pick them from we've removed so much",
    "start": "2894359",
    "end": "2899489"
  },
  {
    "text": "little overhead from the process so as long as I write the long as I call log",
    "start": "2899489",
    "end": "2905200"
  },
  {
    "text": "doc right knocked up info whatever it'll come out into our log files so yeah",
    "start": "2905200",
    "end": "2911829"
  },
  {
    "text": "removing tiny bits of complexity and it means our application is now just just",
    "start": "2911829",
    "end": "2917859"
  },
  {
    "text": "what just the business part of it just the value it needs to provide it doesn't have all of the overhead of write to the",
    "start": "2917859",
    "end": "2924549"
  },
  {
    "text": "files check the file exists rotating the logs delete the old ones that doesn't need to be there so you're not going to",
    "start": "2924549",
    "end": "2930190"
  },
  {
    "text": "get random slowdowns in your application because it's suddenly trying to shift everything around on a disk because it's deleting a file so you've made your",
    "start": "2930190",
    "end": "2937989"
  },
  {
    "text": "applications slightly more stable the final piece of the 12 factor is the",
    "start": "2937989",
    "end": "2944739"
  },
  {
    "start": "2943000",
    "end": "2943000"
  },
  {
    "text": "admin processes run admin or management tasks as one-off processes and when I",
    "start": "2944739",
    "end": "2951759"
  },
  {
    "text": "read this I really a few times I what else would you do oh I couldn't think of",
    "start": "2951759",
    "end": "2959109"
  },
  {
    "text": "another another way of doing anything and then I thought well maybe they mean like when you had a monolithic",
    "start": "2959109",
    "end": "2964180"
  },
  {
    "text": "deployment of something and on startup it would migrate the database to the new version and then work but I can't",
    "start": "2964180",
    "end": "2971230"
  },
  {
    "text": "remember the last time someone tried to do that with a container because you'd start up several copies and they'd all try to migrate the database and I'm",
    "start": "2971230",
    "end": "2977230"
  },
  {
    "text": "imagining that wouldn't go well so what this is implying is that we should be",
    "start": "2977230",
    "end": "2982720"
  },
  {
    "text": "having a separate application for things like migrating databases doing administrative things but it should be",
    "start": "2982720",
    "end": "2990009"
  },
  {
    "text": "deployed with the main application so going back to our repository it would be another folder in there of just like",
    "start": "2990009",
    "end": "2996099"
  },
  {
    "text": "tasks it's my genius application which is called 12 because I'm very",
    "start": "2996099",
    "end": "3001619"
  },
  {
    "text": "imaginative we have 12 tasks now this is our command line which does the things",
    "start": "3001619",
    "end": "3006710"
  },
  {
    "text": "we can inspect stuff stored by the service we can migrate our database we",
    "start": "3006710",
    "end": "3011940"
  },
  {
    "text": "can do a gdpr thing because that's important these days like report on users or anonymize them anonymize the",
    "start": "3011940",
    "end": "3018089"
  },
  {
    "text": "users not anonymize the report and then we have a retention which just purges everything now the retention one could",
    "start": "3018089",
    "end": "3024900"
  },
  {
    "text": "also be used as the background job so you could just a cron job executing that that would be",
    "start": "3024900",
    "end": "3030089"
  },
  {
    "text": "valid to do but things like migrate the Postgres database where did that",
    "start": "3030089",
    "end": "3036660"
  },
  {
    "text": "connection string come from well console and it's using them password or that came from vault but on a slightly higher",
    "start": "3036660",
    "end": "3043109"
  },
  {
    "text": "permission and the normal application has what's the normal application doesn't need to be able to do schema migrations just needs to query and write",
    "start": "3043109",
    "end": "3049440"
  },
  {
    "text": "data but we're using the same configuration objects so all of the all",
    "start": "3049440",
    "end": "3058140"
  },
  {
    "text": "of the common properties are in sync with the main application you're not going to write here's my here's my tasks",
    "start": "3058140",
    "end": "3064559"
  },
  {
    "text": "application you run it and oh the scheme is not quite the same as the application expects because they're deployed together and here we have an example of",
    "start": "3064559",
    "end": "3075150"
  },
  {
    "text": "me migrating the database and we've got an optional parameters of force particular version this library for",
    "start": "3075150",
    "end": "3082980"
  },
  {
    "text": "doing this by the way is called Oakton if you've heard of storyteller or",
    "start": "3082980",
    "end": "3088950"
  },
  {
    "text": "structure map or Martin or Jasper all written by Jeremy Miller this is another one of his his tools and it obstructs",
    "start": "3088950",
    "end": "3096660"
  },
  {
    "text": "the console away from you having to handle it so we have an input object",
    "start": "3096660",
    "end": "3101789"
  },
  {
    "text": "here which is my migration input it's got a description and a version number and then we have a command handler for",
    "start": "3101789",
    "end": "3109710"
  },
  {
    "text": "it which has two usages one with the version and one without and then we have a single method where it actually",
    "start": "3109710",
    "end": "3116910"
  },
  {
    "text": "handles running the command you probably",
    "start": "3116910",
    "end": "3122130"
  },
  {
    "text": "actually have some values in there and return something useful but I couldn't fit anything more on the slide",
    "start": "3122130",
    "end": "3127859"
  },
  {
    "text": "I like Oakton because it makes your test",
    "start": "3127859",
    "end": "3132869"
  },
  {
    "text": "you the the actual tasks application very testable because I can pass in fake command inputs and test it on the test",
    "start": "3132869",
    "end": "3140489"
  },
  {
    "text": "that it actually works so we can do test-driven development on the Commandant I think there's a more to say",
    "start": "3140489",
    "end": "3149039"
  },
  {
    "text": "on that and that was everything that was the whole of our our 12 factors now",
    "start": "3149039",
    "end": "3155819"
  },
  {
    "text": "we've got some links on there the first link is not live yet but it will be soon Tsun has a little asterisk after it",
    "start": "3155819",
    "end": "3162320"
  },
  {
    "text": "it'll probably be about a week the second one is this presentation if you",
    "start": "3162320",
    "end": "3168500"
  },
  {
    "text": "hit the letter S when you view the website you'll get my speaker notes which will probably not be very happy helpful because they were short and then",
    "start": "3168500",
    "end": "3174800"
  },
  {
    "text": "we've got the official twelve factor documentation all of the Hashi core products which I'm not paid to sell but",
    "start": "3174800",
    "end": "3181730"
  },
  {
    "text": "you should use them and then the Microsoft guide on setting up nginx and using it as a reverse proxy so with that",
    "start": "3181730",
    "end": "3190100"
  },
  {
    "text": "I've got a few minutes two questions if anyone's got any thank you for attending",
    "start": "3190100",
    "end": "3195430"
  },
  {
    "text": "[Applause]",
    "start": "3195430",
    "end": "3201970"
  },
  {
    "text": "no question say if you've got any other questions come and grab me or send me a message on Twitter or something",
    "start": "3201970",
    "end": "3208780"
  }
]