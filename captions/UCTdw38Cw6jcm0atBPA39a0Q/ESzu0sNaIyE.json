[
  {
    "start": "0",
    "end": "110000"
  },
  {
    "text": "java 8 to 17 to see the progress of how java has delivered more security to the",
    "start": "8160",
    "end": "14480"
  },
  {
    "text": "core platform i i'm usually giving talks that are like about security controls",
    "start": "14480",
    "end": "19840"
  },
  {
    "text": "and how do you do this correct this is something you can read on a blog so i just want to be clear before you decide to stay",
    "start": "19840",
    "end": "26000"
  },
  {
    "text": "this is a pretty light talk just reviewing the again history yeah we're viewing the history of java security to",
    "start": "26000",
    "end": "33280"
  },
  {
    "text": "see how we get to today this is about the end of 2021 java 18 just came out",
    "start": "33280",
    "end": "38879"
  },
  {
    "text": "haven't even gotten the security analysis done it's it's so fresh just like a couple weeks ago or like a week",
    "start": "38879",
    "end": "44399"
  },
  {
    "text": "ago so we'll get up to version 17. the major changes in java happened around",
    "start": "44399",
    "end": "50640"
  },
  {
    "text": "java 8 9 10 and the the many versions that we see in the last couple of years",
    "start": "50640",
    "end": "56000"
  },
  {
    "text": "they're releasing java a lot more frequently with smaller enhancements so",
    "start": "56000",
    "end": "62079"
  },
  {
    "text": "it should be this should be a nice it's going to go over some crypto basically this should be a nice light talk my name",
    "start": "62079",
    "end": "67360"
  },
  {
    "text": "is jim um i'm honored to be a java champion oracle has a java champion program it's a cult",
    "start": "67360",
    "end": "73760"
  },
  {
    "text": "it's a total like weird cult let's be clear and you cannot ask to be in it",
    "start": "73760",
    "end": "79119"
  },
  {
    "text": "someone from the the cult the java champion group has to reach out and invite you in and you gotta like do",
    "start": "79119",
    "end": "86320"
  },
  {
    "text": "weird cult stuff to demonstrate that you are of value to the java champion community this is the weirdest group i",
    "start": "86320",
    "end": "93040"
  },
  {
    "text": "have ever been a part of and i am in it i am part of the weird now as well so like if i'm ever having a bad day or i",
    "start": "93040",
    "end": "99280"
  },
  {
    "text": "just feel like entertaining myself i just say something to the java champion group and everyone argues about it for three days it's so much fun",
    "start": "99280",
    "end": "105920"
  },
  {
    "text": "but uh anyways let's let's just move on let's let's move on all right",
    "start": "105920",
    "end": "111200"
  },
  {
    "start": "110000",
    "end": "230000"
  },
  {
    "text": "now i wanna i wanna start by saying that java does have a big open community as",
    "start": "111200",
    "end": "118560"
  },
  {
    "text": "part of the commercial activity that we see from oracle i i've been a java programmer for",
    "start": "118560",
    "end": "126640"
  },
  {
    "text": "wow about 23 years i started with java 1.0.2",
    "start": "126640",
    "end": "132239"
  },
  {
    "text": "back at the very beginning of the language and had been working with java my whole life and",
    "start": "132239",
    "end": "137280"
  },
  {
    "text": "i watched sun manage the java programming language for many years i worked for scott mcnealy um",
    "start": "137280",
    "end": "143520"
  },
  {
    "text": "personally as one of to do executive dashboards for scott and the executive team so i was i was at the heart of of",
    "start": "143520",
    "end": "150800"
  },
  {
    "text": "of of sun working with java for the executives of",
    "start": "150800",
    "end": "155840"
  },
  {
    "text": "sun and it's a very it's honorable honor to be there and sun did a real job",
    "start": "155840",
    "end": "160959"
  },
  {
    "text": "managing java really bad they did bad with security they rolled it out they did a lot of poor rollouts they took",
    "start": "160959",
    "end": "168160"
  },
  {
    "text": "care of their engineers they were great people they were very humanistic caring people that cared about their engineers",
    "start": "168160",
    "end": "175120"
  },
  {
    "text": "they didn't do a good job managing this project and then oracle bought sun now i got to be honest the oracle executives",
    "start": "175120",
    "end": "181120"
  },
  {
    "text": "are the opposite these are these are business people who want to make money and are a little less concerned about",
    "start": "181120",
    "end": "187040"
  },
  {
    "text": "the people that work for them in my opinion but you know what they their management of the java programming language is outstanding it",
    "start": "187040",
    "end": "194720"
  },
  {
    "text": "really is so it's kind of weird i just i just come to mind now but i wish sun took better care of java and",
    "start": "194720",
    "end": "201680"
  },
  {
    "text": "i was actually i was heartbroken when oracle bought sun ever we all were",
    "start": "201680",
    "end": "207040"
  },
  {
    "text": "because oracle has a bad reputation in the industry about everything they do sorry they just kind of do but and it is",
    "start": "207040",
    "end": "213280"
  },
  {
    "text": "to my amazement how much they've taken java seriously how much they've resourced the language how much they've",
    "start": "213280",
    "end": "220080"
  },
  {
    "text": "cared about security and supported the community not everyone in the java community will agree with me but",
    "start": "220080",
    "end": "227519"
  },
  {
    "text": "that's my perspective as we watch oracle fully take over the language the licensing fees are a bit more",
    "start": "227519",
    "end": "234080"
  },
  {
    "start": "230000",
    "end": "347000"
  },
  {
    "text": "expensive these days talk to talk to oracle so the point i'm trying to make though is",
    "start": "234080",
    "end": "239680"
  },
  {
    "text": "there's an open community around the java programming language and that's the jdk enhancement proposal process the jet",
    "start": "239680",
    "end": "247200"
  },
  {
    "text": "process and so a jep is how you propose a change to the java core ecosystem and",
    "start": "247200",
    "end": "256000"
  },
  {
    "text": "anyone anyone can submit a proposal to enhance the java language to affect",
    "start": "256000",
    "end": "261600"
  },
  {
    "text": "change and this takes a lot of work they're looking for very detailed academic proposals that explain how you",
    "start": "261600",
    "end": "268639"
  },
  {
    "text": "want to enhance the language and if you put the work in you're going to be listened to the best example of this are",
    "start": "268639",
    "end": "274960"
  },
  {
    "text": "these fine gentlemen mike ernst and bernadito so they built type annotations",
    "start": "274960",
    "end": "281440"
  },
  {
    "text": "who here is a java programmer who understands the java language so great so annotations are a real critical part",
    "start": "281440",
    "end": "287680"
  },
  {
    "text": "of the language from like java 7 and beyond i believe this is one of the one of the largest changes to the language",
    "start": "287680",
    "end": "294880"
  },
  {
    "text": "at that time and this is these are just two academics who wrote it themselves",
    "start": "294880",
    "end": "300240"
  },
  {
    "text": "and then decided to to build a jet proposal it got accepted it's now a core",
    "start": "300240",
    "end": "305919"
  },
  {
    "text": "part of the language for the history of java so i think unlike other language ecosystems",
    "start": "305919",
    "end": "312479"
  },
  {
    "text": "if you want to do the work and and you want to build a proper proposal the java community will accept",
    "start": "312479",
    "end": "319919"
  },
  {
    "text": "your enhancement proposals to change the core language i don't see that dynamic",
    "start": "319919",
    "end": "325120"
  },
  {
    "text": "in many other languages right we see a lot of like dick small groups or dictators who run a language this is an",
    "start": "325120",
    "end": "332240"
  },
  {
    "text": "open process a couple notes on crypto when we look at all the changes in java",
    "start": "332240",
    "end": "338479"
  },
  {
    "text": "it's mostly crypto based the kind of security enhancements we're going to review and just and a quick note is i",
    "start": "338479",
    "end": "345440"
  },
  {
    "text": "would never use low-level java crypto please don't use java crypto functions i",
    "start": "345440",
    "end": "350720"
  },
  {
    "start": "347000",
    "end": "695000"
  },
  {
    "text": "think you should be using google keys are sorry google tank is what i would use google tank is a java library that",
    "start": "350720",
    "end": "358880"
  },
  {
    "text": "makes it really hard to get crypto wrong it also integrates with key management",
    "start": "358880",
    "end": "363919"
  },
  {
    "text": "systems and so i i hate to recommend a google library",
    "start": "363919",
    "end": "369120"
  },
  {
    "text": "but in the java ecosystem there's dozens of crypto libraries that make the low",
    "start": "369120",
    "end": "374560"
  },
  {
    "text": "level crypto controls that we're going to go through easier to use and every one of those",
    "start": "374560",
    "end": "380400"
  },
  {
    "text": "libraries has major implementation flaws except for google tank this is built by",
    "start": "380400",
    "end": "385759"
  },
  {
    "text": "a team of phds it's well managed it's used at cash app it's used at google and",
    "start": "385759",
    "end": "392080"
  },
  {
    "text": "many other places where they've done mammoth analysis of the work of google",
    "start": "392080",
    "end": "397600"
  },
  {
    "text": "tank and they found it to be robust so i wouldn't i'm going to go over a lot of these but this is what you should use",
    "start": "397600",
    "end": "404400"
  },
  {
    "text": "underneath the hood of a library like google tink we'll look at that a little bit later",
    "start": "404400",
    "end": "410400"
  },
  {
    "text": "the other thing is is that they have a roadmap of their enhancements and they change this url on me like every couple",
    "start": "410400",
    "end": "417680"
  },
  {
    "text": "of months for fun let me see if it's actually live here i'm just curious so here we go the java cryptographic",
    "start": "417680",
    "end": "425199"
  },
  {
    "text": "roadmap yeah yeah except oh there we go last updated 2019 they",
    "start": "425199",
    "end": "431840"
  },
  {
    "text": "probably moved it somewhere else so yeah they they probably moved it and",
    "start": "431840",
    "end": "437440"
  },
  {
    "text": "they just stopped maintaining this page that that's just the glory of oracle let's just move on",
    "start": "437440",
    "end": "443360"
  },
  {
    "text": "so the the largest change to java security started happening in",
    "start": "443360",
    "end": "449360"
  },
  {
    "text": "java 8 where we begin our story and again we this is the first time java",
    "start": "449360",
    "end": "455280"
  },
  {
    "text": "fully supported what's known as nsa suite b cryptography for this era these",
    "start": "455280",
    "end": "461599"
  },
  {
    "text": "are a collection of encryption symmetric asymmetric and digital",
    "start": "461599",
    "end": "466720"
  },
  {
    "text": "signature algorithms that are best practiced for u.s systems forgive me i'm an american i have a u.s centric",
    "start": "466720",
    "end": "472720"
  },
  {
    "text": "perspective but nsa sweep b cryptography is a known pseudo standard across the",
    "start": "472720",
    "end": "479440"
  },
  {
    "text": "world of any applied cryptographer we also see for the first time around java 8",
    "start": "479440",
    "end": "484800"
  },
  {
    "text": "strong ephemeral cipher suites elliptical we see better support for random numbers the",
    "start": "484800",
    "end": "490560"
  },
  {
    "text": "whole random number generation was rewritten the new secure random class in this era and all the weak algorithms are",
    "start": "490560",
    "end": "498319"
  },
  {
    "text": "being deprecated by default so there's a one professional stuart marks for the in",
    "start": "498319",
    "end": "503360"
  },
  {
    "text": "the java ecosystem and his nickname is dr deprecator his main job is to remove",
    "start": "503360",
    "end": "509759"
  },
  {
    "text": "stuff from the language and this is important because the more you get rid of the little thing",
    "start": "509759",
    "end": "516800"
  },
  {
    "text": "the more you solve the small problems and get those out of the way the easier it's going to be to see and",
    "start": "516800",
    "end": "524240"
  },
  {
    "text": "solve the big problems that we have in the language so that's where we're going i'm going to talk a lot about crypto but",
    "start": "524240",
    "end": "530480"
  },
  {
    "text": "again google if you're a java developer i can't recommend it enough google tank",
    "start": "530480",
    "end": "537519"
  },
  {
    "text": "it is by far the best practice in applied crypto if you don't want to use a google product because they invade the",
    "start": "537519",
    "end": "544240"
  },
  {
    "text": "privacy of the world and monetize it sorry this is truth then you can also use another library that has a java",
    "start": "544240",
    "end": "550320"
  },
  {
    "text": "interface called lib sodium this is by dan bernstein university of chicago it's",
    "start": "550320",
    "end": "556240"
  },
  {
    "text": "a c-level library with java hooks that again makes it easy for you as a developer to get crypto right and in",
    "start": "556240",
    "end": "564399"
  },
  {
    "text": "this era of privacy and enhanced security and the need to do application",
    "start": "564399",
    "end": "569600"
  },
  {
    "text": "security correct you're going to be tasked to do crypto solutions more and more throughout your career so this is",
    "start": "569600",
    "end": "576320"
  },
  {
    "text": "important stuff so what else so yes please consider the",
    "start": "576320",
    "end": "581519"
  },
  {
    "text": "third party libraries of the world there's google kezar and google tink like they're sending teams of phds at",
    "start": "581519",
    "end": "589360"
  },
  {
    "text": "these difficult library problems and here's again lib sodium from dan bur dr",
    "start": "589360",
    "end": "594399"
  },
  {
    "text": "dan bernstein these are the best ways to do crypto now that aside let's go back to java let's take a look at",
    "start": "594399",
    "end": "601440"
  },
  {
    "text": "at where are we going to start here we're gonna we're gonna hop up to java nine i guess we're gonna start the story right java eight is where we see the",
    "start": "601440",
    "end": "608240"
  },
  {
    "text": "main crypto crypto changes begin and java nine now we're seeing major",
    "start": "608240",
    "end": "613760"
  },
  {
    "text": "implementation of new crypto era in this work the story here is about 2018 now we",
    "start": "613760",
    "end": "620480"
  },
  {
    "text": "see dtls why is dtls important because i'm a video gamer dtls is gonna",
    "start": "620480",
    "end": "627040"
  },
  {
    "text": "is gonna be is the basic network protocol for uh for",
    "start": "627040",
    "end": "632640"
  },
  {
    "text": "uh what a secret is communication like if i'm a gamer and i'm sending events and i'm getting back events",
    "start": "632640",
    "end": "638800"
  },
  {
    "text": "basic internet protocol is not that great so this is uh this is one of the main video gaming protocols and we also",
    "start": "638800",
    "end": "645600"
  },
  {
    "text": "see around around this time something called the protocol negotiation extension so i can have one main server",
    "start": "645600",
    "end": "652800"
  },
  {
    "text": "with one set of certificates to host many many different sites i also see",
    "start": "652800",
    "end": "657839"
  },
  {
    "text": "ocsp stapling around this era end of 2018 or so where now if i want to revoke",
    "start": "657839",
    "end": "664240"
  },
  {
    "text": "a certificate that protocol is available the online certificate uh",
    "start": "664240",
    "end": "670000"
  },
  {
    "text": "stapling protocol we also see the beginning of sha-3 primitives now sha-3 is not available",
    "start": "670000",
    "end": "677120"
  },
  {
    "text": "yet in java 9. sha-3 is really important for digital signatures for cryptographic",
    "start": "677120",
    "end": "682160"
  },
  {
    "text": "primitives and for just the algorithm itself so it took many many versions of java to roll out sha-3 this is the",
    "start": "682160",
    "end": "689519"
  },
  {
    "text": "primitive first coming out in java 9 and we're disabling older algorithms",
    "start": "689519",
    "end": "695600"
  },
  {
    "start": "695000",
    "end": "857000"
  },
  {
    "text": "so let's look at jep29290 for a second around the same era",
    "start": "695600",
    "end": "700880"
  },
  {
    "text": "this is when deserialization was a really big problem in java in fact let's go back a few years if we look at",
    "start": "700880",
    "end": "708680"
  },
  {
    "text": "2016 this is where researcher alvaro munoz first declares that the entire java",
    "start": "708680",
    "end": "716160"
  },
  {
    "text": "ecosystem is vulnerable to a deserialization attack what is a deserialization attack you familiar with",
    "start": "716160",
    "end": "723120"
  },
  {
    "text": "this think of an ape real quick an api endpoint it's accepting binary data that",
    "start": "723120",
    "end": "729680"
  },
  {
    "text": "it converts into a running object this seems great but it's not it's the worst",
    "start": "729680",
    "end": "734800"
  },
  {
    "text": "thing you should you could do you should be using json for the most part as your data transport not raw binary objects",
    "start": "734800",
    "end": "743200"
  },
  {
    "text": "but back in the day when we're using",
    "start": "743200",
    "end": "747519"
  },
  {
    "text": "sorry where was i",
    "start": "751519",
    "end": "758720"
  },
  {
    "text": "the serialization so we really don't and we have protocols like rm older",
    "start": "758720",
    "end": "764720"
  },
  {
    "text": "protocols in the com world and microsoft and the rmi world when it comes to uh",
    "start": "764720",
    "end": "771279"
  },
  {
    "text": "the rmi world when it comes to java these are all raw binary object",
    "start": "771279",
    "end": "778160"
  },
  {
    "text": "protocols and the problem is i can take my raw binary modify the class in some way and when it",
    "start": "778160",
    "end": "785360"
  },
  {
    "text": "deserializes it deserializes into my code as the attacker on your server so",
    "start": "785360",
    "end": "792519"
  },
  {
    "text": "deserialization even though we've been doing it for many years around 2016 we realize this is a major problem it can",
    "start": "792519",
    "end": "799920"
  },
  {
    "text": "lead to rce remote code execution where i send a",
    "start": "799920",
    "end": "806560"
  },
  {
    "text": "malform piece of data up to your server it deserializes and my operating system",
    "start": "806560",
    "end": "812880"
  },
  {
    "text": "commands start running against your server it doesn't get any worse than this and early researchers talked about",
    "start": "812880",
    "end": "820000"
  },
  {
    "text": "this since 2011 but we had no real examples of it it was just a theory and",
    "start": "820000",
    "end": "826000"
  },
  {
    "text": "late 2016 we see that an actual collection",
    "start": "826000",
    "end": "831199"
  },
  {
    "text": "gadget within the java ecosystem is vulnerable and now all of java across",
    "start": "831199",
    "end": "836800"
  },
  {
    "text": "the whole world is vulnerable just like the log for j problem we just had we've had this problem in java many times",
    "start": "836800",
    "end": "843760"
  },
  {
    "text": "that's the problem of these giant solve every problem languages they're",
    "start": "843760",
    "end": "848880"
  },
  {
    "text": "it's hard to lock them down so one of the first big jeps we see is jep 290",
    "start": "848880",
    "end": "854720"
  },
  {
    "text": "let's go let's go let's go take a look at this let's go see what let's go let me check my date i think i'm getting my",
    "start": "854720",
    "end": "859760"
  },
  {
    "start": "857000",
    "end": "1270000"
  },
  {
    "text": "my date a little go back go back i want to see the date on this so this jep 290",
    "start": "859760",
    "end": "866800"
  },
  {
    "text": "is one of the mo when did this first come out yeah 2016 updated recently so i'm i'm i'm i'm a",
    "start": "866800",
    "end": "874639"
  },
  {
    "text": "little out of date it's released java 9. we're now at the 2016 era i'm going to catch up i will",
    "start": "874639",
    "end": "882399"
  },
  {
    "text": "and and jep 290 filter incoming serialization data shows up for the",
    "start": "882399",
    "end": "888000"
  },
  {
    "text": "first time i don't really like to use this because this means you're doing deserialization",
    "start": "888000",
    "end": "894240"
  },
  {
    "text": "but when it comes to security it's easy to say don't do this hey",
    "start": "894240",
    "end": "900000"
  },
  {
    "text": "developer don't do this i try to avoid that even better would be to say hey developer what you're doing is really",
    "start": "900000",
    "end": "906079"
  },
  {
    "text": "dangerous and here's the best way we know how to lock it down today to filter",
    "start": "906079",
    "end": "911680"
  },
  {
    "text": "incoming deserialization data this is the first major modern control that we",
    "start": "911680",
    "end": "916880"
  },
  {
    "text": "see in the java ecosystem in the last couple of years and if we look at researchers around this time robert c",
    "start": "916880",
    "end": "924079"
  },
  {
    "text": "cord was analyzing all the different attempts to fix this serialization problem and they were all incorrect",
    "start": "924079",
    "end": "932240"
  },
  {
    "text": "except for this filter that was that was rolled into java so you have these custom filters now where i can specify",
    "start": "932240",
    "end": "940240"
  },
  {
    "text": "what class is allowed to be deserialized again this is when you're sending raw",
    "start": "940240",
    "end": "945279"
  },
  {
    "text": "binary data to a java server and it converts it to a running object",
    "start": "945279",
    "end": "951120"
  },
  {
    "text": "this this is the filter you can use to limit that process this is fundamental",
    "start": "951120",
    "end": "956560"
  },
  {
    "text": "to java security i'm saying here that you may only deserialize the bicycle",
    "start": "956560",
    "end": "961759"
  },
  {
    "text": "class it may only be up to 78 bytes the the max array size is 10 and only one",
    "start": "961759",
    "end": "968240"
  },
  {
    "text": "reference and so now i if if the deserialization is anything other than",
    "start": "968240",
    "end": "973519"
  },
  {
    "text": "that particular limit it's going to fail this will stop a wide class of attacks",
    "start": "973519",
    "end": "979600"
  },
  {
    "text": "in this area so what else do we have here so here there's a couple ways to",
    "start": "979600",
    "end": "985759"
  },
  {
    "text": "implement it i can implement this on a class-by-class basis i can implement this on an entire system basis and what",
    "start": "985759",
    "end": "992880"
  },
  {
    "text": "we found out is that and it's being used by other systems with",
    "start": "992880",
    "end": "998079"
  },
  {
    "text": "by other subsystems in java what we found out though is there is no",
    "start": "998079",
    "end": "1003199"
  },
  {
    "text": "way to stop this problem with the best breed defense i have today i can stop",
    "start": "1003199",
    "end": "1009040"
  },
  {
    "text": "certain like attempts to crash my server but if you allow me to set up a hash",
    "start": "1009040",
    "end": "1016560"
  },
  {
    "text": "table and to serialize it all i have to do is add a java class a java binary",
    "start": "1016560",
    "end": "1023360"
  },
  {
    "text": "with the static block that instantiates the hash table and i'll just add two entries with the same key",
    "start": "1023360",
    "end": "1030400"
  },
  {
    "text": "can you have this two entries of the same key in a hash table no you may not and as soon as you do that the jvm is",
    "start": "1030400",
    "end": "1037520"
  },
  {
    "text": "like this is not possible to be in this state and the jvm will crash because typically",
    "start": "1037520",
    "end": "1044079"
  },
  {
    "text": "if i'm programmatically adding elements to a hash table the second time i add",
    "start": "1044079",
    "end": "1049919"
  },
  {
    "text": "the key it will overwrite or give me an exception but if i'm now sending binary that says",
    "start": "1049919",
    "end": "1056080"
  },
  {
    "text": "the hash table already has two keys during deserialization java says this is",
    "start": "1056080",
    "end": "1061919"
  },
  {
    "text": "not a possible state and the whole jvm seizes up so yeah just be aware that",
    "start": "1061919",
    "end": "1068080"
  },
  {
    "text": "even though this is available deserialization of raw binary data is an",
    "start": "1068080",
    "end": "1073760"
  },
  {
    "text": "inherently dangerous process that you should never do and there's so many attempts to make it",
    "start": "1073760",
    "end": "1080000"
  },
  {
    "text": "work and all of them that i know of are circumventable what we want to do instead is use json",
    "start": "1080000",
    "end": "1087440"
  },
  {
    "text": "i wouldn't even use xml anymore i've given up on xml years ago xml is vulnerable to",
    "start": "1087440",
    "end": "1093200"
  },
  {
    "text": "xml uh bomb attacks uh uh xx there's several variants of xxe",
    "start": "1093200",
    "end": "1100880"
  },
  {
    "text": "there's external entity references and there's the external entity expansion so",
    "start": "1100880",
    "end": "1106480"
  },
  {
    "text": "there's so many attacks against xml even though it's well locked down today i see",
    "start": "1106480",
    "end": "1112240"
  },
  {
    "text": "no reason to use it do you agree is anyone using xml for anything what anders what are you doing",
    "start": "1112240",
    "end": "1119280"
  },
  {
    "text": "oh you're using you're a saml guy oh boo get out get out get out get out of my class anders you and your saml can",
    "start": "1119280",
    "end": "1126160"
  },
  {
    "text": "leave no i'm kidding i'm kidding anders anders gave a talk on saml2 which uses xml and what was the",
    "start": "1126160",
    "end": "1133280"
  },
  {
    "text": "conclusion of your talk burn it in fire",
    "start": "1133280",
    "end": "1139600"
  },
  {
    "text": "what should we use instead which protocol should we use instead of",
    "start": "1139600",
    "end": "1145280"
  },
  {
    "text": "sample two i forget okay boom exactly so the era of",
    "start": "1145280",
    "end": "1150559"
  },
  {
    "text": "xml is over by the way all the json parsers are vulnerable as",
    "start": "1150559",
    "end": "1155760"
  },
  {
    "text": "well especially in this era 2017 now please if i would recommend you use the",
    "start": "1155760",
    "end": "1162400"
  },
  {
    "text": "integrated language json parser of the java language and keep away from",
    "start": "1162400",
    "end": "1167679"
  },
  {
    "text": "third-party json libraries they have a host of problems because how do how do",
    "start": "1167679",
    "end": "1173120"
  },
  {
    "text": "json parsers work in the dot net and java ecosystem what do they fundamentally do how does the different",
    "start": "1173120",
    "end": "1179280"
  },
  {
    "text": "json parsers convert an object to a piece of json and then convert json back",
    "start": "1179280",
    "end": "1185520"
  },
  {
    "text": "to an object what's happening under the hood deserialization",
    "start": "1185520",
    "end": "1191679"
  },
  {
    "text": "except for one library michael samuel um",
    "start": "1191679",
    "end": "1196880"
  },
  {
    "text": "michael samuel from google wrote like a json parser that does all string manipulation and we were not vulnerable",
    "start": "1196880",
    "end": "1202559"
  },
  {
    "text": "to it but for the most part keep your json parsers up to date and",
    "start": "1202559",
    "end": "1207679"
  },
  {
    "text": "keep away from esoteric third-party json parsers focus on what your language",
    "start": "1207679",
    "end": "1212720"
  },
  {
    "text": "offers you let's bump up to now let's look at jep273 jep273 is going to define um the shake",
    "start": "1212720",
    "end": "1221840"
  },
  {
    "text": "256 extendable output function now what do we care about that because this is",
    "start": "1221840",
    "end": "1227280"
  },
  {
    "text": "the beginning of real random number generation in the world of java that's",
    "start": "1227280",
    "end": "1232559"
  },
  {
    "text": "right we have the new secure random class which will allow you to do seeding",
    "start": "1232559",
    "end": "1238080"
  },
  {
    "text": "a pseudo random number generator reseeding the problem with a pseudo",
    "start": "1238080",
    "end": "1243919"
  },
  {
    "text": "random number generator you specify a seed and then you start asking for",
    "start": "1243919",
    "end": "1249280"
  },
  {
    "text": "random numbers if i can discover that seed i can pick up the entire sequence that's",
    "start": "1249280",
    "end": "1254720"
  },
  {
    "text": "why it's pseudo random and so i need to reseed periodically in order to have",
    "start": "1254720",
    "end": "1261360"
  },
  {
    "text": "good random numbers at scale in java and we see the secure random class providing",
    "start": "1261360",
    "end": "1266720"
  },
  {
    "text": "this capability for the first time let me move ahead let's look at jeff 287",
    "start": "1266720",
    "end": "1272640"
  },
  {
    "start": "1270000",
    "end": "1424000"
  },
  {
    "text": "now again we're looking at the we're getting closer to 2017 to 2018 2019 now",
    "start": "1272640",
    "end": "1279919"
  },
  {
    "text": "and this is this is the jet that's implementing for the first time the sha-3 primitives",
    "start": "1279919",
    "end": "1285679"
  },
  {
    "text": "why is sha-3 so important to cryptography what what do we use hashing",
    "start": "1285679",
    "end": "1292720"
  },
  {
    "text": "algorithms for uh what's that",
    "start": "1292720",
    "end": "1297919"
  },
  {
    "text": "no sir we would never use a hash algorithm for i mean we suspect we would never use",
    "start": "1298320",
    "end": "1304480"
  },
  {
    "text": "sha for a password why because if you if you take a password and hash it",
    "start": "1304480",
    "end": "1310000"
  },
  {
    "text": "take that hash and google it you'll get the password what algorithm should we use for password storage there's only",
    "start": "1310000",
    "end": "1316080"
  },
  {
    "text": "four correct answers b crypt even though it truncates it's gonna be two bytes damn you scott but",
    "start": "1316080",
    "end": "1322240"
  },
  {
    "text": "you're right bcrypt is a good algorithm the minimal what else",
    "start": "1322240",
    "end": "1327280"
  },
  {
    "text": "what's that argon there's only one version of argon is good there's a lot of side channel",
    "start": "1327280",
    "end": "1333360"
  },
  {
    "text": "attacks against it there's argon 2 there's argon 2i and there's argon 2d",
    "start": "1333360",
    "end": "1339840"
  },
  {
    "text": "they're all flawed so you want to use argon 2 i d is the good version of argon",
    "start": "1339840",
    "end": "1346080"
  },
  {
    "text": "for password storage there's two algorithms what else scott pbkdf2 a us federal standard for fips",
    "start": "1346080",
    "end": "1354159"
  },
  {
    "text": "federal government compliance you want to use it with an hmac and not a low-level hash what's the force",
    "start": "1354159",
    "end": "1359600"
  },
  {
    "text": "algorithm that's good from colon percival s crypt those are and none of these are",
    "start": "1359600",
    "end": "1366080"
  },
  {
    "text": "hashing algorithms they're either a key derivation function or a password hashing function a sha this is a mick a",
    "start": "1366080",
    "end": "1374480"
  },
  {
    "text": "message integrity code that that's and we never want to use that for password storage i'm being pedantic with you sir",
    "start": "1374480",
    "end": "1381840"
  },
  {
    "text": "so oh no awesome but why is shah 3 so important what other algorithms depend",
    "start": "1381840",
    "end": "1389600"
  },
  {
    "text": "on a good sha-3 implementation i'm sorry",
    "start": "1389600",
    "end": "1394640"
  },
  {
    "text": "digital signatures what else asymmetric cryptography and many other primiti",
    "start": "1394640",
    "end": "1401760"
  },
  {
    "text": "algorithms will depend on us having a low-level hashing algorithm",
    "start": "1401760",
    "end": "1407280"
  },
  {
    "text": "so here we are in like java nine where like 2017-18",
    "start": "1407280",
    "end": "1413760"
  },
  {
    "text": "and this is where 3 first enters the java ecosystem we're going to come back to this in a little",
    "start": "1413760",
    "end": "1419840"
  },
  {
    "text": "bit no one's really using it but this is where it's first at least basically available so now we're jumping up to",
    "start": "1419840",
    "end": "1426799"
  },
  {
    "start": "1424000",
    "end": "1645000"
  },
  {
    "text": "java 10 to class it was about 2000 late 2018 or so now",
    "start": "1426799",
    "end": "1432159"
  },
  {
    "text": "and and nick is right any unencrypted traffic it's not just a leak of data it's an",
    "start": "1432159",
    "end": "1438159"
  },
  {
    "text": "attack vector if i'm on a network and i see someone using http i can inject my",
    "start": "1438159",
    "end": "1444559"
  },
  {
    "text": "attack into their request stream so that their request launches the attack",
    "start": "1444559",
    "end": "1450159"
  },
  {
    "text": "also bruce schneier is right cryptography is only important if the rest of your system is secure i've",
    "start": "1450159",
    "end": "1457279"
  },
  {
    "text": "almost never seen an attacker actually go after the crypto they'll go after key",
    "start": "1457279",
    "end": "1462559"
  },
  {
    "text": "management or they'll go after the application or access control or something else",
    "start": "1462559",
    "end": "1468159"
  },
  {
    "text": "rarely do i need to break crypto directly to crack into a system",
    "start": "1468159",
    "end": "1474000"
  },
  {
    "text": "scott you agree with that have you ever had to like brute force like a crypto key to get a to succeed in a pen test",
    "start": "1474000",
    "end": "1482000"
  },
  {
    "text": "there's always an easier way now tls is the main protocol underneath https right",
    "start": "1482000",
    "end": "1488799"
  },
  {
    "text": "and this is first tls10 is now being rolled out in this era of java 10. the spy can't view your data",
    "start": "1488799",
    "end": "1496400"
  },
  {
    "text": "they can't change the data and you know you're visiting the right server because the initial public key in a tls exchange",
    "start": "1496400",
    "end": "1505200"
  },
  {
    "text": "is going to be signed by a certificate authority without that signature as the",
    "start": "1505200",
    "end": "1510640"
  },
  {
    "text": "attacker i can inject my own public key in and and take over but the public key",
    "start": "1510640",
    "end": "1516320"
  },
  {
    "text": "to start this tls exchange network security uh",
    "start": "1516320",
    "end": "1522640"
  },
  {
    "text": "gonna be signed by an authority that specifies it's really for my server so this is a critical part of network",
    "start": "1522640",
    "end": "1529520"
  },
  {
    "text": "security of transport security we want to use tls everywhere and always and",
    "start": "1529520",
    "end": "1536159"
  },
  {
    "text": "there's no excuse not to use https so what we see in java 10 for the first",
    "start": "1536159",
    "end": "1542960"
  },
  {
    "text": "time is a mammoth update of root certificates to be in sync with most of the browsers of the day",
    "start": "1542960",
    "end": "1549600"
  },
  {
    "text": "this only happened until java 10. why does java need certificates",
    "start": "1549600",
    "end": "1554720"
  },
  {
    "text": "normally it's your browser that's the client that needs that needs to verify certificates why does java need it",
    "start": "1554720",
    "end": "1561200"
  },
  {
    "text": "because we often use java as a client like in a microservice you make a request to my service",
    "start": "1561200",
    "end": "1567919"
  },
  {
    "text": "that service will load other data in an outbound way and then java is the client",
    "start": "1567919",
    "end": "1573760"
  },
  {
    "text": "and we've got to have root certificates so we can verify the public key from the",
    "start": "1573760",
    "end": "1579360"
  },
  {
    "text": "other server as we begin a tls exchange so jep319 is let's check let's check the",
    "start": "1579360",
    "end": "1586400"
  },
  {
    "text": "date of this for fun i'm going to make sure i get my dates right so now we're in what so now we're up around",
    "start": "1586400",
    "end": "1593760"
  },
  {
    "text": "really so uh yeah this must it's a multi-layered",
    "start": "1593760",
    "end": "1599320"
  },
  {
    "text": "multi-releases so i'm gonna back out of that it's not helping my cause jep 390",
    "start": "1599320",
    "end": "1605360"
  },
  {
    "text": "somewhere along the jet uh 319 path around java 10",
    "start": "1605360",
    "end": "1612559"
  },
  {
    "text": "oracle was kind enough to open source the root certificate list so now for the",
    "start": "1612559",
    "end": "1618159"
  },
  {
    "text": "first time the open jdk and oracle jdk are in alignment when it comes to root",
    "start": "1618159",
    "end": "1623760"
  },
  {
    "text": "certificates this is this and like i didn't expect oracle to do this a lot of people son wouldn't do it but oracle",
    "start": "1623760",
    "end": "1630960"
  },
  {
    "text": "shows up and they start open sourcing big chunks of commercial java this is a re this is where i'm like",
    "start": "1630960",
    "end": "1637520"
  },
  {
    "text": "wow oracle for all of their savage licensing they're doing the right thing",
    "start": "1637520",
    "end": "1643360"
  },
  {
    "text": "in the job in the java community this takes us to java 11. so how much time do i have by the way",
    "start": "1643360",
    "end": "1650000"
  },
  {
    "start": "1645000",
    "end": "2077000"
  },
  {
    "text": "hello hey camera hey camera person how we doing on time",
    "start": "1650000",
    "end": "1655320"
  },
  {
    "text": "how much time left do i have",
    "start": "1656480",
    "end": "1659840"
  },
  {
    "text": "we're halfway through got so let's let's jump to java 11 then excellent",
    "start": "1664640",
    "end": "1669760"
  },
  {
    "text": "so now we're getting a little more specific here right three major changes",
    "start": "1669760",
    "end": "1675440"
  },
  {
    "text": "we have a key you know what a key agreement is this is a key exchange algorithm",
    "start": "1675440",
    "end": "1681039"
  },
  {
    "text": "why is this important we've got to understand how https works",
    "start": "1681039",
    "end": "1686760"
  },
  {
    "text": "https is a combination of two major things a key exchange that's asymmetric",
    "start": "1686760",
    "end": "1692799"
  },
  {
    "text": "and slow and once we exchange a key we drop to symmetric cryptography which is",
    "start": "1692799",
    "end": "1698080"
  },
  {
    "text": "blazingly fast but it's only a one key system and and uh this key exchange algorithm",
    "start": "1698080",
    "end": "1706720"
  },
  {
    "text": "is usually based on elliptical curve diffie-hellman algorithm and who created the curve constants",
    "start": "1706720",
    "end": "1713520"
  },
  {
    "text": "in elliptical curve diffie-hellman originally anyone know where the",
    "start": "1713520",
    "end": "1719520"
  },
  {
    "text": "of the united states nsa yeah exactly some of the world's best cryptographers are in the nsa so the nsa",
    "start": "1719520",
    "end": "1726559"
  },
  {
    "text": "creates these hard-coded constant curves for key exchange",
    "start": "1726559",
    "end": "1732320"
  },
  {
    "text": "what's nsa's job by the way to build good crypto to protect your data what's nsa's job",
    "start": "1732320",
    "end": "1739039"
  },
  {
    "text": "to spy and you you may not like the nsa guess which countries do spying in the world",
    "start": "1739039",
    "end": "1745919"
  },
  {
    "text": "sir now besides the u.s what other countries have active spies in the world",
    "start": "1745919",
    "end": "1753760"
  },
  {
    "text": "every all of them right so nsa probably wasn't giving us good",
    "start": "1753760",
    "end": "1760640"
  },
  {
    "text": "curves they probably had curves that were chosen on purpose so their super computers could crack key exchange and",
    "start": "1760640",
    "end": "1767760"
  },
  {
    "text": "no one else could so the european community is like no we're not going to use nsa curve",
    "start": "1767760",
    "end": "1774480"
  },
  {
    "text": "constants because we know what's going on here these are the new european curves around this era",
    "start": "1774480",
    "end": "1780480"
  },
  {
    "text": "that that are that are built by a community of mathematicians as opposed to spies in a spy agency",
    "start": "1780480",
    "end": "1788720"
  },
  {
    "text": "whose job is to crack crypto so anyways this also we're going to see this pop up",
    "start": "1788720",
    "end": "1794799"
  },
  {
    "text": "later the primitives for cha cha 20 and poly 1305 show up here as well again european uh",
    "start": "1794799",
    "end": "1803120"
  },
  {
    "text": "cryptographic standards at this point to counter aes for symmetric encryption and",
    "start": "1803120",
    "end": "1808159"
  },
  {
    "text": "to counter rsa for asymmetric encryption and also we see the beginning of tls 1.3",
    "start": "1808159",
    "end": "1814640"
  },
  {
    "text": "coming out it was it was not that robust in java 11 nor was the standard in this",
    "start": "1814640",
    "end": "1820880"
  },
  {
    "text": "era but it's it's out live and here we go jep 314 new key agreement with curve with",
    "start": "1820880",
    "end": "1828360"
  },
  {
    "text": "non-rsa curves there's a whole rfc for it and it was built by an international",
    "start": "1828360",
    "end": "1833520"
  },
  {
    "text": "community i'm going to jump ahead here so what else yes now we have cha cha 20 which is a",
    "start": "1833520",
    "end": "1841120"
  },
  {
    "text": "new stream cipher that's faster than aes only when there's no hardware",
    "start": "1841120",
    "end": "1847200"
  },
  {
    "text": "acceleration so in my mind this is kind of a false promise because",
    "start": "1847200",
    "end": "1852559"
  },
  {
    "text": "guess which processors have hardware acceleration for aes built into it",
    "start": "1852559",
    "end": "1859360"
  },
  {
    "text": "that would be all all of them just about so to when does when does",
    "start": "1859360",
    "end": "1864640"
  },
  {
    "text": "not know hardware acceleration matter when you're using iot devices or",
    "start": "1864640",
    "end": "1870640"
  },
  {
    "text": "non-standard but for the most part cha cha 20 is always going to be slower than aes in",
    "start": "1870640",
    "end": "1878159"
  },
  {
    "text": "gallowa counter mode the only time it's not is when it's usually an iot type device but i see a lot of the the europe",
    "start": "1878159",
    "end": "1885039"
  },
  {
    "text": "the european community who move to chat shot 20 praise its performance characteristics which is just not true",
    "start": "1885039",
    "end": "1892799"
  },
  {
    "text": "in the real world on any server or cloud service aes galawak counter mode is",
    "start": "1892799",
    "end": "1899279"
  },
  {
    "text": "always going to be better but for those who don't want to use american standards cha cha 20 is still very reasonable",
    "start": "1899279",
    "end": "1906720"
  },
  {
    "text": "so i'm gonna leave it at that that's cool i no heart there's no harm in using it",
    "start": "1906720",
    "end": "1912320"
  },
  {
    "text": "so at this at this era tls12 and by the way tls11 this is an",
    "start": "1912320",
    "end": "1918880"
  },
  {
    "text": "older slide tl tls11 is a dead algorithm tls12 is well supported but hard to",
    "start": "1918880",
    "end": "1926799"
  },
  {
    "text": "configure correct and tls13 is now live everywhere",
    "start": "1926799",
    "end": "1931919"
  },
  {
    "text": "what do you scott let me ask you a question do you think we should at the asvs standard deprecate tls-12 at this",
    "start": "1931919",
    "end": "1938159"
  },
  {
    "text": "point and only endorse one three or are you are you scott's one of the world's top experts in this technology by the",
    "start": "1938159",
    "end": "1944640"
  },
  {
    "text": "way do you think we should allow tls12 anymore",
    "start": "1944640",
    "end": "1949840"
  },
  {
    "text": "you know who's in my issue tracker at the asvs standard right now christian heinrich from australia and he's he's",
    "start": "1959519",
    "end": "1968159"
  },
  {
    "text": "not the most gentle of of participants but he's real gifted and he's pushing hard he's like why are you endorsing tls",
    "start": "1968159",
    "end": "1975120"
  },
  {
    "text": "one two i'm like because i'm realistic christian he's like yeah but we're a standard let's get this right he's almost convinced me come on push me over",
    "start": "1975120",
    "end": "1982799"
  },
  {
    "text": "push me over the push me over the hood would you be okay if asvs 5.0 which",
    "start": "1982799",
    "end": "1988080"
  },
  {
    "text": "comes out later at the end of this year if it said tls-13 only and drop 1.2",
    "start": "1988080",
    "end": "1994240"
  },
  {
    "text": "would you back that",
    "start": "1994240",
    "end": "1996960"
  },
  {
    "text": "i'm with you we can use tls12 securely all right let me jump ahead here",
    "start": "2001679",
    "end": "2008080"
  },
  {
    "text": "so also 2018 is when we were forced to start using tls11 and this is when pci highly",
    "start": "2008080",
    "end": "2016399"
  },
  {
    "text": "recommended we move to one two let's catch up now so where are we next let's go to let's",
    "start": "2016399",
    "end": "2022720"
  },
  {
    "text": "skip ahead a little bit so now we see jep 332 for the first time",
    "start": "2022720",
    "end": "2028320"
  },
  {
    "text": "this is the this is the the first time rolling out tls 1.3 and we see aes with",
    "start": "2028320",
    "end": "2034640"
  },
  {
    "text": "gallowa counter mode now being available this is an amazing innovation in the",
    "start": "2034640",
    "end": "2039679"
  },
  {
    "text": "world of symmetric cryptography this is an ultra high speed variant stream",
    "start": "2039679",
    "end": "2044880"
  },
  {
    "text": "cipher that is for the most part the recommended mode of aes we should be",
    "start": "2044880",
    "end": "2050320"
  },
  {
    "text": "using today there's a couple others that are better than gcm that were created in the last couple of years they are not",
    "start": "2050320",
    "end": "2057040"
  },
  {
    "text": "available in java or in any widespread way so today if i had to make a choice",
    "start": "2057040",
    "end": "2062320"
  },
  {
    "text": "for either cryptographic storage or cryptographic streaming i'd use aes gcm",
    "start": "2062320",
    "end": "2067919"
  },
  {
    "text": "and we see this around java 11 for the first time what else do we have um anything yeah",
    "start": "2067919",
    "end": "2075358"
  },
  {
    "text": "i'm just gonna jump ahead here what do we got so now let's move to java 12. andy warhol is right you need to let you",
    "start": "2075359",
    "end": "2083200"
  },
  {
    "start": "2077000",
    "end": "2122000"
  },
  {
    "text": "need to let the little things that would ordinarily bore you suddenly thrill you i love this quote this is the heart of",
    "start": "2083200",
    "end": "2090240"
  },
  {
    "text": "stewart's mark's work for java 12. so there's no like",
    "start": "2090240",
    "end": "2095679"
  },
  {
    "text": "direct security enhancements but we see a huge number of little things being",
    "start": "2095679",
    "end": "2102160"
  },
  {
    "text": "fixed that the cryptographic java community wanted fixed for a long time like we're fixing problems with the",
    "start": "2102160",
    "end": "2108240"
  },
  {
    "text": "security manager the key tool to do key creation and similar is enhanced",
    "start": "2108240",
    "end": "2113599"
  },
  {
    "text": "radically around this era we're removing older algorithms",
    "start": "2113599",
    "end": "2118640"
  },
  {
    "text": "cleaning up a lot of the mess was the job of java 12. now we're bumping up to java 13.",
    "start": "2118640",
    "end": "2125440"
  },
  {
    "start": "2122000",
    "end": "2220000"
  },
  {
    "text": "so the end we're about we're about we're august of 2019 at this point this is the beginning of the of the late modern java",
    "start": "2125440",
    "end": "2133520"
  },
  {
    "text": "era around this time we see java being released now every six months or so and",
    "start": "2133520",
    "end": "2140480"
  },
  {
    "text": "oracle is going to keep up this pace while java 13 is a giant release it's",
    "start": "2140480",
    "end": "2147119"
  },
  {
    "text": "the beginning of java 13 14 15 16 17 which are like six month release cycles",
    "start": "2147119",
    "end": "2153680"
  },
  {
    "text": "this is the biggest change in the java ecosystems release cycle and we see",
    "start": "2153680",
    "end": "2159040"
  },
  {
    "text": "support for um native support for microsoft integration into java because if i'm",
    "start": "2159040",
    "end": "2165680"
  },
  {
    "text": "running java on on a microsoft server i want access to all that",
    "start": "2165680",
    "end": "2171280"
  },
  {
    "text": "net crypto goodness it's complex to use but instead of like building it myself in java",
    "start": "2171280",
    "end": "2177520"
  },
  {
    "text": "if you're running the java jvm on a microsoft system you can just directly",
    "start": "2177520",
    "end": "2182960"
  },
  {
    "text": "talk to the the cryptographic api of of your microsoft operating system and get",
    "start": "2182960",
    "end": "2189040"
  },
  {
    "text": "that directly in java this is a big deal so we're beginning to remove some of the older certificate mechanisms here",
    "start": "2189040",
    "end": "2196880"
  },
  {
    "text": "where we have our first introduction of statelessness and json web tokens around",
    "start": "2196880",
    "end": "2202400"
  },
  {
    "text": "2019 we are enabling some more cipher suites",
    "start": "2202400",
    "end": "2207920"
  },
  {
    "text": "we have xml signature rolling up for the first time and even more key tool enhancements for tls this is again",
    "start": "2207920",
    "end": "2215599"
  },
  {
    "text": "stewart marks trying to get all the little things fixed to prepare for the java 14 and above run",
    "start": "2215599",
    "end": "2221839"
  },
  {
    "text": "now we're i'm going to finish this talk very early so you can go play please bear with me now we're at march 2020",
    "start": "2221839",
    "end": "2229119"
  },
  {
    "text": "this is where amazon root certificates get added there's a whole bunch of minor deprecations of crypto and the key tool",
    "start": "2229119",
    "end": "2236560"
  },
  {
    "text": "is brought up to a modern key tool for the first time in my opinion the key tool is this little text command with",
    "start": "2236560",
    "end": "2243520"
  },
  {
    "text": "with very very few um advanced enhancements in java 14 we see like a",
    "start": "2243520",
    "end": "2249760"
  },
  {
    "text": "little ui with it a whole a widespread uh increase in features something that's",
    "start": "2249760",
    "end": "2255280"
  },
  {
    "text": "now usable in the real world java 15 shows up october of 2020.",
    "start": "2255280",
    "end": "2262560"
  },
  {
    "start": "2257000",
    "end": "2406000"
  },
  {
    "text": "this is where edwards curve dsa signature shows up for the first time why is this important",
    "start": "2262560",
    "end": "2269200"
  },
  {
    "text": "like the what's the main digital signature algorithm on the planet today what's the main digital signature",
    "start": "2269200",
    "end": "2275200"
  },
  {
    "text": "algorithm to sign a json web tokens one of its main uses or to sign a a certificate in tls",
    "start": "2275200",
    "end": "2285160"
  },
  {
    "text": "absolutely rs and is that a problem do you have any problem using rsa today",
    "start": "2285280",
    "end": "2290880"
  },
  {
    "text": "and as long as it's for a digital signature rsa is awesome",
    "start": "2290880",
    "end": "2296720"
  },
  {
    "text": "we do not want to use it for authentication we do want to use it for a signature and",
    "start": "2296720",
    "end": "2302079"
  },
  {
    "text": "it's great guess how many european architects want to use rsa",
    "start": "2302079",
    "end": "2307440"
  },
  {
    "text": "as their digital signature scott that'd be zero exactly let's not use american crypto standards so we have two",
    "start": "2307440",
    "end": "2316079"
  },
  {
    "text": "two digital signatures that are now embraced by the by the uh",
    "start": "2316079",
    "end": "2321520"
  },
  {
    "text": "european community and we see ec dsa and older digital signature and now for the",
    "start": "2321520",
    "end": "2327520"
  },
  {
    "text": "first time in october 2020 we see edwards curve dsa this is an outrageously righteous algorithm that is",
    "start": "2327520",
    "end": "2336000"
  },
  {
    "text": "significantly stronger than rsa and this is again something i see the european community wanting to use more than rsa",
    "start": "2336000",
    "end": "2343680"
  },
  {
    "text": "sha 3 hmac comes out so the question was what do we use hashing algorithm for we",
    "start": "2343680",
    "end": "2350400"
  },
  {
    "text": "use them as a primitive for a digital signature we use them as a primitive for an hmac we use them as a primitive for",
    "start": "2350400",
    "end": "2357839"
  },
  {
    "text": "key exchange algorithms hashing algorithms i almost never use them by themselves i'll use them as part of",
    "start": "2357839",
    "end": "2365920"
  },
  {
    "text": "other algorithm families and we have tls13 for the first time is usable in",
    "start": "2365920",
    "end": "2372079"
  },
  {
    "text": "java now we're up to a point where it's now production quality it was really problematic up until java 15 which is",
    "start": "2372079",
    "end": "2379040"
  },
  {
    "text": "not too long ago there's also also the idea of code signing we recommend that",
    "start": "2379040",
    "end": "2384400"
  },
  {
    "text": "you do it for years but now we see more developers actually wanting to use it for various reasons so",
    "start": "2384400",
    "end": "2391520"
  },
  {
    "text": "the whole jar java you know archive signing process is radically enhanced",
    "start": "2391520",
    "end": "2397440"
  },
  {
    "text": "and these newer algorithms like edwards curve dsa is now available in the jar",
    "start": "2397440",
    "end": "2402960"
  },
  {
    "text": "signing process we're getting now we're getting locked down java 16 is very",
    "start": "2402960",
    "end": "2408000"
  },
  {
    "start": "2406000",
    "end": "2463000"
  },
  {
    "text": "recent last like couple years that's march of 2021. now we see sha-3 signatures",
    "start": "2408000",
    "end": "2415119"
  },
  {
    "text": "available for the first time in java a year ago so this is like sha-3 rsa",
    "start": "2415119",
    "end": "2421680"
  },
  {
    "text": "sha-3 ecdsa and shah 3 eddsa edwards curved",
    "start": "2421680",
    "end": "2426880"
  },
  {
    "text": "dsa so now we have these the most modern signatures with the most modern hashing",
    "start": "2426880",
    "end": "2432800"
  },
  {
    "text": "algorithms available for the first time and this should last us quite a few years based on the robustness of these",
    "start": "2432800",
    "end": "2439200"
  },
  {
    "text": "primitives also all a whole bunch of old root certificates that had the incorrect that",
    "start": "2439200",
    "end": "2445520"
  },
  {
    "text": "had a weaker bit size were removed and finally tls1081",
    "start": "2445520",
    "end": "2452480"
  },
  {
    "text": "are now fully disabled out of the java ecosystem and there's no good reason that you should be re-enabling these old",
    "start": "2452480",
    "end": "2459839"
  },
  {
    "text": "deprecated and broken algorithms that takes us to the the most recent version",
    "start": "2459839",
    "end": "2466560"
  },
  {
    "start": "2463000",
    "end": "2599000"
  },
  {
    "text": "up until last week java 18 just came out and i'm",
    "start": "2466560",
    "end": "2472000"
  },
  {
    "text": "still reviewing it so job with java 17 the big changes in java 17 were in the",
    "start": "2472000",
    "end": "2479760"
  },
  {
    "text": "we're in the the foundation of java itself so we had a lot of problems in java",
    "start": "2479760",
    "end": "2486800"
  },
  {
    "text": "recently right the problems with log4j and similar in fact the way that java 9",
    "start": "2486800",
    "end": "2492400"
  },
  {
    "text": "was set up was a major even it was a major change in how the language was",
    "start": "2492400",
    "end": "2497520"
  },
  {
    "text": "encapsulated java before java 9 was one big monolithic programming language and",
    "start": "2497520",
    "end": "2504160"
  },
  {
    "text": "began to break it up into separate pieces to so you can to deploy java in a more modular way this is a big mistake",
    "start": "2504160",
    "end": "2511680"
  },
  {
    "text": "in my opinion and we saw how there's many attacks against that weakness that",
    "start": "2511680",
    "end": "2517599"
  },
  {
    "text": "like for example we saw a problem in spring recently spring for shell it's not it's actually not that big of a problem but that problem surfaced",
    "start": "2517599",
    "end": "2524720"
  },
  {
    "text": "because of the modularization that happened in java 9. so some choices to",
    "start": "2524720",
    "end": "2529920"
  },
  {
    "text": "make java more deployable really bit us in the in around 2019-2020",
    "start": "2529920",
    "end": "2536240"
  },
  {
    "text": "so java 17 rolled out last year they go back to that java modularization and",
    "start": "2536240",
    "end": "2542000"
  },
  {
    "text": "they build better encapsulation between these pieces to solve that that problem it took years to take a monolithic",
    "start": "2542000",
    "end": "2549440"
  },
  {
    "text": "language break it up into parts where it was done in a way that was actually secure and didn't weaken the language",
    "start": "2549440",
    "end": "2555440"
  },
  {
    "text": "and also the whole deserialization api was completely uh revamped and enhanced",
    "start": "2555440",
    "end": "2561520"
  },
  {
    "text": "so it's a little bit more usable and more configurable as well we also see that you can seal a java",
    "start": "2561520",
    "end": "2567359"
  },
  {
    "text": "class for the first time which means you may not extend it in any way and also we",
    "start": "2567359",
    "end": "2572960"
  },
  {
    "text": "see cha cha 20 and poly 1305 those critical european",
    "start": "2572960",
    "end": "2578240"
  },
  {
    "text": "ciphers rolled into the core of java for the first time the main oracle provider",
    "start": "2578240",
    "end": "2585119"
  },
  {
    "text": "that brings us to today we'll see java 18 next time i see you",
    "start": "2585119",
    "end": "2590800"
  },
  {
    "text": "since i spoke so much about oh yeah before i finish up a few more notes let me rewind for a sec",
    "start": "2590800",
    "end": "2597839"
  },
  {
    "text": "i want to thank a few people first of all this this is shawn mullen he is still",
    "start": "2597839",
    "end": "2603280"
  },
  {
    "text": "the technical that's actually not his picture that's brad pitt but um sean mullen is a technical lead and architect",
    "start": "2603280",
    "end": "2610960"
  },
  {
    "text": "of oracle's java ecosystem i meet him at conferences every year and i see the stress on this man's face",
    "start": "2610960",
    "end": "2618400"
  },
  {
    "text": "he's like holding up java security he's the main architect this is no",
    "start": "2618400",
    "end": "2624720"
  },
  {
    "text": "what's up there oh sorry this this is no easy job and every time i see him i can just see like distress",
    "start": "2626079",
    "end": "2632880"
  },
  {
    "text": "that supporting the security of this super complicated language puts on this man's shoulders i'm a huge fan of sean",
    "start": "2632880",
    "end": "2639920"
  },
  {
    "text": "mullen he leads the open jdk security group he hasn't quit yet he's still doing it and",
    "start": "2639920",
    "end": "2646240"
  },
  {
    "text": "who who is the main security architect of the dot-net ecosystem",
    "start": "2646240",
    "end": "2651440"
  },
  {
    "text": "who do you do you know the dot-netter who who runs i i see him on twitter a lot we we argue",
    "start": "2651440",
    "end": "2658000"
  },
  {
    "text": "on a regular basis uh do do you know the top.net supporter at microsoft scott anyone i i'm going to",
    "start": "2658000",
    "end": "2664800"
  },
  {
    "text": "move on but i know the individuals who who manage python security dotnet",
    "start": "2664800",
    "end": "2670240"
  },
  {
    "text": "security and java security and these individuals are really stressed out it's too much of a job so",
    "start": "2670240",
    "end": "2677359"
  },
  {
    "text": "sean should quit go take an easy consulting job make tons of money chilling out but he he's a he's a",
    "start": "2677359",
    "end": "2682640"
  },
  {
    "text": "believer i just want to say i give him a lot of credit because it's an almost impossible job that he",
    "start": "2682640",
    "end": "2688880"
  },
  {
    "text": "takes very seriously so what can you do if you care about java if you like to noodle into the internals",
    "start": "2688880",
    "end": "2696079"
  },
  {
    "text": "of java what can you do well if you see something that needs to be supported create it create a jep java enhancement",
    "start": "2696079",
    "end": "2702880"
  },
  {
    "text": "proposal and if if you see proposals that you care about support them add",
    "start": "2702880",
    "end": "2709760"
  },
  {
    "text": "comments and so on maybe help them write code also there's a whole quality outreach",
    "start": "2709760",
    "end": "2715359"
  },
  {
    "text": "campaign that helps open source groups handle this feedback so there's a",
    "start": "2715359",
    "end": "2720720"
  },
  {
    "text": "variety of ways that you can engage the java ecosystem give them your feedback and make java",
    "start": "2720720",
    "end": "2727440"
  },
  {
    "text": "better than it is today i want to go back to one yeah i have a few minutes here i'm going to go do one",
    "start": "2727440",
    "end": "2733520"
  },
  {
    "text": "more thing before we really finish up i just want to jump into",
    "start": "2733520",
    "end": "2739200"
  },
  {
    "text": "i want to show you a few diagrams just we're going to go low level and explain",
    "start": "2739200",
    "end": "2744640"
  },
  {
    "text": "what a digital signature is and then we'll finish out",
    "start": "2744640",
    "end": "2750480"
  },
  {
    "text": "just for fun i spent a lot of years using digital",
    "start": "2750480",
    "end": "2755920"
  },
  {
    "text": "signatures and until i and i really didn't fundamentally understand them",
    "start": "2755920",
    "end": "2761119"
  },
  {
    "text": "until i looked until i looked under the hood and actually read the algorithm so",
    "start": "2761119",
    "end": "2766240"
  },
  {
    "text": "let me just let's just look at what is a digital signature under the hood",
    "start": "2766240",
    "end": "2771520"
  },
  {
    "start": "2768000",
    "end": "3140000"
  },
  {
    "text": "because digital signatures are now the heart of all identity",
    "start": "2771520",
    "end": "2777359"
  },
  {
    "text": "let me say this again as we go and look at authentication systems session management systems identity",
    "start": "2777359",
    "end": "2784160"
  },
  {
    "text": "providers the entire world of identity is all about digital signatures now",
    "start": "2784160",
    "end": "2791599"
  },
  {
    "text": "anyone know why that is why is a digital signature something",
    "start": "2791599",
    "end": "2797119"
  },
  {
    "text": "that was just basically only used in the world of like saml which is crap sorry",
    "start": "2797119",
    "end": "2802880"
  },
  {
    "text": "or it was used in at in the in the hgps world i didn't use a lot of digital signatures and now i use them every day",
    "start": "2802880",
    "end": "2810240"
  },
  {
    "text": "what change do we see in modern development that mandates understanding of digital",
    "start": "2810240",
    "end": "2816720"
  },
  {
    "text": "signatures almost every day in almost every app what artifact uses digital signatures",
    "start": "2816720",
    "end": "2824319"
  },
  {
    "text": "i agree but there's a certain json web tokens we're moving away from session",
    "start": "2826000",
    "end": "2832400"
  },
  {
    "text": "management in in the world of micro services and we're we've already moved to json web tokens which are stateless",
    "start": "2832400",
    "end": "2838880"
  },
  {
    "text": "artifacts so how does this work you log into my system that's stateless and i",
    "start": "2838880",
    "end": "2844319"
  },
  {
    "text": "create a token that represents that you're logged in for eight hours as a normal user and i digitally sign it and",
    "start": "2844319",
    "end": "2852079"
  },
  {
    "text": "give you a copy of it and why am i using a digital signature because if you",
    "start": "2852079",
    "end": "2857599"
  },
  {
    "text": "modify one bit in the token make yourself an admin or if you modify one bit in the",
    "start": "2857599",
    "end": "2864079"
  },
  {
    "text": "signature when you give me that token back it's not going to be valid and i'm going",
    "start": "2864079",
    "end": "2869440"
  },
  {
    "text": "to reject it so because we need json web tokens for stateless systems",
    "start": "2869440",
    "end": "2875119"
  },
  {
    "text": "and because we protect those tokens integrity with a digital signature",
    "start": "2875119",
    "end": "2881520"
  },
  {
    "text": "digital signatures are now the heart of the entire um identity ecosystem and",
    "start": "2881520",
    "end": "2888240"
  },
  {
    "text": "they have been for several years so let's finish up and understand what these algorithms",
    "start": "2888240",
    "end": "2894160"
  },
  {
    "text": "actually are now keep in mind when you're doing a digital signature you don't get",
    "start": "2894160",
    "end": "2899720"
  },
  {
    "text": "confidentiality i can still read the message and see it right there all that digital signatures do",
    "start": "2899720",
    "end": "2907280"
  },
  {
    "text": "they're going to make sure that it provides integrity which means if i modify the data the server is going to",
    "start": "2907280",
    "end": "2914480"
  },
  {
    "text": "know it so i start with the message and i hash that message using some hash",
    "start": "2914480",
    "end": "2919920"
  },
  {
    "text": "primitive i want to use sha3 only available recently in java but i'll use",
    "start": "2919920",
    "end": "2924960"
  },
  {
    "text": "some hash function and i'll get down to x number of bits 5 in this case",
    "start": "2924960",
    "end": "2930480"
  },
  {
    "text": "256 bits then i'm going to encrypt it with the rsa algorithm using a private",
    "start": "2930480",
    "end": "2937040"
  },
  {
    "text": "key and that leaves me with a 256 bit digital signature i got that digital",
    "start": "2937040",
    "end": "2943200"
  },
  {
    "text": "signature now and i attach it to the message and i give it to you you're john",
    "start": "2943200",
    "end": "2948559"
  },
  {
    "text": "you're an admin the token is going to be live for another eight hours and i",
    "start": "2948559",
    "end": "2954000"
  },
  {
    "text": "attach a digital signature to it and if you look at this token you can read it but the digital signature when you give",
    "start": "2954000",
    "end": "2961040"
  },
  {
    "text": "it back to me will stop you from editing it in a way that i will not know so now",
    "start": "2961040",
    "end": "2966800"
  },
  {
    "text": "that you once you give me this token that's the raw plain text token plus a",
    "start": "2966800",
    "end": "2972559"
  },
  {
    "text": "digital signature how does the server verify it the server",
    "start": "2972559",
    "end": "2977599"
  },
  {
    "text": "takes that message and the digital signature they take the raw message hash",
    "start": "2977599",
    "end": "2982720"
  },
  {
    "text": "it and get to that 256 bit whatever the bit size is of the hashing algorithm and then we decrypt",
    "start": "2982720",
    "end": "2989760"
  },
  {
    "text": "the signature with the public key that gives me back to the hashing the",
    "start": "2989760",
    "end": "2995520"
  },
  {
    "text": "hash value if the hash of the message and the hash of the signature that i",
    "start": "2995520",
    "end": "3000880"
  },
  {
    "text": "decrypt matches then that signature matches the data that's a digital signature it's super",
    "start": "3000880",
    "end": "3007359"
  },
  {
    "text": "elegant the way this works and again the pr remember i'm not using hashing",
    "start": "3007359",
    "end": "3013440"
  },
  {
    "text": "algorithms by themselves i'm using them as part of other algorithms so rsa by",
    "start": "3013440",
    "end": "3019599"
  },
  {
    "text": "itself needs an internal hashing algorithm and as a very recently we have rsa and",
    "start": "3019599",
    "end": "3026559"
  },
  {
    "text": "ecdsa and eddsa all available with the sha-3 primitive for this kind of",
    "start": "3026559",
    "end": "3033760"
  },
  {
    "text": "functionality this is going to serve us for the next many years and that primitive is now available in the",
    "start": "3033760",
    "end": "3040480"
  },
  {
    "text": "world's most popular language which is java by the way for the last many years what's been the most popular language",
    "start": "3040480",
    "end": "3047200"
  },
  {
    "text": "it's been python python we use it a lot for scripting and infrastructure and there's all these",
    "start": "3047200",
    "end": "3053040"
  },
  {
    "text": "frameworks now to do web and api development in python and guess what a lot of companies pulled back away from",
    "start": "3053040",
    "end": "3059520"
  },
  {
    "text": "that why python's a great language but the ecosystem of third-party libraries that",
    "start": "3059520",
    "end": "3066559"
  },
  {
    "text": "we need for for to build apis is not as mature in python",
    "start": "3066559",
    "end": "3071760"
  },
  {
    "text": "as is in java so we saw like a lot of companies going to python and building apis and they hit a threshold in terms",
    "start": "3071760",
    "end": "3079520"
  },
  {
    "text": "of how fast they can build this this code and python got slow because a lot of the libraries we needed are just not",
    "start": "3079520",
    "end": "3085839"
  },
  {
    "text": "mature so a lot of companies went back to java i'm surprised to be honest with you",
    "start": "3085839",
    "end": "3091520"
  },
  {
    "text": "that's exactly what happened and zdnet told us like two weeks ago that java has now",
    "start": "3091520",
    "end": "3097119"
  },
  {
    "text": "taken over python as the world's most popular language so with seven minutes to spare",
    "start": "3097119",
    "end": "3104880"
  },
  {
    "text": "that's my talk on java security that's it if you have questions for me i'm jim",
    "start": "3104880",
    "end": "3110240"
  },
  {
    "text": "manaco.com i'm so happy you're here at ndc security",
    "start": "3110240",
    "end": "3115280"
  },
  {
    "text": "guess what's coming up next pretty next hour or two what's an hour from now the most important part of the",
    "start": "3115280",
    "end": "3121040"
  },
  {
    "text": "conference what is that the party i'll see you at the party tonight go forth and write secure code",
    "start": "3121040",
    "end": "3127839"
  },
  {
    "text": "thank you for being here everybody [Applause]",
    "start": "3127839",
    "end": "3135369"
  },
  {
    "text": "you",
    "start": "3140720",
    "end": "3142800"
  }
]