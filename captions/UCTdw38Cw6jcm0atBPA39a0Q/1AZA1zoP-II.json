[
  {
    "text": "right I've got the thumb I think it's all system go cool ok let's get started",
    "start": "11660",
    "end": "21340"
  },
  {
    "text": "my name is Don I am F sharp contributor",
    "start": "21340",
    "end": "26590"
  },
  {
    "text": "I originally started the f-sharp language design yeah I have Microsoft",
    "start": "26590",
    "end": "32738"
  },
  {
    "text": "Research in Cambridge it around 2003 I contributed to c-sharp 2.0 as well and",
    "start": "32739",
    "end": "37900"
  },
  {
    "text": "it's great to be here at NTC you might detect a slight Australian hint in my",
    "start": "37900",
    "end": "42940"
  },
  {
    "text": "accent maybe it comes back a little more strongly as I as I come home originally",
    "start": "42940",
    "end": "48339"
  },
  {
    "text": "born and bred Queenslander in Queensland in the audience yes go Broncos",
    "start": "48339",
    "end": "57150"
  },
  {
    "text": "and yeah wonderful to be back in Australia to reconnect that respect with",
    "start": "57150",
    "end": "63909"
  },
  {
    "text": "the deaf community here which didn't really exist back in 1994 when I packed bags and headed to England to do my PhD",
    "start": "63909",
    "end": "70689"
  },
  {
    "text": "it wasn't quite the same so the tech wasn't the same as it is now you're",
    "start": "70689",
    "end": "75700"
  },
  {
    "text": "leaving a great time here in Australia where there are communities like this and worldwide that you can participate",
    "start": "75700",
    "end": "81399"
  },
  {
    "text": "in and you hopefully live in a great time that you can use programming",
    "start": "81399",
    "end": "87880"
  },
  {
    "text": "technologies that have improved dramatically since the days since the early nineties when I was living here",
    "start": "87880",
    "end": "94810"
  },
  {
    "text": "and what are those programming technologies you get to use dotnet and one of the languages here to use on.net",
    "start": "94810",
    "end": "100030"
  },
  {
    "text": "you and your teams is f sharp and I'm very happy to have been part of bringing",
    "start": "100030",
    "end": "106329"
  },
  {
    "text": "that to to practical fruition now I've",
    "start": "106329",
    "end": "112929"
  },
  {
    "text": "been thinking about like what what am I actually doing when I give this talk I said f sharp code I love it's actually the one of the funny things about this",
    "start": "112929",
    "end": "118780"
  },
  {
    "text": "talk it's sort of several meta-narratives underneath it right like like most talks or most talks I give",
    "start": "118780",
    "end": "125350"
  },
  {
    "text": "anyway and a very large part of this",
    "start": "125350",
    "end": "130420"
  },
  {
    "text": "talk is actually aimed at at c-sharp developers in factual or aimed at you can imagine there are teams who are",
    "start": "130420",
    "end": "136330"
  },
  {
    "text": "using a sharp where a lot of the people who come to use F sharp you know they're",
    "start": "136330",
    "end": "142030"
  },
  {
    "text": "not actually learn it on the on the job ok they they just so we often see this",
    "start": "142030",
    "end": "147490"
  },
  {
    "text": "that the best way - hi Rochelle developers is the higher good sous-chef developer and just let",
    "start": "147490",
    "end": "153160"
  },
  {
    "text": "him riff and use their sharp and learn as they go it's not very hard but something happens in those teams which",
    "start": "153160",
    "end": "160420"
  },
  {
    "text": "is which is important in that sometimes there are people who are extremely gung-ho about f-sharp i extremely",
    "start": "160420",
    "end": "166930"
  },
  {
    "text": "gung-ho about functional programming and they might have a lot of obscure",
    "start": "166930",
    "end": "171940"
  },
  {
    "text": "language that they use the most cure to obscure terminology they might write code that looks very different to other",
    "start": "171940",
    "end": "178750"
  },
  {
    "text": "people's code they might cause arguments between those teams and and in some ways",
    "start": "178750",
    "end": "184390"
  },
  {
    "text": "that's not a good that's not a good healthy thing and nor does it have to be",
    "start": "184390",
    "end": "189730"
  },
  {
    "text": "like that and so I would have given this talk in the past often the people who come up to me after the talk are",
    "start": "189730",
    "end": "195280"
  },
  {
    "text": "actually the ones in the team who want to rein in the use of some parts of",
    "start": "195280",
    "end": "202060"
  },
  {
    "text": "either F sharp F sharp or perhaps F sharp people who want to rein in their",
    "start": "202060",
    "end": "207190"
  },
  {
    "text": "more extreme edges of object-oriented programming so I want to kind of take the extremities of C sharp programming",
    "start": "207190",
    "end": "213010"
  },
  {
    "text": "practice and F sharp programming practice and push them out a little bit and focus on this sort of core part of F",
    "start": "213010",
    "end": "218800"
  },
  {
    "text": "sharp which is the F sharp code well I love and which is embodied in in what we",
    "start": "218800",
    "end": "224170"
  },
  {
    "text": "think of this good positive F sharp practice and and so that's really kind",
    "start": "224170",
    "end": "230260"
  },
  {
    "text": "of the meta-narrative underneath the talk for those of you who don't do F sharp or expose to some parts some small",
    "start": "230260",
    "end": "236290"
  },
  {
    "text": "amounts of F sharp programming or you're not gonna functional people but you're in a you're in an F sharp programming",
    "start": "236290",
    "end": "243010"
  },
  {
    "text": "team and and that's also aimed at the gung-ho F sharp people to think about",
    "start": "243010",
    "end": "248820"
  },
  {
    "text": "you know how where do we want to land the the methodology and practice of F",
    "start": "248820",
    "end": "255520"
  },
  {
    "text": "sharp coding okay so I'm going to do that that's a meta-narrative i'm not",
    "start": "255520",
    "end": "261459"
  },
  {
    "text": "going to make that explicit from now on but it's really a code to walk through some of the code I love",
    "start": "261459",
    "end": "267870"
  },
  {
    "text": "some of the code I don't like I love a little less and then sort of talk about how it relates to the actual language",
    "start": "267870",
    "end": "274090"
  },
  {
    "text": "design someone asked me last night what makes a good programming language and I",
    "start": "274090",
    "end": "279310"
  },
  {
    "text": "found it giving like a 10-minute spiel which wasn't at all answering the question but",
    "start": "279310",
    "end": "284710"
  },
  {
    "text": "telling a completely different story which is there are two big streams of",
    "start": "284710",
    "end": "290020"
  },
  {
    "text": "programming which come together in languages like F sharp and C sharp these days and these streams of history of in",
    "start": "290020",
    "end": "296740"
  },
  {
    "text": "the history of program they go all the way back to in the world I've been out in Cambridge right back to like 1950",
    "start": "296740",
    "end": "302950"
  },
  {
    "text": "when they made these first machines and they were the people who actually made the machines and then there were the logicians okay there were the Alan",
    "start": "302950",
    "end": "308950"
  },
  {
    "text": "Turing's actually fiddled and made with the actual machines and there were the people like Church who sort of made the",
    "start": "308950",
    "end": "316860"
  },
  {
    "text": "the abstract kind of world of computation there the lambda calculus of",
    "start": "316860",
    "end": "321910"
  },
  {
    "text": "maleic and these two communities really literally person-by-person over the years grew up into sort of the world of",
    "start": "321910",
    "end": "329050"
  },
  {
    "text": "imperative programming and the world of functional programming roughly roughly",
    "start": "329050",
    "end": "334570"
  },
  {
    "text": "speaking and and so a good programming",
    "start": "334570",
    "end": "340000"
  },
  {
    "text": "language is is one well for me the aim has always been to take the core ideas",
    "start": "340000",
    "end": "348220"
  },
  {
    "text": "of functional programming and make them really fly in practice in in in in in",
    "start": "348220",
    "end": "353290"
  },
  {
    "text": "the practical world and they're written in the real world connecting them through to the real world and so that",
    "start": "353290",
    "end": "360280"
  },
  {
    "text": "that that that's what it to me making a good programming language is all about",
    "start": "360280",
    "end": "365800"
  },
  {
    "text": "both in c-sharp and an f-sharp and you can kind of see sous chef knife shop as being too kind of partners in that game",
    "start": "365800",
    "end": "370840"
  },
  {
    "text": "one is taking an imperative programming language tradition and incorporating the functional elements into it one is",
    "start": "370840",
    "end": "376090"
  },
  {
    "text": "tasting a functional programming language tradition and connecting it through the dotnet and through the data sources in reality okay if you want to",
    "start": "376090",
    "end": "384940"
  },
  {
    "text": "hear more about my ideas on history of programming languages history of F sharp is Lord about the history of net and",
    "start": "384940",
    "end": "391180"
  },
  {
    "text": "c-sharp where those kind of traditions meet there's a this this is available it's a 40-page great rock and roll read",
    "start": "391180",
    "end": "399010"
  },
  {
    "text": "of the history all the way through the 80s and 90s and early 2000s up to about",
    "start": "399010",
    "end": "404940"
  },
  {
    "text": "2012 a shelf that looks like slash history",
    "start": "404940",
    "end": "410520"
  },
  {
    "text": "lots of characters make make an appearance along the way until I tell the story two stories one",
    "start": "410520",
    "end": "418750"
  },
  {
    "text": "of the world of Microsoft and they're sort of worldwide domination of the computing industry and another one of",
    "start": "418750",
    "end": "425140"
  },
  {
    "text": "the story of the functional programming academics and and and they're sort of the the small band of of zealots or",
    "start": "425140",
    "end": "434620"
  },
  {
    "text": "devotees who who made functional programming sort of practical in the 80s and 90s through the languages like",
    "start": "434620",
    "end": "440080"
  },
  {
    "text": "Haskell and oh camel and then how these kind of both of these worlds got kind of",
    "start": "440080",
    "end": "446620"
  },
  {
    "text": "wiped out by this tsunami of object-oriented programming you know Java hid the world and Mark soft almost",
    "start": "446620",
    "end": "452890"
  },
  {
    "text": "like well he got into a lot of trouble legally and what if they sort of did admits responses to the world of",
    "start": "452890",
    "end": "459790"
  },
  {
    "text": "object-oriented programming so of the donated programming sort of hit even something as big as the worldwide drug a",
    "start": "459790",
    "end": "466540"
  },
  {
    "text": "lot of Microsoft and they'll also hit that world of academics a functional programming those those logicians I",
    "start": "466540",
    "end": "472720"
  },
  {
    "text": "couldn't quite work out how to integrate this object-oriented programming thing into their worldview and and they had",
    "start": "472720",
    "end": "478570"
  },
  {
    "text": "all these different reactions to what to do about this integration and things",
    "start": "478570",
    "end": "484390"
  },
  {
    "text": "like Scala come from that I list out all the different ways I saw people reacting to this kind of problem this sort of",
    "start": "484390",
    "end": "492460"
  },
  {
    "text": "dialectic kind of problem of these things that don't fit together and how can we how can we make a synthesis that actually improves things and and and",
    "start": "492460",
    "end": "499540"
  },
  {
    "text": "integrates things and you can see that playing through all the way through to today in c-sharp 8.06 1/2 9.0 they're",
    "start": "499540",
    "end": "506800"
  },
  {
    "text": "still basically playing the same script okay how do we take the ideas from functional get them into c-sharp makes",
    "start": "506800",
    "end": "512950"
  },
  {
    "text": "them really fly and you can see it in in in F sharp it continues today so check",
    "start": "512950",
    "end": "519190"
  },
  {
    "text": "out the F sharp that'll slash history and there is still time to send me feedback on that if you've got some more",
    "start": "519190",
    "end": "525850"
  },
  {
    "text": "bits and pieces you'd like to incorporate in that right ok this is an opinion talk and lucky I get to give",
    "start": "525850",
    "end": "532660"
  },
  {
    "text": "that oh ok so what is f sharp first a couple of about 10 slides on where we're",
    "start": "532660",
    "end": "539620"
  },
  {
    "text": "at with F sharp this is how Microsoft described F sharp and the open source cross-platform functional language for",
    "start": "539620",
    "end": "545650"
  },
  {
    "text": "net those of you I don't do any dot all I can think it was Scala is to Java f-sharp is to c-sharp and it has",
    "start": "545650",
    "end": "554380"
  },
  {
    "text": "fantastic interoperability with c-sharp fantastic performance can use things like asp.net core if you used giraffe",
    "start": "554380",
    "end": "560170"
  },
  {
    "text": "the when the the the f-sharp web programming DSL that sits on top of",
    "start": "560170",
    "end": "565920"
  },
  {
    "text": "asp.net core you get a really beautiful functional Eric functional first web programming stack for the server side",
    "start": "565920",
    "end": "573000"
  },
  {
    "text": "and so all the wonderful things that are happening and on that core or flow up",
    "start": "573000",
    "end": "578860"
  },
  {
    "text": "through through F sharp as well and you can use all of those but F sharp is not",
    "start": "578860",
    "end": "584440"
  },
  {
    "text": "just what Microsoft says it is it's an interesting thing and I'll talk a bit more about this from a community perspective because F sharp is actually",
    "start": "584440",
    "end": "590350"
  },
  {
    "text": "a JavaScript language as well a strong JavaScript language where this this tool",
    "start": "590350",
    "end": "595450"
  },
  {
    "text": "called fable and also another one called web sharper they're both excellent F sharp to JavaScript systems fable is",
    "start": "595450",
    "end": "601510"
  },
  {
    "text": "interesting because it is really positioned as a part of the JavaScript ecosystem you install it and getting it",
    "start": "601510",
    "end": "607750"
  },
  {
    "text": "getting started with it is just with NPM it's not yeah you actually barely know you're doing any dotnet programming at",
    "start": "607750",
    "end": "613930"
  },
  {
    "text": "all it's much more like typescript F sharp sort of feels like it's yeah using an S or typescript kind of mode and you",
    "start": "613930",
    "end": "619540"
  },
  {
    "text": "get the high pretty high quality looking clean JavaScript out the other end and",
    "start": "619540",
    "end": "626940"
  },
  {
    "text": "and as I said it's part of the ecosystem so if you're a JavaScript are at a front-end developer you will actually",
    "start": "627030",
    "end": "633370"
  },
  {
    "text": "feel quite at home in the fable community it's a separate community in a way use their sharp as the language has",
    "start": "633370",
    "end": "639010"
  },
  {
    "text": "its own conferences for example recently an antral conference through its third third conference so but part of the",
    "start": "639010",
    "end": "648030"
  },
  {
    "text": "important thing here is what microsoft says their shop is but because the way if shop is built and delivered it can",
    "start": "648030",
    "end": "654250"
  },
  {
    "text": "also be a javascript language and this is a very much a community point of view on what f-sharp is and that's kind of",
    "start": "654250",
    "end": "664120"
  },
  {
    "text": "because f sharp isn't quite as we really let the community own the message about",
    "start": "664120",
    "end": "670990"
  },
  {
    "text": "F sharp I mean Microsoft is part of that community and says you know we are quite",
    "start": "670990",
    "end": "676840"
  },
  {
    "text": "open we make and contribute to F sharp because it is good for our a cloud platform that's why we do not",
    "start": "676840",
    "end": "682020"
  },
  {
    "text": "donate as well because ultimately we are cloud platform provider as well as other things but dotnet is part of as your",
    "start": "682020",
    "end": "689640"
  },
  {
    "text": "program ability effectively and that's why Microsoft contributed F sharp and F sharp has a structure through the F",
    "start": "689640",
    "end": "697320"
  },
  {
    "text": "sharp software foundation which is f sharp that org which is very self",
    "start": "697320",
    "end": "703350"
  },
  {
    "text": "empowered and open across platform neutral independent of course it's all",
    "start": "703350",
    "end": "708780"
  },
  {
    "text": "open source and accepting contributions the tooling is also very community",
    "start": "708780",
    "end": "713970"
  },
  {
    "text": "oriented sure there is there is a Visual Studio Chilean which obviously loads of people use but there is also the Visual",
    "start": "713970",
    "end": "721470"
  },
  {
    "text": "Studio code to link or iron odd for F sharp which is all community all community driven and owned and there's",
    "start": "721470",
    "end": "728580"
  },
  {
    "text": "also the JetBrains trolling in rider which is great good and high quality as well quickly running through these you",
    "start": "728580",
    "end": "735480"
  },
  {
    "text": "can use it with xamarin you can use it with visuals for their code windows/mac as you can also use it on the other",
    "start": "735480",
    "end": "740790"
  },
  {
    "text": "cloud platforms Google cloud platform and AWS and of course there's a great",
    "start": "740790",
    "end": "746990"
  },
  {
    "text": "Linux storage through through dotnet core now one of the reasons why all this",
    "start": "746990",
    "end": "752370"
  },
  {
    "text": "works and one of the reasons f-sharp could be both a JavaScript language and",
    "start": "752370",
    "end": "757620"
  },
  {
    "text": "a dotnet language is because of the f-sharp compiler service which is a single component a single DLL which",
    "start": "757620",
    "end": "766610"
  },
  {
    "text": "powers all of the F sharp tooling and contains all of the logic of the F sharp implementation so it's very tight",
    "start": "766610",
    "end": "774080"
  },
  {
    "text": "implementation there's no re-implementation of F sharp there is one implementation of F sharp which is",
    "start": "774080",
    "end": "779700"
  },
  {
    "text": "delivered through the F sharp compiler service component and that's integrated into all of these I've talked about fable there's a there's a very wonderful",
    "start": "779700",
    "end": "788070"
  },
  {
    "text": "stack called safe sack that puts together the F sharp fable JavaScript on",
    "start": "788070",
    "end": "793170"
  },
  {
    "text": "the on the client side and F sharp Fernet on the server side and you can share your code back between the front",
    "start": "793170",
    "end": "798810"
  },
  {
    "text": "end and back end and encourage you to take a look at that if you're into stock",
    "start": "798810",
    "end": "804660"
  },
  {
    "text": "programming and my job is to focus on the actual language design generally and",
    "start": "804660",
    "end": "809880"
  },
  {
    "text": "that's f-sharp 4.7 we've done I'll just quickly run through what we've done with those are not going to run through the",
    "start": "809880",
    "end": "815520"
  },
  {
    "text": "list you could just glance down them what we've been doing since we really properly moved to open engineering and",
    "start": "815520",
    "end": "821339"
  },
  {
    "text": "open source I've not only open-source to a fully augment source open engineering community oriented engineering just you",
    "start": "821339",
    "end": "828780"
  },
  {
    "text": "can glance through these 4.1 4.5 4.6 4.7",
    "start": "828780",
    "end": "833810"
  },
  {
    "text": "just-released ok that's how you get started on dotnet",
    "start": "833810",
    "end": "840060"
  },
  {
    "text": "core for those who using a just dotnet new - Lang F sharp that I've built that's they're integrated in the.net SDK",
    "start": "840060",
    "end": "847220"
  },
  {
    "text": "anywhere where the dotnet SDK is used and available then F sharp is also",
    "start": "847220",
    "end": "852420"
  },
  {
    "text": "available for instance most of the cloud platforms in have the dotnet SDK",
    "start": "852420",
    "end": "859760"
  },
  {
    "text": "installed and available then you can just use F sharp there as well ok and",
    "start": "859760",
    "end": "865800"
  },
  {
    "text": "this is a brief you know does it really matter to use a functional first",
    "start": "865800",
    "end": "872070"
  },
  {
    "text": "methodology or not and this is really key to the value proposition of Y F",
    "start": "872070",
    "end": "877710"
  },
  {
    "text": "sharp is actually bringing value to the Dom net ecosystem at all if it was just",
    "start": "877710",
    "end": "884670"
  },
  {
    "text": "a shell for the same syntax as c-sharp it didn't carry really strong either",
    "start": "884670",
    "end": "891930"
  },
  {
    "text": "language properties or library properties or methodological and kind of",
    "start": "891930",
    "end": "897740"
  },
  {
    "text": "characteristics then it wouldn't be worth doing it but it does make a big",
    "start": "897740",
    "end": "903210"
  },
  {
    "text": "difference in practice for a well-functioning F sharp team that is able it is use it in the right zone can",
    "start": "903210",
    "end": "910110"
  },
  {
    "text": "make is can be exceptionally productive and accurate in their coding and of",
    "start": "910110",
    "end": "915839"
  },
  {
    "text": "course met it's hard to prove that categorically and you can always give",
    "start": "915839",
    "end": "921510"
  },
  {
    "text": "anecdotes but this is one I think that I always refer to because there are actually quite a lot of things we actually kept constant between these two",
    "start": "921510",
    "end": "927360"
  },
  {
    "text": "things that were working on the same problem in the same company and it was a",
    "start": "927360",
    "end": "932460"
  },
  {
    "text": "is roughly c-sharp maybe 3.0 4.0 or a code so it doesn't include all of them and it was also done",
    "start": "932460",
    "end": "939209"
  },
  {
    "text": "by an offshore team rather than it's a what not one in the UK but the one on the right was done by",
    "start": "939209",
    "end": "948490"
  },
  {
    "text": "a smaller team in the UK so there's a sushar project with five took five years about eight developers didn't finish all",
    "start": "948490",
    "end": "956290"
  },
  {
    "text": "the contracts and there was a simultaneous implementation of that in",
    "start": "956290",
    "end": "961360"
  },
  {
    "text": "the UK by an f-sharp team and a Peter three developers with less than one year",
    "start": "961360",
    "end": "966639"
  },
  {
    "text": "I think and fully implemented the contract and a big difference in the",
    "start": "966639",
    "end": "972790"
  },
  {
    "text": "overall like out now you might say why is there such a big difference well there are reasons braces are a big",
    "start": "972790",
    "end": "978310"
  },
  {
    "text": "reason yeah lots and lots of lines of",
    "start": "978310",
    "end": "983470"
  },
  {
    "text": "braces there's also a lot of blank lines yeah proportion blank lines in the air",
    "start": "983470",
    "end": "989170"
  },
  {
    "text": "shaft code to about ten percent in each there are a lot of null checks in the C shell code yeah three thousand null",
    "start": "989170",
    "end": "995860"
  },
  {
    "text": "checks that's a lot of places I think and fail and you can see why C sharp nine is just you know it's a big part of",
    "start": "995860",
    "end": "1004019"
  },
  {
    "text": "the F sharp value proposition or the big part of the problem with C shaft to be honest is the pervasive presence of",
    "start": "1004019",
    "end": "1010620"
  },
  {
    "text": "nulls everywhere utterly needlessly it's just doesn't serve any role in the vast",
    "start": "1010620",
    "end": "1017819"
  },
  {
    "text": "majority of programming certainly not in this kind of place probably the fifteen places where the F shaft code did null",
    "start": "1017819",
    "end": "1023910"
  },
  {
    "text": "checks are exactly the places you want to you want to do them comments good",
    "start": "1023910",
    "end": "1030089"
  },
  {
    "text": "some comments useful code up code and so on test code but one thing is very very telling is this one there were two",
    "start": "1030089",
    "end": "1036870"
  },
  {
    "text": "thousand try-catch statements in the C sharp code there were nine I think in",
    "start": "1036870",
    "end": "1043319"
  },
  {
    "text": "the F sharp code and this is a sign of a project that's got out of control okay",
    "start": "1043319",
    "end": "1049380"
  },
  {
    "text": "if you've got two thousand places where exceptions might be happening and need to be explicitly caught and handled then",
    "start": "1049380",
    "end": "1056130"
  },
  {
    "text": "it probably means your developers have just lost track of the complexity of the code base and it's just every single",
    "start": "1056130",
    "end": "1061590"
  },
  {
    "text": "change that they put into the code they probably try to catch around it just in case something goes wrong and then they",
    "start": "1061590",
    "end": "1067590"
  },
  {
    "text": "don't know where to send the exception to and so enough with the now I don't know if it's an asynchronous system you know how they",
    "start": "1067590",
    "end": "1072720"
  },
  {
    "text": "can get out of control okay Simon cousins who did this project is",
    "start": "1072720",
    "end": "1078480"
  },
  {
    "text": "absolutely adamant that F sharp for this kind of work in the energy industry the",
    "start": "1078480",
    "end": "1084270"
  },
  {
    "text": "F sharp is totally the safe choice for doing this kind of work and any other choice is too risky and he's very very",
    "start": "1084270",
    "end": "1091320"
  },
  {
    "text": "proud of the zero bugs in a deployed system for this particular one and he's achieved that for several of his other",
    "start": "1091320",
    "end": "1097559"
  },
  {
    "text": "projects as well that doesn't mean that's going to happen all the time by any means but he's very good at char",
    "start": "1097559",
    "end": "1102870"
  },
  {
    "text": "program and uses it well and to say people have built very valuable",
    "start": "1102870",
    "end": "1108000"
  },
  {
    "text": "companies on f-sharp comm in America it was acquired by Walmart for three",
    "start": "1108000",
    "end": "1113399"
  },
  {
    "text": "billion many people from Australia actually f-sharp developers their shop Sydney community got kind of half of",
    "start": "1113399",
    "end": "1121169"
  },
  {
    "text": "them got hired off to go to New York and and work for gedcom and we have this",
    "start": "1121169",
    "end": "1130289"
  },
  {
    "text": "build with F sharp as a service I'd started using a micro services",
    "start": "1130289",
    "end": "1135690"
  },
  {
    "text": "architecture and very good and interesting F sharp code okay just to",
    "start": "1135690",
    "end": "1140970"
  },
  {
    "text": "say the community community is at the center of the technology I've touched on that we have the F job Software Foundation F sharp dot org right at the",
    "start": "1140970",
    "end": "1148200"
  },
  {
    "text": "heart of decision making and Microsoft worked very closely with them and other and at the center of nearly everything",
    "start": "1148200",
    "end": "1154830"
  },
  {
    "text": "that happens in the F sharp world but not in a controlling way but it in an enabling way and Mattias is in the",
    "start": "1154830",
    "end": "1162330"
  },
  {
    "text": "audience somewhere yes back there is on the board of the air shop Software Foundation and if you're interested in",
    "start": "1162330",
    "end": "1168210"
  },
  {
    "text": "just talking about like how does the foundation work what does it mean to be on a board what does it mean to start a",
    "start": "1168210",
    "end": "1173970"
  },
  {
    "text": "software foundation or legally how can you do that door if you have partners in America for doing that it's actually",
    "start": "1173970",
    "end": "1179309"
  },
  {
    "text": "it's kind of both easier and harder than you expect that it can be very worthwhile part of making a - giving a",
    "start": "1179309",
    "end": "1185429"
  },
  {
    "text": "technology a good governance and a good representation independent of its commercial interests oh it's not secrets",
    "start": "1185429",
    "end": "1192990"
  },
  {
    "text": "yeah even super great and the community is at the center of design and implementation we have the F sharp",
    "start": "1192990",
    "end": "1198750"
  },
  {
    "text": "language design process we have suggestions I've got those the wrong way around suggestions desire and in the actual implementation in",
    "start": "1198750",
    "end": "1205710"
  },
  {
    "text": "the.net foundation repository so we work with the dotnet foundation there",
    "start": "1205710",
    "end": "1210929"
  },
  {
    "text": "overlapping foundations in many ways slightly different yep so you can see",
    "start": "1210929",
    "end": "1216659"
  },
  {
    "text": "the cooperation is sort of listed out here actually and the communities at the centre of tooling I&I a webshop or other",
    "start": "1216659",
    "end": "1224309"
  },
  {
    "text": "but many other things that happen in the dot near sharp and Microsoft is part of this community so how we see ourselves",
    "start": "1224309",
    "end": "1230840"
  },
  {
    "text": "right but let's talk about code that I do and don't like and one way to do that is to go to the community and a great",
    "start": "1230840",
    "end": "1237440"
  },
  {
    "text": "thing the community does is f-sharp advent calendar every year and this",
    "start": "1237440",
    "end": "1243960"
  },
  {
    "text": "usually about 50 or 60 entries written by people around the world you're very",
    "start": "1243960",
    "end": "1251100"
  },
  {
    "text": "pleased those those of you doing F sharp in the audience please contribute to their shelf have their own calendar to",
    "start": "1251100",
    "end": "1257039"
  },
  {
    "text": "be honest if you're looking to make the c-sharp community a better and more vibrant community start a c-sharp advent",
    "start": "1257039",
    "end": "1264269"
  },
  {
    "text": "calendar as well yeah I don't know if there is such a thing I've never seen it if there is I think it's that kind of",
    "start": "1264269",
    "end": "1270539"
  },
  {
    "text": "community driven activism is really missing from the c-sharp world and considering how vast the c-sharp world",
    "start": "1270539",
    "end": "1276809"
  },
  {
    "text": "is it should be present so if you're looking to contribute in the c-shaped world please do that right but there's",
    "start": "1276809",
    "end": "1283019"
  },
  {
    "text": "lots of interesting examples of f-sharp code here it was started by the Japanese F sharp community back in 2010 and",
    "start": "1283019",
    "end": "1289669"
  },
  {
    "text": "they've done an amazing job and it's actually run in 2018 as well in English",
    "start": "1289669",
    "end": "1295399"
  },
  {
    "text": "there's the original Jefferson Japanese entries some of them and another way to",
    "start": "1295399",
    "end": "1302369"
  },
  {
    "text": "work out what is def Java code or doing don't like is to go back to the foundations of the f-sharp language design so back in 2007 when I first",
    "start": "1302369",
    "end": "1308940"
  },
  {
    "text": "started presenting on f-sharp into this sort of major audiences inside mark so if this was one of those slides I used",
    "start": "1308940",
    "end": "1315419"
  },
  {
    "text": "in the lovely 2007 font kinda are sort of images but it was the point of",
    "start": "1315419",
    "end": "1321029"
  },
  {
    "text": "f-sharp was to combine these things that it yeah one of the statically typed",
    "start": "1321029",
    "end": "1326279"
  },
  {
    "text": "languages succinct language is scalable one libraries explorative one that's interoperable with the world and that executes efficiently and so that's of",
    "start": "1326279",
    "end": "1335279"
  },
  {
    "text": "course code that I love has those characteristics so here's a example of a tiny bit of code that I",
    "start": "1335279",
    "end": "1341340"
  },
  {
    "text": "love printf in hello hello world that is an f-sharp program it's succinct its expressive and interoperates its",
    "start": "1341340",
    "end": "1347700"
  },
  {
    "text": "using.net through the libraries performs well there's no bugs ok so when one of",
    "start": "1347700",
    "end": "1356910"
  },
  {
    "text": "the great things about a shop is this pipeline operator to take some value in you pipe it through some some function",
    "start": "1356910",
    "end": "1364710"
  },
  {
    "text": "and we see many examples of it being",
    "start": "1364710",
    "end": "1370919"
  },
  {
    "text": "like chained I've been half of an f-sharp program is usually code of this kind and so you'll see for example are",
    "start": "1370919",
    "end": "1378419"
  },
  {
    "text": "just extracting some parts out of the f-sharp compiler services or the testing",
    "start": "1378419",
    "end": "1384210"
  },
  {
    "text": "of it we take the single users we filter them we do a parallel nap over those we filter those who group then we map them",
    "start": "1384210",
    "end": "1390600"
  },
  {
    "text": "it's kind of link style pipeline kind of way it's but it's a bit different it's a bit more is like taking the core ideas",
    "start": "1390600",
    "end": "1398220"
  },
  {
    "text": "of link which are obviously functional but expanding those out and using from pretty much half of your code ends up in",
    "start": "1398220",
    "end": "1406140"
  },
  {
    "text": "this kind of pipeline compositional way another when you look through the F",
    "start": "1406140",
    "end": "1412530"
  },
  {
    "text": "sharp advent calendar entries about half of them are about domain modeling with F",
    "start": "1412530",
    "end": "1417750"
  },
  {
    "text": "sharp and if you don't know the books and material boss got well lation domain",
    "start": "1417750",
    "end": "1424679"
  },
  {
    "text": "modeling made functional I think it's is the name of the book is a wonderful just talking why these functional programming",
    "start": "1424679",
    "end": "1431820"
  },
  {
    "text": "languages that are so good for capturing the core of these of these domains now",
    "start": "1431820",
    "end": "1437340"
  },
  {
    "text": "when I started during my PhD when I started doing this sort of functional",
    "start": "1437340",
    "end": "1444000"
  },
  {
    "text": "programming it was really dealing it's actually at a any Australian National University when I started doing this",
    "start": "1444000",
    "end": "1450090"
  },
  {
    "text": "sort of thing and it was really dealing with logic structures that was my domain",
    "start": "1450090",
    "end": "1455309"
  },
  {
    "text": "ok so we had to represent for instance the constructs in a circuit",
    "start": "1455309",
    "end": "1461790"
  },
  {
    "text": "they caught the combinatorial logic in a circuit and underneath it's like it's just boolean logic you have and you have",
    "start": "1461790",
    "end": "1468390"
  },
  {
    "text": "all's you have NAND XOS you have not you have yeah you just have a structure a tree a piece of data",
    "start": "1468390",
    "end": "1475780"
  },
  {
    "text": "if you like representing the the logic of a circuit and so this was my domain",
    "start": "1475780",
    "end": "1482350"
  },
  {
    "text": "that I that I would work with and then you just spend all day long riding your recursion evaluation normalization",
    "start": "1482350",
    "end": "1487890"
  },
  {
    "text": "analysis visualization starting with this core domain and and and they keep",
    "start": "1487890",
    "end": "1495640"
  },
  {
    "text": "the fact that it's so easy to model that domain and then adjust the model of it or in Richert or simplify it as a game",
    "start": "1495640",
    "end": "1502870"
  },
  {
    "text": "that goes on where you try in some ways your push to do ultra simplification down to a very minimal domain sometimes",
    "start": "1502870",
    "end": "1510400"
  },
  {
    "text": "you also have to augment that with a lot of real world sort of metadata as well but it's extremely simple to model the",
    "start": "1510400",
    "end": "1518050"
  },
  {
    "text": "domain and act as you as you as you modify it and change it then the type",
    "start": "1518050",
    "end": "1523390"
  },
  {
    "text": "checking just naturally sort of helps you adjust the process the parts of your",
    "start": "1523390",
    "end": "1529780"
  },
  {
    "text": "code that need that need occurs when interaction adjustment filling in the cases for the analysis another domain",
    "start": "1529780",
    "end": "1538300"
  },
  {
    "text": "that I personally work with not one that you guys Alice you contribute to you people and let's contribute to the",
    "start": "1538300",
    "end": "1544720"
  },
  {
    "text": "f-sharp compiler will have to work with is to do with the optimizer in the",
    "start": "1544720",
    "end": "1550900"
  },
  {
    "text": "f-sharp compiler and so if you look at the optimizer and you say well what is it domain well it the optimizer has to know",
    "start": "1550900",
    "end": "1557830"
  },
  {
    "text": "something about F sharp code that it sees so it can make accurate optimizations well what does it know it",
    "start": "1557830",
    "end": "1564430"
  },
  {
    "text": "knows something about an expression and this is what it knows represents information knowing about a value it's",
    "start": "1564430",
    "end": "1569980"
  },
  {
    "text": "other we don't know anything Val value means it's equal to another value and we know some more information",
    "start": "1569980",
    "end": "1575710"
  },
  {
    "text": "so there are Val ref is what it's equal to and then expression value information is that extra information and then it",
    "start": "1575710",
    "end": "1582160"
  },
  {
    "text": "might know it's a tuple that might know it's a record and so on down so that's the domain and then once you see that",
    "start": "1582160",
    "end": "1587770"
  },
  {
    "text": "you can actually more or less predict what kind of optimizations the F sharp",
    "start": "1587770",
    "end": "1592900"
  },
  {
    "text": "compiler will or won't do and as you teach the optimizer more about F sharp",
    "start": "1592900",
    "end": "1598120"
  },
  {
    "text": "code then the the cases of the optimization logic kind of drop out so those are my two",
    "start": "1598120",
    "end": "1603130"
  },
  {
    "text": "but other people have their domains too so if you look at Luke Merritt's was a blog post from the advent calendar and",
    "start": "1603130",
    "end": "1611620"
  },
  {
    "text": "this is representing the domain of just different values coming back from a web",
    "start": "1611620",
    "end": "1618250"
  },
  {
    "text": "request said the system unresponsive wasn't missing was some valid object and",
    "start": "1618250",
    "end": "1624760"
  },
  {
    "text": "so on and so that's a simple language DSL in a way for a modeling of the data",
    "start": "1624760",
    "end": "1630850"
  },
  {
    "text": "for that domain OD from Nigeria and the F sharp community it talks about how is",
    "start": "1630850",
    "end": "1637300"
  },
  {
    "text": "modeling the values he's getting back from I think this iTunes service and",
    "start": "1637300",
    "end": "1643540"
  },
  {
    "text": "it's a very kind of similar kind of thing you know it's getting XML back but this is the kind of minimal",
    "start": "1643540",
    "end": "1649510"
  },
  {
    "text": "representation of the information coming back and he any talks has a very nice description of how your choice of data",
    "start": "1649510",
    "end": "1656080"
  },
  {
    "text": "structures is crucial when writing your code in F sharp if you screw it up if",
    "start": "1656080",
    "end": "1661480"
  },
  {
    "text": "you get the domain model wrong then you'll go around in circles that does happen if you get it right then",
    "start": "1661480",
    "end": "1667420"
  },
  {
    "text": "all the rest of the code kind of flows very naturally and this is the book I",
    "start": "1667420",
    "end": "1673210"
  },
  {
    "text": "mentioned domain modeling made functional there's also a great book will get programming with F sharp that covers some of these domain modeling and",
    "start": "1673210",
    "end": "1679180"
  },
  {
    "text": "domain semantics topics now one of the",
    "start": "1679180",
    "end": "1685080"
  },
  {
    "text": "ways people come to F sharp and say ah dammit F sharp makes you organize your",
    "start": "1685080",
    "end": "1690700"
  },
  {
    "text": "code from sort of bottom up you know you write your initial code and then your",
    "start": "1690700",
    "end": "1695920"
  },
  {
    "text": "main entry method ends up at the bottom and I want to put it the other way around but there's a reason we do that that is of course F sharp it's a",
    "start": "1695920",
    "end": "1701530"
  },
  {
    "text": "fantastic data scripting language and we very we want you to orient your code towards scripts that are like Python",
    "start": "1701530",
    "end": "1709060"
  },
  {
    "text": "sort of readable down down as things go down the down the chain so at the top of",
    "start": "1709060",
    "end": "1715180"
  },
  {
    "text": "your code you have the access to the data layer we talked about that using a type provider a bit later and then you",
    "start": "1715180",
    "end": "1721270"
  },
  {
    "text": "access your your data and then you have your and now your extraction your your loading and extraction of information",
    "start": "1721270",
    "end": "1728510"
  },
  {
    "text": "from that and f-sharp data scripting is a really just beautiful thing a",
    "start": "1728510",
    "end": "1735610"
  },
  {
    "text": "well-written F sharp data script is extremely clear and and you know crack",
    "start": "1735610",
    "end": "1743960"
  },
  {
    "text": "some particular data extract load kind of tasks very nicely okay now and",
    "start": "1743960",
    "end": "1752210"
  },
  {
    "text": "there's an area I've been working a lot in lately which has deeply inspired me",
    "start": "1752210",
    "end": "1758090"
  },
  {
    "text": "about the role of functional programming in in in practical programming in web in both Fable web programming and in dotnet",
    "start": "1758090",
    "end": "1765919"
  },
  {
    "text": "front-end programming and things like examine for example or WPF and that is",
    "start": "1765919",
    "end": "1772220"
  },
  {
    "text": "this Model View update architecture for you is now in this world the key thing",
    "start": "1772220",
    "end": "1780049"
  },
  {
    "text": "is this view function and this is kind of the view function for a Model View",
    "start": "1780049",
    "end": "1785840"
  },
  {
    "text": "update mobile app and the difference about writing your view in this way is",
    "start": "1785840",
    "end": "1792320"
  },
  {
    "text": "that the view gets re-evaluated on every model update and then is that's done in",
    "start": "1792320",
    "end": "1800450"
  },
  {
    "text": "sort of background and and then a diff in the react kind of wire diff is made",
    "start": "1800450",
    "end": "1805549"
  },
  {
    "text": "to the actual Dom elements or the actual UI elements and what this means is you",
    "start": "1805549",
    "end": "1813049"
  },
  {
    "text": "you can have very dynamic views that can depend on things like if model press then then then we see one view and if we",
    "start": "1813049",
    "end": "1820850"
  },
  {
    "text": "don't we see another view or for example in there in the web version of this and",
    "start": "1820850",
    "end": "1825950"
  },
  {
    "text": "then if we have some text then we say loading and if once the text has arrived",
    "start": "1825950",
    "end": "1831830"
  },
  {
    "text": "and we actually fill in the results of the user interface so this idea that the",
    "start": "1831830",
    "end": "1836960"
  },
  {
    "text": "view can be a function which takes the model and generates view elements and",
    "start": "1836960",
    "end": "1843110"
  },
  {
    "text": "that it is okay to re-evaluate that from a performance perspective because",
    "start": "1843110",
    "end": "1849169"
  },
  {
    "text": "there's various various tricks you use to do that part of this differential update to the actual UI means that your",
    "start": "1849169",
    "end": "1856309"
  },
  {
    "text": "whole program can take a functional approach now people as interesting being in mark",
    "start": "1856309",
    "end": "1861770"
  },
  {
    "text": "Siemens talk just now he was kind of saying well pure functions are kind of useless because you can't actually do",
    "start": "1861770",
    "end": "1867470"
  },
  {
    "text": "anything but if those pure functions are most of your application and then it's",
    "start": "1867470",
    "end": "1872690"
  },
  {
    "text": "hosted inside an imperative a couple of imperative things for doing that differential update then actually nearly",
    "start": "1872690",
    "end": "1880130"
  },
  {
    "text": "all of your program logic becomes pure pure functions so let me do actually",
    "start": "1880130",
    "end": "1886550"
  },
  {
    "text": "have another example of that I need to just check me find you okay I won't go",
    "start": "1886550",
    "end": "1893510"
  },
  {
    "text": "through but essentially you write your model in a functional way you write your model update in a functional way you write your view in a functional way and",
    "start": "1893510",
    "end": "1899660"
  },
  {
    "text": "then you give it all to the the host system whether it's Elm or fabulous or",
    "start": "1899660",
    "end": "1905600"
  },
  {
    "text": "fable or whichever system you're using and you can apply functional programming to the entire to both your server side",
    "start": "1905600",
    "end": "1911540"
  },
  {
    "text": "and your aunt your and to your client side a very powerful way of approaching",
    "start": "1911540",
    "end": "1916670"
  },
  {
    "text": "you is and I'm really if you're into functional and you do some web programming I really encourage you to",
    "start": "1916670",
    "end": "1922700"
  },
  {
    "text": "check out fable and and szostak which take this approach model view update approach I've also been take a pliant",
    "start": "1922700",
    "end": "1931340"
  },
  {
    "text": "approach to to xamarin development so you can use this kind of functional",
    "start": "1931340",
    "end": "1936650"
  },
  {
    "text": "approach to xamarin xamarin forms development through a system called fabulous so please check that out as",
    "start": "1936650",
    "end": "1943310"
  },
  {
    "text": "well there's just some examples of some apps built using fabulous this one",
    "start": "1943310",
    "end": "1948470"
  },
  {
    "text": "contacts one it's a great sample showing you how to do database access web requests and the like as well as",
    "start": "1948470",
    "end": "1955670"
  },
  {
    "text": "integrating with xamarin essentials and this one over here is showing you how you can integrate third-party components",
    "start": "1955670",
    "end": "1961940"
  },
  {
    "text": "for you know for 3d as well okay so the",
    "start": "1961940",
    "end": "1973700"
  },
  {
    "text": "the next one composition you'll see examples like this for composing the top",
    "start": "1973700",
    "end": "1979250"
  },
  {
    "text": "end of a program again each phase of this is in sort of entirely functional lexing parsing binding optimizing code",
    "start": "1979250",
    "end": "1987050"
  },
  {
    "text": "gen mapping another optimizing phase Ibaka in phase and then",
    "start": "1987050",
    "end": "1993780"
  },
  {
    "text": "finishing the compiler and it's the fact that the top-end composition of your program just ends up looking like",
    "start": "1993780",
    "end": "2000970"
  },
  {
    "text": "composition is is lovely and you see that in the quote from Bou Craig there",
    "start": "2000970",
    "end": "2006170"
  },
  {
    "text": "feels giddy people giddy smiles when people see it and I'd already mentioned",
    "start": "2006170",
    "end": "2015020"
  },
  {
    "text": "giraffe which takes a similar approach to composition for the top-end of web requests so you can see that it's",
    "start": "2015020",
    "end": "2022100"
  },
  {
    "text": "developed defining a web app and using this compositional dsl to choose to the different routes urls index login user",
    "start": "2022100",
    "end": "2029210"
  },
  {
    "text": "and so on and then the the the logout implementation up above so you can apply",
    "start": "2029210",
    "end": "2034760"
  },
  {
    "text": "that compositional approach both to the front end to the back end and to your things like your compilers and",
    "start": "2034760",
    "end": "2040670"
  },
  {
    "text": "transformers if you're writing okay if stuff kind of like but I've said that if",
    "start": "2040670",
    "end": "2046520"
  },
  {
    "text": "not all code is good code it better watch your time okay and sometimes",
    "start": "2046520",
    "end": "2058129"
  },
  {
    "text": "you'll see this kind of code now you know F sharp library doesn't come with these two functions but most functional",
    "start": "2058130",
    "end": "2064429"
  },
  {
    "text": "language implementations do and I left them out on purpose because they don't like them and you I've literally seen",
    "start": "2064429",
    "end": "2073148"
  },
  {
    "text": "people this these things take a curried version of the function or the thing",
    "start": "2073149",
    "end": "2078919"
  },
  {
    "text": "that takes the arguments sort of iteratively to one that takes the arguments is a tuple and you'll see that people sometimes define these functions",
    "start": "2078919",
    "end": "2085550"
  },
  {
    "text": "and do this kind of weird thing in dotnet when you can just write that okay and there's absolutely no point in in",
    "start": "2085550",
    "end": "2091908"
  },
  {
    "text": "doing that and I might also use something like uncarrier here and it's",
    "start": "2091909",
    "end": "2097070"
  },
  {
    "text": "two indecipherable far too often and you just write write things out explicitly about what what is happening and so",
    "start": "2097070",
    "end": "2103940"
  },
  {
    "text": "there's a there's a set of funk or e allure abstract kind of things in in",
    "start": "2103940",
    "end": "2109100"
  },
  {
    "text": "functional programming which we deliberately leave out of F sharp and if you working in teams where the the F",
    "start": "2109100",
    "end": "2114590"
  },
  {
    "text": "sharp guy or woman lady defines those functions and starts using them then",
    "start": "2114590",
    "end": "2120320"
  },
  {
    "text": "just say no we I don't think we should do that in this please we we don't we can't read your code when you write that sort of thing",
    "start": "2120320",
    "end": "2126420"
  },
  {
    "text": "so just just don't don't do it there's also a back pipe operator and F sharp",
    "start": "2126420",
    "end": "2132270"
  },
  {
    "text": "which actually leads to some really weird code like this kind of thing which",
    "start": "2132270",
    "end": "2137280"
  },
  {
    "text": "and I I mean just don't use it okay it doesn't help anyone I should never",
    "start": "2137280",
    "end": "2142349"
  },
  {
    "text": "have put it in all right I mean in a cage there are a couple of places you can use it it's okay but on the whole",
    "start": "2142349",
    "end": "2147900"
  },
  {
    "text": "it's just like just just don't just say no yeah so never ever use it and",
    "start": "2147900",
    "end": "2154260"
  },
  {
    "text": "especially don't use it in beginner code you're not doing anyone a favor and don't ever put these things on the same",
    "start": "2154260",
    "end": "2160829"
  },
  {
    "text": "line it looks like a TIE fighter from Star Wars on top and it's like just don't yeah",
    "start": "2160829",
    "end": "2166560"
  },
  {
    "text": "there are even these weird operators which you really please don't use ever",
    "start": "2166560",
    "end": "2172109"
  },
  {
    "text": "they should not have been included and they should be deprecated it once we",
    "start": "2172109",
    "end": "2177660"
  },
  {
    "text": "find a proper way to really deprecated things that Microsoft is happy with now",
    "start": "2177660",
    "end": "2182940"
  },
  {
    "text": "the next one is a point free code you'll often see people doing this add to 10",
    "start": "2182940",
    "end": "2188609"
  },
  {
    "text": "list map + 10 or times 2 plus 1 for double and increment just don't write",
    "start": "2188609",
    "end": "2193829"
  },
  {
    "text": "this sort of thing so just avoid this needless point free code and just write out the functions as",
    "start": "2193829",
    "end": "2199200"
  },
  {
    "text": "functions please not so so Eric's a pilot has a great line about this there",
    "start": "2199200",
    "end": "2205440"
  },
  {
    "text": "are rare cases where point 3 dear cells that are legible in the large and I actually did show you one of those",
    "start": "2205440",
    "end": "2211770"
  },
  {
    "text": "earlier in context of web programming but just adopting this approach it",
    "start": "2211770",
    "end": "2218130"
  },
  {
    "text": "carries a big burden of proof okay and you can say that to your people in your team you're saying look I'm looking at",
    "start": "2218130",
    "end": "2223650"
  },
  {
    "text": "that F sharp code you're writing you're trying to do point free kind of style and just so don't you know why what is",
    "start": "2223650",
    "end": "2230069"
  },
  {
    "text": "it really bringing value to this team and please this kid make your code clearer F sharp code can be extremely",
    "start": "2230069",
    "end": "2235440"
  },
  {
    "text": "clear and and you should write it like that and of course giving proper names",
    "start": "2235440",
    "end": "2240839"
  },
  {
    "text": "to things is part of that so you'll also see a lot of use of fold in some",
    "start": "2240839",
    "end": "2246980"
  },
  {
    "text": "functional programming languages now F sharp actually de-emphasizes folds a lot so instead you do the actual sum by max",
    "start": "2246980",
    "end": "2254819"
  },
  {
    "text": "player choose try pick map fold or reduce some specific more specific operation fold is like a blunt",
    "start": "2254819",
    "end": "2260870"
  },
  {
    "text": "instrument like a go-to in your code it's often extremely hard to understand what a fold is actually doing so if you",
    "start": "2260870",
    "end": "2269290"
  },
  {
    "text": "so so use these more specific operators please skip on there now I'm running a",
    "start": "2269290",
    "end": "2278270"
  },
  {
    "text": "little bit of time do i yeah I'm sure they're gonna call time with me I might go a couple of minutes over so okay just",
    "start": "2278270",
    "end": "2285680"
  },
  {
    "text": "to say records actually we'll skip the part of that records and talk about objects okay so if does support",
    "start": "2285680",
    "end": "2292940"
  },
  {
    "text": "object-oriented programming you have these inputs here and we have these objectives two internals here exported",
    "start": "2292940",
    "end": "2299840"
  },
  {
    "text": "properties and exported methods this is a fully functional object okay there's no actual state here it's effectively",
    "start": "2299840",
    "end": "2306560"
  },
  {
    "text": "just taking the imports getting some derived computation and then publishing those in various ways and these are the",
    "start": "2306560",
    "end": "2313610"
  },
  {
    "text": "core features that we have we have class types interface types and these object expressions so F sharp object oriented",
    "start": "2313610",
    "end": "2323360"
  },
  {
    "text": "programming can be used extremely well in this kind of way here's some part of some positive thing which is taking the",
    "start": "2323360",
    "end": "2330470"
  },
  {
    "text": "kernels and doing a whole lot of computations and then publishing them exactly what I showed before just in a little bit more richer a different kind",
    "start": "2330470",
    "end": "2336920"
  },
  {
    "text": "of setting functional computation encapsulated inside objects now the",
    "start": "2336920",
    "end": "2342200"
  },
  {
    "text": "problem with object-oriented programming and we this when we did the F sharp language design I remember sitting down",
    "start": "2342200",
    "end": "2347570"
  },
  {
    "text": "with Dominic Cooney who's from Australia from Brisbane who's an intern with me and we started to really kind of",
    "start": "2347570",
    "end": "2355180"
  },
  {
    "text": "deconstruct oo and I was is actually loads of different features right from",
    "start": "2355180",
    "end": "2360950"
  },
  {
    "text": "the dot notation all the way down to aspect or into programming or or other ideas that have come out of the",
    "start": "2360950",
    "end": "2366080"
  },
  {
    "text": "object-oriented community the question is what do you kind of do with all of these you really need them all and some",
    "start": "2366080",
    "end": "2372710"
  },
  {
    "text": "of these like I think calling time yeah I've got a whole 20 minutes Wow man",
    "start": "2372710",
    "end": "2379940"
  },
  {
    "text": "they're generous okay good then I can slow down so so some of these things what are they",
    "start": "2379940",
    "end": "2390020"
  },
  {
    "text": "all about all these ideas that have come from the object-oriented kind of tradition well some of them are about a",
    "start": "2390020",
    "end": "2398300"
  },
  {
    "text": "better API language some of them make a chef a better implementation language some of them are part of a new Interop",
    "start": "2398300",
    "end": "2404300"
  },
  {
    "text": "standard some of them we can just kind of adore so it's we we affect them",
    "start": "2404300",
    "end": "2413690"
  },
  {
    "text": "effectively kind of did that bit by bit we came to a stable characterization",
    "start": "2413690",
    "end": "2419750"
  },
  {
    "text": "where you're not going down the slippery slope in a sense you're not you can draw lines about object-oriented features and",
    "start": "2419750",
    "end": "2426680"
  },
  {
    "text": "these are the lines that I draw so let's run through these so the basic use of the dot notation is something that F sharp embraces you can go X dot length",
    "start": "2426680",
    "end": "2433430"
  },
  {
    "text": "now if you know other functional languages that's not always true rather for other functional languages but F",
    "start": "2433430",
    "end": "2439400"
  },
  {
    "text": "sharp is quite happy to say look I know what the type of X is I can work out what the length is what's being resolved",
    "start": "2439400",
    "end": "2444770"
  },
  {
    "text": "by dot length by that name and we can use the dot notation quite happily with a couple of type annotations and that of",
    "start": "2444770",
    "end": "2452210"
  },
  {
    "text": "course means we need to have instance members and methods and that is what I called type directive name resolution",
    "start": "2452210",
    "end": "2458260"
  },
  {
    "text": "and you've already seen this notion of implicit constructor that allows you to have the inputs to the object at the top",
    "start": "2458260",
    "end": "2464750"
  },
  {
    "text": "and then these let bindings and then these members and that that's a part of",
    "start": "2464750",
    "end": "2470300"
  },
  {
    "text": "the object-oriented tradition as well static members index and notation named",
    "start": "2470300",
    "end": "2476060"
  },
  {
    "text": "arguments optional arguments interface types and implementations now all of these things are fit absolutely fine in",
    "start": "2476060",
    "end": "2483200"
  },
  {
    "text": "the context of functional object-oriented programming you could you put all of these things into a Haskell and it would just work",
    "start": "2483200",
    "end": "2489110"
  },
  {
    "text": "absolutely just fine so we can absolutely embrace these as",
    "start": "2489110",
    "end": "2494510"
  },
  {
    "text": "part of functional programming and it's an important a lot of micro decisions are made in F sharp to make these things",
    "start": "2494510",
    "end": "2501110"
  },
  {
    "text": "work very well while also keeping the core goodness of functional programming",
    "start": "2501110",
    "end": "2506500"
  },
  {
    "text": "there is a range of things that are exceptionally useful in practice but you",
    "start": "2506500",
    "end": "2511820"
  },
  {
    "text": "need to be a little bit cautious about how you you use them in F sharp but you learn to",
    "start": "2511820",
    "end": "2516920"
  },
  {
    "text": "use them tastefully there's the whole idea that you can actually mutate data in F sharp you can do side effects it is",
    "start": "2516920",
    "end": "2523309"
  },
  {
    "text": "an imperative language but with a functional first kind of emphasis then",
    "start": "2523309",
    "end": "2528589"
  },
  {
    "text": "you can find operators order properties you can implement these standards like a disposable ienumerable into type",
    "start": "2528589",
    "end": "2534559"
  },
  {
    "text": "extensions don't note things like events trucks delegates in arms and typecasting",
    "start": "2534559",
    "end": "2540099"
  },
  {
    "text": "so we use those where necessary use them kind of respectfully sparingly there's",
    "start": "2540099",
    "end": "2546049"
  },
  {
    "text": "kind of got to be rationale for using those things and then there's sort of set of things which F sharp F sharp",
    "start": "2546049",
    "end": "2553279"
  },
  {
    "text": "programming really D emphasizes and probably the most important one for the c-sharp programmers to know about is",
    "start": "2553279",
    "end": "2559339"
  },
  {
    "text": "that F sharp really D emphasizes of the use of large type hierarchies now a",
    "start": "2559339",
    "end": "2564470"
  },
  {
    "text": "c-sharp has already de-emphasized that compared to Java okay one of the great things that C shoppers did I think was",
    "start": "2564470",
    "end": "2570769"
  },
  {
    "text": "to say we don't need to just you know hierarchically classify our animals cats",
    "start": "2570769",
    "end": "2576319"
  },
  {
    "text": "and dogs and everything into in all the way through our code this is like once",
    "start": "2576319",
    "end": "2582529"
  },
  {
    "text": "you give programmers a tool to do hierarchical classification it's like they go crazy they just start",
    "start": "2582529",
    "end": "2588880"
  },
  {
    "text": "classifying everything's and that's where you get that abstract class factory being whatever sort of things",
    "start": "2588880",
    "end": "2593930"
  },
  {
    "text": "you see in Java and it's it's like some part of the human psychology or something that once we once we can",
    "start": "2593930",
    "end": "2600230"
  },
  {
    "text": "classify things we just love to love to do it it's like so so f sharp doesn't do",
    "start": "2600230",
    "end": "2606680"
  },
  {
    "text": "that we have very small type hierarchies in F sharp you can see from some of the",
    "start": "2606680",
    "end": "2612980"
  },
  {
    "text": "language constructs I've shown before that you can do domain modeling without defining zillions of types to just",
    "start": "2612980",
    "end": "2618440"
  },
  {
    "text": "define one one type with all the different cases so so large type",
    "start": "2618440",
    "end": "2625279"
  },
  {
    "text": "hierarchies are not a big thing and that also means we massively de-emphasize implementation inheritance you can",
    "start": "2625279",
    "end": "2633319"
  },
  {
    "text": "occasionally do it for performance reasons or for some kind of modeling reasons often in the core of a library",
    "start": "2633319",
    "end": "2640809"
  },
  {
    "text": "but on the whole we don't do it sort of hidden away but we don't do implementation inheritance you share",
    "start": "2640809",
    "end": "2647869"
  },
  {
    "text": "is a much F sharp object oriented programming has a much stronger emphasis on dela on delegation then",
    "start": "2647869",
    "end": "2654819"
  },
  {
    "text": "implementation inheritance for sharing and it's really important to understand",
    "start": "2654819",
    "end": "2663650"
  },
  {
    "text": "that what problems implementation and inheritance caused and the thing about",
    "start": "2663650",
    "end": "2670910"
  },
  {
    "text": "implementation inheritance is you're always taking something that's already complex and making it more complex okay",
    "start": "2670910",
    "end": "2676759"
  },
  {
    "text": "and that's like that's the that's the nature of it you and you can't hide that",
    "start": "2676759",
    "end": "2684230"
  },
  {
    "text": "complexity way like you can with delegation so please delegate don't use implementation inheritance it Knowles an",
    "start": "2684230",
    "end": "2691549"
  },
  {
    "text": "objective field of and a really heavy use of method overloading is also sort",
    "start": "2691549",
    "end": "2697009"
  },
  {
    "text": "of that's down the object rabbit hole and we don't go there very often in F sharp and we have to have exceptionally",
    "start": "2697009",
    "end": "2703789"
  },
  {
    "text": "good reason to do it then we have a set of things which we don't support at all",
    "start": "2703789",
    "end": "2711970"
  },
  {
    "text": "technical things curried method overloads self-types wildcard types aspect to our into programming or",
    "start": "2711970",
    "end": "2718220"
  },
  {
    "text": "whatever and you can just they're not supported so roughly speaking you'll of the first set please you tolerate the",
    "start": "2718220",
    "end": "2724670"
  },
  {
    "text": "second set you mostly avoid the second third set and you absolutely forget all",
    "start": "2724670",
    "end": "2730400"
  },
  {
    "text": "about the fourth set and the difference there is really between object",
    "start": "2730400",
    "end": "2736940"
  },
  {
    "text": "programming and object oriented programming F sharp absolutely supports",
    "start": "2736940",
    "end": "2742700"
  },
  {
    "text": "object programming inspire you can see from this that if the first set and to some extent the second set what object",
    "start": "2742700",
    "end": "2749239"
  },
  {
    "text": "programming is about there's a major part of the F sharp methodology and you and you have to be good at object",
    "start": "2749239",
    "end": "2754700"
  },
  {
    "text": "programming to be a good F sharp programmer but we don't we don't really embrace object-oriented programming we",
    "start": "2754700",
    "end": "2761569"
  },
  {
    "text": "support object program but we support sequence programming as well is it support async programming there's many different kind of computational",
    "start": "2761569",
    "end": "2767450"
  },
  {
    "text": "structures that all flow together and work nicely in in in F sharp and that doesn't mean you have to obsessively",
    "start": "2767450",
    "end": "2774079"
  },
  {
    "text": "think about classification and object orientation for every part of your code so what's the difference",
    "start": "2774079",
    "end": "2780140"
  },
  {
    "text": "object programming focuses on these things encoding notational convenience API",
    "start": "2780140",
    "end": "2785710"
  },
  {
    "text": "organ omits yeah we loved the dotnet design guidelines they're they're great now and we should you you should know",
    "start": "2785710",
    "end": "2792100"
  },
  {
    "text": "them and learn them as an f-sharp programmer good naming practical and capsulation small composable",
    "start": "2792100",
    "end": "2798610"
  },
  {
    "text": "abstractions and this thing at the bottom making simple things out of potentially complex foundations that's",
    "start": "2798610",
    "end": "2805540"
  },
  {
    "text": "absolutely key object-oriented programming a next extreme is sort of",
    "start": "2805540",
    "end": "2810820"
  },
  {
    "text": "this sort of dogmas you know everything's an object",
    "start": "2810820",
    "end": "2816700"
  },
  {
    "text": "we must hire it's the sort of page pages one to ten of the object or at a",
    "start": "2816700",
    "end": "2821710"
  },
  {
    "text": "programming book okay hierarchical classification is at the center of how we think large abstractions are often",
    "start": "2821710",
    "end": "2828340"
  },
  {
    "text": "with many many holes and nulls and failure points and exceptions and under under lamented methods and tends to",
    "start": "2828340",
    "end": "2836740"
  },
  {
    "text": "focus on declarations not expressions and composition through hierarchies and",
    "start": "2836740",
    "end": "2842980"
  },
  {
    "text": "you can this is not what we're F sharp lands this is what we this is where we land embrace object programming and make",
    "start": "2842980",
    "end": "2853420"
  },
  {
    "text": "it fit with a expression oriented typed functional programming paradigm okay so",
    "start": "2853420",
    "end": "2863200"
  },
  {
    "text": "just to say there's some other really magical parts of F sharp one of them is is type providers I showed you an",
    "start": "2863200",
    "end": "2870580"
  },
  {
    "text": "example of this earlier I'll flick back to it rather than trying to load up a web browser that probably won't connect",
    "start": "2870580",
    "end": "2877620"
  },
  {
    "text": "it was in here so the first use to this is that the is HTML provider and this is",
    "start": "2877620",
    "end": "2885010"
  },
  {
    "text": "one of the most magically and under unknown parts of the F sharp magic and",
    "start": "2885010",
    "end": "2890590"
  },
  {
    "text": "this is where you can point the an F sharp type provider at a URL and it will",
    "start": "2890590",
    "end": "2896290"
  },
  {
    "text": "do analysis of the data on that and schema on that on that URL and then give",
    "start": "2896290",
    "end": "2901960"
  },
  {
    "text": "you the contents of that back in a strongly typed way without any more code so you can see the tables dot version",
    "start": "2901960",
    "end": "2907330"
  },
  {
    "text": "history is extracting one of the tables out of that out of that URL",
    "start": "2907330",
    "end": "2913090"
  },
  {
    "text": "and then you get strong completion and typing into our dot minor version and if you look at that actual webpage you'll",
    "start": "2913090",
    "end": "2918610"
  },
  {
    "text": "see that it's table has a column heading called minor version and so you're actually doing sort of where screen",
    "start": "2918610",
    "end": "2924460"
  },
  {
    "text": "scraping strongly type screen scraping without ever because we've got this",
    "start": "2924460",
    "end": "2929560"
  },
  {
    "text": "typewriter that is doing the schemer analysis on that page at compile time to allow us to do strongly typed",
    "start": "2929560",
    "end": "2936340"
  },
  {
    "text": "programming against it you can also snapshot a page is the sample schema for that it's also type",
    "start": "2936340",
    "end": "2943390"
  },
  {
    "text": "providers for CSV and for Jason and many and for databases and men for as vo",
    "start": "2943390",
    "end": "2951490"
  },
  {
    "text": "table storage as a storage type provider you can disappoint your pointer of data",
    "start": "2951490",
    "end": "2958630"
  },
  {
    "text": "script directly at your as your as a storage and you get a strongly typed access through to everything on those",
    "start": "2958630",
    "end": "2967080"
  },
  {
    "text": "everything that you can access through that okay so it's giving forward again sorry okay now if chef has another",
    "start": "2967080",
    "end": "2980260"
  },
  {
    "text": "feature called computation expressions so and you'll sometimes in functional",
    "start": "2980260",
    "end": "2985450"
  },
  {
    "text": "languages you'll see this kind of code and this is not good FF code it's like list.com cat entities this filter list",
    "start": "2985450",
    "end": "2992470"
  },
  {
    "text": "filter filter collect cons filter filter filter and so on all to make a list and",
    "start": "2992470",
    "end": "3001070"
  },
  {
    "text": "butter shop has a language feature that makes that code much more clear and it",
    "start": "3001070",
    "end": "3008910"
  },
  {
    "text": "allows you to write it out using for loops it's all functional it's a functional translation underneath but",
    "start": "3008910",
    "end": "3016190"
  },
  {
    "text": "you'll you know for ian's entities yield that one for these generic parameters if",
    "start": "3016190",
    "end": "3021630"
  },
  {
    "text": "that yield that and you can see how much clearer that code is even though it's actually logically equivalent to that",
    "start": "3021630",
    "end": "3026700"
  },
  {
    "text": "code before so this is called a computation expression so it's a list expression where you're computing a list",
    "start": "3026700",
    "end": "3032640"
  },
  {
    "text": "as you go it's a bit like c-sharp enumerators enumerator methods but you",
    "start": "3032640",
    "end": "3039120"
  },
  {
    "text": "can use it into the expression like this in any expression form and you can use it to create arrays",
    "start": "3039120",
    "end": "3044540"
  },
  {
    "text": "and on-demand sequences and and other other structures so the same feature is",
    "start": "3044540",
    "end": "3054830"
  },
  {
    "text": "used for async code so you'll see here you know the server is async this the",
    "start": "3054830",
    "end": "3061520"
  },
  {
    "text": "client is I think that the browser is async this with some sort of sleep in there and then we put those in parallel",
    "start": "3061520",
    "end": "3068600"
  },
  {
    "text": "and we we run those things and so these act like tasks now I think is the lovely",
    "start": "3068600",
    "end": "3075140"
  },
  {
    "text": "programming paradigm and one of the great things is a cancellation tokens flow implicit through implicitly",
    "start": "3075140",
    "end": "3080870"
  },
  {
    "text": "throughout this whole program but it does have if not as performant as tasks",
    "start": "3080870",
    "end": "3087230"
  },
  {
    "text": "and in F sharp 5.0 we're going to be putting in native support for tasks curly using a similar using F sharp",
    "start": "3087230",
    "end": "3094550"
  },
  {
    "text": "computation expressions as well and one of the amazing things about F sharp of computational expressions is we've been",
    "start": "3094550",
    "end": "3099620"
  },
  {
    "text": "able to do so many things with them and yet all you know very the async tasks",
    "start": "3099620",
    "end": "3105920"
  },
  {
    "text": "the computations I've shown before sequences async sequences things that they're putting in one by one into",
    "start": "3105920",
    "end": "3111890"
  },
  {
    "text": "c-sharp we kind of get them all for free from this more general kind of mechanism and we're we're getting the performance",
    "start": "3111890",
    "end": "3119540"
  },
  {
    "text": "side of things for tasks sorted out to be on par with c-sharp tasks in the next",
    "start": "3119540",
    "end": "3125420"
  },
  {
    "text": "version of F sharp so you can do icing sequences for example it's in a library you know acing sequence with the sleep",
    "start": "3125420",
    "end": "3132410"
  },
  {
    "text": "and yield and sleep and yield and and similarly yield this while true take",
    "start": "3132410",
    "end": "3139310"
  },
  {
    "text": "asleep and and yield another date first for an it for for a stream of dates and",
    "start": "3139310",
    "end": "3146000"
  },
  {
    "text": "that library is after I've controlled on acing C but there are many other examples of F sharp computation",
    "start": "3146000",
    "end": "3152090"
  },
  {
    "text": "expressions they're used to all sorts of interesting interesting things okay so",
    "start": "3152090",
    "end": "3157340"
  },
  {
    "text": "just to finish off if good F sharp practice it's it's not about functional",
    "start": "3157340",
    "end": "3165260"
  },
  {
    "text": "obscurity it's about writing great clear coded code that could be debugged commented tested that his profile its",
    "start": "3165260",
    "end": "3173060"
  },
  {
    "text": "profile is performant under CI and it is readable we fully embraced",
    "start": "3173060",
    "end": "3178220"
  },
  {
    "text": "software these all these aspects of software engineering methodology and don't ever let people think that it's",
    "start": "3178220",
    "end": "3185090"
  },
  {
    "text": "about just about sort of approach and it's about writing obscure code it's the",
    "start": "3185090",
    "end": "3190130"
  },
  {
    "text": "opposite it's about writing crystal-clear code that conveys the intent and lets you focus on your domain rather than on the on the details of",
    "start": "3190130",
    "end": "3197599"
  },
  {
    "text": "programming okay so I will I'll close there if Java emphasizes clear code to",
    "start": "3197599",
    "end": "3205670"
  },
  {
    "text": "solve real-world problems absolutely the sender of the F sharp code I love it's always been our",
    "start": "3205670",
    "end": "3211340"
  },
  {
    "text": "description of F sharp clear succinct code to solve real world problems not",
    "start": "3211340",
    "end": "3217609"
  },
  {
    "text": "all functional code is good code not all object-oriented code is good code and",
    "start": "3217609",
    "end": "3222890"
  },
  {
    "text": "object programming is different to object-oriented programming and thank",
    "start": "3222890",
    "end": "3228109"
  },
  {
    "text": "you very much and yeah I guess we've got time for some requests for some questions thank you [Applause]",
    "start": "3228109",
    "end": "3238000"
  },
  {
    "text": "time for questions or do we don't not taking questions in the talk we can take a couple of couple of questions maybe",
    "start": "3238000",
    "end": "3243670"
  },
  {
    "text": "anyway yeah",
    "start": "3243670",
    "end": "3251020"
  },
  {
    "text": "yep oh okay so the f-sharp invented to",
    "start": "3253170",
    "end": "3267310"
  },
  {
    "text": "some extent there's a long history towed the idea of racing programming but it essentially invented the idea or that to",
    "start": "3267310",
    "end": "3275800"
  },
  {
    "text": "turn code into async code you just had to put async early around your code or the c-sharp equivalent of those just put",
    "start": "3275800",
    "end": "3281290"
  },
  {
    "text": "a weight into your code and it becomes a sink now F sharp made that invention and",
    "start": "3281290",
    "end": "3287740"
  },
  {
    "text": "delivered it as part of F sharp in his first version and then the C sharp team put in its version of of async in terms",
    "start": "3287740",
    "end": "3296290"
  },
  {
    "text": "of tasks okay and then the rest of the world has gone on to add a a single task",
    "start": "3296290",
    "end": "3302080"
  },
  {
    "text": "support into the various languages now",
    "start": "3302080",
    "end": "3307230"
  },
  {
    "text": "the F sharp approach does do is really very nice to encourage you to look at",
    "start": "3307230",
    "end": "3313570"
  },
  {
    "text": "the paper called the F sharp asynchronous programming model and it it and also Thomas Thomas Patrick's",
    "start": "3313570",
    "end": "3320650"
  },
  {
    "text": "material on on the differences between the F sharp and C sharp systems a key",
    "start": "3320650",
    "end": "3326950"
  },
  {
    "text": "thing in the F sharp is that in the F sharp system is that the cancellation tokens are propagated implicitly okay so",
    "start": "3326950",
    "end": "3334600"
  },
  {
    "text": "you don't have in C sharp you'll always be facing is very nice but you'll always",
    "start": "3334600",
    "end": "3339790"
  },
  {
    "text": "see it's explicit plumbing of this cancellation tokens all the way through it's done implicitly you can't you means",
    "start": "3339790",
    "end": "3345940"
  },
  {
    "text": "it's a whole range of mistakes you can't make with regard to cancellation that does come up with with a performance",
    "start": "3345940",
    "end": "3351730"
  },
  {
    "text": "cost in that there's a there's a there's a two-stage process for activating an",
    "start": "3351730",
    "end": "3357670"
  },
  {
    "text": "f-sharp async you compose them and then activate them and it just means that you can't quite get the same level of",
    "start": "3357670",
    "end": "3364630"
  },
  {
    "text": "performance as you can with tasks so in practice we do need tasks support and",
    "start": "3364630",
    "end": "3370990"
  },
  {
    "text": "they are different types for they interoperate very seamlessly casing to task and a single from task and so I",
    "start": "3370990",
    "end": "3377290"
  },
  {
    "text": "think the best resolution to that is this put it straight into the F shell language into the compiler and make sure",
    "start": "3377290",
    "end": "3382660"
  },
  {
    "text": "we get the same performance characteristics as a sous-chef code and I've been working a lot of that lately it will be a jitter more general",
    "start": "3382660",
    "end": "3389650"
  },
  {
    "text": "mechanism we'll make sure it works for face for task sequences as well state machine compilation of those and also",
    "start": "3389650",
    "end": "3397109"
  },
  {
    "text": "user-defined computational structures tasks like things which can benefit from",
    "start": "3397109",
    "end": "3403000"
  },
  {
    "text": "so I've always state machine or resumable code okay so another question",
    "start": "3403000",
    "end": "3409590"
  },
  {
    "text": "anyone else okay I think we're done min",
    "start": "3409590",
    "end": "3415300"
  },
  {
    "text": "thank you very much [Applause]",
    "start": "3415300",
    "end": "3420058"
  }
]