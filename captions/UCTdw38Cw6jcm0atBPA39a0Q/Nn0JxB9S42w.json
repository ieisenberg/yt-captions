[
  {
    "text": "so hello welcome to the session on service mesh we might be in the smallest room but we filled it so thank you my",
    "start": "6580",
    "end": "14990"
  },
  {
    "text": "name is Rob Crowley I'm a principal consultant for ratify previous to that I was the technical lead for API is an",
    "start": "14990",
    "end": "22100"
  },
  {
    "text": "authentication at bankwest so the vast amount of my career has been designing",
    "start": "22100",
    "end": "27410"
  },
  {
    "text": "and building distributed systems so this is a topic that's very close to my heart so we're gonna start with a bit of a pop",
    "start": "27410",
    "end": "33859"
  },
  {
    "text": "quiz so who has heard of the service mesh pattern this is good probably a bit more",
    "start": "33859",
    "end": "41059"
  },
  {
    "text": "of a tricky question though is anyone running a service machine production",
    "start": "41059",
    "end": "47949"
  },
  {
    "text": "excellent that's the first time I've seen a hand awesome but that's cool for",
    "start": "47949",
    "end": "55339"
  },
  {
    "text": "the rest of us that's why we're here so we're here to learn a little bit more about the pattern but I don't want you",
    "start": "55339",
    "end": "61159"
  },
  {
    "text": "to just come today and get an idea about this was some cool piece of tech but not really be sure how to apply it to your",
    "start": "61159",
    "end": "67640"
  },
  {
    "text": "context so what we want to do today is have an understanding about why is the service mesh even a thing what category",
    "start": "67640",
    "end": "74030"
  },
  {
    "text": "of problems does it help address and also they can give you the understanding to be able to take a back to your",
    "start": "74030",
    "end": "80350"
  },
  {
    "text": "organization's and say yes this is something that can help and in what context we're then going to contrast",
    "start": "80350",
    "end": "86660"
  },
  {
    "text": "service meshes to other patterns of practices that we had over the years so",
    "start": "86660",
    "end": "91970"
  },
  {
    "text": "API gateways and a good ol friend the Interphone service bar so we've got to see how the certain similarities between",
    "start": "91970",
    "end": "97880"
  },
  {
    "text": "these but also the differences and sort of the same end goal but achieved a",
    "start": "97880",
    "end": "103910"
  },
  {
    "text": "different way technology is all well and good but what really excites me is the",
    "start": "103910",
    "end": "109520"
  },
  {
    "text": "things that I've enabled us to do how does it change the way we can do our work so what we're going to look at then is how service measures can give access",
    "start": "109520",
    "end": "117650"
  },
  {
    "text": "to a whole host of really advanced capabilities that were previously rement of tech luminaries like Google alone but",
    "start": "117650",
    "end": "124940"
  },
  {
    "text": "now actually brings a lot of these capabilities within the reach of mere mortals most of all I would love to",
    "start": "124940",
    "end": "131690"
  },
  {
    "text": "start a conversation or continue a conversation about service measures in a city technical unity and realistically we only have an",
    "start": "131690",
    "end": "140700"
  },
  {
    "text": "hour together so disclaimer I will not be able to turn every single person in",
    "start": "140700",
    "end": "146100"
  },
  {
    "text": "this room into an expert in that time boss boss if I can inspire you just enough to go",
    "start": "146100",
    "end": "153930"
  },
  {
    "text": "and learn more about this when you leave that would be an amazing outcome for me",
    "start": "153930",
    "end": "159710"
  },
  {
    "text": "so a very smart person once told me that every good presentation should have a",
    "start": "159710",
    "end": "166590"
  },
  {
    "text": "story and so this presentation has a story too and it's a love story it's a",
    "start": "166590",
    "end": "173400"
  },
  {
    "text": "love story of wood service a met service B and this is back in the 1950s these",
    "start": "173400",
    "end": "179730"
  },
  {
    "text": "are baby boomer services and they're both deployed on the same host and they talk every day and because they're on",
    "start": "179730",
    "end": "185730"
  },
  {
    "text": "the same machine it's amazing this conversations happening it's very reliable they're having an absolute",
    "start": "185730",
    "end": "191400"
  },
  {
    "text": "wonderful time but good they've never last do they as part of a digital",
    "start": "191400",
    "end": "198210"
  },
  {
    "text": "transformation service B is REE hosted suddenly all of these conversations that",
    "start": "198210",
    "end": "204030"
  },
  {
    "text": "they could have before it's not cross process they're on different machines how will this love story end you ask",
    "start": "204030",
    "end": "210860"
  },
  {
    "text": "that's okay distributed computing is easy isn't it it's not gonna be that hard you know this will be okay no",
    "start": "210860",
    "end": "222319"
  },
  {
    "text": "long-distance relationships are tough so first of all before service I could just",
    "start": "222770",
    "end": "228300"
  },
  {
    "text": "call service B I'm gonna respond sir instantly now suddenly it's having to write these love letters and it sends",
    "start": "228300",
    "end": "235500"
  },
  {
    "text": "them in the post it doesn't get a reply then what you do DC needy G's just keep sending the letters no we're not we're",
    "start": "235500",
    "end": "243150"
  },
  {
    "text": "gonna like hold back a bit I will definitely reply at some point but there's suddenly all this doubt right",
    "start": "243150",
    "end": "248310"
  },
  {
    "text": "and at the same time because these are no two separate systems the ability for a tip pen his love letters and send them",
    "start": "248310",
    "end": "255209"
  },
  {
    "text": "across its completely divorced from the ability of the other service to consumers so again we could have this",
    "start": "255209",
    "end": "263160"
  },
  {
    "text": "amount of traffic downstream without the other service being able to consume it and the packet loss happens potential",
    "start": "263160",
    "end": "269550"
  },
  {
    "text": "degradation of you services as well so all this reliable ability that we took for granted we were",
    "start": "269550",
    "end": "275020"
  },
  {
    "text": "running in process suddenly evaporates and back in the",
    "start": "275020",
    "end": "280030"
  },
  {
    "text": "1990s Peter Dutch and a number of his collaborators at Sud highlighted exactly",
    "start": "280030",
    "end": "287650"
  },
  {
    "text": "some of these problems we named them the eight fallacies of distributive computing and by naming them as fallacies it makes us take account of",
    "start": "287650",
    "end": "295419"
  },
  {
    "text": "them so these are things such as the network it is not reliable you know so",
    "start": "295419",
    "end": "300520"
  },
  {
    "text": "the network you know we assume done of these when we're running in process but it's not so we have to take account for",
    "start": "300520",
    "end": "305560"
  },
  {
    "text": "that latency is not zero there's a delay speed of light 300,000 kilometers per",
    "start": "305560",
    "end": "311320"
  },
  {
    "text": "second but that's not instant that's still 50 milliseconds latency between Perth where I work and live and Sydney",
    "start": "311320",
    "end": "316720"
  },
  {
    "text": "that's even on them exited network if you take you to cut all the other hops and routers then that's get delayed",
    "start": "316720",
    "end": "322060"
  },
  {
    "text": "again so we have all these other problems that we didn't have to face in",
    "start": "322060",
    "end": "327490"
  },
  {
    "text": "these more basic computing models and let's see what actually happens so what",
    "start": "327490",
    "end": "333850"
  },
  {
    "text": "a previously alluded to was flow control so flow control is the ability for one",
    "start": "333850",
    "end": "339460"
  },
  {
    "text": "service to detect the amount of traffic that it's sending downstream and then modify the amount it sends such as it",
    "start": "339460",
    "end": "345100"
  },
  {
    "text": "doesn't overload the downstream service and again we're back in the 1950s so you",
    "start": "345100",
    "end": "350890"
  },
  {
    "text": "know back at this time when computers were relatively rare it was the application developers ourselves that would have had to solve",
    "start": "350890",
    "end": "357039"
  },
  {
    "text": "this problem so within the business logical buy service I would suddenly have to account for did the message ever",
    "start": "357039",
    "end": "363460"
  },
  {
    "text": "arrive do I have to buffer it to then send downstream again what if I said it twice what have I said that out of order",
    "start": "363460",
    "end": "369240"
  },
  {
    "text": "all of this reliable delivery concerned again was part of the services themselves and even with this warm flow",
    "start": "369240",
    "end": "377050"
  },
  {
    "text": "control example was suddenly kind of thinking oh my goodness this relationship is doomed whoa this distributed computing thing is",
    "start": "377050",
    "end": "383950"
  },
  {
    "text": "just a little bit higher than we might have initially suspected but there's more so again in three broad categories",
    "start": "383950",
    "end": "391930"
  },
  {
    "text": "of reliability observability and traffic management these are just umbrella terms",
    "start": "391930",
    "end": "397479"
  },
  {
    "text": "that they in themselves hold a huge amount of nuances so with traffic management we have",
    "start": "397479",
    "end": "403260"
  },
  {
    "text": "little balancing how do i distribute my trophy across all of the nodes of availability pool but maybe that's not",
    "start": "403260",
    "end": "410070"
  },
  {
    "text": "good enough maybe you need to have latency aware low balancing such that you can route your traffic to the nose who can best respond in a timely fashion",
    "start": "410070",
    "end": "417170"
  },
  {
    "text": "remember we're not all living in what data said ready board we have service discovery so again maybe DNS would have",
    "start": "417170",
    "end": "423870"
  },
  {
    "text": "been sufficient before but though we have systems that are spread geographically we have to do what multiple environments we want to do",
    "start": "423870",
    "end": "430500"
  },
  {
    "text": "advanced things like canary releases suddenly DNS is a sufficient anymore we have access control so who can actually",
    "start": "430500",
    "end": "437190"
  },
  {
    "text": "call this message who is it for we then have concerns around per request routing",
    "start": "437190",
    "end": "443520"
  },
  {
    "text": "so do we want to apply any overrides there do we want to you know chaos engineering so inject false so do we",
    "start": "443520",
    "end": "449670"
  },
  {
    "text": "want to shadow traffic a lot of concerns before that you will be starting in to",
    "start": "449670",
    "end": "455250"
  },
  {
    "text": "traffic management this quite a bit there and observability so a characteristic of our systems to see how",
    "start": "455250",
    "end": "460740"
  },
  {
    "text": "well we can understand this operation and production and we want to know things like success rates latency log so",
    "start": "460740",
    "end": "467400"
  },
  {
    "text": "again remember we're looking to do latency aware low balancing requests volumes and that's just individual",
    "start": "467400",
    "end": "474780"
  },
  {
    "text": "requests at the same time we might want to paint a picture of a business transaction that spans multiple systems so you might have heard of open tracing",
    "start": "474780",
    "end": "481410"
  },
  {
    "text": "and Zipkin these are all things as well where we want to get the health of a business flow throughout our myriad",
    "start": "481410",
    "end": "487740"
  },
  {
    "text": "services and then reliability our good old friends the health checks circuit",
    "start": "487740",
    "end": "493500"
  },
  {
    "text": "breakers as defined by Michael Nagai than is in his book release it so again to prevent cascading failure across your",
    "start": "493500",
    "end": "499350"
  },
  {
    "text": "network retry policies so again in this love letter if I get a return to sender is it safe to send it again because",
    "start": "499350",
    "end": "506130"
  },
  {
    "text": "we're all building idempotent services rod timeouts are good or friendly distributed systems so how do we make",
    "start": "506130",
    "end": "512669"
  },
  {
    "text": "sure that our timeouts are generous enough such that valid traffic doesn't get rejected but at the same time tight",
    "start": "512669",
    "end": "520110"
  },
  {
    "text": "enough so you're not risking resource consumption and again causing reliability issues across the network so",
    "start": "520110",
    "end": "527820"
  },
  {
    "text": "what first started reading through these I have wow this distributed computing thing is a lot harder than we thought",
    "start": "527820",
    "end": "536400"
  },
  {
    "text": "but well there's will there's a way and how do we make long-distance relationships work",
    "start": "536400",
    "end": "542570"
  },
  {
    "text": "so with flow control what happened is this went away from being the domain of",
    "start": "542570",
    "end": "550290"
  },
  {
    "text": "the application developer and rather we've pushed that down into the network layer so no longer is a business logic",
    "start": "550290",
    "end": "557430"
  },
  {
    "text": "cluttered with these reliability concerns but now we can just again we",
    "start": "557430",
    "end": "563070"
  },
  {
    "text": "take this for granted today we call this TCP like we're standing on the shoulders of giants until a BT mentioned it",
    "start": "563070",
    "end": "568530"
  },
  {
    "text": "through the keynotes as well installed by Thunder which was a bit unfortunate but this is absolutely amazing because",
    "start": "568530",
    "end": "574890"
  },
  {
    "text": "one that lets us do is all of this concern about traffic routes that it just happens it's guaranteed delivery",
    "start": "574890",
    "end": "581370"
  },
  {
    "text": "it's in order you get acknowledgment somebody sends from there but we don't have to worry about it and I can look at",
    "start": "581370",
    "end": "588480"
  },
  {
    "text": "TCP and how it plays into that network layer so again at the physical layer",
    "start": "588480",
    "end": "593640"
  },
  {
    "text": "we're just dealing with raw bytes going across the wire so at the data link layer is then reliable communication or",
    "start": "593640",
    "end": "600710"
  },
  {
    "text": "transmission of packets data frames between two computers at the IP level we",
    "start": "600710",
    "end": "606390"
  },
  {
    "text": "have ipv4 and ipv6 this is how we do routing so addressing so when you put it in how do I actually know where the",
    "start": "606390",
    "end": "612330"
  },
  {
    "text": "traffic's gonna get sent there that therefore we have transport so this is",
    "start": "612330",
    "end": "618960"
  },
  {
    "text": "again where TCP lives this is the guaranteed delivery moving up we have we",
    "start": "618960",
    "end": "623970"
  },
  {
    "text": "have sessions so again rather you know you can say TLS lives there you can possibly say it lives it across a number",
    "start": "623970",
    "end": "630540"
  },
  {
    "text": "of other layers as well and this is also where WebSockets would live so there's nothing magical about WebSockets they're",
    "start": "630540",
    "end": "635700"
  },
  {
    "text": "just TCP running within a browser security context and then up here up at their seven this is where we do at the",
    "start": "635700",
    "end": "643560"
  },
  {
    "text": "vast amount of our program we just say HDB Clyde dot send and it happens",
    "start": "643560",
    "end": "648690"
  },
  {
    "text": "magically but there is all this engineering that happens under the hood",
    "start": "648690",
    "end": "653780"
  },
  {
    "text": "and this is just one example of how we solved for flow control but history ever",
    "start": "653780",
    "end": "658860"
  },
  {
    "text": "has a habit of repeating itself and again the system that we're building today are a lot more complicated but",
    "start": "658860",
    "end": "665790"
  },
  {
    "text": "even with these advanced capabilities that we need to support these systems what were you getting want to do is",
    "start": "665790",
    "end": "670920"
  },
  {
    "text": "abstract them away from the application developers themselves so we could focus on business logic and this is where we",
    "start": "670920",
    "end": "678269"
  },
  {
    "text": "came up with a stellar idea of an enterprise service bus and these are",
    "start": "678269",
    "end": "683579"
  },
  {
    "text": "actually a great idea at the time so again we can have all these different services some of them could be AMQP so",
    "start": "683579",
    "end": "689610"
  },
  {
    "text": "that could be soap maybe some forward JSON of HTTP one might even be a rest",
    "start": "689610",
    "end": "696089"
  },
  {
    "text": "service through those and then each of these services will have an adapter and then what we could do is we we would",
    "start": "696089",
    "end": "702509"
  },
  {
    "text": "then have reliable delivery aren't any transformations of business logic applied in the advice service boss and",
    "start": "702509",
    "end": "708920"
  },
  {
    "text": "this actually seems like a great model so again we have all this interconnection between our services but again there's always trade-offs so what",
    "start": "708920",
    "end": "717720"
  },
  {
    "text": "are the companies that worked for ade London I was parent of an integration team we were rock stairs first 50",
    "start": "717720",
    "end": "724499"
  },
  {
    "text": "integrations we were smashing about we had all these different services and you know we were absolutely amazing at it",
    "start": "724499",
    "end": "729989"
  },
  {
    "text": "and so when we were finished congratulating ourselves there was suddenly looked at it was like we're up to a couple of hundred of these",
    "start": "729989",
    "end": "735839"
  },
  {
    "text": "integrations and then we started slowing down so in like typical sort of like fred brooks you know methodology we just",
    "start": "735839",
    "end": "742799"
  },
  {
    "text": "like to more people in the team and something we were a team of ten so that made Friday night drinks absolutely lots",
    "start": "742799",
    "end": "748019"
  },
  {
    "text": "of fun but again not from actually getting through the water ice because the trade-offs with this is an intimate",
    "start": "748019",
    "end": "755220"
  },
  {
    "text": "service most first of all is a single point of failure so you're gonna have one of them and this is not only from an",
    "start": "755220",
    "end": "760860"
  },
  {
    "text": "infrastructure point of view but also from a delivery centralized team so then we we formed the constraint on our",
    "start": "760860",
    "end": "768299"
  },
  {
    "text": "company's ability to deliver so they could only deliver as quick as our team could move so again a single point of",
    "start": "768299",
    "end": "775350"
  },
  {
    "text": "failure both from an operational but also an architecture perspective and the",
    "start": "775350",
    "end": "781259"
  },
  {
    "text": "reason what we slowed down is because we couldn't keep like the mental model of all these different integrations and we",
    "start": "781259",
    "end": "787199"
  },
  {
    "text": "couldn't keep them separated so again regression testing became a massive overhead force and in the end it",
    "start": "787199",
    "end": "793410"
  },
  {
    "text": "actually had the opposite effect so we put it in to be able to move faster but fast forward a couple years and it was",
    "start": "793410",
    "end": "799679"
  },
  {
    "text": "actually the very thing that was holding us back and so then after a number of years",
    "start": "799679",
    "end": "806100"
  },
  {
    "text": "looking at this we we as an industry said there has to be a different way of doing it there has to be some",
    "start": "806100",
    "end": "812880"
  },
  {
    "text": "alternatives then a lot of thinking around cloud native came up in cloud days it was really the confluence of a",
    "start": "812880",
    "end": "818310"
  },
  {
    "text": "number of techniques and technology so first of all we have DevOps and its core",
    "start": "818310",
    "end": "825000"
  },
  {
    "text": "DevOps is about continuous learning improvement and to be able to have fast",
    "start": "825000",
    "end": "832140"
  },
  {
    "text": "feedback loops and be able to take an empirical approach to delivery we also",
    "start": "832140",
    "end": "839100"
  },
  {
    "text": "have continuous delivery then so again practice is about being able to do that safely and fast and rather than making",
    "start": "839100",
    "end": "845370"
  },
  {
    "text": "god-filled decisions we can actually put something out based on data and move",
    "start": "845370",
    "end": "850470"
  },
  {
    "text": "from there but of course I thought that we would still be dealing with VMs so again very costly slow to move",
    "start": "850470",
    "end": "855840"
  },
  {
    "text": "cumbersome so again on the other side we then had first of all micro services so",
    "start": "855840",
    "end": "861450"
  },
  {
    "text": "how can we actually have small discrete pieces of business functionality of business behavior which can then change",
    "start": "861450",
    "end": "867420"
  },
  {
    "text": "at their own pace also the sales pitch goes and then we have containers themselves so again this is actually a",
    "start": "867420",
    "end": "874200"
  },
  {
    "text": "really nice package because then I can have a very small service with a very small packaging format and I have an",
    "start": "874200",
    "end": "879420"
  },
  {
    "text": "absolutely amazing developer experience all the way from the local to its production and there's some people in",
    "start": "879420",
    "end": "886530"
  },
  {
    "text": "the room that are probably thinking though what happens service a and service B did they make it I'm glad to",
    "start": "886530",
    "end": "894870"
  },
  {
    "text": "say they did and they had micro service babies they're everywhere but just like",
    "start": "894870",
    "end": "902550"
  },
  {
    "text": "babies this picture is a little bit messy right so previous we had service a and service B and one nice little line",
    "start": "902550",
    "end": "908820"
  },
  {
    "text": "between the two this is madness there's integrations happening absolutely",
    "start": "908820",
    "end": "913970"
  },
  {
    "text": "everywhere and it's really complicated rod and this is something I'm not sure",
    "start": "913970",
    "end": "919530"
  },
  {
    "text": "as an industry we really expected but the operability of micro service architectures is you know quite high in",
    "start": "919530",
    "end": "926850"
  },
  {
    "text": "terms of the challenge they represent so one of the key things though when I say",
    "start": "926850",
    "end": "934170"
  },
  {
    "text": "service is a services business logic plus data",
    "start": "934170",
    "end": "939290"
  },
  {
    "text": "with the ESB model a lot of the business logic actually left the services them",
    "start": "939290",
    "end": "944309"
  },
  {
    "text": "themselves and actually went into the central platform as well it's want to talk about an API an API is an entry",
    "start": "944309",
    "end": "950339"
  },
  {
    "text": "point into a service but with the service themselves you want to have the data and the business logic close",
    "start": "950339",
    "end": "957119"
  },
  {
    "text": "together live together because it's changed together and this is what the movement about guerrilla SOA really came",
    "start": "957119",
    "end": "963149"
  },
  {
    "text": "from so instead of having all this logic within the central enterprise service boss it then said the logic should sit",
    "start": "963149",
    "end": "969480"
  },
  {
    "text": "with the endpoints the services themselves and the pipes in between them to be dumb like that's a really key",
    "start": "969480",
    "end": "975749"
  },
  {
    "text": "point from there so again getting the log back into the services where they should be but once we've done that a lot",
    "start": "975749",
    "end": "984300"
  },
  {
    "text": "of the great value that we had from the Enterprise Service bus before in terms of life discovery routing circuit",
    "start": "984300",
    "end": "991379"
  },
  {
    "text": "breakers as well that's suddenly again just like back in the 1950s it became the remit of the application developer",
    "start": "991379",
    "end": "998279"
  },
  {
    "text": "again so again what we just want to be able to focus on business logic we then",
    "start": "998279",
    "end": "1003290"
  },
  {
    "text": "now have to take advice of service discovery so again how do I route my",
    "start": "1003290",
    "end": "1009170"
  },
  {
    "text": "messages to all the different clients so client silo balancing as well so circuit",
    "start": "1009170",
    "end": "1014569"
  },
  {
    "text": "breaker is again how do I prevent cascading failures so if I have a downstream service and it hasn't responded successfully in number of",
    "start": "1014569",
    "end": "1020059"
  },
  {
    "text": "times why am I still sending traffic to it can I add then provide a fallback to my own consumers but one of the things",
    "start": "1020059",
    "end": "1029510"
  },
  {
    "text": "from there is we often had this this phrase like purported about micro services is that you can write them in",
    "start": "1029510",
    "end": "1035808"
  },
  {
    "text": "whatever language you want and again so about the language that suits the particular problem but service discovery",
    "start": "1035809",
    "end": "1042649"
  },
  {
    "text": "circuit breakers like there are actually very complicated things and in fact there's libraries available for most of",
    "start": "1042649",
    "end": "1048649"
  },
  {
    "text": "them so in the jabber space of the JVM you might have heard of histories from Netflix so I think these are very",
    "start": "1048649",
    "end": "1054440"
  },
  {
    "text": "complicated or pali in the.net space so you don't be writing these yourself but",
    "start": "1054440",
    "end": "1059809"
  },
  {
    "text": "it's suddenly if I want to you know void my news micro service and Julia whatever Oh but someone hasn't written a circuit",
    "start": "1059809",
    "end": "1066440"
  },
  {
    "text": "breaker library for me can I now use it so a lot of these",
    "start": "1066440",
    "end": "1071510"
  },
  {
    "text": "things as well is your your ability to choose that languages often constrained by the libraries that are actually",
    "start": "1071510",
    "end": "1077210"
  },
  {
    "text": "available for it so again it's this whole thing of steady got giants so there's an what this actually leads a",
    "start": "1077210",
    "end": "1083270"
  },
  {
    "text": "lot to if you look at companies like Netflix again they say that you can again to their teams you can write your",
    "start": "1083270",
    "end": "1088700"
  },
  {
    "text": "languages you know your services and whatever like would you choose but if you write them in Java you will get all",
    "start": "1088700",
    "end": "1095510"
  },
  {
    "text": "of this amazing help if you write them in a different language which you're absolutely free to do you'll have to",
    "start": "1095510",
    "end": "1101750"
  },
  {
    "text": "write it all yourself guess what happens so I was a couple years ago I was over a",
    "start": "1101750",
    "end": "1107930"
  },
  {
    "text": "philosophy in Santa Clara and an absolutely amazing conference and the Netflix engineer that I spoke to he",
    "start": "1107930",
    "end": "1113030"
  },
  {
    "text": "described as getting in the trough that everyone just gets in the trough so while they still had a micro service",
    "start": "1113030",
    "end": "1118730"
  },
  {
    "text": "architecture they definitely didn't have the freedom that was often touted our micro services but again what can we do",
    "start": "1118730",
    "end": "1127580"
  },
  {
    "text": "to overcome this so before if we had all of this concern being when the application services themselves then",
    "start": "1127580",
    "end": "1134720"
  },
  {
    "text": "what we said aha what we could do is every service could have its own dedicated side care proxy which could",
    "start": "1134720",
    "end": "1141860"
  },
  {
    "text": "run across process so an example of this is Netflix pranit and again all of these",
    "start": "1141860",
    "end": "1148700"
  },
  {
    "text": "languages again so if I want to take advantage of the Netflix OSS that but I don't want to write services that run at",
    "start": "1148700",
    "end": "1154460"
  },
  {
    "text": "the JVM I could have this run in the JVM and I can get advantage of all of those",
    "start": "1154460",
    "end": "1159500"
  },
  {
    "text": "within that side care proxy and between the services you're just talking language agnostic protocols so HTTP and",
    "start": "1159500",
    "end": "1166490"
  },
  {
    "text": "because they're actually again deploy to the same host we know that that connection is reliable between these two services and then what we can do is all",
    "start": "1166490",
    "end": "1173720"
  },
  {
    "text": "ingress and egress from those containers is via the side care proxy that's really",
    "start": "1173720",
    "end": "1179420"
  },
  {
    "text": "nice so we can we've encapsulated a lot of this logic as well so another example of this is Airbnb synapse if you're",
    "start": "1179420",
    "end": "1186110"
  },
  {
    "text": "looking for this as well so this is quite a powerful pattern and in fact in in many ways this is the central idea or",
    "start": "1186110",
    "end": "1192890"
  },
  {
    "text": "an abler for a service mesh as well so this is what a better micro services",
    "start": "1192890",
    "end": "1200600"
  },
  {
    "text": "world could look like so we know how we am we still have the same interconnections between all of our services but they all",
    "start": "1200600",
    "end": "1207109"
  },
  {
    "text": "flow through a dedicated side care proxy though and again that handles a lot of",
    "start": "1207109",
    "end": "1212570"
  },
  {
    "text": "the complicated business logic of a reliable transmission of messages and again our services themselves could",
    "start": "1212570",
    "end": "1218779"
  },
  {
    "text": "actually be focused on the business matters at hand so onto the service",
    "start": "1218779",
    "end": "1224809"
  },
  {
    "text": "measure parrot itself so this is a quote from William Morgan who is the CEO of buoyant so Boyd's our company who",
    "start": "1224809",
    "end": "1232519"
  },
  {
    "text": "created link OD what are the first commercially available or available service meshes and he described it as",
    "start": "1232519",
    "end": "1239840"
  },
  {
    "text": "this so a service mesh is a dedicated infrastructure layer so in the similar",
    "start": "1239840",
    "end": "1244970"
  },
  {
    "text": "way you can be thinking not the concern of the application developers themselves but again part of the underlying",
    "start": "1244970",
    "end": "1250789"
  },
  {
    "text": "platform and it's responsible for reliable delivery of messages and it's",
    "start": "1250789",
    "end": "1257269"
  },
  {
    "text": "typically implemented as a lightweight network proxies so again the side care",
    "start": "1257269",
    "end": "1262639"
  },
  {
    "text": "properties that we saw the previous diagram and the point as well at the end is without the application needing to be",
    "start": "1262639",
    "end": "1269720"
  },
  {
    "text": "aware so to paraphrase you should not have to change your existing system to",
    "start": "1269720",
    "end": "1275480"
  },
  {
    "text": "be able to take advantage of the service mesh so from there so long as you are talking in a language agnostic protocol",
    "start": "1275480",
    "end": "1282200"
  },
  {
    "text": "HTTP and the traffic is routed through it then you could take advantage of it but that's one of the key principles so",
    "start": "1282200",
    "end": "1290899"
  },
  {
    "text": "a really important point now is a service mesh is not magic it doesn't",
    "start": "1290899",
    "end": "1296029"
  },
  {
    "text": "give us the ability to do things we could never ever do in the industry before what it does allow us to do is",
    "start": "1296029",
    "end": "1302259"
  },
  {
    "text": "shift where that responsibility lies so",
    "start": "1302259",
    "end": "1307879"
  },
  {
    "text": "that could be cross process outside of the service itself and then within that",
    "start": "1307879",
    "end": "1314119"
  },
  {
    "text": "dedicated infrastructure layer comprising the service mesh and the",
    "start": "1314119",
    "end": "1319970"
  },
  {
    "text": "surface mesh comprises two main parts first of all it has a data plane and a control plane so the data plane is the",
    "start": "1319970",
    "end": "1328759"
  },
  {
    "text": "path that the traffic takes so the traffic that flows out of your particular service",
    "start": "1328759",
    "end": "1335210"
  },
  {
    "text": "through its proxy and into the next proxy anything that's on the path of the traffic flow between two services but",
    "start": "1335210",
    "end": "1342230"
  },
  {
    "text": "there's also a control plane which we haven't looked at or hasn't appeared in one of the diagrams today and it's it's",
    "start": "1342230",
    "end": "1349610"
  },
  {
    "text": "out-of-band with the rest of the service mesh but what it allows us to do is",
    "start": "1349610",
    "end": "1356440"
  },
  {
    "text": "instead of separate proxies that are completely isolated we can then send",
    "start": "1356440",
    "end": "1362240"
  },
  {
    "text": "instructions to the service mesh control plane and it will then push that policy",
    "start": "1362240",
    "end": "1367550"
  },
  {
    "text": "out to all of those side care proxies so",
    "start": "1367550",
    "end": "1372680"
  },
  {
    "text": "what we have is again at one place that we can configure all of these services",
    "start": "1372680",
    "end": "1378190"
  },
  {
    "text": "but again have those applied in each water beside care proxies lists to each",
    "start": "1378190",
    "end": "1383690"
  },
  {
    "text": "service and this is a massively powerful capability because just like with the",
    "start": "1383690",
    "end": "1389660"
  },
  {
    "text": "ESB it provides the same authoritative source of policies so there's one place",
    "start": "1389660",
    "end": "1396530"
  },
  {
    "text": "to configure this there's one source of truth but unlike an ESB where the",
    "start": "1396530",
    "end": "1401720"
  },
  {
    "text": "control plane and the data plane is one if the control plane went down that's",
    "start": "1401720",
    "end": "1408830"
  },
  {
    "text": "absolutely fine it's just that your side care properties wouldn't receive policy",
    "start": "1408830",
    "end": "1413990"
  },
  {
    "text": "updates for a period of time but what we've done is we've taken the configuration off the critical path so",
    "start": "1413990",
    "end": "1420230"
  },
  {
    "text": "we no longer have that central point of friction and possible failure so I know",
    "start": "1420230",
    "end": "1428480"
  },
  {
    "text": "what you're thinking though we should side care everything right this is a",
    "start": "1428480",
    "end": "1433610"
  },
  {
    "text": "great quote from Kelsey Hightower from Google and it's really one of these things to say focus on the basics first",
    "start": "1433610",
    "end": "1440600"
  },
  {
    "text": "so attaching side cares for an application there's no value in it until you're actually facing those problems as",
    "start": "1440600",
    "end": "1447230"
  },
  {
    "text": "well if there's a simple thing of just including that in one of your services first start with this when the",
    "start": "1447230",
    "end": "1453740"
  },
  {
    "text": "operability of those services become sufficiently sufficiently taxing on you",
    "start": "1453740",
    "end": "1458860"
  },
  {
    "text": "that's when you can start investing in techniques such as this okay so so far we've been talking rather",
    "start": "1458860",
    "end": "1466520"
  },
  {
    "text": "abstractly about the pattern itself so let's get a little bit more concrete so we're gonna talk about sto which is a",
    "start": "1466520",
    "end": "1473570"
  },
  {
    "text": "service mesh from Google and a number of others in the consortium as well and I'm back in August this had a really big",
    "start": "1473570",
    "end": "1478760"
  },
  {
    "text": "milestone so released v wood so that that's again after like a number of years of development so you absolutely",
    "start": "1478760",
    "end": "1484280"
  },
  {
    "text": "huge milestone and if anyone's wondering why there's a boat there sto is the",
    "start": "1484280",
    "end": "1489290"
  },
  {
    "text": "Greek for sailing so again there's a bit of a lake just like kubernetes is helps",
    "start": "1489290",
    "end": "1494390"
  },
  {
    "text": "but so there seems to be a bit of a theme there and it's do comprises a number of parrots so first of all",
    "start": "1494390",
    "end": "1500570"
  },
  {
    "text": "looking at the data plane so it co uses envoi from lift as its side care proxy",
    "start": "1500570",
    "end": "1510650"
  },
  {
    "text": "so again there's a invoice itself is a huge thing there's actually a conference around it now as well and Matt Klein",
    "start": "1510650",
    "end": "1516520"
  },
  {
    "text": "blogs a lot about it as well and it supports a huge raft of capabilities and",
    "start": "1516520",
    "end": "1523870"
  },
  {
    "text": "for interest service communication or inter service communication we have HTTP",
    "start": "1523870",
    "end": "1530090"
  },
  {
    "text": "1.1 B of HTTP - you could have G or PC or really any derivative or like a pube",
    "start": "1530090",
    "end": "1536000"
  },
  {
    "text": "drift over TCP as well so it gives a huge amount of flexibility and also you can have mutual TLS between them if you",
    "start": "1536000",
    "end": "1542870"
  },
  {
    "text": "want as well it's do splits the control",
    "start": "1542870",
    "end": "1548000"
  },
  {
    "text": "plane into three main parts each with a separate remit or responsibility so",
    "start": "1548000",
    "end": "1554150"
  },
  {
    "text": "first of all we have a pilot so this is what you would have seen in the previous examples as well of this is what we",
    "start": "1554150",
    "end": "1560030"
  },
  {
    "text": "actually use to push config out to each one of our side cares we then have mixer",
    "start": "1560030",
    "end": "1566540"
  },
  {
    "text": "so mixer gathers telemetry from each one of those services as well to actually feel some of our observability concerns",
    "start": "1566540",
    "end": "1572810"
  },
  {
    "text": "so success rates latency so again this is where we also do policy checks to make sure that the correct version is",
    "start": "1572810",
    "end": "1578960"
  },
  {
    "text": "applied to each one of these services as well and then we also have Citadel so",
    "start": "1578960",
    "end": "1584030"
  },
  {
    "text": "you can think of Citadel as the certificate authority within each do so again if you have mutual TLS between",
    "start": "1584030",
    "end": "1589220"
  },
  {
    "text": "your services it will be responsible for issuing those certificates",
    "start": "1589220",
    "end": "1593980"
  },
  {
    "text": "okay so right there let's take a really quick look ass sto and in action and our",
    "start": "1595389",
    "end": "1602979"
  },
  {
    "text": "example domain is pretty basic so first of all you would have seen with service a calling service B but then as part of",
    "start": "1602979",
    "end": "1610389"
  },
  {
    "text": "the demos which we'll go through we'll look at releasing multiple versions of service C so we have version one we have",
    "start": "1610389",
    "end": "1618399"
  },
  {
    "text": "version two which has just gone into production and we have this version three that we're working on and throughout the course of this talk we'll",
    "start": "1618399",
    "end": "1623979"
  },
  {
    "text": "hope that we'll get at the prod Road and then we also have service D as well which is called by v2 of observa so",
    "start": "1623979",
    "end": "1630039"
  },
  {
    "text": "again this is the solar model for each one of the examples we'll dig into a bit more about what we're looking to achieve and then I'll show you it in action as",
    "start": "1630039",
    "end": "1636159"
  },
  {
    "text": "well but first of all what would what we'll do is we'll take a real quick look",
    "start": "1636159",
    "end": "1642279"
  },
  {
    "text": "in in kubernetes for this particular application as well so for each one of",
    "start": "1642279",
    "end": "1649450"
  },
  {
    "text": "the pods that we have in kubernetes we have again one for each one of these services and what you'll notice as well",
    "start": "1649450",
    "end": "1655719"
  },
  {
    "text": "is that each of them say ready to of two so that means there's two containers within each pod so again no prizes for",
    "start": "1655719",
    "end": "1663009"
  },
  {
    "text": "guessing that one of them will be the service itself and the other one will be the sto proxy so we can see from these",
    "start": "1663009",
    "end": "1670029"
  },
  {
    "text": "is that each one of them will have the sto property which will handle the ingress and egress of traffic from those services as well so what we'll do here",
    "start": "1670029",
    "end": "1678459"
  },
  {
    "text": "is we'll just send a really quick amount of traffic to go Truths he can just see",
    "start": "1678459",
    "end": "1683469"
  },
  {
    "text": "a little bit of what we can do to update the policies",
    "start": "1683469",
    "end": "1688409"
  },
  {
    "text": "so from here if anyone's familiar with",
    "start": "1695740",
    "end": "1701380"
  },
  {
    "text": "with the curl alias with empower she'll have actually removed it so this is just like Roy Carroll adjustable power she'll",
    "start": "1701380",
    "end": "1707870"
  },
  {
    "text": "go across the top ten and what we'll do here is just there's an infinite loop",
    "start": "1707870",
    "end": "1713150"
  },
  {
    "text": "where we can send traffic and what we should see here is to do oh my goodness",
    "start": "1713150",
    "end": "1721370"
  },
  {
    "text": "that sir but so what we can see here is",
    "start": "1721370",
    "end": "1726440"
  },
  {
    "text": "all of the traffic just being echoed back in version one of that service so",
    "start": "1726440",
    "end": "1733490"
  },
  {
    "text": "what we can do here now is update this",
    "start": "1733490",
    "end": "1743299"
  },
  {
    "text": "traffic to now send it to v2 now what we'll see in this demo is that without",
    "start": "1743299",
    "end": "1749480"
  },
  {
    "text": "releasing that service or deploying that service again we now see that all the traffic is being routed to v2",
    "start": "1749480",
    "end": "1756919"
  },
  {
    "text": "I wouldn't might say Rob that's a pretty basic example but what we should be seeing already is that could be a canary",
    "start": "1756919",
    "end": "1765350"
  },
  {
    "text": "release so right now I just did it as an 100 percent traffic swap well you could",
    "start": "1765350",
    "end": "1770360"
  },
  {
    "text": "say send two percent of traffic to that then send five percent of traffic to that so you can change all of these",
    "start": "1770360",
    "end": "1776780"
  },
  {
    "text": "policies dynamically without having to redeploy your services but again like I",
    "start": "1776780",
    "end": "1787460"
  },
  {
    "text": "said take it school in and of itself but what's really exciting about it is the",
    "start": "1787460",
    "end": "1795169"
  },
  {
    "text": "things that now enables us to do and testing and production got a bit of a bad rap for a while so what I'm talking",
    "start": "1795169",
    "end": "1801230"
  },
  {
    "text": "about here is not I only test in production but again it's a reflection of the types of systems",
    "start": "1801230",
    "end": "1807740"
  },
  {
    "text": "that we're building now so in traditional testing we might have a",
    "start": "1807740",
    "end": "1812870"
  },
  {
    "text": "particular system running in a test environment which might not be represented about production ok fine",
    "start": "1812870",
    "end": "1820610"
  },
  {
    "text": "with a certain set of data at a certain time with a certain configuration and",
    "start": "1820610",
    "end": "1826909"
  },
  {
    "text": "we think we think that gives us confidence to be able to push it it's reduction and it won't fail its",
    "start": "1826909",
    "end": "1833269"
  },
  {
    "text": "massively highlights false confidence the cause and effect between something happening in our system and actually",
    "start": "1833269",
    "end": "1839929"
  },
  {
    "text": "being able to trace that back that's just not feasible anymore so we're",
    "start": "1839929",
    "end": "1845119"
  },
  {
    "text": "dealing with the scenarios of unknown unknowns now and this is really the shift from being able to focus on",
    "start": "1845119",
    "end": "1852440"
  },
  {
    "text": "robustness insofar as how do we handle at avoid errors in our systems to resilience so unplanned how can our",
    "start": "1852440",
    "end": "1859220"
  },
  {
    "text": "systems when faced with an error respond in a positive manner so again testing a",
    "start": "1859220",
    "end": "1865609"
  },
  {
    "text": "production absolutely a great idea but the trick is doing it safely",
    "start": "1865609",
    "end": "1870700"
  },
  {
    "text": "so there's luckily over the last year and there's been a lot of great material",
    "start": "1870700",
    "end": "1875720"
  },
  {
    "text": "that's being released about this so this is a picture from Cindy she inherited from Facebook and she's documented",
    "start": "1875720",
    "end": "1884389"
  },
  {
    "text": "testing in production having a number of discrete phases so at deploy time our",
    "start": "1884389",
    "end": "1889700"
  },
  {
    "text": "release time and then post release when we actually have a product running so for the purposes of this talk I'm gonna",
    "start": "1889700",
    "end": "1895700"
  },
  {
    "text": "make a very clear distinction between a deployed service and they released",
    "start": "1895700",
    "end": "1900830"
  },
  {
    "text": "service a service is released once it's receiving any production traffic prior",
    "start": "1900830",
    "end": "1908029"
  },
  {
    "text": "to that it's just deployed and again at each one of these phases we can apply a",
    "start": "1908029",
    "end": "1913039"
  },
  {
    "text": "certain set of techniques so we can do integration tests pretty classic we can",
    "start": "1913039",
    "end": "1919879"
  },
  {
    "text": "do low tests we can also do traffic shadowing so again we'll look at that here the demo in a second as well once",
    "start": "1919879",
    "end": "1926239"
  },
  {
    "text": "we're actually receiving production traffic we can do things like narrow releases we could do monitoring we can",
    "start": "1926239",
    "end": "1931429"
  },
  {
    "text": "do traffic shaping we can also do pilot releases to a subset of users as well to",
    "start": "1931429",
    "end": "1936889"
  },
  {
    "text": "feature flags and then once we have in production as well then we're into the space of how do we do sampling how do we",
    "start": "1936889",
    "end": "1943489"
  },
  {
    "text": "do tracing again how do we actually minimize the cost of ownership of our systems well maximize the value we get",
    "start": "1943489",
    "end": "1950359"
  },
  {
    "text": "for all us okay so traffic mirroring so what we're",
    "start": "1950359",
    "end": "1957990"
  },
  {
    "text": "looking from here is often with the test environments that we have even if we can",
    "start": "1957990",
    "end": "1963120"
  },
  {
    "text": "get the environments right often the data is the tricky part do you grab your production data do you try to D",
    "start": "1963120",
    "end": "1969000"
  },
  {
    "text": "identifier or you just create this or like sample set of data as well and again the level to which it reflects",
    "start": "1969000",
    "end": "1976050"
  },
  {
    "text": "production again anyone's guess could change over time so imagine if we could",
    "start": "1976050",
    "end": "1981450"
  },
  {
    "text": "do this bear with me a second imagine if you could grab a production",
    "start": "1981450",
    "end": "1986790"
  },
  {
    "text": "traffic load deploy your new service and then just magically copy all of that log",
    "start": "1986790",
    "end": "1994380"
  },
  {
    "text": "traffic and send it to your new service and that's what we can do with traffic",
    "start": "1994380",
    "end": "2000650"
  },
  {
    "text": "mirroring so again in this particular case we can have v1 released and all the traffic going there and then out-of-band",
    "start": "2000650",
    "end": "2007610"
  },
  {
    "text": "we can copy all of that traffic and send it to v2 but the trick here is it's sent",
    "start": "2007610",
    "end": "2015380"
  },
  {
    "text": "out-of-band so again even if this fails horribly the user won't be affected or",
    "start": "2015380",
    "end": "2021170"
  },
  {
    "text": "even aware that it's happening and what this will also do is then append on a -",
    "start": "2021170",
    "end": "2028940"
  },
  {
    "text": "shadow suffix to the host and authority meta header in HTTP so again that",
    "start": "2028940",
    "end": "2034370"
  },
  {
    "text": "service could actually identify that this is shadowed traffic so again if there was gonna be a mutation that would",
    "start": "2034370",
    "end": "2040640"
  },
  {
    "text": "happen later on in the process it could say don't apply it or again",
    "start": "2040640",
    "end": "2045710"
  },
  {
    "text": "idempotent services again you can apply that with retry policies as well okay so",
    "start": "2045710",
    "end": "2051290"
  },
  {
    "text": "let's take a look at what that would look like okay so to do this we're going",
    "start": "2051290",
    "end": "2057470"
  },
  {
    "text": "to actually trail the logs of each of these services so first of all what we",
    "start": "2057470",
    "end": "2063379"
  },
  {
    "text": "do from here is again with coop couple is select best and they just look at the logs for each of these so we have v1 at",
    "start": "2063380",
    "end": "2069648"
  },
  {
    "text": "the top and then we have v2 below so first of all what I'm gonna do is just",
    "start": "2069649",
    "end": "2074690"
  },
  {
    "text": "make sure that I'm just sending traffic to v1 and then as I as I'm sending",
    "start": "2074690",
    "end": "2083000"
  },
  {
    "text": "traffic again you can just see all of it v1 and you can see that the logs across the top will be tikki along but we won't see",
    "start": "2083000",
    "end": "2090658"
  },
  {
    "text": "anything then coming through okay so what we'll actually do here is is I'll",
    "start": "2090659",
    "end": "2096419"
  },
  {
    "text": "just update the host header just so you can see it refresh",
    "start": "2096419",
    "end": "2101549"
  },
  {
    "text": "so we'll say do so again v1 is updating",
    "start": "2101549",
    "end": "2107160"
  },
  {
    "text": "nothing going to v2 as yet but again with this policy what we can do now is",
    "start": "2107160",
    "end": "2114289"
  },
  {
    "text": "update that all that traffic to be mirrored from v1 to v2 and now suddenly",
    "start": "2114289",
    "end": "2120869"
  },
  {
    "text": "what you see is all of this traffic being copied across but the - shadow being suffix to the end as well and this",
    "start": "2120869",
    "end": "2128819"
  },
  {
    "text": "is all still deployed we haven't released this yet so even though is representative of production traffic it",
    "start": "2128819",
    "end": "2135180"
  },
  {
    "text": "is actually shadowed so none of our users will actually be affected even if service - filled out of the heap and",
    "start": "2135180",
    "end": "2142280"
  },
  {
    "text": "again with canary releases so so this is where we actually want to send production traffic to it so we've",
    "start": "2146900",
    "end": "2152940"
  },
  {
    "text": "mirrored our traffic we've got a lot of confidence that yep this looks good you'll press the button but again from a",
    "start": "2152940",
    "end": "2159539"
  },
  {
    "text": "risk adverse perspective we might still say well something might happen so let's say you could either do it to a pilot",
    "start": "2159539",
    "end": "2165569"
  },
  {
    "text": "group of users or again just a percentage of traffic so we've already seen this where as we did a straight",
    "start": "2165569",
    "end": "2173819"
  },
  {
    "text": "hundred percent swap you could easily do five percent or 95 percent I actually",
    "start": "2173819",
    "end": "2179910"
  },
  {
    "text": "don't think we are too far away from like a rolling update policy where we",
    "start": "2179910",
    "end": "2185579"
  },
  {
    "text": "could say why it started at 2% keep ratcheting it up every five or 10",
    "start": "2185579",
    "end": "2191130"
  },
  {
    "text": "minutes when you reach 100% nucleolus and away we go",
    "start": "2191130",
    "end": "2196549"
  },
  {
    "text": "like that would absolutely be incredible if you come up with any errors then that's fine just rewrote to the original",
    "start": "2196549",
    "end": "2202470"
  },
  {
    "text": "policy as well okay so circuit breakers",
    "start": "2202470",
    "end": "2212609"
  },
  {
    "text": "are table stakes for distributed systems so any outbound call from your system to",
    "start": "2212609",
    "end": "2218730"
  },
  {
    "text": "another Froese rapid in a circuit breaker otherwise you're potentially making",
    "start": "2218730",
    "end": "2226190"
  },
  {
    "text": "matters worse for that downstream service if it's still struggling to cater for the amount of load and you just keep sending traffic to it then",
    "start": "2226190",
    "end": "2232430"
  },
  {
    "text": "that's just likely making matters worse but at the same time as responding slowly then you could do your users a",
    "start": "2232430",
    "end": "2238550"
  },
  {
    "text": "favor by saying nah I'm just not comfortable with how that's performing so I'm gonna return a canned value or",
    "start": "2238550",
    "end": "2243710"
  },
  {
    "text": "even a more timely error back it's preferable as well so what we look to do",
    "start": "2243710",
    "end": "2250220"
  },
  {
    "text": "here is we've now released v2 and we can",
    "start": "2250220",
    "end": "2255920"
  },
  {
    "text": "look at our in a demo that we'll just route traffic 50/50 between those two services but then we'll introduce service C and",
    "start": "2255920",
    "end": "2263890"
  },
  {
    "text": "service C then we'll throw errors so but at the same time in this example it's",
    "start": "2263890",
    "end": "2270080"
  },
  {
    "text": "deterministic I literally have a throw if you look at the code it always fails but in realized that could be for any",
    "start": "2270080",
    "end": "2275960"
  },
  {
    "text": "number of reasons maybe part of the infrastructure or a firewall rule got changed any one of those policies but it",
    "start": "2275960",
    "end": "2282200"
  },
  {
    "text": "suddenly starts throwing errors but what we'd like to be able to do with that bid",
    "start": "2282200",
    "end": "2287450"
  },
  {
    "text": "is prevent that error from permeating the rest of our system as well and restore good service as quickly as",
    "start": "2287450",
    "end": "2294620"
  },
  {
    "text": "possible so let's see it let's take a quick example of that so again we can",
    "start": "2294620",
    "end": "2302770"
  },
  {
    "text": "just send traffic across so this stay in this says no what I'm gonna do is first",
    "start": "2304450",
    "end": "2311090"
  },
  {
    "text": "of all just send it to the live version so this will just do 50/50 load balancing between version 1 and version",
    "start": "2311090",
    "end": "2316100"
  },
  {
    "text": "2 and then what we're gonna do is we're going to include service C and a boom",
    "start": "2316100",
    "end": "2323680"
  },
  {
    "text": "we're suddenly seeing errors coming back as well but again that this is happening",
    "start": "2323680",
    "end": "2328910"
  },
  {
    "text": "in the middle of the noise then if someone gonna be on call to fix this what we'd like is a system to be able to",
    "start": "2328910",
    "end": "2335390"
  },
  {
    "text": "identify this and then remove the erroneous nodes from that availability pool so in sto nomenclature it's an",
    "start": "2335390",
    "end": "2348710"
  },
  {
    "text": "outlier detection so what we'll see here is when we press this I've set up the rule to except by request so it's got to be five",
    "start": "2348710",
    "end": "2355050"
  },
  {
    "text": "consecutive errors and in that case it's got to be removed from the pool for a",
    "start": "2355050",
    "end": "2360420"
  },
  {
    "text": "period of twenty seconds so you'll see those error just going through there and now it's back to v1 and v2 so in a",
    "start": "2360420",
    "end": "2369210"
  },
  {
    "text": "couple of seconds what you'll see is another five errors come through on this",
    "start": "2369210",
    "end": "2374220"
  },
  {
    "text": "this console and what we're doing there is it's actually going to recheck first",
    "start": "2374220",
    "end": "2380160"
  },
  {
    "text": "of all after 20 seconds and then it's going to do an exponential back-off so",
    "start": "2380160",
    "end": "2385830"
  },
  {
    "text": "it's gonna be a product of that time by the number of times it's been removed from the pool so that way again even if",
    "start": "2385830",
    "end": "2391770"
  },
  {
    "text": "it's a transient or intermittent error we'll remove with initially and then check later odd but at the same time",
    "start": "2391770",
    "end": "2396780"
  },
  {
    "text": "we're just going to do more and more conservative checks after that and again what we can do is just update the policy",
    "start": "2396780",
    "end": "2403170"
  },
  {
    "text": "again to just be let's just say live versions and any of the exclusions then",
    "start": "2403170",
    "end": "2410850"
  },
  {
    "text": "would be removed so again if you update the policy you can just bring it straight back in if you wanted to again afterwards but again I haven't had to do",
    "start": "2410850",
    "end": "2418260"
  },
  {
    "text": "anything from here and again I can have all those circuit breakers across all of my services timeout for all of my",
    "start": "2418260",
    "end": "2423780"
  },
  {
    "text": "services applied via this policy and have it pushed up to all of those services without having to deploy them",
    "start": "2423780",
    "end": "2431450"
  },
  {
    "text": "okay so this is a bit that really excited to be and I think it's gonna be an area that we're seeing a lot more",
    "start": "2435590",
    "end": "2441680"
  },
  {
    "text": "over the next year so if you want to speak at a conference I think this will be a massively topical subject so what",
    "start": "2441680",
    "end": "2450570"
  },
  {
    "text": "we're really doing here though is accepting that again we don't know it all it's non-deterministic in terms of how",
    "start": "2450570",
    "end": "2456420"
  },
  {
    "text": "our systems will fail in production so you can think of chaos engineering or",
    "start": "2456420",
    "end": "2463140"
  },
  {
    "text": "chaos testing as exploratory testing of the non-functional characteristics of",
    "start": "2463140",
    "end": "2468750"
  },
  {
    "text": "your systems such that those characteristics fail your system is no longer functional right so but what",
    "start": "2468750",
    "end": "2475560"
  },
  {
    "text": "we're actually doing here is doing experiments so to say in production",
    "start": "2475560",
    "end": "2481970"
  },
  {
    "text": "let's actually generate faults so I could enjoy errors into my system and seal with",
    "start": "2481970",
    "end": "2488940"
  },
  {
    "text": "behaves so if anyone's again read over the years of our chaos monkey or simian",
    "start": "2488940",
    "end": "2494789"
  },
  {
    "text": "Arabi that's the very same idea so can I take a note out of this availability pool and still have the service remain",
    "start": "2494789",
    "end": "2501630"
  },
  {
    "text": "up up - can I nuke an entire data center and have the quality of my service",
    "start": "2501630",
    "end": "2506910"
  },
  {
    "text": "remain up what we're doing here though is doing an application level so in this",
    "start": "2506910",
    "end": "2513960"
  },
  {
    "text": "particular example we have service a we'll call a and B and then C calls down",
    "start": "2513960",
    "end": "2520140"
  },
  {
    "text": "to service D as well but we've got to run the experiment we're gonna say if I",
    "start": "2520140",
    "end": "2526529"
  },
  {
    "text": "inject 25% of errors on that downstream",
    "start": "2526529",
    "end": "2531630"
  },
  {
    "text": "leg from C to B power how the system respond like do we have any policy in",
    "start": "2531630",
    "end": "2537210"
  },
  {
    "text": "place that will compensate for those errors",
    "start": "2537210",
    "end": "2542599"
  },
  {
    "text": "so what we've got to do here is roll that policy and you'll see now each one",
    "start": "2550420",
    "end": "2557720"
  },
  {
    "text": "of those legs we're sort of seeing slightly intermittent so you know every episode eight or so so that's 25% of of",
    "start": "2557720",
    "end": "2565069"
  },
  {
    "text": "50 but what we'll see here is we'll take a quick look as graph are there as well",
    "start": "2565069",
    "end": "2573559"
  },
  {
    "text": "and this actually Cubs free with we're basically out of the box with this do as",
    "start": "2573559",
    "end": "2582170"
  },
  {
    "text": "well so all other instrumentation instantly gets sent from each one of those policies gathered back up into",
    "start": "2582170",
    "end": "2588020"
  },
  {
    "text": "mixer and then display that this dashboard so what we can see though is pretty much that we have again",
    "start": "2588020",
    "end": "2593329"
  },
  {
    "text": "92% of our requests passing but again our system isn't compensating for that",
    "start": "2593329",
    "end": "2600250"
  },
  {
    "text": "injected fault so what could we do about that so what we could do here is",
    "start": "2600250",
    "end": "2605660"
  },
  {
    "text": "wouldn't it be really nice if service see again because that call down to D is idempotent to just retry it again and if",
    "start": "2605660",
    "end": "2612319"
  },
  {
    "text": "it fails maybe for it into beta they're just retry that again so what in this particular case what we'll do here is",
    "start": "2612319",
    "end": "2618319"
  },
  {
    "text": "again still with injecting the fault will do a retry policy so that will be if service see the text that the",
    "start": "2618319",
    "end": "2624740"
  },
  {
    "text": "downstream call has failed it's gonna try up to three more times and what we",
    "start": "2624740",
    "end": "2629869"
  },
  {
    "text": "do in the retry policy is well is we've also reduced the timeout for that as well so instead of the default 15",
    "start": "2629869",
    "end": "2637190"
  },
  {
    "text": "seconds which you get out of the box I've just said it's gotta be two seconds so again we're just being a bit more conservative to say well if that call",
    "start": "2637190",
    "end": "2643280"
  },
  {
    "text": "fails tried a few more times but after that you could then have potentially the circuit breaker pick it as well if we",
    "start": "2643280",
    "end": "2650720"
  },
  {
    "text": "can't compensate to a retry policy and",
    "start": "2650720",
    "end": "2656809"
  },
  {
    "text": "what we can now see is even though we're still injecting the faults we're actually retrying those calls so again",
    "start": "2656809",
    "end": "2663470"
  },
  {
    "text": "we'll see this chat go back up to a hundred percent from here and I wouldn't",
    "start": "2663470",
    "end": "2668480"
  },
  {
    "text": "keep injecting those faults but run these as experiments across your system and another really nice thing that we",
    "start": "2668480",
    "end": "2675980"
  },
  {
    "text": "could do from here is because sto knows all of the traffic that's flowing",
    "start": "2675980",
    "end": "2682040"
  },
  {
    "text": "between all my services you can get things like",
    "start": "2682040",
    "end": "2688050"
  },
  {
    "text": "architecture diagrams for free so why generate these yourself if we know the",
    "start": "2688050",
    "end": "2694119"
  },
  {
    "text": "shape of all the traffic that flows through it we can then see what's the actual shape of my system and then start",
    "start": "2694119",
    "end": "2701320"
  },
  {
    "text": "drilling in so this is just one potential visualization but you could do dot graph or any other formats as well a",
    "start": "2701320",
    "end": "2708280"
  },
  {
    "text": "number of them so again you put into your graphing tool of choice but with the with these systems that change so",
    "start": "2708280",
    "end": "2714640"
  },
  {
    "text": "rapidly trying to create an accurate architecture diagram to any level of fidelity is an exercise in futility we",
    "start": "2714640",
    "end": "2721840"
  },
  {
    "text": "can have these generated for us though",
    "start": "2721840",
    "end": "2725910"
  },
  {
    "text": "and the other thing is what so far as I've been doing everything with policies",
    "start": "2727170",
    "end": "2733210"
  },
  {
    "text": "so it's been applied to everything but what I could do as well is apply",
    "start": "2733210",
    "end": "2739170"
  },
  {
    "text": "specific instructions to a single request so we can send HTTP headers as",
    "start": "2739170",
    "end": "2745030"
  },
  {
    "text": "documented on the invoice site that will then allow me to override those policies for a particular request so you might be",
    "start": "2745030",
    "end": "2751990"
  },
  {
    "text": "able to say for this particular user actually see what would happen if I reduce the timeout to one second instead",
    "start": "2751990",
    "end": "2759070"
  },
  {
    "text": "of fifteen seconds but you didn't want to do it as a policy across you know",
    "start": "2759070",
    "end": "2764650"
  },
  {
    "text": "across all of your services as well so a",
    "start": "2764650",
    "end": "2770020"
  },
  {
    "text": "key point here is service measures enable us to decouple traffic management",
    "start": "2770020",
    "end": "2775210"
  },
  {
    "text": "from infrastructure scaling so kubernetes gives us absolutely amazing",
    "start": "2775210",
    "end": "2780670"
  },
  {
    "text": "abstractions at the infrastructure layer so docker abstracts us from the operating system kubernetes abstract us",
    "start": "2780670",
    "end": "2786670"
  },
  {
    "text": "from the entire infrastructure layer to take one workload and one cloud provider and roll it on another cloud provider",
    "start": "2786670",
    "end": "2792930"
  },
  {
    "text": "kubernetes gives us nothing at layer seven and that's a lot of concerns that",
    "start": "2792930",
    "end": "2798310"
  },
  {
    "text": "we as application developers have and this is where service measures play so",
    "start": "2798310",
    "end": "2803470"
  },
  {
    "text": "this is about application level value on top of those at the infrastructure layer",
    "start": "2803470",
    "end": "2809470"
  },
  {
    "text": "that first of all containerization ed then kubernetes gave itself but we have them as",
    "start": "2809470",
    "end": "2815190"
  },
  {
    "text": "concerns that we could treat them correctly as separate considerations",
    "start": "2815190",
    "end": "2820700"
  },
  {
    "text": "okay so service meshes as parents of an",
    "start": "2820700",
    "end": "2826140"
  },
  {
    "text": "infrastructure lyric or conceptual infrastructure layer are typically supported by a platform team within an",
    "start": "2826140",
    "end": "2831300"
  },
  {
    "text": "enterprise so again making sure that the service itself is robust resilient so",
    "start": "2831300",
    "end": "2838319"
  },
  {
    "text": "pop quiz given it's gonna be supported by service developers do application",
    "start": "2838319",
    "end": "2845849"
  },
  {
    "text": "developers even need to be aware that the service mess exists who thinks yes",
    "start": "2845849",
    "end": "2853760"
  },
  {
    "text": "who thinks no it's always a trick question [Laughter]",
    "start": "2853760",
    "end": "2859760"
  },
  {
    "text": "so I get Jake reps had a quote I really like about micro services back at 2014",
    "start": "2859760",
    "end": "2865319"
  },
  {
    "text": "and I don't know if anyone else has experience with distributed objects but",
    "start": "2865319",
    "end": "2870690"
  },
  {
    "text": "again with this great idea back in the j2ee space where we could have these objects and I call a method of them and",
    "start": "2870690",
    "end": "2877290"
  },
  {
    "text": "that method might actually result in a network halt or just to another object in there so we completely abstracted",
    "start": "2877290",
    "end": "2883829"
  },
  {
    "text": "that away no surprise that was an absolute disaster because you couldn't have any empathy about how costly an",
    "start": "2883829",
    "end": "2890700"
  },
  {
    "text": "operation would be you just didn't know what would happen so at the same time",
    "start": "2890700",
    "end": "2896430"
  },
  {
    "text": "from here is while the service itself will be supported by a centralized team with dedicated expertise service",
    "start": "2896430",
    "end": "2904050"
  },
  {
    "text": "developers should be aware of the configuration for your services as well so you will still own the configuration",
    "start": "2904050",
    "end": "2909930"
  },
  {
    "text": "of your services just not the platform on which it runs as well so the question",
    "start": "2909930",
    "end": "2918630"
  },
  {
    "text": "though is called these service measures are amazing how do I get started slowly",
    "start": "2918630",
    "end": "2926569"
  },
  {
    "text": "so again another quote from William Morgan and he's basically saying that",
    "start": "2926720",
    "end": "2932930"
  },
  {
    "text": "there's a lot of hype around service measures today some of it may be",
    "start": "2932930",
    "end": "2938160"
  },
  {
    "text": "well-founded other might just be hyperbole and we'll have a - broken dreams in a year's time but what he's",
    "start": "2938160",
    "end": "2944460"
  },
  {
    "text": "really saying is don't start with a service mission if he's starting Greenfields project you probably don't",
    "start": "2944460",
    "end": "2950410"
  },
  {
    "text": "want to reach for a service message right off the bat get users make them happy deliver value if then your",
    "start": "2950410",
    "end": "2956469"
  },
  {
    "text": "services are representing quite a high cost of ownership you're spending a lot of time just trying to understand how",
    "start": "2956469",
    "end": "2962979"
  },
  {
    "text": "they operate that's where a service mesh plays really nicely and there is a bit of a shift in the industry around this",
    "start": "2962979",
    "end": "2969369"
  },
  {
    "text": "so link Rd was notoriously difficult to configure there was a huge raft of valleys and you could have played it was",
    "start": "2969369",
    "end": "2975670"
  },
  {
    "text": "quite daunting when you looked at the configuration file if you look at what Boyer deeds have done with cons with",
    "start": "2975670",
    "end": "2981849"
  },
  {
    "text": "more recently renamed to liquidy - it takes a fer leader approach and allows",
    "start": "2981849",
    "end": "2987279"
  },
  {
    "text": "only like a couple of valleys to be set at a time but again gradual adoption so",
    "start": "2987279",
    "end": "2992739"
  },
  {
    "text": "my voice there will be start with a single capability don't try to have it do everything on day one instrumentation",
    "start": "2992739",
    "end": "2999640"
  },
  {
    "text": "is a good one because it generally runs out of bed so do that have your services",
    "start": "2999640",
    "end": "3005549"
  },
  {
    "text": "Center laboratory have it displayed on your dashboards start generating some of",
    "start": "3005549",
    "end": "3011819"
  },
  {
    "text": "the architecture diagrams from the content as well and then once you've understood how to operate that and you",
    "start": "3011819",
    "end": "3017309"
  },
  {
    "text": "grow some capability or experience in that area then move on to the next capability and so on and so forth",
    "start": "3017309",
    "end": "3025160"
  },
  {
    "text": "okay so takeaways a service mesh is a",
    "start": "3025160",
    "end": "3031380"
  },
  {
    "text": "dedicated infrastructure layer making service to service communications safe I",
    "start": "3031380",
    "end": "3036689"
  },
  {
    "text": "want to say service the service communication I'm talking about or PC and obviously is Paris of a far wider",
    "start": "3036689",
    "end": "3043799"
  },
  {
    "text": "integration challenge it's not a solution for everything but it is a very important piece of the puzzle if you're",
    "start": "3043799",
    "end": "3053009"
  },
  {
    "text": "micro services are representing a challenge to operate at the cost of ownership is high and you're spending",
    "start": "3053009",
    "end": "3059339"
  },
  {
    "text": "too much time on trying to make just run and not a build then again a service",
    "start": "3059339",
    "end": "3064619"
  },
  {
    "text": "mesh can help with some of that friction and service meshes afford gradual",
    "start": "3064619",
    "end": "3070829"
  },
  {
    "text": "adoption you can start with a small piece then proceed on to the next one and so on and so forth take advantage of",
    "start": "3070829",
    "end": "3078209"
  },
  {
    "text": "this it's an incredibly powerful capability okay we have about six minutes for",
    "start": "3078209",
    "end": "3086619"
  },
  {
    "text": "questions so the question is I'll just",
    "start": "3086619",
    "end": "3109570"
  },
  {
    "text": "repeat it back and hopefully that I've got the rise there I sense so again with microservices is it still okay to have",
    "start": "3109570",
    "end": "3115660"
  },
  {
    "text": "some of the services which are running on the mesh or running on let's say kubernetes with its do side care is",
    "start": "3115660",
    "end": "3122230"
  },
  {
    "text": "injected across to other services in your fleece which don't have that access yeah absolutely so what are the parrots",
    "start": "3122230",
    "end": "3128980"
  },
  {
    "text": "with service meshes is you can still put in like a service entry which will be",
    "start": "3128980",
    "end": "3134020"
  },
  {
    "text": "egress from the mesh so you can still absolutely interface with things outside",
    "start": "3134020",
    "end": "3139420"
  },
  {
    "text": "of like that mesh as well and yeah",
    "start": "3139420",
    "end": "3144609"
  },
  {
    "text": "that's that's very typical yeah so again",
    "start": "3144609",
    "end": "3152770"
  },
  {
    "text": "that that's actually logic that you build into that service entry point as well where you're gonna say internally",
    "start": "3152770",
    "end": "3158560"
  },
  {
    "text": "we're gonna resolve it to this within externally that will then be the DNS entry outside of the mesh from there",
    "start": "3158560",
    "end": "3163720"
  },
  {
    "text": "but yeah it's particularly the feature you're looking for it's called service entry as opposed to virtual services",
    "start": "3163720",
    "end": "3169089"
  },
  {
    "text": "which we do to configure for each one of the policies for those particular services hi",
    "start": "3169089",
    "end": "3177720"
  },
  {
    "text": "great question so what you would have so the question was with traffic shadowing",
    "start": "3197940",
    "end": "3203170"
  },
  {
    "text": "if you have a new version of the service but it shares a persisted store do you",
    "start": "3203170",
    "end": "3208690"
  },
  {
    "text": "then have to compensate for potentially that action being applied twice so for instance if you're doing an event",
    "start": "3208690",
    "end": "3214029"
  },
  {
    "text": "sourcing model you wouldn't want the same event to be persisted in your log twice but you would have noticed as well",
    "start": "3214029",
    "end": "3220390"
  },
  {
    "text": "is that the shadow traffic had - shadow suffix on each one of those requests as",
    "start": "3220390",
    "end": "3227200"
  },
  {
    "text": "well so in that particular logic you would then see in your app to say this is shadows traffic don't actually write",
    "start": "3227200",
    "end": "3234309"
  },
  {
    "text": "to the database from there yeah there's",
    "start": "3234309",
    "end": "3244240"
  },
  {
    "text": "always gonna be sly trade-offs with in terms of traffic shadowing so you're correct you have to be aware not of the",
    "start": "3244240",
    "end": "3249519"
  },
  {
    "text": "mesh but the fact that your traffic is being shadowed so we have time for one",
    "start": "3249519",
    "end": "3257019"
  },
  {
    "text": "more question",
    "start": "3257019",
    "end": "3259859"
  },
  {
    "text": "so the question is how new is sto is a safe to use the production and what",
    "start": "3269730",
    "end": "3275530"
  },
  {
    "text": "alternatives would you have in the market so sto reached v1 back in August",
    "start": "3275530",
    "end": "3282340"
  },
  {
    "text": "and it has a number of huge backers behind it including Google so that's",
    "start": "3282340",
    "end": "3287890"
  },
  {
    "text": "quite a mature offering we also have linker D which has been released for about 18 months now",
    "start": "3287890",
    "end": "3294040"
  },
  {
    "text": "I believe so that's incredibly battle-tested and mature so it actually runs on the JVM and typically a",
    "start": "3294040",
    "end": "3301900"
  },
  {
    "text": "deployment for that would be a would be a little bit different because it runs on the JVM it's actually quite heavy so",
    "start": "3301900",
    "end": "3308740"
  },
  {
    "text": "what we would do with that is typically not have sidecars injected into each one",
    "start": "3308740",
    "end": "3314710"
  },
  {
    "text": "of the pods but rather we'd run them as a daemon set on so at each host but we",
    "start": "3314710",
    "end": "3320320"
  },
  {
    "text": "would still have ingress and egress through that David host through to the other services boss particularly from",
    "start": "3320320",
    "end": "3327100"
  },
  {
    "text": "there so link D is another option and we also have a link for d2 as well now so",
    "start": "3327100",
    "end": "3334680"
  },
  {
    "text": "there's probably your main ones okay so I think we're out of time thank you so",
    "start": "3334680",
    "end": "3340300"
  },
  {
    "text": "much for coming to this talk I really hope you enjoyed it",
    "start": "3340300",
    "end": "3345150"
  }
]