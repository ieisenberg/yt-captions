[
  {
    "text": "all right hi everyone ready for the last session of the day my name is Adam Ralph",
    "start": "6970",
    "end": "13700"
  },
  {
    "text": "I originally come from the UK just outside London these days I live in",
    "start": "13700",
    "end": "19730"
  },
  {
    "text": "Switzerland I've been living in Switzerland time and I work for a",
    "start": "19730",
    "end": "26660"
  },
  {
    "text": "company called particular software we are the makers of n service bus start of",
    "start": "26660",
    "end": "33200"
  },
  {
    "text": "shameless plug if you're interested in our service bus do go and have a look at some really cool monitoring stuff we're",
    "start": "33200",
    "end": "38449"
  },
  {
    "text": "doing around monitoring of endpoints that's the end of the shameless plug",
    "start": "38449",
    "end": "44030"
  },
  {
    "text": "I'm not going to talk much more about our particular software apart from one thing we are a 100% remote working",
    "start": "44030",
    "end": "51380"
  },
  {
    "text": "company so everyone works at home even the sea we do not have an office",
    "start": "51380",
    "end": "56420"
  },
  {
    "text": "anywhere and I decided to take advantage of that and buy one of these and I spent",
    "start": "56420",
    "end": "64338"
  },
  {
    "text": "the whole of the summer traveling around in this thing this was my office and my home my girlfriend also also works",
    "start": "64339",
    "end": "70040"
  },
  {
    "text": "remotely now if you're more interested in that I am going to be doing a talk about this called code on the road so",
    "start": "70040",
    "end": "76909"
  },
  {
    "text": "look at the count for that if you're more interested in that at some events later this year I look after if you get",
    "start": "76909",
    "end": "84319"
  },
  {
    "text": "packages some of the more interesting one interesting ones are fake it easy which is a mocking framework that",
    "start": "84319",
    "end": "91069"
  },
  {
    "text": "supports botnets down at 1.6 light guard is a guard clause library I'm sure",
    "start": "91069",
    "end": "96770"
  },
  {
    "text": "you've all seen heard of those so you can write guard against null argument that kind of thing in your methods names",
    "start": "96770",
    "end": "102889"
  },
  {
    "text": "I think it's going to be redundancy sharp aid with the with the Opera t",
    "start": "102889",
    "end": "108229"
  },
  {
    "text": "nullable reference type thing so I'll be quite happy to put that to bed but anyway for now it supports dotnet",
    "start": "108229",
    "end": "114200"
  },
  {
    "text": "standard 1x behave net is an X unit extension for writing test using natural",
    "start": "114200",
    "end": "120020"
  },
  {
    "text": "language that supports the next and at one point one and n service bus rabbitmq",
    "start": "120020",
    "end": "125689"
  },
  {
    "text": "the current beta which is RC any day now and we do run proper our sees it's not",
    "start": "125689",
    "end": "133340"
  },
  {
    "text": "like the dotnet core one our circuit stuff if any of you remember that and the RC will be the RTM if there are no",
    "start": "133340",
    "end": "139730"
  },
  {
    "text": "bugs that supports dotnet standard - so",
    "start": "139730",
    "end": "145159"
  },
  {
    "text": "what is this dotnet standard malarkey but I love speaking in the UK because I",
    "start": "145159",
    "end": "150920"
  },
  {
    "text": "can use words like malarkey and you can most of you understand what I mean sorry if you don't it just means stuff",
    "start": "150920",
    "end": "157900"
  },
  {
    "text": "so don't let standard let's look at the problem it's trying to solve so in the",
    "start": "158170",
    "end": "163489"
  },
  {
    "text": "early days we had the dotnet framework so you compiled against the dotnet framework you ran against the dotnet",
    "start": "163489",
    "end": "169370"
  },
  {
    "text": "framework and mono was a cross-platform implementation of that and still is and that allowed you to run a Windows server",
    "start": "169370",
    "end": "176629"
  },
  {
    "text": "and using mono Mac and Linux anyone here used much mono much I see like two hands",
    "start": "176629",
    "end": "185389"
  },
  {
    "text": "going up so yeah it's it's not something which is used very heavily and I think realistic you'll get your kind of",
    "start": "185389",
    "end": "190730"
  },
  {
    "text": "mileage varied a little bit as to how well it worked but mono went on to become something else then dotnet core",
    "start": "190730",
    "end": "198109"
  },
  {
    "text": "came along and that allows us to run Windows something to run dotnet on things like Windows Windows Server Linux",
    "start": "198109",
    "end": "204409"
  },
  {
    "text": "Mac and Tizen does anyone know what Tizen is anyone yes",
    "start": "204409",
    "end": "210169"
  },
  {
    "text": "you've got to shout it out",
    "start": "210169",
    "end": "213099"
  },
  {
    "text": "correct correct it's an operating system by Samsung 4 it's a mobile operating",
    "start": "218980",
    "end": "224090"
  },
  {
    "text": "system but they put it in all kinds of devices like fridges and smartwatches and TVs and that kind of thing and it's",
    "start": "224090",
    "end": "230000"
  },
  {
    "text": "yet another place it's Linux based but is it is yet another place where you can actually run dotnet core and then we've",
    "start": "230000",
    "end": "237440"
  },
  {
    "text": "got xamarin iOS and xamarin mac this is what mano actually spawned mono cat kind",
    "start": "237440",
    "end": "242690"
  },
  {
    "text": "of became went onto to spawn these projects that allows us to run dotnet on iPhone iPad and Mac when you want a GUI",
    "start": "242690",
    "end": "251510"
  },
  {
    "text": "samer and Android kind of just runs and all kinds of different things these days so all the things and UWP none of the",
    "start": "251510",
    "end": "259519"
  },
  {
    "text": "things no no I'm being mean now it does run on a few things so the point is that",
    "start": "259520",
    "end": "265310"
  },
  {
    "text": "the gone are the days have just a dotnet framework we want to run we actually now have the ability to run dotnet on all",
    "start": "265310",
    "end": "271940"
  },
  {
    "text": "kinds of different platforms via all these new runtimes that are coming out",
    "start": "271940",
    "end": "277520"
  },
  {
    "text": "of the woodwork so when you write a typical dotnet app it's not long before",
    "start": "277520",
    "end": "283370"
  },
  {
    "text": "you bring in some kind of NuGet package right it's a it's an unusual app that",
    "start": "283370",
    "end": "288410"
  },
  {
    "text": "doesn't use some kind of external library via and usually these days where I knew get packaged so as a producer of",
    "start": "288410",
    "end": "297290"
  },
  {
    "text": "a nougat package and obviously as a consumer you want to be able to use those NuGet packages in potentially any",
    "start": "297290",
    "end": "303860"
  },
  {
    "text": "of these platforms in the early days people only really built the dotnet",
    "start": "303860",
    "end": "309020"
  },
  {
    "text": "framework these days people want to be able to use NuGet packages from the",
    "start": "309020",
    "end": "314450"
  },
  {
    "text": "gallery in potentially any of these now there was a solution for this previously",
    "start": "314450",
    "end": "320810"
  },
  {
    "text": "called portable class libraries does anyone know about portable class libraries yeah a few of you heard of",
    "start": "320810",
    "end": "327110"
  },
  {
    "text": "them so portable class flavors were designed to solve this problem unfortunately it became kind of the",
    "start": "327110",
    "end": "333110"
  },
  {
    "text": "portable class library fiasco in the end it sounds a little bit harsh but bear",
    "start": "333110",
    "end": "339380"
  },
  {
    "text": "with me so in the beginning as I said we had dotnet framework for all right",
    "start": "339380",
    "end": "345650"
  },
  {
    "text": "things are very simple and then this thing came along Silverlight 5",
    "start": "345650",
    "end": "351580"
  },
  {
    "text": "are you smiling about so late it's great what you have to sport it lucky you I",
    "start": "351720",
    "end": "360009"
  },
  {
    "text": "actually miss spelt this when I wrote the slider it's sliver light five but I think it has a kind of ring to it so",
    "start": "360009",
    "end": "366449"
  },
  {
    "text": "I'll call it sliver light five for today there's an intersection between the API",
    "start": "366449",
    "end": "373240"
  },
  {
    "text": "is that are available between net framework 4 and silverlight 5 right there is some stuff which is common to",
    "start": "373240",
    "end": "378400"
  },
  {
    "text": "them system object being the most obvious right with the same methods and properties so the idea was well why",
    "start": "378400",
    "end": "385780"
  },
  {
    "text": "don't we define a thing that you can compile against which defines the cross-section of these two frameworks",
    "start": "385780",
    "end": "392800"
  },
  {
    "text": "and that was called the portable class library profile 14 if anyone knows what",
    "start": "392800",
    "end": "400840"
  },
  {
    "text": "that 14 means please let me know I have no idea but anyway it was called profile",
    "start": "400840",
    "end": "406449"
  },
  {
    "text": "14 it defines the the overlap between these two frameworks now this is great",
    "start": "406449",
    "end": "412240"
  },
  {
    "text": "because you can now compile against a set of reference assemblies called PCL profile 14 and then that assembly which",
    "start": "412240",
    "end": "419590"
  },
  {
    "text": "you compile you can pick up and run against either of these two platforms we",
    "start": "419590",
    "end": "425860"
  },
  {
    "text": "can then introduce another platform into the mix dotnet core 4.5 anyone remember",
    "start": "425860",
    "end": "433659"
  },
  {
    "text": "that that was a thing if you're interested in dotnet version numbers",
    "start": "433659",
    "end": "439270"
  },
  {
    "text": "come to pub come up tomorrow because Mark Rendell's going to be doing a talk about dotnet version numbers so all will be revealed but anyway there was a thing",
    "start": "439270",
    "end": "446229"
  },
  {
    "text": "called dotnet called for core 4.5 and the Indus and the intersection or rather",
    "start": "446229",
    "end": "454050"
  },
  {
    "text": "that the bit that exists in all of these all three became profiles profiles 37",
    "start": "454050",
    "end": "460419"
  },
  {
    "text": "and there's a there's there are some stuff that only exists in dotnet framework 4 and 5 so I've labeled that",
    "start": "460419",
    "end": "466990"
  },
  {
    "text": "there with the profile 14 and there's some stuff which only exists and that come in in the overlap of these two",
    "start": "466990",
    "end": "472240"
  },
  {
    "text": "right and that's profile 5 up there there didn't happen to be a profile",
    "start": "472240",
    "end": "477760"
  },
  {
    "text": "released between which covered donít call 4.5 and silverlight 5 i don't know why but they didn't actually fill in all",
    "start": "477760",
    "end": "484090"
  },
  {
    "text": "those gabs so far so good then we introduce a",
    "start": "484090",
    "end": "489669"
  },
  {
    "text": "force platform to the mix which is Windows Phone 8 now there is a",
    "start": "489669",
    "end": "496240"
  },
  {
    "text": "fundamental problem with this diagram can anyone spot it I can't understand it",
    "start": "496240",
    "end": "504250"
  },
  {
    "text": "that's the main problem with it yes and there's a one little technical problem which I'm a little bit embarrassed about",
    "start": "504250",
    "end": "509650"
  },
  {
    "text": "because I did maths at university so I should know this stuff but there is nowhere for me to put a label on for",
    "start": "509650",
    "end": "516909"
  },
  {
    "text": "profile 14 for the intersection with only Silverlight 5 and dotnet for I can't put it anywhere on that diagram",
    "start": "516909",
    "end": "522789"
  },
  {
    "text": "and it turns out I'll go back a slide so it turns out that this is a Venn diagram",
    "start": "522789",
    "end": "528269"
  },
  {
    "text": "alright and a Venn diagram describes it actually shows all the intersections of",
    "start": "528269",
    "end": "534640"
  },
  {
    "text": "all the sets on the diagram Venn diagrams were described by a British mathematician called John Venn in the",
    "start": "534640",
    "end": "541540"
  },
  {
    "text": "19th century it turns out that this isn't a Venn diagram this is actually",
    "start": "541540",
    "end": "547209"
  },
  {
    "text": "what's called an Euler diagram which was described by Swiss mathematician called Leonard Euler in the 18th century and an",
    "start": "547209",
    "end": "557199"
  },
  {
    "text": "Euler diagram only shows some of the intersections of of all the sets in the",
    "start": "557199",
    "end": "563529"
  },
  {
    "text": "diagram so I googled for a fourth set Venn diagram and I found a so that's that that's another example of a Venn",
    "start": "563529",
    "end": "570190"
  },
  {
    "text": "diagram by the way so I guess most of you here probably from the UK so when we",
    "start": "570190",
    "end": "576040"
  },
  {
    "text": "kind of described the layout of the of the British Isles and Ireland everything all we have to do is verbalize this very",
    "start": "576040",
    "end": "581320"
  },
  {
    "text": "simple diagram and and we can we can we can tell people from elsewhere what it's",
    "start": "581320",
    "end": "586660"
  },
  {
    "text": "all about so it turns out that so yes this is not a Venn diagram this is a",
    "start": "586660",
    "end": "592180"
  },
  {
    "text": "Venn diagram right this is a four-set Venn diagram and applying our profiles",
    "start": "592180",
    "end": "597579"
  },
  {
    "text": "back to this we found a place for profile 5 we found a place for profile",
    "start": "597579",
    "end": "603220"
  },
  {
    "text": "14 right that was a problem ok and we've got this new one here coming out called proform on three six all right so that's",
    "start": "603220",
    "end": "610360"
  },
  {
    "text": "for now if you look at the list of all the PC ELLs that are available it goes",
    "start": "610360",
    "end": "616120"
  },
  {
    "text": "further than four this one has one two one two three four five and of course it's not possible to",
    "start": "616120",
    "end": "625560"
  },
  {
    "text": "draw a five-set Venn diagram or so I thought this is a five-set Venn diagram",
    "start": "625560",
    "end": "636240"
  },
  {
    "text": "when you wants five sets you have to kind of use this weird I don't know what to call it really Frankfort or in kind",
    "start": "636240",
    "end": "642330"
  },
  {
    "text": "of it was sabe bread roll or something but that is a five site and you can go you can get silly with this right you",
    "start": "642330",
    "end": "648090"
  },
  {
    "text": "can go six set Venn diagram you can go seven set Venn diagram and in 2011 a",
    "start": "648090",
    "end": "654210"
  },
  {
    "text": "guy's a bunch of people from the University of Victoria in in BC in",
    "start": "654210",
    "end": "659820"
  },
  {
    "text": "Canada drew that for the first time ever an 11 set Venn diagram getting quite nice now",
    "start": "659820",
    "end": "666270"
  },
  {
    "text": "and applying our profiles to this I",
    "start": "666270",
    "end": "671300"
  },
  {
    "text": "think the the problem you called out Brian is really becoming apparent now we cannot understand this anymore",
    "start": "671300",
    "end": "676980"
  },
  {
    "text": "I made that profile number up it's just good as any other so this is why I'm saying portable class library Fiasco",
    "start": "676980",
    "end": "684060"
  },
  {
    "text": "right this doesn't not work anymore and it's a bit harsh because the it was when intentioned and given the same",
    "start": "684060",
    "end": "690480"
  },
  {
    "text": "problem back then I may have come up with the same solution myself but with all these new platforms appearing it",
    "start": "690480",
    "end": "698400"
  },
  {
    "text": "soon became clear that this was not going to scale because every time you add a new platform you potentially",
    "start": "698400",
    "end": "704130"
  },
  {
    "text": "double the amount of profiles right it just it just spirals out of control so",
    "start": "704130",
    "end": "710220"
  },
  {
    "text": "we needed a new solution for this and I did pour myself a glass of water before",
    "start": "710220",
    "end": "715320"
  },
  {
    "text": "a bit of stolen and the solution is of course dotnet standard do you like that",
    "start": "715320",
    "end": "725550"
  },
  {
    "text": "logo I submitted this as a logo but I got knocked back though I'll try again alright what is that net standard so",
    "start": "725550",
    "end": "732270"
  },
  {
    "text": "don't their standard tries to do this right instead of trying to take the the intersection of all these of all these",
    "start": "732270",
    "end": "738960"
  },
  {
    "text": "sets and trying to cut it and try to come up with some really kind of complicated scheme and what it does is",
    "start": "738960",
    "end": "747960"
  },
  {
    "text": "it looks at the intersection of all of these platforms so there's there's a",
    "start": "747960",
    "end": "753810"
  },
  {
    "text": "place here where all of these overlap and there's a whole bunch of api's which exist in all these platforms and don't",
    "start": "753810",
    "end": "759660"
  },
  {
    "text": "let standard takes the biggest intersection of those that it possibly can so for one set of versions of all",
    "start": "759660",
    "end": "766740"
  },
  {
    "text": "these platforms there is just one dotnet standard you only have to target one thing on that standard you don't have to",
    "start": "766740",
    "end": "772410"
  },
  {
    "text": "choose between profile this and profile that and profile that it's actually it was really difficult to know what which",
    "start": "772410",
    "end": "778350"
  },
  {
    "text": "profile to choose back then you know do I choose one do I choose many is really complicated this makes it much easier",
    "start": "778350",
    "end": "784700"
  },
  {
    "text": "and the way that the versions of.net standard it's self work like this so",
    "start": "784700",
    "end": "792750"
  },
  {
    "text": "each one is a superset of the one before so we've got dot next and one in the middle we've got dot lesson and one put",
    "start": "792750",
    "end": "799080"
  },
  {
    "text": "one a little bit bigger a little bit bigger little bit bigger until we get two knocked on that standard to which",
    "start": "799080",
    "end": "804480"
  },
  {
    "text": "was in fact much bigger than nest and a 1.6 bit more on that in a minute what",
    "start": "804480",
    "end": "811620"
  },
  {
    "text": "this means in terms of platforms is this so for a given sorry for a given version",
    "start": "811620",
    "end": "817920"
  },
  {
    "text": "of.net standard these are the versions of all these platforms that it supports",
    "start": "817920",
    "end": "823590"
  },
  {
    "text": "oh yeah versions this is some really big",
    "start": "823590",
    "end": "829230"
  },
  {
    "text": "version number it's like 10.0 point one six two nine nine and when I wrote it in it expanded these columns and maybe look",
    "start": "829230",
    "end": "835950"
  },
  {
    "text": "horrible so I just wrote versions silly it's a silly version number I don't know why it's not just 10.1 or 11 or",
    "start": "835950",
    "end": "841710"
  },
  {
    "text": "something now the implication of this is",
    "start": "841710",
    "end": "846960"
  },
  {
    "text": "that when you when you target a given",
    "start": "846960",
    "end": "852000"
  },
  {
    "text": "version as compared to targeting another version OHSO 1.0 this is one point one",
    "start": "852000",
    "end": "857520"
  },
  {
    "text": "point one if we target 1.0 your library has the biggest set of compatibility",
    "start": "857520",
    "end": "865200"
  },
  {
    "text": "with the platform so you can use your you can use your library on all of these platforms including Windows Phone",
    "start": "865200",
    "end": "871740"
  },
  {
    "text": "Silverlight as you go along towards the",
    "start": "871740",
    "end": "877350"
  },
  {
    "text": "right so if I decide to Stargate dotnet 1.1 instead of 1.0 I lose support for Windows Phone",
    "start": "877350",
    "end": "883239"
  },
  {
    "text": "Silverlight I'm sure that's going to be a problem for too many people but the",
    "start": "883239",
    "end": "889509"
  },
  {
    "text": "way these version numbers is in some way a little bit counterintuitive because as developers we like the new shiny right",
    "start": "889509",
    "end": "895389"
  },
  {
    "text": "so ODOT net standard - I should target that that's the best in a way yes it",
    "start": "895389",
    "end": "903129"
  },
  {
    "text": "gives you a lot of api's but the problem is if you target dotnet standard - you",
    "start": "903129",
    "end": "908139"
  },
  {
    "text": "can know your your package can no longer be used on these older versions of the libraries now if you go between dotnet",
    "start": "908139",
    "end": "915910"
  },
  {
    "text": "standard one one 1.2 you kind of start to lose support for these old Windows Phone 8 and Windows Phone Silverlight",
    "start": "915910",
    "end": "922480"
  },
  {
    "text": "things doesn't really matter too much right they're kind of they're kind of dying if they were really truly alive to",
    "start": "922480",
    "end": "930249"
  },
  {
    "text": "start with but when you go from 1.2 to 1.3 you drop support for dotnet 4.5",
    "start": "930249",
    "end": "939029"
  },
  {
    "text": "right I would hope that most people are and 4.6 these days but I know it's like",
    "start": "939029",
    "end": "945040"
  },
  {
    "text": "working a big company we get held back we get held back on old frameworks so moving from dotnet standard 1.2 to 1.3",
    "start": "945040",
    "end": "951879"
  },
  {
    "text": "just you know that's an example of where you might suddenly cut out a bunch of users now just because a package targets",
    "start": "951879",
    "end": "960819"
  },
  {
    "text": "dotnet standard doesn't mean we can't multi target anymore right so you could choose to support dotnet standard - and",
    "start": "960819",
    "end": "967379"
  },
  {
    "text": " a dotnet framework 4.5 assembly in the same package so you keep supporting",
    "start": "967379",
    "end": "972819"
  },
  {
    "text": "the - in that way but I spoke to one person he told me that when he creates",
    "start": "972819",
    "end": "978279"
  },
  {
    "text": "new library he's first of all targets don't nest own at one and tries to write",
    "start": "978279",
    "end": "983499"
  },
  {
    "text": "the things he wants to do when he finds that there's an API he needs which doesn't exist in one he goes to one",
    "start": "983499",
    "end": "988539"
  },
  {
    "text": "point one to see if it exists there and so forth and so forth so in many ways it can be a good idea to always target one",
    "start": "988539",
    "end": "994689"
  },
  {
    "text": "to start with now this this there's a kind of shift sliding-window relevance",
    "start": "994689",
    "end": "1000600"
  },
  {
    "text": "here because obviously as time goes by this older stuff is going to become less and less relevant you know but I still",
    "start": "1000600",
    "end": "1006600"
  },
  {
    "text": "think that if you can just target one we know why not because and you can be you your platform your library can be used",
    "start": "1006600",
    "end": "1013760"
  },
  {
    "text": "everywhere a little no one's got that standard too so the original intention",
    "start": "1013760",
    "end": "1020360"
  },
  {
    "text": "was for dotnet standard to support semver in its versioning what that means",
    "start": "1020360",
    "end": "1028160"
  },
  {
    "text": "is that 2.0 you Rev your major version",
    "start": "1028160",
    "end": "1033438"
  },
  {
    "text": "when you make breaking change and originally dotnet standard 2 was going to be a breaking change originally it",
    "start": "1033439",
    "end": "1039740"
  },
  {
    "text": "was going to actually cut out some ap eyes which were in 1.6 at 1.5 and when",
    "start": "1039740",
    "end": "1045980"
  },
  {
    "text": "this was kind of announced the community kind of threw its toys out of the pram and complained about this and a lot of",
    "start": "1045980",
    "end": "1051440"
  },
  {
    "text": "feedback was given and listened to and the decision was made no we'll make it back as compatible will actually make it",
    "start": "1051440",
    "end": "1056840"
  },
  {
    "text": "a superset in the end however so what this means is that dotnet standard 2 only really needed to be called 1.7",
    "start": "1056840",
    "end": "1063490"
  },
  {
    "text": "according December but for whatever reason the 2.0 moniker stayed somewhere",
    "start": "1063490",
    "end": "1070040"
  },
  {
    "text": "doesn't say you can't upgrade the major version when you don't make a break in change so I guess that's fine but Donna",
    "start": "1070040",
    "end": "1077419"
  },
  {
    "text": "Steiner - is quite a change from 1.6 so in kind of understand what they wanted",
    "start": "1077419",
    "end": "1082880"
  },
  {
    "text": "this to be a bigger a bigger kind of thing with a bigger kind of announcement associated with it the documentation",
    "start": "1082880",
    "end": "1091760"
  },
  {
    "text": "around this is really really good so if you follow URLs like these by the way don't bother trying to memorize these",
    "start": "1091760",
    "end": "1097400"
  },
  {
    "text": "now or take photos old I will tweet the link to the slide decks they are HTML",
    "start": "1097400",
    "end": "1103520"
  },
  {
    "text": "based so you can just browse them this is my twitter handle if you don't see",
    "start": "1103520",
    "end": "1108620"
  },
  {
    "text": "them just tweet me and I'll I'll make sure you get them this is the diff if",
    "start": "1108620",
    "end": "1113900"
  },
  {
    "text": "you go to these kind of links you'll see things like this this is a diff between dotnet standard 1.4 and 1.3 this is",
    "start": "1113900",
    "end": "1120799"
  },
  {
    "text": "actually the smallest diff of all of them it's really really small all you can you can see that all they've done here is added a class another class here",
    "start": "1120799",
    "end": "1129410"
  },
  {
    "text": "and a few enum members and they have this for every single revision so you",
    "start": "1129410",
    "end": "1135590"
  },
  {
    "text": "can see the different every revision so how does this work well",
    "start": "1135590",
    "end": "1142830"
  },
  {
    "text": "when you when you build your don't nest down a class library what you do is you",
    "start": "1142830",
    "end": "1148170"
  },
  {
    "text": "build it against an this thing called net standard DLL and this thing is",
    "start": "1148170",
    "end": "1153810"
  },
  {
    "text": "completely empty and that standard deal is totally empty all it is effectively is a definition of contracts so I'll",
    "start": "1153810",
    "end": "1160890"
  },
  {
    "text": "show you it here in a Niall spy so it's",
    "start": "1160890",
    "end": "1167640"
  },
  {
    "text": "this one here net standard to nest standard DLL and if you actually drill",
    "start": "1167640",
    "end": "1173460"
  },
  {
    "text": "into this thing there's actually nothing in it apart from type definite type and method definitions so if we look at something",
    "start": "1173460",
    "end": "1179790"
  },
  {
    "text": "like array for instance and if you look at the void methods there's there's just",
    "start": "1179790",
    "end": "1186240"
  },
  {
    "text": "nothing in them at all right it's just empty it's it's almost like it's almost like the concept of an interface it's",
    "start": "1186240",
    "end": "1191610"
  },
  {
    "text": "just something you compile against when you produce your package if you look at",
    "start": "1191610",
    "end": "1197190"
  },
  {
    "text": "some of the methods that return objects they they do something slightly stranger",
    "start": "1197190",
    "end": "1203250"
  },
  {
    "text": "they throw they throw no did you know that you could throw null the the the",
    "start": "1203250",
    "end": "1210530"
  },
  {
    "text": "constraint of only throwing an exception type is actually a c-sharp thing actually the c-sharp compiler which",
    "start": "1210530",
    "end": "1216990"
  },
  {
    "text": "enforces that in il the CLR will let you throw anything in Castro null 0 false 1",
    "start": "1216990",
    "end": "1223050"
  },
  {
    "text": "2 3 it really doesn't matter so it's clear that this wasn't written using c-sharp this must have been written",
    "start": "1223050",
    "end": "1229110"
  },
  {
    "text": "using some kind of like il generation or something like that the reason for that is because the CLR",
    "start": "1229110",
    "end": "1235560"
  },
  {
    "text": "will not let you just do nothing in the method which returns something it either has to return something or has to throw",
    "start": "1235560",
    "end": "1241470"
  },
  {
    "text": "something so I guess that the cheapest thing you can possibly throw is null now",
    "start": "1241470",
    "end": "1250500"
  },
  {
    "text": "it's important to make the distinction between the package and the application so and if you like this is more like",
    "start": "1250500",
    "end": "1255920"
  },
  {
    "text": "compilation time versus runtime so when you compile the package so you're not",
    "start": "1255920",
    "end": "1261120"
  },
  {
    "text": "running the package you're just compiling it you compile it against next standard DLL when you use it in an",
    "start": "1261120",
    "end": "1267300"
  },
  {
    "text": "application things are slightly different so this is a dotnet framework application up here so the good old",
    "start": "1267300",
    "end": "1273660"
  },
  {
    "text": "dotnet framework we wish you all no fur for many years now and that points to the dotnet",
    "start": "1273660",
    "end": "1278940"
  },
  {
    "text": "framework assemblies for example MS core lib the.net framework application",
    "start": "1278940",
    "end": "1286340"
  },
  {
    "text": "references the dotnet stand a class library and that is referencing net",
    "start": "1286340",
    "end": "1293460"
  },
  {
    "text": "standard dll as you just saw however this is not the net standard dll that",
    "start": "1293460",
    "end": "1299160"
  },
  {
    "text": "was in the previous diagrams the previous diagram there are many net standard dll's the one I just showed you",
    "start": "1299160",
    "end": "1306230"
  },
  {
    "text": "in this diagram this is the one that ships with dotnet standard itself this",
    "start": "1306230",
    "end": "1313290"
  },
  {
    "text": "one ships with the dotnet framework and it uses something called type forwarding",
    "start": "1313290",
    "end": "1320730"
  },
  {
    "text": "does anyone know what type forwarding is no one okay so type forwarding is type",
    "start": "1320730",
    "end": "1328380"
  },
  {
    "text": "four winning is a mechanism whereby an assembly can effectively pretend to own a type think about system objects right",
    "start": "1328380",
    "end": "1337080"
  },
  {
    "text": "system object is not just system object system objects is actually MS core lib",
    "start": "1337080",
    "end": "1342720"
  },
  {
    "text": "system object that's the type identifier in dotnet the type I a complete type",
    "start": "1342720",
    "end": "1347730"
  },
  {
    "text": "identifier is not just system dot object its MS core lib and I think it's special emotion mark system object that's a",
    "start": "1347730",
    "end": "1355800"
  },
  {
    "text": "complete type identifier so when the dotnet framework talks about system",
    "start": "1355800",
    "end": "1361380"
  },
  {
    "text": "object it's talking about MS core lib system object the.net standard class",
    "start": "1361380",
    "end": "1368520"
  },
  {
    "text": "library is talking about net standard dll system object back here that system",
    "start": "1368520",
    "end": "1377040"
  },
  {
    "text": "object in that standard dll is empty let's call those men empty method definitions of throwing throwing of null",
    "start": "1377040",
    "end": "1385130"
  },
  {
    "text": "system object in this assembly says type forwarded to system object in ms call",
    "start": "1385130",
    "end": "1393150"
  },
  {
    "text": "lib so it's a way for the type for wordings away from an assembly to say",
    "start": "1393150",
    "end": "1398400"
  },
  {
    "text": "that one time so to the runtime I own this type but when you actually access it I'm going to forward you and",
    "start": "1398400",
    "end": "1404400"
  },
  {
    "text": "send you over there to this other dll that's basically type fourteen nutshell it's existed since I think I",
    "start": "1404400",
    "end": "1410580"
  },
  {
    "text": "think that's one point I have done that because it's done a quite a lot on the gag question does it have a performance",
    "start": "1410580",
    "end": "1418259"
  },
  {
    "text": "impact so that's a question I very often get asked I would say it",
    "start": "1418259",
    "end": "1426360"
  },
  {
    "text": "the strict answer is probably yes the practical answer is probably no this is",
    "start": "1426360",
    "end": "1432749"
  },
  {
    "text": "such a low-level thing that this has been happening probably every single time we've run our dotnet application",
    "start": "1432749",
    "end": "1439110"
  },
  {
    "text": "since 1.0 definitely since 1.1 so whether you know whether you know it or",
    "start": "1439110",
    "end": "1445919"
  },
  {
    "text": "not the.net code that you're running today is doing a hell of a lot of type forwarding already in the background so",
    "start": "1445919",
    "end": "1451289"
  },
  {
    "text": "it's a kind of thing which is going to be kind of micro micro Pico optimization that kind of level I had a question is",
    "start": "1451289",
    "end": "1462779"
  },
  {
    "text": "is it the same thing as you've sometimes finding config files no it's not so what you're talking about binding redirects",
    "start": "1462779",
    "end": "1468809"
  },
  {
    "text": "no that's for the fusion binder that's a mechanism whereby at runtime you can say",
    "start": "1468809",
    "end": "1473850"
  },
  {
    "text": "when you've got conflicting versions of these assemblies use this version of the assembly now the tight forwarding is a",
    "start": "1473850",
    "end": "1479730"
  },
  {
    "text": "lower-level thing that is that more or less makes sense so far yeah okay I see",
    "start": "1479730",
    "end": "1487860"
  },
  {
    "text": "most of you nodding so that's good all right now I promised to talk a little",
    "start": "1487860",
    "end": "1494369"
  },
  {
    "text": "bit more about dotnet 2.0 dontist and a 2.0 this is Todd next and a two point was released last year and this was a",
    "start": "1494369",
    "end": "1500669"
  },
  {
    "text": "major change right it was anyone here at Richard Campbell's talk yes that I bet",
    "start": "1500669",
    "end": "1505679"
  },
  {
    "text": "history of dotnet yeah a couple of you so he talked there about how dotnet standard 2 is kind of the first real",
    "start": "1505679",
    "end": "1512429"
  },
  {
    "text": "kind of like industrial-strength one and donate core 2 and I do tend to agree with that",
    "start": "1512429",
    "end": "1517909"
  },
  {
    "text": "don't let to donek standard 2 was a major change don't know standard one you",
    "start": "1517909",
    "end": "1524759"
  },
  {
    "text": "know was all well and good but there was there was two main points of feedback from the community",
    "start": "1524759",
    "end": "1530029"
  },
  {
    "text": "the first was limitations so limitations is what by limitations I mean there was",
    "start": "1530029",
    "end": "1537389"
  },
  {
    "text": "just not that many API is available right so if you try to actually change your package to target dotnet",
    "start": "1537389",
    "end": "1544490"
  },
  {
    "text": "stand at one point whatever as oppose has done that framework you'd soon get it come up against this problem of well",
    "start": "1544490",
    "end": "1550520"
  },
  {
    "text": "the api's I need just aren't there so what they did with dotnet standard too",
    "start": "1550520",
    "end": "1556430"
  },
  {
    "text": "was this is the picture you saw earlier bomb nest and at one point six looked a bit more like this right it was just a",
    "start": "1556430",
    "end": "1562070"
  },
  {
    "text": "much much smaller intersection of the of the various platforms Don that standard",
    "start": "1562070",
    "end": "1568640"
  },
  {
    "text": "to said well let's just expand it let's just expand what we are saying should be part of Don this standard in order for a",
    "start": "1568640",
    "end": "1575720"
  },
  {
    "text": "platform to support dotnet standard and it moved the picture back to this so",
    "start": "1575720",
    "end": "1580960"
  },
  {
    "text": "it's actually not too far out of scale those two those two circles because Don",
    "start": "1580960",
    "end": "1587210"
  },
  {
    "text": "net standard honest out of one point six had about thirteen and a half thousand api's where an API is a method or a",
    "start": "1587210",
    "end": "1594380"
  },
  {
    "text": "property or an enum or or whatever dotnet standard to had around 33,000 API",
    "start": "1594380",
    "end": "1604460"
  },
  {
    "text": "is put into it so it's something like a hundred and forty percent increase so a massive massive increase and what it's",
    "start": "1604460",
    "end": "1610250"
  },
  {
    "text": "effectively done to some extent is brought these platforms a bit closer together because it's saying that well in order",
    "start": "1610250",
    "end": "1617000"
  },
  {
    "text": "to support net standard two you need to support this much much wider set of API s so by necessity the overlap between",
    "start": "1617000",
    "end": "1624560"
  },
  {
    "text": "all the platforms is much much greater now and now dotnet standard two has",
    "start": "1624560",
    "end": "1632770"
  },
  {
    "text": "probably most of the API is are sensible on every single platform you know it",
    "start": "1632770",
    "end": "1638180"
  },
  {
    "text": "doesn't have things like the registry obviously which doesn't exist on Mac and Linux and Nicolas exists on Windows but",
    "start": "1638180",
    "end": "1643550"
  },
  {
    "text": "all those API switch makes sense across all the platforms the idea was to get",
    "start": "1643550",
    "end": "1648890"
  },
  {
    "text": "them all into dotnet standard too and I think that's largely being achieved so that should hopefully take care of",
    "start": "1648890",
    "end": "1654740"
  },
  {
    "text": "the limitations and I showed you this diagram early on this is a difference between done that stand at one point for",
    "start": "1654740",
    "end": "1660470"
  },
  {
    "text": "a month or three if you try and look at the difference between dotnet standard two and don't nest and at one point six",
    "start": "1660470",
    "end": "1666200"
  },
  {
    "text": "github just blows up and says sorry we can't show it if that big it really is",
    "start": "1666200",
    "end": "1672350"
  },
  {
    "text": "it really is that enormous so that largely takes care of limitations hopefully the second thing",
    "start": "1672350",
    "end": "1679940"
  },
  {
    "text": "is this thing I referred to as paralysis",
    "start": "1679940",
    "end": "1684100"
  },
  {
    "text": "taking the example of fake it easy fake it easy depends on a castlecore taking",
    "start": "1686830",
    "end": "1695029"
  },
  {
    "text": "the example of n service bus rabbit which is the package I look after my day job",
    "start": "1695029",
    "end": "1700370"
  },
  {
    "text": "that depends off obviously online service bus not too surprisingly it depends on the RabbitMQ client and n",
    "start": "1700370",
    "end": "1707720"
  },
  {
    "text": "service bus itself depends on auto FAQ and surprise surprise Nutan softer jason",
    "start": "1707720",
    "end": "1714759"
  },
  {
    "text": "now this is a dependency graph right here we've got a what this is just a",
    "start": "1714759",
    "end": "1719929"
  },
  {
    "text": "simple one dependency this is a two level dependency graph right this one on this one this one on this one on this one so the problem is if you want to",
    "start": "1719929",
    "end": "1728389"
  },
  {
    "text": "support don't let standard in your library your dependencies have to support it right until they support it",
    "start": "1728389",
    "end": "1734299"
  },
  {
    "text": "you're kind of stuck so with fake it easy we had to wait about we were actually kind of we wanted to release",
    "start": "1734299",
    "end": "1740809"
  },
  {
    "text": "don't fake it easy on that standard but we were kind of you know we were ready to go one to do the work we had to wait",
    "start": "1740809",
    "end": "1747139"
  },
  {
    "text": "about six months for castlecore to release a version that supports dotnet",
    "start": "1747139",
    "end": "1753499"
  },
  {
    "text": "standard so we're kind of stuck or six months right we're just paralyzed now",
    "start": "1753499",
    "end": "1759289"
  },
  {
    "text": "Newton soft that Jason does support don't net standard has not quite a while now",
    "start": "1759289",
    "end": "1765129"
  },
  {
    "text": "maybe that's fixed after problem right so how often you get Gallio depends on Jason dotnet but the point is you can",
    "start": "1765129",
    "end": "1773840"
  },
  {
    "text": "you can imagine much deeper dependency graphs hero you can have dependency graphs for five levels deep or more and",
    "start": "1773840",
    "end": "1779809"
  },
  {
    "text": "the community felt itself in this state of paralysis where it just couldn't we just couldn't move because something",
    "start": "1779809",
    "end": "1786350"
  },
  {
    "text": "down the dependency chain still didn't support that net standard and it was quite frustrating so we've got net",
    "start": "1786350",
    "end": "1793100"
  },
  {
    "text": "standard to the simple solution was reference anything I will take away this",
    "start": "1793100",
    "end": "1798820"
  },
  {
    "text": "restriction or just let you reference anything right now this is where the real magic comes in right so I'm gonna",
    "start": "1798820",
    "end": "1805879"
  },
  {
    "text": "I'm going to show you this in a because it's a kind of a little bit hard to believe until you actually see it",
    "start": "1805879",
    "end": "1811860"
  },
  {
    "text": "happening so I have here a solution",
    "start": "1811860",
    "end": "1817410"
  },
  {
    "text": "named dotnet standard magic and what I've got here is a dotnet Core 2 app and",
    "start": "1817410",
    "end": "1825830"
  },
  {
    "text": "a dotnet standard 2 library now what I'm",
    "start": "1825830",
    "end": "1831330"
  },
  {
    "text": "going to do is I'm going to reference from the dotnet standard 2 library I'm",
    "start": "1831330",
    "end": "1837539"
  },
  {
    "text": "going to install they're really old but really good package called power",
    "start": "1837539",
    "end": "1845250"
  },
  {
    "text": "collections",
    "start": "1845250",
    "end": "1847880"
  },
  {
    "text": "okay now power collections is is a dotnet frame I've actually got it open",
    "start": "1852990",
    "end": "1860350"
  },
  {
    "text": "here somewhere how collections is a dotnet to package",
    "start": "1860350",
    "end": "1868440"
  },
  {
    "text": "right this is not dotnet core to there's none that standard to this is the old dotnet framework to write from yeah",
    "start": "1868440",
    "end": "1877240"
  },
  {
    "text": "there we go from 2005 right that's about time it's released so this is way before",
    "start": "1877240",
    "end": "1883480"
  },
  {
    "text": "any of this dotnet stand and don't let course stuff what I'm going to do now is",
    "start": "1883480",
    "end": "1889780"
  },
  {
    "text": "I'm going to well first of all I'll just use it I'll just do something using that",
    "start": "1889780",
    "end": "1896020"
  },
  {
    "text": "package so a couple of using statements now I'm going to reference from the",
    "start": "1896020",
    "end": "1902740"
  },
  {
    "text": "dotnet core app I'm going to reference of that net standard app and let's just",
    "start": "1902740",
    "end": "1913450"
  },
  {
    "text": "call into it here couple more using",
    "start": "1913450",
    "end": "1918490"
  },
  {
    "text": "statements oops",
    "start": "1918490",
    "end": "1921450"
  },
  {
    "text": "right and let's run that",
    "start": "1924480",
    "end": "1927890"
  },
  {
    "text": "and it works right so we've just referenced from a dotnet core",
    "start": "1934070",
    "end": "1940010"
  },
  {
    "text": "application I've referenced a dotnet standard library and that don't net standard library is referencing a dotnet",
    "start": "1940010",
    "end": "1945710"
  },
  {
    "text": "framework DLL I was pretty amazed when I",
    "start": "1945710",
    "end": "1951170"
  },
  {
    "text": "first saw that I didn't think I didn't think this thing I think was possible and it becomes really interesting when",
    "start": "1951170",
    "end": "1956930"
  },
  {
    "text": "you look at how this thing actually works so again we need to think about",
    "start": "1956930",
    "end": "1963830"
  },
  {
    "text": "the the package and the application separately when you're compiling the package things look like this we've got",
    "start": "1963830",
    "end": "1973220"
  },
  {
    "text": "the dotnet standard class library and that reference is as we saw way back and",
    "start": "1973220",
    "end": "1978290"
  },
  {
    "text": "Eve in the first example this net standard DLL alright this is the empty one the.net standard class library is",
    "start": "1978290",
    "end": "1986300"
  },
  {
    "text": "referenced in the dotnet framework class library alright that's power collections in this example the dotnet framework class",
    "start": "1986300",
    "end": "1994970"
  },
  {
    "text": "library is looking for MS core Lib which",
    "start": "1994970",
    "end": "2001960"
  },
  {
    "text": "is someone that dotnet framework assemblies now the these not net",
    "start": "2001960",
    "end": "2007000"
  },
  {
    "text": "framework assemblies here are not the usual don't net framework assemblies so there is a these are shipped by dotnet",
    "start": "2007000",
    "end": "2015040"
  },
  {
    "text": "standard so there is a version of MS core Lib in these assemblies down here",
    "start": "2015040",
    "end": "2021730"
  },
  {
    "text": "which is type forwarding back to the empty net standard DLL",
    "start": "2021730",
    "end": "2028320"
  },
  {
    "text": "I'll show you what the assemblies look like so this is the this is the the net",
    "start": "2033289",
    "end": "2052530"
  },
  {
    "text": "standard DLL hang on them it I'm",
    "start": "2052530",
    "end": "2057780"
  },
  {
    "text": "confusing myself now ah here we are it's this one here so this is a version",
    "start": "2057780",
    "end": "2066839"
  },
  {
    "text": "of ms core Lib which is shipped by dotnet standard - and this one is type",
    "start": "2066839",
    "end": "2073858"
  },
  {
    "text": "forwarding - let's just pick that it's tight forwarding back to that empty net",
    "start": "2073859",
    "end": "2082560"
  },
  {
    "text": "standard DLL from dotnet standard right",
    "start": "2082560",
    "end": "2089040"
  },
  {
    "text": "now that's the easy bit if we look at",
    "start": "2089040",
    "end": "2095669"
  },
  {
    "text": "the application things are a bit more complicated still the.net core",
    "start": "2095669",
    "end": "2101430"
  },
  {
    "text": "application is looking for the.net core assemblies so I think the system what",
    "start": "2101430",
    "end": "2107940"
  },
  {
    "text": "object is in there is in it is in an assembly called system dot runtime in in the concepts bottleneck or rather than a",
    "start": "2107940",
    "end": "2114780"
  },
  {
    "text": "mess called it so these are just the standard runtime assemblies that run",
    "start": "2114780",
    "end": "2121470"
  },
  {
    "text": "they're used when you run any dotnet core application the dotnet stand the",
    "start": "2121470",
    "end": "2128040"
  },
  {
    "text": "class library is pointing to net standard DLL this is yet another version of net standard DLL this is net standard",
    "start": "2128040",
    "end": "2136349"
  },
  {
    "text": "dll ship by the dotnet core platform and that is type forwarding back to the net",
    "start": "2136349",
    "end": "2143369"
  },
  {
    "text": "core assemblies the net the dotnet framework class library is pointing to",
    "start": "2143369",
    "end": "2150030"
  },
  {
    "text": "yet another set of dotnet framework assemblies which are shipped by the dotnet core platform",
    "start": "2150030",
    "end": "2157310"
  },
  {
    "text": "so there is an MS core Lib in here in the dotnet core assemblies which is",
    "start": "2157310",
    "end": "2163829"
  },
  {
    "text": "pointing back - the actual runtime assemble is for.net",
    "start": "2163829",
    "end": "2169300"
  },
  {
    "text": "core right so at runtime everything this this and this either directly all of our",
    "start": "2169300",
    "end": "2176380"
  },
  {
    "text": "tight forwarding are all pointing back to the runtime dotnet core assemblies I",
    "start": "2176380",
    "end": "2183630"
  },
  {
    "text": "still have trouble remembering this myself I have to go back to these diagrams and work through it but if you",
    "start": "2184920",
    "end": "2190990"
  },
  {
    "text": "think about yeah question",
    "start": "2190990",
    "end": "2194010"
  },
  {
    "text": "thank you that's a good question so the question is what happens if the dotnet",
    "start": "2202440",
    "end": "2208480"
  },
  {
    "text": "framework library tries to call something in here which actually doesn't",
    "start": "2208480",
    "end": "2213490"
  },
  {
    "text": "exist in here it's a really good question it's the first thing that I asked as well when I saw this you'll get",
    "start": "2213490",
    "end": "2221620"
  },
  {
    "text": "a runtime exception right there is just no way around that it can it can't do",
    "start": "2221620",
    "end": "2226840"
  },
  {
    "text": "any kind of magic to say well I'm actually going to make something happen which doesn't exist in here right",
    "start": "2226840",
    "end": "2232210"
  },
  {
    "text": "so in it so this is this is a bridge this is a bridge towards allowing you to",
    "start": "2232210",
    "end": "2239290"
  },
  {
    "text": "use current dotnet framework class libraries which are out there against",
    "start": "2239290",
    "end": "2246000"
  },
  {
    "text": "don't nest and and libraries and in dotnet core applications until those",
    "start": "2246000",
    "end": "2251530"
  },
  {
    "text": "libraries actually support that net standard all right so in this scenario testing is quite important right you",
    "start": "2251530",
    "end": "2256750"
  },
  {
    "text": "want you want to have fairly thorough testing if you're doing this right it's a bit of a hack ultimately but it",
    "start": "2256750",
    "end": "2262690"
  },
  {
    "text": "unlocks that paralysis because it means we no longer have to wait for power collections to support on that stand we",
    "start": "2262690",
    "end": "2268780"
  },
  {
    "text": "can just go and do our work now and create a dotnet standard package referencing something like power",
    "start": "2268780",
    "end": "2274930"
  },
  {
    "text": "collections question",
    "start": "2274930",
    "end": "2279900"
  },
  {
    "text": "okay the question is does it work with dotnet framework applications as well as we've done as well as with dotnet core",
    "start": "2288070",
    "end": "2294700"
  },
  {
    "text": "applications the answer is yes it does and the reason for that is that where we've got this net standard DLL here",
    "start": "2294700",
    "end": "2301900"
  },
  {
    "text": "ship by donut core we've also got an octet standards deal out a net standard",
    "start": "2301900",
    "end": "2308320"
  },
  {
    "text": "DLL shipped by the dotnet framework which does the same job pointing better don't net framework assemblies so yes",
    "start": "2308320",
    "end": "2314890"
  },
  {
    "text": "you could replace dotnet core up here and donate core up here and donate core up here we've done that framework and the dog and the diagram looks the same",
    "start": "2314890",
    "end": "2322410"
  },
  {
    "text": "the reason that this was done was that an analysis was done as a nougat gallery",
    "start": "2322410",
    "end": "2328270"
  },
  {
    "text": "and the vast majority of nougat packages on the gallery which target the botnet framework actually used api's which were",
    "start": "2328270",
    "end": "2336310"
  },
  {
    "text": "available and don't let standard - so that's the reason this was done so in",
    "start": "2336310",
    "end": "2341590"
  },
  {
    "text": "the vast majority of cases you're actually going to be ok you won't hit that runtime exception which you mentioned now I for just for fun what",
    "start": "2341590",
    "end": "2351130"
  },
  {
    "text": "would what would happen if I cut out the middleman alright so what would happen if I didn't have the dotnet standard",
    "start": "2351130",
    "end": "2357820"
  },
  {
    "text": "library sitting between the app and the dotnet framework library and this is",
    "start": "2357820",
    "end": "2363820"
  },
  {
    "text": "actually completely irrelevant to this talk this is about that net standard but I just wanted to see what would happen I can resist it so what I've done here in",
    "start": "2363820",
    "end": "2371920"
  },
  {
    "text": "this net core magic solution is all I've got here is just a dotnet core app right",
    "start": "2371920",
    "end": "2378430"
  },
  {
    "text": "just a dotnet core console app and I'm gonna reference power collections",
    "start": "2378430",
    "end": "2388290"
  },
  {
    "text": "directly so this is the same power",
    "start": "2388290",
    "end": "2394210"
  },
  {
    "text": "collect as you saw before",
    "start": "2394210",
    "end": "2397109"
  },
  {
    "text": "and I will just make some kind of cool",
    "start": "2399310",
    "end": "2405160"
  },
  {
    "text": "into it couple of using statements right",
    "start": "2405160",
    "end": "2413080"
  },
  {
    "text": "so this is a dotnet core a.net core app installing a dotnet framework package",
    "start": "2413080",
    "end": "2420700"
  },
  {
    "text": "only who thinks this is gonna work not many of you are so pessimistic I don't",
    "start": "2420700",
    "end": "2428860"
  },
  {
    "text": "think it was gonna work either but let's give it a try",
    "start": "2428860",
    "end": "2433680"
  },
  {
    "text": "it works alright that's that was a real Wow moment for me I don't think most",
    "start": "2434400",
    "end": "2441850"
  },
  {
    "text": "people realize this still you can do this now you can actually take it you can actually write a dotnet core app and",
    "start": "2441850",
    "end": "2448060"
  },
  {
    "text": "reference a dotnet framework assembly right you do not have to wait necessarily for dotnet core and that's",
    "start": "2448060",
    "end": "2454240"
  },
  {
    "text": "not net standards of support again you know test it in case you get those runtime exceptions but but yeah it is",
    "start": "2454240",
    "end": "2461800"
  },
  {
    "text": "pretty amazing sorry I'm not sure I",
    "start": "2461800",
    "end": "2470410"
  },
  {
    "text": "heard you this is it right so if that",
    "start": "2470410",
    "end": "2478570"
  },
  {
    "text": "application run on non Windows platform and tried to touch the registry actually windows are not Windows doesn't make any",
    "start": "2478570",
    "end": "2485170"
  },
  {
    "text": "difference because it's just on that core so if you took that dotnet core app",
    "start": "2485170",
    "end": "2490720"
  },
  {
    "text": "and ran it on Linux you it would it would explode if the dotnet framework assembly tried to touch a registry if",
    "start": "2490720",
    "end": "2496900"
  },
  {
    "text": "you ran it on Windows it would also explode because the dotnet core platform on Windows doesn't have the registry",
    "start": "2496900",
    "end": "2503020"
  },
  {
    "text": "either right because don't Annette calls common every platform doesn't it's not different for Windows yeah so you're",
    "start": "2503020",
    "end": "2509980"
  },
  {
    "text": "going to get that runtime exception so again you know this is a kind of bridge while that library doesn't support",
    "start": "2509980",
    "end": "2516360"
  },
  {
    "text": "either dotnet cord on that standard to allow you to get things working but",
    "start": "2516360",
    "end": "2522610"
  },
  {
    "text": "ideally you're gonna want that package you're installing to support on their cord on that standard",
    "start": "2522610",
    "end": "2528839"
  },
  {
    "text": "and really this just works as simply as that is literally just cutting out that",
    "start": "2531080",
    "end": "2537780"
  },
  {
    "text": "middleman there so we've still got the dotnet core application pointing right",
    "start": "2537780",
    "end": "2543450"
  },
  {
    "text": "through that into it on that frame at class library and we've still got the MS",
    "start": "2543450",
    "end": "2548790"
  },
  {
    "text": "core Lib shipped with dotnet core pointing back to the dotnet core runtime assemblies so things just work it's a",
    "start": "2548790",
    "end": "2555810"
  },
  {
    "text": "cool bit of magic it is a hack you know be careful with it but I think it's it's pretty cool does it work with lower",
    "start": "2555810",
    "end": "2566130"
  },
  {
    "text": "versions of.net core does it does it work with lower versions of.net core so",
    "start": "2566130",
    "end": "2571380"
  },
  {
    "text": "that don't let call 1.1 for instance the answer is no well as far as I know I'll be I'll be amazed if it does because",
    "start": "2571380",
    "end": "2577770"
  },
  {
    "text": "this this type 14 magic was part of the whole 2.0 release give it a try if you",
    "start": "2577770",
    "end": "2587670"
  },
  {
    "text": "know if you want to try this yourself you need dotnet core 2 you need the",
    "start": "2587670",
    "end": "2592890"
  },
  {
    "text": "these are the minimum versions of the ideas you need and obviously Visual Studio code is just being released all",
    "start": "2592890",
    "end": "2599100"
  },
  {
    "text": "the time these are the repos again you know you'll get the slides afterwards so you can click through those and give",
    "start": "2599100",
    "end": "2605280"
  },
  {
    "text": "this a try for yourself so that will hopefully get rid of most of the",
    "start": "2605280",
    "end": "2610920"
  },
  {
    "text": "paralysis and kind of unlock the the new get community and that in a nutshell is",
    "start": "2610920",
    "end": "2617400"
  },
  {
    "text": "not net standard - this was the big thing there's a release last year in this space more AP is and the ability to",
    "start": "2617400",
    "end": "2623160"
  },
  {
    "text": "effectively reference anything I say reference any I say anything with a star it's not really anything all that all",
    "start": "2623160",
    "end": "2631620"
  },
  {
    "text": "that type forwarding magic ships for the.net framework and I think for some of the PCL profiles because the problem",
    "start": "2631620",
    "end": "2638130"
  },
  {
    "text": "that was trying to be sold was that the gallery was full of packages for the framework for the.net framework and",
    "start": "2638130",
    "end": "2643620"
  },
  {
    "text": "sometimes for PC ELLs and we want to be able to use those in the new platforms so it's effectively almost anything",
    "start": "2643620",
    "end": "2652540"
  },
  {
    "text": "right if I've got a package what do I do if I want to port my package what happens if I want to port my package",
    "start": "2652540",
    "end": "2658270"
  },
  {
    "text": "from the dotnet framework to Don that's standard this is a really really good",
    "start": "2658270",
    "end": "2663490"
  },
  {
    "text": "resource right Don that API port it comes in two different flavors it comes as a visual studio add-in which I",
    "start": "2663490",
    "end": "2669910"
  },
  {
    "text": "believe is actually packaged with the latest versions of Visual Studio you can just right click and say analyze project",
    "start": "2669910",
    "end": "2674950"
  },
  {
    "text": "project portability or you can run it by the command line analyze - f2f to a file",
    "start": "2674950",
    "end": "2681460"
  },
  {
    "text": "and it goes through analyzes the entire assembly and it spits out of all things",
    "start": "2681460",
    "end": "2686620"
  },
  {
    "text": "an Excel report but I think you can actually configure it to to output 'html",
    "start": "2686620",
    "end": "2693700"
  },
  {
    "text": "and JSON as well in that excel report you'll see something like this so I ran",
    "start": "2693700",
    "end": "2698740"
  },
  {
    "text": "it friend service bus core and this is the current released version of in-service bus and service bus for",
    "start": "2698740",
    "end": "2705700"
  },
  {
    "text": "dotnet stand and dotnet core is actually in beta right now the current RTM event",
    "start": "2705700",
    "end": "2713140"
  },
  {
    "text": "service bus targets dotnet framework 4.5.2 so unsurprisingly the analyzer",
    "start": "2713140",
    "end": "2719680"
  },
  {
    "text": "told us that dotnet framework 4.5.2 supports 100% of the api is a 10 service",
    "start": "2719680",
    "end": "2725170"
  },
  {
    "text": "bus needs for dotnet - for dotnet standard 1.6 and news isn't quite as",
    "start": "2725170",
    "end": "2731950"
  },
  {
    "text": "good dotnet standard 1.6 only supports 66 percent of the api's certain service",
    "start": "2731950",
    "end": "2740260"
  },
  {
    "text": "bus needs with dotnet standard - the situation is much better it's 87 percent",
    "start": "2740260",
    "end": "2746050"
  },
  {
    "text": "and we decided that that's probably a reasonable gap to try and close so we",
    "start": "2746050",
    "end": "2751900"
  },
  {
    "text": "are aiming for dotnet standard to support and then service bus",
    "start": "2751900",
    "end": "2756900"
  },
  {
    "text": "what do i do what do I do to close that gap where do just to close that 13% gap",
    "start": "2758630",
    "end": "2763849"
  },
  {
    "text": "or whatever the percentages in my library there's a couple of things you can do you can change your library now",
    "start": "2763849",
    "end": "2769670"
  },
  {
    "text": "there's two types of change you can make you can make an internal change where you're using something internally in",
    "start": "2769670",
    "end": "2776059"
  },
  {
    "text": "your library to achieve something as part of your package you can change that to perhaps some other API and don't let",
    "start": "2776059",
    "end": "2782390"
  },
  {
    "text": "standard right sometimes that is an option that's really nice because you don't have to change your public API it's just a matter of just changing the",
    "start": "2782390",
    "end": "2789170"
  },
  {
    "text": "API to use internally or you can make an external change so you might be returning some object from your API",
    "start": "2789170",
    "end": "2796490"
  },
  {
    "text": "which only exists in the.net framework or you might have a parameter on a method or something you may have to",
    "start": "2796490",
    "end": "2803750"
  },
  {
    "text": "change that you may have to change that to some other object which happens to exist in the.net standard that's",
    "start": "2803750",
    "end": "2810559"
  },
  {
    "text": "obviously a breaking change if you're following assembler you're gonna have to upgrade your major version but that's",
    "start": "2810559",
    "end": "2816589"
  },
  {
    "text": "just part of part of part of making that kind of change you can separate now this",
    "start": "2816589",
    "end": "2822410"
  },
  {
    "text": "is a very very powerful pattern so in the example of n service bus and service",
    "start": "2822410",
    "end": "2827869"
  },
  {
    "text": "bus works over queueing systems so you can use n service bus with a rabbit you can use it with RAM as M s and Q and as",
    "start": "2827869",
    "end": "2834200"
  },
  {
    "text": "your service bus and other things the original version of n service bus have MS MQ support built into the core DLL so",
    "start": "2834200",
    "end": "2841880"
  },
  {
    "text": "it's like the default queuing system however ms mq doesn't exist on linux or",
    "start": "2841880",
    "end": "2846980"
  },
  {
    "text": "mac so it makes absolutely no sense whatsoever to have the MS mq API is as part of",
    "start": "2846980",
    "end": "2852259"
  },
  {
    "text": "dotnet standard now only a certain subsection of our customers use M s mq",
    "start": "2852259",
    "end": "2859069"
  },
  {
    "text": "right so we thought well why don't we just separate that into a separate package arguably should have been done",
    "start": "2859069",
    "end": "2864140"
  },
  {
    "text": "to start with but we just took that whole m sm q slice out of the core",
    "start": "2864140",
    "end": "2869390"
  },
  {
    "text": "package put it into a separate one and then made n service bus call depend on",
    "start": "2869390",
    "end": "2874940"
  },
  {
    "text": "don't let standard instead whereas the MS mq package is dotnet framework so",
    "start": "2874940",
    "end": "2881569"
  },
  {
    "text": "means if you want that you have to stick to Windows if you don't want that you can use Linux or Mac or something else",
    "start": "2881569",
    "end": "2887420"
  },
  {
    "text": "and use one of the other libraries like the rabbit mq into creation which had forced on that",
    "start": "2887420",
    "end": "2892499"
  },
  {
    "text": "standard so that's a really powerful strategy for this if you think there's a",
    "start": "2892499",
    "end": "2897869"
  },
  {
    "text": "certain slice of your library which clearly depends on things which aren't cross-platform slice it out put it into",
    "start": "2897869",
    "end": "2904499"
  },
  {
    "text": "another package and that only makes sense of a certain subsection of your users need that if all of your users",
    "start": "2904499",
    "end": "2910919"
  },
  {
    "text": "need that you're gonna find some other solution but if you know that only some people need that bit put it into another",
    "start": "2910919",
    "end": "2916199"
  },
  {
    "text": "package for those people and those people could continue to rely on Windows or and the.net framework instead and",
    "start": "2916199",
    "end": "2922499"
  },
  {
    "text": "lastly if all else fails it might be a chance to kind of get rid of those those obscure API is that you think no one",
    "start": "2922499",
    "end": "2929160"
  },
  {
    "text": "uses or you know no one uses you know it might just be time to chuck away something perhaps again you know that's",
    "start": "2929160",
    "end": "2935849"
  },
  {
    "text": "going to be breaking change so a new major version but hopefully you won't have to resort to that too much and you",
    "start": "2935849",
    "end": "2941459"
  },
  {
    "text": "can get by with kind of change and separate strategies first api's and",
    "start": "2941459",
    "end": "2948449"
  },
  {
    "text": "versions of API of dotnet this is a really really good resource this is the",
    "start": "2948449",
    "end": "2954239"
  },
  {
    "text": "most kind of complete resource out there for all the api's of that are available every single platform in there every",
    "start": "2954239",
    "end": "2961289"
  },
  {
    "text": "single version with not that standard you can go in there you can search for anything like something like I data",
    "start": "2961289",
    "end": "2968459"
  },
  {
    "text": "reader okay so search for that and it will actually it'll actually tell you a little bit about it you know methods and",
    "start": "2968459",
    "end": "2975119"
  },
  {
    "text": "things it's a bit like the speed like the usual standard Docs but then it will tell you every single platform it's",
    "start": "2975119",
    "end": "2981029"
  },
  {
    "text": "available for so it's available for all versions as on their core all versions",
    "start": "2981029",
    "end": "2986249"
  },
  {
    "text": "is on that framework it's only available in dotnet standard - alright so this is",
    "start": "2986249",
    "end": "2993599"
  },
  {
    "text": "one of the ones which was missing from dot nest and at one point X it's one of the ones that came back in and very",
    "start": "2993599",
    "end": "2998939"
  },
  {
    "text": "various versions of mono and so forth and so forth so that is a really really good resource there isn't there is an",
    "start": "2998939",
    "end": "3006529"
  },
  {
    "text": "amount of works on my machine here who's heard of this kind of platform not supported exception yes lean oh sorry",
    "start": "3006529",
    "end": "3012559"
  },
  {
    "text": "yes question that was api's have done",
    "start": "3012559",
    "end": "3017719"
  },
  {
    "text": "that yeah like I said I will tweet the slides afterwards and you should be able to get hold of them",
    "start": "3017719",
    "end": "3024789"
  },
  {
    "text": "there is an animal that works on my machine because there is a single platform not supported exception some of",
    "start": "3026050",
    "end": "3034820"
  },
  {
    "text": "the platforms have effectively cheated in saying that they support the dotnet standard 2.0 and there was a very small",
    "start": "3034820",
    "end": "3041300"
  },
  {
    "text": "set of api's where at runtime you'll actually get a platform not supported exception this is like the thorn in the",
    "start": "3041300",
    "end": "3048290"
  },
  {
    "text": "side of dotnet standard alright and I hope I hope that this won't continue and",
    "start": "3048290",
    "end": "3053690"
  },
  {
    "text": "it is just a very very small subsection of the API is just something to bear in mind you're very unlikely to hit them",
    "start": "3053690",
    "end": "3059870"
  },
  {
    "text": "but some platforms do do this right so for instance for process set this",
    "start": "3059870",
    "end": "3066800"
  },
  {
    "text": "property on Linux you'll get a platform not supported exception and on OSX for",
    "start": "3066800",
    "end": "3072350"
  },
  {
    "text": "this one here you're gonna get platform not supported exception for other processes so that this is well",
    "start": "3072350",
    "end": "3078920"
  },
  {
    "text": "documented if you go to this API compact page it actually lists all of these so",
    "start": "3078920",
    "end": "3084230"
  },
  {
    "text": "you can sort of take preventative action to make sure you're not going to get hit by this",
    "start": "3084230",
    "end": "3090550"
  },
  {
    "text": "don't let standard versus dotnet core alright so this is something I keep hearing confusion about now I am hoping",
    "start": "3090730",
    "end": "3098210"
  },
  {
    "text": "that through what I've already shown you in this talk that the difference has started to become apparent",
    "start": "3098210",
    "end": "3103820"
  },
  {
    "text": "so dotnet core is just another one of the platforms they do get conflated a",
    "start": "3103820",
    "end": "3108950"
  },
  {
    "text": "lot in the in the literature and in when people talk about these things but effectively dotnet standard is that",
    "start": "3108950",
    "end": "3115640"
  },
  {
    "text": "empty contract I showed you the the base don't nest that a nest standard DLL and",
    "start": "3115640",
    "end": "3122030"
  },
  {
    "text": "it is empty alright you don't you don't run in the context of net standard because the next standard dll ascent ultimately is empty",
    "start": "3122030",
    "end": "3129640"
  },
  {
    "text": "it is the platform's which should provide the implementations it is dotnet",
    "start": "3129640",
    "end": "3134870"
  },
  {
    "text": "framework it is you WP it is don't net",
    "start": "3134870",
    "end": "3140330"
  },
  {
    "text": "core you know don't let go is another one of those platforms which happens to implement the dotnet standard",
    "start": "3140330",
    "end": "3148270"
  },
  {
    "text": "question okay so the question is you can",
    "start": "3149680",
    "end": "3165650"
  },
  {
    "text": "create dotnet core libraries so why do they exist why do they exist alongside dotnet standard libraries so a dotnet",
    "start": "3165650",
    "end": "3173870"
  },
  {
    "text": "core library is the equivalent of a dotnet framework library for the.net core platform so before all this started",
    "start": "3173870",
    "end": "3180860"
  },
  {
    "text": "right back when it is simple single dotnet right when it's just a dotnet framework you created dotnet framework",
    "start": "3180860",
    "end": "3187340"
  },
  {
    "text": "libraries to run on a dotnet framework platform right that was the old simple",
    "start": "3187340",
    "end": "3193100"
  },
  {
    "text": "days that's that's a platform right so that's that's an app and it's a library",
    "start": "3193100",
    "end": "3199940"
  },
  {
    "text": "which is designed for the runtime which that app targets over here we've got",
    "start": "3199940",
    "end": "3205220"
  },
  {
    "text": "dotnet core we've got a dotnet core app and a dotnet core library which is",
    "start": "3205220",
    "end": "3210620"
  },
  {
    "text": "designed to run on the.net core platform only it's it's completely analogous but",
    "start": "3210620",
    "end": "3216800"
  },
  {
    "text": "on that framework here darnit core here don't nest standard sits in the middle because don't let standard says well I",
    "start": "3216800",
    "end": "3223520"
  },
  {
    "text": "only I only I'm only calling API is resist in both so they don't let's",
    "start": "3223520",
    "end": "3229280"
  },
  {
    "text": "download be something you can take and run in the context of the.net framework app and the context is don't net dotnet",
    "start": "3229280",
    "end": "3235280"
  },
  {
    "text": "core library now the reason for creating a dotnet core library might be because",
    "start": "3235280",
    "end": "3242110"
  },
  {
    "text": "you simply can't achieve what you want to achieve using the ape not that standard API is that's getting much much",
    "start": "3242110",
    "end": "3248690"
  },
  {
    "text": "rarer now with dotnet standard 2 because it's so big but it's still a valid use",
    "start": "3248690",
    "end": "3253850"
  },
  {
    "text": "case you might find that dotnet framework has the API is you need dotnet core has another set of API is which you",
    "start": "3253850",
    "end": "3260780"
  },
  {
    "text": "need which do the same kind of thing and those and there's just no crossover and overlap and dotnet standard so you might",
    "start": "3260780",
    "end": "3267050"
  },
  {
    "text": "choose to ship a dotnet framework assembly in a dotnet core assembly to support just those two platforms does",
    "start": "3267050",
    "end": "3273260"
  },
  {
    "text": "that answer your question yeah yeah cool",
    "start": "3273260",
    "end": "3278260"
  },
  {
    "text": "and yeah these things doing it conflated because this was for instance this was a snapshot this page has moved on but this",
    "start": "3278549",
    "end": "3284099"
  },
  {
    "text": "is a snapshot this page last year where dotnet standard to preview is scheduled for q2 done that standard ITN was shut",
    "start": "3284099",
    "end": "3291630"
  },
  {
    "text": "off for q3 and they hit these targets by the way right smack bang a middle of q2 smack bang on me like you three I said",
    "start": "3291630",
    "end": "3297690"
  },
  {
    "text": "kudos to the team but when you actually looked at this top of this page you actually said this it's like dotnet core and dotnet",
    "start": "3297690",
    "end": "3304230"
  },
  {
    "text": "standard to.net core and that's an or two so watch out for that so that",
    "start": "3304230",
    "end": "3309329"
  },
  {
    "text": "they're often mentioned at the same time in the literature sorry and I think that",
    "start": "3309329",
    "end": "3314339"
  },
  {
    "text": "does add to the confusion but they are two separate things dotnet standard could potentially exist if dotnet calls",
    "start": "3314339",
    "end": "3320910"
  },
  {
    "text": "stopped existing tomorrow it would still be useful because you could target you",
    "start": "3320910",
    "end": "3328290"
  },
  {
    "text": "could produce the dotnet standard library and use it in done that framework and uwp or something right it",
    "start": "3328290",
    "end": "3334980"
  },
  {
    "text": "is not in no way dependent on the existence of dotnet core but in many ways botnet call drove the creation of",
    "start": "3334980",
    "end": "3341700"
  },
  {
    "text": "dotnet standard because it was it was the most popular alternative platform to",
    "start": "3341700",
    "end": "3347010"
  },
  {
    "text": "turn on that framework so they kind of got developed in tandem but there are completely independent things oh that's",
    "start": "3347010",
    "end": "3353099"
  },
  {
    "text": "more or less clear but they're slipping a bit on the dotnet core 2.1 the rules",
    "start": "3353099",
    "end": "3360089"
  },
  {
    "text": "for them what they did hit them for dotnet standard this is another way of thinking about it this is something that",
    "start": "3360089",
    "end": "3366089"
  },
  {
    "text": "David Fowler put together he created a repo where he actually defined an interface called net standard",
    "start": "3366089",
    "end": "3372450"
  },
  {
    "text": "1.4 and then he kind of showed that the net stand of 1.5 inherits from that and",
    "start": "3372450",
    "end": "3378329"
  },
  {
    "text": "that caught up inherits from that and Don net framework 4.6 one inherits from",
    "start": "3378329",
    "end": "3383460"
  },
  {
    "text": "Don that frame of 4.6 and haratz from.net stand at 1.4 to show that the to show this kind of like interface",
    "start": "3383460",
    "end": "3389040"
  },
  {
    "text": "versus implementations thing I see a few furrowed brows I hope I haven't just undone all my good work by showing you",
    "start": "3389040",
    "end": "3395520"
  },
  {
    "text": "that but I think it does help to think about it in that way sometime so go and have a look at that it may help to give",
    "start": "3395520",
    "end": "3403140"
  },
  {
    "text": "another kind of perspective on on how this das put together a understand of two point one to point two and three now",
    "start": "3403140",
    "end": "3410319"
  },
  {
    "text": "what's gonna happen that I haven't heard any whispers about Don their standard two point one year right there seem to be anyone even talking about a dot nests",
    "start": "3410319",
    "end": "3416619"
  },
  {
    "text": "down a two point one one of the concerns are that people raise sometimes is that",
    "start": "3416619",
    "end": "3422380"
  },
  {
    "text": "each version we've done their stand is going to get bigger and bigger and bigger so every time a new version comes out it's going to put more burden the",
    "start": "3422380",
    "end": "3428619"
  },
  {
    "text": "platform providers to support a bigger API and that is true right because",
    "start": "3428619",
    "end": "3433779"
  },
  {
    "text": "unless they make a breaking change and take something out don't less down a to put one by a necessity has to be bigger",
    "start": "3433779",
    "end": "3438880"
  },
  {
    "text": "than got nets down to however don't nest an or to was such a massive change from",
    "start": "3438880",
    "end": "3444880"
  },
  {
    "text": "dotnet one point six it was such an increase that it does well the idea was",
    "start": "3444880",
    "end": "3450160"
  },
  {
    "text": "to include virtually all of the API is that make sense on all the platforms so",
    "start": "3450160",
    "end": "3455349"
  },
  {
    "text": "while I think there may be a dotnet standard two point one at some point or a two point two I'd be really surprised",
    "start": "3455349",
    "end": "3461199"
  },
  {
    "text": "if there was a 3.0 because that would mean either making a breaking change which I don't think they're gonna do or",
    "start": "3461199",
    "end": "3467469"
  },
  {
    "text": "it means they've added a massive hole that the API is and it's a massive kind of thing that I want to mark it and say",
    "start": "3467469",
    "end": "3473169"
  },
  {
    "text": "you know this is the the latest and greatest I mean who knows marketing powers might self take over from there",
    "start": "3473169",
    "end": "3480159"
  },
  {
    "text": "and there may be a 3.0 but from the technical point of view I would be surprised if there's a need for a 3.0 so",
    "start": "3480159",
    "end": "3487779"
  },
  {
    "text": "how do I do before I wrap up there any more questions about anything I've",
    "start": "3487779",
    "end": "3492999"
  },
  {
    "text": "encouraged yeah-hoo-hoo now thinks they've got a reasonable idea of what",
    "start": "3492999",
    "end": "3498459"
  },
  {
    "text": "dotnet standard is that's almost all of you great who who thinks so you understand the difference",
    "start": "3498459",
    "end": "3504279"
  },
  {
    "text": "between Donna Cornett standard almost as many of you that's really good",
    "start": "3504279",
    "end": "3510009"
  },
  {
    "text": "excellent I've so I didn't ask that question when I came in so but I'll give myself the benefit of doubt and I said I",
    "start": "3510009",
    "end": "3516849"
  },
  {
    "text": "helped a bit with that understanding before I wrap up any more questions yeah",
    "start": "3516849",
    "end": "3524759"
  },
  {
    "text": "is there any benefit to understand the complicated diagrams the answer may well be no but they were",
    "start": "3528039",
    "end": "3535099"
  },
  {
    "text": "quite interesting when they know hey there's maybe there's a bit of",
    "start": "3535099",
    "end": "3541099"
  },
  {
    "text": "indulgence on my part I don't know I mean maybe there is I think I think it's I think it's interesting to know what's going on with the hood the Penn's ear",
    "start": "3541099",
    "end": "3551779"
  },
  {
    "text": "application runs or not yeah I mean ultimately there are edge cases and everything and if we know what's going",
    "start": "3551779",
    "end": "3557930"
  },
  {
    "text": "on there under the hoods you might discover some kind of weird bug or something going wrong so I think that",
    "start": "3557930",
    "end": "3563000"
  },
  {
    "text": "there are uses but I would say the majority majority of the time I would hope there isn't much use because",
    "start": "3563000",
    "end": "3569359"
  },
  {
    "text": "everything should be working as design all right do you need to wrap up maybe so did have one more question somewhere",
    "start": "3569359",
    "end": "3575210"
  },
  {
    "text": "down here yeah",
    "start": "3575210",
    "end": "3577779"
  },
  {
    "text": "the special analysis tool how detailed is it is it something we're using friend service bus it is actually very detailed",
    "start": "3586829",
    "end": "3593410"
  },
  {
    "text": "I didn't show you the second sheet of the spreadsheet it actually lists all the methods and properties that do exist",
    "start": "3593410",
    "end": "3600490"
  },
  {
    "text": "and don't exist the ones you're trying to use it won't go through the pendants",
    "start": "3600490",
    "end": "3606760"
  },
  {
    "text": "ease because that's that's the that's that's the part of getting that",
    "start": "3606760",
    "end": "3611980"
  },
  {
    "text": "dependency to work on don't know standard but it'll analyze all the calls at your libraries making and it's a very",
    "start": "3611980",
    "end": "3617680"
  },
  {
    "text": "detailed output and yes we did you absolutely use it for n service bus all right I try and wrap up now because the",
    "start": "3617680",
    "end": "3623799"
  },
  {
    "text": "party is starting any minute now if you're interested in know more about what we're doing then service bus in",
    "start": "3623799",
    "end": "3628809"
  },
  {
    "text": "that context and that this will probably give showed a bit more light and your question go to these URLs there's more",
    "start": "3628809",
    "end": "3637210"
  },
  {
    "text": "information about what we're doing to support on their standards this is just",
    "start": "3637210",
    "end": "3642880"
  },
  {
    "text": "a little tweet which was put out I think 2016 was rough near Martin saying that",
    "start": "3642880",
    "end": "3648760"
  },
  {
    "text": "here but I was up to miss about 2017 and I think the team have read the live in 2017 I think we were on 2.0 which is the",
    "start": "3648760",
    "end": "3655270"
  },
  {
    "text": "first usable versions dotnet cord under standard and I think 2018 is going to be really great let's get down to the party",
    "start": "3655270",
    "end": "3662260"
  },
  {
    "text": "thank you very much [Applause]",
    "start": "3662260",
    "end": "3670780"
  }
]