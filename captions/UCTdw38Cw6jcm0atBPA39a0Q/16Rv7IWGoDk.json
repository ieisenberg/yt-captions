[
  {
    "text": "um hi um I'm johanes beer and I'll be to and I be telling you all about building",
    "start": "11200",
    "end": "17640"
  },
  {
    "text": "a lightning fast firewall in Java um because why not I show you in a minute why um but consider we have a simple web",
    "start": "17640",
    "end": "24960"
  },
  {
    "text": "application maybe some of you also run simple or slightly more complex web applications",
    "start": "24960",
    "end": "31000"
  },
  {
    "text": "and for example for me it's my jfi events website so I'm doing Java profiling stuff um at work and C create",
    "start": "31000",
    "end": "38160"
  },
  {
    "text": "small website and consider now I have an DS attack and that means someone calls",
    "start": "38160",
    "end": "43520"
  },
  {
    "text": "it a gazillion times and what do I do um the E way is um I could just cut the EET",
    "start": "43520",
    "end": "50520"
  },
  {
    "text": "cable um for example with my lovely Viking a or I could um just cut the",
    "start": "50520",
    "end": "57600"
  },
  {
    "text": "eanet cable off the attacker that would also be be usable but in reality I",
    "start": "57600",
    "end": "64198"
  },
  {
    "text": "probably just dropped the packet in um in my application somehow that would be the easiest way for example here you see",
    "start": "64199",
    "end": "70880"
  },
  {
    "text": "that I just um consider this is a server application um every time a package com",
    "start": "70880",
    "end": "76119"
  },
  {
    "text": "in I check the address against an against a set of block IP addresses and",
    "start": "76119",
    "end": "82920"
  },
  {
    "text": "um I then have a simple method that's like oh should I block this IP address and then it just return um and then it",
    "start": "82920",
    "end": "89360"
  },
  {
    "text": "just close the connection and that's fine but there's a problem can anyone spot it when when we get dsed when we",
    "start": "89360",
    "end": "96600"
  },
  {
    "text": "get dsed why this isn't a good idea",
    "start": "96600",
    "end": "101680"
  },
  {
    "text": "anyone main problem is here that it's it happens quite late so if you have our Network stick here we have on the lowest",
    "start": "101680",
    "end": "108680"
  },
  {
    "text": "ler we have our network interface that's actually where like we put in the EET cable then we have the whole Linux",
    "start": "108680",
    "end": "114960"
  },
  {
    "text": "networking stack then we have our application so essentially what we would be doing when we're doing it on",
    "start": "114960",
    "end": "120240"
  },
  {
    "text": "application Level the package would have to drive all the way through the network interface back up and then um this would",
    "start": "120240",
    "end": "127600"
  },
  {
    "text": "cost us quite some performance so we could of course use a firewall that's like the traditional",
    "start": "127600",
    "end": "133400"
  },
  {
    "text": "approach to um reduce uh to to remove the connections that a malicious",
    "start": "133400",
    "end": "139040"
  },
  {
    "text": "attacker um opens to us so here in this example I just use a call to IP tables",
    "start": "139040",
    "end": "144480"
  },
  {
    "text": "just removes this uh IP address and so it's blocked but how how can we improve",
    "start": "144480",
    "end": "150879"
  },
  {
    "text": "it because if you see here that's that's pretty fast so that's that's already pretty fast you see here the application",
    "start": "150879",
    "end": "157080"
  },
  {
    "text": "it uh in in in experiment Cloud for did the applica dropping it at application",
    "start": "157080",
    "end": "163840"
  },
  {
    "text": "Level you can drop like around 200,000 packages per second but um it's when",
    "start": "163840",
    "end": "171720"
  },
  {
    "text": "when we go to IP tables we get into range of 1.8 million um but we want to",
    "start": "171720",
    "end": "177760"
  },
  {
    "text": "become a 10x developer or 10x power or what do we do we're look into other um",
    "start": "177760",
    "end": "182879"
  },
  {
    "text": "possibilities and one possibility is to use xtp the express data path and you",
    "start": "182879",
    "end": "188280"
  },
  {
    "text": "see here that we can almost um block 10 times as much we can block as many",
    "start": "188280",
    "end": "194959"
  },
  {
    "text": "packages as essentially come in over the um over our EET connection because it's",
    "start": "194959",
    "end": "201400"
  },
  {
    "text": "it's fairly close to like the the 10 gigabits if you assume that like an IP package has like kilobyte size um so",
    "start": "201400",
    "end": "208879"
  },
  {
    "text": "that's pretty cool um and how does it work the it works because xtp sits",
    "start": "208879",
    "end": "214920"
  },
  {
    "text": "between the network interface and the Linux on networking stack so it's essentially the the first point where we",
    "start": "214920",
    "end": "222439"
  },
  {
    "text": "properly have the package in the kernel and there we we check it um and what's",
    "start": "222439",
    "end": "227920"
  },
  {
    "text": "important is that allocations of packages are really really expensive so a package is first allocated when",
    "start": "227920",
    "end": "234879"
  },
  {
    "text": "whenever it comes over the ethernet because we have to somehow write it down we have to somehow record it and then",
    "start": "234879",
    "end": "240519"
  },
  {
    "text": "it's the next time allocated when it enters into the Linux networking St and then in the end of course it's also",
    "start": "240519",
    "end": "247840"
  },
  {
    "text": "again allocated when we obtain it in our application and the cool thing is with",
    "start": "247840",
    "end": "253920"
  },
  {
    "text": "with this we can this technology even allows us that we can offload it from",
    "start": "253920",
    "end": "259079"
  },
  {
    "text": "ocpu because we as you see here we're so close to network interface some of the more modern networking interfaces even",
    "start": "259079",
    "end": "265479"
  },
  {
    "text": "allow us to do all the things I show you in the in in the following directly on",
    "start": "265479",
    "end": "270759"
  },
  {
    "text": "device which is prettyy nice um so this is so ECP is part of the Linux colel",
    "start": "270759",
    "end": "277400"
  },
  {
    "text": "kind of um and um all these things close to the network interface are part of",
    "start": "277400",
    "end": "282680"
  },
  {
    "text": "this and so how how can we modify because we want to essentially modify it so that it drops packages from specific",
    "start": "282680",
    "end": "290360"
  },
  {
    "text": "IP addresses um there are two ways and the first way is to change the colel um",
    "start": "290360",
    "end": "295440"
  },
  {
    "text": "essentially we we directly HCK into a colnel and fix it and then hope that lenos toal accepted and that is highly",
    "start": "295440",
    "end": "303080"
  },
  {
    "text": "likely as everyone knows um especially when you're newb conel developer um and",
    "start": "303080",
    "end": "309520"
  },
  {
    "text": "then we can of course also create a Col module which could which would also be possible but the problem is it's really",
    "start": "309520",
    "end": "316400"
  },
  {
    "text": "hard to write these um especially because the API isn't stable to quote one of the colel develop um main",
    "start": "316400",
    "end": "323039"
  },
  {
    "text": "developers great C Harman you think you want the stable colel interface but you",
    "start": "323039",
    "end": "328520"
  },
  {
    "text": "really doing it and you do don't even know why um the the thing why we don't",
    "start": "328520",
    "end": "334319"
  },
  {
    "text": "have a stable Kel interface is just because the kernel isn't optimized to having a stable interface to like",
    "start": "334319",
    "end": "340240"
  },
  {
    "text": "internal col modules but to the outside of course because you when you do application development you want to have",
    "start": "340240",
    "end": "345800"
  },
  {
    "text": "a stable interface but the main difference is here that inside the colel we want to have speed we want to have",
    "start": "345800",
    "end": "351560"
  },
  {
    "text": "security and much more so if you write the col module you're essentially at the",
    "start": "351560",
    "end": "356600"
  },
  {
    "text": "mercy of the colel developers they can change something and then it PR Brees so only red colur mod is if you have the",
    "start": "356600",
    "end": "362759"
  },
  {
    "text": "manow to to to maintain them over time so that's not really a good option so",
    "start": "362759",
    "end": "369120"
  },
  {
    "text": "can we do better and that's what my where my talk comes in of course we can do better um so in in around 2014 people",
    "start": "369120",
    "end": "378479"
  },
  {
    "text": "decided that hey we have computation we have software defined computation also known as like containers so with Docker",
    "start": "378479",
    "end": "385720"
  },
  {
    "text": "and and other tools and kubernetes we can essentially describe how our compute landscape looks like oh we have this",
    "start": "385720",
    "end": "391960"
  },
  {
    "text": "part here this part here they communicate and fine but what we didn't have um we didn't have any software",
    "start": "391960",
    "end": "398560"
  },
  {
    "text": "defined networking um we we couldn't describe anything that happens unlike the network layer properly and um also",
    "start": "398560",
    "end": "406360"
  },
  {
    "text": "extend not only the compute um definitions but also extend this extend",
    "start": "406360",
    "end": "412160"
  },
  {
    "text": "the whole um composability and else to the networking area and so this is where",
    "start": "412160",
    "end": "417840"
  },
  {
    "text": "ebpf came in um and then later extended as you see in a minute to many more",
    "start": "417840",
    "end": "423639"
  },
  {
    "text": "spaces and so what is ebpf ebpf is a crazy technology it's like putting",
    "start": "423639",
    "end": "428800"
  },
  {
    "text": "JavaScript into a Linux colnel um this is a quotee by pron greig who popularized it in like the late",
    "start": "428800",
    "end": "436759"
  },
  {
    "text": "2010s um that's him shouting at hard drives because I don't know if you know",
    "start": "436759",
    "end": "442280"
  },
  {
    "text": "but when you had these old spinning discs all the people here in the room know them still when when you when they",
    "start": "442280",
    "end": "448520"
  },
  {
    "text": "vibrated um and wiating can be caused by just shouting at them um they have",
    "start": "448520",
    "end": "455440"
  },
  {
    "text": "different latency characteristics so they have to slow down a bit and that's what he um what he tried out and it",
    "start": "455440",
    "end": "461800"
  },
  {
    "text": "worked and so if you want to see an Chrome man shouting at hard drives and being really happy I have the YouTube",
    "start": "461800",
    "end": "467680"
  },
  {
    "text": "link down there anyway just search for Brandon Greg it's probably his his most viewed video he's essentially known for",
    "start": "467680",
    "end": "474800"
  },
  {
    "text": "this anyway he's also doing lots of great things um in the profiling world for example vented flamecraft if you",
    "start": "474800",
    "end": "481800"
  },
  {
    "text": "ever heard of them um and that's him when he's not shouting at hard drives um",
    "start": "481800",
    "end": "488120"
  },
  {
    "text": "and but back to our topic um as he said it's ebpf allows us to make the kernel",
    "start": "488120",
    "end": "493960"
  },
  {
    "text": "lenus kernel programmable at Native speed it's essentially like as as pron",
    "start": "493960",
    "end": "499520"
  },
  {
    "text": "said like putting JavaScript into a l SC you can extend many many things for",
    "start": "499520",
    "end": "505039"
  },
  {
    "text": "example you can extend uh the network layer and how how does it work it's it's",
    "start": "505039",
    "end": "510240"
  },
  {
    "text": "pretty simple you have your source code of course you write it in a language like C um then you compile it down um to",
    "start": "510240",
    "end": "518000"
  },
  {
    "text": "some kind of bite code it's the bite code is is just uh a description of a simple machine it has like a add",
    "start": "518000",
    "end": "524880"
  },
  {
    "text": "instruction and push instruction and call me function instruction and what we then do because all this as you might",
    "start": "524880",
    "end": "532800"
  },
  {
    "text": "guess by now has to run into the it has to run in the Linux col because um the",
    "start": "532800",
    "end": "537959"
  },
  {
    "text": "network handling it it's deep down in De and all the things that we do with ebpf essentially run in the L colel with",
    "start": "537959",
    "end": "544480"
  },
  {
    "text": "colel privileges so we have to push them some somehow in there and that's where the BPF CIS call comes in we can tell it",
    "start": "544480",
    "end": "551120"
  },
  {
    "text": "like hey here's a program that I wrote placee load in the L call of course you need root privileges and please please",
    "start": "551120",
    "end": "558040"
  },
  {
    "text": "please don't run random ebpf code from the internet I show you later in a demo",
    "start": "558040",
    "end": "563399"
  },
  {
    "text": "that you can do pretty nasty things with it and have lots of fun um you can even",
    "start": "563399",
    "end": "568600"
  },
  {
    "text": "write code that is not deletable because you can mess with the file system which is pretty cool um anyway so what we then",
    "start": "568600",
    "end": "575760"
  },
  {
    "text": "have we load it in and the problem is you you all if if you ever program Java you know that nullo exceptions happen",
    "start": "575760",
    "end": "582760"
  },
  {
    "text": "quite a lot and if you ever wrote C++ then you probably also know that like",
    "start": "582760",
    "end": "588560"
  },
  {
    "text": "segmentation Falls happen a lot and you don't want to have segmentation faults on N Point the exception in the Linux",
    "start": "588560",
    "end": "594399"
  },
  {
    "text": "colel because then essentially your system becomes unusable and it's really hard to backtrack and so what the r fire",
    "start": "594399",
    "end": "601160"
  },
  {
    "text": "essentially does it checks your program it checks for um for the non-existence",
    "start": "601160",
    "end": "607079"
  },
  {
    "text": "it checks that things like segmentation Falls can occur essentially every part access the the verifier must make sure",
    "start": "607079",
    "end": "615120"
  },
  {
    "text": "oh yeah that's a vet Point that's not a null point and it also um forces",
    "start": "615120",
    "end": "620279"
  },
  {
    "text": "termination because we want to know that the program that you load in that you attach to a hook like a networking hook",
    "start": "620279",
    "end": "626720"
  },
  {
    "text": "actually terminates some time otherwi your colel would be pretty stuck um of",
    "start": "626720",
    "end": "633040"
  },
  {
    "text": "course this is a problem as anyone who who listen to some computer science classes in uni knows um that's not",
    "start": "633040",
    "end": "639639"
  },
  {
    "text": "always possible because when programs are true and complete we can't guarantee that they terminate or we can't analy",
    "start": "639639",
    "end": "645880"
  },
  {
    "text": "this Behavior so essentially what what we do here with ebpf we have a limited",
    "start": "645880",
    "end": "651480"
  },
  {
    "text": "amount of instructions that we can execute so the programs usually written with this ebpf are not that large but",
    "start": "651480",
    "end": "658760"
  },
  {
    "text": "large enough to have some fun what we then do we put it into a jit compiler usually um because it should be fast",
    "start": "658760",
    "end": "666079"
  },
  {
    "text": "because when we like you say before when we have packages coming in at megabytes",
    "start": "666079",
    "end": "672000"
  },
  {
    "text": "per second gigabytes per second in our system we don't want to wait too long for it and so it's jit compiled usually",
    "start": "672000",
    "end": "679360"
  },
  {
    "text": "on all the major platforms like a390 Z and POC of course also on the Lesser",
    "start": "679360",
    "end": "685519"
  },
  {
    "text": "known platforms like x86 here um and so what we then do we have these",
    "start": "685519",
    "end": "692120"
  },
  {
    "text": "large programs we have these small programs and we attach them to hooks it's more like when you're doing for",
    "start": "692120",
    "end": "697760"
  },
  {
    "text": "example react programming when doing front end programming where you say oh whenever someone clicks on something I",
    "start": "697760",
    "end": "703600"
  },
  {
    "text": "want to execute this and that's essentially what we do here we can go into network interface whenever package",
    "start": "703600",
    "end": "709040"
  },
  {
    "text": "come in comes in call my hook and then do something about it we can do the same things with sockets we can do also for",
    "start": "709040",
    "end": "716399"
  },
  {
    "text": "any system call we can also hook on and be like oh whenever the system call is called then do something and um that's",
    "start": "716399",
    "end": "724600"
  },
  {
    "text": "also um how we get information from the application process because essentially application process usually interact",
    "start": "724600",
    "end": "731440"
  },
  {
    "text": "with CIS calls and so we can also mod monitor our application um and so what",
    "start": "731440",
    "end": "737839"
  },
  {
    "text": "what does the what does EPF give us it gives us Safety and Security um because",
    "start": "737839",
    "end": "743560"
  },
  {
    "text": "we have a verifier that checks basic um basic things about our um our programs",
    "start": "743560",
    "end": "749880"
  },
  {
    "text": "we can do continuous delivery because essentially we can modify the kernel and runtime we don't have to recompile the",
    "start": "749880",
    "end": "756320"
  },
  {
    "text": "kernel every time that's especially important when you want to test your things um and it's pretty efficient and",
    "start": "756320",
    "end": "762440"
  },
  {
    "text": "it's a standard so the EF runtime it's standardized we have some we we have in",
    "start": "762440",
    "end": "767720"
  },
  {
    "text": "a way uh relatively stable interfaces so we can write our programs and be sure",
    "start": "767720",
    "end": "773639"
  },
  {
    "text": "that they probably run in the next Linux colel too and and that's pretty nice and that allows us to do this also in small",
    "start": "773639",
    "end": "780800"
  },
  {
    "text": "team so this is a technology that many many of the new security vendors use um",
    "start": "780800",
    "end": "786519"
  },
  {
    "text": "because it's pretty cool so um of course um I showed you that we can like attach",
    "start": "786519",
    "end": "791839"
  },
  {
    "text": "things there um but we also need to exchange data because a program where we only like run it and then it does",
    "start": "791839",
    "end": "798040"
  },
  {
    "text": "something and doesn't like communicate with the rest of our system is is probably pretty dumb because for example",
    "start": "798040",
    "end": "804440"
  },
  {
    "text": "we can't update our IP list that we want to plock so um the two traditional ways",
    "start": "804440",
    "end": "809560"
  },
  {
    "text": "to share data in all programs would be one would be by socket so essentially program a send to Pro program b a",
    "start": "809560",
    "end": "817519"
  },
  {
    "text": "message um the other one would be V shed memory um so both access the same area",
    "start": "817519",
    "end": "823399"
  },
  {
    "text": "of memory but both aren't really suitable here because sending messages is pretty high overhead and to implement",
    "start": "823399",
    "end": "830000"
  },
  {
    "text": "things like hash maps that we share between both this would be pretty pretty",
    "start": "830000",
    "end": "835279"
  },
  {
    "text": "hard and and not really computationally efficient and chck memory is also not a good idea",
    "start": "835279",
    "end": "841759"
  },
  {
    "text": "because essentially we would be accessing kernel memory and yeah we",
    "start": "841759",
    "end": "847079"
  },
  {
    "text": "shouldn't do this from our userland application so what do we do in the end um we use uh something called ebpf maps",
    "start": "847079",
    "end": "856399"
  },
  {
    "text": "and these are essentially data structures that the kernel gives us and that we can access using the BPF system",
    "start": "856399",
    "end": "862680"
  },
  {
    "text": "called both from like the userland and from the colel L and use this to to transfer data and how it works",
    "start": "862680",
    "end": "869800"
  },
  {
    "text": "essentially is that our ebpf programs our small Snippets they access the maps load for example the the IP addresses",
    "start": "869800",
    "end": "877680"
  },
  {
    "text": "that should um check for IP addresses that should be uh dropped um and also we",
    "start": "877680",
    "end": "885079"
  },
  {
    "text": "can com we can get the data out to our usand application and it's for anyone",
    "start": "885079",
    "end": "890639"
  },
  {
    "text": "who developed C before and in C you don't have usually like a hashmap or such that's that's not great but here in",
    "start": "890639",
    "end": "897759"
  },
  {
    "text": "in ebpf land we have have things like array even hash maps with least recently",
    "start": "897759",
    "end": "903320"
  },
  {
    "text": "used uh semantic so we have essentially caches we have ring buffers and more and even like things like priority cues",
    "start": "903320",
    "end": "910720"
  },
  {
    "text": "which makes it really a CA really capable tool and we can hook so I told",
    "start": "910720",
    "end": "917160"
  },
  {
    "text": "you before it's essentially everywhere in the cor of want so there are countless countless hooks we can go into",
    "start": "917160",
    "end": "923759"
  },
  {
    "text": "a file system we can go in every system call everything about start we can even",
    "start": "923759",
    "end": "929759"
  },
  {
    "text": "use like Linux security modules um to to develop our own security applications",
    "start": "929759",
    "end": "936079"
  },
  {
    "text": "and more and um one of the big uses is also tracing and profiling so we can",
    "start": "936079",
    "end": "941920"
  },
  {
    "text": "get we can get a lot of insights into applications um and this is app and this",
    "start": "941920",
    "end": "949160"
  },
  {
    "text": "is language agnostic so we see everything on the system and that makes",
    "start": "949160",
    "end": "954240"
  },
  {
    "text": "it really powerful for this and as said you can use it for security contol all",
    "start": "954240",
    "end": "959800"
  },
  {
    "text": "and that's especially important because I don't know whether you noticed there was some some kind of backet the news",
    "start": "959800",
    "end": "965240"
  },
  {
    "text": "last year this is from an airport I think it was in Ser or such um and there",
    "start": "965240",
    "end": "970880"
  },
  {
    "text": "was crow like essentially the the main issue there were this um that they that",
    "start": "970880",
    "end": "976360"
  },
  {
    "text": "this company was developing their own col modules for Windows and they had a simple buck in there that's a EBP fir",
    "start": "976360",
    "end": "983639"
  },
  {
    "text": "fire would have catched um and then everything Drew to a hall",
    "start": "983639",
    "end": "990519"
  },
  {
    "text": "um that wasn't that great but with ebpf that that could have been prevented",
    "start": "990519",
    "end": "995759"
  },
  {
    "text": "because ebpf has the verifier would have prevented a bug and with ebpf it's it's",
    "start": "995759",
    "end": "1001440"
  },
  {
    "text": "far easier to to reload something to Pat something and push it out uh then with",
    "start": "1001440",
    "end": "1006839"
  },
  {
    "text": "this and since then um the people at Microsoft are also thinking about using",
    "start": "1006839",
    "end": "1012240"
  },
  {
    "text": "ebpf and that there's more and more thoughts of getting ebf out of like the Linux Niche onto the pro",
    "start": "1012240",
    "end": "1019560"
  },
  {
    "text": "operating system Market to also support um micro to also support Windows but of",
    "start": "1019560",
    "end": "1025000"
  },
  {
    "text": "course EPF has bux too and some of them even with high cve ratings the main",
    "start": "1025000",
    "end": "1032000"
  },
  {
    "text": "thing is here that most of the Bucks Ure in the in the W fire and so yes this is",
    "start": "1032000",
    "end": "1039120"
  },
  {
    "text": "a problem but if I'm honest you should only um run EF code from trusted sources",
    "start": "1039120",
    "end": "1045720"
  },
  {
    "text": "anyway please don't download them I don't know from your random GitHub gist",
    "start": "1045720",
    "end": "1051000"
  },
  {
    "text": "and run them on your production machine that's not great and even if you run them on your uh if even if you write",
    "start": "1051000",
    "end": "1057919"
  },
  {
    "text": "them your own please also don't run it on your production machines it's really it's really easy to mess it up and uh",
    "start": "1057919",
    "end": "1065760"
  },
  {
    "text": "please please please test them because ebf has so much power and so much capabilities and now here to the EF",
    "start": "1065760",
    "end": "1072960"
  },
  {
    "text": "ecosystem you see here that um in the lowest level we have the colel runtime that runs in the L kernel",
    "start": "1072960",
    "end": "1080159"
  },
  {
    "text": "um and so we have the rify we have the maps we have the helper API and then if we go a little bit higher we have like",
    "start": "1080159",
    "end": "1086880"
  },
  {
    "text": "in user space our sdks we have sdks as you see for for C++ rust and other",
    "start": "1086880",
    "end": "1092720"
  },
  {
    "text": "languages and the thing in the security space go is pretty big so they're also like SDK you can write ebpf programs in",
    "start": "1092720",
    "end": "1101559"
  },
  {
    "text": "go and then above are programs that are really helpful for example Katra and pixie a tool called Falco and many other",
    "start": "1101559",
    "end": "1109840"
  },
  {
    "text": "tools um which you can use to do for example out balancing and also security",
    "start": "1109840",
    "end": "1115159"
  },
  {
    "text": "applications if I'm if I stand correct then um Falco is something that you can",
    "start": "1115159",
    "end": "1121200"
  },
  {
    "text": "use to like do set security guidelines for your system and that's pretty",
    "start": "1121200",
    "end": "1126559"
  },
  {
    "text": "helpful um and but you have to be wored that like they use a lot of ebpf stuff",
    "start": "1126559",
    "end": "1132360"
  },
  {
    "text": "and sometimes a small change in the kernel can cause interesting bugs in",
    "start": "1132360",
    "end": "1137640"
  },
  {
    "text": "Falco or colleague of mine um had an issue with like oh it didn't work and so",
    "start": "1137640",
    "end": "1144039"
  },
  {
    "text": "what it was is that in one colel minor version the verifier got updated and it was and it",
    "start": "1144039",
    "end": "1151360"
  },
  {
    "text": "dropped more programs it disallowed more programs and then Falco didn't work so he had to update Falco because yeah it's",
    "start": "1151360",
    "end": "1158039"
  },
  {
    "text": "stable but still it's still nural technology so I wouldn't suppose I wouldn't assume that everything works",
    "start": "1158039",
    "end": "1164320"
  },
  {
    "text": "there but of course there's there's one language missing there um anyone has a",
    "start": "1164320",
    "end": "1169679"
  },
  {
    "text": "guess which language is missing there anyone jav yes Java um and it's there",
    "start": "1169679",
    "end": "1177720"
  },
  {
    "text": "because um like a year ago I thought like with Brandon GRE ebf is a crazy",
    "start": "1177720",
    "end": "1183080"
  },
  {
    "text": "technology it's like putting Java into the L Kel um and to quote a famous",
    "start": "1183080",
    "end": "1189480"
  },
  {
    "text": "trailer for for the javaon conference which was here like half a year ago in osow I want to use a programing language",
    "start": "1189480",
    "end": "1196240"
  },
  {
    "text": "which doesn't only run on uh userland so um I want to use Java deer um and uh",
    "start": "1196240",
    "end": "1203919"
  },
  {
    "text": "maybe that's not the point in in the presentation where I can tell you who I am um I'm a Java developer so I work on",
    "start": "1203919",
    "end": "1210799"
  },
  {
    "text": "Java itself I'm not a Java user um I work on the jvm as at a little n company",
    "start": "1210799",
    "end": "1216440"
  },
  {
    "text": "called sap where I'm I'm at Submachine you can see the logo here of stickers um",
    "start": "1216440",
    "end": "1222480"
  },
  {
    "text": "and we like the third biggest contributor to the open JK um and working on Java adding things like Bal",
    "start": "1222480",
    "end": "1229400"
  },
  {
    "text": "poers and else and a year ago we started developing ebpf applications in Java",
    "start": "1229400",
    "end": "1234760"
  },
  {
    "text": "because I can um and that's the result is hello ebpf it's the first and currently only",
    "start": "1234760",
    "end": "1241799"
  },
  {
    "text": "for good reasons Java library for ebpf which allows you to write for example firewalls in pure Java of course why not",
    "start": "1241799",
    "end": "1249320"
  },
  {
    "text": "um and it's fun and in a minute I show you demo and of course it's brok in",
    "start": "1249320",
    "end": "1255000"
  },
  {
    "text": "progress uh don't use it in production use it for like like you can use it for",
    "start": "1255000",
    "end": "1260120"
  },
  {
    "text": "for education and having fun uh that's what I use it for and for testing um but",
    "start": "1260120",
    "end": "1265760"
  },
  {
    "text": "yeah now now we come to an interesting part of the presentation and that's called live coding because I think we've",
    "start": "1265760",
    "end": "1271640"
  },
  {
    "text": "we've all been here at the conference seeing talks where we where the presenter just stands sometimes the",
    "start": "1271640",
    "end": "1277200"
  },
  {
    "text": "presenter also wants to sit so uh I hope you can still see me",
    "start": "1277200",
    "end": "1283240"
  },
  {
    "text": "um it's just the the chair is a little bit lower than I expected um anyway um",
    "start": "1283240",
    "end": "1290400"
  },
  {
    "text": "let's see whether it works so um on live cing or as I call it having fun with",
    "start": "1290400",
    "end": "1296360"
  },
  {
    "text": "ebpf and yeah and up very fire anyway um so um here uh for the",
    "start": "1296360",
    "end": "1304039"
  },
  {
    "text": "name giving uh demo it's the fireball demo and if everything works",
    "start": "1304039",
    "end": "1309559"
  },
  {
    "text": "well everything works well we can go to our demo so essentially what I did here",
    "start": "1309559",
    "end": "1316720"
  },
  {
    "text": "I created a a simple f wall um that has a spring front a spring boot based front",
    "start": "1316720",
    "end": "1322640"
  },
  {
    "text": "end in the front end it's like written with some JavaScript that chgb generated",
    "start": "1322640",
    "end": "1327679"
  },
  {
    "text": "me because I'm not a front end developer um but essentially what it does it it",
    "start": "1327679",
    "end": "1333480"
  },
  {
    "text": "pushes the data almost directly into the into the con so what we can do here um",
    "start": "1333480",
    "end": "1341720"
  },
  {
    "text": "um we can trigger request for example for to to check whether Google is reachable and so you see here it's it's",
    "start": "1341720",
    "end": "1349400"
  },
  {
    "text": "probably reachable I can even show you that it's is Google reachable probably yay",
    "start": "1349400",
    "end": "1356000"
  },
  {
    "text": "it's reachable yes um but now what we can do it's a firewall so let's add some",
    "start": "1356000",
    "end": "1361480"
  },
  {
    "text": "rules um for example here the rule is take every IP address it um and that",
    "start": "1361480",
    "end": "1368440"
  },
  {
    "text": "every package that comes in on Port 443 that's the https port and just drop it",
    "start": "1368440",
    "end": "1374559"
  },
  {
    "text": "so that's what we can do and now we trigger the request again and blocked because that that runs essentially",
    "start": "1374559",
    "end": "1381559"
  },
  {
    "text": "directly as close as possible to Bare Metal as we can as close as possible to",
    "start": "1381559",
    "end": "1386960"
  },
  {
    "text": "like the EET cable or like the Wi-Fi signal coming in here um as possible so",
    "start": "1386960",
    "end": "1392760"
  },
  {
    "text": "this blocks it and it's really fast in this regard and this is all written in Java um which is is pretty cool and",
    "start": "1392760",
    "end": "1399880"
  },
  {
    "text": "slightly frightening anyway um uh",
    "start": "1399880",
    "end": "1405120"
  },
  {
    "text": "so how this essentially works is that um you you see here that we can packet in",
    "start": "1405120",
    "end": "1411080"
  },
  {
    "text": "from the um from the whole internet and what we do the packet comes into a network driver um is Pur because we're",
    "start": "1411080",
    "end": "1418799"
  },
  {
    "text": "doing like the Wi-Fi stuff where we pass the packages and and things but essentially our raw EET package comes in",
    "start": "1418799",
    "end": "1426360"
  },
  {
    "text": "and then um what what we do our Pro and then what it does um after it's like",
    "start": "1426360",
    "end": "1432240"
  },
  {
    "text": "basically post uh the Linux c um ask our ebpf program that we registers hey is",
    "start": "1432240",
    "end": "1438039"
  },
  {
    "text": "this okay what should I do with this packet and we then analyze it and be either like yeah that's fine let it let",
    "start": "1438039",
    "end": "1444520"
  },
  {
    "text": "it through or we're like no no no please drop it and the other thing what we can also do is of course we can lck so we",
    "start": "1444520",
    "end": "1450440"
  },
  {
    "text": "can say yeah pass it through but I stored some sneaky information um and my end goal is to write a a blogging",
    "start": "1450440",
    "end": "1457880"
  },
  {
    "text": "platform that runs entirely in on network deack that would be pretty cool um screw WordPress I'm going native",
    "start": "1457880",
    "end": "1466440"
  },
  {
    "text": "curle um the only problem is that I then realized how hard it is to implement my",
    "start": "1466440",
    "end": "1472159"
  },
  {
    "text": "own tcpip deack um and my own htdp stack",
    "start": "1472159",
    "end": "1477360"
  },
  {
    "text": "in a language in in ebpf which has a limited amount of instructions I can",
    "start": "1477360",
    "end": "1482799"
  },
  {
    "text": "execute so probably something for later sometime anyway um then the package goes",
    "start": "1482799",
    "end": "1487919"
  },
  {
    "text": "through the network SE it goes into application if we're fine we can access it but what our ebpf program then um",
    "start": "1487919",
    "end": "1494200"
  },
  {
    "text": "does is it can communicate you saw here that we submitted a package we submitted the rule we we push it down into a map",
    "start": "1494200",
    "end": "1501600"
  },
  {
    "text": "we store it and then get it up and the cool thing is when we look at the code um and when we when we look at the",
    "start": "1501600",
    "end": "1511520"
  },
  {
    "text": "code um oh cool yeah you see here I log a lot of things so I I just quit it so",
    "start": "1511520",
    "end": "1518360"
  },
  {
    "text": "we don't log all the time um when when when you look at the code here um and we",
    "start": "1518360",
    "end": "1525320"
  },
  {
    "text": "have these are like the the if anyone of you developed some some spring wot um that's essentially where we come",
    "start": "1525320",
    "end": "1533000"
  },
  {
    "text": "in so when we edify what what we what we do we we po it somehow and then we add",
    "start": "1533000",
    "end": "1539279"
  },
  {
    "text": "the rule and the N thing is that's our BPF map that when we call put we",
    "start": "1539279",
    "end": "1544600"
  },
  {
    "text": "directly put it into the link C we don't do any checking so be aware that",
    "start": "1544600",
    "end": "1550120"
  },
  {
    "text": "exposing your firewall to the internet is not a good idea please don't do this at home um this is slly frightening and",
    "start": "1550120",
    "end": "1557480"
  },
  {
    "text": "that's one of the reason why everything I have here is local and my presentation doesn't run on Google Docs",
    "start": "1557480",
    "end": "1564440"
  },
  {
    "text": "online because otherwise the presentation would be over till now so anyway um I wonder how we would do this",
    "start": "1564440",
    "end": "1571080"
  },
  {
    "text": "presentation when it would be online it would be pretty funny anyway um so this push us directly in and how our firewall",
    "start": "1571080",
    "end": "1577799"
  },
  {
    "text": "works it's it's essentially um a small class we can Define the cool thing is we",
    "start": "1577799",
    "end": "1583159"
  },
  {
    "text": "Define some types like a IP and Port as a record we Define file all rules and",
    "start": "1583159",
    "end": "1589520"
  },
  {
    "text": "can use them both in Java and in EPF and so what our main application does",
    "start": "1589520",
    "end": "1596880"
  },
  {
    "text": "is we just load our Fireball and then we do some things but that's a bit",
    "start": "1596880",
    "end": "1602520"
  },
  {
    "text": "complicated so let us start with a simple example um so what we can do with",
    "start": "1602520",
    "end": "1608360"
  },
  {
    "text": "BPF with my library we just say oh yeah please this program should be a BPF",
    "start": "1608360",
    "end": "1613720"
  },
  {
    "text": "program this program should be a BPF program and of course here we want to",
    "start": "1613720",
    "end": "1619120"
  },
  {
    "text": "extend for example our BPF program and",
    "start": "1619120",
    "end": "1624760"
  },
  {
    "text": "we want to do something simple we we I showed you before that we can that we can use system Haws and I disable GitHub",
    "start": "1624760",
    "end": "1632640"
  },
  {
    "text": "copal for now feel it's not worth you so we we can just implement the interface",
    "start": "1632640",
    "end": "1639799"
  },
  {
    "text": "system call and now we see quite a few methods here [Music]",
    "start": "1639799",
    "end": "1646279"
  },
  {
    "text": "um for example um we we get all the methods like um for",
    "start": "1646279",
    "end": "1652960"
  },
  {
    "text": "for many of the system calls like the system call D like the system call EO create whatever I'm I'm not too deep",
    "start": "1652960",
    "end": "1659679"
  },
  {
    "text": "into this but what we can do for example um every time a normal application um",
    "start": "1659679",
    "end": "1665360"
  },
  {
    "text": "opens the file um it uses open met to for whatever reason um but what we can",
    "start": "1665360",
    "end": "1671880"
  },
  {
    "text": "do we we can print it so that every time someone opens a file um let's let's",
    "start": "1671880",
    "end": "1677600"
  },
  {
    "text": "print it and there is some helper methods here which we can use",
    "start": "1677600",
    "end": "1682799"
  },
  {
    "text": "BPF print Trace pin case so we can just say um High",
    "start": "1682799",
    "end": "1689960"
  },
  {
    "text": "file and then be fine um and just pass it the file name and the cool thing is",
    "start": "1689960",
    "end": "1696039"
  },
  {
    "text": "now when we then attach it later we see every file that that any process uh",
    "start": "1696039",
    "end": "1701080"
  },
  {
    "text": "accesses um and so what do we do here we we now have to of course somehow load it",
    "start": "1701080",
    "end": "1707760"
  },
  {
    "text": "so how it works is that the buff code runs in um runs in the lus kernel but",
    "start": "1707760",
    "end": "1714840"
  },
  {
    "text": "now we are in userland again and so what we do we have our program we load our",
    "start": "1714840",
    "end": "1724080"
  },
  {
    "text": "program um BPF program",
    "start": "1724480",
    "end": "1731080"
  },
  {
    "text": "load there lots of magic happening behind so um that it kind of works um",
    "start": "1731080",
    "end": "1738799"
  },
  {
    "text": "and then that's that's that's how we loaded it and of course we have to attach it so we can just call it auto",
    "start": "1738799",
    "end": "1745519"
  },
  {
    "text": "attach and then we just tell hey please um give us a trace print Loop so",
    "start": "1745519",
    "end": "1751120"
  },
  {
    "text": "essentially it we we print here to a trace and this is how it prints so then",
    "start": "1751120",
    "end": "1758080"
  },
  {
    "text": "um I always have to make sure that I'm using the correct Java version because it needs modern Java not like your Java",
    "start": "1758080",
    "end": "1765159"
  },
  {
    "text": "eight or something um so then we bu it and this can take a while because it",
    "start": "1765159",
    "end": "1771399"
  },
  {
    "text": "essentially compiles this down partially to C as it show you in a minute uh this is compiled down Toc loaded into a l Kel",
    "start": "1771399",
    "end": "1778840"
  },
  {
    "text": "and this runs on the runs here and they have a back that's nice let's see what it had problems",
    "start": "1778840",
    "end": "1787519"
  },
  {
    "text": "with and I don't know what problems it had with",
    "start": "1787519",
    "end": "1795518"
  },
  {
    "text": "let's do a maven clean I'm not an application developer",
    "start": "1799559",
    "end": "1807000"
  },
  {
    "text": "so um did it",
    "start": "1807000",
    "end": "1812000"
  },
  {
    "text": "break looks at least better so um this is all like the whole compilation process is integrated into Maven and",
    "start": "1812360",
    "end": "1819640"
  },
  {
    "text": "things um and that looks nice",
    "start": "1819640",
    "end": "1825679"
  },
  {
    "text": "so I think I can just ignore it fingers",
    "start": "1825679",
    "end": "1830840"
  },
  {
    "text": "crossed oh I think I can just I hope that I can just ignore it anyway let's",
    "start": "1830840",
    "end": "1836679"
  },
  {
    "text": "let's let's hope that I can just ignore",
    "start": "1836679",
    "end": "1841120"
  },
  {
    "text": "it uh you see one of the problems is that that ebpf likes to have things in",
    "start": "1843399",
    "end": "1849679"
  },
  {
    "text": "its order so let me check shortly what this what what was wrong",
    "start": "1849679",
    "end": "1857039"
  },
  {
    "text": "here um oh yeah the the problem is ebpf and divisions is like a mind field and",
    "start": "1857039",
    "end": "1864279"
  },
  {
    "text": "this worked a couple of this bre not this breed a while",
    "start": "1864279",
    "end": "1870440"
  },
  {
    "text": "ago ah go all the ebpf so um a problem of course uh is that it just told me uh",
    "start": "1870440",
    "end": "1877919"
  },
  {
    "text": "that it has problems wish me",
    "start": "1877919",
    "end": "1885518"
  },
  {
    "text": "luck um it's really Limited in what it can do essentially the the main problem",
    "start": "1885960",
    "end": "1891200"
  },
  {
    "text": "with ebpf is that it's so restricted because the idea that the developers had was make this runtime as Tiny as",
    "start": "1891200",
    "end": "1898799"
  },
  {
    "text": "possible so we can put it to any system to any to any mod architecture that",
    "start": "1898799",
    "end": "1904799"
  },
  {
    "text": "anyone would use so we can write and chit quite easily um and that's why they",
    "start": "1904799",
    "end": "1910279"
  },
  {
    "text": "only have seven registers and such so um it's it's good enough um let's hope that",
    "start": "1910279",
    "end": "1916360"
  },
  {
    "text": "it now works else I use pred things um good it",
    "start": "1916360",
    "end": "1921600"
  },
  {
    "text": "breaked um now we can just run it um demo.",
    "start": "1921600",
    "end": "1929159"
  },
  {
    "text": "sample cool um and now you see a a problem that that you usually have and",
    "start": "1929480",
    "end": "1934720"
  },
  {
    "text": "that I didn't have at doing this before that we have a veryify issue um that's",
    "start": "1934720",
    "end": "1941880"
  },
  {
    "text": "really nice ah yeah what it tells you and I totally forgot is that um you see",
    "start": "1941880",
    "end": "1948000"
  },
  {
    "text": "here um and that's a good thing they told us is cannot call GPL restricted function from non GPL compatible",
    "start": "1948000",
    "end": "1954600"
  },
  {
    "text": "programs because we need to tell in our programs hey yeah we're GPL licensed the thing is that you if you if you know the",
    "start": "1954600",
    "end": "1961399"
  },
  {
    "text": "GPL you know that um when when we write a program and we we call GPL licensed uh",
    "start": "1961399",
    "end": "1969120"
  },
  {
    "text": "functions our code itself should kind of should be um GBL license too some of the",
    "start": "1969120",
    "end": "1976360"
  },
  {
    "text": "um methods are exempt but most of them aren't so let's do the whole thing again uh the",
    "start": "1976360",
    "end": "1982559"
  },
  {
    "text": "cool thing is we have hour so um life deing on stage that's what the",
    "start": "1982559",
    "end": "1989799"
  },
  {
    "text": "like um but the cool thing is before when we were in the olden days of like normal",
    "start": "1989799",
    "end": "1996279"
  },
  {
    "text": "Linux colel development um we would have to recompile our Linux kernel and that",
    "start": "1996279",
    "end": "2001960"
  },
  {
    "text": "would to that would take so so so much longer and just say oh yeah load it and",
    "start": "2001960",
    "end": "2007240"
  },
  {
    "text": "my system doesn't break so you see we we just had an arrrow um the verifier catched it that it likes it likes",
    "start": "2007240",
    "end": "2013960"
  },
  {
    "text": "licensing a lot um good now now we see here that these",
    "start": "2013960",
    "end": "2021360"
  },
  {
    "text": "are all the files that are accessed and that's and that's pretty cool that's like only a few lines and we can do",
    "start": "2021360",
    "end": "2026799"
  },
  {
    "text": "logging we could use this for example to do um monitoring to see are any files",
    "start": "2026799",
    "end": "2033039"
  },
  {
    "text": "accessed are there any malicious patterns of file accesses here um and",
    "start": "2033039",
    "end": "2038120"
  },
  {
    "text": "this is used by tools like faler to do monitoring here just because it's so easy and it's so fast um it doesn't",
    "start": "2038120",
    "end": "2046080"
  },
  {
    "text": "impact the application a lot the cool thing is with this we can should should we do something more illicit",
    "start": "2046080",
    "end": "2054320"
  },
  {
    "text": "anyone so what we can do uh we can forbid a all so guess um we want to",
    "start": "2054320",
    "end": "2059679"
  },
  {
    "text": "forbid that people can touch tm/ forbidden um I think there should no no",
    "start": "2059679",
    "end": "2066960"
  },
  {
    "text": "we create a f we we want to restrict people from accessing this file how can we do it what we know here",
    "start": "2066960",
    "end": "2075358"
  },
  {
    "text": "is that all the programs usually go through enter met to access these files so what we can essentially do it we can",
    "start": "2075359",
    "end": "2081960"
  },
  {
    "text": "modify it we can read the file name because the file name is from usland memory is something that's quite",
    "start": "2081960",
    "end": "2088158"
  },
  {
    "text": "interesting in ebpf land because it's not you can't directly access user or",
    "start": "2088159",
    "end": "2093200"
  },
  {
    "text": "kernel memory but they are methods for it so essentially we copy the we copy",
    "start": "2093200",
    "end": "2098240"
  },
  {
    "text": "the file name in and then we check is it forbidden we just check with a simple Loop is this is this the/ team/",
    "start": "2098240",
    "end": "2105599"
  },
  {
    "text": "forbidden file then what we do we of course trace it we want to know what we're doing and then we write into the",
    "start": "2105599",
    "end": "2112320"
  },
  {
    "text": "fing because it's a CH pointer so we it's a pointer we can write in so we are",
    "start": "2112320",
    "end": "2118040"
  },
  {
    "text": "sneaky so essentially what we do we write in an empty string so what happens when you load this that's pretty simple",
    "start": "2118040",
    "end": "2126640"
  },
  {
    "text": "um forbidden file it's really simple so what we can",
    "start": "2126640",
    "end": "2132920"
  },
  {
    "text": "do here we see here every file that's loaded",
    "start": "2132920",
    "end": "2139400"
  },
  {
    "text": "but when we now access it tada doesn't break because um we because when we",
    "start": "2139400",
    "end": "2147800"
  },
  {
    "text": "enter it so that's the first thing that the that Linux does when the system call is called open m 2 and then we modify",
    "start": "2147800",
    "end": "2155040"
  },
  {
    "text": "the file name so what essentially happens is that said the later code in the system call is then like I don't",
    "start": "2155040",
    "end": "2161319"
  },
  {
    "text": "know any empty file please what are you doing and that's an simple way to",
    "start": "2161319",
    "end": "2166599"
  },
  {
    "text": "prevent the excess of course when we have things like symbolic links we can",
    "start": "2166599",
    "end": "2171800"
  },
  {
    "text": "circumvent this another cool thing here is and we're going closer to the firewall trajectory um we can for",
    "start": "2171800",
    "end": "2179240"
  },
  {
    "text": "example write a simple program that drops every third package that's useful",
    "start": "2179240",
    "end": "2185000"
  },
  {
    "text": "for stress tossing our application it's useful for changing yeah or package behaves when we have like adverse",
    "start": "2185000",
    "end": "2190560"
  },
  {
    "text": "networking condition so we Implement again interface this time call X thep hook that's that's like before it has",
    "start": "2190560",
    "end": "2197680"
  },
  {
    "text": "one method that's called XB handle packet that's called when as I showed you before in the in the graphics um",
    "start": "2197680",
    "end": "2204960"
  },
  {
    "text": "when the system needs to decide what to do with this package so um we then set a counter and we have a simple method",
    "start": "2204960",
    "end": "2211599"
  },
  {
    "text": "should drop which essentially checks is this count of m 3 equals 1 if yes we",
    "start": "2211599",
    "end": "2217040"
  },
  {
    "text": "drop it if no we pass it and that's pretty simple that's a simple way to implement a firewall kind of a firewall",
    "start": "2217040",
    "end": "2224280"
  },
  {
    "text": "because it onps every third packet but you can assume that and do here much more because xtp because our context",
    "start": "2224280",
    "end": "2231440"
  },
  {
    "text": "contains the whole packet we can pause it and do some proper proper ping the",
    "start": "2231440",
    "end": "2236599"
  },
  {
    "text": "only issue is that of course at this point we don't have any IP addresses stated in it's only neet packet so we",
    "start": "2236599",
    "end": "2244160"
  },
  {
    "text": "have to implement our whole network packet powering ourselves and it's quite a lot of fun I can tell you especially",
    "start": "2244160",
    "end": "2250400"
  },
  {
    "text": "because it was like 10 years since I had this uni um but it's like a thing with ebpf that you have to do many things",
    "start": "2250400",
    "end": "2257560"
  },
  {
    "text": "yourself if you want to be fast um and the and this this essentially drops us",
    "start": "2257560",
    "end": "2263680"
  },
  {
    "text": "every third packet but what I can also show you is how this whole thing is",
    "start": "2263680",
    "end": "2268720"
  },
  {
    "text": "implemented um so what we have here we have our code",
    "start": "2268720",
    "end": "2274280"
  },
  {
    "text": "um here it's the global variable that we can access both from usland and from cronland and what we do",
    "start": "2274280",
    "end": "2281359"
  },
  {
    "text": "now I first pre-process it so that we remove all the i i State all the global",
    "start": "2281359",
    "end": "2287640"
  },
  {
    "text": "variables all the types in C code and what I do I get this Java code and what",
    "start": "2287640",
    "end": "2293119"
  },
  {
    "text": "essentially uh use is uh is a translator that translates me the short drop method",
    "start": "2293119",
    "end": "2298960"
  },
  {
    "text": "in Java to equivalent Z code and then in the end we get this and this is how the",
    "start": "2298960",
    "end": "2304200"
  },
  {
    "text": "whole Library works because of course C's like the the C is like the most used",
    "start": "2304200",
    "end": "2309839"
  },
  {
    "text": "language for these EPF programs and also rust is now gaining popularity uh Java",
    "start": "2309839",
    "end": "2314920"
  },
  {
    "text": "is just because I can don't ask me why I once gave this I once gave a similar",
    "start": "2314920",
    "end": "2320160"
  },
  {
    "text": "talk at the Linux plumers conference in September and people thought it was a joke when someone else told them yeah",
    "start": "2320160",
    "end": "2326440"
  },
  {
    "text": "yeah you can do ebpf in Java and they were like what um but it's fine it's",
    "start": "2326440",
    "end": "2331880"
  },
  {
    "text": "it's just a simple project um and happy that you're here and not laughing at me all the time um because you probably Pro",
    "start": "2331880",
    "end": "2338720"
  },
  {
    "text": "some of you probably programming go and they programmed it for the last two days and I have to say Java is an interesting",
    "start": "2338720",
    "end": "2345000"
  },
  {
    "text": "language but go for example I Tred to get the number",
    "start": "2345000",
    "end": "2350599"
  },
  {
    "text": "I Tred to get a list of keys of a map and it's a fall Loop anyway um every",
    "start": "2350599",
    "end": "2357720"
  },
  {
    "text": "language has a pros and cons and here what I try to do is I Tred to show you what what cool things EF can and for",
    "start": "2357720",
    "end": "2363520"
  },
  {
    "text": "compile notes Here is sh drop is translate into the simple bite code but lvm um it's pretty simple it LS like our",
    "start": "2363520",
    "end": "2371319"
  },
  {
    "text": "Global variable it adds something on it and then it has a simple jump in because",
    "start": "2371319",
    "end": "2376400"
  },
  {
    "text": "of course like the tary statement is uh because of course it's like U the tary",
    "start": "2376400",
    "end": "2382720"
  },
  {
    "text": "statement is is essentially an IFL statement um and that's pretty simple so",
    "start": "2382720",
    "end": "2389000"
  },
  {
    "text": "um now now to the end of my presentation um what I want to do is that I want Java",
    "start": "2389000",
    "end": "2395480"
  },
  {
    "text": "as a first class uh language for ebpf because I think um it's cool that we can write these programs in in go and rust",
    "start": "2395480",
    "end": "2403560"
  },
  {
    "text": "but it's also cool that we can now write them in Java because many of the especially Junior developers and people",
    "start": "2403560",
    "end": "2409480"
  },
  {
    "text": "from University mostly know Java at least in Germany where I come from so it",
    "start": "2409480",
    "end": "2414680"
  },
  {
    "text": "helps them to to understand what we're doing and and it helps us to go EPF as",
    "start": "2414680",
    "end": "2420520"
  },
  {
    "text": "as a whole helps us to go towards a micronel because before we had to implement our firewall like close to the",
    "start": "2420520",
    "end": "2426400"
  },
  {
    "text": "Linux Chunnel and now we can just Implement externally loaded in and that's pretty cool and of course when we",
    "start": "2426400",
    "end": "2433839"
  },
  {
    "text": "have kernel fixes we can for example patch the kernel from the outside at run",
    "start": "2433839",
    "end": "2439000"
  },
  {
    "text": "time for example consider we would have an issue where like a file name was was",
    "start": "2439000",
    "end": "2444319"
  },
  {
    "text": "terrible and it crashed Curr internally or our file system what we could do now we could just add a fix and be like Oh",
    "start": "2444319",
    "end": "2450440"
  },
  {
    "text": "whenever this this file name comes in we just drop it so it's a simple fix and it we can really use it for hot fixer and",
    "start": "2450440",
    "end": "2457680"
  },
  {
    "text": "then uh a topic that I'm particular interested in in the in the last few",
    "start": "2457680",
    "end": "2462720"
  },
  {
    "text": "months is SK it's skex um that's the official logo what it does it essentially allows us to write our own",
    "start": "2462720",
    "end": "2469200"
  },
  {
    "text": "Linux C our own Linux Schuler in Java in Java no in in EPF and thereby of course",
    "start": "2469200",
    "end": "2475760"
  },
  {
    "text": "in Java because implemented this why not Implement a Linux SC in like 10 lines",
    "start": "2475760",
    "end": "2481079"
  },
  {
    "text": "and run it alongside the presentation in front of you because as you might have guessed it the whole presentation ran on",
    "start": "2481079",
    "end": "2488800"
  },
  {
    "text": "a Linux schul it was essentially the schul where there was a tiny bug in that",
    "start": "2488800",
    "end": "2494480"
  },
  {
    "text": "but that's the but that's the Linux SK that running this whole system this",
    "start": "2494480",
    "end": "2500000"
  },
  {
    "text": "whole presentation it's just like 10 lines so what it does it initializes scheding Q um and every time a process",
    "start": "2500000",
    "end": "2507000"
  },
  {
    "text": "is like yeah I want to I want to go on the CPU please schu which just s yeah go",
    "start": "2507000",
    "end": "2512520"
  },
  {
    "text": "into the go into the shade Q we we have a Time size of like 5 milliseconds and and we scale it by the number of waiting",
    "start": "2512520",
    "end": "2518960"
  },
  {
    "text": "process so the system is still responsive which is pretty useful for running a presentation on it and then",
    "start": "2518960",
    "end": "2525160"
  },
  {
    "text": "every time a CPU is like hey please please give me something new it's essentially like a junior developer who",
    "start": "2525160",
    "end": "2530760"
  },
  {
    "text": "is like please boss give me a new work item um and we we give it here we just",
    "start": "2530760",
    "end": "2537480"
  },
  {
    "text": "say yeah take take the first one we don't care um and that's and that's a",
    "start": "2537480",
    "end": "2542920"
  },
  {
    "text": "fully functional Linux scedule that it works uh the overhead is not that big it's of course not a tra uh we can",
    "start": "2542920",
    "end": "2549680"
  },
  {
    "text": "Implement simple schedulers that are far worse we can Implement ones that are better and people at meter and Nvidia",
    "start": "2549680",
    "end": "2556359"
  },
  {
    "text": "and and other companies Working Day and Night on making useful schedulers um and",
    "start": "2556359",
    "end": "2562400"
  },
  {
    "text": "the cool thing is because we have a few minutes so um I I I just find it interesting for",
    "start": "2562400",
    "end": "2569000"
  },
  {
    "text": "example um we can normally our system is is normally we want our system to be",
    "start": "2569000",
    "end": "2574760"
  },
  {
    "text": "really responsive so we want that our system um executes a new task every few",
    "start": "2574760",
    "end": "2580960"
  },
  {
    "text": "SEC every few milliseconds so yeah responsive responsiveness nice now consider we just say like hey please let",
    "start": "2580960",
    "end": "2587680"
  },
  {
    "text": "processes run for like 5 seconds on end um let's see where that crashes our",
    "start": "2587680",
    "end": "2594359"
  },
  {
    "text": "system um I hope it's also interesting for you it's just some some nude stuff",
    "start": "2594359",
    "end": "2600280"
  },
  {
    "text": "that that I do uh let's let's compile it again fingers cross a works this time",
    "start": "2600280",
    "end": "2609119"
  },
  {
    "text": "um and the cool thing is all the ebpf bite code is integrate into the jar that",
    "start": "2611400",
    "end": "2616680"
  },
  {
    "text": "that comes out of this um which makes it also possible to transport this to another",
    "start": "2616680",
    "end": "2623319"
  },
  {
    "text": "system um let's see it didn't crash till now in",
    "start": "2623319",
    "end": "2629280"
  },
  {
    "text": "the build process so yes so yeah it it worked so um I have to check uh so what",
    "start": "2629280",
    "end": "2636119"
  },
  {
    "text": "I do is I kill all Java so I don't want to have the the the previous SCH on Sor",
    "start": "2636119",
    "end": "2642359"
  },
  {
    "text": "U one is H minimal",
    "start": "2642359",
    "end": "2646318"
  },
  {
    "text": "schul so um now we have a schedu that now we have a Schuler that hope it's",
    "start": "2649160",
    "end": "2657040"
  },
  {
    "text": "this Schuler yeah that's the Schuler and it's it's okay now because we don't like",
    "start": "2657040",
    "end": "2663599"
  },
  {
    "text": "do something trtic on our system but consider that we call Maven",
    "start": "2663599",
    "end": "2670440"
  },
  {
    "text": "package you see we can have fun um and we can even get it to a hold because",
    "start": "2670440",
    "end": "2675800"
  },
  {
    "text": "when I start compiling the open JK because that's like what I do for work if you ever want it um I'm one of these",
    "start": "2675800",
    "end": "2682319"
  },
  {
    "text": "weird people that do like profilling stuff directly in you JK and find for a couple of years to get them in um so",
    "start": "2682319",
    "end": "2690000"
  },
  {
    "text": "let's see do do I have a jdk on because the jdk is really good in like heating",
    "start": "2690000",
    "end": "2696480"
  },
  {
    "text": "up your system",
    "start": "2696480",
    "end": "2699040"
  },
  {
    "text": "system oh yeah uh make clean it's probably a good",
    "start": "2702880",
    "end": "2709880"
  },
  {
    "text": "idea and you see here it's it's really chumpy but we can improve this and it's it's really funny so that shows you what",
    "start": "2709880",
    "end": "2716800"
  },
  {
    "text": "we can do with ebpf having really having fun also for example using this to simulate certain conditions for example",
    "start": "2716800",
    "end": "2723400"
  },
  {
    "text": "if we want to simulate our system on the load we can just write a scat that simulates that behaves like it's on the",
    "start": "2723400",
    "end": "2730680"
  },
  {
    "text": "load and um another idea that that came to that people came to recently was we",
    "start": "2730680",
    "end": "2736440"
  },
  {
    "text": "could also use this uh in security applications because we can control how long a process works and stuff and then",
    "start": "2736440",
    "end": "2743880"
  },
  {
    "text": "only run the next system so maybe we can use this for for for security too let's",
    "start": "2743880",
    "end": "2749559"
  },
  {
    "text": "see and you see here uh it's not the most responsive schedu anyway um I just",
    "start": "2749559",
    "end": "2757040"
  },
  {
    "text": "stop it um and go back to my presentation um so",
    "start": "2757040",
    "end": "2764400"
  },
  {
    "text": "yeah you can write writing your own Linux SCH is as easy as implementing the",
    "start": "2764400",
    "end": "2769839"
  },
  {
    "text": "schule interface and hoping the verifier doesn't hate you um uh thank you for",
    "start": "2769839",
    "end": "2775480"
  },
  {
    "text": "being here uh it's it's always nice it's the second time that I gave this talk at an NDC related conference and it's",
    "start": "2775480",
    "end": "2782640"
  },
  {
    "text": "always a pleasure when you want to find out more about all these topics uh go go to this QR code um I'm myself I'm y",
    "start": "2782640",
    "end": "2790440"
  },
  {
    "text": "space you find me at mostly nos. where I publish a new blog post every two weeks",
    "start": "2790440",
    "end": "2795760"
  },
  {
    "text": "on ebpf and such there are now over 18 blog posts out on ebpf for example",
    "start": "2795760",
    "end": "2801720"
  },
  {
    "text": "there's also blog post on the whole xtp stuff on the whole writing of firewall stuff where it's far more in depth that",
    "start": "2801720",
    "end": "2808720"
  },
  {
    "text": "I could ever go here and there will be next week hopefully blog post out on",
    "start": "2808720",
    "end": "2814200"
  },
  {
    "text": "using custom Linux gers for concurrency test so if you're at fosdem you can look",
    "start": "2814200",
    "end": "2820079"
  },
  {
    "text": "forward to me being prepared in this T um and yeah I want to say uh thanks to",
    "start": "2820079",
    "end": "2825119"
  },
  {
    "text": "my team um it's it's really great that I can do such interesting work on the side",
    "start": "2825119",
    "end": "2830520"
  },
  {
    "text": "there um yeah and if you have more questions then I think we have still 10 minutes but yes thank you",
    "start": "2830520",
    "end": "2839050"
  },
  {
    "text": "[Applause]",
    "start": "2839050",
    "end": "2841899"
  }
]