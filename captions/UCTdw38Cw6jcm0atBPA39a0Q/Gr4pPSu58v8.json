[
  {
    "text": "thank you so thank you for finding me and this after this rescheduled talk so I don't know if you looked at the",
    "start": "5680",
    "end": "11880"
  },
  {
    "text": "printouts or anything there was another talk schedule and uh the speaker couldn't make it so I took the",
    "start": "11880",
    "end": "19800"
  },
  {
    "text": "opportunity to take this slot to talk about o the good parts everyone I hope you've had good first day of the",
    "start": "19800",
    "end": "26359"
  },
  {
    "text": "conference and I hope that you are not too tired because this will be quite",
    "start": "26359",
    "end": "33040"
  },
  {
    "text": "High paced going through the important part of a so who am I well I've been",
    "start": "33040",
    "end": "38719"
  },
  {
    "text": "working 10 plus year Consulting and doing project works in the identity",
    "start": "38719",
    "end": "44719"
  },
  {
    "text": "space uh I started out with an old standard called sample 2 we'll get back",
    "start": "44719",
    "end": "49920"
  },
  {
    "text": "to that uh I'm the author and maintainer of the sustains of samp 2 packages nowadays I mostly do Consulting",
    "start": "49920",
    "end": "57800"
  },
  {
    "text": "training and open connect or 2 I work for dender software which is the new home of identity",
    "start": "57800",
    "end": "64760"
  },
  {
    "text": "server and well that's it so let's start by looking at some",
    "start": "64760",
    "end": "71880"
  },
  {
    "text": "history about user authentication and API authorization in webbased applications",
    "start": "71880",
    "end": "79479"
  },
  {
    "text": "I'm starting a timeline on 2005 because that was when we really had",
    "start": "79479",
    "end": "85720"
  },
  {
    "text": "the first web-based protocols came around there were things before for that",
    "start": "85720",
    "end": "90799"
  },
  {
    "text": "Windows integrated authentication using ntlm we had keros that is used uh in",
    "start": "90799",
    "end": "97159"
  },
  {
    "text": "Windows Active Directory and also in the Unix space but those are specialized",
    "start": "97159",
    "end": "102640"
  },
  {
    "text": "protocols where the if you use Windows integrated authentication the web browser needs to know about the protocol",
    "start": "102640",
    "end": "109280"
  },
  {
    "text": "details the implementation of curve browser andm sites in the web",
    "start": "109280",
    "end": "114360"
  },
  {
    "text": "browser and uh in the early 2000s there was a need for something better more",
    "start": "114360",
    "end": "120560"
  },
  {
    "text": "flexible and saml 2 saml version 2.0 was invented uh together with W's Federation",
    "start": "120560",
    "end": "127560"
  },
  {
    "text": "W's trust these are protocols that have flows that are working based on normal",
    "start": "127560",
    "end": "136239"
  },
  {
    "text": "web Primitives so a web browser that knows how to show HTML how to do Post",
    "start": "136239",
    "end": "143280"
  },
  {
    "text": "forms uh things like that can run a sble to flow it there is no need for any",
    "start": "143280",
    "end": "151000"
  },
  {
    "text": "specific support inside of the browser for that but those were very enterpris",
    "start": "151000",
    "end": "158640"
  },
  {
    "text": "standards soap XML Etc and something better was needed on",
    "start": "158640",
    "end": "167599"
  },
  {
    "text": "the internet in the age of internet based services and that's a 2 that came",
    "start": "167599",
    "end": "172640"
  },
  {
    "text": "along in 2012 we will also look briefly at open ID connect and why what two is not a",
    "start": "172640",
    "end": "181280"
  },
  {
    "text": "user Authentication Protocol or and not a single sign on",
    "start": "181280",
    "end": "187360"
  },
  {
    "text": "protocol jumping fast forward uh it says soon o two don't",
    "start": "187360",
    "end": "193760"
  },
  {
    "text": "one I said soon into 2020 for I st",
    "start": "193760",
    "end": "199360"
  },
  {
    "text": "one uh Dominic Mayer said in 2020 that it will be finished this year he said in",
    "start": "199360",
    "end": "205920"
  },
  {
    "text": "2021 that it will be finished this year and in 202 two we said that well for",
    "start": "205920",
    "end": "211439"
  },
  {
    "text": "sure it will be finished this year I had to look it up now uh it's still a draft",
    "start": "211439",
    "end": "216519"
  },
  {
    "text": "but it's more or less complete so we can we'll talk about that uh along the line",
    "start": "216519",
    "end": "223400"
  },
  {
    "text": "there's also been some best camera practices BCP documents being published which are advis on how to use it and it",
    "start": "223400",
    "end": "230680"
  },
  {
    "text": "all really comes down to something similar to that uh have you seen this book JavaScript the definitive guide",
    "start": "230680",
    "end": "236400"
  },
  {
    "text": "versus the good part I read the right one JavaScript the good part and that's",
    "start": "236400",
    "end": "242159"
  },
  {
    "text": "about all the JavaScript I know and that's all about the JavaScript you need to know to be productive in JavaScript",
    "start": "242159",
    "end": "248280"
  },
  {
    "text": "the definitive guide is so much more and it's the same with oo the",
    "start": "248280",
    "end": "255200"
  },
  {
    "text": "original oo spe to spec came with a lot of flows that are were designed for",
    "start": "255200",
    "end": "262000"
  },
  {
    "text": "different purposes and it's been evolving this new security threats that",
    "start": "262000",
    "end": "267440"
  },
  {
    "text": "we have to handle but also new mechanisms uh new browser features",
    "start": "267440",
    "end": "272960"
  },
  {
    "text": "things that mean that well we can condense it to just the good parts and that's what I'm going to focus on here",
    "start": "272960",
    "end": "279520"
  },
  {
    "text": "the talk is named o two the good parts but it could as well be named o 2.1 because it's essentially the",
    "start": "279520",
    "end": "286960"
  },
  {
    "text": "same so we will look at why o why does it even exist some typical protocol",
    "start": "286960",
    "end": "293160"
  },
  {
    "text": "flows application architectures and then a is not a single sign on protocol",
    "start": "293160",
    "end": "301440"
  },
  {
    "text": "and we will look into why open ID connect as an additional layer on top of",
    "start": "301440",
    "end": "306720"
  },
  {
    "text": "what is a single signal protocol and then some fur the reading if you want",
    "start": "306720",
    "end": "311800"
  },
  {
    "text": "even more after this talk so why does it exist um so the",
    "start": "311800",
    "end": "317880"
  },
  {
    "text": "problem is for that overo tries to solve is all about something calling a web",
    "start": "317880",
    "end": "323400"
  },
  {
    "text": "service or HTP API and why don't we just use an API key",
    "start": "323400",
    "end": "330919"
  },
  {
    "text": "I mean that's simple enough isn't it uh well an API key is simple enough",
    "start": "330919",
    "end": "338039"
  },
  {
    "text": "but it has two drawbacks one is that once you get many",
    "start": "338039",
    "end": "343199"
  },
  {
    "text": "apis and many client applications then you have a many to many relationship of apbi keys to",
    "start": "343199",
    "end": "351319"
  },
  {
    "text": "maintain uh the other one is that an API key is a longlived secret or high value",
    "start": "351319",
    "end": "357520"
  },
  {
    "text": "Asset and you're now sending it along in every single request and the more you use something the more likely it is that",
    "start": "357520",
    "end": "364240"
  },
  {
    "text": "someone managed to steal the this high value secret so if we instead get a",
    "start": "364240",
    "end": "371360"
  },
  {
    "text": "token that is describes what we are allowed to",
    "start": "371360",
    "end": "378520"
  },
  {
    "text": "access uh then that will can prove uh to the API that we",
    "start": "378520",
    "end": "384479"
  },
  {
    "text": "have the right to call it um so what is a token well a token",
    "start": "384479",
    "end": "390400"
  },
  {
    "text": "contains it's actually one of the good things that came out of s to so this is s token a s assertion it calls it's",
    "start": "390400",
    "end": "397560"
  },
  {
    "text": "called it XML so I don't remember it's that verbus thing that was before",
    "start": "397560",
    "end": "404599"
  },
  {
    "text": "Jason uh but it contains the some essential concept that was brought forward into the O world it was contains",
    "start": "404599",
    "end": "413560"
  },
  {
    "text": "an issu and signature so this is a piece of data that was issued by in this case",
    "start": "413560",
    "end": "419599"
  },
  {
    "text": "ping one um as an example and there is a signature in here to prove that it was",
    "start": "419599",
    "end": "425400"
  },
  {
    "text": "actually issued by ping one there is a Time window saying that",
    "start": "425400",
    "end": "430960"
  },
  {
    "text": "this token is valid for consumption for limited time that's why we have the difference to the high value Asset the",
    "start": "430960",
    "end": "437080"
  },
  {
    "text": "API key which is long lived if someone managed to make it get a copy of a token",
    "start": "437080",
    "end": "443160"
  },
  {
    "text": "then it expires and they can no longer use it forever there's a scoping so that's also",
    "start": "443160",
    "end": "450199"
  },
  {
    "text": "a difference compared to just using uh a gen General password that we",
    "start": "450199",
    "end": "456120"
  },
  {
    "text": "can say that well this token is only allowed to be used on a specific place a",
    "start": "456120",
    "end": "462400"
  },
  {
    "text": "specific audience or a specific API we have some information about how the authentication was done maybe our",
    "start": "462400",
    "end": "469960"
  },
  {
    "text": "API is divided into high value API surface that requires MFA and",
    "start": "469960",
    "end": "476639"
  },
  {
    "text": "a low value that well most of the operations you can do them with just username and password but if you want to",
    "start": "476639",
    "end": "483039"
  },
  {
    "text": "send money to someone uh to an external account then you need MFA things like",
    "start": "483039",
    "end": "488520"
  },
  {
    "text": "that and we can add claims which is some information about a user arbitrary",
    "start": "488520",
    "end": "495400"
  },
  {
    "text": "attributes um and there is actually within all these extensive things there",
    "start": "495400",
    "end": "500759"
  },
  {
    "text": "is actually a real value that is the thing so we'll see when we look at Json",
    "start": "500759",
    "end": "505960"
  },
  {
    "text": "Forma tokens that we more focus on the tokens",
    "start": "505960",
    "end": "511120"
  },
  {
    "text": "so tokens was a good thing and um they worked but soap and XML was a very",
    "start": "511120",
    "end": "519200"
  },
  {
    "text": "enterpris standards and remember that there was a company once called Twitter do you",
    "start": "519200",
    "end": "525600"
  },
  {
    "text": "remember that and there was was a com this Twitter company was actually inventive",
    "start": "525600",
    "end": "532519"
  },
  {
    "text": "and open and encourage third-party application developers to interact with their services",
    "start": "532519",
    "end": "539680"
  },
  {
    "text": "remember that that that was a thing um they initiated this and Google",
    "start": "539680",
    "end": "547600"
  },
  {
    "text": "also uh heard about it and said that yes we want this as well so what they found",
    "start": "547600",
    "end": "553000"
  },
  {
    "text": "out was that in the sample Tu space and the tokens that existed they were very",
    "start": "553000",
    "end": "558120"
  },
  {
    "text": "enterpris and they were around the idea that we have an ENT uh a corporation",
    "start": "558120",
    "end": "563760"
  },
  {
    "text": "that rules everything and we have employees that just works Within These boundaries while",
    "start": "563760",
    "end": "571640"
  },
  {
    "text": "oorth um two was born on the internet age where we have a third part three",
    "start": "571640",
    "end": "577640"
  },
  {
    "text": "part relationship we have the re uh apis",
    "start": "577640",
    "end": "583120"
  },
  {
    "text": "Twitter or Google we have a thirdparty developer creating some application and",
    "start": "583120",
    "end": "589399"
  },
  {
    "text": "we have a user who is actually the owner of the information and we want to put the user more in control than sample 2",
    "start": "589399",
    "end": "597560"
  },
  {
    "text": "allows and that's why the oo architecture and",
    "start": "597560",
    "end": "604640"
  },
  {
    "text": "now I'll be using the terms from the oo to spec which is maybe the most natur",
    "start": "604640",
    "end": "609760"
  },
  {
    "text": "not the most natural terms to use but we will call the API now a",
    "start": "609760",
    "end": "615399"
  },
  {
    "text": "resource server and there is an authorization server and they typically",
    "start": "615399",
    "end": "621200"
  },
  {
    "text": "or they work together so if I want to access for examp imagine I I've invented and",
    "start": "621200",
    "end": "628279"
  },
  {
    "text": "created this magnificent uh calendar widget that can display your upcoming uh",
    "start": "628279",
    "end": "634920"
  },
  {
    "text": "day using reading from your Google calendar so Google has an authorization",
    "start": "634920",
    "end": "640040"
  },
  {
    "text": "server that protects the resource of the Google Calendar",
    "start": "640040",
    "end": "645399"
  },
  {
    "text": "API and I've cred this client application client applications can be",
    "start": "645399",
    "end": "651720"
  },
  {
    "text": "browser based mobile or native applications or server based and there's an important",
    "start": "651720",
    "end": "658720"
  },
  {
    "text": "distinction to be made here uh so the assumption is that",
    "start": "658720",
    "end": "663920"
  },
  {
    "text": "clients are not under control of the same uh same party as the authorization",
    "start": "663920",
    "end": "670600"
  },
  {
    "text": "server and the res serice there are of course first party client applications but the security model doesn't mandate",
    "start": "670600",
    "end": "676680"
  },
  {
    "text": "that uh it is under the control of the same",
    "start": "676680",
    "end": "681760"
  },
  {
    "text": "entity one thing to note about client is that some of these client single page applications mobile uh applications they",
    "start": "682040",
    "end": "689320"
  },
  {
    "text": "run on a device which is under control of the end user while some of them run",
    "start": "689320",
    "end": "695120"
  },
  {
    "text": "on a server in a data center in under our control and we in other two terms we",
    "start": "695120",
    "end": "701279"
  },
  {
    "text": "name them public versus confidential client a confidential client is something that can keep a secret like a",
    "start": "701279",
    "end": "707360"
  },
  {
    "text": "client secret which is essentially password proving who the client is while public clients cannot keep a secret if I",
    "start": "707360",
    "end": "715639"
  },
  {
    "text": "bundle and install a secret uh or embed a secret in the package being published",
    "start": "715639",
    "end": "721040"
  },
  {
    "text": "on Google Play of course you all get it when you download it then it's not much of a secret is",
    "start": "721040",
    "end": "727839"
  },
  {
    "text": "it and then we have users uh or people or using the or two term resource",
    "start": "729240",
    "end": "737160"
  },
  {
    "text": "owners which makes sense so the resource server here is the Google Calendar API",
    "start": "737160",
    "end": "743720"
  },
  {
    "text": "and I am the owner of my Google calendar data right so I'm the resource owner",
    "start": "743720",
    "end": "751120"
  },
  {
    "text": "we can call them users as well uh so",
    "start": "751120",
    "end": "756160"
  },
  {
    "text": "when someone would be using my magnificent new calendar widget what",
    "start": "756160",
    "end": "762160"
  },
  {
    "text": "they will do is that they will reach out to the authorization server to Google server and say can I please get a token",
    "start": "762160",
    "end": "771079"
  },
  {
    "text": "that allows access to my Google Calendar and Google will produce an",
    "start": "771079",
    "end": "777720"
  },
  {
    "text": "access token sent back and then on any when my widget wants to read the uh",
    "start": "777720",
    "end": "784680"
  },
  {
    "text": "Google calendar data it will access the resource using the access token and this",
    "start": "784680",
    "end": "790160"
  },
  {
    "text": "means that in a user Centric flow my Google widget never ever gets",
    "start": "790160",
    "end": "796720"
  },
  {
    "text": "anywhere near the user Google password and that is an important thing that we are allowed to delegate access to for",
    "start": "796720",
    "end": "804000"
  },
  {
    "text": "example the Google Calendar API without having to give that third party",
    "start": "804000",
    "end": "810320"
  },
  {
    "text": "application your Google password I mean in the very early days when they were sign in with Google things or",
    "start": "810320",
    "end": "816639"
  },
  {
    "text": "applications sometimes they try to get your Google Google username and password please enter your main Google password",
    "start": "816639",
    "end": "822880"
  },
  {
    "text": "here to us we promise to behave nice uh that shouldn't be done we should",
    "start": "822880",
    "end": "830519"
  },
  {
    "text": "uh so user should of course not share the Google password with",
    "start": "830519",
    "end": "835839"
  },
  {
    "text": "anyone so this access token now that I got from the Google go from Google um",
    "start": "835839",
    "end": "841480"
  },
  {
    "text": "and the Google authorization server if I am a calendar widget does it make sense if I have a go access token",
    "start": "841480",
    "end": "848920"
  },
  {
    "text": "that allows me to read all your emails write emails on your behalf to someone",
    "start": "848920",
    "end": "855279"
  },
  {
    "text": "else uh update your Google Drive no of course not we also want a mechanism",
    "start": "855279",
    "end": "862040"
  },
  {
    "text": "where we can say that this access token should well I created it I am the owner",
    "start": "862040",
    "end": "868680"
  },
  {
    "text": "of my Google account but I I want to get an access token now that just allows",
    "start": "868680",
    "end": "874160"
  },
  {
    "text": "reading my Google Calendar the mechanism in O through for that is the scope",
    "start": "874160",
    "end": "880560"
  },
  {
    "text": "parameter where we tell uh embed in the aess token uh the",
    "start": "880560",
    "end": "887000"
  },
  {
    "text": "scope that is is allow of the API surface that this access token may be used at Scopes in this protocol standard",
    "start": "887000",
    "end": "895279"
  },
  {
    "text": "is Justus defined as a list of space delimited case sensitive string order doesn't matter so it's very",
    "start": "895279",
    "end": "901839"
  },
  {
    "text": "flexible and then it's up to the Implement implementer to decide how do we want to structure our",
    "start": "901839",
    "end": "909160"
  },
  {
    "text": "Scopes and remember the Scopes is something between the authorization server and the",
    "start": "909160",
    "end": "914959"
  },
  {
    "text": "API because they are let's see here so authorization server and resource",
    "start": "914959",
    "end": "920480"
  },
  {
    "text": "servers are controlled by the same entity so they make a decision and uh",
    "start": "920480",
    "end": "927480"
  },
  {
    "text": "about what uh what the structure should look like we can have an example uh GitHub",
    "start": "927480",
    "end": "934199"
  },
  {
    "text": "Scopes where we have a read or the user",
    "start": "934199",
    "end": "939440"
  },
  {
    "text": "scope which gets access to the user profile and a lot uh user coal on email",
    "start": "939440",
    "end": "945160"
  },
  {
    "text": "which just gets access to reading the user's email so we can have multiple levels of Scopes we can also see here",
    "start": "945160",
    "end": "951759"
  },
  {
    "text": "that naming is hard is it colon or underscore is it known cool Co and",
    "start": "951759",
    "end": "958199"
  },
  {
    "text": "followed by verb user email or read you user I don't know but it",
    "start": "958199",
    "end": "963639"
  },
  {
    "text": "works uh GitHub jumped on this when they were a",
    "start": "963639",
    "end": "968680"
  },
  {
    "text": "startup Google jumped on this when they were all already an established larger company so they have somewhat more",
    "start": "968680",
    "end": "974959"
  },
  {
    "text": "structured approach remember Scopes are just case sensitive strings Google has chosen to use URLs because they provide",
    "start": "974959",
    "end": "983519"
  },
  {
    "text": "a structure to these",
    "start": "983519",
    "end": "987440"
  },
  {
    "text": "and here we have uh for example the Google API com or/ calendar. readon",
    "start": "990839",
    "end": "997959"
  },
  {
    "text": "which is what my calendar widget should typically",
    "start": "997959",
    "end": "1002680"
  },
  {
    "text": "request so how do we request tokens then now we talked a bit about Scopes in the",
    "start": "1003880",
    "end": "1009440"
  },
  {
    "text": "background but when we need tokens there are in AOL 2 there are multiple flows",
    "start": "1009440",
    "end": "1017600"
  },
  {
    "text": "for different purposes different kinds of application you might have heard that for mobile applications you should use",
    "start": "1017600",
    "end": "1023079"
  },
  {
    "text": "one thing for single page application something else for service side application a third",
    "start": "1023079",
    "end": "1028199"
  },
  {
    "text": "variant but it comes down to in o 2. one that we can just focus on two of them",
    "start": "1028199",
    "end": "1033839"
  },
  {
    "text": "one for machine to machine communication and one for uh user Centric applications where user",
    "start": "1033839",
    "end": "1039918"
  },
  {
    "text": "present the machine to machine communication is called the client credential flow there is no user present",
    "start": "1039919",
    "end": "1046319"
  },
  {
    "text": "and it only authenticates the client so how it works is that the client",
    "start": "1046319",
    "end": "1054160"
  },
  {
    "text": "application posts a form a form or a form of coded request",
    "start": "1054160",
    "end": "1062679"
  },
  {
    "text": "with saying that hey I'm this client it uses basic authentication with",
    "start": "1062679",
    "end": "1068320"
  },
  {
    "text": "a client ID and client secret to say hey I'm this client I I can prove",
    "start": "1068320",
    "end": "1073440"
  },
  {
    "text": "it and then it says uh client credential is the ground type just to indicate what flow it's us and then please give me an",
    "start": "1073440",
    "end": "1080840"
  },
  {
    "text": "Access token that is scoped to API 1 authorization server responds with an access token and a small Json document",
    "start": "1080840",
    "end": "1088840"
  },
  {
    "text": "containing the access token the scope token type and expiry time and then uh and um the access token",
    "start": "1088840",
    "end": "1098960"
  },
  {
    "text": "is typically in JWT format but it could be something else oo 2 in itself says",
    "start": "1098960",
    "end": "1105720"
  },
  {
    "text": "nothing about the token format oo 2 is just a protocol for the handshake how to retrieve the token so at least in the",
    "start": "1105720",
    "end": "1113000"
  },
  {
    "text": "past if you used uh Microsoft Asher ad that it was named back then to get an",
    "start": "1113000",
    "end": "1119080"
  },
  {
    "text": "access token the access token to access the MS graph API was not a Json web token it was something else I have no",
    "start": "1119080",
    "end": "1125360"
  },
  {
    "text": "idea what and it worked because as a client application I just get a token I",
    "start": "1125360",
    "end": "1130760"
  },
  {
    "text": "know I can use it attach it to outb calls and it authorized me to do the",
    "start": "1130760",
    "end": "1136640"
  },
  {
    "text": "calls but it's often itj web token because it's a simple structure and it can be self-contained",
    "start": "1136640",
    "end": "1145320"
  },
  {
    "text": "and validated without external API calls by the API and it can also there are client",
    "start": "1145320",
    "end": "1152840"
  },
  {
    "text": "libraries available everywhere Json web token access token",
    "start": "1152840",
    "end": "1158760"
  },
  {
    "text": "uh contains of header which should have a type head of at plus JWT to indicate is an access token in JWT format it",
    "start": "1158760",
    "end": "1166840"
  },
  {
    "text": "contains the payload and in the client credential flow it's simple who issued",
    "start": "1166840",
    "end": "1171919"
  },
  {
    "text": "it the issuer um and the signature in the",
    "start": "1171919",
    "end": "1178240"
  },
  {
    "text": "previous example with the sample token the signature is inside the token in o two the signature is outside of the",
    "start": "1178240",
    "end": "1185320"
  },
  {
    "text": "token as and it's it's actually most simple approach to signing because it",
    "start": "1185320",
    "end": "1190799"
  },
  {
    "text": "signs the encoded representation of the token while S 2 is horrible uh I worked for a decade with S",
    "start": "1190799",
    "end": "1198320"
  },
  {
    "text": "2 it's horrible uh we have the time window issued at and expiry time and we have",
    "start": "1198320",
    "end": "1205120"
  },
  {
    "text": "scoping saying that this token is valid for API 1 we have claims and in this",
    "start": "1205120",
    "end": "1210799"
  },
  {
    "text": "case it just says this is client this token was issued to client",
    "start": "1210799",
    "end": "1216200"
  },
  {
    "text": "one the token can be used being transmitted in the authorization",
    "start": "1216200",
    "end": "1221280"
  },
  {
    "text": "authorization header and the authorization type is brra which essentially means that any",
    "start": "1221280",
    "end": "1228679"
  },
  {
    "text": "anyone that presents this token can use it it's like a coin or",
    "start": "1228679",
    "end": "1233880"
  },
  {
    "text": "Bill if you have money you can use it nobody asks where you got it from whereas there are other more high",
    "start": "1233880",
    "end": "1240200"
  },
  {
    "text": "security Alternatives where you also need to prove that you are the legitimate user of the token",
    "start": "1240200",
    "end": "1247440"
  },
  {
    "text": "deop uh demonstration proof of procession that that's things that are used in healthc",
    "start": "1247440",
    "end": "1253039"
  },
  {
    "text": "care banking Etc but for the the good two the good parts will focus on just a",
    "start": "1253039",
    "end": "1259280"
  },
  {
    "text": "simple Bure token so what are the processing rules of an access token well the F first one",
    "start": "1259280",
    "end": "1266200"
  },
  {
    "text": "is that as I mentioned the uh format of the token is a private implementation",
    "start": "1266200",
    "end": "1271799"
  },
  {
    "text": "detail between the authorization server and the resource or the API which means that as a client I must",
    "start": "1271799",
    "end": "1279559"
  },
  {
    "text": "not in any way try to consume it or read it I should just forward it as a simple",
    "start": "1279559",
    "end": "1286240"
  },
  {
    "text": "string on the API side on the other hand I of",
    "start": "1286240",
    "end": "1292880"
  },
  {
    "text": "course need to consume it and validate it and there are some processing rules for Json web",
    "start": "1292880",
    "end": "1297960"
  },
  {
    "text": "token the signature must be valid and the signature algorithm must be",
    "start": "1297960",
    "end": "1304400"
  },
  {
    "text": "allowed the type must be a plus JT issue must be an expected value so it you",
    "start": "1304400",
    "end": "1312159"
  },
  {
    "text": "should only trust tokens that were issued from the token service you expect in some multi-end in environment",
    "start": "1312159",
    "end": "1320720"
  },
  {
    "text": "uh such ASU uh this is uh you may have something",
    "start": "1320720",
    "end": "1326240"
  },
  {
    "text": "that is signed by the expected key because asure has one main signing key",
    "start": "1326240",
    "end": "1331559"
  },
  {
    "text": "that everyone is using but then it's important to check that the issue is actually the tenant ID that you or and",
    "start": "1331559",
    "end": "1337360"
  },
  {
    "text": "the Tenant issue that you expect to work with uh current time must be fit within",
    "start": "1337360",
    "end": "1344720"
  },
  {
    "text": "the um time uh time window and scope must contain an expected value if if we",
    "start": "1344720",
    "end": "1351000"
  },
  {
    "text": "are API 2 we should of course not accept an access token that only scoped API",
    "start": "1351000",
    "end": "1357159"
  },
  {
    "text": "1 and then everyone is happy right well and and and everything is",
    "start": "1357159",
    "end": "1362760"
  },
  {
    "text": "working forever is it well an access token one of the advantages with an access token over an API key is that it",
    "start": "1362760",
    "end": "1369760"
  },
  {
    "text": "has a limited lifetime we usually recommend somewhere between five and 60 minutes so after",
    "start": "1369760",
    "end": "1376840"
  },
  {
    "text": "maximum 60 Minutes the to to is no longer valid so how would I know as a client",
    "start": "1376840",
    "end": "1384080"
  },
  {
    "text": "that my token sudden is not valid let's go into API uh",
    "start": "1384080",
    "end": "1390320"
  },
  {
    "text": "HTTP um the HTTP spec 401 versus 403 what's the",
    "start": "1390320",
    "end": "1396240"
  },
  {
    "text": "difference what is a 401 and what is a 403 403 is not authorized 403 is an",
    "start": "1396240",
    "end": "1403960"
  },
  {
    "text": "authorization failure say saying you're not authorized but the term in 4 in the spec is actually forbidden because for",
    "start": "1403960",
    "end": "1412000"
  },
  {
    "text": "one which I would rather have named un unauthenticated is uh called",
    "start": "1412000",
    "end": "1417960"
  },
  {
    "text": "unauthorized so authentication versus authorization the distinction is not",
    "start": "1417960",
    "end": "1424840"
  },
  {
    "text": "always clear and I'm not sure that I agree with the how the HTTP spec used",
    "start": "1424840",
    "end": "1430320"
  },
  {
    "text": "the terms back in the 90s but this is like the refer header that's a type the",
    "start": "1430320",
    "end": "1435880"
  },
  {
    "text": "refer need to be misspelled because it's in the spec misspelled and 41 is",
    "start": "1435880",
    "end": "1442039"
  },
  {
    "text": "unauthorized so if I have a token I call",
    "start": "1442039",
    "end": "1448440"
  },
  {
    "text": "an API a number of time it works perfectly well I'm happy with it and then suddenly I call an API and it gets",
    "start": "1448440",
    "end": "1454880"
  },
  {
    "text": "gives me a 403 that probably means that I try to access a resource that I'm not allowed",
    "start": "1454880",
    "end": "1460840"
  },
  {
    "text": "to access I try to use part I have a read only scope for my calendar widget",
    "start": "1460840",
    "end": "1467520"
  },
  {
    "text": "my calendar widget now tries to update the calendar that would be a four or three uh so it means better back off and",
    "start": "1467520",
    "end": "1475200"
  },
  {
    "text": "continue just reading the calendar but then I'm happily reading the calendar and suddenly I get a 401 my token used to work but now this",
    "start": "1475200",
    "end": "1483279"
  },
  {
    "text": "API says that your token is not valid what probably happened was that it was",
    "start": "1483279",
    "end": "1489399"
  },
  {
    "text": "expired and that's one way to handle expir is to simply just use it until get",
    "start": "1489399",
    "end": "1495200"
  },
  {
    "text": "a 401 and then re uh one once I get 41 well it's a machine to machine scenario",
    "start": "1495200",
    "end": "1502279"
  },
  {
    "text": "so let's just do that client cental flow again to get a new token that is valid",
    "start": "1502279",
    "end": "1507720"
  },
  {
    "text": "for another time but that means that every hour there is a check that the client is still allowed so if Google",
    "start": "1507720",
    "end": "1516039"
  },
  {
    "text": "finds out that my Cent calendar widget is really doing something really abusive they will deactivate it so after one",
    "start": "1516039",
    "end": "1522360"
  },
  {
    "text": "hour all my access tokens will be invalid and I will not be able to get any new ones",
    "start": "1522360",
    "end": "1529520"
  },
  {
    "text": "we can also be proactive because there is an embedded expir time in the",
    "start": "1529520",
    "end": "1534720"
  },
  {
    "text": "token can I as a client read the token to get the expiry time am I allowed to do that no so how would I know about it",
    "start": "1534720",
    "end": "1543640"
  },
  {
    "text": "well uh in the response we got back when we got the token we have an expires in",
    "start": "1543640",
    "end": "1549760"
  },
  {
    "text": "field just because of that because we the client needs to know about the expir time the client probably needs to know",
    "start": "1549760",
    "end": "1556520"
  },
  {
    "text": "about the scope where it is valid but it's not allowed to consume and extract it from the token I mean the token",
    "start": "1556520",
    "end": "1563919"
  },
  {
    "text": "format could be something that this client doesn't know",
    "start": "1563919",
    "end": "1568120"
  },
  {
    "text": "about but so from your opinion it's totally fine to take this return time to",
    "start": "1570320",
    "end": "1576240"
  },
  {
    "text": "react before I would get the 4 yeah I I would even prefer that to do that to to",
    "start": "1576240",
    "end": "1583000"
  },
  {
    "text": "react beforehand uh but it depends on I would say that using the 401 approach is a bit",
    "start": "1583000",
    "end": "1590120"
  },
  {
    "text": "more lazy maybe but on the other hand in a modern Cloud environment we need to",
    "start": "1590120",
    "end": "1596919"
  },
  {
    "text": "have retry mechanisms for anything in this reliable application so we might as well use it for for this as",
    "start": "1596919",
    "end": "1603559"
  },
  {
    "text": "well um so there are two options my my choice would be to be",
    "start": "1603559",
    "end": "1610840"
  },
  {
    "text": "proactive so that's the simple flow for machine to machine",
    "start": "1610919",
    "end": "1616120"
  },
  {
    "text": "communication but what if we have the calendar widget so so once more the calendar widget is a good example uh if",
    "start": "1616120",
    "end": "1623120"
  },
  {
    "text": "I create the calendar widget and I say to Google that I want to be able to read calendars is it do you think that Google",
    "start": "1623120",
    "end": "1630240"
  },
  {
    "text": "really gives me access to read everybody everyone's Google Calendar no no no no they should not and",
    "start": "1630240",
    "end": "1638279"
  },
  {
    "text": "they do not so of course there is more to it when it comes to interactive",
    "start": "1638279",
    "end": "1643360"
  },
  {
    "text": "applications so when we have an Interactive",
    "start": "1643360",
    "end": "1648559"
  },
  {
    "text": "application we need to not have a token that not just proves what the client is",
    "start": "1648559",
    "end": "1654600"
  },
  {
    "text": "what client it is that is calling we also need to prove who the user is that is logged in so we know what data data",
    "start": "1654600",
    "end": "1662440"
  },
  {
    "text": "we are allowed to access we will look at the authorization code flow and in a 2.1 we found out as a",
    "start": "1662440",
    "end": "1672720"
  },
  {
    "text": "community that the authorization code flow is the flow to use for interactive applications if you've heard of any one",
    "start": "1672720",
    "end": "1680000"
  },
  {
    "text": "of the other flows forget about them uh it works for web applications",
    "start": "1680000",
    "end": "1687360"
  },
  {
    "text": "native applications mobile applications single page applications everything it allows the authorization server to",
    "start": "1687360",
    "end": "1694880"
  },
  {
    "text": "display UI and it does that through a web browser and it also supports we can get",
    "start": "1694880",
    "end": "1702360"
  },
  {
    "text": "back to token renewal so over the overview is essentially that uh",
    "start": "1702360",
    "end": "1708960"
  },
  {
    "text": "a web browser or the client being in a web browser mobile app something",
    "start": "1708960",
    "end": "1715760"
  },
  {
    "text": "calls uh to the client to get access to Something There is a redirect to the",
    "start": "1715760",
    "end": "1721080"
  },
  {
    "text": "front Chann on what we call the front Channel which is essentially the browser",
    "start": "1721080",
    "end": "1726399"
  },
  {
    "text": "so if you want to use my calendar widget my calendar widget will redirect you to",
    "start": "1726399",
    "end": "1732799"
  },
  {
    "text": "Google where you interact directly with Google Now you can type in your Google password if you want because you can see",
    "start": "1732799",
    "end": "1739760"
  },
  {
    "text": "yourself you are on google.com all the user interaction happens probably if you have an Android",
    "start": "1739760",
    "end": "1746120"
  },
  {
    "text": "phone you or any browser you probably already signed into to Google and now we",
    "start": "1746120",
    "end": "1751440"
  },
  {
    "text": "are on google.com so the Google authentication cookies are available so it can just create a response right back",
    "start": "1751440",
    "end": "1758840"
  },
  {
    "text": "and send back uh and then there is a back Channel",
    "start": "1758840",
    "end": "1764120"
  },
  {
    "text": "phase where we retrieve token uh the access Tok toen let's look a bit deeper",
    "start": "1764120",
    "end": "1769880"
  },
  {
    "text": "into it the front channel is a redirect to the authorization end point of the",
    "start": "1769880",
    "end": "1774960"
  },
  {
    "text": "authorization server where we include a number of parameters what client is calling the",
    "start": "1774960",
    "end": "1780880"
  },
  {
    "text": "client ID where do we want the response to be sent back uh the response type",
    "start": "1780880",
    "end": "1787000"
  },
  {
    "text": "code to use authorization code flow what API what scope are we requesting the API",
    "start": "1787000",
    "end": "1793000"
  },
  {
    "text": "one and then we can send along a state that is echoed back this is important",
    "start": "1793000",
    "end": "1798399"
  },
  {
    "text": "for um cross request forgery guards and we have code challenge which is also a",
    "start": "1798399",
    "end": "1804799"
  },
  {
    "text": "verifier from proof key code exchange should also be it's an extension that should always be",
    "start": "1804799",
    "end": "1811360"
  },
  {
    "text": "used once on the authentic authorization server the user can be authenticated but",
    "start": "1811360",
    "end": "1817159"
  },
  {
    "text": "this is outside the scope of o 2 o 2 as a protocol just knows about we are",
    "start": "1817159",
    "end": "1822440"
  },
  {
    "text": "redirecting opening the browser the authorization server may do anything it wants as long as it can eventually",
    "start": "1822440",
    "end": "1831600"
  },
  {
    "text": "return back the authorization server might also show a consent screen how",
    "start": "1831600",
    "end": "1836640"
  },
  {
    "text": "many do read this yeah okay so next time you H hear",
    "start": "1836640",
    "end": "1844320"
  },
  {
    "text": "about someone who got a Facebook account hacked they clicked the link they got a consent screen and they went right to",
    "start": "1844320",
    "end": "1851200"
  },
  {
    "text": "the yes button so this says who is the",
    "start": "1851200",
    "end": "1856600"
  },
  {
    "text": "authorization server what client are you really getting what access what are you",
    "start": "1856600",
    "end": "1862200"
  },
  {
    "text": "allowing this client to do on behalf of you and this is where when you are using my calendar widget this is why you",
    "start": "1862200",
    "end": "1868279"
  },
  {
    "text": "should be careful to see that my calendar widget actually just asked for calendar read and nothing",
    "start": "1868279",
    "end": "1874240"
  },
  {
    "text": "else and this is also where we bind it to the user so there is an informed consent and uh from the user that well I",
    "start": "1874240",
    "end": "1882799"
  },
  {
    "text": "want to share my calendar data with this widget",
    "start": "1882799",
    "end": "1888760"
  },
  {
    "text": "and then we click yes once we have clicked yes there is a return and",
    "start": "1889159",
    "end": "1894320"
  },
  {
    "text": "so Google Now will store away the result of the authentication user",
    "start": "1894320",
    "end": "1900080"
  },
  {
    "text": "authentication the result of the consent uh stored in a database or data store somewhere and just return a code which",
    "start": "1900080",
    "end": "1907200"
  },
  {
    "text": "is a key into that storage and Echo back the state then our client application can",
    "start": "1907200",
    "end": "1914799"
  },
  {
    "text": "make a back Channel request where it authorizes itself using or authenticates",
    "start": "1914799",
    "end": "1920440"
  },
  {
    "text": "itself using basic authentication saying hey I'm the client this client ID with this client secret that means if if",
    "start": "1920440",
    "end": "1927720"
  },
  {
    "text": "someone steals the code here the code is useless you can't get an an access token",
    "start": "1927720",
    "end": "1934919"
  },
  {
    "text": "just from the code you also need to be the right client showing your client",
    "start": "1934919",
    "end": "1940120"
  },
  {
    "text": "secret to get it and we have the code verifier which is also a kind of a one-time password",
    "start": "1940120",
    "end": "1948159"
  },
  {
    "text": "that is sent well the authorization server is happy and it returns back the access",
    "start": "1948159",
    "end": "1953639"
  },
  {
    "text": "token that was received so let's look at what the",
    "start": "1953639",
    "end": "1959320"
  },
  {
    "text": "access token would look like this time a user Centric access token contains not only the client ID but we also have a",
    "start": "1959320",
    "end": "1966600"
  },
  {
    "text": "new claim sub subject identifier which identify is an identifier for the",
    "start": "1966600",
    "end": "1972919"
  },
  {
    "text": "user uh we could also have extra claims in here like email uh things like like",
    "start": "1972919",
    "end": "1978000"
  },
  {
    "text": "that if we want to but the main identifier should be um an abstract thing a good or a num",
    "start": "1978000",
    "end": "1987279"
  },
  {
    "text": "number because uh it should be a persistent identifier something that doesn't have",
    "start": "1987279",
    "end": "1993200"
  },
  {
    "text": "to change and as long as soon as you have anything that carry any kind of meaning to a human being someone will",
    "start": "1993200",
    "end": "1998639"
  },
  {
    "text": "have to change it uh divorce I want",
    "start": "1998639",
    "end": "2004440"
  },
  {
    "text": "my get rid of that lost family name now please can I have other email address",
    "start": "2004440",
    "end": "2011559"
  },
  {
    "text": "immediately uh yeah you would don't want to have to rebuild all your systems with",
    "start": "2011559",
    "end": "2016919"
  },
  {
    "text": "that if you have used an opaque user identifier you are",
    "start": "2016919",
    "end": "2022679"
  },
  {
    "text": "fine so this is typical access token and as all access tokens it's typically",
    "start": "2023039",
    "end": "2028519"
  },
  {
    "text": "shortlived so what would do do we do when it expires do we ask the user",
    "start": "2028519",
    "end": "2033639"
  },
  {
    "text": "redirect the user back to the author authentication authorization so have every no that would not be a good user",
    "start": "2033639",
    "end": "2040480"
  },
  {
    "text": "experience we could get away with that for the machine to machine communication case because it's fine for a machine to",
    "start": "2040480",
    "end": "2047679"
  },
  {
    "text": "just keep an eye on the clock and say that ah after 55 minutes I need to make another API call and just get a new one",
    "start": "2047679",
    "end": "2054200"
  },
  {
    "text": "for user interactive we need a mechanism to get a new access",
    "start": "2054200",
    "end": "2059638"
  },
  {
    "text": "token and that's why we need use something called refresh tokens",
    "start": "2059639",
    "end": "2067040"
  },
  {
    "text": "uh so we need something that represents this authorization",
    "start": "2068720",
    "end": "2074839"
  },
  {
    "text": "authorization that is long lived but hey wait long live that means",
    "start": "2074839",
    "end": "2080440"
  },
  {
    "text": "if someone steals it they can use it forever right so there are two kind of tokens",
    "start": "2080440",
    "end": "2085960"
  },
  {
    "text": "self-contained tokens like access tokens typically are means that anyone who has it can just validate it and use it",
    "start": "2085960",
    "end": "2092200"
  },
  {
    "text": "reference tokens are essentially just a number which points to record in a database so the refresh token is uh a",
    "start": "2092200",
    "end": "2101200"
  },
  {
    "text": "reference token which is stored on the server and that means we can remove it",
    "start": "2101200",
    "end": "2106400"
  },
  {
    "text": "we'll get back to revocation so when we if we jump back here we can actually see",
    "start": "2106400",
    "end": "2112400"
  },
  {
    "text": "that in the token response we got a refresh token also so after 1 hour the",
    "start": "2112400",
    "end": "2118960"
  },
  {
    "text": "client will send in using its client ID and client Secret in basic authoriz auth",
    "start": "2118960",
    "end": "2125480"
  },
  {
    "text": "the basic authorization scheme say hey let's use the refresh token scheme I have a refresh token here to",
    "start": "2125480",
    "end": "2132160"
  },
  {
    "text": "prove what authorization uh event or what",
    "start": "2132160",
    "end": "2137560"
  },
  {
    "text": "authorized session it's not really session but um prove what I want please",
    "start": "2137560",
    "end": "2143480"
  },
  {
    "text": "give me new access token and you will get a new access token and you possibly a new refresh token",
    "start": "2143480",
    "end": "2150440"
  },
  {
    "text": "back and as I said you can revoke it you can go into your Google account this is",
    "start": "2150440",
    "end": "2156839"
  },
  {
    "text": "if you have your Facebook account hacked you unhack it by going in here finding the Rogue application when revoking",
    "start": "2156839",
    "end": "2164040"
  },
  {
    "text": "content because that will delete the refresh token the next time the client comes back and tries to get a new access",
    "start": "2164040",
    "end": "2169640"
  },
  {
    "text": "token it will be denied we can also revoke tokens",
    "start": "2169640",
    "end": "2175319"
  },
  {
    "text": "programmatically for example if we log out or uninstall an application it's a nice thing to revoke the refresh",
    "start": "2175319",
    "end": "2184240"
  },
  {
    "text": "token um so we have two basic kind of scenarios",
    "start": "2186000",
    "end": "2192160"
  },
  {
    "text": "machine to machine scenario it's not much to say about that uh there are helper libraries",
    "start": "2192160",
    "end": "2199839"
  },
  {
    "text": "available open source libraries that can help you doing the interaction but it's not that hard to code yourself either",
    "start": "2199839",
    "end": "2206440"
  },
  {
    "text": "interactive applications there's more to say about it so if we have a browser based",
    "start": "2206440",
    "end": "2211760"
  },
  {
    "text": "application classic server side browser based application we need typically an open ID connector",
    "start": "2211760",
    "end": "2218079"
  },
  {
    "text": "client Library you don't want to do all the redirects and validations and stuff",
    "start": "2218079",
    "end": "2223800"
  },
  {
    "text": "your yourself you should use Library we need something for session",
    "start": "2223800",
    "end": "2230040"
  },
  {
    "text": "management probably if we want to establish a session uh we're getting back to that",
    "start": "2230040",
    "end": "2236520"
  },
  {
    "text": "and we need something of token management uh there are open source alternative dend maintains some of them",
    "start": "2236520",
    "end": "2242680"
  },
  {
    "text": "for net but there are all other Alternatives as well and we have the UI ass and and in a classical server",
    "start": "2242680",
    "end": "2248800"
  },
  {
    "text": "classic server side application all of this lives on the server and it's fairly simple then we have browser based",
    "start": "2248800",
    "end": "2254640"
  },
  {
    "text": "applications single page applications where all of this lives in the",
    "start": "2254640",
    "end": "2259960"
  },
  {
    "text": "browser this turns out that if we're look a bit into history um we had for",
    "start": "2259960",
    "end": "2267400"
  },
  {
    "text": "like 15 years ago cross-site request forgery emerged as a threat when we were using JavaScript more and more and",
    "start": "2267400",
    "end": "2275119"
  },
  {
    "text": "JavaScript to and to call apis we were just relying on the cookie being sent uh",
    "start": "2275119",
    "end": "2281560"
  },
  {
    "text": "authentication cookie being sent along and it turned out that we had to guard against cross request forgery in all our",
    "start": "2281560",
    "end": "2288319"
  },
  {
    "text": "web applications and ietf's way of solving that was actually oo to and saying that well you shouldn't use",
    "start": "2288319",
    "end": "2294480"
  },
  {
    "text": "cookies for your single page application you should do uh use oo 2 and let your",
    "start": "2294480",
    "end": "2300720"
  },
  {
    "text": "single page application in JavaScript be be an O2 client that looked like a good idea",
    "start": "2300720",
    "end": "2308160"
  },
  {
    "text": "until we found out that browsers how good they may be are not maybe the most",
    "start": "2308160",
    "end": "2314520"
  },
  {
    "text": "secure and trustworthy programming environment crossy scripting",
    "start": "2314520",
    "end": "2320160"
  },
  {
    "text": "anyone or even worse the Spectre bug where there was actually proof a concept",
    "start": "2320160",
    "end": "2325880"
  },
  {
    "text": "code where One browser tab JavaScript running in one browser tab could",
    "start": "2325880",
    "end": "2331000"
  },
  {
    "text": "exfiltrate the memory of another browser tab for example to get tokens so maybe",
    "start": "2331000",
    "end": "2338240"
  },
  {
    "text": "we shouldn't even do this on the in the browser what if we say that Let's do",
    "start": "2338240",
    "end": "2346119"
  },
  {
    "text": "let's uh have this single page application framework do what it's good at that's",
    "start": "2346119",
    "end": "2352160"
  },
  {
    "text": "UI and let's keep the rest on the application server on the server side and this is the back end for frontend",
    "start": "2352160",
    "end": "2358200"
  },
  {
    "text": "pattern which is the current recommendation from ITF for single page applications so from an authentication",
    "start": "2358200",
    "end": "2365720"
  },
  {
    "text": "perspective uh all web applications should be serers side web applications you may use your",
    "start": "2365720",
    "end": "2372720"
  },
  {
    "text": "favorite single page application framework to create a rich user experience but keep",
    "start": "2372720",
    "end": "2379440"
  },
  {
    "text": "the uh token handling on the server running in the data",
    "start": "2379440",
    "end": "2387000"
  },
  {
    "text": "center okay so now we' seen how to do service side web applications we see single page applications are also from",
    "start": "2387000",
    "end": "2394359"
  },
  {
    "text": "an authentication perspective service side web applications what about Native applications mobile",
    "start": "2394359",
    "end": "2401760"
  },
  {
    "text": "apps well we can just open the browser so when we have when we need to",
    "start": "2402680",
    "end": "2410480"
  },
  {
    "text": "authenticate if my G calendar widget has is also available for Android of course",
    "start": "2410480",
    "end": "2417119"
  },
  {
    "text": "uh and my calendar widget when it needs to authenticate I can't ask for my your",
    "start": "2417119",
    "end": "2422480"
  },
  {
    "text": "Google username and password in my widget setup no I will have to open the system browser where you can see that",
    "start": "2422480",
    "end": "2429880"
  },
  {
    "text": "you're actually interacting with Google when you enter your password and then and this uses the",
    "start": "2429880",
    "end": "2436880"
  },
  {
    "text": "authorization code flow in the same way so the client mobile app just opens the",
    "start": "2436880",
    "end": "2441920"
  },
  {
    "text": "authoriz endpoint of the authorization server and when done we use a custom",
    "start": "2441920",
    "end": "2448480"
  },
  {
    "text": "scheme or claimed URL so that uh we can read it back this is the same mechanism",
    "start": "2448480",
    "end": "2455280"
  },
  {
    "text": "that if you click uh Google Maps link on a phone you won't open Google maps in the",
    "start": "2455280",
    "end": "2461319"
  },
  {
    "text": "on the web you will get the uh because uh that is the Google Maps URL is a",
    "start": "2461319",
    "end": "2466640"
  },
  {
    "text": "claimed URL and the Google Maps app opens up and we can use that mechanism",
    "start": "2466640",
    "end": "2472280"
  },
  {
    "text": "to allow the authorization server to redirect back to your app with the authorization code then your CL um",
    "start": "2472280",
    "end": "2479319"
  },
  {
    "text": "mobile app goes on and makes a back Channel API call to get the token",
    "start": "2479319",
    "end": "2486520"
  },
  {
    "text": "so that's different kinds of applications we have a final thing to look at at and that is oh is not user",
    "start": "2488079",
    "end": "2495480"
  },
  {
    "text": "authentication remember if if I've done all of this my app has sent you over to",
    "start": "2495480",
    "end": "2501599"
  },
  {
    "text": "Google and you've been there and we got an access token back but my app I'm I'm",
    "start": "2501599",
    "end": "2509319"
  },
  {
    "text": "the client is not allowed to read the access token so I just got an access token but I still have no idea who the",
    "start": "2509319",
    "end": "2515520"
  },
  {
    "text": "user is I might might want to be able to say hello Anders at the top of the",
    "start": "2515520",
    "end": "2521400"
  },
  {
    "text": "application so we need something else that is allowed to be consumed by The",
    "start": "2521400",
    "end": "2527040"
  },
  {
    "text": "Client app to do that and that's where open and connect ads so we do do all of this and now in",
    "start": "2527040",
    "end": "2534640"
  },
  {
    "text": "open add connect um sorry on on the back Channel",
    "start": "2534640",
    "end": "2540800"
  },
  {
    "text": "when we retrieve the access token we will also get an ID token or",
    "start": "2540800",
    "end": "2546079"
  },
  {
    "text": "authentication response I thought I had a good slide on that yeah here it",
    "start": "2546079",
    "end": "2553440"
  },
  {
    "text": "is so in addition to the access token we now get an ID token that is meant to be",
    "start": "2553440",
    "end": "2559760"
  },
  {
    "text": "consumed by the client so what is an ID",
    "start": "2559760",
    "end": "2565920"
  },
  {
    "text": "token ID token is a bad name um because it sounds like a token",
    "start": "2565920",
    "end": "2573400"
  },
  {
    "text": "and then people assume that tokens are sent to apis but it's not meant to be",
    "start": "2573400",
    "end": "2578559"
  },
  {
    "text": "it's more of an authentication response it just happens to uh it uses a Json web",
    "start": "2578559",
    "end": "2584559"
  },
  {
    "text": "token format and this time it's standardized in the open Ed connect back it says it must be a",
    "start": "2584559",
    "end": "2591920"
  },
  {
    "text": "JWT um it contains some information about uh authentication time who the",
    "start": "2591920",
    "end": "2598800"
  },
  {
    "text": "user is and authentication method which means that the client application can",
    "start": "2598800",
    "end": "2605040"
  },
  {
    "text": "now work on the front channel to redirect to",
    "start": "2605040",
    "end": "2610240"
  },
  {
    "text": "the authorization server where it receives the code on the back Channel it",
    "start": "2610240",
    "end": "2615839"
  },
  {
    "text": "get gets ID token and access token now it can validate the ID token because",
    "start": "2615839",
    "end": "2622559"
  },
  {
    "text": "it's allowed to read it and start a local session and establish a session here there's a bit more to it as well uh",
    "start": "2622559",
    "end": "2630760"
  },
  {
    "text": "in open connect is actually a distributed session open oo 2 has no",
    "start": "2630760",
    "end": "2635839"
  },
  {
    "text": "notion in itself about the concept of there a session there is no such thing",
    "start": "2635839",
    "end": "2641839"
  },
  {
    "text": "as a session it's just you retrieve an access token and use it uh which means",
    "start": "2641839",
    "end": "2647160"
  },
  {
    "text": "that oo doesn't know about log out while open iConnect does so open iConnect",
    "start": "2647160",
    "end": "2653119"
  },
  {
    "text": "allows you to do a single log out as well because you establish and have bookkeeping of uh a distributed",
    "start": "2653119",
    "end": "2664000"
  },
  {
    "text": "session so that's it really it the good part you have two flows to",
    "start": "2664920",
    "end": "2670960"
  },
  {
    "text": "use uh so if we look at further reading with two is the magic number blog post",
    "start": "2670960",
    "end": "2677160"
  },
  {
    "text": "from Dominic about the two flows you should know about and",
    "start": "2677160",
    "end": "2682680"
  },
  {
    "text": "use and open and theconnect is the addition on top of oo 2 which allow",
    "start": "2682680",
    "end": "2689359"
  },
  {
    "text": "gives single sign on and and handles sessions in actual usage you almost all",
    "start": "2689359",
    "end": "2697079"
  },
  {
    "text": "always want open ID connect and not just oo 2 because you you as a client",
    "start": "2697079",
    "end": "2702319"
  },
  {
    "text": "application you want to know who the user is",
    "start": "2702319",
    "end": "2707480"
  },
  {
    "text": "um there's also the security perspective in here in it here that if you have open",
    "start": "2707480",
    "end": "2713280"
  },
  {
    "text": "ID connect you can be sure what use of the access token is for because they are",
    "start": "2713280",
    "end": "2719359"
  },
  {
    "text": "guaranteed to belong to the same user as the ID token we have blog poting some",
    "start": "2719359",
    "end": "2725040"
  },
  {
    "text": "information also about the back and for front pattern this is maybe the largest change that is happening right now that",
    "start": "2725040",
    "end": "2731720"
  },
  {
    "text": "we should move away from using JavaScript based uh client libraries for",
    "start": "2731720",
    "end": "2737680"
  },
  {
    "text": "a and open a theconnect and move it to the server side uh that's another talk but uh I can",
    "start": "2737680",
    "end": "2746760"
  },
  {
    "text": "elaborate a bit on it and one of the huge reasons to do this is uh how",
    "start": "2746760",
    "end": "2752960"
  },
  {
    "text": "browsers are now starting to block cookies in third party context so the JavaScript based um part of the",
    "start": "2752960",
    "end": "2762839"
  },
  {
    "text": "uh standard for interacting with an authorization server relies heavily on hidden ey",
    "start": "2762839",
    "end": "2770200"
  },
  {
    "text": "frames and cookies being sent in these hidden ey frames Safari blocks them",
    "start": "2770200",
    "end": "2775800"
  },
  {
    "text": "completely I don't know if you remember does anyone have a safari on Mac and try to log on to Microsoft teams it wasn't",
    "start": "2775800",
    "end": "2784440"
  },
  {
    "text": "possible so now Google Chrome is following alone along and are starting",
    "start": "2784440",
    "end": "2789880"
  },
  {
    "text": "to roll out also a complete third part cookie block so Microsoft actually fixed",
    "start": "2789880",
    "end": "2795040"
  },
  {
    "text": "it so I tried to De with that a few weeks ago and suddenly I was logged into",
    "start": "2795040",
    "end": "2800119"
  },
  {
    "text": "uh teams I was so surprised uh but still the old way to do",
    "start": "2800119",
    "end": "2805680"
  },
  {
    "text": "JavaScript based oo simply doesn't work in modern browsers they are blocking it",
    "start": "2805680",
    "end": "2812160"
  },
  {
    "text": "for anything but F but a first uh or same side context",
    "start": "2812160",
    "end": "2818440"
  },
  {
    "text": "um yeah so that's the short reading list if you want to do U actually the specs",
    "start": "2818440",
    "end": "2824599"
  },
  {
    "text": "are not that bad to read this is nice nice asky art that describes the flows",
    "start": "2824599",
    "end": "2831440"
  },
  {
    "text": "they are readable and there's so much information out there a lot of the information you",
    "start": "2831440",
    "end": "2839280"
  },
  {
    "text": "can find when you search for this a lot of the information is actually really good but there's also information that",
    "start": "2839280",
    "end": "2845040"
  },
  {
    "text": "sound trustworthy that nearly got things right but not exactly if you read the spec that's the",
    "start": "2845040",
    "end": "2852000"
  },
  {
    "text": "truth so if you really want to read it we have the full working group for a",
    "start": "2852000",
    "end": "2857760"
  },
  {
    "text": "with a lot of specs best current practices documents is also good to follow along what is the BCPS currently",
    "start": "2857760",
    "end": "2865240"
  },
  {
    "text": "for browser based apps there was a new draw for the browser based BCP in um",
    "start": "2865240",
    "end": "2872640"
  },
  {
    "text": "November it was published Philip dck updated it",
    "start": "2872640",
    "end": "2878000"
  },
  {
    "text": "um much needed a very good update we have open",
    "start": "2878000",
    "end": "2884040"
  },
  {
    "text": "id.net where they are the open ID connect standard also perfectly",
    "start": "2884040",
    "end": "2890000"
  },
  {
    "text": "readable so to summarize AOL is a token request response framework the important",
    "start": "2890359",
    "end": "2896400"
  },
  {
    "text": "invention above what we had previously samp 2 is that it's allowed to is",
    "start": "2896400",
    "end": "2901480"
  },
  {
    "text": "designed for the internet ERA with third party access and it built with user interaction in mind SLE 2 as an",
    "start": "2901480",
    "end": "2908000"
  },
  {
    "text": "Enterprise protocol does not leave the user with the say at all the",
    "start": "2908000",
    "end": "2913839"
  },
  {
    "text": "authorization server knows all the resources knows about the clients uh authenticates clients and",
    "start": "2913839",
    "end": "2920440"
  },
  {
    "text": "users and issues tokens authenticates clients and users is also an important point that a user",
    "start": "2920440",
    "end": "2927040"
  },
  {
    "text": "Centric access token let's jump back to that we have a few more",
    "start": "2927040",
    "end": "2932119"
  },
  {
    "text": "minutes um the use Centric token here it",
    "start": "2932119",
    "end": "2939680"
  },
  {
    "text": "actually contains both the client ID and the subject ID of the user so this token",
    "start": "2939680",
    "end": "2944880"
  },
  {
    "text": "proves two identities it proves what who the user is but also what client is",
    "start": "2944880",
    "end": "2950200"
  },
  {
    "text": "calling so it's a dual authentication and dual",
    "start": "2950200",
    "end": "2955119"
  },
  {
    "text": "proof and of course the authorization server issues the tokens that is the main trust anchor of the environment and",
    "start": "2959440",
    "end": "2967280"
  },
  {
    "text": "finally open I connect is an authentication or single sign on and session management protocol that is",
    "start": "2967280",
    "end": "2973799"
  },
  {
    "text": "built on top of oo 2 so well that's it what I what I had",
    "start": "2973799",
    "end": "2980760"
  },
  {
    "text": "prepared we have time for questions",
    "start": "2980760",
    "end": "2987240"
  },
  {
    "text": "yes iot yeah remove that as well uh so the",
    "start": "2990200",
    "end": "2997520"
  },
  {
    "text": "question was about the O2 flow uh spec had a device code flow for things like smart",
    "start": "2997520",
    "end": "3002559"
  },
  {
    "text": "TVs uh it's that flow where you might have seen it the uh in the early days",
    "start": "3002559",
    "end": "3009119"
  },
  {
    "text": "apps like Netflix Etc you had to type in your password using your remote",
    "start": "3009119",
    "end": "3014160"
  },
  {
    "text": "control uh and then now they more have like okay go to this netflix.com login",
    "start": "3014160",
    "end": "3020920"
  },
  {
    "text": "or what it says and enter this code and there's a four four character code that",
    "start": "3020920",
    "end": "3026200"
  },
  {
    "text": "you enter on the device and then you sign in on your phone or probably if you",
    "start": "3026200",
    "end": "3031240"
  },
  {
    "text": "are already signed in you get single sign on because the browser on your phone that is the device code flow it is",
    "start": "3031240",
    "end": "3038000"
  },
  {
    "text": "not deprecated it's part of two of 2.1 we also have the cbar client initiated",
    "start": "3038000",
    "end": "3044240"
  },
  {
    "text": "back Channel authorization flow which is another kind of specialized flow it can",
    "start": "3044240",
    "end": "3049799"
  },
  {
    "text": "be used for a call center if you call your bank they the ca flow can be used so uh",
    "start": "3049799",
    "end": "3058440"
  },
  {
    "text": "you authenticate yourself on your phone and proves uh on your proes on your device",
    "start": "3058440",
    "end": "3066520"
  },
  {
    "text": "that you are really the account holder so they can tell you about your bank details so um but these are specialized",
    "start": "3066520",
    "end": "3075240"
  },
  {
    "text": "flow for special circumstances uh so that's why I did mention them so for 99%",
    "start": "3075240",
    "end": "3080960"
  },
  {
    "text": "of the cases um the you authorization code flow will work",
    "start": "3080960",
    "end": "3087799"
  },
  {
    "text": "we had a question here first and then yep in case of the pattern",
    "start": "3087799",
    "end": "3094040"
  },
  {
    "text": "yes how could you what's the best practice to pass the user identity to",
    "start": "3094040",
    "end": "3100640"
  },
  {
    "text": "the downstream service so so so to in the BFF pattern how to pass the user's",
    "start": "3100640",
    "end": "3106480"
  },
  {
    "text": "identity to Downstream server so um let's do like",
    "start": "3106480",
    "end": "3114280"
  },
  {
    "text": "this so this talk is like a condensed version of a two-day work or three-day",
    "start": "3114280",
    "end": "3120040"
  },
  {
    "text": "Workshop so uh let's go",
    "start": "3120040",
    "end": "3125280"
  },
  {
    "text": "to the two-day workshop slide deck and go to a slide I want to uh",
    "start": "3125280",
    "end": "3134319"
  },
  {
    "text": "which describes the BFF pattern better here we have it did I pick the right",
    "start": "3134319",
    "end": "3142280"
  },
  {
    "text": "slide no I picked the wrong slide here's the slide I wanted um so so in the I can for front",
    "start": "3142280",
    "end": "3150720"
  },
  {
    "text": "and architecture what you do is that on the same host same origin that the user sees",
    "start": "3150720",
    "end": "3158720"
  },
  {
    "text": "so if they navigate to app. example.com on app. example.com you do have a",
    "start": "3158720",
    "end": "3163760"
  },
  {
    "text": "private backend answering which means you can now have an HTTP only cookie",
    "start": "3163760",
    "end": "3169079"
  },
  {
    "text": "that authenticates any call from here to here you should all that cookie can be",
    "start": "3169079",
    "end": "3174720"
  },
  {
    "text": "same size um strict or same side lacks if you want log out to work but same",
    "start": "3174720",
    "end": "3181079"
  },
  {
    "text": "side lacks strict you should also add an extra anti for protection layer for",
    "start": "3181079",
    "end": "3186520"
  },
  {
    "text": "security not everyone uses in a modern browser uh and then on the private back",
    "start": "3186520",
    "end": "3194480"
  },
  {
    "text": "end then this would have have the access tokens so uh typically on asp.net for",
    "start": "3194480",
    "end": "3202720"
  },
  {
    "text": "example the cookie contains the token but encrypted form so the back and just",
    "start": "3202720",
    "end": "3209640"
  },
  {
    "text": "decrypt the received token can read uh the received cookie can read out the token and attach the token to any outb",
    "start": "3209640",
    "end": "3217119"
  },
  {
    "text": "API calls and then in the access token you have the identity of the user and",
    "start": "3217119",
    "end": "3222720"
  },
  {
    "text": "then depending on configuration you might want extra claims such as email address roles or things like that to be",
    "start": "3222720",
    "end": "3228960"
  },
  {
    "text": "present in the access token as well and that's a configuration thing between the API and the authorization server to say",
    "start": "3228960",
    "end": "3236079"
  },
  {
    "text": "that okay okay this API if we request the API X scope we also need to put in",
    "start": "3236079",
    "end": "3243200"
  },
  {
    "text": "the roles in the access to can API X needs the roles to make authorization",
    "start": "3243200",
    "end": "3250119"
  },
  {
    "text": "decisions so one way to view the back and for front end component is it's like",
    "start": "3250880",
    "end": "3256680"
  },
  {
    "text": "a cookie to token transition River Gateway or",
    "start": "3256680",
    "end": "3264119"
  },
  {
    "text": "translator so a final question over here yeah and in one of the earli slides you",
    "start": "3264200",
    "end": "3269480"
  },
  {
    "text": "had um we got the bar token back and then we passed it over to the resource server Y how does the resource server",
    "start": "3269480",
    "end": "3276359"
  },
  {
    "text": "know for definite that that's coming from the right place is not one that I've just added some random Scopes to and then encrypted as they have to come",
    "start": "3276359",
    "end": "3284400"
  },
  {
    "text": "from the authorization server right it hasn't know that it come it comes from the authorization server yes and so the",
    "start": "3284400",
    "end": "3292280"
  },
  {
    "text": "validation steps it takes I'm just picking up the uh access token I have uh I'll have",
    "start": "3292280",
    "end": "3299599"
  },
  {
    "text": "to take this one so this is the machine to machine case but it's the same yeah it looks like we lost a video",
    "start": "3299599",
    "end": "3307640"
  },
  {
    "text": "signal what happened no back thank you it might be",
    "start": "3307640",
    "end": "3315000"
  },
  {
    "text": "be when I just flipped to change presentations uh okay so in the access",
    "start": "3315000",
    "end": "3321200"
  },
  {
    "text": "token when we receive it uh it contains uh the encoded format contains the head",
    "start": "3321200",
    "end": "3328400"
  },
  {
    "text": "and the payload in form then here's the signature typically an RSA signature",
    "start": "3328400",
    "end": "3334599"
  },
  {
    "text": "public private so it's signed by the private key of the author authorization",
    "start": "3334599",
    "end": "3340039"
  },
  {
    "text": "server and then so the API just needs to get the public key of the authorization",
    "start": "3340039",
    "end": "3346200"
  },
  {
    "text": "server and validate the signature and how do they do that well uh there is actually a very handy built in thing uh",
    "start": "3346200",
    "end": "3354599"
  },
  {
    "text": "this is an open ID connect um so let's go to demo. dander",
    "start": "3354599",
    "end": "3361480"
  },
  {
    "text": "software.com so if we go to an authoriz this is an authorization server which is an isue D software.com it publishes on",
    "start": "3361480",
    "end": "3369640"
  },
  {
    "text": "um let's see if I can get the mouse pointer right hey there it is it publishes a discovery",
    "start": "3369640",
    "end": "3377280"
  },
  {
    "text": "document at a specific location if we take the issuer address",
    "start": "3377280",
    "end": "3386839"
  },
  {
    "text": "and add slash. wellknown slopen ID",
    "start": "3386839",
    "end": "3392160"
  },
  {
    "text": "configuration then we should get a discovery document which contains a J's",
    "start": "3392160",
    "end": "3399078"
  },
  {
    "text": "URI which should oh I need to zoom out",
    "start": "3399280",
    "end": "3406400"
  },
  {
    "text": "uh what language does it think this is asong what's that okay so which publish",
    "start": "3406400",
    "end": "3414520"
  },
  {
    "text": "so we the author ization server publishes its public Keys here so what",
    "start": "3414520",
    "end": "3421599"
  },
  {
    "text": "the API needs to do when it gets an access token it takes the issuer adds",
    "start": "3421599",
    "end": "3427480"
  },
  {
    "text": "that well-known address go find the key document goes to the header check what",
    "start": "3427480",
    "end": "3434359"
  },
  {
    "text": "key ID was used goes to the document in case there are multiple Keys published",
    "start": "3434359",
    "end": "3439839"
  },
  {
    "text": "this one actually publishes two keys find the right key ID get the public key",
    "start": "3439839",
    "end": "3445359"
  },
  {
    "text": "part validate the signature you're welcome so it's good to",
    "start": "3445359",
    "end": "3452480"
  },
  {
    "text": "have questions to drive some more slides but I think we are wrapping up and uh I",
    "start": "3452480",
    "end": "3457640"
  },
  {
    "text": "hope you have had a great first day at the conference I'll be around tomorrow as well and same time tomorrow I'll",
    "start": "3457640",
    "end": "3464559"
  },
  {
    "text": "doing a talk on future cookies and what the browsers are really",
    "start": "3464559",
    "end": "3469880"
  },
  {
    "text": "doing vendors are really doing to mess up cookies for us thank you",
    "start": "3469880",
    "end": "3476630"
  },
  {
    "text": "[Applause]",
    "start": "3476630",
    "end": "3480429"
  }
]