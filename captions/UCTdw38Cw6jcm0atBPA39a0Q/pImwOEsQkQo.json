[
  {
    "text": "hello everyone welcome so um I'm gonna get started",
    "start": "5040",
    "end": "11559"
  },
  {
    "text": "immediately and I will take you back a few years well a couple of years ago in",
    "start": "11559",
    "end": "16640"
  },
  {
    "text": "my own career when I was still young and um I was basically building uh a system",
    "start": "16640",
    "end": "22640"
  },
  {
    "text": "for a customer they were building an online offering they had a bunch of physical stores they were pretty successful and they were like we want an",
    "start": "22640",
    "end": "28400"
  },
  {
    "text": "online offering so that can expand that so we started to build the system and um",
    "start": "28400",
    "end": "34840"
  },
  {
    "text": "and yeah after a couple of years on of working on this the system looked somewhat like this a monolith now this",
    "start": "34840",
    "end": "42800"
  },
  {
    "text": "is actually a monument called the monolith it's uh in Oslo Norway and it",
    "start": "42800",
    "end": "47879"
  },
  {
    "text": "depicts 121 people it's built from a single",
    "start": "47879",
    "end": "53039"
  },
  {
    "text": "piece one ginormous Rock so it's actually pretty magnificent I would say",
    "start": "53039",
    "end": "59079"
  },
  {
    "text": "and the reason that I chose specifically this example is because over the last few years uh the monolithic",
    "start": "59079",
    "end": "65000"
  },
  {
    "text": "architectures have gotten a really bad reputation but actually there's a bunch of you know advantages that come with",
    "start": "65000",
    "end": "70920"
  },
  {
    "text": "that type of of of application structure because it's it's a lot simpler right from the developer experience type of",
    "start": "70920",
    "end": "77479"
  },
  {
    "text": "point of view it's uh super simple usually managed in a in a single solution maybe a couple it's easy to",
    "start": "77479",
    "end": "85040"
  },
  {
    "text": "test it's easy to to debug and also you from a deployment perspective perspective you know you don't have to",
    "start": "85040",
    "end": "91119"
  },
  {
    "text": "think about multiple versions and you know which components are compatible with which components and all that so",
    "start": "91119",
    "end": "96759"
  },
  {
    "text": "versioning is something that you don't need to care about so it's actually quite a an easy architecture especially",
    "start": "96759",
    "end": "103320"
  },
  {
    "text": "when you're starting to build an application you don't fully understand your business requirements yet and you",
    "start": "103320",
    "end": "108560"
  },
  {
    "text": "don't even really know what you're building just yet now this type of architecture was",
    "start": "108560",
    "end": "114759"
  },
  {
    "text": "actually quite successful for us for quite some time but then the application",
    "start": "114759",
    "end": "120000"
  },
  {
    "text": "you know the system got really successful lots of users lots of sales and that's when it did start to show some cracks and those cracks basically",
    "start": "120000",
    "end": "127320"
  },
  {
    "text": "manifested as failing requests uh sometimes we would lose requests which wasn't great uh we also sort of during",
    "start": "127320",
    "end": "134800"
  },
  {
    "text": "high peak saw that there was a significant strain on the single database that was supporting this entire",
    "start": "134800",
    "end": "140160"
  },
  {
    "text": "system and sometimes the system would also just crash entirely so that was not",
    "start": "140160",
    "end": "146000"
  },
  {
    "text": "great so given that load that we were experiencing we were like okay how can we evolve our system how can we change",
    "start": "146000",
    "end": "152519"
  },
  {
    "text": "our architecture to basically be able to deal with that increased load that we're seeing and uh yeah we quickly came to",
    "start": "152519",
    "end": "159239"
  },
  {
    "text": "the conclusion that messaging was going to save us it's going to be awesome we're just going to change this architecture we're going to move to a",
    "start": "159239",
    "end": "165720"
  },
  {
    "text": "message based type of system we'll have multiple components interacting together we'll have all of that load stored on",
    "start": "165720",
    "end": "171760"
  },
  {
    "text": "our broker and that way we'll be able to manage that a lot better and that's not the only thing",
    "start": "171760",
    "end": "177959"
  },
  {
    "text": "right there are so many benefits when it com comes to using messaging in a system because it's going to lead to better",
    "start": "177959",
    "end": "183920"
  },
  {
    "text": "performance right because we can manage that a lot better we can scale those components that need it and we will also",
    "start": "183920",
    "end": "190879"
  },
  {
    "text": "see increased resilience because if something fails our message is always safely stored on the broker it's also",
    "start": "190879",
    "end": "196159"
  },
  {
    "text": "going to be a lot easier to decouple this application and through that decoupling we can also scale our system",
    "start": "196159",
    "end": "203599"
  },
  {
    "text": "a lot more granularly basically the services that needed and those that don't we can just leave them as is so",
    "start": "203599",
    "end": "209040"
  },
  {
    "text": "it's all just going to be great but we did ignore all of the",
    "start": "209040",
    "end": "214280"
  },
  {
    "text": "challenges that we were also introducing by sort of moving to this message based system and that's when we started to",
    "start": "214280",
    "end": "221360"
  },
  {
    "text": "bump into quite a few walls now the first problem that we found is that",
    "start": "221360",
    "end": "226959"
  },
  {
    "text": "actually our system became slower what it it was supposed to be faster right uh",
    "start": "226959",
    "end": "233360"
  },
  {
    "text": "we also saw that the UK the UI became inconsistent there were glitches and sometimes data was just outdated and",
    "start": "233360",
    "end": "239879"
  },
  {
    "text": "users got confused like what happened to my order and lots of support cases so that was tricky we also encountered",
    "start": "239879",
    "end": "247000"
  },
  {
    "text": "duplicate messages and then the thing is that we started to see failures in the system because we've already processed",
    "start": "247000",
    "end": "253280"
  },
  {
    "text": "that what are you trying to create this order again it's already there uh we also found that sometimes messages were",
    "start": "253280",
    "end": "259680"
  },
  {
    "text": "being processed out of order and that didn't only lead to failures no it would actually lead to side effects and just",
    "start": "259680",
    "end": "266880"
  },
  {
    "text": "things that were plain wrong and we didn't really account to for that in the beginning and finally when we were sort",
    "start": "266880",
    "end": "273520"
  },
  {
    "text": "of troubleshooting all these types of problems we also found that it was just so much harder to troubleshoot",
    "start": "273520",
    "end": "279720"
  },
  {
    "text": "altogether because we had messages flowing in the systems and this is being published there and that's being sent",
    "start": "279720",
    "end": "285080"
  },
  {
    "text": "over there and everything is coming in at different times and it was like what is happening so very",
    "start": "285080",
    "end": "290560"
  },
  {
    "text": "overwhelming and we basically tried to sort of battle these problem as we ran into them and fixed them as as as well",
    "start": "290560",
    "end": "297000"
  },
  {
    "text": "as we could with the knowledge that we had at the time but after doing that firefighting play for a couple of months",
    "start": "297000",
    "end": "303720"
  },
  {
    "text": "we realized that you know our once beautiful monolithic application looked a lot more like this a distributed ball",
    "start": "303720",
    "end": "311759"
  },
  {
    "text": "of mud so we had to sort of take a step back and admit to ourselves that we had actually think made things significantly",
    "start": "311759",
    "end": "319280"
  },
  {
    "text": "worse right so my name is Lila buya I'm a software engineer and solution",
    "start": "319280",
    "end": "325039"
  },
  {
    "text": "architect I work for a company called particular software where we build in service bus which is a messaging middleware framework um clearly",
    "start": "325039",
    "end": "332880"
  },
  {
    "text": "message-based systems are what we do but you know long before I worked for particular I was out in the field",
    "start": "332880",
    "end": "338880"
  },
  {
    "text": "building these types of systems running into many of these problems and trying to figure things out as I went so that's",
    "start": "338880",
    "end": "345520"
  },
  {
    "text": "why I'm basically here to sort of share those findings with you so that you don't necessarily have to repeat my",
    "start": "345520",
    "end": "351240"
  },
  {
    "text": "mistakes unless you really want to but uh yeah uh and another thing that I want",
    "start": "351240",
    "end": "357000"
  },
  {
    "text": "to say is that a lot of the problems that I will be talking talking about are not necessarily exclusive to message",
    "start": "357000",
    "end": "362160"
  },
  {
    "text": "based systems alone they could also be applicable to distributed systems even though you're not using um queing even",
    "start": "362160",
    "end": "368759"
  },
  {
    "text": "in your system so let's zoom in into all of these problems that I've sort of laid",
    "start": "368759",
    "end": "373919"
  },
  {
    "text": "out the first one is that the system became slower now in order to understand",
    "start": "373919",
    "end": "379599"
  },
  {
    "text": "why did it become slower messaging promised us more speed right we also need to understand how did this system",
    "start": "379599",
    "end": "386199"
  },
  {
    "text": "work in the beginning and one of the things that we need to look at specifically Bally is the communication patterns that were used and the thing is",
    "start": "386199",
    "end": "393240"
  },
  {
    "text": "that one of the main communication patterns that we use was request response and this is basically a",
    "start": "393240",
    "end": "399400"
  },
  {
    "text": "synchronous type of communication where the sender and the receiver are coupled together they're aware of each other so",
    "start": "399400",
    "end": "405639"
  },
  {
    "text": "what happens is a sender is going to send a message that is going to be immediately executed by the receiver who",
    "start": "405639",
    "end": "411840"
  },
  {
    "text": "then immediately going to send that response back now whether that's you know in your",
    "start": "411840",
    "end": "418400"
  },
  {
    "text": "current systems whether you're using grpc or HTTP or even WF like that's the",
    "start": "418400",
    "end": "424560"
  },
  {
    "text": "underlying pattern right request response and you know we had been using this pattern for years we were",
    "start": "424560",
    "end": "430520"
  },
  {
    "text": "comfortable with it so it was only natural for us to start doing this over messaging and that's where the Slowdown",
    "start": "430520",
    "end": "437240"
  },
  {
    "text": "becomes apparent because where synchronous request response looks something like this where there's a direct connection between the producer",
    "start": "437240",
    "end": "443919"
  },
  {
    "text": "and the consumer when you start to do that over messaging that's really the reality right because your producer is",
    "start": "443919",
    "end": "450879"
  },
  {
    "text": "going to send a message that's going to go onto the request queue and when that consumer is available has time it will",
    "start": "450879",
    "end": "457599"
  },
  {
    "text": "pick up that message and process that out of band that's happening on a different thread that initial thread on",
    "start": "457599",
    "end": "463280"
  },
  {
    "text": "which you sent the message that's long gone it could even be you know at another point in time even now when that",
    "start": "463280",
    "end": "470560"
  },
  {
    "text": "message has been processed then the response goes into another message that's put onto the response queue and",
    "start": "470560",
    "end": "476319"
  },
  {
    "text": "again the producer when they're up when they're available and they have time they will then process",
    "start": "476319",
    "end": "481919"
  },
  {
    "text": "that and one of the things that I like to stress that it's important that when you sort of evolve to this uh",
    "start": "481919",
    "end": "488000"
  },
  {
    "text": "message-based type of systems event driven systems that is important to understand that we're making the",
    "start": "488000",
    "end": "493479"
  },
  {
    "text": "communication asynchronous and I like to use sort of silly analogies so I'll take you back to",
    "start": "493479",
    "end": "499440"
  },
  {
    "text": "my teenage years when I got my first cell phone uh no actually my mom got her",
    "start": "499440",
    "end": "504639"
  },
  {
    "text": "first cell phone I already had a cell phone back then because that was the deal right",
    "start": "504639",
    "end": "510039"
  },
  {
    "text": "now the thing is that one of the first functions that she learned how to use was making a phone call and boy did she",
    "start": "510039",
    "end": "516839"
  },
  {
    "text": "know how to use this function because she would call me all the time like all the time and yeah the the reality is",
    "start": "516839",
    "end": "524240"
  },
  {
    "text": "that I wouldn't always pick up sometimes I was in class sometimes I was with friends and sometimes I just didn't want",
    "start": "524240",
    "end": "530920"
  },
  {
    "text": "to sorry Mom so the thing the the thing is that",
    "start": "530920",
    "end": "536800"
  },
  {
    "text": "this had a big impact on her right she would get super super worried like oh my God is she okay what is going on and",
    "start": "536800",
    "end": "543160"
  },
  {
    "text": "sometimes it would completely hijack her day she wouldn't be able to do like whatever she had planned because she was",
    "start": "543160",
    "end": "548600"
  },
  {
    "text": "so worried so it had a direct impact on her so at some point I was I came home and I was like Mom let me tell you about",
    "start": "548600",
    "end": "555880"
  },
  {
    "text": "text messages and I was like you know whenever you need me urgently of course",
    "start": "555880",
    "end": "561600"
  },
  {
    "text": "give me a call but if you're just you know want to check in see how I am then please just text me and be a little",
    "start": "561600",
    "end": "567760"
  },
  {
    "text": "patient and I'll get to it when I get out class or whatever and yeah my point with this sort of analogy is to",
    "start": "567760",
    "end": "574880"
  },
  {
    "text": "underline that even in an event driven system in even in a message-based system not all type of communication is suited",
    "start": "574880",
    "end": "582000"
  },
  {
    "text": "to be asynchronous if you need something directly if there's somebody waiting on the other end to be able to continue",
    "start": "582000",
    "end": "588040"
  },
  {
    "text": "their flow then still use synchronous communication so let's consider which",
    "start": "588040",
    "end": "593839"
  },
  {
    "text": "communication patterns are available to us when we're building message based systems and there's actually three to",
    "start": "593839",
    "end": "599040"
  },
  {
    "text": "choose from we have one-way communication request response and the published subscribe pattern I'm going to",
    "start": "599040",
    "end": "604600"
  },
  {
    "text": "continue with my silly analogies and this time we're sort of um I I'll walk",
    "start": "604600",
    "end": "610399"
  },
  {
    "text": "you through family dinner at home right so my husband is actually the one who cooks on a daily basis because he really",
    "start": "610399",
    "end": "616600"
  },
  {
    "text": "enjoyed doing that and I just take care of the kids or whatever the household in the meantime so at some point in the",
    "start": "616600",
    "end": "621880"
  },
  {
    "text": "evening he'll look at me and he'll send me a message and say honey I'm going to start making dinner now that message is",
    "start": "621880",
    "end": "627720"
  },
  {
    "text": "directly spec directly for me right it's specifically for me he wants me to be aware that he's going to start doing",
    "start": "627720",
    "end": "634680"
  },
  {
    "text": "that he does not expect a response from me right I can continue doing whatever I want whether I was you know with the",
    "start": "634680",
    "end": "640560"
  },
  {
    "text": "kids or just you know sitting around it doesn't really matter he just wanted me to be",
    "start": "640560",
    "end": "645800"
  },
  {
    "text": "aware at some point dinner will be closed to ready and I'll see sort of his face pop out of the kitchen and he'll be",
    "start": "645800",
    "end": "652480"
  },
  {
    "text": "like you know dinner in five right at that point it's request response he does",
    "start": "652480",
    "end": "657600"
  },
  {
    "text": "expect me to respond in some way what does that mean I need to get up take take the kids with me to the kitchen",
    "start": "657600",
    "end": "663839"
  },
  {
    "text": "make sure that the table is set for example and things like that still asynchronous it's not that he's standing",
    "start": "663839",
    "end": "669360"
  },
  {
    "text": "like that like come on come over as long as I respond within an acceptable time frame then you know I can just get to",
    "start": "669360",
    "end": "677120"
  },
  {
    "text": "it now if it was a good day and the kids ate well then at some point my husband",
    "start": "677120",
    "end": "682200"
  },
  {
    "text": "and I will look at each other and we'll say you know what I the kids deserve some ice cream and then we'll publish an",
    "start": "682200",
    "end": "689000"
  },
  {
    "text": "event saying that there's ice cream available now why are we using publish subscribe for that because the kids are",
    "start": "689000",
    "end": "695760"
  },
  {
    "text": "old enough we're not dependent on an answer or on a a response from them right uh they they can get up they're",
    "start": "695760",
    "end": "702600"
  },
  {
    "text": "old enough they know where the fridge is they can just walk over and grab whatever ice cream that they like and then continue but I promise you that",
    "start": "702600",
    "end": "709560"
  },
  {
    "text": "they are subscribed to the ice cream available event now in order to start applying",
    "start": "709560",
    "end": "716440"
  },
  {
    "text": "these patterns to A system that you know you used to be sort of Monolithic we still need to engage in one of the most",
    "start": "716440",
    "end": "722920"
  },
  {
    "text": "important parts that can help us make make us successful at building these types of systems and that is decoupling",
    "start": "722920",
    "end": "729639"
  },
  {
    "text": "because I know when you start reading about messaging one of the things that always comes up is that it makes decoupling so much easier and that is",
    "start": "729639",
    "end": "737320"
  },
  {
    "text": "true but it's still an activity that you need to engage in it's not going to just",
    "start": "737320",
    "end": "742720"
  },
  {
    "text": "magically happen because you're using a q somewhere right so let's consider a few techniques that can basically help",
    "start": "742720",
    "end": "748680"
  },
  {
    "text": "us decouple a system now I'm going to use our trusted order process right because we all know",
    "start": "748680",
    "end": "755920"
  },
  {
    "text": "and uh know that and can reason about it so if we would sit together with business experts and they're telling us",
    "start": "755920",
    "end": "761399"
  },
  {
    "text": "like this is how the system works we could quickly come up with something like this right now the thing is that",
    "start": "761399",
    "end": "768880"
  },
  {
    "text": "when we have those conversations with these business experts and they tell us about something like that they're",
    "start": "768880",
    "end": "774560"
  },
  {
    "text": "telling it in a specific order and the thing is that it's only human to immediately assum assume that order in",
    "start": "774560",
    "end": "779959"
  },
  {
    "text": "our heads as well so one of the things that I try to do consciously is",
    "start": "779959",
    "end": "785040"
  },
  {
    "text": "immediately remove any ordering any arrows from my mind and start basing",
    "start": "785040",
    "end": "790519"
  },
  {
    "text": "those answer based on questions so one of the things that we could ask ourselves is which steps of this process",
    "start": "790519",
    "end": "797160"
  },
  {
    "text": "naturally happen at a different point in time and we could say well clearly packaging and shipping because that requires some type of human intervention",
    "start": "797160",
    "end": "804519"
  },
  {
    "text": "and you know stuff has to put in a box we need to call the third party provider whatever ever it is right but it could",
    "start": "804519",
    "end": "810880"
  },
  {
    "text": "also be for example ordering more stock because we're just used to doing that on Friday and there's some calls with with",
    "start": "810880",
    "end": "817560"
  },
  {
    "text": "uh with basically the people that deliver us those products maybe but",
    "start": "817560",
    "end": "823040"
  },
  {
    "text": "another thing that we also want to do is look at what are the prerequisites for",
    "start": "823040",
    "end": "828600"
  },
  {
    "text": "each individual step right for example we want to adjust the stock immediately",
    "start": "828600",
    "end": "834120"
  },
  {
    "text": "after we package the order we don't want to wait until we've actually built that order there's absolutely no need for",
    "start": "834120",
    "end": "840399"
  },
  {
    "text": "that or for example verifying the customer status that may be something that we want to do when the entire order",
    "start": "840399",
    "end": "846639"
  },
  {
    "text": "has been fulfilled so it's dependent on a couple of steps could be right these are the things that we need to figure",
    "start": "846639",
    "end": "851959"
  },
  {
    "text": "out another thing to ask ourselves is to look out for those technical",
    "start": "851959",
    "end": "857120"
  },
  {
    "text": "prerequisites that we tell ourselves are there for example is it really required",
    "start": "857120",
    "end": "862920"
  },
  {
    "text": "that we store the order before we charge the credit card not really if we would just assign",
    "start": "862920",
    "end": "870360"
  },
  {
    "text": "the order ID up front then it doesn't really matter what we do first right because we but the thing is that at",
    "start": "870360",
    "end": "876639"
  },
  {
    "text": "least I've been using relational databases for years and we've been taught like the main entity has to be",
    "start": "876639",
    "end": "881720"
  },
  {
    "text": "there first so we can lay those foreign keys and that sort of gets us stuck in this thinking so there's a little bit of",
    "start": "881720",
    "end": "887199"
  },
  {
    "text": "unlearning that needs to happen there as well the next step that I usually take",
    "start": "887199",
    "end": "892839"
  },
  {
    "text": "is to try to differentiate between uh if something fails what needs to be rolled",
    "start": "892839",
    "end": "898639"
  },
  {
    "text": "back and what can be compensated so for example if I'm able to store the order",
    "start": "898639",
    "end": "905360"
  },
  {
    "text": "but I'm unable to charge the credit card because you know it bounced or whatever does that mean that I need to delete the",
    "start": "905360",
    "end": "910560"
  },
  {
    "text": "order from the database probably not right we can send the customer an email and tell them to",
    "start": "910560",
    "end": "915639"
  },
  {
    "text": "update their payment information and we want to keep that order in our database if I'm able to charge the",
    "start": "915639",
    "end": "921639"
  },
  {
    "text": "credit card but I don't have enough stock to actually package that order then what do I need to refund",
    "start": "921639",
    "end": "927639"
  },
  {
    "text": "immediately not necessarily right we could maybe back order those products for them or wait a couple of times until",
    "start": "927639",
    "end": "934480"
  },
  {
    "text": "that comes in and then maybe later at later Point refund so really the point is to identify those bits and pieces",
    "start": "934480",
    "end": "941839"
  },
  {
    "text": "that can succeed on their own and to isolate those from each other now another thing that is really",
    "start": "941839",
    "end": "948720"
  },
  {
    "text": "important to also keep in mind is how the data is being stored because I've for example I've been talking about an",
    "start": "948720",
    "end": "954519"
  },
  {
    "text": "order for a while and I'm sure that everyone understood exactly what I'm talking about it's a concept that we can",
    "start": "954519",
    "end": "960399"
  },
  {
    "text": "basically you know share and and think about and reason about but if you start",
    "start": "960399",
    "end": "966160"
  },
  {
    "text": "thinking in terms of a system in terms of the data that is being stored it actually means a bunch of different",
    "start": "966160",
    "end": "972319"
  },
  {
    "text": "things because in the context of a specific sale we care about the order reference we want to know who ordered it",
    "start": "972319",
    "end": "978079"
  },
  {
    "text": "and when that was done but in the context of a payment we'll care about the payment method the total order",
    "start": "978079",
    "end": "983519"
  },
  {
    "text": "amount and whether they got a gift card or a voucher for example in terms of Packaging will care about how many items",
    "start": "983519",
    "end": "991120"
  },
  {
    "text": "how large they are how heavy they are and things like that for shipping we'll care about how many packages are there",
    "start": "991120",
    "end": "997120"
  },
  {
    "text": "are there any fragile items for example and did they choose express delivery but",
    "start": "997120",
    "end": "1003639"
  },
  {
    "text": "in terms of the invoice we only care about do they want a phys physical invoice or a digital one and are they",
    "start": "1003639",
    "end": "1009839"
  },
  {
    "text": "vat exempt and the thing is that we the the the thing because we can reason about an",
    "start": "1009839",
    "end": "1017959"
  },
  {
    "text": "order that's the reason that you'll find so many systems where there's an order table but it's important to sort of step",
    "start": "1017959",
    "end": "1024280"
  },
  {
    "text": "away from that entity based thinking and to start thinking about which attributes",
    "start": "1024280",
    "end": "1030000"
  },
  {
    "text": "of an order are actually coupled together so what we basically want to do",
    "start": "1030000",
    "end": "1035480"
  },
  {
    "text": "is find the right service boundaries and those things are going to help us do that one of the things we want to do is",
    "start": "1035480",
    "end": "1042480"
  },
  {
    "text": "identify what behavior is likely to change because that's then something that we'll want to isolate because you",
    "start": "1042480",
    "end": "1048240"
  },
  {
    "text": "know that tends to change what data changes together that's also really important to sort of see",
    "start": "1048240",
    "end": "1055360"
  },
  {
    "text": "what service boundaries would be useful because you know some of that data will never change and some of that data May",
    "start": "1055360",
    "end": "1062400"
  },
  {
    "text": "regularly change if you think for example about a product right it has a price if I change that price is that",
    "start": "1062400",
    "end": "1070080"
  },
  {
    "text": "going to impact the product name probably not but if I change the",
    "start": "1070080",
    "end": "1076280"
  },
  {
    "text": "product name is that going to impact the product image well maybe if you're doing a rebranding right so it's important to",
    "start": "1076280",
    "end": "1083360"
  },
  {
    "text": "think about those attributes independent of each other and to try to think like what is what is basically coupled",
    "start": "1083360",
    "end": "1090640"
  },
  {
    "text": "together what data and behavior depend on each other for example let's say that",
    "start": "1090640",
    "end": "1096799"
  },
  {
    "text": "you know in your system based on the customer status gold silver bronze whatever it is we have completely",
    "start": "1096799",
    "end": "1103400"
  },
  {
    "text": "different pricing not discounts being applied no completely different prices per product well then those are coupled",
    "start": "1103400",
    "end": "1110200"
  },
  {
    "text": "together and we should keep them together as well because they're going to change together and then you have",
    "start": "1110200",
    "end": "1116000"
  },
  {
    "text": "data and behavioral changes there also ask yourself what data",
    "start": "1116000",
    "end": "1121240"
  },
  {
    "text": "pertains to the same transactional boundary if you need High consistency between this attribute and that",
    "start": "1121240",
    "end": "1126960"
  },
  {
    "text": "attribute then they should be together because if you pull them apart into different Services there's no way that",
    "start": "1126960",
    "end": "1133159"
  },
  {
    "text": "you can achieve that high consistency and one of the things that you can do is practice finding anti-",
    "start": "1133159",
    "end": "1140039"
  },
  {
    "text": "requirements where basically you look at those uh attributes of a product of an order whatever you're working with and",
    "start": "1140039",
    "end": "1146520"
  },
  {
    "text": "ask yourselves for each attribute to what is that connected sometimes that will lead to some silly questions but if",
    "start": "1146520",
    "end": "1153320"
  },
  {
    "text": "someone looks at you funny and says like what what kind of a question is that then you've probably found something",
    "start": "1153320",
    "end": "1159840"
  },
  {
    "text": "that is completely unrelated and that's a good thing now if we want to practice finding",
    "start": "1159840",
    "end": "1165120"
  },
  {
    "text": "anti requirements I just said that we have to ask questions right if we're going to ask be asking questions then we",
    "start": "1165120",
    "end": "1173280"
  },
  {
    "text": "need to do this with the business it's not something that we just as Engineers can do on our own we need to engage in",
    "start": "1173280",
    "end": "1179440"
  },
  {
    "text": "those conversations with them a technique like event storming can be really great to apply so that we can",
    "start": "1179440",
    "end": "1185240"
  },
  {
    "text": "understand how these things connect together even with from people and hearing that from people who have",
    "start": "1185240",
    "end": "1191760"
  },
  {
    "text": "completely different responsibilities right the the underlying goal that we",
    "start": "1191760",
    "end": "1197600"
  },
  {
    "text": "have is to uncover any false assumptions because you know it's it's it's a human trait to make assumptions right",
    "start": "1197600",
    "end": "1203960"
  },
  {
    "text": "especially because of our previous experiences maybe we've already worked in retail before and that's how we did it in that system but you're in a new",
    "start": "1203960",
    "end": "1211159"
  },
  {
    "text": "business and maybe they treat things differently so you need to try to find which assumptions am I making are they",
    "start": "1211159",
    "end": "1217600"
  },
  {
    "text": "false and break them apart so yeah keep asking questions be super annoying it's really really",
    "start": "1217600",
    "end": "1224520"
  },
  {
    "text": "helpful and yeah you have you have to also factor in that this is going to take some time you're just not going to",
    "start": "1224520",
    "end": "1230360"
  },
  {
    "text": "figure this out on a single meeting it's not something that you can uh figure out that quickly it takes a while to sort of",
    "start": "1230360",
    "end": "1236720"
  },
  {
    "text": "deepen that understanding and continue digging deeper now we did this for quite a while",
    "start": "1236720",
    "end": "1242840"
  },
  {
    "text": "and then we um we ended up somewhere here we identified seven subdomains and",
    "start": "1242840",
    "end": "1248919"
  },
  {
    "text": "although this may look a lot more complex it's actually a way better representation of what the system",
    "start": "1248919",
    "end": "1254440"
  },
  {
    "text": "actually needed for that specific business scenario and now that we can also have",
    "start": "1254440",
    "end": "1259640"
  },
  {
    "text": "those you know those boundaries separately we can also make different decisions for each individual service",
    "start": "1259640",
    "end": "1266400"
  },
  {
    "text": "boundary and we can then sort of circle back to our communication patterns and",
    "start": "1266400",
    "end": "1271760"
  },
  {
    "text": "messaging one-way communication request reply and publish subscribe and ask ourselves okay now that we have all",
    "start": "1271760",
    "end": "1277360"
  },
  {
    "text": "those Services how are we going to communicate between them and which pattern are we going to use in which",
    "start": "1277360",
    "end": "1283159"
  },
  {
    "text": "specific scenario now the publish subscribe pattern is is you you know even one of",
    "start": "1283159",
    "end": "1289880"
  },
  {
    "text": "my favorites and it's a very popular one why because it has the highest amount of",
    "start": "1289880",
    "end": "1295480"
  },
  {
    "text": "decoupling right why because we're inversing the relationship it's not someone else who's telling you something",
    "start": "1295480",
    "end": "1302559"
  },
  {
    "text": "but you just opt in whatever you care about from your services",
    "start": "1302559",
    "end": "1307760"
  },
  {
    "text": "perspective but as with every good thing in this industry we also sometimes misuse it and that leads me to the",
    "start": "1307760",
    "end": "1314799"
  },
  {
    "text": "passive aggressive publisher and I'm going to C back to family dinner for this one because",
    "start": "1314799",
    "end": "1321320"
  },
  {
    "text": "usually because my husband was kind enough to cook I will usually clean up the kitchen but there are some of those",
    "start": "1321320",
    "end": "1327640"
  },
  {
    "text": "days that I walk into the kitchen and it's like what happened it's like a bomb went",
    "start": "1327640",
    "end": "1334000"
  },
  {
    "text": "off and I'm thinking like did he use every pot and pan that we have now at",
    "start": "1334000",
    "end": "1339720"
  },
  {
    "text": "that point I could choose to publish an event and state the kitchen is messy and",
    "start": "1339720",
    "end": "1345279"
  },
  {
    "text": "that's a valid event right it's a state that the system has arrived to and it's",
    "start": "1345279",
    "end": "1350480"
  },
  {
    "text": "a fact right the kitchen is just very messy but the thing is that there are",
    "start": "1350480",
    "end": "1356840"
  },
  {
    "text": "underlying hidden assumptions there because first I'm expecting that my husband is listening to me and second",
    "start": "1356840",
    "end": "1364120"
  },
  {
    "text": "I'm expecting that he's actually going to get up and help me clean up the mess right now I think we can all agree that",
    "start": "1364120",
    "end": "1369799"
  },
  {
    "text": "that type of communication not very good for your relationship well guess what it's not really good for your systems",
    "start": "1369799",
    "end": "1376240"
  },
  {
    "text": "either because what you're really doing is you're hiding the coupling away you have coupling sometimes you need",
    "start": "1376240",
    "end": "1382840"
  },
  {
    "text": "coupling otherwise we wouldn't have systems but when you need it make it",
    "start": "1382840",
    "end": "1387960"
  },
  {
    "text": "explicit so publish subscribe is not really a good fit when you expect something specific to be done and you",
    "start": "1387960",
    "end": "1394279"
  },
  {
    "text": "need control over that then you know use command driven type of communication if",
    "start": "1394279",
    "end": "1399679"
  },
  {
    "text": "you need a response with data in order to continue your own responsibility publish subscribe is not the best way to",
    "start": "1399679",
    "end": "1406080"
  },
  {
    "text": "go and finally if you need control go over who receives the event also not a",
    "start": "1406080",
    "end": "1411679"
  },
  {
    "text": "good fit because a publisher should be completely unaware of any subscribers you shouldn't even care if there are any",
    "start": "1411679",
    "end": "1418559"
  },
  {
    "text": "from your services perspective by the way this term was initially actually I read about it uh I",
    "start": "1418559",
    "end": "1425120"
  },
  {
    "text": "think on Clemens V's blog and he called it passive aggressive events I kind of change it to publisher because I feel",
    "start": "1425120",
    "end": "1431039"
  },
  {
    "text": "that that's the party that's making the decision about being passive aggressive",
    "start": "1431039",
    "end": "1436320"
  },
  {
    "text": "right okay so to recap this first part this first problem it's important that we decouple our components by finding",
    "start": "1436320",
    "end": "1442799"
  },
  {
    "text": "the right service boundaries otherwise we can't really be successful at building these types of message based",
    "start": "1442799",
    "end": "1448120"
  },
  {
    "text": "systems we want to localize changing behavior and data dependencies and help",
    "start": "1448120",
    "end": "1453600"
  },
  {
    "text": "and use those as mechanisms to find the right service boundaries and we also want to pinpoint the transactional",
    "start": "1453600",
    "end": "1459679"
  },
  {
    "text": "boundaries of our services because that will tell us a lot about whether we got them right or wrong and then finally",
    "start": "1459679",
    "end": "1466120"
  },
  {
    "text": "based on that we can choose the right communication path PS to help us sort of communicate across multiple",
    "start": "1466120",
    "end": "1472320"
  },
  {
    "text": "components and that brings me to the next problem the UI is",
    "start": "1472320",
    "end": "1478200"
  },
  {
    "text": "inconsistent the thing is that as we sort of evolve from this synchronous type of communication to asynchronous",
    "start": "1478200",
    "end": "1484240"
  },
  {
    "text": "type of communication we are basically accepting the fact that things are going to happen but at some point in time and",
    "start": "1484240",
    "end": "1490880"
  },
  {
    "text": "we don't really know when anymore because we've let go of that and sometimes that can cause some glitches",
    "start": "1490880",
    "end": "1497279"
  },
  {
    "text": "right if we don't change how our application works in the communication",
    "start": "1497279",
    "end": "1502360"
  },
  {
    "text": "with our user that's going to lead to those you know data that that looks outdated and glitches and things like",
    "start": "1502360",
    "end": "1508640"
  },
  {
    "text": "that but there are techniques that we can basically apply to mitigate that and",
    "start": "1508640",
    "end": "1513679"
  },
  {
    "text": "the first one um may be obvious but it takes a lot of work we basically want to",
    "start": "1513679",
    "end": "1520120"
  },
  {
    "text": "adjust our language right because if we tell our user well thank you we've you",
    "start": "1520120",
    "end": "1525320"
  },
  {
    "text": "know successfully processed your order then what are they going to expect a successfully processed order but if you",
    "start": "1525320",
    "end": "1532039"
  },
  {
    "text": "tell them well thank you very much we got your order give us a minute and we'll get to it as soon as we can then",
    "start": "1532039",
    "end": "1537600"
  },
  {
    "text": "we're setting completely different expectations but the thing is that if you're coming from a an application that",
    "start": "1537600",
    "end": "1543640"
  },
  {
    "text": "was purely synchronous before moving to this is actually quite a lot of effort",
    "start": "1543640",
    "end": "1549039"
  },
  {
    "text": "so there's also another technique that we could apply and that's basically creating the illusion of progress",
    "start": "1549039",
    "end": "1555320"
  },
  {
    "text": "because that's the thing right users do something in a system and they expect process they did something they want to",
    "start": "1555320",
    "end": "1561039"
  },
  {
    "text": "see the result of that but the thing is that we can't give them that or we don't know exactly when we can give them that",
    "start": "1561039",
    "end": "1567960"
  },
  {
    "text": "but if we can ensure message delivery and we know okay this specific message has been safely stored on the broker",
    "start": "1567960",
    "end": "1575200"
  },
  {
    "text": "then we have a guarantee that it will be done at some point right so one of the things that I like to to think is that",
    "start": "1575200",
    "end": "1581799"
  },
  {
    "text": "we can then you know use some creative freedom and create that illusion of progress with them because if you think",
    "start": "1581799",
    "end": "1587480"
  },
  {
    "text": "about it the the user just placed an order we know exactly what they ordered we know where they want it shipped we",
    "start": "1587480",
    "end": "1594640"
  },
  {
    "text": "know all of that information because they just put that into the system right so we could just show that information",
    "start": "1594640",
    "end": "1601520"
  },
  {
    "text": "to them once we've sent that off it doesn't really matter that it hasn't actually been stored yet we don't need to wait for that to be in the database",
    "start": "1601520",
    "end": "1608480"
  },
  {
    "text": "before we can show it to the user because we know it will get done at some point right you could even sort of keep",
    "start": "1608480",
    "end": "1615600"
  },
  {
    "text": "that around in a local storage cach kind of thing but of course if we do that we also know",
    "start": "1615600",
    "end": "1621360"
  },
  {
    "text": "that at some point that data is just not going to be trustworthy anymore and as we let go of synchronous communication",
    "start": "1621360",
    "end": "1627919"
  },
  {
    "text": "we lose that sort of flexibility to be able to say this order needs to be stored within you know half a minute or",
    "start": "1627919",
    "end": "1634320"
  },
  {
    "text": "so which would we we would have handled by a timeout and we don't really have that",
    "start": "1634320",
    "end": "1640320"
  },
  {
    "text": "anymore so if we still want to be able to say it can't take longer than 30 minutes to store an order what do we do",
    "start": "1640320",
    "end": "1648200"
  },
  {
    "text": "and that's what brings me to slas right because for each of those steps that we've identified in the process that we've now decoupled we need to also",
    "start": "1648200",
    "end": "1655480"
  },
  {
    "text": "think about okay what's an acceptable time amount of time for this to happen",
    "start": "1655480",
    "end": "1661240"
  },
  {
    "text": "right and what we then want to do is make That explicit and work with those",
    "start": "1661240",
    "end": "1667519"
  },
  {
    "text": "now when we find those relevant slas for each of those individual step or even like you know combination of multiple",
    "start": "1667519",
    "end": "1674320"
  },
  {
    "text": "steps then how do we enforce those slas in a message based system and that brings me to Future messages",
    "start": "1674320",
    "end": "1681320"
  },
  {
    "text": "now I find that future messages are an incredibly powerful feature of message Space Systems and it's still heavily",
    "start": "1681320",
    "end": "1689279"
  },
  {
    "text": "underused now the thing is what you can basically do is send a message that is",
    "start": "1689279",
    "end": "1694360"
  },
  {
    "text": "going to be delivered at some point in the future right this is supported by many messaging Technologies out there",
    "start": "1694360",
    "end": "1701200"
  },
  {
    "text": "like Azure service bus Amazon sqs and rabbit mq if you're using uh a specific",
    "start": "1701200",
    "end": "1706320"
  },
  {
    "text": "plugin for that and there are many middle Ware technologies that support this as well now how does this then connect to",
    "start": "1706320",
    "end": "1713320"
  },
  {
    "text": "those slas well basically what we want to do is we want to calculate the SLA expiration time and then use that as the",
    "start": "1713320",
    "end": "1721279"
  },
  {
    "text": "delivery time of our message and when that message comes in we can go and verify whether that SLI SLA was violated",
    "start": "1721279",
    "end": "1728440"
  },
  {
    "text": "or not and if that is the case then we can take whatever appropriate action like for example canceling the order at",
    "start": "1728440",
    "end": "1735039"
  },
  {
    "text": "that point okay again for this one um it's",
    "start": "1735039",
    "end": "1742039"
  },
  {
    "text": "something that we need to accept once we move from synchronous to asynchronous type of communication that there's going",
    "start": "1742039",
    "end": "1747360"
  },
  {
    "text": "to have to be some changes to our user interface as well so we want to adjust the language in the UI we can use a",
    "start": "1747360",
    "end": "1753519"
  },
  {
    "text": "little bit of creative freedom to create you know the illusion of progress but then we still need to be mindful of",
    "start": "1753519",
    "end": "1759519"
  },
  {
    "text": "defining those service level agreements on the process level and enforce enforce",
    "start": "1759519",
    "end": "1765039"
  },
  {
    "text": "them with delayed messages and that brings me to the next problem",
    "start": "1765039",
    "end": "1771919"
  },
  {
    "text": "things occur out of order one of my favorites who wouldn't love their sock",
    "start": "1771919",
    "end": "1777760"
  },
  {
    "text": "drawer to look like that I wish mine would look like that it doesn't but the thing is that when you",
    "start": "1777760",
    "end": "1784600"
  },
  {
    "text": "start to think about it we also need to ask ourselves do I need it to look like",
    "start": "1784600",
    "end": "1789960"
  },
  {
    "text": "that does it stop being functionable or operable if I just would you know throw them all in a bin and I don't care where",
    "start": "1789960",
    "end": "1796440"
  },
  {
    "text": "everything is let's consider our sort of order workflow right what we basically have",
    "start": "1796440",
    "end": "1802600"
  },
  {
    "text": "here is we have a prerequisite hidden right there because I want to package the order after the order has been both",
    "start": "1802600",
    "end": "1808840"
  },
  {
    "text": "stored and charged what is my problem that's happening in different",
    "start": "1808840",
    "end": "1814240"
  },
  {
    "text": "services and I don't really know when both of these things have happened right and I find that this is usually the",
    "start": "1814240",
    "end": "1821000"
  },
  {
    "text": "reason that we seek order it's not that we need the order it's that we're trying to handle complex prerequisites",
    "start": "1821000",
    "end": "1829760"
  },
  {
    "text": "now the thing what we could do is say you know we're going to send out the messages in the order that we want them to be",
    "start": "1829760",
    "end": "1835640"
  },
  {
    "text": "processed and most of the time they will until they don't because the thing is",
    "start": "1835640",
    "end": "1841279"
  },
  {
    "text": "that we can't really guarantee that things that we send out a certain way are going to be processed that certain",
    "start": "1841279",
    "end": "1847880"
  },
  {
    "text": "way because there are many many reasons that could lead to your messages being processed out of order now first one",
    "start": "1847880",
    "end": "1854919"
  },
  {
    "text": "could be latency one of the policies of distributed uh Computing right is that the latency is zero it's clearly not but",
    "start": "1854919",
    "end": "1863080"
  },
  {
    "text": "it could also be processing time I'm sending out message a and then I'm sending out message B but it takes twice",
    "start": "1863080",
    "end": "1868960"
  },
  {
    "text": "as time to process message a than it takes to process message B subsequent messages are going to appear out of",
    "start": "1868960",
    "end": "1874320"
  },
  {
    "text": "order as well it could also be concurrency right if we're scaling out a",
    "start": "1874320",
    "end": "1879679"
  },
  {
    "text": "specific uh worker then inq ordering bye-bye you don't have that anymore",
    "start": "1879679",
    "end": "1886240"
  },
  {
    "text": "especially if if if you're pre-etching for example it could also be to do a load in",
    "start": "1886240",
    "end": "1892399"
  },
  {
    "text": "a sort of increase in the load and there's only one specific service that is affected there's a buildup of messages in that queue and the rest of",
    "start": "1892399",
    "end": "1898760"
  },
  {
    "text": "the system is keeping up could also be to to retries right one of the great things of messaging is it's",
    "start": "1898760",
    "end": "1905120"
  },
  {
    "text": "a lot more resilient but what do we do we retry we do back off mechanisms and things like that again out of",
    "start": "1905120",
    "end": "1911639"
  },
  {
    "text": "order and it could also be service availability unavailability actually I should change that should be",
    "start": "1911639",
    "end": "1917120"
  },
  {
    "text": "unavailability because if one of those Services is down the rest of the system if they're autonomous should be able to continue",
    "start": "1917120",
    "end": "1924360"
  },
  {
    "text": "operating without too much friction but it does mean that if the rest of the system keeps up that you might see some",
    "start": "1924360",
    "end": "1930600"
  },
  {
    "text": "messages being processed out of order so one of the things that we could do is say let's just make it ordered",
    "start": "1930600",
    "end": "1937440"
  },
  {
    "text": "again and what can we do we'll just execute step one and wait until that has",
    "start": "1937440",
    "end": "1943760"
  },
  {
    "text": "been successfully done and then we'll send that message to kick off step two and so",
    "start": "1943760",
    "end": "1949639"
  },
  {
    "text": "forth that would work now because it doesn't matter how much latency there is how many retries we do or how long it",
    "start": "1949639",
    "end": "1955880"
  },
  {
    "text": "takes because we're just not kicking off the next step until we know that we can but what have you done here you've taken",
    "start": "1955880",
    "end": "1962399"
  },
  {
    "text": "all of the benefits of messaging and then comfortably walk to their bin and thrown them in because the thing is it's not that",
    "start": "1962399",
    "end": "1969679"
  },
  {
    "text": "you've only made it slower another reason that we could sort of slow down these types of systems right we're just",
    "start": "1969679",
    "end": "1974960"
  },
  {
    "text": "increasing the latency but and another problem is the coupling right because",
    "start": "1974960",
    "end": "1980519"
  },
  {
    "text": "the thing is that now the sales service is aware of payments and payments is aware of shipments and shipments is",
    "start": "1980519",
    "end": "1985799"
  },
  {
    "text": "aware of invoices and this is just a single flow imagine that you have 30",
    "start": "1985799",
    "end": "1991440"
  },
  {
    "text": "workflows in a system or more yeah that's how you build that distributed ball of mud one step at a",
    "start": "1991440",
    "end": "1998159"
  },
  {
    "text": "time now a common misconception as well is that people say well you know we're using messaging so we're not really",
    "start": "1998159",
    "end": "2004519"
  },
  {
    "text": "coupled together yes you are it's not because there's not a direct reference or you're not doing a direct API API",
    "start": "2004519",
    "end": "2012240"
  },
  {
    "text": "call that there's no coupling right you have command driven type of communication here so what can we do",
    "start": "2012240",
    "end": "2019679"
  },
  {
    "text": "then and that brings me to the orchestration pattern now orchestration is basically going to introduce a",
    "start": "2019679",
    "end": "2026559"
  },
  {
    "text": "central component that is going to drive the business process to completion it's going to have like all",
    "start": "2026559",
    "end": "2033080"
  },
  {
    "text": "of the state about that process and based on that state it's going to make decisions about what is going to happen",
    "start": "2033080",
    "end": "2040000"
  },
  {
    "text": "next and when it should happen and so forth and it's basically a sort of mechanism that can help us recreate that",
    "start": "2040000",
    "end": "2046440"
  },
  {
    "text": "order if we really really need it so let's see how that would look like if we",
    "start": "2046440",
    "end": "2051599"
  },
  {
    "text": "would introduce an orchestrator now we would have our user placing that order",
    "start": "2051599",
    "end": "2057040"
  },
  {
    "text": "and that is going to kick off the orchestrator at that point it's going to instruct both sales and payments to do",
    "start": "2057040",
    "end": "2063480"
  },
  {
    "text": "their work and then sales come back and says yeah got the order stored and at that point the order orchestrator",
    "start": "2063480",
    "end": "2070158"
  },
  {
    "text": "will see look at its prerequisites and say I can't just package this just yet because I need it to be paid as well but",
    "start": "2070159",
    "end": "2077118"
  },
  {
    "text": "it can continue with updating the customer status for example and then when payments is ready and it says yeah",
    "start": "2077119",
    "end": "2083000"
  },
  {
    "text": "I'm done then it can continue with the rest of the flow and say now I'm ready to start packaging and finish everything",
    "start": "2083000",
    "end": "2089800"
  },
  {
    "text": "off right so this is a lot better because now the underlying services are",
    "start": "2089800",
    "end": "2094839"
  },
  {
    "text": "not aware of each other anymore they're not coupled to each other anymore now clearly we've just moved the coupling up",
    "start": "2094839",
    "end": "2101359"
  },
  {
    "text": "right into the order orchestrator but if they are workflow specific then at least",
    "start": "2101359",
    "end": "2106599"
  },
  {
    "text": "you've isolated that a little bit but and I want to stress this a lot",
    "start": "2106599",
    "end": "2112079"
  },
  {
    "text": "you need to be really mindful of the amount of coupling that you introduce in an order orchest in an orchestrator not",
    "start": "2112079",
    "end": "2118040"
  },
  {
    "text": "in an order orchestrator because the thing is that you know these are also prone to becoming their own little",
    "start": "2118040",
    "end": "2123160"
  },
  {
    "text": "monolith because it's so easy to add and remove something there right so we could",
    "start": "2123160",
    "end": "2128240"
  },
  {
    "text": "you know very simply for this specific example we could pull out for example everything regarding the stock and just",
    "start": "2128240",
    "end": "2134520"
  },
  {
    "text": "keep that focus on the order fulfillment part and then we can say you know for the customer status we don't need",
    "start": "2134520",
    "end": "2140200"
  },
  {
    "text": "orchestration we're just going to subscribe to the event and do whatever we need to do and for the stock",
    "start": "2140200",
    "end": "2146079"
  },
  {
    "text": "orchestrator we're just going to subscribe to the order packaged event and do whatever we need to do in terms",
    "start": "2146079",
    "end": "2151880"
  },
  {
    "text": "of you know the stock and that's completely independent now and that",
    "start": "2151880",
    "end": "2157079"
  },
  {
    "text": "really is going to narrow down the amount of coupled components this is still too much this is still just an",
    "start": "2157079",
    "end": "2163520"
  },
  {
    "text": "example for you to sort of be able to visualize it now the main reason that I would look",
    "start": "2163520",
    "end": "2169680"
  },
  {
    "text": "out to use the orchestration pattern is basically to handle those complex prerequisites or also to handle",
    "start": "2169680",
    "end": "2176720"
  },
  {
    "text": "something like um compensating transactions right think of a scenario in which your customer wants to refund",
    "start": "2176720",
    "end": "2184880"
  },
  {
    "text": "something and now you need to generate a credit type of invoice and now you need to be able to ref refund that part of",
    "start": "2184880",
    "end": "2193040"
  },
  {
    "text": "the order that they send back if you look at the dependencies of that order orchestrator it already knows all of the",
    "start": "2193040",
    "end": "2199680"
  },
  {
    "text": "services that it needs to be actually be able to do that right so it becomes really easy to do that but it's also",
    "start": "2199680",
    "end": "2206079"
  },
  {
    "text": "important to be aware that there are many downsides also uh with this why because we introduce a single point of",
    "start": "2206079",
    "end": "2212720"
  },
  {
    "text": "friction now every message that is basically coupled to that process needs to go through through the order",
    "start": "2212720",
    "end": "2218119"
  },
  {
    "text": "orchestrator because otherwise it's not the single point of truth anymore and it can't sort of say like how the process",
    "start": "2218119",
    "end": "2224240"
  },
  {
    "text": "needs to work it needs to be the single point of Truth and therefore a single point of friction also not always easy",
    "start": "2224240",
    "end": "2230040"
  },
  {
    "text": "to scale these and um yeah again it's important to guard our coupling here it's always a",
    "start": "2230040",
    "end": "2236839"
  },
  {
    "text": "sort of trade-off exercise that we're going to have to do okay to recap that part expect out of",
    "start": "2236839",
    "end": "2244000"
  },
  {
    "text": "order messages at some point they will happen if if if you haven't thought about this before and you're just you",
    "start": "2244000",
    "end": "2250119"
  },
  {
    "text": "know in a production environment and things have happened out of order it can get really tricky because if you have",
    "start": "2250119",
    "end": "2256599"
  },
  {
    "text": "something that fails you're already lucky it could just be side effect it could be something that Slumbers in the",
    "start": "2256599",
    "end": "2262920"
  },
  {
    "text": "system as well and just has you know ugly type of side effects like paying",
    "start": "2262920",
    "end": "2268119"
  },
  {
    "text": "people too much money back or something like that test those out of out of order",
    "start": "2268119",
    "end": "2273560"
  },
  {
    "text": "cases so that you get a sense of how your system would respond if that would happen happen and consider how the",
    "start": "2273560",
    "end": "2279280"
  },
  {
    "text": "orchestration pattern can basically help you manage those more complex workflows that you find in your system and I",
    "start": "2279280",
    "end": "2285760"
  },
  {
    "text": "haven't really talked about this yet of course guarding the coupling really important I can't stress it enough if",
    "start": "2285760",
    "end": "2291640"
  },
  {
    "text": "you would be able to choose then you would if you have a truly autonomous",
    "start": "2291640",
    "end": "2296760"
  },
  {
    "text": "service you'd only ever have orchestration within that service because once you have orchestration",
    "start": "2296760",
    "end": "2303240"
  },
  {
    "text": "across multiple Services you're coupling them together in that orchestrator again",
    "start": "2303240",
    "end": "2308640"
  },
  {
    "text": "but I haven't talked about choreography which is the alternative if you don't want to use orchestration that's the",
    "start": "2308640",
    "end": "2313960"
  },
  {
    "text": "other pattern but it would take me a full other hour to talk about that so hopefully next year but if you have any",
    "start": "2313960",
    "end": "2320599"
  },
  {
    "text": "questions I'm happy to chat about it then come find me after the talk that brings me to the next problem",
    "start": "2320599",
    "end": "2326760"
  },
  {
    "text": "it's impossible to troubleshoot failures right another problem that affects any type of distributed system really",
    "start": "2326760",
    "end": "2333400"
  },
  {
    "text": "because the thing is that in a sort of Monolithic architecture are and in a",
    "start": "2333400",
    "end": "2339079"
  },
  {
    "text": "sort of synchronous type of context our you know code execution path looks something like this we can just look at",
    "start": "2339079",
    "end": "2345480"
  },
  {
    "text": "our call stack we can just see how's the thing behaving this code that code and there and we have that call stack to",
    "start": "2345480",
    "end": "2352000"
  },
  {
    "text": "basically guide us but as we move to a message based system and things are flowing from here to there when we look",
    "start": "2352000",
    "end": "2358839"
  },
  {
    "text": "at it from the code execution perspective it looks somewhat like that",
    "start": "2358839",
    "end": "2363960"
  },
  {
    "text": "so it becomes a lot more complex to try to understand what is happening and in which order and where did this come from",
    "start": "2363960",
    "end": "2369760"
  },
  {
    "text": "and what was the where you know what was the effect that caused this message to appear here right now the thing is that",
    "start": "2369760",
    "end": "2377079"
  },
  {
    "text": "when we look at those Individual Services they may be simple in isolation but putting it all together becomes",
    "start": "2377079",
    "end": "2382760"
  },
  {
    "text": "really complex now luckily again there are ways to sort of deal with this and",
    "start": "2382760",
    "end": "2388040"
  },
  {
    "text": "and and mitigate that a little bit and the first one is testing right I can't stress it enough who attended Ian's talk",
    "start": "2388040",
    "end": "2394040"
  },
  {
    "text": "earlier today not enough hands go and rewatch it on the stream because",
    "start": "2394040",
    "end": "2400480"
  },
  {
    "text": "the thing is that if you build distributed complex systems having a strong testing strategy",
    "start": "2400480",
    "end": "2406880"
  },
  {
    "text": "is going to be really really important for you because otherwise how do you know that actually everything is working",
    "start": "2406880",
    "end": "2413200"
  },
  {
    "text": "as you expect but the thing with testing is you only really usually write tests",
    "start": "2413200",
    "end": "2418880"
  },
  {
    "text": "for the scenarios that you're actually aware of so there's always some you know blind gaps as well and that's why we",
    "start": "2418880",
    "end": "2425040"
  },
  {
    "text": "also need to invest into observability now observability is basically a",
    "start": "2425040",
    "end": "2430560"
  },
  {
    "text": "technique that can help us create visibility or bring back that visibility that we lost into a distributed system",
    "start": "2430560",
    "end": "2436720"
  },
  {
    "text": "and basically recreate our call stack that we gave up how are we going to do that by collecting Telemetry that can be",
    "start": "2436720",
    "end": "2443599"
  },
  {
    "text": "traces locks and metrics and you know the the the most uh important project to",
    "start": "2443599",
    "end": "2449880"
  },
  {
    "text": "do that right now is open Telemetry right now that's basically the",
    "start": "2449880",
    "end": "2454960"
  },
  {
    "text": "industrywide standard and it's current adopted by most if not all vendors it's",
    "start": "2454960",
    "end": "2460520"
  },
  {
    "text": "also available crossplatform and cross runtime I think 11 programming",
    "start": "2460520",
    "end": "2465960"
  },
  {
    "text": "languages and I could talk about this for a full hour and I did uh I did a",
    "start": "2465960",
    "end": "2471680"
  },
  {
    "text": "talk about this actually at NDC Oso so if this is you know a challenge that you're running into then yeah scan the",
    "start": "2471680",
    "end": "2477839"
  },
  {
    "text": "giup QR code it will take you to one of my giup repositories where I have a recording available of that",
    "start": "2477839",
    "end": "2485119"
  },
  {
    "text": "talk and that brings me to our last problem we did not explo duplicate",
    "start": "2485119",
    "end": "2491480"
  },
  {
    "text": "messages now the thing is that in a message base system every send or",
    "start": "2491480",
    "end": "2496839"
  },
  {
    "text": "publish operation is by definition an at least once operation if it's going to",
    "start": "2496839",
    "end": "2502640"
  },
  {
    "text": "happen at least once we also have a guarantee that at some point it will be more than once right now usually in a",
    "start": "2502640",
    "end": "2510400"
  },
  {
    "text": "sort of business type of scenario we we we don't want to have that uh uh sort of",
    "start": "2510400",
    "end": "2518000"
  },
  {
    "text": "maybe once type of scenario we want it at least once but that also means that we need to be able to deal with",
    "start": "2518000",
    "end": "2523960"
  },
  {
    "text": "duplicates or we need all of our handlers to be item potent now the thing with item potency",
    "start": "2523960",
    "end": "2531079"
  },
  {
    "text": "is I find that's one of the sort of I don't know the the the biggest paradigms really in distributed systems it's super",
    "start": "2531079",
    "end": "2537560"
  },
  {
    "text": "easy to explain this with the example of a light switch right we have two types of light switches one is a flip switch",
    "start": "2537560",
    "end": "2543920"
  },
  {
    "text": "and the other one is a push switch the push switch is not item potent because if I push it multiple times the state of",
    "start": "2543920",
    "end": "2550520"
  },
  {
    "text": "the light is going to change every time I push it the flip switch I can flip the switch down as many times as I want it's",
    "start": "2550520",
    "end": "2557680"
  },
  {
    "text": "not going to change the state of the light right translate that into item",
    "start": "2557680",
    "end": "2564520"
  },
  {
    "text": "potency in a system and it's not easy for me to explain that to you anymore so what do we do with difficult",
    "start": "2564520",
    "end": "2571640"
  },
  {
    "text": "problems we avoid them and we work around them and that's why we have message D duplication",
    "start": "2571640",
    "end": "2577800"
  },
  {
    "text": "now that's basically a mechanism that helps us detect whether a message has been processed before right um again",
    "start": "2577800",
    "end": "2585079"
  },
  {
    "text": "that is uh supported by some Brokers out of the box as well like ex service bus",
    "start": "2585079",
    "end": "2590359"
  },
  {
    "text": "or Amazon sqs and again there are messaging middleware technologies that can help with that as well now if we",
    "start": "2590359",
    "end": "2597000"
  },
  {
    "text": "find that it's a duplicate then it's fine then we'll just throw it away how does that work it works based on a",
    "start": "2597000",
    "end": "2603040"
  },
  {
    "text": "deterministic message ID so we still need to make sure that when we send a message or when we publish an event that",
    "start": "2603040",
    "end": "2610119"
  },
  {
    "text": "the ID that we use for that is going to be deterministic so that if we retry that operation we're going to generate",
    "start": "2610119",
    "end": "2616839"
  },
  {
    "text": "the same ID so that the broker can then be duplicate for us okay that's a a",
    "start": "2616839",
    "end": "2622079"
  },
  {
    "text": "little bit of a more manageable type of challenge now it's also important to",
    "start": "2622079",
    "end": "2627280"
  },
  {
    "text": "understand that this usually works based on a d duplication window because what happens is that the broker or the",
    "start": "2627280",
    "end": "2633200"
  },
  {
    "text": "middleware technology is going to T is going to basically keep track of all of the messages that were successfully",
    "start": "2633200",
    "end": "2639240"
  },
  {
    "text": "processed so that it can actually make a decision on whether it seen that message before or not in a very high throughput",
    "start": "2639240",
    "end": "2646160"
  },
  {
    "text": "type of system we can't keep those messages forever so usually we'll keep them for a window of time the D",
    "start": "2646160",
    "end": "2653359"
  },
  {
    "text": "duplication window and beyond that window we'll just treat it as a as a unique",
    "start": "2653359",
    "end": "2660000"
  },
  {
    "text": "one does that mean that we can completely forget about item potency",
    "start": "2661200",
    "end": "2666359"
  },
  {
    "text": "from here on out unfortunately not and that's basically because we in a",
    "start": "2666359",
    "end": "2674359"
  },
  {
    "text": "distributed system we're now using different types of infrastructure you know in these modern systems we have",
    "start": "2674359",
    "end": "2680440"
  },
  {
    "text": "document databases for this and relational databases for that and we'll store some of that information in Blob",
    "start": "2680440",
    "end": "2686079"
  },
  {
    "text": "and that's great because we're using the right type of storage mechanisms for the right type of",
    "start": "2686079",
    "end": "2692400"
  },
  {
    "text": "reasons but we don't have any distributed transactions anymore right",
    "start": "2692400",
    "end": "2698200"
  },
  {
    "text": "now the thing is that when you look at all of those Technologies in isolation they do offer some kind of transaction",
    "start": "2698200",
    "end": "2704400"
  },
  {
    "text": "management right relational database database transactions document database like Cosmos partition based transactions",
    "start": "2704400",
    "end": "2711359"
  },
  {
    "text": "even in Azure service bus you have cross entity transaction but what is the Big Challenge we cannot combine those",
    "start": "2711359",
    "end": "2719319"
  },
  {
    "text": "transactional guarantees together right and because of that we have that sort of",
    "start": "2719319",
    "end": "2726280"
  },
  {
    "text": "multif based type of commit situation so if you're for example in a scenario",
    "start": "2726280",
    "end": "2731640"
  },
  {
    "text": "where you need to access different types of infrastructure you are basically",
    "start": "2731640",
    "end": "2736880"
  },
  {
    "text": "stuck now one of the sort of typical patterns that we use in message based",
    "start": "2736880",
    "end": "2742040"
  },
  {
    "text": "type of systems to handle this type of scenario is the outbox pattern now it's",
    "start": "2742040",
    "end": "2747400"
  },
  {
    "text": "important to understand that this doesn't actually mimic a distributed transaction it's just going to give you",
    "start": "2747400",
    "end": "2754400"
  },
  {
    "text": "consistency across the database operation and a broker operation but just a single",
    "start": "2754400",
    "end": "2759920"
  },
  {
    "text": "database not 15 right so it's important to understand that if you have a scenario for example like I want to",
    "start": "2759920",
    "end": "2766079"
  },
  {
    "text": "generate an invoice for this order and what I want to do is I want to store the actual PDF on blob storage keep a",
    "start": "2766079",
    "end": "2774040"
  },
  {
    "text": "reference to that you know uh blob pointer in my document database or",
    "start": "2774040",
    "end": "2779359"
  },
  {
    "text": "relational database and I also want to send a message that would not be covered",
    "start": "2779359",
    "end": "2784440"
  },
  {
    "text": "by the outbox pattern so how would you solve that type of problem and that brings me to The",
    "start": "2784440",
    "end": "2791000"
  },
  {
    "text": "Saga distributed transactions pattern now this is basically a failure management pattern that is basically",
    "start": "2791000",
    "end": "2797359"
  },
  {
    "text": "going to use a uh a sequence of local transactions to be able to ensure that",
    "start": "2797359",
    "end": "2804079"
  },
  {
    "text": "data consistency on a step-by-step basis what we're basically going to do is send a message to store some information to",
    "start": "2804079",
    "end": "2811680"
  },
  {
    "text": "this type of infrastructure and if that succeeds we'll send off the message for the next type of infrastructure and then",
    "start": "2811680",
    "end": "2817599"
  },
  {
    "text": "if something fails we'll also roll back at the end now to make this a little bit",
    "start": "2817599",
    "end": "2823119"
  },
  {
    "text": "more visual for you I've I've uh put this in a drawing right so if we have the Saga on one side and we want to",
    "start": "2823119",
    "end": "2829119"
  },
  {
    "text": "store some information in SQL we send that first message we do that that succeeded awesome then we can continue",
    "start": "2829119",
    "end": "2835920"
  },
  {
    "text": "send off another message because we want to store something in Cosmos as well great now we're sending something else",
    "start": "2835920",
    "end": "2842079"
  },
  {
    "text": "to another SQL database in another service and that fails right what do we",
    "start": "2842079",
    "end": "2848200"
  },
  {
    "text": "do then well the Saga will take care of that go back to service a and do what they did in Cosmos and then send another",
    "start": "2848200",
    "end": "2854880"
  },
  {
    "text": "message in and do what they did in SQL this is a terrible example and I did",
    "start": "2854880",
    "end": "2862160"
  },
  {
    "text": "it on purpose because if you find yourself in a situation where you're trying to mimic a distributed",
    "start": "2862160",
    "end": "2869000"
  },
  {
    "text": "transaction accessing multiple Services you got your service boundaries wrong",
    "start": "2869000",
    "end": "2874480"
  },
  {
    "text": "okay so that's also something that you can sort of read as a red flag if you will but it does still sort of explain",
    "start": "2874480",
    "end": "2880720"
  },
  {
    "text": "how the pattern Works in isolation Okay so to recap this last",
    "start": "2880720",
    "end": "2887640"
  },
  {
    "text": "problem when it comes to item potency I can't really give you a silver ballet",
    "start": "2887640",
    "end": "2892800"
  },
  {
    "text": "but I can give you multiple strategies right if you're starting from scratch",
    "start": "2892800",
    "end": "2898079"
  },
  {
    "text": "and you can do it make your changes item potent and this is going to be hard",
    "start": "2898079",
    "end": "2903319"
  },
  {
    "text": "because it's going to take continuous effort whenever you change something you'll have to think about is this still",
    "start": "2903319",
    "end": "2910040"
  },
  {
    "text": "item potent it it requires everyone to be aware of this problem and to fully understand it It's Tricky but it can be",
    "start": "2910040",
    "end": "2916520"
  },
  {
    "text": "done so if you have that option then do it if you need to mimic some kind of",
    "start": "2916520",
    "end": "2923000"
  },
  {
    "text": "distributed transaction then you can use the Saga distributed transactions pattern to sort of mimic that and make",
    "start": "2923000",
    "end": "2928920"
  },
  {
    "text": "use of the individual transactional guarantees of all of the types of infrastructure that you",
    "start": "2928920",
    "end": "2935520"
  },
  {
    "text": "use in if you have communication that needs to happen across components and",
    "start": "2935520",
    "end": "2940920"
  },
  {
    "text": "it's within your own systems boundaries please do not do it over rest apis because you're just making life harder",
    "start": "2940920",
    "end": "2947680"
  },
  {
    "text": "for yourself do it over Q's because then you can use that message G duplication feature out of the box as",
    "start": "2947680",
    "end": "2954319"
  },
  {
    "text": "well and finally if you need to integrate with rest API that are out of your control then you'll need to figure",
    "start": "2954319",
    "end": "2960000"
  },
  {
    "text": "out are they you know do they do they handle item potency and how do they",
    "start": "2960000",
    "end": "2965280"
  },
  {
    "text": "handle item potency usually that's not a magical thing again there's going to be some kind of a deterministic ID so that",
    "start": "2965280",
    "end": "2972280"
  },
  {
    "text": "the other side can figure out whether they've seen that request before unless they are fully item potent out of the",
    "start": "2972280",
    "end": "2978799"
  },
  {
    "text": "box and if they're not item potent yeah that's a tricky situation and you'll",
    "start": "2978799",
    "end": "2984240"
  },
  {
    "text": "have no choice but to investigate how you deal with compensating requests and that in that type of",
    "start": "2984240",
    "end": "2991359"
  },
  {
    "text": "scenario and that brings me to the end of this session wow now I know I threw a",
    "start": "2991359",
    "end": "2997040"
  },
  {
    "text": "lot of information uh on you there's there was a lot to digest in the session so I'm going to try to summarize it a",
    "start": "2997040",
    "end": "3003559"
  },
  {
    "text": "little bit now um I love working on message based systems I find that it's",
    "start": "3003559",
    "end": "3009200"
  },
  {
    "text": "really fun they're really powerful uh but I would also say like only introduce that complexity if you",
    "start": "3009200",
    "end": "3016400"
  },
  {
    "text": "actually you if you actually need it who was in my talk yesterday okay wow quite a few hands",
    "start": "3016400",
    "end": "3022119"
  },
  {
    "text": "well welcome back um so yeah you'll have an idea of why I'm saying this as well",
    "start": "3022119",
    "end": "3027520"
  },
  {
    "text": "is make sure that you actually need it if you introduce all of that complexity in your system and one of the ways that",
    "start": "3027520",
    "end": "3033799"
  },
  {
    "text": "I like to think of it is that messaging buys you options right to address things like scalability and reliability and",
    "start": "3033799",
    "end": "3040400"
  },
  {
    "text": "reducing the coupling and handling those performance concerns but you have to",
    "start": "3040400",
    "end": "3046280"
  },
  {
    "text": "commit to decoupling your logic and data and to try to build those up those components those components in an to",
    "start": "3046280",
    "end": "3053720"
  },
  {
    "text": "basically operate in an autonomous manner to become really successful think also about how outof",
    "start": "3053720",
    "end": "3061160"
  },
  {
    "text": "order processing is going to affect your workflows and try to make try to build your system in a way that it doesn't",
    "start": "3061160",
    "end": "3067559"
  },
  {
    "text": "really matter as much right also invest in observability so",
    "start": "3067559",
    "end": "3072920"
  },
  {
    "text": "that you understand what your system is actually doing in a production scenario because there will always be you know",
    "start": "3072920",
    "end": "3078799"
  },
  {
    "text": "these side cases that we never thought about and were're then trying to figure out what happened so it's really",
    "start": "3078799",
    "end": "3084520"
  },
  {
    "text": "important to be able to go to some kind of tooling and try to understand what your system was doing in that live",
    "start": "3084520",
    "end": "3092160"
  },
  {
    "text": "environment and finally make item potency a key pattern in your design it's not something that you can forget",
    "start": "3092160",
    "end": "3098760"
  },
  {
    "text": "about this is going to be also really really important and if you take all of",
    "start": "3098760",
    "end": "3104040"
  },
  {
    "text": "those things into the back of your mind then it's going to be super",
    "start": "3104040",
    "end": "3109359"
  },
  {
    "text": "fun cool thank thanks a lot for listening if you scan the the QR code on",
    "start": "3109359",
    "end": "3115119"
  },
  {
    "text": "the on the right then that will take you to um my",
    "start": "3115119",
    "end": "3120640"
  },
  {
    "text": "GI up repository I have a bunch of additional resources for you there lots of the patterns that I discussed uh the",
    "start": "3120640",
    "end": "3126680"
  },
  {
    "text": "QR code on the left will take you to our company website if you need help with building message based systems or you",
    "start": "3126680",
    "end": "3132240"
  },
  {
    "text": "have questions and you can also always reach out to us thanks a",
    "start": "3132240",
    "end": "3138078"
  },
  {
    "text": "[Applause]",
    "start": "3140010",
    "end": "3143260"
  },
  {
    "text": "lot",
    "start": "3145520",
    "end": "3148520"
  },
  {
    "text": "for",
    "start": "3156880",
    "end": "3159880"
  }
]