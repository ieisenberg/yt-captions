[
  {
    "start": "0",
    "end": "29000"
  },
  {
    "text": "hello hello and good morning it's hard for me to see you guys but I'm",
    "start": "5640",
    "end": "12059"
  },
  {
    "text": "so happy that for the first time in my conference life I have a stage that is taller than me",
    "start": "12059",
    "end": "18240"
  },
  {
    "text": "great I am here today to talk to you about Orleans or at least an introduction to Microsoft Orleans",
    "start": "18240",
    "end": "27240"
  },
  {
    "text": "um yeah let's first talk a little bit about me very short my",
    "start": "27240",
    "end": "32758"
  },
  {
    "start": "29000",
    "end": "117000"
  },
  {
    "text": "name is Johnny I'm from Belgium and I basically work as a consultant in dotnet",
    "start": "32759",
    "end": "39180"
  },
  {
    "text": "so I'm mostly doing backends.net development a little bit of architecture and I'm just having fun on little side",
    "start": "39180",
    "end": "46260"
  },
  {
    "text": "projects um the talk that I'm giving today is available on my GitHub everything that",
    "start": "46260",
    "end": "52260"
  },
  {
    "text": "I'm talking about all the examples but also my PowerPoint slides is already available on my GitHub so you can just",
    "start": "52260",
    "end": "58800"
  },
  {
    "text": "check that out if you want to learn more about it if you have any questions of course at",
    "start": "58800",
    "end": "64320"
  },
  {
    "text": "the end of the talk we can discuss I will be here for the remainder of the before noon so you can always ask me",
    "start": "64320",
    "end": "71280"
  },
  {
    "text": "questions if you want and if you didn't have a chance to catch me you can just contact me on Twitter or use my",
    "start": "71280",
    "end": "77340"
  },
  {
    "text": "professional email address so enough about me let's get into Orleans now",
    "start": "77340",
    "end": "84360"
  },
  {
    "text": "Microsoft is talking about Orleans this year quite often I've seen a couple of",
    "start": "84360",
    "end": "91140"
  },
  {
    "text": "their presentations and to be honest I think their presentations are a little bit too much marketingy it's always kind",
    "start": "91140",
    "end": "98400"
  },
  {
    "text": "of high level and abstract and I don't like that so I decided to do the same",
    "start": "98400",
    "end": "103439"
  },
  {
    "text": "talk but I'm going to give you a practical example and hopefully you will learn more from this than from a",
    "start": "103439",
    "end": "109920"
  },
  {
    "text": "marketing talk um before I can do that I have to tell you a little backstory of a a personal",
    "start": "109920",
    "end": "117420"
  },
  {
    "start": "117000",
    "end": "186000"
  },
  {
    "text": "project that I did many years ago so in Belgium we have schools that run",
    "start": "117420",
    "end": "123479"
  },
  {
    "text": "at night where adult people can go to learn new things they maybe can have a new degree to change jobs stuff like",
    "start": "123479",
    "end": "129479"
  },
  {
    "text": "that I did that for 10 years from 2009 to 2019 I've been teaching.net c-sharp",
    "start": "129479",
    "end": "136560"
  },
  {
    "text": "to adults now if you need to teach c-sharp to an adult and you need to keep",
    "start": "136560",
    "end": "142440"
  },
  {
    "text": "things simple what do you do you create a console application console applications are boring so I decided to",
    "start": "142440",
    "end": "150360"
  },
  {
    "text": "create a game where robots need to fight each other and players need to write C",
    "start": "150360",
    "end": "156599"
  },
  {
    "text": "sharp code to make their robots do something which is a perfect thing to",
    "start": "156599",
    "end": "162420"
  },
  {
    "text": "learn basic structures what are variables what are if what it's an if",
    "start": "162420",
    "end": "167760"
  },
  {
    "text": "statement what's a loop stuff like that and you get immediate feedback when you deploy your code to this Arena you can",
    "start": "167760",
    "end": "174840"
  },
  {
    "text": "immediately see if you did something stupid or if you're writing a very good code now",
    "start": "174840",
    "end": "181260"
  },
  {
    "text": "getting to Orleans six years ago I did this project",
    "start": "181260",
    "end": "187260"
  },
  {
    "start": "186000",
    "end": "220000"
  },
  {
    "text": "and I made some mistakes first of all just to show you this is what a c-sharp",
    "start": "187260",
    "end": "192300"
  },
  {
    "text": "script can look like so there's no namespaces there's no classes there's no methods there can be but there don't",
    "start": "192300",
    "end": "197519"
  },
  {
    "text": "have to be so you just basically write a a piece of C sharp that",
    "start": "197519",
    "end": "203700"
  },
  {
    "text": "will be executed every two seconds so all the robots on the arena will do this",
    "start": "203700",
    "end": "208920"
  },
  {
    "text": "do this they will compile and run their c-sharp script every two seconds over and over again so this script will",
    "start": "208920",
    "end": "214920"
  },
  {
    "text": "basically make a robot walk around in squares or circles whatever um",
    "start": "214920",
    "end": "220560"
  },
  {
    "start": "220000",
    "end": "467000"
  },
  {
    "text": "now as I told you I made some mistakes in the architecture so when I first built this there's on the top side",
    "start": "220560",
    "end": "226680"
  },
  {
    "text": "there's the front end which is in unity um very simple I know c-sharp I should know Unity so that that worked perfectly",
    "start": "226680",
    "end": "233519"
  },
  {
    "text": "fine now in order to make the game State visible I just created an HTTP API using",
    "start": "233519",
    "end": "240319"
  },
  {
    "text": "asp.net MVC and this API would just be called every two seconds by the unity",
    "start": "240319",
    "end": "245519"
  },
  {
    "text": "front end it will just ask please give me the current game State and then Unity would render that state every two",
    "start": "245519",
    "end": "250980"
  },
  {
    "text": "seconds over and over again where is that game State coming from it's coming from a database a SQL database because",
    "start": "250980",
    "end": "256979"
  },
  {
    "text": "I'm an old school guy um probably Overkill because there's only one table but never mind so the",
    "start": "256979",
    "end": "264000"
  },
  {
    "text": "database of course we need to do some processing and processing is a separate process which is a.net worker service it will",
    "start": "264000",
    "end": "271199"
  },
  {
    "text": "basically get all the data from the database it will compile all the c-sharp scripts it will run all the c-sharp",
    "start": "271199",
    "end": "276900"
  },
  {
    "text": "scripts and it will write the state back into the database so the next time the HTTP API runs it has the new state",
    "start": "276900",
    "end": "283139"
  },
  {
    "text": "and then of course on the right hand side we have a website where the player can basically copy paste its c-sharp",
    "start": "283139",
    "end": "289020"
  },
  {
    "text": "code in like a text box that does some that does some color coding it just",
    "start": "289020",
    "end": "294060"
  },
  {
    "text": "clicks a button deploy to Arena and it will be written into the database so very simple concept but basically flawed",
    "start": "294060",
    "end": "301560"
  },
  {
    "text": "flood why I tried to do this once for an audience of 100 people compiling and",
    "start": "301560",
    "end": "307800"
  },
  {
    "text": "running 100 C sharp scripts in only two seconds when you only have one worker service can get a little bit tricky and",
    "start": "307800",
    "end": "314820"
  },
  {
    "text": "also when I run this with students students who don't know C sharp they make a lot of mistakes and they make a",
    "start": "314820",
    "end": "321300"
  },
  {
    "text": "lot of interesting mistakes that will basically crash my website crash my processor and then I'm done so I made a",
    "start": "321300",
    "end": "328380"
  },
  {
    "text": "few adjustments to this the first adjustment that I made was to create an additional validator service so when you",
    "start": "328380",
    "end": "336240"
  },
  {
    "text": "paste a c-sharp script into the web UI that's c-sharp script will first be sent",
    "start": "336240",
    "end": "342960"
  },
  {
    "text": "to a validator and this validator was a very small application using grpc communication that would just try to",
    "start": "342960",
    "end": "349740"
  },
  {
    "text": "compile your code and it would try to run your code in a couple of situations so it will say okay let's say there's",
    "start": "349740",
    "end": "356100"
  },
  {
    "text": "four enemies they will hunt you down what are you going to do so I basically tested the script a little bit to see if",
    "start": "356100",
    "end": "361979"
  },
  {
    "text": "there's any infinite Loops or if it didn't compile at all and if it's cost unstableness basically my validator",
    "start": "361979",
    "end": "369539"
  },
  {
    "text": "service would crash instead of the rest of my application so that was that was the first thing that actually went well",
    "start": "369539",
    "end": "374880"
  },
  {
    "text": "and the cool thing about the validator is I could scale it I could have multiple validators and I could have a load balancer before that or in front of",
    "start": "374880",
    "end": "382319"
  },
  {
    "text": "that and if one goes down there's still others available for the people to to work with but the processor was still",
    "start": "382319",
    "end": "388800"
  },
  {
    "text": "something that I did completely wrong but I didn't have time these past few years to actually make it a scalable",
    "start": "388800",
    "end": "396319"
  },
  {
    "text": "processor and then I heard about Orleans I heard about Microsoft Orleans and they",
    "start": "396319",
    "end": "401819"
  },
  {
    "text": "promised me that I could use the actor model to create easily scalable distributed",
    "start": "401819",
    "end": "408240"
  },
  {
    "text": "applications so as well I was like I want to learn about that and I want to learn about that by basically rewriting",
    "start": "408240",
    "end": "414600"
  },
  {
    "text": "my c-sharp Wars application and that is what I did um so",
    "start": "414600",
    "end": "420800"
  },
  {
    "text": "conceptually it's still the same thing we still have the HTTP API but we lose the SQL database because Orleans has a",
    "start": "420800",
    "end": "427800"
  },
  {
    "text": "couple of things that you can use to store State one of the things that you can use are is azure storage more",
    "start": "427800",
    "end": "434759"
  },
  {
    "text": "specifically blob storage in Azure so I decided to throw away the SQL and use Azure blob storage to store the state of",
    "start": "434759",
    "end": "441419"
  },
  {
    "text": "my game then the web UI is still there because we need to use it to input all",
    "start": "441419",
    "end": "446580"
  },
  {
    "text": "of the c-sharp scripts we still have validation which is now in Orleans Silo and we have the processing which is also",
    "start": "446580",
    "end": "453479"
  },
  {
    "text": "an Orleans Silo and I will talk about those things in just a minute now thanks to this I can now scale my",
    "start": "453479",
    "end": "462479"
  },
  {
    "text": "c-sharp application c-sharp Wars application why let's tell you about that",
    "start": "462479",
    "end": "468300"
  },
  {
    "start": "467000",
    "end": "631000"
  },
  {
    "text": "but first Orleans is based on the virtual actor",
    "start": "468300",
    "end": "473759"
  },
  {
    "text": "model which is kind of old already it's a simple concept it basically means that everything your application needs to do",
    "start": "473759",
    "end": "479960"
  },
  {
    "text": "is being done by actors actors and one actor is something that does something",
    "start": "479960",
    "end": "486479"
  },
  {
    "text": "but only one thing it's like the the the the single responsibility principle from",
    "start": "486479",
    "end": "492000"
  },
  {
    "text": "Salt when you build a class for example it only needs to have one single responsibility so it's the same thing",
    "start": "492000",
    "end": "498300"
  },
  {
    "text": "for your actors and actors can interact with each other so basically when I build an application for example I have",
    "start": "498300",
    "end": "505080"
  },
  {
    "text": "actor a which can call into another actor which is called actor p and inside",
    "start": "505080",
    "end": "510720"
  },
  {
    "text": "of this actor we can have a state and that state can be active in memory but",
    "start": "510720",
    "end": "515880"
  },
  {
    "text": "that actor can also be deactivated and it can persist its data to some kind of storage in my case The Blob storage from",
    "start": "515880",
    "end": "522360"
  },
  {
    "text": "Azure but when that actor needs to be reactivated and I will talk about",
    "start": "522360",
    "end": "527459"
  },
  {
    "text": "activation and deactivation also in just a minute it will just read its state and it will keep its state back into memory",
    "start": "527459",
    "end": "534959"
  },
  {
    "text": "now of course actors can talk to each other so when you have all of these actors with their single responsibilities they can of course use",
    "start": "534959",
    "end": "542279"
  },
  {
    "text": "each other to basically build the whole of your application and next to that you can also have",
    "start": "542279",
    "end": "548760"
  },
  {
    "text": "clients that talk to your actors so you can have a client talking to an actor that actor can do something call another",
    "start": "548760",
    "end": "554399"
  },
  {
    "text": "actor that actor can do something and so on and because of this this is the thing",
    "start": "554399",
    "end": "560220"
  },
  {
    "text": "that I heard from Microsoft I was like this actually seems a good fit for my game for my c-sharp Wars game because if",
    "start": "560220",
    "end": "566580"
  },
  {
    "text": "you think about my game and you think about actors it kind of makes sense can somebody guess what a good actor would",
    "start": "566580",
    "end": "572700"
  },
  {
    "text": "be in in my c-sharp Wars game who knows wants to take a guess",
    "start": "572700",
    "end": "577980"
  },
  {
    "text": "what would be a good actor nobody",
    "start": "577980",
    "end": "583620"
  },
  {
    "text": "excuse me a player the indeed that's a good actor a player basically has a name and he",
    "start": "583620",
    "end": "589980"
  },
  {
    "text": "owns a couple of robots so a player indeed is a good actor anything else",
    "start": "589980",
    "end": "596120"
  },
  {
    "text": "excuse me a gun it's a good idea indeed but I don't really work with guns in my game so I'm",
    "start": "597959",
    "end": "605339"
  },
  {
    "text": "not using guns but guns a gun would be a good actor if you have multiple kinds of guns then each kind of gun can be an",
    "start": "605339",
    "end": "612360"
  },
  {
    "text": "actor that you define and then instances of those actors can be all the guns in game so very good",
    "start": "612360",
    "end": "618600"
  },
  {
    "text": "um actually one that I use is the robot itself so each instance of a robot is also an actor so these are my actors and",
    "start": "618600",
    "end": "625260"
  },
  {
    "text": "these actors need to work um together and to show you what that can look like",
    "start": "625260",
    "end": "631519"
  },
  {
    "start": "631000",
    "end": "724000"
  },
  {
    "text": "I prepared for you a website where you can deploy a robot into the arena so if",
    "start": "631519",
    "end": "638820"
  },
  {
    "text": "you very quickly scan this QR code or visit web.csharpwars.com you have a couple of",
    "start": "638820",
    "end": "644820"
  },
  {
    "text": "input fields for your player name for your robot name and you can select a script template so you don't have to",
    "start": "644820",
    "end": "650339"
  },
  {
    "text": "write a c-sharp yourself and I just want to to you to deploy a couple of robots and then we can see",
    "start": "650339",
    "end": "656880"
  },
  {
    "text": "how these will act in the Orleans cluster now this is not https I'm very",
    "start": "656880",
    "end": "663660"
  },
  {
    "text": "sorry for that so look out for the HTTP I didn't have time to get the",
    "start": "663660",
    "end": "669180"
  },
  {
    "text": "certificate",
    "start": "669180",
    "end": "671660"
  },
  {
    "text": "but yeah I created a couple of grains or actors and those will all work together and the",
    "start": "675420",
    "end": "682620"
  },
  {
    "text": "cool thing about this in the Orleans cluster environment that you basically set up is that these actors will",
    "start": "682620",
    "end": "688860"
  },
  {
    "text": "basically be put on an instance of your application if you have multiple instances these actors will be spread",
    "start": "688860",
    "end": "695640"
  },
  {
    "text": "among all of those instances so it's basically scalable by default I can have",
    "start": "695640",
    "end": "700920"
  },
  {
    "text": "my processor instance I can have four or five or six instances and my grains will",
    "start": "700920",
    "end": "706800"
  },
  {
    "text": "just be spread around all of those instances so when I play this game with a thousand people which basically would",
    "start": "706800",
    "end": "713760"
  },
  {
    "text": "would make my Arena a lot a lot larger but it wouldn't be an issue when I just",
    "start": "713760",
    "end": "719339"
  },
  {
    "text": "have enough instances to to compile and run all of that c-sharp code so let's see if somebody actually did something",
    "start": "719339",
    "end": "726360"
  },
  {
    "start": "724000",
    "end": "755000"
  },
  {
    "text": "and it looks it looks like you guys did so these are now a bunch of robots fighting each other I hope nobody used",
    "start": "726360",
    "end": "733019"
  },
  {
    "text": "swear words in their in their names um but it seems that most of you like ranged",
    "start": "733019",
    "end": "739620"
  },
  {
    "text": "attacks um so now I have this going on every two seconds the scripts will be compiled and",
    "start": "739620",
    "end": "745860"
  },
  {
    "text": "they will be run and the state will be saved into my",
    "start": "745860",
    "end": "751079"
  },
  {
    "text": "um my actors so let's go back to a little bit of theory then",
    "start": "751079",
    "end": "756800"
  },
  {
    "text": "in Orleans specifically because the actor model is something quite old already and there's multiple Frameworks",
    "start": "756959",
    "end": "762779"
  },
  {
    "text": "that that basically work with the concept of of the actor model for example akka or aka.net does the same",
    "start": "762779",
    "end": "769740"
  },
  {
    "text": "the same thing Orleans is just another implementation of the actor model and in Orleans",
    "start": "769740",
    "end": "775200"
  },
  {
    "text": "um they use specific naming conventions so an actor in Orleans is called a grain like a grain or of salt",
    "start": "775200",
    "end": "782360"
  },
  {
    "text": "just a grain and a grain is always identifiable which means for example my player green",
    "start": "782360",
    "end": "790139"
  },
  {
    "text": "which you told me about um has an identity an identity that will",
    "start": "790139",
    "end": "795839"
  },
  {
    "text": "specify who is this grain and how can I talk to this grain and this is based on",
    "start": "795839",
    "end": "800880"
  },
  {
    "text": "a name for example I have a player slash Johnny which would be my nickname will be an identifiable player grain then we",
    "start": "800880",
    "end": "808560"
  },
  {
    "text": "have a behavior my brain will do something so you basically write a class that implements from an interface that",
    "start": "808560",
    "end": "815220"
  },
  {
    "text": "has a couple of methods or things that your grain needs to do this is your",
    "start": "815220",
    "end": "820800"
  },
  {
    "text": "behavior and then optionally not not all grains need state but optionally a grain",
    "start": "820800",
    "end": "826740"
  },
  {
    "text": "can have a state and that state is an in-memory or persisted representation of",
    "start": "826740",
    "end": "832560"
  },
  {
    "text": "the data that needs to be stored as part of that grain for example a player has the identity player attorney it has the",
    "start": "832560",
    "end": "839339"
  },
  {
    "text": "behavior that a player can create a robot and it has the in-memory state",
    "start": "839339",
    "end": "844380"
  },
  {
    "text": "which contains the name of the player which is basically the only state that a player needs so this is a grain",
    "start": "844380",
    "end": "852899"
  },
  {
    "start": "852000",
    "end": "947000"
  },
  {
    "text": "now as I said the grains have this identity so when you call a grain",
    "start": "852899",
    "end": "858720"
  },
  {
    "text": "you will get the grain with that identity it can persist its state",
    "start": "858720",
    "end": "864420"
  },
  {
    "text": "and the cool thing about grains is when you call a method on a grain it will do something but you can also have timers",
    "start": "864420",
    "end": "870360"
  },
  {
    "text": "and reminders so you can have your grain basically work on a timer and do something every couple of milliseconds",
    "start": "870360",
    "end": "877860"
  },
  {
    "text": "seconds hours whatever so instead of calling into a grain you",
    "start": "877860",
    "end": "883199"
  },
  {
    "text": "can make your grains do something on a timer there's also things like grain placement which I will talk about a",
    "start": "883199",
    "end": "888600"
  },
  {
    "text": "little bit later I told you about the fact that grains will be spread around all of your instances within your",
    "start": "888600",
    "end": "894660"
  },
  {
    "text": "Orleans cluster you can as a developer specify where your grain needs to be placed but I'll show you an example uh",
    "start": "894660",
    "end": "901740"
  },
  {
    "text": "in a minute and then there's activation and garbage collection now if your grain is not used for a long period of time it",
    "start": "901740",
    "end": "909060"
  },
  {
    "text": "will be garbage collected so it will basically persist its state and it will it will be taken down your grain still",
    "start": "909060",
    "end": "915300"
  },
  {
    "text": "exists because the state is stored in your in this case Azure blob storage but",
    "start": "915300",
    "end": "920339"
  },
  {
    "text": "the grain itself does not live in memory anymore so it doesn't use resources and then when you call into that grain and",
    "start": "920339",
    "end": "925560"
  },
  {
    "text": "that grain does not exist well it still exists that's why it's a virtual actor model it will just be activated again it",
    "start": "925560",
    "end": "932459"
  },
  {
    "text": "will read its state from persistent persistence and it will be available to",
    "start": "932459",
    "end": "937500"
  },
  {
    "text": "you again so let's show you when I go into my",
    "start": "937500",
    "end": "942899"
  },
  {
    "text": "website for c-sharp Wars",
    "start": "942899",
    "end": "946760"
  },
  {
    "start": "947000",
    "end": "1037000"
  },
  {
    "text": "when you use Orleans you can optionally add an Orleans dashboard to your",
    "start": "947940",
    "end": "953519"
  },
  {
    "text": "application this is actually not to be used in production because it uses a lot of resources to look at what your grains",
    "start": "953519",
    "end": "961260"
  },
  {
    "text": "are actually doing but it is it is a good thing to learn from and to debug and to check what your Orleans cluster",
    "start": "961260",
    "end": "968339"
  },
  {
    "text": "is actually doing first of all you have an overview which just tells you how many grains are activated in this case",
    "start": "968339",
    "end": "974660"
  },
  {
    "text": "161 it has an error rate so if there's exceptions somewhere in your code it",
    "start": "974660",
    "end": "980940"
  },
  {
    "text": "will show you an error rate so I have a very small error rate it seems the amount of requests per seconds that we",
    "start": "980940",
    "end": "986880"
  },
  {
    "text": "can do and activate its silos is how many silos I will talk about silos again",
    "start": "986880",
    "end": "991920"
  },
  {
    "text": "a little bit later now if you look at grains you can see all of the different grains that I basically defined and",
    "start": "991920",
    "end": "998940"
  },
  {
    "text": "specified so there is indeed the player grain and there are 72 players so 72 of",
    "start": "998940",
    "end": "1004160"
  },
  {
    "text": "you created a unique player and then there's um 40 robots",
    "start": "1004160",
    "end": "1010579"
  },
  {
    "text": "so 40 robots are deployed and there's also 40 39 because a robot has died just",
    "start": "1010579",
    "end": "1016880"
  },
  {
    "text": "now so there's also 39 scripts 38 another robot has died so you can see",
    "start": "1016880",
    "end": "1022579"
  },
  {
    "text": "that all of these things are put into separate grains there's also one Arena",
    "start": "1022579",
    "end": "1029058"
  },
  {
    "text": "grain by the way the entire arena is also one grain so I can have multiple parallel Arenas if I want",
    "start": "1029059",
    "end": "1037360"
  },
  {
    "start": "1037000",
    "end": "1181000"
  },
  {
    "text": "if you look at the same thing in code is this big enough should be",
    "start": "1038360",
    "end": "1045260"
  },
  {
    "text": "you can see that there's a web API of course and then there's the website and then all the way in the bottom there's",
    "start": "1045260",
    "end": "1050780"
  },
  {
    "text": "all the Orleans projects so in Orleans cluster when you build your Orleans",
    "start": "1050780",
    "end": "1055880"
  },
  {
    "text": "application it needs a host it's a host application that will basically host an instance of your Silo inside of your",
    "start": "1055880",
    "end": "1063080"
  },
  {
    "text": "cluster so I created Two Hosts there's the normal host and there's the",
    "start": "1063080",
    "end": "1070160"
  },
  {
    "text": "validation host the normal host is a project which actually contains",
    "start": "1070160",
    "end": "1075799"
  },
  {
    "text": "little code it only has that program.cs file that uses the host Builder",
    "start": "1075799",
    "end": "1081200"
  },
  {
    "text": "just like your asp.net application does but it uses a method called",
    "start": "1081200",
    "end": "1086720"
  },
  {
    "text": "use or liens and in your use use or liens you specify what your Orleans cluster and silos need to look like I",
    "start": "1086720",
    "end": "1095419"
  },
  {
    "text": "have a connection string to my Azure storage I use some application insights to to do logging and then I have two",
    "start": "1095419",
    "end": "1102799"
  },
  {
    "text": "specific situations if I'm debugging so if I just press run in Visual Studio I'm",
    "start": "1102799",
    "end": "1108260"
  },
  {
    "text": "going to use performance counters so the performance counters are actually used when you open up a silo so one instance",
    "start": "1108260",
    "end": "1114919"
  },
  {
    "text": "of my host application it will give me information about CPU usage memory usage",
    "start": "1114919",
    "end": "1120200"
  },
  {
    "text": "and so on so this is something you can do using the performance counters",
    "start": "1120200",
    "end": "1126200"
  },
  {
    "text": "and then you configure your endpoints so your Silo that contains all of your grains needs some ports to do",
    "start": "1126200",
    "end": "1133100"
  },
  {
    "text": "communication between different silos now if I'm not debugging I'm just doing the same thing but I'm doing it uh in",
    "start": "1133100",
    "end": "1139640"
  },
  {
    "text": "kubernetes so I'm basically hosting the thing that you see the thing that you used like 72 people have actually",
    "start": "1139640",
    "end": "1145340"
  },
  {
    "text": "created a robot or a player this runs in a kubernetes cluster environment so",
    "start": "1145340",
    "end": "1150679"
  },
  {
    "text": "Orleans also has a couple of nougat packages that you can use to deploy into",
    "start": "1150679",
    "end": "1155960"
  },
  {
    "text": "kubernetes for example but also in other kinds of environments and then you specify your cluster ID",
    "start": "1155960",
    "end": "1162679"
  },
  {
    "text": "just a unique ID that will Define the whole of your cluster and that's it",
    "start": "1162679",
    "end": "1168500"
  },
  {
    "text": "that's it you need to specify some other things for application insights for logging I have specific blob storage",
    "start": "1168500",
    "end": "1175940"
  },
  {
    "text": "um files to store all of my grain state",
    "start": "1175940",
    "end": "1181640"
  },
  {
    "start": "1181000",
    "end": "1498000"
  },
  {
    "text": "and that should be it now next to your host you of course need to Define your grains now I have a separate project",
    "start": "1181640",
    "end": "1189760"
  },
  {
    "text": "containing my actual grains here you can see Arena grain bot grain messages grain",
    "start": "1189760",
    "end": "1195799"
  },
  {
    "text": "moves grain player grain and so on so if I for example open the arena grain",
    "start": "1195799",
    "end": "1201980"
  },
  {
    "text": "you can see that Arena green is a class that implements from the I Arena grain",
    "start": "1201980",
    "end": "1207200"
  },
  {
    "text": "interface which defines all of your methods and then there's the grain base of I Arena grain now grain base is a",
    "start": "1207200",
    "end": "1214220"
  },
  {
    "text": "clause that I wrote myself which actually implements um derives from The Orleans grain cloth so this is",
    "start": "1214220",
    "end": "1221660"
  },
  {
    "text": "the base class in Orleans for a grain you need to you need to derive from that and then you need to create that",
    "start": "1221660",
    "end": "1228140"
  },
  {
    "text": "interface now if you look at that interface it needs to implement an Orleans",
    "start": "1228140",
    "end": "1235760"
  },
  {
    "text": "interface that specifies what the identity of your grain is built out of you can have multiple kinds of",
    "start": "1235760",
    "end": "1242320"
  },
  {
    "text": "identities and now this is something that will change in the future because now I'm using Orleans 3 Orleans 3 is the",
    "start": "1242320",
    "end": "1249140"
  },
  {
    "text": "current version of Orleans um somewhere this year I think Orleans 4 will come out and in Orleans 4 there",
    "start": "1249140",
    "end": "1256039"
  },
  {
    "text": "will only be one kind of identity which will always be a string today in Orleans you can have a long you can have a good",
    "start": "1256039",
    "end": "1263419"
  },
  {
    "text": "you can have a string so you can basically choose what kind of identity you want to use for example for players",
    "start": "1263419",
    "end": "1269059"
  },
  {
    "text": "I'm using the string identity because a player has a name for robots I use a good because every",
    "start": "1269059",
    "end": "1276020"
  },
  {
    "text": "robot that you create will just get a random good as its identity so you need to choose",
    "start": "1276020",
    "end": "1281419"
  },
  {
    "text": "so my Arena grain for example has a couple of behaviors like get all of the active robots get all of the alive",
    "start": "1281419",
    "end": "1287780"
  },
  {
    "text": "robots get the details for the entire Arena create a robot delete an arena and delete a robot so these are the",
    "start": "1287780",
    "end": "1294320"
  },
  {
    "text": "behaviors that you then need to implement now if you have a client or if you have",
    "start": "1294320",
    "end": "1301299"
  },
  {
    "text": "a grain that needs to talk to another grain this is where things become very easy in Orleans you have multiple grains",
    "start": "1301299",
    "end": "1308659"
  },
  {
    "text": "you want to talk from one grain to the other you just do the method call you don't need to think about do I need to",
    "start": "1308659",
    "end": "1314299"
  },
  {
    "text": "do HTTP or do I need to use grpc or something else to talk between these grains that can actually live in",
    "start": "1314299",
    "end": "1321440"
  },
  {
    "text": "separate hosted environments no you just call the method from the interface and",
    "start": "1321440",
    "end": "1327500"
  },
  {
    "text": "this makes my life as a developer very easy for example if I look at the web API my web API has a couple of endpoints",
    "start": "1327500",
    "end": "1335419"
  },
  {
    "text": "also that endpoint that actually is being called by my Unity client which",
    "start": "1335419",
    "end": "1340940"
  },
  {
    "text": "does get all of the active robots inside of an arena now in my endpoints I never write a lot",
    "start": "1340940",
    "end": "1347840"
  },
  {
    "text": "of code I just forward to something that is called a manager class and inside of the manager class I have that method",
    "start": "1347840",
    "end": "1353720"
  },
  {
    "text": "called get all active robots so inside of my manager class I need to basically call into my Orleans cluster into one of",
    "start": "1353720",
    "end": "1362720"
  },
  {
    "text": "those grains so I created a little um helper method that basically uses a",
    "start": "1362720",
    "end": "1370400"
  },
  {
    "text": "grain client and your grain client is something that you can use from wherever you want are you writing a web",
    "start": "1370400",
    "end": "1375740"
  },
  {
    "text": "application are you writing a winforms application doesn't really matter you can have a green client that can call",
    "start": "1375740",
    "end": "1381799"
  },
  {
    "text": "into your Orleans cluster now this green client the only thing it needs is of",
    "start": "1381799",
    "end": "1386900"
  },
  {
    "text": "course the address where is your Orleans cluster actually hosted and it needs a port which Port can I use to enter my",
    "start": "1386900",
    "end": "1394340"
  },
  {
    "text": "cluster and the name of the cluster um when you do that",
    "start": "1394340",
    "end": "1400159"
  },
  {
    "text": "in this case because it's a helper method you actually use this kind of",
    "start": "1400159",
    "end": "1405500"
  },
  {
    "text": "Orleans method so you have your cluster client you do get grain and you specify the grain interface so if I want to talk",
    "start": "1405500",
    "end": "1411799"
  },
  {
    "text": "to the arena I just use I Arena grain so I Arena grain now you get an instance of",
    "start": "1411799",
    "end": "1417799"
  },
  {
    "text": "a client that can talk to the arena Crane and you just call methods just call the method on top of your green",
    "start": "1417799",
    "end": "1423140"
  },
  {
    "text": "very easy again you don't need to think about HTTP grpc whatever",
    "start": "1423140",
    "end": "1428240"
  },
  {
    "text": "doesn't really matter how does this work well when you compile and run your",
    "start": "1428240",
    "end": "1433280"
  },
  {
    "text": "Orleans application a lot of code generation will be applied Orleans will generate all of the code for client",
    "start": "1433280",
    "end": "1440000"
  },
  {
    "text": "server communication to make your application actually do all of those things you don't need to think about",
    "start": "1440000",
    "end": "1446120"
  },
  {
    "text": "that Orleans will do it for you and also in the next version of Orleans they will have made some modifications to make it",
    "start": "1446120",
    "end": "1451880"
  },
  {
    "text": "more performant because today it uses HTTP but I think in the next version it will use grpc to do the actual",
    "start": "1451880",
    "end": "1458419"
  },
  {
    "text": "communication between grains and from clients to cranes also when you want to talk from one",
    "start": "1458419",
    "end": "1465500"
  },
  {
    "text": "grain to the other it's the exact same thing if I look inside of my Arena grain when I get all of the robots",
    "start": "1465500",
    "end": "1473919"
  },
  {
    "text": "I'm going to use a grain Factory and with the instead of a grain client",
    "start": "1473919",
    "end": "1479600"
  },
  {
    "text": "I'm using a grain Factory but conceptually it's the same thing I'm just asking for a robot grain",
    "start": "1479600",
    "end": "1486679"
  },
  {
    "text": "and I'm calling the method get State on that robot grain to get that state again",
    "start": "1486679",
    "end": "1491960"
  },
  {
    "text": "not very hard to do",
    "start": "1491960",
    "end": "1496419"
  },
  {
    "start": "1498000",
    "end": "1613000"
  },
  {
    "text": "now let's look at silos",
    "start": "1499159",
    "end": "1504260"
  },
  {
    "text": "now I talked to you about Orleans clusters so when you create a host application you need to specify",
    "start": "1504260",
    "end": "1511520"
  },
  {
    "text": "what the name of your cluster is going to be and you can have multiple hosts within the same cluster again I will talk about that in just a moment",
    "start": "1511520",
    "end": "1518620"
  },
  {
    "text": "but when you create multiple instances of the same host application you basically create multiple silos and",
    "start": "1518620",
    "end": "1525620"
  },
  {
    "text": "Grains will be activated in one of those silos and this is also something that you see when you open that Orleans",
    "start": "1525620",
    "end": "1532340"
  },
  {
    "text": "dashboard so when I go to grains you can see that I have multiple activations for",
    "start": "1532340",
    "end": "1537799"
  },
  {
    "text": "these grains and if you click silos you can see all of the silos that I'm currently running",
    "start": "1537799",
    "end": "1543320"
  },
  {
    "text": "in total there is six silos if you look at the silo names you can see that four",
    "start": "1543320",
    "end": "1548600"
  },
  {
    "text": "of them have the host name and two of them have the validation host name so",
    "start": "1548600",
    "end": "1554299"
  },
  {
    "text": "this should always already ring a bell because I talked to you about the fact that I do validation beforehand",
    "start": "1554299",
    "end": "1559340"
  },
  {
    "text": "so I'm running two instances that only do validation and I'm running four instances that do the actual processing",
    "start": "1559340",
    "end": "1565159"
  },
  {
    "text": "so these grains are activated on these silos and you can see on the right hand side how many activations that are",
    "start": "1565159",
    "end": "1571940"
  },
  {
    "text": "running on the validation host there's no activations because nobody is currently deploying any robots if you",
    "start": "1571940",
    "end": "1578600"
  },
  {
    "text": "would deploy a robot it will be activated very shortly on one of those two validation hosts it will do its job",
    "start": "1578600",
    "end": "1584000"
  },
  {
    "text": "and then it will be recycled because the validation is over these grains will not stay alive now on the other hosts or the",
    "start": "1584000",
    "end": "1591200"
  },
  {
    "text": "other silos these are your robots that are currently alive and they are actually every two seconds processing",
    "start": "1591200",
    "end": "1596840"
  },
  {
    "text": "their data so they're they are still activated and you can see that there's about 40 activations for each each Silo",
    "start": "1596840",
    "end": "1603559"
  },
  {
    "text": "if you add multiple silos the the grains will basically be Spread spread around",
    "start": "1603559",
    "end": "1608960"
  },
  {
    "text": "all of your hosts which is a cool thing if you click on one of these hosts",
    "start": "1608960",
    "end": "1615020"
  },
  {
    "start": "1613000",
    "end": "1833000"
  },
  {
    "text": "for example this one you can see the CPU usage and the memory usage for that specific host and you can see all the",
    "start": "1615020",
    "end": "1621980"
  },
  {
    "text": "methods that are being called the number of requests per second the failed requests and the average latency in",
    "start": "1621980",
    "end": "1627320"
  },
  {
    "text": "milliseconds for each request and then in the bottom you can see the actual grains that are activated",
    "start": "1627320",
    "end": "1634159"
  },
  {
    "text": "and if you look carefully you can also see that the script and the robot grains they have the same number of activations",
    "start": "1634159",
    "end": "1641000"
  },
  {
    "text": "and this is due to the fact that I used grain placement so if you look at the",
    "start": "1641000",
    "end": "1646820"
  },
  {
    "text": "code for my script green",
    "start": "1646820",
    "end": "1653480"
  },
  {
    "text": "so basically let me explain very quickly I have my robot and I my robot needs to",
    "start": "1653480",
    "end": "1658760"
  },
  {
    "text": "compile c-sharp code and it needs to run a c-sharp code this will take some time because it takes some time I decided to",
    "start": "1658760",
    "end": "1666140"
  },
  {
    "text": "create a separate grain that does the actual processing why this is a very important thing in Orleans every grain",
    "start": "1666140",
    "end": "1673760"
  },
  {
    "text": "is single threaded which means if you call into a grain nobody else can call",
    "start": "1673760",
    "end": "1679520"
  },
  {
    "text": "into that grain at the same time why because state becomes very easy when",
    "start": "1679520",
    "end": "1685340"
  },
  {
    "text": "there's no parallelism when nobody can do something at the same time you don't need to bother about",
    "start": "1685340",
    "end": "1691039"
  },
  {
    "text": "locking the state and this is why Orleans is built like that if somebody calls into your grain",
    "start": "1691039",
    "end": "1697340"
  },
  {
    "text": "nobody else can call into it at the same time it needs to wait before the previous call has finished this is why I",
    "start": "1697340",
    "end": "1704779"
  },
  {
    "text": "created a separate grain for my scripting because when my robot is basically compiling and running the script and somebody else is asking for",
    "start": "1704779",
    "end": "1711500"
  },
  {
    "text": "what is your current situation it cannot answer that question because it's still busy processing all of that C sharp code",
    "start": "1711500",
    "end": "1718640"
  },
  {
    "text": "so that's why I created a separate grain so the script grain will do all the processing and the robot grain will just",
    "start": "1718640",
    "end": "1724279"
  },
  {
    "text": "hold the state and then the link to the script grain but also",
    "start": "1724279",
    "end": "1729919"
  },
  {
    "text": "on top of my script grain class I put the attribute prefer local placement",
    "start": "1729919",
    "end": "1735380"
  },
  {
    "text": "which means that if somebody calls into my script green",
    "start": "1735380",
    "end": "1742100"
  },
  {
    "text": "I would like my script green to be activated at the same Silo as the color",
    "start": "1742100",
    "end": "1747980"
  },
  {
    "text": "so in this case the robot when it's created or activated it will basically",
    "start": "1747980",
    "end": "1753559"
  },
  {
    "text": "create the script green and the script green will always be created on the same silo or it will try to create it on the",
    "start": "1753559",
    "end": "1760279"
  },
  {
    "text": "same Silo as the robot why would that be a good thing well because when you",
    "start": "1760279",
    "end": "1765380"
  },
  {
    "text": "communicate between grains communication will be more performant faster if they",
    "start": "1765380",
    "end": "1770539"
  },
  {
    "text": "live on the same Silo because when they live on the same Silo the same host it can just communicate in memory but",
    "start": "1770539",
    "end": "1777620"
  },
  {
    "text": "when your grain lives on another Silo it needs to do some kind of over a network communication so it needs to use for",
    "start": "1777620",
    "end": "1784820"
  },
  {
    "text": "example HTTP or grpc to do the actual communication so when grains are heavily",
    "start": "1784820",
    "end": "1790700"
  },
  {
    "text": "discussing things with each other it's a good thing that they live in the same host because things will basically be",
    "start": "1790700",
    "end": "1796100"
  },
  {
    "text": "more performant and this is one of the attributes that you can use to decide where your grains",
    "start": "1796100",
    "end": "1802100"
  },
  {
    "text": "are placed so in my case robots and scripts will always be placed on the same silo",
    "start": "1802100",
    "end": "1809600"
  },
  {
    "text": "back to this one so this is why the the number of activations are all almost",
    "start": "1812140",
    "end": "1817520"
  },
  {
    "text": "always um the same value because they will basically talk to each other a lot and",
    "start": "1817520",
    "end": "1824179"
  },
  {
    "text": "that's also why the milliseconds per requests are quite low in this case",
    "start": "1824179",
    "end": "1830559"
  },
  {
    "text": "um another thing that I forgot to talk about is timers now in my case",
    "start": "1830779",
    "end": "1838760"
  },
  {
    "start": "1833000",
    "end": "2086000"
  },
  {
    "text": "my processing happens every two seconds so something needs to tell my script",
    "start": "1838760",
    "end": "1845480"
  },
  {
    "text": "grains to process every two seconds their their scripts so you can have a",
    "start": "1845480",
    "end": "1851539"
  },
  {
    "text": "grain that has a timer so I have my processing grain right here my processing grain there's always one",
    "start": "1851539",
    "end": "1857299"
  },
  {
    "text": "instance of a processing grain per Arena so each Arena has a processing grain and",
    "start": "1857299",
    "end": "1862340"
  },
  {
    "text": "that processing grain will just talk to all of the other grains that it needs to do the actual processing",
    "start": "1862340",
    "end": "1868340"
  },
  {
    "text": "and in this case when you activate um your your grain you will register a",
    "start": "1868340",
    "end": "1874279"
  },
  {
    "text": "timer a timer that will start in 30 seconds so when you start your Silo and",
    "start": "1874279",
    "end": "1879679"
  },
  {
    "text": "you act activate your grain it will take 30 seconds to initialize",
    "start": "1879679",
    "end": "1885700"
  },
  {
    "text": "which is basically for my debugging purposes so that that I can wait that I have 30 seconds to to start all of my",
    "start": "1885700",
    "end": "1892580"
  },
  {
    "text": "debugging processes and then it will run my timer every two seconds and every two seconds the method on timer will be",
    "start": "1892580",
    "end": "1898880"
  },
  {
    "text": "called so this green will basically call into itself every two seconds and every two seconds it does its Behavior",
    "start": "1898880",
    "end": "1906440"
  },
  {
    "text": "now the weird the weird thing about these timers is the fact that they don't",
    "start": "1906440",
    "end": "1912559"
  },
  {
    "text": "really look into garbage collecting I told you when a grain has nothing",
    "start": "1912559",
    "end": "1920240"
  },
  {
    "text": "communicating with it it will be garbage collected and it will be deactivated now",
    "start": "1920240",
    "end": "1925279"
  },
  {
    "text": "you would think when you use a timer like this that the grain is active every two seconds so that it will not be",
    "start": "1925279",
    "end": "1931159"
  },
  {
    "text": "garbage collected but collected but that's not true Orleans will not see this as communication the grain itself",
    "start": "1931159",
    "end": "1938419"
  },
  {
    "text": "is processing every two seconds but if nothing from the outside world or from another grain is actively communicating",
    "start": "1938419",
    "end": "1944960"
  },
  {
    "text": "with my processing grain it will be garbage collecting and my process will stop working",
    "start": "1944960",
    "end": "1950779"
  },
  {
    "text": "and this is actually why whenever my client so my web API manager Arena",
    "start": "1950779",
    "end": "1957919"
  },
  {
    "text": "manager calls into my Arena to get the arena",
    "start": "1957919",
    "end": "1963260"
  },
  {
    "text": "details it will do an additional call to my processing grain and it will ping my",
    "start": "1963260",
    "end": "1969260"
  },
  {
    "text": "processing grain which I thought was something weird okay I need to keep my processing grain active so I'm just",
    "start": "1969260",
    "end": "1975799"
  },
  {
    "text": "going to Ping it whenever a client calls into get me the arena details and because my Unity client is actively",
    "start": "1975799",
    "end": "1982159"
  },
  {
    "text": "doing that my uh that's a very nice Name by the way because my Arena my Unity client is",
    "start": "1982159",
    "end": "1991340"
  },
  {
    "text": "every two seconds calling into that method every two seconds I am pinging that processing grain it will stay",
    "start": "1991340",
    "end": "1998960"
  },
  {
    "text": "active and it will not be garbage collecting which actually has a a cool side effect When I close this Unity",
    "start": "1998960",
    "end": "2006700"
  },
  {
    "text": "client and when we all go home tonight after some time",
    "start": "2006700",
    "end": "2012340"
  },
  {
    "text": "the processing grain will be recycled to be deactivated and all of the other grains that it's",
    "start": "2012340",
    "end": "2018519"
  },
  {
    "text": "communicating with will also be deactivated so in a couple of hours my entire Orleans cluster will be sleeping",
    "start": "2018519",
    "end": "2025120"
  },
  {
    "text": "until I open this client application again it will activate my Arena grain",
    "start": "2025120",
    "end": "2030279"
  },
  {
    "text": "the arena grain will be activated it will activate the processing grain because it's pinging the processing grain it will register its timer and the",
    "start": "2030279",
    "end": "2037179"
  },
  {
    "text": "whole process will start up and my game will start working again so whenever I'm not using it by default automatically my",
    "start": "2037179",
    "end": "2044440"
  },
  {
    "text": "cluster will go silent and I can even I can basically automatically down scale it so that it doesn't use too many",
    "start": "2044440",
    "end": "2052060"
  },
  {
    "text": "resources which I think is a cool side effect",
    "start": "2052060",
    "end": "2057720"
  },
  {
    "text": "now as you see here I built multiple of these silos and in each Silo all of my grains can be",
    "start": "2060940",
    "end": "2068858"
  },
  {
    "text": "activated my script my books my Arenas my players but then of course I have",
    "start": "2068859",
    "end": "2074020"
  },
  {
    "text": "those specific silos for validation and only the validation grains can be activated in",
    "start": "2074020",
    "end": "2080320"
  },
  {
    "text": "those silos but they belong to the same cluster so this is also a functionality in Orleans that I find",
    "start": "2080320",
    "end": "2086679"
  },
  {
    "start": "2086000",
    "end": "2265000"
  },
  {
    "text": "very interesting which is called heterogeneous silos I hope I pronounced that correctly",
    "start": "2086679",
    "end": "2092760"
  },
  {
    "text": "heterogeneous so when you create multiple hosts",
    "start": "2092760",
    "end": "2098980"
  },
  {
    "text": "you can basically specify which grains can be activated in which hosts how do you do that",
    "start": "2098980",
    "end": "2104920"
  },
  {
    "text": "well in this case I have two hosts I have my host my regular host and my validation",
    "start": "2104920",
    "end": "2111160"
  },
  {
    "text": "host I already talked to you about that but then I have grains and I have validation grains so all of my regular",
    "start": "2111160",
    "end": "2118300"
  },
  {
    "text": "grains live inside of this project and all of my validation grains live in this project which is only one it's only the",
    "start": "2118300",
    "end": "2125200"
  },
  {
    "text": "validation grain itself and as I already told you when you call the validate method it will do some simulations it",
    "start": "2125200",
    "end": "2131680"
  },
  {
    "text": "will compile and run your script and when it's done um it will actually call the activate on",
    "start": "2131680",
    "end": "2137500"
  },
  {
    "text": "idle so you can from within your grain you can deactivate yourself you can say okay whenever this method call is",
    "start": "2137500",
    "end": "2144099"
  },
  {
    "text": "finished deactivate me because I'm not useful anymore and then the next call into that green will activate a new",
    "start": "2144099",
    "end": "2149920"
  },
  {
    "text": "grain for new validation purposes so that's why these silos are actually quite",
    "start": "2149920",
    "end": "2155619"
  },
  {
    "text": "um silent they're they're only um activating grains when it's necessary but",
    "start": "2155619",
    "end": "2163540"
  },
  {
    "text": "when you run this application you will get compile you will get runtime errors because your all of your silos all of",
    "start": "2164859",
    "end": "2172540"
  },
  {
    "text": "your hosts they need to know about all of the grains but in this case I specified that these grains belong to",
    "start": "2172540",
    "end": "2178480"
  },
  {
    "text": "the regular host and this grain belongs to the validation host so you basically need a separate project containing all",
    "start": "2178480",
    "end": "2185440"
  },
  {
    "text": "of your grain contracts so all of your interfaces are shared among all of your",
    "start": "2185440",
    "end": "2191740"
  },
  {
    "text": "hosts but then the actual implementation for your grains they are only referenced",
    "start": "2191740",
    "end": "2196839"
  },
  {
    "text": "in the host where you want them to be activated and then Orleans automatically knows okay I know about all of the",
    "start": "2196839",
    "end": "2202060"
  },
  {
    "text": "grains but I only know these implementations so only these implementations can be activated on on",
    "start": "2202060",
    "end": "2207460"
  },
  {
    "text": "me as a silo which is something I found rather interesting because now I can specify which grains I want to run on",
    "start": "2207460",
    "end": "2214900"
  },
  {
    "text": "which silos which is I think very cool",
    "start": "2214900",
    "end": "2220300"
  },
  {
    "text": "now let's go back to the PowerPoint",
    "start": "2220300",
    "end": "2224579"
  },
  {
    "text": "yep",
    "start": "2227320",
    "end": "2229920"
  },
  {
    "text": "now finally how did I deploy this now I'm using AKs",
    "start": "2233619",
    "end": "2239500"
  },
  {
    "text": "or Azure kubernetes service because I think it's an interesting",
    "start": "2239500",
    "end": "2244660"
  },
  {
    "text": "um thing that I can show you about the scaling of this now I have my host I",
    "start": "2244660",
    "end": "2250780"
  },
  {
    "text": "have my validation host I have my web page and I have my web API so four",
    "start": "2250780",
    "end": "2256060"
  },
  {
    "text": "projects that I should basically deploy to an environment",
    "start": "2256060",
    "end": "2261779"
  },
  {
    "text": "what I did was create Docker containers for them so I created",
    "start": "2261820",
    "end": "2269260"
  },
  {
    "start": "2265000",
    "end": "2475000"
  },
  {
    "text": "um four Docker files so one for the host one for the validation host one for the",
    "start": "2269260",
    "end": "2274660"
  },
  {
    "text": "website and one for the web API I built those containers I put those containers on",
    "start": "2274660",
    "end": "2280800"
  },
  {
    "text": "a container registry which lives on azure and now I can",
    "start": "2280800",
    "end": "2286300"
  },
  {
    "text": "um I can deploy them to kubernetes so this",
    "start": "2286300",
    "end": "2291940"
  },
  {
    "text": "is a view on my kubernetes cluster on the left hand side you can see all of my",
    "start": "2291940",
    "end": "2297160"
  },
  {
    "text": "deployments which I already expanded so there's four deployments there's the Orlean host deployment which has four",
    "start": "2297160",
    "end": "2304180"
  },
  {
    "text": "instances running there's the Orleans validation host which has two instances running there's the web which only has",
    "start": "2304180",
    "end": "2310240"
  },
  {
    "text": "one instance and there's the web API which has one instance so if you look at the Orleans dashboard",
    "start": "2310240",
    "end": "2318700"
  },
  {
    "text": "and you look at silos you can see exactly this you can see the names",
    "start": "2318700",
    "end": "2324579"
  },
  {
    "text": "actually correspond to those pods in kubernetes so in kubernetes you have",
    "start": "2324579",
    "end": "2329800"
  },
  {
    "text": "your pod names which correspond with the ones you see in the Orleans dashboard",
    "start": "2329800",
    "end": "2334960"
  },
  {
    "text": "now if I would change this this deployment and for example tell it",
    "start": "2334960",
    "end": "2341980"
  },
  {
    "text": "that I only need two replicas replicas means instances of my pods and I would",
    "start": "2341980",
    "end": "2348400"
  },
  {
    "text": "save and apply this to my cluster",
    "start": "2348400",
    "end": "2352619"
  },
  {
    "text": "kubernetes will basically kill off two of those instances sometimes it's it takes a couple of seconds or even",
    "start": "2354300",
    "end": "2361180"
  },
  {
    "text": "minutes but now two of those instances will be recycled and they will be gone",
    "start": "2361180",
    "end": "2366400"
  },
  {
    "text": "and I only will have two of them remaining so as I said it sometimes",
    "start": "2366400",
    "end": "2371859"
  },
  {
    "text": "takes some time so let's refresh they're they're gone so now I only have",
    "start": "2371859",
    "end": "2377440"
  },
  {
    "text": "two and if you look at your cluster or I'm sorry your dashboard you can now also see that two of those disappeared",
    "start": "2377440",
    "end": "2384339"
  },
  {
    "text": "the cool thing is your activations will actually be spread around and will get",
    "start": "2384339",
    "end": "2389859"
  },
  {
    "text": "assigned to a new Silo to a new host so you can see it it was changing now now",
    "start": "2389859",
    "end": "2396579"
  },
  {
    "text": "you have 67 activation on 1 and 32 on the other so spread around is is not",
    "start": "2396579",
    "end": "2402700"
  },
  {
    "text": "exactly a good word here um but then when you start playing again they will get more even as the time goes",
    "start": "2402700",
    "end": "2409480"
  },
  {
    "text": "on if you do it the other way around you go back to your deployment",
    "start": "2409480",
    "end": "2415180"
  },
  {
    "text": "that's to make sure close some of them down go back to my deployment",
    "start": "2415180",
    "end": "2421540"
  },
  {
    "text": "and let's say I want five replicas",
    "start": "2421540",
    "end": "2426700"
  },
  {
    "text": "apply to my kubernetes cluster they will now",
    "start": "2426700",
    "end": "2433420"
  },
  {
    "text": "quickly appear and they also will automatically be",
    "start": "2433420",
    "end": "2438640"
  },
  {
    "text": "um found by The Orleans cluster and they will show up here on the right hand side",
    "start": "2438640",
    "end": "2445180"
  },
  {
    "text": "you can also see that there's there's them running for 50 minutes and then the",
    "start": "2445180",
    "end": "2451000"
  },
  {
    "text": "the bottom three are running for 30 seconds so those are the three new ones and then activations will will be",
    "start": "2451000",
    "end": "2457780"
  },
  {
    "text": "um will be activated on those hosts as you can see there's also already four activations on the first one and as time",
    "start": "2457780",
    "end": "2463720"
  },
  {
    "text": "goes on they will be spread around all of those now again a cool thing about",
    "start": "2463720",
    "end": "2469000"
  },
  {
    "text": "Orleans is you don't really have to do a lot to make this work if you looked at the host code",
    "start": "2469000",
    "end": "2476140"
  },
  {
    "start": "2475000",
    "end": "2685000"
  },
  {
    "text": "so the actual host code the only thing that it really contains is that the fact that you are using",
    "start": "2476140",
    "end": "2484000"
  },
  {
    "text": "kubernetes hosting and you need to specify a cluster ID and",
    "start": "2484000",
    "end": "2489160"
  },
  {
    "text": "a service ID which is just just a string so if you have multiple instances multiple Parts running a host that says",
    "start": "2489160",
    "end": "2495760"
  },
  {
    "text": "that it needs to use kubernetes hosting and it has the same cluster ID your kubernetes cluster automatically knows",
    "start": "2495760",
    "end": "2501579"
  },
  {
    "text": "that it's part of of its cluster and it will use that as a new Silo and it will activate grains on that Silo as long as",
    "start": "2501579",
    "end": "2508599"
  },
  {
    "text": "it has a reference to those interfaces for your for your grains",
    "start": "2508599",
    "end": "2514800"
  },
  {
    "text": "um by the way if you run this locally on your local machine it works the same way I have two host applications if you just",
    "start": "2516820",
    "end": "2523839"
  },
  {
    "text": "press start I basically have multiple startup projects it's the API the website and then the two Orleans hosts",
    "start": "2523839",
    "end": "2530800"
  },
  {
    "text": "it will work just in the same way it will start your Two Hosts they will immediately see each other",
    "start": "2530800",
    "end": "2537880"
  },
  {
    "text": "and they will know that you have your cluster containing one instance of the regular host and one instance of the",
    "start": "2537880",
    "end": "2544780"
  },
  {
    "text": "validation host it will of course take take some time",
    "start": "2544780",
    "end": "2549780"
  },
  {
    "text": "now working on this example actually made me learn a lot about Orleans again",
    "start": "2555660",
    "end": "2561880"
  },
  {
    "text": "when looking at the presentations I was like okay I think it's a good idea but I don't really see",
    "start": "2561880",
    "end": "2567339"
  },
  {
    "text": "um the application for this game the application for me is is entirely clear when I play this game with a with three",
    "start": "2567339",
    "end": "2573579"
  },
  {
    "text": "people I only need one um host when I play this game with 100 people and I have multiple Arenas I can",
    "start": "2573579",
    "end": "2580480"
  },
  {
    "text": "just scale up very easily in my kubernetes cluster just have more replicas and it will it will work just",
    "start": "2580480",
    "end": "2586180"
  },
  {
    "text": "fine okay also when I run this I also need to basically start my Azure storage",
    "start": "2586180",
    "end": "2595980"
  },
  {
    "text": "local environment because it connects to my storage locally",
    "start": "2597040",
    "end": "2602859"
  },
  {
    "text": "let's try that again so I would see a good use case for Orleans when you do a",
    "start": "2602859",
    "end": "2609460"
  },
  {
    "text": "lot of processing inside of your business logic and when you need to very easily scale this that you have multiple",
    "start": "2609460",
    "end": "2616300"
  },
  {
    "text": "instances you don't need to worry about things like cues and subscriptions you can just have your actors that do their",
    "start": "2616300",
    "end": "2623260"
  },
  {
    "text": "single responsibility thing they do their behavior they can talk to each other and so on so you don't have to",
    "start": "2623260",
    "end": "2629260"
  },
  {
    "text": "worry about Communication in between of your services just to communication between grains and as a c-sharp",
    "start": "2629260",
    "end": "2635260"
  },
  {
    "text": "developer we know how that works just call a method pass some arguments and you're done this is also the reason why",
    "start": "2635260",
    "end": "2642160"
  },
  {
    "text": "in Orleans all of your methods inside of your grains need to be be asynchronous they need to be asynchronous even if you",
    "start": "2642160",
    "end": "2649660"
  },
  {
    "text": "there's nothing asynchronous to do if you just need to to change a value for your state you always need to return a",
    "start": "2649660",
    "end": "2656260"
  },
  {
    "text": "task because the code generation for Orleans will basically need that need",
    "start": "2656260",
    "end": "2661720"
  },
  {
    "text": "the asynchronous fact to create the actual communication over the network so",
    "start": "2661720",
    "end": "2666940"
  },
  {
    "text": "it needs to add code from that so now it's running on my Local Host this is my API this is my website the one that you",
    "start": "2666940",
    "end": "2674380"
  },
  {
    "text": "opened just earlier and these are my two silos also if I",
    "start": "2674380",
    "end": "2681040"
  },
  {
    "text": "change this port to 8080 this is my Orleans dashboard which I'm running locally",
    "start": "2681040",
    "end": "2687700"
  },
  {
    "start": "2685000",
    "end": "2925000"
  },
  {
    "text": "as you as I promised you I have those two silos one for validation and then the other",
    "start": "2687700",
    "end": "2693220"
  },
  {
    "text": "one so you can very easily debug you can put breakpoints inside of your grains",
    "start": "2693220",
    "end": "2698500"
  },
  {
    "text": "when you do something and they will they will hit if you throw exception an",
    "start": "2698500",
    "end": "2703839"
  },
  {
    "text": "exception in one grain when it's being called from another grain and you don't catch it the exception will actually",
    "start": "2703839",
    "end": "2709780"
  },
  {
    "text": "happen where you call it in that other grain so all of the networking in between to make that work to transfer",
    "start": "2709780",
    "end": "2716319"
  },
  {
    "text": "the exception details from from one host to the other host everything is done automatically for you so debugging",
    "start": "2716319",
    "end": "2722380"
  },
  {
    "text": "becomes very easy also",
    "start": "2722380",
    "end": "2726119"
  },
  {
    "text": "now what else do I need to show you",
    "start": "2732339",
    "end": "2737160"
  },
  {
    "text": "yes um as you've seen earlier also I'm using",
    "start": "2738760",
    "end": "2745060"
  },
  {
    "text": "um blob storage for the state in my grains so if you open the Azure storage",
    "start": "2745060",
    "end": "2750819"
  },
  {
    "text": "Explorer and you look into your actual storage account so I'm using my storage account c-sharp Wars which has some blob",
    "start": "2750819",
    "end": "2758020"
  },
  {
    "text": "containers which has a grain State and I refresh you can basically see the",
    "start": "2758020",
    "end": "2764020"
  },
  {
    "text": "identity of all of my grains and for each grain Activation so for each",
    "start": "2764020",
    "end": "2769599"
  },
  {
    "text": "instance of a grain there is a Json document so this is like document storage I'm just storing the state for",
    "start": "2769599",
    "end": "2776680"
  },
  {
    "text": "each grain inside of a Json document and the name of the document is the identity of your crane so it's always if you for",
    "start": "2776680",
    "end": "2784119"
  },
  {
    "text": "example I told you a robot uses a guide so this is the the good that I'm using",
    "start": "2784119",
    "end": "2789940"
  },
  {
    "text": "for my robots if I scroll down the player actually uses the player name",
    "start": "2789940",
    "end": "2796240"
  },
  {
    "text": "which is this one at the end this is the player name which is part of that identity and if I for example look at",
    "start": "2796240",
    "end": "2802780"
  },
  {
    "text": "one of these players and I download the document you can just read all of the state within that Json",
    "start": "2802780",
    "end": "2810160"
  },
  {
    "text": "document",
    "start": "2810160",
    "end": "2812520"
  },
  {
    "text": "there we go so this is the state",
    "start": "2815319",
    "end": "2819960"
  },
  {
    "text": "which is the type where the type lives it exists equals true that's a property that I that I use",
    "start": "2821980",
    "end": "2828280"
  },
  {
    "text": "there's the username there's the password hash because you basically created created a you didn't create a",
    "start": "2828280",
    "end": "2834880"
  },
  {
    "text": "password I just simplified the website but normally when you play this game you first need to create a user with a password it's hashed it's salted so all",
    "start": "2834880",
    "end": "2842140"
  },
  {
    "text": "of this information is stored within that player grain okay okay there's the last deployment you basically cannot",
    "start": "2842140",
    "end": "2848619"
  },
  {
    "text": "create robots in Rapid succession so you always need to wait a couple of minutes before you can create a second robot to",
    "start": "2848619",
    "end": "2855160"
  },
  {
    "text": "make sure that you guys don't um don't overcrowd my Arena and then you have all",
    "start": "2855160",
    "end": "2862540"
  },
  {
    "text": "of the robot IDs I also per player keep all of the robot ID so this is that state that you can also easily look into",
    "start": "2862540",
    "end": "2870040"
  },
  {
    "text": "another another thing that you can do in Orleans is tell it where to store all of",
    "start": "2870040",
    "end": "2876940"
  },
  {
    "text": "the information about the entire cluster by default it will do that in memory which is good enough",
    "start": "2876940",
    "end": "2883000"
  },
  {
    "text": "basically whenever there's a host alive there's a silo alive it will keep a copy",
    "start": "2883000",
    "end": "2888579"
  },
  {
    "text": "of the entire cluster configuration it will know how many silos are there which grains are activated in which Silo and",
    "start": "2888579",
    "end": "2894880"
  },
  {
    "text": "so on um but you can also specify to store that out of memory and I just try to",
    "start": "2894880",
    "end": "2901060"
  },
  {
    "text": "store it in table storage so if I look in table storage there's Orleans Silo",
    "start": "2901060",
    "end": "2906520"
  },
  {
    "text": "instances this is basically a table that has a reference to all of the silos and",
    "start": "2906520",
    "end": "2911560"
  },
  {
    "text": "all of the information that it needs with that which silos are dead which are alive which are current which are old",
    "start": "2911560",
    "end": "2918220"
  },
  {
    "text": "and stuff like that so again all options that you can do",
    "start": "2918220",
    "end": "2924099"
  },
  {
    "text": "with these kinds of statements so use Azure storage clustering which will use",
    "start": "2924099",
    "end": "2929740"
  },
  {
    "start": "2925000",
    "end": "3085000"
  },
  {
    "text": "a connection string to store all of its clustering information",
    "start": "2929740",
    "end": "2934319"
  },
  {
    "text": "and with that I think I did everything yeah this is something I didn't talk",
    "start": "2935020",
    "end": "2940780"
  },
  {
    "text": "about um this is basically the the garbage collecting of grains so you can specify how long it takes for a grain to be",
    "start": "2940780",
    "end": "2947920"
  },
  {
    "text": "deactivated by a garbage collector or a a grain collector so collection age is a grain will be",
    "start": "2947920",
    "end": "2955240"
  },
  {
    "text": "collected when it's older than 10 minutes and has not been called for those two 10 minutes so then it will be",
    "start": "2955240",
    "end": "2962460"
  },
  {
    "text": "garbage collected then there's collection Quantum um which basically tells the collector",
    "start": "2962460",
    "end": "2969640"
  },
  {
    "text": "at what intervals it needs to do its work so every five minutes the grain collector will look at all of the grains",
    "start": "2969640",
    "end": "2976060"
  },
  {
    "text": "and all of the grains that have been older than 10 minutes and have no active calls within those 10 minute time frame",
    "start": "2976060",
    "end": "2982000"
  },
  {
    "text": "time frame will be garbage collected they will be deactivated their state will be written into my blob storage and",
    "start": "2982000",
    "end": "2989619"
  },
  {
    "text": "they will disappear and that's it with this I am at the end",
    "start": "2989619",
    "end": "2996280"
  },
  {
    "text": "of my presentation um so I do still have some time for questions so I'm not sure if there are any questions",
    "start": "2996280",
    "end": "3004040"
  },
  {
    "text": "yes yes I didn't look into it but there is",
    "start": "3004560",
    "end": "3011220"
  },
  {
    "text": "indeed versioning of grains so you can also do this with attributes on top of your grains you can have multiple",
    "start": "3011220",
    "end": "3016859"
  },
  {
    "text": "implementations for the same grain interface and you can have attributes based on which version of that green",
    "start": "3016859",
    "end": "3022980"
  },
  {
    "text": "you're working with I haven't tried it out so I can't really explain how that would work but it does exist so you can",
    "start": "3022980",
    "end": "3030060"
  },
  {
    "text": "do it I'm sure of that any other questions",
    "start": "3030060",
    "end": "3035540"
  },
  {
    "text": "yes",
    "start": "3036780",
    "end": "3039500"
  },
  {
    "text": "um no basically those grains will die but their state will be saved",
    "start": "3048420",
    "end": "3055140"
  },
  {
    "text": "um not per se it could be that their state will not be saved but you you as a",
    "start": "3055140",
    "end": "3060960"
  },
  {
    "text": "developer can also save that state on specific actions so what I do for",
    "start": "3060960",
    "end": "3066059"
  },
  {
    "text": "example and I can show you very quickly whenever something changes within that",
    "start": "3066059",
    "end": "3071160"
  },
  {
    "text": "state I will always call a helper method from Orleans that will save that state",
    "start": "3071160",
    "end": "3076700"
  },
  {
    "text": "so if I go to my grains my robot grain for example and I go to",
    "start": "3076700",
    "end": "3083640"
  },
  {
    "text": "let's say create robot then you can see that there's a call to write state async so",
    "start": "3083640",
    "end": "3090900"
  },
  {
    "start": "3085000",
    "end": "3315000"
  },
  {
    "text": "this call will make sure that that state is written to storage now when I when I",
    "start": "3090900",
    "end": "3095940"
  },
  {
    "text": "kill that instance The Silo gets destroyed the grain will not be the act",
    "start": "3095940",
    "end": "3101160"
  },
  {
    "text": "it will not be deactivated if you kill it but the state will hopefully be",
    "start": "3101160",
    "end": "3106319"
  },
  {
    "text": "stored because I stored it beforehand and then when Orleans sees that that grain is not there anymore it will not",
    "start": "3106319",
    "end": "3113359"
  },
  {
    "text": "reactivate it automatically it's basically when another grain or a client calls into your grain that your Orleans",
    "start": "3113359",
    "end": "3119040"
  },
  {
    "text": "cluster will see okay this grain has not been activated anywhere because it's gone so it will reactivate it it will",
    "start": "3119040",
    "end": "3125280"
  },
  {
    "text": "read the state from memory and everything will still work",
    "start": "3125280",
    "end": "3130280"
  },
  {
    "text": "frame like yes yeah exactly so indeed if it's if",
    "start": "3130859",
    "end": "3138540"
  },
  {
    "text": "it's my timer grain um it will basically stop working until",
    "start": "3138540",
    "end": "3143839"
  },
  {
    "text": "that Arena manager calls that ping method that ping method will activate then it will take those 30 seconds",
    "start": "3143839",
    "end": "3150900"
  },
  {
    "text": "because I specified it it will take those 30 seconds to restart the actual processing so that's correct",
    "start": "3150900",
    "end": "3157079"
  },
  {
    "text": "was that an answer to your question any other questions",
    "start": "3157079",
    "end": "3162680"
  },
  {
    "text": "uh I'm going to pick the one on top of you first yeah you",
    "start": "3162720",
    "end": "3169099"
  },
  {
    "text": "player okay so the question was if you I would",
    "start": "3176760",
    "end": "3183300"
  },
  {
    "text": "want some statistical information about the game itself would Orleans be a good idea to do that I think so yes what I do",
    "start": "3183300",
    "end": "3190380"
  },
  {
    "text": "today which I didn't show you I have an A moves a grain and I have a messages grain moves basically is a grain that",
    "start": "3190380",
    "end": "3198839"
  },
  {
    "text": "keeps the last 25 moves that anyone within the arena made so I'm using that",
    "start": "3198839",
    "end": "3206220"
  },
  {
    "text": "for statistic purposes I'm basically writing it to that grain every two",
    "start": "3206220",
    "end": "3211260"
  },
  {
    "text": "seconds what is happening so you can you can do whatever with the grain that you want so you can have statistic grains",
    "start": "3211260",
    "end": "3217500"
  },
  {
    "text": "and have all statistic information within that",
    "start": "3217500",
    "end": "3221599"
  },
  {
    "text": "so yeah your your question was won't it be slow if I uh store a lot of these",
    "start": "3230460",
    "end": "3235619"
  },
  {
    "text": "statistics into a database I'm using Azure storage uh right now but when your",
    "start": "3235619",
    "end": "3242339"
  },
  {
    "text": "grains are active your grains are in memory and their state will be in memory when you write a state to your blob",
    "start": "3242339",
    "end": "3248940"
  },
  {
    "text": "storage you need to wait some time especially when it's a lot of data but you don't have to do that if it's purely",
    "start": "3248940",
    "end": "3254099"
  },
  {
    "text": "statistics maybe you don't want to store it or you want to store only a very small aggregated piece of those",
    "start": "3254099",
    "end": "3259680"
  },
  {
    "text": "statistics but you can keep some of those statistics just in memory and then it will be very very quick and and and",
    "start": "3259680",
    "end": "3265859"
  },
  {
    "text": "then you can optimize basically your statistics um you also had a question",
    "start": "3265859",
    "end": "3273319"
  },
  {
    "text": "so your question is can we have a cleanup action for a player for example",
    "start": "3277980",
    "end": "3285240"
  },
  {
    "text": "well actually I actually created that I created and if if I understand your question correctly",
    "start": "3285240",
    "end": "3291540"
  },
  {
    "text": "I created inside of my player endpoints and my player manager I delete all players well there's no delete player",
    "start": "3291540",
    "end": "3298440"
  },
  {
    "text": "there's delete all players and I did it like this I call into my",
    "start": "3298440",
    "end": "3304680"
  },
  {
    "text": "um my which which is this my player grain",
    "start": "3304680",
    "end": "3310400"
  },
  {
    "text": "and in my player grain sorry players grain so yeah I have a",
    "start": "3311760",
    "end": "3317700"
  },
  {
    "start": "3315000",
    "end": "3566000"
  },
  {
    "text": "player green which is an instance for each player and I have one um player's grain and this player's grin",
    "start": "3317700",
    "end": "3324720"
  },
  {
    "text": "keeps all of the players in its state and it will just for each all of the players it will then get the grain for",
    "start": "3324720",
    "end": "3330599"
  },
  {
    "text": "that player and it will call delete player and then that green has a link to all of the robot greens and it will call",
    "start": "3330599",
    "end": "3336540"
  },
  {
    "text": "the elite robot on all the robot grains and then the robot grain has a link to the script so it will call the script",
    "start": "3336540",
    "end": "3342240"
  },
  {
    "text": "and it calls delete the script and because you can deactivate um or when when a grain is Idle all of",
    "start": "3342240",
    "end": "3350099"
  },
  {
    "text": "those methods will basically call the activate on idle so all of those grains will be recycled automatically so if I",
    "start": "3350099",
    "end": "3356220"
  },
  {
    "text": "would call into that end point right now I do have a couple of minutes remaining so I can do that",
    "start": "3356220",
    "end": "3363920"
  },
  {
    "text": "so from Postman I just have all of my end points defined so I should be able",
    "start": "3363960",
    "end": "3369180"
  },
  {
    "text": "to call into the the cleanup so let's first log in because I need an",
    "start": "3369180",
    "end": "3375900"
  },
  {
    "text": "uh I need a token um let's say",
    "start": "3375900",
    "end": "3383040"
  },
  {
    "text": "um don't really care",
    "start": "3383040",
    "end": "3389000"
  },
  {
    "text": "so this is my token and then I can do delete all players no this one",
    "start": "3390359",
    "end": "3396980"
  },
  {
    "text": "sorry I don't have a delete all players for my Orleans cluster so I have to create one",
    "start": "3398400",
    "end": "3406940"
  },
  {
    "text": "what how is notepad slow",
    "start": "3412380",
    "end": "3417380"
  },
  {
    "text": "what is this okay never mind so let's duplicate this one",
    "start": "3418380",
    "end": "3425880"
  },
  {
    "text": "let's use the correct URI",
    "start": "3425880",
    "end": "3430039"
  },
  {
    "text": "yes",
    "start": "3433440",
    "end": "3436160"
  },
  {
    "text": "now I need that",
    "start": "3438839",
    "end": "3442460"
  },
  {
    "text": "I'm sorry computers are hard like this send it",
    "start": "3447599",
    "end": "3455359"
  },
  {
    "text": "and then hopefully it will work and we should see fingers crossed all of",
    "start": "3455640",
    "end": "3463380"
  },
  {
    "text": "those grains disappearing after some time that's a good demo",
    "start": "3463380",
    "end": "3470599"
  },
  {
    "text": "it's still running that's not a good sign but it should work I've used it in the past so now",
    "start": "3473880",
    "end": "3480300"
  },
  {
    "text": "basically what you should see is that those grains will start disappearing um because I'm just cleaning everything",
    "start": "3480300",
    "end": "3486720"
  },
  {
    "text": "up but I have to do it manually for now sorry it seems that it's not working",
    "start": "3486720",
    "end": "3494819"
  },
  {
    "text": "any other questions yes",
    "start": "3494819",
    "end": "3499700"
  },
  {
    "text": "can you repeat your question",
    "start": "3504059",
    "end": "3507200"
  },
  {
    "text": "sorry I can't understand you with the noise behind me let's come stand next to you",
    "start": "3511319",
    "end": "3517338"
  },
  {
    "text": "yeah back is there a good way so your",
    "start": "3521760",
    "end": "3526799"
  },
  {
    "text": "question was what if I need to do something transactional and when I'm halfway through calling all of these",
    "start": "3526799",
    "end": "3533579"
  },
  {
    "text": "grains what if I want to roll back the answer for me is I have no idea I've not tried so I have no idea I think",
    "start": "3533579",
    "end": "3541380"
  },
  {
    "text": "I read something inside of the documentation about transactions so I think there will exist something but I",
    "start": "3541380",
    "end": "3547740"
  },
  {
    "text": "haven't tried it so I can't answer your question sorry any other questions",
    "start": "3547740",
    "end": "3554838"
  },
  {
    "text": "there's a lot of light if there's no more questions I would like to say thank you enjoy the rest of",
    "start": "3555480",
    "end": "3561839"
  },
  {
    "text": "your day and hopefully see you somewhere in the future [Applause]",
    "start": "3561839",
    "end": "3568500"
  }
]