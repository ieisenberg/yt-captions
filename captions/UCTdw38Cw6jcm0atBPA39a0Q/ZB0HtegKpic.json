[
  {
    "text": "thanks for thanks for coming along how's the morning been so far I haven't seen anything it hasn't been good awesome",
    "start": "1930",
    "end": "8800"
  },
  {
    "text": "that's silence I'm going to assume that that means it was amazing so welcome",
    "start": "8800",
    "end": "14020"
  },
  {
    "text": "today I'm going to be talking about cleaning the sewage out of your DevOps process I'll talk about what that means in a sec but um some of you have",
    "start": "14020",
    "end": "20320"
  },
  {
    "text": "probably noticed I talk a bit funny I thought I'd start with telling you who I",
    "start": "20320",
    "end": "25960"
  },
  {
    "text": "am so my name is Damian Brady I actually work for Microsoft now as of literally",
    "start": "25960",
    "end": "31869"
  },
  {
    "text": "this time last week I've been home for two days since this time last week so I",
    "start": "31869",
    "end": "37480"
  },
  {
    "text": "haven't really got everything set up so I'm really hoping that this laptops not going to lock me out at some point so",
    "start": "37480",
    "end": "43360"
  },
  {
    "text": "don't have a bad yet I am a cloud developer advocate at Microsoft and part of Donovan Browns",
    "start": "43360",
    "end": "50010"
  },
  {
    "text": "self-styled League of Extraordinary cloud DevOps advocates which he seems",
    "start": "50010",
    "end": "56410"
  },
  {
    "text": "determined to to see if I can catch on so we'll see how that goes so I'm that guy who looks a little bit like a",
    "start": "56410",
    "end": "61719"
  },
  {
    "text": "hologram because that photo wasn't very good we're going to redo this photo at some point but that's me prior to",
    "start": "61719",
    "end": "67930"
  },
  {
    "text": "Microsoft and most of you would know I work at octopus deploy if you know me I used to work it up to us deploy so prior",
    "start": "67930",
    "end": "75220"
  },
  {
    "text": "to that I started about 15 years ago with software development and I started",
    "start": "75220",
    "end": "82180"
  },
  {
    "text": "in government so I know how the government system kind of works at least in Australia I moved on worked in a",
    "start": "82180",
    "end": "87670"
  },
  {
    "text": "couple of different finance companies building net solutions for internet",
    "start": "87670",
    "end": "94869"
  },
  {
    "text": "banking and things like that and then some loans software and things like that I've moved from there into consulting so",
    "start": "94869",
    "end": "101500"
  },
  {
    "text": "I ended up visiting a lot of places and finding out how they did their DevOps process although it wasn't called that",
    "start": "101500",
    "end": "106840"
  },
  {
    "text": "then it was just the process and then I moved on to octopus deploy and so as",
    "start": "106840",
    "end": "111850"
  },
  {
    "text": "well as being in a product company I also saw how people did their deployments and things like that so I've",
    "start": "111850",
    "end": "117400"
  },
  {
    "text": "kind of got this varied history in a lot of different environments where people have done things very very differently",
    "start": "117400",
    "end": "122560"
  },
  {
    "text": "especially in the case of government versus octopus deploy where we could deploy a new version to production about",
    "start": "122560",
    "end": "129670"
  },
  {
    "text": "an hour with a couple of lines of text in slack so yeah it's changed a bit I",
    "start": "129670",
    "end": "136209"
  },
  {
    "text": "originally come from Australia around not too far away from here this was a",
    "start": "136209",
    "end": "141700"
  },
  {
    "text": "little bit early on this time last year so that's winter in Australia by the way it was it was about 30-something degrees",
    "start": "141700",
    "end": "148900"
  },
  {
    "text": "I think so not very nice so I come from around this part of the world there's a lot of other speakers from",
    "start": "148900",
    "end": "155590"
  },
  {
    "text": "about the same place actually Troy hunt leaves about 45 minutes south of where I was but Christmas Eve last year my wife",
    "start": "155590",
    "end": "163510"
  },
  {
    "text": "and I actually moved to Toronto which was a bit of a shock we kind of exchanged Vegemite and dropped bears for",
    "start": "163510",
    "end": "169689"
  },
  {
    "text": "maple syrup and real bears I think that's a trade up I guess the big",
    "start": "169689",
    "end": "176290"
  },
  {
    "text": "difference though was this is Australia in summer which is around Christmas and",
    "start": "176290",
    "end": "182139"
  },
  {
    "text": "this is Canada around Christmas right this was the first time that my wife had",
    "start": "182139",
    "end": "187359"
  },
  {
    "text": "ever seen snow I know you have snow here but we had never seen it before really",
    "start": "187359",
    "end": "193120"
  },
  {
    "text": "so that was a bit of a shock we are heading back home at the end of the year so I'm kind of looking forward to getting back to the beach as well yeah",
    "start": "193120",
    "end": "203799"
  },
  {
    "text": "so that'll be exciting when we get back you let the run twice anyway so today's",
    "start": "203799",
    "end": "209799"
  },
  {
    "text": "talk is really all about the scenario where there's a lot of organizations who",
    "start": "209799",
    "end": "214809"
  },
  {
    "text": "have jumped on this DevOps bandwagon but have found it's a lot harder than what they think and it doesn't really work",
    "start": "214809",
    "end": "220209"
  },
  {
    "text": "for them is is usually what we hear now that doesn't necessarily mean that DevOps itself is a bad idea it's usually",
    "start": "220209",
    "end": "227650"
  },
  {
    "text": "that the implementation of it is not working so well and we saw the same thing with agile when that became a",
    "start": "227650",
    "end": "232930"
  },
  {
    "text": "thing a lot of people trying out scrum and finding you know scrum doesn't work for us it's not that scrums broken it's",
    "start": "232930",
    "end": "239379"
  },
  {
    "text": "just that the implementation didn't work so well so now it's DevOps right and people are saying well we tried to do",
    "start": "239379",
    "end": "246040"
  },
  {
    "text": "DevOps but it didn't really work so today's talk is all about the most common things I see in people's DevOps",
    "start": "246040",
    "end": "253150"
  },
  {
    "text": "pipelines that makes them think that DevOps is just not working and is not for them and how to fix them how to",
    "start": "253150",
    "end": "258909"
  },
  {
    "text": "identify them and how to move forward and start getting it to work",
    "start": "258909",
    "end": "264390"
  },
  {
    "text": "so it would not be a DevOps talk if I didn't have a definition of DevOps thankfully my new boss",
    "start": "264390",
    "end": "270820"
  },
  {
    "text": "Donovan Brown has the definition of DevOps that Microsoft uses which is the union of people process and products to",
    "start": "270820",
    "end": "276460"
  },
  {
    "text": "enable continuous delivery of value to our end-users I won't dwell on that too much I think people by now kind of know what",
    "start": "276460",
    "end": "283450"
  },
  {
    "text": "DevOps is the general idea is you're delivering like real value to people who",
    "start": "283450",
    "end": "288760"
  },
  {
    "text": "are using it and that's the idea behind it in terms of an actual pipeline this",
    "start": "288760",
    "end": "293770"
  },
  {
    "text": "is kind of what I'm talking about here this there's a number of phases and it actually does move in a circle you need",
    "start": "293770",
    "end": "299230"
  },
  {
    "text": "this feedback loop rather than just requirements all the way through to production and then that's done there is",
    "start": "299230",
    "end": "305470"
  },
  {
    "text": "a feedback loop that needs to happen and the idea is basically to move through this pipeline as quickly and as safely",
    "start": "305470",
    "end": "311860"
  },
  {
    "text": "as possible I'll talk about that in a sec but as developers we don't have a",
    "start": "311860",
    "end": "317050"
  },
  {
    "text": "huge amount of control over the top two number one and number four their planning is often out of our hands",
    "start": "317050",
    "end": "324280"
  },
  {
    "text": "and monitoring and learning yes we can add some monitoring we can collect this data and things like that learning what",
    "start": "324280",
    "end": "329590"
  },
  {
    "text": "we need to do next in a lot of organizations is kind of not our job we get told what stuff to write and so on",
    "start": "329590",
    "end": "335860"
  },
  {
    "text": "so I'm going to concentrate a lot more on the bottom part of this loop but I just wanted to mention a couple of",
    "start": "335860",
    "end": "342160"
  },
  {
    "text": "things at the top because this is this is one of the big problems that people have with DevOps if they don't close",
    "start": "342160",
    "end": "347290"
  },
  {
    "text": "this loop the idea of monitoring what happens in production and then learning",
    "start": "347290",
    "end": "352390"
  },
  {
    "text": "from that is hugely beneficial from a DevOps point of view and something that a lot of companies don't do it's the way",
    "start": "352390",
    "end": "358990"
  },
  {
    "text": "you learn about you know what bugs there are what new features you should be working on and any rework that needs to",
    "start": "358990",
    "end": "365740"
  },
  {
    "text": "happen if you've ever developed a feature added it to a product and then found that people aren't really using it",
    "start": "365740",
    "end": "372760"
  },
  {
    "text": "or you're not getting any queries about it and you're wondering why it turns out it's actually really hard to discover or",
    "start": "372760",
    "end": "377919"
  },
  {
    "text": "something like that by monitoring what's happening in production you can be alerted to that much earlier than then",
    "start": "377919",
    "end": "383500"
  },
  {
    "text": "um you know if you're waiting for your customers to tell you about stuff and remember like the work that you should",
    "start": "383500",
    "end": "390729"
  },
  {
    "text": "be doing day to day fits in really nicely with this definition of DevOps it's about continuous delivery of value",
    "start": "390729",
    "end": "396250"
  },
  {
    "text": "right if you're working on brand new features that nobody really wants and I know there's a lot of software out there that",
    "start": "396250",
    "end": "401870"
  },
  {
    "text": "seems to do that they work on features that nobody asked for rather than fixing the problems they do have then you're",
    "start": "401870",
    "end": "407810"
  },
  {
    "text": "not really delivering value are you so the idea here is to actually look at what's happening in production what",
    "start": "407810",
    "end": "413960"
  },
  {
    "text": "people want what's going wrong and working on that because that's going to provide the most value so here's the",
    "start": "413960",
    "end": "419659"
  },
  {
    "text": "number one thing that I see at least in this fear of something that's going to",
    "start": "419659",
    "end": "425330"
  },
  {
    "text": "get in the way of a good DevOps process and it really just comes down to this that there is no feedback loop the",
    "start": "425330",
    "end": "431180"
  },
  {
    "text": "developers will write the task the move stuff from the left-hand column of the board to the right-hand column eventually it gets to production but",
    "start": "431180",
    "end": "437120"
  },
  {
    "text": "that's the last the devil ever see of that task right they don't know whether it succeeded from the point of view of a",
    "start": "437120",
    "end": "442729"
  },
  {
    "text": "user because there's no monitoring nobody nobody really knows whether somebody's using this new feature or not and so this is a problem to do this like",
    "start": "442729",
    "end": "452240"
  },
  {
    "text": "to fix this problem is obvious you just create a feedback loop right you add exception handling that notifies you if",
    "start": "452240",
    "end": "459020"
  },
  {
    "text": "exceptions have started climbing in production you look at feature usage are people using these features that we've",
    "start": "459020",
    "end": "464599"
  },
  {
    "text": "got in there even performance monitoring stuff like if I deploy this new feature have we suddenly like pegged the CPU and",
    "start": "464599",
    "end": "471050"
  },
  {
    "text": "something's gone wrong there's not really an excuse anymore for finding out about this stuff from your customers or",
    "start": "471050",
    "end": "476270"
  },
  {
    "text": "from your users it's something that you should be able to notice as much as",
    "start": "476270",
    "end": "481909"
  },
  {
    "text": "possible before you get to production but even if it is in production you should notice this stuff before somebody",
    "start": "481909",
    "end": "487399"
  },
  {
    "text": "comes screaming at you and I have been in those organizations where I got a page at 2:00 a.m. and somebody's yelling",
    "start": "487399",
    "end": "492560"
  },
  {
    "text": "at me over the phone rather than letting me go and fix the problem but that stuff",
    "start": "492560",
    "end": "497599"
  },
  {
    "text": "happens there's not really any excuse if you're a dotnet dev application insights for example is pretty much free like",
    "start": "497599",
    "end": "504110"
  },
  {
    "text": "once you start using it in a lot bigger volume then sure they'll make you pay for it but um sorry we will make you pay",
    "start": "504110",
    "end": "510889"
  },
  {
    "text": "for it I got used to that um I personally will make you pay for it if you start using it and then you can",
    "start": "510889",
    "end": "517430"
  },
  {
    "text": "even tee it up to like power bi and stuff like that to give you your managers nice charts about who's using",
    "start": "517430",
    "end": "522948"
  },
  {
    "text": "stuff and what the performance is and things like that outside of the Microsoft stuff as well there's a one of",
    "start": "522949",
    "end": "529160"
  },
  {
    "text": "my favorite tools use Raygun built by a team out of New Zealand as well which means I think",
    "start": "529160",
    "end": "536150"
  },
  {
    "text": "because it's out of New Zealand I think that Australia gets to claim it if it's successful how it works if you're in if",
    "start": "536150",
    "end": "543560"
  },
  {
    "text": "you're in mixed session earlier Siri log & Seek as well awesome ways of managing",
    "start": "543560",
    "end": "549710"
  },
  {
    "text": "the like exceptions and the stuff that happens in your application it's like structured logging that means that you",
    "start": "549710",
    "end": "555530"
  },
  {
    "text": "can find the information you want really really easily so all of these tools are available to you there's not really any",
    "start": "555530",
    "end": "561500"
  },
  {
    "text": "excuse for just finding out something's gone wrong because somebody gives you a call like I said I don't want to focus",
    "start": "561500",
    "end": "567890"
  },
  {
    "text": "too much on that so let's just jump back to our DevOps pipeline and we'll start talking about the stuff that we can",
    "start": "567890",
    "end": "573260"
  },
  {
    "text": "control a little bit more as developers one of the things that is important",
    "start": "573260",
    "end": "579200"
  },
  {
    "text": "about this is that it is a feedback loop and so the kind of goal of DevOps is to move as fast as we can right to get this",
    "start": "579200",
    "end": "586370"
  },
  {
    "text": "cycle time fast but safe there's kind of two guiding principles there is move",
    "start": "586370",
    "end": "591650"
  },
  {
    "text": "fast and make changes safely so in other words we want to make it really easy to",
    "start": "591650",
    "end": "598490"
  },
  {
    "text": "push good changes out to production really easy and fast to get good changes in production and anything that's bad",
    "start": "598490",
    "end": "604760"
  },
  {
    "text": "anything that causes problems or causes bugs we want this pipeline to stop it from getting to production so move fast",
    "start": "604760",
    "end": "611870"
  },
  {
    "text": "but make changes safely and not let anything bad get to production in practice from the pipeline point of view",
    "start": "611870",
    "end": "618170"
  },
  {
    "text": "this really kind of equates to automation and testing so automate everything you can so that you don't",
    "start": "618170",
    "end": "624380"
  },
  {
    "text": "have to sit there and click buttons and drag files around and queue build",
    "start": "624380",
    "end": "629480"
  },
  {
    "text": "yourself and things like that but also make sure that your pipeline is really robust so the good stuff can get",
    "start": "629480",
    "end": "635090"
  },
  {
    "text": "to production really easily and the bad stuff gets stopped before it becomes a problem so let's look at this bottom",
    "start": "635090",
    "end": "643190"
  },
  {
    "text": "part here the develop tests build and release kind of part which is what as",
    "start": "643190",
    "end": "649430"
  },
  {
    "text": "developers this is the bit that we have a lot more control over so if we can think of this part of the pipeline as a",
    "start": "649430",
    "end": "655820"
  },
  {
    "text": "bit more of a pipeline from one side to the other develop test build and release",
    "start": "655820",
    "end": "663580"
  },
  {
    "text": "now this is obviously kind of a gray area as well you want to be do testing at different points you want to release",
    "start": "663940",
    "end": "669620"
  },
  {
    "text": "to test environments do some more testing and so on I'm actually going to swap the test and build around because",
    "start": "669620",
    "end": "676430"
  },
  {
    "text": "development obviously you're going to run tests locally as well we don't really care about that from a from a",
    "start": "676430",
    "end": "681800"
  },
  {
    "text": "pipeline point of view we want to build our software and then we want to test it and make sure it works and if everything's okay then we can release it",
    "start": "681800",
    "end": "688430"
  },
  {
    "text": "to production so just to make it a little bit easier to walk through this process I'll just swap those around so",
    "start": "688430",
    "end": "694030"
  },
  {
    "text": "let's start at the start obviously which is the development part how teams work",
    "start": "694030",
    "end": "699560"
  },
  {
    "text": "and the writing the code part of it and the problems that I see in organizations",
    "start": "699560",
    "end": "705170"
  },
  {
    "text": "that feel like DevOps isn't working for them what what you can you do about that from the development point of view the",
    "start": "705170",
    "end": "712040"
  },
  {
    "text": "number one guiding principle here is that des should be writing code most of the time right in an ideal scenario they",
    "start": "712040",
    "end": "719900"
  },
  {
    "text": "should only write code you write code you commit it if there's a problem with it you find out immediately and you just",
    "start": "719900",
    "end": "726620"
  },
  {
    "text": "fix the problem so all you're doing is writing code you're not involved in the actual deployment process of dragging",
    "start": "726620",
    "end": "733970"
  },
  {
    "text": "files around you're not pulling down everyone's changes and building to create a release candidate you're not",
    "start": "733970",
    "end": "739730"
  },
  {
    "text": "you know running through manual testing processes and things like that you're hired to write code so that's what you",
    "start": "739730",
    "end": "745550"
  },
  {
    "text": "should be doing so the biggest problem that I see here in terms of something that goes wrong with pipelines is that",
    "start": "745550",
    "end": "752300"
  },
  {
    "text": "you have a pipeline that is waiting on other people to do stuff so what I mean by that is that imagine you have made a",
    "start": "752300",
    "end": "759380"
  },
  {
    "text": "change to your to your code and it works is beautiful but you still have to wait",
    "start": "759380",
    "end": "765410"
  },
  {
    "text": "for this other team who has broken the build and they just need to fix that up right I can't release this change that",
    "start": "765410",
    "end": "771620"
  },
  {
    "text": "I've just made until somebody else fixes their problem like we you're getting in each other's way and there are ways to",
    "start": "771620",
    "end": "778910"
  },
  {
    "text": "get out of each other's way right this being in each other's way and having to wait for another team to do their job",
    "start": "778910",
    "end": "785510"
  },
  {
    "text": "before you or your code can go out means that that cycle time just slows down in fact it just stops until that until that",
    "start": "785510",
    "end": "792230"
  },
  {
    "text": "happens getting out of each other's ways there's a couple of ways that you can do this and this is really where we come up with",
    "start": "792230",
    "end": "798529"
  },
  {
    "text": "branching strategies so you know having feature branches or team branches and",
    "start": "798529",
    "end": "804079"
  },
  {
    "text": "things like that it's kind of a way of getting out of each other's way if you're doing work and it's not finished",
    "start": "804079",
    "end": "810889"
  },
  {
    "text": "yet it shouldn't prevent anybody else from pushing their changes through feature flags kind of goes a little bit",
    "start": "810889",
    "end": "817970"
  },
  {
    "text": "better than this especially if you're using it in the context of like dark launches of code provided your code",
    "start": "817970",
    "end": "824750"
  },
  {
    "text": "compiles and it doesn't break any tests if it's behind a feature flag that is",
    "start": "824750",
    "end": "829850"
  },
  {
    "text": "turned off that can go all the way to production that code won't run in production which means that",
    "start": "829850",
    "end": "836290"
  },
  {
    "text": "half-finished code that's behind a feature flag that's turned off can still be deployed to get a different feature",
    "start": "836290",
    "end": "842269"
  },
  {
    "text": "out or to get a different change out and I can keep working on it until it's ready to go it's harder to do in practice safely but",
    "start": "842269",
    "end": "851060"
  },
  {
    "text": "it's definitely a really powerful thing if you can wrap all your changes in feature flags and just leave them off until you're ready to actually deploy",
    "start": "851060",
    "end": "857449"
  },
  {
    "text": "turn them on briefly make sure everything works and then just remove the old code that's a really powerful",
    "start": "857449",
    "end": "863029"
  },
  {
    "text": "way of making sure that you're staying out of the other developers way branching strategies though they can",
    "start": "863029",
    "end": "869839"
  },
  {
    "text": "come with their own problems particularly if you get to a scenario where you have what's called continuous",
    "start": "869839",
    "end": "877010"
  },
  {
    "text": "isolation so as opposed to continuous integration continuous isolation basically means that the code you're",
    "start": "877010",
    "end": "883100"
  },
  {
    "text": "working on gets further and further away from the master branch or from the main branch of your code if you're working on",
    "start": "883100",
    "end": "890449"
  },
  {
    "text": "a branch that hasn't had any merges from master for a period of weeks that merge is going to suck right getting your code",
    "start": "890449",
    "end": "898550"
  },
  {
    "text": "working with everybody else's code is the hardest part of any branching strategy the merge is the worst part",
    "start": "898550",
    "end": "904420"
  },
  {
    "text": "so continuous isolation really describes when you have these long-running branches and you really really need to",
    "start": "904420",
    "end": "910939"
  },
  {
    "text": "avoid that as much as possible trunk based development is a great way of",
    "start": "910939",
    "end": "916490"
  },
  {
    "text": "avoiding these these merge pains or at least working out what the problem is as early as possible so everybody working",
    "start": "916490",
    "end": "924019"
  },
  {
    "text": "on the same branch is a great idea if you can do it and you'd be",
    "start": "924019",
    "end": "929420"
  },
  {
    "text": "surprised how many people do this I'll show you in a sec but Microsoft the team that actually writes Visual Studio Team",
    "start": "929420",
    "end": "934970"
  },
  {
    "text": "Services basically does trunk based development and there's a lot of developers working on that but if you",
    "start": "934970",
    "end": "940850"
  },
  {
    "text": "can't do fewer like trunk based development it's a little bit hard there's too many teams working on too",
    "start": "940850",
    "end": "945980"
  },
  {
    "text": "many different things then at least to make your feature branches short-lived short that the definition of shorts",
    "start": "945980",
    "end": "953120"
  },
  {
    "text": "going to completely depend on your organization how much work happens how quickly but if you have you know one or",
    "start": "953120",
    "end": "960020"
  },
  {
    "text": "two developers who commit maybe once a day twice a day maybe you can go for weeks without the modes going to be an",
    "start": "960020",
    "end": "965420"
  },
  {
    "text": "issue if you if you have hundreds of developers committing constantly then you really want to be close to master",
    "start": "965420",
    "end": "971540"
  },
  {
    "text": "you don't want to let that stagnate get isolated for a very long period of time so short live feature branches another",
    "start": "971540",
    "end": "978830"
  },
  {
    "text": "technique I've actually seen that gets around this quite well is the idea of a what if continuous integration build in",
    "start": "978830",
    "end": "985520"
  },
  {
    "text": "other words if we're working on a branch that's fine but have a continuous integration build that means that every",
    "start": "985520",
    "end": "991400"
  },
  {
    "text": "time I commit code to that branch there's a build that merges it with master and does a compilation and",
    "start": "991400",
    "end": "997880"
  },
  {
    "text": "identifies the problems that are going to occur when we actually do that merge later for one thing if it doesn't merge",
    "start": "997880",
    "end": "1004150"
  },
  {
    "text": "automatically you know that you're going to have to do some manual stuff when you merge that later on and it's a good idea",
    "start": "1004150",
    "end": "1009190"
  },
  {
    "text": "to know that ahead of time or if code does merge perfectly but now this really",
    "start": "1009190",
    "end": "1014410"
  },
  {
    "text": "unexpected test breaks at least you know before you have to go through that process of merging particularly if",
    "start": "1014410",
    "end": "1020530"
  },
  {
    "text": "you're in a scenario where you merge your code just before you start doing a deployment which happens in a lot of",
    "start": "1020530",
    "end": "1025870"
  },
  {
    "text": "organizations so this kind of what if build is not a bad idea either now I",
    "start": "1025870",
    "end": "1031600"
  },
  {
    "text": "mentioned that Microsoft does pretty much the trunk based development this is a screenshot of the actual visual studio",
    "start": "1031600",
    "end": "1037780"
  },
  {
    "text": "team services codebase so they're using git the thing I want you to notice though is how like clean relatively",
    "start": "1037780",
    "end": "1044860"
  },
  {
    "text": "clean that that path is there's not all of these feature branches coming in from",
    "start": "1044860",
    "end": "1050140"
  },
  {
    "text": "all over the place and this is like five hours worth of commits roughly five hours worth of commits there's also",
    "start": "1050140",
    "end": "1056410"
  },
  {
    "text": "about 25 distinct people committing in this as well so it's not like you have three or four people who are",
    "start": "1056410",
    "end": "1062020"
  },
  {
    "text": "working very closely together there's teams working on very different stuff on very different code and the clashing is",
    "start": "1062020",
    "end": "1069160"
  },
  {
    "text": "not really happening because everything's more or less trunk based development now they still do pull requests they still do topic branches",
    "start": "1069160",
    "end": "1075520"
  },
  {
    "text": "they call them but they get merged into master really really quickly so the merge conflicts with a huge team are",
    "start": "1075520",
    "end": "1082000"
  },
  {
    "text": "kind of kind of gone so this is it is possible in a large organization with",
    "start": "1082000",
    "end": "1087669"
  },
  {
    "text": "kind of a large number of developers so I just want to summarize this development stage of our of our pipeline",
    "start": "1087669",
    "end": "1094480"
  },
  {
    "text": "there's a few different things that can go wrong that we see number one waiting on other people and so branching",
    "start": "1094480",
    "end": "1100840"
  },
  {
    "text": "strategies and maybe even using feature flags and things like that is a good way of getting around those problems but",
    "start": "1100840",
    "end": "1107110"
  },
  {
    "text": "with branching strategies you've got to be careful that you're not doing continuous isolation in other words you're merging really really constant",
    "start": "1107110",
    "end": "1114370"
  },
  {
    "text": "really really consistently the word the term continuous integration really means integrating your stuff with everybody",
    "start": "1114370",
    "end": "1120790"
  },
  {
    "text": "else's stuff so having a CI build that just builds on each branch individually and doesn't merge that's not continuous",
    "start": "1120790",
    "end": "1127809"
  },
  {
    "text": "integration that's continuous isolation there's actually a really good website that talks about the practicalities of",
    "start": "1127809",
    "end": "1134260"
  },
  {
    "text": "trunk post development and what that actually means in organizations as well that's worth having a look at so that's",
    "start": "1134260",
    "end": "1140530"
  },
  {
    "text": "the development stage let's move on and talk about the next part that I want to",
    "start": "1140530",
    "end": "1146530"
  },
  {
    "text": "talk about which is the build part so the number one guiding principle I think",
    "start": "1146530",
    "end": "1153250"
  },
  {
    "text": "for doing DevOps properly from a build point of view is that builds should be automatic right you shouldn't have a",
    "start": "1153250",
    "end": "1160809"
  },
  {
    "text": "person in your organization who pulls down the code does a build manually and then send it out it's kind of similar to",
    "start": "1160809",
    "end": "1168100"
  },
  {
    "text": "the previous point in that developers should be writing code they shouldn't be trying to work out how the builds going",
    "start": "1168100",
    "end": "1173770"
  },
  {
    "text": "wrong or builds working and things like that the build also gives you an opportunity to do like a first pass",
    "start": "1173770",
    "end": "1179530"
  },
  {
    "text": "filter so if your code doesn't compile having a continuous build for example",
    "start": "1179530",
    "end": "1184780"
  },
  {
    "text": "means that you know that immediately it's not going to be three weeks later when you've forgotten what the code",
    "start": "1184780",
    "end": "1190330"
  },
  {
    "text": "looks like that you work out that you've introduced a bug or you've introduced something that can prevent it from",
    "start": "1190330",
    "end": "1195350"
  },
  {
    "text": "compiling on the production server or on the sari on a build server with everybody else is everybody else's code",
    "start": "1195350",
    "end": "1201620"
  },
  {
    "text": "when it gets merged the idea of finding out these problems as early as possible is what people who talk about DevOps",
    "start": "1201620",
    "end": "1208700"
  },
  {
    "text": "talk about shift left so this is the idea that you remember our pipeline where we had developed build tests",
    "start": "1208700",
    "end": "1215510"
  },
  {
    "text": "release you want problems to be identified as far left in that pipeline as possible everybody knows that fixing",
    "start": "1215510",
    "end": "1223520"
  },
  {
    "text": "a bug while it's on your machine like while you're writing the bug fixing it then is so much cheaper than fixing it",
    "start": "1223520",
    "end": "1229220"
  },
  {
    "text": "when it's in production so shift left refers to the idea of trying to notice and fix these issues as far left in that",
    "start": "1229220",
    "end": "1236120"
  },
  {
    "text": "pipeline as you possibly can so this is what we talk about when we talk about shift left the build server gives you a",
    "start": "1236120",
    "end": "1242300"
  },
  {
    "text": "great opportunity to do that or the build phase gives you a great opportunity to do that because you can immediately tell if your code is not",
    "start": "1242300",
    "end": "1248300"
  },
  {
    "text": "going to compile and you want to know that straightaway not a week later so the biggest problem with DevOps that",
    "start": "1248300",
    "end": "1255140"
  },
  {
    "text": "people who find this this issue have is the idea where they they build locally",
    "start": "1255140",
    "end": "1261290"
  },
  {
    "text": "ready for a deployment so the biggest problem with this is that it's not",
    "start": "1261290",
    "end": "1267350"
  },
  {
    "text": "automatic so you want you want to know when the build is going to break like immediately right but you also don't",
    "start": "1267350",
    "end": "1273770"
  },
  {
    "text": "have to rely on somebody pulling down all of everybody's changes and compiling and making sure that they all work",
    "start": "1273770",
    "end": "1278840"
  },
  {
    "text": "together you really want that to happen straightaway if you're relying on a",
    "start": "1278840",
    "end": "1284030"
  },
  {
    "text": "particular person doing a build for a deployment then you're going to have to wait until that person is ready to do it",
    "start": "1284030",
    "end": "1289370"
  },
  {
    "text": "they're working on their own stuff right just before you do a deployment they're like yeah let's grab everybody's thing",
    "start": "1289370",
    "end": "1294710"
  },
  {
    "text": "we do a compile and oh there's weird stuff that's gone wrong and this often happens with these",
    "start": "1294710",
    "end": "1300170"
  },
  {
    "text": "deployments that happen on a Saturday when everybody comes into the office right you need to work out how this",
    "start": "1300170",
    "end": "1305270"
  },
  {
    "text": "stuff fits together first you want to know this straightaway so like number one the easiest thing you can do is set",
    "start": "1305270",
    "end": "1311720"
  },
  {
    "text": "up continuous integration with a build server so continuous integration is",
    "start": "1311720",
    "end": "1317990"
  },
  {
    "text": "basically every commit there's a compilation it gets merged with everybody else's changes and there's a compile you end up with an artifact at",
    "start": "1317990",
    "end": "1324470"
  },
  {
    "text": "the end of it that is your compiled application it means that you can come it and be told that you've broken the",
    "start": "1324470",
    "end": "1329779"
  },
  {
    "text": "build within a minute or two often depending on how long your build takes if you're not doing this if you don't",
    "start": "1329779",
    "end": "1337909"
  },
  {
    "text": "have a build server that's doing this this would be my number one suggestion to improve your process like there's",
    "start": "1337909",
    "end": "1344629"
  },
  {
    "text": "nothing easier to do then install a build server and then you never really need to worry about whether your code",
    "start": "1344629",
    "end": "1350600"
  },
  {
    "text": "compiles or merges with everybody else's again it will tell you straight away right when the code that you wrote is at",
    "start": "1350600",
    "end": "1356840"
  },
  {
    "text": "the forefront of your mind not a week later when you've forgotten it the good thing about this as well is",
    "start": "1356840",
    "end": "1362210"
  },
  {
    "text": "that especially if you're a dotnet developer build servers are pretty much free like teamcity unless you use it at",
    "start": "1362210",
    "end": "1369440"
  },
  {
    "text": "a particular volume again teamcity is free Visual Studio Team Services actually has a good build engine now the",
    "start": "1369440",
    "end": "1376340"
  },
  {
    "text": "old zamel one was atrocious but the new one is really good and it's free unless",
    "start": "1376340",
    "end": "1383120"
  },
  {
    "text": "you have like huge volumes going through and presumably by that point you're making enough money hopefully that you",
    "start": "1383120",
    "end": "1389539"
  },
  {
    "text": "can pay for it so you can just you can just start using this stuff um anyway so",
    "start": "1389539",
    "end": "1395960"
  },
  {
    "text": "yes build server continuous integration that'll at least get you moving fast and mean that your problems have been",
    "start": "1395960",
    "end": "1401659"
  },
  {
    "text": "shifted left the other problem that I see with this pipeline is build that",
    "start": "1401659",
    "end": "1406970"
  },
  {
    "text": "also do deployments and this is a really common strategy that people do where they have a development build or a test",
    "start": "1406970",
    "end": "1413929"
  },
  {
    "text": "build and then like a staging build which will recompile deploy to staging and then a production bill which will",
    "start": "1413929",
    "end": "1419690"
  },
  {
    "text": "recompile and deploy to production now this is dangerous because even though",
    "start": "1419690",
    "end": "1425210"
  },
  {
    "text": "you may do these compilations in a short period of time there is always the chance that something is going to be",
    "start": "1425210",
    "end": "1431000"
  },
  {
    "text": "different between them so when you deploy to your test server and you run through all your tests and then you",
    "start": "1431000",
    "end": "1437450"
  },
  {
    "text": "decide that that's all going to work and you do a staging build for example you",
    "start": "1437450",
    "end": "1442970"
  },
  {
    "text": "are now pushing different bits to staging different files they may technically be more or less the same",
    "start": "1442970",
    "end": "1449929"
  },
  {
    "text": "because nothing's changed but you can't be sure the last thing you want to do is push some bits to production that have",
    "start": "1449929",
    "end": "1456080"
  },
  {
    "text": "never been tested and that's exactly what this kind of strategy does even no matter how confident you are",
    "start": "1456080",
    "end": "1462309"
  },
  {
    "text": "there's always the chance that something is going to be different so as much as possible you want to build your application once build your binaries",
    "start": "1462309",
    "end": "1468429"
  },
  {
    "text": "once and deploy it many times so deploy it to your test environment deploy it to your staging environment deploy it to",
    "start": "1468429",
    "end": "1474670"
  },
  {
    "text": "production and so on now commonly people will say yeah it's not realistic like stuff's not really going to go wrong",
    "start": "1474670",
    "end": "1480490"
  },
  {
    "text": "like it's a build on the same build server we don't patch in between our releases stuff like that",
    "start": "1480490",
    "end": "1486670"
  },
  {
    "text": "imagine having a build that is like your test build you deploy the test run through all of your unit test all of",
    "start": "1486670",
    "end": "1492790"
  },
  {
    "text": "your integration tests everybody runs the thing it looks like it's fine so you do a new build ready to go to production",
    "start": "1492790",
    "end": "1498790"
  },
  {
    "text": "and these tests wouldn't pass anymore like there's bugs cropping up things",
    "start": "1498790",
    "end": "1504280"
  },
  {
    "text": "that worked in staging just don't work in production you only built these things like a very short period of time",
    "start": "1504280",
    "end": "1509890"
  },
  {
    "text": "like away from each other you can't figure out what's going on so this actually happened it's net four point",
    "start": "1509890",
    "end": "1516940"
  },
  {
    "text": "six the initial release of four point six introduced bugs when you did a build",
    "start": "1516940",
    "end": "1522490"
  },
  {
    "text": "with the optimized tag turned on so this is what people were doing they were doing a deployment so doing a build for",
    "start": "1522490",
    "end": "1529990"
  },
  {
    "text": "their test environment like a debug build with optimization off deploying it running through all their tests and then",
    "start": "1529990",
    "end": "1535809"
  },
  {
    "text": "rebuilding for production with the optimized flag turned on and methods",
    "start": "1535809",
    "end": "1540910"
  },
  {
    "text": "were getting like the wrong arguments passed to them in the underlying code so",
    "start": "1540910",
    "end": "1547390"
  },
  {
    "text": "if everything had been built once and then deployed many many times you would have at least seen these problems in",
    "start": "1547390",
    "end": "1554020"
  },
  {
    "text": "your test environments first and you could have dealt with it then so this was a bit of an issue this is just an",
    "start": "1554020",
    "end": "1559240"
  },
  {
    "text": "article from the register I think it's 2015 so this stuff can happen right not",
    "start": "1559240",
    "end": "1564280"
  },
  {
    "text": "to mention you know if you patch your build server then maybe the binaries are going to come out different when you compile again so is something to think",
    "start": "1564280",
    "end": "1571780"
  },
  {
    "text": "about to play one so I build ones to play many times which means that your configuration needs to be outside your",
    "start": "1571780",
    "end": "1578170"
  },
  {
    "text": "build you shouldn't need to recompile to deploy to a different environment for example the other idea is a bit more",
    "start": "1578170",
    "end": "1584920"
  },
  {
    "text": "general which is just make sure you're using the right tool for the job build servers a good at building deployment there's deployment tools that",
    "start": "1584920",
    "end": "1591730"
  },
  {
    "text": "are really good at deployment optimist to play for example is still definitely my favorite deployment tool",
    "start": "1591730",
    "end": "1598140"
  },
  {
    "text": "right you should it encourages it encourages you to do the right things things like building once and deploying",
    "start": "1598140",
    "end": "1604440"
  },
  {
    "text": "many times you don't have a new package to deploy to each environment you deploy the same package to all your environment",
    "start": "1604440",
    "end": "1610440"
  },
  {
    "text": "so the tooling can help you do this sort of stuff but you want to use the right tool for the right job come that's just",
    "start": "1610440",
    "end": "1618060"
  },
  {
    "text": "a generally good idea anyway and again pretty much free until you get to a certain level of volume octopus",
    "start": "1618060",
    "end": "1624090"
  },
  {
    "text": "certainly is release manager I think is free ish until a certain point again",
    "start": "1624090",
    "end": "1630170"
  },
  {
    "text": "same as the build tooling so from the build point of view there's a couple of things that I mentioned here things to",
    "start": "1630170",
    "end": "1637110"
  },
  {
    "text": "avoid building locally and to do that get a build server and and continuously",
    "start": "1637110",
    "end": "1643590"
  },
  {
    "text": "integrate your code right but also make sure you're avoiding continuous",
    "start": "1643590",
    "end": "1650190"
  },
  {
    "text": "isolation there so yes builds that also deploy your build",
    "start": "1650190",
    "end": "1656250"
  },
  {
    "text": "server should be building your artifacts and then use a different deployment tool to actually deploy those artifacts that",
    "start": "1656250",
    "end": "1661500"
  },
  {
    "text": "way you are testing the same bits as are going to go into production and you're deploying them the same way ideally",
    "start": "1661500",
    "end": "1667980"
  },
  {
    "text": "which I'm actually jumping ahead of myself but it means that you know that this code is going to work because we've",
    "start": "1667980",
    "end": "1673710"
  },
  {
    "text": "tested the exact same compiled assemblies that's really important",
    "start": "1673710",
    "end": "1678770"
  },
  {
    "text": "all right so testing phase so we've",
    "start": "1678770",
    "end": "1684000"
  },
  {
    "text": "we've worked out the problems with our development process getting in each other's way and slowing each other down",
    "start": "1684000",
    "end": "1689010"
  },
  {
    "text": "we've got our build engine which means that we can find out whether we've introduced problems immediately we're",
    "start": "1689010",
    "end": "1694500"
  },
  {
    "text": "building once and making sure that those binaries are going all the way through to production rather than having unexpected failures occur because we've",
    "start": "1694500",
    "end": "1701520"
  },
  {
    "text": "rebuilt everything so now we want to make this pipeline really really secure",
    "start": "1701520",
    "end": "1707340"
  },
  {
    "text": "and really robust meaning that anything that we do that's bad is just not going",
    "start": "1707340",
    "end": "1712770"
  },
  {
    "text": "to make it to production so in the test phase and this is going to seem really",
    "start": "1712770",
    "end": "1719670"
  },
  {
    "text": "weird but the test papers the number one thing is that tests should do testing right this sounds ridiculous",
    "start": "1719670",
    "end": "1726269"
  },
  {
    "text": "but it actually occurs a lot where people will write tests that don't actually do what they're supposed to do",
    "start": "1726269",
    "end": "1732139"
  },
  {
    "text": "in other words tests don't fail when something goes wrong right and you",
    "start": "1732139",
    "end": "1739739"
  },
  {
    "text": "actually see this a lot the I think the reason that you we see this a lot is",
    "start": "1739739",
    "end": "1745049"
  },
  {
    "text": "because code coverage became a big thing with testing this it might be controversial and a lot of people",
    "start": "1745049",
    "end": "1751229"
  },
  {
    "text": "probably disagree with it but I think code coverage is one of the worst things that we've done for testing point of view because not only are you not",
    "start": "1751229",
    "end": "1757799"
  },
  {
    "text": "worrying about whether this test is serving its purpose which means it fails if something is changed and it breaks",
    "start": "1757799",
    "end": "1763739"
  },
  {
    "text": "all you're worrying about is have have I exercised all of the code have I gone through it all which means that this",
    "start": "1763739",
    "end": "1769979"
  },
  {
    "text": "test here for example it's a legitimate test it will contribute to our code",
    "start": "1769979",
    "end": "1775799"
  },
  {
    "text": "coverage but it's not really testing anything if you haven't noticed that's",
    "start": "1775799",
    "end": "1781049"
  },
  {
    "text": "the assert at the end of it right so we have code coverage but if something if",
    "start": "1781049",
    "end": "1786599"
  },
  {
    "text": "we introduced a bug in this it's not going to break all right code coverage gives us the false sense",
    "start": "1786599",
    "end": "1793739"
  },
  {
    "text": "of security that we've got tests over all of our code so we don't need to worry about it anymore but if the test",
    "start": "1793739",
    "end": "1800519"
  },
  {
    "text": "is not written well then it's not actually serving a purpose and it's making us feel safe when we're",
    "start": "1800519",
    "end": "1806159"
  },
  {
    "text": "absolutely not safe so by the way this is um code from Ben Cole the guide who's",
    "start": "1806159",
    "end": "1812099"
  },
  {
    "text": "doing the beer for Thursday night I made him change the assert he's not actually doing this just in case you ever use any",
    "start": "1812099",
    "end": "1818190"
  },
  {
    "text": "of his products he does have real tests in there that do real asserts anyway",
    "start": "1818190",
    "end": "1823440"
  },
  {
    "text": "this is obviously contrived example but it's very easy to see if you go looking in a lot of companies people who are",
    "start": "1823440",
    "end": "1829709"
  },
  {
    "text": "whose tests basically amount to create some mocks and then call the thing and make sure that the thing is calling the",
    "start": "1829709",
    "end": "1836369"
  },
  {
    "text": "right functions in the money in other words create mocks and then make sure the mocks are being called that's not",
    "start": "1836369",
    "end": "1841889"
  },
  {
    "text": "really going to fail very often in a real words world scenario it's not testing what you needed to do it needed",
    "start": "1841889",
    "end": "1848549"
  },
  {
    "text": "to test one of the techniques which is really valuable in this is the idea of red green refactor everybody heard of",
    "start": "1848549",
    "end": "1855389"
  },
  {
    "text": "red green refactor yep okay most hands the general idea is that you see a by and instead of just fixing that bug",
    "start": "1855389",
    "end": "1862230"
  },
  {
    "text": "straight away you write a test first you make sure that test fails because there's a bug in it then you fix the bug",
    "start": "1862230",
    "end": "1869130"
  },
  {
    "text": "and make sure the test succeeds so it goes red you fix the bug and it goes green and then you do any refactoring",
    "start": "1869130",
    "end": "1875670"
  },
  {
    "text": "and changing things around securing the knowledge that if you break it again the test is going to go red you've seen it",
    "start": "1875670",
    "end": "1881250"
  },
  {
    "text": "go red when it when it breaks so often this is like red green refactor red red",
    "start": "1881250",
    "end": "1886890"
  },
  {
    "text": "red red red damn it revert and come back but the idea is you have the test in",
    "start": "1886890",
    "end": "1892350"
  },
  {
    "text": "place so you know when something breaks that the test is going to alert alert you to that so this is a really good",
    "start": "1892350",
    "end": "1898380"
  },
  {
    "text": "strategy test-driven development is along the same kind of lines as well where if you have a new requirement you",
    "start": "1898380",
    "end": "1903450"
  },
  {
    "text": "write the test first before you've written your code and then your brain is just verifying that you wrote the code",
    "start": "1903450",
    "end": "1909270"
  },
  {
    "text": "that you just thought you wrote you write the test first to set those expectations it will go red because you",
    "start": "1909270",
    "end": "1915300"
  },
  {
    "text": "haven't written the code yet and then you write your code to actually implement that that function and make",
    "start": "1915300",
    "end": "1920670"
  },
  {
    "text": "sure your test goes green so same idea you know that you have a test that's going to fail if something goes wrong it's serving its purpose the other thing",
    "start": "1920670",
    "end": "1928710"
  },
  {
    "text": "which you see a lot with tests is people ignoring tests as well so saying things",
    "start": "1928710",
    "end": "1935250"
  },
  {
    "text": "like oh this test actually fails in staging because we don't have this back-end database thing or something",
    "start": "1935250",
    "end": "1940860"
  },
  {
    "text": "like that just ignoring that that's a problem or saying yeah your test fails",
    "start": "1940860",
    "end": "1946770"
  },
  {
    "text": "but that doesn't matter in production because it's slightly different something like that this is a really bad habit to get into a lot of the time you",
    "start": "1946770",
    "end": "1954300"
  },
  {
    "text": "know people will comment out comment out tests as well because they're like oh this is failing at the moment it's just temporary while we're doing this stuff",
    "start": "1954300",
    "end": "1960240"
  },
  {
    "text": "I'll comment it out for the moment or even worse you just comment out the assert because then you get the code coverage but even the deployment process",
    "start": "1960240",
    "end": "1967530"
  },
  {
    "text": "as well so if something goes wrong during deployment then you want to make sure that your pipeline can handle that",
    "start": "1967530",
    "end": "1973950"
  },
  {
    "text": "and will let you know if there is a problem in the future so imagine a scenario where for example you deploy to",
    "start": "1973950",
    "end": "1980700"
  },
  {
    "text": "a staging environment but it fails halfway through because there's not enough disk space it's really common to",
    "start": "1980700",
    "end": "1986310"
  },
  {
    "text": "say well productions got tons I won't worry about that well let's just clear up some disk space run the deployment again oh yeah it worked great",
    "start": "1986310",
    "end": "1992429"
  },
  {
    "text": "and now you deployed a production it would be much better to apply those kind of red green refactor techniques to your",
    "start": "1992429",
    "end": "1998399"
  },
  {
    "text": "to your entire pipeline there so rather than just saying oh that's that's fine it's a different scenario in staging or",
    "start": "1998399",
    "end": "2005600"
  },
  {
    "text": "something you actually add something to your pipeline to check for that scenario check that there's enough disk space and",
    "start": "2005600",
    "end": "2011899"
  },
  {
    "text": "only let the thing continue if there is that way one day when production runs",
    "start": "2011899",
    "end": "2017629"
  },
  {
    "text": "out of disk space when you do the deployment you can find that out before you actually do it it's going to stop",
    "start": "2017629",
    "end": "2022700"
  },
  {
    "text": "you from making a mistake in the future the same kind of thing with integration test system test things like that don't",
    "start": "2022700",
    "end": "2028879"
  },
  {
    "text": "ignore them if something pops up and you say oh that that's not a problem in production don't worry about it no put",
    "start": "2028879",
    "end": "2035149"
  },
  {
    "text": "the add to your pipeline to make sure that if it does become a problem in production it's going to catch it before",
    "start": "2035149",
    "end": "2040669"
  },
  {
    "text": "you get there so don't ignore these tests the other",
    "start": "2040669",
    "end": "2045919"
  },
  {
    "text": "thing I see in the test scenario that that breaks DevOps a good DevOps",
    "start": "2045919",
    "end": "2051309"
  },
  {
    "text": "pipeline is the idea of extensive manual testing now are there any testers here",
    "start": "2051309",
    "end": "2057858"
  },
  {
    "text": "by the way no one okay I apologize in advance computers are better at running",
    "start": "2057859",
    "end": "2067040"
  },
  {
    "text": "through scripts than people are right so if you have testers or a test team that",
    "start": "2067040",
    "end": "2073638"
  },
  {
    "text": "needs to run through this gigantic spreadsheet of scenarios where the instructions are more or less go to this",
    "start": "2073639",
    "end": "2080480"
  },
  {
    "text": "page click on this link type in your name press ok and then go to the next",
    "start": "2080480",
    "end": "2086569"
  },
  {
    "text": "page and it should have this text on it that's a script right and if you tell a computer to do that script it's going to",
    "start": "2086569",
    "end": "2092839"
  },
  {
    "text": "do it the same way every single time people aren't as good at that as computers are so let the computers do",
    "start": "2092839",
    "end": "2100040"
  },
  {
    "text": "those scripts now the best testers that I know are the ones who are automating themselves out of this terrible part of",
    "start": "2100040",
    "end": "2107119"
  },
  {
    "text": "their job you know they're clicking around and just data entry style testing if you can automate that process as a",
    "start": "2107119",
    "end": "2113089"
  },
  {
    "text": "tester you are extremely valuable it means that you don't have to keep clicking around all the time but that",
    "start": "2113089",
    "end": "2118400"
  },
  {
    "text": "test is going to get run it'll get run faster and will get run more consistently than a human could do now",
    "start": "2118400",
    "end": "2124010"
  },
  {
    "text": "I'm not saying that that kind of clicking around exploratory testing is not valuable what I am saying",
    "start": "2124010",
    "end": "2130039"
  },
  {
    "text": "is that do those but they shouldn't block your deployment process or your DevOps process this actually works",
    "start": "2130039",
    "end": "2137390"
  },
  {
    "text": "really really well in combination with feature flags particularly from the dark launch kind of perspective if you're",
    "start": "2137390",
    "end": "2144440"
  },
  {
    "text": "writing some code you wrap it in a feature flag that's off you can continually deploy this to production",
    "start": "2144440",
    "end": "2149749"
  },
  {
    "text": "maybe you don't really know what tests need to be run at that point so your testing team can flick the flag on for",
    "start": "2149749",
    "end": "2156589"
  },
  {
    "text": "themselves do some exploratory testing find the bugs and then give it back to you before",
    "start": "2156589",
    "end": "2162019"
  },
  {
    "text": "you flick the flag on for the general public all right this is this is actually the way that the V STS the",
    "start": "2162019",
    "end": "2168589"
  },
  {
    "text": "visual studio team Services team works as well they do do a lot of testing they actually have 50,000 tests I think that",
    "start": "2168589",
    "end": "2174829"
  },
  {
    "text": "run in six minutes they do a lot of parallelism it's insane but they wrap",
    "start": "2174829",
    "end": "2181640"
  },
  {
    "text": "everything in feature flags they push it out all the way through to production through their arm through all of their",
    "start": "2181640",
    "end": "2187160"
  },
  {
    "text": "different environments and then when it's in production they're like ok we need to work out whether this actually",
    "start": "2187160",
    "end": "2192410"
  },
  {
    "text": "works let's turn it on for a very small subset of people like just our internal team do some exploratory work do some",
    "start": "2192410",
    "end": "2199099"
  },
  {
    "text": "exploratory testing are these things going wrong let's add that test to our pipeline make sure it won't go wrong",
    "start": "2199099",
    "end": "2205789"
  },
  {
    "text": "again fix the bug push it all the way through ok we're good now after that point the automated test is going to",
    "start": "2205789",
    "end": "2212359"
  },
  {
    "text": "pick up any kind of any kind of instance where that that bug comes up again",
    "start": "2212359",
    "end": "2217759"
  },
  {
    "text": "so it gives you an opportunity to do this exploratory testing work out what needs to be tested what's going to go",
    "start": "2217759",
    "end": "2223670"
  },
  {
    "text": "wrong before you actually get it in the hands of everyone so exploratory testing great but don't let it block your",
    "start": "2223670",
    "end": "2230059"
  },
  {
    "text": "process all right terrible scenario if you have developed",
    "start": "2230059",
    "end": "2235069"
  },
  {
    "text": "all of this code it's all ready to go and then you have to wait a week for the test team to go through and test",
    "start": "2235069",
    "end": "2240079"
  },
  {
    "text": "everything manually in the meantime all of your work is piling up you're forgetting what you did so when it does",
    "start": "2240079",
    "end": "2246200"
  },
  {
    "text": "go to the test team and they say there's a bug in this like I don't remember that code and then you do a get blame and",
    "start": "2246200",
    "end": "2252170"
  },
  {
    "text": "find out that it will you two weeks ago yeah anyway I may have done that once or twice",
    "start": "2252170",
    "end": "2258619"
  },
  {
    "text": "before um okay so there are a few different points here in the test phase",
    "start": "2258619",
    "end": "2264230"
  },
  {
    "text": "as well so number one which is the most important thing is that tests don't fail",
    "start": "2264230",
    "end": "2269869"
  },
  {
    "text": "when something goes wrong you really need to make sure that your tests are serving the purpose they're supposed to serve which is not code coverage so red",
    "start": "2269869",
    "end": "2277700"
  },
  {
    "text": "green refactor test-driven development is really useful for that and apply the red green refactor techniques to your",
    "start": "2277700",
    "end": "2283640"
  },
  {
    "text": "whole deployment process your your whole DevOps process if a bug gets through to",
    "start": "2283640",
    "end": "2288799"
  },
  {
    "text": "production that's not just a failure in your code that's a failure in your pipeline your pipeline should have",
    "start": "2288799",
    "end": "2295220"
  },
  {
    "text": "stopped that bug from getting the production so add something to your pipeline to prevent that from happening",
    "start": "2295220",
    "end": "2300410"
  },
  {
    "text": "again and then you don't have to worry about it from that point forward and",
    "start": "2300410",
    "end": "2305750"
  },
  {
    "text": "then finally any kind of extensive manual human driven process that stops",
    "start": "2305750",
    "end": "2311240"
  },
  {
    "text": "the deployment of your code is not going to help you from the DevOps perspective it's going to make you feel like this",
    "start": "2311240",
    "end": "2317210"
  },
  {
    "text": "isn't actually any faster than it was before and now we're just waiting all this time so this pipeline the idea is to get from",
    "start": "2317210",
    "end": "2324230"
  },
  {
    "text": "one end all the way to the other not one end halfway through and then you know then be held up by by people so I think",
    "start": "2324230",
    "end": "2331520"
  },
  {
    "text": "I've said before that a pipeline with a human step in the middle isn't the pipeline anymore it's two pipelines",
    "start": "2331520",
    "end": "2337190"
  },
  {
    "text": "joined by a dumb human alright so try and get the pipeline from end to end that's really important alright so",
    "start": "2337190",
    "end": "2347240"
  },
  {
    "text": "now we've got a pipeline that's that's testing effectively we are now at the point where we want to deploy all the",
    "start": "2347240",
    "end": "2353660"
  },
  {
    "text": "way through to production so let's talk about that this is kind of my wheelhouse I think the deployment stuff at the",
    "start": "2353660",
    "end": "2359059"
  },
  {
    "text": "moment at least so number one thing for the release phase is that your",
    "start": "2359059",
    "end": "2366140"
  },
  {
    "text": "deployments should be easy to do and very predictable in other words it shouldn't be your every six months",
    "start": "2366140",
    "end": "2373309"
  },
  {
    "text": "everybody comes in on a weekend spend 48 hours like hating each other and then",
    "start": "2373309",
    "end": "2378319"
  },
  {
    "text": "goes home at 3 a.m. on Monday morning because the deployment went horribly wrong and so on they should be really",
    "start": "2378319",
    "end": "2383869"
  },
  {
    "text": "really easy to do I'm ahead of time so I'll tell you back when I so I moved to",
    "start": "2383869",
    "end": "2390410"
  },
  {
    "text": "Canada the rest of the octopus deploy team is in Brisbane Australia where the circle was in the map there's no time zone",
    "start": "2390410",
    "end": "2397549"
  },
  {
    "text": "overlap between those like no business our time zone overlap which means I didn't really get to talk to the team",
    "start": "2397549",
    "end": "2402680"
  },
  {
    "text": "that often what that ultimately meant was that I was working on peripheral stuff I wasn't working on the main",
    "start": "2402680",
    "end": "2408680"
  },
  {
    "text": "codebase I was working on integrations with VST s and stuff like that um so I",
    "start": "2408680",
    "end": "2413809"
  },
  {
    "text": "hadn't actually pulled the latest source code down for maybe five months I woke",
    "start": "2413809",
    "end": "2421700"
  },
  {
    "text": "up one morning and there had been a new deployment a new version of octopus deploy that had gone out to production",
    "start": "2421700",
    "end": "2427520"
  },
  {
    "text": "and there was this really weird edge case where somebody was going from like four versions earlier to this current",
    "start": "2427520",
    "end": "2433760"
  },
  {
    "text": "one and it didn't work so they upgraded octopus and it wouldn't run anymore and",
    "start": "2433760",
    "end": "2439849"
  },
  {
    "text": "they've actually since fixed this problem so you can't do that anymore it'll tell you before it's too late but",
    "start": "2439849",
    "end": "2446630"
  },
  {
    "text": "it was enough of a problem for us to say well we can't let that one stand so we took that download off so nobody else",
    "start": "2446630",
    "end": "2452299"
  },
  {
    "text": "would download it keeping in mind the rest of Australia the rest of the company is asleep and I haven't touched the code for five months and I needed to",
    "start": "2452299",
    "end": "2459230"
  },
  {
    "text": "fix it so I pulled down the code from github I worked out what the problem was",
    "start": "2459230",
    "end": "2465380"
  },
  {
    "text": "and I fixed the problem and I committed the code and pushed it to github all of",
    "start": "2465380",
    "end": "2471680"
  },
  {
    "text": "the continuous integration ran all of our tests ran everything looked okay and I'm like okay let's do a release so I",
    "start": "2471680",
    "end": "2478099"
  },
  {
    "text": "went to slack which is our chat tool and I typed in a release but release octopus",
    "start": "2478099",
    "end": "2484099"
  },
  {
    "text": "deploy three point one point four or something like that and then I just waited for about 20 minutes and then",
    "start": "2484099",
    "end": "2491299"
  },
  {
    "text": "there's a new version in production I hadn't touched this code for close to six months I wasn't actually sure",
    "start": "2491299",
    "end": "2497690"
  },
  {
    "text": "whether I'd fix the problem properly like it looked fine to me or my local testing seemed okay but I was confident",
    "start": "2497690",
    "end": "2504589"
  },
  {
    "text": "enough in our pipeline to know that that if I hadn't made a mistake and something had gone badly that wouldn't make it all",
    "start": "2504589",
    "end": "2511190"
  },
  {
    "text": "the way through to production at least not worse than what was already in production um",
    "start": "2511190",
    "end": "2517120"
  },
  {
    "text": "so that pipeline was going to prevent any bad stuff from happening but the deployment itself was so easy I just",
    "start": "2517120",
    "end": "2523750"
  },
  {
    "text": "typed in a line in slack and I knew it was going to work because this process is predictable I know the deployment",
    "start": "2523750",
    "end": "2530560"
  },
  {
    "text": "does the same thing every single time and it's worked every version before now so it's going to work now",
    "start": "2530560",
    "end": "2536310"
  },
  {
    "text": "so this that was a deployment that was easy to do and really predictable that",
    "start": "2536310",
    "end": "2542080"
  },
  {
    "text": "gives you confidence it means that you can deploy more and more often and whenever you feel like deploying whenever there's something to deploy you",
    "start": "2542080",
    "end": "2548740"
  },
  {
    "text": "can just do it because it's easy the biggest problem with this once again is",
    "start": "2548740",
    "end": "2554740"
  },
  {
    "text": "that there's a human in the process so the deployments that happen where there's somebody who has to do one or",
    "start": "2554740",
    "end": "2561520"
  },
  {
    "text": "two different tasks that really really slows down your cycle time especially if",
    "start": "2561520",
    "end": "2566650"
  },
  {
    "text": "you have sign-off processes and things like that and I'm not saying that those are completely useless just that they're",
    "start": "2566650",
    "end": "2573760"
  },
  {
    "text": "not that useful I guess so you want to",
    "start": "2573760",
    "end": "2579340"
  },
  {
    "text": "take the humans out of the deployment process as much as possible right out of the whole pipeline but the deployment especially which means automating",
    "start": "2579340",
    "end": "2586810"
  },
  {
    "text": "everything right automate all your deployment and there are some pretty good deployment tools that do this work",
    "start": "2586810",
    "end": "2591940"
  },
  {
    "text": "once again octopus deploy but if you're not in a dotnet scenario there's like salt stack I don't know there's a bunch",
    "start": "2591940",
    "end": "2599260"
  },
  {
    "text": "of other ones there is there's no shortage of deployment tools and they're built for that they're built for deploying your application in an",
    "start": "2599260",
    "end": "2605350"
  },
  {
    "text": "automatic way but there are some things like sign up processes that you can't",
    "start": "2605350",
    "end": "2610360"
  },
  {
    "text": "automate you really in a lot of organizations you need a manager to if not add any value by signing something",
    "start": "2610360",
    "end": "2617950"
  },
  {
    "text": "off at least be the person who is the full guy if something goes wrong which is often what these sign off processes",
    "start": "2617950",
    "end": "2624340"
  },
  {
    "text": "are the manager will insist that they have to sign this stuff off but they have no idea what you've done they'll",
    "start": "2624340",
    "end": "2630880"
  },
  {
    "text": "basically say did everything pass did all the tests pass does it look okay you say yes and they're like okay we'll sign",
    "start": "2630880",
    "end": "2636760"
  },
  {
    "text": "the thing alright that is a process that does not need to happen right now this",
    "start": "2636760",
    "end": "2643330"
  },
  {
    "text": "actually putting this into effect is harder in a lot of organizations than just saying hey manager your job is",
    "start": "2643330",
    "end": "2649810"
  },
  {
    "text": "useless that's probably not going to get you where you need to go but at least you can optimize this process and make it",
    "start": "2649810",
    "end": "2656440"
  },
  {
    "text": "less of an issue at least speed things up for you I mentioned that I worked in",
    "start": "2656440",
    "end": "2661750"
  },
  {
    "text": "government as my first job at a university there was a occasion then when a DBA got a sequel scripts to",
    "start": "2661750",
    "end": "2669940"
  },
  {
    "text": "update the schema of the test database and he accidentally ran it against production so he ran the script against",
    "start": "2669940",
    "end": "2676420"
  },
  {
    "text": "prod which brought prod down so it took about 10 seconds to to get a production",
    "start": "2676420",
    "end": "2682300"
  },
  {
    "text": "outage it took us about 10 minutes to work out how to fix this and to give him a new sequel script to say can you run",
    "start": "2682300",
    "end": "2687490"
  },
  {
    "text": "this and it'll fix it but then it took us six hours to get all of the sign-offs necessary to make a change to production",
    "start": "2687490",
    "end": "2693730"
  },
  {
    "text": "right the reason is this the policy at the time was that for a production",
    "start": "2693730",
    "end": "2700210"
  },
  {
    "text": "deployment or production change to happen every department that could",
    "start": "2700210",
    "end": "2705640"
  },
  {
    "text": "potentially be impacted by this change needs their manager to sign off on it one of them was outta lunch another guy",
    "start": "2705640",
    "end": "2712810"
  },
  {
    "text": "wasn't there that day you know six hours of process just to undo a change that",
    "start": "2712810",
    "end": "2718720"
  },
  {
    "text": "occurred now that's not because what I mean it was because somebody made a mistake sure but that process shouldn't",
    "start": "2718720",
    "end": "2726340"
  },
  {
    "text": "need to take six hours so you really need to optimize these kind of processes the best way I've seen it done as well",
    "start": "2726340",
    "end": "2732010"
  },
  {
    "text": "is a lot of octopus customers used to just have the deploy button like on an",
    "start": "2732010",
    "end": "2738370"
  },
  {
    "text": "iPad and they would hand it to their manager and say we're ready to go and the manager will go oh sure",
    "start": "2738370",
    "end": "2743710"
  },
  {
    "text": "press the button and it's in production which is really good if he doesn't know what the button does and you're at the",
    "start": "2743710",
    "end": "2749980"
  },
  {
    "text": "pub and it's Friday afternoon which happens so optimize those processes that",
    "start": "2749980",
    "end": "2755470"
  },
  {
    "text": "require humans really work it at getting those as quick as possible the next one",
    "start": "2755470",
    "end": "2760540"
  },
  {
    "text": "with the deployment process is really the idea that production is special and you can't do your deployment to your",
    "start": "2760540",
    "end": "2766720"
  },
  {
    "text": "test environments the same as you do your deployment to production in other words yes you can continuously deploy",
    "start": "2766720",
    "end": "2772270"
  },
  {
    "text": "the tests and maybe we'll do automatic deployments to staging and stuff like that but production that's different we",
    "start": "2772270",
    "end": "2777790"
  },
  {
    "text": "all need to come in on a Saturday every six months and work for 48 hours straight to get stuff working",
    "start": "2777790",
    "end": "2783020"
  },
  {
    "text": "production should just be another environment as much as possible this is",
    "start": "2783020",
    "end": "2788960"
  },
  {
    "text": "why we have staging environments that are supposed to look exactly like production so that when we run the tests",
    "start": "2788960",
    "end": "2794090"
  },
  {
    "text": "we know that it looks the same it's probably going to work in production as well why are we not applying that to the",
    "start": "2794090",
    "end": "2800420"
  },
  {
    "text": "deployment process we have this automated process to put it in a test environment and to put it in a staging",
    "start": "2800420",
    "end": "2805580"
  },
  {
    "text": "environment but then when we deploy to production it's the first time we have ever done that with these binaries and",
    "start": "2805580",
    "end": "2811520"
  },
  {
    "text": "that's really scary the first time you ever test something should not be when you put it in production right so as",
    "start": "2811520",
    "end": "2818630"
  },
  {
    "text": "much as possible your production environment should should be the same as all the others deploying to it should",
    "start": "2818630",
    "end": "2824540"
  },
  {
    "text": "not be any harder the key to this is making sure that you have the same process for all of your environments now",
    "start": "2824540",
    "end": "2830600"
  },
  {
    "text": "again tools like octopus and a lot of the other tools make sure that or make",
    "start": "2830600",
    "end": "2835940"
  },
  {
    "text": "it really hard to not do this so you have one deployment process in octopus and you have to run through that",
    "start": "2835940",
    "end": "2842660"
  },
  {
    "text": "deployment process in all of your environments it's hard to make a different process for different environments so you want to make sure",
    "start": "2842660",
    "end": "2850490"
  },
  {
    "text": "that not only have you tested those bits because we only build once we deploy many times we've tested the bits but",
    "start": "2850490",
    "end": "2856550"
  },
  {
    "text": "we've also tested putting them on a machine so when we do it in production we are pretty confident that that is",
    "start": "2856550",
    "end": "2862070"
  },
  {
    "text": "going to work the next deployment thing that I keep seeing is the idea of kind",
    "start": "2862070",
    "end": "2867650"
  },
  {
    "text": "of patch based deployments in other words every release is a collection of",
    "start": "2867650",
    "end": "2873170"
  },
  {
    "text": "differences between the last release and the current one changed files here's for",
    "start": "2873170",
    "end": "2878420"
  },
  {
    "text": "sequel scripts that we need to run over the database in production to bring it up to speed to the latest one now this",
    "start": "2878420",
    "end": "2884300"
  },
  {
    "text": "makes for relatively difficult to reproduce deployment processes there's",
    "start": "2884300",
    "end": "2891290"
  },
  {
    "text": "so many things that can go wrong here for one thing all of your test environments need to be exactly the same",
    "start": "2891290",
    "end": "2896720"
  },
  {
    "text": "as production now so if you're running scripts the schema needs to be exactly what production looks like so iterating",
    "start": "2896720",
    "end": "2903410"
  },
  {
    "text": "really quickly make is quite difficult as well as that if something happens to",
    "start": "2903410",
    "end": "2908840"
  },
  {
    "text": "production then how do you deploy the whole thing again like production is gone now how do we how do I put it back",
    "start": "2908840",
    "end": "2916970"
  },
  {
    "text": "right it's it's exploded and all they have is the changes from the last one so the idea of patch based deployments",
    "start": "2916970",
    "end": "2923990"
  },
  {
    "text": "makes it really hard to get this repeatable process going the solution to this really is to deploy is to deploy",
    "start": "2923990",
    "end": "2931220"
  },
  {
    "text": "everything every time now that's generally well that's often not practical I know",
    "start": "2931220",
    "end": "2937660"
  },
  {
    "text": "SSW which is a consulting company I used to work for their website they kind of",
    "start": "2937660",
    "end": "2943069"
  },
  {
    "text": "had a policy of never deleting any content from their website ever for various reasons I don't know what they",
    "start": "2943069",
    "end": "2949640"
  },
  {
    "text": "are so that meant the content of their website was about a gig now if you try",
    "start": "2949640",
    "end": "2956240"
  },
  {
    "text": "to push a gig to a u.s. VM and an Australian VM every single time you want to make a change to",
    "start": "2956240",
    "end": "2962000"
  },
  {
    "text": "a page that's going to be really really slow but tooling can help you do this",
    "start": "2962000",
    "end": "2967550"
  },
  {
    "text": "so I suppose had a had a feature called Delta compression which basically means",
    "start": "2967550",
    "end": "2974240"
  },
  {
    "text": "if you have two one-gigabyte packages but they only differ by a tiny amount as long as that target machine had the",
    "start": "2974240",
    "end": "2979880"
  },
  {
    "text": "previous version you just send that tiny amount will rebuild it on the other side so the tooling can optimize this the",
    "start": "2979880",
    "end": "2986060"
  },
  {
    "text": "important thing though is that you could do that same deployment to a fresh machine or to a machine that had the",
    "start": "2986060",
    "end": "2992390"
  },
  {
    "text": "last version on it as well in practice of like database upgrades and things like that that means using tooling like",
    "start": "2992390",
    "end": "2998780"
  },
  {
    "text": "I was a reggae ready roll is one of those ones there's things like howdy be",
    "start": "2998780",
    "end": "3004780"
  },
  {
    "text": "up for migration based ones energy framework migrations is also good for that so excuse me or other tooling that",
    "start": "3004780",
    "end": "3014740"
  },
  {
    "text": "looks at the schema works out what needs to change and makes that change you can apply that to an empty database but you",
    "start": "3014740",
    "end": "3019839"
  },
  {
    "text": "can equally apply it to a database which is one version behind so making the tooling help for you so you're not",
    "start": "3019839",
    "end": "3025450"
  },
  {
    "text": "actually deploying everything every single time but you can write so the",
    "start": "3025450",
    "end": "3032319"
  },
  {
    "text": "release ones number one problem is that there's a human involved in that release process you want to automate your",
    "start": "3032319",
    "end": "3037960"
  },
  {
    "text": "deployments and optimize anything you can't automate don't treat production as a special environment it should just be",
    "start": "3037960",
    "end": "3043839"
  },
  {
    "text": "another environment it's something else you can deploy to the other advantage for not using patch",
    "start": "3043839",
    "end": "3050710"
  },
  {
    "text": "based deployments as well is that if you want to just try something you've written some changes and you want to",
    "start": "3050710",
    "end": "3056859"
  },
  {
    "text": "just give it a go on a server spin up a new machine deploy to that machine because you've got the whole deployment",
    "start": "3056859",
    "end": "3062050"
  },
  {
    "text": "process deploy to that machine test it out tear it down you're done really good for load testing as well you can spin",
    "start": "3062050",
    "end": "3068950"
  },
  {
    "text": "something up and then just hammer it and then tear it down when you're done so avoid these patch based deployments -",
    "start": "3068950",
    "end": "3075510"
  },
  {
    "text": "all right so we've gone through this develop build test and release process",
    "start": "3075510",
    "end": "3081790"
  },
  {
    "text": "and a few things on each of those that have that can cause problems and make DevOps not work I would just want to",
    "start": "3081790",
    "end": "3089470"
  },
  {
    "text": "talk about one other thing briefly which is actually implementing these changes or implementing DevOps or doing DevOps",
    "start": "3089470",
    "end": "3096119"
  },
  {
    "text": "the idea of the talk was really just that you know people are saying well we",
    "start": "3096119",
    "end": "3101950"
  },
  {
    "text": "tried to do DevOps it didn't really work for us a lot of the time that's because they went and tried to do it all in one",
    "start": "3101950",
    "end": "3108760"
  },
  {
    "text": "hit in other words they did their DevOps implementation in one go everybody",
    "start": "3108760",
    "end": "3115450"
  },
  {
    "text": "stopped writing code now and we're going to do DevOps for a month and then we can start writing features again we learned",
    "start": "3115450",
    "end": "3122680"
  },
  {
    "text": "like a while ago back when agile became a thing that big bang like",
    "start": "3122680",
    "end": "3128080"
  },
  {
    "text": "implementations of anything doesn't work so why would we do it when we're applying these new principles and these",
    "start": "3128080",
    "end": "3134589"
  },
  {
    "text": "new ideas to the way we work we shouldn't we should really identify like",
    "start": "3134589",
    "end": "3139599"
  },
  {
    "text": "one problem at a time what is the hardest thing right now that we are that we have implement a fix for that",
    "start": "3139599",
    "end": "3145980"
  },
  {
    "text": "automate a certain part of the problem and then move on to the next one so",
    "start": "3145980",
    "end": "3151990"
  },
  {
    "text": "iterate continuously look at whether stuff is working for you and if it's not fix it and then move on to the next",
    "start": "3151990",
    "end": "3158320"
  },
  {
    "text": "thing the important thing here though is that you need to expect to fail pretty",
    "start": "3158320",
    "end": "3163750"
  },
  {
    "text": "regularly right you can't just implement DevOps and then that silver bullet now means that you never have to worry about",
    "start": "3163750",
    "end": "3170320"
  },
  {
    "text": "how stuff works anymore that just is not practical right you need to expect to",
    "start": "3170320",
    "end": "3175540"
  },
  {
    "text": "fail there's actually a really good report that comes out every year done by",
    "start": "3175540",
    "end": "3182290"
  },
  {
    "text": "an organization called Dora which is oops well I'm going to I'm going to get this wrong DevOps research and analysis",
    "start": "3182290",
    "end": "3188980"
  },
  {
    "text": "group run by a woman named Nicole Falls grin as well as jazz humble who you may",
    "start": "3188980",
    "end": "3195609"
  },
  {
    "text": "know wrote the continuous delivery book and another guy whose name has just",
    "start": "3195609",
    "end": "3202930"
  },
  {
    "text": "escaped me who wrote the Phoenix project said he would he remember Jean Kim that",
    "start": "3202930",
    "end": "3208119"
  },
  {
    "text": "was one Thank You Jean Kim they put out this report on the state of DevOps in",
    "start": "3208119",
    "end": "3213660"
  },
  {
    "text": "different organizations and basically they classify all the different organizations they interview about",
    "start": "3213660",
    "end": "3219690"
  },
  {
    "text": "27,000 organizations and they classify them in terms of how mature their DevOps",
    "start": "3219690",
    "end": "3225280"
  },
  {
    "text": "process is usually based on things like how often they deploy or how quickly",
    "start": "3225280",
    "end": "3231010"
  },
  {
    "text": "they can deploy their cycle time things like that but various other metrics and they classify them into low medium and",
    "start": "3231010",
    "end": "3237130"
  },
  {
    "text": "high performers what they actually found in the 2016 state of DevOps report was",
    "start": "3237130",
    "end": "3242470"
  },
  {
    "text": "that as you move from a load performer to a high performer the medium",
    "start": "3242470",
    "end": "3247690"
  },
  {
    "text": "performers actually have more more are change failures so changes they introduce fail more often than high",
    "start": "3247690",
    "end": "3254650"
  },
  {
    "text": "performers and even low performers which basically means as you're starting to go",
    "start": "3254650",
    "end": "3259810"
  },
  {
    "text": "as you're starting to do DevOps better it's going to get worse before it gets better so you need to expect to fail now",
    "start": "3259810",
    "end": "3267790"
  },
  {
    "text": "the 2017 state of DevOps report actually came out about a week ago I think the",
    "start": "3267790",
    "end": "3274090"
  },
  {
    "text": "reason I'm using the 2016 state of DevOps report is because it paints this picture the 2017 one actually does this",
    "start": "3274090",
    "end": "3279730"
  },
  {
    "text": "so but the point is it's not always that easy to get to get this stuff working",
    "start": "3279730",
    "end": "3285760"
  },
  {
    "text": "properly you need to expect failure I think the reason for this is probably just that our understanding of how to do",
    "start": "3285760",
    "end": "3291070"
  },
  {
    "text": "things more effectively is better now and the tooling probably stops us from",
    "start": "3291070",
    "end": "3296109"
  },
  {
    "text": "making the mistakes that people used to make so expect to fail but it's not as bad as a better story as as you as it",
    "start": "3296109",
    "end": "3303580"
  },
  {
    "text": "has been in the past all right let's just quickly jump back to our devops pipeline we kind of talked about all of",
    "start": "3303580",
    "end": "3311770"
  },
  {
    "text": "these sections in differing amounts particularly the ones at the bottom that developers have a lot of control",
    "start": "3311770",
    "end": "3317800"
  },
  {
    "text": "/ and there's a lot of different areas where the things can go wrong and make",
    "start": "3317800",
    "end": "3323620"
  },
  {
    "text": "you feel like DevOps just isn't working for us right from the feedback loop that we have all the way through development",
    "start": "3323620",
    "end": "3329740"
  },
  {
    "text": "build testing and the release cycle as well and even the implementation of it",
    "start": "3329740",
    "end": "3334890"
  },
  {
    "text": "the companies that say right we're going to do DevOps today let's do the whole thing and then it just doesn't work",
    "start": "3334890",
    "end": "3340750"
  },
  {
    "text": "often it doesn't work and you feel like it's not not going to work in this organization you're just going to",
    "start": "3340750",
    "end": "3346570"
  },
  {
    "text": "abandon it and go back to the way that things were right so there's all of these different things that I would encourage you to look out for and",
    "start": "3346570",
    "end": "3353190"
  },
  {
    "text": "hopefully if you can make some of these changes and notice these things happening in your organization you can",
    "start": "3353190",
    "end": "3360070"
  },
  {
    "text": "start fixing the problems before they become too much of an issue and start doing DevOps a little bit better and",
    "start": "3360070",
    "end": "3366090"
  },
  {
    "text": "that is all ahead thank you very much",
    "start": "3366090",
    "end": "3370650"
  },
  {
    "text": "now I think we have about five minutes if there are questions so right maybe",
    "start": "3372990",
    "end": "3379150"
  },
  {
    "text": "kind of make sure by the way if you're on your way up make sure you do the feedback it's really really valuable not",
    "start": "3379150",
    "end": "3384850"
  },
  {
    "text": "just for the speakers but for the organizers if you're confused just grab a green one put it in instead of a red",
    "start": "3384850",
    "end": "3391450"
  },
  {
    "text": "you could just grab a stack of greens and put them in as well yeah are there any questions yeah",
    "start": "3391450",
    "end": "3398550"
  },
  {
    "text": "so so the question paraphrase I think is what's my opinion on differentiated CI",
    "start": "3408960",
    "end": "3415450"
  },
  {
    "text": "builds from the production builds I don't have a problem with that at all I think your CI build should really just",
    "start": "3415450",
    "end": "3421300"
  },
  {
    "text": "be a first pass does everything compile do our unit tests run that one should be fast especially if you have a lot of",
    "start": "3421300",
    "end": "3427720"
  },
  {
    "text": "developers developing like writing code against it as long as you know if you",
    "start": "3427720",
    "end": "3433930"
  },
  {
    "text": "introduce a compile error or something that emerge is going to break you need to know about that as early as possible",
    "start": "3433930",
    "end": "3439600"
  },
  {
    "text": "if your CI build is going to take four hours it's not really going to let you",
    "start": "3439600",
    "end": "3444760"
  },
  {
    "text": "know as early as possible so CI build that does really really fast basic ones",
    "start": "3444760",
    "end": "3449830"
  },
  {
    "text": "we just run some run just running some unit tests and then a separate build that you do to create a release",
    "start": "3449830",
    "end": "3455500"
  },
  {
    "text": "candidate I don't have a problem with that at all as long as your release candidate build is going to pick some pickup problems as well right if your CI",
    "start": "3455500",
    "end": "3463300"
  },
  {
    "text": "build is just kind of your first pass then you have a separate build to do a production ready release in fact even",
    "start": "3463300",
    "end": "3468550"
  },
  {
    "text": "having one in the middle that does like a nightly release isn't a bad idea either it does some more work I don't",
    "start": "3468550",
    "end": "3473680"
  },
  {
    "text": "have a problem with that at all I think it's a good idea yeah any other questions the difficulty with this room",
    "start": "3473680",
    "end": "3479050"
  },
  {
    "text": "is that there's two lights here and so I can't see anything which is kind of good because I'm just assuming that it's",
    "start": "3479050",
    "end": "3484210"
  },
  {
    "text": "completely packed any other questions we go yeah I'll go here first",
    "start": "3484210",
    "end": "3494310"
  },
  {
    "text": "so how do you sell the business on implementing these principles I actually",
    "start": "3495980",
    "end": "3501270"
  },
  {
    "text": "did a talk on that about a week ago called something like doing DevOps as a",
    "start": "3501270",
    "end": "3507809"
  },
  {
    "text": "politically powerless developer there's a lot of different ways you can do it I",
    "start": "3507809",
    "end": "3513539"
  },
  {
    "text": "think number one would be trying to make it very clear to the management that they are the bottleneck so the CIA tools",
    "start": "3513539",
    "end": "3520319"
  },
  {
    "text": "and things like that you can probably install them on your local machine it still does a CI build you can still",
    "start": "3520319",
    "end": "3525990"
  },
  {
    "text": "notice things are ready to go you've put octopus on your local machine it's not ideal obviously but if you can if you",
    "start": "3525990",
    "end": "3532829"
  },
  {
    "text": "can put yourself in a scenario where your manager says hey I want to make this change you bright the code in like 20 minutes or an hour or something like",
    "start": "3532829",
    "end": "3539010"
  },
  {
    "text": "that and then have it running in a test environment say hey try this URL does it work and the manager goes yes great",
    "start": "3539010",
    "end": "3545369"
  },
  {
    "text": "that's good how long can we how long until we can put that in production and you're like well based on our current process it's six weeks it's going to",
    "start": "3545369",
    "end": "3552329"
  },
  {
    "text": "become pretty clear to management that they are the bottleneck not the developers right I think it's just a",
    "start": "3552329",
    "end": "3557549"
  },
  {
    "text": "matter of pushing pushing this stuff and keep just keep churning away at it until",
    "start": "3557549",
    "end": "3563579"
  },
  {
    "text": "they notice that that's the case the other thing is the change in organizations really often comes from a",
    "start": "3563579",
    "end": "3570349"
  },
  {
    "text": "analysis and then an acknowledgement that something's wrong and then some adjustment so this like analysis and",
    "start": "3570349",
    "end": "3576420"
  },
  {
    "text": "acknowledgement adjustment phase you can do a lot about the analysis stuff if you",
    "start": "3576420",
    "end": "3581460"
  },
  {
    "text": "can measure the mean time to push something out and say to your manager here's how long it took to put a",
    "start": "3581460",
    "end": "3587730"
  },
  {
    "text": "production build in production and most of that was waiting for sign-off waiting",
    "start": "3587730",
    "end": "3592859"
  },
  {
    "text": "for the test team waiting for all of this stuff there are better ways to do this can we talk about that I think but",
    "start": "3592859",
    "end": "3599789"
  },
  {
    "text": "it is a hard problem like that's the people problem which IT people are not generally that good at I think but yeah",
    "start": "3599789",
    "end": "3605760"
  },
  {
    "text": "make them feel like they're the bottleneck and then give them give them data to prove that this is not working",
    "start": "3605760",
    "end": "3612690"
  },
  {
    "text": "very well I think of the two - I would recommend and there was a question there",
    "start": "3612690",
    "end": "3618260"
  },
  {
    "text": "that was the exact question cool would you like me to answer it again no okay was there somebody up there nope",
    "start": "3618260",
    "end": "3626820"
  },
  {
    "text": "cool I will be hanging around here after this if you want to have a chat a bit more privately as well but if that's",
    "start": "3626820",
    "end": "3632010"
  },
  {
    "text": "everything thank you very much",
    "start": "3632010",
    "end": "3635300"
  }
]