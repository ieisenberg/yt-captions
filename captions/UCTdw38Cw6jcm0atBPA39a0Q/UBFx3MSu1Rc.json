[
  {
    "text": "good hi welcome",
    "start": "8400",
    "end": "12000"
  },
  {
    "text": "are you alive [Laughter] [Applause] hi welcome",
    "start": "13759",
    "end": "20080"
  },
  {
    "text": "[Applause] [Music] okay let's try this how many of you are building",
    "start": "20080",
    "end": "25680"
  },
  {
    "text": "browser-based uis okay how many of you are using regular",
    "start": "25680",
    "end": "31679"
  },
  {
    "text": "javascript for that i don't believe you",
    "start": "31679",
    "end": "37200"
  },
  {
    "text": "and how many of you are using binary javascript it's called webassembly a couple of you as well okay",
    "start": "37520",
    "end": "45839"
  },
  {
    "text": "so to be you know full disclosure i don't care about uis at all",
    "start": "46160",
    "end": "51600"
  },
  {
    "text": "i never had the urge to write a user interface i was always a server guy",
    "start": "51600",
    "end": "59359"
  },
  {
    "text": "where the world is so much you know easier and peaceful than in the browser",
    "start": "59359",
    "end": "65760"
  },
  {
    "text": "but we have customers of course which are doing these types of applications and for the last you know 10 years",
    "start": "65840",
    "end": "71360"
  },
  {
    "text": "uh you know like we helped them building these types of applications and uh you know it",
    "start": "71360",
    "end": "77119"
  },
  {
    "text": "i really felt bad for them because so many times the other that the guidance has changed from do this and do not do",
    "start": "77119",
    "end": "83920"
  },
  {
    "text": "this and then it was the opposite around like you you have to do this but don't do this anymore right um",
    "start": "83920",
    "end": "90000"
  },
  {
    "text": "so you know as i said many times the things have changed and um",
    "start": "90000",
    "end": "96079"
  },
  {
    "text": "i hope i really hope we are now at a point where kind of like we we find a",
    "start": "96079",
    "end": "101520"
  },
  {
    "text": "good middle ground of how to build these applications both from a ux point of view and from a",
    "start": "101520",
    "end": "107600"
  },
  {
    "text": "security point of view and of course i only care about the security part um but but still you know like we need to",
    "start": "107600",
    "end": "113119"
  },
  {
    "text": "satisfy um both yeah so",
    "start": "113119",
    "end": "118479"
  },
  {
    "text": "um my name is dominic i do security for a living",
    "start": "118479",
    "end": "123600"
  },
  {
    "text": "and if you want to contact me here on my contact details and there's also the slides the slides of today's talk are",
    "start": "123600",
    "end": "130479"
  },
  {
    "text": "also on um uploaded to speaker deck so if you want to have them just just grab them from there",
    "start": "130479",
    "end": "138480"
  },
  {
    "text": "good so what's our agenda um i basically want to go back in time a",
    "start": "138480",
    "end": "143599"
  },
  {
    "text": "little bit and look at some history how we build browser-based applications um",
    "start": "143599",
    "end": "149360"
  },
  {
    "text": "you know and depending you know and that might you know have having a look how things have changed over time and you",
    "start": "149360",
    "end": "155760"
  },
  {
    "text": "might be even you know like in one era or the other or might be stuck even and can't upgrade or maybe you haven't",
    "start": "155760",
    "end": "161920"
  },
  {
    "text": "started yet and and and can then realize okay that's not how we do it anymore right so that's kind of the idea of the",
    "start": "161920",
    "end": "167440"
  },
  {
    "text": "first part of the talk to look a little bit back in time how things have been done and what are the",
    "start": "167440",
    "end": "173760"
  },
  {
    "text": "issues with these approaches yeah and then once we have that we're going to look at basically the current best",
    "start": "173760",
    "end": "181120"
  },
  {
    "text": "practice right which is the this thing called back-end for front-end pattern and there are a couple of variations of",
    "start": "181120",
    "end": "187120"
  },
  {
    "text": "that even um already um and we're gonna look at these two and then",
    "start": "187120",
    "end": "194080"
  },
  {
    "text": "at the end i'm gonna show you how you could build your own yeah because actually all the building blocks are there you just need to put them together",
    "start": "194080",
    "end": "200480"
  },
  {
    "text": "in the right order before we start i want to set the scene yeah um a couple of a couple of months",
    "start": "200480",
    "end": "208000"
  },
  {
    "text": "ago a blog post i've written in 2019 made it oh 2020 made it to hacker news",
    "start": "208000",
    "end": "215599"
  },
  {
    "text": "okay and i got like basically shredded to pieces uh on on hacker news uh",
    "start": "215599",
    "end": "220640"
  },
  {
    "text": "because apparently people only read the headline and not the second line but he said i get it was kind of a joke yeah",
    "start": "220640",
    "end": "226480"
  },
  {
    "text": "but but uh yeah they said like oh this guy says spas are dead he's so wrong yeah um",
    "start": "226480",
    "end": "232080"
  },
  {
    "text": "but what i was alluding to in this blog post is that there are up that there are browser changes already present and",
    "start": "232080",
    "end": "237760"
  },
  {
    "text": "coming up that make it harder and harder to write a traditional spa yeah and what this really was was a continuation of an",
    "start": "237760",
    "end": "244799"
  },
  {
    "text": "older blog post i wrote in 2019 where i was researching an alternative way to",
    "start": "244799",
    "end": "251360"
  },
  {
    "text": "secure spas and by the way um whenever i say spa that also includes blazer yeah",
    "start": "251360",
    "end": "257359"
  },
  {
    "text": "if you're here for the blazer part the rules are exactly the same it's code running in your browser just you know",
    "start": "257359",
    "end": "264400"
  },
  {
    "text": "it looks a little bit different so um",
    "start": "264400",
    "end": "269840"
  },
  {
    "text": "but the one good piece of feedback i got was that yeah i mean there are so many",
    "start": "269840",
    "end": "275280"
  },
  {
    "text": "different types of reasons why you want to write a browser-based application and all i was talking about was how they are",
    "start": "275280",
    "end": "282479"
  },
  {
    "text": "becoming less and less useful for the types of customers i have and the types of applications they are writing yeah",
    "start": "282479",
    "end": "289199"
  },
  {
    "text": "and that is you know boring business applications i guess yeah",
    "start": "289199",
    "end": "295120"
  },
  {
    "text": "business applications where the front end runs in the browser you are having an authentication system you want to connect to for you know single sign-on",
    "start": "295120",
    "end": "302720"
  },
  {
    "text": "federation all of these things and you want to call apis from within that front-end typically using oauth right so",
    "start": "302720",
    "end": "310639"
  },
  {
    "text": "that's the the that's where i live basically and that's what i meant with spas are dead",
    "start": "310639",
    "end": "316080"
  },
  {
    "text": "when it comes to this type of architecture yeah i totally agree that there are other types of spas out",
    "start": "316080",
    "end": "322240"
  },
  {
    "text": "there which don't have these things and they might not be affected by what i'm saying uh now",
    "start": "322240",
    "end": "327919"
  },
  {
    "text": "or maybe they are good so let's start with um",
    "start": "327919",
    "end": "333120"
  },
  {
    "text": "way back in time right um you basically let's say you had an asp.net webforms application or something like this right",
    "start": "333120",
    "end": "340080"
  },
  {
    "text": "and at some point the industry trend was this new thing called ajax style right",
    "start": "340080",
    "end": "347600"
  },
  {
    "text": "i can literally remember microsoft demos on stage with the ajax control toolkit right they press the",
    "start": "347600",
    "end": "353919"
  },
  {
    "text": "button said look no flickering isn't that great yeah um you know",
    "start": "353919",
    "end": "359840"
  },
  {
    "text": "it was great um they started shipping jquery with the product right so that people can do",
    "start": "359840",
    "end": "365919"
  },
  {
    "text": "their own no flickering web applications yeah um and the nice part was it just",
    "start": "365919",
    "end": "372000"
  },
  {
    "text": "worked right you just wrote a little bit of javascript you called an api and by the way browsers work by the time you",
    "start": "372000",
    "end": "378720"
  },
  {
    "text": "know basically you use cookie-based authentication the cookies were just flowing back to your back-end there was no extra code to write for the security",
    "start": "378720",
    "end": "385680"
  },
  {
    "text": "it just worked until cross-site request for tree was discovered",
    "start": "385680",
    "end": "391280"
  },
  {
    "text": "yeah and cross-site request forgery is um basically um",
    "start": "391280",
    "end": "396560"
  },
  {
    "text": "a nice hack right so the idea is basically you have your browser right and think of the browser as an operating",
    "start": "396560",
    "end": "402720"
  },
  {
    "text": "system running multiple applications uh some of them are trusted some of them are not trusted right and you go to your",
    "start": "402720",
    "end": "409120"
  },
  {
    "text": "trusted application you know app.com whatever you login the browser sends you an authentication",
    "start": "409120",
    "end": "415440"
  },
  {
    "text": "cookie and from that point on when your application makes ajax calls or postbacks the cookie just flows back to the server",
    "start": "415440",
    "end": "422000"
  },
  {
    "text": "and all is good yeah but now let's say you're opening another tab in the browser and you go to evil.com right and",
    "start": "422000",
    "end": "428000"
  },
  {
    "text": "evil.com starts now making http calls to your real application right and the way",
    "start": "428000",
    "end": "434240"
  },
  {
    "text": "that browsers work is they say like oh go i got a cookie from app.com and this application is making a call to app.com",
    "start": "434240",
    "end": "440880"
  },
  {
    "text": "let's just send that cookie along right and what that essentially means is that the evil",
    "start": "440880",
    "end": "446880"
  },
  {
    "text": "application can now make network calls to the other application impersonating the currently locked on user in the",
    "start": "446880",
    "end": "452400"
  },
  {
    "text": "other tab that's cross-site request forgery yeah amazon was funnily enough one of the first companies got hit by",
    "start": "452400",
    "end": "458800"
  },
  {
    "text": "that you remember the one click buy button where you basically had a link you clicked the link you bought a book",
    "start": "458800",
    "end": "464800"
  },
  {
    "text": "right that used the fact that there was an existing cookie session going on in the browser so if i would now bring up",
    "start": "464800",
    "end": "471919"
  },
  {
    "text": "some website have an image tag on the website set the source to the one click buy button link you come to the website",
    "start": "471919",
    "end": "477199"
  },
  {
    "text": "you are logged onto amazon you buy my book right fun um so",
    "start": "477199",
    "end": "483280"
  },
  {
    "text": "i always have people in the room saying like this can't be true if that would be true the whole web",
    "start": "483280",
    "end": "489039"
  },
  {
    "text": "would be broken and yeah you're probably not wrong um so what i have here is it's a simple",
    "start": "489039",
    "end": "495360"
  },
  {
    "text": "app right um i'm logging into this app nothing special right i'm logged in i'm you know just set the cookie and then",
    "start": "495360",
    "end": "501599"
  },
  {
    "text": "i'm doing work as alice yeah and now i have another app here which is called",
    "start": "501599",
    "end": "507199"
  },
  {
    "text": "the evil app yeah and let's bring this up and see what it does",
    "start": "507199",
    "end": "512719"
  },
  {
    "text": "i mean who could resist right um let's have a look what evil app is",
    "start": "512719",
    "end": "519440"
  },
  {
    "text": "actually doing you see here here's my click here and what it does is it basically does a",
    "start": "519440",
    "end": "525680"
  },
  {
    "text": "cross site post to another application which is my app running in the other tab",
    "start": "525680",
    "end": "530880"
  },
  {
    "text": "of the browser and you know there's not even javascript necessary for that i'm just making the user click a button i'm",
    "start": "530880",
    "end": "537040"
  },
  {
    "text": "contacting an endpoint on the other application and of course when i'm doing that i'm doing work as alice just evil work",
    "start": "537040",
    "end": "544399"
  },
  {
    "text": "now and you can imagine this this post back could be automated with javascript could be even in a hidden iframe right",
    "start": "544399",
    "end": "550240"
  },
  {
    "text": "there all kinds of things you could do here that's cross-site request forgery",
    "start": "550240",
    "end": "557360"
  },
  {
    "text": "so how can we protect against this this mitigation technique is pretty much",
    "start": "558240",
    "end": "563680"
  },
  {
    "text": "known to everyone and that the reason for that is because microsoft put it pretty much into every template since",
    "start": "563680",
    "end": "569279"
  },
  {
    "text": "they released nbc it's called anti-forgery protection right and the idea is basically when you are rendering",
    "start": "569279",
    "end": "575120"
  },
  {
    "text": "down your form you are setting a special cookie called the anti-forgery cookie and you're setting a hidden input field",
    "start": "575120",
    "end": "582000"
  },
  {
    "text": "on the form and the values of the two are the same okay and when",
    "start": "582000",
    "end": "587680"
  },
  {
    "text": "the page posts back to the server there's a filter running the validate anti-forgery token filter who then looks",
    "start": "587680",
    "end": "594399"
  },
  {
    "text": "at the cookie looks at the hidden field and if they match all is good right that was pretty much automatic yeah",
    "start": "594399",
    "end": "601760"
  },
  {
    "text": "for api calls this wasn't automatic because you're not doing postbacks right and i i've done lots and lots of code",
    "start": "601760",
    "end": "608240"
  },
  {
    "text": "reviews in my life where uh all you know like they had the anti-forgery protection for the forms but they didn't",
    "start": "608240",
    "end": "613920"
  },
  {
    "text": "have it for the hx calls because it meant things doing like getting their verification token from from the form",
    "start": "613920",
    "end": "620399"
  },
  {
    "text": "setting it on a header manually posting it to the server writing some custom code in the server",
    "start": "620399",
    "end": "626000"
  },
  {
    "text": "and so on yeah so that's that's the cesa of problem yeah and when we go to our",
    "start": "626000",
    "end": "632480"
  },
  {
    "text": "uh controller here right our home controller um and i would put in the",
    "start": "632480",
    "end": "638880"
  },
  {
    "text": "validate and defautory um attribute here",
    "start": "638880",
    "end": "646760"
  },
  {
    "text": "and would run this again and would go to uh",
    "start": "647360",
    "end": "653120"
  },
  {
    "text": "evil app i guess it wouldn't work anymore right so that was an easy fix um but as i said only",
    "start": "653600",
    "end": "662079"
  },
  {
    "text": "only it was only either this because it was built into asp.net the ajax call protection was never built",
    "start": "662079",
    "end": "668800"
  },
  {
    "text": "into asp.net and actually most people many people i i spoke to didn't even know about this problem",
    "start": "668800",
    "end": "675120"
  },
  {
    "text": "so that is real okay",
    "start": "675120",
    "end": "680640"
  },
  {
    "text": "so that's the cookie era yeah um",
    "start": "680640",
    "end": "685760"
  },
  {
    "text": "with all of these problems with these sea surf attacks and so on and other ways how to exploit cookies um the ietf",
    "start": "686160",
    "end": "693600"
  },
  {
    "text": "picked up the problem back in 2008 9 something like this and um",
    "start": "693600",
    "end": "700320"
  },
  {
    "text": "and said like okay how how about we get rid of cookies and we are um exchanging with with tokens with oauth tokens right",
    "start": "700320",
    "end": "707279"
  },
  {
    "text": "so instead of sending the cookie to the api endpoint we are sending the token to the api endpoint and the big difference",
    "start": "707279",
    "end": "713360"
  },
  {
    "text": "is that the token does not get sent automatically you have to do extra work for that and the browser is not involved",
    "start": "713360",
    "end": "719760"
  },
  {
    "text": "with this so the c-serve problem goes um away right",
    "start": "719760",
    "end": "726399"
  },
  {
    "text": "so funny side story if you go back to history in the ietf you can read all of the communication and when somebody in",
    "start": "726399",
    "end": "732560"
  },
  {
    "text": "2008 or so said like maybe we should in introduce an overflow for javascript",
    "start": "732560",
    "end": "738399"
  },
  {
    "text": "applications the first answer was why would you ever write an application with javascript right",
    "start": "738399",
    "end": "745200"
  },
  {
    "text": "so times have changed um so they said okay let's do this",
    "start": "745200",
    "end": "750800"
  },
  {
    "text": "but again going back 10 years in time they had to find a way to get a token",
    "start": "750800",
    "end": "756240"
  },
  {
    "text": "from a server that purely and only uh involved browser redirects because there",
    "start": "756240",
    "end": "762399"
  },
  {
    "text": "was no cross-origin hx calls by the time that they didn't work right so they made",
    "start": "762399",
    "end": "767440"
  },
  {
    "text": "a lot of security compromises and came up with this thing called the implicit flow okay",
    "start": "767440",
    "end": "773440"
  },
  {
    "text": "that one is deprecated by now for good um but the way the implicit flow worked is the browser makes a redirect to the",
    "start": "773440",
    "end": "780000"
  },
  {
    "text": "token server requests the token the token server sends the token back on the url right then the javascript has to",
    "start": "780000",
    "end": "786800"
  },
  {
    "text": "store the token in the browser and then it can start calling apis",
    "start": "786800",
    "end": "792800"
  },
  {
    "text": "now the issue with this approach was um well store you know transmitting secrets",
    "start": "793040",
    "end": "800720"
  },
  {
    "text": "over a url was never a good idea yeah there are so many ways how you can leak that data right log files proxies",
    "start": "800720",
    "end": "808880"
  },
  {
    "text": "browser history right or just plain implementation errors and",
    "start": "808880",
    "end": "814399"
  },
  {
    "text": "that's why this this flow by now is heavily discouraged and soon will be",
    "start": "814399",
    "end": "820720"
  },
  {
    "text": "removed from the oauths back all to x all together with the new revision with oauth 2.1 now",
    "start": "820720",
    "end": "826639"
  },
  {
    "text": "so now fast forwarding to 2020 whatever they said like okay uh we have solved",
    "start": "826639",
    "end": "832880"
  },
  {
    "text": "the cross origin ajax problem we can now make ajax calls to get the token and we don't have to have to store it on the",
    "start": "832880",
    "end": "839360"
  },
  {
    "text": "url right so they then the intermediary guidance was don't use implicit flow anymore don't use",
    "start": "839360",
    "end": "846000"
  },
  {
    "text": "cookies anymore use the authorization code flowing over yeah and the way the authorization code flowing over works is",
    "start": "846000",
    "end": "852560"
  },
  {
    "text": "that the browser makes the redirect to the offer to the authorization server and then collects the so-called",
    "start": "852560",
    "end": "857839"
  },
  {
    "text": "authorization code which is just an artifact that is on its own not sensitive and then the javascript makes",
    "start": "857839",
    "end": "864000"
  },
  {
    "text": "an ajax call to the token endpoint and retrieves the data so to speak on the back channel right problem solved right",
    "start": "864000",
    "end": "870800"
  },
  {
    "text": "the url is clean now all good um [Music] let me show you",
    "start": "870800",
    "end": "877279"
  },
  {
    "text": "an example that is using this style of code um it's the spar",
    "start": "877279",
    "end": "885639"
  },
  {
    "text": "right so basically what you did is you got a javascript library which which",
    "start": "885680",
    "end": "890800"
  },
  {
    "text": "does all of the coordination going back and forth right and that's exactly what i'm doing here i'm i'm pulling in",
    "start": "890800",
    "end": "896959"
  },
  {
    "text": "an open connect client javascript library i'm configuring all my stuff my authority client id the authorization",
    "start": "896959",
    "end": "904160"
  },
  {
    "text": "code response type and so on right [Music]",
    "start": "904160",
    "end": "909279"
  },
  {
    "text": "and then if i run this i can now",
    "start": "909279",
    "end": "914639"
  },
  {
    "text": "control everything from javascript there are no more cookies no more urls are being harmed here so i can press",
    "start": "914639",
    "end": "921279"
  },
  {
    "text": "login log into the server",
    "start": "921279",
    "end": "926680"
  },
  {
    "text": "and here i am i have my identity i have my identity token of my access token and now i can start calling apis yeah like",
    "start": "927279",
    "end": "932720"
  },
  {
    "text": "when if i would press this button here i i would now be able to call an api directly from javascript with the access",
    "start": "932720",
    "end": "939040"
  },
  {
    "text": "token great um [Music]",
    "start": "939040",
    "end": "945529"
  },
  {
    "text": "or maybe not [Laughter] so the next challenge we have is",
    "start": "946079",
    "end": "952959"
  },
  {
    "text": "by virtue of that everything is now driven by javascript we have to store these access tokens somewhere right and",
    "start": "952959",
    "end": "959360"
  },
  {
    "text": "they are they are sensitive data you don't want to lose them you don't want to leak them you don't want that somebody exfiltrates these tokens and of",
    "start": "959360",
    "end": "965920"
  },
  {
    "text": "course because everything is running in javascript you have to store the tokens in the browser right in memory local",
    "start": "965920",
    "end": "972160"
  },
  {
    "text": "storage session storage whatever right somewhere but all of these storage mechanisms are",
    "start": "972160",
    "end": "978160"
  },
  {
    "text": "by definition accessible by javascript right and guess what there's a new",
    "start": "978160",
    "end": "983360"
  },
  {
    "text": "attack well it wasn't really new but um now had a new importance which is called cross-site",
    "start": "983360",
    "end": "989600"
  },
  {
    "text": "scripting or if you want to have a general term code injection attacks right so if your application has",
    "start": "989600",
    "end": "997040"
  },
  {
    "text": "a cross-site scripting vulnerability an attacker could inject javascript code in your application which would read the",
    "start": "997040",
    "end": "1002720"
  },
  {
    "text": "token from wherever you store it and send it along to a different application right the attackers application",
    "start": "1002720",
    "end": "1010079"
  },
  {
    "text": "and this threat and vulnerabilities are far away from being solved in javascript right i",
    "start": "1010079",
    "end": "1017519"
  },
  {
    "text": "mean we are making progress with all kinds of complicated stuff we had on top like uh",
    "start": "1017519",
    "end": "1023519"
  },
  {
    "text": "content security policies or uh is it called trusted types now in react and",
    "start": "1023519",
    "end": "1029360"
  },
  {
    "text": "and so on and so forth but still if you look at the os top 10 since ever",
    "start": "1029360",
    "end": "1035199"
  },
  {
    "text": "code injection is in the top three it's just going up and down between one and three uh wherever you know but it's",
    "start": "1035199",
    "end": "1041760"
  },
  {
    "text": "there right and if you look at new research you you remember that there were these specter attacks where you can",
    "start": "1041760",
    "end": "1047918"
  },
  {
    "text": "basically read send weird packages to a server and then read arbitrary memory from the server guess what they also",
    "start": "1047919",
    "end": "1054720"
  },
  {
    "text": "apply to browsers yeah so google has found out that there are even in chrome spectre attacks where an attacker",
    "start": "1054720",
    "end": "1060320"
  },
  {
    "text": "potentially you know can read ram and if that ram is your access token",
    "start": "1060320",
    "end": "1066720"
  },
  {
    "text": "right so long story short i don't want to store my tokens in the browser it's way too dangerous",
    "start": "1066720",
    "end": "1073760"
  },
  {
    "text": "okay um so you know go back to our uh app here here's my token right and if i look",
    "start": "1073760",
    "end": "1080880"
  },
  {
    "text": "at session storage in this case here are the tokens right and if i am i",
    "start": "1080880",
    "end": "1087039"
  },
  {
    "text": "am now a clever attacker i can write some javascript code read them from session storage and send them anywhere i",
    "start": "1087039",
    "end": "1093360"
  },
  {
    "text": "want no um",
    "start": "1093360",
    "end": "1098400"
  },
  {
    "text": "and then all of the other things yeah that all of the little browser differences like maybe so for example in",
    "start": "1098400",
    "end": "1103760"
  },
  {
    "text": "safari in incognito mode there is no session storage so you can't use that for example yeah and you have to come up",
    "start": "1103760",
    "end": "1109600"
  },
  {
    "text": "with other ways of doing these things yeah um so that's challenge number one",
    "start": "1109600",
    "end": "1115440"
  },
  {
    "text": "challenge number two is now once you have that token and let's just ignore for a second that the token is not",
    "start": "1115440",
    "end": "1120480"
  },
  {
    "text": "really secure because it's in the browser how do you manage the token right tokens have a lifetime when the",
    "start": "1120480",
    "end": "1125840"
  },
  {
    "text": "lifetime is over you want to get a new token how do you in the in your spa front end uh notice that the user has",
    "start": "1125840",
    "end": "1133200"
  },
  {
    "text": "locked out and you want to you know like clean your data delete the tokens you know session management basically yeah",
    "start": "1133200",
    "end": "1138720"
  },
  {
    "text": "um there are lots of protocols and specs out there that solve",
    "start": "1138720",
    "end": "1143760"
  },
  {
    "text": "these exact problems yeah um so that for example you can open an invisible iframe and go back to the",
    "start": "1143760",
    "end": "1151039"
  },
  {
    "text": "token server get a new token for example yeah or maybe uh or opening an iframe to",
    "start": "1151039",
    "end": "1156080"
  },
  {
    "text": "the server which sends you notifications when the user has locked out but the common denominator was they were all",
    "start": "1156080",
    "end": "1162000"
  },
  {
    "text": "based on iframes hidden hidden iframes right because that's like the our one trick in the toolbox that always works",
    "start": "1162000",
    "end": "1168480"
  },
  {
    "text": "somehow right um so yes same thing here with this application right um",
    "start": "1168480",
    "end": "1174290"
  },
  {
    "text": "[Music] you see when i want a new token",
    "start": "1174290",
    "end": "1179799"
  },
  {
    "text": "look at that no flickering yeah job done [Laughter]",
    "start": "1179840",
    "end": "1186240"
  },
  {
    "text": "so if i look at sorry not here but inspect the page",
    "start": "1186240",
    "end": "1192480"
  },
  {
    "text": "inspect you see when i'm pressing the renew button you see that for a very very short moment",
    "start": "1192480",
    "end": "1198640"
  },
  {
    "text": "there's an iframe going back to the token server getting a new token that's what that was the official recommendation how to do this yeah",
    "start": "1198640",
    "end": "1205840"
  },
  {
    "text": "also you can see here there's an another iframe that points to the token server itself to a special endpoint so so that",
    "start": "1205840",
    "end": "1212960"
  },
  {
    "text": "the token server at logout time can send a notification back to the client that the session is over so they can close",
    "start": "1212960",
    "end": "1218320"
  },
  {
    "text": "the application basically yeah so when i now um go to the token server here right",
    "start": "1218320",
    "end": "1226240"
  },
  {
    "text": "and log out magic",
    "start": "1226240",
    "end": "1232159"
  },
  {
    "text": "okay magic done with iframes um",
    "start": "1232159",
    "end": "1237840"
  },
  {
    "text": "so that's how that worked and we for seven years maintained an",
    "start": "1237840",
    "end": "1244720"
  },
  {
    "text": "officially certified javascript client library which implemented all of these features and just recently like six",
    "start": "1244720",
    "end": "1250640"
  },
  {
    "text": "months ago we decided to not to basically archive the project because you just can't win yeah",
    "start": "1250640",
    "end": "1256720"
  },
  {
    "text": "regardless what you do the tokens end up in the browser we had so much trouble maintaining this library over different",
    "start": "1256720",
    "end": "1262320"
  },
  {
    "text": "browsers different browser versions even it was always something yeah and we decided no a we we don't",
    "start": "1262320",
    "end": "1270159"
  },
  {
    "text": "want to buy into this approach anymore and b it's just too much work ma'am and now the next thing happens the",
    "start": "1270159",
    "end": "1278000"
  },
  {
    "text": "browsers are changing as well yeah so all of the browser vendors",
    "start": "1278000",
    "end": "1283440"
  },
  {
    "text": "have agreed that they have to do something about you know tracking networks and advertisements and",
    "start": "1283440",
    "end": "1289039"
  },
  {
    "text": "all of these things and the different vendors approaching the problem in different in different ways but",
    "start": "1289039",
    "end": "1295200"
  },
  {
    "text": "um basically google has announced a very big change actually they wanted to make",
    "start": "1295200",
    "end": "1300480"
  },
  {
    "text": "this change this year but then they got problems with uh governments and things because they",
    "start": "1300480",
    "end": "1306240"
  },
  {
    "text": "would break everything basically so they delayed just delayed it to trade 2023 if",
    "start": "1306240",
    "end": "1311520"
  },
  {
    "text": "you want to google for that google for that it's a it's called the chrome cookie pocalypse",
    "start": "1311520",
    "end": "1318000"
  },
  {
    "text": "okay um but you know like most people say yeah as",
    "start": "1318000",
    "end": "1323840"
  },
  {
    "text": "long as chrome is okay we are fine right all of these niche browsers like safari and brave we don't care but guess what",
    "start": "1323840",
    "end": "1330400"
  },
  {
    "text": "safari has changed their behavior too and safari has a 20 market share and you probably have customers using safari",
    "start": "1330400",
    "end": "1337440"
  },
  {
    "text": "okay so what safari did as the first step is they now block cookies in iframes",
    "start": "1337440",
    "end": "1347039"
  },
  {
    "text": "do you see a problem with all of our iframe based approaches now right if there's no cookie flowing",
    "start": "1347039",
    "end": "1353120"
  },
  {
    "text": "anymore i can't get a new token if there's no cookie flowing anymore the server thinks i'm locked out yeah so",
    "start": "1353120",
    "end": "1359360"
  },
  {
    "text": "when i run this exact same application that that is working fine here in chrome",
    "start": "1359360",
    "end": "1365039"
  },
  {
    "text": "on safari",
    "start": "1365039",
    "end": "1367919"
  },
  {
    "text": "okay i log in yep",
    "start": "1370400",
    "end": "1376960"
  },
  {
    "text": "why well because the the front end opened the iframe to to receive the logout notifications",
    "start": "1380320",
    "end": "1386559"
  },
  {
    "text": "the the cookie is is blocked by safari so the talk server says there is no session you are locked out",
    "start": "1386559",
    "end": "1392320"
  },
  {
    "text": "okay so you're immediately locked out and guess what the renewed token doesn't work either because the cookie is",
    "start": "1392320",
    "end": "1397360"
  },
  {
    "text": "blocked as well for the renew token um requests",
    "start": "1397360",
    "end": "1402799"
  },
  {
    "text": "yeah so that's today already and the two browsers which have implemented this by default now is",
    "start": "1402799",
    "end": "1409360"
  },
  {
    "text": "safari and brave in firefox you have like an enhanced security thing if you",
    "start": "1409360",
    "end": "1414400"
  },
  {
    "text": "click that you you get the same behavior um the the only two browsers right now which",
    "start": "1414400",
    "end": "1419840"
  },
  {
    "text": "do work is chrome and edge okay so that's coming and uh if your",
    "start": "1419840",
    "end": "1426640"
  },
  {
    "text": "application is built on this um approach it will not work anymore",
    "start": "1426640",
    "end": "1432880"
  },
  {
    "text": "in the future so what does this all affect well silent renew as i just shown you session notifications uh maybe you",
    "start": "1432880",
    "end": "1440559"
  },
  {
    "text": "know what a front channel log out notification is right so when when you log out let's say from azure id and then",
    "start": "1440559",
    "end": "1446880"
  },
  {
    "text": "they send like um logout messages to your applications in in iframes guess what um to tell them",
    "start": "1446880",
    "end": "1454240"
  },
  {
    "text": "that the user is locked out right and again since now these browsers are blocking the cookies in the iframe",
    "start": "1454240",
    "end": "1459919"
  },
  {
    "text": "especially um you know across site that is also not working anymore right",
    "start": "1459919",
    "end": "1466000"
  },
  {
    "text": "so what did people end up doing to solve the problem it's like okay you know what let's just use refresh tokens in the",
    "start": "1466000",
    "end": "1471840"
  },
  {
    "text": "browser right refresh tokens give us a way to manage our token lifetime without these cookies yeah which is the worst",
    "start": "1471840",
    "end": "1478960"
  },
  {
    "text": "possible thing you can do from a security point of view right a javascript application or a browser-based application is by",
    "start": "1478960",
    "end": "1485200"
  },
  {
    "text": "definition a so-called public client in oauth meaning they don't have a client secret and now you have a refresh token",
    "start": "1485200",
    "end": "1491600"
  },
  {
    "text": "in the browser as well if somebody can steal that refresh token they can without even knowing your client secret",
    "start": "1491600",
    "end": "1497679"
  },
  {
    "text": "create new access tokens as long as they want typically okay",
    "start": "1497679",
    "end": "1503039"
  },
  {
    "text": "you know there are popular cloud management websites",
    "start": "1503039",
    "end": "1508799"
  },
  {
    "text": "that use refresh tokens you know what what could go wrong right",
    "start": "1508799",
    "end": "1514880"
  },
  {
    "text": "[Laughter] um okay so all of these things together",
    "start": "1514880",
    "end": "1520960"
  },
  {
    "text": "let uh brought us to the decision this is not the way forward",
    "start": "1520960",
    "end": "1526559"
  },
  {
    "text": "okay and we don't know what other crazy things the process will do in the future so relying on browser behavior here is",
    "start": "1526559",
    "end": "1535520"
  },
  {
    "text": "not going to work we rather want to probably play nice with the browsers like use the security sandbox that they",
    "start": "1535520",
    "end": "1543520"
  },
  {
    "text": "think is the right one which these days is the same side policy so if something comes from the same top level domain",
    "start": "1543520",
    "end": "1549840"
  },
  {
    "text": "right and the same origin policy which means your code is running exactly on the same origin where the server is",
    "start": "1549840",
    "end": "1556400"
  },
  {
    "text": "running on these are the two security features of browsers all of these iframes and the stuff was",
    "start": "1556400",
    "end": "1562240"
  },
  {
    "text": "working around this right and now they are shutting it down",
    "start": "1562240",
    "end": "1567760"
  },
  {
    "text": "so but there are also good browser changes um and that is um basically what they",
    "start": "1567919",
    "end": "1574480"
  },
  {
    "text": "call same site cookies yeah so the cross site request forgery problem was enabled by the fact that the browser",
    "start": "1574480",
    "end": "1582080"
  },
  {
    "text": "when you make a network call it only checked where is the call going to right and if you had a call a cookie for app",
    "start": "1582080",
    "end": "1588960"
  },
  {
    "text": "one somebody in that browser makes a call to app one the browser sent the cookie",
    "start": "1588960",
    "end": "1594799"
  },
  {
    "text": "right with the same site cookies they do an additional check now and that is who is actually sending the cookie and",
    "start": "1594799",
    "end": "1601200"
  },
  {
    "text": "only if the sender and the receiver match they're on the same domain same side then they will send the cookie and",
    "start": "1601200",
    "end": "1608080"
  },
  {
    "text": "now you might ask yourself why wasn't this like that from the start we don't know right we'll live and learn",
    "start": "1608080",
    "end": "1615120"
  },
  {
    "text": "i guess um right so same side cookies protect you from cross site request forgery by",
    "start": "1615120",
    "end": "1623679"
  },
  {
    "text": "default okay and it's very important to understand what and what an origin is and what a site is right and origin is",
    "start": "1623679",
    "end": "1630480"
  },
  {
    "text": "the exact triple of protocol dns name and port number that's an origin a site",
    "start": "1630480",
    "end": "1636159"
  },
  {
    "text": "basically is the they call it tld minus one which doesn't help really but let's say you have",
    "start": "1636159",
    "end": "1642679"
  },
  {
    "text": "mycompany.com then my company is the site so if you have app one my company com",
    "start": "1642679",
    "end": "1648720"
  },
  {
    "text": "app2 my company com app3 and so on then that is a site and cookies can flow",
    "start": "1648720",
    "end": "1654000"
  },
  {
    "text": "freely inside but not outside okay",
    "start": "1654000",
    "end": "1659279"
  },
  {
    "text": "sounds perfect yeah but only as long as you're not a victim to a subdomain takeover attack",
    "start": "1659279",
    "end": "1667440"
  },
  {
    "text": "sounds scary right uh a sub domain takeover attack is that an attacker is able to execute code in your site",
    "start": "1667440",
    "end": "1675039"
  },
  {
    "text": "and how is that even possible right um a couple of years ago electronic arts",
    "start": "1675039",
    "end": "1680159"
  },
  {
    "text": "was hit by that right and um basically the way this worked is this yeah ea needed a new",
    "start": "1680159",
    "end": "1686000"
  },
  {
    "text": "application so some developer created an azure website and wrote this application on on that",
    "start": "1686000",
    "end": "1692880"
  },
  {
    "text": "website right and then they added a custom domain to it so basically blah blah blah websites.net became",
    "start": "1692880",
    "end": "1698399"
  },
  {
    "text": "billing.ea.com right cool so at some point ea said okay we",
    "start": "1698399",
    "end": "1703679"
  },
  {
    "text": "don't need this anymore we merge this in into the main application they shut down the azure website but the",
    "start": "1703679",
    "end": "1709520"
  },
  {
    "text": "dns entry was still pointing to it so now you can automate this attack by querying dns servers and see oh look at",
    "start": "1709520",
    "end": "1716240"
  },
  {
    "text": "that it's a dangling pointer if you like to a non-existing azure website so let's just register the azure website that the",
    "start": "1716240",
    "end": "1722399"
  },
  {
    "text": "name is free now okay and suddenly you can write code which runs on the site of",
    "start": "1722399",
    "end": "1728640"
  },
  {
    "text": "the victim right billing.ea.com was now an attacker website and not an ea website anymore",
    "start": "1728640",
    "end": "1735919"
  },
  {
    "text": "and then same side cookies won't help you yeah all i'm saying same that cookies are a nice way of having a",
    "start": "1735919",
    "end": "1742799"
  },
  {
    "text": "baseline security in the browser but it's not the silver bullet",
    "start": "1742799",
    "end": "1748559"
  },
  {
    "text": "yeah okay so",
    "start": "1748559",
    "end": "1753840"
  },
  {
    "text": "now fast forwarding um browsers browsers on one hand get more",
    "start": "1753840",
    "end": "1760000"
  },
  {
    "text": "restricted on the other hand have better security like same side cookies there are new ietf recommendations again um",
    "start": "1760000",
    "end": "1767679"
  },
  {
    "text": "one is the the thing called oar for browser-based applications it's a it's um not a protocol it's a what they call",
    "start": "1767679",
    "end": "1773200"
  },
  {
    "text": "a pcp a best current practice and it's a guidance document if you like which everyone should read in my opinion",
    "start": "1773200",
    "end": "1779440"
  },
  {
    "text": "that is building browser-based applications and is using oauth yeah and you know oauth was a protocol",
    "start": "1779440",
    "end": "1785520"
  },
  {
    "text": "designed for doing cross a cross-site api calls right and funnily enough in",
    "start": "1785520",
    "end": "1790960"
  },
  {
    "text": "this spec or in this document called over for browser-based applications one of the guidance was",
    "start": "1790960",
    "end": "1796720"
  },
  {
    "text": "if you don't call cross-site apis maybe you don't need oauth which is actually very true",
    "start": "1796720",
    "end": "1804159"
  },
  {
    "text": "okay which was funny for an oauth working group document to be honest yeah it's gone by now but you can you know",
    "start": "1804159",
    "end": "1810960"
  },
  {
    "text": "if you think reading rfcs is geeky even geekier is reading the diffs between different versions of rfcs",
    "start": "1810960",
    "end": "1818720"
  },
  {
    "text": "and you can find this sentence if you go back in time because they basically have version control on it yeah so yeah",
    "start": "1818720",
    "end": "1824000"
  },
  {
    "text": "that's true yeah um and at the same time there's another",
    "start": "1824000",
    "end": "1830240"
  },
  {
    "text": "document now popping up which is talking about this bff thing okay so bff stands for back end for front end and um that's",
    "start": "1830240",
    "end": "1837760"
  },
  {
    "text": "basically what we're going to talk about next yeah so the the the fundamental thing here is that you have to realize that there are two",
    "start": "1837760",
    "end": "1844320"
  },
  {
    "text": "types of javascript applications or blazer applications or whatever you want to call them the ones with the back end",
    "start": "1844320",
    "end": "1849919"
  },
  {
    "text": "and the ones without a back end yeah so the ones without a back end they are",
    "start": "1849919",
    "end": "1855120"
  },
  {
    "text": "exactly what i just shown you everything is running in javascript you're doing the token management in javascript you're calling the apis in javascript",
    "start": "1855120",
    "end": "1861519"
  },
  {
    "text": "and you have all the problems i just shown you yeah but wasn't that the dream of the spa",
    "start": "1861519",
    "end": "1867679"
  },
  {
    "text": "people right oh it's just html css and javascript and it's like a real program yeah",
    "start": "1867679",
    "end": "1873440"
  },
  {
    "text": "well it isn't um and the bcp says this is okay for low",
    "start": "1873440",
    "end": "1882080"
  },
  {
    "text": "value applications well you know like when you're not dealing with sensitive data so to speak right this pipe dream",
    "start": "1882080",
    "end": "1887519"
  },
  {
    "text": "of i just put my stuff on a cdn it's just gonna run in the browser it's all good yeah",
    "start": "1887519",
    "end": "1892880"
  },
  {
    "text": "if you're dealing with sensitive data you don't want to store the sensitive data in the browser full stop yeah and",
    "start": "1892880",
    "end": "1899840"
  },
  {
    "text": "the only way you can work around this is by adding a back end to your application that that stores the sensitive data okay",
    "start": "1899840",
    "end": "1907440"
  },
  {
    "text": "so the idea with the bff approaches is that the chart that the javascript itself",
    "start": "1907440",
    "end": "1912480"
  },
  {
    "text": "does not do any security yeah it just does what it does best to be honest is ui right um and all of the",
    "start": "1912480",
    "end": "1919519"
  },
  {
    "text": "authentication handshakes token storage token management calling apis is happening on a dedicated application",
    "start": "1919519",
    "end": "1927200"
  },
  {
    "text": "back end right that's where bff comes from backend for front end and maybe",
    "start": "1927200",
    "end": "1932559"
  },
  {
    "text": "also because they are so tightly coupled they hopefully are best friends forever yeah",
    "start": "1932559",
    "end": "1938559"
  },
  {
    "text": "that's the idea yeah um now this new ietf document",
    "start": "1938559",
    "end": "1946799"
  },
  {
    "text": "makes it more complicated i think than than it should be they are they are distinguishing between two types of two",
    "start": "1946799",
    "end": "1953120"
  },
  {
    "text": "flavors of bff one is called the full bay of bff and one is called the tmi bff",
    "start": "1953120",
    "end": "1959039"
  },
  {
    "text": "and that's the that's an attempt from the itf to try to be funny tmi stands for too much information yeah um",
    "start": "1959039",
    "end": "1966799"
  },
  {
    "text": "yeah i'm still laughing um and um basically the idea is this the full bff",
    "start": "1966799",
    "end": "1973039"
  },
  {
    "text": "uh does all of the security stuff on the server right and even calling the apis",
    "start": "1973039",
    "end": "1979039"
  },
  {
    "text": "is happening server to server whereas the tmi bff has this you know half baked would be maybe the",
    "start": "1979039",
    "end": "1986159"
  },
  {
    "text": "wrong word but in the middle approach where it says okay we do all of the token management on the server but then",
    "start": "1986159",
    "end": "1993200"
  },
  {
    "text": "when you need to call an api we send the token down to the browser to call the api",
    "start": "1993200",
    "end": "1999600"
  },
  {
    "text": "and they also say the full bf approach offers better security right because you only solved half of",
    "start": "2000080",
    "end": "2006000"
  },
  {
    "text": "the problems here yeah the token will still end up in the browser and can be stolen",
    "start": "2006000",
    "end": "2011760"
  },
  {
    "text": "so that's you know um ietf ascii art that's how that looks",
    "start": "2011760",
    "end": "2017440"
  },
  {
    "text": "like so the idea is right at the front end wants a token goes to the back end back and gets the token from the token",
    "start": "2017440",
    "end": "2023200"
  },
  {
    "text": "server and then sends the token down to the front end and then the front end can call the apis directly that's that",
    "start": "2023200",
    "end": "2029039"
  },
  {
    "text": "that's the team ibff i'm not going to talk about this because i think this is",
    "start": "2029039",
    "end": "2034080"
  },
  {
    "text": "only half useful the one i much more prefer is the full bff approach where everything is",
    "start": "2034080",
    "end": "2040399"
  },
  {
    "text": "happening on the server the tokens never leave the server the javascript will never do cross-site",
    "start": "2040399",
    "end": "2046399"
  },
  {
    "text": "communication on its own but with the one downside of course is that all of the api calls need to go via",
    "start": "2046399",
    "end": "2054000"
  },
  {
    "text": "the server so they're getting proxied right which might be a concern or not",
    "start": "2054000",
    "end": "2061440"
  },
  {
    "text": "so now that we know what a bff is um",
    "start": "2061440",
    "end": "2066960"
  },
  {
    "text": "let's build one or you know like have a look how one could look like built with asp.net core and the nice thing is is",
    "start": "2066960",
    "end": "2074158"
  },
  {
    "text": "that basically all of the building blocks are there right so you basically need a server-side asp.net core",
    "start": "2074159",
    "end": "2079280"
  },
  {
    "text": "application you plug in an open connect and oauth client library and we have really good ones in asp.net they are the",
    "start": "2079280",
    "end": "2085760"
  },
  {
    "text": "oidc authentication handler is probably the best client library i've",
    "start": "2085760",
    "end": "2091760"
  },
  {
    "text": "ever seen for web-based applications um we plug in some session management right so",
    "start": "2091760",
    "end": "2097280"
  },
  {
    "text": "that we can deal with the cookies going back and forth between the backend and the front-end um",
    "start": "2097280",
    "end": "2102640"
  },
  {
    "text": "again the a spinner core session management library is really good yeah and then we plug in some token",
    "start": "2102640",
    "end": "2107920"
  },
  {
    "text": "management so that you know all of the getting the token refreshing the token getting a new token when the old one has",
    "start": "2107920",
    "end": "2114320"
  },
  {
    "text": "expired thing that part is not built inside of asp.net core but there's a library that can help you with that",
    "start": "2114320",
    "end": "2121280"
  },
  {
    "text": "um and then you'd have to deal with your api endpoints and then ultimately you",
    "start": "2121280",
    "end": "2126400"
  },
  {
    "text": "have the ui assets yeah so so just to reiterate before we move",
    "start": "2126400",
    "end": "2132000"
  },
  {
    "text": "on yeah the idea is this you go to the application you start it",
    "start": "2132000",
    "end": "2137119"
  },
  {
    "text": "you go to an application server the application server serves the static assets down to your to your browser",
    "start": "2137119",
    "end": "2143599"
  },
  {
    "text": "whenever you want to start your authentication handshake you're calling an endpoint in your application server which then in turn starts the handshake",
    "start": "2143599",
    "end": "2150640"
  },
  {
    "text": "the tokens coming back from the authentication handshake will be stored on the server yeah the server will",
    "start": "2150640",
    "end": "2156480"
  },
  {
    "text": "create a session for you which is cookie based same side cookies and all the bells and whistles that we can do to make it secure as secure as possible and",
    "start": "2156480",
    "end": "2163520"
  },
  {
    "text": "even something more which i'll show you in a second and then from that point on the communication",
    "start": "2163520",
    "end": "2169040"
  },
  {
    "text": "between front end and back end is always being secured via this session cookie",
    "start": "2169040",
    "end": "2174160"
  },
  {
    "text": "yeah and whenever the the browser or the the front that needs to make a call",
    "start": "2174160",
    "end": "2179440"
  },
  {
    "text": "to something that is not living in its back end the back end is proxying into the remote location",
    "start": "2179440",
    "end": "2184880"
  },
  {
    "text": "attaching the access token and sending the response back to the",
    "start": "2184880",
    "end": "2190000"
  },
  {
    "text": "browser right and that might sound a little bit you know uh that's that's that's a pretty old school but yeah from",
    "start": "2190000",
    "end": "2196960"
  },
  {
    "text": "a security point of view that's the only way to do it in my opinion so as i said that's that um full",
    "start": "2196960",
    "end": "2203359"
  },
  {
    "text": "disclosure i've built such a framework before it's part of of identity server but that's not the point i want to show",
    "start": "2203359",
    "end": "2209440"
  },
  {
    "text": "you what we did basically and the building blocks as i said",
    "start": "2209440",
    "end": "2215680"
  },
  {
    "text": "besides token management are all part of asp.net core the first of all we need a",
    "start": "2215680",
    "end": "2220800"
  },
  {
    "text": "way to serve our static content right that is the static files middleware in in asp.net core that's the thing that",
    "start": "2220800",
    "end": "2226720"
  },
  {
    "text": "serves down your javascript your html your css and whatever else you need right we need authentication that's the",
    "start": "2226720",
    "end": "2233119"
  },
  {
    "text": "asp.net core open id connect handler and then we need to think about how to secure the communication between the",
    "start": "2233119",
    "end": "2239280"
  },
  {
    "text": "front end and the back end and let's start with the authentication as i said that's just the standard openid connect",
    "start": "2239280",
    "end": "2245839"
  },
  {
    "text": "handler you see um on the server side you point it to your trusted server",
    "start": "2245839",
    "end": "2251920"
  },
  {
    "text": "the nice thing now is is that you know by definition a spa running in the in the",
    "start": "2251920",
    "end": "2257760"
  },
  {
    "text": "in the browser doing javascript is always a public client it cannot have a secret by moving that logic to the",
    "start": "2257760",
    "end": "2263839"
  },
  {
    "text": "server you turn it into a confidential client which does have a secret and can authenticate with the token server right",
    "start": "2263839",
    "end": "2271040"
  },
  {
    "text": "which is great and then basically all you need to do is um",
    "start": "2271040",
    "end": "2276480"
  },
  {
    "text": "expose some local endpoints in your backend to be able to trigger the login and log out functionality of your of",
    "start": "2276480",
    "end": "2283200"
  },
  {
    "text": "your server right so let's do this first",
    "start": "2283200",
    "end": "2287440"
  },
  {
    "text": "let's go to the javascript sample here",
    "start": "2289119",
    "end": "2294519"
  },
  {
    "text": "so for all of you are doing uh you know standard asp.net core this looks pretty familiar",
    "start": "2300079",
    "end": "2306640"
  },
  {
    "text": "um here's our startup file right um we're adding authentication here we",
    "start": "2306640",
    "end": "2312160"
  },
  {
    "text": "are setting our cookie uh we can use the strictest same side modes of all because we are not you know",
    "start": "2312160",
    "end": "2319119"
  },
  {
    "text": "so for those who don't know there are three modes for same side one is called um well none which means you you don't have",
    "start": "2319119",
    "end": "2326079"
  },
  {
    "text": "protection one is called lags which means only post requests block the",
    "start": "2326079",
    "end": "2331200"
  },
  {
    "text": "cookie cross side boundaries and strict means even get requests are getting blocked the cookies are getting",
    "start": "2331200",
    "end": "2337920"
  },
  {
    "text": "blocked across side boundary now which one to choose here well lex",
    "start": "2337920",
    "end": "2343280"
  },
  {
    "text": "always lacks strict might be not compatible with your application because let's say you have a",
    "start": "2343280",
    "end": "2348960"
  },
  {
    "text": "link going to another application that simple link will not transfer cookies over so that might not work for you but",
    "start": "2348960",
    "end": "2356000"
  },
  {
    "text": "as we all know we don't change system state based on get requests so lags would be good enough so the post",
    "start": "2356000",
    "end": "2361760"
  },
  {
    "text": "requests don't get cookies anymore across site boundaries then here's my open id connect handler",
    "start": "2361760",
    "end": "2368240"
  },
  {
    "text": "oh and by the way that that's another nice thing here um it's not not really um an official",
    "start": "2368240",
    "end": "2373440"
  },
  {
    "text": "standard but all browsers understand it if you do a underscore underscore host prefix on the cookie you prevent sub",
    "start": "2373440",
    "end": "2380720"
  },
  {
    "text": "domains to overwrite that cookie which is another attack that by the way is possible in browsers that's why many",
    "start": "2380720",
    "end": "2387520"
  },
  {
    "text": "many years ago you remember that github.com had the user pages also on",
    "start": "2387520",
    "end": "2393040"
  },
  {
    "text": "github.com and there was an attack found by a very clever guy who found out that if you are",
    "start": "2393040",
    "end": "2398960"
  },
  {
    "text": "over you can override in the subdomain the cookie of the main domain was kind of fun and that's when github",
    "start": "2398960",
    "end": "2405119"
  },
  {
    "text": "moved github.com as its own web asset and then the user page are on github io right so",
    "start": "2405119",
    "end": "2412079"
  },
  {
    "text": "just get it get a different domain name that this cookie thing cannot happen anymore and this underscore underscore",
    "start": "2412079",
    "end": "2417119"
  },
  {
    "text": "hosting prevents this as well okay",
    "start": "2417119",
    "end": "2422079"
  },
  {
    "text": "um yeah and then we just you know ask for api access here ask for a refresh token so we can do token management and",
    "start": "2422480",
    "end": "2429119"
  },
  {
    "text": "that's pretty much it yeah um so let's run this",
    "start": "2429119",
    "end": "2435960"
  },
  {
    "text": "okay everybody needs to do application um so you see where now that the spa wants",
    "start": "2438960",
    "end": "2446079"
  },
  {
    "text": "to trigger the actually pretty complicated open body connect authentication workflow with all its spells and whistles and",
    "start": "2446079",
    "end": "2452400"
  },
  {
    "text": "front-end back-end channel communication and so on all it needs to do is you see",
    "start": "2452400",
    "end": "2458000"
  },
  {
    "text": "go to the local endpoint called login that's all the front-end needs to know about right login",
    "start": "2458000",
    "end": "2466240"
  },
  {
    "text": "i login",
    "start": "2466240",
    "end": "2468880"
  },
  {
    "text": "and i'm logged in okay and logout is the same story right we just trigger log out on the on the back",
    "start": "2472960",
    "end": "2480079"
  },
  {
    "text": "end and then the whole thing will be reversed that's nice",
    "start": "2480079",
    "end": "2485440"
  },
  {
    "text": "um compared to the actually i'm kidding you not thousands of lines of code we had in",
    "start": "2485440",
    "end": "2490880"
  },
  {
    "text": "our openly connect client javascript library yeah",
    "start": "2490880",
    "end": "2496160"
  },
  {
    "text": "right so now we have a session with the server okay so now um we're gonna secure",
    "start": "2497040",
    "end": "2502240"
  },
  {
    "text": "this session with this um with this cookie handler i just showed you use the same side mode use the host prefix and",
    "start": "2502240",
    "end": "2509119"
  },
  {
    "text": "so on so now we basically have sandboxed our communication to the same site",
    "start": "2509119",
    "end": "2514240"
  },
  {
    "text": "okay um and now you know your your javascript",
    "start": "2514240",
    "end": "2519680"
  },
  {
    "text": "client might want to know who is the user or maybe there are claims about that user that they care about right so",
    "start": "2519680",
    "end": "2525680"
  },
  {
    "text": "the next thing you all only have to do is expose another endpoint let's call it user right which then",
    "start": "2525680",
    "end": "2531920"
  },
  {
    "text": "sends the contents of the session as json back to the client okay so let's do that as well",
    "start": "2531920",
    "end": "2538720"
  },
  {
    "text": "uh show session information and you can see apparently security is much easier for me than ui",
    "start": "2538720",
    "end": "2544800"
  },
  {
    "text": "um i i don't care about uis you know but basically that is the server-side",
    "start": "2544800",
    "end": "2550560"
  },
  {
    "text": "session right and um there's a way to to send this down to the client and maybe because the client wants to know the",
    "start": "2550560",
    "end": "2556640"
  },
  {
    "text": "name of the user right or maybe they need to know i don't know his favorite color or whatever right",
    "start": "2556640",
    "end": "2562839"
  },
  {
    "text": "um you could even use this you know periodically to query the server side",
    "start": "2562839",
    "end": "2568720"
  },
  {
    "text": "session state like is the user still logged in for example yeah if you want to do something like this and quite nice actually starting with",
    "start": "2568720",
    "end": "2575359"
  },
  {
    "text": "dot net six um you know when we wrote this yeah and thought about like does it make sense to",
    "start": "2575359",
    "end": "2581760"
  },
  {
    "text": "pull the server let's say every minute to ask let's say you want to implement an inactivity",
    "start": "2581760",
    "end": "2587040"
  },
  {
    "text": "counter something like this right so imagine now you would you would ping the server every one minute but the server",
    "start": "2587040",
    "end": "2593119"
  },
  {
    "text": "is configured for sliding expiration cookies you would extend the session time every time you're doing the ping right so we opened an issue",
    "start": "2593119",
    "end": "2600240"
  },
  {
    "text": "with microsoft and hey um it's the new microsoft they fixed it",
    "start": "2600240",
    "end": "2605680"
  },
  {
    "text": "so now starting with dotnet six there's a way that you can dynamically suppress sliding cookies",
    "start": "2605680",
    "end": "2612160"
  },
  {
    "text": "okay so imagine now you have this user endpoint you put in like a special query string parameter slide false you can",
    "start": "2612160",
    "end": "2618480"
  },
  {
    "text": "handle an event on the cookie handler and if you see that query string you say don't slide the cookie",
    "start": "2618480",
    "end": "2623760"
  },
  {
    "text": "and that means after some time the session will be expired and that's exactly what we want right",
    "start": "2623760",
    "end": "2630000"
  },
  {
    "text": "okay cool um what else do we have token management so",
    "start": "2630000",
    "end": "2635040"
  },
  {
    "text": "that's the only part where asp.net core does not help you now that's a long-standing discussion with",
    "start": "2635040",
    "end": "2641119"
  },
  {
    "text": "microsoft um but basically",
    "start": "2641119",
    "end": "2646400"
  },
  {
    "text": "it's not implemented yeah and what session what token management means is of course that now that the server is",
    "start": "2646400",
    "end": "2652240"
  },
  {
    "text": "keeping the tokens um and doing the api calls right you have to make sure that",
    "start": "2652240",
    "end": "2657280"
  },
  {
    "text": "your token is still valid yeah so um after a certain amount of time the",
    "start": "2657280",
    "end": "2663760"
  },
  {
    "text": "token will be expired then there's the refresh token that you can use to get a new token right and so on actually maybe",
    "start": "2663760",
    "end": "2670079"
  },
  {
    "text": "i can quickly show you that as well we have some time um there's a sample here",
    "start": "2670079",
    "end": "2677838"
  },
  {
    "text": "i might need to shut down the other",
    "start": "2678000",
    "end": "2683200"
  },
  {
    "text": "client and we see",
    "start": "2683200",
    "end": "2689559"
  },
  {
    "text": "so yeah let me just show you that and then i'll show you how it how it works so when i log in here",
    "start": "2690400",
    "end": "2698560"
  },
  {
    "text": "right you see that inside the session so that that's pretty much poking into the session of html core on the server side",
    "start": "2699119",
    "end": "2705680"
  },
  {
    "text": "what's in there you see in a spirit core they store the access token in the session they store",
    "start": "2705680",
    "end": "2711839"
  },
  {
    "text": "um the refresh token in the session and they also have something called expires ad and with these three values you can",
    "start": "2711839",
    "end": "2718240"
  },
  {
    "text": "imagine right you can write some automated logic saying like okay i know when the token expires now i i want to",
    "start": "2718240",
    "end": "2724480"
  },
  {
    "text": "use it it's expired here's the refresh token let's under under the covers get a new access token",
    "start": "2724480",
    "end": "2730880"
  },
  {
    "text": "get rid of the old access token store that you want in the session and all runs smoothly without you having to",
    "start": "2730880",
    "end": "2736079"
  },
  {
    "text": "pollute your business logic with that token management code okay",
    "start": "2736079",
    "end": "2741520"
  },
  {
    "text": "um i don't have to run this because it's actually pretty boring to look at exploration times here and see oh a new",
    "start": "2741520",
    "end": "2747680"
  },
  {
    "text": "token yeah um but um the way this is wired up and that",
    "start": "2747680",
    "end": "2754480"
  },
  {
    "text": "that's just pure magic yeah i mean the a-spirit core system is so extensible",
    "start": "2754480",
    "end": "2759760"
  },
  {
    "text": "so basically all of that what i just described is by getting by using one line of code",
    "start": "2759760",
    "end": "2766160"
  },
  {
    "text": "okay and this is basically wiring up all kinds of stuff in the background to to monitor the session monitor the expires",
    "start": "2766160",
    "end": "2772880"
  },
  {
    "text": "ad thing and then all you have to do is say like hey um http hp client factory register a client",
    "start": "2772880",
    "end": "2780480"
  },
  {
    "text": "that is wired up to the automatic token management so whenever i'm using this client now from the factory it will",
    "start": "2780480",
    "end": "2786560"
  },
  {
    "text": "under the covers automatically do token management for me right and actually if we look at the code",
    "start": "2786560",
    "end": "2792960"
  },
  {
    "text": "um to do that it's super simple right all you need to do is say hey client factory give me a client and then do an",
    "start": "2792960",
    "end": "2799200"
  },
  {
    "text": "api call so you don't care anymore with token exploration attaching the token refreshing the token and so on and so",
    "start": "2799200",
    "end": "2804880"
  },
  {
    "text": "forth yeah so that's nice that's a library written by me that is free just plug it in into your",
    "start": "2804880",
    "end": "2811359"
  },
  {
    "text": "application and you know should work",
    "start": "2811359",
    "end": "2817240"
  },
  {
    "text": "okay so coming back to this guy",
    "start": "2817520",
    "end": "2823280"
  },
  {
    "text": "oh i'm still locked in no let's see log out",
    "start": "2825839",
    "end": "2831280"
  },
  {
    "text": "okay log in again",
    "start": "2831280",
    "end": "2835519"
  },
  {
    "text": "cool so what else is missing oh yeah now this",
    "start": "2837359",
    "end": "2843520"
  },
  {
    "text": "is a tricky one session change notifications right so um as i said the old the old session state",
    "start": "2843520",
    "end": "2851520"
  },
  {
    "text": "a session change notification mechanism using iframes doesn't work anymore yeah so um",
    "start": "2851520",
    "end": "2856960"
  },
  {
    "text": "are there are really only two ways of um of doing this now the one i just",
    "start": "2856960",
    "end": "2862400"
  },
  {
    "text": "mentioned by probably pulling your back end periodically into like is he still locked in is he still locked in",
    "start": "2862400",
    "end": "2868559"
  },
  {
    "text": "or by sending some sort of event down from the server to the client right but the first",
    "start": "2868559",
    "end": "2875040"
  },
  {
    "text": "problem you have to solve is how does the your backend know that the user has locked out from the token server right",
    "start": "2875040",
    "end": "2881040"
  },
  {
    "text": "again front channel not notifications rely on iframes they don't work anymore there's a another standard here called",
    "start": "2881040",
    "end": "2887200"
  },
  {
    "text": "back channel notifications um that you can use and modern identity systems support that",
    "start": "2887200",
    "end": "2895200"
  },
  {
    "text": "and the idea is basically instead of relying on the browser to send you a notification basically the token server",
    "start": "2895200",
    "end": "2900319"
  },
  {
    "text": "sends a server to server call to the backend saying hey dominic has locked out okay and when then the server sees",
    "start": "2900319",
    "end": "2906880"
  },
  {
    "text": "that event or that notification coming in they can delete the session server side which then triggers a notification",
    "start": "2906880",
    "end": "2912960"
  },
  {
    "text": "on the client side and that gives you the log out behavior so to speak okay",
    "start": "2912960",
    "end": "2918079"
  },
  {
    "text": "um yeah and you can implement this endpoint yeah and that's another thing missing in asp.net core right now at",
    "start": "2918079",
    "end": "2923359"
  },
  {
    "text": "least but um this will come right because microsoft's premiere",
    "start": "2923359",
    "end": "2928880"
  },
  {
    "text": "identity product azure id runs by definition always cross site",
    "start": "2928880",
    "end": "2934240"
  },
  {
    "text": "to your company website right so the front channel stuff will not work anymore so they have to implement this",
    "start": "2934240",
    "end": "2940240"
  },
  {
    "text": "sooner or later cool so last last thing i want to talk about is now now we want to call apis",
    "start": "2940240",
    "end": "2946559"
  },
  {
    "text": "okay um so when we work with our customers to refactor",
    "start": "2946559",
    "end": "2952400"
  },
  {
    "text": "their spas to this new style we often find found out that there are",
    "start": "2952400",
    "end": "2957440"
  },
  {
    "text": "fundamentally two types of apis they have one type of api is they are which",
    "start": "2957440",
    "end": "2962480"
  },
  {
    "text": "are just exclusive for the front end no one else is calling them besides the front end okay",
    "start": "2962480",
    "end": "2968640"
  },
  {
    "text": "um and if you find those apis then you can just put them in the back end right what's the point of making",
    "start": "2968640",
    "end": "2974800"
  },
  {
    "text": "complicated cross server calls whatsoever just put them in the back end and you know you can secure them with",
    "start": "2974800",
    "end": "2980960"
  },
  {
    "text": "the session yeah the other type of api that you probably find are shared apis where you see like",
    "start": "2980960",
    "end": "2986559"
  },
  {
    "text": "multiple people are calling this yeah multiple clients are sharing that api and in that case well you should make it",
    "start": "2986559",
    "end": "2992480"
  },
  {
    "text": "shareable by putting it on a dedicated endpoint and then use the the proxy technique so to speak to to call them",
    "start": "2992480",
    "end": "2999440"
  },
  {
    "text": "okay so another nice trick that that i learned while building this framework is um so",
    "start": "2999440",
    "end": "3006000"
  },
  {
    "text": "let's say you know we have we have same side cookies they are great they are free right because they are implemented",
    "start": "3006000",
    "end": "3012319"
  },
  {
    "text": "by the browser but they only secure us against attacks across site",
    "start": "3012319",
    "end": "3018079"
  },
  {
    "text": "yeah so what if we have this attack scenario where someone runs on the same site um",
    "start": "3018079",
    "end": "3024839"
  },
  {
    "text": "and uh i didn't found this out there's a very smart guy that i know who who told",
    "start": "3024839",
    "end": "3030079"
  },
  {
    "text": "me this trick called philippe um [Music]",
    "start": "3030079",
    "end": "3035280"
  },
  {
    "text": "all you have to do to protect your api calls um",
    "start": "3035280",
    "end": "3040720"
  },
  {
    "text": "even b even tighter than same site is just by putting in a custom header on the api",
    "start": "3040720",
    "end": "3047280"
  },
  {
    "text": "call it doesn't really matter what what header it is you can call it foo and bar it doesn't matter right",
    "start": "3047280",
    "end": "3052800"
  },
  {
    "text": "we call it xc serve and the value is static it's a one yeah and that looks",
    "start": "3052800",
    "end": "3057839"
  },
  {
    "text": "totally strange right knowing all of the complicated stuff microsoft is doing with anti-forgery tokens and so on but",
    "start": "3057839",
    "end": "3064240"
  },
  {
    "text": "it turns out since we are now requiring a cookie to call the local api endpoint",
    "start": "3064240",
    "end": "3070240"
  },
  {
    "text": "meaning you make an hx call and you have to say with credentials right and if you",
    "start": "3070240",
    "end": "3075280"
  },
  {
    "text": "are in addition adding a custom header to the ajax call the browser will always",
    "start": "3075280",
    "end": "3081119"
  },
  {
    "text": "kick off a cause pre-flight request okay so cause is the thing which tries",
    "start": "3081119",
    "end": "3087200"
  },
  {
    "text": "to negotiate can we call api's cross-site so it will always kick this off because you are while violating the",
    "start": "3087200",
    "end": "3093440"
  },
  {
    "text": "rules you are a sending a cookie and you're sending a custom header it doesn't really matter what the header is but that's it and what you know cause",
    "start": "3093440",
    "end": "3099680"
  },
  {
    "text": "has two types of checks the one course check is let's just do the call and on the way back we check the course policy",
    "start": "3099680",
    "end": "3106079"
  },
  {
    "text": "and if it doesn't fulfill the policy we just don't pass the data back to the javascript yeah",
    "start": "3106079",
    "end": "3112480"
  },
  {
    "text": "and the other one is called the preflight request where course first asks the server are you okay with calling you",
    "start": "3112480",
    "end": "3119040"
  },
  {
    "text": "and if the server says no then it will not call the server what's the big difference here as well",
    "start": "3119040",
    "end": "3124960"
  },
  {
    "text": "think about spectre attacks again yeah with the first approach the data is in the ram of the browser with the second",
    "start": "3124960",
    "end": "3130800"
  },
  {
    "text": "approach the data will never arrive at the browser okay so that's cool",
    "start": "3130800",
    "end": "3136319"
  },
  {
    "text": "i mean i was blown away when i learned about this yeah um right and basically all you have to do",
    "start": "3136319",
    "end": "3141599"
  },
  {
    "text": "is put in a little bit of middleware in your pipeline that checks every api call has this header set job done",
    "start": "3141599",
    "end": "3147599"
  },
  {
    "text": "okay that's what we do basically um here uh",
    "start": "3147599",
    "end": "3154318"
  },
  {
    "text": "here that's that's the middleware that is basically checking for this um for this uh static xc serve header and",
    "start": "3154559",
    "end": "3162240"
  },
  {
    "text": "if it's not present it will reject the call yeah um",
    "start": "3162240",
    "end": "3167440"
  },
  {
    "text": "and then you can actually mark the end points in your application that this endpoints want this extra",
    "start": "3167440",
    "end": "3173760"
  },
  {
    "text": "security check right you might have other endpoints which don't want this maybe we want to",
    "start": "3173760",
    "end": "3178960"
  },
  {
    "text": "intentionally allow it across the cross origin scenario but if you mark it like this then all end points here in this",
    "start": "3178960",
    "end": "3185440"
  },
  {
    "text": "case mbc endpoints are secured by the extra check um",
    "start": "3185440",
    "end": "3190800"
  },
  {
    "text": "right and if i now run the front end right i can you see create to-do's and that is calling a",
    "start": "3190800",
    "end": "3197599"
  },
  {
    "text": "local api endpoint right just to prove i'm not cheating that is actually working",
    "start": "3197599",
    "end": "3203280"
  },
  {
    "text": "okay good and the last thing is remote apis",
    "start": "3203280",
    "end": "3210400"
  },
  {
    "text": "so if you need to call apis which live on a different server well then in this with this pattern you need to proxy the",
    "start": "3210400",
    "end": "3216800"
  },
  {
    "text": "calls okay um how you proxy them is totally up to you there are fundamentally i guess three",
    "start": "3216800",
    "end": "3223119"
  },
  {
    "text": "things you could do one is create a local api endpoint that gives you you know that that takes the local call and",
    "start": "3223119",
    "end": "3229040"
  },
  {
    "text": "then turns around and makes another api call to the other server right that is maybe good for smaller api services if",
    "start": "3229040",
    "end": "3236240"
  },
  {
    "text": "you realize you have to replicate a whole remote api in the local thing that might not be the",
    "start": "3236240",
    "end": "3241680"
  },
  {
    "text": "what you want right then you could employ some sort of reverse proxy technique yeah",
    "start": "3241680",
    "end": "3248318"
  },
  {
    "text": "there's actually a nice reverse proxy now for asp.net core called yap it's a weird name it stands for yet",
    "start": "3248640",
    "end": "3255040"
  },
  {
    "text": "another reverse proxy um and think of it as an in-app reverse proxy it integrates into your asp.net",
    "start": "3255040",
    "end": "3262640"
  },
  {
    "text": "host and you basically can say you know when you get a call on this uh end point",
    "start": "3262640",
    "end": "3268240"
  },
  {
    "text": "just transparently proxy the call to the other endpoint right",
    "start": "3268240",
    "end": "3273359"
  },
  {
    "text": "and that's what we used and the way this looks like is now basically you go to your endpoint mappings you say okay",
    "start": "3273359",
    "end": "3279200"
  },
  {
    "text": "whenever you get a call on api in the local application which is secured by the session and blah blah right um turn",
    "start": "3279200",
    "end": "3286640"
  },
  {
    "text": "around go to this other api and by the way while doing that attach the current access token of the user so from an api",
    "start": "3286640",
    "end": "3294400"
  },
  {
    "text": "point of view it looks like as if the front end would have called the api directly",
    "start": "3294400",
    "end": "3300400"
  },
  {
    "text": "okay so yeah so just to show you that so you know here's my to-do controller",
    "start": "3300400",
    "end": "3308319"
  },
  {
    "text": "right so let's just uh don't use this anymore",
    "start": "3308319",
    "end": "3313520"
  },
  {
    "text": "go here and enable the reverse proxy so run my",
    "start": "3313839",
    "end": "3320960"
  },
  {
    "text": "front-end host again",
    "start": "3320960",
    "end": "3324000"
  },
  {
    "text": "and run the back-end host which now has the the you know the shared to-do controller yeah",
    "start": "3327359",
    "end": "3333520"
  },
  {
    "text": "back and api host",
    "start": "3333520",
    "end": "3337359"
  },
  {
    "text": "and then in the browser i create something",
    "start": "3340720",
    "end": "3346480"
  },
  {
    "text": "and it just continues working without having to change the front end at all right it's transparent for the front end",
    "start": "3346799",
    "end": "3355440"
  },
  {
    "text": "good so that's pretty much our conclusion how to solve this problem",
    "start": "3355440",
    "end": "3362400"
  },
  {
    "text": "yeah after having all of these painful years of doing this and this stopped working then doing this and this stopped",
    "start": "3362400",
    "end": "3368720"
  },
  {
    "text": "working and this had this problem and so on so as i said from a security point of view that is the the recommended",
    "start": "3368720",
    "end": "3375839"
  },
  {
    "text": "technique and we have more and more customers where there's just a you know a statement uh all new spas",
    "start": "3375839",
    "end": "3384240"
  },
  {
    "text": "must not have uh tokens stored locally in the browser that's the requirement from a security",
    "start": "3384240",
    "end": "3389440"
  },
  {
    "text": "point of view and that's the only way how you can actually solve this that i know about",
    "start": "3389440",
    "end": "3395920"
  },
  {
    "text": "good so we have three more minutes any questions",
    "start": "3395920",
    "end": "3402440"
  },
  {
    "text": "really [Laughter]",
    "start": "3404000",
    "end": "3409010"
  },
  {
    "text": "for a few years serverless applications",
    "start": "3414640",
    "end": "3419920"
  },
  {
    "text": "what they're basically saying now is that if you have any security",
    "start": "3419920",
    "end": "3424960"
  },
  {
    "text": "considerations at all i don't know",
    "start": "3424960",
    "end": "3431200"
  },
  {
    "text": "several several is such a buzzword i'm not sure if that clashes right um",
    "start": "3431200",
    "end": "3438240"
  },
  {
    "text": "this this is so the way i understand serverless is it's a hosting model right but you're ultimately still",
    "start": "3438240",
    "end": "3444720"
  },
  {
    "text": "running some sort of host on the back end and if that host has all the features that you need to to to manage",
    "start": "3444720",
    "end": "3450799"
  },
  {
    "text": "sessions and manage tokens totally fine right all i'm saying is um",
    "start": "3450799",
    "end": "3458839"
  },
  {
    "text": "if you mean serverless me with there is no server then this is the wrong approach okay",
    "start": "3460000",
    "end": "3467359"
  },
  {
    "text": "any other questions yeah loud",
    "start": "3468559",
    "end": "3473799"
  },
  {
    "text": "so yeah so the way this works is basically is you do here that there's a new event",
    "start": "3496640",
    "end": "3503359"
  },
  {
    "text": "called option start event start something with sliding on check sliding",
    "start": "3503359",
    "end": "3508400"
  },
  {
    "text": "expiration okay so you implement this event and then you look for example for a special query string coming in and",
    "start": "3508400",
    "end": "3514720"
  },
  {
    "text": "when you see that query string you return some true or false or whatever right and then they don't slide the cookie",
    "start": "3514720",
    "end": "3522799"
  },
  {
    "text": "anything else another question yeah huh there are",
    "start": "3524960",
    "end": "3531760"
  },
  {
    "text": "a couple of new or specifications neutral tls and",
    "start": "3531760",
    "end": "3537760"
  },
  {
    "text": "i'm just just thinking if you implement one of them wouldn't",
    "start": "3537760",
    "end": "3543838"
  },
  {
    "text": "so so first okay so the question is with d-pop and mt-less which probably sounds",
    "start": "3549119",
    "end": "3554240"
  },
  {
    "text": "like greek words to most people here but um is it viable so first of all mtls you",
    "start": "3554240",
    "end": "3560160"
  },
  {
    "text": "can't use in the browser yeah it's not designed for browsers depop [Music]",
    "start": "3560160",
    "end": "3566160"
  },
  {
    "text": "i don't think so because still with depop the secret the key must be available to the",
    "start": "3566160",
    "end": "3572559"
  },
  {
    "text": "caller and again you where do you store the key now it will again end up in javascript",
    "start": "3572559",
    "end": "3578559"
  },
  {
    "text": "somehow right but i agree with you that what i see as a win is is that with this approach on",
    "start": "3578559",
    "end": "3586000"
  },
  {
    "text": "the server side you can easily do mtls and you can easily do depop right all of these extra security standards that pop",
    "start": "3586000",
    "end": "3592480"
  },
  {
    "text": "up they are pretty i mean mtls is it was designed for server to server communication right and it's it's",
    "start": "3592480",
    "end": "3599440"
  },
  {
    "text": "probably the most secure we have right now um and depop is possible in the browser but everyone is well aware that",
    "start": "3599440",
    "end": "3605839"
  },
  {
    "text": "this will not solve the cross-site scripting problem right",
    "start": "3605839",
    "end": "3611040"
  },
  {
    "text": "so yeah you can make it harder right and but in",
    "start": "3611040",
    "end": "3616720"
  },
  {
    "text": "security you always assume a motivated and skilled hacker right",
    "start": "3616720",
    "end": "3622240"
  },
  {
    "text": "and um they will find out how that works when you can inject javascript you can",
    "start": "3622240",
    "end": "3627920"
  },
  {
    "text": "inject arbitrary com complex javascript you can install event handlers right i mean all kinds of stuff you can do in",
    "start": "3627920",
    "end": "3633359"
  },
  {
    "text": "javascript yeah so",
    "start": "3633359",
    "end": "3636880"
  },
  {
    "text": "yeah um",
    "start": "3639280",
    "end": "3642680"
  },
  {
    "text": "so you're saying i i'm hitting the call centers on the front end actually i'm not that's the trick here",
    "start": "3656960",
    "end": "3663200"
  },
  {
    "text": "i'm not adding the course headers right by omitting the course headers i locked it down to same origin right and that",
    "start": "3663200",
    "end": "3670319"
  },
  {
    "text": "that's only relevant for browser to back-end calls and then on the server no one cares about cores",
    "start": "3670319",
    "end": "3675920"
  },
  {
    "text": "right yeah you skipped one of the slides",
    "start": "3675920",
    "end": "3683799"
  },
  {
    "text": "it's not important um it's really useful it's great okay",
    "start": "3687599",
    "end": "3693559"
  },
  {
    "text": "so you have to be a um the customer is um what we call the",
    "start": "3693559",
    "end": "3700000"
  },
  {
    "text": "fair trade policy is if your company makes less than one million it's free if they make more than",
    "start": "3700000",
    "end": "3706000"
  },
  {
    "text": "one million in a year you can afford it",
    "start": "3706000",
    "end": "3710400"
  },
  {
    "text": "yeah which i think is the way forward for open source",
    "start": "3711520",
    "end": "3716960"
  },
  {
    "text": "okay thanks for your time enjoy the rest of the day",
    "start": "3718319",
    "end": "3724280"
  },
  {
    "text": "you",
    "start": "3735359",
    "end": "3737440"
  }
]