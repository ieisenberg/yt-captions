[
  {
    "text": "welcome to the session at NDC Oso it's great to see a packed room even though I can't",
    "start": "4200",
    "end": "10639"
  },
  {
    "text": "see much because there's like a lot of bright lights in my face but so if you're in the front rows I can see you",
    "start": "10639",
    "end": "15799"
  },
  {
    "text": "so uh yeah thank you for raving that's awesome if you're in a back row you can do whatever you want I'm not going to see it anyway so all right so um I have",
    "start": "15799",
    "end": "22680"
  },
  {
    "text": "like very strict constraints so if you see me being nervous it's like I'm used to walking around but there's like cameras on me so I have to stay in this",
    "start": "22680",
    "end": "29359"
  },
  {
    "text": "boundary and try to do my best here we're going to talk about API security for the next hour and actually the the",
    "start": "29359",
    "end": "35000"
  },
  {
    "text": "opening slide I'm going to use here is something I've never had to do before and it's kind of a weird thing but there's uh supposed to be a national",
    "start": "35000",
    "end": "41520"
  },
  {
    "text": "security alert coming up uh at 12: so your phone will start making like a lot of noise and we'll be very distracted",
    "start": "41520",
    "end": "46960"
  },
  {
    "text": "and it's going to be awesome so uh it's supposed to be a test at least that's what they told me so uh let's",
    "start": "46960",
    "end": "52600"
  },
  {
    "text": "hope that that's actually true and that things will go away as quickly as possible but um yeah let's see what",
    "start": "52600",
    "end": "58359"
  },
  {
    "text": "happens uh as we go along it's going to be a unique experience for me as well so uh we'll see how that goes but the the",
    "start": "58359",
    "end": "65000"
  },
  {
    "text": "gist of it it's not like security alerts it's kind of in the same space but we're going to talk about API security more",
    "start": "65000",
    "end": "71119"
  },
  {
    "text": "specifically and when we talk about API security it's it's kind of important to realize that API security has has been",
    "start": "71119",
    "end": "76759"
  },
  {
    "text": "booming in the last couple of years as in it has gotten more and more important and part of it is because we're building",
    "start": "76759",
    "end": "83000"
  },
  {
    "text": "more and more API based applications like anything new you're going to build today is likely going to be API based we",
    "start": "83000",
    "end": "88159"
  },
  {
    "text": "have a lot of exposed apis and it turns out that a lot of vulnerabilities are also very visible in API based",
    "start": "88159",
    "end": "93640"
  },
  {
    "text": "applications we're also building more interconnected systems so things just get more complex and more complexity",
    "start": "93640",
    "end": "99079"
  },
  {
    "text": "typically means more chances to make a mistake to screw things up and to create",
    "start": "99079",
    "end": "104159"
  },
  {
    "text": "security vulnerabilities and one of the things that highlights this is the oasp API security top 10 so oasp is this",
    "start": "104159",
    "end": "110640"
  },
  {
    "text": "nonprofit organization that has been around since the the good old days like when we're building PHP and pearl based",
    "start": "110640",
    "end": "116240"
  },
  {
    "text": "web applications like yes those days um OAS back then created is top 10 for",
    "start": "116240",
    "end": "121399"
  },
  {
    "text": "about the 10 most dangerous web security vulnerabilities and over time OAS",
    "start": "121399",
    "end": "126439"
  },
  {
    "text": "evolved as well web applications became API based apps and mobile apps and AI stuff and so on and what we'll see in in",
    "start": "126439",
    "end": "132120"
  },
  {
    "text": "the OAS organization is a lot of these dedicated top 10 because not all web security vulnerabilities translate well",
    "start": "132120",
    "end": "137760"
  },
  {
    "text": "into apis like you don't really have cross- out scripting in an API based application however you have other",
    "start": "137760",
    "end": "143440"
  },
  {
    "text": "problems and this oasp API executed up then it's a second iteration so it's been around for like five six years",
    "start": "143440",
    "end": "150160"
  },
  {
    "text": "right before the pandemic hits and it highlights the 10 most dangerous or most common vulnerabilities in modern apis",
    "start": "150160",
    "end": "156680"
  },
  {
    "text": "and these things are it's not an exhaustive list of stuff to check and then you're good it's kind of a starting",
    "start": "156680",
    "end": "161959"
  },
  {
    "text": "point like hey if you're doing apis these are the things you really want to take into account and that's why the",
    "start": "161959",
    "end": "167480"
  },
  {
    "text": "slide is right here I'm going to talk about quite a few of these issues uh but don't worry I'm not going to go over like OAS top 10 number one and all the",
    "start": "167480",
    "end": "173560"
  },
  {
    "text": "way to 10 because trust me if you do that you're going to be asleep by item one and a half you're going be like a",
    "start": "173560",
    "end": "178760"
  },
  {
    "text": "and that doesn't work very well so what I'm going to do instead is I'm not not going to list them one by one I'm going to talk about real world cases I'm going",
    "start": "178760",
    "end": "185400"
  },
  {
    "text": "to talk about a smart Scale app like a a scale to weigh yourself and it has an app and an API and it had some security",
    "start": "185400",
    "end": "191440"
  },
  {
    "text": "issues as well actually quite a few security issues so this is going to be my how to screw it up example um I say",
    "start": "191440",
    "end": "198400"
  },
  {
    "text": "that respectfully but it's just a fact this is how not to do API security then",
    "start": "198400",
    "end": "203879"
  },
  {
    "text": "the second case study we'll touch upon is from drawbox and drawbox is actually on the other end of the spectrum like",
    "start": "203879",
    "end": "209280"
  },
  {
    "text": "drawbox is a company that invests heavily in security they have a very good security team they know what",
    "start": "209280",
    "end": "214959"
  },
  {
    "text": "they're doing they spend a lot of resources on security and even then things tend to go wrong and this is kind",
    "start": "214959",
    "end": "220799"
  },
  {
    "text": "of the wakeup call to you as well like hey even if you're trying your best you're going to make mistakes it's going",
    "start": "220799",
    "end": "226840"
  },
  {
    "text": "to fail at some point and that's why I'm doing the stock that's why I'm here talking about these vulnerabilities now",
    "start": "226840",
    "end": "233000"
  },
  {
    "text": "who am I I'm Philip D I'm um a security expert and I run my own company called pragmatic web security what I do is I",
    "start": "233000",
    "end": "239920"
  },
  {
    "text": "did a PhD in web security so I've been in security for a long time like really deep into it and uh since my PhD I've",
    "start": "239920",
    "end": "245959"
  },
  {
    "text": "been helping developers understand security like trying to explain very complicated topics in a way that you",
    "start": "245959",
    "end": "251680"
  },
  {
    "text": "understand translate them into actional advice uh coding guidelines best practices just like I will do in the",
    "start": "251680",
    "end": "257479"
  },
  {
    "text": "talk right here so I do that through training I did a two-day workshop here at NC Oslo so some of you may have been",
    "start": "257479",
    "end": "263400"
  },
  {
    "text": "there um I do that through Consulting online courses and so on and so on all right I'm also a Google developer expert",
    "start": "263400",
    "end": "269360"
  },
  {
    "text": "which caus of some confusion I'm not employed by Google but it's kind of an outreach program that they reward people",
    "start": "269360",
    "end": "275039"
  },
  {
    "text": "that are contributing to the community so I'm a developer expert for security because of the talks and the Articles",
    "start": "275039",
    "end": "280280"
  },
  {
    "text": "and all of the stuff that I'm doing I'm not employed by Google they just send me free swag every now and then which makes",
    "start": "280280",
    "end": "285400"
  },
  {
    "text": "both of us kind of happy so that's that's a good deal and then I'm also a sec upde organizer SE upde is a course",
    "start": "285400",
    "end": "291639"
  },
  {
    "text": "secure application development it's a course in Belgium weekl long course on application security um and it ran",
    "start": "291639",
    "end": "296840"
  },
  {
    "text": "actually last week so if I look a bit tired that kind of explains uh why it's a hell of an organization but it's a",
    "start": "296840",
    "end": "302520"
  },
  {
    "text": "very great course where we bring in speakers from all over the world to teach application security all right so if you ever need an excuse to visit",
    "start": "302520",
    "end": "308320"
  },
  {
    "text": "Belgium that course uh which runs again next year in June is the perfect reason to come visit us and enjoy beautiful",
    "start": "308320",
    "end": "314759"
  },
  {
    "text": "culture and uh liquid chromy let's put it like that so all right um about this",
    "start": "314759",
    "end": "320960"
  },
  {
    "text": "talk you can easily find me online um the talks are listed on my website as well you'll find the slides there you",
    "start": "320960",
    "end": "326120"
  },
  {
    "text": "can also scan the code if you want to um if you want to grabb a copy of the slides PDF copy um just to keep that in",
    "start": "326120",
    "end": "332039"
  },
  {
    "text": "mind as well all right let's talk about API security",
    "start": "332039",
    "end": "338160"
  },
  {
    "text": "shall we we have about 45 minutes no 55 minutes sorry 55 minutes to dive deep",
    "start": "338160",
    "end": "343319"
  },
  {
    "text": "into API security and I want to do that by starting to talk about serers side request forgery server side request",
    "start": "343319",
    "end": "349639"
  },
  {
    "text": "forgery is this kind of a weird issue it's something that all of a sudden popped up on the radar like hold on there's a massive problem here and has",
    "start": "349639",
    "end": "356360"
  },
  {
    "text": "resulted in major breaches and it's kind of a hit or Miss problem like either you have ssrf vulnerabilities and you have",
    "start": "356360",
    "end": "363160"
  },
  {
    "text": "to deal with them in various ways you'll probably have them in multiple places or it's not an issue at all and you're like",
    "start": "363160",
    "end": "368639"
  },
  {
    "text": "me I don't care um in that case well I'll wake you up when we're done with ssrf but if you really care about",
    "start": "368639",
    "end": "374880"
  },
  {
    "text": "service at request forgery this is really important so why does this matter server side request forgery is a",
    "start": "374880",
    "end": "381840"
  },
  {
    "text": "vulnerability where the attacker can trick or manipulate your server into sending a request from its origin so the",
    "start": "381840",
    "end": "389080"
  },
  {
    "text": "server will send a request to somewhere else and that can allow the attacker to control certain actions or behaviors or",
    "start": "389080",
    "end": "394720"
  },
  {
    "text": "extract certain information and so on and this matters because we all too often we think about our environments",
    "start": "394720",
    "end": "400240"
  },
  {
    "text": "our application environments our architectures our deployments as a secure versus an insecure version right",
    "start": "400240",
    "end": "406919"
  },
  {
    "text": "so we have our firewall our perimeter our private networks or whatever that's Paradise basically where everything is beautiful and sunshine and blue oceans",
    "start": "406919",
    "end": "414560"
  },
  {
    "text": "and whatever then you have the dark outside world where the attackers live and that's how we often think about",
    "start": "414560",
    "end": "419720"
  },
  {
    "text": "application security as well and we all do that that's just the way things are",
    "start": "419720",
    "end": "425160"
  },
  {
    "text": "um and that's essentially what we're really uh talking about with server side request fory because when we do that an",
    "start": "425160",
    "end": "431039"
  },
  {
    "text": "attacker is able to trick our server our back ends into making requests so what's going to happen is something like this",
    "start": "431039",
    "end": "437160"
  },
  {
    "text": "the attacker provides a URL one way or another a very good example of how this happens is a web hook many applications",
    "start": "437160",
    "end": "443280"
  },
  {
    "text": "these days have web hooks where a user one of your users comes to the application says like if something",
    "start": "443280",
    "end": "448319"
  },
  {
    "text": "happens in your app like an event maybe send me a request on this URL if that user is malicious they can provide you a",
    "start": "448319",
    "end": "455080"
  },
  {
    "text": "malicious URL and at some point something will happen in the application you'll call the web hook you're now calling a URL controlled by the user",
    "start": "455080",
    "end": "461800"
  },
  {
    "text": "that's the risk here and why does this matter because the request is originating from within your secure",
    "start": "461800",
    "end": "467120"
  },
  {
    "text": "perimeter secure perimeter is that still exists let's uh keep that discussion for a different time but that's the whole",
    "start": "467120",
    "end": "473240"
  },
  {
    "text": "problem because now all of a sudden the attacker controls where the request is going to and they might be able to reach",
    "start": "473240",
    "end": "478440"
  },
  {
    "text": "things on Local Host the things you thought of like yeah nobody else can call this except my application so we're",
    "start": "478440",
    "end": "483560"
  },
  {
    "text": "good we don't really need security there or internal services that are less protected because it's internal anyway",
    "start": "483560",
    "end": "489000"
  },
  {
    "text": "not reachable from the outside world like the dark gloomy place you can't reach this internal service so maybe",
    "start": "489000",
    "end": "494599"
  },
  {
    "text": "security is a bit less relevant we've all made that argument at some point in time whether it's a right argument or",
    "start": "494599",
    "end": "500440"
  },
  {
    "text": "not that's essentially what happens and that is the danger of server side request forgery it's basically a Gateway",
    "start": "500440",
    "end": "507039"
  },
  {
    "text": "into your internal networks your internal environment allowing the attacker to send that request all right",
    "start": "507039",
    "end": "514800"
  },
  {
    "text": "so how does that happen what are the features that triggers this web hooks are one example other examples are for",
    "start": "514800",
    "end": "521518"
  },
  {
    "text": "example features for the attacker gives you a URL to fetch an image that's exactly what happened at drawbox they",
    "start": "521519",
    "end": "527040"
  },
  {
    "text": "allowed branding with URLs and you provide URL like hey my logo stuff is there and drawbox would accept the URL",
    "start": "527040",
    "end": "533000"
  },
  {
    "text": "fetch the logo stuff and load it into your configuration of your account that's another example link previews you",
    "start": "533000",
    "end": "539560"
  },
  {
    "text": "often have like LinkedIn if you post something on LinkedIn with a a link to like NDC ow you drop it in and Linkedin",
    "start": "539560",
    "end": "545079"
  },
  {
    "text": "is being like o URL and it's going to take that URL fetch that and show you like the little preview with an image and short description and a title that's",
    "start": "545079",
    "end": "551880"
  },
  {
    "text": "a serers side request as well so these things are quite common in modern applications all",
    "start": "551880",
    "end": "558600"
  },
  {
    "text": "right when it occurs your internal um infrastructure is exposed and it may",
    "start": "558600",
    "end": "564680"
  },
  {
    "text": "cause quite a few problems in practice all right so how do we protect against that that's kind of the gist of this",
    "start": "564680",
    "end": "570880"
  },
  {
    "text": "talk it's not like a depressing talk of all of this stuff can go wrong it's kind of should be an uplifting talk like hey",
    "start": "570880",
    "end": "577519"
  },
  {
    "text": "here's how we can fix that in practice but it's going to take a few steps to get there so let's look at some examples",
    "start": "577519",
    "end": "582920"
  },
  {
    "text": "the example of fetching an image what happened at drawbox here's a legitimate URL that we want to allow like this is",
    "start": "582920",
    "end": "589600"
  },
  {
    "text": "legitimate data and we want to load that image and that's perfectly fine something like this is invalid right I",
    "start": "589600",
    "end": "595760"
  },
  {
    "text": "mean Local Host P 8080 that's not going to be a valid URL that's not something we want to allow and ideally when you're",
    "start": "595760",
    "end": "602279"
  },
  {
    "text": "building security measures you would like to go for an allow list approach right you would like to go to to an",
    "start": "602279",
    "end": "608120"
  },
  {
    "text": "approach that says like hey these things I know are good these are allowed like yes you're allowed to do this and",
    "start": "608120",
    "end": "613240"
  },
  {
    "text": "everything else is blocked however for server side request forgery that's one of the cases where",
    "start": "613240",
    "end": "618519"
  },
  {
    "text": "this actually gets flipped around because in the example like this or the example of a web hook everything is",
    "start": "618519",
    "end": "624600"
  },
  {
    "text": "allowed except your own stuff like the stuff you don't want to be called and that's where you you have to turn the",
    "start": "624600",
    "end": "630000"
  },
  {
    "text": "model around and we're going to have to implement an approach that says like hey things go into local host or like a local network or maybe a private Network",
    "start": "630000",
    "end": "636600"
  },
  {
    "text": "range yeah we don't really want to do that for a web hook or for fetching an image but things running outside of the",
    "start": "636600",
    "end": "642160"
  },
  {
    "text": "internet are acceptable and that is a different approach all right so how do",
    "start": "642160",
    "end": "647320"
  },
  {
    "text": "we do that while we take a URL what do we have to check we have to check that the host name of the URL like the host",
    "start": "647320",
    "end": "653920"
  },
  {
    "text": "part points to not something we don't want to call but something external",
    "start": "653920",
    "end": "660200"
  },
  {
    "text": "shouldn't be too hard right I mean why am I talking about this shouldn't be that difficult well it turns out that parsing URLs is kind of difficult",
    "start": "660200",
    "end": "667000"
  },
  {
    "text": "especially when they're malicious when some malicious user is crafting URL that might confuse your application and",
    "start": "667000",
    "end": "673480"
  },
  {
    "text": "remember this is what happened at drawbox which I'll show you in the next slide so what's the problem here your all parsers are in various places and",
    "start": "673480",
    "end": "679920"
  },
  {
    "text": "you have application code that is basically going to say like here's the web hook I'm going to take the host part I'm going to resolve that into an IP",
    "start": "679920",
    "end": "685720"
  },
  {
    "text": "address and then check if that is a local IP address or maybe an external one all right and if you do that in your",
    "start": "685720",
    "end": "691279"
  },
  {
    "text": "application code you're going to be at the bottom like nodejs Pearl go PHP Ruby all of those languages and they will see",
    "start": "691279",
    "end": "697079"
  },
  {
    "text": "a UR like this with two ad signs which is maliciously crafted it's not supposed to be like that but an attacker can",
    "start": "697079",
    "end": "702800"
  },
  {
    "text": "provide that and those languages will resolve this to google.com and you're going to check this and like yeah that",
    "start": "702800",
    "end": "708320"
  },
  {
    "text": "seems legit bam and you will send that request to that server except when you send the request and you use a library",
    "start": "708320",
    "end": "714279"
  },
  {
    "text": "to do that and one common library is lip curl which is hooked into many programming languages as well you use",
    "start": "714279",
    "end": "720360"
  },
  {
    "text": "Curl or lip curl to send that request it's a different URL parser with a different interpretation it's going to be like oo this request is going to go",
    "start": "720360",
    "end": "727000"
  },
  {
    "text": "to evil.com so you checked it you said it's safe you sent a request and it actually goes to well evil.com or",
    "start": "727000",
    "end": "732920"
  },
  {
    "text": "internal local host or internal addresses and so on and so on and you're now victim to a server side request fory",
    "start": "732920",
    "end": "739240"
  },
  {
    "text": "attack just like that you did nothing wrong except well no I I don't think we can blame Developers for this this is",
    "start": "739240",
    "end": "745279"
  },
  {
    "text": "just a weird piece of behavior in url parsers and there's a couple of these B passes known today exactly what happened",
    "start": "745279",
    "end": "752680"
  },
  {
    "text": "at Dropbox so the Dropbox case with service at request fory they were like okay we have to check where the request",
    "start": "752680",
    "end": "758240"
  },
  {
    "text": "is going and they actually checked that um but what they did is they used one",
    "start": "758240",
    "end": "763800"
  },
  {
    "text": "application logic function to check it that's the top one which saw this URL db. dropbox.com at1 1271 and they",
    "start": "763800",
    "end": "770839"
  },
  {
    "text": "thought yeah this is going to our servers where the images are hosted this is perfectly fine and then they sent the request using lip curl and lip curl saw",
    "start": "770839",
    "end": "778040"
  },
  {
    "text": "this as 127 01 and we had that exact vulnerability that exact bypass that's",
    "start": "778040",
    "end": "784160"
  },
  {
    "text": "how these things come to life and how they manifest themselves in applications all right so how do we fix",
    "start": "784160",
    "end": "791000"
  },
  {
    "text": "this then what's the actual solution to this and the solution to this is to avoid parsing a malicious URL twice what",
    "start": "791000",
    "end": "798639"
  },
  {
    "text": "we really want to avoid is taking that untrusted URL from the user parsing it here and parsing it there if you only do",
    "start": "798639",
    "end": "804240"
  },
  {
    "text": "it once there's no confusion anymore because you see it once you can reason about that one representation whether",
    "start": "804240",
    "end": "810199"
  },
  {
    "text": "it's good or not either rejected or accepted and from that point on you use that accepted representation and the",
    "start": "810199",
    "end": "815959"
  },
  {
    "text": "problem goes away and one of the ways to solve that is by doing this on the server by creating a safe URI first so",
    "start": "815959",
    "end": "823000"
  },
  {
    "text": "you get some input I'm actually have some code examples this is the Dropbox case but I actually have some code here",
    "start": "823000",
    "end": "828639"
  },
  {
    "text": "as well so we we we remove ambiguity on the server by accepting the UR input we",
    "start": "828639",
    "end": "833920"
  },
  {
    "text": "parse it using URL parser this is no GS code uh we parse it using URL parser and we use use that representation to",
    "start": "833920",
    "end": "840440"
  },
  {
    "text": "construct a new safe URL and whatever the parer sees that's what we will use as a URL all right of course you still",
    "start": "840440",
    "end": "847120"
  },
  {
    "text": "have to do input validation to make sure URL is valid it points to a host you want to accept and so on and so on but",
    "start": "847120",
    "end": "852680"
  },
  {
    "text": "that's how you uh remove the ambiguity parse it once and then use that that view for the rest of the application all",
    "start": "852680",
    "end": "860720"
  },
  {
    "text": "right we can also move this towards the client you can actually Force the client to do this for you and only accept a",
    "start": "860720",
    "end": "867399"
  },
  {
    "text": "decomposed URL how how does that work well in this case it's a browser based application so the front end running",
    "start": "867399",
    "end": "873440"
  },
  {
    "text": "JavaScript in the browser would parse the URL provided by the user so the user still enters URL in an input field we",
    "start": "873440",
    "end": "879639"
  },
  {
    "text": "take that value we parse it on the browser and we decompose it into the different parts and that's the data we",
    "start": "879639",
    "end": "884800"
  },
  {
    "text": "submit to the server so on the server we don't get a full URL but we get a a scheme a host name a port a poth and so",
    "start": "884800",
    "end": "891199"
  },
  {
    "text": "on and so on and each of these values becomes easier to reason about there's no ambiguity I mean the host name",
    "start": "891199",
    "end": "896959"
  },
  {
    "text": "there's not going to be confusion like is the host name dis value or that value no it's the exact string that you get as the host name value and you can input",
    "start": "896959",
    "end": "903600"
  },
  {
    "text": "validate that like no add signs please and so on and so on and then you can verify that this points to a trusted",
    "start": "903600",
    "end": "909360"
  },
  {
    "text": "location or something that you actually want to call and you can accept this as input and that's how you would protect",
    "start": "909360",
    "end": "916120"
  },
  {
    "text": "against serers side request forgery remove the ambiguity and then you can reason about that one representation to",
    "start": "916120",
    "end": "922480"
  },
  {
    "text": "make sure it's a safe and trusted value all right brings us to take away number",
    "start": "922480",
    "end": "929120"
  },
  {
    "text": "one protect against server side request forgery um that's kind of the important takeaway here server side request",
    "start": "929120",
    "end": "934360"
  },
  {
    "text": "forgeries uh vulnerabilities often occur whenever you have a feature on the server that calls external hosts all",
    "start": "934360",
    "end": "940560"
  },
  {
    "text": "right can be very visible like web hooks can be somewhat invisible maybe hidden in libraries uh we have seen this in PDF",
    "start": "940560",
    "end": "947319"
  },
  {
    "text": "generation libraries as well where you accept like a document and you generate PDFs from that it can also trigger the",
    "start": "947319",
    "end": "952839"
  },
  {
    "text": "sending of external requests all right the best thing you can do is ensure that this is trustworthy data that is",
    "start": "952839",
    "end": "959319"
  },
  {
    "text": "unambiguous when you accept URLs and then Additionally you can also isolate those features in like separate services",
    "start": "959319",
    "end": "965279"
  },
  {
    "text": "and shield them off from your internal infrastructure but that's kind of an advanced defense in depth approach to",
    "start": "965279",
    "end": "970720"
  },
  {
    "text": "this problem all right that was one of the items of the OAS API security top them",
    "start": "970720",
    "end": "978759"
  },
  {
    "text": "now for the second item I want to talk about broken authentication and broken authentication is this very generic item",
    "start": "978759",
    "end": "985519"
  },
  {
    "text": "and it has to do with um all kinds of vulnerabilities that essentially result in the taking over of a user's account",
    "start": "985519",
    "end": "991519"
  },
  {
    "text": "and it can manifest itself in a thousand different ways and one of the perfect ways to describe this is using the smart",
    "start": "991519",
    "end": "997000"
  },
  {
    "text": "scale application so in this case a smart scale application uh I'm not sure",
    "start": "997000",
    "end": "1002120"
  },
  {
    "text": "if the scale itself was decent but the API behind it definitely wasn't and it had this abuse case where you could",
    "start": "1002120",
    "end": "1007839"
  },
  {
    "text": "abuse the forget password functionality to take over an account so all you need is like an email address of a legitimate",
    "start": "1007839",
    "end": "1014360"
  },
  {
    "text": "user and then you can um forget the password for that legitimate user and all of a sudden you can break into the",
    "start": "1014360",
    "end": "1020399"
  },
  {
    "text": "application by taking control of that specific account and to explain this what I'm going to do is I'm going to use",
    "start": "1020399",
    "end": "1025880"
  },
  {
    "text": "a demo a live demo so it's always a bit risky uh but it should be fine um I'm going to do this live demo on breaking",
    "start": "1025880",
    "end": "1032438"
  },
  {
    "text": "authentication I'm going to walk you through a bunch of steps explain how attackers come after your application show you how easy it is and also show",
    "start": "1032439",
    "end": "1038520"
  },
  {
    "text": "you a couple of things you can do to defend against this all right let's see if we can actually get this to",
    "start": "1038520",
    "end": "1046438"
  },
  {
    "text": "work all right what I'm going to do is I'm going to use a tool called burp Suite burp Suite is what fent testers",
    "start": "1046439",
    "end": "1053120"
  },
  {
    "text": "and attackers also use to Target your application so in burp Suite you actually have one of the features there",
    "start": "1053120",
    "end": "1059080"
  },
  {
    "text": "is actually really awesome it's a proxy and that proxy allows you to to intercept all traffic between a browser",
    "start": "1059080",
    "end": "1065120"
  },
  {
    "text": "and the back end so what we're going to do is we're going to open this browser that will Channel all traffic through",
    "start": "1065120",
    "end": "1071799"
  },
  {
    "text": "burp and we're going to go to the application um okay crap um I should have checked",
    "start": "1071799",
    "end": "1080840"
  },
  {
    "text": "this yeah I forgot to enable internet so there's no styling but it probably",
    "start": "1082720",
    "end": "1088159"
  },
  {
    "text": "should work we'll see if it breaks um as live demos should always do so the application it's a restaurant review",
    "start": "1088159",
    "end": "1093679"
  },
  {
    "text": "application you can log in create restaurant reviews and as a legitimate user we can actually um authenticate",
    "start": "1093679",
    "end": "1099280"
  },
  {
    "text": "here we can log in it looks very pretty uh I know awesome styling we're",
    "start": "1099280",
    "end": "1104360"
  },
  {
    "text": "authenticated and we can we're now logged in as one of the users we're a malicious user we're exploring the",
    "start": "1104360",
    "end": "1109679"
  },
  {
    "text": "application to see how it operates and if we can find some weak spots right so let's see what happens um here so we can",
    "start": "1109679",
    "end": "1116280"
  },
  {
    "text": "now go back to burp and we can look at the HTTP history so you can see here that we loaded the application and we uh",
    "start": "1116280",
    "end": "1121840"
  },
  {
    "text": "called the login endpoints and as you can see we provided a username my us my email address and then a password test 1",
    "start": "1121840",
    "end": "1128520"
  },
  {
    "text": "2 3 4 this is not a course on choosing secure password so just ignore that and",
    "start": "1128520",
    "end": "1133960"
  },
  {
    "text": "this is a legitimate authentication now what happens if we try to Lo in with a",
    "start": "1133960",
    "end": "1139679"
  },
  {
    "text": "password that's wrong we get an error message login failed please try again it's like okay and what happens if we",
    "start": "1139679",
    "end": "1146880"
  },
  {
    "text": "log in with an email address that doesn't exist that's actually formatted validly",
    "start": "1146880",
    "end": "1153039"
  },
  {
    "text": "as an email address we get the same error message",
    "start": "1153039",
    "end": "1158360"
  },
  {
    "text": "all right so let's inspect what's going on behind the scenes what we have here is we have a failed attempt and the",
    "start": "1158360",
    "end": "1163440"
  },
  {
    "text": "message here is invalid email or password now sometimes applications are a bit silly as in they return an error",
    "start": "1163440",
    "end": "1169240"
  },
  {
    "text": "message in the API saying like hey this user doesn't exist and you're like oh interesting because now we learn whether",
    "start": "1169240",
    "end": "1174520"
  },
  {
    "text": "users exist or not and to compromise an existing user in the application we have to find existing users first we don't",
    "start": "1174520",
    "end": "1180120"
  },
  {
    "text": "know who has an account maybe you have an account on this application but we don't know in practice all right so do",
    "start": "1180120",
    "end": "1186200"
  },
  {
    "text": "we have a different error message this is one and the second error where we have a a non-existent user gives the",
    "start": "1186200",
    "end": "1192120"
  },
  {
    "text": "same error message so nothing is happening here we can't really discern whether a user exists or not that's good",
    "start": "1192120",
    "end": "1197520"
  },
  {
    "text": "coding so that's already awesome thank you for the sound",
    "start": "1197520",
    "end": "1204799"
  },
  {
    "text": "effects all right if you have trouble staying awake this definitely helps so",
    "start": "1212880",
    "end": "1218159"
  },
  {
    "text": "not that I have your full attention um what's going on here behind the scenes",
    "start": "1218159",
    "end": "1223400"
  },
  {
    "text": "is yes we'll we'll have some people that are bit delayed with the notifications so this is going to go on for a few more",
    "start": "1223400",
    "end": "1228919"
  },
  {
    "text": "minutes but uh what we have behind the scenes is we have a database of users we have password stored in the database",
    "start": "1228919",
    "end": "1234679"
  },
  {
    "text": "stored securely with a password hashing function and so on but if you look at the authentication logic of the login endpoints so what we have here that's",
    "start": "1234679",
    "end": "1241679"
  },
  {
    "text": "login endpoints we look for the user if we can't find it we give an error message the message to the API is this",
    "start": "1241679",
    "end": "1247480"
  },
  {
    "text": "one it's the same as we give when the user does exist but the password is wrong so that's good that's a secure coding correcti this um so if the user",
    "start": "1247480",
    "end": "1254400"
  },
  {
    "text": "doesn't exist we bail out and we give an error message but if the user exists we check the the password that's kind of",
    "start": "1254400",
    "end": "1260280"
  },
  {
    "text": "normal behavior right that's how you supposed to implement authentication however this operation checking the",
    "start": "1260280",
    "end": "1266120"
  },
  {
    "text": "password is using a password hashing function and a password hashing function is designed to withstand Brute Force",
    "start": "1266120",
    "end": "1272480"
  },
  {
    "text": "attacks in case somebody steals your hashes they're not able to Brute Force the passwords of your users so that's",
    "start": "1272480",
    "end": "1277799"
  },
  {
    "text": "the whole idea of this and that operation is purposely slow meaning it will take at least half",
    "start": "1277799",
    "end": "1284080"
  },
  {
    "text": "a second if it's good it should take at least half a second to verify and that might be observable Behavior so what can",
    "start": "1284080",
    "end": "1289640"
  },
  {
    "text": "we do we can use a timing attack to figure out if the code the code actually the application reaches this part of the",
    "start": "1289640",
    "end": "1295400"
  },
  {
    "text": "code yes or no so let's let's do exactly that what we're going to do is we're going to use this request and send it to",
    "start": "1295400",
    "end": "1301360"
  },
  {
    "text": "a feature called the Intruder a very ominous name but it allows us to launch an attack against the application and we",
    "start": "1301360",
    "end": "1307480"
  },
  {
    "text": "Define some fields we want to play around with we want to provide values for the email address because we want to find out if a certain email address",
    "start": "1307480",
    "end": "1313880"
  },
  {
    "text": "exists in the application all right so that's what we're doing right here and we provide a list of payloads here you",
    "start": "1313880",
    "end": "1320480"
  },
  {
    "text": "can load a list of emails which we bought uh we got from underground forums like data breaches of Facebook Messenger",
    "start": "1320480",
    "end": "1326600"
  },
  {
    "text": "has like a whole bunch of email like millions and millions of email addresses so we're going to load a list with millions and millions of email addresses",
    "start": "1326600",
    "end": "1333400"
  },
  {
    "text": "or something like that um in our application there's only like a few because Millions would take a while in",
    "start": "1333400",
    "end": "1338559"
  },
  {
    "text": "the demo and it would be very very boring to see and we're going to Lounge this uh against the application so we",
    "start": "1338559",
    "end": "1344640"
  },
  {
    "text": "want to do a timing attack so we don't want to do concurrent requests but we want to do um one request at a time so",
    "start": "1344640",
    "end": "1351960"
  },
  {
    "text": "we can get like good results so one request at a time and we start the attack what you see here",
    "start": "1351960",
    "end": "1361120"
  },
  {
    "text": "is burp having some UI issues I don't know why it does that but what you see here is we send a whole bunch of",
    "start": "1364279",
    "end": "1370200"
  },
  {
    "text": "requests we tried seven different email addresses uh and they all failed which is normal because well we don't have the",
    "start": "1370200",
    "end": "1375720"
  },
  {
    "text": "password for these users otherwise it would be very very easy so what we can do",
    "start": "1375720",
    "end": "1381200"
  },
  {
    "text": "now is enable the column response completed which shows us the response times and this is all running on Local",
    "start": "1381200",
    "end": "1387559"
  },
  {
    "text": "Host so it's super fast um and you can see like response time one millisecond 2 milliseconds blah blah blah 800 huh",
    "start": "1387559",
    "end": "1394159"
  },
  {
    "text": "that's interesting 800 milliseconds um this is observable Behavior even over the internet if you have a good internet",
    "start": "1394159",
    "end": "1399559"
  },
  {
    "text": "connection this is going to be observable and this means that the application has been calculating a password hash so that's um a very good",
    "start": "1399559",
    "end": "1406039"
  },
  {
    "text": "piece of information because now we know that victim at virtual food.com which is kind of obvious here but that this email",
    "start": "1406039",
    "end": "1412279"
  },
  {
    "text": "address exists in the application so that's called a username enumeration attack and that's something that's very",
    "start": "1412279",
    "end": "1418200"
  },
  {
    "text": "effective to find out a list of existing users and email addresses can be",
    "start": "1418200",
    "end": "1423400"
  },
  {
    "text": "harvested From The Underground web but you can also get them by guessing or constructing email addresses if you're",
    "start": "1423400",
    "end": "1428480"
  },
  {
    "text": "working at a company and like pragmatic web security and your email address is philip. pragmatic web.com then it's",
    "start": "1428480",
    "end": "1435039"
  },
  {
    "text": "going to be very easy to go on LinkedIn find like a list of employees and use their first name do last name at",
    "start": "1435039",
    "end": "1440400"
  },
  {
    "text": "something something uh to construct a list of email addresses to use this input for this type of attack all right",
    "start": "1440400",
    "end": "1446440"
  },
  {
    "text": "that was phase one of the attack so um let's first let's talk about the fix how",
    "start": "1446440",
    "end": "1454039"
  },
  {
    "text": "do we fix this how do we avoid this timing attack well this operation should take as long as this operation and one",
    "start": "1454039",
    "end": "1460159"
  },
  {
    "text": "of the ways you can do that is the easy way is to calculate the password hash",
    "start": "1460159",
    "end": "1465440"
  },
  {
    "text": "for a non-existent user this is maybe not the best approach because it's expensive as in it consumes service side",
    "start": "1465440",
    "end": "1471679"
  },
  {
    "text": "resources um but we can now calculate a fake password hash even if the user doesn't exist and that will basically",
    "start": "1471679",
    "end": "1477320"
  },
  {
    "text": "take as long as the other one so let's see the effect here if we launch the attack again um the UI is working",
    "start": "1477320",
    "end": "1484640"
  },
  {
    "text": "correctly now you can see that all of them take a long time and we can see that the response completed is all about 800 milliseconds something so this",
    "start": "1484640",
    "end": "1491360"
  },
  {
    "text": "becomes unobservable you could also do this with like a sleep or a delay somewhere uh but this one shows you the",
    "start": "1491360",
    "end": "1497080"
  },
  {
    "text": "effect of having constant time effects all right we're timing these",
    "start": "1497080",
    "end": "1502440"
  },
  {
    "text": "really good by the way so let's keep doing that all right now",
    "start": "1502440",
    "end": "1508080"
  },
  {
    "text": "we know that the user exists so how can we take over that account that's the ultimate goal here account takeover so",
    "start": "1508080",
    "end": "1513120"
  },
  {
    "text": "what do we do we want to abuse that account and one of the features we can do that is in the the nature of the",
    "start": "1513120",
    "end": "1518159"
  },
  {
    "text": "smart scale the forgot password feature so we forgot our password so we what does happen we enter an email address",
    "start": "1518159",
    "end": "1524440"
  },
  {
    "text": "and we reset the password and we get like a message hey we have reset your password password and you can now",
    "start": "1524440",
    "end": "1529559"
  },
  {
    "text": "recover your account how do we do that by going to our Webmail webmail.rr.com um we can reset",
    "start": "1529559",
    "end": "1536720"
  },
  {
    "text": "the password by clicking this link and that's how a lot of applications do this you get like this password reset code",
    "start": "1536720",
    "end": "1541760"
  },
  {
    "text": "and with this unique code you can reset a password for your account right so we can click this we end up here we can set",
    "start": "1541760",
    "end": "1547679"
  },
  {
    "text": "a new password I'm going to use the name of my dog uh fluffy my non-existent dog by the way um don't use this as my real",
    "start": "1547679",
    "end": "1554720"
  },
  {
    "text": "password it doesn't work anywhere uh but fluffy we reset the password we can now log in with our new password",
    "start": "1554720",
    "end": "1561200"
  },
  {
    "text": "which should be fluffy and off we go we're logged in and we're",
    "start": "1561200",
    "end": "1566520"
  },
  {
    "text": "all good so what happened behind the scenes behind the scenes we still have",
    "start": "1566520",
    "end": "1571559"
  },
  {
    "text": "our proxy running we requested our password reset so we provide an email",
    "start": "1571559",
    "end": "1576679"
  },
  {
    "text": "address to the API and it says like yeah okay we've basically meaning that we've sent an email to that user now if we",
    "start": "1576679",
    "end": "1583360"
  },
  {
    "text": "provide victim virtual food.com we can't access their email that would be too easy you can't access their email so we",
    "start": "1583360",
    "end": "1588880"
  },
  {
    "text": "can't get their unique to code to reset a password so how do we actually reset the password here's where we load the",
    "start": "1588880",
    "end": "1594559"
  },
  {
    "text": "HTML page here's where we reset the password we provide that unique code and the new password and it says new",
    "start": "1594559",
    "end": "1600919"
  },
  {
    "text": "password is set for Philip all right this is something we can abuse right it's a four-digit code how many options",
    "start": "1600919",
    "end": "1607559"
  },
  {
    "text": "are there not that many right something around 10,000 and we should be good to go so let's um not a fictional example",
    "start": "1607559",
    "end": "1614480"
  },
  {
    "text": "by the way this has happened in a smart scale application this has happened in beta version versions of Facebook and Instagram where they had like production",
    "start": "1614480",
    "end": "1621399"
  },
  {
    "text": "data with actual accounts and then no rate limiting on this endpoint so I'm making all of this possible so how do we",
    "start": "1621399",
    "end": "1627039"
  },
  {
    "text": "do that well let's launch the attack again first as the attacker we go here and we're like hey application we forgot",
    "start": "1627039",
    "end": "1634399"
  },
  {
    "text": "our password our email address is victim virtual foodi.com reset password okay",
    "start": "1634399",
    "end": "1640720"
  },
  {
    "text": "mail has been sent we can't access the email um so now we have to break the application and we do that as follows so",
    "start": "1640720",
    "end": "1646880"
  },
  {
    "text": "we reset the password send that to the Intruder we um want to",
    "start": "1646880",
    "end": "1651919"
  },
  {
    "text": "provide a code and fluffy as a password because why not and um we don't know",
    "start": "1651919",
    "end": "1657200"
  },
  {
    "text": "what this code is so we'll guess it um it's not going to be that hard we guess for numbers the number should be",
    "start": "1657200",
    "end": "1663080"
  },
  {
    "text": "sequential between one and",
    "start": "1663080",
    "end": "1667000"
  },
  {
    "text": "99999 that's step one we um want four digits and zero digits behind the comma",
    "start": "1670159",
    "end": "1679279"
  },
  {
    "text": "so that's what we'll get as payload that looks pretty good to me um what else do we need doesn't matter but let's turn it",
    "start": "1679279",
    "end": "1686720"
  },
  {
    "text": "off your coding we don't need that um that should be good right we want to use",
    "start": "1686720",
    "end": "1692519"
  },
  {
    "text": "as fast as possible 10 concurrent request that's fine and then we can here U look for this sentence like new",
    "start": "1692519",
    "end": "1698399"
  },
  {
    "text": "password set if we find that we have succeeded um so we can do that right here um we can match for this clear the",
    "start": "1698399",
    "end": "1706039"
  },
  {
    "text": "list and add new password set all right let's see what this does we can launch",
    "start": "1706039",
    "end": "1712279"
  },
  {
    "text": "the attack now I think I've covered everything so let's see you can launch the attack you can see it's sending like",
    "start": "1712279",
    "end": "1718279"
  },
  {
    "text": "requests sequentially 1 2 3 four 5 and so on and so on here's the column finding our results and if we sort it we",
    "start": "1718279",
    "end": "1725120"
  },
  {
    "text": "find a one a match and you can see the request 46 uh 4769 and the response is",
    "start": "1725120",
    "end": "1731279"
  },
  {
    "text": "new password set for Valerie which is victim virtual foodi.com so now we've taken over the account we can log in",
    "start": "1731279",
    "end": "1737440"
  },
  {
    "text": "with this information so we can go to the application we can um go here we can",
    "start": "1737440",
    "end": "1743720"
  },
  {
    "text": "log in with victim and the name of my non-existent dog fluffy and we're now",
    "start": "1743720",
    "end": "1750880"
  },
  {
    "text": "authenticated that's how we do account takeover this happens in practice this is super well as you can see this is not",
    "start": "1750880",
    "end": "1757120"
  },
  {
    "text": "a complicated attack to execute you just have to remember to set parameters correctly and then you're good to go",
    "start": "1757120",
    "end": "1762279"
  },
  {
    "text": "basically all right so how do we fix this well there's a couple of things you can do first of all you should have rate",
    "start": "1762279",
    "end": "1767799"
  },
  {
    "text": "limit I mean it makes zero sense that there's an endpoint with a four-digit code that you can just send like 10,000",
    "start": "1767799",
    "end": "1772919"
  },
  {
    "text": "requests to and it's like me good enough for me uh so rate limiting is very important there second thing is maybe",
    "start": "1772919",
    "end": "1778039"
  },
  {
    "text": "the four-digit code is not the bestest idea either either you want to use like a long random string as something that",
    "start": "1778039",
    "end": "1783519"
  },
  {
    "text": "is a bit more hard to guess but the third thing I really want to talk about is why on Earth do we allow guessing in",
    "start": "1783519",
    "end": "1789039"
  },
  {
    "text": "the first place I mean this makes zero sense to just have like a parameter that the attacker can control and temper with",
    "start": "1789039",
    "end": "1795519"
  },
  {
    "text": "and try to attack if we take that away then this whole attack just goes away I mean it's becomes impossible and the way",
    "start": "1795519",
    "end": "1802200"
  },
  {
    "text": "to do that is by adding Integrity to that data because we our application is providing that code and is receiving",
    "start": "1802200",
    "end": "1808440"
  },
  {
    "text": "that code we can sign that code and detect tempering with that value and the way to do that is here um I'm using the",
    "start": "1808440",
    "end": "1816799"
  },
  {
    "text": "generate reset code function from the insecure file and I'm going to use the secure file so this is super easy",
    "start": "1816799",
    "end": "1821919"
  },
  {
    "text": "development but what we're basically doing here is this reset code was a four digigit uh digit um number",
    "start": "1821919",
    "end": "1828559"
  },
  {
    "text": "and this one is a signed Json web token so what we're basically doing is we're creating a Json web token in the token",
    "start": "1828559",
    "end": "1834760"
  },
  {
    "text": "we create or we add the email address of the user we're trying to reset the account for and we sign that whole value",
    "start": "1834760",
    "end": "1841120"
  },
  {
    "text": "meaning that nobody else can change the legit the email address to something else and cause this attack again so",
    "start": "1841120",
    "end": "1847640"
  },
  {
    "text": "let's take a look at how this works we can go back here um to our browser we",
    "start": "1847640",
    "end": "1853240"
  },
  {
    "text": "can reset our own password and go to our webmail you can see that the password",
    "start": "1853240",
    "end": "1859480"
  },
  {
    "text": "reset link is now something very long and this something very long is a Json web token and this Json web token we can",
    "start": "1859480",
    "end": "1866559"
  },
  {
    "text": "observe this in burp this Json web token contains um to observe this we actually",
    "start": "1866559",
    "end": "1872600"
  },
  {
    "text": "have to do",
    "start": "1872600",
    "end": "1875720"
  },
  {
    "text": "this the password is now test another very secure option um so now the code",
    "start": "1877960",
    "end": "1884159"
  },
  {
    "text": "that we sent here is that Json web token and inside that Json web token as you can see here is the email address of the",
    "start": "1884159",
    "end": "1890240"
  },
  {
    "text": "user uh an issued at time stamp an expiration time stamp and unique identifier and this all of this is",
    "start": "1890240",
    "end": "1896080"
  },
  {
    "text": "signed and verified by the backend so if you would go in here and would change like flip rest.com with victim virtual",
    "start": "1896080",
    "end": "1902240"
  },
  {
    "text": "food.com the back end is going to be like uhuh you have changed that this is no longer valid go away so the only way",
    "start": "1902240",
    "end": "1908159"
  },
  {
    "text": "to re to to actually reset your password is by using your legitimate token which has been sent to your email and it's",
    "start": "1908159",
    "end": "1913960"
  },
  {
    "text": "only accessible to you as a user so it this takes away the attack Factor takes away the capability of the attacker to",
    "start": "1913960",
    "end": "1919799"
  },
  {
    "text": "try and temper with this value and that's essentially how you can secure your applications this applies to reset",
    "start": "1919799",
    "end": "1926360"
  },
  {
    "text": "passwords but also to all other kinds of uh cases as well so what we see today is a lot of applications relying on the um",
    "start": "1926360",
    "end": "1934960"
  },
  {
    "text": "on parameters in Uris to for security um just by hoping they stay intact but by",
    "start": "1934960",
    "end": "1940320"
  },
  {
    "text": "adding Integrity to that you can actually secure your applications in practice all right",
    "start": "1940320",
    "end": "1947639"
  },
  {
    "text": "some takeaways what do we take away from this Demo First of all attacker tools",
    "start": "1948600",
    "end": "1953880"
  },
  {
    "text": "are awesome uh you can play around with burp yourself they have a free version to play around with um there's also",
    "start": "1953880",
    "end": "1959159"
  },
  {
    "text": "Alternatives like oasp has a tool called zap uh which does something very similar as burp and there's plenty of other",
    "start": "1959159",
    "end": "1964760"
  },
  {
    "text": "Alternatives as well I just like burp I've been using burp for a long time and I'm a big fan of that so that's option number one or takeaway number one second",
    "start": "1964760",
    "end": "1971760"
  },
  {
    "text": "one avoid leaking information like this username enumeration seems like a silly problem but once the attack has a list",
    "start": "1971760",
    "end": "1978480"
  },
  {
    "text": "of valid users it just opens them up for all kinds of nasty attacks like spear fishing targeted attacks um account take",
    "start": "1978480",
    "end": "1985799"
  },
  {
    "text": "over vulnerabilities and so on and so on and if you don't leak that information you take away that um that problem and",
    "start": "1985799",
    "end": "1991799"
  },
  {
    "text": "it gets better so that's something to definitely pay attention to note that sometimes you really don't care about",
    "start": "1991799",
    "end": "1997279"
  },
  {
    "text": "this right for example if you're a social media application and your users names are public anyway then you don't",
    "start": "1997279",
    "end": "2004039"
  },
  {
    "text": "really care about username neration because it's just a list on the website you can actually get them from there so in that case it doesn't matter but if",
    "start": "2004039",
    "end": "2010080"
  },
  {
    "text": "you're doing something more private if the list of users is not easily guessable this is something to",
    "start": "2010080",
    "end": "2015279"
  },
  {
    "text": "definitely take into account maybe you accept that risk and you're like we don't care about that but then at least",
    "start": "2015279",
    "end": "2021159"
  },
  {
    "text": "have it written down somewhere that that's your assessment of this threat second takeaway Implement rate limiting",
    "start": "2021159",
    "end": "2027960"
  },
  {
    "text": "like this endpoint that accepted just like endless requests for guessing this four-digit code that's absolute bad uh",
    "start": "2027960",
    "end": "2035320"
  },
  {
    "text": "an absolute bad idea so Implement some form of rate limit uh to kind of stop this from happening",
    "start": "2035320",
    "end": "2040799"
  },
  {
    "text": "and then the third takeaway is mitigate guessing attacks by adding an Integrity check to the parameters in the URL",
    "start": "2040799",
    "end": "2045960"
  },
  {
    "text": "that's a really good way to stop these attacks uh at the beginning to not even make it possible um you can also of",
    "start": "2045960",
    "end": "2052200"
  },
  {
    "text": "course do things like include random identifiers to make it more difficult to carry out his attack but just stopping",
    "start": "2052200",
    "end": "2057800"
  },
  {
    "text": "the attacker from being able to do that in the first place is a really good idea and you saw this in the example using a",
    "start": "2057800",
    "end": "2063320"
  },
  {
    "text": "Json web token to sign a value that's not a heavy lift that's something that's fairly as straightforward to implement",
    "start": "2063320",
    "end": "2068919"
  },
  {
    "text": "there's plenty of libraries that support something like that and it gives you solid security properties all",
    "start": "2068919",
    "end": "2076320"
  },
  {
    "text": "right that brings us back to the API security top",
    "start": "2076320",
    "end": "2081760"
  },
  {
    "text": "10 what about authorization authorization is kind of important as",
    "start": "2086040",
    "end": "2091079"
  },
  {
    "text": "evidenced by number one in the API security to 10 and also number five in the API security to 10 like somebody's",
    "start": "2091079",
    "end": "2096960"
  },
  {
    "text": "50 minutes over time at deal that's if this was real you're in trouble by the way everybody else is running and you're",
    "start": "2096960",
    "end": "2103960"
  },
  {
    "text": "like what's going on it's like I don't know so authorization what's going on with authorization it's a absolute",
    "start": "2103960",
    "end": "2110400"
  },
  {
    "text": "horrible problem that plagues everyone and in this case the smart scale application has some authorization",
    "start": "2110400",
    "end": "2117040"
  },
  {
    "text": "problems as well this is this application is kind of a gift that keeps on giving when it comes to security demos it's a yeah there's just no end to",
    "start": "2117040",
    "end": "2124160"
  },
  {
    "text": "it basically it's going to come back later again so uh don't worry about it",
    "start": "2124160",
    "end": "2129359"
  },
  {
    "text": "let me ask you why what happened here well the application allowed any user to",
    "start": "2129359",
    "end": "2135200"
  },
  {
    "text": "add family members to any family like you're supposed to add a family member to your family that's kind of designed",
    "start": "2135200",
    "end": "2141440"
  },
  {
    "text": "uh feature but if I'm a malicious user I'm like hey I'm going to add a family member to your family which is like",
    "start": "2141440",
    "end": "2147359"
  },
  {
    "text": "weird but it's a stepping stone for another attack so why is this so hard to get right why is authorization on the",
    "start": "2147359",
    "end": "2154240"
  },
  {
    "text": "API security. 10 number one let me walk you through the process of how people often Implement authorization which I",
    "start": "2154240",
    "end": "2160960"
  },
  {
    "text": "wish was totally fictional but is unfortunately based on uh me talking to developers during security assessments",
    "start": "2160960",
    "end": "2166880"
  },
  {
    "text": "and seeing these things in practice so what are we doing here I have a created like a a recreation of the smart scale",
    "start": "2166880",
    "end": "2174079"
  },
  {
    "text": "problem we have an add family member function um it's Java so my apologies for that if you're a net developer but",
    "start": "2174079",
    "end": "2180960"
  },
  {
    "text": "everybody can read Java so we're we're all good so um what are we doing we're adding a family member we have a family",
    "start": "2180960",
    "end": "2186040"
  },
  {
    "text": "we have an ID we have a I mean this is straightforward right and we Implement role-based Access Control what we're",
    "start": "2186040",
    "end": "2191200"
  },
  {
    "text": "basically going to do is we're going to enforce that to do that you must be the family owner that's authorization in",
    "start": "2191200",
    "end": "2196680"
  },
  {
    "text": "action all right that's how this starts out however over time you'll get more something like this you'll have not only",
    "start": "2196680",
    "end": "2203400"
  },
  {
    "text": "the family owner but also a parent and an admin and this and that and that and that highlights one of the problems with",
    "start": "2203400",
    "end": "2209160"
  },
  {
    "text": "role-based Access Control managing roles is hard you'll end up with a problem that we call roll explosion which is a",
    "start": "2209160",
    "end": "2215359"
  },
  {
    "text": "very dramatic name uh but it basically means means that you'll have a lot of similar roles that have permissions and it becomes really hard to assess a",
    "start": "2215359",
    "end": "2222440"
  },
  {
    "text": "security policy like this it's hard to audit a policy like this it's hard to maintain if you want to add a new role",
    "start": "2222440",
    "end": "2228000"
  },
  {
    "text": "in your application now you have to go through your entire code base and be like or has roll this or has roll this",
    "start": "2228000",
    "end": "2233400"
  },
  {
    "text": "and it's just a mess and this is a very silly problem to have but it's unfortunately a very realistic problem",
    "start": "2233400",
    "end": "2239720"
  },
  {
    "text": "because arback is very widely supported across all languages and Frameworks to improve this to make this",
    "start": "2239720",
    "end": "2246480"
  },
  {
    "text": "more maintainable more auditable you can do like a very simple thing you can add a layer of IND Direction in between",
    "start": "2246480",
    "end": "2253280"
  },
  {
    "text": "which we call permissions so instead of mapping roles to endpoints we map rols to permissions and we map permissions to",
    "start": "2253280",
    "end": "2259119"
  },
  {
    "text": "endpoints and now if you look at this code if you have to audit this you don't have to have the full model in mind like",
    "start": "2259119",
    "end": "2264680"
  },
  {
    "text": "which role can do what you can check like hey add family member has permission add family member like yeah that makes sense a security audit like",
    "start": "2264680",
    "end": "2271760"
  },
  {
    "text": "this easy and straightforward like yes API code makes sense step one step two",
    "start": "2271760",
    "end": "2277079"
  },
  {
    "text": "what does the policy say like oh these roles can have these permissions like yeah that makes sense to me as well and",
    "start": "2277079",
    "end": "2282359"
  },
  {
    "text": "this very simple step very silly step on PowerPoint but very powerful in practice",
    "start": "2282359",
    "end": "2287599"
  },
  {
    "text": "actually decouples permissions um well decouples roles from endpoints by adding permissions in between that's",
    "start": "2287599",
    "end": "2294119"
  },
  {
    "text": "essentially how we improve authorization right and at this point you're thinking like yeah that wasn't",
    "start": "2294119",
    "end": "2299400"
  },
  {
    "text": "that hard like what the hell is wrong with the smart scale people like why why is this API security top 10 number one",
    "start": "2299400",
    "end": "2305560"
  },
  {
    "text": "well what we've done so far is we added function level authorization right we added a check",
    "start": "2305560",
    "end": "2311920"
  },
  {
    "text": "whether a family member is allowed to add a member to a family so if I want to add a member to my family I'm going to",
    "start": "2311920",
    "end": "2318119"
  },
  {
    "text": "create like post request SL family/ one member with the data and Bam new member is created if I want to add a member to",
    "start": "2318119",
    "end": "2324560"
  },
  {
    "text": "your family I'm going to take this request in burp I'm going to delete a one I'm going to replace a one with a two which is like a sophisticated attack",
    "start": "2324560",
    "end": "2331560"
  },
  {
    "text": "I'm going to send a request out and all of a well a seven actually I'm going to replace a one with a seven and all of a sudden I'm creating a a member in your",
    "start": "2331560",
    "end": "2338240"
  },
  {
    "text": "family because we've implemented the check that an owner me can add a family member that's good function level",
    "start": "2338240",
    "end": "2343839"
  },
  {
    "text": "authorization but we never checked which family I'm adding something to and that's object level authorization so",
    "start": "2343839",
    "end": "2350319"
  },
  {
    "text": "missing functional level authorization missing this basic check is O API SC time number five but missing the check",
    "start": "2350319",
    "end": "2357599"
  },
  {
    "text": "to Which object you're adding something to or Which object you're accessing that's o API created up then number one",
    "start": "2357599",
    "end": "2364400"
  },
  {
    "text": "broken object level authorization and this problem is everywhere you will find",
    "start": "2364400",
    "end": "2369440"
  },
  {
    "text": "this with simple IDs like accessing a family that's what a smart scale was doing wrong you'll find this with",
    "start": "2369440",
    "end": "2375920"
  },
  {
    "text": "multitenant deployments where you have like a header saying like customer ID uh something something well an attacker can",
    "start": "2375920",
    "end": "2381520"
  },
  {
    "text": "be like H customer ID today is uh 35 bam and it sends a request and if your backend doesn't check that the user",
    "start": "2381520",
    "end": "2387200"
  },
  {
    "text": "actually belongs to that customer I'm now creating admins in somebody else's customer taking control of that customer",
    "start": "2387200",
    "end": "2392680"
  },
  {
    "text": "and you're now in deep deep trouble o API security to them number one",
    "start": "2392680",
    "end": "2399319"
  },
  {
    "text": "all right so how do we fix this and that's where the things get a bit tricky",
    "start": "2400359",
    "end": "2405440"
  },
  {
    "text": "to fix this you need to add additional logic because depending on why the user",
    "start": "2405440",
    "end": "2411480"
  },
  {
    "text": "has this add family member permission you need to check certain things like it it becomes something like this is a Mess",
    "start": "2411480",
    "end": "2417359"
  },
  {
    "text": "by the way you get code like this like yeah yeah check at family member it's like oh why do you have that oh if you're an admin then of course you can",
    "start": "2417359",
    "end": "2423560"
  },
  {
    "text": "do that if you're a family owner then we'll make sure that you're the owner of this exact family and you have to add a check and so on and so on and this code",
    "start": "2423560",
    "end": "2430200"
  },
  {
    "text": "is in no way representative of how you write actual production code first of all smiley faces are not good for",
    "start": "2430200",
    "end": "2436240"
  },
  {
    "text": "exception handling in case you're wondering that's not how you do that uh for one but also there's no Deni by",
    "start": "2436240",
    "end": "2441520"
  },
  {
    "text": "default being used and so on and so on this is a bad example in all uh for all intents and purposes this is not good",
    "start": "2441520",
    "end": "2449079"
  },
  {
    "text": "all right I have that on the slides just to make sure that you understand this um this policy by the way is impossible to",
    "start": "2449079",
    "end": "2455680"
  },
  {
    "text": "audit for security you have to do this I strongly recommend this exercise at your company what you do is you grab a",
    "start": "2455680",
    "end": "2462480"
  },
  {
    "text": "colleague from a different team to bring them to your like on a Friday afternoon and you show them your authorization logic and you're like do you understand",
    "start": "2462480",
    "end": "2468920"
  },
  {
    "text": "this does this make sense to you and if they can't immediately say like yeah I I mostly get a gist of it if your code is",
    "start": "2468920",
    "end": "2474599"
  },
  {
    "text": "Litter with checks like this they're going to be like I have no idea man I I don't know and that means your",
    "start": "2474599",
    "end": "2480480"
  },
  {
    "text": "authorization logic is not auditable which means if you can't audit it how will you know if it's secure",
    "start": "2480480",
    "end": "2487680"
  },
  {
    "text": "you don't it's kind of a best guess like I'm thinking this is good until somebody",
    "start": "2487680",
    "end": "2492960"
  },
  {
    "text": "finds that one check that you forgot and Bam you have a broken object level authorization issue just right there and",
    "start": "2492960",
    "end": "2498680"
  },
  {
    "text": "trust me I've been in that meeting more than once and I ask questions about that and and I asked like how do you check",
    "start": "2498680",
    "end": "2504359"
  },
  {
    "text": "this where do you check and people open up the code like yeah we have this here and sometimes they go quiet and get like a bit red-faced and sometimes they rip",
    "start": "2504359",
    "end": "2511520"
  },
  {
    "text": "out the code editor and like oh yeah let's add this additional rule that we forgot like on the on the Fly it's like no no no no no that's absolutely not",
    "start": "2511520",
    "end": "2518680"
  },
  {
    "text": "what you're supposed to be doing so how can we approve this this is not the depressing talk about how miserable your",
    "start": "2518680",
    "end": "2525920"
  },
  {
    "text": "life is supposed to be this is about improving things and making things better for yourself and a very simple",
    "start": "2525920",
    "end": "2531680"
  },
  {
    "text": "thing here that you can do is you can centralize this logic you can take away all of these dirty checks and move them",
    "start": "2531680",
    "end": "2536800"
  },
  {
    "text": "into a single location we call that a policy engine which is a very F that's how you sell this to your boss like we",
    "start": "2536800",
    "end": "2542720"
  },
  {
    "text": "need a policy engine in reality you can make this super simp simple can make this like one",
    "start": "2542720",
    "end": "2549880"
  },
  {
    "text": "class one file with static methods and the static methods can be check permission or check can add family",
    "start": "2549880",
    "end": "2555920"
  },
  {
    "text": "member or whatever but what we're doing here is we're making our endpoints prettier easier to audit and manageable",
    "start": "2555920",
    "end": "2564599"
  },
  {
    "text": "because if you have an audit this code that you see on the slide now all it takes is like add member we check permission add family member like yeah",
    "start": "2564599",
    "end": "2570960"
  },
  {
    "text": "this makes sense to me if I have to audit this I'm going to be like yeah that's that's a good check you can even add Like rules in your linting tools or",
    "start": "2570960",
    "end": "2577920"
  },
  {
    "text": "set codee analysis tools that every endpoint has to call policy. check permission or the Bild breaks good now",
    "start": "2577920",
    "end": "2583640"
  },
  {
    "text": "you can't forget authorization checks perfect second step in outting this you",
    "start": "2583640",
    "end": "2589559"
  },
  {
    "text": "go to that policy file and you check what are the rules that are enforced here do they make",
    "start": "2589559",
    "end": "2594680"
  },
  {
    "text": "sense very important second thing you can do you can enable Version Control like source code protection on that file",
    "start": "2594680",
    "end": "2601160"
  },
  {
    "text": "so that only the people from the security team are allowed to update this awesome third thing you can do and",
    "start": "2601160",
    "end": "2606400"
  },
  {
    "text": "that's really powerful you can write unit tests against your authorization policy because all you have is these",
    "start": "2606400",
    "end": "2611960"
  },
  {
    "text": "check permission or can add family member methods and you can write unit tests to make sure that they enforce what you think they enforce and that",
    "start": "2611960",
    "end": "2618440"
  },
  {
    "text": "gives you a lot of power over your authorization logic and makes all of this manageable and on top of that It",
    "start": "2618440",
    "end": "2624760"
  },
  {
    "text": "prepares you for the next step because sometimes most people can get away with this most applications I've seen they",
    "start": "2624760",
    "end": "2630160"
  },
  {
    "text": "can get away with this and they're good to go easy straightforward cheap perfect",
    "start": "2630160",
    "end": "2635240"
  },
  {
    "text": "however sometimes you have this complex application complex authorization logic maybe you have to check like a whole",
    "start": "2635240",
    "end": "2640319"
  },
  {
    "text": "bunch of relationships to see whether this is possible and that's where external policy engines come into play",
    "start": "2640319",
    "end": "2645599"
  },
  {
    "text": "that's where you want to externalize this authorization logic into something like an open policy agent or some something custom or open fga if you're",
    "start": "2645599",
    "end": "2652160"
  },
  {
    "text": "using that and where you check that authorization logic and that way now you have a real policy engine Now we move it",
    "start": "2652160",
    "end": "2658720"
  },
  {
    "text": "outside to an actual service which uses in opas case REO as an expression language to write your authorization",
    "start": "2658720",
    "end": "2664480"
  },
  {
    "text": "logic but that's the next step that's an advance use case and to be honest most applications don't need to go that far",
    "start": "2664480",
    "end": "2671319"
  },
  {
    "text": "you may want to do that that's on you that's perfectly possible but very often you don't have to go that far just",
    "start": "2671319",
    "end": "2677079"
  },
  {
    "text": "centralizing the logic in your codebase is enough for most use cases all right",
    "start": "2677079",
    "end": "2682760"
  },
  {
    "text": "and that's a takeaway here you want to centralize that authorization logic you want to simplify the aiting of your",
    "start": "2682760",
    "end": "2688240"
  },
  {
    "text": "authorization policies to ensure that you can keep everything under control and that you can assess the security of",
    "start": "2688240",
    "end": "2693760"
  },
  {
    "text": "what you're enforcing and that's the way how to fight broken object level authorization all right second takeaway",
    "start": "2693760",
    "end": "2701079"
  },
  {
    "text": "here is Empower auditability make this possible do the exercise with your colleagues it's super valuable to figure",
    "start": "2701079",
    "end": "2707920"
  },
  {
    "text": "out or to observe how somebody else's view somebody else views your authorization logic and guess what if",
    "start": "2707920",
    "end": "2714200"
  },
  {
    "text": "your colleague spends like an afternoon with you and they can't understand your authorization logic then something is wrong maybe you pick the wrong colleague",
    "start": "2714200",
    "end": "2721000"
  },
  {
    "text": "that's also an option but assuming that you have competent colleagues the problem is with your authorization logic",
    "start": "2721000",
    "end": "2726359"
  },
  {
    "text": "not with your colleague all right",
    "start": "2726359",
    "end": "2731838"
  },
  {
    "text": "good let's talk about authorization right we talked about one and five but there's another authorization seriously",
    "start": "2732680",
    "end": "2739119"
  },
  {
    "text": "authorization is a mess there's a third authorization issue in the O API security. 10 and that's number three",
    "start": "2739119",
    "end": "2744800"
  },
  {
    "text": "broken object property level authorization and the abbreviation for that is Bula in case you're wondering I",
    "start": "2744800",
    "end": "2750720"
  },
  {
    "text": "don't know who makes this thing up but it's broken object property level authorization and guess who had that",
    "start": "2750720",
    "end": "2756200"
  },
  {
    "text": "problem smart scale of course sorry if you're actually the",
    "start": "2756200",
    "end": "2761920"
  },
  {
    "text": "developer of this I I don't want to do this but it it's just the way things are so it's um that's just the way things",
    "start": "2761920",
    "end": "2768400"
  },
  {
    "text": "are so what happened here and that's the second step in the attack so what I Thea",
    "start": "2768400",
    "end": "2774319"
  },
  {
    "text": "really figured out is we can add family members to your family and now we have an account that we control that's a",
    "start": "2774319",
    "end": "2779800"
  },
  {
    "text": "member of your family so we can authenticate as that account and guess what we can do next we can list the other family members in your family",
    "start": "2779800",
    "end": "2786000"
  },
  {
    "text": "which is kind of normal that's yeah of course you can it's like yes if you're a child you can see your parents and your sister and brother and it's like",
    "start": "2786000",
    "end": "2792160"
  },
  {
    "text": "perfectly fine except the smart scale when you listed the users manage to expose like the full user",
    "start": "2792160",
    "end": "2799079"
  },
  {
    "text": "object not just like a name and an age no no the full user object including access tokens and refr I I don't even",
    "start": "2799079",
    "end": "2806079"
  },
  {
    "text": "know why these values are in there but they were and everything was listed and you're laughing with this like oh my",
    "start": "2806079",
    "end": "2811480"
  },
  {
    "text": " god what the hell sorry for the language oh my freaking God what the hell is wrong here and I wish that I",
    "start": "2811480",
    "end": "2817000"
  },
  {
    "text": "could say like oh yeah it's just a smart nobody else is doing this but it's everywhere even Uber had that vulnerability a while ago where they",
    "start": "2817000",
    "end": "2823480"
  },
  {
    "text": "were leaking this uh information on user accounts we' seen password hashes being leaked location information being leaked",
    "start": "2823480",
    "end": "2829800"
  },
  {
    "text": "that was know by the application and location information that's kind of a critical feature like many dating apps",
    "start": "2829800",
    "end": "2835079"
  },
  {
    "text": "they have location information that's something you never ever want to leak to malicious users in practice so yeah this",
    "start": "2835079",
    "end": "2841720"
  },
  {
    "text": "is a major issue why do we have that like what the hell is wrong with us why do we create",
    "start": "2841720",
    "end": "2848440"
  },
  {
    "text": "these vulnerabilities well actually we don't really create them it's just the nature of the the game of trans",
    "start": "2848440",
    "end": "2855800"
  },
  {
    "text": "transforming data into Json and so on because nobody in their right mind writes Jason by hand well maybe some of",
    "start": "2855800",
    "end": "2862000"
  },
  {
    "text": "you like are really miserable and you're like yes I write Jason by hand but most people don't and what we do instead is",
    "start": "2862000",
    "end": "2867920"
  },
  {
    "text": "we translate model object like a user that we have in our system and a model and we translate that into Json by",
    "start": "2867920",
    "end": "2874000"
  },
  {
    "text": "telling the framework here's the list of users go figure it out the framewor is like yeah awesome it's a Java object I",
    "start": "2874000",
    "end": "2879400"
  },
  {
    "text": "can translate this property into Json and so on and so on and we have something like that and I have an",
    "start": "2879400",
    "end": "2884880"
  },
  {
    "text": "example here which is not the smart scale but it's an API security swag shop where you can buy cool things about API",
    "start": "2884880",
    "end": "2890480"
  },
  {
    "text": "security and they have a list of online users and the list of online users in the front end it's based on the API",
    "start": "2890480",
    "end": "2896720"
  },
  {
    "text": "response like it calls to/ online users and it gets a list with user objects like id5 um ID3 sorry name John and",
    "start": "2896720",
    "end": "2904680"
  },
  {
    "text": "that's the information that we list there and that's how these form abilities come into life they're not like in the front end we're not",
    "start": "2904680",
    "end": "2911079"
  },
  {
    "text": "displaying like all the information in the front end no the information is in the API response so we call this",
    "start": "2911079",
    "end": "2916559"
  },
  {
    "text": "endpoint we get an API response we take some values and everything else is ignored in the front end but it's there in the back end so somebody uh doing",
    "start": "2916559",
    "end": "2922960"
  },
  {
    "text": "this attack which goes as follows like open def tools in the browser go to the network tab click on the API request",
    "start": "2922960",
    "end": "2929280"
  },
  {
    "text": "look at the response and all the data is there that's how the attack like this works and I encourage you again I have",
    "start": "2929280",
    "end": "2936000"
  },
  {
    "text": "another exercise for you later on to look at actual applications you use day in day out open up an application like",
    "start": "2936000",
    "end": "2942119"
  },
  {
    "text": "your banking app and go look at the API responses the amount of data that's there is astonishing it's crazy I've",
    "start": "2942119",
    "end": "2948599"
  },
  {
    "text": "done that I was like what the hell is going on like there's so much information that the front that never uses that we expose in API responses",
    "start": "2948599",
    "end": "2955839"
  },
  {
    "text": "that's exactly this problem that's what's going on so where do we get that from here's",
    "start": "2955839",
    "end": "2962119"
  },
  {
    "text": "another okay yes here's another example um",
    "start": "2962119",
    "end": "2967359"
  },
  {
    "text": "again it's Java but whatever uh what we do here is we get a list of online users it's a list of an array of user objects",
    "start": "2967359",
    "end": "2973799"
  },
  {
    "text": "you you kind of know how this works it's a list sorry not an area and we trans we throw that into the response and Magic happens and Json comes out and you can",
    "start": "2973799",
    "end": "2980240"
  },
  {
    "text": "see the user on the left we have the name and the address and we're exposing the address information here or the access token and refresh token whatever",
    "start": "2980240",
    "end": "2986440"
  },
  {
    "text": "the smart scale was doing that's how this happens in practice so how do we fix this we can annotate this with Jason",
    "start": "2986440",
    "end": "2993200"
  },
  {
    "text": "ignore like hey Jason translator thingy we don't really want to expose this property so just pretend it doesn't",
    "start": "2993200",
    "end": "2998760"
  },
  {
    "text": "exist right um I'm not a fan of this this is kind of a Band-Aid approach like",
    "start": "2998760",
    "end": "3004280"
  },
  {
    "text": "oh yeah whoops this one shouldn't be exposed but you can't scale this you can't do this for your entire API it's going to be a mess you're going to",
    "start": "3004280",
    "end": "3009960"
  },
  {
    "text": "forget Fields it's going to be a problem so how do you do that instead you use a dto right a data transfer object or if",
    "start": "3009960",
    "end": "3018520"
  },
  {
    "text": "your language doesn't have dtto you can have like schema validation and so on that's that's a similar approach and that dto is now called public user info",
    "start": "3018520",
    "end": "3026200"
  },
  {
    "text": "and it makes it hard to make a mistake because whenever you're writing this like public user info you're going to be like hm xess token yeah put it in there",
    "start": "3026200",
    "end": "3033599"
  },
  {
    "text": "no it's going to help you remind yourself like oh yeah this is supposed to be public user info and that way we",
    "start": "3033599",
    "end": "3039359"
  },
  {
    "text": "map our users to this dto we expose the dto and the problem goes away all right",
    "start": "3039359",
    "end": "3045440"
  },
  {
    "text": "very simple approach a bit takes a bit of effort to do that but it it's",
    "start": "3045440",
    "end": "3051240"
  },
  {
    "text": "recommended to do that effort because it really gives you strong security properties all right",
    "start": "3051240",
    "end": "3058640"
  },
  {
    "text": "now I talked to a lot of developers I work with a lot of developers and this is something that very often comes up",
    "start": "3059920",
    "end": "3065720"
  },
  {
    "text": "when we talk about API security and they're like yeah yeah we're using dto I'm like okay show me always always ask",
    "start": "3065720",
    "end": "3071280"
  },
  {
    "text": "them like show me that's very important just using dto itself no no show me and it's like yeah here's the dto and I'm",
    "start": "3071280",
    "end": "3076880"
  },
  {
    "text": "like okay where do we get it from was dto with a lot of properties and we're like where do you get this from yes we autogenerate this from our model classes",
    "start": "3076880",
    "end": "3083640"
  },
  {
    "text": "like the model translates automatically into D it's like that's not what you're supposed to be doing and you can do a",
    "start": "3083640",
    "end": "3089640"
  },
  {
    "text": "similar thing with open API specification where you define exactly what you expect and so on and I was talking about this at a workshop last",
    "start": "3089640",
    "end": "3095799"
  },
  {
    "text": "week and somebody phrased this very accurately so I'm going to steal that and use that from now on and he said like yeah somewhere in the process",
    "start": "3095799",
    "end": "3102559"
  },
  {
    "text": "somebody has to do the thinking like somebody has to be thinking like what do we want to expose because all of these",
    "start": "3102559",
    "end": "3108520"
  },
  {
    "text": "automatic generation tools are awesome but if you generate your open API spec from your dtos or from your model",
    "start": "3108520",
    "end": "3114680"
  },
  {
    "text": "classes without ever thinking at some point like do we want to expose this you're going to have a bad time that's",
    "start": "3114680",
    "end": "3120119"
  },
  {
    "text": "essentially what's going on so what you're supposed to be doing is you're supposed to be using dto but either if",
    "start": "3120119",
    "end": "3126040"
  },
  {
    "text": "you autogenerate them you have to manually review them you have to go through and check if this makes sense but my advice is do not generate them",
    "start": "3126040",
    "end": "3132960"
  },
  {
    "text": "write them yourself because you'll have different versions of a dto like admin users will see more properties than a",
    "start": "3132960",
    "end": "3138720"
  },
  {
    "text": "regular user so they have separate dto with separate uh sets of fields that are",
    "start": "3138720",
    "end": "3144359"
  },
  {
    "text": "exposed do the thinking that is essentially I should add that as a takeaway slide I haven't done that but",
    "start": "3144359",
    "end": "3150599"
  },
  {
    "text": "do the thinking that should be the main takeway from this part but in this case it's avoid sensitive data exposure you",
    "start": "3150599",
    "end": "3156760"
  },
  {
    "text": "have to go through I'm very certain we have a full room here like a few hundred people if you go through apis I'm fairly",
    "start": "3156760",
    "end": "3162799"
  },
  {
    "text": "certain that you will find quite a few of these instances that's how common these things really are and they're",
    "start": "3162799",
    "end": "3168000"
  },
  {
    "text": "invisible mostly unless you go look at your actual Jason responses you won't see this at all until somebody finds",
    "start": "3168000",
    "end": "3175319"
  },
  {
    "text": "this and you get embarrassed in my slides because you're now one of the stories so that's essentially how that",
    "start": "3175319",
    "end": "3180520"
  },
  {
    "text": "comes into play now there's a right version of this vulnerability as well so",
    "start": "3180520",
    "end": "3186440"
  },
  {
    "text": "this is the read version where you expose too much data but the same goes on I don't have slides about that uh",
    "start": "3186440",
    "end": "3192000"
  },
  {
    "text": "because I'm running out of time but the same goes on with the right version where the user provides more properties",
    "start": "3192000",
    "end": "3197079"
  },
  {
    "text": "than you expect and you overwrite these fields in the database and that's called Mass assignment and it's also part of",
    "start": "3197079",
    "end": "3203200"
  },
  {
    "text": "broken object property level authorization all right and the same defense applies you use dto there to",
    "start": "3203200",
    "end": "3209280"
  },
  {
    "text": "avoid accepting more information than you should and that is essentially how you solve this problem all right so um",
    "start": "3209280",
    "end": "3216359"
  },
  {
    "text": "it's getting rough up here on stage because the pizza stand is below and it's smelling delicious so I'm super",
    "start": "3216359",
    "end": "3221599"
  },
  {
    "text": "hungry but let me come back to this ohas API security top 10 uh we talked about",
    "start": "3221599",
    "end": "3226799"
  },
  {
    "text": "quite a few of these issues uh these things are there for a reason all right",
    "start": "3226799",
    "end": "3232160"
  },
  {
    "text": "the fact that broken object level authorization is number one it's not because this is the a case in the smart scale is because this is everywhere so",
    "start": "3232160",
    "end": "3239799"
  },
  {
    "text": "please take this away from this application go look at your apis probably on Monday because it's a 3-day conference so that's perfectly fine but",
    "start": "3239799",
    "end": "3246480"
  },
  {
    "text": "go to back to your apis on Monday and review your authorization Logic for these things make sure you can improve",
    "start": "3246480",
    "end": "3252720"
  },
  {
    "text": "that all right key takeaways what do we what did we learn here or what do I think you learn here H let's put it like",
    "start": "3252720",
    "end": "3259160"
  },
  {
    "text": "that the best authorization policy is understandable and auditable like if it's complex and Scatter throughout the",
    "start": "3259160",
    "end": "3265000"
  },
  {
    "text": "code it's going to be a mess it's going to be really hard to protect or to assess whether it's secure make it",
    "start": "3265000",
    "end": "3271359"
  },
  {
    "text": "understandable really really important the easier it is the better analyze your apis for data leakage and Brute Force",
    "start": "3271359",
    "end": "3277480"
  },
  {
    "text": "attack factors and these are again very common something you definitely want to look out for and keep in mind that",
    "start": "3277480",
    "end": "3283720"
  },
  {
    "text": "perimeter security cannot be your only defense perimeter security is good you should shield things as much as you can",
    "start": "3283720",
    "end": "3289720"
  },
  {
    "text": "but be aware that attackers have ways to breach the perimeter in legitimate purposes like service side requests or",
    "start": "3289720",
    "end": "3296839"
  },
  {
    "text": "loading like a page in a browser from within the perimeter all of that is enough to give the attacker a foothold",
    "start": "3296839",
    "end": "3302040"
  },
  {
    "text": "within the perimeter make sure you have additional defenses at play that prevent this from being abused all right if you",
    "start": "3302040",
    "end": "3308559"
  },
  {
    "text": "liked what I had to say here I'm actually doing that two-day workshop I did the previous days in the future NC",
    "start": "3308559",
    "end": "3313760"
  },
  {
    "text": "events so if you want to go to Copenhagen or Porto very tough place to be at Porto or NC Security here in OA",
    "start": "3313760",
    "end": "3320400"
  },
  {
    "text": "next year um feel free to sign up and I'll see you there and with that I want to thank you enjoy the pizza and have a",
    "start": "3320400",
    "end": "3326039"
  },
  {
    "text": "great conference",
    "start": "3326039",
    "end": "3329359"
  }
]