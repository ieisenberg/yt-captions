[
  {
    "text": "we'll kind of start doing the little intro bit my name's ian cooper uh and what i'm gonna try and endeavor",
    "start": "3199",
    "end": "8880"
  },
  {
    "text": "to talk to you about today is that one of the problems i tend to see quite a bit out there for folks",
    "start": "8880",
    "end": "15599"
  },
  {
    "text": "uh doing so messaging wanted event driven architectures is",
    "start": "15599",
    "end": "20720"
  },
  {
    "text": "they struggle with this idea of when do i send and receive a message",
    "start": "20720",
    "end": "26080"
  },
  {
    "text": "because at that point i become asynchronous and hey i really want some kind of",
    "start": "26080",
    "end": "31599"
  },
  {
    "text": "synchronous response here surely to my request and can i really wait and latency",
    "start": "31599",
    "end": "37760"
  },
  {
    "text": "right and you know even even where i work currently uh i see a",
    "start": "37760",
    "end": "42800"
  },
  {
    "text": "lot of teams going oh yeah but the latency of making a call and um and a lot of it is about how we think",
    "start": "42800",
    "end": "48960"
  },
  {
    "text": "about work right and uh and how we've modeled",
    "start": "48960",
    "end": "54000"
  },
  {
    "text": "what the divisions of that responsibility will be and what i'm going to do today is look at some older ideas",
    "start": "54000",
    "end": "61440"
  },
  {
    "text": "that will give us a different and perhaps better perspective on how we should divide the work up to",
    "start": "61440",
    "end": "66479"
  },
  {
    "text": "support being asynchronous it should be a nice gentle straightforward post lunch",
    "start": "66479",
    "end": "72320"
  },
  {
    "text": "session uh any one of you feels like it can snooze in the back that's fine um but there shouldn't be anything too",
    "start": "72320",
    "end": "78720"
  },
  {
    "text": "hard here oh my this just says that i'm old it also says that i",
    "start": "78720",
    "end": "84640"
  },
  {
    "text": "encourage you not to believe that people standing here are somehow elevated above you we are all just",
    "start": "84640",
    "end": "91119"
  },
  {
    "text": "people i have been doing this a while i have some things to share you all have things to share whether you know it or",
    "start": "91119",
    "end": "96880"
  },
  {
    "text": "not with people around you the people that don't know what you know and i'd encourage you all to think about",
    "start": "96880",
    "end": "102640"
  },
  {
    "text": "having a go at speaking it's very scary at first but it does get better",
    "start": "102640",
    "end": "107920"
  },
  {
    "text": "there any net devs in the room i work on an open source project called brighter we do",
    "start": "107920",
    "end": "113040"
  },
  {
    "text": "for net platforms um please check us out if you're interested",
    "start": "113040",
    "end": "118640"
  },
  {
    "text": "uh i'm going to talk about three things so first for anyone who was in my session",
    "start": "119840",
    "end": "125520"
  },
  {
    "text": "yesterday apologies we're going to do a brief slew slides that were there yesterday",
    "start": "125520",
    "end": "131200"
  },
  {
    "text": "we're just going to say what what i mean by synchronous asynchronous conversation and then we're going to go and look back",
    "start": "131200",
    "end": "136800"
  },
  {
    "text": "in the past of the world of paper workflows i am old enough to have worked in what we call a pre-automation office",
    "start": "136800",
    "end": "142480"
  },
  {
    "text": "with paper workflows and i'll explain to you how they can effectively help us reason about asynchronous",
    "start": "142480",
    "end": "149440"
  },
  {
    "text": "uh flying systems because it turns out paper-based pre-automation offices were mostly asynchronous",
    "start": "149440",
    "end": "156400"
  },
  {
    "text": "working at an idea from the 1970s and early 80s called flow-based programming which was",
    "start": "156400",
    "end": "162560"
  },
  {
    "text": "um there was flow-based programming there was object orientation one of them one the other one perhaps deserves a",
    "start": "162560",
    "end": "168400"
  },
  {
    "text": "little bit of us looking again at some of its ideas and then i'll talk a little bit practically about how you can try using",
    "start": "168400",
    "end": "175360"
  },
  {
    "text": "these insights with approaches like value stream mapping and event storming to understand how to slice up your your",
    "start": "175360",
    "end": "181760"
  },
  {
    "text": "system so that it can support asynchronous work okay",
    "start": "181760",
    "end": "187840"
  },
  {
    "text": "so what do i mean by a synchronous conversation uh so in a synchronous conversation both parties must be present for",
    "start": "187840",
    "end": "193680"
  },
  {
    "text": "communication to succeed so the classic example would be something like a phone call right",
    "start": "193680",
    "end": "199599"
  },
  {
    "text": "i pick up the phone i call you in order for that to be a successful communication",
    "start": "199599",
    "end": "204720"
  },
  {
    "text": "you have to be at the other end and pick up the phone if you are not there my conversation with you won't succeed",
    "start": "204720",
    "end": "213840"
  },
  {
    "text": "in an asynchronous conversation the receiver doesn't need to be present at the time",
    "start": "214879",
    "end": "221040"
  },
  {
    "text": "and the senator communicates with them using a store and forward to pick up the message later so a mailbox",
    "start": "221040",
    "end": "227200"
  },
  {
    "text": "right i send you something it goes in your mailbox you can be out shopping you come back you pick it up",
    "start": "227200",
    "end": "234319"
  },
  {
    "text": "and you and you read my uh my message to you that's has huge advantages",
    "start": "234319",
    "end": "241200"
  },
  {
    "text": "because it means we are not temporarily coupled we don't have to both be available at the same time",
    "start": "241200",
    "end": "246879"
  },
  {
    "text": "in order for communication to succeed now i don't know about you but uh",
    "start": "246879",
    "end": "252000"
  },
  {
    "text": "nowadays nearly all the communication i do with people um tends to be",
    "start": "252000",
    "end": "257359"
  },
  {
    "text": "uh via some sort of messaging right whatsapp slack you know uh not by basically phone call any person that",
    "start": "257359",
    "end": "263360"
  },
  {
    "text": "phones with my mum and she is in her 80s so she gets an excuse basically for phoning me and i can remember you know",
    "start": "263360",
    "end": "269840"
  },
  {
    "text": "back in the 80s early 90s before really things like text were common trying to organize a night",
    "start": "269840",
    "end": "276400"
  },
  {
    "text": "out on friday with your friends was a nightmare because it's phoning everybody up and they're not there they're on a",
    "start": "276400",
    "end": "281520"
  },
  {
    "text": "desk and a meeting now you just hop on what's up what's happening a message right so exactly the same reasons that we all",
    "start": "281520",
    "end": "289120"
  },
  {
    "text": "find asynchronous conversations to be much easier they actually are much easier for our",
    "start": "289120",
    "end": "295680"
  },
  {
    "text": "software systems too because they remove this problem of temporal coupling",
    "start": "295680",
    "end": "301680"
  },
  {
    "text": "so where can we learn about how we succeed",
    "start": "306160",
    "end": "312639"
  },
  {
    "text": "with asynchronous workflows so one place to really look is back in",
    "start": "312639",
    "end": "319039"
  },
  {
    "text": "the past when before we had automated offices things were done with paper",
    "start": "319039",
    "end": "325039"
  },
  {
    "text": "so i currently work for justice takeaway imagine that i decided i was going to",
    "start": "325039",
    "end": "330560"
  },
  {
    "text": "create a business in a pre-automation world that wanted a similar business model which is i am",
    "start": "330560",
    "end": "336400"
  },
  {
    "text": "going to deliver you food from a restaurant restaurants will sign up with my business right i will then ship a catalogue to",
    "start": "336400",
    "end": "343360"
  },
  {
    "text": "your house you'll come to the letterbox the junk mail for you you and when you want to order some food",
    "start": "343360",
    "end": "349120"
  },
  {
    "text": "you'll look in my paper catalogue and you'll go hmm i fancy that you'll phone me up one of my order tags will take the",
    "start": "349120",
    "end": "355440"
  },
  {
    "text": "order we will fax the order to the restaurant the restaurant will cook it and then someone",
    "start": "355440",
    "end": "360960"
  },
  {
    "text": "will deliver it right we can do it all with telephones fax machines and pieces of paper right",
    "start": "360960",
    "end": "366960"
  },
  {
    "text": "and i think hopefully what you'll see is a bit of insight into how we used to do asynchronous",
    "start": "366960",
    "end": "372639"
  },
  {
    "text": "processes now this is a i'll show you how to build these later on this is about a value stream map",
    "start": "372639",
    "end": "377840"
  },
  {
    "text": "what it's showing you is a particular flow this is basically probably what we call an environmental flow it supports",
    "start": "377840",
    "end": "383280"
  },
  {
    "text": "our business and this is onboarding a new restaurant top is there so a restaurant saying i want to be part of",
    "start": "383280",
    "end": "388400"
  },
  {
    "text": "just paper takeaways business want to be in the catalog and so what would happen initially the first process we look at is essentially",
    "start": "388400",
    "end": "394800"
  },
  {
    "text": "somebody's going to phone our sales team and our sales team essentially are going to say okay here's how you sign up",
    "start": "394800",
    "end": "400560"
  },
  {
    "text": "here's how much it costs is what we take from the order come to a deal with the restaurant these things refer to lead",
    "start": "400560",
    "end": "405759"
  },
  {
    "text": "time how long it takes before the queue is processing time how long effective it takes to actually deal with one of these",
    "start": "405759",
    "end": "411360"
  },
  {
    "text": "items how many of them succeed goes to our team that manage menus right",
    "start": "411360",
    "end": "416479"
  },
  {
    "text": "they're going to take the menu details from you and they're going to put the menu details into basically our catalog and",
    "start": "416479",
    "end": "421599"
  },
  {
    "text": "we're going to publish that and it will go out basically to all the customers right so how do we do that okay",
    "start": "421599",
    "end": "428639"
  },
  {
    "text": "a couple of things you need to know on the left this is the typical pre-automation desk",
    "start": "428639",
    "end": "434800"
  },
  {
    "text": "we have the outbox and the inbox and they are what they say on the tin right",
    "start": "434800",
    "end": "440240"
  },
  {
    "text": "the inbox is where things you need to action or information to support you actually things arrive and the outbox is",
    "start": "440240",
    "end": "446800"
  },
  {
    "text": "where you put things that you have done the idea is work comes into my inbox i",
    "start": "446800",
    "end": "451840"
  },
  {
    "text": "am busy i process stuff at my desk and when i'm done it i pass it to the outbox",
    "start": "451840",
    "end": "457759"
  },
  {
    "text": "and a key concept here is the bit of the time when i'm effectively",
    "start": "457759",
    "end": "463680"
  },
  {
    "text": "trying to be synchronous is essentially when i'm actively working on an item",
    "start": "463680",
    "end": "468960"
  },
  {
    "text": "right i might make a phone call something like that that affects me in order to clarify something then when it goes to the outbox i am that",
    "start": "468960",
    "end": "474560"
  },
  {
    "text": "asynchronous the inbox right outbox that inbox is asynchronous so what happens is someone comes by with",
    "start": "474560",
    "end": "480400"
  },
  {
    "text": "a mail cart let's call him franz kafka so kafka delivers messages",
    "start": "480400",
    "end": "485919"
  },
  {
    "text": "between inboxes and outboxes right",
    "start": "485919",
    "end": "491639"
  },
  {
    "text": "what gets sent we'll use a couple of these things so on the left hand side we can think of these as our events",
    "start": "492400",
    "end": "499280"
  },
  {
    "text": "right so generally you send one of these envelopes and you put on the name routing information would go on the",
    "start": "499280",
    "end": "504479"
  },
  {
    "text": "front you say who's it for and inside usually a memo or a small or a short letter which basically says please can",
    "start": "504479",
    "end": "511759"
  },
  {
    "text": "you do this it's a request for some kind of immediate action or a notification",
    "start": "511759",
    "end": "516880"
  },
  {
    "text": "saying just be aware that x has happened all right so you can think about these as skinny messages and they're screened",
    "start": "516880",
    "end": "523360"
  },
  {
    "text": "off immediately action the other thing that flows around the building are files",
    "start": "523360",
    "end": "529040"
  },
  {
    "text": "and files represent the information that you may need to carry out one of these actions customer details history",
    "start": "529040",
    "end": "537040"
  },
  {
    "text": "um all sorts of information and big fat things so we can think about those as doc what we call document or fact",
    "start": "537040",
    "end": "543040"
  },
  {
    "text": "messages they're often not immediately action they often support action right and",
    "start": "543040",
    "end": "548560"
  },
  {
    "text": "they're often basically what we call series rather than discrete you get a whole set of them",
    "start": "548560",
    "end": "554080"
  },
  {
    "text": "final thing you might want to know it's less important to our example but just because i had to work my first sort of",
    "start": "554560",
    "end": "560000"
  },
  {
    "text": "job before university um i i got i worked in them at one of these mail rooms doing this this is what they call",
    "start": "560000",
    "end": "565440"
  },
  {
    "text": "the frame and what happens is they think there's our broker franz kafka comes with his car and we basically take all the stuff",
    "start": "565440",
    "end": "572560"
  },
  {
    "text": "out we sort it into basically pigeon holes for floors and then basically someone takes delivering to",
    "start": "572560",
    "end": "578160"
  },
  {
    "text": "that floor and takes the message across this is a primitive broker right it's routing things to their destination",
    "start": "578160",
    "end": "584560"
  },
  {
    "text": "oh yeah one more thing those who haven't seen it i assume everyone you guys have all seen fax machines right they still exist enough for the youngsters in the",
    "start": "584560",
    "end": "591120"
  },
  {
    "text": "audience that's i can send paper between two places right",
    "start": "591120",
    "end": "596320"
  },
  {
    "text": "excellent so this is typically how it might work i'm a restaurant owner",
    "start": "596399",
    "end": "602880"
  },
  {
    "text": "and i want to join this amazing new business just paper takeaway i think this is really really going to increase",
    "start": "602880",
    "end": "608399"
  },
  {
    "text": "the orders to my restaurants so i get my phone and i make a synchronized conversation",
    "start": "608399",
    "end": "613440"
  },
  {
    "text": "and it goes to the sales team at just paper takeaway and they take down my details and they say fantastic we're signing you up",
    "start": "613440",
    "end": "620959"
  },
  {
    "text": "i'll get one of our menu people to phone you and take details of your menu and what i do is the sales person as i probably open a file",
    "start": "620959",
    "end": "627440"
  },
  {
    "text": "saying hey i've got this ongoing sales process and i put basically a request one of the",
    "start": "627440",
    "end": "632800"
  },
  {
    "text": "discreet fraction items in my out box saying hey menu team please can you contact this customer and get their menu",
    "start": "632800",
    "end": "639440"
  },
  {
    "text": "details kafka comes along and he collects stuff and puts it in his mail cart and he delivers it over to",
    "start": "639440",
    "end": "644959"
  },
  {
    "text": "the team that deal with menus team would do with menus take it out their inbox and they probably open a",
    "start": "644959",
    "end": "650320"
  },
  {
    "text": "file too saying okay i've got a menu request i need to deal with because it's going to take some time and i'm going to",
    "start": "650320",
    "end": "655920"
  },
  {
    "text": "need to basically correlate the responses when they come in i then fax the restaurant right i faxed",
    "start": "655920",
    "end": "662320"
  },
  {
    "text": "the restaurant saying please can you fill out basically your menu for our catalogue over at the restaurant someone takes the",
    "start": "662320",
    "end": "668800"
  },
  {
    "text": "facts and they may well open a file too saying oh another one of these menu requests from these newfangled um",
    "start": "668800",
    "end": "675200"
  },
  {
    "text": "paper-based main delivery companies um i will effectively put a request in the chefs in the inbox",
    "start": "675200",
    "end": "682160"
  },
  {
    "text": "for the chef and the chef can create a menu basically for this company so it goes over to the chef's desk it",
    "start": "682160",
    "end": "688000"
  },
  {
    "text": "goes to his inbox from your outbox by um uh probably uh franz kafka's cousin",
    "start": "688000",
    "end": "694320"
  },
  {
    "text": "uh who works in the restaurant and and kafka effectively takes it to the chef and the chef then basically fills out",
    "start": "694320",
    "end": "699440"
  },
  {
    "text": "the menu and puts it in his out box from the outbox franz takes it basically",
    "start": "699440",
    "end": "705279"
  },
  {
    "text": "to the team that confirmed the request they essentially say right we're done take it off in their file and say that",
    "start": "705279",
    "end": "711360"
  },
  {
    "text": "particular action is done and they fax it back to us we then pick it up over basically in the",
    "start": "711360",
    "end": "716560"
  },
  {
    "text": "process menu request team and they say okay where's the file for that one okay so when we've done that piece of work",
    "start": "716560",
    "end": "722320"
  },
  {
    "text": "okay that's complete and i can put something in the out box with the details probably the whole file in for",
    "start": "722320",
    "end": "728160"
  },
  {
    "text": "the team that actually builds menus clean the builds menus effectively gets it in their inbox and they go away and",
    "start": "728160",
    "end": "734160"
  },
  {
    "text": "they do some reprographics work and they update the basic new catalog which is dispatched to all our happy lovely customers right",
    "start": "734160",
    "end": "740720"
  },
  {
    "text": "and you can see the only real synchronous part of that flow is when the call is made",
    "start": "740720",
    "end": "747920"
  },
  {
    "text": "to us basically to request that we put you in the menu everything else is a flow from inboxes to outboxes with",
    "start": "747920",
    "end": "755680"
  },
  {
    "text": "some busy work in the middle such as effectively completing menu details",
    "start": "755680",
    "end": "761440"
  },
  {
    "text": "right but what we're doing is we're moving between these process steps",
    "start": "761440",
    "end": "767040"
  },
  {
    "text": "and these flows are naturally asynchronous we can have pauses to wait for stuff to come back",
    "start": "767040",
    "end": "774079"
  },
  {
    "text": "um someone heard the messaging term routing slip something you might have yeah so this is",
    "start": "774079",
    "end": "779600"
  },
  {
    "text": "actually a routine this is what they actually look like um so you can see it's basically like a workflow and has a list of people",
    "start": "779600",
    "end": "786720"
  },
  {
    "text": "oh it means that person retains it at the end and it's saying either this information for you in other words i",
    "start": "786720",
    "end": "792000"
  },
  {
    "text": "want you to know that this is happening or action you have an action to take and basically what happens is you just go",
    "start": "792000",
    "end": "797440"
  },
  {
    "text": "through each person in the list and they do what they're supposed to do we use that messaging all the time the idea effectively that a message could contain",
    "start": "797440",
    "end": "803760"
  },
  {
    "text": "the workflow that it should be following",
    "start": "803760",
    "end": "808399"
  },
  {
    "text": "okay so i sent out my menu someone basically now wants to place an",
    "start": "808880",
    "end": "814160"
  },
  {
    "text": "order with our fabulous business okay so the customer wants to order food so there's an order food process where",
    "start": "814160",
    "end": "820480"
  },
  {
    "text": "they phone up one of our lovely agents they could i could make even this asynchronous and assume businesses will",
    "start": "820480",
    "end": "825760"
  },
  {
    "text": "fax it in right but for the minute we're assuming domestic customers don't have a fax machine and they're going to phone us up",
    "start": "825760",
    "end": "831839"
  },
  {
    "text": "um they'll take the order they'll pass over to the payments team in fact we only have a certain number of people who can take credit cards",
    "start": "831839",
    "end": "838079"
  },
  {
    "text": "right they'll take the order um once the order is paid for um it will go to our",
    "start": "838079",
    "end": "843120"
  },
  {
    "text": "order placement team who will then put it out to a given restaurant and once the restaurant confirms that they're",
    "start": "843120",
    "end": "848320"
  },
  {
    "text": "going to put they're going to fulfill the order our customer agents will phone back the customers or text them and say",
    "start": "848320",
    "end": "853839"
  },
  {
    "text": "your order's on its way so how does that work well",
    "start": "853839",
    "end": "859920"
  },
  {
    "text": "the customer has a catalog we sent them one asynchronously they",
    "start": "859920",
    "end": "866000"
  },
  {
    "text": "have received instructions which let them place an order with us anyone who",
    "start": "866000",
    "end": "871600"
  },
  {
    "text": "isn't familiar with it should probably read a white paper by pat helen called the data on the outside versus data on",
    "start": "871600",
    "end": "877760"
  },
  {
    "text": "the inside and pat talks about an idea he calls reference data so reference data is data that we need to publish to",
    "start": "877760",
    "end": "884639"
  },
  {
    "text": "other services in order to help them make requests",
    "start": "884639",
    "end": "889760"
  },
  {
    "text": "and commonly when we do it by messaging the term we tend to use nowadays is event carriage state transfer which",
    "start": "889760",
    "end": "895040"
  },
  {
    "text": "means i use messaging to let you build up uh the data you will need to send me",
    "start": "895040",
    "end": "900480"
  },
  {
    "text": "your request right so that just equip we do exactly the equivalent of this i give you a catalog",
    "start": "900480",
    "end": "906720"
  },
  {
    "text": "so you can make an order and the same thing is true you know for uis right my cert my micro service publishes data",
    "start": "906720",
    "end": "912880"
  },
  {
    "text": "that you can then use in the ui actually to make requests okay and they place the order and they phone",
    "start": "912880",
    "end": "919199"
  },
  {
    "text": "up my team to place the order my team also has the catalog why well",
    "start": "919199",
    "end": "925440"
  },
  {
    "text": "when the customer phones up i need to validate the order right i need to basically go through validate",
    "start": "925440",
    "end": "932079"
  },
  {
    "text": "that's a correct order for that restaurant figure out what the price is say to the customer hey that's going to be you know 24 pounds etc",
    "start": "932079",
    "end": "940480"
  },
  {
    "text": "note that we may have issues with eventual consistency what do we mean by that well typically what happens is some",
    "start": "940480",
    "end": "945920"
  },
  {
    "text": "of our customers they put this in their draw they get a new one and they're kind of like we've already got one of those",
    "start": "945920",
    "end": "951040"
  },
  {
    "text": "and throw it away and so they're ordering from an out-of-date set of data right",
    "start": "951040",
    "end": "956240"
  },
  {
    "text": "so what happens we have to resolve those eventual consistency issues which tends to mean that our team has actually the correct",
    "start": "956240",
    "end": "963519"
  },
  {
    "text": "copy of the lookup data that they need and they will simply tell the customer i'm afraid you can't order that item or",
    "start": "963519",
    "end": "969120"
  },
  {
    "text": "no actually that's now gonna be 27 pounds rather than 24 because the prices have gone up is that okay we resolve",
    "start": "969120",
    "end": "974560"
  },
  {
    "text": "those issues all the time in normal workflows in the kind of business",
    "start": "974560",
    "end": "980399"
  },
  {
    "text": "now they probably use the phone system to put you on hold transfer you to somebody who can take a payment they",
    "start": "981440",
    "end": "987279"
  },
  {
    "text": "will basically use our card machine which has a basically an option for cardholder not present we'll put through",
    "start": "987279",
    "end": "992480"
  },
  {
    "text": "the card machine effectively and if we take the payment successfully from you then the take payment team can basically",
    "start": "992480",
    "end": "998399"
  },
  {
    "text": "put an order in their outbox saying there's a priced and validated order from a customer",
    "start": "998399",
    "end": "1005519"
  },
  {
    "text": "and again there's a synchronous flow which occurs basically from the customer to the order taker",
    "start": "1006079",
    "end": "1012320"
  },
  {
    "text": "you can think about someone filling out basically information on a website but at that point effectively the",
    "start": "1012320",
    "end": "1017920"
  },
  {
    "text": "synchronous flow continues although we kind of do a a little bit of a kind of sync over",
    "start": "1017920",
    "end": "1024798"
  },
  {
    "text": "async over sync right we let we don't have to we allow the auto taker take new orders while effectively um we transfer",
    "start": "1024799",
    "end": "1031839"
  },
  {
    "text": "to the other payment person and then essentially at that point we uh raise an order",
    "start": "1031839",
    "end": "1039839"
  },
  {
    "text": "so go into restaurants this is basically actually still how restaurants tend to do this today this is called the order",
    "start": "1040880",
    "end": "1046319"
  },
  {
    "text": "wheel so they can take it as a message queue what happens i got a piece of paper on the waitress with somebody's order i go",
    "start": "1046319",
    "end": "1053039"
  },
  {
    "text": "and stick it basically on the next available slot on the order wheel the chef comes along rotates it round clockwise takes",
    "start": "1053039",
    "end": "1059600"
  },
  {
    "text": "the next item in turn and basically fulfills that order right so people all the time use things like",
    "start": "1059600",
    "end": "1066480"
  },
  {
    "text": "messaging message cues asynchronous flows right in the real world all the",
    "start": "1066480",
    "end": "1072400"
  },
  {
    "text": "time that's what we do okay so i have project processed and",
    "start": "1072400",
    "end": "1078559"
  },
  {
    "text": "validated order and that arrives in my order placement team it goes into their inbox it's basically just a order",
    "start": "1078559",
    "end": "1084400"
  },
  {
    "text": "request so it will be a simple uh inside a simple envelope there's no file required and essentially they say okay i",
    "start": "1084400",
    "end": "1091120"
  },
  {
    "text": "need to look up basically some details i've got about the restaurant we don't really show that here but somewhere they've probably got a book that gives",
    "start": "1091120",
    "end": "1097120"
  },
  {
    "text": "the restaurants fax numbers they get the fax number for the restaurant and they fax the order over to the restaurant",
    "start": "1097120",
    "end": "1103919"
  },
  {
    "text": "the order taking team the restaurant basically effectively uh will essentially take it off the fax machine",
    "start": "1103919",
    "end": "1109760"
  },
  {
    "text": "they probably essentially put that in an actionable envelope and they stick it in their outbox for franz kafka's cousin to",
    "start": "1109760",
    "end": "1115360"
  },
  {
    "text": "pick up and go and effectively take towards the chef the chef",
    "start": "1115360",
    "end": "1121039"
  },
  {
    "text": "decides whether or not they can fulfill the order we've got the ingredients we're too busy et cetera and with",
    "start": "1121039",
    "end": "1126960"
  },
  {
    "text": "assuming they choose to accept the order then essentially he will effectively send the order request over to the",
    "start": "1126960",
    "end": "1133520"
  },
  {
    "text": "delivery desk the delivery desk is probably me phoning my cousin bob uh to decide",
    "start": "1133520",
    "end": "1140080"
  },
  {
    "text": "whether or not essentially bob's car is working and he can actually deliver the order for us if so what bob will tend to",
    "start": "1140080",
    "end": "1146480"
  },
  {
    "text": "do is basically say that's fine i can probably deliver to the customer at 7 15",
    "start": "1146480",
    "end": "1151919"
  },
  {
    "text": "and he sends a message back from his out box he puts two messages in the outbox one will say",
    "start": "1151919",
    "end": "1158240"
  },
  {
    "text": "hey i'm going to deliver the order at 7 30 to the chef so the chef knows i better start cooking that at 10 past",
    "start": "1158240",
    "end": "1163760"
  },
  {
    "text": "and the other one goes back basically to the order taking team uh to say can you fax back to just paper take away to tell",
    "start": "1163760",
    "end": "1170480"
  },
  {
    "text": "them the order's been accepted we then get our fax back right and again we must have usually",
    "start": "1170480",
    "end": "1176880"
  },
  {
    "text": "effectively at some point we've got a file we get that the request back and we say look up that",
    "start": "1176880",
    "end": "1182240"
  },
  {
    "text": "order in the file and say okay that order is now completed",
    "start": "1182240",
    "end": "1187200"
  },
  {
    "text": "and we can effectively raise something to say okay we now have basically an accepted",
    "start": "1187760",
    "end": "1193120"
  },
  {
    "text": "order at the restaurant and again this flow is asynchronous right",
    "start": "1193120",
    "end": "1199120"
  },
  {
    "text": "i get in something to my inbox asynchronously i put it over a fax machine the other team get it in",
    "start": "1199120",
    "end": "1205520"
  },
  {
    "text": "by their fax machine put it in their out box it goes to the chef into his inbox he actions it puts",
    "start": "1205520",
    "end": "1211679"
  },
  {
    "text": "it in his out box it goes to the driver booking they action it and so effectively okay i've got they raised",
    "start": "1211679",
    "end": "1218559"
  },
  {
    "text": "two messages one to the shaft one back to us and that asynchronous flow comes across and we pick up our file that says",
    "start": "1218559",
    "end": "1226080"
  },
  {
    "text": "hey um that order is now complete and raised a computer message from our outbox",
    "start": "1226080",
    "end": "1232559"
  },
  {
    "text": "and that then flows to our customer customer agents a customer agents receive that in their inbox and they",
    "start": "1232799",
    "end": "1238159"
  },
  {
    "text": "have basically a request that's a thing saying this order has been basically successfully placed with a restaurant",
    "start": "1238159",
    "end": "1243840"
  },
  {
    "text": "and it's they say they're going to deliver at 7 30 and i then phone up the customer and say",
    "start": "1243840",
    "end": "1249520"
  },
  {
    "text": "your food is coming at 7 30. and that would be a synchronous conversation at this point unless we decide you know",
    "start": "1249520",
    "end": "1255039"
  },
  {
    "text": "we're living in a world where sms exists in which case i you know i text you or whatever right but",
    "start": "1255039",
    "end": "1261039"
  },
  {
    "text": "again that's another synchronous part of the flow potentially all right",
    "start": "1261039",
    "end": "1267279"
  },
  {
    "text": "and you can see overall that there are two things that are",
    "start": "1267760",
    "end": "1273360"
  },
  {
    "text": "happening one we can think of as flow right it's this asynchronous conversation",
    "start": "1273360",
    "end": "1279360"
  },
  {
    "text": "there are information packets moving between desks where people are taking actions and hustling when effectively",
    "start": "1279360",
    "end": "1287120"
  },
  {
    "text": "somebody is actually doing some work they take a thing out of the inbox and they and they do whatever their",
    "start": "1287120",
    "end": "1292240"
  },
  {
    "text": "particular function is right work on whatever we've got and then they potentially raise some new",
    "start": "1292240",
    "end": "1298159"
  },
  {
    "text": "message to their outbox and that is really the model right that is the model of effectively how we build",
    "start": "1298159",
    "end": "1305120"
  },
  {
    "text": "software that we want to work in an asynchronous fashion we need to think about",
    "start": "1305120",
    "end": "1311360"
  },
  {
    "text": "individual processing desks where a particular part a particular business process is carried out",
    "start": "1311360",
    "end": "1318400"
  },
  {
    "text": "and think about a flow of kind of inbox to outbox that says you do your step okay there's",
    "start": "1318400",
    "end": "1325200"
  },
  {
    "text": "a okay we'll hand it off next question does their step we'll hand it off next person does that step so you can see we",
    "start": "1325200",
    "end": "1330880"
  },
  {
    "text": "have that we have a synchronous flow there you probably can't see the colors on the screen um",
    "start": "1330880",
    "end": "1336880"
  },
  {
    "text": "this onboarding of a restaurant is effectively all asynchronous at that point right don't worry about that detail",
    "start": "1336880",
    "end": "1342240"
  },
  {
    "text": "um and then we basically produce that catalog it goes basically to our order taking team to the customer that's",
    "start": "1342240",
    "end": "1347679"
  },
  {
    "text": "asynchronous it's just going by snail mail right and then essentially there is this synchronous call from the customer",
    "start": "1347679",
    "end": "1354559"
  },
  {
    "text": "which then effectively we take their order and then essentially there's an",
    "start": "1354559",
    "end": "1359679"
  },
  {
    "text": "asynchronous flow placing it with the restaurant the restaurant booking its driver confirming the order and us then",
    "start": "1359679",
    "end": "1364799"
  },
  {
    "text": "basically responding with a synchronous call at the end but the thing i wanted to take away from",
    "start": "1364799",
    "end": "1370080"
  },
  {
    "text": "this is not the detail on this diagram but an understanding that when we built paper-based systems",
    "start": "1370080",
    "end": "1376240"
  },
  {
    "text": "we just consistently worked in a mostly asynchronous fashion that is the norm that's what we've done for hundreds of",
    "start": "1376240",
    "end": "1382480"
  },
  {
    "text": "years synchronous internal models of your system are actually the abnormality",
    "start": "1382480",
    "end": "1389760"
  },
  {
    "text": "what about errors what about errors in asynchronous systems this is by the way in case some of you've never seen it",
    "start": "1389760",
    "end": "1396400"
  },
  {
    "text": "when you're when you send a fax you get a fax receipt and the fax receipt has a code",
    "start": "1396400",
    "end": "1402799"
  },
  {
    "text": "right on the end and it tells you basically whether your facts were sent or not right okay",
    "start": "1402799",
    "end": "1408640"
  },
  {
    "text": "so what would happen for example if uh my uh",
    "start": "1408640",
    "end": "1413919"
  },
  {
    "text": "order taking team have got an order they've got a request in their inbox they've opened up a file",
    "start": "1413919",
    "end": "1419280"
  },
  {
    "text": "um and they send the order over to the restaurant right and they get an uh receipt back off the",
    "start": "1419280",
    "end": "1425120"
  },
  {
    "text": "fax machine and that says there's an error what happens generally what happens",
    "start": "1425120",
    "end": "1431360"
  },
  {
    "text": "normally we just retry right just say let's try sending that facts again i've got a copy on file probably",
    "start": "1431360",
    "end": "1438080"
  },
  {
    "text": "all right and i resend the copy that i got on file so copies on file so the model we used to",
    "start": "1438080",
    "end": "1445360"
  },
  {
    "text": "use was this right basically carbon paper so i write on the top sheet",
    "start": "1445360",
    "end": "1450640"
  },
  {
    "text": "and it presses on the bottom sheet below which is carbon paper it takes an impression of it and i then have a copy",
    "start": "1450640",
    "end": "1455919"
  },
  {
    "text": "of the message that i intended to send if the message gets lost then essentially i have a carbon copy i",
    "start": "1455919",
    "end": "1462480"
  },
  {
    "text": "can send all right so imagine that you are phoning up just paper take",
    "start": "1462480",
    "end": "1468080"
  },
  {
    "text": "one you want to be on board and the sales team and you agree the contract and the sales team puts a message into that outbox for franz kafka to deliver",
    "start": "1468080",
    "end": "1475279"
  },
  {
    "text": "um to our team take menu and it turns out uh what you want to do",
    "start": "1475279",
    "end": "1480400"
  },
  {
    "text": "is create a file saying here is my sales account for this customer right",
    "start": "1480400",
    "end": "1486640"
  },
  {
    "text": "and i put a copy a carbon copy of the message i intend to send to the team that process the menu request on my file",
    "start": "1486640",
    "end": "1495039"
  },
  {
    "text": "and if for some reason franz kafka is having a bad day and he loses essentially my message",
    "start": "1495039",
    "end": "1500559"
  },
  {
    "text": "then when effectively the customer tends to phone me up and say well i have not been onboarded yet onto your into a lovely new catalogue i've seen two",
    "start": "1500559",
    "end": "1506559"
  },
  {
    "text": "catalogs go by my restaurant's not in it i can take the copy out of my uh file",
    "start": "1506559",
    "end": "1512320"
  },
  {
    "text": "and resend it to the processing order team and today you may be aware of terms like",
    "start": "1512320",
    "end": "1517600"
  },
  {
    "text": "outbox or log tailing and that's what we use in asynchronous systems what we're",
    "start": "1517600",
    "end": "1523279"
  },
  {
    "text": "doing is we're simply saying keep a copy of the message that you have sent to everyone downstream",
    "start": "1523279",
    "end": "1529760"
  },
  {
    "text": "such that in the event that there is a failure of that message to be transmitted to the downstream you can",
    "start": "1529760",
    "end": "1535039"
  },
  {
    "text": "just resend it indeed",
    "start": "1535039",
    "end": "1540840"
  },
  {
    "text": "what about declined transactions right and they see in this kind of process what happens if the customer",
    "start": "1544400",
    "end": "1550880"
  },
  {
    "text": "uh was to be declined so we'll modify the process a little bit right and we'll assume somehow that the order payment",
    "start": "1550880",
    "end": "1557840"
  },
  {
    "text": "um uh i was showing the line to a phone but let's say assuming we want to do the order proceeding somehow asynchronously",
    "start": "1557840",
    "end": "1563120"
  },
  {
    "text": "we put a request in with the customers details and the order team effectively then uh went away and did a card holder",
    "start": "1563120",
    "end": "1569440"
  },
  {
    "text": "not present without the customer on the phone we assume just say give us your details we'll run it through the credit card machine",
    "start": "1569440",
    "end": "1574960"
  },
  {
    "text": "um uh and we'll let you know there's a problem so what happens in that case is just a",
    "start": "1574960",
    "end": "1580159"
  },
  {
    "text": "new flow right in the event effectively your transaction is declined we simply put a message in our outbox",
    "start": "1580159",
    "end": "1586880"
  },
  {
    "text": "which goes to vector of the inbox of the customer agent saying customer's car was declined please can",
    "start": "1586880",
    "end": "1592720"
  },
  {
    "text": "you request to present a new card and generally speaking because that",
    "start": "1592720",
    "end": "1599440"
  },
  {
    "text": "happens infrequently we may decide that's okay there's a risk we might have to get hold of the",
    "start": "1599440",
    "end": "1604559"
  },
  {
    "text": "customer but that's fine he doesn't get any food at that point right there's no process of validated order and because most of our transactions go through",
    "start": "1604559",
    "end": "1610320"
  },
  {
    "text": "without a problem there's no point in asking the customer to wait on the line okay",
    "start": "1610320",
    "end": "1617440"
  },
  {
    "text": "all right so hopefully that helps you a little bit",
    "start": "1617840",
    "end": "1624400"
  },
  {
    "text": "i'm just gonna take a quick drink of water",
    "start": "1624400",
    "end": "1627840"
  },
  {
    "text": "if anyone has a question at that point you can ask it's fine don't have to be quiet",
    "start": "1629840",
    "end": "1635120"
  },
  {
    "text": "no we're good",
    "start": "1635120",
    "end": "1638600"
  },
  {
    "text": "all right we are software engineers not paper engineers so although it's useful to think about it this way",
    "start": "1641120",
    "end": "1648080"
  },
  {
    "text": "is there any more advice which is more practical for software engineers so flow based programming was created by",
    "start": "1648080",
    "end": "1654880"
  },
  {
    "text": "paul morrison who worked for ibm in the kind of 70s and 80s it still has some life particularly if you go and look at",
    "start": "1654880",
    "end": "1661360"
  },
  {
    "text": "the kind of um reactive architectures movement the active architectures movement is aware",
    "start": "1661360",
    "end": "1666799"
  },
  {
    "text": "of flow based programming and occasion and i think there are a couple of float-based programming tools out there",
    "start": "1666799",
    "end": "1673840"
  },
  {
    "text": "and it sits along things like data flow etc and similar kind of reactive ideas",
    "start": "1673840",
    "end": "1680320"
  },
  {
    "text": "now what happened was this is the dominant paradigm that we got so objects on the right hand side",
    "start": "1680480",
    "end": "1687360"
  },
  {
    "text": "effectively are state and behavior right so i capture some state and i put it in an object and i say any methods that",
    "start": "1687360",
    "end": "1694720"
  },
  {
    "text": "effectively depend upon that state in other words behaviors that basically require that state go on the object",
    "start": "1694720",
    "end": "1702000"
  },
  {
    "text": "right and in a good world we hide the state unfortunately due to orms except we've",
    "start": "1702000",
    "end": "1707120"
  },
  {
    "text": "ended up exposing all our state's properties but that's a different talk for a different day",
    "start": "1707120",
    "end": "1712159"
  },
  {
    "text": "and we use what's called call and returns what does call and return mean so call and return says everything",
    "start": "1712159",
    "end": "1717600"
  },
  {
    "text": "starts generally with a with a with a method called main and in main i call an obj method on an",
    "start": "1717600",
    "end": "1724880"
  },
  {
    "text": "object and that method on the object does some work and it calls method another object",
    "start": "1724880",
    "end": "1730000"
  },
  {
    "text": "which calls a method on another object and eventually at some point something in the chain goes i'm going to return",
    "start": "1730000",
    "end": "1735600"
  },
  {
    "text": "and the flow of control passes back to the thing that we've called it and then back and back and back and eventually",
    "start": "1735600",
    "end": "1741679"
  },
  {
    "text": "we hit the return on main and the program ends right so that's why it's called it's called basically call and return that is the",
    "start": "1741679",
    "end": "1748080"
  },
  {
    "text": "dominant paradigm that we all use today nearly every language you're writing",
    "start": "1748080",
    "end": "1754720"
  },
  {
    "text": "so so paul morrison's alternative is this flow-based programming so we'll start on the left-hand side so the key idea is this thing called the",
    "start": "1756799",
    "end": "1763679"
  },
  {
    "text": "information packet which is an independent structure piece of information with a well-defined lifetime from creation and destruction",
    "start": "1763679",
    "end": "1770399"
  },
  {
    "text": "and in fbp the ip contains the state it flows they are out they're not in storage what do we mean by that the data",
    "start": "1770399",
    "end": "1778640"
  },
  {
    "text": "does not live in an object right the data lives in an information",
    "start": "1778640",
    "end": "1784559"
  },
  {
    "text": "packet it looks quite separately to the code that essentially has the behavior we pass these information packets around",
    "start": "1784559",
    "end": "1793200"
  },
  {
    "text": "the component is where behavior happens right in fep the component contains the behavior so",
    "start": "1793200",
    "end": "1800799"
  },
  {
    "text": "what happens is an information packet flows into a component via a port the point where a connection makes uh",
    "start": "1800799",
    "end": "1807360"
  },
  {
    "text": "contact with a process right so in other words in our i go into our report into",
    "start": "1807360",
    "end": "1812559"
  },
  {
    "text": "my component the import with node in says information packets coming in i do some work on it and then it flows a new",
    "start": "1812559",
    "end": "1820000"
  },
  {
    "text": "information packet usually flows out of the out port right",
    "start": "1820000",
    "end": "1825440"
  },
  {
    "text": "and the model in flow-based programming is you say what are the behaviors what are the",
    "start": "1826240",
    "end": "1831840"
  },
  {
    "text": "hustles the pieces of process of busy work that i need to do right what information flows into them for",
    "start": "1831840",
    "end": "1838880"
  },
  {
    "text": "them to be able to act and what information flows out of them when they are done if you think about it that's exactly the",
    "start": "1838880",
    "end": "1845440"
  },
  {
    "text": "model we've just been talking about with pre-automation systems i have an inbox and i have an out box i have an import",
    "start": "1845440",
    "end": "1851679"
  },
  {
    "text": "and i have an outport i have i have i have memos and i have files i",
    "start": "1851679",
    "end": "1857039"
  },
  {
    "text": "have information packets right that are flowing through my system",
    "start": "1857039",
    "end": "1864679"
  },
  {
    "text": "so an ip has a lifetime once a component has consumed an ip it deletes it components use queues",
    "start": "1866159",
    "end": "1873440"
  },
  {
    "text": "points so i'm distinguishing q and stream so q we effectively take a piece",
    "start": "1873440",
    "end": "1879120"
  },
  {
    "text": "of work we lock it and say i'm the one basically reading that essentially when we finish with it we delete it so nobody else processes it",
    "start": "1879120",
    "end": "1886080"
  },
  {
    "text": "right whereas an event stream is you move a pointer through effectively and other people can process the same message so cueing semantics because we",
    "start": "1886080",
    "end": "1893679"
  },
  {
    "text": "want to basically say i've got this piece of work when i have consumed this piece of work i delete it no one else",
    "start": "1893679",
    "end": "1899360"
  },
  {
    "text": "needs to do that piece of work it's been actioned and i raised basically a result doing that work an information packet",
    "start": "1899360",
    "end": "1904480"
  },
  {
    "text": "going out",
    "start": "1904480",
    "end": "1907840"
  },
  {
    "text": "the component has ports and those ports we tend to say in flow",
    "start": "1910960",
    "end": "1916799"
  },
  {
    "text": "based programming what you want to do is basically think about a logical distraction so paul is abstracted away from domain logic it's a logical address",
    "start": "1916799",
    "end": "1923039"
  },
  {
    "text": "in which things are related to which things are dispatched if you see people uh doing firebase programming in code they will simply say it's like",
    "start": "1923039",
    "end": "1929679"
  },
  {
    "text": "something like send to in or rather read from in send it to out right and i'll just use basically an abstraction to",
    "start": "1929679",
    "end": "1936240"
  },
  {
    "text": "represent the port your domain code just uses an abstraction we do the same thing in messaging we",
    "start": "1936240",
    "end": "1941760"
  },
  {
    "text": "talk about channels there are virtual pipe which you address i mean if you think about topics on kafka routine keys",
    "start": "1941760",
    "end": "1949120"
  },
  {
    "text": "on rabbit mq they are all effectively names we can give to ports right you can",
    "start": "1949120",
    "end": "1955919"
  },
  {
    "text": "have multiple ports and connectors generally you know you you may receive a number of",
    "start": "1955919",
    "end": "1962320"
  },
  {
    "text": "signals you may pump out a number of signals uh in uh ports can have multiple",
    "start": "1962320",
    "end": "1969360"
  },
  {
    "text": "uh types of information packet on the same port because you may want to be sequencing them i put them in an order",
    "start": "1969360",
    "end": "1977039"
  },
  {
    "text": "right so you basically may say this has to come before this so you have to read this one first then you can read this one next so they have to use the same",
    "start": "1977039",
    "end": "1983519"
  },
  {
    "text": "import right and on out ports we only tend to use one thread to write to an individual port so we can preserve",
    "start": "1983519",
    "end": "1989600"
  },
  {
    "text": "sequencing of things going out of the port as well right and that's very similar actually the way some things like event streams",
    "start": "1989600",
    "end": "1995600"
  },
  {
    "text": "work today and we tend to basically only have one thread processing them when we effectively need to make sure that we have uh make sure that a thread is only",
    "start": "1995600",
    "end": "2002960"
  },
  {
    "text": "pushing out one item at time in order and what happens is we make more complex",
    "start": "2002960",
    "end": "2009840"
  },
  {
    "text": "systems by hooking together components right so think unix pipes and filter",
    "start": "2009840",
    "end": "2015600"
  },
  {
    "text": "style architectures right i have a component it receives an information packet it does some",
    "start": "2015600",
    "end": "2021039"
  },
  {
    "text": "transformation it produces more information packets which go to other components right and we refer to that",
    "start": "2021039",
    "end": "2027120"
  },
  {
    "text": "and focus programming as a network and then what we can do is we can",
    "start": "2027120",
    "end": "2033600"
  },
  {
    "text": "simplify our reasoning about things by taking a number of uh components a network and saying well",
    "start": "2033600",
    "end": "2040880"
  },
  {
    "text": "i can think about this as actually a component right because it has an in",
    "start": "2040880",
    "end": "2047279"
  },
  {
    "text": "and it has an out so i can just really avoid the detail and just reason about this larger macro idea of things",
    "start": "2047279",
    "end": "2053679"
  },
  {
    "text": "something that goes in and out so they're a subnet right and so subnets are collections of",
    "start": "2053679",
    "end": "2059200"
  },
  {
    "text": "components to kind of fulfill a purpose and we'll see that in a second how we use that",
    "start": "2059200",
    "end": "2064240"
  },
  {
    "text": "okay so let's go through that same just paper take away flow again",
    "start": "2064240",
    "end": "2071118"
  },
  {
    "text": "but this time let's think of it in terms of flow based programming okay",
    "start": "2071119",
    "end": "2076480"
  },
  {
    "text": "so start the left-hand side this dotted line basically is going to indicate a subnet in which we have three components by the",
    "start": "2076480",
    "end": "2082878"
  },
  {
    "text": "way right uh we have a qualify restaurant request it doesn't make catalog so that's our sales process",
    "start": "2082879",
    "end": "2088878"
  },
  {
    "text": "that's our team basically requesting details from the restaurant the menu that's basically our graphics department",
    "start": "2088879",
    "end": "2094000"
  },
  {
    "text": "making the catalog right we've got ports between them out and in out and in so we just think we're just trying to",
    "start": "2094000",
    "end": "2099440"
  },
  {
    "text": "capitalize on that inbox our box idea for you right work comes into my inbox comes into my in port right leaves while",
    "start": "2099440",
    "end": "2106160"
  },
  {
    "text": "my outbox goes out for my out port right now in fbp what we do is we treat",
    "start": "2106160",
    "end": "2111359"
  },
  {
    "text": "basically a ui it's just a stream of information coming into basically uh our",
    "start": "2111359",
    "end": "2117920"
  },
  {
    "text": "subnet and then what happens is we go basically through a qualify restaurant we pretty",
    "start": "2117920",
    "end": "2124560"
  },
  {
    "text": "much do some validation of what we've received over the ui and then comes to request details where we have to fax the",
    "start": "2124560",
    "end": "2131280"
  },
  {
    "text": "restaurant we're not going to show the restaurant side of the equations for simplicity and what happens here is that a",
    "start": "2131280",
    "end": "2137280"
  },
  {
    "text": "component may have state which enables it to correlate between ips that arrive across time for example storing the",
    "start": "2137280",
    "end": "2143920"
  },
  {
    "text": "details request until it gets a fax menu response that then passes along with details so that's what we're saying is",
    "start": "2143920",
    "end": "2150079"
  },
  {
    "text": "i fax you something i'm going to need to get a correlation id on it you're going to give me a response a bit later i'm",
    "start": "2150079",
    "end": "2156240"
  },
  {
    "text": "doing other work in the meantime i'll pick up that correlation id and i will essentially say hey this is the response",
    "start": "2156240",
    "end": "2161359"
  },
  {
    "text": "to that request and that also means this kind of component needs storage",
    "start": "2161359",
    "end": "2167520"
  },
  {
    "text": "and it needs storage because the requested may need storage to be reliable it takes work from the import but kind of sent to the output without",
    "start": "2167520",
    "end": "2173760"
  },
  {
    "text": "waiting for the correlated fax input and output which is asynchronous what would be dropped if we lost the process",
    "start": "2173760",
    "end": "2180480"
  },
  {
    "text": "without being able to recover where we were in other words because i'm waiting what happens if i crash any work in",
    "start": "2180480",
    "end": "2185920"
  },
  {
    "text": "flight will be lost if it's just a memory so i store waiting requests into a database right interestingly enough",
    "start": "2185920",
    "end": "2192960"
  },
  {
    "text": "and something i often point out to my colleagues is in this entire subnet which we could think of potentially as a micro service",
    "start": "2192960",
    "end": "2199280"
  },
  {
    "text": "because it's a business process that we're aligned with right in this entire subnet it's only really this step in the",
    "start": "2199280",
    "end": "2206079"
  },
  {
    "text": "middle that actually requires us to store on a thing everything else could actually rely on the storage provided to us by cues",
    "start": "2206079",
    "end": "2214640"
  },
  {
    "text": "now it's quite a ballsy move but you may find that actually we could remove quite a lot of databases from our systems",
    "start": "2214640",
    "end": "2221680"
  },
  {
    "text": "because if we've got cues they're actually acting as a data store for work that's in flight and you only need them for reliability in between it",
    "start": "2221680",
    "end": "2228960"
  },
  {
    "text": "okay so let's get the order food one right remember order food have a customer the",
    "start": "2228960",
    "end": "2235280"
  },
  {
    "text": "customer basically goes to where we're going to validate and price the order once we have validated and prices price",
    "start": "2235280",
    "end": "2240800"
  },
  {
    "text": "to order it or go to take payment where we'll basically say hey bank can i take the payment for that or take the payment",
    "start": "2240800",
    "end": "2247520"
  },
  {
    "text": "right customer again basically has a ui which is being treated basically it's a stream of information packets coming in",
    "start": "2247520",
    "end": "2253680"
  },
  {
    "text": "to take order",
    "start": "2253680",
    "end": "2257000"
  },
  {
    "text": "flowbase programming calls the i this idea a lookup it's the same thing we're talking about pattern calls at reference data we saw it as basically a paper",
    "start": "2259760",
    "end": "2267040"
  },
  {
    "text": "catalog right it's how do i validate and price the order so somewhere off screen",
    "start": "2267040",
    "end": "2273119"
  },
  {
    "text": "is effectively our our earlier system which is produced effectively a stream of information packets which we use to",
    "start": "2273119",
    "end": "2279280"
  },
  {
    "text": "build a table and then at take order time i just simply look up in that table and say hey",
    "start": "2279280",
    "end": "2286000"
  },
  {
    "text": "is this a valid item at that restaurant hey how much does this cost okay great i can then price and validate the order",
    "start": "2286000",
    "end": "2293119"
  },
  {
    "text": "using that lookup data and we do this all the time with things like event carriage state transfer and messaging um",
    "start": "2293119",
    "end": "2299359"
  },
  {
    "text": "internally actually at jesse tech we call them projections where effectively we have a cache of data that's come from",
    "start": "2299359",
    "end": "2305200"
  },
  {
    "text": "another system which we use to do things like validate and price stuff etc right",
    "start": "2305200",
    "end": "2311599"
  },
  {
    "text": "okay so take that lookup data and then effectively i'm going to take the payment um the interesting thing to note",
    "start": "2311599",
    "end": "2316960"
  },
  {
    "text": "here is that um there's a synchronous conversation really here going on with",
    "start": "2316960",
    "end": "2322160"
  },
  {
    "text": "the card reader i basically effectively put it in the bank replies right so essentially we say the synchronous",
    "start": "2322160",
    "end": "2328560"
  },
  {
    "text": "request response conversation with the credit card company which is outside of our control the cardboard component turns this into",
    "start": "2328560",
    "end": "2334640"
  },
  {
    "text": "an asynchronous conversation for take payment which can thus be used for retries means we can use the correct over storage for a live that's what i",
    "start": "2334640",
    "end": "2340560"
  },
  {
    "text": "mean by that if we take payment we create a card reader component which has the synchronous conversation i can queue",
    "start": "2340560",
    "end": "2347200"
  },
  {
    "text": "requests to the card reader and wait for responses from the card when they've been actioned so if the",
    "start": "2347200",
    "end": "2353680"
  },
  {
    "text": "card reader is a constrained component in other words i can only make so many requests at any one given time when the",
    "start": "2353680",
    "end": "2359920"
  },
  {
    "text": "card reader it doesn't matter i'm just queuing work eventually it arrives back with a correlation id and i know that",
    "start": "2359920",
    "end": "2365760"
  },
  {
    "text": "order's now been paid for",
    "start": "2365760",
    "end": "2369720"
  },
  {
    "text": "so uh the whole subnet looks asynchronous even though there's a synchronous component basically to it",
    "start": "2371119",
    "end": "2376480"
  },
  {
    "text": "because it comes by in and out okay then we get into the easy world order placement right i'm just doing a fax",
    "start": "2376480",
    "end": "2383040"
  },
  {
    "text": "machine we saw that earlier so effectively again we need our correlation id and again we'll need some storage",
    "start": "2383040",
    "end": "2390000"
  },
  {
    "text": "and you can see that between subnets the flow is completely asynchronous",
    "start": "2390800",
    "end": "2396160"
  },
  {
    "text": "right i have a catalog which becomes look up data for my service not to do the work",
    "start": "2396160",
    "end": "2402079"
  },
  {
    "text": "of validating and pricing i place the order effectively um the order basically does the fax machine",
    "start": "2402079",
    "end": "2409200"
  },
  {
    "text": "effectively goes over the side oh and i've got credit card interaction which effectively looks asynchronous from the",
    "start": "2409200",
    "end": "2414319"
  },
  {
    "text": "outside and even within those subnets those micro services if you like",
    "start": "2414319",
    "end": "2422079"
  },
  {
    "text": "most of the interaction apart from this call to the reader is asynchronous",
    "start": "2422079",
    "end": "2427520"
  },
  {
    "text": "okay does flow-based programming help us with basically the the error flows we saw earlier",
    "start": "2427520",
    "end": "2433760"
  },
  {
    "text": "okay so this is basically the one where effectively your payment fails to daisy what did i do there well it",
    "start": "2433760",
    "end": "2439920"
  },
  {
    "text": "wasn't me we're okay so generally error is a report",
    "start": "2439920",
    "end": "2445599"
  },
  {
    "text": "we send out errors in flow based programming on another port we just say there's a port for errors",
    "start": "2445599",
    "end": "2451520"
  },
  {
    "text": "okay so here what we're saying is if we have a card error we can just raise it to an error port to signal that we",
    "start": "2451520",
    "end": "2457200"
  },
  {
    "text": "transformed the request ip please take payment into an error ip no payment was",
    "start": "2457200",
    "end": "2462560"
  },
  {
    "text": "successfully taken okay just for me i've done that just see if",
    "start": "2462560",
    "end": "2468560"
  },
  {
    "text": "sorry it's the second i will get that back for you there we go",
    "start": "2468560",
    "end": "2474960"
  },
  {
    "text": "um",
    "start": "2474960",
    "end": "2477960"
  },
  {
    "text": "and the errors flow so here what you can see is that in response to me receiving a signal on the error",
    "start": "2481200",
    "end": "2488000"
  },
  {
    "text": "for that particular payment i can then basically say right i will raise a card error so i will basically raise the",
    "start": "2488000",
    "end": "2494319"
  },
  {
    "text": "information packet on the card airport and my take order component has an in",
    "start": "2494319",
    "end": "2500319"
  },
  {
    "text": "new card required port which basically receives messages from that card error information packet and essentially i",
    "start": "2500319",
    "end": "2506400"
  },
  {
    "text": "then basically place it on an order error report which on the ui basically effectively would probably",
    "start": "2506400",
    "end": "2512640"
  },
  {
    "text": "use a push notification that the customer saying card decline please can you present a new one right",
    "start": "2512640",
    "end": "2518960"
  },
  {
    "text": "and we do this all the time messaging right think of these error ports as we're just saying hey you know what there's an error i'll just raise a",
    "start": "2519119",
    "end": "2525760"
  },
  {
    "text": "message just for an error to start an error flow through my system to handle that error",
    "start": "2525760",
    "end": "2532800"
  },
  {
    "text": "rather than the flow effectively for the for the good request",
    "start": "2532800",
    "end": "2537838"
  },
  {
    "text": "okay all right so how can we",
    "start": "2539359",
    "end": "2545119"
  },
  {
    "text": "how can we use these ideas to build reliable systems today so the",
    "start": "2545119",
    "end": "2550560"
  },
  {
    "text": "key i think i've found over time is to make sure that when we model what the components",
    "start": "2550560",
    "end": "2557680"
  },
  {
    "text": "are in our system microservices if you like [Music] that they need to be designed to be",
    "start": "2557680",
    "end": "2564880"
  },
  {
    "text": "these individual processing steps that have kind of an inbox and an outbox and you're doing busy work in the middle and",
    "start": "2564880",
    "end": "2571760"
  },
  {
    "text": "the problem i see a lot is when people try and split across in the middle of the busy work",
    "start": "2571760",
    "end": "2578880"
  },
  {
    "text": "so i've got something comes in and i go away and i basically say oh my job now is to basically validate that",
    "start": "2578880",
    "end": "2584800"
  },
  {
    "text": "request and i'm going to make a call halfway through validating this request to this other service i like validating",
    "start": "2584800",
    "end": "2591040"
  },
  {
    "text": "price right and effectively i say oh i'm going to do this work and then i'm going to make a call halfway through uh to a synchronous this other system",
    "start": "2591040",
    "end": "2597359"
  },
  {
    "text": "over here and then get the response back but that seems to be synchronous because this all seems like one transaction so we have",
    "start": "2597359",
    "end": "2604800"
  },
  {
    "text": "examples like you know um i want to give you a price uh and it includes delivery and includes",
    "start": "2604800",
    "end": "2611440"
  },
  {
    "text": "um offers and actually that really is a transaction and the more i split that the harder it is for me to do work right",
    "start": "2611440",
    "end": "2617440"
  },
  {
    "text": "and the problem is when you tend to build systems where you are splitting the busy work in the middle rather than",
    "start": "2617440",
    "end": "2622560"
  },
  {
    "text": "thinking about where is the outbox moment where is the moment when i've done my work and handed it over if i am",
    "start": "2622560",
    "end": "2628720"
  },
  {
    "text": "in processing i would generally tend to be doing one or two things look up to data that i've received",
    "start": "2628720",
    "end": "2635440"
  },
  {
    "text": "asynchronously and having some catalog form to help me do my work or making a synchronous request because",
    "start": "2635440",
    "end": "2642319"
  },
  {
    "text": "i have to talk to the bank to validate your payment details etc there is no way around that synchronous problem at that",
    "start": "2642319",
    "end": "2648000"
  },
  {
    "text": "point right so let me show you a couple of techniques",
    "start": "2648000",
    "end": "2653440"
  },
  {
    "text": "that you may all be already be aware of and how you use them as models so value stream mapping is very useful because",
    "start": "2653440",
    "end": "2659040"
  },
  {
    "text": "value stream mapping is designed to really work in an asynchronous fashion so i'm not it's not a session about",
    "start": "2659040",
    "end": "2665520"
  },
  {
    "text": "value stream mapping but i will give you a little bit of an idea of how it works",
    "start": "2665520",
    "end": "2670880"
  },
  {
    "text": "so the first thing you do basically is you decide what am i going to model",
    "start": "2672000",
    "end": "2677680"
  },
  {
    "text": "and generally it's one of two things it's either a journey for a customer uh saying i want to buy some food or",
    "start": "2677680",
    "end": "2684640"
  },
  {
    "text": "it's what which is called basically uh operational or it's environmental which basically says something that i need to",
    "start": "2684640",
    "end": "2689920"
  },
  {
    "text": "do to support my ability to service customers um so for example",
    "start": "2689920",
    "end": "2695760"
  },
  {
    "text": "probably many of you are staying at hotels and maybe like if you're staying at a hotel checking at your",
    "start": "2695760",
    "end": "2701280"
  },
  {
    "text": "uh effectively hotel is essentially a process right but there are operational things to",
    "start": "2701280",
    "end": "2707280"
  },
  {
    "text": "support the check-in flow which ends actually when you check out like um figure out how much money ian has spent",
    "start": "2707280",
    "end": "2713680"
  },
  {
    "text": "in the minibar right you know ian got drunk and he ate the toblerone bar and needs to go on his bill",
    "start": "2713680",
    "end": "2718960"
  },
  {
    "text": "okay so kick off we decide what are we going to model",
    "start": "2718960",
    "end": "2724960"
  },
  {
    "text": "then what you do is offensively you walk the process and in fact when value stream mapping has they have this idea",
    "start": "2725280",
    "end": "2730720"
  },
  {
    "text": "called go to the gambler which is basically walk the actual floor of the process physically but you quite we we",
    "start": "2730720",
    "end": "2736240"
  },
  {
    "text": "quite often can't do that in the software but the idea effectively is you walk through and what you want to do is",
    "start": "2736240",
    "end": "2741680"
  },
  {
    "text": "look for what we call the handovers so you want to look for the point at which somebody says i do this",
    "start": "2741680",
    "end": "2748480"
  },
  {
    "text": "to this piece of info this information packet comes in essentially this bit of data comes in i process it in some way",
    "start": "2748480",
    "end": "2755359"
  },
  {
    "text": "and then there's a result which is this right those are handovers and those are",
    "start": "2755359",
    "end": "2760400"
  },
  {
    "text": "actually the points where a synchronicity is likely to be possible right and you divide up your value stream",
    "start": "2760400",
    "end": "2766560"
  },
  {
    "text": "probably in summary of the order of five to 15 steps that have handovers",
    "start": "2766560",
    "end": "2773078"
  },
  {
    "text": "and then essentially you just get a whiteboard a big glass wall effectively you get post-it notes",
    "start": "2777920",
    "end": "2784400"
  },
  {
    "text": "and you use the post put the post-it notes in a line and use them to represent the individual steps in the process",
    "start": "2784400",
    "end": "2789680"
  },
  {
    "text": "and that gives you effectively the flow here are the individual steps here the individual handoffs",
    "start": "2789680",
    "end": "2795520"
  },
  {
    "text": "so here you can see we're looking at the sales inquiry for the for restaurant owner restaurant",
    "start": "2795520",
    "end": "2800960"
  },
  {
    "text": "owner effectively says okay we think there's an onboarding inquiry within the onboarding inquiry results",
    "start": "2800960",
    "end": "2807440"
  },
  {
    "text": "basically in a handover of we need to basically get this restaurant signed up that goes to our team that basically",
    "start": "2807440",
    "end": "2813200"
  },
  {
    "text": "manage the menu and they will hand off when they've got the menu details to the team that publishes the catalogue right",
    "start": "2813200",
    "end": "2818720"
  },
  {
    "text": "so that gives us a flow we then do a second walk and the second war tends to start at the other end and",
    "start": "2818720",
    "end": "2825359"
  },
  {
    "text": "go backwards to say how do we get here so in our case a second walk would be we have a catalog",
    "start": "2825359",
    "end": "2831760"
  },
  {
    "text": "that has the details of our restaurants in it how did we get the details of the",
    "start": "2831760",
    "end": "2836880"
  },
  {
    "text": "restaurants in oh okay well we have to have a prior step where essentially",
    "start": "2836880",
    "end": "2843040"
  },
  {
    "text": "the the catalogue was produced well how did they get the menu details well there's a prior step where they asked",
    "start": "2843040",
    "end": "2848559"
  },
  {
    "text": "the restaurant okay how do we know to ask the restaurant or there's a prior step where a salesman sold them",
    "start": "2848559",
    "end": "2853599"
  },
  {
    "text": "basically the idea of working for just paper takeaway and then generally in value stream",
    "start": "2853599",
    "end": "2858960"
  },
  {
    "text": "mapping you add details like lead time process time percentage of completions and you get one of these",
    "start": "2858960",
    "end": "2865520"
  },
  {
    "text": "and i find valuation map is a really uh quite useful way of doing it because forcing people to think about these",
    "start": "2865599",
    "end": "2871760"
  },
  {
    "text": "handovers gives you these individual process steps which then tend to be useful to think",
    "start": "2871760",
    "end": "2877280"
  },
  {
    "text": "about hey these things may well have asynchronous handoffs between them",
    "start": "2877280",
    "end": "2883440"
  },
  {
    "text": "so event storming is kind of the poster child in this area from alberto brandolini and that ddd folks in the",
    "start": "2885680",
    "end": "2891040"
  },
  {
    "text": "audience probably have met event storming in the past again this is not even stormy teaching session but we'll run through it and highlight the level",
    "start": "2891040",
    "end": "2897440"
  },
  {
    "text": "details that you can understand and work with it but one of the problems i often find",
    "start": "2897440",
    "end": "2903200"
  },
  {
    "text": "when i do an event storming session is people start to worry about what we mean by event",
    "start": "2903200",
    "end": "2909200"
  },
  {
    "text": "generally when you do eventually we tend to have a mixed audience so some tech people but also the product people even",
    "start": "2909200",
    "end": "2914480"
  },
  {
    "text": "the delivery people on the team an event means a different thing to all of them right so devs immediately start",
    "start": "2914480",
    "end": "2920720"
  },
  {
    "text": "thinking about when we say event of something i'm sending to kafka or to azure service bus or whatever sns right",
    "start": "2920720",
    "end": "2929040"
  },
  {
    "text": "so they start thinking technically the product team have no idea what you mean by event that's generally a party",
    "start": "2929040",
    "end": "2935200"
  },
  {
    "text": "they go to and delivery basically essentially are a bit nonplussed and trying to negotiate",
    "start": "2935200",
    "end": "2940400"
  },
  {
    "text": "between product and tech other meaning of event right and it's very unclear event storming about what is an event",
    "start": "2940400",
    "end": "2947200"
  },
  {
    "text": "okay i tend to think of events what i tend to tend to get people to do in a mixed",
    "start": "2947200",
    "end": "2952480"
  },
  {
    "text": "audience is say it's something you are shoving into your outbox right",
    "start": "2952480",
    "end": "2957680"
  },
  {
    "text": "you've done some work and you generate i say think about paper-based flow when we're doing about stormy rather than",
    "start": "2957680",
    "end": "2963520"
  },
  {
    "text": "thinking about computer systems because they all think about existing systems they have i see when you're thinking about event storming let's imagine we're",
    "start": "2963520",
    "end": "2970480"
  },
  {
    "text": "modeling this as bits of paper right paper based flow and that tends i find to make it much easier for them and you",
    "start": "2970480",
    "end": "2976800"
  },
  {
    "text": "say what is the thing that i'm sticking into my outbox right so what is this information packet and flow based",
    "start": "2976800",
    "end": "2982960"
  },
  {
    "text": "programming terms what is the data that i am i i get as a result of a transformation events tends to be a bit",
    "start": "2982960",
    "end": "2990160"
  },
  {
    "text": "too technical as a term",
    "start": "2990160",
    "end": "2993200"
  },
  {
    "text": "so with event stormy",
    "start": "2997760",
    "end": "3000720"
  },
  {
    "text": "our goal is to essentially look at everything to the lens of events",
    "start": "3003520",
    "end": "3009280"
  },
  {
    "text": "okay so once you've then identified the gaps between events represent processes that",
    "start": "3009599",
    "end": "3014960"
  },
  {
    "text": "must transform one event into another or aggregates um i'll talk about aggregates and process in a second and",
    "start": "3014960",
    "end": "3020880"
  },
  {
    "text": "come on to initiate flows in other words basically something has to kick this off so basically has to be an initial theme which says hey i'm going to tell you to",
    "start": "3020880",
    "end": "3028400"
  },
  {
    "text": "transform basically this information packet into another one okay so traditionally this is kind of the model",
    "start": "3028400",
    "end": "3033520"
  },
  {
    "text": "you would use you have an event one color post-it note you have an aggregate and aggregate basically is",
    "start": "3033520",
    "end": "3039760"
  },
  {
    "text": "some statement behavior view basically which is essentially [Music]",
    "start": "3039760",
    "end": "3045280"
  },
  {
    "text": "allows a customer to make decisions by effectively having a lookup data so think of that as our catalog data",
    "start": "3045280",
    "end": "3051359"
  },
  {
    "text": "and commands which initiate flow now when i tend to do events from one of the things i've switched away from is using aggregates to just use the idea of a",
    "start": "3051359",
    "end": "3057839"
  },
  {
    "text": "process why because when you look at this idea the problem is that thinking about aggregates thinking about state",
    "start": "3057839",
    "end": "3065440"
  },
  {
    "text": "it doesn't actually help us to think really about asynchronicity between systems and you quite often end up with people modeling um",
    "start": "3065440",
    "end": "3072319"
  },
  {
    "text": "entity entity services i tend to say people just think about a process it's amorphous it's some kind of",
    "start": "3072319",
    "end": "3079119"
  },
  {
    "text": "thing some kind of behavior that is transforming commands into events right",
    "start": "3079119",
    "end": "3084240"
  },
  {
    "text": "or events into other events that tends to i find it much easier i think aggregate is a bit of a",
    "start": "3084240",
    "end": "3091200"
  },
  {
    "text": "it's a ddd-ism that doesn't actually help very much okay",
    "start": "3091200",
    "end": "3096880"
  },
  {
    "text": "and so uh here the things that go out boxes well there's",
    "start": "3096880",
    "end": "3102559"
  },
  {
    "text": "this idea restaurant has signed up uh which is essentially saying i want to get details",
    "start": "3102559",
    "end": "3108000"
  },
  {
    "text": "there's this idea basically effectively that i have some menu details that i've received from the restaurant and this is",
    "start": "3108000",
    "end": "3113760"
  },
  {
    "text": "idea that i've got this new restaurant catalog those who would seem to be the key outbox elements that get raised",
    "start": "3113760",
    "end": "3120960"
  },
  {
    "text": "then effectively i just need to figure out as a process that transforms these things there's one",
    "start": "3120960",
    "end": "3126079"
  },
  {
    "text": "that manages catalogue ones obtains restaurant details and one agrees the contract which results in those which is",
    "start": "3126079",
    "end": "3132160"
  },
  {
    "text": "all kicked off by this commander at my restaurant and i find this is a much easier way of doing event storming um",
    "start": "3132160",
    "end": "3138559"
  },
  {
    "text": "because it gets the same result but i think it's a bit clearer for the the non-techies in the audience uh and",
    "start": "3138559",
    "end": "3143920"
  },
  {
    "text": "putting the non-ddd people in the audience so again here's another model restaurant catalog updated order taken order raised",
    "start": "3143920",
    "end": "3151119"
  },
  {
    "text": "we can simply transform that like this with the green restaurant catalog representing where we're doing lookup",
    "start": "3151119",
    "end": "3156319"
  },
  {
    "text": "data so it's a read-only copy of our data which we can use effectively to do lookups with",
    "start": "3156319",
    "end": "3163119"
  },
  {
    "text": "similarly placing an order and similarly order confirmation",
    "start": "3164559",
    "end": "3171599"
  },
  {
    "text": "there's another technique to be aware of uh called event modelling by adam demetric it's very similar to event",
    "start": "3173119",
    "end": "3178559"
  },
  {
    "text": "storming but it's much more detailed and what it focuses on is it says i want",
    "start": "3178559",
    "end": "3183680"
  },
  {
    "text": "to actually know what is the data in those information packets because if i know what the information",
    "start": "3183680",
    "end": "3189920"
  },
  {
    "text": "is in the information packet i can tell you did the customer enter that did i have to get it from another service and",
    "start": "3189920",
    "end": "3195119"
  },
  {
    "text": "it lets you effectively trace data requirements it's expensive because it takes a long",
    "start": "3195119",
    "end": "3200480"
  },
  {
    "text": "time to do but it can be useful if you're struggling a bit",
    "start": "3200480",
    "end": "3206160"
  },
  {
    "text": "okay so what does that mean in a kind of",
    "start": "3207040",
    "end": "3212480"
  },
  {
    "text": "world of micro services how does this perspective change how we might think about it",
    "start": "3212480",
    "end": "3220480"
  },
  {
    "text": "so i'd argue that essentially too many people are still building things which",
    "start": "3220559",
    "end": "3225760"
  },
  {
    "text": "are effectively web services era services and what they do",
    "start": "3225760",
    "end": "3231760"
  },
  {
    "text": "is essentially they say i've got a service which is modeled in an oo fashion",
    "start": "3231760",
    "end": "3237920"
  },
  {
    "text": "it has state and it has behavior applied to that state all in the one service",
    "start": "3237920",
    "end": "3244000"
  },
  {
    "text": "and you call me to effectively apply transformations to my state and",
    "start": "3244000",
    "end": "3250000"
  },
  {
    "text": "the problem we tend to get is two-fold one is they tend to work better synchronously and two that the key",
    "start": "3250000",
    "end": "3256960"
  },
  {
    "text": "workflow logic tends to move out basically of here to some orchestrating component",
    "start": "3256960",
    "end": "3263599"
  },
  {
    "text": "and i would say what we need to think about much more as services that look like this",
    "start": "3263599",
    "end": "3270000"
  },
  {
    "text": "in the microservices area where effectively we see the service as a process that's doing transformation",
    "start": "3270000",
    "end": "3276880"
  },
  {
    "text": "on information packets that are flowing through our system right and we should distinguish our",
    "start": "3276880",
    "end": "3282160"
  },
  {
    "text": "universe between these things that flow which effectively actually really sense the heart of our",
    "start": "3282160",
    "end": "3287520"
  },
  {
    "text": "program and these bits of hustling we have to do to do that transformation",
    "start": "3287520",
    "end": "3292960"
  },
  {
    "text": "and that will help you build asynchronous systems all right",
    "start": "3292960",
    "end": "3300079"
  },
  {
    "text": "i think i'm done i actually have about five minutes for questions which is a bit unusual or you can all be so tired",
    "start": "3300240",
    "end": "3305599"
  },
  {
    "text": "and lunch lunch uh sleepy that you want to go away does anyone have a question they want to ask",
    "start": "3305599",
    "end": "3312960"
  },
  {
    "text": "oh there's a question okay tell me the question i'll repeat it for the for the mic",
    "start": "3313440",
    "end": "3319720"
  },
  {
    "text": "so you are basically flow-based programming programs there are some there's some there are some flow-based",
    "start": "3325280",
    "end": "3330400"
  },
  {
    "text": "programming uh things out there i can't remember what there's a javascript one that's quite um",
    "start": "3330400",
    "end": "3335920"
  },
  {
    "text": "famous the fluid based programming community thinks they're not quite flow-based programming they're a little bit different they tend to be associated",
    "start": "3335920",
    "end": "3342000"
  },
  {
    "text": "quite a lot with the low code movement i am",
    "start": "3342000",
    "end": "3347680"
  },
  {
    "text": "i think it's interesting uh my reach into flow-based programming was far more looking at the reactive",
    "start": "3347680",
    "end": "3354000"
  },
  {
    "text": "architecture kind of style ideas behind that of saying we ought to focus really on",
    "start": "3354000",
    "end": "3360000"
  },
  {
    "text": "the separation of state and behavior when we think about modeling architecture at a bigger level",
    "start": "3360000",
    "end": "3366000"
  },
  {
    "text": "um i'm less less worried about um modern attempts to use flow-based programming",
    "start": "3366000",
    "end": "3371520"
  },
  {
    "text": "to produce um an execute coding execution environment in the small inside the service",
    "start": "3371520",
    "end": "3377760"
  },
  {
    "text": "um but they are interesting um but yeah i think the fluids programming community has some recent comments up about why",
    "start": "3377760",
    "end": "3383920"
  },
  {
    "text": "they don't why they think they're uh they're not quite actually flow based programming even though they came they claimed to be",
    "start": "3383920",
    "end": "3391838"
  },
  {
    "text": "good question",
    "start": "3392400",
    "end": "3394960"
  },
  {
    "text": "manifestation okay that's a really good question all right so sergeant psychopaths",
    "start": "3398000",
    "end": "3404240"
  },
  {
    "text": "don't really know uh so the idea was that people realize that you can't do",
    "start": "3404240",
    "end": "3409280"
  },
  {
    "text": "transactions that span multiple um microservices very easily because there's no distributed",
    "start": "3409280",
    "end": "3415280"
  },
  {
    "text": "transaction coordinator doesn't scale very well so the idea was really to produce a state machine which would say",
    "start": "3415280",
    "end": "3421119"
  },
  {
    "text": "i understand the workflow and what i can do is control each of the",
    "start": "3421119",
    "end": "3426240"
  },
  {
    "text": "steps in the workflow by saying do this then do this then do this and control error flows",
    "start": "3426240",
    "end": "3431440"
  },
  {
    "text": "that's what we tend to call basically orchestration because there's basically a conductor the other alternative is",
    "start": "3431440",
    "end": "3436799"
  },
  {
    "text": "what we call choreography and choreography says we don't actually need a conductor we can just essentially",
    "start": "3436799",
    "end": "3442839"
  },
  {
    "text": "pre-arrange all the flows by just simply connecting inboxes to outboxes and having error flows and simply knowing",
    "start": "3442839",
    "end": "3449520"
  },
  {
    "text": "the whole thing goes through i tend to prefer choreography to orchestration",
    "start": "3449520",
    "end": "3454799"
  },
  {
    "text": "because the trouble with orchestration is it creates this bottleneck single point of failure that contains all my",
    "start": "3454799",
    "end": "3460640"
  },
  {
    "text": "workflows but in some cases it can be useful to do that kind of orchestration such as when",
    "start": "3460640",
    "end": "3466799"
  },
  {
    "text": "i need to think about the reservation pan where i want i've got you've got 10 minutes to fulfill this and that kind of thing etc right but i think prefer",
    "start": "3466799",
    "end": "3472799"
  },
  {
    "text": "choreography where effectively we say hey i can just follow the roots of him of of",
    "start": "3472799",
    "end": "3478799"
  },
  {
    "text": "uh connections between in and out or error flows and that will give me basically my pattern of flow around the",
    "start": "3478799",
    "end": "3484400"
  },
  {
    "text": "whole system i don't need an external manager of my pipeline that's the same problem we have in part line",
    "start": "3484400",
    "end": "3489440"
  },
  {
    "text": "architecture that's right pipe supporters architectures have this have this conflict between does someone control the flow through the pipeline or",
    "start": "3489440",
    "end": "3495839"
  },
  {
    "text": "is it just basically flying from component to component i tend to prefer the latter because it doesn't require an",
    "start": "3495839",
    "end": "3501440"
  },
  {
    "text": "orchestrator but both are useful techniques",
    "start": "3501440",
    "end": "3505519"
  },
  {
    "text": "anybody else all right then i think we're probably",
    "start": "3507040",
    "end": "3512960"
  },
  {
    "text": "done thank you very much for coming listening and i hope it wasn't too threatening after lunch",
    "start": "3512960",
    "end": "3519680"
  },
  {
    "text": "okay [Applause]",
    "start": "3520880",
    "end": "3527599"
  },
  {
    "text": "please remember it's customer to put the green ticket in the box outside that's how it works",
    "start": "3527599",
    "end": "3533839"
  }
]