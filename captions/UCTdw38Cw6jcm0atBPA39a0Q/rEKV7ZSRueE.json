[
  {
    "text": "welcome everyone um i hope you will enjoy this today's session about rest i know that rest is",
    "start": "6560",
    "end": "13519"
  },
  {
    "text": "uh let's say a mainstream subject and everyone is implementing rest apis but",
    "start": "13519",
    "end": "20720"
  },
  {
    "text": "um i'm gonna ask you now and i'm gonna wait for the answer at the end of the talk who here ever did a rest apis",
    "start": "20720",
    "end": "30160"
  },
  {
    "text": "and i'm gonna just try to ask you at the end of the talk uh if you still did rest apis",
    "start": "30160",
    "end": "38079"
  },
  {
    "text": "okay my name is irinas corto i'm from romania i'm design lead because that's the way",
    "start": "38079",
    "end": "43920"
  },
  {
    "text": "the company calls the the position i'm actually a software architect at ndava and i'm also a dotnet group",
    "start": "43920",
    "end": "51760"
  },
  {
    "text": "community lead which means that i'm taking care of everything dotnet related uh",
    "start": "51760",
    "end": "58239"
  },
  {
    "text": "inside the company across the world i'm also a microsoft mvp for developer technology and i'm",
    "start": "58239",
    "end": "64960"
  },
  {
    "text": "also passionate about everything.net so if i were to talk about something",
    "start": "64960",
    "end": "70640"
  },
  {
    "text": "that topic would be dosnet or something related to it okay so in today's agenda we have a few",
    "start": "70640",
    "end": "77200"
  },
  {
    "text": "things a few we're gonna deep dive and a few of them we're gonna just touch a bit well we're gonna talk about",
    "start": "77200",
    "end": "84880"
  },
  {
    "text": "rest and we cannot talk about rest without talking http are we gonna talk about eight ois just a",
    "start": "84880",
    "end": "91759"
  },
  {
    "text": "bit and about versioning so what is rest representational state",
    "start": "91759",
    "end": "98079"
  },
  {
    "text": "transfer it is that concept that i remember when it was taught to me in faculty a lot of",
    "start": "98079",
    "end": "105360"
  },
  {
    "text": "years ago it was so difficult um and i consider it difficult until i i",
    "start": "105360",
    "end": "111439"
  },
  {
    "text": "learned that the whole uh thing around rest is actually http based",
    "start": "111439",
    "end": "119759"
  },
  {
    "text": "rest is used everywhere but when you're actually looking at the code that's written by a lot of developers no",
    "start": "119759",
    "end": "126000"
  },
  {
    "text": "matter the company is not implemented everyone is saying that is doing",
    "start": "126000",
    "end": "131280"
  },
  {
    "text": "rest apis but when you look really look at the code and the principles",
    "start": "131280",
    "end": "137440"
  },
  {
    "text": "those apis are kind of rest ish okay just being maybe just jason over",
    "start": "137440",
    "end": "144319"
  },
  {
    "text": "http or something like that but some of them have nothing in common with rest",
    "start": "144319",
    "end": "150400"
  },
  {
    "text": "uh when i started when i moved to towards architecture i started to have to make audits on",
    "start": "150400",
    "end": "156000"
  },
  {
    "text": "different projects and to work with a lot of teams and inside though those teams i've noticed a lot of",
    "start": "156000",
    "end": "163680"
  },
  {
    "text": "guidelines that are in rest that are not used or followed or nobody pays attention",
    "start": "163680",
    "end": "172160"
  },
  {
    "text": "so rest has a few constraints but these constraints shouldn't be",
    "start": "172160",
    "end": "177920"
  },
  {
    "text": "called like that just because if those were constrained everyone would follow them but let's",
    "start": "177920",
    "end": "184159"
  },
  {
    "text": "call them guidelines right there is a guide on how to do things in order to achieve something",
    "start": "184159",
    "end": "190800"
  },
  {
    "text": "so first of all we cannot talk about rest about without talking about client server",
    "start": "190800",
    "end": "196159"
  },
  {
    "text": "we i don't know if you worked in dot net world but i also did asp applications all the",
    "start": "196159",
    "end": "202800"
  },
  {
    "text": "asp and the mvc and web forms and the part a few years ago was that",
    "start": "202800",
    "end": "210239"
  },
  {
    "text": "everything was self-contained it was a big monolith where you rendered the from the server side uh",
    "start": "210239",
    "end": "215360"
  },
  {
    "text": "the html and you serve that html to the client to the browser but now the paradigm",
    "start": "215360",
    "end": "222080"
  },
  {
    "text": "is is changing it's mainstream right now to have a server that is an independent entity",
    "start": "222080",
    "end": "227360"
  },
  {
    "text": "and to have a client that is written in whatever js that consumes that api that",
    "start": "227360",
    "end": "234000"
  },
  {
    "text": "data that comes from the server so that's one of the constraints and i",
    "start": "234000",
    "end": "239200"
  },
  {
    "text": "think here we all had this constraint like checked right so",
    "start": "239200",
    "end": "245040"
  },
  {
    "text": "the second constraint was it's about the state as http your rest api",
    "start": "245040",
    "end": "251599"
  },
  {
    "text": "should be stateless should maintain absolutely nothing related to the previous requests",
    "start": "251599",
    "end": "257680"
  },
  {
    "text": "or the requests that will fall being stateless means that you should maintain no state",
    "start": "257680",
    "end": "263520"
  },
  {
    "text": "and if you want to maintain a sort of state that states should be",
    "start": "263520",
    "end": "268880"
  },
  {
    "text": "self-contained in the request the next constraint",
    "start": "268880",
    "end": "274320"
  },
  {
    "text": "is caching caching is one of the most important specs of",
    "start": "274320",
    "end": "279840"
  },
  {
    "text": "web and http and you should use the cache it depends on",
    "start": "279840",
    "end": "285919"
  },
  {
    "text": "where you are on the the perspective if you are on the server or on the client but to cache things",
    "start": "285919",
    "end": "292240"
  },
  {
    "text": "is very important because it speeds up the perceived performance because you're saying hey client",
    "start": "292240",
    "end": "300000"
  },
  {
    "text": "uh take this and hold it in your browser and next time when you have this",
    "start": "300000",
    "end": "305039"
  },
  {
    "text": "just use it from from the browser don't call me back or something like that the fourth constraint is the uniform",
    "start": "305039",
    "end": "312160"
  },
  {
    "text": "interface that puts a lot of problems to the developers because naming is hard and having a uniform",
    "start": "312160",
    "end": "319360"
  },
  {
    "text": "interface for your api is even harder um layer system uh says basically that you",
    "start": "319360",
    "end": "327199"
  },
  {
    "text": "shouldn't talk with uh you shouldn't care if you're talking with a proxy or anything else as long as you receive the",
    "start": "327199",
    "end": "334479"
  },
  {
    "text": "response and that response is the expected one you shouldn't care you shouldn't care if",
    "start": "334479",
    "end": "339840"
  },
  {
    "text": "you have a proximal gateway in the middle and the sixth constraint that is not",
    "start": "339840",
    "end": "345600"
  },
  {
    "text": "used and not so important is code on demand the server has the ability of",
    "start": "345600",
    "end": "350840"
  },
  {
    "text": "sending code to the client to be executed uh",
    "start": "350840",
    "end": "356880"
  },
  {
    "text": "apparently i hope that my laptop didn't die okay so taking everything into",
    "start": "356880",
    "end": "364080"
  },
  {
    "text": "particular we're going to talk about client server says that the server is not aware of the",
    "start": "364080",
    "end": "369360"
  },
  {
    "text": "client and the server shouldn't care who is the client the server should look at the request",
    "start": "369360",
    "end": "375360"
  },
  {
    "text": "interpret it and respond with what's expected in that what it does the server is to do data",
    "start": "375360",
    "end": "382240"
  },
  {
    "text": "transformation under the hood um and the client when receives the response it will",
    "start": "382240",
    "end": "389280"
  },
  {
    "text": "simply use that resource and that's it so how it looks like is the simple and the most basic",
    "start": "389280",
    "end": "396560"
  },
  {
    "text": "architecture out there client server okay",
    "start": "396560",
    "end": "402000"
  },
  {
    "text": "so being stateless it's a bit slow i'm pressing a lot of",
    "start": "402000",
    "end": "408240"
  },
  {
    "text": "buttons but it doesn't answer stateless",
    "start": "408240",
    "end": "413520"
  },
  {
    "text": "back in the days we used to have a lot of mechanisms that allowed us to maintain states we if",
    "start": "413520",
    "end": "420080"
  },
  {
    "text": "you work with web forms you have hidden fields in the page or even in mvc you store data in the browser in the",
    "start": "420080",
    "end": "427680"
  },
  {
    "text": "page and hidden fields in order to pass them back and forth towards the the server and back you had cookies you",
    "start": "427680",
    "end": "434800"
  },
  {
    "text": "had sessions long live sessions and everything and many other mechanisms but now if you",
    "start": "434800",
    "end": "442000"
  },
  {
    "text": "are talking about rest this mechanism mechanisms you should forget about those it's like",
    "start": "442000",
    "end": "450000"
  },
  {
    "text": "these are never there so next part the caching the server is the",
    "start": "450000",
    "end": "458319"
  },
  {
    "text": "one that controls what resource must be marked as cached as cash cash ball and for how long",
    "start": "458319",
    "end": "468000"
  },
  {
    "text": "how it's done is done to headers the usage of the correct headers",
    "start": "468400",
    "end": "473520"
  },
  {
    "text": "because as an effect it may increase the perceived performance and as a consequence it might save you",
    "start": "473520",
    "end": "481360"
  },
  {
    "text": "database round trips especially if you have data that doesn't change very often or you have or you identify patterns in",
    "start": "481360",
    "end": "488720"
  },
  {
    "text": "your app that can save you a few database round trips",
    "start": "488720",
    "end": "493759"
  },
  {
    "text": "it's very important because not only saves you database round trips it saves you a network uh data",
    "start": "493759",
    "end": "500000"
  },
  {
    "text": "transportation and hence the the speed up that the client perceives",
    "start": "500000",
    "end": "506960"
  },
  {
    "text": "okay so i already mentioned is run to correct usage of headers okay the layers system says that the",
    "start": "506960",
    "end": "513680"
  },
  {
    "text": "client starts with an intermediate it only receives the resource and it doesn't matter",
    "start": "513680",
    "end": "519279"
  },
  {
    "text": "what's in the middle if it is load balancer a proxy or whatever gateway okay",
    "start": "519279",
    "end": "527200"
  },
  {
    "text": "the fourth and most important spec or constraint is that",
    "start": "527200",
    "end": "534000"
  },
  {
    "text": "having a uniform resource mean means that you treat everything like a resource no matter what's the",
    "start": "534000",
    "end": "539600"
  },
  {
    "text": "business domain the business domain becomes a resources you work with resources",
    "start": "539600",
    "end": "545760"
  },
  {
    "text": "you're not working with method calls or what else wrestlers okay everything is wrestlers",
    "start": "545760",
    "end": "552320"
  },
  {
    "text": "based what is the resource anything that can be can have a name so more than that",
    "start": "552320",
    "end": "560560"
  },
  {
    "text": "everything that can have a name should also have an url should be also addressable uh",
    "start": "560560",
    "end": "568560"
  },
  {
    "text": "and when you're working with different types of data you're working with representations of",
    "start": "568560",
    "end": "574560"
  },
  {
    "text": "resources you shouldn't uh send to the client uh the actual table that you have",
    "start": "574560",
    "end": "580399"
  },
  {
    "text": "in the database you should transform those you should extract everything that is actually needed in that client for that",
    "start": "580399",
    "end": "587920"
  },
  {
    "text": "client and send the response you shouldn't pick everything and shove it in the",
    "start": "587920",
    "end": "594000"
  },
  {
    "text": "response and voila that's the response that the client receives you transform data so this uniform",
    "start": "594000",
    "end": "601760"
  },
  {
    "text": "interface uh has a few subconstraints that said that",
    "start": "601760",
    "end": "607440"
  },
  {
    "text": "in order to put your hand on those resources you should identify them in a unique matter way",
    "start": "607440",
    "end": "615279"
  },
  {
    "text": "and that representation of wrestlers the resources should also be",
    "start": "615279",
    "end": "621600"
  },
  {
    "text": "self-descriptive and in a uniform resource approach you should also use hypermedia",
    "start": "621600",
    "end": "629200"
  },
  {
    "text": "as the application state which we must admit we kind of never",
    "start": "629200",
    "end": "634320"
  },
  {
    "text": "implement in our rest apis we ignore this and we're motivating the ignoring part uh just because we",
    "start": "634320",
    "end": "641680"
  },
  {
    "text": "think it adds overhead or the lack of tooling",
    "start": "641680",
    "end": "646959"
  },
  {
    "text": "at least in.net world uh is to blame if we would have a cool library that",
    "start": "646959",
    "end": "652880"
  },
  {
    "text": "would aid us in in implementing the aos it would be easier a lot of us i think",
    "start": "652880",
    "end": "659279"
  },
  {
    "text": "would go to and implement this but to do this by hand it's not so cool because we're always moving on",
    "start": "659279",
    "end": "666480"
  },
  {
    "text": "and we're always in a rush to implement functionality for our customers and for the products we're",
    "start": "666480",
    "end": "672160"
  },
  {
    "text": "working with but let's have a look at these how do we identify resources",
    "start": "672160",
    "end": "679680"
  },
  {
    "text": "because uh the addressability to a resource and the fact that it",
    "start": "679680",
    "end": "685760"
  },
  {
    "text": "shouldn't correspond to a database table and it can be a subset or a transform entity it's hard",
    "start": "685760",
    "end": "692240"
  },
  {
    "text": "i mean you have sometimes a lot of uh objects inside your domain that you",
    "start": "692240",
    "end": "698320"
  },
  {
    "text": "cannot put a name on where if you put a name on you you might find that",
    "start": "698320",
    "end": "703920"
  },
  {
    "text": "well maybe the naming it's so bad that nobody inside your team will understand where",
    "start": "703920",
    "end": "709440"
  },
  {
    "text": "the business guys or or girls in your team won't be able to tell",
    "start": "709440",
    "end": "714639"
  },
  {
    "text": "what's that resource you're referring to and everyone should have a common common name so let's have a look at this",
    "start": "714639",
    "end": "721519"
  },
  {
    "text": "child child this example um",
    "start": "721519",
    "end": "726639"
  },
  {
    "text": "i'm pressing the next for the slide but it doesn't show up so i apologize if a lot of things will show up at once so",
    "start": "726639",
    "end": "734320"
  },
  {
    "text": "how would you implement something an api to represent everything we have in here",
    "start": "734320",
    "end": "740959"
  },
  {
    "text": "domain objects looking that we have sheeps dogs cats we have something that is food",
    "start": "740959",
    "end": "747279"
  },
  {
    "text": "related we have farm animals we have pets",
    "start": "747279",
    "end": "752399"
  },
  {
    "text": "uh if you were to put everything of the same umbrella inside an api uh it would be very hard",
    "start": "752399",
    "end": "759920"
  },
  {
    "text": "and if you think that these are resources these resources should be named in a very intuitive manner but let's",
    "start": "759920",
    "end": "766800"
  },
  {
    "text": "take an example uh if we were to look at a specific",
    "start": "766800",
    "end": "772560"
  },
  {
    "text": "uh thing a cat that is also black an operation that might develop",
    "start": "772560",
    "end": "779279"
  },
  {
    "text": "valid right now might be something like to get the cat location or",
    "start": "779279",
    "end": "785600"
  },
  {
    "text": "another one can be something like the ability to add the new cat",
    "start": "785600",
    "end": "790639"
  },
  {
    "text": "or maybe to feed the cat or to get all cats or get all their cats and get their",
    "start": "790639",
    "end": "797279"
  },
  {
    "text": "hunger level and maybe you want to find out who are the owners but if you look at all these endpoints",
    "start": "797279",
    "end": "805440"
  },
  {
    "text": "these all endpoints have either a verb inside the the name and they are very",
    "start": "805440",
    "end": "812079"
  },
  {
    "text": "different and this is very bad if you ever did this i think you also know that this is",
    "start": "812079",
    "end": "818720"
  },
  {
    "text": "bad uh it's hard to remember and it's very",
    "start": "818720",
    "end": "824000"
  },
  {
    "text": "soapish if you work with soap before uh you remember that that wisdom",
    "start": "824000",
    "end": "830880"
  },
  {
    "text": "part was ugly and it gave you a lot of operations and this kind of endpoint namings",
    "start": "830880",
    "end": "839199"
  },
  {
    "text": "are not cool and are not rest okay so how do you manipulate resources to",
    "start": "839199",
    "end": "845920"
  },
  {
    "text": "representation because the client shouldn't interact uh directly with the domain objects it",
    "start": "845920",
    "end": "853680"
  },
  {
    "text": "will send representations of the resources to be updated for example and how does it do that well",
    "start": "853680",
    "end": "862079"
  },
  {
    "text": "in rest everything should be self-descriptive and being self-descriptive means that",
    "start": "862079",
    "end": "868399"
  },
  {
    "text": "everything that is going over http either a request either a response",
    "start": "868399",
    "end": "874320"
  },
  {
    "text": "should include details and meaning and also if you were for um from a multitude",
    "start": "874320",
    "end": "881199"
  },
  {
    "text": "of requests or response if you were to take one of them and you look at that",
    "start": "881199",
    "end": "886480"
  },
  {
    "text": "you should be able to tell what's in that so if it's a request should be able to tell",
    "start": "886480",
    "end": "891760"
  },
  {
    "text": "what's it's expected from the server what you should get back so that's why",
    "start": "891760",
    "end": "897199"
  },
  {
    "text": "we have headers that's why we have verbs and that's why we have custom headers right",
    "start": "897199",
    "end": "902800"
  },
  {
    "text": "so self-descriptive messages uh it's a thing that we often ignore we",
    "start": "902800",
    "end": "908800"
  },
  {
    "text": "ignore to add for example the proper verbs i also",
    "start": "908800",
    "end": "914399"
  },
  {
    "text": "did it i also uh used a post for updating a thing i remember 10 years",
    "start": "914399",
    "end": "922959"
  },
  {
    "text": "ago that's how the things were done and i also followed the patterns that were already in the team i",
    "start": "922959",
    "end": "930000"
  },
  {
    "text": "was so using post to update something maybe is not the correct way to do",
    "start": "930000",
    "end": "936639"
  },
  {
    "text": "things media types and when i say media types i'm referring to the things that are not",
    "start": "936639",
    "end": "943839"
  },
  {
    "text": "application json or application xml custom media types to help us send back",
    "start": "943839",
    "end": "951120"
  },
  {
    "text": "to the client a different representation of the resources i kind of didn't do that until a few",
    "start": "951120",
    "end": "958639"
  },
  {
    "text": "years ago we know the custom mime types and we use those and that's it heathers",
    "start": "958639",
    "end": "966880"
  },
  {
    "text": "well heathers except the common and known ones uh again it wasn't something that",
    "start": "966880",
    "end": "974079"
  },
  {
    "text": "i used to do i didn't add custom headers to pass data or pass information to the",
    "start": "974079",
    "end": "980240"
  },
  {
    "text": "server and so on to help server understand what i wanted and also the status codes",
    "start": "980240",
    "end": "986880"
  },
  {
    "text": "i remember i used just a few of them and i didn't know there are 63 of them",
    "start": "986880",
    "end": "993839"
  },
  {
    "text": "okay i must admit there are a few of them like uh i'm a teapot or something like that that",
    "start": "993839",
    "end": "1000079"
  },
  {
    "text": "i do not find the the correct uses for it but most of them are there to give meaning to the",
    "start": "1000079",
    "end": "1006880"
  },
  {
    "text": "responses so in fact and enough with this rest means leveraging the http power",
    "start": "1006880",
    "end": "1015440"
  },
  {
    "text": "rest means leveraging the underlying protocol power and we often ignore that but let's talk",
    "start": "1015440",
    "end": "1023199"
  },
  {
    "text": "about endpoints because in my experience in endpoints",
    "start": "1023199",
    "end": "1028480"
  },
  {
    "text": "when you were talking about endpoints and you see them written in a certain manner you'll",
    "start": "1028480",
    "end": "1034880"
  },
  {
    "text": "realize that behind the end it's even worse so actually in rest to represent",
    "start": "1034880",
    "end": "1043038"
  },
  {
    "text": "each resource no matter directors you will need two uh urls for each resource",
    "start": "1043039",
    "end": "1049679"
  },
  {
    "text": "and using different things you will have the create read update delete that we will meet",
    "start": "1049679",
    "end": "1057600"
  },
  {
    "text": "in inside our applications every application has a administration part but it has crud",
    "start": "1057600",
    "end": "1064000"
  },
  {
    "text": "implemented so first of all for example if we were",
    "start": "1064000",
    "end": "1069039"
  },
  {
    "text": "to have a collection speakers get all okay you can tell that the endpoint",
    "start": "1069039",
    "end": "1074559"
  },
  {
    "text": "will get all the speakers that are in the system okay versus speakers",
    "start": "1074559",
    "end": "1081039"
  },
  {
    "text": "without the ghetto which of these is more understandable okay you might",
    "start": "1081039",
    "end": "1087840"
  },
  {
    "text": "say that both of them are easy to understand but the simple one",
    "start": "1087840",
    "end": "1093120"
  },
  {
    "text": "speakers uh it's more intuitive and it's more intuitive because you'll",
    "start": "1093120",
    "end": "1099200"
  },
  {
    "text": "see that once you add the correct verb it becomes very powerful for an element you might have something",
    "start": "1099200",
    "end": "1105840"
  },
  {
    "text": "like speakers guest speaker and then you pass the id as a query parameter",
    "start": "1105840",
    "end": "1112000"
  },
  {
    "text": "how about having and respecting the convention speaker slash id okay having these two",
    "start": "1112000",
    "end": "1119440"
  },
  {
    "text": "the simple ones you can represent and use get as a verb to get the entire collection you can use",
    "start": "1119440",
    "end": "1127200"
  },
  {
    "text": "post to create a new item a new item and then for a single element you might",
    "start": "1127200",
    "end": "1133760"
  },
  {
    "text": "use get to get the specific item with the id that you specify",
    "start": "1133760",
    "end": "1139039"
  },
  {
    "text": "post to maybe create a sub item okay maybe something related to a speaker and you want to add that",
    "start": "1139039",
    "end": "1145679"
  },
  {
    "text": "you can use post and also you can use a put a patch and of course",
    "start": "1145679",
    "end": "1153120"
  },
  {
    "text": "why not a delete and i'm waiting for the d to appear",
    "start": "1153120",
    "end": "1159600"
  },
  {
    "text": "okay so everything that's it's necessary to represent something okay and it's",
    "start": "1160559",
    "end": "1166559"
  },
  {
    "text": "another thing in rest cool your eyes don't change because once you implement something",
    "start": "1166559",
    "end": "1172160"
  },
  {
    "text": "and you put it on the web it's very hard to change it in its entirety without",
    "start": "1172160",
    "end": "1179919"
  },
  {
    "text": "breaking existing consumers and we often should avoid to do that so as a guideline",
    "start": "1179919",
    "end": "1188160"
  },
  {
    "text": "when we're talking about naming the endpoints you should have concrete things",
    "start": "1188160",
    "end": "1193919"
  },
  {
    "text": "and every variation for that threshold should be in the query thing you shouldn't have different endpoints",
    "start": "1193919",
    "end": "1200240"
  },
  {
    "text": "just for example you want to get all black cats inside your system and you have the cat",
    "start": "1200240",
    "end": "1206240"
  },
  {
    "text": "endpoint you should have a totally separate endpoint think about it first of all you'll have",
    "start": "1206240",
    "end": "1213679"
  },
  {
    "text": "uh an extra endpoint that you'll need to maintain it's an extra code an entire action in your api that",
    "start": "1213679",
    "end": "1220799"
  },
  {
    "text": "you need to write and then if the business changes and you want to get all pink gaps you will have another endpoint",
    "start": "1220799",
    "end": "1228799"
  },
  {
    "text": "that you need to maintain with another extra code and us as developers we kind of want to be",
    "start": "1228799",
    "end": "1234080"
  },
  {
    "text": "productive so why not add a parameter with a color and the list of colors that you support maybe and you treat that as a filter",
    "start": "1234080",
    "end": "1242159"
  },
  {
    "text": "it's super easy to do that so if we are to talk about status codes",
    "start": "1242159",
    "end": "1248240"
  },
  {
    "text": "i want to give an example about what should the status code mean for",
    "start": "1248240",
    "end": "1254880"
  },
  {
    "text": "example if you look on the left hand side you have a response it's a postman snip and the status for",
    "start": "1254880",
    "end": "1261679"
  },
  {
    "text": "this is okay but when you send it to 100 okay",
    "start": "1261679",
    "end": "1266799"
  },
  {
    "text": "the client should expect that the actual response but look at the body of the response",
    "start": "1266799",
    "end": "1272480"
  },
  {
    "text": "it's code 401 and the message is an invalid api key please see that stuff",
    "start": "1272480",
    "end": "1280320"
  },
  {
    "text": "so well you server what do you mean my answer is",
    "start": "1280320",
    "end": "1287200"
  },
  {
    "text": "okay i mean should i get actual data to be that are usable where i have an invalid api key so 200",
    "start": "1287200",
    "end": "1295440"
  },
  {
    "text": "should mean 200 with the response body okay 201 in particular first of all",
    "start": "1295440",
    "end": "1303280"
  },
  {
    "text": "it starts with two which means that is a success status code but in particular it means",
    "start": "1303280",
    "end": "1309440"
  },
  {
    "text": "created and because it means created should be returned",
    "start": "1309440",
    "end": "1314559"
  },
  {
    "text": "as a result for a post action that ends up adding a new resource in",
    "start": "1314559",
    "end": "1320159"
  },
  {
    "text": "your database uh with also a header location",
    "start": "1320159",
    "end": "1325440"
  },
  {
    "text": "that specified hey here's the url for the new created resource 202",
    "start": "1325440",
    "end": "1332880"
  },
  {
    "text": "accepted in scenarios where you uh send something but you do not",
    "start": "1332880",
    "end": "1338159"
  },
  {
    "text": "necessarily need a response now for example you just send",
    "start": "1338159",
    "end": "1343440"
  },
  {
    "text": "something uh to enqueue something or i don't know just send something for pro like sending an email",
    "start": "1343440",
    "end": "1351600"
  },
  {
    "text": "you send the email you're not necessarily uh wants that status if it's received or",
    "start": "1351600",
    "end": "1358400"
  },
  {
    "text": "not immediately 204 no content after deleting a resource",
    "start": "1358400",
    "end": "1365760"
  },
  {
    "text": "for example 400 bad requests but this about bad request",
    "start": "1365760",
    "end": "1372480"
  },
  {
    "text": "is debitable because i've seen a lot of developers using bad requests for everything if the model",
    "start": "1372480",
    "end": "1377760"
  },
  {
    "text": "is not valid it's bad requests if the url is not correct it's bad",
    "start": "1377760",
    "end": "1383039"
  },
  {
    "text": "request if the route is not correct it's bad",
    "start": "1383039",
    "end": "1389840"
  },
  {
    "text": "405 for method not allowed so what is mean that you are using an",
    "start": "1393159",
    "end": "1399360"
  },
  {
    "text": "http method that the server doesn't allow or doesn't want to interpret",
    "start": "1399360",
    "end": "1405520"
  },
  {
    "text": "and in response this will be something that is sent back 406 should be also used if you tweak it",
    "start": "1405520",
    "end": "1414720"
  },
  {
    "text": "in at least in.net to see the automatic response",
    "start": "1414720",
    "end": "1420080"
  },
  {
    "text": "so you as a client expect expect certain format of the the response you accept",
    "start": "1420080",
    "end": "1425919"
  },
  {
    "text": "you expect maybe an xml but the server",
    "start": "1425919",
    "end": "1431039"
  },
  {
    "text": "doesn't know how to write you xml and because the server does doesn't",
    "start": "1431039",
    "end": "1436080"
  },
  {
    "text": "know it will answer with the 406. okay so uh 466 it's related to the accept",
    "start": "1436080",
    "end": "1444159"
  },
  {
    "text": "heather 409 conflict um",
    "start": "1444159",
    "end": "1449360"
  },
  {
    "text": "let's take an example that is maybe dummy uh you if you have a business rule that",
    "start": "1449360",
    "end": "1455600"
  },
  {
    "text": "doesn't allow two items with the same field",
    "start": "1455600",
    "end": "1461919"
  },
  {
    "text": "for example you have users that shouldn't have the same email address",
    "start": "1461919",
    "end": "1467520"
  },
  {
    "text": "it's not a bad request if you try to re-register for example with the same email address it's not bad request requests",
    "start": "1468080",
    "end": "1474559"
  },
  {
    "text": "okay you you have the right email a format valid format for the email you have the",
    "start": "1474559",
    "end": "1480480"
  },
  {
    "text": "username or whatever else is needed there you filled out everything",
    "start": "1480480",
    "end": "1485520"
  },
  {
    "text": "but you get back bad requests no you shouldn't get back bad requests because the request is good",
    "start": "1485520",
    "end": "1491279"
  },
  {
    "text": "but you as a business you have a rule that says that you cannot create two users with the same email",
    "start": "1491279",
    "end": "1497760"
  },
  {
    "text": "so you have a 409 conflict that conflict is due to something that is internal to your",
    "start": "1497760",
    "end": "1503440"
  },
  {
    "text": "business but to the request that the user is sending",
    "start": "1503440",
    "end": "1508960"
  },
  {
    "text": "406 15 unsupported media type this is related",
    "start": "1510279",
    "end": "1515360"
  },
  {
    "text": "to the content a content type header it's basically stating that the server doesn't know how",
    "start": "1515360",
    "end": "1521919"
  },
  {
    "text": "to read what you're sending in the body and it answers accordingly 422",
    "start": "1521919",
    "end": "1529360"
  },
  {
    "text": "unprocessable entity uh is the status quo that i use when it's a validation error and i'm",
    "start": "1529360",
    "end": "1536080"
  },
  {
    "text": "going to show you in a demo how you can tweak this to return this automatically okay um the opinions are shared here",
    "start": "1536080",
    "end": "1545520"
  },
  {
    "text": "a lot of uh folks in the industry are using bad requests again and a lot of them are using 422 to mean",
    "start": "1545520",
    "end": "1552559"
  },
  {
    "text": "unprocessable entity you're sending an entity that is not processable on the server because of the whatever",
    "start": "1552559",
    "end": "1558000"
  },
  {
    "text": "business rules you have okay uh verbs",
    "start": "1558000",
    "end": "1565120"
  },
  {
    "text": "we all know the verbs right so get post put delete",
    "start": "1565120",
    "end": "1570559"
  },
  {
    "text": "and you have a cr crud operation right but how about head and i'm going to ask you how many of you",
    "start": "1570559",
    "end": "1577120"
  },
  {
    "text": "are using head to check with and to check if something is there",
    "start": "1577120",
    "end": "1582799"
  },
  {
    "text": "you're not using it i know because i i didn't use it until recently options if you have an angular",
    "start": "1582799",
    "end": "1591039"
  },
  {
    "text": "or react client app you'll see that options is the request is made by default there",
    "start": "1591039",
    "end": "1596799"
  },
  {
    "text": "but we should also take in to get consideration options and to implement it ourselves in order to limit some",
    "start": "1596799",
    "end": "1603279"
  },
  {
    "text": "security issues there trace it's another uh verb that can be used if you have the",
    "start": "1603279",
    "end": "1610240"
  },
  {
    "text": "right uh scenario but what i want to keep in mind is that heading options are also verbs",
    "start": "1610240",
    "end": "1616240"
  },
  {
    "text": "to be used okay so how you describe errors we often when it comes to errors",
    "start": "1616240",
    "end": "1623679"
  },
  {
    "text": "inside our apis we do not have a standard format we start with an api and if you have",
    "start": "1623679",
    "end": "1629039"
  },
  {
    "text": "microservice architecture you might end up with a lot of error formats you might have an array",
    "start": "1629039",
    "end": "1635200"
  },
  {
    "text": "you might have something that is generic or just standard object but",
    "start": "1635200",
    "end": "1640559"
  },
  {
    "text": "there are things that are standardized for example there is a mime type that should be sent",
    "start": "1640559",
    "end": "1646000"
  },
  {
    "text": "back with the response and it's called application problem plus json",
    "start": "1646000",
    "end": "1652640"
  },
  {
    "text": "this is the content type of the the response and it has a specific problem so it says",
    "start": "1653679",
    "end": "1660080"
  },
  {
    "text": "that you have the time the title the detail the instance when where the issue happened",
    "start": "1660080",
    "end": "1665679"
  },
  {
    "text": "and some other things so it's up to you how you tweak this but you should use",
    "start": "1665679",
    "end": "1671120"
  },
  {
    "text": "the mime type in order to be generic and understandable for the world wide web",
    "start": "1671120",
    "end": "1677840"
  },
  {
    "text": "um application dnd api.json it's another standard format uh",
    "start": "1677840",
    "end": "1685360"
  },
  {
    "text": "that has errors as being arrays of objects and that arrays are namely errors",
    "start": "1685360",
    "end": "1692880"
  },
  {
    "text": "and inside you have objects items with source title and detail you can also tweak them",
    "start": "1692880",
    "end": "1700080"
  },
  {
    "text": "but this is the the standard one it's out of the box okay uh how you can",
    "start": "1700080",
    "end": "1706720"
  },
  {
    "text": "what package you can use in.net in order to achieve this dnd api.json is",
    "start": "1706720",
    "end": "1713640"
  },
  {
    "text": "jsonapi.netcore and you'll get this out of the box okay",
    "start": "1713640",
    "end": "1719440"
  },
  {
    "text": "cool versioning i think is one of the most",
    "start": "1720000",
    "end": "1725039"
  },
  {
    "text": "how to put this not overlooked totally ignored part in rest apis and if",
    "start": "1725039",
    "end": "1733120"
  },
  {
    "text": "i were to show you this um how many of you still have this v1",
    "start": "1733120",
    "end": "1739360"
  },
  {
    "text": "in your apis you have michael api slash api v1 and",
    "start": "1739360",
    "end": "1747360"
  },
  {
    "text": "that assault because this is default thing that we do",
    "start": "1747360",
    "end": "1754080"
  },
  {
    "text": "we start implementing a new api and we add that v1 in there",
    "start": "1754080",
    "end": "1760159"
  },
  {
    "text": "because we think that it will be worsened and we forgot forget about that we never",
    "start": "1760159",
    "end": "1766559"
  },
  {
    "text": "change it but if we ever change it that v1 uh becomes v2 and the url changes",
    "start": "1766559",
    "end": "1774159"
  },
  {
    "text": "entirely and by url changing means breaking the existing consumers and that's not a cool",
    "start": "1774159",
    "end": "1781919"
  },
  {
    "text": "thing to do because cool uris don't change so you need to think about a different",
    "start": "1781919",
    "end": "1787039"
  },
  {
    "text": "way of worsening except adding in the url path the v1 or v2 or whatever",
    "start": "1787039",
    "end": "1794720"
  },
  {
    "text": "you have in there you need to avoid the url changing by any means",
    "start": "1794720",
    "end": "1801279"
  },
  {
    "text": "so i'm gonna show you here a quote that is said by",
    "start": "1801279",
    "end": "1808880"
  },
  {
    "text": "roy fielding in 2013 on twitter that's it like this",
    "start": "1808880",
    "end": "1815360"
  },
  {
    "text": "the reason to make a real rest api is to get evolvability and a v1 is a middle finger",
    "start": "1815360",
    "end": "1822320"
  },
  {
    "text": "to our api customers indicating that in fact you are doing rpc or json over http",
    "start": "1822320",
    "end": "1829279"
  },
  {
    "text": "not actual rest okay so you add v1 in the path of the url",
    "start": "1829279",
    "end": "1835600"
  },
  {
    "text": "well you show middle finger to your customers hoping that you ever change that v1 because",
    "start": "1835600",
    "end": "1844000"
  },
  {
    "text": "from my experience i also did it and i'm to blame uh i did that okay let's version our api",
    "start": "1844000",
    "end": "1850640"
  },
  {
    "text": "the first thing that you do when you start a new project that it's a web api add the v1 change the routes v1 all cool you never",
    "start": "1850640",
    "end": "1858000"
  },
  {
    "text": "change that so what are your versioning options so first of all it's in the url",
    "start": "1858000",
    "end": "1866159"
  },
  {
    "text": "but not in the url path add it anywhere but in the path you can add it",
    "start": "1866159",
    "end": "1871840"
  },
  {
    "text": "as a pair of string or you can also add in header okay",
    "start": "1871840",
    "end": "1877440"
  },
  {
    "text": "so now for the talk let's see some code",
    "start": "1877440",
    "end": "1882960"
  },
  {
    "text": "so i have here a small api that is",
    "start": "1883200",
    "end": "1892399"
  },
  {
    "text": "trying to zoom in and i'm waiting for the zoom to show up um it won't show up so i'm gonna forget",
    "start": "1892399",
    "end": "1900480"
  },
  {
    "text": "about this so i have an api a web api project that also has uh two other projects it's",
    "start": "1900480",
    "end": "1908000"
  },
  {
    "text": "data that has repositories small repositories and it has another library with the",
    "start": "1908000",
    "end": "1914480"
  },
  {
    "text": "domain i like to split it that way for demos because i think it's easier to understand for",
    "start": "1914480",
    "end": "1919519"
  },
  {
    "text": "for junior people because in here you will have everything that it represents database",
    "start": "1919519",
    "end": "1925039"
  },
  {
    "text": "the the domain object and you can tweak them you can extend them",
    "start": "1925039",
    "end": "1932720"
  },
  {
    "text": "in the data you have the repositories",
    "start": "1932720",
    "end": "1938640"
  },
  {
    "text": "let's see if it works i clicked and i'm waiting and it's nothing else that entity",
    "start": "1938880",
    "end": "1945760"
  },
  {
    "text": "framework and sql server and it looks like this it's talk repository to represent the",
    "start": "1945760",
    "end": "1952480"
  },
  {
    "text": "conference we are at conference and i thought that this is a good example uh we have a speaker repository",
    "start": "1952480",
    "end": "1960240"
  },
  {
    "text": "that it adds it deletes and so on it's crowd basically over a speakers table and the conference api",
    "start": "1960240",
    "end": "1968159"
  },
  {
    "text": "okay and the conference apis has two of two controllers you have",
    "start": "1968159",
    "end": "1974720"
  },
  {
    "text": "you see more of them but it represents two data types speakers and what we have in here",
    "start": "1974720",
    "end": "1981200"
  },
  {
    "text": "is the traditional uh route api and the controller name",
    "start": "1981200",
    "end": "1986240"
  },
  {
    "text": "and this is very very easy you have uh for example an http get to get all the",
    "start": "1986240",
    "end": "1993519"
  },
  {
    "text": "speakers and i also have postman collection that we're going to walk through",
    "start": "1993519",
    "end": "1999279"
  },
  {
    "text": "in order to um to show you how you can tweak the net",
    "start": "1999279",
    "end": "2005600"
  },
  {
    "text": "api in order to uh be more rest than you used to",
    "start": "2005600",
    "end": "2014240"
  },
  {
    "text": "okay let's hope that my computer won't i owned one die and i'm gonna switch to",
    "start": "2014799",
    "end": "2023120"
  },
  {
    "text": "postman okay and here i have a lot i hope it's big enough to to be seen get speakers",
    "start": "2023120",
    "end": "2031039"
  },
  {
    "text": "it's very easy it's a get request you have to to press send and hopefully we'll get back some some",
    "start": "2031039",
    "end": "2038240"
  },
  {
    "text": "dummy data",
    "start": "2038240",
    "end": "2040960"
  },
  {
    "text": "couldn't send request why is that",
    "start": "2043360",
    "end": "2047840"
  },
  {
    "text": "because this is not up and running yet i don't know why",
    "start": "2050159",
    "end": "2055440"
  },
  {
    "text": "wait a bit",
    "start": "2056079",
    "end": "2061839"
  },
  {
    "text": "okay i'm gonna hoping that that will work i'm gonna show you the code okay so",
    "start": "2066879",
    "end": "2074960"
  },
  {
    "text": "uh we have in here an http get which is very easy i think uh every one of you",
    "start": "2074960",
    "end": "2080960"
  },
  {
    "text": "implement this that uh calls the repository uh method",
    "start": "2080960",
    "end": "2086000"
  },
  {
    "text": "and returns an okay with that another thing that i have in here is to",
    "start": "2086000",
    "end": "2092240"
  },
  {
    "text": "get the speaker by id okay you pass the parameter http get in",
    "start": "2092240",
    "end": "2097359"
  },
  {
    "text": "there just to have the rest uh the standard and you return different things for",
    "start": "2097359",
    "end": "2103599"
  },
  {
    "text": "example if you try to get the speaker by the id and that speaker is not found in the",
    "start": "2103599",
    "end": "2110079"
  },
  {
    "text": "repository in the database you should return not found and if it's found",
    "start": "2110079",
    "end": "2116800"
  },
  {
    "text": "you should return the actual speaker with an okay status code actually",
    "start": "2116800",
    "end": "2124320"
  },
  {
    "text": "if this is everything that you treat and you don't add this as nullable",
    "start": "2124320",
    "end": "2131359"
  },
  {
    "text": "and not check it as being uh different than no and so on if you return something like okay",
    "start": "2131359",
    "end": "2139040"
  },
  {
    "text": "of this and the speaker is not found this will become no content so it won't",
    "start": "2139040",
    "end": "2145920"
  },
  {
    "text": "return null it will return no content even though you haven't written no content there",
    "start": "2145920",
    "end": "2154880"
  },
  {
    "text": "uh another thing that i'm gonna show you is maybe you have a scenario where you send something for in queuing and",
    "start": "2154880",
    "end": "2161760"
  },
  {
    "text": "you want to see if that processing is done so when you have these kind of scenarios",
    "start": "2161760",
    "end": "2169119"
  },
  {
    "text": "maybe it's not a good decision to also send the body if you",
    "start": "2169119",
    "end": "2174400"
  },
  {
    "text": "have the idea of the entity or something that you say hey is this done",
    "start": "2174400",
    "end": "2181920"
  },
  {
    "text": "is this whatever entity by id is this done is processed then maybe you should use",
    "start": "2181920",
    "end": "2187520"
  },
  {
    "text": "an http hand and that http head should check if that entity is processed",
    "start": "2187520",
    "end": "2193760"
  },
  {
    "text": "so how you do that by using the http adverb and what it will return or should return",
    "start": "2193760",
    "end": "2200720"
  },
  {
    "text": "is no content because the head uh head verb as a",
    "start": "2200720",
    "end": "2206000"
  },
  {
    "text": "definition shouldn't return but it shouldn't have body so you either you take care of only uh",
    "start": "2206000",
    "end": "2211680"
  },
  {
    "text": "for the status code it's either okay and you have no body it's hey okay this is processed or it's no",
    "start": "2211680",
    "end": "2218640"
  },
  {
    "text": "content so i cannot find something for that entity or you can have different scenarios but with head",
    "start": "2218640",
    "end": "2225280"
  },
  {
    "text": "requests the body shouldn't be there it should it's like a question that you asked the server hey this is done",
    "start": "2225280",
    "end": "2231440"
  },
  {
    "text": "hey this is there and it's the status code the responsibility to",
    "start": "2231440",
    "end": "2236720"
  },
  {
    "text": "tell you if is there or not so let's see if uh okay that seems to be",
    "start": "2236720",
    "end": "2243280"
  },
  {
    "text": "right fingers crossed and i'm gonna turn to the postman",
    "start": "2243280",
    "end": "2250240"
  },
  {
    "text": "postman okay dead speakers stand",
    "start": "2250240",
    "end": "2257839"
  },
  {
    "text": "i cannot believe this is happening",
    "start": "2263839",
    "end": "2268960"
  },
  {
    "text": "okay finally so we get to 200 okay and since we got a 200 okay we also had",
    "start": "2269680",
    "end": "2275839"
  },
  {
    "text": "the body with some dummy data okay but for the head if you uh for example try to do a head",
    "start": "2275839",
    "end": "2285760"
  },
  {
    "text": "for something that is not allowed you're trying to do a head for the",
    "start": "2285760",
    "end": "2291440"
  },
  {
    "text": "speaker's uh endpoint which means okay head about speakers the forehead you usually have",
    "start": "2291440",
    "end": "2298079"
  },
  {
    "text": "something to identify and what it gives back is hey this method is not allowed at",
    "start": "2298079",
    "end": "2303760"
  },
  {
    "text": "least on the end when you're trying to use it okay so what you should do is to",
    "start": "2303760",
    "end": "2310079"
  },
  {
    "text": "move on the actual action action that you implemented so which is guest speaker by id which",
    "start": "2310079",
    "end": "2316400"
  },
  {
    "text": "has for example one that i know that is in the database and yeah if i play send you'll see that it hits",
    "start": "2316400",
    "end": "2324320"
  },
  {
    "text": "the http head actually because it respects the verbs and as a body i have row is nothing but",
    "start": "2324320",
    "end": "2331359"
  },
  {
    "text": "pretty it's one i don't it's one line uh and i also have a 200 okay so okay",
    "start": "2331359",
    "end": "2337520"
  },
  {
    "text": "that is there you shouldn't care about the body okay okay but what happens if you want to uh",
    "start": "2337520",
    "end": "2346319"
  },
  {
    "text": "take to obtain different representations of the same resource and the simplest example i will take is",
    "start": "2346400",
    "end": "2352720"
  },
  {
    "text": "json and xml so speakers by id if we look at the headers part you'll",
    "start": "2352720",
    "end": "2360000"
  },
  {
    "text": "see that i went back hey as a client i'm just telling the server that i accept",
    "start": "2360000",
    "end": "2366160"
  },
  {
    "text": "application xml back and if i'm sending the request",
    "start": "2366160",
    "end": "2371599"
  },
  {
    "text": "surprise i'm getting back jason but well you should take into consideration",
    "start": "2371760",
    "end": "2378480"
  },
  {
    "text": "that i accept html or at least if you do not accept what i want uh",
    "start": "2378480",
    "end": "2385520"
  },
  {
    "text": "tell me give me back 450 in order for me to know and that's",
    "start": "2385520",
    "end": "2390720"
  },
  {
    "text": "what's happening is the content negotiation perk so in order to achieve that you should",
    "start": "2390720",
    "end": "2396320"
  },
  {
    "text": "go back to the api and go to the startup and in the startup",
    "start": "2396320",
    "end": "2410160"
  },
  {
    "text": "webex is eating all my resources so in the startup you can configure configure a lot of",
    "start": "2410160",
    "end": "2417359"
  },
  {
    "text": "things that are api related so one of the things that you configure",
    "start": "2417359",
    "end": "2422480"
  },
  {
    "text": "is something in the ad controllers it's something that will tell the",
    "start": "2422480",
    "end": "2429440"
  },
  {
    "text": "the platform hey do this and that and one of these is to add options",
    "start": "2429440",
    "end": "2436560"
  },
  {
    "text": "uh for a few headers and a few behaviors that the api should",
    "start": "2436560",
    "end": "2443680"
  },
  {
    "text": "have and one of these is options dot return http not acceptable",
    "start": "2443680",
    "end": "2451119"
  },
  {
    "text": "which is by default turned off and you should turn it on so if something that you request is",
    "start": "2451119",
    "end": "2457280"
  },
  {
    "text": "not acceptable it cannot be processed by the server it should be responded accordingly",
    "start": "2457280",
    "end": "2464240"
  },
  {
    "text": "and another thing that you should also do is to respect browser accept header",
    "start": "2464240",
    "end": "2474240"
  },
  {
    "text": "otherwise it will always return json because this is how it's implemented to behave",
    "start": "2477280",
    "end": "2484960"
  },
  {
    "text": "json and that's it okay so i'm going to try to do this maybe the",
    "start": "2484960",
    "end": "2491040"
  },
  {
    "text": "console will work faster",
    "start": "2491040",
    "end": "2495839"
  },
  {
    "text": "but now if i will do the request again that request with the accept and the",
    "start": "2498400",
    "end": "2504960"
  },
  {
    "text": "mime type application xml will get back up 450 hey i cannot use that",
    "start": "2504960",
    "end": "2523838"
  },
  {
    "text": "okay since we're very slow in this do you have any questions so far",
    "start": "2524160",
    "end": "2530560"
  },
  {
    "text": "it worked faster cool so i'm wanting back an xml response",
    "start": "2533839",
    "end": "2540720"
  },
  {
    "text": "and i press send again and if everything goes well i shouldn't get",
    "start": "2540720",
    "end": "2548640"
  },
  {
    "text": "a json body because i do not want one",
    "start": "2548640",
    "end": "2554160"
  },
  {
    "text": "sending the request waiting for the request now it's 406 not acceptable",
    "start": "2555920",
    "end": "2564000"
  },
  {
    "text": "so it says that the requested resource is only capable of generated content",
    "start": "2564000",
    "end": "2569440"
  },
  {
    "text": "not acceptable according to what you sent so if we look at this request in isolation",
    "start": "2569440",
    "end": "2574880"
  },
  {
    "text": "the server it understands that well application xml is not something",
    "start": "2574880",
    "end": "2580079"
  },
  {
    "text": "that can be responded or respond with okay and another thing",
    "start": "2580079",
    "end": "2585440"
  },
  {
    "text": "um if you want actually to respond with xml you should add the",
    "start": "2585440",
    "end": "2591359"
  },
  {
    "text": "contra serializer for the api so you have in here something that is called configured",
    "start": "2591359",
    "end": "2599760"
  },
  {
    "text": "at xml data contract serializer formatter",
    "start": "2599760",
    "end": "2604960"
  },
  {
    "text": "so you should tell the platform that you will be able to respond with the",
    "start": "2605040",
    "end": "2611040"
  },
  {
    "text": "same entity but in uh xml format so now with the the same request we'll",
    "start": "2611040",
    "end": "2618560"
  },
  {
    "text": "get back the right response according to the accept header that we're sending",
    "start": "2618560",
    "end": "2624800"
  },
  {
    "text": "okay it's up and running so the same endpoint i'm gonna hit send and now the format of",
    "start": "2631040",
    "end": "2638160"
  },
  {
    "text": "the body should be xml looking",
    "start": "2638160",
    "end": "2649838"
  },
  {
    "text": "what",
    "start": "2650800",
    "end": "2653200"
  },
  {
    "text": "of course if you do not have the accept header it assumes json so i want xml",
    "start": "2657920",
    "end": "2667119"
  },
  {
    "text": "now you have an xml body as being there to the other hand of",
    "start": "2667440",
    "end": "2673839"
  },
  {
    "text": "course if you have specific needs you will need to tweak uh this and create an output formatter that",
    "start": "2673839",
    "end": "2679280"
  },
  {
    "text": "is specific to your to your business okay another thing that we should should",
    "start": "2679280",
    "end": "2685440"
  },
  {
    "text": "create now um for example a body let's say we have",
    "start": "2685440",
    "end": "2691599"
  },
  {
    "text": "speakers and for the speakers we have talks and this is the way that we change the request",
    "start": "2691599",
    "end": "2697200"
  },
  {
    "text": "we always want to access uh the speaker the sp by id and then because the talks",
    "start": "2697200",
    "end": "2703280"
  },
  {
    "text": "are related to the specific uh speaker that is in front of it the talks will be the",
    "start": "2703280",
    "end": "2709040"
  },
  {
    "text": "the chaining entity so if you have something that is hierarchical in a way it should be put",
    "start": "2709040",
    "end": "2715440"
  },
  {
    "text": "after the so you have speakers and from the speakers you have the specific one with id1",
    "start": "2715440",
    "end": "2721520"
  },
  {
    "text": "and for the specific speaker with id one we have talks and then if you would have talks with a",
    "start": "2721520",
    "end": "2728960"
  },
  {
    "text": "specific id you should have along the way box something and the idea",
    "start": "2728960",
    "end": "2734240"
  },
  {
    "text": "for the talk so um let's",
    "start": "2734240",
    "end": "2740000"
  },
  {
    "text": "create something a new entity and we should post this",
    "start": "2740000",
    "end": "2747839"
  },
  {
    "text": "i present and i'm waiting to send the request",
    "start": "2748079",
    "end": "2752800"
  },
  {
    "text": "and if something everything goes well we should end up okay",
    "start": "2753680",
    "end": "2760960"
  },
  {
    "text": "we have the id that is assigned now because we posted uh two properties we got back three",
    "start": "2760960",
    "end": "2766960"
  },
  {
    "text": "because id is assigned by database and also in the header section you should also have uh",
    "start": "2766960",
    "end": "2774480"
  },
  {
    "text": "the header called location that is the actual url for the newly created entity",
    "start": "2774480",
    "end": "2781680"
  },
  {
    "text": "and now if you take that and we issue a get you should be uh be able to get the",
    "start": "2781680",
    "end": "2787760"
  },
  {
    "text": "specific entity that was just created so in terms of status codes you have 201",
    "start": "2787760",
    "end": "2794800"
  },
  {
    "text": "created okay and we forget that and trying to run it",
    "start": "2794800",
    "end": "2803839"
  },
  {
    "text": "318 you see that is the same entity that we",
    "start": "2804920",
    "end": "2812480"
  },
  {
    "text": "created okay uh no just to create an",
    "start": "2814839",
    "end": "2820960"
  },
  {
    "text": "introduction because we're we're waiting for this to to work um in dotnet we you have an api",
    "start": "2820960",
    "end": "2830079"
  },
  {
    "text": "that allows you to specify what are the default behaviors in terms of it won't work so i'm gonna",
    "start": "2830079",
    "end": "2836720"
  },
  {
    "text": "just show you the code because we cannot oh that's why it doesn't work",
    "start": "2836720",
    "end": "2845838"
  },
  {
    "text": "okay this is not fun at all uh what i want you to to show you is that i'm returning gtos",
    "start": "2854400",
    "end": "2862240"
  },
  {
    "text": "so i also have uh talk one dto so i want to get back the talks for the speaker",
    "start": "2862240",
    "end": "2868079"
  },
  {
    "text": "and it's nothing else then a simple uh class with three properties okay because i also",
    "start": "2868079",
    "end": "2874800"
  },
  {
    "text": "have a talk v2 because i want to show you the um the v2",
    "start": "2874800",
    "end": "2880160"
  },
  {
    "text": "and the versioning of the apis and you can also do something like that so getting back to",
    "start": "2880160",
    "end": "2886000"
  },
  {
    "text": "the talks controller it's up to you what you return and how you map it",
    "start": "2886000",
    "end": "2891760"
  },
  {
    "text": "for example we have the talks controller cs which contains everything related to a",
    "start": "2891760",
    "end": "2897280"
  },
  {
    "text": "talk but uh i define the root as being",
    "start": "2897280",
    "end": "2902319"
  },
  {
    "text": "everything that is api speakers you cannot access the talk without",
    "start": "2902319",
    "end": "2908480"
  },
  {
    "text": "accessing api speakers and the speaker id in front of it and then talks so if we were to compare",
    "start": "2908480",
    "end": "2916319"
  },
  {
    "text": "with the speaker ones which is traditional and it has api controller the talks it has a more let's say",
    "start": "2916319",
    "end": "2923599"
  },
  {
    "text": "complicated and hierarchical representation of it and this representation uh it depends",
    "start": "2923599",
    "end": "2930319"
  },
  {
    "text": "how you want it maybe you want it separately and then you'll switch back to the the same approach api",
    "start": "2930319",
    "end": "2937040"
  },
  {
    "text": "controllers and you'll just access stocks independently of the speaker",
    "start": "2937040",
    "end": "2942160"
  },
  {
    "text": "maybe that's also a business scenario that you can talk but there's nothing stopping you uh to",
    "start": "2942160",
    "end": "2948160"
  },
  {
    "text": "chain entities and it's uh as you see it's very easy to chain entities if those entities",
    "start": "2948160",
    "end": "2953359"
  },
  {
    "text": "are related for example if you would have a pets uh the pet id and then owners that will",
    "start": "2953359",
    "end": "2959440"
  },
  {
    "text": "be something related to the pet in front so that might be valid and then if you",
    "start": "2959440",
    "end": "2967359"
  },
  {
    "text": "have something that is even more complicated you can add another controller for that specific entity and",
    "start": "2967359",
    "end": "2973920"
  },
  {
    "text": "respect the same pattern so",
    "start": "2973920",
    "end": "2978880"
  },
  {
    "text": "is that easy and to do okay another thing that i want to to",
    "start": "2979920",
    "end": "2986000"
  },
  {
    "text": "show you is that for example if you have a create okay and that create uh that's validation",
    "start": "2986000",
    "end": "2993760"
  },
  {
    "text": "and we often use this inside our apis if you don't have another mechanism we use",
    "start": "2993760",
    "end": "2999599"
  },
  {
    "text": "something like if model safe is valid then return a bad request it is not valid to return a bad request",
    "start": "2999599",
    "end": "3005359"
  },
  {
    "text": "or either way we are checking if the module state is valid for that entity when we have a post or put okay",
    "start": "3005359",
    "end": "3012960"
  },
  {
    "text": "but if you configure something in the api uh behavior in startup you can",
    "start": "3012960",
    "end": "3019760"
  },
  {
    "text": "remove this entirely and this becomes a much easier code okay because it's",
    "start": "3019760",
    "end": "3029200"
  },
  {
    "text": "it's easier you remove three lines of code at least it depends on how you you write code the code style",
    "start": "3029359",
    "end": "3036800"
  },
  {
    "text": "so how you do that is by going to the startup and i'm going to comment this",
    "start": "3036800",
    "end": "3044160"
  },
  {
    "text": "and i'm going to add this so you have the option of using",
    "start": "3046720",
    "end": "3053760"
  },
  {
    "text": "something that is called configure api behavior and in the api behavior you have the option of",
    "start": "3053760",
    "end": "3059680"
  },
  {
    "text": "specifying well how your api behaves in specific conditions",
    "start": "3059680",
    "end": "3064880"
  },
  {
    "text": "for example if there is an invalid model state so if you post something that is uh not",
    "start": "3064880",
    "end": "3071599"
  },
  {
    "text": "valid what you'll get back so you'll get back something that is called a problem",
    "start": "3071599",
    "end": "3076720"
  },
  {
    "text": "details you already have an object called validation problem details where you pass the model state and in",
    "start": "3076720",
    "end": "3083359"
  },
  {
    "text": "front of it you can have a lot of things to tweak for example if you have a documentation for your",
    "start": "3083359",
    "end": "3090160"
  },
  {
    "text": "project you can say hey the problem that happens is of this type",
    "start": "3090160",
    "end": "3095760"
  },
  {
    "text": "and the title is maybe generic on or maybe you have specific for the model validation and if you want",
    "start": "3095760",
    "end": "3103359"
  },
  {
    "text": "always as the status you can have either 422 as being unprocessable entity",
    "start": "3103359",
    "end": "3111200"
  },
  {
    "text": "uh you can pass the intes instance where the the bad things happen",
    "start": "3111200",
    "end": "3118000"
  },
  {
    "text": "and you also have uh the way uh the ability of returning the content type that is standard and it's standardized",
    "start": "3118000",
    "end": "3124800"
  },
  {
    "text": "application problem json in this case of course if you want to",
    "start": "3124800",
    "end": "3130160"
  },
  {
    "text": "treat everything every model of validation as being a bad request then you can add here bad",
    "start": "3130160",
    "end": "3137760"
  },
  {
    "text": "request object results and you can change the status code as being",
    "start": "3137760",
    "end": "3142960"
  },
  {
    "text": "a bad request it's up to you how you do this it's",
    "start": "3142960",
    "end": "3149920"
  },
  {
    "text": "your job to decide this okay and now uh because i mentioned that you you",
    "start": "3149920",
    "end": "3155119"
  },
  {
    "text": "shouldn't then add the three lines if all the state is valid everywhere fingers crossed for this to",
    "start": "3155119",
    "end": "3162480"
  },
  {
    "text": "uh to build faster in order to achieve this and to be able to configure",
    "start": "3162480",
    "end": "3169119"
  },
  {
    "text": "this you need to install a package and that package is",
    "start": "3169119",
    "end": "3180480"
  },
  {
    "text": "not for this version which is the next part fingers crossed okay seems to be",
    "start": "3180480",
    "end": "3188880"
  },
  {
    "text": "running okay no it doesn't",
    "start": "3188880",
    "end": "3196880"
  },
  {
    "text": "we wait okay so we have with api behavior",
    "start": "3197680",
    "end": "3207599"
  },
  {
    "text": "we should post something i added here validation for the title to not be more than 100 characters and i in",
    "start": "3207760",
    "end": "3214880"
  },
  {
    "text": "here i have more than 100 characters and what i get back is just by send",
    "start": "3214880",
    "end": "3220079"
  },
  {
    "text": "pressing send i should be getting back the standard",
    "start": "3220079",
    "end": "3227680"
  },
  {
    "text": "response",
    "start": "3234839",
    "end": "3237839"
  },
  {
    "text": "see uh i have this so this is the type this is the status code that is received",
    "start": "3241599",
    "end": "3246640"
  },
  {
    "text": "and also it's sent as the actual response where it happens",
    "start": "3246640",
    "end": "3252240"
  },
  {
    "text": "uh you can see the errors for the properties and you also see each and every error uh and now i have the the validation",
    "start": "3252240",
    "end": "3259359"
  },
  {
    "text": "that i added on the property the title shouldn't have more than 100 characters and if i would have more",
    "start": "3259359",
    "end": "3265119"
  },
  {
    "text": "uh everything should be in here but that's done automatically by the platform you",
    "start": "3265119",
    "end": "3270800"
  },
  {
    "text": "shouldn't check uh starting this point when you configure the api behavior you shouldn't add if model state is",
    "start": "3270800",
    "end": "3276960"
  },
  {
    "text": "valid in absolutely every method that you you have um to check the model state",
    "start": "3276960",
    "end": "3283520"
  },
  {
    "text": "it removes uh some code and it is very nice to have regarding the the versioning uh you we",
    "start": "3283520",
    "end": "3291200"
  },
  {
    "text": "have the options the option and again i'm going to show you some codes to save some time with",
    "start": "3291200",
    "end": "3297440"
  },
  {
    "text": "the build part you can add something is middleware at api version",
    "start": "3297440",
    "end": "3304559"
  },
  {
    "text": "versioning where you specify what types of versioning you want so in",
    "start": "3304559",
    "end": "3310559"
  },
  {
    "text": "this case i want header api version and i want a property in the header that is called",
    "start": "3310559",
    "end": "3315839"
  },
  {
    "text": "api version okay similar you can add api versioning for the query",
    "start": "3315839",
    "end": "3322799"
  },
  {
    "text": "string and you can pass it something as a default it will default to api version",
    "start": "3322799",
    "end": "3329760"
  },
  {
    "text": "also you can have in query string and you can",
    "start": "3329760",
    "end": "3334880"
  },
  {
    "text": "pass a specific parameter so at the end of your endpoint you can add a question mark and the version number",
    "start": "3334880",
    "end": "3341760"
  },
  {
    "text": "and so on and that would be cool that will be",
    "start": "3341760",
    "end": "3346880"
  },
  {
    "text": "taken into consideration also uh you have the option of configuring a lot of stuff for example",
    "start": "3346880",
    "end": "3354160"
  },
  {
    "text": "you can specify which is the default api version for you for example you can if you have two um",
    "start": "3354160",
    "end": "3359680"
  },
  {
    "text": "several version you can specify hey as the default one uh you can have the",
    "start": "3359680",
    "end": "3364880"
  },
  {
    "text": "two so i'm ignoring one treat the default as being the two you can have your api report the api",
    "start": "3364880",
    "end": "3372000"
  },
  {
    "text": "versions in the header and this will be done automatically by the platform",
    "start": "3372000",
    "end": "3378000"
  },
  {
    "text": "um you can say hey if there is no version specified nowhere in the header url query string",
    "start": "3378000",
    "end": "3385680"
  },
  {
    "text": "uh assume that is the default one you can also enforce this also in the api version reader you can",
    "start": "3385680",
    "end": "3392559"
  },
  {
    "text": "say hey read it from the header ap header and make sure that in the header there is this exact key",
    "start": "3392559",
    "end": "3399680"
  },
  {
    "text": "that you want something else that you can configure is error response in case of version",
    "start": "3399680",
    "end": "3406000"
  },
  {
    "text": "mismatch is the api versioning error provider you can create your own and you can send",
    "start": "3406000",
    "end": "3412880"
  },
  {
    "text": "the response to the client as you as you see fit so i'm gonna try to run this again",
    "start": "3412880",
    "end": "3421920"
  },
  {
    "text": "and until this build is done",
    "start": "3422000",
    "end": "3432640"
  },
  {
    "text": "i'm gonna show you in the code how easy it is to have two versions of the same controller and",
    "start": "3432640",
    "end": "3438640"
  },
  {
    "text": "to respond depending on the version you're sending in different manners course it's unable",
    "start": "3438640",
    "end": "3446880"
  },
  {
    "text": "to connect why would it be able to connect",
    "start": "3446880",
    "end": "3461839"
  },
  {
    "text": "okay so until i show you i will show you this you can add an api version on top of",
    "start": "3483200",
    "end": "3491040"
  },
  {
    "text": "your controller and you by adding the api version you can also mark",
    "start": "3491040",
    "end": "3496480"
  },
  {
    "text": "this specific controller as being deprecated and absolutely every action inside it",
    "start": "3496480",
    "end": "3501599"
  },
  {
    "text": "will be uh treated as deprecated it will work but it will have the header with the deprecated part",
    "start": "3501599",
    "end": "3508559"
  },
  {
    "text": "then each action for example if you want to treat differently a specific action you",
    "start": "3508559",
    "end": "3514799"
  },
  {
    "text": "can add it uh add an attribute called map to api version and give it the version",
    "start": "3514799",
    "end": "3520240"
  },
  {
    "text": "and this will be called called whenever this version will be found in the header for example if you were using",
    "start": "3520240",
    "end": "3526240"
  },
  {
    "text": "header in there or you can add another",
    "start": "3526240",
    "end": "3532960"
  },
  {
    "text": "uh talks controller with another name talks v2 controller uh this is the name and the name doesn't",
    "start": "3532960",
    "end": "3539440"
  },
  {
    "text": "matter it matters what you expose as a route and it happens that you can expose exactly the same route as",
    "start": "3539440",
    "end": "3545839"
  },
  {
    "text": "before you have api uh speaker speaker id and you have the talks and inside you can say hey i have the",
    "start": "3545839",
    "end": "3553359"
  },
  {
    "text": "api api version 2.0 so everything that's inside this controller is 2.0 is the",
    "start": "3553359",
    "end": "3560559"
  },
  {
    "text": "newer version so it's treated uh the same so if i'm going to postman",
    "start": "3560559",
    "end": "3569119"
  },
  {
    "text": "and i cross my fingers i'm gonna show you that you can have two versions side by side",
    "start": "3569119",
    "end": "3575440"
  },
  {
    "text": "for example for the 2.0 version you get back two properties for each talk and if you uh i'm gonna",
    "start": "3575440",
    "end": "3582799"
  },
  {
    "text": "change this i'm gonna send the request and hopefully it will work uh i have three properties",
    "start": "3582799",
    "end": "3591119"
  },
  {
    "text": "three properties back so it's very easy to versions by side",
    "start": "3591119",
    "end": "3596400"
  },
  {
    "text": "um and you can tweak everything just by using a simple library that is",
    "start": "3596400",
    "end": "3602480"
  },
  {
    "text": "called asb core nvc version so",
    "start": "3602480",
    "end": "3608079"
  },
  {
    "text": "i think this is it apparently webex didn't allow me to",
    "start": "3608319",
    "end": "3615680"
  },
  {
    "text": "uh to show you more code but um you can find me find me",
    "start": "3615680",
    "end": "3622400"
  },
  {
    "text": "at the end um on slack and we will talk about it more and i also uh did",
    "start": "3622400",
    "end": "3630480"
  },
  {
    "text": "i have this on on github i think this is everything that i can",
    "start": "3630480",
    "end": "3636799"
  },
  {
    "text": "present uh in an hour during this not moving computer stuff",
    "start": "3636799",
    "end": "3643520"
  },
  {
    "text": "thank you for for being here thank you",
    "start": "3643520",
    "end": "3656400"
  },
  {
    "text": "you",
    "start": "3656400",
    "end": "3658480"
  }
]