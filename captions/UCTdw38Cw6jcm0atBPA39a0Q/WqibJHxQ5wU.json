[
  {
    "start": "0",
    "end": "75000"
  },
  {
    "text": "okay okay hello everyone I think it's time we start so welcome",
    "start": "5180",
    "end": "13219"
  },
  {
    "text": "so being tricky coordination problems in stateless dotnet services so the topic",
    "start": "13219",
    "end": "18770"
  },
  {
    "text": "of this talk is basically trying to show you a something that I realized in my",
    "start": "18770",
    "end": "27919"
  },
  {
    "text": "previous jobs where normally when you scale up an application and you have multiple instances running at the same",
    "start": "27919",
    "end": "32990"
  },
  {
    "text": "time you usually expect that the more independent independent they are the",
    "start": "32990",
    "end": "38000"
  },
  {
    "text": "easier it is to operate them but there is a signal I notice we're at an abstract level sounds counterintuitive",
    "start": "38000",
    "end": "44540"
  },
  {
    "text": "where occasionally your applications want to do something that does require some level of coordination between the",
    "start": "44540",
    "end": "51020"
  },
  {
    "text": "instances and if you don't allow that to happen then you end up with more operational problems than you would",
    "start": "51020",
    "end": "56780"
  },
  {
    "text": "expect so this is what I'm gonna try to show you with this presentation and then at the end I also I'll demo a library I",
    "start": "56780",
    "end": "64220"
  },
  {
    "text": "brought a sample library that kind of tries to make to show you a concrete",
    "start": "64220",
    "end": "69920"
  },
  {
    "text": "solution to some of these problems so with this in mind let's get started",
    "start": "69920",
    "end": "76160"
  },
  {
    "start": "75000",
    "end": "205000"
  },
  {
    "text": "my name is Laurence Crowe I'm a developer advocate of ready slabs and corollaries on Twitter I'm from Italy",
    "start": "76160",
    "end": "83270"
  },
  {
    "text": "and that's just a photo of me doing scuba diving so normally when we when",
    "start": "83270",
    "end": "94100"
  },
  {
    "text": "people want to talk about communication patterns and it's a bit as systems they mostly talk about inter service",
    "start": "94100",
    "end": "100490"
  },
  {
    "text": "coordination so service a communicating to service B which is fine there are",
    "start": "100490",
    "end": "106670"
  },
  {
    "text": "lots of interesting things to say on the subject like even sourcing and the language that",
    "start": "106670",
    "end": "113150"
  },
  {
    "text": "different services have to share and all this kind of stuff but in this session as I mentioned earlier I want to focus",
    "start": "113150",
    "end": "118760"
  },
  {
    "text": "on what happens within a single service and and in fact whether you have a",
    "start": "118760",
    "end": "125659"
  },
  {
    "text": "hundred services in your micro service architecture or you just have one big monolith for the scope of this",
    "start": "125659",
    "end": "131030"
  },
  {
    "text": "presentation it doesn't really matter because I want again I want to see what happens inside the service so let's zoom",
    "start": "131030",
    "end": "137060"
  },
  {
    "text": "in and get all about other service or other services so when we pick answer the box",
    "start": "137060",
    "end": "143650"
  },
  {
    "text": "of a service we not we rediscover that services are actually made up of different pieces that work together and",
    "start": "143650",
    "end": "151290"
  },
  {
    "text": "in this image we have two instances of the same application with a lab bouncer sitting in front of them and here you",
    "start": "151290",
    "end": "161320"
  },
  {
    "text": "can see that these two boxes represent two copies of the same application and these could be two processes two",
    "start": "161320",
    "end": "167680"
  },
  {
    "text": "containers deployed on the same machine on different machine again for the scope",
    "start": "167680",
    "end": "172690"
  },
  {
    "text": "of the presentation the deployment details don't matter what matters is that you are scaling horizontally or",
    "start": "172690",
    "end": "178810"
  },
  {
    "text": "scaling out like they say yeah like the same measure so let me start with one",
    "start": "178810",
    "end": "190030"
  },
  {
    "text": "common coordination problem and in the meantime also introduced a very useful",
    "start": "190030",
    "end": "196170"
  },
  {
    "text": "practice which is making applications weightless so let's say that your",
    "start": "196170",
    "end": "202420"
  },
  {
    "text": "application is an e-commerce website we have an item catalog this is you know",
    "start": "202420",
    "end": "208630"
  },
  {
    "start": "205000",
    "end": "378000"
  },
  {
    "text": "main database and each user has a shopping cart and they can feel it by browsing the website so where should",
    "start": "208630",
    "end": "216010"
  },
  {
    "text": "user shopping carts leave a reasonable answer would be inside the session but",
    "start": "216010",
    "end": "222250"
  },
  {
    "text": "there are some things to consider so starting with the basics enabling sessions in ask net core is",
    "start": "222250",
    "end": "228310"
  },
  {
    "text": "very easy it's just a couple of configuration lines as you can see it's just add session and use session and",
    "start": "228310",
    "end": "235810"
  },
  {
    "text": "with this configuration the session state is stored in our applications",
    "start": "235810",
    "end": "241240"
  },
  {
    "text": "memory and is connected to a specific client by a cookie that contains the session ID after we are done",
    "start": "241240",
    "end": "249460"
  },
  {
    "text": "enabling it then we can access the session object from the HTTP context of a request and the object will be the",
    "start": "249460",
    "end": "255730"
  },
  {
    "text": "same across different requests coming from the same browser and if you google shopping cart ask net provide plenty of",
    "start": "255730",
    "end": "263260"
  },
  {
    "text": "tutorials that teach you to build cars this way but there are two problems with this setup the",
    "start": "263260",
    "end": "269090"
  },
  {
    "text": "first of all if we keep this data in memory we bring upon ourselves a huge",
    "start": "269090",
    "end": "274340"
  },
  {
    "text": "amount of operational problems because if we have more than one instance of our",
    "start": "274340",
    "end": "280310"
  },
  {
    "text": "application again so if we scaled out a scale horizontally then we will need to",
    "start": "280310",
    "end": "285440"
  },
  {
    "text": "route or request from the same session to the same instance because otherwise the customer will lose their card because if the request goes to another",
    "start": "285440",
    "end": "292190"
  },
  {
    "text": "instance that doesn't have the right session state in memory the user would be very confused actually because",
    "start": "292190",
    "end": "297290"
  },
  {
    "text": "they've had they would have like a flickering experience with a shopping cart which kind of works kind of doesn't",
    "start": "297290",
    "end": "303680"
  },
  {
    "text": "work so and to make sure you wrote all requests always do the same instance you",
    "start": "303680",
    "end": "310610"
  },
  {
    "text": "need to use a configuration option in the load balancer called sticky sessions which has also have also the five factor",
    "start": "310610",
    "end": "318410"
  },
  {
    "text": "of making dynamic scaling really annoying and not just that also the playing update is going to be painful",
    "start": "318410",
    "end": "323690"
  },
  {
    "text": "because every time you restart the application the sessions are going to disappear people are going to lose their",
    "start": "323690",
    "end": "329090"
  },
  {
    "text": "card and the fix to this is fairly simple and I think fairly commonly known",
    "start": "329090",
    "end": "334690"
  },
  {
    "text": "do usually what you want to do is you want to move the session data in a memory database like Freddy's this is",
    "start": "334690",
    "end": "341690"
  },
  {
    "text": "where reddy's comes in right so once you do that you don't need sticky sessions anymore",
    "start": "341690",
    "end": "347740"
  },
  {
    "text": "you could also store sections in the main database but that's usually a problematic idea because you need the",
    "start": "347740",
    "end": "355100"
  },
  {
    "text": "session data for every quest that the client makes and that becomes unsustainable of after a while because",
    "start": "355100",
    "end": "360410"
  },
  {
    "text": "once you get past a certain load you like users tend to get to a point where",
    "start": "360410",
    "end": "367340"
  },
  {
    "text": "they overpower he or not the base so to keep things fast this is where people",
    "start": "367340",
    "end": "373280"
  },
  {
    "text": "usually rely on ready for similar solutions so how do we stop storing",
    "start": "373280",
    "end": "380870"
  },
  {
    "text": "sessions in memory and move them to read it again after in a spent chord it's a couple of theoretical configuration",
    "start": "380870",
    "end": "387440"
  },
  {
    "text": "lines nothing more complicated than that at this visit memory cache and as that",
    "start": "387440",
    "end": "393830"
  },
  {
    "text": "exchange writes cash stock exchange is part of the method name because asp net",
    "start": "393830",
    "end": "399050"
  },
  {
    "text": "core is using the radius client developed by change once you do this no more sticky",
    "start": "399050",
    "end": "405419"
  },
  {
    "text": "sessions which is great and but if you remember I mentioned two problems so the",
    "start": "405419",
    "end": "411930"
  },
  {
    "text": "first one we just solved by moving sessions to readies but there's a second one still standing and that is that in",
    "start": "411930",
    "end": "417509"
  },
  {
    "text": "ethnic or sessions our browser sessions not user sessions so this means that if",
    "start": "417509",
    "end": "425430"
  },
  {
    "text": "we were to save the card that stay directly in the session object the same user would see two different cards when",
    "start": "425430",
    "end": "431789"
  },
  {
    "text": "logged in from two different devices and maybe that's what you want but probably",
    "start": "431789",
    "end": "436949"
  },
  {
    "text": "it's not because normally you want your users to be able to like to switch device and continue building in same",
    "start": "436949",
    "end": "442919"
  },
  {
    "text": "order but again might depend on your use case so how do we fix this again the fix",
    "start": "442919",
    "end": "450599"
  },
  {
    "text": "is not particularly involved now we need to do is to keep inside the browser session our reference to the user ID and",
    "start": "450599",
    "end": "457199"
  },
  {
    "text": "then use that information to store and load the card data using the IDS without cash interface so if you look at this",
    "start": "457199",
    "end": "463500"
  },
  {
    "text": "code here I'm injecting a cash instance",
    "start": "463500",
    "end": "469919"
  },
  {
    "text": "into my controller and then when I want to get the card I'm using get a sync",
    "start": "469919",
    "end": "477900"
  },
  {
    "text": "from that same object notice one thing though that this is the different big",
    "start": "477900",
    "end": "484650"
  },
  {
    "text": "difference between the session object and the I distributed cache interface the cache is not session specific so you",
    "start": "484650",
    "end": "493319"
  },
  {
    "text": "can think of it as a dictionary shared by all your all the requests so we need",
    "start": "493319",
    "end": "499169"
  },
  {
    "text": "to specify in the key name whose car we want to fetch and this is why we are storing in the browser session the user",
    "start": "499169",
    "end": "505800"
  },
  {
    "text": "ID so now if you do this now you you have a card that is user session",
    "start": "505800",
    "end": "512070"
  },
  {
    "text": "specific which is nice and also now our users will be able to switch between different the back so we'll be able to",
    "start": "512070",
    "end": "519419"
  },
  {
    "text": "switch between different values of course and when building the order and they want experience any service",
    "start": "519419",
    "end": "524640"
  },
  {
    "text": "degradation if we dynamically scale in the meantime which is also nice so congratulation that's how that's what it",
    "start": "524640",
    "end": "531899"
  },
  {
    "text": "takes to properly disability caching it's really not that much involved before I move on to the",
    "start": "531899",
    "end": "539260"
  },
  {
    "start": "537000",
    "end": "578000"
  },
  {
    "text": "next subject so getting closer to the more interesting stuff I want to",
    "start": "539260",
    "end": "544620"
  },
  {
    "text": "encourage you to read the official documentation to see what else is needed to like have a good production",
    "start": "544620",
    "end": "551620"
  },
  {
    "text": "deployment there are a couple of things more to do but and also some of these generic methods that you saw like get",
    "start": "551620",
    "end": "558640"
  },
  {
    "text": "card the extension methods you supposed to write them but they basically all all",
    "start": "558640",
    "end": "563800"
  },
  {
    "text": "they need it for it's just for for you to specify how to serialize and deserialize your objects that's nothing",
    "start": "563800",
    "end": "570550"
  },
  {
    "text": "weird and in the documentation you'll find how to do although how to do all of",
    "start": "570550",
    "end": "576250"
  },
  {
    "text": "these stuff ok enough time talking about",
    "start": "576250",
    "end": "581350"
  },
  {
    "start": "578000",
    "end": "621000"
  },
  {
    "text": "sessions I wanted to sell you sessions because there they are problem that",
    "start": "581350",
    "end": "586720"
  },
  {
    "text": "everyone has to deal with basically and also because sessions and caching even",
    "start": "586720",
    "end": "592270"
  },
  {
    "text": "though we don't think about them that way they actually are real coordination problems but since as an image we",
    "start": "592270",
    "end": "598060"
  },
  {
    "text": "understand them fairly well and but if you can ascend fairly well and when a",
    "start": "598060",
    "end": "604300"
  },
  {
    "text": "problem is well understood then you get an easy configuration option in your framework but not every coordination",
    "start": "604300",
    "end": "610360"
  },
  {
    "text": "problem is just as easy so let's now start talking about the stuff that you don't find configuration",
    "start": "610360",
    "end": "617050"
  },
  {
    "text": "options for in a spot in the core so I",
    "start": "617050",
    "end": "622240"
  },
  {
    "start": "621000",
    "end": "672000"
  },
  {
    "text": "mention in the beginning I think we don't even have love to introduce communication problems so coordination",
    "start": "622240",
    "end": "629050"
  },
  {
    "text": "problems within the same service and as a consequence it's not trivial to map the whole space of problems that we can",
    "start": "629050",
    "end": "636010"
  },
  {
    "text": "encounter and in the relative patterns to solve them so for this reason I'll",
    "start": "636010",
    "end": "642400"
  },
  {
    "text": "mention a couple more examples just to kind of give you a feeling to like rough",
    "start": "642400",
    "end": "649870"
  },
  {
    "text": "mapping of the space of problems that that I encountered in my experience so let's start with something from the",
    "start": "649870",
    "end": "656710"
  },
  {
    "text": "opposite side of the spectrum live chat applications so raise your hand if",
    "start": "656710",
    "end": "661960"
  },
  {
    "text": "you've used iris in the past please okay oh that's quite a few hands thank for those who",
    "start": "661960",
    "end": "668920"
  },
  {
    "text": "have never had the pleasure of experiencing IOC this is what the interface looks like it's just text",
    "start": "668920",
    "end": "676029"
  },
  {
    "start": "672000",
    "end": "743000"
  },
  {
    "text": "messages the brain the background is not always black but kinda has to be and",
    "start": "676029",
    "end": "683769"
  },
  {
    "text": "it's all text messages they're not persisted on the server you're supposed to only see the messages that have been sent the while you were online",
    "start": "683769",
    "end": "690790"
  },
  {
    "text": "discussions are organized in channels and after you connect to a server you can then join an existing channel or",
    "start": "690790",
    "end": "696430"
  },
  {
    "text": "create a new one join more channels more than one channel and then after that you'll be able to chat with the people",
    "start": "696430",
    "end": "702040"
  },
  {
    "text": "that are in the same channels as you are I'm going to use IRC as the main example",
    "start": "702040",
    "end": "707139"
  },
  {
    "text": "but the same exact concept is at the base of many called modern collaborative tools and like multiplayer games for",
    "start": "707139",
    "end": "713800"
  },
  {
    "text": "example and building a multiplayer to the local game and the architecture is the exact same as the one and I'll show",
    "start": "713800",
    "end": "720910"
  },
  {
    "text": "for this example the only difference is that here the messages are basically once the the front-end receive the",
    "start": "720910",
    "end": "728350"
  },
  {
    "text": "messages they are just they just get displayed in order while in the pseudo game the messages change the state of",
    "start": "728350",
    "end": "735010"
  },
  {
    "text": "the board for the user is sync so it's relatively small difference the architecture is precisely the same so",
    "start": "735010",
    "end": "744970"
  },
  {
    "text": "going back to the contents of our service box let's say that now with people that we are not doing e-commerce",
    "start": "744970",
    "end": "750250"
  },
  {
    "text": "anymore now we are a live chat application and let's say that we scale out like in the",
    "start": "750250",
    "end": "756220"
  },
  {
    "text": "picture how do we make messages sent to one instance reach other instances in",
    "start": "756220",
    "end": "762040"
  },
  {
    "text": "the e-commerce example there was no communication between users right so we could just simply distribute the",
    "start": "762040",
    "end": "768040"
  },
  {
    "text": "requests across multiple instances and that was it but now if a user is connected to",
    "start": "768040",
    "end": "773829"
  },
  {
    "text": "instance one and on other users another user is connected to instance two and they are in the same channel how do we",
    "start": "773829",
    "end": "779800"
  },
  {
    "text": "make them communicate you might say now why don't we just distribute channels",
    "start": "779800",
    "end": "785589"
  },
  {
    "text": "among different instances and have clients make multiple multiple connections if they want to join",
    "start": "785589",
    "end": "790959"
  },
  {
    "text": "multiple channels so if you want to join channels a and B you connect instance one if you join if you want to join",
    "start": "790959",
    "end": "796510"
  },
  {
    "text": "channels CND you connect to instance two etc well guess what if you try to do",
    "start": "796510",
    "end": "803810"
  },
  {
    "text": "this in my experience at least you end up again with a lot of operational problems because now you must be able to",
    "start": "803810",
    "end": "811130"
  },
  {
    "text": "address individual instances and either your clients know how to do that or your",
    "start": "811130",
    "end": "816680"
  },
  {
    "text": "load balancer must understand how to route connections correctly and it's the",
    "start": "816680",
    "end": "821990"
  },
  {
    "text": "same it's the same is the session situations all over again basically with the only difference that were before we",
    "start": "821990",
    "end": "827870"
  },
  {
    "text": "need a sticky sessions and I would eat a different routing scheme based on channel name for example also dynamic",
    "start": "827870",
    "end": "836660"
  },
  {
    "text": "scaling we do setup is annoying to make work I I didn't even know how to do that",
    "start": "836660",
    "end": "843770"
  },
  {
    "text": "properly honestly and if you think back about the session situation even though",
    "start": "843770",
    "end": "848900"
  },
  {
    "text": "it was trivial and everybody does sessions that way and you don't even think about it in that case moving sessions to",
    "start": "848900",
    "end": "855320"
  },
  {
    "text": "disability edge by doing that we were able to remove a lot of internal tension in the system and in this other example",
    "start": "855320",
    "end": "862220"
  },
  {
    "text": "being able to connect to any channel from any instance has the same effect because it's what allows you to treat",
    "start": "862220",
    "end": "868250"
  },
  {
    "text": "your instances as cattle or pets you don't have you don't want to have to address your instances individually so",
    "start": "868250",
    "end": "876650"
  },
  {
    "text": "what we want is a way to keep a connection up in between all instances so that when one receives a new message",
    "start": "876650",
    "end": "882440"
  },
  {
    "text": "it can then broadcast it to all other instances in other words we want a pub sub system now it may surprise you but",
    "start": "882440",
    "end": "890390"
  },
  {
    "start": "889000",
    "end": "1362000"
  },
  {
    "text": "there aren't that many purpose sub implementations out there more than the novel you will find our message queue",
    "start": "890390",
    "end": "896990"
  },
  {
    "text": "implementations that do support that also support up sub is a message routing scheme which is fine but has some",
    "start": "896990",
    "end": "905780"
  },
  {
    "text": "performance implications that you don't want to deal with when you want like low latency at Roberta scale like in a",
    "start": "905780",
    "end": "912140"
  },
  {
    "text": "real-time chat application or especially stuff like mobile games they're sort of multiplayer games on mobile not",
    "start": "912140",
    "end": "918380"
  },
  {
    "text": "necessarily mobile so pure pub sub is a",
    "start": "918380",
    "end": "923560"
  },
  {
    "text": "synchronous fire-and-forget communication pattern where producers publish messages on a channel and all",
    "start": "923560",
    "end": "931400"
  },
  {
    "text": "the consumers subscribe to the some channel will receive them because it fell forget there are no acts there",
    "start": "931400",
    "end": "937010"
  },
  {
    "text": "are no acknowledgments and because it's synchronous it means there is no persistence so both entities need to be",
    "start": "937010",
    "end": "944480"
  },
  {
    "text": "alive and connected at the same time for communication to happen so this means if a client loses his connection or",
    "start": "944480",
    "end": "950570"
  },
  {
    "text": "messages broadcasted in the meantime will be lost for that client all of this may seem quite limiting so some often",
    "start": "950570",
    "end": "957410"
  },
  {
    "text": "times you t you think you want persistence I don't want to lose messages if I lose the connection but",
    "start": "957410",
    "end": "962930"
  },
  {
    "text": "there are some situations like the one that I've shown casing and especially the next one where this is all you want",
    "start": "962930",
    "end": "969589"
  },
  {
    "text": "this is all you need and every extra feature will introduce extra costs extra complexity delays and for no benefit to",
    "start": "969589",
    "end": "977720"
  },
  {
    "text": "you so 0 mq and nano MSG are two very very cool socket libraries that allow",
    "start": "977720",
    "end": "984500"
  },
  {
    "text": "you to implement pub/sub and a few other messaging patterns they're also broker less libraries so there are kind of",
    "start": "984500",
    "end": "989900"
  },
  {
    "text": "low-level tools that you usually use to implement your own networking applicator",
    "start": "989900",
    "end": "995480"
  },
  {
    "text": "tools basically so they are also broker less so the only participants need to",
    "start": "995480",
    "end": "1002080"
  },
  {
    "text": "know how to connect to each other while readies pub/sub is a brokered version of ab sub and with readies itself being the",
    "start": "1002080",
    "end": "1008709"
  },
  {
    "text": "broker so everybody connects to Redis and registers the message routing to everybody else and I can show you how to",
    "start": "1008709",
    "end": "1015339"
  },
  {
    "text": "use it it's like very very simple okay",
    "start": "1015339",
    "end": "1022390"
  },
  {
    "text": "I'm missing one of my desktops oh okay I",
    "start": "1022390",
    "end": "1028050"
  },
  {
    "text": "see the PowerPoint is has appropriated or desktops let me try to fix this or",
    "start": "1028050",
    "end": "1034020"
  },
  {
    "text": "when we come back okay just one second",
    "start": "1034020",
    "end": "1041670"
  },
  {
    "text": "so in pops up right first of all we need to start readies when you see like the",
    "start": "1046910",
    "end": "1058050"
  },
  {
    "text": "cool graphics you know that you loaded readies then you want to connect to the",
    "start": "1058050",
    "end": "1064800"
  },
  {
    "text": "Redis CLI to play with it from the common line right this is a key value",
    "start": "1064800",
    "end": "1070350"
  },
  {
    "text": "store if you raise your hand if you have user IDs in the past and you've used",
    "start": "1070350",
    "end": "1075780"
  },
  {
    "text": "like ready-seal eyes so you use you know kind a little bit about it okay that's cool quite a few and stuff that's that's",
    "start": "1075780",
    "end": "1080850"
  },
  {
    "text": "pretty nice so this is ready CLI and you can use it to interact with radius and like set keys the lead key is through a",
    "start": "1080850",
    "end": "1087990"
  },
  {
    "text": "bunch of operations but right now we want to play around with pops up so I'm gonna I'll launch two instances of it",
    "start": "1087990",
    "end": "1093830"
  },
  {
    "text": "one on the upper part of the screen one in the lower part in the upper part I'm gonna sub scribe to NDC to the channel",
    "start": "1093830",
    "end": "1102390"
  },
  {
    "text": "called NDC now the others here lie I'm",
    "start": "1102390",
    "end": "1108390"
  },
  {
    "text": "gonna publish a message to NDC hello and",
    "start": "1108390",
    "end": "1115830"
  },
  {
    "text": "the moment I press enter the message is published the subscriber has a CD if there were multiple subscribers they",
    "start": "1115830",
    "end": "1121980"
  },
  {
    "text": "would all receive it so it's broadcasting mechanism another",
    "start": "1121980",
    "end": "1127170"
  },
  {
    "text": "interesting thing that you can do is instead of subscribing to our channel you can do a pattern subscribe so P",
    "start": "1127170",
    "end": "1133970"
  },
  {
    "text": "subscribe to let's say NBC star so now I'm subscribing to every channel that",
    "start": "1133970",
    "end": "1141300"
  },
  {
    "text": "starts with NBC so now if I put a message to any see it will work if I",
    "start": "1141300",
    "end": "1148740"
  },
  {
    "text": "send it to NDC Longden it would work",
    "start": "1148740",
    "end": "1153770"
  },
  {
    "text": "same with I don't know NBC or top will work too if I send a",
    "start": "1153770",
    "end": "1163170"
  },
  {
    "text": "message to back home instead the subscribe will",
    "start": "1163170",
    "end": "1169500"
  },
  {
    "text": "receive it because the the challenge rain doesn't match the pattern it's like very simple and keep in mind that the",
    "start": "1169500",
    "end": "1175560"
  },
  {
    "text": "interesting thing about this is that these channel names there are just strings that get pattern matched by",
    "start": "1175560",
    "end": "1181620"
  },
  {
    "text": "Reddy's so subscribing to our channel publishing to a channel doesn't create",
    "start": "1181620",
    "end": "1187440"
  },
  {
    "text": "allocate topics who use disk space waste a bunch of memory there there is no",
    "start": "1187440",
    "end": "1193110"
  },
  {
    "text": "heavy setup to create a bunch of new channel subscribe to our channel in pubs the whole point of wraps up is to be",
    "start": "1193110",
    "end": "1199650"
  },
  {
    "text": "extremely lightweight more lightweight than it would be if it were something",
    "start": "1199650",
    "end": "1205950"
  },
  {
    "text": "else like a message queue system oh ok",
    "start": "1205950",
    "end": "1213720"
  },
  {
    "text": "great so it may surprise you so in this",
    "start": "1213720",
    "end": "1224190"
  },
  {
    "text": "case the purpose of functionality for the chat application it precisely what we want because again going back to the",
    "start": "1224190",
    "end": "1230160"
  },
  {
    "text": "live chat the idea you want to route message you want to broadcast messages across all the instances and pub/sub is",
    "start": "1230160",
    "end": "1238080"
  },
  {
    "text": "precisely what it does in some sense pops up is IRC but not for humans but for your applications and there are a",
    "start": "1238080",
    "end": "1245130"
  },
  {
    "text": "lot of applications that really would like to have this kind of tool to support what they are trying to do",
    "start": "1245130",
    "end": "1251210"
  },
  {
    "text": "another thing is that I talked with a few people and people occasionally are",
    "start": "1251210",
    "end": "1256380"
  },
  {
    "text": "confused by which tool does what so if you if you would think that it would be",
    "start": "1256380",
    "end": "1261750"
  },
  {
    "text": "a good if you think it would be a great idea to use Kafka or another more heavy",
    "start": "1261750",
    "end": "1267900"
  },
  {
    "text": "weight system to power a live chat application I recommend to take a look",
    "start": "1267900",
    "end": "1274110"
  },
  {
    "text": "at least at this article that I wrote it's a blog post that I wrote for our technical blog and in it I talked about",
    "start": "1274110",
    "end": "1280830"
  },
  {
    "text": "the difference between different systems like 7q rabbit Kafka also I also",
    "start": "1280830",
    "end": "1286920"
  },
  {
    "text": "recommend to check it out if you don't know which problem is called best by each and if you want to know more about",
    "start": "1286920",
    "end": "1292770"
  },
  {
    "text": "the difference between like pure pub/sub and stuff that is different things that call themselves pop",
    "start": "1292770",
    "end": "1298290"
  },
  {
    "text": "up like Google pumps up for again and",
    "start": "1298290",
    "end": "1303330"
  },
  {
    "text": "again like like even streams and yes bees are important communication",
    "start": "1303330",
    "end": "1308880"
  },
  {
    "text": "mechanisms between different services pops up I think it's equally important when coordinating instances of the same",
    "start": "1308880",
    "end": "1315090"
  },
  {
    "text": "service and it's really a shame that we don't spend much time talking about it regardless whether using Redis pops up",
    "start": "1315090",
    "end": "1321510"
  },
  {
    "text": "or another implementation so we covered two extremes of the space and I am an",
    "start": "1321510",
    "end": "1327690"
  },
  {
    "text": "accent sample then to be closer to fashions the concept itself is not new like everything else in computer science",
    "start": "1327690",
    "end": "1333480"
  },
  {
    "text": "but I wanted to give a cool name to my take on solving it and so I called it",
    "start": "1333480",
    "end": "1338700"
  },
  {
    "text": "memo lock so what's a memo lock and why should you care there's a program called",
    "start": "1338700",
    "end": "1344670"
  },
  {
    "text": "cash stampede that happens when a service is under heavy load and there is occasion miss the cache miss on a",
    "start": "1344670",
    "end": "1349860"
  },
  {
    "text": "popular value Rises your hand if you heard cache Stampede in the past and you think you kinda know what it is okay",
    "start": "1349860",
    "end": "1356160"
  },
  {
    "text": "just a couple fans okay this is gonna be very interesting I think for some of you",
    "start": "1356160",
    "end": "1361280"
  },
  {
    "text": "so normally on a cache miss you generate an updated version of the missing value and then you put it back in the cache",
    "start": "1361280",
    "end": "1367350"
  },
  {
    "start": "1362000",
    "end": "1589000"
  },
  {
    "text": "you don't catch stuff forever I'll catch tend to be a federal so you're fine occasionally with losing what's in your",
    "start": "1367350",
    "end": "1372810"
  },
  {
    "text": "cache but also you timeout you want to expire the stuff in your case in your cache over time because it may be the",
    "start": "1372810",
    "end": "1379890"
  },
  {
    "text": "data that's cash it's not income stale because it changed in my database so you",
    "start": "1379890",
    "end": "1385260"
  },
  {
    "text": "want to recreate it after a while and so these are two big sources of cache miss",
    "start": "1385260",
    "end": "1391650"
  },
  {
    "text": "also sometimes the the amount of data that you can cache is a small subset of",
    "start": "1391650",
    "end": "1397020"
  },
  {
    "text": "your whole data that you have in your main database so you can't cash",
    "start": "1397020",
    "end": "1402480"
  },
  {
    "text": "everything for these reasons you will occasionally encounter cache misses and the problem is that when generating the",
    "start": "1402480",
    "end": "1408840"
  },
  {
    "text": "value is not immediate and in the meantime another instance is trying to do the same thing you end up with",
    "start": "1408840",
    "end": "1415620"
  },
  {
    "text": "duplicate work so in this example you can see that the server instance and the",
    "start": "1415620",
    "end": "1423420"
  },
  {
    "text": "Redis is trying to get through from Redis doesn't find it because that's the case of vocation is the we were",
    "start": "1423420",
    "end": "1430200"
  },
  {
    "text": "mentioning so what it does it goes on the main database tries to select for whatever the the resource it is gets",
    "start": "1430200",
    "end": "1437040"
  },
  {
    "text": "back a query set and then say it saves it into Redis but oh no in the meantime there's another instance that's trying",
    "start": "1437040",
    "end": "1442890"
  },
  {
    "text": "to do the same thing and it just happens that they try to get foo before we were",
    "start": "1442890",
    "end": "1448290"
  },
  {
    "text": "able to write back to rebus in the first instance so what does the other instance do the same thing which results in a",
    "start": "1448290",
    "end": "1454770"
  },
  {
    "text": "bunch of duplicate work under heavy load this behavior makes bad things really go",
    "start": "1454770",
    "end": "1460110"
  },
  {
    "text": "worse because you're bound to have more and more requests piling up for popular values imagine like if your Twitter or",
    "start": "1460110",
    "end": "1465750"
  },
  {
    "text": "one of those social platforms where whenever a big influencer does something everybody rushes in storms because they",
    "start": "1465750",
    "end": "1473010"
  },
  {
    "text": "want to see it so so what happens is that all these requests piling up they",
    "start": "1473010",
    "end": "1479730"
  },
  {
    "text": "cause more and more duplicate work and if you're hitting the database that makes generating the value even slower",
    "start": "1479730",
    "end": "1485760"
  },
  {
    "text": "because you're overpowering the database and that in turn creates a longer alive",
    "start": "1485760",
    "end": "1490920"
  },
  {
    "text": "a larger window in which the stampede could happen so this is like a vicious cycle like the big things go really",
    "start": "1490920",
    "end": "1497280"
  },
  {
    "text": "really bad and I read recently a tweet thread by Nick Craver",
    "start": "1497280",
    "end": "1502880"
  },
  {
    "text": "where he was talking about the basically the same concept but whenever they had",
    "start": "1502880",
    "end": "1509480"
  },
  {
    "text": "particular conditions were met in stock exchange they would have some big keys",
    "start": "1509480",
    "end": "1515790"
  },
  {
    "text": "that needed to be created and moved from the database to the cache and and that",
    "start": "1515790",
    "end": "1522330"
  },
  {
    "text": "was a window of large enough to cause a stampede so how do we break out of some",
    "start": "1522330",
    "end": "1530670"
  },
  {
    "text": "peds there are a few different ways to mitigate this problem some require really good statistical knowledge of",
    "start": "1530670",
    "end": "1537270"
  },
  {
    "text": "your domain so I'm gonna skip them because they are too specific in a way which leaves us with locks you might not",
    "start": "1537270",
    "end": "1547080"
  },
  {
    "text": "like them but locks are the diet of choice or for philosophers out of five and they're really not that bad if you",
    "start": "1547080",
    "end": "1553950"
  },
  {
    "text": "use them with persimmony so here's the idea in toto code it's very basic right",
    "start": "1553950",
    "end": "1560370"
  },
  {
    "text": "so you want to protect the value with a lock so this way you ensure that only one process can hit the database of the",
    "start": "1560370",
    "end": "1566730"
  },
  {
    "text": "kind which prevents basically there's something completely so I try to find",
    "start": "1566730",
    "end": "1572670"
  },
  {
    "text": "food on the cache I I don't find it so before going blindly hitting the",
    "start": "1572670",
    "end": "1578910"
  },
  {
    "text": "database I first tried to grab a lock and I only go on to the database if I",
    "start": "1578910",
    "end": "1584010"
  },
  {
    "text": "find the one that means the lock everybody else doesn't on paper okay",
    "start": "1584010",
    "end": "1590790"
  },
  {
    "start": "1589000",
    "end": "1752000"
  },
  {
    "text": "this sounds simple but if you're done concurrency in the past you know concurrency is never easy there's always",
    "start": "1590790",
    "end": "1596820"
  },
  {
    "text": "small problems that creeping everywhere but let me show you let me show you how",
    "start": "1596820",
    "end": "1603900"
  },
  {
    "text": "to do locks with Redis so okay we're done with pub/sub CLI so I mentioned",
    "start": "1603900",
    "end": "1612990"
  },
  {
    "text": "that Redis is a key value database right the the keys are swings the values can",
    "start": "1612990",
    "end": "1618540"
  },
  {
    "text": "be swings or the data types I'm gonna use strings in this case because they provide you an easy way of doing locking",
    "start": "1618540",
    "end": "1625500"
  },
  {
    "text": "semantics so if I set Flores - hello I",
    "start": "1625500",
    "end": "1631170"
  },
  {
    "text": "was able to set the key I get Loras and I guess I'll go back which is nice I can",
    "start": "1631170",
    "end": "1638340"
  },
  {
    "text": "also delete the key once I delete the key I can't make it get it back anymore",
    "start": "1638340",
    "end": "1643590"
  },
  {
    "text": "make sense but look what I can do it's not set Lauri's hello and X and X and X",
    "start": "1643590",
    "end": "1654120"
  },
  {
    "text": "stands for not existing so it means that the command will only succeed if the key",
    "start": "1654120",
    "end": "1659550"
  },
  {
    "text": "doesn't exist yet so I run it and it works because the key wasn't there and I",
    "start": "1659550",
    "end": "1665340"
  },
  {
    "text": "say that you try to run it again with a different message is high and this time",
    "start": "1665340",
    "end": "1670530"
  },
  {
    "text": "the command the command did not reply okay the set but applied new and there",
    "start": "1670530",
    "end": "1676260"
  },
  {
    "text": "was no side effect because the key still has the old value so with this command if two instances run set and acts at the",
    "start": "1676260",
    "end": "1684150"
  },
  {
    "text": "same time only one will succeed the other one will fail so that what gives you an easy-to-use lock now there's also",
    "start": "1684150",
    "end": "1691140"
  },
  {
    "text": "another problem that locks that this luck would not expire and locks that on the spire are not that",
    "start": "1691140",
    "end": "1698419"
  },
  {
    "text": "useful in the real world so let's check how to combine an X with an expiring",
    "start": "1698419",
    "end": "1707690"
  },
  {
    "text": "mechanism so I'm gonna delete this key and I'm gonna then recreate it with an X",
    "start": "1707690",
    "end": "1714860"
  },
  {
    "text": "and px with an expiring timer so this key now exists for five seconds but",
    "start": "1714860",
    "end": "1722900"
  },
  {
    "text": "after five seconds the key doesn't anymore so this key expires automatically and like and it's",
    "start": "1722900",
    "end": "1729320"
  },
  {
    "text": "nice to have this in one place because then your your worker your service",
    "start": "1729320",
    "end": "1735289"
  },
  {
    "text": "instance could crash could lose connection but that would not compromise the entire system so again like this is",
    "start": "1735289",
    "end": "1742399"
  },
  {
    "text": "this is another like small piece that it's nice to have and makes really things easier when doing something even",
    "start": "1742399",
    "end": "1750919"
  },
  {
    "text": "more easy as concurrency so going back to our simplified code the the promo code the grab lock then becomes",
    "start": "1750919",
    "end": "1757730"
  },
  {
    "start": "1752000",
    "end": "2102000"
  },
  {
    "text": "something along those lines like set lock foo it makes sense to have the",
    "start": "1757730",
    "end": "1763490"
  },
  {
    "text": "value be a unique ID because again you want expiring on your locks because you actually want leases you want to lease",
    "start": "1763490",
    "end": "1770149"
  },
  {
    "text": "not a lock and having a unique ID perhaps doing something is called fencing it basically allows two service",
    "start": "1770149",
    "end": "1778760"
  },
  {
    "text": "instances to understand who is owning the lock because sometimes you not obvious after every start and it's a",
    "start": "1778760",
    "end": "1784399"
  },
  {
    "text": "small teeth of anyway you can learn more about it once you get interested on the",
    "start": "1784399",
    "end": "1789409"
  },
  {
    "text": "subject but the basic idea works and it doesn't require much effort an X Y X 10 and that's fine now yeah actually let me",
    "start": "1789409",
    "end": "1799520"
  },
  {
    "text": "let me go back a bit because damn it I mean I'm skipping the interesting part",
    "start": "1799520",
    "end": "1805730"
  },
  {
    "text": "so what do you do when you can't get a lock and and when you can't get a lock",
    "start": "1805730",
    "end": "1811149"
  },
  {
    "text": "you know that there is another instance that is trying to produce the value in",
    "start": "1811149",
    "end": "1816350"
  },
  {
    "text": "the meantime right so what you want now is a way to get basically a real-time",
    "start": "1816350",
    "end": "1821720"
  },
  {
    "text": "notification from the other instance where the work is done when the value becomes available and at that point so what what",
    "start": "1821720",
    "end": "1830269"
  },
  {
    "text": "is it that you want like you want a pub sub notification basically and what's interesting is that the live",
    "start": "1830269",
    "end": "1839839"
  },
  {
    "text": "notification in this case is precisely what you want because this is like the perfect example for pops up because the",
    "start": "1839839",
    "end": "1846440"
  },
  {
    "text": "notification the notification only makes sense while the subscriber is alive if the subscriber instance dies and reboots",
    "start": "1846440",
    "end": "1854539"
  },
  {
    "text": "and you do boss yours your stock stay on the application stay then the message loses any meaning like the user will",
    "start": "1854539",
    "end": "1860599"
  },
  {
    "text": "have it often a 505 weather 500 error code or whatever already and they will",
    "start": "1860599",
    "end": "1867049"
  },
  {
    "text": "have retried the requests or done something else in the meantime so you do these are the perfect example of",
    "start": "1867049",
    "end": "1873049"
  },
  {
    "text": "messages that you don't want to persist so for the sake of completeness if we",
    "start": "1873049",
    "end": "1878389"
  },
  {
    "text": "subscribe when we can't acquire the lock it means that we need to publish on",
    "start": "1878389",
    "end": "1885409"
  },
  {
    "text": "pub/sub that we're done in the case in the opposite case like when we can when we actually succeed at acquire in the",
    "start": "1885409",
    "end": "1891199"
  },
  {
    "text": "lock so a more complete version of these would be you try to get lock if you do get the lock then you get the value from",
    "start": "1891199",
    "end": "1898369"
  },
  {
    "text": "the database or whatever set it into Redis so that the next time the get",
    "start": "1898369",
    "end": "1903979"
  },
  {
    "text": "succeeds but you also publish on on pub/sub the the value is ready another",
    "start": "1903979",
    "end": "1909559"
  },
  {
    "text": "point the subscribers will be able to receive the notification now",
    "start": "1909559",
    "end": "1914919"
  },
  {
    "text": "if you've done concurrency you know that there's a little bit more but how much",
    "start": "1914919",
    "end": "1921440"
  },
  {
    "text": "am i oversimplifying well I'm not over simplifying that matter actually I'm",
    "start": "1921440",
    "end": "1927469"
  },
  {
    "text": "only omitting two things in this Java code the first one is timeout handling because the the clock expires that's",
    "start": "1927469",
    "end": "1934429"
  },
  {
    "text": "nice but you can subscribe forever on pops up for a notification that potentially could never come because the",
    "start": "1934429",
    "end": "1939829"
  },
  {
    "text": "other inserts are scratched and whatever happened so what you want is basically to time out of the SUBSCRIBE after a",
    "start": "1939829",
    "end": "1946069"
  },
  {
    "text": "while or also maybe producing the value",
    "start": "1946069",
    "end": "1951349"
  },
  {
    "text": "takes a long time so after a while you might want to send a message back to the user to say",
    "start": "1951349",
    "end": "1956580"
  },
  {
    "text": "check back again in a while or stuff like that and the second one the second",
    "start": "1956580",
    "end": "1963960"
  },
  {
    "text": "thing is a thing that I'm omitting is that you need to search for the key again after subscribing to pops up",
    "start": "1963960",
    "end": "1970610"
  },
  {
    "text": "because there is let me show you the code this should make it more clear so this is a more complete code we start by",
    "start": "1970610",
    "end": "1979890"
  },
  {
    "text": "trying to get through in Redis we don't find it if we do find it we're done we return it and we're done if we don't",
    "start": "1979890",
    "end": "1986220"
  },
  {
    "text": "find it we try to acquire the lock if we fail for padlock then we subscribe",
    "start": "1986220",
    "end": "1991860"
  },
  {
    "text": "to pops up but between when we try to grab the lock and we subscribed the",
    "start": "1991860",
    "end": "1997440"
  },
  {
    "text": "other instance might have completed the processing have sent out a notification and we lost it because we are not",
    "start": "1997440",
    "end": "2002750"
  },
  {
    "text": "subscribed yet and if you're doing this in Java between these and these who",
    "start": "2002750",
    "end": "2008150"
  },
  {
    "text": "knows there might be three minutes because of our garbage collection powers or whatever right so what you need to do",
    "start": "2008150",
    "end": "2015650"
  },
  {
    "text": "is basically try to get through again after you subscribe because that way you close the window there might be there",
    "start": "2015650",
    "end": "2022730"
  },
  {
    "text": "are definitely other ways of doing this this is just one approach but this is",
    "start": "2022730",
    "end": "2030410"
  },
  {
    "text": "basically what my implementation does this is another showcase my library after this and all of this is the matter",
    "start": "2030410",
    "end": "2038060"
  },
  {
    "text": "library you have the only thing you have to do is provide do work here that's",
    "start": "2038060",
    "end": "2044660"
  },
  {
    "text": "provided by you everything else is done by the library and the interesting thing",
    "start": "2044660",
    "end": "2050149"
  },
  {
    "text": "is that what you do inside your fraction is up to you I use the idea of caching",
    "start": "2050150",
    "end": "2055490"
  },
  {
    "text": "database query sets as the main example but you could use the same approach and",
    "start": "2055490",
    "end": "2061870"
  },
  {
    "text": "to shield several s functions to as a form of caching Plus maybe quote unquote",
    "start": "2061870",
    "end": "2069200"
  },
  {
    "text": "rate limiting you could use this library to shield this approach to shield",
    "start": "2069200",
    "end": "2075340"
  },
  {
    "text": "machine learning models like deep learning models AI you could use it to she'll like a endpoint that that renders",
    "start": "2075340",
    "end": "2083120"
  },
  {
    "text": "a PDF report and you could for example render the PDF file store it in a CD",
    "start": "2083120",
    "end": "2088829"
  },
  {
    "text": "and saving ready say URL to it so you can get more clever with this and it's",
    "start": "2088829",
    "end": "2094979"
  },
  {
    "text": "really useful for a lot of things other than just straight-up caching of database query sets so this brings me to",
    "start": "2094979",
    "end": "2101640"
  },
  {
    "text": "why I wanted to call this memo lock so memory is memoization plus locking and",
    "start": "2101640",
    "end": "2107430"
  },
  {
    "start": "2102000",
    "end": "2354000"
  },
  {
    "text": "that's not a typo it's memorize - it's not memorization it's memorization if you've never heard",
    "start": "2107430",
    "end": "2114299"
  },
  {
    "text": "the term you can find you can google it and read the description multimedia but long story short memorization is the",
    "start": "2114299",
    "end": "2120420"
  },
  {
    "text": "process of caching function calls and so for example let's say that you have a",
    "start": "2120420",
    "end": "2126359"
  },
  {
    "text": "recursive Fibonacci and you save in a dictionary this realized version of the",
    "start": "2126359",
    "end": "2133410"
  },
  {
    "text": "input that you give to the function and as the key and that's the value the output of the function gives so you",
    "start": "2133410",
    "end": "2138690"
  },
  {
    "text": "start caching function calls and even a recursive Fibonacci which is a nested",
    "start": "2138690",
    "end": "2143880"
  },
  {
    "text": "function that really behaves horribly even that will be good enough to use in",
    "start": "2143880",
    "end": "2150450"
  },
  {
    "text": "practice because every single time you try to records to a previous value will just immediately hit the cache the cache",
    "start": "2150450",
    "end": "2155819"
  },
  {
    "text": "response and you won't need to do the whole recursion every single time so it's a common it's a legitimate common",
    "start": "2155819",
    "end": "2163559"
  },
  {
    "text": "practice then you find also in other places but since we are doing memorization in a distributed context we",
    "start": "2163559",
    "end": "2170069"
  },
  {
    "text": "also need locking because otherwise we would not know when two instances are trying to do the same thing at the same",
    "start": "2170069",
    "end": "2175229"
  },
  {
    "text": "time so this is how I came up with the name the library is on github my",
    "start": "2175229",
    "end": "2181109"
  },
  {
    "text": "nickname on github is Christophe - IT [Music] the repository is all right this memory",
    "start": "2181109",
    "end": "2187619"
  },
  {
    "text": "lock I have a c-sharp implementation here inside a demo ask that core project",
    "start": "2187619",
    "end": "2194219"
  },
  {
    "text": "and I also have a go implementation and the next thing is that the two implementations can interoperate because they call they communicate through",
    "start": "2194219",
    "end": "2201089"
  },
  {
    "text": "pub/sub in Redis so before I show you",
    "start": "2201089",
    "end": "2206430"
  },
  {
    "text": "the code I have a couple of things more to say let me see how I'm doing on time",
    "start": "2206430",
    "end": "2214219"
  },
  {
    "text": "ok so this is the 2018 Stack Overflow survey and like last year where this has",
    "start": "2214219",
    "end": "2220079"
  },
  {
    "text": "been one of the most loved database seeing that many of you raised their hands so that really worked my heart",
    "start": "2220079",
    "end": "2226320"
  },
  {
    "text": "because occasionally I go to conferences and I ask people do you know write this and a lot of people don't really know",
    "start": "2226320",
    "end": "2231640"
  },
  {
    "text": "anything about Fridays and they just know that it's a cash but how does a cash get on the top of the stack",
    "start": "2231640",
    "end": "2238630"
  },
  {
    "text": "overflow survey I mean it's nice to make that cash makes your service more",
    "start": "2238630",
    "end": "2243910"
  },
  {
    "text": "performant and maybe saves your ass when there's a bad line but I don't think",
    "start": "2243910",
    "end": "2249790"
  },
  {
    "text": "that's enough to end to get database on the top of this service so a lot of",
    "start": "2249790",
    "end": "2256119"
  },
  {
    "text": "people saying that Redis is fast which is yes it's nice but the reason why I think it's a lot of people love it if so",
    "start": "2256119",
    "end": "2261550"
  },
  {
    "text": "and I'm saying this in case you've never use Reds and you might want to look into it more is because it's a tool that",
    "start": "2261550",
    "end": "2266740"
  },
  {
    "text": "allows you to really solve easily these kind of coordination problems and also",
    "start": "2266740",
    "end": "2272200"
  },
  {
    "text": "because it's fast but really the I think the more important part is like helping you really solved occasionally the",
    "start": "2272200",
    "end": "2278950"
  },
  {
    "text": "occasional tricky problem that you encounter and one point about red is",
    "start": "2278950",
    "end": "2285880"
  },
  {
    "text": "that you can find for example if you read the manifesto inside the Redis repository on github there's also the",
    "start": "2285880",
    "end": "2291040"
  },
  {
    "text": "Redis manifesto which I think it's an interesting read for developer and the point is that Redis is all about",
    "start": "2291040",
    "end": "2296260"
  },
  {
    "text": "simplicity which doesn't mean making things easy it means I'm making sure that you don't",
    "start": "2296260",
    "end": "2302560"
  },
  {
    "text": "make things more complicated than they have to be so which is important for example in the case of doing non easy",
    "start": "2302560",
    "end": "2308680"
  },
  {
    "text": "things like in currency so for example you've seen that I had to do I had to",
    "start": "2308680",
    "end": "2314020"
  },
  {
    "text": "write some code I have to think about the problem it wasn't like a immediate complete vertical solution but solve it",
    "start": "2314020",
    "end": "2320460"
  },
  {
    "text": "in one line but at the same time it's not super complicated you can reason about it it takes some effort but then",
    "start": "2320460",
    "end": "2327339"
  },
  {
    "text": "you have a complete understanding or what your system is doing which is something that you really want to have",
    "start": "2327339",
    "end": "2333670"
  },
  {
    "text": "in the things that I build so the philosophy the one of the philosophies",
    "start": "2333670",
    "end": "2339010"
  },
  {
    "text": "already is to basically give you small octagonal pieces and then it's up to you to combine them so like strings with the",
    "start": "2339010",
    "end": "2345609"
  },
  {
    "text": "locking semantics plus pops up you can buy them and you get the memory and this",
    "start": "2345609",
    "end": "2352240"
  },
  {
    "text": "is how you get basically matter ability speed are all the stuff second thing before the code actually I",
    "start": "2352240",
    "end": "2361170"
  },
  {
    "text": "think this still counts as part of the first I showed you this bar there should be like the spectrum of all the",
    "start": "2361170",
    "end": "2367050"
  },
  {
    "text": "coordination problems I showed you such as memory and some kind of our society",
    "start": "2367050",
    "end": "2372990"
  },
  {
    "text": "to basically as an example of applications that need to communicate in real time like collaborative to some",
    "start": "2372990",
    "end": "2378540"
  },
  {
    "text": "types of collaborative tools what's in the black space between memory and our",
    "start": "2378540",
    "end": "2384360"
  },
  {
    "text": "sister church and yes is that I have no idea so this is basically the result of",
    "start": "2384360",
    "end": "2390330"
  },
  {
    "text": "I don't know just me thinking about the things that I ain't wanted in my life I've never like found a book that bit",
    "start": "2390330",
    "end": "2396750"
  },
  {
    "text": "salty click offers all this stuff I'm sure there must be some piece of literature somewhere that cover something and I also personally found a",
    "start": "2396750",
    "end": "2403890"
  },
  {
    "text": "couple more examples that weren't I think interesting enough to put in the presentation but there is there are a",
    "start": "2403890",
    "end": "2410610"
  },
  {
    "text": "lot of things I think in there that we just see and maybe don't recognize so one rule of thumb one thing that I",
    "start": "2410610",
    "end": "2417540"
  },
  {
    "text": "notice is that animation is already but occasionally you find the services is",
    "start": "2417540",
    "end": "2422700"
  },
  {
    "text": "annoying to operate and you can't really put your finger on why and like sticky sessions are something that now we're",
    "start": "2422700",
    "end": "2428340"
  },
  {
    "text": "becoming more and more aware that if you if your service needs the key sections",
    "start": "2428340",
    "end": "2433440"
  },
  {
    "text": "there's something that you might want to improve in that and so the idea is that if you find a service that is annoying",
    "start": "2433440",
    "end": "2439590"
  },
  {
    "text": "to operate maybe that's an indicator that the coordination wasn't handled",
    "start": "2439590",
    "end": "2445590"
  },
  {
    "text": "properly when developing it so something to think about",
    "start": "2445590",
    "end": "2450859"
  },
  {
    "text": "okay now commercial break before the the code I work for ready slabs that's the",
    "start": "2451220",
    "end": "2456330"
  },
  {
    "text": "company basically behind radius we are the home of Redis we sponsor the",
    "start": "2456330",
    "end": "2461490"
  },
  {
    "text": "open-source development because Redis is an open source database as a assume most of you should know and we are also",
    "start": "2461490",
    "end": "2469620"
  },
  {
    "text": "hiring by the way if you're like reddy's let me know or at least go on the",
    "start": "2469620",
    "end": "2475140"
  },
  {
    "text": "website the company sells right is enterprise which Israelis plus stuff that enterprises like that try this",
    "start": "2475140",
    "end": "2481830"
  },
  {
    "text": "doesn't provide out of the box and you can get res enterprise from Prime or you can have it in kubernetes or all",
    "start": "2481830",
    "end": "2490030"
  },
  {
    "text": "the flavors openness and managing yourself or which might be a good idea you could have like experts run it for",
    "start": "2490030",
    "end": "2497380"
  },
  {
    "text": "you like us and in that case you can have it like on a SS Asia GCP it's",
    "start": "2497380",
    "end": "2504670"
  },
  {
    "text": "everywhere we can put it in your a PC we manage it and you have a tennessee's so",
    "start": "2504670",
    "end": "2509880"
  },
  {
    "text": "the deployment is never a problem okay now on to the code in the day so to show",
    "start": "2509880",
    "end": "2520240"
  },
  {
    "text": "you the code I need to move this yeah",
    "start": "2520240",
    "end": "2529589"
  },
  {
    "text": "okay let me see if it's this is big enough yeah I think yes okay so I'm",
    "start": "2535079",
    "end": "2543130"
  },
  {
    "text": "gonna show you the interface again it's not really involved so first of all I associate here there's my new instance",
    "start": "2543130",
    "end": "2551500"
  },
  {
    "text": "of Redis memo lock which is a simple class it's in another files like a couple hundred lines of code I think not",
    "start": "2551500",
    "end": "2557200"
  },
  {
    "text": "much the only thing you have to pass through it in this case is a instance of",
    "start": "2557200",
    "end": "2563349"
  },
  {
    "text": "the of the stock exchange where this client and the string that represents the a namespace for the objects that you",
    "start": "2563349",
    "end": "2571539"
  },
  {
    "text": "want to catch so to group them together and make it easier make it easier to inspect what's going on with your Redis instance",
    "start": "2571539",
    "end": "2577599"
  },
  {
    "text": "so here's there's a sample handler and",
    "start": "2577599",
    "end": "2583299"
  },
  {
    "text": "in in this case what's happening is the idea is I want to get the resource named ID which I'm getting from the parameter",
    "start": "2583299",
    "end": "2590950"
  },
  {
    "text": "from the URL if again if it's in Redis then great I get the result immediately",
    "start": "2590950",
    "end": "2596049"
  },
  {
    "text": "back from the library and I'm done but in case the the value is not there you",
    "start": "2596049",
    "end": "2601180"
  },
  {
    "text": "also have to provide a lambda function that whose job is basically to generate",
    "start": "2601180",
    "end": "2607900"
  },
  {
    "text": "that value and then return it so that the library can store it in write this and return it to the color and so in",
    "start": "2607900",
    "end": "2613990"
  },
  {
    "text": "this case I'm not doing anything useful I'm just printing a logline which says yeah and",
    "start": "2613990",
    "end": "2621850"
  },
  {
    "text": "I'm working hard then it's going to sleep for three seconds and only then it's gonna return the value which is",
    "start": "2621850",
    "end": "2627590"
  },
  {
    "text": "again just a dump string but that's just because it's it's a demo so let me show",
    "start": "2627590",
    "end": "2632690"
  },
  {
    "text": "you this stuff working of net and so",
    "start": "2632690",
    "end": "2643370"
  },
  {
    "text": "while Donna loads I prepared here I think it was simple",
    "start": "2643370",
    "end": "2651770"
  },
  {
    "text": "slit Theory slash [Applause]",
    "start": "2651770",
    "end": "2658310"
  },
  {
    "text": "yeah okay so these are these represents two o'clock they represent two clients",
    "start": "2658580",
    "end": "2663590"
  },
  {
    "text": "I'm gonna run the same I'm gonna hit the same endpoint more or less at the same",
    "start": "2663590",
    "end": "2669350"
  },
  {
    "text": "time and what you're gonna see is that only one of the two calls triggers the lock line in the bottom window because",
    "start": "2669350",
    "end": "2677210"
  },
  {
    "text": "only one of the two calls is gonna do the actual work of producing the video the other one is gonna wait on pops up",
    "start": "2677210",
    "end": "2682670"
  },
  {
    "text": "for the result to come and you also see that the result comes at the same time for both basically oops ah let me this",
    "start": "2682670",
    "end": "2696010"
  },
  {
    "text": "again why am I getting this okay that's great weird issues tonight oh my god",
    "start": "2696160",
    "end": "2705650"
  },
  {
    "text": "yeah thank you bad memory thank you guy see oh cool",
    "start": "2705650",
    "end": "2718250"
  },
  {
    "text": "okay you know what I'm also gonna flush the database so I can properly they know",
    "start": "2718250",
    "end": "2725240"
  },
  {
    "text": "this okay so we now the database has been emptied so it's like a clean stage",
    "start": "2725240",
    "end": "2730640"
  },
  {
    "text": "let me try this again oh okay and it worked so the first lock",
    "start": "2730640",
    "end": "2737780"
  },
  {
    "text": "line at the bottom is for the previous call the second line is from this correct hole and both got the same query",
    "start": "2737780",
    "end": "2743600"
  },
  {
    "text": "the query search result at the same time but only one of the two triggered work which is nice this is the simple",
    "start": "2743600",
    "end": "2751640"
  },
  {
    "start": "2748000",
    "end": "2959000"
  },
  {
    "text": "interface so I also had a bit more of intelligence to to this thing so I added",
    "start": "2751640",
    "end": "2758900"
  },
  {
    "text": "this another example endpoint where the idea is like I'm building a report a PDF",
    "start": "2758900",
    "end": "2764210"
  },
  {
    "text": "report of something but I don't know how long it will take so it would be nice to be able to extend the lock in case I",
    "start": "2764210",
    "end": "2771050"
  },
  {
    "text": "discover that I need more time so this is the same interface except that if instead you call this overloaded method",
    "start": "2771050",
    "end": "2778640"
  },
  {
    "text": "where the async function takes a parameter the parameter that the library will provide",
    "start": "2778640",
    "end": "2783890"
  },
  {
    "text": "to your function is a sync function that basically renews the lock so it allows",
    "start": "2783890",
    "end": "2790010"
  },
  {
    "text": "you to for more time and it's like because then you can use it and if a call this is",
    "start": "2790010",
    "end": "2796069"
  },
  {
    "text": "gonna work like the previous example but in this case it will allow you to again extend the lock and it will throw out an",
    "start": "2796069",
    "end": "2803359"
  },
  {
    "text": "error if the lock is fight in the meantime so even ensure that your lock renewal kind of makes sense it's not",
    "start": "2803359",
    "end": "2808670"
  },
  {
    "text": "like you're gonna out of nowhere still a lock and like produce cap okay in this",
    "start": "2808670",
    "end": "2814430"
  },
  {
    "text": "example down here I'm gonna do the same but in this case I'm gonna basically delay to match the call to renew and in",
    "start": "2814430",
    "end": "2823910"
  },
  {
    "text": "this in this example if you're on if you will basically see that it returns a timeout exception and very trigger",
    "start": "2823910",
    "end": "2831559"
  },
  {
    "text": "another thing that I did which is I think interesting and I'm gonna demo",
    "start": "2831559",
    "end": "2837619"
  },
  {
    "text": "this is yes that's this one so here I'm",
    "start": "2837619",
    "end": "2846700"
  },
  {
    "text": "the estimate core application is launching a Python program and the",
    "start": "2846700",
    "end": "2853369"
  },
  {
    "text": "Python program is not gonna it's gonna be launched as a separate process it's not even gonna communicate anything back",
    "start": "2853369",
    "end": "2859670"
  },
  {
    "text": "to the dotnet application because they will communicate through pops up so let me show you the code in in the Python",
    "start": "2859670",
    "end": "2866150"
  },
  {
    "text": "application so it's a again it's a very",
    "start": "2866150",
    "end": "2871609"
  },
  {
    "text": "simple example but the idea is that I'm using the NL k library it's like natural",
    "start": "2871609",
    "end": "2876829"
  },
  {
    "text": "language toolkit to do standing over word just yeah it's an example and once",
    "start": "2876829",
    "end": "2883819"
  },
  {
    "text": "I'm done these application knows how to basically use the same name in ski naming scheme for resources and pops of",
    "start": "2883819",
    "end": "2891829"
  },
  {
    "text": "names and it's going to basically notify the result through pops up so in this",
    "start": "2891829",
    "end": "2897289"
  },
  {
    "text": "way you don't even have to do all the annoying inter processing communication through as the STD out or whatever let",
    "start": "2897289",
    "end": "2905690"
  },
  {
    "text": "me see if we can make this work so it's called X slash stammer",
    "start": "2905690",
    "end": "2912308"
  },
  {
    "text": "I let me think of a word that we can",
    "start": "2915010",
    "end": "2921609"
  },
  {
    "text": "stand like I like this word like this",
    "start": "2921609",
    "end": "2927550"
  },
  {
    "text": "one because it's one water has my name my whole name in it there aren't that many especially in Italian I think in",
    "start": "2927550",
    "end": "2934180"
  },
  {
    "text": "Italian so fall touristic in Italian is folkloristic oh and that's I think the only Italian language has my name in it",
    "start": "2934180",
    "end": "2939510"
  },
  {
    "text": "this small video for tourists okay so as you can see we launched the Python",
    "start": "2939510",
    "end": "2946390"
  },
  {
    "text": "program through the c-sharp program and it worked no annoying sedl stuff and",
    "start": "2946390",
    "end": "2951490"
  },
  {
    "text": "what now is a process could very well be a lambda function somewhere serverless",
    "start": "2951490",
    "end": "2956859"
  },
  {
    "text": "function so yeah it makes the interoperability nice because the",
    "start": "2956859",
    "end": "2962410"
  },
  {
    "text": "integration surface is relatively small and reduces be quitters and and and",
    "start": "2962410",
    "end": "2967930"
  },
  {
    "text": "that's automatically propagated broadcasted through your whole instances in case you're again scaling out and",
    "start": "2967930",
    "end": "2975070"
  },
  {
    "text": "using a distributed system so that's the main part of the demo I have one last",
    "start": "2975070",
    "end": "2980140"
  },
  {
    "text": "example because I want to stress out how nice the integration surfaces and guy if you to mind helped me out I have a damn",
    "start": "2980140",
    "end": "2988030"
  },
  {
    "text": "joke and the routine I like to show you I think we still have yeah we do have enough time yeah I think if you send",
    "start": "2988030",
    "end": "2995770"
  },
  {
    "text": "here I think the microphones will be enabled so you know how some AI startups",
    "start": "2995770",
    "end": "3001619"
  },
  {
    "text": "they want to launch a product but they don't have already figured out the AI part yet so what do you do occasionally",
    "start": "3001619",
    "end": "3008190"
  },
  {
    "text": "is that they have Mechanical Turk setup going on right so they they sell to you the a I thing but the AI is actually its",
    "start": "3008190",
    "end": "3015150"
  },
  {
    "text": "I but no but not really a so it's intelligent not much artificial right very genuine artificial oh I think some",
    "start": "3015150",
    "end": "3023040"
  },
  {
    "text": "would say it's it's not just AI it's also like genetic programming right my",
    "start": "3023040",
    "end": "3031380"
  },
  {
    "text": "your mechanical American yeah so let me launch in the launch the joke",
    "start": "3031380",
    "end": "3041300"
  },
  {
    "text": "okay right greetings humans it is I the great dot",
    "start": "3041720",
    "end": "3047970"
  },
  {
    "text": "knock or run time a task is bestowed upon you determine the following how",
    "start": "3047970",
    "end": "3053310"
  },
  {
    "text": "much wood would a woodchuck chuck if a woodchuck could chuck wood provide the correct answer in freedom units you may",
    "start": "3053310",
    "end": "3060570"
  },
  {
    "text": "not proceed okay",
    "start": "3060570",
    "end": "3066710"
  },
  {
    "text": "I'd say three cords three cords cords",
    "start": "3068250",
    "end": "3074070"
  },
  {
    "text": "yeah okay so again you saw how this thing works so",
    "start": "3074070",
    "end": "3081680"
  },
  {
    "text": "it's the integration is surface is so small I can just like type publish to",
    "start": "3081680",
    "end": "3088050"
  },
  {
    "text": "ext that there's many scheme that unite not you need to know but I set that up the name is team could be simpler but",
    "start": "3088050",
    "end": "3095040"
  },
  {
    "text": "you can do it whatever you want with it in this case I do ext slash no teef call on joke I think",
    "start": "3095040",
    "end": "3105120"
  },
  {
    "text": "and this is where I would produce the value but maybe I want to leave the dock",
    "start": "3105120",
    "end": "3112170"
  },
  {
    "text": "for hanging and I want to get the timeout because again there was a recent",
    "start": "3112170",
    "end": "3118920"
  },
  {
    "text": "blog post by our mean Roger I hope I pronounced the surname correctly probably not but about how it's",
    "start": "3118920",
    "end": "3125400"
  },
  {
    "text": "important to do back drop back pressure correctly in this kind of libraries and",
    "start": "3125400",
    "end": "3132240"
  },
  {
    "text": "yeah without trigger and all segmentation faults for our doesn't occur engine but",
    "start": "3132240",
    "end": "3139500"
  },
  {
    "text": "let me trigger the computation again this time we're gonna provide the the",
    "start": "3139500",
    "end": "3144780"
  },
  {
    "text": "value correctly set three chords three chords yeah",
    "start": "3144780",
    "end": "3149330"
  },
  {
    "text": "I don't actually know how much Court is I just know that fire was measured in it's okay I need quotes as a space",
    "start": "3150540",
    "end": "3164030"
  },
  {
    "text": "you recorded three chords as results I trust your answer is correct for I am the mighty dot in that Court run time",
    "start": "3166820",
    "end": "3172580"
  },
  {
    "text": "and I do not intend to check thank you very much okay if anybody has a question",
    "start": "3172580",
    "end": "3186080"
  },
  {
    "text": "that they want to ask while I'm here raise your hand otherwise I'm gonna",
    "start": "3186080",
    "end": "3191420"
  },
  {
    "text": "stick around and you can ask afterwards once I sit down Oh down there you'll have to speak very loudly yeah thank you",
    "start": "3191420",
    "end": "3203090"
  },
  {
    "text": "I repeat yeah I can show you",
    "start": "3203090",
    "end": "3225380"
  },
  {
    "text": "so in general the sorry let me repeat the question the question was the set",
    "start": "3225380",
    "end": "3231860"
  },
  {
    "text": "can also has the NX option that makes the command fail if the keys are",
    "start": "3231860",
    "end": "3237890"
  },
  {
    "text": "existing and the question was is there like a version of the lead that tells",
    "start": "3237890",
    "end": "3243230"
  },
  {
    "text": "you when you're trying to delete something that is not there an important error so the answer is that yes this kind of reporting I think is everywhere",
    "start": "3243230",
    "end": "3250100"
  },
  {
    "text": "I read this you always can inspect the result of a command that you send the slight philosophy difference is that",
    "start": "3250100",
    "end": "3257900"
  },
  {
    "text": "these things usually are not reported as errors so they they report other statuses let me show you so here I'm in",
    "start": "3257900",
    "end": "3264500"
  },
  {
    "text": "released July and I said that Lori's -",
    "start": "3264500",
    "end": "3270530"
  },
  {
    "text": "hello and then I delete Flores if I delete Lori's again you can see that the",
    "start": "3270530",
    "end": "3276920"
  },
  {
    "text": "first time I got a one the second time I go to 0 1 and 0 I like true and false this is gonna by the way be improved in",
    "start": "3276920",
    "end": "3283100"
  },
  {
    "text": "ready 6 so you're gonna get like a proper true and a proper false because there is a new version of the protocol",
    "start": "3283100",
    "end": "3288920"
  },
  {
    "text": "but regardless of these small details the general philosophy already is not to report errors but to report the state in",
    "start": "3288920",
    "end": "3296540"
  },
  {
    "text": "the outcome of a command so for example if you try there are also lists and other sets and other data",
    "start": "3296540",
    "end": "3303840"
  },
  {
    "text": "types and if you try to add something to a set that doesn't exist credits will implicitly assume that you want to start",
    "start": "3303840",
    "end": "3311580"
  },
  {
    "text": "from an empty set and then add the value it if you try to increase the number for example let me we deleted Laurie's life",
    "start": "3311580",
    "end": "3317880"
  },
  {
    "text": "right let's say that now I want to increase the number stored in Laurie's",
    "start": "3317880",
    "end": "3323510"
  },
  {
    "text": "the key doesn't exist but the assumption is that since doesn't exist we can assume it should default to zero and",
    "start": "3323510",
    "end": "3329940"
  },
  {
    "text": "then we move from there so yeah that's philosophy okay any other question for",
    "start": "3329940",
    "end": "3337740"
  },
  {
    "text": "the volume I think not so we don't hear thank you very much again [Applause]",
    "start": "3337740",
    "end": "3344219"
  }
]