[
  {
    "text": "good morning wow I was trying to be energetic but yeah um happy to see so",
    "start": "5200",
    "end": "11000"
  },
  {
    "text": "many people this early in the morning um I think there were a couple beer too much last night especially like the the",
    "start": "11000",
    "end": "18560"
  },
  {
    "text": "port with gin or tonic thingy which I discovered very late in the evening",
    "start": "18560",
    "end": "24760"
  },
  {
    "text": "um recently I'm a consultant and recently I was hired by a client",
    "start": "24760",
    "end": "30679"
  },
  {
    "text": "and at some point he asked me and he said like Dennis you know what we have this something running in production we",
    "start": "30679",
    "end": "36760"
  },
  {
    "text": "don't know exactly what it is um it's a net process and you seem to know a lot about the net and C would you mind",
    "start": "36760",
    "end": "43920"
  },
  {
    "text": "taking a look at it because it seems to be crashing all the time we get we get remarks from some kind of external",
    "start": "43920",
    "end": "49840"
  },
  {
    "text": "supplier I thought yeah sure of course I love Legacy code I'm addicted to it so I need my daily dose so uh and this is a",
    "start": "49840",
    "end": "57800"
  },
  {
    "text": "true story I started to check out like what was it like like where is it so I needed to get access to a machine in",
    "start": "57800",
    "end": "63720"
  },
  {
    "text": "production which is typically very difficult because you have to go through an infrastructure Department which are",
    "start": "63720",
    "end": "68920"
  },
  {
    "text": "very protective of their production environments and uh there indeed there was a pro a process running it was",
    "start": "68920",
    "end": "75640"
  },
  {
    "text": "actually not a surface it was a Windows forms application running in desktop mode and all the logging statements were",
    "start": "75640",
    "end": "82720"
  },
  {
    "text": "printed in like a big text box there was no log file nothing okay cool I mean",
    "start": "82720",
    "end": "87880"
  },
  {
    "text": "I've seen my share of things 27 years experience um so I was trying to look",
    "start": "87880",
    "end": "93200"
  },
  {
    "text": "okay let's look at the code base so where's the code everybody looked at me like I mean you're the consultant you",
    "start": "93200",
    "end": "98640"
  },
  {
    "text": "know you're the specialist you know where's I don't know where do where do you keep your C this is and I'm not",
    "start": "98640",
    "end": "104560"
  },
  {
    "text": "joking guys this is really true so they said like it's probably in Azure devops",
    "start": "104560",
    "end": "109960"
  },
  {
    "text": "okay cool wasn't in Azure devops then where is it oh it could actually be on the network drive said seriously so I",
    "start": "109960",
    "end": "118119"
  },
  {
    "text": "went to the network drive well took took a couple of days to figure out which directory I should be looking for",
    "start": "118119",
    "end": "123880"
  },
  {
    "text": "because nobody was mounting that network drive anymore turns out that was a folder which had five copies of the same",
    "start": "123880",
    "end": "131720"
  },
  {
    "text": "source files you know plus two of them called backup. zip dot two you know",
    "start": "131720",
    "end": "137400"
  },
  {
    "text": "between brackets do zip yeah and then I have to figure out like okay how how am",
    "start": "137400",
    "end": "142640"
  },
  {
    "text": "I going to what version of the codebase is there so this is the kind of stuff that I run into I I I hope you haven't",
    "start": "142640",
    "end": "149319"
  },
  {
    "text": "run into that uh I'm afraid you did actually because yeah this is the reality of our software development the",
    "start": "149319",
    "end": "154959"
  },
  {
    "text": "fact that you're all here means that you all have to deal with brown field scenario we all love Green Field stuff",
    "start": "154959",
    "end": "160959"
  },
  {
    "text": "um but yeah I happen to do that so I'm going to share in the remainder of this",
    "start": "160959",
    "end": "166200"
  },
  {
    "text": "uh session my tools practices and principles basically my the way I approach these kind of problems and I",
    "start": "166200",
    "end": "172640"
  },
  {
    "text": "hope it's interesting enough for you I try to keep it interactive I like that so that's me doing a lot of stuff for 26",
    "start": "172640",
    "end": "179360"
  },
  {
    "text": "years turned 50 recently I don't know why I keep repeating that apparently it's a thing for me uh and I basically",
    "start": "179360",
    "end": "185120"
  },
  {
    "text": "help clients or companies you know improve the entire software development life cycle from ID to production I",
    "start": "185120",
    "end": "190959"
  },
  {
    "text": "challenge everything I that's really annoying sometimes you know like why why do you have your source code in a",
    "start": "190959",
    "end": "196640"
  },
  {
    "text": "network drive for Network like I don't know but yeah so I change everything I",
    "start": "196640",
    "end": "201680"
  },
  {
    "text": "uh I challenge everything I um yeah I'm the annoying person that you pay for uh",
    "start": "201680",
    "end": "207720"
  },
  {
    "text": "I have a Blog I have coding gu guid lines for 20 years some open source project any net developers here just",
    "start": "207720",
    "end": "213680"
  },
  {
    "text": "checking oh with the rest Architects managers product owners Architects I",
    "start": "213680",
    "end": "219200"
  },
  {
    "text": "assume yeah and I have a little Library which is reasonably popular in the net",
    "start": "219200",
    "end": "224360"
  },
  {
    "text": "space um who cares if you create a nice picture or you know put something on",
    "start": "224360",
    "end": "229680"
  },
  {
    "text": "social media about my talk can be nasty can be public you can actually win a oneye license for Jeb brains Rider um",
    "start": "229680",
    "end": "236879"
  },
  {
    "text": "these are my handles if you care oh and I'm an MVP which means nothing other than that get free licenses for",
    "start": "236879",
    "end": "243920"
  },
  {
    "text": "Microsoft um so how does this work well I try to somehow F you know picture uh",
    "start": "243920",
    "end": "250879"
  },
  {
    "text": "uh the way my brain works and my brain is very let's say chaotic uh although",
    "start": "250879",
    "end": "255959"
  },
  {
    "text": "I'm a pretty structured person but it's it's really like a creative process but",
    "start": "255959",
    "end": "261040"
  },
  {
    "text": "I try to create a picture so what happens typically is I try to understand the production environment that's what it starts with and we're going to cover",
    "start": "261040",
    "end": "267759"
  },
  {
    "text": "every every little what is it Circle I'm going to cover this in a separate set of slides so don't worry but this on the",
    "start": "267759",
    "end": "273240"
  },
  {
    "text": "high level understand the production enironment what's running there where is it running what is the actual production",
    "start": "273240",
    "end": "278520"
  },
  {
    "text": "environment is this the production environment is this maybe an acceptance environment or a development environment",
    "start": "278520",
    "end": "284039"
  },
  {
    "text": "is there another environment that is also being used that nobody knows about that's that's useful information then",
    "start": "284039",
    "end": "289759"
  },
  {
    "text": "understand the code base which isn't challenge because writing code is hard understanding other people's code is",
    "start": "289759",
    "end": "295280"
  },
  {
    "text": "even harder right understanding my code it's impossible um then I find that code I love deleting",
    "start": "295280",
    "end": "302880"
  },
  {
    "text": "that code the best day at my job is the day where I can actually delete code I",
    "start": "302880",
    "end": "308759"
  },
  {
    "text": "don't know is that weird you know anybody has that shares that feeling yeah cool see yes when you're young and",
    "start": "308759",
    "end": "316160"
  },
  {
    "text": "you're just graduating you love to create code I just delete it awesome and I can I can send an invoice to my",
    "start": "316160",
    "end": "322520"
  },
  {
    "text": "clients and say I delete the code for you here's an invoice yeah okay then I build a safety net because I don't like",
    "start": "322520",
    "end": "329560"
  },
  {
    "text": "to touch existing code without some kind of feeling that I didn't break anything I want to I want to remain confident",
    "start": "329560",
    "end": "336160"
  },
  {
    "text": "that I that everything still works as it did before or it didn't work as it did before um then I start improve",
    "start": "336160",
    "end": "341919"
  },
  {
    "text": "deployability because I don't actually want to copy files from a net drive onto a surfer then fiddle around by hand",
    "start": "341919",
    "end": "349400"
  },
  {
    "text": "doesn't make sense it's 2023 it's almost 2024 and then of course I'm going to improve the quality and maybe even",
    "start": "349400",
    "end": "355800"
  },
  {
    "text": "improve the design because code is easy design is more complicated did what's",
    "start": "355800",
    "end": "360880"
  },
  {
    "text": "next improve the architecture sure simple as that and of course this is not a waterfall approach just like I told",
    "start": "360880",
    "end": "368160"
  },
  {
    "text": "yesterday I said that about tdd I go through these Cycles a couple of times and you should be doing that because you",
    "start": "368160",
    "end": "374199"
  },
  {
    "text": "keep maintaining your code base if it's production code if you're being successful with that code then you use this stuff so let's start with the",
    "start": "374199",
    "end": "381400"
  },
  {
    "text": "production environment I'll put the slides online so if you don't need to make pictures oh no you want to run the win the license of course yeah so this",
    "start": "381400",
    "end": "388639"
  },
  {
    "text": "is lit you already did getting a remote desktop session to that environment if it's windows or an SSH session if it's",
    "start": "388639",
    "end": "394680"
  },
  {
    "text": "Linux get all the executables dlls log files literally it means I have to send",
    "start": "394680",
    "end": "400080"
  },
  {
    "text": "a a request to the infra Department through top desk or some kind of you know issue tracking can you get me all",
    "start": "400080",
    "end": "406240"
  },
  {
    "text": "the uh production environment files and then they come back like what do you need yeah AIT DLS and then what they",
    "start": "406240",
    "end": "412199"
  },
  {
    "text": "give you back AIT and DLS now but I also need log files there's no log files there there must be log files um can you",
    "start": "412199",
    "end": "418960"
  },
  {
    "text": "just give me remote desktop session yeah it's not in the same folder it's actually on a different drive but guys you're infra you know your environment",
    "start": "418960",
    "end": "425599"
  },
  {
    "text": "you know if there's folders in there that you don't recognize then I want those I want to have them configuration",
    "start": "425599",
    "end": "431520"
  },
  {
    "text": "files of course they say yeah but that's production data there's passwords in there I don't care I need to solve that",
    "start": "431520",
    "end": "436840"
  },
  {
    "text": "problem I need everything you have okay that's the first step then that's interesting I'm going to compare the",
    "start": "436840",
    "end": "443199"
  },
  {
    "text": "binaries in this case in net with Source control given that you actually found Source control how do I do that I don't",
    "start": "443199",
    "end": "450680"
  },
  {
    "text": "know go to the repository which is one way of doing it I'm also this this I've used this a lot recently do Peak or one",
    "start": "450680",
    "end": "457479"
  },
  {
    "text": "of the uh tools that you can use to decompile c. net code I'm literally then",
    "start": "457479",
    "end": "462560"
  },
  {
    "text": "comparing the code with the one that's on my network drive remember that I told you earlier to see especially and that's",
    "start": "462560",
    "end": "468680"
  },
  {
    "text": "what I'm looking for is are things commented out is there code that's commented out and I want to know was it",
    "start": "468680",
    "end": "473879"
  },
  {
    "text": "also commented out in production or it's actually there which is scary because you'll find stuff that why my God what",
    "start": "473879",
    "end": "480759"
  },
  {
    "text": "did this person do did he actually learn to program well he must have because it's in production but now what what if",
    "start": "480759",
    "end": "487599"
  },
  {
    "text": "you do you have actually five different versions of the source code well it's a nice trick I learned from a colleague",
    "start": "487599",
    "end": "492840"
  },
  {
    "text": "which is completely obvious if I tell you is to put one folder in Source control commit then copy the contents of",
    "start": "492840",
    "end": "499080"
  },
  {
    "text": "the other folder in it and see if there's any difference yeah it's actually pretty neat why not uh the",
    "start": "499080",
    "end": "504479"
  },
  {
    "text": "scary part is if you eventually discover well you're first happy because you discover that four copies of the same",
    "start": "504479",
    "end": "509680"
  },
  {
    "text": "Source control Source FW were the same there were no changes but then there was the fifth and suddenly you find all",
    "start": "509680",
    "end": "515919"
  },
  {
    "text": "kinds of new changes but that apparently never reached production uh well that's",
    "start": "515919",
    "end": "522560"
  },
  {
    "text": "a day in the life of a consultant but it's a nice trick um then of course you start to look at log files and crash",
    "start": "522560",
    "end": "528800"
  },
  {
    "text": "reports like you know did it crash what kind of logging and then you see like warnings all over the place errors all",
    "start": "528800",
    "end": "535680"
  },
  {
    "text": "over the place and everybody's saying it's working it has been working really well because developers seem to be doing a",
    "start": "535680",
    "end": "541959"
  },
  {
    "text": "bad job uh crash reports like is there anything in there like stack traces that I can use to understand what's going on",
    "start": "541959",
    "end": "548360"
  },
  {
    "text": "anything that gives me a good feeling like what's actually happening in production because that's what I need to be able to improve it then and that's",
    "start": "548360",
    "end": "555360"
  },
  {
    "text": "the the most difficult part I take those binaries I take those production values",
    "start": "555360",
    "end": "560519"
  },
  {
    "text": "and try to get the thing running on my local machine which is can be quite hard and this this feeling yeah it's really",
    "start": "560519",
    "end": "567279"
  },
  {
    "text": "true this is an AI generated picture so it doesn't look like me um but that's what you if you actually get it to run",
    "start": "567279",
    "end": "573839"
  },
  {
    "text": "and what's even better to to be able to reproduce that particular issue they reported that's really cool in my case",
    "start": "573839",
    "end": "579720"
  },
  {
    "text": "was very easy whatever message I sent to that process it just crashed immediately so that's",
    "start": "579720",
    "end": "585680"
  },
  {
    "text": "great then understanding the code okay I know I usually start looking",
    "start": "585680",
    "end": "591839"
  },
  {
    "text": "at the project dependencies you know look at the folder names what are the names is it using some kind of",
    "start": "591839",
    "end": "597120"
  },
  {
    "text": "functional separation is it using technical folder names is it using some undefined pattern there's no convention",
    "start": "597120",
    "end": "604600"
  },
  {
    "text": "at all because we're just doing whatever we feel like that day also look at name spaces you know identifying is there",
    "start": "604600",
    "end": "610600"
  },
  {
    "text": "generic code is there specific code are the dependency that they can identify anything and you know how that is you",
    "start": "610600",
    "end": "615920"
  },
  {
    "text": "look at code you you immediately start to build some kind of mental map of how everything fits together right if you're",
    "start": "615920",
    "end": "621480"
  },
  {
    "text": "lucky most case you don't of course uh but yeah here's a nice example um also",
    "start": "621480",
    "end": "627200"
  },
  {
    "text": "this for example what what Ryder does has a built-in project viewer can also be helpful to understand like the",
    "start": "627200",
    "end": "632680"
  },
  {
    "text": "thickness in this particular picture and this is from my own open source Library shows you also the dependency like how much how how how strong is the",
    "start": "632680",
    "end": "639920"
  },
  {
    "text": "dependency between different projects again it's all to feed that mental model that you need to extend the code base",
    "start": "639920",
    "end": "646800"
  },
  {
    "text": "maybe use something like a type dependency diagram that you can have that you have in rear or if you use visual studio uh virtually wrer doesn't",
    "start": "646800",
    "end": "653120"
  },
  {
    "text": "have it can also be very useful although this is not very easy to read of course",
    "start": "653120",
    "end": "658680"
  },
  {
    "text": "but it can can be useful to understand and dive into uh end theend is very powerful unfortunately it's not free but",
    "start": "658680",
    "end": "665200"
  },
  {
    "text": "I tried it a couple of times it can do a lot of stuff that other tools can't do uh but it's also totally fine and this",
    "start": "665200",
    "end": "671279"
  },
  {
    "text": "is what I do a lot is create your own diagrams if you went to I think there was a session by the author of C4 the C4",
    "start": "671279",
    "end": "677760"
  },
  {
    "text": "model which is very lightweight way of representing like what your system looks",
    "start": "677760",
    "end": "683279"
  },
  {
    "text": "like how it interacts with the rest of the world and one level deeper what are the different components I I usually do",
    "start": "683279",
    "end": "688480"
  },
  {
    "text": "that as well I create that andio on Confluence which really helps me create that mental picture but also explain it",
    "start": "688480",
    "end": "694760"
  },
  {
    "text": "to other people because is this this is quite lightweight and you can use it also you can keep it and use that for",
    "start": "694760",
    "end": "700079"
  },
  {
    "text": "the future or I don't know you can even do class diagrams I'm going to repeat my",
    "start": "700079",
    "end": "706079"
  },
  {
    "text": "joke but you know this ISL this is something that we used to do in the past when we were very young still",
    "start": "706079",
    "end": "712000"
  },
  {
    "text": "useful of course you can also use your IDE you can actually you know find all your the inheritors of a particular uh",
    "start": "712000",
    "end": "718600"
  },
  {
    "text": "class method uh see where it's overwritten maybe see how many levels of uh of inheritance you have you know that",
    "start": "718600",
    "end": "725760"
  },
  {
    "text": "that was very popular in the past inheritance object-oriented programmer and people love to create multiple level",
    "start": "725760",
    "end": "730800"
  },
  {
    "text": "multiple class that all inherit from each other so to make it very easy to reuse things and make it very complicated to understand what's going",
    "start": "730800",
    "end": "737160"
  },
  {
    "text": "on um uh maybe and this is a writer feature I really love it's called show value",
    "start": "737160",
    "end": "743480"
  },
  {
    "text": "origin so if you look at a parameter value or even a variable inside a method it can all it can actually show you",
    "start": "743480",
    "end": "750240"
  },
  {
    "text": "exactly where this value came from even if there's multiple calls from different parts of your codebase you can see where",
    "start": "750240",
    "end": "755560"
  },
  {
    "text": "where did this config setting come from because it's magically appearing in my code base I have no clue where did it",
    "start": "755560",
    "end": "761360"
  },
  {
    "text": "come from of course with Legacy code bases everything is static it's very easy to find but more complicated with",
    "start": "761360",
    "end": "767560"
  },
  {
    "text": "the penage injection this is a very useful feature this is what it looks like if you use that kind of thing use",
    "start": "767560",
    "end": "773320"
  },
  {
    "text": "the tools more examples or and this is pretty cool because because now we have",
    "start": "773320",
    "end": "779720"
  },
  {
    "text": "things which are way smarter than me or you I don't know AI I use that a lot so",
    "start": "779720",
    "end": "785320"
  },
  {
    "text": "in this case I'm using ryer and I have a like a preview license for their AI assistant which is ridiculously smart",
    "start": "785320",
    "end": "791600"
  },
  {
    "text": "and I can just ask him explain the code and then you get this this whole block of text but what I love is in summary",
    "start": "791600",
    "end": "799399"
  },
  {
    "text": "the aim of this method is to return an array of field info object representing non-private nonprotected fields of a",
    "start": "799399",
    "end": "805440"
  },
  {
    "text": "given type that match a given visible Criterion okay that's quite obvious for you but I use this for that particular",
    "start": "805440",
    "end": "812360"
  },
  {
    "text": "example because the the original author of that theut process that was running on this machine that I started this to",
    "start": "812360",
    "end": "817959"
  },
  {
    "text": "talk with actually copied code from code project it's a very old um archaic",
    "start": "817959",
    "end": "824399"
  },
  {
    "text": "system where you can publish your information that was doing RSI encryption by hand so they actually",
    "start": "824399",
    "end": "830680"
  },
  {
    "text": "copied that code and I suck at this oh sorry I I am not very good at this um",
    "start": "830680",
    "end": "836079"
  },
  {
    "text": "and uh I I literally asked my AI to explain that that code and then it said like this remarkably look it looks very",
    "start": "836079",
    "end": "841920"
  },
  {
    "text": "close to what was it a a256 with padding something but it's",
    "start": "841920",
    "end": "847759"
  },
  {
    "text": "slightly different it explained that to me but that's that's that's incredible I can do stuff that I never did could do",
    "start": "847759",
    "end": "854320"
  },
  {
    "text": "in the past I know I know know a little bit more about encryption and decryption algorithms just by using a tool use",
    "start": "854320",
    "end": "861279"
  },
  {
    "text": "those tools they're very useful same with ch GPT and",
    "start": "861279",
    "end": "866720"
  },
  {
    "text": "others AI assistant which is a plugin for all the jet brain products they're",
    "start": "867680",
    "end": "872920"
  },
  {
    "text": "building their own tool I don't have any uh like a stocks in in jet brains or",
    "start": "872920",
    "end": "878000"
  },
  {
    "text": "something but these guys are just doing that I do have stickers uh no but it's",
    "start": "878000",
    "end": "883040"
  },
  {
    "text": "pretty powerful uh doing the same thing here I use it everywhere you know even",
    "start": "883040",
    "end": "888880"
  },
  {
    "text": "like the question I don't you can read that I say how does it handle explicitly implemented properties I'm literally",
    "start": "888880",
    "end": "894519"
  },
  {
    "text": "asking a question that I would ask myself and it actually figures it out that's that's just marvelous this is the",
    "start": "894519",
    "end": "901079"
  },
  {
    "text": "world we live in and it's not a threat it's something that empowers you makes you even better which we all want um of",
    "start": "901079",
    "end": "909000"
  },
  {
    "text": "course you collect so much information you need to track that I mean we're still software developers and we hate writing documentation but for me it's",
    "start": "909000",
    "end": "916199"
  },
  {
    "text": "important because my brain goes all the left and right in fact I probably forget what I did yesterday so I need to write",
    "start": "916199",
    "end": "921440"
  },
  {
    "text": "down everything all my notes links to relevant Pages uh maybe pieces of chunks of code that I copy pasted to to explain",
    "start": "921440",
    "end": "928279"
  },
  {
    "text": "it to my myself track everything together that's how it by the way also helps the truck Factor so if I get if I",
    "start": "928279",
    "end": "934920"
  },
  {
    "text": "get sick you know I'll stay in Portugal because the weather is so great and I never come back home then at least you",
    "start": "934920",
    "end": "941000"
  },
  {
    "text": "have the notes that your your colleague can continue with so that's important so finding removing that code well that's",
    "start": "941000",
    "end": "948480"
  },
  {
    "text": "quite easy who and I want honest answers here because you're all professionals",
    "start": "948480",
    "end": "954279"
  },
  {
    "text": "who actually makes all that code public by default",
    "start": "954279",
    "end": "959720"
  },
  {
    "text": "good who's very very let's say professional and makes everything internal by default if you're C",
    "start": "959720",
    "end": "966000"
  },
  {
    "text": "developer for example okay one person you can stay the rest needs to leave so",
    "start": "966000",
    "end": "971920"
  },
  {
    "text": "every language has this concept of visibility or scope um unfortunately in",
    "start": "971920",
    "end": "976959"
  },
  {
    "text": "Microsoft world if you program in C everything is public the thing is if something is public it's very difficult",
    "start": "976959",
    "end": "983560"
  },
  {
    "text": "for your IDE to make assumptions about the usage of that thing if you make everything internal by default it may",
    "start": "983560",
    "end": "989839"
  },
  {
    "text": "actually and you have a good ID it will actually tell you like hey you made every this method is not used anywhere",
    "start": "989839",
    "end": "994920"
  },
  {
    "text": "in this codebase and since you made it internal or private I can actually the ID can make assumptions and say yeah but",
    "start": "994920",
    "end": "1001759"
  },
  {
    "text": "since it's private you can you can just throw it away and as I said earlier and I saw some happy faces when I mentioned",
    "start": "1001759",
    "end": "1007360"
  },
  {
    "text": "that throwing throwing away code is the best thing you can do so that's a simple trick make everything internal and see",
    "start": "1007360",
    "end": "1014079"
  },
  {
    "text": "what breaks and if nothing breaks your IDE will probably make everything gray you can just deleted and this applies",
    "start": "1014079",
    "end": "1020440"
  },
  {
    "text": "also to uh to par to parameters uh to everything you can already see like this",
    "start": "1020440",
    "end": "1025798"
  },
  {
    "text": "one include private is false it's grayed out which means it's completely unnecessary can we just delete it I love",
    "start": "1025799",
    "end": "1032199"
  },
  {
    "text": "deleting code this is well commented out code in Source control why are we still doing that that wasn't a thing 20 years",
    "start": "1032199",
    "end": "1039360"
  },
  {
    "text": "ago and it's still not a thing we have Source control for that and most idees these days will complain about that it's",
    "start": "1039360",
    "end": "1047199"
  },
  {
    "text": "I mean I can imagine you feel like but this is an Open Door still everywhere I go I find this so deleting",
    "start": "1047199",
    "end": "1055000"
  },
  {
    "text": "code um and deleting code is safe right because you're pretty sure uh unless maybe somebody's using a reflection",
    "start": "1055000",
    "end": "1061200"
  },
  {
    "text": "which we never do because it's completely safe um the next thing is to build a safety net we want to have",
    "start": "1061200",
    "end": "1067880"
  },
  {
    "text": "something to to to to retain that conf confidence well add code coverage that's",
    "start": "1067880",
    "end": "1072960"
  },
  {
    "text": "one step yeah but what if you don't have unit test yeah then you have a problem anyway if there are some kind kind of",
    "start": "1072960",
    "end": "1078600"
  },
  {
    "text": "automated testing there then code coverage is a nice tool to get you give you an indication of where is the",
    "start": "1078600",
    "end": "1084720"
  },
  {
    "text": "coverage where are where where are the black spots in there uh because code coverage by the way should not be",
    "start": "1084720",
    "end": "1090200"
  },
  {
    "text": "misused it's not an a management tool or anything like that although management managers love to use code coverage and",
    "start": "1090200",
    "end": "1096000"
  },
  {
    "text": "put it on the dashboard somewhere like you shall have 90% coverage otherwise you're not I want to say the word again",
    "start": "1096000",
    "end": "1103320"
  },
  {
    "text": "I I think can say sck anyway it's a good part uh coverlet is of course in a net space very popular um cover rolls is a",
    "start": "1103320",
    "end": "1111039"
  },
  {
    "text": "free open source project that you can use to publish it I'm using it in my in my own open source project fluent",
    "start": "1111039",
    "end": "1116960"
  },
  {
    "text": "assertions uh very useful the other thing is and I don't if anybody read the",
    "start": "1116960",
    "end": "1122000"
  },
  {
    "text": "book by Michael feds working effectively with Legacy code one two people it's",
    "start": "1122000",
    "end": "1127919"
  },
  {
    "text": "brilliant it's very old and the guy made a fortune out of it because he lives on Miami Beach at least I assume um and one",
    "start": "1127919",
    "end": "1137000"
  },
  {
    "text": "of the things that he talks about is that you should actually if you have no test at all is introduce some kind of",
    "start": "1137000",
    "end": "1143000"
  },
  {
    "text": "set of tests that really are completely unmaintainable it doesn't matter the only thing those tests are doing is",
    "start": "1143000",
    "end": "1149960"
  },
  {
    "text": "repeat the current behavior so if you have no test at all you just create a test unit test",
    "start": "1149960",
    "end": "1155880"
  },
  {
    "text": "automated test whatever language you have that interacts with the application then you observe the response and you",
    "start": "1155880",
    "end": "1161679"
  },
  {
    "text": "put the response in the assertion so if you run them they will all be green of course but it also means if you start",
    "start": "1161679",
    "end": "1167080"
  },
  {
    "text": "touching the codebase you have that safety net and it doesn't matter that it doesn't follow all the principles of tdd",
    "start": "1167080",
    "end": "1173360"
  },
  {
    "text": "as I also explained yesterday because they throw away test that temporary safety net and if you draw that like",
    "start": "1173360",
    "end": "1180039"
  },
  {
    "text": "make that visual it looks a bit like that it may even include the production copy of the datab base doesn't matter it",
    "start": "1180039",
    "end": "1186240"
  },
  {
    "text": "is your safety net and it's a very powerful technique that I've used many times before even with these um you know",
    "start": "1186240",
    "end": "1193679"
  },
  {
    "text": "this this RSA encryption thing I literally wrote a test that would execute that that that RSA code to see",
    "start": "1193679",
    "end": "1199720"
  },
  {
    "text": "if the Public Public private encryption worked correctly then I ripped out the old code used the standard stuff that",
    "start": "1199720",
    "end": "1206400"
  },
  {
    "text": "comes with net or some open source project that's properly maintained and verified if I would get the same result",
    "start": "1206400",
    "end": "1212039"
  },
  {
    "text": "that is a characteristic test a very small focused one but you can go all the way upstairs yeah but then you have a",
    "start": "1212039",
    "end": "1218080"
  },
  {
    "text": "database it's going to be very slow and they might be brittle and you may not be able to run them in parallel who cares",
    "start": "1218080",
    "end": "1223960"
  },
  {
    "text": "you have a safety net that's better than nothing but then if you do have a database you can still do something like",
    "start": "1223960",
    "end": "1230400"
  },
  {
    "text": "test containers you can actually in I think I mentioned that yesterday as well uh you can actually spin up a Linux",
    "start": "1230400",
    "end": "1236559"
  },
  {
    "text": "container with SQL server in it you know have it restore a production backup run those characteristics test and at the",
    "start": "1236559",
    "end": "1242240"
  },
  {
    "text": "end throw it away that's perfectly okay you can even set a build pipeline for that like",
    "start": "1242240",
    "end": "1249400"
  },
  {
    "text": "this um maybe in addition to these automated uh tests that interact directly with the application you also",
    "start": "1249400",
    "end": "1256280"
  },
  {
    "text": "want to add a couple of UI tests Maybe using Cypress or what is it the playright or some of these tools they",
    "start": "1256280",
    "end": "1262120"
  },
  {
    "text": "may not be the ones that you want to keep for a long time but again it gives you feedback that you didn't break",
    "start": "1262120",
    "end": "1267520"
  },
  {
    "text": "anything and you know when you deal with Legacy code you all know that the most important thing is that you don't break anything and that you feel that you",
    "start": "1267520",
    "end": "1273520"
  },
  {
    "text": "didn't break anything because the worst thing that can happen is that you get you know you send that invoice and at the end you put something in production",
    "start": "1273520",
    "end": "1279559"
  },
  {
    "text": "it didn't work right okay then the next step is of course because we now have the safety",
    "start": "1279559",
    "end": "1285279"
  },
  {
    "text": "net is to improve the whole deployability of that um simple thing at a build script something that you can",
    "start": "1285279",
    "end": "1291640"
  },
  {
    "text": "test locally you know that compiles everything that runs the characteristics test maybe restore a production database",
    "start": "1291640",
    "end": "1298080"
  },
  {
    "text": "set up that test container do whatever other ugly things that are are needed in production to get the application to run",
    "start": "1298080",
    "end": "1304960"
  },
  {
    "text": "is just so that you can repeat it continuously because you don't want to have any manual steps in there uh I'm",
    "start": "1304960",
    "end": "1311000"
  },
  {
    "text": "very fond of nuke not the best term best name for a project but it's an open source library in adult net space u that",
    "start": "1311000",
    "end": "1317760"
  },
  {
    "text": "actually allows you to write your build script in c as a c developer I",
    "start": "1317760",
    "end": "1323000"
  },
  {
    "text": "acknowledge the fact that the build script is actually something that evolves with your codebase and I guess",
    "start": "1323000",
    "end": "1328039"
  },
  {
    "text": "you get that because yeah you start simple with all the ugly stuff then you start to refine that I want to be able to run it I want to be able to debug a",
    "start": "1328039",
    "end": "1334640"
  },
  {
    "text": "bill script I want to refactor I want to be able to evolve and put it in Source control uh which also gets gives you",
    "start": "1334640",
    "end": "1341799"
  },
  {
    "text": "like nice overviews you can just purs render a representation of all the steps in your build process it's just a tiny",
    "start": "1341799",
    "end": "1348080"
  },
  {
    "text": "tool but it makes a world of difference uh if you are using Azure devops stay",
    "start": "1348080",
    "end": "1353840"
  },
  {
    "text": "away from yaml that's the worst tool that Microsoft ever invented well they didn't invent yaml but they did decide",
    "start": "1353840",
    "end": "1360120"
  },
  {
    "text": "to use it it really makes it your life difficult it's much easier to do something like this or something",
    "start": "1360120",
    "end": "1365520"
  },
  {
    "text": "equivalent in different language a version strategy yeah that's another thing if I go into an existing",
    "start": "1365520",
    "end": "1372440"
  },
  {
    "text": "repo I look at the branch names and at the names of the tags and quite often",
    "start": "1372440",
    "end": "1377559"
  },
  {
    "text": "that gives me a a pretty quick indication of what kind of version strategy it is there anybody knows about git flow about git flow GI up flow one",
    "start": "1377559",
    "end": "1385000"
  },
  {
    "text": "flow stuff like that if you just have a ma main or Master Branch plus a develop",
    "start": "1385000",
    "end": "1390080"
  },
  {
    "text": "branch and maybe a release branch that always give you already gives you an indication what's going on what I find",
    "start": "1390080",
    "end": "1395679"
  },
  {
    "text": "very frustrating if I find a repo with tons of feature branches from all kinds of people and it's completely unclear",
    "start": "1395679",
    "end": "1401919"
  },
  {
    "text": "what is the one that is supposed to represent what's in production that should be obvious and what is the next",
    "start": "1401919",
    "end": "1407440"
  },
  {
    "text": "one why do you have all these fixed branches even though TXS are already beyond that point like the last tag is",
    "start": "1407440",
    "end": "1414159"
  },
  {
    "text": "uh uh 1.2 and you still have uh fix branches called Fix",
    "start": "1414159",
    "end": "1419880"
  },
  {
    "text": "1.2.6 why is there reason for that is there some significant that I miss did you do some kind of back porting or",
    "start": "1419880",
    "end": "1426760"
  },
  {
    "text": "released a patch on an earlier version I want that that needs to be clear and quite often or almost never it's",
    "start": "1426760",
    "end": "1433600"
  },
  {
    "text": "clear uh you this is git flow uh I think this is GitHub flow and I think this one",
    "start": "1433600",
    "end": "1438799"
  },
  {
    "text": "is one flow which is pretty new I don't like this one by the way but it's just for complete completeness and by the way",
    "start": "1438799",
    "end": "1445159"
  },
  {
    "text": "and then you can do automated version because if you have a certain let's say adhoc convention for your branching",
    "start": "1445159",
    "end": "1450840"
  },
  {
    "text": "strategy like gitf flow then you can use tools to generate versions again and you make that part of your bill pipeline",
    "start": "1450840",
    "end": "1457159"
  },
  {
    "text": "like Git Version is a very nice tool that will take the name of the branch look at all the tags which are there and",
    "start": "1457159",
    "end": "1463480"
  },
  {
    "text": "based on that make assumptions about what the version number is going to be it knows that that uh if your branch is",
    "start": "1463480",
    "end": "1469360"
  },
  {
    "text": "called develop that is going to be the next version of your product and it will call them alpha. one. two also take into",
    "start": "1469360",
    "end": "1476840"
  },
  {
    "text": "account the number of commits since the last tag it's pretty smart about that sometimes a bit too smart but it's very",
    "start": "1476840",
    "end": "1482320"
  },
  {
    "text": "easy you don't have to deal with the whole version anymore and if you're in Ault net space will automatically calculate correct new get numbers uh it",
    "start": "1482320",
    "end": "1489240"
  },
  {
    "text": "produces a number that includes even the hash number of the commit uh that you can put in your your assembly your",
    "start": "1489240",
    "end": "1494600"
  },
  {
    "text": "executable everything because that makes it easy as well you know you know if you have an executable in production or dll",
    "start": "1494600",
    "end": "1500480"
  },
  {
    "text": "you can look at the properties and see that what is the actx version even better if the hash of the commit is",
    "start": "1500480",
    "end": "1506760"
  },
  {
    "text": "there there's no doubt what what about what the version is there so you should do that here is what it looks like it's",
    "start": "1506760",
    "end": "1512520"
  },
  {
    "text": "very there's a lot of information here you don't need to be able to read that all the way in the back um what else yeah and this is what",
    "start": "1512520",
    "end": "1519919"
  },
  {
    "text": "it looks like in this nuke build script it's just a little bit of C that you invoke but it's properly integrated",
    "start": "1519919",
    "end": "1526200"
  },
  {
    "text": "makes it very easy to work with then logging I already mentioned that people do not always think about logging",
    "start": "1526200",
    "end": "1532279"
  },
  {
    "text": "so let me ask you let me ask you a question who actually has logging guidelines in their project oo not a lot",
    "start": "1532279",
    "end": "1539480"
  },
  {
    "text": "lot because I assume that some of you are developers the rest are Architects and Architects law of guidelines right",
    "start": "1539480",
    "end": "1545600"
  },
  {
    "text": "no okay so it is important to understand what a warning means it is important to",
    "start": "1545600",
    "end": "1552679"
  },
  {
    "text": "make very clear to developers when you should use information level logging it should even be more more important to",
    "start": "1552679",
    "end": "1558919"
  },
  {
    "text": "Define what does error mean or fatal what's the difference for that how do you deal with that you know and also",
    "start": "1558919",
    "end": "1565039"
  },
  {
    "text": "because the log files are typically not just for you as a developer they're also for the people that are monitoring the",
    "start": "1565039",
    "end": "1570840"
  },
  {
    "text": "environment they need to understand when they need to act on that if you didn't Define that that's important and it",
    "start": "1570840",
    "end": "1576279"
  },
  {
    "text": "becomes even more complicated if you have like a distributed system that messages flow from one system to the other you need to think about you know",
    "start": "1576279",
    "end": "1582720"
  },
  {
    "text": "causality and correlation IDs and stuff like that you need to Define that and with a legacy base quite often this",
    "start": "1582720",
    "end": "1588679"
  },
  {
    "text": "wasn't really a a thought of and it helps by introducing that rule and starting to adjust all the logging",
    "start": "1588679",
    "end": "1594039"
  },
  {
    "text": "levels so it makes sense because in production there should not be warnings",
    "start": "1594039",
    "end": "1599600"
  },
  {
    "text": "and if there warnings there are signal there signal that something might be going wrong soon if it occasionally",
    "start": "1599600",
    "end": "1605919"
  },
  {
    "text": "happens then probably it's it's a normal situation maybe you haven't handled your uh exponential backup logic or you were",
    "start": "1605919",
    "end": "1612080"
  },
  {
    "text": "not using some kind of retry policy correctly but it shouldn't happen that often a foul fool would or with warnings",
    "start": "1612080",
    "end": "1618600"
  },
  {
    "text": "and exceptions and stack traces that's a bad signal and the same with exception strategies you know all these try",
    "start": "1618600",
    "end": "1625000"
  },
  {
    "text": "catches all over the code base with a lock statement swalling exceptions well that what was the problem that the the",
    "start": "1625000",
    "end": "1630960"
  },
  {
    "text": "original case that I started this talk with somebody was using TR catches all over the place and basically swallowing",
    "start": "1630960",
    "end": "1636320"
  },
  {
    "text": "everything that happened so the application was still running but there was a background threat that crashed the",
    "start": "1636320",
    "end": "1641840"
  },
  {
    "text": "rest of the application did it new everything looked like okay I'm still happy but no incoming messages were processed you know because somebody",
    "start": "1641840",
    "end": "1648520"
  },
  {
    "text": "wasn't really thinking about that doing this kind of stuff exception handling doing it correctly is quite hard and I'm",
    "start": "1648520",
    "end": "1654919"
  },
  {
    "text": "pretty sure you all know that so yeah Define that maybe using adopting open",
    "start": "1654919",
    "end": "1660159"
  },
  {
    "text": "Tel Tre I think there were a couple of talks about this this conference don't do this by the way",
    "start": "1660159",
    "end": "1666679"
  },
  {
    "text": "don't throw this is C specific don't catch an exception and then throw X you",
    "start": "1666679",
    "end": "1671840"
  },
  {
    "text": "lose the stack trace the next step is of course um now we have this bill pipeline",
    "start": "1671840",
    "end": "1677320"
  },
  {
    "text": "is is to add some kind of deployment strategy behind that again I love automation I don't want to do things by",
    "start": "1677320",
    "end": "1683399"
  },
  {
    "text": "hand so in this case for example we use anible and there's other tools for that",
    "start": "1683399",
    "end": "1688679"
  },
  {
    "text": "for uh if you have your own infrastructure if you running stuff in a cloud my go-to software now these days",
    "start": "1688679",
    "end": "1695919"
  },
  {
    "text": "is pumi it's brilliant anybody using terraform throw it out of the window and",
    "start": "1695919",
    "end": "1701880"
  },
  {
    "text": "switch to palumi for please no uh anybody not doing INF uh RM templates",
    "start": "1701880",
    "end": "1708039"
  },
  {
    "text": "biceps maybe stuff no infrastructures code manual",
    "start": "1708039",
    "end": "1713120"
  },
  {
    "text": "deployments okay cool you're honest palumi is a open source uh",
    "start": "1713120",
    "end": "1719559"
  },
  {
    "text": "project that allows to allows you to write all your deployment code in your preferred language which could be Java",
    "start": "1719559",
    "end": "1726799"
  },
  {
    "text": "JavaScript C if you love that and again same same advantage of as with",
    "start": "1726799",
    "end": "1732440"
  },
  {
    "text": "everything else you do in a programming language we Factor friendly you get proper intellisense you can read it you",
    "start": "1732440",
    "end": "1738039"
  },
  {
    "text": "can understand that code if you look at it I've had a lot of experience with terraform uh my problem was if I haven't",
    "start": "1738039",
    "end": "1743880"
  },
  {
    "text": "looked at the terraform definition for like a couple of weeks I have no clue what it's doing because there's no",
    "start": "1743880",
    "end": "1749360"
  },
  {
    "text": "documentation there's no intelligence I want to be able to you know scroll through the cow maybe even to B",
    "start": "1749360",
    "end": "1754840"
  },
  {
    "text": "everything that's what palumi does it's not an abstraction it's more like a a framework that allows you to work with",
    "start": "1754840",
    "end": "1760559"
  },
  {
    "text": "Azure AWS and uh and Google in a very nice structured way and again um",
    "start": "1760559",
    "end": "1766919"
  },
  {
    "text": "deployment code is also code and needs to evolve with your code base so yeah so the next step is prove the code",
    "start": "1766919",
    "end": "1774919"
  },
  {
    "text": "well uh maybe a good start is treat all warnings in your code base as errors",
    "start": "1774919",
    "end": "1780080"
  },
  {
    "text": "it's a good start and fix them I mean in I think in the newer do",
    "start": "1780080",
    "end": "1785360"
  },
  {
    "text": "net versions we even have seven levels just put it at the highest level possible make sure everything becomes an",
    "start": "1785360",
    "end": "1791679"
  },
  {
    "text": "error and fix those because there might actually be hidden things behind that in do net it's also very popular to",
    "start": "1791679",
    "end": "1797519"
  },
  {
    "text": "suppress warnings yeah suppressing issues is of course not the best thing",
    "start": "1797519",
    "end": "1802559"
  },
  {
    "text": "however we don't want to be dogmatic there are some things which you may not want to fix in the current state of the code base and do that later and make",
    "start": "1802559",
    "end": "1808880"
  },
  {
    "text": "that explicit uh by putting it in Source control that you actually suppress something but that's a good start the",
    "start": "1808880",
    "end": "1815120"
  },
  {
    "text": "other thing is using something like an editor config uh or ES lint if you're writing in Java or",
    "start": "1815120",
    "end": "1820640"
  },
  {
    "text": "typescript um which works really well especially editor config is not just for layout but for example if you use r",
    "start": "1820640",
    "end": "1827840"
  },
  {
    "text": "you can also set set up all the formatting and the auto cleanup rules",
    "start": "1827840",
    "end": "1833039"
  },
  {
    "text": "that it has like you want to use for example the new new operator and then you can basically say tell your IDE to",
    "start": "1833039",
    "end": "1839039"
  },
  {
    "text": "re reformat the entire project automatically based on those rules that's a really good start it will",
    "start": "1839039",
    "end": "1844679"
  },
  {
    "text": "create a huge pool request or commit but that's fine that's just once and then you're done with it and you never have",
    "start": "1844679",
    "end": "1850840"
  },
  {
    "text": "to deal with all the layout stuff it will clean up the code remove all the commented out code uh it will be it will",
    "start": "1850840",
    "end": "1856960"
  },
  {
    "text": "make your life a lot easier if you're in Ault net space then we these days we have Rosen analyzers",
    "start": "1856960",
    "end": "1863559"
  },
  {
    "text": "and they're beautiful because Rosland analyzis can do a lot of stuff that the uh IDE and the language compiler doesn't",
    "start": "1863559",
    "end": "1869440"
  },
  {
    "text": "do it can actually make sure that your XML comments are correctly formatted yeah but I don't do any code commenting",
    "start": "1869440",
    "end": "1876159"
  },
  {
    "text": "okay that's fine uh but it's uh if you use Link I don't know if you were in the uh the presentation by Daniel Marbach",
    "start": "1876159",
    "end": "1882120"
  },
  {
    "text": "yesterday um it actually helps you use the right uh structures the right API",
    "start": "1882120",
    "end": "1887440"
  },
  {
    "text": "because a lot of stuff in net use Link can be pretty performed pretty bad and there's a lot of replacements for that",
    "start": "1887440",
    "end": "1893960"
  },
  {
    "text": "to make it faster that's Russ analyz actually tell you that so you can just gradually enable them you can even enable them on the visual folders",
    "start": "1893960",
    "end": "1900639"
  },
  {
    "text": "because you're still refactoring the codebase and enabling that is something you put in the editor conf so it works",
    "start": "1900639",
    "end": "1905679"
  },
  {
    "text": "in all your idees uh nested conditional statements you know the the question mark and then the semicolon you know",
    "start": "1905679",
    "end": "1912760"
  },
  {
    "text": "that a condition and if the condition is true it returns something and otherwise it returns something else",
    "start": "1912760",
    "end": "1917840"
  },
  {
    "text": "some people actually love to to create nested structure you know question of a uh if something is true then there's",
    "start": "1917840",
    "end": "1924360"
  },
  {
    "text": "another condition there's another condition there's a Russ analyzer that tells you don't do that don't do that long methods Define long okay but it can",
    "start": "1924360",
    "end": "1932279"
  },
  {
    "text": "check that single typ of file small things that will help you make that code",
    "start": "1932279",
    "end": "1937480"
  },
  {
    "text": "base gradually better async also make sure that your weight an acing method you know for the",
    "start": "1937480",
    "end": "1945320"
  },
  {
    "text": "who has anybody actually noticed that somebody was uh calling an async method in C and not awaiting it scary because",
    "start": "1945320",
    "end": "1953320"
  },
  {
    "text": "you think it's doing something it's not doing anything there's an analyzer for that nullable types I think Martin Balo",
    "start": "1953320",
    "end": "1960240"
  },
  {
    "text": "had had an entire session about this you can actually and that's net specific cop specific enable nullable Types on file",
    "start": "1960240",
    "end": "1967360"
  },
  {
    "text": "by file basis and as soon as you do that the compiler is going to interpret and make assumptions and try to understand",
    "start": "1967360",
    "end": "1972919"
  },
  {
    "text": "like hey you're passing a null value here is that what you intended this cannot be nil nil you have to be very",
    "start": "1972919",
    "end": "1979120"
  },
  {
    "text": "specific about that and because you can enable this on file by file basis it's also something you can gradually",
    "start": "1979120",
    "end": "1984720"
  },
  {
    "text": "introduce in your code base like here there's an example and if you're really at the point that you want to enable it",
    "start": "1984720",
    "end": "1990679"
  },
  {
    "text": "on the entire project you can do it for with this one or maybe just a newer version of do net and bump the C version",
    "start": "1990679",
    "end": "1997480"
  },
  {
    "text": "that makes a big difference yeah but what if I'm actually still on do Net Framework and I cannot",
    "start": "1997480",
    "end": "2003000"
  },
  {
    "text": "use new C versions actually there's a nice oh yeah by the way these are the tools that you get Global users uh",
    "start": "2003000",
    "end": "2008799"
  },
  {
    "text": "string interpolation switch Expressions very beautiful you can make your code a lot easier pattern matching I use that a",
    "start": "2008799",
    "end": "2014880"
  },
  {
    "text": "lot uh nothing to do with regular Expressions by the way uh but if you don't have that there's something that's",
    "start": "2014880",
    "end": "2021120"
  },
  {
    "text": "called poly shop which is an OP Source Library which you can add to an existing NET Framework Library project and it",
    "start": "2021120",
    "end": "2028519"
  },
  {
    "text": "will generate on the fly a bunch of attributes that will certainly light up all the new C features and that is",
    "start": "2028519",
    "end": "2035080"
  },
  {
    "text": "awesome so a lot of stuff is not available because the compiler actually uh so if you install a new SDK of net",
    "start": "2035080",
    "end": "2042039"
  },
  {
    "text": "you get the capabilities but it needs certain features in the framework but it's not tightly coupled to the",
    "start": "2042039",
    "end": "2047159"
  },
  {
    "text": "framework it just needs to have certain attributes available which have to be in a system name space you can even write them yourself this works with uh the new",
    "start": "2047159",
    "end": "2054398"
  },
  {
    "text": "init uh uh uh qualifier but a lot of other things you can enable that and just add that project and will do it for",
    "start": "2054399",
    "end": "2060320"
  },
  {
    "text": "you I use that also in fluence assertion beautiful see there's an example of all the stuff here is external in it that's",
    "start": "2060320",
    "end": "2067560"
  },
  {
    "text": "a new thing or module initializer is a way to execute some code at the first time your assembly is loaded uh string",
    "start": "2067560",
    "end": "2074398"
  },
  {
    "text": "syntax which will enable regular expression highlighting stuff like that that's nice if you have to deal with",
    "start": "2074399",
    "end": "2080240"
  },
  {
    "text": "Legacy code because usually you have to stick with net if you like in my my case that was NET Framework 47 because it was",
    "start": "2080240",
    "end": "2087320"
  },
  {
    "text": "still using soap something from the past and wsar you know the Death Star stuff",
    "start": "2087320",
    "end": "2093158"
  },
  {
    "text": "like that I cannot move to new. net version but at least I can use the new comp B syntax directory build props",
    "start": "2093159",
    "end": "2100200"
  },
  {
    "text": "maybe you know that one instead of copying all the dependencies and N get packages to every project you just put",
    "start": "2100200",
    "end": "2105640"
  },
  {
    "text": "it in this file put it in the root of the directory and every project will automatically inherit all the",
    "start": "2105640",
    "end": "2111320"
  },
  {
    "text": "settings um naming improving yeah of course crappy name that's a good name",
    "start": "2111320",
    "end": "2116920"
  },
  {
    "text": "right um I actually asked my AI assistant a couple of times like can you actually provide me with a better name",
    "start": "2116920",
    "end": "2123200"
  },
  {
    "text": "and it will look at the implementation of the code and use that to come up with better names that's that's nice because naming",
    "start": "2123200",
    "end": "2130599"
  },
  {
    "text": "is hard right it's one of the most complicated things next to caching and there was one other oh no that was the off by one error",
    "start": "2130599",
    "end": "2137320"
  },
  {
    "text": "yeah um encapsulation yeah one of the principles of objectoriented programming",
    "start": "2137320",
    "end": "2142839"
  },
  {
    "text": "you can do that uh here's a nice example I have a a class or thing order that has",
    "start": "2142839",
    "end": "2149119"
  },
  {
    "text": "a property called order lines and I'm I'm verifying whether the order line contains an order which has a value",
    "start": "2149119",
    "end": "2154839"
  },
  {
    "text": "that's higher than 10K if that's the case then the entire order is marked as high valued this is weird because",
    "start": "2154839",
    "end": "2162920"
  },
  {
    "text": "basically there's code outside the order class or order type that makes",
    "start": "2162920",
    "end": "2168280"
  },
  {
    "text": "assumptions or decisions about what's a high value order a lot of people do that",
    "start": "2168280",
    "end": "2174599"
  },
  {
    "text": "instead of that you can just have an order class that actually does that for you and even maybe an order lines class",
    "start": "2174599",
    "end": "2180920"
  },
  {
    "text": "this is encapsulation that's the principle that when we that we learned 20 years ago I hope we're still learning that are we getting are we still being",
    "start": "2180920",
    "end": "2187560"
  },
  {
    "text": "taught object oriented programming for the young people in this room I don't see any young people in the room ah yes",
    "start": "2187560",
    "end": "2192880"
  },
  {
    "text": "yeah you still get them good that's great and of course functional programming because that's more hip uh",
    "start": "2192880",
    "end": "2198599"
  },
  {
    "text": "but this is Trivial this is stuff that we learned long time ago and apparently we still don't do that encapsulate",
    "start": "2198599",
    "end": "2204319"
  },
  {
    "text": "capsulating all your primitive types into first class citizens encapsulate logic data hiding remember that from the",
    "start": "2204319",
    "end": "2211359"
  },
  {
    "text": "past very simple so that's the code part we still have design and architecture",
    "start": "2211359",
    "end": "2216640"
  },
  {
    "text": "exure left it's a lot of content I know I'm going pretty fast in this this talk but at the point is that you don't have",
    "start": "2216640",
    "end": "2222599"
  },
  {
    "text": "to remember everything you just go to the slides and hopefully you remember that next Monday organize your code by",
    "start": "2222599",
    "end": "2227920"
  },
  {
    "text": "functionalities capabilities start to restructure code that is now in technical folders make them structure",
    "start": "2227920",
    "end": "2233560"
  },
  {
    "text": "them in a functional folder makes it much easier to understand what belongs together that is part of your design",
    "start": "2233560",
    "end": "2239400"
  },
  {
    "text": "restructuring the codes base if you if if it happens to be um uh something like",
    "start": "2239400",
    "end": "2246000"
  },
  {
    "text": "an htpm point and net you have controllers you have fuse you few models they probably grouped in folders like",
    "start": "2246000",
    "end": "2251560"
  },
  {
    "text": "that regroup them put the things together that belong together makes it easier to understand how things are",
    "start": "2251560",
    "end": "2256960"
  },
  {
    "text": "being used because when you're ref factoring existing code bases you want to understand how everything relates and",
    "start": "2256960",
    "end": "2262640"
  },
  {
    "text": "you know where the coupling is and how you you want to get rid of the coupling well that's one way of doing it organize stuff by slice starting to think about",
    "start": "2262640",
    "end": "2271000"
  },
  {
    "text": "uh what what piece of code here is actually supposed to be used in different places does it actually align",
    "start": "2271000",
    "end": "2276119"
  },
  {
    "text": "with that structure that you just build up are we actually isn't it actually going to be easier to just duplicate",
    "start": "2276119",
    "end": "2282079"
  },
  {
    "text": "some code to remove coupling and if you really want to keep that code because it looks complicated move into a separate",
    "start": "2282079",
    "end": "2288240"
  },
  {
    "text": "part of the code base so it it's very obvious that this is a piece of code that's reusable but the vice versa also",
    "start": "2288240",
    "end": "2294760"
  },
  {
    "text": "applies that might be code in some kind of common or infrastructure or helpers project that is only used in one place",
    "start": "2294760",
    "end": "2302119"
  },
  {
    "text": "then remove it move it back to the caller that's actually there or even remove the implementation and merge the",
    "start": "2302119",
    "end": "2307520"
  },
  {
    "text": "make it an inline implementation anything that is not generic make it specific because again the less generic",
    "start": "2307520",
    "end": "2314680"
  },
  {
    "text": "code you have it will also easy to understand all the dependencies again and by the time that you're doing this",
    "start": "2314680",
    "end": "2320480"
  },
  {
    "text": "you probably also have already have a pretty decent mental model of your that Legacy code base or you already have it",
    "start": "2320480",
    "end": "2325960"
  },
  {
    "text": "because it's your code base yeah it used to happen here you see a couple of things you basically duplicating stuff",
    "start": "2325960",
    "end": "2331800"
  },
  {
    "text": "like duplicate surface in different SL in this case I'm using a a vertical uh slice Arch architecture helper methods",
    "start": "2331800",
    "end": "2338839"
  },
  {
    "text": "extension methods they're notorious in Ault net space they're everywhere just copy paste them in the place that you",
    "start": "2338839",
    "end": "2345079"
  },
  {
    "text": "need them don't introduce extension methods because you think they might be reusable and if they exist and they're",
    "start": "2345079",
    "end": "2351240"
  },
  {
    "text": "not being reused move them back to the cor so that it is very close to each other because you cannot your brain at",
    "start": "2351240",
    "end": "2357920"
  },
  {
    "text": "least my brain cannot process all that complexity you want to reduce you know if you look at a piece of code you want",
    "start": "2357920",
    "end": "2363800"
  },
  {
    "text": "to be able to understand that code without having to understand everything around that I mean this is all about what objectoriented programming",
    "start": "2363800",
    "end": "2371040"
  },
  {
    "text": "is uh if you're starting to create your test your unit test and I covered this yesterday as well uh try to you know",
    "start": "2371040",
    "end": "2377720"
  },
  {
    "text": "identify those boundaries that you did while refactoring start to create unit test for these pieces of blocks because",
    "start": "2377720",
    "end": "2383319"
  },
  {
    "text": "that's the ultimate goal you started with characteristics tests you know but you want to get rid of them you want to actually gradually introduce automated",
    "start": "2383319",
    "end": "2390280"
  },
  {
    "text": "testing at a much more smaller scale so that you reach the point that you can rip out the um the characteristics test",
    "start": "2390280",
    "end": "2396960"
  },
  {
    "text": "and still have this High coverage that you need to be able to deliver a new version I hope so yeah basically like",
    "start": "2396960",
    "end": "2404920"
  },
  {
    "text": "this um oh click click yeah this is an",
    "start": "2404920",
    "end": "2410000"
  },
  {
    "text": "example of um where I actually put code in a technical in a functional structure I still have an infrastructure thing",
    "start": "2410000",
    "end": "2416280"
  },
  {
    "text": "here a folder which contains complicated reusable piece of code I have a folder",
    "start": "2416280",
    "end": "2421960"
  },
  {
    "text": "called distributed locking which is what it is it provides a distributed locking Mech ISM uh it has a class called",
    "start": "2421960",
    "end": "2429200"
  },
  {
    "text": "cluster wide lock provider which is probably the implementation and one interface I provide cluster wide lock I",
    "start": "2429200",
    "end": "2434680"
  },
  {
    "text": "like these role based interfaces which also aligns with the interface agregation principle um but what's",
    "start": "2434680",
    "end": "2441240"
  },
  {
    "text": "interesting is I have a folder called internals which contains code that on first side might actually look like it's",
    "start": "2441240",
    "end": "2449160"
  },
  {
    "text": "generic and probably it may be generic but I didn't intend it to be generic so I make it very explicit almost",
    "start": "2449160",
    "end": "2455800"
  },
  {
    "text": "dogmatically explicit that that code is supposed to be internal it's an implementation detail of this whole followup why is",
    "start": "2455800",
    "end": "2463400"
  },
  {
    "text": "that useful because if somebody actually accidentally use the SQL server error enumeration in different place in the",
    "start": "2463400",
    "end": "2469680"
  },
  {
    "text": "codebase in net you actually see using infrastructure. distribut locking do",
    "start": "2469680",
    "end": "2475760"
  },
  {
    "text": "internals and that should trigger hopefully a code review comment like hey why are you actually including something",
    "start": "2475760",
    "end": "2481160"
  },
  {
    "text": "that is internal detail of another piece of code here it's a very simple trick",
    "start": "2481160",
    "end": "2486520"
  },
  {
    "text": "and it you can probably even use something like independ I've never tried that but that's a way of doing it skip",
    "start": "2486520",
    "end": "2492839"
  },
  {
    "text": "all the details um same with adjacent fos yeah if you start to treat it like as",
    "start": "2492839",
    "end": "2499040"
  },
  {
    "text": "separate units or separate boundaries in your system again will make things difficult so you're basically reshuffling that existing code base to",
    "start": "2499040",
    "end": "2506200"
  },
  {
    "text": "align more with this functional separation design patterns same thing",
    "start": "2506200",
    "end": "2511480"
  },
  {
    "text": "design patterns is a way to structure your code so you can give names to it and people Rec recognize that uh I think",
    "start": "2511480",
    "end": "2518240"
  },
  {
    "text": "I read somewhere that the authors which are on this picture uh 10 years after they wrote that book they actually said",
    "start": "2518240",
    "end": "2523599"
  },
  {
    "text": "we should have called it refactoring towards design patterns because there were too many people and I'm pretty sure",
    "start": "2523599",
    "end": "2529640"
  },
  {
    "text": "some of you in this group have have been a victim to that they use patterns as a goal because it was cool you know I've",
    "start": "2529640",
    "end": "2536040"
  },
  {
    "text": "actually implemented the visitor pattern has anybody actually implemented the visitor pattern in their life and still",
    "start": "2536040",
    "end": "2541680"
  },
  {
    "text": "think it was a good idea oh okay you have built something",
    "start": "2541680",
    "end": "2546800"
  },
  {
    "text": "very powerful very very very complicated but if I tell you that uh",
    "start": "2546800",
    "end": "2553599"
  },
  {
    "text": "I'm using a strategy pattern you see like blah blah blah strategy I think most cases you you Prett quickly know",
    "start": "2553599",
    "end": "2558920"
  },
  {
    "text": "what it's supposed to do what kind of structure to expect had the same with instance uh Singleton pattern uh",
    "start": "2558920",
    "end": "2565319"
  },
  {
    "text": "adapters factories I don't even have to explain to you what it means it's such a common term it is actually a design",
    "start": "2565319",
    "end": "2571000"
  },
  {
    "text": "pattern and that's what that book actually accomplished they they gave us a vocabulary to express compx licated",
    "start": "2571000",
    "end": "2576520"
  },
  {
    "text": "Technical Solutions and that's the value of that so refactoring towards design I did that with fluent assertion over the",
    "start": "2576520",
    "end": "2582559"
  },
  {
    "text": "years I started to refractor things and then I thought like there's a pattern and if I structure it a little bit according to the pattern use the naming",
    "start": "2582559",
    "end": "2588599"
  },
  {
    "text": "convention the next person will know exactly what to expect um maybe adopt an architecture",
    "start": "2588599",
    "end": "2596599"
  },
  {
    "text": "style that kind of adopts the or you know Embraces the idea of inversing the",
    "start": "2596599",
    "end": "2602400"
  },
  {
    "text": "dependencies this is an example from a slide I also had yesterday I have the order processing module and the order",
    "start": "2602400",
    "end": "2608559"
  },
  {
    "text": "processing module takes a dependency on an interface called I store order which is a very generic interface literally",
    "start": "2608559",
    "end": "2615200"
  },
  {
    "text": "it's a c generic interface so you can put you can put anything in there any type that I don't know you use an",
    "start": "2615200",
    "end": "2620640"
  },
  {
    "text": "hibernate or anti framework the problem is this is generic code and generic code tends to be generic more complicated",
    "start": "2620640",
    "end": "2628480"
  },
  {
    "text": "becomes also more generic over time because we like to put more logic in there because of dry and everything when",
    "start": "2628480",
    "end": "2634680"
  },
  {
    "text": "you apply the dependency inversion principle you're basically saying that you know what the order processing module needs certain capabilities from",
    "start": "2634680",
    "end": "2641880"
  },
  {
    "text": "the rest of the system and instead of relying on some kind of low-level abstraction it",
    "start": "2641880",
    "end": "2647359"
  },
  {
    "text": "basically defines its own contract its own interface of what it needs and now",
    "start": "2647359",
    "end": "2653040"
  },
  {
    "text": "this this repository implementation that use in hibernate or anti framework or something like that implements that",
    "start": "2653040",
    "end": "2658480"
  },
  {
    "text": "contract and that's a really significant change in a perspective it really",
    "start": "2658480",
    "end": "2663760"
  },
  {
    "text": "enables things to work a different way I think dip the dependency in verion principle is one of the most important",
    "start": "2663760",
    "end": "2669440"
  },
  {
    "text": "principles solid and I think solid is still very valuable I know there people that have been you know complaining",
    "start": "2669440",
    "end": "2675359"
  },
  {
    "text": "about it or trying to debunk it it's still very useful it's just something you have to yeah just like any principle",
    "start": "2675359",
    "end": "2681119"
  },
  {
    "text": "don't apply dogmatically try to understand where it's useful or not another thing which I do is to",
    "start": "2681119",
    "end": "2687880"
  },
  {
    "text": "actually think about dependencies on the package level uh for example I have a",
    "start": "2687880",
    "end": "2692960"
  },
  {
    "text": "main package that's generally How I build things and then in that package I have like small building blocks which",
    "start": "2692960",
    "end": "2700000"
  },
  {
    "text": "serve their purpose are very simple to understand and can be combined in a very smart way but you don't have to and you",
    "start": "2700000",
    "end": "2707040"
  },
  {
    "text": "need to understand the different building blocks so what I don't like is Frameworks I don't want to deliver a framework where you inherit from a base",
    "start": "2707040",
    "end": "2713119"
  },
  {
    "text": "class suddenly all kinds of magic happens I want the developers to understand that Magic by training them",
    "start": "2713119",
    "end": "2720119"
  },
  {
    "text": "what the magic actually consists of because magic is is Magic because you don't understand that something happens",
    "start": "2720119",
    "end": "2725960"
  },
  {
    "text": "that you cannot explain but if you understand what happened it's not magic anymore right if you take your your mobile phone back into the I don't know",
    "start": "2725960",
    "end": "2732839"
  },
  {
    "text": "Middle Ages people will think you're a wizard or witch or something like that",
    "start": "2732839",
    "end": "2738839"
  },
  {
    "text": "uh um so the point is to actually break down that complexity into small chunks",
    "start": "2738839",
    "end": "2744680"
  },
  {
    "text": "explain how every piece of every building block is supposed to use but also explain how they can be combined to",
    "start": "2744680",
    "end": "2750520"
  },
  {
    "text": "be more powerful only then you provide something like I would call them convenience blocks",
    "start": "2750520",
    "end": "2756440"
  },
  {
    "text": "things that combine them in a more common solution but you need to understand the details that's principle",
    "start": "2756440",
    "end": "2762160"
  },
  {
    "text": "one and there's names for that the second principle is I try not to use inheritance anymore I try to Pro use",
    "start": "2762160",
    "end": "2768920"
  },
  {
    "text": "composition instead of inheritance why not because object objector inheritance",
    "start": "2768920",
    "end": "2774440"
  },
  {
    "text": "is is not is is is inherently bad it's just that people tend to misuse it and",
    "start": "2774440",
    "end": "2780520"
  },
  {
    "text": "by applying the composition over inheritance concept you're actually trying to decouple things a little bit more",
    "start": "2780520",
    "end": "2786720"
  },
  {
    "text": "the next thing is that you should only depend on packages that are more stable",
    "start": "2786720",
    "end": "2791960"
  },
  {
    "text": "or more abstract because what's the biggest problem with you know all this dependency management both in do net",
    "start": "2791960",
    "end": "2798480"
  },
  {
    "text": "with nugat with with mpm and yarn and all this stuff is the dependency held the ripple effect you update one thing",
    "start": "2798480",
    "end": "2805119"
  },
  {
    "text": "and suddenly you and before you know it you introduce a vulnerability because you forgot to enable fillability",
    "start": "2805119",
    "end": "2810319"
  },
  {
    "text": "scanning because we're all using fillability scanning right and license scanning of all our open source software",
    "start": "2810319",
    "end": "2816440"
  },
  {
    "text": "no we don't um so this is a simple principle only depend on more abstract P",
    "start": "2816440",
    "end": "2822119"
  },
  {
    "text": "packages or more stable packages if you do that that's that's the first thing to",
    "start": "2822119",
    "end": "2827200"
  },
  {
    "text": "prevent Rippling the other thing I should do is if that package also support some kind of optional capability",
    "start": "2827200",
    "end": "2835119"
  },
  {
    "text": "by having a dependency on another package um for example an hibernate can work with different database providers",
    "start": "2835119",
    "end": "2841400"
  },
  {
    "text": "it's all baked in but you don't you don't actually need a dependency on that and this case if I actually have that I",
    "start": "2841400",
    "end": "2847240"
  },
  {
    "text": "would have a package in between which depends on the optional dependency and on the main package which decouples the",
    "start": "2847240",
    "end": "2853839"
  },
  {
    "text": "the other one again again prevents ripple effect also anything that is not always",
    "start": "2853839",
    "end": "2860720"
  },
  {
    "text": "used together with this what's in this package should be in its own package another effect you know if you have some",
    "start": "2860720",
    "end": "2868400"
  },
  {
    "text": "kind of component and you offer a um like a built-in test implementation you do not want to ship",
    "start": "2868400",
    "end": "2874480"
  },
  {
    "text": "the main package just because you fix the bck in a test implementation that doesn't make sense you can but that",
    "start": "2874480",
    "end": "2880800"
  },
  {
    "text": "means that every time you you introduce a fix or Inc capability you also have to release a new version of the main one",
    "start": "2880800",
    "end": "2885839"
  },
  {
    "text": "and releasing new versions means you have to think about versioning semantic versioning backward compatibility by",
    "start": "2885839",
    "end": "2891079"
  },
  {
    "text": "doing this you end up with potentially more packages than you may like it feels a bit unnatural but it really uh allows",
    "start": "2891079",
    "end": "2897880"
  },
  {
    "text": "you to control the amount of dependency H that you can add that you have and of course no cyclic dependencies of course",
    "start": "2897880",
    "end": "2905040"
  },
  {
    "text": "not so um those are again steps to improve the design the code the design",
    "start": "2905040",
    "end": "2911119"
  },
  {
    "text": "deployability we've done all of that um that's the point where you start thinking about the architecture which is",
    "start": "2911119",
    "end": "2916920"
  },
  {
    "text": "always the last step you basically do everything you've learned you've built your mental model",
    "start": "2916920",
    "end": "2922160"
  },
  {
    "text": "you've understand the code bases you understand what that code base is supposed to do what are the environmental constraints all the things",
    "start": "2922160",
    "end": "2928720"
  },
  {
    "text": "you hopefully have picked up now it's time to think okay is the architecture that it currently uses the right one or",
    "start": "2928720",
    "end": "2935599"
  },
  {
    "text": "or not maybe it is using the right architecture I I actually worked with a team and they were struggling with the",
    "start": "2935599",
    "end": "2941640"
  },
  {
    "text": "unit testing scope and everything and I actually discovered by understanding the dependencies look at the code and trying",
    "start": "2941640",
    "end": "2947280"
  },
  {
    "text": "to draw pictures by myself that they were using an onion architecture but nobody in the team had a clue they were",
    "start": "2947280",
    "end": "2953280"
  },
  {
    "text": "doing that because it wasn't completely it wasn't obvious from the code base there was no screaming architecture",
    "start": "2953280",
    "end": "2958480"
  },
  {
    "text": "there were no visual representations they didn't know well it was actually a pretty nice architecture style for them",
    "start": "2958480",
    "end": "2965920"
  },
  {
    "text": "and the only thing I had to do is to rename some projects rename fos to make that a bit more obvious for them and",
    "start": "2965920",
    "end": "2971720"
  },
  {
    "text": "then suddenly also you know figuring out what's the scope of a test what should be tested together what should be tested",
    "start": "2971720",
    "end": "2977040"
  },
  {
    "text": "separately became almost a no-brainer but if it isn't very obvious or that is not an actual specific architecture I",
    "start": "2977040",
    "end": "2984400"
  },
  {
    "text": "would just Define something and I'm again using this picture because I was too lazy to create a new picture but this is like I basically come up with",
    "start": "2984400",
    "end": "2990559"
  },
  {
    "text": "something I literally create a diagram something like that I put it somewhere that people can see it maybe in repo",
    "start": "2990559",
    "end": "2996079"
  },
  {
    "text": "confence SharePoint well then you won't be able to find it back but some other place uh to help people also understand",
    "start": "2996079",
    "end": "3002440"
  },
  {
    "text": "where are we moving this code base too you know and maybe you can use an onion architecture because it help it",
    "start": "3002440",
    "end": "3009079"
  },
  {
    "text": "deals with the whole dependency version principle very nicely maybe in hexagonal hexagonal I don't can't even pronounce",
    "start": "3009079",
    "end": "3014960"
  },
  {
    "text": "it correctly but which is basically the same principle is just using um different terminology like primary ports",
    "start": "3014960",
    "end": "3021720"
  },
  {
    "text": "secondary ports but again dependencies go inside so it it Embraces the dependency Vision sorry dependency",
    "start": "3021720",
    "end": "3029000"
  },
  {
    "text": "inversion principle on the architectural level uh maybe clean architecture which",
    "start": "3029000",
    "end": "3034400"
  },
  {
    "text": "is Uncle Bob's own version of The Onion architecture same principle could be you",
    "start": "3034400",
    "end": "3039440"
  },
  {
    "text": "don't have to by the way these architecture styles are are supposed to solve certain problems if you don't have",
    "start": "3039440",
    "end": "3045559"
  },
  {
    "text": "those problems don't introduce an architecture style like that you know i' I have had a lot of experience with event sourcing it's a brilliant",
    "start": "3045559",
    "end": "3052799"
  },
  {
    "text": "architecture Styles if you have the problem that supposed to solve but it should never be something you used",
    "start": "3052799",
    "end": "3058280"
  },
  {
    "text": "because you like to use it or because it sounds cool well some people do and you know you can actually get new employers",
    "start": "3058280",
    "end": "3064480"
  },
  {
    "text": "doing that but again they have certain purpose understand that um oh that's",
    "start": "3064480",
    "end": "3071599"
  },
  {
    "text": "actually the end already that's cool just in time so I missed the uh I",
    "start": "3071599",
    "end": "3077079"
  },
  {
    "text": "actually removed the uh the recap so essentially I'm going through the whole cycle you know understanding the",
    "start": "3077079",
    "end": "3083200"
  },
  {
    "text": "production environment understanding the code removing the de code uh what is it more",
    "start": "3083200",
    "end": "3088640"
  },
  {
    "text": "improving the deployment pipeline uh adding characteristics test you know building the safety net and then",
    "start": "3088640",
    "end": "3094040"
  },
  {
    "text": "gradually gradually refactoring the code base deleting old code uh deleting that",
    "start": "3094040",
    "end": "3099079"
  },
  {
    "text": "code uh gradually introducing unit tests uh um then at some point you know",
    "start": "3099079",
    "end": "3104280"
  },
  {
    "text": "looking at the design trying to structure code Bas the code base in a more functional way making sure that you",
    "start": "3104280",
    "end": "3110160"
  },
  {
    "text": "apply dry correctly so things which are supposed to be reusable keep them as a reusable piece of code which is",
    "start": "3110160",
    "end": "3116160"
  },
  {
    "text": "separately covered by test because that's easy everything else you start to just duplicate code because it reduces",
    "start": "3116160",
    "end": "3121799"
  },
  {
    "text": "coupling because that's what we want we want to reduce coupling I realized that was a lot of information on Friday",
    "start": "3121799",
    "end": "3127680"
  },
  {
    "text": "morning on the third day of the conference after two nights of maybe drinking a bit too much um I hope you",
    "start": "3127680",
    "end": "3134559"
  },
  {
    "text": "enjoyed it I expect there will be questions you can reach me through these channels I love looking at this stuff",
    "start": "3134559",
    "end": "3140119"
  },
  {
    "text": "and give you insights and you know this stuff I also do free um uh consultancy",
    "start": "3140119",
    "end": "3145319"
  },
  {
    "text": "gigs for this kind of stuff so reach out to me I hope you enjoy the the rest of the day I'm happy to go back to the",
    "start": "3145319",
    "end": "3151079"
  },
  {
    "text": "Netherlands and thank you for your",
    "start": "3151079",
    "end": "3155000"
  },
  {
    "text": "attention",
    "start": "3171040",
    "end": "3174040"
  }
]