[
  {
    "start": "0",
    "end": "24000"
  },
  {
    "text": "i think we'll get started so my name is steven ruiz carter and today we're going to have a look at same site cookies what",
    "start": "6560",
    "end": "12559"
  },
  {
    "text": "they are and why they matter and why as developers as web developers we need to know what they are and need to be aware",
    "start": "12559",
    "end": "18720"
  },
  {
    "text": "of them when we're building our applications so come on turn the page thank you",
    "start": "18720",
    "end": "24160"
  },
  {
    "start": "24000",
    "end": "58000"
  },
  {
    "text": "so same site cookie started out as a proposal for a cookie attribute called first party and it was proposed in",
    "start": "24160",
    "end": "31599"
  },
  {
    "text": "october 2014 by google and the idea was to mitigate the risk of cross-site request forgery and so it would specify",
    "start": "31599",
    "end": "38640"
  },
  {
    "text": "a cookie and when it could actually be used and when it could be sent on requests so only on first party requests",
    "start": "38640",
    "end": "44160"
  },
  {
    "text": "as the name suggested so it's first called first party and it was a simple attribute that was added to the cookie in the same way that the http",
    "start": "44160",
    "end": "51600"
  },
  {
    "text": "only attribute is added or a secure attribute is added we just add it onto the cookie and there's no value set",
    "start": "51600",
    "end": "58640"
  },
  {
    "text": "so after that after they first named it um proposed it as first party cookie they changed the name to first party",
    "start": "58640",
    "end": "64960"
  },
  {
    "text": "only in february 2015 they're taking a little bit more clearer as to what the purpose of the cookie was",
    "start": "64960",
    "end": "70799"
  },
  {
    "text": "and then in january 2016 it got renamed to same site i'm assuming to move away from the naming system of first party",
    "start": "70799",
    "end": "77759"
  },
  {
    "text": "and third party over to same site and cross site which matches more with crossout request forgery and is a bit clear as to what",
    "start": "77759",
    "end": "84320"
  },
  {
    "text": "what it's dealing with site as opposed to parties so that was in january 2016 when it was",
    "start": "84320",
    "end": "90320"
  },
  {
    "text": "changed to same site but it was still only an attribute it was added there was no value at all added on there so there",
    "start": "90320",
    "end": "96320"
  },
  {
    "text": "was no way to define the specific behavior in the use case that you're using it for",
    "start": "96320",
    "end": "101439"
  },
  {
    "text": "and so in april 2016 they proposed three values were set on the same site cookie attribute so you've got strict lacks and",
    "start": "101439",
    "end": "108399"
  },
  {
    "text": "none and these three define the behavior of the cookie depending on the different scenarios that you might need to use it in and",
    "start": "108399",
    "end": "114799"
  },
  {
    "text": "they make it much more flexible and much more usable so that was proposed in april 2016 and",
    "start": "114799",
    "end": "119920"
  },
  {
    "text": "then in may 2016 google chrome 51 added support for it so it was rolled out to the internet where you could add the",
    "start": "119920",
    "end": "126079"
  },
  {
    "text": "same size cookie attribute to your cookies and google chrome would would acknowledge it would follow it and would",
    "start": "126079",
    "end": "132000"
  },
  {
    "text": "attach cookies following the rules that are specified so that was in may 2016. so it's been around for for quite a number of years",
    "start": "132000",
    "end": "140480"
  },
  {
    "start": "140000",
    "end": "292000"
  },
  {
    "text": "but the question is what is the purpose why is what problem is it trying to solve and before we dive too deeply into",
    "start": "140480",
    "end": "146480"
  },
  {
    "text": "how it works we need to understand what cross-site request forgery attacks are csrf attacks because we don't understand",
    "start": "146480",
    "end": "153519"
  },
  {
    "text": "that we don't understand the purpose of the cookie and what it's trying to defend against then understanding the rules and why",
    "start": "153519",
    "end": "159519"
  },
  {
    "text": "they're there it's a lot harder to do so in a nutshell a crosstalk request",
    "start": "159519",
    "end": "164959"
  },
  {
    "text": "forgery is attacking this sort of request this sort of transaction so if you're a user and you wish to",
    "start": "164959",
    "end": "170319"
  },
  {
    "text": "update your password on a website you would make something like a post request to mysite.com account and you would send",
    "start": "170319",
    "end": "176959"
  },
  {
    "text": "the password as a value on that request so when that request comes through to the server the server sees it",
    "start": "176959",
    "end": "183599"
  },
  {
    "text": "and it acknowledges the user and it checks the cookies the user is providing and it says this user has been authenticated",
    "start": "183599",
    "end": "189920"
  },
  {
    "text": "and then it changes the user's password and so when the request goes through the user's password gets updated to the",
    "start": "189920",
    "end": "195280"
  },
  {
    "text": "correct password on that post request but the problem is if you don't have any csrf protection on this request",
    "start": "195280",
    "end": "202800"
  },
  {
    "text": "then a hacker can hijack it so if you as the evil hacker can trick a user into visiting your site so say",
    "start": "202800",
    "end": "209280"
  },
  {
    "text": "another site.com if you can get the user to go here then you have control of the user's browser and if you can run",
    "start": "209280",
    "end": "215360"
  },
  {
    "text": "javascript in the user's browser which you can do if they visit your site then you can cause the user's browser to",
    "start": "215360",
    "end": "221840"
  },
  {
    "text": "make requests that you want and you can send forge requests so in this example the user visits anothersite.com which",
    "start": "221840",
    "end": "228319"
  },
  {
    "text": "runs javascript which makes a post request to mysite.com account and that includes a different password",
    "start": "228319",
    "end": "235040"
  },
  {
    "text": "and now the server receives this request from the user the post request mysite.com account with the different",
    "start": "235040",
    "end": "240560"
  },
  {
    "text": "password and the browser has helpfully added the user's cookies on there because it knows my site.com",
    "start": "240560",
    "end": "247360"
  },
  {
    "text": "and it says okay this is a request to mysite.com i know this site i have cookies and it attaches the cookies",
    "start": "247360",
    "end": "254000"
  },
  {
    "text": "so the request hits my site.com mysite.com says fantastic i'm going to update the password because you've told",
    "start": "254000",
    "end": "259280"
  },
  {
    "text": "me so i can read your cookies i know that you're a user it's all good but what's happened is the evil hacker",
    "start": "259280",
    "end": "265840"
  },
  {
    "text": "has now updated the user's password the user has no idea this has happened they have no visibility they might not even",
    "start": "265840",
    "end": "271440"
  },
  {
    "text": "notice for months weeks years because it's all happened when they visited anothersite.com and it was done",
    "start": "271440",
    "end": "277199"
  },
  {
    "text": "in the background and the server had no way of knowing this was a forged request",
    "start": "277199",
    "end": "282479"
  },
  {
    "text": "because as far as they were concerned it was a legitimate request it had a cookie and everything it had the authentication cookie so how is it supposed to know",
    "start": "282479",
    "end": "289040"
  },
  {
    "text": "that it wasn't supposed to change the user's password and that's where csrf protection comes",
    "start": "289040",
    "end": "294320"
  },
  {
    "start": "292000",
    "end": "443000"
  },
  {
    "text": "in so traditionally we would use something like a csrf token and the way that works is you generate",
    "start": "294320",
    "end": "300400"
  },
  {
    "text": "the secret the token on the server and you attach it to all the requests that are going out to",
    "start": "300400",
    "end": "306000"
  },
  {
    "text": "the browser so the browser has the token in the form and when when the user submits the password change form it",
    "start": "306000",
    "end": "312479"
  },
  {
    "text": "includes the token and it sends it back to the server and when the server receives the request",
    "start": "312479",
    "end": "317520"
  },
  {
    "text": "it checks the csrf token that it received from the request against the one that it knows that it's sent to the",
    "start": "317520",
    "end": "323600"
  },
  {
    "text": "browser in the first place and if the token is invalid if it doesn't match if it does if it's not there",
    "start": "323600",
    "end": "329440"
  },
  {
    "text": "then it will request reject the request and the reason this works is their",
    "start": "329440",
    "end": "334560"
  },
  {
    "text": "browser's security settings say that you can make external requests you can make cross-site requests you can send data to",
    "start": "334560",
    "end": "340800"
  },
  {
    "text": "a different site so you can send data from another site.com to mysite.com but you cannot read the result you",
    "start": "340800",
    "end": "347120"
  },
  {
    "text": "cannot read the response so there's no way for another site.com to retrieve to access to get the csrf",
    "start": "347120",
    "end": "353600"
  },
  {
    "text": "token because the browser won't let it the browser lets it send the request and the server will respond but the browser",
    "start": "353600",
    "end": "359680"
  },
  {
    "text": "won't let the javascript read the response and so it won't get the token and so you cannot steal a csrf token",
    "start": "359680",
    "end": "365120"
  },
  {
    "text": "using that method which is why csrf tokens are used to protect from this sort of attack",
    "start": "365120",
    "end": "370400"
  },
  {
    "text": "now another option you could use is to check the origin or the referral header because browser's security settings",
    "start": "370400",
    "end": "377120"
  },
  {
    "text": "similar to the csrf token browser security settings prevent the um prevent you from modifying these",
    "start": "377120",
    "end": "383199"
  },
  {
    "text": "on requests so you cannot send a forged request and change the origin or the referral header",
    "start": "383199",
    "end": "388800"
  },
  {
    "text": "and so the server can check these values and if it knows what to expect if it can can expect a specific origin or if a",
    "start": "388800",
    "end": "394400"
  },
  {
    "text": "value then you can check that because you can trust the values coming from the browser and not the attacker's javascript",
    "start": "394400",
    "end": "401280"
  },
  {
    "text": "now the third option that you can use if you can't use a csrf token or not or the",
    "start": "401280",
    "end": "406400"
  },
  {
    "text": "origin or referral header is to use some form of client side cryptographical magic",
    "start": "406400",
    "end": "411680"
  },
  {
    "text": "and some applications you just can't use a csrf token you can't set the headers you have to do something else and so you",
    "start": "411680",
    "end": "417360"
  },
  {
    "text": "have a proof of work or some keys or something like that the point is that the attacker cannot replicate cannot",
    "start": "417360",
    "end": "423840"
  },
  {
    "text": "fake or forge the cryptographical magic and so when the request hits the server it knows that it's a forged request",
    "start": "423840",
    "end": "429840"
  },
  {
    "text": "because you were unable to forge that magic reforge that request but there is also a fourth option as you",
    "start": "429840",
    "end": "436319"
  },
  {
    "text": "probably saw coming is the same site cookies and you can use that to prevent these requests prevent",
    "start": "436319",
    "end": "441520"
  },
  {
    "text": "these attacks as well so it seems like cookies are added onto a cookie as i explained before by just",
    "start": "441520",
    "end": "448080"
  },
  {
    "text": "on the end the same way that you would add secure at http only and so you've got the cookie value there you've got",
    "start": "448080",
    "end": "453280"
  },
  {
    "text": "set cookie then you've got the cookie value then there's a semicolon then you've got same site equal strict or none or lacks that's all it is you're",
    "start": "453280",
    "end": "459759"
  },
  {
    "text": "just adding the attribute adding that extra information onto the cookie to tell it the behavior that is required of",
    "start": "459759",
    "end": "465120"
  },
  {
    "text": "the browser when the cookie is being used so can you use same site is it safe to",
    "start": "465120",
    "end": "471360"
  },
  {
    "start": "468000",
    "end": "494000"
  },
  {
    "text": "use has it supported and it's pretty widely supported across all the major browsers there's a couple of interesting",
    "start": "471360",
    "end": "476639"
  },
  {
    "text": "things if i and some safari things but that's being resolved and everything else that works fine except for oprah",
    "start": "476639",
    "end": "481840"
  },
  {
    "text": "mini i'm not sure who actually uses that anymore so it's pretty safe to use um and yeah",
    "start": "481840",
    "end": "487199"
  },
  {
    "text": "there's no downsides to implementing it on your site then you'll just add to your security add to the strength of",
    "start": "487199",
    "end": "492800"
  },
  {
    "text": "your cookies so same site strict is the the the most secure the most strict",
    "start": "492800",
    "end": "499680"
  },
  {
    "start": "494000",
    "end": "592000"
  },
  {
    "text": "option and it says that cookies that are marked as same such strict can never be sent on any cross-site requests",
    "start": "499680",
    "end": "507440"
  },
  {
    "text": "so that means embedded content such as iframes and images it's not sent unsafe requests such as post put and delete",
    "start": "507440",
    "end": "513279"
  },
  {
    "text": "they're not sent even safe requests to get requests and head requests it's not going to send the cookie so if",
    "start": "513279",
    "end": "519919"
  },
  {
    "text": "your browser is making a request from another site.com to mysite.com the cookie is never going to be sent which",
    "start": "519919",
    "end": "526720"
  },
  {
    "text": "means it blocks all csrf attacks when the cookies are required because the cookies are never sent and so the",
    "start": "526720",
    "end": "532240"
  },
  {
    "text": "authentication cookie that the server is expecting won't be received won't get there",
    "start": "532240",
    "end": "537440"
  },
  {
    "text": "the downside of this is that and you may have picked this up already the get request",
    "start": "537440",
    "end": "542720"
  },
  {
    "text": "so if you're on twitter.com and you click on assign a link that goes to mysite.com the first request you go",
    "start": "542720",
    "end": "548959"
  },
  {
    "text": "there if the cookie is set to send out strict won't have the cookie so if your users are expecting to click",
    "start": "548959",
    "end": "554480"
  },
  {
    "text": "on a link and go to your site and be logged in they will be logged in the cookie won't be sent now as soon as they do anything else",
    "start": "554480",
    "end": "561200"
  },
  {
    "text": "they make one more request one more click on a link inside your site that's considered a same site request",
    "start": "561200",
    "end": "567519"
  },
  {
    "text": "and suddenly the cookie is attached and magically the users are logged in which can be really really confusing and",
    "start": "567519",
    "end": "573600"
  },
  {
    "text": "really strange for users who can't quite understand why when they first hit the site they're not logged in and they go",
    "start": "573600",
    "end": "578720"
  },
  {
    "text": "to click on the login link and suddenly they're logged in that's just weird and so you need to be careful with strict",
    "start": "578720",
    "end": "584160"
  },
  {
    "text": "that you only use it in situations where the first request doesn't need to be logged in because their cookies won't be",
    "start": "584160",
    "end": "591600"
  },
  {
    "text": "sent now the other end of the spectrum from strict is same site none",
    "start": "591600",
    "end": "597440"
  },
  {
    "start": "592000",
    "end": "678000"
  },
  {
    "text": "and none says we want to send the cookies on every single request so that means send them on embedded content send",
    "start": "597440",
    "end": "603680"
  },
  {
    "text": "them on unsafe requests send them on safe requests to send the cookie on every single request",
    "start": "603680",
    "end": "608880"
  },
  {
    "text": "and that is the current behavior that cookies have when it's not set in most browsers i'll get to that shortly is",
    "start": "608880",
    "end": "614240"
  },
  {
    "text": "that the cookie is always sent now there is an exception in with same site none as part of the",
    "start": "614240",
    "end": "620480"
  },
  {
    "text": "browser's efforts to make the internet more secure and more private and raise the security and encourage",
    "start": "620480",
    "end": "626160"
  },
  {
    "text": "websites to use https they're actually requiring the secure flag to be set on same site none so if",
    "start": "626160",
    "end": "632480"
  },
  {
    "text": "you set a cookie with same site none and the cookie doesn't have the secure flag or it's not accessed over https",
    "start": "632480",
    "end": "640000"
  },
  {
    "text": "then it's considered an invalid cookie and it's not going to be sent so you need to have the secure flag in order to",
    "start": "640000",
    "end": "646079"
  },
  {
    "text": "use same site none and has to be done over https so as you would expect same site none",
    "start": "646079",
    "end": "652000"
  },
  {
    "text": "doesn't block any csrf attacks because it always sends the cookie and so if you need to use things like none you need to",
    "start": "652000",
    "end": "658320"
  },
  {
    "text": "have csrf protection in place to protect those requests and protect those actions because same site none isn't going to",
    "start": "658320",
    "end": "664959"
  },
  {
    "text": "protect you for it so as i said same site none if you don't send secure it won't be sent and it's",
    "start": "664959",
    "end": "671279"
  },
  {
    "text": "considered an invalid cookie and it will be dropped it just won't be sent on any request and so there's no point setting it",
    "start": "671279",
    "end": "678959"
  },
  {
    "text": "now the happy middle ground between none and lacks none insecure sorry is lacks and lacks says that we will only allow",
    "start": "678959",
    "end": "686240"
  },
  {
    "text": "safe requests to have cookies so embedded content such as iframes images no there are no cookies allowed on those",
    "start": "686240",
    "end": "692240"
  },
  {
    "text": "ones unsafe requests post put delete etc no cookies allowed but you do want them",
    "start": "692240",
    "end": "697760"
  },
  {
    "text": "on get in head and this goes back to a scenario where you're on say twitter.com and you click on mysite.com",
    "start": "697760",
    "end": "704160"
  },
  {
    "text": "when the user makes that get request that cross-site guest get request from twitter.comtomysite.com",
    "start": "704160",
    "end": "710560"
  },
  {
    "text": "the cookies will be added because same site lacks allows the cookies to be added therefore the users will be logged in",
    "start": "710560",
    "end": "716000"
  },
  {
    "text": "when they hit the site and there'll be no confusion and so lacks is is a nice happy saying default",
    "start": "716000",
    "end": "721680"
  },
  {
    "text": "insane same medium between the two extremes because in general when people are",
    "start": "721680",
    "end": "727120"
  },
  {
    "text": "clicking through the internet clicking on get requests they want their cookies to load them up",
    "start": "727120",
    "end": "732160"
  },
  {
    "text": "and log them in but they want to be protected from csrf attacks and other such things such as embedded content you",
    "start": "732160",
    "end": "737360"
  },
  {
    "text": "can have click checking attacks for example and so same set lacks will protect against those",
    "start": "737360",
    "end": "742399"
  },
  {
    "text": "now sounds like lacks as you would expect protects against cs3f attacks but only",
    "start": "742399",
    "end": "747600"
  },
  {
    "text": "on unsafe requests and embedded content so it won't protect against a csrf attack if it can be executed over a safe",
    "start": "747600",
    "end": "753760"
  },
  {
    "text": "request over a get request so time for a little story so at the",
    "start": "753760",
    "end": "758800"
  },
  {
    "start": "756000",
    "end": "813000"
  },
  {
    "text": "start of this year which was a long time ago as i'm sure we'll all agree i was preparing for a talk edward",
    "start": "758800",
    "end": "765200"
  },
  {
    "text": "campager and part of that talks the talk was a live hacking demo of hacking into",
    "start": "765200",
    "end": "771360"
  },
  {
    "text": "wordpress where i demonstrate various different vulnerabilities in wordpress sorry not wordpress in plugins and",
    "start": "771360",
    "end": "777279"
  },
  {
    "text": "dodgy coding that sort of things and older versions of wordpress and demonstrating various vulnerabilities and how you you handle those and how you",
    "start": "777279",
    "end": "784079"
  },
  {
    "text": "mitigate them and one such vulnerability is a nice little csrf attack where you",
    "start": "784079",
    "end": "789200"
  },
  {
    "text": "can upload a php file onto the server so i was practicing my talk and i had done it quite successfully on in august",
    "start": "789200",
    "end": "796000"
  },
  {
    "text": "last year at a conference and so i was running through everything making sure it was all working i didn't expect anything to be wrong and i got to my",
    "start": "796000",
    "end": "802480"
  },
  {
    "text": "csrf attack and it didn't work it just failed the file didn't get uploaded at all and it was really weird",
    "start": "802480",
    "end": "808079"
  },
  {
    "text": "and i was trying to work out what was going on",
    "start": "808079",
    "end": "811680"
  },
  {
    "start": "813000",
    "end": "833000"
  },
  {
    "text": "and then i checked the browser console and i saw this message a cookie associated with a cross site",
    "start": "813440",
    "end": "819120"
  },
  {
    "text": "resource was set without the same site attribute it has been blocked as chrome now only delivers cookies with cross",
    "start": "819120",
    "end": "825040"
  },
  {
    "text": "site requests if they are set with same site none as secure and suddenly it always sends something i",
    "start": "825040",
    "end": "831440"
  },
  {
    "text": "remembered what was going on so back in may last year google announced that they were working to",
    "start": "831440",
    "end": "837839"
  },
  {
    "start": "833000",
    "end": "859000"
  },
  {
    "text": "improve privacy and security on the internet and part of that was to use the same site cookie attribute",
    "start": "837839",
    "end": "843199"
  },
  {
    "text": "in order to make requests more secure and mitigate common vulnerabilities",
    "start": "843199",
    "end": "848639"
  },
  {
    "text": "and attacks such as csf attacks so they were talking about defaulting same site to lax in order to make most",
    "start": "848639",
    "end": "855920"
  },
  {
    "text": "requests a lot more secure and lock down things and in october last year they reiterated",
    "start": "855920",
    "end": "861120"
  },
  {
    "text": "it and provided details and they announced they would be setting same site lacks by default on all cookies that didn't have a same site attribute",
    "start": "861120",
    "end": "867440"
  },
  {
    "text": "set and they would also be enforcing secure on same site none and they announced this in october last",
    "start": "867440",
    "end": "874079"
  },
  {
    "text": "year and then they said it was going to come out in chrome 80 in february that was when they were going to start",
    "start": "874079",
    "end": "879680"
  },
  {
    "text": "rolling out this same site lacks by default to all users so if you're doing the maths and you're",
    "start": "879680",
    "end": "884720"
  },
  {
    "text": "working at remembering the dates i mentioned i was testing my code in january and this was coming out in feb",
    "start": "884720",
    "end": "890800"
  },
  {
    "text": "but there are these flags so in october last year when google announced this and was telling making a big noise about",
    "start": "890800",
    "end": "897199"
  },
  {
    "start": "891000",
    "end": "960000"
  },
  {
    "text": "these changes they are implementing a bunch of bloggers and security experts such as troy hart and scott helm we're",
    "start": "897199",
    "end": "903199"
  },
  {
    "text": "blogging about this and talking about how you can test it out now and if you go into the chrome you can enable these flags and then it would enable same site",
    "start": "903199",
    "end": "910399"
  },
  {
    "text": "lacks by default in early and so you could test it out and make sure that all your sites are working i did that",
    "start": "910399",
    "end": "915839"
  },
  {
    "text": "back in october last year i think it was i'd turn these on and there were a couple of weeks where google hangouts wasn't working which was",
    "start": "915839",
    "end": "921440"
  },
  {
    "text": "quite entertaining that google hadn't got that right and the ato website had a weird payment issue but apart from that",
    "start": "921440",
    "end": "927360"
  },
  {
    "text": "nothing else broken so i completely forgot about it then when i was repairing my talking in january it just wasn't working because i had those set",
    "start": "927360",
    "end": "934800"
  },
  {
    "text": "and that was the reason why i never was most busted even before they'd done the rollout was because i had manually",
    "start": "934800",
    "end": "940399"
  },
  {
    "text": "enabled seems like likes by default and it was working perfectly it was doing its exact job it was protecting",
    "start": "940399",
    "end": "946240"
  },
  {
    "text": "the user from a csrf attack on this site so even though the website was vulnerable my browser chrome was blocking the",
    "start": "946240",
    "end": "952959"
  },
  {
    "text": "attack it was protecting me as a user from the attack that the evil that the evil hacker was trying to commit",
    "start": "952959",
    "end": "960000"
  },
  {
    "start": "960000",
    "end": "978000"
  },
  {
    "text": "so in february feb this year sorry in feb this year",
    "start": "960160",
    "end": "965839"
  },
  {
    "text": "google reiterated they were rolling out they were starting to roll out the change in chrome 80 to let everyone know",
    "start": "965839",
    "end": "971680"
  },
  {
    "text": "and so they started rolling out the change and started rolling out same site lacks by default to chrome",
    "start": "971680",
    "end": "977120"
  },
  {
    "text": "however covert hit and google realized in april or pro lead up to april i'm not sure exactly when",
    "start": "977120",
    "end": "982320"
  },
  {
    "start": "978000",
    "end": "1048000"
  },
  {
    "text": "they had this realization but they announced in april they would be rolling back same-sex lacks by default",
    "start": "982320",
    "end": "987680"
  },
  {
    "text": "because everyone was moving to working from home and when you're dealing with a lot of users that are moving from an",
    "start": "987680",
    "end": "992720"
  },
  {
    "text": "office to working from home especially those in large enterprises and corporations where they've got tens",
    "start": "992720",
    "end": "997759"
  },
  {
    "text": "hundreds maybe even thousands of different systems that all tie together in some very very carefully constructed",
    "start": "997759",
    "end": "1003839"
  },
  {
    "text": "chaos rolling out a change like same site lacks that could break cookies in weird and unexpected ways",
    "start": "1003839",
    "end": "1010560"
  },
  {
    "text": "could be a huge problem and you could break an entire company's internal systems by blocking their cookies inadvertently",
    "start": "1010560",
    "end": "1017040"
  },
  {
    "text": "and so google decided to roll back same site likes by default and allow everyone to transition to home",
    "start": "1017040",
    "end": "1022560"
  },
  {
    "text": "and have a stable internet and it wasn't just samsung expert default there's a bunch of different things that chrome and microsoft and a few other but the",
    "start": "1022560",
    "end": "1029038"
  },
  {
    "text": "big companies rob said they were going to do when they slowed down updates and things for the purpose",
    "start": "1029039",
    "end": "1034160"
  },
  {
    "text": "of making the internet a little bit more stable and so chrome announced you in april that they were rolling back that and",
    "start": "1034160",
    "end": "1039678"
  },
  {
    "text": "they would in the future at some point reintroduce same-side lacks by default",
    "start": "1039679",
    "end": "1045038"
  },
  {
    "text": "once they felt it was the right point so may 28 of this year idea a talk very",
    "start": "1045039",
    "end": "1051600"
  },
  {
    "text": "similar to this at lara con eu and as part of the talk i mentioned that google",
    "start": "1051600",
    "end": "1057280"
  },
  {
    "text": "paused the role out and they haven't announced yet when they were going to do the rollout so i did the talk in the evening of that",
    "start": "1057280",
    "end": "1063280"
  },
  {
    "text": "night and then i woke up in the morning to this twit to this tweet and what do you know google announced a few hours",
    "start": "1063280",
    "end": "1068720"
  },
  {
    "start": "1065000",
    "end": "1088000"
  },
  {
    "text": "after my talk that they were going to re-enable lex by default the rollout in july in chrome 84. so i thought the",
    "start": "1068720",
    "end": "1075520"
  },
  {
    "text": "timing of that was quite hilarious that they were going to they announced the push to restart the rollout after i'd",
    "start": "1075520",
    "end": "1080880"
  },
  {
    "text": "just done a talk saying that they hadn't announced it yet so that was quite funny so that was in july um this year and",
    "start": "1080880",
    "end": "1086480"
  },
  {
    "text": "they started the rollout and in august this year they finished it and so now since august google chrome",
    "start": "1086480",
    "end": "1092160"
  },
  {
    "text": "has been defaulting to same site by lac same site equals lacks by default",
    "start": "1092160",
    "end": "1097280"
  },
  {
    "text": "for all cookies that don't have same site set and the fact that probably there's a few of you that haven't heard of this before",
    "start": "1097280",
    "end": "1104799"
  },
  {
    "text": "and hasn't been a big thing it hasn't really gone around the internet as google have broken the internet and made these changes and you need to fix these",
    "start": "1104799",
    "end": "1111200"
  },
  {
    "text": "things tells me that same site lacks is a good sane default because it allows the requests that need",
    "start": "1111200",
    "end": "1117919"
  },
  {
    "text": "cookies to operate normally the get requests but it blocks the requests that have csrf attacks and other such things as",
    "start": "1117919",
    "end": "1124480"
  },
  {
    "text": "common so it makes the internet safer but it hasn't made it less stable and hasn't broken a whole bunch of stuff so",
    "start": "1124480",
    "end": "1129840"
  },
  {
    "text": "that's really good but this isn't the end of the story",
    "start": "1129840",
    "end": "1136280"
  },
  {
    "text": "so when google announced same site lacks by default a bunch of companies and went away and",
    "start": "1138960",
    "end": "1144000"
  },
  {
    "text": "thought about how it's going to affect their affect their things and microsoft came back to google and said wait a",
    "start": "1144000",
    "end": "1149360"
  },
  {
    "text": "second this is going to break things because they realize that as part of the open id can connect authentication flow",
    "start": "1149360",
    "end": "1155679"
  },
  {
    "text": "that as your active directory and microsoft account uses it was going to break the flow",
    "start": "1155679",
    "end": "1160960"
  },
  {
    "text": "so the way that flow works is the user clicks the um login on mysite.com and",
    "start": "1160960",
    "end": "1166240"
  },
  {
    "text": "that sets a csrf cookie csrf token in a cookie and it redirects the userof.com so the user the user's",
    "start": "1166240",
    "end": "1173600"
  },
  {
    "text": "browser visitsoft.com the user authenticates and does the single sign on there and then that redirects the user back to",
    "start": "1173600",
    "end": "1180720"
  },
  {
    "text": "my site.com as a post request with the completed authentication tokens now when you have same site lacks in",
    "start": "1180720",
    "end": "1187200"
  },
  {
    "text": "there as well that post request going back to mysite.com comes from off.com that's",
    "start": "1187200",
    "end": "1192559"
  },
  {
    "text": "considered a cross-site request and the browser says no cookies thank you and so it doesn't attach the csrf",
    "start": "1192559",
    "end": "1198880"
  },
  {
    "text": "token cookie so when the request gets back to mysite.com the cookie is missing because the",
    "start": "1198880",
    "end": "1205200"
  },
  {
    "text": "browser has blocked it and the server the mysite.com says where's your cookie you're not a legitimate request go away",
    "start": "1205200",
    "end": "1212000"
  },
  {
    "text": "and so the authentication fails and that's a big problem this isn't just",
    "start": "1212000",
    "end": "1217200"
  },
  {
    "text": "a case of microsoft updating their code and rolling it out to their fleet this is",
    "start": "1217200",
    "end": "1222480"
  },
  {
    "text": "code that is implemented in user systems in enterprise systems in any system that's implementing this flow",
    "start": "1222480",
    "end": "1228880"
  },
  {
    "text": "and it's written up in all the example documentation example code and all those different places and so it's very very hard",
    "start": "1228880",
    "end": "1234559"
  },
  {
    "text": "to quickly make a change to this there are a lot of developers that don't keep an eye on these sorts of things a lot of",
    "start": "1234559",
    "end": "1239919"
  },
  {
    "text": "systems that have been built by contractors that don't have active development and this was a big problem i don't know",
    "start": "1239919",
    "end": "1246080"
  },
  {
    "text": "exactly how many sites would have had this thing but this would be quite a common problem not just across the open",
    "start": "1246080",
    "end": "1251200"
  },
  {
    "text": "id connect but a whole lot a bunch of others i'm sure this is a very common pattern redirecting around using a post",
    "start": "1251200",
    "end": "1256480"
  },
  {
    "text": "request to send tokens that sort of thing and so google thought about how do we solve this problem how do we allow this",
    "start": "1256480",
    "end": "1262320"
  },
  {
    "text": "to work because they don't want this to break this is going to cause a big problem if they break half the internet because they've blocked this because",
    "start": "1262320",
    "end": "1268559"
  },
  {
    "text": "same site lacks by default blocks this and they came up with a thing called lax",
    "start": "1268559",
    "end": "1273760"
  },
  {
    "start": "1271000",
    "end": "1333000"
  },
  {
    "text": "plus post so the same site lacks plus post is set when the cookie is missing the same site",
    "start": "1273760",
    "end": "1280240"
  },
  {
    "text": "attribute and it allows safe requests through the lacks but it also allows any cookie that",
    "start": "1280240",
    "end": "1286240"
  },
  {
    "text": "was created less than two minutes ago so if you have a cookie so if you set your cookie and then you redirect",
    "start": "1286240",
    "end": "1292240"
  },
  {
    "text": "somewhere and then that redirects back within two minutes then the cookie is allowed the cookie is",
    "start": "1292240",
    "end": "1297760"
  },
  {
    "text": "sent and so the authentication is allowed to continue and the flow works and it solves the problem now this is this is only a",
    "start": "1297760",
    "end": "1303679"
  },
  {
    "text": "temporary solution i don't know when chrome are going to disable plus post maybe in two hours they're going to",
    "start": "1303679",
    "end": "1309440"
  },
  {
    "text": "announce that they're disabling it um if they follow the pattern from my last talk but i don't know when it's going to",
    "start": "1309440",
    "end": "1314640"
  },
  {
    "text": "happen um but the point is that this gives more time so it allows them to push out same site lacks by default now",
    "start": "1314640",
    "end": "1321760"
  },
  {
    "text": "but it gives more time for all the enterprise systems that can't instantly support it",
    "start": "1321760",
    "end": "1327039"
  },
  {
    "text": "which is quite good so that's like post and we'll have a look in the demo at that behavior in practice",
    "start": "1327039",
    "end": "1333520"
  },
  {
    "start": "1333000",
    "end": "1368000"
  },
  {
    "text": "so what is a same site domain because i was setting up a test i was trying to set up a demo",
    "start": "1333520",
    "end": "1338640"
  },
  {
    "text": "of same site and cross site requests and when i first set it up i did a bunch of sub domains on one of my domains because",
    "start": "1338640",
    "end": "1345120"
  },
  {
    "text": "it was the easiest option to provision and the cookies were always attached even when i was setting same site strict",
    "start": "1345120",
    "end": "1351280"
  },
  {
    "text": "it was still attaching the cookie and i realized that the same site means same site on the route so it allows",
    "start": "1351280",
    "end": "1357760"
  },
  {
    "text": "subdomains so mysite.com is considered the same site as static.mysite.com",
    "start": "1357760",
    "end": "1363039"
  },
  {
    "text": "and account.mysite.com they're all considered the same site",
    "start": "1363039",
    "end": "1368400"
  },
  {
    "start": "1368000",
    "end": "1439000"
  },
  {
    "text": "but what about something like github.io which is a public public domain well i",
    "start": "1368400",
    "end": "1373520"
  },
  {
    "text": "guess it probably is public domain in the sense that you can get a subdomain off it do we really want cookies to be",
    "start": "1373520",
    "end": "1379200"
  },
  {
    "text": "able to be sent across those different subdomains and that's where the public suffix list comes in",
    "start": "1379200",
    "end": "1384960"
  },
  {
    "text": "so it's a list of domains that are used for public subdomains like this like github.io",
    "start": "1384960",
    "end": "1391120"
  },
  {
    "text": "and it defines it as a cross-site domain and so a request going from laravel to github.io to velourin.github.io is",
    "start": "1391120",
    "end": "1397360"
  },
  {
    "text": "considered a cross-site request and if you use the same type strict on that it will be blocked because it's across that request and if if your site",
    "start": "1397360",
    "end": "1404640"
  },
  {
    "text": "if you're if your system your company uses a domain that has public subdomains like this then i would recommend checking out",
    "start": "1404640",
    "end": "1410320"
  },
  {
    "text": "that list to get your site get your domains added onto that list for out of security and",
    "start": "1410320",
    "end": "1415360"
  },
  {
    "text": "i'm pretty sure there are a few other things not just chrome same site domain samsung cookies i should say that actually use that list",
    "start": "1415360",
    "end": "1422960"
  },
  {
    "text": "so that's quite an insulin thing but it's it's the subtlety subtle difference between the difference in these two",
    "start": "1422960",
    "end": "1428240"
  },
  {
    "text": "domains so you've got the same site.com versus github.io and when you're trying to test test",
    "start": "1428240",
    "end": "1434080"
  },
  {
    "text": "things it can be confusing if you're not aware of what sort of domain that is",
    "start": "1434080",
    "end": "1440080"
  },
  {
    "start": "1439000",
    "end": "1447000"
  },
  {
    "text": "so let's look at some actual let's look at the browser and see this in action uh find the right tab cool okay so this is",
    "start": "1440480",
    "end": "1447919"
  },
  {
    "start": "1447000",
    "end": "1489000"
  },
  {
    "text": "my samsung cookies tester i will um dump the link into the chat if i can get it working",
    "start": "1447919",
    "end": "1454960"
  },
  {
    "text": "there we go and i might put it in slack as well in case it's easier in there give me a sec",
    "start": "1454960",
    "end": "1462000"
  },
  {
    "text": "okay so that's now in slack so feel free to jump on that now if you're interested um it should work on any anywhere",
    "start": "1462000",
    "end": "1467520"
  },
  {
    "text": "browser and you can use it to test the behavior of the cookies in your browser so in this case we're using chrome this",
    "start": "1467520",
    "end": "1474000"
  },
  {
    "text": "is an updated version of chrome so it should have the latest latest behavior",
    "start": "1474000",
    "end": "1479520"
  },
  {
    "text": "so there are two features in here we've got the manual tester and the automatic tester so i beat up the automatic tester and",
    "start": "1479520",
    "end": "1484880"
  },
  {
    "text": "i've run in the background and we'll come back to that in a minute now we'll go into the manual",
    "start": "1484880",
    "end": "1490000"
  },
  {
    "start": "1489000",
    "end": "1751000"
  },
  {
    "text": "so when you view the manual tester what it's going to do is it's going to set five cookies in the browser at least",
    "start": "1490000",
    "end": "1495600"
  },
  {
    "text": "attempt to set five cookies i'll throw open the inspector and we can see here we've got where's that request now let's",
    "start": "1495600",
    "end": "1501440"
  },
  {
    "text": "refresh didn't open that in time okay so set now can i get rid of",
    "start": "1501440",
    "end": "1507679"
  },
  {
    "text": "oh okay to make this little bit bigger that thing up there's annoying oh it doesn't matter okay so get rid of those and we",
    "start": "1507679",
    "end": "1514960"
  },
  {
    "text": "can see down in here the response cookie so these are the cookies that have been sent when this request came through from",
    "start": "1514960",
    "end": "1520080"
  },
  {
    "text": "the server so we've got the strict cookie here we just set with same site strict we've got",
    "start": "1520080",
    "end": "1525360"
  },
  {
    "text": "lax cookie set to lax secure none cookie is set to none and it has the secure flag set",
    "start": "1525360",
    "end": "1531440"
  },
  {
    "text": "we've got default cookie which doesn't have anything sent so there's no same site attribute set here at all and securities",
    "start": "1531440",
    "end": "1538000"
  },
  {
    "text": "and set on that one and then we've got none which has none set and secure isn't set now immediately we're going to notice",
    "start": "1538000",
    "end": "1544559"
  },
  {
    "text": "the yellow one at the bottom and a little pop-up thing which is telling us that secure same site none was blocked",
    "start": "1544559",
    "end": "1550960"
  },
  {
    "text": "because it doesn't have the secure attribute so chrome has rejected this cookie already when it was when the",
    "start": "1550960",
    "end": "1556000"
  },
  {
    "text": "browser when the server tried to set it and it's not going to remember it if we go up here and look at the request",
    "start": "1556000",
    "end": "1561600"
  },
  {
    "text": "cookies which is what we set from the previous time we loaded the page we're missing the non-cookie because",
    "start": "1561600",
    "end": "1567679"
  },
  {
    "text": "it's not considered valid in chrome and so this is quite handy because you can see the different",
    "start": "1567679",
    "end": "1572799"
  },
  {
    "text": "cookies and what's going on in here that's under the inspector you've got network then you click on the request and you can also filter in chrome has",
    "start": "1572799",
    "end": "1579600"
  },
  {
    "text": "blocked cookies and will only show you the requests that actually have block cookies in which case this one down here",
    "start": "1579600",
    "end": "1585760"
  },
  {
    "text": "which is really helpful when you're debugging cookies and debugging behaviors to work out what's going on",
    "start": "1585760",
    "end": "1592000"
  },
  {
    "text": "you can also show and hide the filtered out cookies the cookies that aren't sent these ones that are set from the automatic tester",
    "start": "1592000",
    "end": "1598480"
  },
  {
    "text": "so we'll get rid of those but again it's just some extra little helpers to make it easier for us to debug",
    "start": "1598480",
    "end": "1604080"
  },
  {
    "text": "and the last thing if it's going to work here we go so if we jump into the console",
    "start": "1604080",
    "end": "1609360"
  },
  {
    "text": "in the inspect and go view issues which is a new pain that google added we can see here it's telling us about our",
    "start": "1609360",
    "end": "1614799"
  },
  {
    "text": "cookie here so the same certain uncooking and it's telling us it's missing secure so telling us what the cookie is what",
    "start": "1614799",
    "end": "1620240"
  },
  {
    "text": "request it was and it's giving us a link to a really helpful page explaining explaining um the",
    "start": "1620240",
    "end": "1626080"
  },
  {
    "text": "behavior of this and what's going on this is quite helpful i'm in chrome out of this fairly recently um but it makes",
    "start": "1626080",
    "end": "1631919"
  },
  {
    "text": "a lot easier to debug what's going on with cookies in the browser so notebook over here",
    "start": "1631919",
    "end": "1636960"
  },
  {
    "text": "now cookies is that let's actually use them let's see what's happening so this is samesitetest.com we'll go to",
    "start": "1636960",
    "end": "1642399"
  },
  {
    "text": "an external site which is same site test external dot com this is a different site across site and we're going to make",
    "start": "1642399",
    "end": "1648159"
  },
  {
    "text": "a cross site get request we'll jump over here oops blocking cookies okay so so go to",
    "start": "1648159",
    "end": "1654399"
  },
  {
    "text": "the request we're on the the get request now so we've made a get request and as you can see here strict wasn't sent because get requests are",
    "start": "1654399",
    "end": "1661760"
  },
  {
    "text": "blocked on three cookies lacks was sent secure 9 is sent because it's always sent and default was sent because it's",
    "start": "1661760",
    "end": "1668159"
  },
  {
    "text": "defaulted to lacks so and none is invalid it's not there as well as we can see the same cookies down",
    "start": "1668159",
    "end": "1673520"
  },
  {
    "text": "here so as we would expect the get request if we set a lax cookie it comes through and",
    "start": "1673520",
    "end": "1679120"
  },
  {
    "text": "so the user can be authenticated when they hit it but if it's strict cookie they're not going to be sent it's not going to be set they're not",
    "start": "1679120",
    "end": "1684720"
  },
  {
    "text": "going to be logged in so jump back to the external side and we'll make iframe requests this time",
    "start": "1684720",
    "end": "1690080"
  },
  {
    "text": "this one is going to load up an iframe on same site test external and this frame goes to samesitetest.com",
    "start": "1690080",
    "end": "1696880"
  },
  {
    "text": "and in here we can see the only cookie that actually went through is the secure none because it's the only cookie that",
    "start": "1696880",
    "end": "1702320"
  },
  {
    "text": "is allowed to work on embedded requests which is the iframe and if we jump down in here we can see",
    "start": "1702320",
    "end": "1707600"
  },
  {
    "text": "the request here and the cookie is in here this one went through and if we click on the show",
    "start": "1707600",
    "end": "1712799"
  },
  {
    "text": "filtered out we can see we've got our other cookies strictly actually default and it's got them locked and the little info box here is telling",
    "start": "1712799",
    "end": "1719600"
  },
  {
    "text": "us why it didn't go through so this is chrome helping us to debug why our cookies weren't sent which is really",
    "start": "1719600",
    "end": "1726000"
  },
  {
    "text": "really helpful and finally we're going to check out our post request so clicking on this will",
    "start": "1726000",
    "end": "1731840"
  },
  {
    "text": "make a cross-site post request and again we only have secure nun sent",
    "start": "1731840",
    "end": "1737440"
  },
  {
    "text": "as you would expect so again we're protecting against the csrf attack on the cross site if we have lax set on",
    "start": "1737440",
    "end": "1743279"
  },
  {
    "text": "that one okay so that's the chrome behavior in",
    "start": "1743279",
    "end": "1748480"
  },
  {
    "text": "here for those three requests and the automated tester that i ran before",
    "start": "1748480",
    "end": "1754159"
  },
  {
    "start": "1751000",
    "end": "1913000"
  },
  {
    "text": "produces this output so it spends a couple of minutes and it makes every possible combination of requests that i",
    "start": "1754159",
    "end": "1759679"
  },
  {
    "text": "could think of to test the expected behavior of the cookies so we can see at the top here http",
    "start": "1759679",
    "end": "1765760"
  },
  {
    "text": "sharednone so shared means it's a cr it's a same site request and this is sending the cookies same",
    "start": "1765760",
    "end": "1771600"
  },
  {
    "text": "site none without the secure flag and it was sent over http which is rejected because you cannot",
    "start": "1771600",
    "end": "1777600"
  },
  {
    "text": "send a same signed equals nine cookie this one it seems like none secure but it's http and it's rejected because you",
    "start": "1777600",
    "end": "1784159"
  },
  {
    "text": "cannot send a secure cookie over http the next ones are all yes and all",
    "start": "1784159",
    "end": "1789440"
  },
  {
    "text": "allowed because it's the same site request and so lax works on the same side strict works on same site default and invalid",
    "start": "1789440",
    "end": "1795840"
  },
  {
    "text": "are functionally equivalent default is when i'm not passing same side at all an invalid is passing an invalid value and",
    "start": "1795840",
    "end": "1802480"
  },
  {
    "text": "the browser is just forgetting about it it's just pretending that you haven't set same site so they're all allowed through because",
    "start": "1802480",
    "end": "1807840"
  },
  {
    "text": "it's a same site request this one is again blocked we've got shared none because we've got same site",
    "start": "1807840",
    "end": "1813120"
  },
  {
    "text": "none without secure so it's immediately done stopped this one gets through however as opposed to up here because",
    "start": "1813120",
    "end": "1819360"
  },
  {
    "text": "it's a https request on um none secure and so it gets through",
    "start": "1819360",
    "end": "1825120"
  },
  {
    "text": "and again we've got those ones here they're all shared https as we would expect now we get down to the nose",
    "start": "1825120",
    "end": "1831360"
  },
  {
    "text": "so this one's an invalid cookie we've explained it before that's an external so a cross site request",
    "start": "1831360",
    "end": "1836559"
  },
  {
    "text": "and then here we have a cross-site request on non-secure http it's blocked because it's http",
    "start": "1836559",
    "end": "1842480"
  },
  {
    "text": "here we have a http external access same site it lacks on a cross-site request it's blocking the iframe it's blocking",
    "start": "1842480",
    "end": "1848799"
  },
  {
    "text": "the image it's allowing the get request and it's blocking the post that is what we expect to see there this one here",
    "start": "1848799",
    "end": "1854640"
  },
  {
    "text": "because that is the same site lacks request on a get which is a safe request we've got strict it's blocked on",
    "start": "1854640",
    "end": "1859679"
  },
  {
    "text": "everything because it's a cross-site request and then these ones are allowed through because they don't have it set",
    "start": "1859679",
    "end": "1865840"
  },
  {
    "text": "and you'll notice the yet yes here is different here and here's the important bit that i'm testing here is the two",
    "start": "1865840",
    "end": "1870880"
  },
  {
    "text": "minutes and two minutes so we've got the first request is less than two minutes away and this waits two minutes in the middle",
    "start": "1870880",
    "end": "1876559"
  },
  {
    "text": "and we can compare the value here with the value here so this is same site lax plus post",
    "start": "1876559",
    "end": "1882880"
  },
  {
    "text": "defaulting on so it's letting through these requests with lax plus post because the cookie",
    "start": "1882880",
    "end": "1888159"
  },
  {
    "text": "was created less than two minutes ago we move over here the cookie is now over",
    "start": "1888159",
    "end": "1893279"
  },
  {
    "text": "two minutes old and it's now set to no and so we're only getting the safe requests through and so that's that's the difference",
    "start": "1893279",
    "end": "1899200"
  },
  {
    "text": "between these two and it's the same down here this is the https version as this is really important when you're",
    "start": "1899200",
    "end": "1905360"
  },
  {
    "text": "dealing with the authentication plots we're talking about before so that and this is default chrome behavior now",
    "start": "1905360",
    "end": "1910880"
  },
  {
    "text": "let's jump over to firefox and we'll have a look and see what it does so we'll jump over to our tester",
    "start": "1910880",
    "end": "1917440"
  },
  {
    "start": "1913000",
    "end": "2018000"
  },
  {
    "text": "oops and it's going to set where's it hiding and slightly less easy to read format",
    "start": "1917440",
    "end": "1922799"
  },
  {
    "text": "here we're setting a cookie it's got the same cookies being sent default is missing one you've got lacks none",
    "start": "1922799",
    "end": "1928240"
  },
  {
    "text": "secure none and strict and it looks like firefox is actually letting none true because it hasn't",
    "start": "1928240",
    "end": "1933840"
  },
  {
    "text": "added the the restriction that you need secure on none yet so we'll go to the external site we'll make the get request and the",
    "start": "1933840",
    "end": "1941120"
  },
  {
    "text": "only one blocked is strict because as far as firefox is concerned the nun cookie is still valid it hasn't it",
    "start": "1941120",
    "end": "1946720"
  },
  {
    "text": "doesn't need the secure flag set and this isn't giving us much useful information because it's not setting the",
    "start": "1946720",
    "end": "1952640"
  },
  {
    "text": "cookies um and default descent obviously because well it's allowed through firefox isn't",
    "start": "1952640",
    "end": "1958799"
  },
  {
    "text": "defaulting the same site lacks by default so that's considered a cookie that well that cookie doesn't have same",
    "start": "1958799",
    "end": "1963919"
  },
  {
    "text": "size so it's always going to be sent anyone blocked is strict on the get request we go to the iframe and load it up in",
    "start": "1963919",
    "end": "1970799"
  },
  {
    "text": "here and the iframe is blocking strict and lacks as you would expect because it's considered because it's an embedded",
    "start": "1970799",
    "end": "1975919"
  },
  {
    "text": "request embedded content and lacks blocks and strict blocks it secure none doesn't",
    "start": "1975919",
    "end": "1980960"
  },
  {
    "text": "because it doesn't block those things none doesn't block it because it's allowed it's a valid a valid cookie",
    "start": "1980960",
    "end": "1987120"
  },
  {
    "text": "attribute in firefox and it doesn't block those things but default is also added because it's not defaulting the",
    "start": "1987120",
    "end": "1992559"
  },
  {
    "text": "same set lacks as i said so getting that one through so firefox isn't currently protecting embedded",
    "start": "1992559",
    "end": "1998320"
  },
  {
    "text": "requests like this from csrf attacks or any other attacks then we can go to post and we would get",
    "start": "1998320",
    "end": "2005120"
  },
  {
    "text": "the same output here we're blocking strict and lacks but not the other three because firefox considers them valid and",
    "start": "2005120",
    "end": "2010640"
  },
  {
    "text": "legitimate requests so we can load up the um where to go",
    "start": "2010640",
    "end": "2016399"
  },
  {
    "text": "the automated tester and let it do its thing and we can see the difference between firefox's handling to chrome's",
    "start": "2016399",
    "end": "2022080"
  },
  {
    "start": "2018000",
    "end": "2059000"
  },
  {
    "text": "handling now the interesting thing i discovered when i was practicing this demo and looking at the",
    "start": "2022080",
    "end": "2027679"
  },
  {
    "text": "different features is that incognito mode in chrome is actually different which i thought was really curious so",
    "start": "2027679",
    "end": "2033360"
  },
  {
    "text": "just boot up that run that in the background then we'll go to the manual test so now let's send our cookies",
    "start": "2033360",
    "end": "2040320"
  },
  {
    "text": "and we'll go to we check the get request first this is what we expect to see lacks and secure none in default are",
    "start": "2040320",
    "end": "2046159"
  },
  {
    "text": "allowed on the get request or go to the iframe and nothing is allowed",
    "start": "2046159",
    "end": "2053118"
  },
  {
    "text": "so really interestingly google chrome in incognito mode actually blocks all cookies on",
    "start": "2053119",
    "end": "2058839"
  },
  {
    "text": "iframes which i find absolutely fascinating that it's doing that which is different from the behavior when you're not in",
    "start": "2058839",
    "end": "2064878"
  },
  {
    "start": "2059000",
    "end": "2155000"
  },
  {
    "text": "incognito mode so if i jump over into the inspector in here",
    "start": "2064879",
    "end": "2070638"
  },
  {
    "text": "and i open this one up we can see here that they're all all yellow there's no cookies here that aren't yellow",
    "start": "2070639",
    "end": "2076560"
  },
  {
    "text": "and if we find our which was it secure none there we go the secure nine cookie which we would expect",
    "start": "2076560",
    "end": "2082240"
  },
  {
    "text": "to be sent on this request in this frame because it's allowed in normal in non-incremental mode chrome",
    "start": "2082240",
    "end": "2090000"
  },
  {
    "text": "it's telling us that it's blocked due to user preferences now i may have done something i'm not sure but i suspected i'm pretty sure",
    "start": "2090000",
    "end": "2097118"
  },
  {
    "text": "what's happening here is that google is adding extra protection extra security to incognito",
    "start": "2097119",
    "end": "2102480"
  },
  {
    "text": "mode and so when you're in incognito mode it doesn't want frames to be able to steal any information to capture anything",
    "start": "2102480",
    "end": "2107920"
  },
  {
    "text": "useful and so it's blocking all cookies as a precaution but if we go to the post request",
    "start": "2107920",
    "end": "2115040"
  },
  {
    "text": "it does work so it's only on the embedded requests such as the iframes that it's actually kicking in and doing",
    "start": "2115040",
    "end": "2120560"
  },
  {
    "text": "that and something else interesting to show actually what we're here",
    "start": "2120560",
    "end": "2126640"
  },
  {
    "text": "is this isn't incognito specific it's just um from get request so we clicked on here and this was a cross-site",
    "start": "2126640",
    "end": "2131920"
  },
  {
    "text": "request we can see strict is blocked if i click on this one if i click on the url and click enter we're now making a",
    "start": "2131920",
    "end": "2138000"
  },
  {
    "text": "same site request and something that's toggled over so that's the second request so if you've got strict set on your",
    "start": "2138000",
    "end": "2144000"
  },
  {
    "text": "cookie and the user hits your site the cookie won't be sent first request but as soon as they do anything else in this case i reloaded the page",
    "start": "2144000",
    "end": "2150720"
  },
  {
    "text": "suddenly it's the same site request and the cookie is added so that's that little behavior in there",
    "start": "2150720",
    "end": "2155920"
  },
  {
    "text": "um that's still running um is this where's firefox going so firefox is still running through the",
    "start": "2155920",
    "end": "2162320"
  },
  {
    "text": "tester and so in the middle of the um the test run it actually waits for two minutes to extrude that the cookies expire after",
    "start": "2162320",
    "end": "2169680"
  },
  {
    "text": "the the blacks plus post term window and then it runs through and it does",
    "start": "2169680",
    "end": "2174880"
  },
  {
    "text": "automate a test changing the page",
    "start": "2174880",
    "end": "2178319"
  },
  {
    "text": "and um it loads up the different frames and images as well so it's testing them all and it's measuring what cookies are",
    "start": "2180640",
    "end": "2186400"
  },
  {
    "text": "actually coming through checking the server to see what the server receives and when this finishes we'll have a look at it and compare it to chrome and we'll",
    "start": "2186400",
    "end": "2192560"
  },
  {
    "text": "see the difference okay so that is that jump that over here",
    "start": "2192560",
    "end": "2197680"
  },
  {
    "text": "and open that one up there cool okay so now over here we have chrome and here we",
    "start": "2197680",
    "end": "2202720"
  },
  {
    "text": "have firefox and scoot that over a bit",
    "start": "2202720",
    "end": "2208400"
  },
  {
    "text": "off we go go away thank you cool so we can see a big difference between the default behavior of chrome and firefox",
    "start": "2208400",
    "end": "2216400"
  },
  {
    "text": "so for starters we see this rows yes throws no so as we looked at chrome no sorry firefox allows same site none",
    "start": "2216400",
    "end": "2223680"
  },
  {
    "text": "without secure they haven't implemented that yet there's another row down here again that's the same same site none of that",
    "start": "2223680",
    "end": "2230079"
  },
  {
    "text": "secure we keep going down we've got a bunch of nodes there and there's a bunch of yeses here",
    "start": "2230079",
    "end": "2235359"
  },
  {
    "text": "and that's because firefox isn't defaulting to same site lacks by default for these values and so it's allowing",
    "start": "2235359",
    "end": "2240960"
  },
  {
    "text": "them through while chrome is blocking them and you can see that but firefox is",
    "start": "2240960",
    "end": "2246240"
  },
  {
    "text": "handling lacks on streak it's just not handling anything else is what you were talking about for and you can run this on you're on your",
    "start": "2246240",
    "end": "2252320"
  },
  {
    "text": "phone for example and see what your phone browsers are doing if they're enabling these cookies by default or not",
    "start": "2252320",
    "end": "2257440"
  },
  {
    "text": "yeah okay so back to slides now the question that you",
    "start": "2257440",
    "end": "2264320"
  },
  {
    "start": "2259000",
    "end": "2400000"
  },
  {
    "text": "have is what option do you use and for some things it's easy something that's less easy but as a general rule",
    "start": "2264320",
    "end": "2270720"
  },
  {
    "text": "when you're if you're looking at um same site attribute what you want to set you want to use strict if the user doesn't need",
    "start": "2270720",
    "end": "2276560"
  },
  {
    "text": "to be logged in or if you need an action performed over a get request so when the user hits your site if they",
    "start": "2276560",
    "end": "2282320"
  },
  {
    "text": "don't have to have golf cookies set if they don't have to have their session set up then you can look at strict because you don't need the",
    "start": "2282320",
    "end": "2288480"
  },
  {
    "text": "cookies on those initial requests or if your application for some reason needs to perform actions over get",
    "start": "2288480",
    "end": "2294160"
  },
  {
    "text": "requests and there could be a reason i don't know about but there could be a reason why you need to allow",
    "start": "2294160",
    "end": "2300079"
  },
  {
    "text": "cookies sent on those get requests and in that case you want to set same site strict on the cookie because it will",
    "start": "2300079",
    "end": "2305440"
  },
  {
    "text": "protect it from an attack now you can use use none if you need to make cross site requests if your your",
    "start": "2305440",
    "end": "2312720"
  },
  {
    "text": "post requests are embedded content so say if you've got an authentication flow and you need to send some tokens between",
    "start": "2312720",
    "end": "2318079"
  },
  {
    "text": "here and there between two different sites and you need that to be over a post request or if you're embedding content and",
    "start": "2318079",
    "end": "2323440"
  },
  {
    "text": "you're trying to um and you need to be logged in in the frame on a different site to the front near the page that's currently loaded in so there are some",
    "start": "2323440",
    "end": "2329599"
  },
  {
    "text": "situations where you want none but if you're going down the path of using none then you need to make sure",
    "start": "2329599",
    "end": "2334960"
  },
  {
    "text": "that you protected those actions protect those requests using other methods so csrf tokens etc",
    "start": "2334960",
    "end": "2340880"
  },
  {
    "text": "now you can use nothing you can just not put anything in there if you want but you run the risk of an unexpected",
    "start": "2340880",
    "end": "2346800"
  },
  {
    "text": "behavior of the site just randomly breaking or doing strange things um well strange",
    "start": "2346800",
    "end": "2352480"
  },
  {
    "text": "things as in the cookies attached or not in some you know the point is that the browsers are slowly heading towards same site lacks",
    "start": "2352480",
    "end": "2358880"
  },
  {
    "text": "by default so chrome's done it already and firefox and edge have said they will do it i'm not sure what safari is up to it's",
    "start": "2358880",
    "end": "2365119"
  },
  {
    "text": "kind of the ie6 of the internet so you know who knows where it's up to but i assume that we'll get to there eventually maybe in 20 years the point",
    "start": "2365119",
    "end": "2371599"
  },
  {
    "text": "is that you don't want to set nothing because things can change now the same default as we've seen from",
    "start": "2371599",
    "end": "2377839"
  },
  {
    "text": "chrome rolling it out is same site lacks by default it seems like lacks because if you set lacks then majority of",
    "start": "2377839",
    "end": "2383760"
  },
  {
    "text": "requests are going to work fine so if you're doing something strange that lacks is going to block the request",
    "start": "2383760",
    "end": "2389280"
  },
  {
    "text": "and in those cases you know what option you need you can set the strict or you set to none so that you can have the",
    "start": "2389280",
    "end": "2394880"
  },
  {
    "text": "required behavior so stick to lacks unless you need something specific",
    "start": "2394880",
    "end": "2401040"
  },
  {
    "start": "2400000",
    "end": "2544000"
  },
  {
    "text": "so the same site lacks by default solve the problem does it answer the csrf problem does it make the internet",
    "start": "2401599",
    "end": "2408240"
  },
  {
    "text": "safer by preventing csrf attacks and i asked the question is csrf dead",
    "start": "2408240",
    "end": "2413520"
  },
  {
    "text": "now that browsers are going to use same site likes by default and i had a pen tester respond",
    "start": "2413520",
    "end": "2419200"
  },
  {
    "text": "and say that even with lac the same site lacks by default in a lot of the work that",
    "start": "2419200",
    "end": "2424240"
  },
  {
    "text": "they've done they've found they can still send get requests and perform actions",
    "start": "2424240",
    "end": "2429839"
  },
  {
    "text": "so people have so developers have built their systems and they're accepting requests get requests for form actions not just post",
    "start": "2429839",
    "end": "2436240"
  },
  {
    "text": "requests which is a big problem because same site lacks by default isn't projecting against a get request",
    "start": "2436240",
    "end": "2442160"
  },
  {
    "text": "and if you think that your application is only responding to post requests but it's actually responding to both you're",
    "start": "2442160",
    "end": "2447280"
  },
  {
    "text": "not going to be protecting those get requests because you don't think they're possible and so it does leave your site",
    "start": "2447280",
    "end": "2453040"
  },
  {
    "text": "open to attack it leaves the site open to a csrf attack if you don't have a protection in place",
    "start": "2453040",
    "end": "2458560"
  },
  {
    "text": "and so no it's not going to solve the problem because there would be a lot of sites where get requests can be used to bypass these",
    "start": "2458560",
    "end": "2465119"
  },
  {
    "text": "protections and that's where it comes down to us as developers to be aware of what we need to do for the same site lacks how we need to what we need to set",
    "start": "2465119",
    "end": "2471839"
  },
  {
    "text": "on our cookies and how we need to code our applications so that all our actions are only accessible via you know post or",
    "start": "2471839",
    "end": "2477520"
  },
  {
    "text": "put or delete and then get requests are safe and the get requests don't make changes",
    "start": "2477520",
    "end": "2482800"
  },
  {
    "text": "and so we can ensure that our applications are secure and that our applications can take advantage of since it lacks but it's not",
    "start": "2482800",
    "end": "2488960"
  },
  {
    "text": "going to solve the problem because there'll always be some applications that aren't and that's just the way the internet works unfortunately with",
    "start": "2488960",
    "end": "2495359"
  },
  {
    "text": "sites being built and developers um not being aware of these things and cutting corners so you know",
    "start": "2495359",
    "end": "2501440"
  },
  {
    "text": "kind of a depressing end but that's the way it is ultimately you can protect your sites and make your site secure",
    "start": "2501440",
    "end": "2507920"
  },
  {
    "text": "using this attribute and that's what's important so thank you very much i hope you",
    "start": "2507920",
    "end": "2513280"
  },
  {
    "text": "unlearned something from this feel free to um shout out with any questions either directly in webex if you want or in",
    "start": "2513280",
    "end": "2519440"
  },
  {
    "text": "slack or the the chat for this and i'll stick around for a little bit answering questions um you can feel me email me",
    "start": "2519440",
    "end": "2524880"
  },
  {
    "text": "from me on twitter um if you've got if you want to follow anything up or i've got some notes and links to the various",
    "start": "2524880",
    "end": "2530400"
  },
  {
    "text": "different announcements from google and such on my site there if you want to find there's a copy of the slides as",
    "start": "2530400",
    "end": "2535760"
  },
  {
    "text": "well",
    "start": "2535760",
    "end": "2537839"
  }
]